================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:35:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math

def get_original_price_from_taxed_amount():
    """
    Prompts the user to input the amount of money paid (price including tax),
    and calculates the possible original price (before tax) that, when subjected
    to 8% consumption tax and rounded down, results in the paid amount.

    If such an original price exists, prints the original price (as an integer).
    Otherwise, prints ":(".

    The function assumes the tax rate is 8% (1.08 multiplier).
    """
    # Prompt the user and read the total amount paid including tax.
    N = int(input("Enter the amount paid (including tax): "))

    # Calculate the smallest integer X such that X * 1.08 is at least N.
    # This is done by dividing N by 1.08 and rounding up to the next integer.
    X = math.ceil(N / 1.08)

    # Multiply X by 1.08 and take the floor to simulate price after tax as stores display it.
    # If this equals the amount paid, then X is the original price before tax.
    if math.floor(X * 1.08) == N:
        print(X)
    else:
        # If no integer X matches the criteria, print sad face.
        print(":(")

# Call the function to execute the process
get_original_price_from_taxed_amount()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -8.470901229884475e-05
    2. 'import' → logprob: -10.62508487701416
    3. '```' → logprob: -11.00008487701416
    4. '\' → logprob: -11.25008487701416
    5. '.
' → logprob: -12.62508487701416
    6. 'def' → logprob: -12.75008487701416
    7. '.pi' → logprob: -12.87508487701416
    8. '\n' → logprob: -13.00008487701416
    9. '<|end|>' → logprob: -13.12508487701416
    10. '.e' → logprob: -13.25008487701416

Token 4: ' get' (ID: 717)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03590086102485657
    2. ' math' → logprob: -3.785900831222534
    3. ' sqrt' → logprob: -5.410901069641113
    4. ' factorial' → logprob: -5.910901069641113
    5. ' calculate' → logprob: -6.035901069641113
    6. ' space' → logprob: -7.160901069641113
    7. ' ' → logprob: -8.035901069641113
    8. ' f' → logprob: -8.410901069641113
    9. '_' → logprob: -8.410901069641113
    10. ' factor' → logprob: -8.660901069641113

Token 5: '_original' (ID: 92075)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.44509175419807434
    2. '_s' → logprob: -1.945091724395752
    3. '_factor' → logprob: -2.570091724395752
    4. '_area' → logprob: -2.695091724395752
    5. ' _' → logprob: -3.570091724395752
    6. '_distance' → logprob: -4.695091724395752
    7. '_square' → logprob: -4.695091724395752
    8. '_circle' → logprob: -5.320091724395752
    9. '_pi' → logprob: -5.320091724395752
    10. '_cube' → logprob: -5.945091724395752

Token 6: '_price' (ID: 18814)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06683209538459778
    2. '_name' → logprob: -3.3168320655822754
    3. '_token' → logprob: -4.691832065582275
    4. '(' → logprob: -4.941832065582275
    5. '_value' → logprob: -5.066832065582275
    6. '_filename' → logprob: -7.066832065582275
    7. '_text' → logprob: -7.441832065582275
    8. ')' → logprob: -8.066832542419434
    9. '_angle' → logprob: -8.191832542419434
    10. '_code' → logprob: -8.316832542419434

Token 7: '_from' (ID: 12526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004965558764524758
    2. '(price' → logprob: -9.250496864318848
    3. '("("' → logprob: -9.500496864318848
    4. '```' → logprob: -9.750496864318848
    5. '(token' → logprob: -10.375496864318848
    6. '(
' → logprob: -10.500496864318848
    7. ' (' → logprob: -10.625496864318848
    8. '(parent' → logprob: -10.750496864318848
    9. '('' → logprob: -10.875496864318848
    10. '<|end|>' → logprob: -11.000496864318848

Token 8: '_tax' (ID: 61146)
  Prédit: '_discount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_discount' → logprob: -0.017283061519265175
    2. '_sale' → logprob: -5.267282962799072
    3. '_final' → logprob: -5.517282962799072
    4. ' discounted' → logprob: -6.767282962799072
    5. '_total' → logprob: -6.767282962799072
    6. '_s' → logprob: -6.892282962799072
    7. '_sales' → logprob: -7.392282962799072
    8. '_' → logprob: -7.392282962799072
    9. '_d' → logprob: -7.517282962799072
    10. '_original' → logprob: -7.642282962799072

Token 9: 'ed' (ID: 295)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17940860986709595
    2. 'ed' → logprob: -2.929408550262451
    3. 'es' → logprob: -3.429408550262451
    4. '_price' → logprob: -3.804408550262451
    5. '_' → logprob: -4.304408550262451
    6. '_amount' → logprob: -4.429408550262451
    7. '(price' → logprob: -4.554408550262451
    8. '```' → logprob: -4.929408550262451
    9. '_in' → logprob: -6.429408550262451
    10. '_return' → logprob: -6.679408550262451

Token 10: '_amount' (ID: 29145)
  Prédit: '_price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -0.3788280785083771
    2. '(' → logprob: -1.3788280487060547
    3. 'ed' → logprob: -3.2538280487060547
    4. '_' → logprob: -4.378828048706055
    5. '(price' → logprob: -5.003828048706055
    6. '_amount' → logprob: -6.378828048706055
    7. '_prices' → logprob: -6.878828048706055
    8. 's' → logprob: -7.253828048706055
    9. '_original' → logprob: -8.503828048706055
    10. ':' → logprob: -8.628828048706055

Token 11: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00025514091248624027
    2. '_' → logprob: -8.625255584716797
    3. '(parent' → logprob: -11.125255584716797
    4. '(user' → logprob: -12.000255584716797
    5. '("("' → logprob: -12.125255584716797
    6. '_parent' → logprob: -12.375255584716797
    7. '(amount' → logprob: -12.375255584716797
    8. ' (' → logprob: -12.625255584716797
    9. '(_' → logprob: -12.875255584716797
    10. '(original' → logprob: -12.875255584716797

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6209340691566467
    2. '(' → logprob: -1.120934009552002
    3. '    ' → logprob: -2.995934009552002
    4. ' ' → logprob: -3.745934009552002
    5. '```' → logprob: -4.245934009552002
    6. ' (' → logprob: -4.370934009552002
    7. '(space' → logprob: -5.370934009552002
    8. '<|end|>' → logprob: -5.620934009552002
    9. '\' → logprob: -5.995934009552002
    10. 'a' → logprob: -6.120934009552002

Token 13: ' """
' (ID: 7037)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2182884216308594
    2. ' ' → logprob: -1.4682884216308594
    3. '   ' → logprob: -2.0932884216308594
    4. '```' → logprob: -2.7182884216308594
    5. ' (' → logprob: -2.9682884216308594
    6. '    ' → logprob: -3.0932884216308594
    7. 'x' → logprob: -3.2182884216308594
    8. 'a' → logprob: -3.3432884216308594
    9. '(space' → logprob: -4.218288421630859
    10. '_' → logprob: -4.468288421630859

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36256125569343567
    2. '"""' → logprob: -2.4875612258911133
    3. 'p' → logprob: -2.8625612258911133
    4. ' """' → logprob: -3.1125612258911133
    5. '#' → logprob: -3.2375612258911133
    6. 'Calculate' → logprob: -4.487561225891113
    7. 'r' → logprob: -4.737561225891113
    8. ' Calculate' → logprob: -4.737561225891113
    9. 'd' → logprob: -5.237561225891113
    10. ')' → logprob: -5.237561225891113

Token 15: ' Prom' (ID: 8555)
  Prédit: ' """'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' """' → logprob: -0.7844932079315186
    2. '"""' → logprob: -1.7844932079315186
    3. 'Calculate' → logprob: -2.4094932079315186
    4. '   ' → logprob: -2.6594932079315186
    5. ' Calculate' → logprob: -2.7844932079315186
    6. '#' → logprob: -2.9094932079315186
    7. ' pass' → logprob: -4.284493446350098
    8. ' Calculates' → logprob: -4.284493446350098
    9. 'T' → logprob: -4.659493446350098
    10. '""' → logprob: -5.034493446350098

Token 16: 'pts' (ID: 24040)
  Prédit: 'pt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pt' → logprob: -0.08912474662065506
    2. 'pts' → logprob: -2.4641246795654297
    3. 'oted' → logprob: -10.21412467956543
    4. 'ot' → logprob: -10.46412467956543
    5. 'ise' → logprob: -10.71412467956543
    6. '```' → logprob: -10.71412467956543
    7. 'pte' → logprob: -11.46412467956543
    8. 'p' → logprob: -11.71412467956543
    9. 'it' → logprob: -11.83912467956543
    10. 'opt' → logprob: -12.21412467956543

Token 17: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31001830101013184
    2. 'user' → logprob: -2.560018301010132
    3. ' for' → logprob: -2.810018301010132
    4. 'def' → logprob: -3.935018301010132
    5. ' user' → logprob: -4.185018539428711
    6. ' the' → logprob: -4.435018539428711
    7. 'for' → logprob: -4.435018539428711
    8. 'price' → logprob: -4.560018539428711
    9. 'tax' → logprob: -4.560018539428711
    10. ')' → logprob: -4.685018539428711

Token 18: ' user' (ID: 1825)
  Prédit: ' user'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' user' → logprob: -0.0808107927441597
    2. 'user' → logprob: -2.580810785293579
    3. ' original' → logprob: -6.455811023712158
    4. 'original' → logprob: -9.455810546875
    5. ' customer' → logprob: -9.455810546875
    6. ' buyer' → logprob: -10.205810546875
    7. 'customer' → logprob: -10.330810546875
    8. ' use' → logprob: -10.455810546875
    9. ' purchaser' → logprob: -10.580810546875
    10. '"user' → logprob: -11.830810546875

Token 19: ' to' (ID: 316)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06996333599090576
    2. '   ' → logprob: -3.1949634552001953
    3. 'for' → logprob: -4.319963455200195
    4. ' to' → logprob: -4.694963455200195
    5. '(' → logprob: -6.194963455200195
    6. ' and' → logprob: -7.319963455200195
    7. 'to' → logprob: -8.444963455200195
    8. ' ' → logprob: -8.569963455200195
    9. ')' → logprob: -8.819963455200195
    10. '    ' → logprob: -9.319963455200195

Token 20: ' input' (ID: 3422)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.14766816794872284
    2. ' enter' → logprob: -2.0226681232452393
    3. ' input' → logprob: -6.397668361663818
    4. ' find' → logprob: -6.647668361663818
    5. 'calculate' → logprob: -7.022668361663818
    6. ' get' → logprob: -8.27266788482666
    7. ' provide' → logprob: -8.39766788482666
    8. ' ' → logprob: -8.52266788482666
    9. ' compute' → logprob: -8.77266788482666
    10. ' purchase' → logprob: -9.39766788482666

Token 21: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.006145287770777941
    2. ' a' → logprob: -6.006145477294922
    3. 'the' → logprob: -6.256145477294922
    4. ' tax' → logprob: -7.756145477294922
    5. ' taxed' → logprob: -8.381145477294922
    6. ' ' → logprob: -8.506145477294922
    7. ' an' → logprob: -9.006145477294922
    8. '_tax' → logprob: -9.131145477294922
    9. '<|end|>' → logprob: -9.506145477294922
    10. ' purchased' → logprob: -9.881145477294922

Token 22: ' amount' (ID: 4527)
  Prédit: ' original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' original' → logprob: -0.10649952292442322
    2. ' tax' → logprob: -3.856499433517456
    3. ' taxed' → logprob: -3.856499433517456
    4. ' price' → logprob: -4.106499671936035
    5. ' amount' → logprob: -4.356499671936035
    6. 'original' → logprob: -4.981499671936035
    7. ' total' → logprob: -4.981499671936035
    8. ' initial' → logprob: -5.106499671936035
    9. 'tax' → logprob: -5.606499671936035
    10. ' purchase' → logprob: -6.481499671936035

Token 23: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16512367129325867
    2. ' of' → logprob: -2.915123701095581
    3. ' including' → logprob: -3.290123701095581
    4. ' with' → logprob: -3.415123701095581
    5. ' after' → logprob: -4.665123462677002
    6. ' to' → logprob: -6.040123462677002
    7. 'including' → logprob: -6.040123462677002
    8. ' before' → logprob: -6.415123462677002
    9. 'with' → logprob: -6.415123462677002
    10. ' ' → logprob: -6.915123462677002

Token 24: ' money' (ID: 3905)
  Prédit: ' tax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tax' → logprob: -0.4036921262741089
    2. ' the' → logprob: -1.1536921262741089
    3. ' sales' → logprob: -5.028692245483398
    4. ' money' → logprob: -5.278692245483398
    5. ' a' → logprob: -6.653692245483398
    6. 'tax' → logprob: -6.903692245483398
    7. 'the' → logprob: -7.278692245483398
    8. ' purchase' → logprob: -7.278692245483398
    9. ' taxed' → logprob: -8.028692245483398
    10. ' product' → logprob: -8.653692245483398

Token 25: ' paid' (ID: 9927)
  Prédit: ' including'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' including' → logprob: -0.6339142322540283
    2. ' after' → logprob: -1.7589142322540283
    3. ' with' → logprob: -2.0089142322540283
    4. ' before' → logprob: -2.6339142322540283
    5. ' that' → logprob: -3.0089142322540283
    6. ' and' → logprob: -3.7589142322540283
    7. 'including' → logprob: -5.383913993835449
    8. ' to' → logprob: -5.883913993835449
    9. ' (' → logprob: -6.508913993835449
    10. ' excluding' → logprob: -6.508913993835449

Token 26: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5148518085479736
    2. ',' → logprob: -1.5148518085479736
    3. ' after' → logprob: -3.0148518085479736
    4. ' (' → logprob: -3.1398518085479736
    5. ' ,' → logprob: -3.5148518085479736
    6. '   ' → logprob: -4.0148515701293945
    7. ' for' → logprob: -4.3898515701293945
    8. ' including' → logprob: -4.8898515701293945
    9. ' by' → logprob: -5.0148515701293945
    10. ' to' → logprob: -5.1398515701293945

Token 27: 'price' (ID: 7629)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9475892782211304
    2. ' including' → logprob: -1.1975892782211304
    3. ' before' → logprob: -1.8225892782211304
    4. 'including' → logprob: -3.07258939743042
    5. ' )' → logprob: -3.69758939743042
    6. ' excluding' → logprob: -3.94758939743042
    7. ' after' → logprob: -4.07258939743042
    8. ' with' → logprob: -4.19758939743042
    9. 'before' → logprob: -5.07258939743042
    10. ',' → logprob: -5.57258939743042

Token 28: ' including' (ID: 3463)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028249375522136688
    2. ' after' → logprob: -4.653249263763428
    3. ' )' → logprob: -5.528249263763428
    4. '_' → logprob: -5.653249263763428
    5. ' before' → logprob: -5.653249263763428
    6. '   ' → logprob: -6.528249263763428
    7. '_before' → logprob: -6.653249263763428
    8. ' and' → logprob: -6.903249263763428
    9. ' with' → logprob: -7.528249263763428
    10. '_after' → logprob: -7.528249263763428

Token 29: ' tax' (ID: 5577)
  Prédit: ' tax'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tax' → logprob: -0.01488124206662178
    2. 'tax' → logprob: -4.639881134033203
    3. ' taxes' → logprob: -5.639881134033203
    4. ' sales' → logprob: -7.014881134033203
    5. ' the' → logprob: -7.639881134033203
    6. '_tax' → logprob: -9.139881134033203
    7. 'sales' → logprob: -11.014881134033203
    8. ' ' → logprob: -11.639881134033203
    9. ' VAT' → logprob: -11.764881134033203
    10. ' a' → logprob: -12.139881134033203

Token 30: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03431517630815506
    2. '),' → logprob: -3.9093151092529297
    3. ').' → logprob: -4.53431510925293
    4. ' )' → logprob: -6.03431510925293
    5. '):' → logprob: -8.53431510925293
    6. ' and' → logprob: -9.03431510925293
    7. ' ),' → logprob: -9.03431510925293
    8. ',' → logprob: -10.65931510925293
    9. ' ).' → logprob: -10.65931510925293
    10. '):
' → logprob: -11.03431510925293

Token 31: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8914012312889099
    2. ' )' → logprob: -1.0164012908935547
    3. '    ' → logprob: -2.6414012908935547
    4. '   ' → logprob: -3.0164012908935547
    5. ')' → logprob: -3.1414012908935547
    6. ' and' → logprob: -3.5164012908935547
    7. ' ,' → logprob: -4.516401290893555
    8. ' ),' → logprob: -4.766401290893555
    9. ' a' → logprob: -5.516401290893555
    10. ' ):' → logprob: -5.766401290893555

Token 32: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.41460904479026794
    2. ' then' → logprob: -1.4146090745925903
    3. ' ' → logprob: -3.289608955383301
    4. ' calculates' → logprob: -3.914608955383301
    5. ' returns' → logprob: -4.039608955383301
    6. ' )' → logprob: -5.539608955383301
    7. ' ,' → logprob: -5.914608955383301
    8. ' a' → logprob: -6.039608955383301
    9. '   ' → logprob: -6.164608955383301
    10. 'and' (adapté à ' and') → logprob: -6.414608955383301

Token 33: ' calculates' (ID: 101920)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5564523935317993
    2. 'the' → logprob: -2.0564522743225098
    3. ' then' → logprob: -2.1814522743225098
    4. '   ' → logprob: -2.5564522743225098
    5. ' calculates' → logprob: -3.4314522743225098
    6. 'tax' → logprob: -3.8064522743225098
    7. ' returns' → logprob: -4.18145227432251
    8. ' tax' → logprob: -4.68145227432251
    9. 'then' → logprob: -4.68145227432251
    10. 'returns' → logprob: -5.18145227432251

Token 34: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.046698763966560364
    2. '<|end|>' → logprob: -3.796698808670044
    3. ' and' → logprob: -3.921698808670044
    4. 'the' → logprob: -6.046698570251465
    5. '<|end|>' → logprob: -7.171698570251465
    6. ' ' → logprob: -9.296698570251465
    7. ' ' → logprob: -10.671698570251465
    8. 's' → logprob: -10.671698570251465
    9. '    ' → logprob: -11.046698570251465
    10. 'and' → logprob: -11.171698570251465

Token 35: ' possible' (ID: 4149)
  Prédit: ' original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' original' → logprob: -0.016835041344165802
    2. ' ' → logprob: -5.1418352127075195
    3. 'original' → logprob: -5.3918352127075195
    4. ' corresponding' → logprob: -5.7668352127075195
    5. ' price' → logprob: -6.5168352127075195
    6. ' pre' → logprob: -7.8918352127075195
    7. ' amount' → logprob: -8.39183521270752
    8. '   ' → logprob: -9.01683521270752
    9. '_' → logprob: -9.26683521270752
    10. '  ' → logprob: -9.39183521270752

Token 36: ' original' (ID: 4756)
  Prédit: ' original'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' original' → logprob: -0.004202694166451693
    2. 'original' → logprob: -6.004202842712402
    3. ' ' → logprob: -6.879202842712402
    4. '_original' → logprob: -8.254202842712402
    5. 's' → logprob: -8.879202842712402
    6. '_' → logprob: -9.004202842712402
    7. '```' → logprob: -10.629202842712402
    8. ' ' → logprob: -10.816702842712402
    9. ' pre' → logprob: -11.316702842712402
    10. ' orig' → logprob: -11.754202842712402

Token 37: ' price' (ID: 3911)
  Prédit: ' price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' price' → logprob: -0.6104187965393066
    2. ' prices' → logprob: -1.3604187965393066
    3. '_price' → logprob: -2.4854187965393066
    4. ' original' → logprob: -2.6104187965393066
    5. '_prices' → logprob: -3.3604187965393066
    6. '_' → logprob: -6.235418796539307
    7. 'price' → logprob: -6.610418796539307
    8. '_original' → logprob: -6.610418796539307
    9. 'prices' → logprob: -6.735418796539307
    10. ' ' → logprob: -6.860418796539307

Token 38: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5193473100662231
    2. 's' → logprob: -1.0193473100662231
    3. '(s' → logprob: -3.7693471908569336
    4. '(' → logprob: -4.894347190856934
    5. ' s' → logprob: -5.769347190856934
    6. ' by' → logprob: -6.519347190856934
    7. ' (' → logprob: -6.644347190856934
    8. ' based' → logprob: -6.644347190856934
    9. ',' → logprob: -6.769347190856934
    10. '    
' → logprob: -7.019347190856934

Token 39: 'before' (ID: 29615)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9320530891418457
    2. ' before' → logprob: -0.9320530891418457
    3. ' )' → logprob: -2.3070530891418457
    4. ' without' → logprob: -3.5570530891418457
    5. ' excluding' → logprob: -3.5570530891418457
    6. 'before' → logprob: -4.307053089141846
    7. ' the' → logprob: -5.182053089141846
    8. ' given' → logprob: -5.307053089141846
    9. 'without' → logprob: -5.557053089141846
    10. ' pre' → logprob: -5.557053089141846

Token 40: ' tax' (ID: 5577)
  Prédit: ' tax'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tax' → logprob: -0.0326785109937191
    2. 'tax' → logprob: -3.7826786041259766
    3. ' taxes' → logprob: -5.782678604125977
    4. ' the' → logprob: -5.907678604125977
    5. ' adding' → logprob: -6.782678604125977
    6. ' applying' → logprob: -7.157678604125977
    7. '_tax' → logprob: -8.032678604125977
    8. ' ' → logprob: -8.282678604125977
    9. ' sales' → logprob: -8.657678604125977
    10. '```' → logprob: -8.782678604125977

Token 41: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15021462738513947
    2. 's' → logprob: -2.650214672088623
    3. ').' → logprob: -2.775214672088623
    4. '),' → logprob: -5.775214672088623
    5. ')s' → logprob: -6.025214672088623
    6. ')
' → logprob: -8.400214195251465
    7. 'es' → logprob: -8.650214195251465
    8. ').
' → logprob: -8.900214195251465
    9. '(s' → logprob: -9.025214195251465
    10. '   ' → logprob: -9.900214195251465

Token 42: ' that' (ID: 484)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06800820678472519
    2. ')' → logprob: -3.4430081844329834
    3. ',' → logprob: -4.5680084228515625
    4. '):' → logprob: -4.6930084228515625
    5. 's' → logprob: -6.0680084228515625
    6. ').' → logprob: -6.1930084228515625
    7. '),' → logprob: -6.5680084228515625
    8. ')
' → logprob: -6.5680084228515625
    9. '
' → logprob: -6.8180084228515625
    10. '):
' → logprob: -6.8180084228515625

Token 43: ',' (ID: 11)
  Prédit: ' could'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' could' → logprob: -0.6318994760513306
    2. ' would' → logprob: -1.7568994760513306
    3. ' was' → logprob: -2.381899356842041
    4. ' includes' → logprob: -3.006899356842041
    5. ' the' → logprob: -3.381899356842041
    6. ' corresponds' → logprob: -3.631899356842041
    7. ' resulted' → logprob: -3.756899356842041
    8. 'could' → logprob: -3.881899356842041
    9. 'would' → logprob: -4.881899356842041
    10. ' led' → logprob: -5.006899356842041

Token 44: ' when' (ID: 1261)
  Prédit: ' given'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' given' → logprob: -0.08393918722867966
    2. ' when' → logprob: -4.333939075469971
    3. 'given' → logprob: -5.083939075469971
    4. ' considering' → logprob: -5.208939075469971
    5. ' could' → logprob: -5.333939075469971
    6. 's' → logprob: -5.333939075469971
    7. ' with' → logprob: -5.458939075469971
    8. ' if' → logprob: -5.458939075469971
    9. '<|end|>' → logprob: -5.708939075469971
    10. '```' → logprob: -5.708939075469971

Token 45: ' subjected' (ID: 70138)
  Prédit: ' multiplied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' multiplied' → logprob: -0.06399589031934738
    2. ' taxed' → logprob: -3.938995838165283
    3. 'mult' → logprob: -4.438995838165283
    4. 'tax' → logprob: -4.688995838165283
    5. 'added' → logprob: -5.563995838165283
    6. ' added' → logprob: -5.688995838165283
    7. ' given' → logprob: -6.188995838165283
    8. ' the' → logprob: -6.688995838165283
    9. ' tax' → logprob: -6.813995838165283
    10. ' paid' → logprob: -7.313995838165283

Token 46: '
' (ID: 198)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.03758326172828674
    2. 'to' → logprob: -3.787583351135254
    3. '<|end|>' → logprob: -4.287583351135254
    4. '<|end|>' → logprob: -7.787583351135254
    5. '  ' → logprob: -10.037583351135254
    6. ' ' → logprob: -10.787583351135254
    7. '_to' → logprob: -11.787583351135254
    8. 's' → logprob: -12.912583351135254
    9. '	to' → logprob: -13.287583351135254
    10. ' ' → logprob: -14.162583351135254

Token 47: '   ' (ID: 271)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.009159388951957226
    2. 'to' → logprob: -5.009159564971924
    3. '<|end|>' → logprob: -6.759159564971924
    4. '   ' → logprob: -7.634159564971924
    5. '  ' → logprob: -7.759159564971924
    6. ',' → logprob: -8.634159088134766
    7. '_to' → logprob: -9.509159088134766
    8. '<|end|>' → logprob: -10.259159088134766
    9. ' ' → logprob: -10.759159088134766
    10. ')' → logprob: -11.259159088134766

Token 48: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.007806538138538599
    2. 'to' (adapté à ' to') → logprob: -4.882806301116943
    3. '<|end|>' → logprob: -8.757806777954102
    4. '  ' → logprob: -11.007806777954102
    5. '   ' → logprob: -12.257806777954102
    6. '_to' → logprob: -12.507806777954102
    7. ' ' → logprob: -12.507806777954102
    8. '```' → logprob: -12.757806777954102
    9. '<|end|>' → logprob: -12.757806777954102
    10. ',' → logprob: -13.132806777954102

Token 49: ' ' (ID: 220)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.8044208884239197
    2. ' the' → logprob: -1.5544209480285645
    3. ' tax' → logprob: -1.5544209480285645
    4. ' sales' → logprob: -2.5544209480285645
    5. ' an' → logprob: -4.4294209480285645
    6. 'a' → logprob: -4.9294209480285645
    7. ' VAT' → logprob: -5.4294209480285645
    8. 'the' → logprob: -5.6794209480285645
    9. 'tax' → logprob: -5.6794209480285645
    10. ' math' → logprob: -5.8044209480285645

Token 50: '8' (ID: 23)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.0425885915756226
    2. ' tax' → logprob: -1.5425885915756226
    3. 'tax' → logprob: -1.9175885915756226
    4. 'a' → logprob: -2.042588710784912
    5. ' the' → logprob: -2.917588710784912
    6. 'the' → logprob: -3.667588710784912
    7. ' sales' → logprob: -4.542588710784912
    8. ' an' → logprob: -4.792588710784912
    9. ' ' → logprob: -4.917588710784912
    10. ' applying' → logprob: -4.917588710784912

Token 51: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3570185601711273
    2. '.' → logprob: -1.2320185899734497
    3. ' %' → logprob: -5.10701847076416
    4. '5' → logprob: -7.60701847076416
    5. 'percent' → logprob: -7.98201847076416
    6. '0' → logprob: -8.35701847076416
    7. ' .' → logprob: -8.73201847076416
    8. '.%' → logprob: -9.23201847076416
    9. '3' → logprob: -9.48201847076416
    10. '％' → logprob: -9.48201847076416

Token 52: ' consumption' (ID: 23818)
  Prédit: ' tax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tax' → logprob: -0.057240065187215805
    2. ' sales' → logprob: -2.9322400093078613
    3. 'tax' → logprob: -6.557240009307861
    4. ' taxes' → logprob: -8.68224048614502
    5. 'sales' → logprob: -9.18224048614502
    6. '_tax' → logprob: -9.18224048614502
    7. ' VAT' → logprob: -9.68224048614502
    8. ' taxation' → logprob: -9.93224048614502
    9. '   ' → logprob: -10.18224048614502
    10. ' and' → logprob: -10.18224048614502

Token 53: ' tax' (ID: 5577)
  Prédit: ' tax'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tax' → logprob: -0.01833009161055088
    2. 'tax' → logprob: -4.393330097198486
    3. '_tax' → logprob: -5.643330097198486
    4. '_' → logprob: -6.768330097198486
    5. ' ' → logprob: -7.393330097198486
    6. ' consumption' → logprob: -8.768329620361328
    7. '税' → logprob: -9.518329620361328
    8. '\t' → logprob: -9.893329620361328
    9. '_t' → logprob: -10.143329620361328
    10. 't' → logprob: -10.643329620361328

Token 54: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003049604594707489
    2. '),' → logprob: -6.628049373626709
    3. '   ' → logprob: -6.753049373626709
    4. ')' → logprob: -8.503049850463867
    5. ' ,' → logprob: -8.503049850463867
    6. ',
' → logprob: -9.503049850463867
    7. ' rate' → logprob: -11.003049850463867
    8. '_rate' → logprob: -11.253049850463867
    9. '**,' → logprob: -12.503049850463867
    10. '):
' → logprob: -12.503049850463867

Token 55: ' rounded' (ID: 24678)
  Prédit: ' rounded'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rounded' → logprob: -0.17774559557437897
    2. ' then' → logprob: -2.5527455806732178
    3. ' truncated' → logprob: -3.1777455806732178
    4. 'rounded' → logprob: -3.8027455806732178
    5. ' rounding' → logprob: -4.802745819091797
    6. ' a' → logprob: -6.052745819091797
    7. ' an' → logprob: -6.802745819091797
    8. ' properly' → logprob: -6.802745819091797
    9. 'round' → logprob: -7.115245819091797
    10. ' round' → logprob: -7.240245819091797

Token 56: ' down' (ID: 1917)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7498498558998108
    2. ' to' → logprob: -0.7498498558998108
    3. ' up' → logprob: -3.249849796295166
    4. ' using' → logprob: -5.874849796295166
    5. 'to' → logprob: -6.124849796295166
    6. ' down' → logprob: -6.749849796295166
    7. ')' → logprob: -6.874849796295166
    8. ' ' → logprob: -6.874849796295166
    9. 'up' → logprob: -6.874849796295166
    10. '_up' → logprob: -6.999849796295166

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05170654505491257
    2. ' to' → logprob: -3.176706552505493
    3. ' ,' → logprob: -4.926706314086914
    4. 'to' → logprob: -7.676706314086914
    5. '),' → logprob: -8.051706314086914
    6. ')' → logprob: -9.676706314086914
    7. 'def' → logprob: -9.801706314086914
    8. ' (' → logprob: -9.926706314086914
    9. ' with' → logprob: -9.926706314086914
    10. '`,' → logprob: -10.051706314086914

Token 58: ' results' (ID: 4376)
  Prédit: ' results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' results' → logprob: -0.891744077205658
    2. ' would' → logprob: -1.3917441368103027
    3. ' returns' → logprob: -1.7667441368103027
    4. ' will' → logprob: -3.2667441368103027
    5. ' yields' → logprob: -3.3917441368103027
    6. ' matches' → logprob: -3.6417441368103027
    7. 'results' → logprob: -3.7667441368103027
    8. ' produces' → logprob: -4.141744136810303
    9. ' gives' → logprob: -4.266744136810303
    10. 'would' → logprob: -5.516744136810303

Token 59: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0034247315488755703
    2. 'in' → logprob: -5.753424644470215
    3. ' ' → logprob: -8.878424644470215
    4. '<|end|>' → logprob: -9.628424644470215
    5. '  ' → logprob: -10.878424644470215
    6. ' ' → logprob: -12.378424644470215
    7. '<|end|>' → logprob: -12.753424644470215
    8. '_' → logprob: -12.753424644470215
    9. ' to' → logprob: -12.878424644470215
    10. '   ' → logprob: -12.878424644470215

Token 60: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.012555203400552273
    2. ' a' → logprob: -4.887555122375488
    3. 'the' → logprob: -5.512555122375488
    4. ' ' → logprob: -7.512555122375488
    5. ' an' → logprob: -8.512555122375488
    6. ' exactly' → logprob: -10.262555122375488
    7. ' one' → logprob: -10.887555122375488
    8. ' that' → logprob: -10.887555122375488
    9. ' this' → logprob: -11.262555122375488
    10. 'a' → logprob: -11.512555122375488

Token 61: ' paid' (ID: 9927)
  Prédit: ' given'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' given' → logprob: -0.42661458253860474
    2. ' same' → logprob: -1.80161452293396
    3. ' taxed' → logprob: -3.05161452293396
    4. ' amount' → logprob: -3.17661452293396
    5. ' input' → logprob: -3.17661452293396
    6. ' price' → logprob: -4.551614761352539
    7. ' paid' → logprob: -4.926614761352539
    8. ' original' → logprob: -5.176614761352539
    9. ' tax' → logprob: -5.551614761352539
    10. ' provided' → logprob: -5.551614761352539

Token 62: ' amount' (ID: 4527)
  Prédit: ' amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' amount' → logprob: -0.35731473565101624
    2. '_amount' → logprob: -1.4823147058486938
    3. ' price' → logprob: -3.1073148250579834
    4. '_price' → logprob: -4.107314586639404
    5. 'amount' → logprob: -4.607314586639404
    6. ' ' → logprob: -7.482314586639404
    7. '   ' → logprob: -7.607314586639404
    8. 'price' → logprob: -8.232315063476562
    9. ' amounts' → logprob: -8.857315063476562
    10. '```' → logprob: -8.982315063476562

Token 63: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2402394860982895
    2. '.' → logprob: -1.6152395009994507
    3. ':' → logprob: -4.99023962020874
    4. '):' → logprob: -6.61523962020874
    5. 'def' → logprob: -6.86523962020874
    6. ').' → logprob: -7.49023962020874
    7. ',' → logprob: -7.49023962020874
    8. ' :' → logprob: -7.61523962020874
    9. '.
' → logprob: -7.61523962020874
    10. '```' → logprob: -7.86523962020874

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013653762638568878
    2. '"""' → logprob: -5.013653755187988
    3. '```' → logprob: -5.263653755187988
    4. '"""
' → logprob: -7.388653755187988
    5. '
' → logprob: -8.388653755187988
    6. '""' → logprob: -8.638653755187988
    7. '    ' → logprob: -8.888653755187988
    8. ')' → logprob: -8.888653755187988
    9. ' """' → logprob: -9.138653755187988
    10. ' """
' → logprob: -9.388653755187988

Token 65: ' If' (ID: 1843)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011021176353096962
    2. '
' → logprob: -5.386021137237549
    3. '    
' → logprob: -6.011021137237549
    4. '    ' → logprob: -6.511021137237549
    5. ' 
' → logprob: -7.136021137237549
    6. '   
' → logprob: -8.511021614074707
    7. '  
' → logprob: -8.636021614074707
    8. ' """
' → logprob: -8.636021614074707
    9. '"""
' → logprob: -8.636021614074707
    10. '     
' → logprob: -8.636021614074707

Token 66: ' such' (ID: 2238)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.17071561515331268
    2. ' paid' → logprob: -2.420715570449829
    3. ' not' → logprob: -4.295715808868408
    4. ' price' → logprob: -4.545715808868408
    5. ' you' → logprob: -4.795715808868408
    6. ' user' → logprob: -5.295715808868408
    7. ' a' → logprob: -5.420715808868408
    8. ' amount' → logprob: -5.545715808868408
    9. ' ' → logprob: -5.670715808868408
    10. '    ' → logprob: -5.795715808868408

Token 67: ' an' (ID: 448)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.655720055103302
    2. ' exists' → logprob: -1.9057199954986572
    3. ' original' → logprob: -2.0307199954986572
    4. ' an' → logprob: -2.1557199954986572
    5. ' possible' → logprob: -2.7807199954986572
    6. 'a' → logprob: -5.030720233917236
    7. 'original' → logprob: -5.405720233917236
    8. 'possible' → logprob: -5.905720233917236
    9. ' prices' → logprob: -6.280720233917236
    10. ' price' → logprob: -6.280720233917236

Token 68: ' original' (ID: 4756)
  Prédit: ' original'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' original' → logprob: -0.22750519216060638
    2. 'original' → logprob: -1.6025052070617676
    3. ' amount' → logprob: -6.602505207061768
    4. 'amount' → logprob: -8.10250473022461
    5. '_original' → logprob: -8.72750473022461
    6. 'origin' → logprob: -10.35250473022461
    7. ' ' → logprob: -10.47750473022461
    8. 'possible' → logprob: -10.47750473022461
    9. ' originale' → logprob: -10.47750473022461
    10. ' price' → logprob: -10.47750473022461

Token 69: ' price' (ID: 3911)
  Prédit: '_price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -0.06639011204242706
    2. ' price' → logprob: -2.941390037536621
    3. '_' → logprob: -4.566390037536621
    4. 'price' → logprob: -7.941390037536621
    5. ' ' → logprob: -8.191390037536621
    6. ' _' → logprob: -8.816390037536621
    7. '_prices' → logprob: -9.066390037536621
    8. '_original' → logprob: -10.191390037536621
    9. '_amount' → logprob: -10.816390037536621
    10. '_possible' → logprob: -11.066390037536621

Token 70: ' exists' (ID: 13031)
  Prédit: ' exists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exists' → logprob: -0.1966480314731598
    2. 'exists' → logprob: -2.821648120880127
    3. 's' → logprob: -3.196648120880127
    4. '   ' → logprob: -3.571648120880127
    5. ' is' → logprob: -3.821648120880127
    6. 'def' → logprob: -5.071648120880127
    7. ' cannot' → logprob: -5.196648120880127
    8. ' ' → logprob: -5.321648120880127
    9. 'es' → logprob: -6.196648120880127
    10. ' does' → logprob: -6.321648120880127

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020597130060195923
    2. '   ' → logprob: -4.145596981048584
    3. ':' → logprob: -5.645596981048584
    4. '):' → logprob: -7.395596981048584
    5. ' ,' → logprob: -8.770597457885742
    6. ',
' → logprob: -9.895597457885742
    7. ' :' → logprob: -10.020597457885742
    8. '):
' → logprob: -10.270597457885742
    9. '),' → logprob: -10.270597457885742
    10. 'def' → logprob: -11.020597457885742

Token 72: ' prints' (ID: 33767)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3151923716068268
    2. '    ' → logprob: -1.8151923418045044
    3. ' return' → logprob: -3.065192461013794
    4. ' returns' → logprob: -3.190192461013794
    5. '       ' → logprob: -4.815192222595215
    6. ' it' → logprob: -5.065192222595215
    7. ' the' → logprob: -5.690192222595215
    8. ' you' → logprob: -7.315192222595215
    9. ' ' → logprob: -8.815192222595215
    10. 'return' → logprob: -9.065192222595215

Token 73: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.41514888405799866
    2. ' it' → logprob: -1.5401488542556763
    3. ' all' → logprob: -2.165148973464966
    4. 'the' → logprob: -5.290148735046387
    5. ' them' → logprob: -6.665148735046387
    6. ' two' → logprob: -7.040148735046387
    7. '"' → logprob: -7.165148735046387
    8. 'all' → logprob: -8.040148735046387
    9. 'it' → logprob: -8.040148735046387
    10. ' possible' → logprob: -8.290148735046387

Token 74: ' original' (ID: 4756)
  Prédit: ' original'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' original' → logprob: -0.471457839012146
    2. ' possible' → logprob: -1.096457839012146
    3. 'm' → logprob: -5.0964579582214355
    4. ' following' → logprob: -5.0964579582214355
    5. ' corresponding' → logprob: -5.3464579582214355
    6. 'possible' → logprob: -5.5964579582214355
    7. ' price' → logprob: -5.7214579582214355
    8. 'original' → logprob: -5.9714579582214355
    9. ' first' → logprob: -6.2214579582214355
    10. 'n' → logprob: -6.5964579582214355

Token 75: ' price' (ID: 3911)
  Prédit: '_price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -0.24484610557556152
    2. ' price' → logprob: -1.6198461055755615
    3. ' ' → logprob: -4.994846343994141
    4. 'price' → logprob: -5.369846343994141
    5. '_' → logprob: -5.744846343994141
    6. ':' → logprob: -6.244846343994141
    7. '   ' → logprob: -7.494846343994141
    8. '_prices' → logprob: -7.744846343994141
    9. '価格' → logprob: -8.36984634399414
    10. '  ' → logprob: -8.61984634399414

Token 76: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06110961362719536
    2. ',' → logprob: -3.4361095428466797
    3. ':' → logprob: -4.43610954284668
    4. '.' → logprob: -4.68610954284668
    5. 'def' → logprob: -6.56110954284668
    6. '```' → logprob: -7.06110954284668
    7. ' :' → logprob: -7.18610954284668
    8. '
' → logprob: -7.81110954284668
    9. ' and' → logprob: -7.81110954284668
    10. '.
' → logprob: -8.56110954284668

Token 77: 'as' (ID: 288)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.7624363303184509
    2. ')' → logprob: -0.8874363303184509
    3. '):' → logprob: -3.3874363899230957
    4. ':' → logprob: -4.137436389923096
    5. ').' → logprob: -4.137436389923096
    6. ' ),' → logprob: -4.512436389923096
    7. '   ' → logprob: -4.637436389923096
    8. ',' → logprob: -5.387436389923096
    9. ' in' → logprob: -5.512436389923096
    10. ' )' → logprob: -5.762436389923096

Token 78: ' an' (ID: 448)
  Prédit: ' an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.005469251424074173
    2. ' a' → logprob: -6.25546932220459
    3. ' int' → logprob: -6.50546932220459
    4. ' is' → logprob: -7.38046932220459
    5. ' integer' → logprob: -7.38046932220459
    6. 'int' → logprob: -7.88046932220459
    7. 'an' → logprob: -8.50546932220459
    8. 'a' → logprob: -10.13046932220459
    9. '整数' → logprob: -10.25546932220459
    10. ' ' → logprob: -10.50546932220459

Token 79: ' integer' (ID: 16336)
  Prédit: ' integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integer' → logprob: -0.3009924590587616
    2. 'integer' → logprob: -1.425992488861084
    3. 'int' → logprob: -4.300992488861084
    4. '整数' → logprob: -5.300992488861084
    5. ' int' → logprob: -7.050992488861084
    6. '=int' → logprob: -9.550992012023926
    7. '   ' → logprob: -10.050992012023926
    8. '_integer' → logprob: -10.550992012023926
    9. '```' → logprob: -11.175992012023926
    10. '<int' → logprob: -11.425992012023926

Token 80: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016319746151566505
    2. '):' → logprob: -5.141319751739502
    3. '   ' → logprob: -5.766319751739502
    4. '```' → logprob: -5.891319751739502
    5. '),' → logprob: -6.641319751739502
    6. ').' → logprob: -6.641319751739502
    7. ',' → logprob: -7.266319751739502
    8. ')
' → logprob: -8.016319274902344
    9. ' )' → logprob: -8.141319274902344
    10. '):
' → logprob: -9.266319274902344

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02974146232008934
    2. '```' → logprob: -3.6547415256500244
    3. '
' → logprob: -6.654741287231445
    4. '    
' → logprob: -6.904741287231445
    5. '"""' → logprob: -7.529741287231445
    6. '"""
' → logprob: -8.779741287231445
    7. '``' → logprob: -9.154741287231445
    8. '     
' → logprob: -9.654741287231445
    9. '    ' → logprob: -9.904741287231445
    10. ' 
' → logprob: -10.279741287231445

Token 82: ' Otherwise' (ID: 33987)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02512369304895401
    2. '
' → logprob: -4.650123596191406
    3. '    
' → logprob: -5.150123596191406
    4. '```' → logprob: -5.275123596191406
    5. '"""
' → logprob: -6.150123596191406
    6. '"""' → logprob: -6.775123596191406
    7. 'def' → logprob: -8.275123596191406
    8. '\n' → logprob: -8.525123596191406
    9. ' 
' → logprob: -9.400123596191406
    10. ')' → logprob: -9.525123596191406

Token 83: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31762927770614624
    2. '   ' → logprob: -1.692629337310791
    3. ':
' → logprob: -2.567629337310791
    4. ',' → logprob: -4.692629337310791
    5. ' print' → logprob: -7.442629337310791
    6. '    ' → logprob: -7.817629337310791
    7. ' :
' → logprob: -7.817629337310791
    8. ' :' → logprob: -8.317628860473633
    9. 'print' → logprob: -9.067628860473633
    10. ' prints' → logprob: -9.692628860473633

Token 84: ' prints' (ID: 33767)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.6381247639656067
    2. '   ' → logprob: -0.8881247639656067
    3. ' return' → logprob: -3.513124704360962
    4. '    ' → logprob: -3.888124704360962
    5. ' None' → logprob: -5.888124942779541
    6. '```' → logprob: -5.888124942779541
    7. ' returns' → logprob: -6.263124942779541
    8. ' ' → logprob: -7.013124942779541
    9. 'print' → logprob: -7.638124942779541
    10. ' prints' → logprob: -8.013124465942383

Token 85: ' ":' (ID: 27274)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.42900341749191284
    2. '"' → logprob: -1.6790034770965576
    3. ' None' → logprob: -2.3040034770965576
    4. ' '' → logprob: -4.5540032386779785
    5. '"No' → logprob: -4.8040032386779785
    6. ' Impossible' → logprob: -4.9290032386779785
    7. ' No' → logprob: -5.4290032386779785
    8. ' the' → logprob: -5.4290032386779785
    9. ' ' → logprob: -5.5540032386779785
    10. ' a' → logprob: -5.6790032386779785

Token 86: '("' (ID: 568)
  Prédit: ' No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' No' → logprob: -1.3144006729125977
    2. 'No' → logprob: -1.4394006729125977
    3. ' ' → logprob: -1.5644006729125977
    4. '"' → logprob: -2.9394006729125977
    5. ' no' → logprob: -3.8144006729125977
    6. 'なし' → logprob: -3.9394006729125977
    7. ' None' → logprob: -4.064400672912598
    8. '不' → logprob: -4.189400672912598
    9. ' Not' → logprob: -4.439400672912598
    10. ' "' → logprob: -4.564400672912598

Token 87: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.016154605895280838
    2. '   ' → logprob: -4.391154766082764
    3. '    
' → logprob: -5.766154766082764
    4. '```' → logprob: -9.016154289245605
    5. '

' → logprob: -9.266154289245605
    6. '   
' → logprob: -9.766154289245605
    7. '\n' → logprob: -9.766154289245605
    8. '  
' → logprob: -10.016154289245605
    9. ' 
' → logprob: -10.141154289245605
    10. 'def' → logprob: -10.891154289245605

Token 88: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00944686122238636
    2. '
' → logprob: -5.13444709777832
    3. '```' → logprob: -5.88444709777832
    4. '    
' → logprob: -7.88444709777832
    5. ')' → logprob: -8.50944709777832
    6. 'def' → logprob: -9.25944709777832
    7. '``' → logprob: -11.63444709777832
    8. ' 
' → logprob: -11.63444709777832
    9. '    ' → logprob: -11.75944709777832
    10. '"""' → logprob: -12.13444709777832

Token 89: ' The' (ID: 623)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010967647656798363
    2. '
' → logprob: -4.76096773147583
    3. '    
' → logprob: -7.26096773147583
    4. '```' → logprob: -7.63596773147583
    5. '"""' → logprob: -8.010967254638672
    6. 'def' → logprob: -8.385967254638672
    7. '"""
' → logprob: -8.510967254638672
    8. '    ' → logprob: -8.885967254638672
    9. ')' → logprob: -9.635967254638672
    10. '   
' → logprob: -10.510967254638672

Token 90: ' function' (ID: 1114)
  Prédit: ' """
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' """
' → logprob: -1.0884616374969482
    2. ' function' → logprob: -1.2134616374969482
    3. '   ' → logprob: -1.4634616374969482
    4. ' ' → logprob: -3.2134616374969482
    5. '"""
' → logprob: -3.4634616374969482
    6. ' """' → logprob: -3.5884616374969482
    7. '"""' → logprob: -5.088461875915527
    8. ' "' → logprob: -5.588461875915527
    9. ' user' → logprob: -5.713461875915527
    10. ' original' → logprob: -5.713461875915527

Token 91: ' assumes' (ID: 53395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1195933818817139
    2. ' :' → logprob: -1.6195933818817139
    3. '():' → logprob: -1.8695933818817139
    4. '   ' → logprob: -2.244593381881714
    5. ':' → logprob: -2.494593381881714
    6. ' continues' → logprob: -2.994593381881714
    7. ' def' → logprob: -4.119593620300293
    8. ' completes' → logprob: -4.119593620300293
    9. 'def' → logprob: -4.869593620300293
    10. ' :
' → logprob: -5.119593620300293

Token 92: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.145137906074524
    2. ' the' → logprob: -1.520137906074524
    3. ' that' → logprob: -1.520137906074524
    4. ' a' → logprob: -2.1451377868652344
    5. ' an' → logprob: -2.2701377868652344
    6. ' ' → logprob: -4.020137786865234
    7. '    ' → logprob: -6.895137786865234
    8. ' input' → logprob: -7.020137786865234
    9. ' user' → logprob: -7.020137786865234
    10. ' """
' → logprob: -7.770137786865234

Token 93: ' tax' (ID: 5577)
  Prédit: ' tax'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tax' → logprob: -0.9702807664871216
    2. 'tax' → logprob: -1.8452807664871216
    3. ' original' → logprob: -2.345280647277832
    4. '   ' → logprob: -2.345280647277832
    5. ' user' → logprob: -3.095280647277832
    6. ' price' → logprob: -3.095280647277832
    7. ' amount' → logprob: -3.470280647277832
    8. ' paid' → logprob: -3.470280647277832
    9. ' input' → logprob: -3.845280647277832
    10. 'def' → logprob: -3.845280647277832

Token 94: ' rate' (ID: 6251)
  Prédit: '_rate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rate' → logprob: -0.042406484484672546
    2. ' rate' → logprob: -3.4174065589904785
    3. '_in' → logprob: -5.7924065589904785
    4. '   ' → logprob: -6.6674065589904785
    5. '_amount' → logprob: -6.9174065589904785
    6. ' is' → logprob: -7.1674065589904785
    7. 'ed' → logprob: -7.2924065589904785
    8. 'rate' → logprob: -7.5424065589904785
    9. '率' → logprob: -7.9174065589904785
    10. '_' → logprob: -8.04240608215332

Token 95: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.578349232673645
    2. ' is' → logprob: -1.328349232673645
    3. ' ' → logprob: -1.953349232673645
    4. '=' → logprob: -3.4533491134643555
    5. '_' → logprob: -8.203349113464355
    6. ')' → logprob: -9.203349113464355
    7. 'is' → logprob: -9.703349113464355
    8. '  ' → logprob: -9.828349113464355
    9. ' ,' → logprob: -10.203349113464355
    10. ' for' → logprob: -10.453349113464355

Token 96: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17428481578826904
    2. '8' → logprob: -1.924284815788269
    3. ' fixed' → logprob: -4.674284934997559
    4. '0' → logprob: -5.674284934997559
    5. 'fixed' → logprob: -7.049284934997559
    6. '1' → logprob: -8.924284934997559
    7. ' set' → logprob: -9.924284934997559
    8. ' always' → logprob: -10.549284934997559
    9. ' exactly' → logprob: -10.799284934997559
    10. '   ' → logprob: -11.049284934997559

Token 97: '8' (ID: 23)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16376322507858276
    2. '8' → logprob: -1.9137632846832275
    3. ' ' → logprob: -5.663763046264648
    4. '"' → logprob: -10.163763046264648
    5. '1' → logprob: -10.913763046264648
    6. '   ' → logprob: -12.663763046264648
    7. '.' → logprob: -13.288763046264648
    8. ''' → logprob: -14.538763046264648
    9. '`' → logprob: -15.038763046264648
    10. '7' → logprob: -15.663763046264648

Token 98: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3872697651386261
    2. '.' → logprob: -2.3872697353363037
    3. '   ' → logprob: -2.7622697353363037
    4. ':' → logprob: -3.2622697353363037
    5. '%
' → logprob: -3.6372697353363037
    6. '):
' → logprob: -3.8872697353363037
    7. ')' → logprob: -3.8872697353363037
    8. '):' → logprob: -4.012269973754883
    9. '
' → logprob: -4.512269973754883
    10. ' ' → logprob: -4.762269973754883

Token 99: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03380809351801872
    2. '
' → logprob: -3.6588079929351807
    3. ':' → logprob: -5.53380823135376
    4. '):' → logprob: -6.53380823135376
    5. '    
' → logprob: -7.78380823135376
    6. '.' → logprob: -7.78380823135376
    7. '```' → logprob: -8.533807754516602
    8. ',' → logprob: -8.783807754516602
    9. '

' → logprob: -9.033807754516602
    10. 'def' → logprob: -9.283807754516602

Token 100: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19088470935821533
    2. '0' → logprob: -2.690884590148926
    3. '   ' → logprob: -3.065884590148926
    4. ' )' → logprob: -3.440884590148926
    5. ' ' → logprob: -4.065884590148926
    6. ').' → logprob: -6.815884590148926
    7. '8' → logprob: -7.065884590148926
    8. 'def' → logprob: -7.190884590148926
    9. '100' → logprob: -7.315884590148926
    10. ' and' → logprob: -7.315884590148926

Token 101: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01439537201076746
    2. '0' → logprob: -5.389395236968994
    3. ' +' → logprob: -5.389395236968994
    4. '+' → logprob: -6.264395236968994
    5. '00' → logprob: -6.639395236968994
    6. ')' → logprob: -7.764395236968994
    7. '08' → logprob: -7.889395236968994
    8. ' .' → logprob: -8.639395713806152
    9. '04' → logprob: -9.014395713806152
    10. '1' → logprob: -9.264395713806152

Token 102: '08' (ID: 3062)
  Prédit: '08'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '08' → logprob: -0.00696104671806097
    2. '0' → logprob: -5.006960868835449
    3. ' ' → logprob: -8.38196086883545
    4. '1' → logprob: -12.13196086883545
    5. '05' → logprob: -13.00696086883545
    6. '080' → logprob: -13.25696086883545
    7. '   ' → logprob: -13.75696086883545
    8. 'tax' → logprob: -14.38196086883545
    9. 'def' → logprob: -14.75696086883545
    10. '085' → logprob: -14.75696086883545

Token 103: ' multiplier' (ID: 61814)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4134370684623718
    2. ').' → logprob: -1.1634371280670166
    3. ')
' → logprob: -4.5384368896484375
    4. ').
' → logprob: -5.1634368896484375
    5. '):
' → logprob: -5.6634368896484375
    6. '),' → logprob: -6.1634368896484375
    7. '```' → logprob: -6.4134368896484375
    8. '   ' → logprob: -7.4134368896484375
    9. '):' → logprob: -7.9134368896484375
    10. ' )' → logprob: -8.038436889648438

Token 104: ').
' (ID: 6294)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1364033818244934
    2. ')' → logprob: -2.5114033222198486
    3. '):
' → logprob: -3.2614033222198486
    4. '   ' → logprob: -5.136403560638428
    5. ').' → logprob: -7.261403560638428
    6. ' ):' → logprob: -7.511403560638428
    7. '):

' → logprob: -7.886403560638428
    8. ')
' → logprob: -9.26140308380127
    9. ' ):
' → logprob: -9.51140308380127
    10. 'def' → logprob: -9.63640308380127

Token 105: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3671826422214508
    2. '
' → logprob: -1.2421826124191284
    3. ')' → logprob: -4.992182731628418
    4. '    
' → logprob: -5.117182731628418
    5. '```' → logprob: -6.367182731628418
    6. ' 
' → logprob: -7.242182731628418
    7. 'def' → logprob: -7.492182731628418
    8. '  
' → logprob: -7.617182731628418
    9. '

' → logprob: -7.617182731628418
    10. ')
' → logprob: -8.367182731628418

Token 106: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28030678629875183
    2. '
' → logprob: -1.5303068161010742
    3. ')' → logprob: -4.030306816101074
    4. '    
' → logprob: -5.780306816101074
    5. '```' → logprob: -6.155306816101074
    6. '"""' → logprob: -6.655306816101074
    7. '  
' → logprob: -7.530306816101074
    8. ' 
' → logprob: -7.655306816101074
    9. 'def' → logprob: -7.780306816101074
    10. '    ' → logprob: -7.780306816101074

Token 107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00874386727809906
    2. '
' → logprob: -5.008743762969971
    3. '    ' → logprob: -6.883743762969971
    4. '    
' → logprob: -7.008743762969971
    5. '```' → logprob: -10.633744239807129
    6. 'n' → logprob: -11.258744239807129
    7. ' 
' → logprob: -11.383744239807129
    8. '     
' → logprob: -11.883744239807129
    9. '\' → logprob: -12.008744239807129
    10. 'def' → logprob: -12.133744239807129

Token 108: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2530333697795868
    2. 'paid' → logprob: -2.253033399581909
    3. ' paid' → logprob: -2.628033399581909
    4. 'tax' → logprob: -4.25303316116333
    5. 'price' → logprob: -4.50303316116333
    6. 'amount' → logprob: -5.00303316116333
    7. ' amount' → logprob: -5.12803316116333
    8. ' price' → logprob: -6.00303316116333
    9. '    
' → logprob: -6.87803316116333
    10. '#' (adapté à ' #') → logprob: -7.37803316116333

Token 109: ' Prompt' (ID: 103998)
  Prédit: ' paid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' paid' → logprob: -1.4506539106369019
    2. 'paid' → logprob: -1.5756539106369019
    3. 'amount' → logprob: -1.8256539106369019
    4. ' amount' → logprob: -2.0756540298461914
    5. ' while' → logprob: -2.7006540298461914
    6. 'while' → logprob: -2.8256540298461914
    7. 'tax' → logprob: -3.2006540298461914
    8. 'price' → logprob: -3.4506540298461914
    9. ' original' → logprob: -3.8256540298461914
    10. ' price' → logprob: -4.450654029846191

Token 110: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03479503467679024
    2. ' amount' → logprob: -4.284794807434082
    3. 'amount' → logprob: -4.909794807434082
    4. '    ' → logprob: -5.034794807434082
    5. ' =' → logprob: -6.284794807434082
    6. ' price' → logprob: -6.659794807434082
    7. 'price' → logprob: -7.409794807434082
    8. ' money' → logprob: -7.409794807434082
    9. ' paid' → logprob: -7.659794807434082
    10. '_amount' → logprob: -7.659794807434082

Token 111: ' user' (ID: 1825)
  Prédit: 'paid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'paid' → logprob: -0.8669996857643127
    2. ' paid' → logprob: -1.366999626159668
    3. 'amount' → logprob: -2.491999626159668
    4. ' original' → logprob: -2.991999626159668
    5. 'original' → logprob: -3.241999626159668
    6. 'price' → logprob: -3.241999626159668
    7. '   ' → logprob: -3.366999626159668
    8. ' amount' → logprob: -3.616999626159668
    9. ' price' → logprob: -4.116999626159668
    10. 'user' → logprob: -4.491999626159668

Token 112: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01427350752055645
    2. 'amount' → logprob: -5.014273643493652
    3. 'price' → logprob: -5.389273643493652
    4. ' =' → logprob: -7.264273643493652
    5. 'paid' → logprob: -7.264273643493652
    6. ' amount' → logprob: -7.764273643493652
    7. ' paid' → logprob: -8.514273643493652
    8. ' price' → logprob: -9.139273643493652
    9. '_price' → logprob: -9.139273643493652
    10. 'user' → logprob: -9.264273643493652

Token 113: ' read' (ID: 1729)
  Prédit: ' amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' amount' → logprob: -0.6453747153282166
    2. 'amount' → logprob: -1.8953747749328613
    3. ' paid' → logprob: -2.1453747749328613
    4. ' try' → logprob: -2.5203747749328613
    5. ' price' → logprob: -2.6453747749328613
    6. 'try' → logprob: -4.145374774932861
    7. 'paid' → logprob: -4.145374774932861
    8. 'price' → logprob: -4.520374774932861
    9. 'tax' → logprob: -5.770374774932861
    10. ' taxed' → logprob: -5.895374774932861

Token 114: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1430826038122177
    2. ' the' → logprob: -2.643082618713379
    3. ' amount' → logprob: -3.893082618713379
    4. ' price' → logprob: -4.518082618713379
    5. ' paid' → logprob: -4.893082618713379
    6. 'amount' → logprob: -5.393082618713379
    7. '```' → logprob: -5.893082618713379
    8. ' input' → logprob: -6.018082618713379
    9. '    ' → logprob: -6.393082618713379
    10. '       ' → logprob: -6.643082618713379

Token 115: ' total' (ID: 3609)
  Prédit: ' taxed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' taxed' → logprob: -1.1834338903427124
    2. ' input' → logprob: -1.8084338903427124
    3. ' paid' → logprob: -1.9334338903427124
    4. ' price' → logprob: -1.9334338903427124
    5. ' amount' → logprob: -2.058434009552002
    6. 'tax' → logprob: -3.808434009552002
    7. 'paid' → logprob: -3.933434009552002
    8. 'amount' → logprob: -4.058434009552002
    9. 'price' → logprob: -4.308434009552002
    10. ' original' → logprob: -4.683434009552002

Token 116: ' amount' (ID: 4527)
  Prédit: '_price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -0.42197465896606445
    2. '_amount' → logprob: -1.1719746589660645
    3. '_paid' → logprob: -4.0469746589660645
    4. 'amount' → logprob: -5.5469746589660645
    5. 'price' → logprob: -5.7969746589660645
    6. ' price' → logprob: -6.1719746589660645
    7. '_tax' → logprob: -6.1719746589660645
    8. ' amount' → logprob: -6.4219746589660645
    9. '_' → logprob: -6.6719746589660645
    10. '_p' → logprob: -7.5469746589660645

Token 117: ' paid' (ID: 9927)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005176001228392124
    2. 'total' → logprob: -6.005176067352295
    3. 'amount' → logprob: -7.005176067352295
    4. '    
' → logprob: -7.505176067352295
    5. 'price' → logprob: -8.005175590515137
    6. ' amount' → logprob: -8.630175590515137
    7. '
' → logprob: -9.005175590515137
    8. ' paid' → logprob: -9.005175590515137
    9. 'paid' → logprob: -9.130175590515137
    10. ' total' → logprob: -9.505175590515137

Token 118: ' including' (ID: 3463)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003453602781519294
    2. '    
' → logprob: -6.878453731536865
    3. '
' → logprob: -7.003453731536865
    4. 'amount' → logprob: -7.878453731536865
    5. 'total' → logprob: -8.003453254699707
    6. ' amount' → logprob: -8.003453254699707
    7. 'price' → logprob: -9.128453254699707
    8. 'p' → logprob: -9.628453254699707
    9. ' paid' → logprob: -9.753453254699707
    10. '```' → logprob: -10.253453254699707

Token 119: ' tax' (ID: 5577)
  Prédit: ' tax'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tax' → logprob: -0.35036152601242065
    2. 'tax' → logprob: -1.2253615856170654
    3. ' the' → logprob: -6.850361347198486
    4. 'the' → logprob: -7.725361347198486
    5. '_tax' → logprob: -7.975361347198486
    6. '   ' → logprob: -11.475361824035645
    7. ' ' → logprob: -11.600361824035645
    8. ' a' → logprob: -11.975361824035645
    9. ' taxes' → logprob: -11.975361824035645
    10. ' input' → logprob: -12.225361824035645

Token 120: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04895193502306938
    2. ' amount' → logprob: -4.423952102661133
    3. ' total' → logprob: -4.923952102661133
    4. ' paid' → logprob: -5.048952102661133
    5. 'total' → logprob: -5.048952102661133
    6. '    
' → logprob: -5.673952102661133
    7. 'amount' → logprob: -5.673952102661133
    8. ' price' → logprob: -5.798952102661133
    9. 'price' → logprob: -6.048952102661133
    10. '
' → logprob: -6.798952102661133

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13521833717823029
    2. ' amount' → logprob: -2.635218381881714
    3. ' total' → logprob: -4.385218143463135
    4. '    
' → logprob: -4.510218143463135
    5. ' paid' → logprob: -5.260218143463135
    6. '    ' → logprob: -5.385218143463135
    7. 'amount' → logprob: -5.385218143463135
    8. 'total' → logprob: -5.635218143463135
    9. ' price' → logprob: -5.760218143463135
    10. ' 
' → logprob: -5.885218143463135

Token 122: ' N' (ID: 478)
  Prédit: ' amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' amount' → logprob: -0.6835108399391174
    2. ' total' → logprob: -1.9335107803344727
    3. ' price' → logprob: -2.4335107803344727
    4. '   ' → logprob: -2.6835107803344727
    5. ' paid' → logprob: -2.8085107803344727
    6. 'total' → logprob: -3.0585107803344727
    7. 'amount' → logprob: -3.0585107803344727
    8. 'price' → logprob: -4.183510780334473
    9. 'paid' → logprob: -4.558510780334473
    10. '    
' → logprob: -5.558510780334473

Token 123: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011054190807044506
    2. '=' → logprob: -4.511054039001465
    3. '_' → logprob: -13.511054039001465
    4. ',' → logprob: -13.636054039001465
    5. ' ' → logprob: -14.011054039001465
    6. '=int' → logprob: -14.136054039001465
    7. '=input' → logprob: -14.386054039001465
    8. ')' → logprob: -14.511054039001465
    9. ' =
' → logprob: -15.136054039001465
    10. ' ' → logprob: -15.386054039001465

Token 124: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0485910028219223
    2. 'int' → logprob: -3.048590898513794
    3. ' float' → logprob: -13.423590660095215
    4. ' ' → logprob: -13.798590660095215
    5. '   ' → logprob: -14.548590660095215
    6. ' math' → logprob: -15.798590660095215
    7. 'float' → logprob: -15.798590660095215
    8. '	int' → logprob: -16.42359161376953
    9. '(int' → logprob: -16.67359161376953
    10. '=int' → logprob: -16.79859161376953

Token 125: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0024769625160843134
    2. '(' → logprob: -6.002477169036865
    3. 'input' → logprob: -13.752476692199707
    4. ' (' → logprob: -15.377476692199707
    5. ' input' → logprob: -16.627477645874023
    6. '=input' → logprob: -18.252477645874023
    7. '(
' → logprob: -18.752477645874023
    8. ' ' → logprob: -19.627477645874023
    9. ',input' → logprob: -19.752477645874023
    10. '(in' → logprob: -20.002477645874023

Token 126: '("' (ID: 568)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0862075462937355
    2. '())' → logprob: -2.586207628250122
    3. '(' → logprob: -5.086207389831543
    4. '("("' → logprob: -8.086207389831543
    5. '("' → logprob: -8.211207389831543
    6. '(""))' → logprob: -9.086207389831543
    7. '("")' → logprob: -9.211207389831543
    8. '()>' → logprob: -9.711207389831543
    9. '('' → logprob: -9.836207389831543
    10. '()))' → logprob: -10.336207389831543

Token 127: 'Enter' (ID: 9408)
  Prédit: '"))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"))' → logprob: -0.32790276408195496
    2. '税込' → logprob: -2.5779027938842773
    3. 'Paid' → logprob: -3.4529027938842773
    4. 'Please' → logprob: -3.5779027938842773
    5. '"' → logprob: -3.8279027938842773
    6. 'Enter' → logprob: -3.8279027938842773
    7. '金' → logprob: -4.327902793884277
    8. ':' → logprob: -4.452902793884277
    9. 'Amount' → logprob: -4.452902793884277
    10. 'paid' → logprob: -4.577902793884277

Token 128: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.13877564668655396
    2. ' amount' → logprob: -2.138775587081909
    3. ' price' → logprob: -5.263775825500488
    4. ' total' → logprob: -5.638775825500488
    5. ' taxed' → logprob: -7.263775825500488
    6. ' a' → logprob: -7.388775825500488
    7. ' your' → logprob: -8.013775825500488
    8. ' tax' → logprob: -8.638775825500488
    9. '(amount' → logprob: -8.638775825500488
    10. ' paid' → logprob: -8.638775825500488

Token 129: ' amount' (ID: 4527)
  Prédit: ' amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' amount' → logprob: -0.41844016313552856
    2. ' total' → logprob: -1.4184401035308838
    3. ' price' → logprob: -3.043440103530884
    4. ' paid' → logprob: -3.918440103530884
    5. ' taxed' → logprob: -4.418440341949463
    6. 'amount' → logprob: -4.793440341949463
    7. 'total' → logprob: -5.418440341949463
    8. ' original' → logprob: -6.293440341949463
    9. ' final' → logprob: -6.793440341949463
    10. ' money' → logprob: -7.168440341949463

Token 130: ' paid' (ID: 9927)
  Prédit: ' paid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' paid' → logprob: -0.16039259731769562
    2. 'paid' → logprob: -3.1603925228118896
    3. ' including' → logprob: -3.4103925228118896
    4. '_paid' → logprob: -3.9103925228118896
    5. ' you' → logprob: -4.410392761230469
    6. ':' → logprob: -4.535392761230469
    7. ' of' → logprob: -4.660392761230469
    8. ' "))' → logprob: -4.910392761230469
    9. ' with' → logprob: -5.035392761230469
    10. ' to' → logprob: -6.285392761230469

Token 131: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06861723959445953
    2. ' including' → logprob: -3.318617343902588
    3. ' (' → logprob: -3.693617343902588
    4. 'including' → logprob: -5.693617343902588
    5. '):' → logprob: -8.06861686706543
    6. '(in' → logprob: -8.06861686706543
    7. '(' → logprob: -8.19361686706543
    8. '"))' → logprob: -8.81861686706543
    9. ' "))' → logprob: -9.19361686706543
    10. '：' → logprob: -9.31861686706543

Token 132: 'including' (ID: 26167)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2998463809490204
    2. 'including' → logprob: -2.1748464107513428
    3. ' including' → logprob: -2.5498464107513428
    4. ')' → logprob: -3.9248464107513428
    5. '税込' → logprob: -4.424846172332764
    6. ' ):' → logprob: -4.799846172332764
    7. 'with' → logprob: -5.299846172332764
    8. 'tax' → logprob: -5.299846172332764
    9. '"))' → logprob: -5.924846172332764
    10. ' with' → logprob: -6.049846172332764

Token 133: ' tax' (ID: 5577)
  Prédit: ' tax'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tax' → logprob: -0.16141805052757263
    2. 'tax' → logprob: -1.911418080329895
    3. ' consumption' → logprob: -6.9114179611206055
    4. 'cons' → logprob: -9.661417961120605
    5. '_tax' → logprob: -10.161417961120605
    6. '税' → logprob: -10.411417961120605
    7. '税込' → logprob: -10.661417961120605
    8. ' ' → logprob: -12.036417961120605
    9. '消' → logprob: -12.286417961120605
    10. '.tax' → logprob: -12.661417961120605

Token 134: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -1.1517960956552997e-05
    2. '"):' → logprob: -12.500011444091797
    3. ')' → logprob: -12.625011444091797
    4. ''):' → logprob: -12.750011444091797
    5. ')：' → logprob: -14.375011444091797
    6. ':' → logprob: -14.625011444091797
    7. ' ):' → logprob: -16.125011444091797
    8. 'amount' → logprob: -16.375011444091797
    9. '）：' → logprob: -16.625011444091797
    10. '}:' → logprob: -16.750011444091797

Token 135: ' "' (ID: 392)
  Prédit: '"))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"))' → logprob: -0.055844034999608994
    2. ' "))' → logprob: -2.9308440685272217
    3. '))' → logprob: -7.555843830108643
    4. ')' → logprob: -8.1808443069458
    5. '")' → logprob: -9.8058443069458
    6. '"))
' → logprob: -10.4308443069458
    7. '"' → logprob: -10.8058443069458
    8. ''))' → logprob: -11.3058443069458
    9. ')")' → logprob: -11.3058443069458
    10. '"))

' → logprob: -12.1808443069458

Token 136: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.062056753784418106
    2. ')' → logprob: -2.81205677986145
    3. '))
' → logprob: -9.937056541442871
    4. '"))' → logprob: -10.812056541442871
    5. ')))' → logprob: -11.812056541442871
    6. ').' → logprob: -12.187056541442871
    7. ')
' → logprob: -13.437056541442871
    8. ''))' → logprob: -13.437056541442871
    9. '))

' → logprob: -13.687056541442871
    10. '));' → logprob: -13.937056541442871

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23161552846431732
    2. '
' → logprob: -1.9816155433654785
    3. ' for' → logprob: -3.2316155433654785
    4. 'for' → logprob: -3.8566155433654785
    5. '    
' → logprob: -5.4816155433654785
    6. '```' → logprob: -5.7316155433654785
    7. '#' → logprob: -8.35661506652832
    8. 'def' → logprob: -8.60661506652832
    9. '  
' → logprob: -9.48161506652832
    10. ' original' → logprob: -9.85661506652832

Token 138: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15917234122753143
    2. 'found' → logprob: -3.159172296524048
    3. 'low' → logprob: -3.659172296524048
    4. '#' (adapté à ' #') → logprob: -3.909172296524048
    5. 'start' → logprob: -4.159172534942627
    6. 'possible' → logprob: -4.159172534942627
    7. 'left' → logprob: -5.159172534942627
    8. 'original' → logprob: -5.159172534942627
    9. 'def' → logprob: -5.409172534942627
    10. 'import' → logprob: -5.909172534942627

Token 139: ' Calculate' (ID: 38942)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5034072399139404
    2. 'found' → logprob: -1.8784072399139404
    3. 'possible' → logprob: -2.7534072399139404
    4. 'low' → logprob: -3.0034072399139404
    5. 'start' → logprob: -3.2534072399139404
    6. 'left' → logprob: -4.1284074783325195
    7. 'lower' → logprob: -4.2534074783325195
    8. 'original' → logprob: -4.3784074783325195
    9. '#' → logprob: -4.3784074783325195
    10. 'min' → logprob: -4.6284074783325195

Token 140: ' the' (ID: 290)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.8324456810951233
    2. ' lower' → logprob: -1.9574456214904785
    3. 'possible' → logprob: -2.0824456214904785
    4. ' min' → logprob: -2.4574456214904785
    5. ' for' → logprob: -2.9574456214904785
    6. ' low' → logprob: -3.0824456214904785
    7. ' original' → logprob: -3.5824456214904785
    8. ' max' → logprob: -4.3324456214904785
    9. 'import' → logprob: -4.4574456214904785
    10. 'lower' → logprob: -4.8324456214904785

Token 141: ' smallest' (ID: 42173)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -1.1374235153198242
    2. 'possible' → logprob: -1.8874235153198242
    3. 'lower' → logprob: -2.137423515319824
    4. 'min' → logprob: -2.137423515319824
    5. 'left' → logprob: -2.262423515319824
    6. 'import' → logprob: -3.387423515319824
    7. ' low' → logprob: -3.637423515319824
    8. ' min' → logprob: -3.762423515319824
    9. 'original' → logprob: -4.262423515319824
    10. ' lower' → logprob: -4.262423515319824

Token 142: ' integer' (ID: 16336)
  Prédit: '_possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_possible' → logprob: -0.4475760757923126
    2. '_original' → logprob: -1.0725760459899902
    3. ' possible' → logprob: -4.94757604598999
    4. ' original' → logprob: -5.44757604598999
    5. '_candidate' → logprob: -5.82257604598999
    6. '_price' → logprob: -6.69757604598999
    7. 'possible' → logprob: -7.32257604598999
    8. '_' → logprob: -7.44757604598999
    9. '_p' → logprob: -7.57257604598999
    10. '_origin' → logprob: -8.447576522827148

Token 143: ' X' (ID: 2127)
  Prédit: ' original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' original' → logprob: -0.31535595655441284
    2. ' possible' → logprob: -1.9403560161590576
    3. ' x' → logprob: -3.4403560161590576
    4. '_original' → logprob: -3.8153560161590576
    5. '_possible' → logprob: -3.8153560161590576
    6. 'possible' → logprob: -4.3153557777404785
    7. 'original' → logprob: -4.4403557777404785
    8. ' that' → logprob: -5.1903557777404785
    9. 'x' → logprob: -5.8153557777404785
    10. ' candidate' → logprob: -5.9403557777404785

Token 144: ' such' (ID: 2238)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08900392055511475
    2. ' that' → logprob: -3.2140040397644043
    3. ' such' → logprob: -3.7140040397644043
    4. '_possible' → logprob: -4.464004039764404
    5. '=' → logprob: -5.589004039764404
    6. 'possible' → logprob: -6.714004039764404
    7. 'that' → logprob: -6.714004039764404
    8. ' possible' → logprob: -6.839004039764404
    9. 'such' → logprob: -7.339004039764404
    10. '_that' → logprob: -7.839004039764404

Token 145: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.24796275794506073
    2. ' that' → logprob: -1.6229627132415771
    3. 'at' → logprob: -3.872962713241577
    4. '_that' → logprob: -7.247962951660156
    5. 'hat' → logprob: -7.372962951660156
    6. '   ' → logprob: -9.747962951660156
    7. '	that' → logprob: -10.122962951660156
    8. 'That' → logprob: -10.372962951660156
    9. 'u' → logprob: -12.747962951660156
    10. '#' → logprob: -13.122962951660156

Token 146: ' X' (ID: 2127)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.1810944378376007
    2. 'math' → logprob: -1.8060944080352783
    3. '(math' → logprob: -7.556094646453857
    4. ' int' → logprob: -8.0560941696167
    5. ' X' → logprob: -8.6810941696167
    6. 'int' → logprob: -9.1810941696167
    7. 'X' → logprob: -9.3060941696167
    8. ' ' → logprob: -9.4310941696167
    9. '```' → logprob: -11.0560941696167
    10. ' (' → logprob: -11.1810941696167

Token 147: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.15433809161186218
    2. '*' → logprob: -2.5293381214141846
    3. ' =' → logprob: -2.9043381214141846
    4. '=' → logprob: -5.7793378829956055
    5. ' >=' → logprob: -6.5293378829956055
    6. ' ' → logprob: -6.6543378829956055
    7. ' <=' → logprob: -7.1543378829956055
    8. ' ' → logprob: -8.154337882995605
    9. ' /' → logprob: -8.404337882995605
    10. 'import' → logprob: -8.529337882995605

Token 148: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01605970971286297
    2. ' ' → logprob: -4.141059875488281
    3. ' math' → logprob: -11.266059875488281
    4. 'math' → logprob: -11.766059875488281
    5. 'int' → logprob: -13.766059875488281
    6. 'import' → logprob: -13.891059875488281
    7. '<|end|>' → logprob: -14.016059875488281
    8. '(' → logprob: -14.141059875488281
    9. '```' → logprob: -15.203559875488281
    10. '(math' → logprob: -15.391059875488281

Token 149: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.554343366995454e-05
    2. ' ' → logprob: -9.750085830688477
    3. 'math' → logprob: -11.500085830688477
    4. '108' → logprob: -11.625085830688477
    5. 'int' → logprob: -12.250085830688477
    6. '(' → logprob: -14.500085830688477
    7. ' math' → logprob: -14.500085830688477
    8. 'import' → logprob: -14.750085830688477
    9. '```' → logprob: -14.875085830688477
    10. '0' → logprob: -15.625085830688477

Token 150: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -9.102680633077398e-05
    2. '0' → logprob: -10.250090599060059
    3. ' .' → logprob: -10.250090599060059
    4. '<|end|>' → logprob: -12.250090599060059
    5. '1' → logprob: -13.375090599060059
    6. ' ' → logprob: -13.562590599060059
    7. '
' → logprob: -13.750090599060059
    8. '\.' → logprob: -13.812590599060059
    9. '.
' → logprob: -13.937590599060059
    10. '[' → logprob: -14.312590599060059

Token 151: '08' (ID: 3062)
  Prédit: '08'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '08' → logprob: -0.00017433916218578815
    2. '0' → logprob: -8.750174522399902
    3. '```' → logprob: -12.687674522399902
    4. '1' → logprob: -12.812674522399902
    5. '8' → logprob: -13.500174522399902
    6. ' ' → logprob: -13.937674522399902
    7. '   ' → logprob: -14.375174522399902
    8. '07' → logprob: -14.625174522399902
    9. '
' → logprob: -14.750174522399902
    10. '<' → logprob: -14.875174522399902

Token 152: ' is' (ID: 382)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.28280794620513916
    2. '>=' → logprob: -1.4078079462051392
    3. '>' → logprob: -7.78280782699585
    4. ' ' → logprob: -8.032808303833008
    5. ')>=' → logprob: -8.282808303833008
    6. ' >' → logprob: -8.532808303833008
    7. ')' → logprob: -8.782808303833008
    8. '   ' → logprob: -9.532808303833008
    9. 'floor' → logprob: -9.907808303833008
    10. ']>=' → logprob: -10.157808303833008

Token 153: ' at' (ID: 540)
  Prédit: ' greater'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' greater' → logprob: -1.1752313375473022
    2. 'greater' → logprob: -1.3002313375473022
    3. ' >=' → logprob: -1.5502313375473022
    4. '>=' → logprob: -1.6752313375473022
    5. ' at' → logprob: -4.925231456756592
    6. ' just' → logprob: -5.550231456756592
    7. 'at' → logprob: -5.550231456756592
    8. ' not' → logprob: -6.675231456756592
    9. 'just' → logprob: -7.050231456756592
    10. 'not' → logprob: -7.425231456756592

Token 154: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.021574923768639565
    2. ' least' → logprob: -3.8965749740600586
    3. 'most' → logprob: -8.146574974060059
    4. '
' → logprob: -8.521574974060059
    5. '   ' → logprob: -8.521574974060059
    6. '_le' → logprob: -9.896574974060059
    7. '```' → logprob: -9.896574974060059
    8. 'lest' → logprob: -10.021574974060059
    9. '  ' → logprob: -10.271574974060059
    10. 'le' → logprob: -10.271574974060059

Token 155: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0028053484857082367
    2. ' N' → logprob: -5.877805233001709
    3. '   ' → logprob: -16.002805709838867
    4. '
' → logprob: -16.377805709838867
    5. '	N' → logprob: -16.627805709838867
    6. ' ' → logprob: -16.877805709838867
    7. 'equal' → logprob: -17.627805709838867
    8. 'math' → logprob: -18.252805709838867
    9. ' equal' → logprob: -18.252805709838867
    10. '```' → logprob: -18.502805709838867

Token 156: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2254227101802826
    2. '
' → logprob: -1.725422739982605
    3. ' =' → logprob: -5.2254228591918945
    4. ' //' → logprob: -5.2254228591918945
    5. '    
' → logprob: -6.1004228591918945
    6. ':' → logprob: -6.6004228591918945
    7. ' /' → logprob: -6.8504228591918945
    8. ',' → logprob: -6.9754228591918945
    9. '//' → logprob: -7.4754228591918945
    10. ' and' → logprob: -7.4754228591918945

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005850838497281075
    2. 'import' → logprob: -8.625585556030273
    3. '```' → logprob: -9.000585556030273
    4. 'x' → logprob: -9.875585556030273
    5. 'X' → logprob: -9.875585556030273
    6. '    
' → logprob: -10.500585556030273
    7. '
' → logprob: -10.750585556030273
    8. ' X' → logprob: -10.750585556030273
    9. ' x' → logprob: -11.125585556030273
    10. '    ' → logprob: -11.125585556030273

Token 158: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0238540172576904
    2. 'X' → logprob: -1.6488540172576904
    3. 'import' → logprob: -2.3988540172576904
    4. ' min' → logprob: -2.3988540172576904
    5. 'min' → logprob: -2.7738540172576904
    6. ' X' → logprob: -3.1488540172576904
    7. 'x' → logprob: -3.8988540172576904
    8. 'for' → logprob: -4.1488542556762695
    9. 'low' → logprob: -4.1488542556762695
    10. ' for' → logprob: -4.2738542556762695

Token 159: ' This' (ID: 1328)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -1.4799708127975464
    2. 'import' → logprob: -1.7299708127975464
    3. 'min' → logprob: -1.8549708127975464
    4. 'low' → logprob: -2.729970932006836
    5. 'lower' → logprob: -2.979970932006836
    6. 'from' → logprob: -3.104970932006836
    7. 'X' → logprob: -3.229970932006836
    8. ' low' → logprob: -3.354970932006836
    9. 'start' → logprob: -3.604970932006836
    10. ' lower' → logprob: -3.854970932006836

Token 160: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.1985111236572266
    2. '#' → logprob: -2.3235111236572266
    3. 'possible' → logprob: -2.3235111236572266
    4. 'import' → logprob: -2.8235111236572266
    5. 'min' → logprob: -3.1985111236572266
    6. '   ' → logprob: -3.5735111236572266
    7. 'is' → logprob: -3.5735111236572266
    8. ' can' → logprob: -4.073511123657227
    9. ' #' → logprob: -4.198511123657227
    10. 'def' → logprob: -4.323511123657227

Token 161: ' done' (ID: 4167)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.025692010298371315
    2. 'math' → logprob: -3.7756919860839844
    3. '   ' → logprob: -6.900691986083984
    4. ' int' → logprob: -7.150691986083984
    5. ' N' → logprob: -8.025691986083984
    6. '    ' → logprob: -8.900691986083984
    7. 'int' → logprob: -9.025691986083984
    8. '(math' → logprob: -10.650691986083984
    9. ' ' → logprob: -11.275691986083984
    10. ' (' → logprob: -11.775691986083984

Token 162: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4463157653808594
    2. ' by' → logprob: -1.0713157653808594
    3. '    ' → logprob: -5.071315765380859
    4. ' using' → logprob: -5.321315765380859
    5. ' to' → logprob: -6.571315765380859
    6. ' as' → logprob: -6.821315765380859
    7. ' for' → logprob: -7.071315765380859
    8. ' math' → logprob: -7.696315765380859
    9. '  ' → logprob: -7.821315765380859
    10. ' with' → logprob: -8.32131576538086

Token 163: ' dividing' (ID: 94879)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.1802954375743866
    2. 'math' → logprob: -1.805295467376709
    3. '(math' → logprob: -8.30529499053955
    4. 'int' → logprob: -9.43029499053955
    5. ' int' → logprob: -9.80529499053955
    6. '   ' → logprob: -9.80529499053955
    7. ' (' → logprob: -10.43029499053955
    8. ' ' → logprob: -11.30529499053955
    9. ' N' → logprob: -11.55529499053955
    10. '    ' → logprob: -11.55529499053955

Token 164: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.4767186939716339
    2. 'N' → logprob: -1.2267186641693115
    3. ' (' → logprob: -2.8517186641693115
    4. '   ' → logprob: -4.726718902587891
    5. ' math' → logprob: -4.851718902587891
    6. 'math' → logprob: -5.851718902587891
    7. '(' → logprob: -5.976718902587891
    8. '(N' → logprob: -6.101718902587891
    9. ' the' → logprob: -6.351718902587891
    10. ' by' → logprob: -7.101718902587891

Token 165: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.05290250480175018
    2. ' /' → logprob: -3.4279024600982666
    3. 'by' → logprob: -4.802902698516846
    4. ' ' → logprob: -4.927902698516846
    5. '/' → logprob: -6.302902698516846
    6. '    ' → logprob: -7.052902698516846
    7. '   ' → logprob: -7.677902698516846
    8. '```' → logprob: -9.677902221679688
    9. ' -' → logprob: -9.802902221679688
    10. '  ' → logprob: -9.927902221679688

Token 166: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0052362410351634026
    2. ' ' → logprob: -5.2552361488342285
    3. '(' → logprob: -14.005236625671387
    4. '   ' → logprob: -14.630236625671387
    5. ' (' → logprob: -15.192736625671387
    6. '```' → logprob: -16.06773567199707
    7. '  ' → logprob: -16.50523567199707
    8. '
' → logprob: -16.50523567199707
    9. ' ' → logprob: -16.81773567199707
    10. 'the' → logprob: -16.88023567199707

Token 167: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003179975086823106
    2. ' ' → logprob: -5.753180027008057
    3. '(' → logprob: -14.378179550170898
    4. '```' → logprob: -15.190679550170898
    5. '   ' → logprob: -15.253179550170898
    6. ' (' → logprob: -15.253179550170898
    7. '
' → logprob: -15.878179550170898
    8. '

' → logprob: -16.6281795501709
    9. '`' → logprob: -16.8156795501709
    10. 'import' → logprob: -16.8781795501709

Token 168: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -9.710618905955926e-05
    2. ' .' → logprob: -9.875097274780273
    3. '1' → logprob: -10.750097274780273
    4. '0' → logprob: -12.375097274780273
    5. '/' → logprob: -12.625097274780273
    6. ' ' → logprob: -12.937597274780273
    7. '
' → logprob: -13.000097274780273
    8. '\.' → logprob: -13.187597274780273
    9. '```' → logprob: -13.312597274780273
    10. 'def' → logprob: -14.125097274780273

Token 169: '08' (ID: 3062)
  Prédit: '08'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '08' → logprob: -5.9153885558771435e-06
    2. '0' → logprob: -13.812505722045898
    3. '080' → logprob: -13.937505722045898
    4. '081' → logprob: -14.187505722045898
    5. '
' → logprob: -14.875005722045898
    6. ' ' → logprob: -15.000005722045898
    7. '```' → logprob: -15.000005722045898
    8. '089' → logprob: -15.125005722045898
    9. '8' → logprob: -15.437505722045898
    10. '18' → logprob: -15.875005722045898

Token 170: ' and' (ID: 326)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.08949509263038635
    2. '/' → logprob: -2.9644951820373535
    3. '   ' → logprob: -3.8394951820373535
    4. ',' → logprob: -5.0894951820373535
    5. ')' → logprob: -6.0894951820373535
    6. '/N' → logprob: -6.7144951820373535
    7. ' ' → logprob: -7.4644951820373535
    8. ' /
' → logprob: -7.7144951820373535
    9. '/n' → logprob: -7.9644951820373535
    10. '    ' → logprob: -8.339494705200195

Token 171: ' rounding' (ID: 112605)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.6351034641265869
    2. ' math' → logprob: -0.7601034641265869
    3. 'import' → logprob: -6.885103225708008
    4. '(math' → logprob: -7.260103225708008
    5. ' rounding' → logprob: -8.510103225708008
    6. ')' → logprob: -9.010103225708008
    7. '.math' → logprob: -9.635103225708008
    8. ' using' → logprob: -10.135103225708008
    9. '_math' → logprob: -10.135103225708008
    10. 'round' → logprob: -10.385103225708008

Token 172: ' up' (ID: 869)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.2689521312713623
    2. ' up' → logprob: -1.7689521312713623
    3. 'down' → logprob: -3.0189521312713623
    4. 'math' → logprob: -5.143952369689941
    5. ' math' → logprob: -5.893952369689941
    6. ' down' → logprob: -6.018952369689941
    7. '	up' → logprob: -6.893952369689941
    8. '1' → logprob: -6.893952369689941
    9. '0' → logprob: -7.268952369689941
    10. '(math' → logprob: -7.268952369689941

Token 173: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004809722304344177
    2. ',' → logprob: -6.004809856414795
    3. '(' → logprob: -7.629809856414795
    4. '.' → logprob: -8.004809379577637
    5. ')' → logprob: -8.254809379577637
    6. ' (' → logprob: -8.504809379577637
    7. '    ' → logprob: -8.629809379577637
    8. '()' → logprob: -8.629809379577637
    9. ' to' → logprob: -9.379809379577637
    10. ':' → logprob: -9.504809379577637

Token 174: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6409281492233276
    2. ' math' → logprob: -1.0159281492233276
    3. 'math' → logprob: -2.765928268432617
    4. 'int' → logprob: -4.015928268432617
    5. 'the' → logprob: -4.140928268432617
    6. ' int' → logprob: -5.140928268432617
    7. ')' → logprob: -5.265928268432617
    8. ' get' → logprob: -6.765928268432617
    9. 'get' → logprob: -7.515928268432617
    10. ' a' → logprob: -7.890928268432617

Token 175: ' next' (ID: 2613)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.968807578086853
    2. ')' → logprob: -1.218807578086853
    3. 'math' → logprob: -1.968807578086853
    4. 'next' → logprob: -2.4688076972961426
    5. ' math' → logprob: -3.2188076972961426
    6. ' next' → logprob: -3.8438076972961426
    7. 'int' → logprob: -4.093807697296143
    8. '```' → logprob: -4.968807697296143
    9. 'nearest' → logprob: -5.093807697296143
    10. 'ceil' → logprob: -5.343807697296143

Token 176: ' integer' (ID: 16336)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.457011878490448
    2. ' integer' → logprob: -1.7070119380950928
    3. ' math' → logprob: -2.8320119380950928
    4. ' int' → logprob: -3.2070119380950928
    5. 'int' → logprob: -3.4570119380950928
    6. ' )' → logprob: -4.082011699676514
    7. ')' → logprob: -4.332011699676514
    8. 'integer' → logprob: -5.082011699676514
    9. ' 
' → logprob: -5.207011699676514
    10. ' space' → logprob: -5.957011699676514

Token 177: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06171364337205887
    2. ',' → logprob: -3.436713695526123
    3. '    
' → logprob: -5.061713695526123
    4. ' ' → logprob: -5.186713695526123
    5. '    ' → logprob: -5.436713695526123
    6. '_' → logprob: -5.686713695526123
    7. ' ,' → logprob: -6.811713695526123
    8. '     
' → logprob: -7.186713695526123
    9. ' (' → logprob: -7.436713695526123
    10. '.' → logprob: -7.561713695526123

Token 178: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03228835389018059
    2. '
' → logprob: -4.407288551330566
    3. '```' → logprob: -4.407288551330566
    4. '    
' → logprob: -5.282288551330566
    5. '    ' → logprob: -7.407288551330566
    6. ' x' → logprob: -7.657288551330566
    7. '``' → logprob: -7.907288551330566
    8. 'x' → logprob: -8.407288551330566
    9. '`' → logprob: -9.657288551330566
    10. ' X' → logprob: -9.782288551330566

Token 179: ' X' (ID: 2127)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40544432401657104
    2. 'X' (adapté à ' X') → logprob: -1.9054443836212158
    3. ' X' → logprob: -2.405444383621216
    4. ' min' → logprob: -4.405444145202637
    5. ' original' → logprob: -4.405444145202637
    6. 'x' → logprob: -4.530444145202637
    7. ' x' → logprob: -4.530444145202637
    8. 'import' → logprob: -4.530444145202637
    9. ' import' → logprob: -5.280444145202637
    10. 'min' → logprob: -5.405444145202637

Token 180: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001937558175995946
    2. '=' → logprob: -6.251937389373779
    3. ' ' → logprob: -12.126937866210938
    4. ',' → logprob: -13.876937866210938
    5. '_' → logprob: -14.126937866210938
    6. ' =
' → logprob: -14.376937866210938
    7. 's' → logprob: -15.001937866210938
    8. ' ' → logprob: -15.251937866210938
    9. '=int' → logprob: -15.876937866210938
    10. 'import' → logprob: -16.751937866210938

Token 181: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.2015605866909027
    2. ' math' → logprob: -1.701560616493225
    3. 'int' → logprob: -9.076560974121094
    4. ' int' → logprob: -11.201560974121094
    5. ' ' → logprob: -11.826560974121094
    6. '(math' → logprob: -11.951560974121094
    7. '   ' → logprob: -12.701560974121094
    8. '  ' → logprob: -13.076560974121094
    9. ' -' → logprob: -15.951560974121094
    10. '```' → logprob: -16.576560974121094

Token 182: '.ceil' (ID: 60295)
  Prédit: '.ceil'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ceil' → logprob: -2.1888679839321412e-05
    2. '.' → logprob: -11.000021934509277
    3. '.floor' → logprob: -13.125021934509277
    4. ' .' → logprob: -13.375021934509277
    5. 'ceil' → logprob: -14.125021934509277
    6. '```' → logprob: -15.000021934509277
    7. 'import' → logprob: -15.250021934509277
    8. ' ceil' → logprob: -16.62502098083496
    9. '.ce' → logprob: -16.87502098083496
    10. '.inf' → logprob: -17.12502098083496

Token 183: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.10064149647951126
    2. '(' → logprob: -2.3506414890289307
    3. ' (' → logprob: -8.350641250610352
    4. '((' → logprob: -8.600641250610352
    5. '(
' → logprob: -11.725641250610352
    6. '(n' → logprob: -12.475641250610352
    7. '(X' → logprob: -14.100641250610352
    8. '(

' → logprob: -14.850641250610352
    9. '(float' → logprob: -14.975641250610352
    10. ')' → logprob: -15.350641250610352

Token 184: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.014260120689868927
    2. '/' → logprob: -4.264260292053223
    3. ' ' → logprob: -9.514260292053223
    4. '   ' → logprob: -12.014260292053223
    5. '    ' → logprob: -12.389260292053223
    6. ')' → logprob: -12.639260292053223
    7. '1' → logprob: -12.764260292053223
    8. ' /
' → logprob: -13.139260292053223
    9. '*' → logprob: -14.639260292053223
    10. 'div' → logprob: -14.951760292053223

Token 185: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04858805239200592
    2. ' ' → logprob: -3.0485880374908447
    3. '   ' → logprob: -15.048587799072266
    4. '(' → logprob: -16.548587799072266
    5. '
' → logprob: -17.048587799072266
    6. '```' → logprob: -17.048587799072266
    7. ')' → logprob: -17.173587799072266
    8. ' ' → logprob: -17.423587799072266
    9. '.' → logprob: -17.548587799072266
    10. '  ' → logprob: -17.548587799072266

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9795445849886164e-05
    2. ' ' → logprob: -9.750060081481934
    3. '
' → logprob: -14.375060081481934
    4. '   ' → logprob: -14.875060081481934
    5. '```' → logprob: -15.125060081481934
    6. '(' → logprob: -16.125059127807617
    7. '

' → logprob: -17.187559127807617
    8. ')' → logprob: -17.437559127807617
    9. '  ' → logprob: -17.812559127807617
    10. '	' → logprob: -18.000059127807617

Token 187: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -4.320199877838604e-07
    2. ' .' → logprob: -16.375
    3. '.
' → logprob: -16.5
    4. '0' → logprob: -17.0
    5. '
' → logprob: -17.125
    6. '‌.' → logprob: -17.125
    7. '<|end|>' → logprob: -17.75
    8. ' ' → logprob: -18.25
    9. '\.' → logprob: -18.5
    10. '1' → logprob: -18.5

Token 188: '08' (ID: 3062)
  Prédit: '08'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '08' → logprob: -0.008734176866710186
    2. '.' → logprob: -4.758734226226807
    3. '0' → logprob: -9.383733749389648
    4. ' ' → logprob: -11.383733749389648
    5. '
' → logprob: -11.633733749389648
    6. '8' → logprob: -12.258733749389648
    7. '084' → logprob: -12.883733749389648
    8. '   ' → logprob: -13.633733749389648
    9. '```' → logprob: -13.883733749389648
    10. '  ' → logprob: -14.383733749389648

Token 189: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. ' )' → logprob: -13.750001907348633
    3. ')
' → logprob: -14.750001907348633
    4. '))' → logprob: -15.125001907348633
    5. ')`' → logprob: -17.375001907348633
    6. '())' → logprob: -18.125001907348633
    7. '   ' → logprob: -18.125001907348633
    8. '()' → logprob: -18.375001907348633
    9. '),' → logprob: -18.750001907348633
    10. ')

' → logprob: -18.750001907348633

Token 190: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.399635910987854
    2. '
' → logprob: -1.399635910987854
    3. 'for' → logprob: -3.2746357917785645
    4. '    
' → logprob: -3.8996357917785645
    5. 'while' → logprob: -4.0246357917785645
    6. ' for' → logprob: -6.1496357917785645
    7. ' while' → logprob: -6.7746357917785645
    8. '<|end|>' → logprob: -7.0246357917785645
    9. '  
' → logprob: -7.1496357917785645
    10. '```' → logprob: -7.2746357917785645

Token 191: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9023348093032837
    2. 'while' → logprob: -1.4023348093032837
    3. '   ' → logprob: -1.5273348093032837
    4. '#' (adapté à ' #') → logprob: -2.777334690093994
    5. 'if' → logprob: -2.902334690093994
    6. '
' → logprob: -5.277334690093994
    7. ' for' → logprob: -5.902334690093994
    8. ' while' → logprob: -6.402334690093994
    9. '```' → logprob: -6.402334690093994
    10. '    
' → logprob: -6.527334690093994

Token 192: ' Multiply' (ID: 137658)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8158583045005798
    2. 'while' → logprob: -0.8158583045005798
    3. '#' → logprob: -2.4408583641052246
    4. 'possible' → logprob: -4.815858364105225
    5. 'found' → logprob: -5.190858364105225
    6. 'if' → logprob: -5.690858364105225
    7. 'candidate' → logprob: -6.065858364105225
    8. 'Y' → logprob: -6.690858364105225
    9. 'Check' → logprob: -6.815858364105225
    10. ' while' → logprob: -6.815858364105225

Token 193: ' X' (ID: 2127)
  Prédit: ' X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.3507905602455139
    2. 'X' → logprob: -1.2257905006408691
    3. ' original' → logprob: -6.600790500640869
    4. 'original' → logprob: -8.100790977478027
    5. '   ' → logprob: -8.225790977478027
    6. ' the' → logprob: -8.725790977478027
    7. '(X' → logprob: -10.100790977478027
    8. ' for' → logprob: -10.475790977478027
    9. ' by' → logprob: -10.850790977478027
    10. 'the' → logprob: -10.850790977478027

Token 194: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.13019691407680511
    2. '*' → logprob: -3.1301968097686768
    3. 'by' → logprob: -3.1301968097686768
    4. ' *' → logprob: -3.3801968097686768
    5. ' ' → logprob: -8.630196571350098
    6. ',' → logprob: -9.130196571350098
    7. '   ' → logprob: -9.380196571350098
    8. ')' → logprob: -10.005196571350098
    9. '<|end|>' → logprob: -10.255196571350098
    10. '```' → logprob: -10.630196571350098

Token 195: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4287046194076538
    2. ' ' → logprob: -1.0537046194076538
    3. 'int' → logprob: -14.428704261779785
    4. ' math' → logprob: -14.678704261779785
    5. ' the' → logprob: -14.991204261779785
    6. '<|end|>' → logprob: -14.991204261779785
    7. '```' → logprob: -15.116204261779785
    8. '   ' → logprob: -15.178704261779785
    9. '  ' → logprob: -15.178704261779785
    10. ' tax' → logprob: -15.366204261779785

Token 196: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001172129064798355
    2. ' ' → logprob: -6.751172065734863
    3. 'int' → logprob: -14.001172065734863
    4. 'math' → logprob: -14.751172065734863
    5. '(' → logprob: -16.00117301940918
    6. '```' → logprob: -16.31367301940918
    7. '  ' → logprob: -16.43867301940918
    8. '0' → logprob: -16.68867301940918
    9. 'tax' → logprob: -16.81367301940918
    10. ' math' → logprob: -16.93867301940918

Token 197: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -2.816093228830141e-06
    2. ' .' → logprob: -13.00000286102295
    3. '<|end|>' → logprob: -15.87500286102295
    4. '0' → logprob: -16.750001907348633
    5. '.
' → logprob: -17.250001907348633
    6. '٫' → logprob: -17.500001907348633
    7. '`.' → logprob: -17.625001907348633
    8. '‌.' → logprob: -17.750001907348633
    9. 'point' → logprob: -18.062501907348633
    10. ' ' → logprob: -18.062501907348633

Token 198: '08' (ID: 3062)
  Prédit: '08'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '08' → logprob: -4.320199877838604e-07
    2. '0' → logprob: -15.5
    3. '.' → logprob: -16.375
    4. '8' → logprob: -16.75
    5. ' ' → logprob: -17.25
    6. '```' → logprob: -17.25
    7. 'def' → logprob: -18.5
    8. '07' → logprob: -18.875
    9. '
' → logprob: -19.0
    10. '080' → logprob: -19.3125

Token 199: ' and' (ID: 326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10377463698387146
    2. ' *' → logprob: -3.2287745475769043
    3. ' )' → logprob: -3.6037745475769043
    4. '*' → logprob: -4.228774547576904
    5. ' and' → logprob: -4.853774547576904
    6. '<|end|>' → logprob: -5.478774547576904
    7. ' ' → logprob: -6.728774547576904
    8. '   ' → logprob: -6.978774547576904
    9. ')
' → logprob: -7.228774547576904
    10. ',' → logprob: -7.853774547576904

Token 200: ' take' (ID: 2304)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.5859775543212891
    2. ' math' → logprob: -0.9609775543212891
    3. 'int' → logprob: -3.085977554321289
    4. 'import' → logprob: -5.460977554321289
    5. 'floor' → logprob: -5.960977554321289
    6. ' int' → logprob: -6.085977554321289
    7. ' floor' → logprob: -6.710977554321289
    8. 'if' → logprob: -7.085977554321289
    9. ' apply' → logprob: -7.210977554321289
    10. ' use' → logprob: -7.585977554321289

Token 201: ' the' (ID: 290)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.18377511203289032
    2. ' math' → logprob: -1.8087750673294067
    3. ' the' → logprob: -6.058774948120117
    4. 'int' → logprob: -6.933774948120117
    5. 'the' → logprob: -7.308774948120117
    6. '(math' → logprob: -10.808774948120117
    7. ' int' → logprob: -11.308774948120117
    8. '.math' → logprob: -12.808774948120117
    9. 'floor' → logprob: -13.558774948120117
    10. '   ' → logprob: -13.683774948120117

Token 202: ' floor' (ID: 8350)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.022879108786582947
    2. ' math' → logprob: -4.147879123687744
    3. 'int' → logprob: -5.022879123687744
    4. 'floor' → logprob: -8.897878646850586
    5. ' int' → logprob: -10.147878646850586
    6. '.math' → logprob: -10.772878646850586
    7. 'import' → logprob: -10.772878646850586
    8. '(math' → logprob: -11.522878646850586
    9. ' floor' → logprob: -13.397878646850586
    10. '/math' → logprob: -13.772878646850586

Token 203: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15208399295806885
    2. '()' → logprob: -2.5270838737487793
    3. ' to' → logprob: -3.7770838737487793
    4. ',' → logprob: -4.402083873748779
    5. '(X' → logprob: -5.527083873748779
    6. 'def' → logprob: -6.277083873748779
    7. 'value' → logprob: -6.402083873748779
    8. ':' → logprob: -6.402083873748779
    9. ' value' → logprob: -6.527083873748779
    10. '(' → logprob: -6.527083873748779

Token 204: ' simulate' (ID: 66687)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4945865273475647
    2. ' check' → logprob: -1.36958646774292
    3. ' int' → logprob: -2.86958646774292
    4. ' math' → logprob: -3.86958646774292
    5. ')' → logprob: -3.99458646774292
    6. 'check' → logprob: -4.86958646774292
    7. 'math' → logprob: -4.86958646774292
    8. '=int' → logprob: -4.99458646774292
    9. '_check' → logprob: -5.36958646774292
    10. '_int' → logprob: -5.61958646774292

Token 205: ' price' (ID: 3911)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.3590410649776459
    2. ' int' → logprob: -2.2340409755706787
    3. 'int' → logprob: -2.6090409755706787
    4. ' the' → logprob: -2.7340409755706787
    5. 'math' → logprob: -3.2340409755706787
    6. ' tax' → logprob: -4.359041213989258
    7. 'the' → logprob: -5.859041213989258
    8. 'tax' → logprob: -7.984041213989258
    9. ' original' → logprob: -9.109041213989258
    10. ' ' → logprob: -9.359041213989258

Token 206: ' after' (ID: 1934)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2387943267822266
    2. ' calculation' → logprob: -1.6137943267822266
    3. ' *' → logprob: -2.1137943267822266
    4. ' after' → logprob: -2.7387943267822266
    5. '_tax' → logprob: -3.1137943267822266
    6. ' rounding' → logprob: -3.2387943267822266
    7. '*' → logprob: -3.3637943267822266
    8. 'def' → logprob: -3.6137943267822266
    9. ' tax' → logprob: -4.113794326782227
    10. 'inclusive' → logprob: -4.238794326782227

Token 207: ' tax' (ID: 5577)
  Prédit: 'tax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tax' → logprob: -0.18875949084758759
    2. ' tax' → logprob: -1.938759446144104
    3. 'math' → logprob: -4.0637593269348145
    4. ' math' → logprob: -5.1887593269348145
    5. 'app' → logprob: -6.0637593269348145
    6. 'int' → logprob: -7.0637593269348145
    7. ' applying' → logprob: -7.5637593269348145
    8. ' taxing' → logprob: -7.5637593269348145
    9. '_tax' → logprob: -8.188759803771973
    10. '-tax' → logprob: -8.313759803771973

Token 208: ' as' (ID: 472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003219422185793519
    2. ',' → logprob: -6.0032196044921875
    3. ':' → logprob: -8.503219604492188
    4. '.' → logprob: -8.628219604492188
    5. 'price' → logprob: -9.753219604492188
    6. ')' → logprob: -10.003219604492188
    7. 'amount' → logprob: -10.253219604492188
    8. ' price' → logprob: -10.878219604492188
    9. ' after' → logprob: -11.003219604492188
    10. '    
' → logprob: -11.003219604492188

Token 209: ' stores' (ID: 14604)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06951060891151428
    2. 'math' → logprob: -3.6945106983184814
    3. ' int' → logprob: -4.444510459899902
    4. 'cal' → logprob: -4.694510459899902
    5. ' math' → logprob: -4.819510459899902
    6. 'paid' → logprob: -4.944510459899902
    7. 'tax' → logprob: -6.569510459899902
    8. 'in' → logprob: -6.819510459899902
    9. 'per' → logprob: -6.944510459899902
    10. ' in' → logprob: -7.694510459899902

Token 210: ' display' (ID: 4589)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027525264769792557
    2. 'apply' → logprob: -4.527525424957275
    3. ' apply' → logprob: -5.527525424957275
    4. 'do' → logprob: -5.527525424957275
    5. 'calculate' → logprob: -6.402525424957275
    6. ' often' → logprob: -7.027525424957275
    7. 'would' → logprob: -7.027525424957275
    8. ' would' → logprob: -7.402525424957275
    9. ' do' → logprob: -7.402525424957275
    10. 'often' → logprob: -7.652525424957275

Token 211: ' it' (ID: 480)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00680524529889226
    2. 'ed' → logprob: -6.381805419921875
    3. 'price' → logprob: -6.756805419921875
    4. ' price' → logprob: -7.131805419921875
    5. '.' → logprob: -7.381805419921875
    6. ',' → logprob: -7.631805419921875
    7. ':' → logprob: -7.881805419921875
    8. '_price' → logprob: -8.381805419921875
    9. ' tax' → logprob: -9.256805419921875
    10. '
' → logprob: -9.381805419921875

Token 212: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009056497365236282
    2. '.' → logprob: -5.134056568145752
    3. ',' → logprob: -6.134056568145752
    4. ')' → logprob: -8.259056091308594
    5. ':' → logprob: -8.884056091308594
    6. '
' → logprob: -9.509056091308594
    7. '<|end|>' → logprob: -9.634056091308594
    8. '.
' → logprob: -9.759056091308594
    9. '    
' → logprob: -9.759056091308594
    10. '<|end|>' → logprob: -9.884056091308594

Token 213: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029514357447624207
    2. 'price' → logprob: -7.502951622009277
    3. ' price' → logprob: -7.502951622009277
    4. ' taxed' → logprob: -7.752951622009277
    5. 'tax' → logprob: -8.002951622009277
    6. ' tax' → logprob: -8.252951622009277
    7. ' if' → logprob: -9.127951622009277
    8. 'if' → logprob: -9.627951622009277
    9. 'floor' → logprob: -9.627951622009277
    10. '    
' → logprob: -9.627951622009277

Token 214: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5475501418113708
    2. ' price' → logprob: -2.2975502014160156
    3. 'price' → logprob: -2.6725502014160156
    4. 'tax' → logprob: -2.9225502014160156
    5. ' Y' → logprob: -3.2975502014160156
    6. ' if' → logprob: -3.9225502014160156
    7. 'if' → logprob: -3.9225502014160156
    8. 'Y' → logprob: -4.047550201416016
    9. ' taxed' → logprob: -4.172550201416016
    10. ' tax' → logprob: -4.172550201416016

Token 215: ' If' (ID: 1843)
  Prédit: 'tax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tax' → logprob: -1.3265138864517212
    2. ' price' → logprob: -1.8265138864517212
    3. ' tax' → logprob: -2.4515137672424316
    4. 'price' → logprob: -2.4515137672424316
    5. ' taxed' → logprob: -2.4515137672424316
    6. ' original' → logprob: -3.3265137672424316
    7. 'if' → logprob: -3.7015137672424316
    8. ' total' → logprob: -3.7015137672424316
    9. 'cal' → logprob: -3.7015137672424316
    10. ' after' → logprob: -3.9515137672424316

Token 216: ' this' (ID: 495)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.525168776512146
    2. ' math' → logprob: -0.900168776512146
    3. 'int' → logprob: -7.2751688957214355
    4. '(math' → logprob: -7.7751688957214355
    5. ' int' → logprob: -8.025168418884277
    6. ' ' → logprob: -8.775168418884277
    7. 'X' → logprob: -8.900168418884277
    8. ' X' → logprob: -9.025168418884277
    9. '   ' → logprob: -9.150168418884277
    10. ' (' → logprob: -10.275168418884277

Token 217: ' equals' (ID: 29702)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.8822010159492493
    2. 'flo' → logprob: -1.2572009563446045
    3. ' floor' → logprob: -2.7572009563446045
    4. '#' → logprob: -2.8822009563446045
    5. ' flo' → logprob: -3.5072009563446045
    6. ' is' → logprob: -3.7572009563446045
    7. ' ==' → logprob: -4.007201194763184
    8. '*' → logprob: -4.132201194763184
    9. 'result' → logprob: -4.507201194763184
    10. 'cal' → logprob: -4.882201194763184

Token 218: ' the' (ID: 290)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.16029226779937744
    2. 'N' → logprob: -1.9102922677993774
    3. ' ' → logprob: -10.785292625427246
    4. ' the' → logprob: -11.535292625427246
    5. ' math' → logprob: -12.035292625427246
    6. 'n' → logprob: -12.285292625427246
    7. ' X' → logprob: -12.535292625427246
    8. ',' → logprob: -12.785292625427246
    9. '   ' → logprob: -13.035292625427246
    10. 'X' → logprob: -13.285292625427246

Token 219: ' amount' (ID: 4527)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.014428620226681232
    2. ' N' → logprob: -4.264428615570068
    3. 'paid' → logprob: -9.139429092407227
    4. ' paid' → logprob: -10.014429092407227
    5. 'int' → logprob: -10.889429092407227
    6. ' math' → logprob: -11.264429092407227
    7. '   ' → logprob: -11.639429092407227
    8. 'math' → logprob: -11.764429092407227
    9. 'tax' → logprob: -12.014429092407227
    10. 'input' → logprob: -12.451929092407227

Token 220: ' paid' (ID: 9927)
  Prédit: ' paid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' paid' → logprob: -0.4195844233036041
    2. 'paid' → logprob: -2.1695845127105713
    3. ' N' → logprob: -2.5445845127105713
    4. '_paid' → logprob: -2.7945845127105713
    5. '   ' → logprob: -2.9195845127105713
    6. 'N' → logprob: -3.9195845127105713
    7. '_' → logprob: -5.919584274291992
    8. ',' → logprob: -6.169584274291992
    9. '
' → logprob: -6.294584274291992
    10. ' ' → logprob: -7.294584274291992

Token 221: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005928678438067436
    2. ':' → logprob: -5.8809285163879395
    3. '   ' → logprob: -6.0059285163879395
    4. ' (' → logprob: -8.255928993225098
    5. ' ,' → logprob: -9.255928993225098
    6. '(N' → logprob: -9.380928993225098
    7. '(' → logprob: -10.005928993225098
    8. 'N' → logprob: -10.255928993225098
    9. ',
' → logprob: -10.505928993225098
    10. ',N' → logprob: -11.380928993225098

Token 222: ' then' (ID: 1815)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01982725039124489
    2. ' print' → logprob: -5.019827365875244
    3. ' if' → logprob: -5.394827365875244
    4. 'print' → logprob: -6.144827365875244
    5. '       ' → logprob: -6.269827365875244
    6. ' return' → logprob: -6.644827365875244
    7. ' continue' → logprob: -7.144827365875244
    8. '    ' → logprob: -7.769827365875244
    9. ' then' → logprob: -8.019826889038086
    10. 'if' → logprob: -8.144826889038086

Token 223: ' X' (ID: 2127)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.49294397234916687
    2. 'print' → logprob: -1.2429440021514893
    3. '   ' → logprob: -2.6179440021514893
    4. ' X' → logprob: -3.9929440021514893
    5. 'X' → logprob: -5.74294376373291
    6. ' the' → logprob: -6.36794376373291
    7. ' for' → logprob: -6.61794376373291
    8. ' original' → logprob: -6.86794376373291
    9. '    ' → logprob: -7.36794376373291
    10. ' ' → logprob: -8.61794376373291

Token 224: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.04163047671318054
    2. 'is' → logprob: -4.166630268096924
    3. ')' → logprob: -5.166630268096924
    4. ' can' → logprob: -5.666630268096924
    5. ' has' → logprob: -5.791630268096924
    6. '   ' → logprob: -5.916630268096924
    7. '*' → logprob: -6.541630268096924
    8. ' represents' → logprob: -6.541630268096924
    9. ' *' → logprob: -6.666630268096924
    10. ',' → logprob: -6.666630268096924

Token 225: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.0235079787671566
    2. 'the' → logprob: -3.773508071899414
    3. ' a' → logprob: -9.023508071899414
    4. '   ' → logprob: -10.148508071899414
    5. ' correct' → logprob: -10.773508071899414
    6. ' an' → logprob: -10.898508071899414
    7. ' valid' → logprob: -10.898508071899414
    8. ' your' → logprob: -11.273508071899414
    9. ' possible' → logprob: -12.398508071899414
    10. '<|end|>' → logprob: -12.648508071899414

Token 226: ' original' (ID: 4756)
  Prédit: 'original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'original' → logprob: -0.4183204174041748
    2. ' original' → logprob: -1.4183204174041748
    3. 'possible' → logprob: -2.543320417404175
    4. 'correct' → logprob: -4.918320655822754
    5. ' possible' → logprob: -5.668320655822754
    6. 'valid' → logprob: -5.793320655822754
    7. ' correct' → logprob: -5.918320655822754
    8. 'answer' → logprob: -6.043320655822754
    9. ' valid' → logprob: -7.293320655822754
    10. ' answer' → logprob: -7.793320655822754

Token 227: ' price' (ID: 3911)
  Prédit: ' price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' price' → logprob: -0.15933601558208466
    2. '_price' → logprob: -2.0343360900878906
    3. 'price' → logprob: -4.409336090087891
    4. '_' → logprob: -6.409336090087891
    5. ' ' → logprob: -6.659336090087891
    6. '	price' → logprob: -7.909336090087891
    7. ' _' → logprob: -8.15933609008789
    8. ')' → logprob: -9.03433609008789
    9. '<|end|>' → logprob: -9.28433609008789
    10. ' original' → logprob: -9.28433609008789

Token 228: ' before' (ID: 2254)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09801787883043289
    2. ',' → logprob: -2.473017930984497
    3. ':' → logprob: -5.348017692565918
    4. '.' → logprob: -5.723017692565918
    5. ',
' → logprob: -8.098017692565918
    6. ')' → logprob: -8.348017692565918
    7. ' and' → logprob: -8.973017692565918
    8. ' if' → logprob: -10.098017692565918
    9. '):' → logprob: -10.348017692565918
    10. ' ,' → logprob: -10.598017692565918

Token 229: ' tax' (ID: 5577)
  Prédit: 'tax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tax' → logprob: -0.016159415245056152
    2. ' tax' → logprob: -4.266159534454346
    3. '   ' → logprob: -6.391159534454346
    4. '
' → logprob: -9.141159057617188
    5. 'the' → logprob: -9.516159057617188
    6. '```' → logprob: -9.641159057617188
    7. '_tax' → logprob: -11.891159057617188
    8. ' ' → logprob: -11.891159057617188
    9. '税' → logprob: -12.266159057617188
    10. '.tax' → logprob: -12.391159057617188

Token 230: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1307048797607422
    2. ',' → logprob: -2.130704879760742
    3. ':' → logprob: -6.505704879760742
    4. ')' → logprob: -6.755704879760742
    5. '.' → logprob: -7.630704879760742
    6. '):' → logprob: -8.880704879760742
    7. ',
' → logprob: -9.380704879760742
    8. ' ,' → logprob: -9.505704879760742
    9. ' and' → logprob: -9.755704879760742
    10. '),' → logprob: -10.130704879760742

Token 231: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024933837354183197
    2. ' if' → logprob: -4.024933815002441
    3. 'if' → logprob: -5.399933815002441
    4. ' price' → logprob: -6.899933815002441
    5. 'price' → logprob: -7.649933815002441
    6. ' tax' → logprob: -8.149933815002441
    7. 'tax' → logprob: -9.024933815002441
    8. 'result' → logprob: -10.149933815002441
    9. ' result' → logprob: -10.524933815002441
    10. ' floor' → logprob: -10.899933815002441

Token 232: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7768524289131165
    2. '   ' → logprob: -1.4018523693084717
    3. 'if' (adapté à ' if') → logprob: -1.4018523693084717
    4. ' price' → logprob: -4.276852607727051
    5. 'price' → logprob: -4.651852607727051
    6. 'tax' → logprob: -5.151852607727051
    7. ' original' → logprob: -5.401852607727051
    8. ' tax' → logprob: -5.776852607727051
    9. ' for' → logprob: -5.901852607727051
    10. 'result' → logprob: -6.526852607727051

Token 233: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.4750843346118927
    2. ' math' → logprob: -0.9750843048095703
    3. 'int' → logprob: -7.97508430480957
    4. ' ' → logprob: -8.10008430480957
    5. '(math' → logprob: -8.60008430480957
    6. ' int' → logprob: -9.10008430480957
    7. '   ' → logprob: -10.22508430480957
    8. '  ' → logprob: -11.22508430480957
    9. ' (' → logprob: -12.60008430480957
    10. 'X' → logprob: -12.72508430480957

Token 234: '.floor' (ID: 23934)
  Prédit: '.floor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.floor' → logprob: -0.00040064091444946826
    2. 'floor' → logprob: -7.875400543212891
    3. ' floor' → logprob: -11.12540054321289
    4. '_floor' → logprob: -13.12540054321289
    5. ' .' → logprob: -13.25040054321289
    6. '.' → logprob: -14.00040054321289
    7. '.ceil' → logprob: -14.50040054321289
    8. 'Floor' → logprob: -15.25040054321289
    9. '```' → logprob: -15.62540054321289
    10. 'import' → logprob: -16.12540054321289

Token 235: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.00021045419271104038
    2. '(' → logprob: -9.000210762023926
    3. 'X' → logprob: -9.750210762023926
    4. ' (' → logprob: -10.875210762023926
    5. '((' → logprob: -11.875210762023926
    6. '(x' → logprob: -14.125210762023926
    7. '(N' → logprob: -14.750210762023926
    8. ')(' → logprob: -15.250210762023926
    9. ')' → logprob: -15.375210762023926
    10. ' X' → logprob: -15.625210762023926

Token 236: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5231502652168274
    2. '*' → logprob: -0.8981502652168274
    3. ' ' → logprob: -11.398150444030762
    4. '   ' → logprob: -11.898150444030762
    5. '1' → logprob: -12.273150444030762
    6. '```' → logprob: -14.148150444030762
    7. ' ' → logprob: -14.648150444030762
    8. '**' → logprob: -14.773150444030762
    9. '  ' → logprob: -14.773150444030762
    10. 's' → logprob: -14.898150444030762

Token 237: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00407923199236393
    2. ' ' → logprob: -5.504079341888428
    3. '   ' → logprob: -14.87907886505127
    4. '.' → logprob: -16.441579818725586
    5. '```' → logprob: -16.441579818725586
    6. '  ' → logprob: -16.816579818725586
    7. '(' → logprob: -17.316579818725586
    8. ')' → logprob: -17.316579818725586
    9. '<|end|>' → logprob: -17.441579818725586
    10. '
' → logprob: -17.629079818725586

Token 238: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.25001335144043
    3. '```' → logprob: -16.87501335144043
    4. '   ' → logprob: -17.25001335144043
    5. ')' → logprob: -18.31251335144043
    6. '(' → logprob: -18.37501335144043
    7. '0' → logprob: -18.43751335144043
    8. '
' → logprob: -18.56251335144043
    9. '.' → logprob: -18.81251335144043
    10. '`' → logprob: -18.87501335144043

Token 239: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.3306015716807451e-05
    2. '0' → logprob: -11.75001335144043
    3. '<|end|>' → logprob: -12.50001335144043
    4. ' .' → logprob: -14.37501335144043
    5. '.
' → logprob: -14.87501335144043
    6. ').' → logprob: -16.25001335144043
    7. '​.' → logprob: -16.75001335144043
    8. '<|end|>' → logprob: -16.81251335144043
    9. '‌.' → logprob: -16.87501335144043
    10. '1' → logprob: -17.06251335144043

Token 240: '08' (ID: 3062)
  Prédit: '08'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '08' → logprob: -9.088346359931165e-07
    2. '8' → logprob: -14.625000953674316
    3. '0' → logprob: -16.0
    4. '.' → logprob: -17.0
    5. '008' → logprob: -17.125
    6. ' ' → logprob: -17.75
    7. '```' → logprob: -17.75
    8. '084' → logprob: -17.875
    9. '085' → logprob: -18.5
    10. '108' → logprob: -18.625

Token 241: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.158350151963532e-05
    2. ')==' → logprob: -9.750061988830566
    3. ' )' → logprob: -13.125061988830566
    4. '==' → logprob: -13.875061988830566
    5. ')
' → logprob: -16.25006103515625
    6. '))' → logprob: -17.00006103515625
    7. '```' → logprob: -17.62506103515625
    8. '）' → logprob: -17.62506103515625
    9. ')=' → logprob: -17.87506103515625
    10. ')`' → logprob: -18.37506103515625

Token 242: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.38693565130233765
    2. ' ==' → logprob: -1.1369357109069824
    3. ')' → logprob: -10.011935234069824
    4. '=' → logprob: -11.761935234069824
    5. ')==' → logprob: -11.761935234069824
    6. '==
' → logprob: -13.886935234069824
    7. '()==' → logprob: -14.386935234069824
    8. '>=' → logprob: -14.386935234069824
    9. ' ' → logprob: -14.886935234069824
    10. ' ' → logprob: -14.886935234069824

Token 243: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0788901224732399
    2. ' N' → logprob: -2.578890085220337
    3. '	N' → logprob: -16.328889846801758
    4. ' ' → logprob: -16.453889846801758
    5. 'n' → logprob: -16.703889846801758
    6. '   ' → logprob: -16.953889846801758
    7. ' ' → logprob: -17.703889846801758
    8. '
' → logprob: -18.078889846801758
    9. '```' → logprob: -18.703889846801758
    10. ' 
' → logprob: -19.203889846801758

Token 244: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00593235157430172
    2. ':
' → logprob: -5.130932331085205
    3. '):' → logprob: -13.630932807922363
    4. '   ' → logprob: -14.255932807922363
    5. ':return' → logprob: -14.255932807922363
    6. '):
' → logprob: -14.755932807922363
    7. ':
' → logprob: -14.755932807922363
    8. ':

' → logprob: -15.630932807922363
    9. ':**' → logprob: -16.380931854248047
    10. ' :' → logprob: -16.505931854248047

Token 245: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.408677290892228e-05
    2. 'print' → logprob: -10.3750638961792
    3. ' print' → logprob: -10.5000638961792
    4. '   ' → logprob: -12.6250638961792
    5. '```' → logprob: -14.2500638961792
    6. '    ' → logprob: -14.8750638961792
    7. '        
' → logprob: -15.0000638961792
    8. ',' → logprob: -15.5000638961792
    9. '
' → logprob: -15.5000638961792
    10. '	print' → logprob: -16.625064849853516

Token 246: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.49259865283966064
    2. '       ' → logprob: -1.2425986528396606
    3. ' print' → logprob: -2.992598533630371
    4. '   ' → logprob: -2.992598533630371
    5. '	print' → logprob: -11.367598533630371
    6. '```' → logprob: -13.117598533630371
    7. '    ' → logprob: -13.992598533630371
    8. '    
' → logprob: -14.742598533630371
    9. '        
' → logprob: -15.117598533630371
    10. '           ' → logprob: -15.117598533630371

Token 247: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.0002848152944352478
    2. '(' → logprob: -8.750285148620605
    3. 'X' → logprob: -9.000285148620605
    4. '(int' → logprob: -13.375285148620605
    5. '(x' → logprob: -14.250285148620605
    6. '(f' → logprob: -15.125285148620605
    7. ' X' → logprob: -15.125285148620605
    8. '(
' → logprob: -16.25028419494629
    9. ' (' → logprob: -16.50028419494629
    10. '("' → logprob: -18.37528419494629

Token 248: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001036383560858667
    2. ')
' → logprob: -6.876036167144775
    3. '   ' → logprob: -12.876036643981934
    4. ' )' → logprob: -14.001036643981934
    5. ')
' → logprob: -16.251035690307617
    6. '")' → logprob: -17.126035690307617
    7. ')

' → logprob: -17.751035690307617
    8. '')' → logprob: -18.001035690307617
    9. ')#' → logprob: -18.001035690307617
    10. 'else' → logprob: -18.251035690307617

Token 249: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20162783563137054
    2. 'else' → logprob: -1.7016278505325317
    3. ' else' → logprob: -8.451627731323242
    4. '	else' → logprob: -14.076627731323242
    5. '```' → logprob: -15.951627731323242
    6. 'elif' → logprob: -16.451627731323242
    7. '_else' → logprob: -17.576627731323242
    8. '    
' → logprob: -18.326627731323242
    9. '
' → logprob: -18.701627731323242
    10. '  ' → logprob: -18.826627731323242

Token 250: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0010350722586736083
    2. '   ' → logprob: -7.001035213470459
    3. ' else' → logprob: -9.0010347366333
    4. 'elif' → logprob: -15.3760347366333
    5. '	else' → logprob: -17.376035690307617
    6. '_else' → logprob: -17.876035690307617
    7. 'elser' → logprob: -18.126035690307617
    8. 'elses' → logprob: -18.126035690307617
    9. ' ' → logprob: -18.376035690307617
    10. '```' → logprob: -19.001035690307617

Token 251: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01619073562324047
    2. ':
' → logprob: -4.141190528869629
    3. '       ' → logprob: -10.016190528869629
    4. '   ' → logprob: -10.516190528869629
    5. '():' → logprob: -10.641190528869629
    6. '():
' → logprob: -10.641190528869629
    7. ' :' → logprob: -10.641190528869629
    8. ' :
' → logprob: -12.141190528869629
    9. '):
' → logprob: -13.016190528869629
    10. '):' → logprob: -13.516190528869629

Token 252: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4331393241882324
    2. '       ' → logprob: -1.0581393241882324
    3. 'print' → logprob: -5.558139324188232
    4. ' print' → logprob: -7.558139324188232
    5. '    ' → logprob: -11.30813980102539
    6. '	print' → logprob: -11.55813980102539
    7. '   ' → logprob: -11.80813980102539
    8. '	   ' → logprob: -12.05813980102539
    9. '```' → logprob: -12.93313980102539
    10. '(' → logprob: -13.05813980102539

Token 253: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.027032257989048958
    2. '   ' → logprob: -3.6520323753356934
    3. '       ' → logprob: -7.777032375335693
    4. ' print' → logprob: -8.527031898498535
    5. ':' → logprob: -9.527031898498535
    6. '":' → logprob: -11.402031898498535
    7. '	print' → logprob: -11.777031898498535
    8. '    ' → logprob: -12.152031898498535
    9. '  ' → logprob: -12.277031898498535
    10. '(":' → logprob: -12.402031898498535

Token 254: ' If' (ID: 1843)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00028064317302778363
    2. '   ' → logprob: -8.875280380249023
    3. ' print' → logprob: -8.875280380249023
    4. ':' → logprob: -14.500280380249023
    5. '	print' → logprob: -15.625280380249023
    6. '       ' → logprob: -16.375280380249023
    7. '  ' → logprob: -17.000280380249023
    8. ' ' → logprob: -17.000280380249023
    9. 'Print' → logprob: -17.625280380249023
    10. ' :' → logprob: -17.750280380249023

Token 255: ' no' (ID: 860)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3124417066574097
    2. ' math' → logprob: -1.4374417066574097
    3. 'math' → logprob: -1.9374417066574097
    4. ':' → logprob: -2.062441825866699
    5. ' N' → logprob: -3.187441825866699
    6. ' ' → logprob: -3.312441825866699
    7. ' :(' → logprob: -3.812441825866699
    8. ' :' → logprob: -3.812441825866699
    9. '    ' → logprob: -4.312441825866699
    10. '(' → logprob: -4.437441825866699

Token 256: ' integer' (ID: 16336)
  Prédit: ' original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' original' → logprob: -0.4745977520942688
    2. ' valid' → logprob: -1.724597692489624
    3. ' possible' → logprob: -1.849597692489624
    4. 'original' → logprob: -3.974597692489624
    5. 'possible' → logprob: -4.974597930908203
    6. ' such' → logprob: -5.474597930908203
    7. ' price' → logprob: -5.849597930908203
    8. ' solution' → logprob: -6.099597930908203
    9. ' other' → logprob: -6.974597930908203
    10. ' (' → logprob: -6.974597930908203

Token 257: ' X' (ID: 2127)
  Prédit: ' price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' price' → logprob: -0.7948337197303772
    2. ' original' → logprob: -0.7948337197303772
    3. 'original' → logprob: -3.4198336601257324
    4. ' X' → logprob: -3.6698336601257324
    5. 'X' → logprob: -4.544833660125732
    6. 'price' → logprob: -4.919833660125732
    7. ' value' → logprob: -5.544833660125732
    8. ' ' → logprob: -5.669833660125732
    9. '(original' → logprob: -6.419833660125732
    10. ' satisfies' → logprob: -6.544833660125732

Token 258: ' matches' (ID: 15248)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.1680318117141724
    2. ' exists' → logprob: -1.7930318117141724
    3. 's' → logprob: -1.9180318117141724
    4. ' satisfies' → logprob: -2.168031692504883
    5. 'exists' → logprob: -2.668031692504883
    6. 'can' → logprob: -3.293031692504883
    7. '   ' → logprob: -3.543031692504883
    8. 'found' → logprob: -4.043031692504883
    9. '       ' → logprob: -4.168031692504883
    10. ':' → logprob: -4.293031692504883

Token 259: ' the' (ID: 290)
  Prédit: '(":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(":' → logprob: -0.8191834092140198
    2. ' :' → logprob: -1.319183349609375
    3. ' :(' → logprob: -2.194183349609375
    4. ':' → logprob: -2.694183349609375
    5. 'print' → logprob: -3.194183349609375
    6. '":' → logprob: -3.819183349609375
    7. '   ' → logprob: -4.444183349609375
    8. ' print' → logprob: -5.194183349609375
    9. ':
' → logprob: -5.194183349609375
    10. '       ' → logprob: -5.319183349609375

Token 260: ' criteria' (ID: 17572)
  Prédit: 'condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'condition' → logprob: -0.7841910719871521
    2. ' condition' → logprob: -1.6591911315917969
    3. 'price' → logprob: -2.909191131591797
    4. 'paid' → logprob: -3.034191131591797
    5. 'criteria' → logprob: -3.159191131591797
    6. ' given' → logprob: -3.284191131591797
    7. ' price' → logprob: -3.909191131591797
    8. ' criteria' → logprob: -4.034191131591797
    9. 'cal' → logprob: -4.034191131591797
    10. 'amount' → logprob: -4.034191131591797

Token 261: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9435737133026123
    2. '   ' → logprob: -1.3185737133026123
    3. ':
' → logprob: -2.0685737133026123
    4. '       ' → logprob: -2.1935737133026123
    5. ',' → logprob: -2.5685737133026123
    6. 'print' → logprob: -4.193573951721191
    7. '):' → logprob: -5.318573951721191
    8. '):
' → logprob: -5.693573951721191
    9. '():
' → logprob: -6.568573951721191
    10. '(":' → logprob: -7.068573951721191

Token 262: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.763505756855011
    2. 'print' → logprob: -1.2635056972503662
    3. ' print' → logprob: -1.3885056972503662
    4. '       ' → logprob: -6.388505935668945
    5. '	print' → logprob: -9.388505935668945
    6. ':' → logprob: -10.263505935668945
    7. '    ' → logprob: -10.263505935668945
    8. ' :' → logprob: -12.138505935668945
    9. ' ' → logprob: -12.263505935668945
    10. '  ' → logprob: -12.638505935668945

Token 263: ' sad' (ID: 14306)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '":' → logprob: -0.08419313281774521
    2. '(":' → logprob: -2.584193229675293
    3. ':(' → logprob: -5.584193229675293
    4. '"' → logprob: -7.334193229675293
    5. ' ":' → logprob: -7.709193229675293
    6. ' :(' → logprob: -8.084193229675293
    7. ':' → logprob: -9.834193229675293
    8. '":[' → logprob: -10.959193229675293
    9. '":"' → logprob: -11.584193229675293
    10. '("' → logprob: -11.959193229675293

Token 264: ' face' (ID: 4950)
  Prédit: ' :('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :(' → logprob: -0.2318275272846222
    2. ':(' → logprob: -2.6068274974823
    3. '":' → logprob: -2.8568274974823
    4. 'face' → logprob: -3.6068274974823
    5. ' face' → logprob: -3.6068274974823
    6. '(":' → logprob: -4.356827735900879
    7. ' ":' → logprob: -5.731827735900879
    8. ' :' → logprob: -5.981827735900879
    9. ':' → logprob: -6.481827735900879
    10. '(:' → logprob: -8.106827735900879

Token 265: '.
' (ID: 558)
  Prédit: '(":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(":' → logprob: -0.014206995256245136
    2. '":' → logprob: -4.639206886291504
    3. '   ' → logprob: -6.514206886291504
    4. ' :(' → logprob: -6.764206886291504
    5. ' ":' → logprob: -7.389206886291504
    6. '("' → logprob: -8.139206886291504
    7. ':' → logprob: -8.264206886291504
    8. ' :' → logprob: -8.389206886291504
    9. '       ' → logprob: -8.889206886291504
    10. ':(' → logprob: -9.264206886291504

Token 266: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1704491376876831
    2. '   ' → logprob: -1.920449137687683
    3. 'print' → logprob: -4.670449256896973
    4. ' print' → logprob: -7.170449256896973
    5. '    ' → logprob: -11.920449256896973
    6. ' :' → logprob: -12.295449256896973
    7. ':' → logprob: -12.420449256896973
    8. ' :(' → logprob: -12.420449256896973
    9. ' ' → logprob: -12.795449256896973
    10. '           ' → logprob: -12.795449256896973

Token 267: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00039706481038592756
    2. ' print' → logprob: -8.125396728515625
    3. ':' → logprob: -9.625396728515625
    4. '   ' → logprob: -10.875396728515625
    5. ':(' → logprob: -11.750396728515625
    6. '":' → logprob: -12.625396728515625
    7. '       ' → logprob: -13.500396728515625
    8. '):' → logprob: -14.000396728515625
    9. '(":' → logprob: -14.375396728515625
    10. ' :' → logprob: -14.625396728515625

Token 268: '(":' (ID: 40387)
  Prédit: '(":'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(":' → logprob: -0.000692420348059386
    2. '("' → logprob: -7.375692367553711
    3. '(' → logprob: -10.375692367553711
    4. '("("' → logprob: -10.625692367553711
    5. '("(' → logprob: -12.375692367553711
    6. '":' → logprob: -12.375692367553711
    7. '(:' → logprob: -14.375692367553711
    8. '(':' → logprob: -14.625692367553711
    9. ' :(' → logprob: -15.000692367553711
    10. ':(' → logprob: -15.125692367553711

Token 269: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.004101315978914499
    2. '(' → logprob: -5.504101276397705
    3. '(":' → logprob: -11.129101753234863
    4. '(">' → logprob: -12.754101753234863
    5. '("("' → logprob: -13.629101753234863
    6. '()' → logprob: -13.629101753234863
    7. '(:' → logprob: -14.629101753234863
    8. '('' → logprob: -14.629101753234863
    9. '("")' → logprob: -14.629101753234863
    10. '(("' → logprob: -14.754101753234863

Token 270: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006867633201181889
    2. '<|end|>' → logprob: -5.006867408752441
    3. '
' → logprob: -9.381867408752441
    4. '```' → logprob: -10.381867408752441
    5. '\n' → logprob: -11.131867408752441
    6. '")' → logprob: -11.881867408752441
    7. ')
' → logprob: -12.256867408752441
    8. '')' → logprob: -12.881867408752441
    9. '<|end|>' → logprob: -13.256867408752441
    10. '`)' → logprob: -13.381867408752441

Token 271: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 272: ' Call' (ID: 9238)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.06541723012924194
    2. 'g' → logprob: -3.4404172897338867
    3. '<|end|>' → logprob: -3.9404172897338867
    4. ')' → logprob: -5.690417289733887
    5. '```' → logprob: -5.940417289733887
    6. '#' → logprob: -6.190417289733887
    7. '(' → logprob: -6.315417289733887
    8. ' get' → logprob: -7.690417289733887
    9. '(get' → logprob: -7.940417289733887
    10. '
' → logprob: -8.690417289733887

Token 273: ' the' (ID: 290)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.5759645700454712
    2. 'get' → logprob: -0.8259645700454712
    3. '(get' → logprob: -10.70096492767334
    4. '_get' → logprob: -13.07596492767334
    5. ')get' → logprob: -15.82596492767334
    6. '=get' → logprob: -16.325963973999023
    7. '@get' → logprob: -16.700963973999023
    8. '[get' → logprob: -16.700963973999023
    9. '.get' → logprob: -16.825963973999023
    10. '()' → logprob: -17.075963973999023

Token 274: ' function' (ID: 1114)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -3.128163257315464e-07
    2. ' get' → logprob: -15.5
    3. 'def' → logprob: -18.0
    4. 'g' → logprob: -18.5
    5. 'ge' → logprob: -19.75
    6. '```' → logprob: -20.75
    7. '
' → logprob: -20.875
    8. '_get' → logprob: -22.0
    9. '.get' → logprob: -22.125
    10. '(get' → logprob: -22.375

Token 275: ' to' (ID: 316)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.006728279870003462
    2. '
' → logprob: -5.006728172302246
    3. '

' → logprob: -12.006728172302246
    4. '(get' → logprob: -12.381728172302246
    5. '
' → logprob: -13.131728172302246
    6. ' get' → logprob: -15.131728172302246
    7. '()
' → logprob: -16.006729125976562
    8. '```' → logprob: -16.131729125976562
    9. '.get' → logprob: -16.506729125976562
    10. '[get' → logprob: -17.006729125976562

Token 276: ' execute' (ID: 15792)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.00033558503491804004
    2. ' get' → logprob: -8.000335693359375
    3. '_get' → logprob: -16.625335693359375
    4. 'run' → logprob: -17.125335693359375
    5. 'execute' → logprob: -17.375335693359375
    6. 'calculate' → logprob: -17.625335693359375
    7. '```' → logprob: -18.250335693359375
    8. 'test' → logprob: -18.500335693359375
    9. '.get' → logprob: -19.375335693359375
    10. 'check' → logprob: -19.500335693359375

Token 277: ' the' (ID: 290)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.008649671450257301
    2. '
' → logprob: -4.758649826049805
    3. '

' → logprob: -10.883649826049805
    4. '(get' → logprob: -11.383649826049805
    5. '()
' → logprob: -13.008649826049805
    6. '
' → logprob: -13.508649826049805
    7. ' get' → logprob: -14.383649826049805
    8. '```' → logprob: -14.508649826049805
    9. '[get' → logprob: -16.508649826049805
    10. '.get' → logprob: -17.133649826049805

Token 278: ' process' (ID: 2273)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -6.24179228907451e-05
    2. ' get' → logprob: -9.875061988830566
    3. 'code' → logprob: -12.000061988830566
    4. 'function' → logprob: -12.625061988830566
    5. '_get' → logprob: -14.375061988830566
    6. 'program' → logprob: -15.125061988830566
    7. ' code' → logprob: -15.625061988830566
    8. '.get' → logprob: -16.500062942504883
    9. '```' → logprob: -17.000062942504883
    10. 'calculate' → logprob: -17.125062942504883

Token 279: '
' (ID: 198)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.01110371295362711
    2. '
' → logprob: -4.511103630065918
    3. '(get' → logprob: -10.011103630065918
    4. '

' → logprob: -12.261103630065918
    5. '()
' → logprob: -13.011103630065918
    6. '
' → logprob: -13.636103630065918
    7. ' get' → logprob: -14.261103630065918
    8. '[get' → logprob: -14.386103630065918
    9. '```' → logprob: -14.886103630065918
    10. '.get' → logprob: -14.886103630065918

Token 280: 'get' (ID: 522)
  Prédit: 'get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: 0.0
    2. ' get' → logprob: -19.5
    3. '```' → logprob: -23.625
    4. '[get' → logprob: -24.125
    5. '
' → logprob: -24.875
    6. '(get' → logprob: -25.25
    7. '	get' → logprob: -25.5
    8. '.get' → logprob: -26.0
    9. '_get' → logprob: -26.25
    10. ')get' → logprob: -26.375

Token 281: '_original' (ID: 92075)
  Prédit: '_original'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_original' → logprob: -5.080963092041202e-06
    2. '_orig' → logprob: -13.250004768371582
    3. '_' → logprob: -13.625004768371582
    4. 'original' → logprob: -14.125004768371582
    5. '_or' → logprob: -14.375004768371582
    6. '_origin' → logprob: -14.750004768371582
    7. 'Original' → logprob: -15.250004768371582
    8. '_ori' → logprob: -16.0000057220459
    9. '_org' → logprob: -17.6250057220459
    10. ' original' → logprob: -18.7500057220459

Token 282: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -6.2729995988775045e-06
    2. '_prices' → logprob: -13.250006675720215
    3. 'price' → logprob: -13.375006675720215
    4. '_code' → logprob: -13.750006675720215
    5. '_' → logprob: -14.375006675720215
    6. '_p' → logprob: -14.500006675720215
    7. '_get' → logprob: -15.750006675720215
    8. '_pr' → logprob: -16.2500057220459
    9. '_fee' → logprob: -16.5000057220459
    10. '_cost' → logprob: -16.7500057220459

Token 283: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -1.2113979209971149e-05
    2. '_for' → logprob: -12.375012397766113
    3. '_' → logprob: -12.500012397766113
    4. '_f' → logprob: -13.125012397766113
    5. '_price' → logprob: -14.250012397766113
    6. ' _' → logprob: -15.250012397766113
    7. '_form' → logprob: -15.625012397766113
    8. '_to' → logprob: -15.750012397766113
    9. ')_' → logprob: -16.125011444091797
    10. 'from' → logprob: -16.750011444091797

Token 284: '_tax' (ID: 61146)
  Prédit: '_tax'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tax' → logprob: -0.00462154159322381
    2. 'tax' → logprob: -5.379621505737305
    3. 'ax' → logprob: -15.379621505737305
    4. 'get' → logprob: -15.504621505737305
    5. ' tax' → logprob: -15.754621505737305
    6. 'axed' → logprob: -15.754621505737305
    7. '_' → logprob: -16.254621505737305
    8. 'Tax' → logprob: -16.754621505737305
    9. '_t' → logprob: -16.879621505737305
    10. ' taxed' → logprob: -17.004621505737305

Token 285: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.00017445837147533894
    2. '_amount' → logprob: -8.750174522399902
    3. '_paid' → logprob: -12.375174522399902
    4. 'es' → logprob: -13.625174522399902
    5. 'eded' → logprob: -14.000174522399902
    6. '_added' → logprob: -14.250174522399902
    7. 'ED' → logprob: -14.250174522399902
    8. '_price' → logprob: -14.250174522399902
    9. 'amount' → logprob: -14.375174522399902
    10. 'edf' → logprob: -14.500174522399902

Token 286: '_amount' (ID: 29145)
  Prédit: '_amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_amount' → logprob: -0.00016384923947043717
    2. '_price' → logprob: -8.750164031982422
    3. '_amt' → logprob: -12.375164031982422
    4. '_' → logprob: -14.750164031982422
    5. '_am' → logprob: -14.750164031982422
    6. '_cost' → logprob: -16.750164031982422
    7. '```' → logprob: -16.750164031982422
    8. 'amount' → logprob: -16.875164031982422
    9. '_a' → logprob: -17.000164031982422
    10. '_AMOUNT' → logprob: -17.125164031982422

Token 287: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 285
Tokens correctement prédits (1ère position, stricte): 102
Tokens correctement prédits (1ère position, avec adaptation): 105
Tokens correctement prédits (top 10): 190
Précision stricte (1ère position): 35.79%
Précision adaptée (1ère position): 36.84%
Précision (top 10): 66.67%
================================================================================
