================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:42:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import bisect, collections, copy, heapq, itertools, math, string
import numpy as np
import sys
sys.setrecursionlimit(10**7)

N = int(sys.stdin.readline().rstrip())
S = sys.stdin.readline().rstrip()

last = ''
count = 0
i = 0
while i < N:
    a = S[i]
    if last != a:
        count += 1
        last = a
    i += 1
print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' bis' (ID: 7204)
  → Token d'amorce (pas de prédiction)

Token 2: 'ect' (ID: 534)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00021271906734909862
    2. '(' → logprob: -8.875212669372559
    3. '.b' → logprob: -10.750212669372559
    4. '.\' → logprob: -11.125212669372559
    5. '\n' → logprob: -12.000212669372559
    6. '\' → logprob: -12.625212669372559
    7. '[' → logprob: -12.875212669372559
    8. '.`' → logprob: -13.125212669372559
    9. '

' → logprob: -13.250212669372559
    10. '.
' → logprob: -13.250212669372559

Token 4: ' collections' (ID: 22690)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.4593800902366638
    2. 'collections' → logprob: -1.8343801498413086
    3. 'sys' → logprob: -2.3343801498413086
    4. ' sys' → logprob: -3.3343801498413086
    5. ' heap' → logprob: -3.3343801498413086
    6. ' itertools' → logprob: -4.209380149841309
    7. ' collections' → logprob: -4.334380149841309
    8. 'math' → logprob: -4.959380149841309
    9. ' math' → logprob: -6.334380149841309
    10. 'it' → logprob: -6.459380149841309

Token 5: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.034235794097185135
    2. ',' → logprob: -4.159235954284668
    3. '
' → logprob: -5.534235954284668
    4. '

' → logprob: -5.659235954284668
    5. '\n' → logprob: -6.034235954284668
    6. '<|end|>' → logprob: -6.159235954284668
    7. 'import' → logprob: -6.534235954284668
    8. 'newline' → logprob: -6.909235954284668
    9. '\' → logprob: -7.034235954284668
    10. '```' → logprob: -7.534235954284668

Token 6: ' copy' (ID: 5150)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.8735180497169495
    2. ' heap' → logprob: -1.7485179901123047
    3. ' itertools' → logprob: -1.7485179901123047
    4. 'it' → logprob: -2.1235179901123047
    5. 'math' → logprob: -3.2485179901123047
    6. ' math' → logprob: -3.8735179901123047
    7. 'copy' → logprob: -3.8735179901123047
    8. ' functools' → logprob: -4.498517990112305
    9. 'datetime' → logprob: -5.373517990112305
    10. ' copy' → logprob: -5.748517990112305

Token 7: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25357571244239807
    2. '.' → logprob: -1.6285756826400757
    3. '<|end|>' → logprob: -4.003575801849365
    4. 'import' → logprob: -5.753575801849365
    5. '\n' → logprob: -6.503575801849365
    6. '\' → logprob: -6.878575801849365
    7. '[' → logprob: -7.378575801849365
    8. '
' → logprob: -7.503575801849365
    9. ',
' → logprob: -7.753575801849365
    10. '```' → logprob: -7.878575801849365

Token 8: ' heap' (ID: 37237)
  Prédit: 'datetime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'datetime' → logprob: -0.8044846653938293
    2. 'csv' → logprob: -1.3044846057891846
    3. ' functools' → logprob: -2.9294846057891846
    4. 'it' → logprob: -3.0544846057891846
    5. 'decimal' → logprob: -3.8044846057891846
    6. 'heap' → logprob: -3.8044846057891846
    7. 'fun' → logprob: -3.9294846057891846
    8. 'deque' → logprob: -4.054484844207764
    9. ' datetime' → logprob: -4.179484844207764
    10. ' itertools' → logprob: -4.429484844207764

Token 9: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -6.749814019713085e-06
    2. 'queue' → logprob: -12.875006675720215
    3. '_' → logprob: -13.500006675720215
    4. '.' → logprob: -13.500006675720215
    5. 's' → logprob: -15.125006675720215
    6. 'space' → logprob: -15.375006675720215
    7. ' ' → logprob: -15.750006675720215
    8. 'n' → logprob: -15.875006675720215
    9. '[' → logprob: -16.12500762939453
    10. ',' → logprob: -16.25000762939453

Token 10: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08416333049535751
    2. '.' → logprob: -2.8341634273529053
    3. 'import' → logprob: -4.459163188934326
    4. '<|end|>' → logprob: -4.834163188934326
    5. '```' → logprob: -7.834163188934326
    6. '

' → logprob: -7.834163188934326
    7. '\' → logprob: -8.084163665771484
    8. 'from' → logprob: -8.459163665771484
    9. '\n' → logprob: -8.459163665771484
    10. ' ,' → logprob: -8.834163665771484

Token 11: ' itertools' (ID: 103178)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.22649142146110535
    2. ' itertools' → logprob: -1.8514914512634277
    3. 'io' → logprob: -3.4764914512634277
    4. 'import' → logprob: -4.851491451263428
    5. 'math' → logprob: -5.476491451263428
    6. 'json' → logprob: -6.976491451263428
    7. ' io' → logprob: -7.601491451263428
    8. 'inspect' → logprob: -8.22649097442627
    9. 'html' → logprob: -8.35149097442627
    10. ',' → logprob: -9.10149097442627

Token 12: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003416770603507757
    2. '.' → logprob: -6.503416538238525
    3. '<|end|>' → logprob: -7.378416538238525
    4. 'import' → logprob: -7.503416538238525
    5. '```' → logprob: -7.878416538238525
    6. ' ,' → logprob: -9.753417015075684
    7. ',b' → logprob: -9.878417015075684
    8. ',n' → logprob: -9.878417015075684
    9. ',
' → logprob: -10.503417015075684
    10. '\n' → logprob: -10.503417015075684

Token 13: ' math' (ID: 13324)
  Prédit: 'json'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'json' → logprob: -0.6452311277389526
    2. 'math' → logprob: -1.2702311277389526
    3. ' json' → logprob: -2.020231246948242
    4. ' math' → logprob: -3.270231246948242
    5. 'operator' → logprob: -4.145231246948242
    6. ' operator' → logprob: -5.270231246948242
    7. 'keyword' → logprob: -7.770231246948242
    8. 'os' → logprob: -7.895231246948242
    9. 'random' → logprob: -8.020231246948242
    10. ' keyword' → logprob: -8.270231246948242

Token 14: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0035603928845375776
    2. '.' → logprob: -5.878560543060303
    3. 'import' → logprob: -8.503560066223145
    4. ',n' → logprob: -8.753560066223145
    5. '<|end|>' → logprob: -8.753560066223145
    6. '```' → logprob: -9.503560066223145
    7. ',b' → logprob: -10.378560066223145
    8. '\' → logprob: -11.128560066223145
    9. 'from' → logprob: -11.253560066223145
    10. '\n' → logprob: -11.253560066223145

Token 15: ' string' (ID: 1621)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'operator' → logprob: -0.10594253987073898
    2. ' operator' → logprob: -2.605942487716675
    3. 'random' → logprob: -3.855942487716675
    4. 'os' → logprob: -5.980942726135254
    5. 'numbers' → logprob: -6.605942726135254
    6. 're' → logprob: -7.230942726135254
    7. ' random' → logprob: -8.105942726135254
    8. 'numpy' → logprob: -8.980942726135254
    9. 'json' → logprob: -9.480942726135254
    10. ' multiprocessing' → logprob: -9.480942726135254

Token 16: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004098823759704828
    2. '.' → logprob: -6.004098892211914
    3. 'import' → logprob: -7.629098892211914
    4. '<|end|>' → logprob: -8.004098892211914
    5. ',
' → logprob: -8.629098892211914
    6. '\' → logprob: -9.004098892211914
    7. '\n' → logprob: -9.129098892211914
    8. ',n' → logprob: -9.129098892211914
    9. ',a' → logprob: -10.379098892211914
    10. ',

' → logprob: -10.504098892211914

Token 17: 'import' (ID: 561)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02436717413365841
    2. ',
' → logprob: -5.024367332458496
    3. '\n' → logprob: -5.399367332458496
    4. 'import' → logprob: -5.649367332458496
    5. '.' → logprob: -5.774367332458496
    6. '<|end|>' → logprob: -5.774367332458496
    7. '\' → logprob: -7.274367332458496
    8. '```' → logprob: -7.399367332458496
    9. ',

' → logprob: -7.774367332458496
    10. '
' → logprob: -7.774367332458496

Token 18: ' numpy' (ID: 19529)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.09875296801328659
    2. ' os' → logprob: -3.223752975463867
    3. ' re' → logprob: -4.098752975463867
    4. ' ' → logprob: -4.348752975463867
    5. ' random' → logprob: -4.598752975463867
    6. 'sys' → logprob: -4.848752975463867
    7. ' threading' → logprob: -5.848752975463867
    8. 'os' → logprob: -6.848752975463867
    9. ' operator' → logprob: -7.473752975463867
    10. 're' → logprob: -7.723752975463867

Token 19: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.08758378773927689
    2. '<|end|>' → logprob: -2.5875837802886963
    3. '.' → logprob: -5.212584018707275
    4. '.ndarray' → logprob: -6.337584018707275
    5. '<|end|>' → logprob: -7.712584018707275
    6. 'as' → logprob: -7.837584018707275
    7. ' .' → logprob: -8.462583541870117
    8. ' ' → logprob: -8.587583541870117
    9. '.random' → logprob: -10.587583541870117
    10. '.as' → logprob: -10.712583541870117

Token 20: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.048752348870038986
    2. ' ' → logprob: -3.2987523078918457
    3. ' numpy' → logprob: -5.298752307891846
    4. ' ' → logprob: -5.798752307891846
    5. 'np' → logprob: -6.173752307891846
    6. ' array' → logprob: -8.923752784729004
    7. '_numpy' → logprob: -9.423752784729004
    8. 'numpy' → logprob: -9.423752784729004
    9. ' ndarray' → logprob: -9.673752784729004
    10. 'array' → logprob: -10.548752784729004

Token 21: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 22: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1410800218582153
    2. ',' → logprob: -1.6410800218582153
    3. '.' → logprob: -2.141079902648926
    4. '

' → logprob: -2.516079902648926
    5. '```' → logprob: -2.516079902648926
    6. '<|end|>' → logprob: -2.516079902648926
    7. '\n' → logprob: -3.141079902648926
    8. 'import' → logprob: -3.266079902648926
    9. '[' → logprob: -4.766079902648926
    10. '' → logprob: -5.016079902648926

Token 23: ' sys' (ID: 12228)
  Prédit: ' pandas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pandas' → logprob: -0.026173263788223267
    2. ' tensorflow' → logprob: -3.9011733531951904
    3. ' torch' → logprob: -6.151173114776611
    4. ' scipy' → logprob: -6.151173114776611
    5. ' sklearn' → logprob: -7.526173114776611
    6. ' sys' → logprob: -7.901173114776611
    7. ' random' → logprob: -9.02617359161377
    8. ' matplotlib' → logprob: -9.40117359161377
    9. ' os' → logprob: -9.65117359161377
    10. 'tensorflow' → logprob: -9.65117359161377

Token 24: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3896030187606812
    2. '\n' → logprob: -1.5146030187606812
    3. '.' → logprob: -1.6396030187606812
    4. '<|end|>' → logprob: -2.0146031379699707
    5. '\' → logprob: -2.8896031379699707
    6. 'import' → logprob: -3.2646031379699707
    7. ',' → logprob: -3.3896031379699707
    8. '```' → logprob: -3.3896031379699707
    9. '

' → logprob: -4.139603137969971
    10. '#' → logprob: -4.764603137969971

Token 25: 'sys' (ID: 17324)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35877150297164917
    2. '\n' → logprob: -1.858771562576294
    3. '```' → logprob: -3.358771562576294
    4. '<|end|>' → logprob: -3.358771562576294
    5. 'import' → logprob: -3.983771562576294
    6. '\' → logprob: -4.483771324157715
    7. '

' → logprob: -4.483771324157715
    8. ',' → logprob: -4.608771324157715
    9. '.' → logprob: -4.858771324157715
    10. '' → logprob: -5.358771324157715

Token 26: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00011248346709180623
    2. ' .' → logprob: -9.750112533569336
    3. '.stdout' → logprob: -11.750112533569336
    4. '.setdefault' → logprob: -11.750112533569336
    5. '.exit' → logprob: -11.875112533569336
    6. '.readline' → logprob: -12.125112533569336
    7. '.argv' → logprob: -12.125112533569336
    8. '.stdin' → logprob: -13.000112533569336
    9. '[' → logprob: -13.375112533569336
    10. '.`' → logprob: -13.625112533569336

Token 27: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.0822475403547287
    2. '_rec' → logprob: -2.832247495651245
    3. '_limit' → logprob: -4.457247734069824
    4. '_trace' → logprob: -6.457247734069824
    5. '_version' → logprob: -7.332247734069824
    6. '_execution' → logprob: -7.332247734069824
    7. '_threshold' → logprob: -7.457247734069824
    8. '_exc' → logprob: -7.707247734069824
    9. '_int' → logprob: -7.707247734069824
    10. '_' → logprob: -7.957247734069824

Token 28: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.006236979737877846
    2. 'limit' → logprob: -5.631237030029297
    3. 'urs' → logprob: -6.506237030029297
    4. '_limit' → logprob: -7.631237030029297
    5. 'ur' → logprob: -7.881237030029297
    6. 'ursive' → logprob: -8.631237030029297
    7. 'set' → logprob: -11.006237030029297
    8. 'ut' → logprob: -11.006237030029297
    9. 'ision' → logprob: -11.131237030029297
    10. 'urf' → logprob: -11.631237030029297

Token 29: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.6344680190086365
    2. 'limit' → logprob: -0.7594680190086365
    3. '_depth' → logprob: -6.384468078613281
    4. 'depth' → logprob: -10.009468078613281
    5. '_lim' → logprob: -10.384468078613281
    6. ' limit' → logprob: -10.509468078613281
    7. 'lim' → logprob: -11.009468078613281
    8. '_stack' → logprob: -11.259468078613281
    9. '_LIMIT' → logprob: -11.259468078613281
    10. '_limits' → logprob: -11.384468078613281

Token 30: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.3319124011322856e-05
    2. '(
' → logprob: -11.500022888183594
    3. '(

' → logprob: -12.125022888183594
    4. '("("' → logprob: -12.625022888183594
    5. '<|end|>' → logprob: -13.875022888183594
    6. ' (' → logprob: -14.375022888183594
    7. '((' → logprob: -14.625022888183594
    8. '()' → logprob: -14.625022888183594
    9. '(**' → logprob: -15.000022888183594
    10. '(()' → logprob: -15.500022888183594

Token 31: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.018188457936048508
    2. '100' → logprob: -4.0181884765625
    3. '300' → logprob: -10.8931884765625
    4. '500' → logprob: -12.0181884765625
    5. '250' → logprob: -12.3931884765625
    6. ' ' → logprob: -12.3931884765625
    7. '200' → logprob: -13.2681884765625
    8. '400' → logprob: -13.5181884765625
    9. '1' → logprob: -14.0181884765625
    10. '999' → logprob: -14.3931884765625

Token 32: '**' (ID: 410)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.19290930032730103
    2. '6' → logprob: -2.1929092407226562
    3. '000' → logprob: -3.0679092407226562
    4. '00' → logprob: -5.067909240722656
    5. '8' → logprob: -5.442909240722656
    6. '**' → logprob: -5.442909240722656
    7. '0' → logprob: -6.692909240722656
    8. '5' → logprob: -7.567909240722656
    9. '07' → logprob: -7.692909240722656
    10. '007' → logprob: -9.192909240722656

Token 33: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.002110051456838846
    2. '9' → logprob: -6.252110004425049
    3. '8' → logprob: -8.627110481262207
    4. '6' → logprob: -13.002110481262207
    5. '**' → logprob: -18.62710952758789
    6. '```' → logprob: -18.75210952758789
    7. ' ' → logprob: -20.12710952758789
    8. '+' → logprob: -22.12710952758789
    9. ')' → logprob: -22.87710952758789
    10. '۷' → logprob: -23.00210952758789

Token 34: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ' )' → logprob: -13.375001907348633
    3. ')
' → logprob: -15.250001907348633
    4. '))' → logprob: -15.375001907348633
    5. ')

' → logprob: -18.250001907348633
    6. ')`' → logprob: -19.375001907348633
    7. ')))' → logprob: -19.500001907348633
    8. '(' → logprob: -19.625001907348633
    9. ' ' → logprob: -19.625001907348633
    10. '),' → logprob: -19.625001907348633

Token 35: 'N' (ID: 45)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21918010711669922
    2. '

' → logprob: -1.9691801071166992
    3. 'class' → logprob: -3.719180107116699
    4. 'd' → logprob: -3.969180107116699
    5. 'def' → logprob: -4.969180107116699
    6. '#' → logprob: -5.969180107116699
    7. 'n' → logprob: -6.344180107116699
    8. '
' → logprob: -6.719180107116699
    9. '\n' → logprob: -7.469180107116699
    10. '\' → logprob: -7.969180107116699

Token 36: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11511901766061783
    2. ' =' → logprob: -2.490118980407715
    3. '=' → logprob: -4.240118980407715
    4. ',' → logprob: -4.990118980407715
    5. ' ,' → logprob: -6.740118980407715
    6. '<|end|>' → logprob: -6.740118980407715
    7. ')' → logprob: -7.365118980407715
    8. '  ' → logprob: -7.615118980407715
    9. ' )' → logprob: -8.115118980407715
    10. '.' → logprob: -8.240118980407715

Token 37: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.17752769589424133
    2. ' ' → logprob: -2.052527666091919
    3. 'int' → logprob: -3.552527666091919
    4. '10' → logprob: -5.427527904510498
    5. '0' → logprob: -8.42752742767334
    6. '20' → logprob: -8.55252742767334
    7. '100' → logprob: -8.55252742767334
    8. '[int' → logprob: -8.55252742767334
    9. '32' → logprob: -9.42752742767334
    10. '=int' → logprob: -9.80252742767334

Token 38: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002887490263674408
    2. '(input' → logprob: -8.375288963317871
    3. '()' → logprob: -10.500288963317871
    4. '('' → logprob: -11.875288963317871
    5. 'input' → logprob: -12.125288963317871
    6. ' (' → logprob: -12.250288963317871
    7. '<|end|>' → logprob: -12.625288963317871
    8. ' ' → logprob: -13.250288963317871
    9. '(`' → logprob: -13.750288963317871
    10. '("' → logprob: -13.875288963317871

Token 39: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3115674555301666
    2. '.stdin' → logprob: -1.4365674257278442
    3. '.readline' → logprob: -3.561567544937134
    4. '.argv' → logprob: -6.936567306518555
    5. '.read' → logprob: -8.436567306518555
    6. '.input' → logprob: -8.561567306518555
    7. '.)' → logprob: -9.436567306518555
    8. ' .' → logprob: -9.936567306518555
    9. '.stdout' → logprob: -11.311567306518555
    10. '.')' → logprob: -11.561567306518555

Token 40: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.009783361107110977
    2. '.' → logprob: -4.7597832679748535
    3. '.read' → logprob: -6.7597832679748535
    4. '.stdin' → logprob: -12.509783744812012
    5. '.)' → logprob: -13.384783744812012
    6. '.Read' → logprob: -13.884783744812012
    7. '.readlines' → logprob: -14.259783744812012
    8. '.READ' → logprob: -14.259783744812012
    9. ' readline' → logprob: -15.259783744812012
    10. '.​' → logprob: -15.384783744812012

Token 41: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.006822054740041494
    2. '()' → logprob: -5.006822109222412
    3. '().' → logprob: -9.631821632385254
    4. ')' → logprob: -10.756821632385254
    5. ' ())' → logprob: -11.381821632385254
    6. '()))' → logprob: -13.006821632385254
    7. '(' → logprob: -13.631821632385254
    8. '()[' → logprob: -13.881821632385254
    9. '();)' → logprob: -13.881821632385254
    10. '()]' → logprob: -14.006821632385254

Token 42: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.03320068120956421
    2. 'read' → logprob: -3.783200740814209
    3. 'rstrip' → logprob: -4.658200740814209
    4. ')' → logprob: -7.908200740814209
    5. ' strip' → logprob: -11.03320026397705
    6. 'replace' → logprob: -11.40820026397705
    7. 'decode' → logprob: -11.65820026397705
    8. '-strip' → logprob: -12.15820026397705
    9. '_strip' → logprob: -12.28320026397705
    10. 'split' → logprob: -12.28320026397705

Token 43: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11576361209154129
    2. '())' → logprob: -2.3657636642456055
    3. '))' → logprob: -4.4907636642456055
    4. '()' → logprob: -5.6157636642456055
    5. '()))' → logprob: -7.4907636642456055
    6. '(' → logprob: -10.740763664245605
    7. '())
' → logprob: -13.740763664245605
    8. ' )' → logprob: -14.365763664245605
    9. ')
' → logprob: -14.490763664245605
    10. ' ())' → logprob: -14.740763664245605

Token 44: 'S' (ID: 50)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2642177641391754
    2. 'a' → logprob: -1.764217734336853
    3. 'data' → logprob: -3.2642178535461426
    4. 'd' → logprob: -5.264217853546143
    5. 'arr' → logprob: -5.639217853546143
    6. 's' → logprob: -6.014217853546143
    7. 'D' → logprob: -6.139217853546143
    8. ' A' → logprob: -6.264217853546143
    9. 'array' → logprob: -6.764217853546143
    10. 'H' → logprob: -7.014217853546143

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.027665352448821068
    2. '=' → logprob: -3.652665376663208
    3. '.' → logprob: -7.277665138244629
    4. ' ' → logprob: -8.277665138244629
    5. '_' → logprob: -8.777665138244629
    6. '[' → logprob: -8.902665138244629
    7. ',' → logprob: -10.152665138244629
    8. 's' → logprob: -11.152665138244629
    9. '[:]' → logprob: -11.152665138244629
    10. '.append' → logprob: -11.527665138244629

Token 46: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.5769420862197876
    2. 'sys' → logprob: -0.8269420862197876
    3. 'list' → logprob: -7.951941967010498
    4. 'input' → logprob: -8.451942443847656
    5. ' input' → logprob: -8.701942443847656
    6. ' list' → logprob: -8.826942443847656
    7. '=sys' → logprob: -9.951942443847656
    8. '(sys' → logprob: -10.576942443847656
    9. ' ' → logprob: -11.076942443847656
    10. '	sys' → logprob: -11.576942443847656

Token 47: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0007662679417990148
    2. '.stdout' → logprob: -7.625766277313232
    3. '.readline' → logprob: -8.250765800476074
    4. '.argv' → logprob: -11.875765800476074
    5. '.' → logprob: -12.250765800476074
    6. 'stdin' → logprob: -13.125765800476074
    7. '.std' → logprob: -13.250765800476074
    8. '.setdefault' → logprob: -14.625765800476074
    9. '.stderr' → logprob: -14.875765800476074
    10. '(stdin' → logprob: -15.875765800476074

Token 48: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00016992862219922245
    2. 'read' → logprob: -9.12516975402832
    3. 'stdin' → logprob: -10.50016975402832
    4. '.stdin' → logprob: -11.00016975402832
    5. '.read' → logprob: -11.87516975402832
    6. '.' → logprob: -12.62516975402832
    7. '.readlines' → logprob: -12.75016975402832
    8. ' readline' → logprob: -13.12516975402832
    9. 'line' → logprob: -14.87516975402832
    10. '```' → logprob: -15.62516975402832

Token 49: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.02329276315867901
    2. '()' → logprob: -3.7732927799224854
    3. ' ().' → logprob: -11.148292541503906
    4. '.readline' → logprob: -11.523292541503906
    5. '(' → logprob: -11.648292541503906
    6. '.' → logprob: -12.023292541503906
    7. '.rstrip' → logprob: -13.523292541503906
    8. '()).' → logprob: -13.773292541503906
    9. '().'' → logprob: -14.148292541503906
    10. '())' → logprob: -14.398292541503906

Token 50: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -7.541112427134067e-05
    2. 'strip' → logprob: -9.500075340270996
    3. 'read' → logprob: -15.250075340270996
    4. 'rst' → logprob: -16.375076293945312
    5. 'rs' → logprob: -16.500076293945312
    6. '.rstrip' → logprob: -17.000076293945312
    7. 'decode' → logprob: -17.500076293945312
    8. 'rd' → logprob: -19.000076293945312
    9. 'rl' → logprob: -19.125076293945312
    10. 'r' → logprob: -19.625076293945312

Token 51: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -6.706686690449715e-05
    2. '(' → logprob: -9.875066757202148
    3. '())' → logprob: -12.125066757202148
    4. ' ()' → logprob: -12.250066757202148
    5. ')' → logprob: -13.750066757202148
    6. '().' → logprob: -14.250066757202148
    7. '()`' → logprob: -14.250066757202148
    8. '()
' → logprob: -14.375066757202148
    9. '`()' → logprob: -14.375066757202148
    10. '()>' → logprob: -14.625066757202148

Token 52: 'last' (ID: 6684)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.3128734827041626
    2. '_' → logprob: -1.9378734827041626
    3. '#' → logprob: -2.187873363494873
    4. '.' → logprob: -2.437873363494873
    5. 'a' → logprob: -2.562873363494873
    6. 'if' → logprob: -2.937873363494873
    7. '[' → logprob: -3.187873363494873
    8. ')' → logprob: -3.437873363494873
    9. 'A' → logprob: -3.562873363494873
    10. 's' → logprob: -3.687873363494873

Token 53: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.33158668875694275
    2. '_index' → logprob: -1.7065867185592651
    3. '_idx' → logprob: -3.3315865993499756
    4. '_pos' → logprob: -4.081586837768555
    5. '_i' → logprob: -4.331586837768555
    6. '_occ' → logprob: -4.456586837768555
    7. '_oc' → logprob: -4.831586837768555
    8. '_space' → logprob: -4.956586837768555
    9. '_char' → logprob: -5.831586837768555
    10. '_seen' → logprob: -6.456586837768555

Token 54: ' ''
' (ID: 25366)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16814368963241577
    2. '{}' → logprob: -2.0431437492370605
    3. ' -' → logprob: -4.0431437492370605
    4. '[-' → logprob: -5.7931437492370605
    5. ' {}' → logprob: -6.4181437492370605
    6. '{-' → logprob: -6.5431437492370605
    7. ' ' → logprob: -7.4181437492370605
    8. '{' → logprob: -8.418143272399902
    9. '[' → logprob: -9.043143272399902
    10. '0' → logprob: -9.168143272399902

Token 55: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.2189857959747314
    2. 'answer' → logprob: -1.4689857959747314
    3. 'result' → logprob: -1.9689857959747314
    4. 'ans' → logprob: -2.0939857959747314
    5. 'for' → logprob: -2.0939857959747314
    6. 'dp' → logprob: -3.4689857959747314
    7. 'res' → logprob: -4.093985557556152
    8. 'cnt' → logprob: -4.468985557556152
    9. 'counts' → logprob: -4.593985557556152
    10. 'max' → logprob: -5.218985557556152

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5096311569213867
    2. '=' → logprob: -1.0096311569213867
    3. '_' → logprob: -3.3846311569213867
    4. ' ' → logprob: -7.009631156921387
    5. 's' → logprob: -9.259631156921387
    6. '_=' → logprob: -10.884631156921387
    7. ')' → logprob: -12.259631156921387
    8. '  ' → logprob: -12.509631156921387
    9. '[' → logprob: -12.634631156921387
    10. '_space' → logprob: -13.384631156921387

Token 57: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008620839565992355
    2. ' ' → logprob: -4.758620738983154
    3. '1' → logprob: -12.008621215820312
    4. '<|end|>' → logprob: -15.258621215820312
    5. ' ' → logprob: -17.883621215820312
    6. '  ' → logprob: -19.508621215820312
    7. '```' → logprob: -19.508621215820312
    8. '۰' → logprob: -19.883621215820312
    9. '０' → logprob: -20.446121215820312
    10. '000' → logprob: -20.571121215820312

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004907185211777687
    2. '1' → logprob: -7.750490665435791
    3. ' ' → logprob: -9.75049114227295
    4. '{}' → logprob: -14.00049114227295
    5. '[]' → logprob: -14.62549114227295
    6. '[' → logprob: -15.75049114227295
    7. '{' → logprob: -16.312990188598633
    8. '[]
' → logprob: -18.000490188598633
    9. '０' → logprob: -18.062990188598633
    10. '  ' → logprob: -18.125490188598633

Token 59: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05292172729969025
    2. 'for' → logprob: -3.302921772003174
    3. '<|end|>' → logprob: -4.927921772003174
    4. ' for' → logprob: -6.177921772003174
    5. 'result' → logprob: -6.302921772003174
    6. '\n' → logprob: -6.552921772003174
    7. 'max' → logprob: -6.552921772003174
    8. ' 
' → logprob: -8.802921295166016
    9. '' → logprob: -9.177921295166016
    10. '\' → logprob: -9.302921295166016

Token 60: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3780016005039215
    2. 'max' → logprob: -1.6280015707015991
    3. 'result' → logprob: -2.6280016899108887
    4. 'ans' → logprob: -3.7530016899108887
    5. 'answer' → logprob: -4.128001689910889
    6. 'res' → logprob: -5.378001689910889
    7. 'total' → logprob: -6.628001689910889
    8. 'results' → logprob: -9.00300121307373
    9. '
' → logprob: -9.12800121307373
    10. 'f' → logprob: -9.12800121307373

Token 61: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7941221594810486
    2. ' =' → logprob: -0.7941221594810486
    3. 'n' → logprob: -2.5441222190856934
    4. ' ' → logprob: -4.169122219085693
    5. 's' → logprob: -6.919122219085693
    6. ' n' → logprob: -7.919122219085693
    7. ' +=' → logprob: -8.544121742248535
    8. 'nd' → logprob: -8.919121742248535
    9. 'nt' → logprob: -9.419121742248535
    10. 'f' → logprob: -10.294121742248535

Token 62: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012519778683781624
    2. ' ' → logprob: -4.387519836425781
    3. '1' → logprob: -11.512519836425781
    4. '2' → logprob: -16.88751983642578
    5. '6' → logprob: -18.38751983642578
    6. '<|end|>' → logprob: -18.38751983642578
    7. '```' → logprob: -19.07501983642578
    8. '-' → logprob: -19.32501983642578
    9. '7' → logprob: -19.57501983642578
    10. '3' → logprob: -19.57501983642578

Token 63: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00022797346173319966
    2. ' ' → logprob: -8.500227928161621
    3. '1' → logprob: -10.625227928161621
    4. '2' → logprob: -16.500228881835938
    5. '-' → logprob: -17.625228881835938
    6. '```' → logprob: -17.812728881835938
    7. 'N' → logprob: -18.125228881835938
    8. '  ' → logprob: -18.187728881835938
    9. ')' → logprob: -18.250228881835938
    10. '۰' → logprob: -18.312728881835938

Token 64: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15511982142925262
    2. '<|end|>' → logprob: -2.0301198959350586
    3. 'while' → logprob: -5.655119895935059
    4. ' 
' → logprob: -6.155119895935059
    5. ' while' → logprob: -6.280119895935059
    6. '<|end|>' → logprob: -6.405119895935059
    7. ' ' → logprob: -6.780119895935059
    8. '\n' → logprob: -7.155119895935059
    9. '```' → logprob: -8.155119895935059
    10. '\' → logprob: -8.405119895935059

Token 65: 'while' (ID: 7032)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.215692400932312
    2. 'while' → logprob: -1.840692400932312
    3. '<|end|>' → logprob: -4.340692520141602
    4. ' while' → logprob: -4.465692520141602
    5. '\n' → logprob: -4.840692520141602
    6. ' ' → logprob: -7.090692520141602
    7. ' 
' → logprob: -7.590692520141602
    8. '\' → logprob: -8.090692520141602
    9. 'n' → logprob: -8.590692520141602
    10. '0' → logprob: -8.965692520141602

Token 66: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.016073904931545258
    2. 'i' → logprob: -4.141073703765869
    3. ' ' → logprob: -10.391074180603027
    4. ' N' → logprob: -12.516074180603027
    5. 'N' → logprob: -13.266074180603027
    6. '	i' → logprob: -14.016074180603027
    7. ' True' → logprob: -14.266074180603027
    8. 'count' → logprob: -14.641074180603027
    9. '  ' → logprob: -14.766074180603027
    10. '(i' → logprob: -15.141074180603027

Token 67: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2542151212692261
    2. '<' → logprob: -1.504215121269226
    3. '<len' → logprob: -6.254215240478516
    4. ' ' → logprob: -8.254215240478516
    5. '<N' → logprob: -9.379215240478516
    6. '<n' → logprob: -11.629215240478516
    7. '<size' → logprob: -13.004215240478516
    8. 'len' → logprob: -14.129215240478516
    9. '<int' → logprob: -14.254215240478516
    10. '<count' → logprob: -14.629215240478516

Token 68: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.018304690718650818
    2. ' N' → logprob: -4.018304824829102
    3. 'len' → logprob: -9.018304824829102
    4. ' len' → logprob: -10.893304824829102
    5. ' ' → logprob: -11.143304824829102
    6. '	N' → logprob: -16.3933048248291
    7. '   ' → logprob: -16.3933048248291
    8. '  ' → logprob: -16.5183048248291
    9. 'n' → logprob: -16.7683048248291
    10. '<N' → logprob: -16.8933048248291

Token 69: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003421375877223909
    2. ':
' → logprob: -8.62534236907959
    3. ' :' → logprob: -9.25034236907959
    4. ' and' → logprob: -9.75034236907959
    5. 'and' → logprob: -12.12534236907959
    6. ':**' → logprob: -13.87534236907959
    7. '):' → logprob: -14.37534236907959
    8. '+:' → logprob: -15.37534236907959
    9. ' :
' → logprob: -15.75034236907959
    10. '：' → logprob: -16.250341415405273

Token 70: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7729799151420593
    2. '   ' → logprob: -1.147979974746704
    3. ' ' → logprob: -2.022979974746704
    4. ' c' → logprob: -3.022979974746704
    5. 'if' → logprob: -4.022979736328125
    6. 'c' → logprob: -5.272979736328125
    7. 's' → logprob: -5.772979736328125
    8. ' 
' → logprob: -5.772979736328125
    9. '    ' → logprob: -6.022979736328125
    10. ' s' → logprob: -6.022979736328125

Token 71: ' a' (ID: 261)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04602355137467384
    2. 'c' → logprob: -3.6710236072540283
    3. ' if' → logprob: -4.421023368835449
    4. '   ' → logprob: -4.921023368835449
    5. ' c' → logprob: -9.54602336883545
    6. 'j' → logprob: -10.29602336883545
    7. ' ' → logprob: -10.29602336883545
    8. 'current' → logprob: -10.54602336883545
    9. '	if' → logprob: -11.42102336883545
    10. 'ch' → logprob: -11.42102336883545

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.039952266961336136
    2. '=' → logprob: -3.289952278137207
    3. ' ' → logprob: -7.039952278137207
    4. '   ' → logprob: -8.414952278137207
    5. 'if' → logprob: -8.664952278137207
    6. '=S' → logprob: -8.664952278137207
    7. ' ==' → logprob: -9.164952278137207
    8. 'S' → logprob: -9.414952278137207
    9. '  ' → logprob: -10.039952278137207
    10. '=i' → logprob: -10.164952278137207

Token 73: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.023304643109440804
    2. ' S' → logprob: -3.7733047008514404
    3. ' ' → logprob: -10.02330493927002
    4. 'i' → logprob: -12.27330493927002
    5. '>S' → logprob: -13.39830493927002
    6. '   ' → logprob: -13.77330493927002
    7. 'a' → logprob: -13.77330493927002
    8. 's' → logprob: -13.89830493927002
    9. 'len' → logprob: -14.52330493927002
    10. '0' → logprob: -14.52330493927002

Token 74: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -16.375
    3. '[I' → logprob: -16.875
    4. '```' → logprob: -17.125
    5. '\[' → logprob: -17.375
    6. '[a' → logprob: -17.625
    7. '[count' → logprob: -18.625
    8. ' [' → logprob: -19.125
    9. 'i' → logprob: -19.125
    10. 'count' → logprob: -20.0

Token 75: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008430993184447289
    2. ' ]' → logprob: -7.500843048095703
    3. ']==' → logprob: -8.875843048095703
    4. ' ' → logprob: -10.875843048095703
    5. '<|end|>' → logprob: -11.250843048095703
    6. ']
' → logprob: -11.375843048095703
    7. ']=='' → logprob: -11.375843048095703
    8. ']+' → logprob: -11.625843048095703
    9. ']]' → logprob: -11.750843048095703
    10. 'a' → logprob: -11.750843048095703

Token 76: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4137648344039917
    2. ' ' → logprob: -1.4137648344039917
    3. 'if' → logprob: -2.9137649536132812
    4. '<|end|>' → logprob: -4.288764953613281
    5. 'i' → logprob: -4.538764953613281
    6. ' 
' → logprob: -5.288764953613281
    7. '   ' → logprob: -5.288764953613281
    8. ' i' → logprob: -5.788764953613281
    9. ',' → logprob: -7.288764953613281
    10. '
' → logprob: -7.538764953613281

Token 77: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0824742466211319
    2. ' if' → logprob: -2.5824742317199707
    3. 'i' → logprob: -6.082474231719971
    4. '   ' → logprob: -7.082474231719971
    5. ' i' → logprob: -8.207474708557129
    6. 'count' → logprob: -9.332474708557129
    7. 'b' → logprob: -10.082474708557129
    8. ' count' → logprob: -11.582474708557129
    9. 'j' → logprob: -11.707474708557129
    10. ' ' → logprob: -11.707474708557129

Token 78: ' last' (ID: 2174)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.18013307452201843
    2. 'a' → logprob: -1.8051331043243408
    3. ' ' → logprob: -8.430132865905762
    4. ' i' → logprob: -9.305132865905762
    5. ' last' → logprob: -10.805132865905762
    6. ' not' → logprob: -10.805132865905762
    7. 'i' → logprob: -11.055132865905762
    8. '  ' → logprob: -11.680132865905762
    9. '	a' → logprob: -12.055132865905762
    10. ' ' → logprob: -12.680132865905762

Token 79: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.23583699762821198
    2. '==' → logprob: -2.485836982727051
    3. ' !=' → logprob: -2.610836982727051
    4. ' ' → logprob: -2.985836982727051
    5. '!=' → logprob: -5.860836982727051
    6. ' ' → logprob: -12.86083698272705
    7. '=' → logprob: -12.98583698272705
    8. ' =' → logprob: -13.11083698272705
    9. ' and' → logprob: -13.11083698272705
    10. ')' → logprob: -13.73583698272705

Token 80: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03000560775399208
    2. ' a' → logprob: -3.530005693435669
    3. ' ' → logprob: -8.65500545501709
    4. ''a' → logprob: -9.90500545501709
    5. ' '' → logprob: -11.53000545501709
    6. ' ''' → logprob: -11.90500545501709
    7. ''' → logprob: -12.03000545501709
    8. '''' → logprob: -12.40500545501709
    9. '  ' → logprob: -13.28000545501709
    10. '	a' → logprob: -13.78000545501709

Token 81: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019575953483581543
    2. ':
' → logprob: -4.519576072692871
    3. ' and' → logprob: -5.019576072692871
    4. 'and' → logprob: -6.644576072692871
    5. ' :' → logprob: -8.019576072692871
    6. ' or' → logprob: -9.144576072692871
    7. '   ' → logprob: -10.019576072692871
    8. ' ' → logprob: -10.519576072692871
    9. ' :
' → logprob: -10.894576072692871
    10. '    ' → logprob: -11.019576072692871

Token 82: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24991315603256226
    2. 'count' → logprob: -1.624913215637207
    3. ' count' → logprob: -4.499913215637207
    4. '   ' → logprob: -5.124913215637207
    5. ' last' → logprob: -6.249913215637207
    6. 'last' → logprob: -6.249913215637207
    7. ' if' → logprob: -6.749913215637207
    8. 'if' → logprob: -7.499913215637207
    9. ':' → logprob: -7.749913215637207
    10. ':
' → logprob: -8.249913215637207

Token 83: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.2816835045814514
    2. 'last' → logprob: -2.0316834449768066
    3. 'if' → logprob: -2.6566834449768066
    4. '       ' → logprob: -3.4066834449768066
    5. ' if' → logprob: -5.656683444976807
    6. ' count' → logprob: -5.656683444976807
    7. ' last' → logprob: -5.781683444976807
    8. '   ' → logprob: -7.781683444976807
    9. 'print' → logprob: -8.156683921813965
    10. '           ' → logprob: -9.781683921813965

Token 84: ' +=' (ID: 2757)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09330975264310837
    2. '=' → logprob: -2.8433096408843994
    3. ' +=' → logprob: -3.5933096408843994
    4. '+=' → logprob: -5.7183098793029785
    5. ' ' → logprob: -10.21830940246582
    6. '+' → logprob: -11.34330940246582
    7. '1' → logprob: -12.71830940246582
    8. ' +' → logprob: -13.21830940246582
    9. ')' → logprob: -13.21830940246582
    10. ',' → logprob: -13.34330940246582

Token 85: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005532711511477828
    2. ' ' → logprob: -7.500553131103516
    3. '2' → logprob: -16.500553131103516
    4. 'count' → logprob: -17.375553131103516
    5. '-' → logprob: -17.625553131103516
    6. 'i' → logprob: -17.750553131103516
    7. '0' → logprob: -18.250553131103516
    8. '+' → logprob: -18.375553131103516
    9. 'int' → logprob: -18.625553131103516
    10. '100' → logprob: -18.625553131103516

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.466968650580384e-05
    2. ' ' → logprob: -9.875054359436035
    3. '2' → logprob: -13.500054359436035
    4. 'i' → logprob: -14.750054359436035
    5. '0' → logprob: -15.375054359436035
    6. 'max' → logprob: -15.375054359436035
    7. 'count' → logprob: -15.500054359436035
    8. 'a' → logprob: -15.500054359436035
    9. '(' → logprob: -15.750054359436035
    10. '(i' → logprob: -16.25005531311035

Token 87: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9520438313484192
    2. '       ' → logprob: -1.2020437717437744
    3. ' last' → logprob: -1.8270437717437744
    4. '   ' → logprob: -2.7020437717437744
    5. ' 
' → logprob: -2.9520437717437744
    6. '    
' → logprob: -4.5770440101623535
    7. '        
' → logprob: -4.9520440101623535
    8. 'last' → logprob: -5.4520440101623535
    9. '\n' → logprob: -6.3270440101623535
    10. '   
' → logprob: -6.3270440101623535

Token 88: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8756292462348938
    2. '       ' → logprob: -0.8756292462348938
    3. ' last' → logprob: -2.375629186630249
    4. 'last' → logprob: -2.625629186630249
    5. ',last' → logprob: -8.125629425048828
    6. '    
' → logprob: -8.625629425048828
    7. '	last' → logprob: -8.875629425048828
    8. '        
' → logprob: -9.000629425048828
    9. '      ' → logprob: -9.125629425048828
    10. '[last' → logprob: -9.500629425048828

Token 89: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' (adapté à ' last') → logprob: -0.0014126161113381386
    2. ' last' → logprob: -6.626412391662598
    3. '   ' → logprob: -9.501412391662598
    4. 'i' → logprob: -11.751412391662598
    5. ' ' → logprob: -14.376412391662598
    6. ' i' → logprob: -14.376412391662598
    7. 'a' → logprob: -14.376412391662598
    8. '	last' → logprob: -14.626412391662598
    9. '  ' → logprob: -14.751412391662598
    10. '       ' → logprob: -14.751412391662598

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16023458540439606
    2. '=' → logprob: -1.9102345705032349
    3. '=a' → logprob: -11.910234451293945
    4. ' ' → logprob: -12.660234451293945
    5. '＝' → logprob: -15.660234451293945
    6. ',' → logprob: -16.035234451293945
    7. 'a' → logprob: -17.285234451293945
    8. '=A' → logprob: -17.410234451293945
    9. '=i' → logprob: -17.535234451293945
    10. '=b' → logprob: -17.660234451293945

Token 91: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.029761366546154022
    2. ' a' → logprob: -3.52976131439209
    3. ''a' → logprob: -11.65476131439209
    4. ' ' → logprob: -13.15476131439209
    5. '_a' → logprob: -15.65476131439209
    6. '	a' → logprob: -16.904762268066406
    7. ''' → logprob: -17.904762268066406
    8. ' '' → logprob: -18.029762268066406
    9. '`' → logprob: -18.029762268066406
    10. '  ' → logprob: -18.029762268066406

Token 92: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0497392900288105
    2. '
' → logprob: -3.174739360809326
    3. 'i' → logprob: -6.299739360809326
    4. '    
' → logprob: -6.299739360809326
    5. '  
' → logprob: -7.674739360809326
    6. '   
' → logprob: -7.924739360809326
    7. '       ' → logprob: -8.049738883972168
    8. '<|end|>' → logprob: -8.174738883972168
    9. '[i' → logprob: -8.299738883972168
    10. ' i' → logprob: -8.299738883972168

Token 93: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14499028027057648
    2. 'i' → logprob: -2.0199902057647705
    3. ' i' → logprob: -6.39499044418335
    4. '
' → logprob: -8.144989967346191
    5. '```' → logprob: -9.144989967346191
    6. ' ' → logprob: -9.519989967346191
    7. '<|end|>' → logprob: -10.394989967346191
    8. '  ' → logprob: -10.644989967346191
    9. '       ' → logprob: -11.019989967346191
    10. '    
' → logprob: -11.019989967346191

Token 94: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0021299216896295547
    2. ' i' → logprob: -6.252130031585693
    3. '   ' → logprob: -8.627129554748535
    4. '```' → logprob: -12.002129554748535
    5. '
' → logprob: -12.252129554748535
    6. 'else' → logprob: -12.627129554748535
    7. ' ' → logprob: -13.127129554748535
    8. 'while' → logprob: -13.377129554748535
    9. '	i' → logprob: -14.252129554748535
    10. 'if' → logprob: -14.377129554748535

Token 95: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.046532534062862396
    2. '+' → logprob: -3.67153263092041
    3. ' +=' → logprob: -3.92153263092041
    4. '++' → logprob: -9.17153263092041
    5. '<|end|>' → logprob: -9.29653263092041
    6. '=' → logprob: -11.79653263092041
    7. ' ' → logprob: -12.42153263092041
    8. '+='' → logprob: -12.67153263092041
    9. '+="' → logprob: -12.79653263092041
    10. '+++' → logprob: -13.29653263092041

Token 96: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '```' → logprob: -18.250030517578125
    4. '１' → logprob: -19.625030517578125
    5. '  ' → logprob: -19.625030517578125
    6. '   ' → logprob: -19.875030517578125
    7. '2' → logprob: -20.375030517578125
    8. '۱' → logprob: -21.000030517578125
    9. '<|end|>' → logprob: -21.000030517578125
    10. ' ' → logprob: -21.812530517578125

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -19.500001907348633
    4. '<|end|>' → logprob: -19.625001907348633
    5. '１' → logprob: -20.625001907348633
    6. '  ' → logprob: -21.500001907348633
    7. '2' → logprob: -21.750001907348633
    8. '۱' → logprob: -21.750001907348633
    9. '   ' → logprob: -22.125001907348633
    10. '+' → logprob: -22.625001907348633

Token 98: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20112158358097076
    2. 'print' → logprob: -2.0761215686798096
    3. ' 
' → logprob: -3.7011215686798096
    4. '<|end|>' → logprob: -4.076121807098389
    5. 'if' → logprob: -5.701121807098389
    6. ' ' → logprob: -6.076121807098389
    7. '#' → logprob: -6.326121807098389
    8. ' print' → logprob: -6.451121807098389
    9. ' if' → logprob: -6.576121807098389
    10. '```' → logprob: -6.701121807098389

Token 99: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0768769159913063
    2. '
' → logprob: -2.7018768787384033
    3. 'if' → logprob: -5.451877117156982
    4. ' 
' → logprob: -7.076877117156982
    5. ' print' → logprob: -8.326876640319824
    6. '  
' → logprob: -8.326876640319824
    7. '1' → logprob: -8.576876640319824
    8. '\n' → logprob: -8.576876640319824
    9. '0' → logprob: -8.701876640319824
    10. '
' → logprob: -8.701876640319824

Token 100: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.004086947068572044
    2. '(' → logprob: -5.504086971282959
    3. '(c' → logprob: -12.8790864944458
    4. '((' → logprob: -13.1290864944458
    5. '(max' → logprob: -13.6290864944458
    6. 'count' → logprob: -13.7540864944458
    7. '(cnt' → logprob: -14.3790864944458
    8. '('' → logprob: -15.3790864944458
    9. '(len' → logprob: -15.6290864944458
    10. ' (' → logprob: -15.7540864944458

Token 101: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.127333340875339e-06
    2. ' )' → logprob: -12.500003814697266
    3. '+' → logprob: -15.625003814697266
    4. '*' → logprob: -16.000003814697266
    5. ')
' → logprob: -16.625003814697266
    6. '`)' → logprob: -17.625003814697266
    7. ')`' → logprob: -17.750003814697266
    8. '```' → logprob: -17.875003814697266
    9. '))' → logprob: -18.625003814697266
    10. '**' → logprob: -18.750003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 99
Tokens correctement prédits (1ère position, stricte): 41
Tokens correctement prédits (1ère position, avec adaptation): 45
Tokens correctement prédits (top 10): 82
Précision stricte (1ère position): 41.41%
Précision adaptée (1ère position): 45.45%
Précision (top 10): 82.83%
================================================================================
