================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:25:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
X = list(map(int, input().rstrip().split()))
av = (2 * sum(X) + N) // N // 2
ans = 0
for x in X:
    ans += (x - av) ** 2
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003724006237462163
    2. '('' → logprob: -8.750371932983398
    3. '(N' → logprob: -9.000371932983398
    4. ''' → logprob: -11.000371932983398
    5. '(input' → logprob: -11.125371932983398
    6. '(
' → logprob: -11.250371932983398
    7. '()' → logprob: -11.375371932983398
    8. '("("' → logprob: -11.375371932983398
    9. '```' → logprob: -12.125371932983398
    10. '(`' → logprob: -12.375371932983398

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2372170090675354
    2. ')' → logprob: -1.7372169494628906
    3. '()' → logprob: -3.4872169494628906
    4. '())' → logprob: -5.737216949462891
    5. '```' → logprob: -7.987216949462891
    6. '(
' → logprob: -8.23721694946289
    7. '`' → logprob: -9.61221694946289
    8. '(()' → logprob: -9.61221694946289
    9. '("("' → logprob: -9.61221694946289
    10. '")' → logprob: -9.73721694946289

Token 5: 'X' (ID: 55)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7973122596740723
    2. 'if' → logprob: -1.7973122596740723
    3. '\n' → logprob: -2.1723122596740723
    4. '`' → logprob: -3.1723122596740723
    5. 'x' → logprob: -3.6723122596740723
    6. '```' → logprob: -3.6723122596740723
    7. 's' → logprob: -3.7973122596740723
    8. 'a' → logprob: -3.9223122596740723
    9. '\' → logprob: -4.047312259674072
    10. ')' → logprob: -4.297312259674072

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0735614150762558
    2. '+' → logprob: -3.823561429977417
    3. ' =' → logprob: -4.448561191558838
    4. '.' → logprob: -4.573561191558838
    5. '=' → logprob: -4.948561191558838
    6. ')' → logprob: -5.073561191558838
    7. '**' → logprob: -5.698561191558838
    8. '%' → logprob: -6.448561191558838
    9. '[i' → logprob: -6.448561191558838
    10. '.append' → logprob: -6.823561191558838

Token 7: ' list' (ID: 1562)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.2832448482513428
    2. 'input' → logprob: -1.5332448482513428
    3. ' int' → logprob: -2.0332448482513428
    4. ' input' → logprob: -2.1582448482513428
    5. 'list' → logprob: -2.5332448482513428
    6. ' list' → logprob: -2.5332448482513428
    7. '[]' → logprob: -3.4082448482513428
    8. ' []' → logprob: -3.5332448482513428
    9. '0' → logprob: -4.033245086669922
    10. '[int' → logprob: -4.533245086669922

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -2.975612187583465e-05
    2. '(range' → logprob: -11.625029563903809
    3. ' (' → logprob: -12.375029563903809
    4. '(
' → logprob: -12.625029563903809
    5. '[' → logprob: -13.000029563903809
    6. '("("' → logprob: -13.000029563903809
    7. '```' → logprob: -13.250029563903809
    8. '[(' → logprob: -14.250029563903809
    9. '(

' → logprob: -14.375029563903809
    10. '\(' → logprob: -14.750029563903809

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.16180537641048431
    2. '(' → logprob: -2.0368053913116455
    3. '(str' → logprob: -4.036805152893066
    4. '(lambda' → logprob: -7.411805152893066
    5. 'int' → logprob: -8.536805152893066
    6. '(input' → logprob: -8.911805152893066
    7. '```' → logprob: -9.911805152893066
    8. '(
' → logprob: -9.911805152893066
    9. ')' → logprob: -10.036805152893066
    10. '<int' → logprob: -10.286805152893066

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.026667507365345955
    2. ',input' → logprob: -4.401667594909668
    3. '(' → logprob: -4.526667594909668
    4. ',' → logprob: -6.276667594909668
    5. '))' → logprob: -7.526667594909668
    6. ')' → logprob: -8.151667594909668
    7. '=input' → logprob: -9.026667594909668
    8. 'input' → logprob: -9.276667594909668
    9. ' (' → logprob: -10.026667594909668
    10. '(int' → logprob: -10.151667594909668

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3868839740753174
    2. ' input' → logprob: -1.1368839740753174
    3. '(input' → logprob: -11.886883735656738
    4. ',input' → logprob: -12.261883735656738
    5. '=input' → logprob: -14.636883735656738
    6. ')' → logprob: -15.011883735656738
    7. '<input' → logprob: -15.761883735656738
    8. '	input' → logprob: -15.761883735656738
    9. ' ' → logprob: -15.761883735656738
    10. '[input' → logprob: -16.761884689331055

Token 12: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.24203696846961975
    2. '()))' → logprob: -2.117037057876587
    3. '()' → logprob: -2.492037057876587
    4. '())' → logprob: -4.742036819458008
    5. '(' → logprob: -6.242036819458008
    6. '(),' → logprob: -7.742036819458008
    7. '))' → logprob: -8.492036819458008
    8. '()));' → logprob: -8.492036819458008
    9. '())))' → logprob: -8.992036819458008
    10. ')' → logprob: -9.992036819458008

Token 13: 'rstrip' (ID: 180429)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.002531664213165641
    2. 'strip' → logprob: -6.0025315284729
    3. 'rstrip' → logprob: -9.877532005310059
    4. ' split' → logprob: -12.377532005310059
    5. 'spl' → logprob: -15.377532005310059
    6. '(split' → logprob: -15.627532005310059
    7. 'read' → logprob: -17.377531051635742
    8. ')' → logprob: -17.502531051635742
    9. ' strip' → logprob: -17.502531051635742
    10. 'replace' → logprob: -18.877531051635742

Token 14: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.015393048524856567
    2. '('' → logprob: -4.640393257141113
    3. '()' → logprob: -6.015393257141113
    4. '())' → logprob: -6.640393257141113
    5. '(' → logprob: -7.140393257141113
    6. '()))' → logprob: -7.265393257141113
    7. '('\' → logprob: -9.140393257141113
    8. '())))' → logprob: -9.140393257141113
    9. ' ().' → logprob: -10.140393257141113
    10. ')' → logprob: -10.140393257141113

Token 15: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.8670179997570813e-05
    2. 'rstrip' → logprob: -11.500019073486328
    3. ' split' → logprob: -12.625019073486328
    4. ')' → logprob: -13.125019073486328
    5. 'spl' → logprob: -13.375019073486328
    6. 'strip' → logprob: -14.125019073486328
    7. 's' → logprob: -14.625019073486328
    8. '(split' → logprob: -15.625019073486328
    9. '.split' → logprob: -16.000019073486328
    10. 'sp' → logprob: -16.250019073486328

Token 16: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -1.318129062652588
    2. '(' → logprob: -1.443129062652588
    3. '))' → logprob: -1.568129062652588
    4. ')' → logprob: -2.193129062652588
    5. '('' → logprob: -2.318129062652588
    6. '())' → logprob: -2.693129062652588
    7. '()' → logprob: -5.193129062652588
    8. '(','' → logprob: -5.943129062652588
    9. '("' → logprob: -7.693129062652588
    10. ''))' → logprob: -7.818129062652588

Token 17: 'av' (ID: 407)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.8100405931472778
    2. 'for' → logprob: -2.0600404739379883
    3. 's' → logprob: -2.6850404739379883
    4. 'count' → logprob: -3.1850404739379883
    5. 'result' → logprob: -3.1850404739379883
    6. 'print' → logprob: -3.4350404739379883
    7. 'M' → logprob: -3.5600404739379883
    8. 'S' → logprob: -3.6850404739379883
    9. 'c' → logprob: -3.8100404739379883
    10. 'd' → logprob: -3.8100404739379883

Token 18: ' =' (ID: 314)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.16173934936523438
    2. 'er' → logprob: -2.1617393493652344
    3. 'e' → logprob: -3.7867393493652344
    4. 'a' → logprob: -4.536739349365234
    5. '_' → logprob: -7.536739349365234
    6. 'al' → logprob: -9.161739349365234
    7. '=' → logprob: -10.161739349365234
    8. 'r' → logprob: -10.536739349365234
    9. '```' → logprob: -11.036739349365234
    10. ' =' → logprob: -11.286739349365234

Token 19: ' (' (ID: 350)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.033845316618680954
    2. 'sum' → logprob: -3.4088454246520996
    3. '(sum' → logprob: -8.783844947814941
    4. ' ' → logprob: -10.158844947814941
    5. ' (' → logprob: -13.408844947814941
    6. '	sum' → logprob: -13.533844947814941
    7. '  ' → logprob: -14.158844947814941
    8. ' int' → logprob: -14.408844947814941
    9. '   ' → logprob: -14.533844947814941
    10. '(' → logprob: -14.783844947814941

Token 20: '2' (ID: 17)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.4297020435333252
    2. ' sum' → logprob: -1.0547020435333252
    3. ')' → logprob: -7.554701805114746
    4. ' N' → logprob: -8.679701805114746
    5. ' ' → logprob: -9.179701805114746
    6. '   ' → logprob: -9.929701805114746
    7. 'N' → logprob: -10.429701805114746
    8. '(sum' → logprob: -10.554701805114746
    9. '	sum' → logprob: -10.804701805114746
    10. ' X' → logprob: -11.054701805114746

Token 21: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.474732905626297
    2. ' *' → logprob: -0.9747328758239746
    3. '*N' → logprob: -8.724733352661133
    4. ' ' → logprob: -8.849733352661133
    5. '*)' → logprob: -9.599733352661133
    6. '+' → logprob: -9.849733352661133
    7. ')' → logprob: -10.099733352661133
    8. ' *)' → logprob: -10.349733352661133
    9. '**' → logprob: -10.599733352661133
    10. '*(' → logprob: -10.599733352661133

Token 22: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.639310359954834
    2. ' sum' → logprob: -0.889310359954834
    3. ' max' → logprob: -3.889310359954834
    4. 'max' → logprob: -3.889310359954834
    5. ' N' → logprob: -4.639310359954834
    6. 'N' → logprob: -5.389310359954834
    7. 'av' → logprob: -6.764310359954834
    8. ' av' → logprob: -6.889310359954834
    9. ' ' → logprob: -6.889310359954834
    10. ' X' → logprob: -7.264310359954834

Token 23: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.002822943264618516
    2. '(' → logprob: -5.8778228759765625
    3. '(x' → logprob: -11.877822875976562
    4. ' (' → logprob: -12.252822875976562
    5. '(av' → logprob: -13.002822875976562
    6. ')' → logprob: -13.377822875976562
    7. 'X' → logprob: -14.002822875976562
    8. '(N' → logprob: -14.252822875976562
    9. '(A' → logprob: -15.377822875976562
    10. '(
' → logprob: -15.627822875976562

Token 24: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10623522102832794
    2. ' )' → logprob: -2.7312352657318115
    3. ' -' → logprob: -4.481235027313232
    4. '-' → logprob: -4.481235027313232
    5. ' /' → logprob: -5.231235027313232
    6. ')/' → logprob: -5.981235027313232
    7. '))' → logprob: -6.481235027313232
    8. '/' → logprob: -6.856235027313232
    9. ')/(' → logprob: -6.981235027313232
    10. ' ' → logprob: -7.856235027313232

Token 25: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17937663197517395
    2. '-' → logprob: -2.8043766021728516
    3. ' )' → logprob: -3.4293766021728516
    4. ' -' → logprob: -3.5543766021728516
    5. '/' → logprob: -3.8043766021728516
    6. ' /' → logprob: -4.429376602172852
    7. ')/(' → logprob: -5.929376602172852
    8. ')/' → logprob: -6.179376602172852
    9. ' //' → logprob: -6.679376602172852
    10. '//' → logprob: -6.929376602172852

Token 26: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.24346961081027985
    2. ' N' → logprob: -1.9934695959091187
    3. '1' → logprob: -2.743469715118408
    4. ' ' → logprob: -5.118469715118408
    5. '3' → logprob: -5.368469715118408
    6. 'len' → logprob: -6.868469715118408
    7. '2' → logprob: -6.993469715118408
    8. '5' → logprob: -7.743469715118408
    9. ' len' → logprob: -7.868469715118408
    10. '9' → logprob: -8.11846923828125

Token 27: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20094306766986847
    2. '-' → logprob: -1.825943112373352
    3. ' -' → logprob: -4.2009429931640625
    4. ' )' → logprob: -5.4509429931640625
    5. '+' → logprob: -6.7009429931640625
    6. ' +' → logprob: -8.825942993164062
    7. '//' → logprob: -9.200942993164062
    8. '1' → logprob: -9.825942993164062
    9. ')//' → logprob: -10.075942993164062
    10. '*' → logprob: -10.700942993164062

Token 28: ' //' (ID: 602)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 29: ' N' (ID: 478)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01818646676838398
    2. ' (' → logprob: -4.643186569213867
    3. '2' → logprob: -5.268186569213867
    4. 'N' → logprob: -5.768186569213867
    5. '(N' → logprob: -9.643186569213867
    6. ' N' → logprob: -10.393186569213867
    7. ' ' → logprob: -11.018186569213867
    8. '3' → logprob: -13.518186569213867
    9. '(int' → logprob: -14.268186569213867
    10. '((' → logprob: -14.643186569213867

Token 30: ' //' (ID: 602)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3323277533054352
    2. '<|end|>' → logprob: -1.4573277235031128
    3. '+' → logprob: -3.3323278427124023
    4. ')' → logprob: -5.457327842712402
    5. '*' → logprob: -6.207327842712402
    6. '```' → logprob: -6.707327842712402
    7. ' )' → logprob: -7.082327842712402
    8. '2' → logprob: -7.082327842712402
    9. ' 
' → logprob: -7.207327842712402
    10. '<|end|>' → logprob: -7.332327842712402

Token 31: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005030352156609297
    2. ' ' → logprob: -5.380030155181885
    3. '3' → logprob: -8.005030632019043
    4. '(' → logprob: -9.630030632019043
    5. '4' → logprob: -12.630030632019043
    6. ' (' → logprob: -12.755030632019043
    7. '6' → logprob: -13.505030632019043
    8. '1' → logprob: -14.130030632019043
    9. '```' → logprob: -14.380030632019043
    10. '10' → logprob: -15.130030632019043

Token 32: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004280092194676399
    2. '3' → logprob: -5.754280090332031
    3. ' ' → logprob: -6.879280090332031
    4. '4' → logprob: -10.379280090332031
    5. '1' → logprob: -10.754280090332031
    6. '(' → logprob: -11.754280090332031
    7. 'N' → logprob: -12.129280090332031
    8. '6' → logprob: -13.254280090332031
    9. '5' → logprob: -13.504280090332031
    10. '10' → logprob: -13.754280090332031

Token 33: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 34: 'ans' (ID: 616)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10882309824228287
    2. 'print' → logprob: -2.85882306098938
    3. ' 
' → logprob: -3.60882306098938
    4. '\n' → logprob: -4.608823299407959
    5. '<|end|>' → logprob: -5.608823299407959
    6. 'for' → logprob: -7.108823299407959
    7. '
' → logprob: -7.108823299407959
    8. ' for' → logprob: -7.233823299407959
    9. '```' → logprob: -7.483823299407959
    10. ' print' → logprob: -7.608823299407959

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03139530122280121
    2. '_' → logprob: -4.156395435333252
    3. '=' → logprob: -4.531395435333252
    4. ' +=' → logprob: -5.531395435333252
    5. ' ' → logprob: -8.781394958496094
    6. '+' → logprob: -9.406394958496094
    7. '+=' → logprob: -10.156394958496094
    8. ' _' → logprob: -10.281394958496094
    9. 's' → logprob: -10.406394958496094
    10. '.' → logprob: -10.531394958496094

Token 36: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.41577959060668945
    2. '[max' → logprob: -2.0407795906066895
    3. 'av' → logprob: -2.6657795906066895
    4. 'sum' → logprob: -3.1657795906066895
    5. '[min' → logprob: -4.1657795906066895
    6. ' [' → logprob: -4.1657795906066895
    7. '[]' → logprob: -4.2907795906066895
    8. 'max' → logprob: -4.4157795906066895
    9. '0' → logprob: -4.9157795906066895
    10. '[x' → logprob: -5.5407795906066895

Token 37: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1042510271072388
    2. 'sum' → logprob: -1.4792510271072388
    3. '0' → logprob: -1.6042510271072388
    4. '[max' → logprob: -2.729250907897949
    5. 'max' → logprob: -3.229250907897949
    6. '[]' → logprob: -3.229250907897949
    7. 'abs' → logprob: -3.604250907897949
    8. 'av' → logprob: -3.604250907897949
    9. '[min' → logprob: -3.979250907897949
    10. 'min' → logprob: -4.854250907897949

Token 38: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24571733176708221
    2. '\n' → logprob: -2.2457172870635986
    3. '<|end|>' → logprob: -2.3707172870635986
    4. ' 
' → logprob: -5.495717525482178
    5. '\' → logprob: -5.620717525482178
    6. 'for' → logprob: -5.995717525482178
    7. ' for' → logprob: -5.995717525482178
    8. '```' → logprob: -6.245717525482178
    9. '
' → logprob: -6.370717525482178
    10. '<|end|>' → logprob: -7.370717525482178

Token 39: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0014569011982530355
    2. ' for' → logprob: -7.0014567375183105
    3. '<|end|>' → logprob: -7.7514567375183105
    4. '\n' → logprob: -9.501457214355469
    5. '```' → logprob: -11.251457214355469
    6. '
' → logprob: -11.251457214355469
    7. '+' → logprob: -11.876457214355469
    8. '\' → logprob: -13.126457214355469
    9. '<|end|>' → logprob: -13.626457214355469
    10. 'newline' → logprob: -13.876457214355469

Token 40: ' x' (ID: 1215)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.641136884689331
    2. ' x' → logprob: -0.766136884689331
    3. 'x' → logprob: -6.14113712310791
    4. ' a' → logprob: -6.14113712310791
    5. 'i' → logprob: -6.39113712310791
    6. ' ' → logprob: -6.89113712310791
    7. '_' → logprob: -7.51613712310791
    8. ' _' → logprob: -7.51613712310791
    9. ' v' → logprob: -9.01613712310791
    10. ' X' → logprob: -9.14113712310791

Token 41: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04330814257264137
    2. 'in' → logprob: -3.1683082580566406
    3. ' ' → logprob: -8.29330825805664
    4. 's' → logprob: -10.79330825805664
    5. '_' → logprob: -11.04330825805664
    6. '  ' → logprob: -11.91830825805664
    7. ' x' → logprob: -12.79330825805664
    8. '	in' → logprob: -13.29330825805664
    9. 'n' → logprob: -13.54330825805664
    10. ' i' → logprob: -13.66830825805664

Token 42: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.012514598667621613
    2. ' X' → logprob: -4.387514591217041
    3. ' range' → logprob: -13.5125150680542
    4. ' ' → logprob: -13.6375150680542
    5. '<|end|>' → logprob: -14.1375150680542
    6. 'range' → logprob: -14.5125150680542
    7. '	X' → logprob: -15.1375150680542
    8. ' xrange' → logprob: -15.1375150680542
    9. '>X' → logprob: -15.6375150680542
    10. '[' → logprob: -15.8875150680542

Token 43: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002546641044318676
    2. ':
' → logprob: -9.37525463104248
    3. ' :' → logprob: -9.75025463104248
    4. '+' → logprob: -10.37525463104248
    5. '=' → logprob: -10.87525463104248
    6. '+:' → logprob: -11.37525463104248
    7. '>' → logprob: -11.50025463104248
    8. '):' → logprob: -11.50025463104248
    9. '   ' → logprob: -11.50025463104248
    10. ' =' → logprob: -13.00025463104248

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014673696830868721
    2. ' ans' → logprob: -4.264673709869385
    3. '	ans' → logprob: -8.264673233032227
    4. ' ' → logprob: -9.764673233032227
    5. 'ans' → logprob: -9.764673233032227
    6. '```' → logprob: -9.889673233032227
    7. ' if' → logprob: -10.014673233032227
    8. '    ' → logprob: -10.764673233032227
    9. '(ans' → logprob: -11.764673233032227
    10. '       ' → logprob: -12.389673233032227

Token 45: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.19233301281929016
    2. 'ans' (adapté à ' ans') → logprob: -1.8173329830169678
    3. '   ' → logprob: -4.567333221435547
    4. '```' → logprob: -6.817333221435547
    5. '	ans' → logprob: -7.317333221435547
    6. '(ans' → logprob: -8.317333221435547
    7. '``' → logprob: -10.442333221435547
    8. 'a' → logprob: -11.192333221435547
    9. '_ans' → logprob: -11.317333221435547
    10. '    ' → logprob: -11.442333221435547

Token 46: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2538682818412781
    2. ' +=' → logprob: -1.5038683414459229
    3. '+' → logprob: -6.378868103027344
    4. '=' → logprob: -9.128868103027344
    5. '+=(' → logprob: -10.378868103027344
    6. ' =' → logprob: -11.003868103027344
    7. '   ' → logprob: -11.128868103027344
    8. ' +' → logprob: -11.253868103027344
    9. '>' → logprob: -11.753868103027344
    10. '!=' → logprob: -11.878868103027344

Token 47: ' (' (ID: 350)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0665026530623436
    2. ' abs' → logprob: -3.816502571105957
    3. 'av' → logprob: -4.066502571105957
    4. 'max' → logprob: -4.066502571105957
    5. 'min' → logprob: -5.316502571105957
    6. '(abs' → logprob: -6.316502571105957
    7. ' max' → logprob: -7.816502571105957
    8. 'x' → logprob: -8.316502571105957
    9. '(max' → logprob: -9.066502571105957
    10. '(av' → logprob: -9.191502571105957

Token 48: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3073619306087494
    2. 'av' → logprob: -1.4323619604110718
    3. 'abs' → logprob: -3.9323618412017822
    4. ' x' → logprob: -5.682362079620361
    5. '(av' → logprob: -7.057362079620361
    6. '(x' → logprob: -7.182362079620361
    7. ' av' → logprob: -7.307362079620361
    8. ' abs' → logprob: -8.682361602783203
    9. 'max' → logprob: -8.932361602783203
    10. 'a' → logprob: -9.682361602783203

Token 49: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1606799215078354
    2. '-' → logprob: -2.035679817199707
    3. '-av' → logprob: -4.035679817199707
    4. '+' → logprob: -9.160679817199707
    5. '-ab' → logprob: -11.160679817199707
    6. '-ai' → logprob: -11.285679817199707
    7. ' +' → logprob: -12.285679817199707
    8. '!=' → logprob: -12.660679817199707
    9. '>=' → logprob: -12.785679817199707
    10. '>' → logprob: -12.785679817199707

Token 50: ' av' (ID: 1452)
  Prédit: 'av'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'av' → logprob: -0.04342925176024437
    2. ' av' → logprob: -3.168429136276245
    3. '(av' → logprob: -7.793429374694824
    4. ' (' → logprob: -12.168429374694824
    5. '_av' → logprob: -12.793429374694824
    6. ',av' → logprob: -13.293429374694824
    7. 'ab' → logprob: -13.543429374694824
    8. '(' → logprob: -13.543429374694824
    9. ')' → logprob: -13.668429374694824
    10. '1' → logprob: -14.668429374694824

Token 51: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029918374493718147
    2. ')**' → logprob: -3.5299184322357178
    3. ' )' → logprob: -9.029918670654297
    4. ')*(' → logprob: -10.154918670654297
    5. '   ' → logprob: -12.404918670654297
    6. ')^' → logprob: -13.779918670654297
    7. ')*' → logprob: -14.029918670654297
    8. '）' → logprob: -14.529918670654297
    9. '-' → logprob: -15.154918670654297
    10. '")' → logprob: -15.154918670654297

Token 52: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.06643160432577133
    2. '2' → logprob: -2.9414315223693848
    3. ' **' → logprob: -5.066431522369385
    4. ' ' → logprob: -6.441431522369385
    5. '*' → logprob: -6.691431522369385
    6. ')' → logprob: -6.691431522369385
    7. 'abs' → logprob: -7.816431522369385
    8. ')**' → logprob: -8.066431999206543
    9. '(' → logprob: -8.941431999206543
    10. '```' → logprob: -9.816431999206543

Token 53: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006284446571953595
    2. ' ' → logprob: -7.375628471374512
    3. '<|end|>' → logprob: -14.500628471374512
    4. '```' → logprob: -14.750628471374512
    5. '²' → logprob: -15.000628471374512
    6. '   ' → logprob: -15.375628471374512
    7. '۲' → logprob: -16.125627517700195
    8. '(' → logprob: -16.938127517700195
    9. '  ' → logprob: -17.125627517700195
    10. '२' → logprob: -17.875627517700195

Token 54: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.612634362885728e-05
    2. ' ' → logprob: -9.500076293945312
    3. '²' → logprob: -14.625076293945312
    4. '۲' → logprob: -15.750076293945312
    5. '1' → logprob: -16.062576293945312
    6. '<|end|>' → logprob: -16.125076293945312
    7. '3' → logprob: -17.000076293945312
    8. '22' → logprob: -17.125076293945312
    9. '٢' → logprob: -17.312576293945312
    10. '२' → logprob: -17.625076293945312

Token 55: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06282468885183334
    2. '<|end|>' → logprob: -3.3128247261047363
    3. '\n' → logprob: -4.437824726104736
    4. '
' → logprob: -4.562824726104736
    5. ' print' → logprob: -6.437824726104736
    6. ' ' → logprob: -8.937824249267578
    7. ')' → logprob: -9.187824249267578
    8. '```' → logprob: -9.687824249267578
    9. '\r' → logprob: -9.812824249267578
    10. '<|end|>' → logprob: -9.937824249267578

Token 56: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.019245311617851257
    2. '
' → logprob: -4.269245147705078
    3. '<|end|>' → logprob: -6.019245147705078
    4. ' print' → logprob: -6.519245147705078
    5. '\n' → logprob: -7.019245147705078
    6. ')' → logprob: -9.019245147705078
    7. '
' → logprob: -10.644245147705078
    8. ' 
' → logprob: -10.894245147705078
    9. '  
' → logprob: -10.894245147705078
    10. '```' → logprob: -11.144245147705078

Token 57: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.31332722306251526
    2. '(' → logprob: -1.3133271932601929
    3. '()' → logprob: -10.688326835632324
    4. '(av' → logprob: -10.938326835632324
    5. 'ans' → logprob: -12.438326835632324
    6. '(answer' → logprob: -12.813326835632324
    7. '(abs' → logprob: -12.813326835632324
    8. '('' → logprob: -12.938326835632324
    9. '(an' → logprob: -12.938326835632324
    10. '(print' → logprob: -12.938326835632324

Token 58: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ' )' → logprob: -13.750001907348633
    3. ')
' → logprob: -15.625001907348633
    4. '))' → logprob: -15.750001907348633
    5. '`)' → logprob: -16.625001907348633
    6. '）' → logprob: -17.250001907348633
    7. '+' → logprob: -17.375001907348633
    8. ')`' → logprob: -17.375001907348633
    9. '')' → logprob: -17.500001907348633
    10. '+)' → logprob: -17.750001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 56
Tokens correctement prédits (1ère position, stricte): 21
Tokens correctement prédits (1ère position, avec adaptation): 21
Tokens correctement prédits (top 10): 43
Précision stricte (1ère position): 37.50%
Précision adaptée (1ère position): 37.50%
Précision (top 10): 76.79%
================================================================================
