================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:57:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import mul, or_
from itertools import accumulate, chain, groupby
from math import log10, ceil
from collections import deque

L, A, B, M = map(int, input().split())

def partsum(a, b, l, n):
    base_range = range(0, 60)
    doublingconst = list(accumulate(
        (lambda acc=[1]: ((yield from [((pow(10, l*2**(i-1), M)+1)*acc[-1])%M] or acc.append(((pow(10, l*2**(i-1), M)+1)*acc[-1])%M)) for i in range(1,60)), [1])
    ))
    doublingconst = [1] + [((pow(10, l*2**(i-1), M)+1)*doublingconst[i-1])%M for i in range(1,60)]
    doublingline  = [0] + [((pow(10, l*2**(i-1), M)+1)*doublingline if (doublingline:=[0]+[0]*(i-1))[i-1]==0 else doublingline[i-1]) + (pow(2, i-1,M) * pow(10, l*2**(i-1),M) * doublingconst[i-1])%M for i in range(1,60)]
    for i in range(1,60):
        double = (pow(10, l*2**(i-1), M)+1)
        doublingline[i] = (double * doublingline[i-1] + pow(2, i-1, M) * pow(10, l*2**(i-1), M) * doublingconst[i-1]) % M

    def index_set_bits(num):
        return [i for i in range(60) if (num>>i)&1]
    def exponentiate_add(chousei, i, l):
        return pow(10, chousei*l, M)
    ansconst = sum((doublingconst[i] * exponentiate_add(sum(2**x for x in index_set_bits(n) if x < i), i, l))%M for i in index_set_bits(n))%M
    chousei = 0
    ansline = 0
    chousei_map = {}
    for i in base_range:
        if (n>>i)&1:
            chousei_map[i] = chousei
            ansline = (ansline + ((doublingline[i] + chousei*doublingconst[i]) * pow(10, chousei*l, M))%M )%M
            chousei += 2**i
    return (ansline*a%M + ansconst*b%M)%M

start = len(str(A))
end = len(str(B*L+A-B))
partitions = []
for i in range(start-1,end):
    l = (1+(10**i-A-1)//B)
    r = (10**(i+1)-A-1)//B
    l = max(0, l)
    r = min(L-1, r)
    partitions.append([i+1, l, r])

partitions.sort(reverse=True)
ans = 0
chousei = 0
for length, l, r in partitions:
    const = B*r+A
    line = B
    delta = r-l+1
    ans = (ans + (partsum(-line, const, length, delta) * pow(10, chousei, M))%M )%M
    chousei += length*delta

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.12712286412715912
    2. 'partial' → logprob: -2.6271228790283203
    3. ' wraps' → logprob: -3.6271228790283203
    4. 'reduce' → logprob: -4.00212287902832
    5. 'l' → logprob: -6.75212287902832
    6. ' partial' → logprob: -7.62712287902832
    7. 'cached' → logprob: -9.12712287902832
    8. 'cache' → logprob: -9.25212287902832
    9. '```' → logprob: -9.37712287902832
    10. 'cmp' → logprob: -9.37712287902832

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010288605466485023
    2. '(lambda' → logprob: -4.760288715362549
    3. ' (' → logprob: -7.385288715362549
    4. ',' → logprob: -7.885288715362549
    5. 'def' → logprob: -8.13528823852539
    6. '.' → logprob: -8.76028823852539
    7. '```' → logprob: -10.13528823852539
    8. '(
' → logprob: -10.51028823852539
    9. 'lambda' → logprob: -10.63528823852539
    10. 'a' → logprob: -10.76028823852539

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01442087721079588
    2. '(
' → logprob: -5.139420986175537
    3. '(lambda' → logprob: -5.389420986175537
    4. 'def' → logprob: -6.639420986175537
    5. ',' → logprob: -7.139420986175537
    6. '\' → logprob: -8.139420509338379
    7. ' ' → logprob: -8.264420509338379
    8. ' (' → logprob: -8.389420509338379
    9. '' → logprob: -9.139420509338379
    10. '
' → logprob: -9.139420509338379

Token 6: ' operator' (ID: 11019)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.9003138542175293
    2. ' operator' → logprob: -1.4003138542175293
    3. ' collections' → logprob: -1.7753138542175293
    4. ' itertools' → logprob: -1.7753138542175293
    5. ' os' → logprob: -5.025313854217529
    6. 'operator' → logprob: -7.400313854217529
    7. ' sys' → logprob: -8.525314331054688
    8. ' typing' → logprob: -8.525314331054688
    9. 'math' → logprob: -8.775314331054688
    10. 'collections' → logprob: -8.900314331054688

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.02192135713994503
    2. 'import' → logprob: -3.896921396255493
    3. ' ' → logprob: -7.146921157836914
    4. '.' → logprob: -7.521921157836914
    5. ' .' → logprob: -10.896921157836914
    6. '.import' → logprob: -11.271921157836914
    7. '	import' → logprob: -11.771921157836914
    8. '<|end|>' → logprob: -12.396921157836914
    9. '_import' → logprob: -13.271921157836914
    10. '-import' → logprob: -14.021921157836914

Token 8: ' mul' (ID: 9975)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.31903505325317383
    2. ' import' → logprob: -1.9440350532531738
    3. 'add' → logprob: -2.444035053253174
    4. ' ' → logprob: -4.069035053253174
    5. ' mul' → logprob: -4.194035053253174
    6. 'import' → logprob: -4.819035053253174
    7. 'mul' → logprob: -6.194035053253174
    8. ' item' → logprob: -8.694034576416016
    9. 'item' → logprob: -9.569034576416016
    10. ' ad' → logprob: -9.819034576416016

Token 9: ',' (ID: 11)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.8000438213348389
    2. '(' → logprob: -1.0500438213348389
    3. '\n' → logprob: -1.9250438213348389
    4. '*' → logprob: -4.050044059753418
    5. '(
' → logprob: -4.050044059753418
    6. '`' → logprob: -5.675044059753418
    7. ',' → logprob: -5.675044059753418
    8. '\(' → logprob: -6.050044059753418
    9. '```' → logprob: -6.425044059753418
    10. 'a' → logprob: -6.425044059753418

Token 10: ' or' (ID: 503)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.2834811806678772
    2. 'tr' → logprob: -1.9084811210632324
    3. ' tr' → logprob: -2.9084811210632324
    4. ' add' → logprob: -3.6584811210632324
    5. '```' → logprob: -4.908481121063232
    6. 'pow' → logprob: -5.158481121063232
    7. 'item' → logprob: -6.908481121063232
    8. 'xor' → logprob: -7.783481121063232
    9. '   ' → logprob: -7.908481121063232
    10. 'import' → logprob: -8.03348159790039

Token 11: '_
' (ID: 27437)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00542004220187664
    2. ',' → logprob: -6.505420207977295
    3. '_,' → logprob: -6.880420207977295
    4. 'r' → logprob: -7.630420207977295
    5. '`' → logprob: -8.130419731140137
    6. '```' → logprob: -8.130419731140137
    7. '_)' → logprob: -8.380419731140137
    8. 'and' → logprob: -8.755419731140137
    9. ')' → logprob: -8.755419731140137
    10. 'b' → logprob: -8.880419731140137

Token 12: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.228003740310669
    2. '(
' → logprob: -1.603003740310669
    3. '(' → logprob: -2.103003740310669
    4. '
' → logprob: -2.603003740310669
    5. '\n' → logprob: -2.603003740310669
    6. ',
' → logprob: -2.853003740310669
    7. '```' → logprob: -3.228003740310669
    8. '

' → logprob: -3.728003740310669
    9. '\' → logprob: -3.978003740310669
    10. '`' → logprob: -4.22800350189209

Token 13: ' itertools' (ID: 103178)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.6445581316947937
    2. ' itertools' → logprob: -1.6445581912994385
    3. 'fun' → logprob: -2.1445581912994385
    4. 'operator' → logprob: -2.3945581912994385
    5. 'it' → logprob: -3.8945581912994385
    6. 'typing' → logprob: -4.644557952880859
    7. ' math' → logprob: -4.769557952880859
    8. 'collections' → logprob: -4.894557952880859
    9. ' functools' → logprob: -5.144557952880859
    10. 'numpy' → logprob: -5.769557952880859

Token 14: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.20247015357017517
    2. 'import' → logprob: -1.7024701833724976
    3. '.' → logprob: -7.202470302581787
    4. ' .' → logprob: -8.827469825744629
    5. ' ' → logprob: -9.452469825744629
    6. '.import' → logprob: -9.952469825744629
    7. '	import' → logprob: -10.827469825744629
    8. '_import' → logprob: -11.952469825744629
    9. '```' → logprob: -13.077469825744629
    10. '<|end|>' → logprob: -13.577469825744629

Token 15: ' accumulate' (ID: 74226)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.326285481452942
    2. 'product' → logprob: -1.576285481452942
    3. 'chain' → logprob: -1.826285481452942
    4. 'com' → logprob: -1.951285481452942
    5. 'acc' → logprob: -2.0762853622436523
    6. ' product' → logprob: -3.5762853622436523
    7. ' chain' → logprob: -4.201285362243652
    8. 'per' → logprob: -4.326285362243652
    9. 'cycle' → logprob: -4.826285362243652
    10. 'is' → logprob: -5.201285362243652

Token 16: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.034393951296806335
    2. '(
' → logprob: -3.5343940258026123
    3. ',' → logprob: -6.159393787384033
    4. 'def' → logprob: -7.659393787384033
    5. ' (' → logprob: -8.034394264221191
    6. '(

' → logprob: -8.034394264221191
    7. '[' → logprob: -8.409394264221191
    8. '#' → logprob: -8.409394264221191
    9. ' ' → logprob: -9.159394264221191
    10. '`' → logprob: -9.284394264221191

Token 17: ' chain' (ID: 13464)
  Prédit: ' chain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chain' → logprob: -0.7471857070922852
    2. ' product' → logprob: -1.4971857070922852
    3. 'product' → logprob: -2.997185707092285
    4. 'chain' → logprob: -3.122185707092285
    5. ' count' → logprob: -3.247185707092285
    6. 'count' → logprob: -3.372185707092285
    7. ' group' → logprob: -3.622185707092285
    8. 'com' → logprob: -3.747185707092285
    9. ' st' → logprob: -4.122185707092285
    10. 'group' → logprob: -4.622185707092285

Token 18: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07030674070119858
    2. '(
' → logprob: -3.3203067779541016
    3. ',' → logprob: -3.6953067779541016
    4. 'def' → logprob: -6.570306777954102
    5. '#' → logprob: -6.820306777954102
    6. '\' → logprob: -7.320306777954102
    7. '(

' → logprob: -7.945306777954102
    8. ',
' → logprob: -7.945306777954102
    9. '[' → logprob: -8.070306777954102
    10. '\n' → logprob: -8.195306777954102

Token 19: ' group' (ID: 3566)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.5019915103912354
    2. ' zip' → logprob: -1.8769915103912354
    3. ' repeat' → logprob: -2.0019915103912354
    4. ' product' → logprob: -2.0019915103912354
    5. ' compress' → logprob: -2.5019915103912354
    6. 'com' → logprob: -2.6269915103912354
    7. ' cycle' → logprob: -3.3769915103912354
    8. ' filter' → logprob: -3.6269915103912354
    9. ' count' → logprob: -3.7519915103912354
    10. ' group' → logprob: -4.001991271972656

Token 20: 'by' (ID: 2345)
  Prédit: 'by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -2.2961512513575144e-05
    2. 'b' → logprob: -11.375022888183594
    3. 'y' → logprob: -12.625022888183594
    4. 'ing' → logprob: -13.125022888183594
    5. 's' → logprob: -13.500022888183594
    6. 'by's' → logprob: -14.250022888183594
    7. 'it' → logprob: -14.625022888183594
    8. 'py' → logprob: -14.875022888183594
    9. ',' → logprob: -15.000022888183594
    10. 'with' → logprob: -15.125022888183594

Token 21: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.42165786027908325
    2. '(
' → logprob: -1.4216578006744385
    3. 'def' → logprob: -3.1716578006744385
    4. '[' → logprob: -4.171658039093018
    5. ',' → logprob: -4.671658039093018
    6. '
' → logprob: -5.171658039093018
    7. '#' → logprob: -5.546658039093018
    8. '```' → logprob: -5.671658039093018
    9. '\n' → logprob: -6.171658039093018
    10. '\' → logprob: -6.171658039093018

Token 22: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1350880861282349
    2. '(' → logprob: -1.8850880861282349
    3. 'd' → logprob: -1.8850880861282349
    4. '(
' → logprob: -2.3850879669189453
    5. '#' → logprob: -2.5100879669189453
    6. '\' → logprob: -3.1350879669189453
    7. '`' → logprob: -3.3850879669189453
    8. ',' → logprob: -3.6350879669189453
    9. '*' → logprob: -4.510087966918945
    10. 'a' → logprob: -4.510087966918945

Token 23: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.8722217082977295
    2. 'collections' → logprob: -0.8722217082977295
    3. 'operator' → logprob: -2.8722217082977295
    4. ' math' → logprob: -3.2472217082977295
    5. 'typing' → logprob: -3.8722217082977295
    6. ' collections' → logprob: -3.8722217082977295
    7. 'os' → logprob: -5.622221946716309
    8. ' typing' → logprob: -5.747221946716309
    9. ' operator' → logprob: -5.747221946716309
    10. 'heap' → logprob: -6.247221946716309

Token 24: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.2297532558441162
    2. 'import' → logprob: -1.6047532558441162
    3. ' ' → logprob: -6.479753494262695
    4. '<|end|>' → logprob: -7.104753494262695
    5. '```' → logprob: -7.479753494262695
    6. '.sqrt' → logprob: -7.979753494262695
    7. '.' → logprob: -8.229753494262695
    8. 's' → logprob: -9.354753494262695
    9. ' inf' → logprob: -9.354753494262695
    10. '	import' → logprob: -9.604753494262695

Token 25: ' log' (ID: 2142)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.9303590059280396
    2. ' gcd' → logprob: -1.0553590059280396
    3. ' prod' → logprob: -2.43035888671875
    4. ' factorial' → logprob: -3.43035888671875
    5. 'ceil' → logprob: -3.55535888671875
    6. 'sqrt' → logprob: -3.68035888671875
    7. ' ceil' → logprob: -3.80535888671875
    8. 'g' → logprob: -4.30535888671875
    9. 'log' → logprob: -4.43035888671875
    10. ' comb' → logprob: -4.93035888671875

Token 26: '10' (ID: 702)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2364615499973297
    2. ',' → logprob: -2.611461639404297
    3. '(
' → logprob: -2.861461639404297
    4. '#' → logprob: -3.611461639404297
    5. 'def' → logprob: -4.236461639404297
    6. '_' → logprob: -4.736461639404297
    7. '\' → logprob: -4.986461639404297
    8. ',
' → logprob: -5.361461639404297
    9. '(

' → logprob: -6.236461639404297
    10. ')' → logprob: -6.736461639404297

Token 27: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.46320855617523193
    2. '(
' → logprob: -1.713208556175232
    3. 'def' → logprob: -2.7132086753845215
    4. '\' → logprob: -3.5882086753845215
    5. ',' → logprob: -3.7132086753845215
    6. '
' → logprob: -4.2132086753845215
    7. '#' → logprob: -4.2132086753845215
    8. ',
' → logprob: -5.0882086753845215
    9. '\n' → logprob: -5.4632086753845215
    10. 'd' → logprob: -5.4632086753845215

Token 28: ' ceil' (ID: 35964)
  Prédit: 'ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -0.34390488266944885
    2. 'sqrt' → logprob: -1.7189048528671265
    3. ' ceil' → logprob: -3.468904972076416
    4. 'floor' → logprob: -3.593904972076416
    5. 'log' → logprob: -3.843904972076416
    6. 'pow' → logprob: -4.593904972076416
    7. ' sqrt' → logprob: -5.593904972076416
    8. ' factorial' → logprob: -5.843904972076416
    9. ' floor' → logprob: -6.093904972076416
    10. 'exp' → logprob: -6.343904972076416

Token 29: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.160851001739502
    2. '(' → logprob: -1.660851001739502
    3. '#' → logprob: -2.410851001739502
    4. ',' → logprob: -2.535851001739502
    5. '(
' → logprob: -2.535851001739502
    6. '\' → logprob: -2.660851001739502
    7. 'd' → logprob: -2.910851001739502
    8. ',
' → logprob: -3.910851001739502
    9. '`' → logprob: -4.035851001739502
    10. '
' → logprob: -4.035851001739502

Token 30: 'from' (ID: 2845)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.761660635471344
    2. 'def' → logprob: -1.1366605758666992
    3. '#' → logprob: -2.761660575866699
    4. ',' → logprob: -3.761660575866699
    5. 'a' → logprob: -4.011660575866699
    6. '
' → logprob: -4.136660575866699
    7. '\' → logprob: -4.386660575866699
    8. '*' → logprob: -4.636660575866699
    9. 'n' → logprob: -4.636660575866699
    10. '(' → logprob: -4.761660575866699

Token 31: ' collections' (ID: 22690)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.8893253207206726
    2. ' fractions' → logprob: -1.7643253803253174
    3. ' collections' → logprob: -2.0143253803253174
    4. ' decimal' → logprob: -2.3893253803253174
    5. ' random' → logprob: -3.0143253803253174
    6. ' typing' → logprob: -3.3893253803253174
    7. ' ' → logprob: -3.7643253803253174
    8. ' functools' → logprob: -4.264325141906738
    9. ' math' → logprob: -4.389325141906738
    10. 'operator' → logprob: -4.514325141906738

Token 32: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.35714417695999146
    2. 'import' → logprob: -1.2321441173553467
    3. '.' → logprob: -5.107144355773926
    4. '<|end|>' → logprob: -6.357144355773926
    5. ' ' → logprob: -7.607144355773926
    6. '	import' → logprob: -9.607144355773926
    7. '```' → logprob: -9.607144355773926
    8. '.Counter' → logprob: -9.857144355773926
    9. 'abc' → logprob: -9.982144355773926
    10. ' defaultdict' → logprob: -10.607144355773926

Token 33: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.012097404338419437
    2. ' Counter' → logprob: -4.762097358703613
    3. ' deque' → logprob: -6.387097358703613
    4. 'default' → logprob: -7.262097358703613
    5. ' abc' → logprob: -8.012097358703613
    6. 'deque' → logprob: -8.137097358703613
    7. ' named' → logprob: -8.387097358703613
    8. 'Counter' → logprob: -8.887097358703613
    9. ' default' → logprob: -10.512097358703613
    10. 'abc' → logprob: -11.012097358703613

Token 34: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.887187123298645
    2. '
' → logprob: -1.012187123298645
    3. '

' → logprob: -2.3871870040893555
    4. '#' → logprob: -2.8871870040893555
    5. ',' → logprob: -3.7621870040893555
    6. 'd' → logprob: -4.0121870040893555
    7. '' → logprob: -5.3871870040893555
    8. '<|end|>' → logprob: -5.5121870040893555
    9. 'a' → logprob: -5.6371870040893555
    10. ' 

' → logprob: -6.0121870040893555

Token 35: 'L' (ID: 43)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20821531116962433
    2. 'd' → logprob: -1.958215355873108
    3. '#' → logprob: -3.7082152366638184
    4. 'a' → logprob: -5.458215236663818
    5. 'n' → logprob: -5.833215236663818
    6. 'class' → logprob: -5.833215236663818
    7. 'de' → logprob: -5.958215236663818
    8. '```' → logprob: -6.208215236663818
    9. '_' → logprob: -6.583215236663818
    10. '\' → logprob: -6.958215236663818

Token 36: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.658841609954834
    2. '_' → logprob: -2.283841609954834
    3. ' =' → logprob: -3.033841609954834
    4. 'e' → logprob: -3.283841609954834
    5. 'IST' → logprob: -3.408841609954834
    6. 'I' → logprob: -3.533841609954834
    7. 'ist' → logprob: -3.533841609954834
    8. 'E' → logprob: -3.658841609954834
    9. 'ambda' → logprob: -3.658841609954834
    10. '=[]' → logprob: -3.658841609954834

Token 37: ' A' (ID: 355)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -1.4769773483276367
    2. ' R' → logprob: -1.6019773483276367
    3. ' ' → logprob: -2.1019773483276367
    4. 'N' → logprob: -2.1019773483276367
    5. ' N' → logprob: -2.6019773483276367
    6. ' n' → logprob: -3.1019773483276367
    7. ' =' → logprob: -3.3519773483276367
    8. 'n' → logprob: -3.4769773483276367
    9. ' M' → logprob: -4.601977348327637
    10. '=' → logprob: -4.601977348327637

Token 38: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0823039785027504
    2. ' =' → logprob: -2.582304000854492
    3. ',' → logprob: -5.707304000854492
    4. ' ' → logprob: -10.457304000854492
    5. '_' → logprob: -10.832304000854492
    6. '.' → logprob: -11.457304000854492
    7. ')' → logprob: -12.082304000854492
    8. '[' → logprob: -12.957304000854492
    9. '=[]' → logprob: -12.957304000854492
    10. '=

' → logprob: -13.082304000854492

Token 39: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.184883713722229
    2. ' B' → logprob: -1.934883713722229
    3. 'R' → logprob: -2.3098835945129395
    4. '_' → logprob: -2.6848835945129395
    5. 'N' → logprob: -2.9348835945129395
    6. ' R' → logprob: -3.1848835945129395
    7. ' =' → logprob: -3.4348835945129395
    8. 'D' → logprob: -3.6848835945129395
    9. 'M' → logprob: -3.9348835945129395
    10. ' N' → logprob: -3.9348835945129395

Token 40: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4294893145561218
    2. ' =' → logprob: -1.0544893741607666
    3. ',' → logprob: -7.1794891357421875
    4. ')' → logprob: -11.679489135742188
    5. '<|end|>' → logprob: -11.929489135742188
    6. ' ' → logprob: -13.179489135742188
    7. '.' → logprob: -13.429489135742188
    8. ' =
' → logprob: -13.554489135742188
    9. ' ,' → logprob: -13.679489135742188
    10. '  ' → logprob: -14.179489135742188

Token 41: ' M' (ID: 391)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.35918617248535156
    2. ' C' → logprob: -1.9841861724853516
    3. 'N' → logprob: -3.2341861724853516
    4. ' =' → logprob: -3.4841861724853516
    5. '=' → logprob: -3.9841861724853516
    6. '_' → logprob: -4.234186172485352
    7. 'K' → logprob: -4.734186172485352
    8. 'M' → logprob: -4.984186172485352
    9. ' N' → logprob: -5.109186172485352
    10. 'n' → logprob: -5.734186172485352

Token 42: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10060171037912369
    2. ' =' → logprob: -2.3506016731262207
    3. ',' → logprob: -7.850601673126221
    4. '=

' → logprob: -13.100602149963379
    5. ' ,' → logprob: -14.225602149963379
    6. '=
' → logprob: -14.600602149963379
    7. ')' → logprob: -14.725602149963379
    8. ' =
' → logprob: -14.725602149963379
    9. ' ' → logprob: -15.225602149963379
    10. '=int' → logprob: -15.350602149963379

Token 43: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.8648066520690918
    2. 'map' → logprob: -1.4898066520690918
    3. ' ' → logprob: -1.6148066520690918
    4. '0' → logprob: -2.364806652069092
    5. '10' → logprob: -3.489806652069092
    6. '1' → logprob: -4.989806652069092
    7. '100' → logprob: -5.114806652069092
    8. '5' → logprob: -5.364806652069092
    9. 'input' → logprob: -6.489806652069092
    10. '4' → logprob: -6.614806652069092

Token 44: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004578699823468924
    2. '(lambda' → logprob: -6.129578590393066
    3. '<|end|>' → logprob: -6.254578590393066
    4. '(int' → logprob: -8.004578590393066
    5. '(
' → logprob: -10.004578590393066
    6. '(str' → logprob: -11.754578590393066
    7. '(input' → logprob: -12.129578590393066
    8. '(.' → logprob: -12.379578590393066
    9. '((' → logprob: -12.379578590393066
    10. '(

' → logprob: -12.504578590393066

Token 45: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.37020403146743774
    2. ')' → logprob: -1.870203971862793
    3. 'input' → logprob: -1.995203971862793
    4. ',input' → logprob: -4.620203971862793
    5. '(' → logprob: -5.245203971862793
    6. ',' → logprob: -6.120203971862793
    7. ' input' → logprob: -6.995203971862793
    8. '=input' → logprob: -7.870203971862793
    9. ')(' → logprob: -8.745203971862793
    10. '[input' → logprob: -8.870203971862793

Token 46: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2015065997838974
    2. ' input' → logprob: -1.7015066146850586
    3. ')' → logprob: -10.326506614685059
    4. '(input' → logprob: -10.451506614685059
    5. ',input' → logprob: -11.326506614685059
    6. '=input' → logprob: -12.076506614685059
    7. '	input' → logprob: -12.576506614685059
    8. 'open' → logprob: -12.576506614685059
    9. ' ' → logprob: -13.576506614685059
    10. '[input' → logprob: -13.701506614685059

Token 47: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.009122888557612896
    2. '())' → logprob: -5.009122848510742
    3. '()' → logprob: -6.634122848510742
    4. ')' → logprob: -6.884122848510742
    5. '(' → logprob: -11.134122848510742
    6. '()>' → logprob: -11.134122848510742
    7. '());' → logprob: -11.134122848510742
    8. '();)' → logprob: -11.759122848510742
    9. '(),' → logprob: -12.884122848510742
    10. '();' → logprob: -13.134122848510742

Token 48: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0006377388490363955
    2. 'strip' → logprob: -7.375637531280518
    3. ')' → logprob: -12.875638008117676
    4. '(split' → logprob: -12.875638008117676
    5. ' split' → logprob: -13.000638008117676
    6. 'rstrip' → logprob: -13.375638008117676
    7. '().' → logprob: -13.625638008117676
    8. 'read' → logprob: -14.875638008117676
    9. 'spl' → logprob: -15.125638008117676
    10. 's' → logprob: -16.25063705444336

Token 49: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00791914016008377
    2. '))' → logprob: -4.8829193115234375
    3. '())' → logprob: -9.132919311523438
    4. '),' → logprob: -10.007919311523438
    5. '(' → logprob: -10.007919311523438
    6. ')))' → logprob: -10.632919311523438
    7. '`)' → logprob: -10.757919311523438
    8. '('' → logprob: -11.382919311523438
    9. ')(' → logprob: -11.507919311523438
    10. '')' → logprob: -11.757919311523438

Token 50: 'def' (ID: 1314)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8707093000411987
    2. 'data' → logprob: -2.4957094192504883
    3. 'n' → logprob: -2.6207094192504883
    4. 'numbers' → logprob: -2.6207094192504883
    5. 'arr' → logprob: -2.7457094192504883
    6. 'def' → logprob: -2.8707094192504883
    7. 'for' → logprob: -3.2457094192504883
    8. 's' → logprob: -3.3707094192504883
    9. 'result' → logprob: -3.3707094192504883
    10. 'd' → logprob: -3.7457094192504883

Token 51: ' parts' (ID: 7881)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.5312513113021851
    2. ' calculate' → logprob: -2.2812514305114746
    3. ' count' → logprob: -2.7812514305114746
    4. ' f' → logprob: -3.1562514305114746
    5. ' factorial' → logprob: -3.1562514305114746
    6. ' main' → logprob: -3.2812514305114746
    7. ' factor' → logprob: -3.5312514305114746
    8. ' compute' → logprob: -4.406251430511475
    9. ' solution' → logprob: -4.656251430511475
    10. ' multiply' → logprob: -4.781251430511475

Token 52: 'um' (ID: 394)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03722681850194931
    2. '_of' → logprob: -4.662226676940918
    3. '_' → logprob: -4.787226676940918
    4. '((' → logprob: -5.787226676940918
    5. '(_' → logprob: -5.912226676940918
    6. '_(' → logprob: -6.162226676940918
    7. '(a' → logprob: -6.662226676940918
    8. '_list' → logprob: -6.787226676940918
    9. '_at' → logprob: -6.912226676940918
    10. '```' → logprob: -7.287226676940918

Token 53: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002710603876039386
    2. '(a' → logprob: -6.752710819244385
    3. '(x' → logprob: -8.377710342407227
    4. '(s' → logprob: -8.377710342407227
    5. '(:' → logprob: -8.627710342407227
    6. '(n' → logprob: -8.752710342407227
    7. 's' → logprob: -9.127710342407227
    8. '_' → logprob: -9.127710342407227
    9. '((' → logprob: -9.502710342407227
    10. '():' → logprob: -10.002710342407227

Token 54: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08402929455041885
    2. ',' → logprob: -2.584029197692871
    3. ')' → logprob: -5.709029197692871
    4. 's' → logprob: -6.959029197692871
    5. '[]):' → logprob: -8.209029197692871
    6. '[' → logprob: -8.959029197692871
    7. '):
' → logprob: -9.334029197692871
    8. ' ):' → logprob: -9.834029197692871
    9. ')):' → logprob: -10.084029197692871
    10. ',n' → logprob: -10.709029197692871

Token 55: ' b' (ID: 287)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.690945029258728
    2. 'b' → logprob: -0.940945029258728
    3. 'k' → logprob: -3.6909451484680176
    4. ' n' → logprob: -3.9409451484680176
    5. 'i' → logprob: -4.065945148468018
    6. ' b' → logprob: -4.315945148468018
    7. ')' → logprob: -5.190945148468018
    8. '):' → logprob: -5.315945148468018
    9. 'p' → logprob: -5.565945148468018
    10. 'l' → logprob: -5.940945148468018

Token 56: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0027257020119577646
    2. ')' → logprob: -6.127725601196289
    3. ',' → logprob: -7.752725601196289
    4. '=' → logprob: -10.127725601196289
    5. ' ):' → logprob: -10.627725601196289
    6. '):
' → logprob: -11.252725601196289
    7. ':' → logprob: -11.252725601196289
    8. ')):' → logprob: -12.627725601196289
    9. '_' → logprob: -12.752725601196289
    10. '),' → logprob: -13.127725601196289

Token 57: ' l' (ID: 305)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.029598355293274
    2. 'n' → logprob: -1.404598355293274
    3. ')' → logprob: -2.7795982360839844
    4. 'm' → logprob: -2.9045982360839844
    5. ' c' → logprob: -3.0295982360839844
    6. ' n' → logprob: -3.1545982360839844
    7. '):' → logprob: -3.2795982360839844
    8. 'k' → logprob: -3.5295982360839844
    9. 'i' → logprob: -4.029598236083984
    10. ' )' → logprob: -4.279598236083984

Token 58: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.036134760826826096
    2. 'en' → logprob: -4.036134719848633
    3. 'ength' → logprob: -5.411134719848633
    4. '=' → logprob: -5.536134719848633
    5. '):
' → logprob: -5.661134719848633
    6. '):
' → logprob: -6.286134719848633
    7. ',' → logprob: -7.161134719848633
    8. ')' → logprob: -7.161134719848633
    9. 'e' → logprob: -7.161134719848633
    10. '):

' → logprob: -8.411134719848633

Token 59: ' n' (ID: 297)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.0132521390914917
    2. 'r' → logprob: -1.3882521390914917
    3. ' m' → logprob: -2.5132522583007812
    4. 'n' → logprob: -3.0132522583007812
    5. ' r' → logprob: -3.0132522583007812
    6. ')' → logprob: -3.2632522583007812
    7. 'c' → logprob: -3.2632522583007812
    8. 'k' → logprob: -4.388252258300781
    9. ' n' → logprob: -4.388252258300781
    10. 'p' → logprob: -4.638252258300781

Token 60: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005833287723362446
    2. ')' → logprob: -5.255833148956299
    3. ',' → logprob: -7.755833148956299
    4. '=' → logprob: -9.005833625793457
    5. ':' → logprob: -11.505833625793457
    6. ' ):' → logprob: -11.755833625793457
    7. '):
' → logprob: -11.880833625793457
    8. 's' → logprob: -12.005833625793457
    9. ')=' → logprob: -13.130833625793457
    10. 'u' → logprob: -13.255833625793457

Token 61: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0023658976424485445
    2. ' :' → logprob: -6.627366065979004
    3. '):' → logprob: -7.127366065979004
    4. ',' → logprob: -9.502366065979004
    5. ':
' → logprob: -9.877366065979004
    6. ':return' → logprob: -10.502366065979004
    7. ':**' → logprob: -10.627366065979004
    8. '():' → logprob: -10.752366065979004
    9. ')' → logprob: -10.877366065979004
    10. '   ' → logprob: -12.502366065979004

Token 62: ' base' (ID: 3611)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4953514635562897
    2. ':' → logprob: -0.9953514337539673
    3. ' :' → logprob: -5.120351314544678
    4. '   ' → logprob: -5.745351314544678
    5. 'r' → logprob: -6.120351314544678
    6. ' 
' → logprob: -6.370351314544678
    7. ')' → logprob: -6.495351314544678
    8. ',' → logprob: -6.870351314544678
    9. ':
' → logprob: -7.495351314544678
    10. '=' → logprob: -7.745351314544678

Token 63: '_range' (ID: 22022)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10248640179634094
    2. ' =' → logprob: -2.3524863719940186
    3. '_' → logprob: -6.852486610412598
    4. ',' → logprob: -7.727486610412598
    5. 's' → logprob: -8.602486610412598
    6. ')' → logprob: -8.602486610412598
    7. 'd' → logprob: -9.352486610412598
    8. 'pow' → logprob: -9.852486610412598
    9. '^' → logprob: -10.477486610412598
    10. 'log' → logprob: -10.977486610412598

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5234307050704956
    2. '=' → logprob: -0.8984307050704956
    3. 's' → logprob: -8.398430824279785
    4. ',' → logprob: -10.398430824279785
    5. ')' → logprob: -11.398430824279785
    6. '=[]' → logprob: -11.898430824279785
    7. '_' → logprob: -12.023430824279785
    8. ' ' → logprob: -12.648430824279785
    9. '   ' → logprob: -12.773430824279785
    10. '=

' → logprob: -13.273430824279785

Token 65: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6404045820236206
    2. 'range' → logprob: -1.0154045820236206
    3. ' b' → logprob: -3.14040470123291
    4. 'b' → logprob: -3.64040470123291
    5. ' list' → logprob: -4.39040470123291
    6. ' a' → logprob: -5.89040470123291
    7. 'list' → logprob: -6.01540470123291
    8. '(range' → logprob: -6.26540470123291
    9. 'l' → logprob: -6.39040470123291
    10. ' (' → logprob: -6.39040470123291

Token 66: '(' (ID: 7)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.6323100924491882
    2. '(' → logprob: -1.382310152053833
    3. '(n' → logprob: -1.882310152053833
    4. '(a' → logprob: -2.757310152053833
    5. '(b' → logprob: -7.007309913635254
    6. '(len' → logprob: -8.132309913635254
    7. '(L' → logprob: -8.257309913635254
    8. '(A' → logprob: -9.507309913635254
    9. '(
' → logprob: -10.007309913635254
    10. '(s' → logprob: -10.257309913635254

Token 67: '0' (ID: 15)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.7690374851226807
    2. '(l' → logprob: -1.5190374851226807
    3. '(a' → logprob: -2.0190374851226807
    4. '(' → logprob: -2.3940374851226807
    5. 'l' → logprob: -3.0190374851226807
    6. 'n' → logprob: -4.144037246704102
    7. 'a' → logprob: -4.519037246704102
    8. '(b' → logprob: -5.019037246704102
    9. '1' → logprob: -5.519037246704102
    10. '(L' → logprob: -6.269037246704102

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023752963170409203
    2. ' ,' → logprob: -6.87737512588501
    3. ',n' → logprob: -6.87737512588501
    4. ',l' → logprob: -8.627375602722168
    5. 'l' → logprob: -9.877375602722168
    6. ')' → logprob: -10.752375602722168
    7. 'n' → logprob: -11.002375602722168
    8. '(n' → logprob: -11.627375602722168
    9. ',
' → logprob: -11.877375602722168
    10. '(' → logprob: -12.252375602722168

Token 69: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0470716953277588
    2. 'l' → logprob: -1.2970716953277588
    3. ' n' → logprob: -1.5470716953277588
    4. ' l' → logprob: -2.047071695327759
    5. ' M' → logprob: -4.79707145690918
    6. 'M' → logprob: -5.04707145690918
    7. 'b' → logprob: -5.92207145690918
    8. ' b' → logprob: -6.04707145690918
    9. 'a' → logprob: -6.04707145690918
    10. ' a' → logprob: -6.54707145690918

Token 70: '60' (ID: 1910)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4449477791786194
    2. 'l' → logprob: -1.0699477195739746
    3. 'min' → logprob: -5.194947719573975
    4. 'M' → logprob: -5.444947719573975
    5. 'b' → logprob: -6.069947719573975
    6. 'a' → logprob: -7.194947719573975
    7. 'L' → logprob: -7.319947719573975
    8. '2' → logprob: -7.944947719573975
    9. ' n' → logprob: -8.319948196411133
    10. 'm' → logprob: -8.319948196411133

Token 71: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16333656013011932
    2. ',' → logprob: -1.9133365154266357
    3. ' )' → logprob: -6.538336753845215
    4. '0' → logprob: -7.413336753845215
    5. '+' → logprob: -7.913336753845215
    6. ' ,' → logprob: -8.163336753845215
    7. '-' → logprob: -9.413336753845215
    8. ',)' → logprob: -10.038336753845215
    9. '),' → logprob: -10.163336753845215
    10. ' -' → logprob: -10.288336753845215

Token 72: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07053305953741074
    2. ')' → logprob: -3.195533037185669
    3. ',' → logprob: -5.070533275604248
    4. '):' → logprob: -5.320533275604248
    5. ' ' → logprob: -5.570533275604248
    6. ' :' → logprob: -5.570533275604248
    7. ':
' → logprob: -5.945533275604248
    8. '   ' → logprob: -6.195533275604248
    9. '[' → logprob: -6.570533275604248
    10. '.' → logprob: -7.445533275604248

Token 73: ' doubling' (ID: 122384)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1837426871061325
    2. ' :' → logprob: -2.3087427616119385
    3. '   ' → logprob: -3.6837427616119385
    4. ' ' → logprob: -4.433742523193359
    5. ':
' → logprob: -4.558742523193359
    6. ',' → logprob: -5.558742523193359
    7. ' :
' → logprob: -5.683742523193359
    8. '    ' → logprob: -5.808742523193359
    9. ')' → logprob: -5.933742523193359
    10. '
' → logprob: -6.308742523193359

Token 74: 'const' (ID: 1671)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8685624599456787
    2. 's' → logprob: -1.4935624599456787
    3. ' =' → logprob: -1.6185624599456787
    4. '=' → logprob: -2.2435624599456787
    5. '_ranges' → logprob: -4.243562698364258
    6. '_steps' → logprob: -4.618562698364258
    7. ' ' → logprob: -5.743562698364258
    8. '[' → logprob: -6.118562698364258
    9. ',' → logprob: -6.243562698364258
    10. '_times' → logprob: -6.493562698364258

Token 75: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6178390383720398
    2. ' =' → logprob: -0.8678390383720398
    3. '=' → logprob: -3.2428390979766846
    4. ' ' → logprob: -7.1178388595581055
    5. '_' → logprob: -7.2428388595581055
    6. '_s' → logprob: -8.742838859558105
    7. ',' → logprob: -9.742838859558105
    8. ' s' → logprob: -10.242838859558105
    9. 'a' → logprob: -10.742838859558105
    10. 'es' → logprob: -10.867838859558105

Token 76: ' list' (ID: 1562)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.49644750356674194
    2. '2' → logprob: -2.2464475631713867
    3. ' (' → logprob: -2.9964475631713867
    4. '1' → logprob: -3.1214475631713867
    5. ' a' → logprob: -3.2464475631713867
    6. ' b' → logprob: -3.2464475631713867
    7. ' [' → logprob: -3.7464475631713867
    8. 'b' → logprob: -4.246447563171387
    9. 'a' → logprob: -4.746447563171387
    10. ' l' → logprob: -4.746447563171387

Token 77: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.02522064372897148
    2. '(chain' → logprob: -4.40022087097168
    3. '(' → logprob: -4.52522087097168
    4. '(range' → logprob: -7.27522087097168
    5. '(ac' → logprob: -7.52522087097168
    6. '(map' → logprob: -8.02522087097168
    7. '(re' → logprob: -10.15022087097168
    8. '(
' → logprob: -10.27522087097168
    9. '()' → logprob: -10.65022087097168
    10. '(zip' → logprob: -10.90022087097168

Token 78: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -8.566264295950532e-05
    2. 'um' → logprob: -9.500085830688477
    3. 'om' → logprob: -12.000085830688477
    4. 'umul' → logprob: -13.250085830688477
    5. 'umu' → logprob: -14.250085830688477
    6. 'umal' → logprob: -14.375085830688477
    7. 'umut' → logprob: -15.125085830688477
    8. 'ulate' → logprob: -15.625085830688477
    9. 'umulator' → logprob: -15.750085830688477
    10. 'eler' → logprob: -15.875085830688477

Token 79: '(
' (ID: 1607)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.4680030941963196
    2. '(' → logprob: -1.2180030345916748
    3. '(chain' → logprob: -3.593003034591675
    4. '([' → logprob: -4.093003273010254
    5. '<|end|>' → logprob: -4.343003273010254
    6. '(m' → logprob: -4.843003273010254
    7. '(range' → logprob: -5.218003273010254
    8. '(or' → logprob: -5.843003273010254
    9. '(
' → logprob: -6.718003273010254
    10. ')' → logprob: -7.468003273010254

Token 80: '       ' (ID: 309)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.3202303946018219
    2. '(' → logprob: -1.8202303647994995
    3. '(chain' → logprob: -2.320230484008789
    4. '(
' → logprob: -5.320230484008789
    5. '   ' → logprob: -5.570230484008789
    6. '(re' → logprob: -6.945230484008789
    7. '(range' → logprob: -7.320230484008789
    8. '([' → logprob: -7.445230484008789
    9. '(or' → logprob: -7.570230484008789
    10. '(m' → logprob: -7.570230484008789

Token 81: ' (' (ID: 350)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.5008138418197632
    2. '(chain' → logprob: -2.1258139610290527
    3. '   ' → logprob: -2.3758139610290527
    4. 'lambda' → logprob: -2.5008139610290527
    5. 'chain' → logprob: -3.2508139610290527
    6. '(' (adapté à ' (') → logprob: -4.125813961029053
    7. 'mul' → logprob: -5.000813961029053
    8. '[' → logprob: -5.250813961029053
    9. '(acc' → logprob: -5.250813961029053
    10. ')' → logprob: -5.625813961029053

Token 82: 'lambda' (ID: 35280)
  Prédit: 'lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.9093260765075684
    2. 'b' → logprob: -1.7843260765075684
    3. 'or' → logprob: -1.9093260765075684
    4. 'a' → logprob: -2.4093260765075684
    5. '(lambda' → logprob: -3.1593260765075684
    6. ' lambda' → logprob: -3.9093260765075684
    7. '   ' → logprob: -3.9093260765075684
    8. ' or' → logprob: -4.034326076507568
    9. 'mul' → logprob: -4.159326076507568
    10. 'log' → logprob: -4.284326076507568

Token 83: ' acc' (ID: 1259)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5454582571983337
    2. 'x' → logprob: -1.5454583168029785
    3. ' a' → logprob: -3.5454583168029785
    4. 'a' → logprob: -3.5454583168029785
    5. ' i' → logprob: -3.5454583168029785
    6. ' n' → logprob: -4.0454583168029785
    7. 'i' → logprob: -4.1704583168029785
    8. ' c' → logprob: -4.4204583168029785
    9. '   ' → logprob: -4.9204583168029785
    10. 'n' → logprob: -4.9204583168029785

Token 84: '=[' (ID: 13370)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015194768086075783
    2. 'a' → logprob: -5.265194892883301
    3. ':' → logprob: -5.515194892883301
    4. 'ambda' → logprob: -7.015194892883301
    5. 'd' → logprob: -7.140194892883301
    6. ' ,' → logprob: -7.265194892883301
    7. 'x' → logprob: -7.265194892883301
    8. 's' → logprob: -7.765194892883301
    9. '   ' → logprob: -7.890194892883301
    10. 'n' → logprob: -8.3901948928833

Token 85: '1' (ID: 16)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.34652870893478394
    2. '1' → logprob: -2.3465287685394287
    3. '2' → logprob: -3.0965287685394287
    4. '0' → logprob: -3.2215287685394287
    5. 'b' → logprob: -3.5965287685394287
    6. '(a' → logprob: -4.22152853012085
    7. ' a' → logprob: -4.59652853012085
    8. 'log' → logprob: -4.84652853012085
    9. '(' → logprob: -4.97152853012085
    10. 'l' → logprob: -5.09652853012085

Token 86: ']:' (ID: 12433)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04362795501947403
    2. ',' → logprob: -4.293627738952637
    3. ' :' → logprob: -4.793627738952637
    4. ']:' → logprob: -5.043627738952637
    5. '[' → logprob: -5.668627738952637
    6. ']' → logprob: -6.293627738952637
    7. '[-' → logprob: -6.418627738952637
    8. ',:' → logprob: -7.418627738952637
    9. 'lambda' → logprob: -7.418627738952637
    10. ',b' → logprob: -7.668627738952637

Token 87: ' ((' (ID: 3536)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.4736504852771759
    2. '(lambda' → logprob: -1.8486504554748535
    3. 'lambda' → logprob: -1.9736504554748535
    4. ' (' → logprob: -3.4736504554748535
    5. 'acc' → logprob: -4.3486504554748535
    6. ' acc' → logprob: -4.5986504554748535
    7. '(acc' → logprob: -4.5986504554748535
    8. '[' → logprob: -5.5986504554748535
    9. '(' → logprob: -5.7236504554748535
    10. ')' → logprob: -6.4736504554748535

Token 88: 'yield' (ID: 68396)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.2662888765335083
    2. 'lambda' → logprob: -1.7662888765335083
    3. 'b' → logprob: -4.516288757324219
    4. ' acc' → logprob: -4.766288757324219
    5. '(lambda' → logprob: -4.766288757324219
    6. '(acc' → logprob: -5.141288757324219
    7. '   ' → logprob: -5.391288757324219
    8. 'a' → logprob: -5.391288757324219
    9. 'x' → logprob: -5.516288757324219
    10. ' lambda' → logprob: -5.641288757324219

Token 89: ' from' (ID: 591)
  Prédit: ' acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.6290115714073181
    2. 'acc' → logprob: -1.004011631011963
    3. 'a' → logprob: -3.754011631011963
    4. '2' → logprob: -4.004011631011963
    5. ' a' → logprob: -4.379011631011963
    6. ' ' → logprob: -4.504011631011963
    7. '(acc' → logprob: -4.629011631011963
    8. ' (' → logprob: -5.004011631011963
    9. 'b' → logprob: -5.254011631011963
    10. 'from' → logprob: -6.004011631011963

Token 90: ' [' (ID: 723)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.7878749966621399
    2. ' (' → logprob: -1.4128749370574951
    3. '(' → logprob: -2.537874937057495
    4. '(range' → logprob: -2.662874937057495
    5. '(a' → logprob: -2.787874937057495
    6. '(b' → logprob: -4.287875175476074
    7. '(chain' → logprob: -4.662875175476074
    8. '((' → logprob: -4.662875175476074
    9. ')' → logprob: -5.037875175476074
    10. 'acc' → logprob: -5.412875175476074

Token 91: '((' (ID: 2054)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -1.0938698053359985
    2. '2' → logprob: -1.2188698053359985
    3. 'a' → logprob: -1.5938698053359985
    4. 'b' → logprob: -3.218869686126709
    5. ' acc' → logprob: -3.343869686126709
    6. '(' → logprob: -4.093869686126709
    7. '1' → logprob: -4.343869686126709
    8. ' ' → logprob: -4.593869686126709
    9. ' a' → logprob: -4.718869686126709
    10. '(acc' → logprob: -4.843869686126709

Token 92: 'pow' (ID: 30304)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.15544642508029938
    2. '2' → logprob: -3.4054465293884277
    3. '(acc' → logprob: -3.4054465293884277
    4. 'a' → logprob: -3.6554465293884277
    5. 'b' → logprob: -4.030446529388428
    6. '(' → logprob: -4.530446529388428
    7. ' acc' → logprob: -5.155446529388428
    8. 'x' → logprob: -5.530446529388428
    9. '(b' → logprob: -6.530446529388428
    10. '1' → logprob: -6.655446529388428

Token 93: '(' (ID: 7)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.7142203450202942
    2. '(' → logprob: -0.8392203450202942
    3. '2' → logprob: -3.4642202854156494
    4. '(b' → logprob: -3.7142202854156494
    5. 'a' → logprob: -4.2142205238342285
    6. '((' → logprob: -6.2142205238342285
    7. '(l' → logprob: -6.4642205238342285
    8. 'b' → logprob: -6.9642205238342285
    9. '(base' → logprob: -6.9642205238342285
    10. '(
' → logprob: -8.08922004699707

Token 94: '10' (ID: 702)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6328111290931702
    2. 'a' → logprob: -0.8828111290931702
    3. 'b' → logprob: -3.0078110694885254
    4. 'l' → logprob: -6.257811069488525
    5. '(a' → logprob: -7.632811069488525
    6. 'n' → logprob: -7.757811069488525
    7. '10' → logprob: -8.007811546325684
    8. 'B' → logprob: -8.007811546325684
    9. '(' → logprob: -8.257811546325684
    10. 'M' → logprob: -8.507811546325684

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21756891906261444
    2. 'b' → logprob: -3.342568874359131
    3. ')' → logprob: -3.467568874359131
    4. 'l' → logprob: -3.842568874359131
    5. 'a' → logprob: -3.842568874359131
    6. ',b' → logprob: -4.092568874359131
    7. ',l' → logprob: -4.217568874359131
    8. '**' → logprob: -4.592568874359131
    9. ' ,' → logprob: -4.717568874359131
    10. '
' → logprob: -5.592568874359131

Token 96: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8186514973640442
    2. 'a' → logprob: -1.6936514377593994
    3. 'acc' → logprob: -2.1936514377593994
    4. 'i' → logprob: -2.6936514377593994
    5. '2' → logprob: -3.5686514377593994
    6. '(' → logprob: -3.6936514377593994
    7. 'b' → logprob: -3.8186514377593994
    8. 'k' → logprob: -3.9436514377593994
    9. 'x' → logprob: -4.4436516761779785
    10. 'n' → logprob: -4.6936516761779785

Token 97: '*' (ID: 9)
  Prédit: '*n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*n' → logprob: -1.2285720109939575
    2. '**' → logprob: -1.8535720109939575
    3. '*i' → logprob: -2.353571891784668
    4. '*' → logprob: -2.478571891784668
    5. ' *' → logprob: -2.603571891784668
    6. '*a' → logprob: -2.853571891784668
    7. '*b' → logprob: -3.103571891784668
    8. ')' → logprob: -3.103571891784668
    9. '*(' → logprob: -3.228571891784668
    10. '),' → logprob: -3.603571891784668

Token 98: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05309300497174263
    2. '2' → logprob: -3.5530929565429688
    3. 'pow' → logprob: -4.803092956542969
    4. '(pow' → logprob: -4.928092956542969
    5. 'acc' → logprob: -6.178092956542969
    6. '(acc' → logprob: -6.178092956542969
    7. '(n' → logprob: -7.553092956542969
    8. '((' → logprob: -7.803092956542969
    9. 'b' → logprob: -8.053092956542969
    10. '(i' → logprob: -8.053092956542969

Token 99: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0330624133348465
    2. 'i' → logprob: -4.78306245803833
    3. '^' → logprob: -5.03306245803833
    4. ' **' → logprob: -5.40806245803833
    5. 'k' → logprob: -5.78306245803833
    6. ')' → logprob: -5.90806245803833
    7. '*i' → logprob: -6.78306245803833
    8. ',' → logprob: -7.15806245803833
    9. ')**' → logprob: -7.40806245803833
    10. '*k' → logprob: -7.78306245803833

Token 100: '(' (ID: 7)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12810665369033813
    2. 'k' → logprob: -2.5031065940856934
    3. 'x' → logprob: -4.128106594085693
    4. 'n' → logprob: -4.253106594085693
    5. 'e' → logprob: -5.878106594085693
    6. 'j' → logprob: -6.753106594085693
    7. 't' → logprob: -7.128106594085693
    8. 'd' → logprob: -7.628106594085693
    9. 'b' → logprob: -7.628106594085693
    10. 'a' → logprob: -7.878106594085693

Token 101: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3821893334388733
    2. 'x' → logprob: -1.7571892738342285
    3. 'k' → logprob: -2.2571892738342285
    4. 'b' → logprob: -4.1321892738342285
    5. 'n' → logprob: -5.2571892738342285
    6. 'd' → logprob: -5.6321892738342285
    7. 'e' → logprob: -6.0071892738342285
    8. 'c' → logprob: -6.0071892738342285
    9. 'j' → logprob: -6.1321892738342285
    10. 'p' → logprob: -6.6321892738342285

Token 102: '-' (ID: 12)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.1469401866197586
    2. ')' → logprob: -2.396940231323242
    3. ')),' → logprob: -4.271940231323242
    4. '))' → logprob: -4.271940231323242
    5. ')-' → logprob: -5.521940231323242
    6. ',' → logprob: -5.646940231323242
    7. '-' → logprob: -6.396940231323242
    8. ' ),' → logprob: -6.646940231323242
    9. ')))' → logprob: -6.896940231323242
    10. '   ' → logprob: -7.146940231323242

Token 103: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0541045665740967
    2. '0' → logprob: -1.1791045665740967
    3. '1' → logprob: -1.3041045665740967
    4. '(i' → logprob: -3.0541045665740967
    5. '(' → logprob: -4.304104804992676
    6. 'b' → logprob: -5.429104804992676
    7. ' ' → logprob: -6.679104804992676
    8. ' i' → logprob: -7.054104804992676
    9. ' (' → logprob: -7.304104804992676
    10. 'j' → logprob: -7.554104804992676

Token 104: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.36483436822891235
    2. ')' → logprob: -1.7398343086242676
    3. ')-' → logprob: -2.9898343086242676
    4. '))' → logprob: -3.4898343086242676
    5. '-' → logprob: -4.364834308624268
    6. ',' → logprob: -4.864834308624268
    7. ' ),' → logprob: -4.989834308624268
    8. '))-' → logprob: -4.989834308624268
    9. ')),' → logprob: -5.239834308624268
    10. ' )' → logprob: -5.864834308624268

Token 105: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.08401527255773544
    2. 'b' → logprob: -3.084015369415283
    3. 'n' → logprob: -4.709015369415283
    4. ' M' → logprob: -4.834015369415283
    5. 'a' → logprob: -5.209015369415283
    6. 'm' → logprob: -5.959015369415283
    7. '(M' → logprob: -6.459015369415283
    8. '10' → logprob: -6.584015369415283
    9. ')' → logprob: -6.709015369415283
    10. '(' → logprob: -7.084015369415283

Token 106: ')+' (ID: 16161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.36857661604881287
    2. ')-' → logprob: -1.7435766458511353
    3. '),' → logprob: -2.8685765266418457
    4. ')+' → logprob: -3.4935765266418457
    5. '))' → logprob: -4.243576526641846
    6. ')*' → logprob: -4.493576526641846
    7. ',' → logprob: -5.368576526641846
    8. ' )' → logprob: -5.368576526641846
    9. ')),' → logprob: -5.868576526641846
    10. ')))' → logprob: -6.368576526641846

Token 107: '1' (ID: 16)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.6820878982543945
    2. 'M' → logprob: -2.1820878982543945
    3. 'pow' → logprob: -2.3070878982543945
    4. ' acc' → logprob: -2.8070878982543945
    5. '(acc' → logprob: -2.9320878982543945
    6. '1' → logprob: -3.1820878982543945
    7. 'a' → logprob: -3.3070878982543945
    8. '0' → logprob: -3.9320878982543945
    9. '(M' → logprob: -4.1820878982543945
    10. ' M' → logprob: -4.5570878982543945

Token 108: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3650086522102356
    2. ')-' → logprob: -1.9900085926055908
    3. '-' → logprob: -2.740008592605591
    4. ')**' → logprob: -3.990008592605591
    5. ')%' → logprob: -4.11500883102417
    6. '**' → logprob: -4.24000883102417
    7. ' -' → logprob: -4.61500883102417
    8. ' )' → logprob: -4.86500883102417
    9. '),' → logprob: -4.86500883102417
    10. '))' → logprob: -4.99000883102417

Token 109: 'acc' (ID: 3717)
  Prédit: 'acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.06781274080276489
    2. 'pow' → logprob: -3.19281268119812
    3. '(acc' → logprob: -4.567812919616699
    4. ' acc' → logprob: -4.567812919616699
    5. '(' → logprob: -6.942812919616699
    6. 'a' → logprob: -7.567812919616699
    7. ' pow' → logprob: -7.942812919616699
    8. '2' → logprob: -8.4428129196167
    9. ' (' → logprob: -8.8178129196167
    10. 'ac' → logprob: -8.8178129196167

Token 110: '[-' (ID: 17503)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09204607456922531
    2. '[-' → logprob: -2.592046022415161
    3. '[i' → logprob: -4.34204626083374
    4. '.append' → logprob: -11.467045783996582
    5. '0' → logprob: -11.592045783996582
    6. '
' → logprob: -11.717045783996582
    7. '(i' → logprob: -12.592045783996582
    8. '()[' → logprob: -12.717045783996582
    9. ']' → logprob: -12.842045783996582
    10. '   ' → logprob: -12.967045783996582

Token 111: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00280379899777472
    2. 'i' → logprob: -6.627803802490234
    3. '-i' → logprob: -7.002803802490234
    4. '1' → logprob: -8.377803802490234
    5. '(-' → logprob: -8.877803802490234
    6. '(i' → logprob: -9.877803802490234
    7. '0' → logprob: -10.127803802490234
    8. ' -' → logprob: -10.127803802490234
    9. '[-' → logprob: -10.752803802490234
    10. '
' → logprob: -11.252803802490234

Token 112: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44470980763435364
    2. '())' → logprob: -1.3197097778320312
    3. ')%' → logprob: -2.6947097778320312
    4. '()' → logprob: -5.194709777832031
    5. '))' → logprob: -5.569709777832031
    6. '()%' → logprob: -5.819709777832031
    7. '[i' → logprob: -5.944709777832031
    8. ' )' → logprob: -6.319709777832031
    9. '%' → logprob: -6.569709777832031
    10. ')])' → logprob: -7.069709777832031

Token 113: '%' (ID: 4)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6738415360450745
    2. ')' → logprob: -1.0488414764404297
    3. 'for' → logprob: -2.4238414764404297
    4. ')])' → logprob: -4.54884147644043
    5. '))' → logprob: -4.67384147644043
    6. ' )' → logprob: -5.17384147644043
    7. ')]' → logprob: -5.42384147644043
    8. '),' → logprob: -5.67384147644043
    9. ',' → logprob: -6.17384147644043
    10. '])' → logprob: -6.29884147644043

Token 114: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.07893925160169601
    2. ' M' → logprob: -2.578939199447632
    3. ' ' → logprob: -10.703939437866211
    4. ')' → logprob: -12.453939437866211
    5. '   ' → logprob: -12.578939437866211
    6. '(M' → logprob: -13.078939437866211
    7. '  ' → logprob: -13.203939437866211
    8. 'i' → logprob: -13.203939437866211
    9. 'len' → logprob: -13.703939437866211
    10. ' len' → logprob: -14.203939437866211

Token 115: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25408273935317993
    2. 'for' → logprob: -2.004082679748535
    3. ')' → logprob: -2.754082679748535
    4. '()' → logprob: -5.379082679748535
    5. ')])' → logprob: -5.379082679748535
    6. ')]' → logprob: -5.629082679748535
    7. '))' → logprob: -6.129082679748535
    8. ' ' → logprob: -6.379082679748535
    9. '[i' → logprob: -7.004082679748535
    10. '   ' → logprob: -7.004082679748535

Token 116: ' or' (ID: 503)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.23900121450424194
    2. '())' → logprob: -1.9890012741088867
    3. '()))' → logprob: -3.2390012741088867
    4. '       ' → logprob: -4.364001274108887
    5. '(),' → logprob: -5.489001274108887
    6. 'for' → logprob: -5.989001274108887
    7. ' for' → logprob: -6.114001274108887
    8. ')' → logprob: -6.239001274108887
    9. '()),' → logprob: -6.239001274108887
    10. '           ' → logprob: -6.364001274108887

Token 117: ' acc' (ID: 1259)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -1.0446301698684692
    2. 'acc' → logprob: -1.2946301698684692
    3. ' acc' → logprob: -2.6696300506591797
    4. ' (' → logprob: -3.0446300506591797
    5. '(' → logprob: -3.4196300506591797
    6. 'True' → logprob: -3.4196300506591797
    7. '(True' → logprob: -3.4196300506591797
    8. '(i' → logprob: -3.6696300506591797
    9. 'False' → logprob: -3.6696300506591797
    10. '(next' → logprob: -4.16963005065918

Token 118: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.011506117880344391
    2. '.extend' → logprob: -6.011506080627441
    3. '))' → logprob: -6.261506080627441
    4. ')' → logprob: -6.386506080627441
    5. '.pop' → logprob: -6.886506080627441
    6. '.__' → logprob: -7.011506080627441
    7. ')))' → logprob: -7.511506080627441
    8. '.clear' → logprob: -8.136506080627441
    9. ':=' → logprob: -8.261506080627441
    10. '[' → logprob: -8.261506080627441

Token 119: '(((' (ID: 13163)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.9663199186325073
    2. '(acc' → logprob: -1.3413199186325073
    3. '(pow' → logprob: -2.091320037841797
    4. '(_' → logprob: -2.216320037841797
    5. '(((' → logprob: -2.966320037841797
    6. '(' → logprob: -3.591320037841797
    7. '((_' → logprob: -3.591320037841797
    8. '(_)' → logprob: -5.091320037841797
    9. '((((' → logprob: -5.341320037841797
    10. '(len' → logprob: -6.591320037841797

Token 120: 'pow' (ID: 30304)
  Prédit: 'pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.01583820953965187
    2. '(pow' → logprob: -4.765838146209717
    3. '(' → logprob: -6.140838146209717
    4. '10' → logprob: -6.515838146209717
    5. 'acc' → logprob: -6.765838146209717
    6. ' pow' → logprob: -7.015838146209717
    7. '(acc' → logprob: -7.265838146209717
    8. '((' → logprob: -7.890838146209717
    9. ' (' → logprob: -9.140838623046875
    10. '(M' → logprob: -9.890838623046875

Token 121: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.570319702499546e-05
    2. '10' → logprob: -10.875025749206543
    3. '(pow' → logprob: -13.125025749206543
    4. ' (' → logprob: -13.625025749206543
    5. '((' → logprob: -13.875025749206543
    6. 'pow' → logprob: -14.375025749206543
    7. 'a' → logprob: -14.750025749206543
    8. '(
' → logprob: -15.625025749206543
    9. '```' → logprob: -15.812525749206543
    10. '(int' → logprob: -16.125024795532227

Token 122: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.008703447878360748
    2. '(' → logprob: -4.758703231811523
    3. 'pow' → logprob: -10.758703231811523
    4. ' ' → logprob: -11.133703231811523
    5. '```' → logprob: -11.821203231811523
    6. '(pow' → logprob: -12.008703231811523
    7. ')' → logprob: -12.133703231811523
    8. '   ' → logprob: -12.258703231811523
    9. '
' → logprob: -12.508703231811523
    10. '<|end|>' → logprob: -12.633703231811523

Token 123: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017506232485175133
    2. ',l' → logprob: -4.142506122589111
    3. ' ,' → logprob: -7.517506122589111
    4. 'l' → logprob: -7.892506122589111
    5. '(' → logprob: -8.64250659942627
    6. '(l' → logprob: -9.26750659942627
    7. ' l' → logprob: -10.14250659942627
    8. ',
' → logprob: -10.51750659942627
    9. '<|end|>' → logprob: -10.51750659942627
    10. ' ' → logprob: -10.58000659942627

Token 124: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.013050347566604614
    2. ' l' → logprob: -4.388050556182861
    3. '   ' → logprob: -9.013050079345703
    4. ' ' → logprob: -9.138050079345703
    5. '2' → logprob: -9.263050079345703
    6. '  ' → logprob: -10.263050079345703
    7. '    ' → logprob: -10.388050079345703
    8. '
' → logprob: -10.575550079345703
    9. '(l' → logprob: -10.950550079345703
    10. '     ' → logprob: -11.075550079345703

Token 125: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.003361293114721775
    2. '2' → logprob: -6.378361225128174
    3. '*(' → logprob: -6.753361225128174
    4. ' *' → logprob: -8.378361701965332
    5. '0' → logprob: -9.253361701965332
    6. ' ' → logprob: -10.003361701965332
    7. '
' → logprob: -11.003361701965332
    8. '   ' → logprob: -11.128361701965332
    9. '1' → logprob: -11.440861701965332
    10. '**' → logprob: -11.565861701965332

Token 126: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.014676624909043312
    2. '(' → logprob: -4.264676570892334
    3. '0' → logprob: -9.139677047729492
    4. '1' → logprob: -9.514677047729492
    5. '{' → logprob: -9.764677047729492
    6. ' ' → logprob: -9.764677047729492
    7. 'i' → logprob: -10.014677047729492
    8. ')' → logprob: -10.389677047729492
    9. '   ' → logprob: -10.764677047729492
    10. '(i' → logprob: -11.014677047729492

Token 127: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.02521424926817417
    2. '2' → logprob: -4.650214195251465
    3. '(i' → logprob: -4.775214195251465
    4. '(' → logprob: -5.025214195251465
    5. '*(' → logprob: -9.650214195251465
    6. '-' → logprob: -10.025214195251465
    7. 'i' → logprob: -10.275214195251465
    8. '[i' → logprob: -10.775214195251465
    9. '[' → logprob: -10.900214195251465
    10. ' (' → logprob: -11.150214195251465

Token 128: '(' (ID: 7)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.009750891476869583
    2. '(' → logprob: -5.384750843048096
    3. 'i' → logprob: -5.384750843048096
    4. ' (' → logprob: -8.759751319885254
    5. '0' → logprob: -8.884751319885254
    6. '
' → logprob: -10.259751319885254
    7. '
' → logprob: -10.384751319885254
    8. '[i' → logprob: -10.384751319885254
    9. '{i' → logprob: -10.384751319885254
    10. '1' → logprob: -10.884751319885254

Token 129: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004493023734539747
    2. '(i' → logprob: -5.754493236541748
    3. '(' → logprob: -7.379493236541748
    4. ' i' → logprob: -7.629493236541748
    5. ' (' → logprob: -10.00449275970459
    6. '0' → logprob: -10.25449275970459
    7. '
' → logprob: -10.75449275970459
    8. '{i' → logprob: -11.00449275970459
    9. '2' → logprob: -11.25449275970459
    10. '1' → logprob: -11.37949275970459

Token 130: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0018561731558293104
    2. '[' → logprob: -7.626856327056885
    3. '(i' → logprob: -7.626856327056885
    4. '[i' → logprob: -8.251855850219727
    5. '(' → logprob: -8.751855850219727
    6. '   ' → logprob: -9.126855850219727
    7. '0' → logprob: -9.126855850219727
    8. '[-' → logprob: -9.376855850219727
    9. ' -' → logprob: -10.126855850219727
    10. '1' → logprob: -10.251855850219727

Token 131: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7228760719299316
    2. '(i' → logprob: -1.4728760719299316
    3. '0' → logprob: -2.0978760719299316
    4. '1' → logprob: -2.4728760719299316
    5. '(' → logprob: -2.5978760719299316
    6. '-' → logprob: -6.097876071929932
    7. ')' → logprob: -8.597875595092773
    8. '
' → logprob: -8.597875595092773
    9. '```' → logprob: -8.722875595092773
    10. ' i' → logprob: -8.847875595092773

Token 132: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.15572181344032288
    2. '-' → logprob: -2.03072190284729
    3. ',' → logprob: -5.030721664428711
    4. '],' → logprob: -5.780721664428711
    5. ' -' → logprob: -6.780721664428711
    6. ')-' → logprob: -8.030721664428711
    7. '   ' → logprob: -8.155721664428711
    8. ' ),' → logprob: -8.280721664428711
    9. '},' → logprob: -8.780721664428711
    10. ')' → logprob: -9.155721664428711

Token 133: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.05681433156132698
    2. ' M' → logprob: -2.931814432144165
    3. '[M' → logprob: -8.181814193725586
    4. 'a' → logprob: -8.431814193725586
    5. 'b' → logprob: -8.744314193725586
    6. 'acc' → logprob: -8.869314193725586
    7. '(M' → logprob: -9.431814193725586
    8. ')' → logprob: -9.494314193725586
    9. '           ' → logprob: -9.681814193725586
    10. '
' → logprob: -9.806814193725586

Token 134: ')+' (ID: 16161)
  Prédit: ')+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.0009616006282158196
    2. ')' → logprob: -7.625961780548096
    3. ')%' → logprob: -8.750961303710938
    4. ',' → logprob: -9.375961303710938
    5. ']+' → logprob: -10.500961303710938
    6. '))' → logprob: -10.625961303710938
    7. '+' → logprob: -10.625961303710938
    8. ' )' → logprob: -10.625961303710938
    9. '))+' → logprob: -10.750961303710938
    10. '   ' → logprob: -11.000961303710938

Token 135: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007596684154123068
    2. ' ' → logprob: -5.632596492767334
    3. '-' → logprob: -6.507596492767334
    4. 'acc' → logprob: -7.507596492767334
    5. '(' → logprob: -8.132596969604492
    6. 'M' → logprob: -8.132596969604492
    7. '((' → logprob: -8.632596969604492
    8. '(M' → logprob: -8.757596969604492
    9. '0' → logprob: -9.007596969604492
    10. '[M' → logprob: -9.007596969604492

Token 136: ')*' (ID: 11043)
  Prédit: ')%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.11346179246902466
    2. ')' → logprob: -2.36346173286438
    3. ')*' → logprob: -5.113461971282959
    4. '))' → logprob: -5.738461971282959
    5. ' )' → logprob: -5.988461971282959
    6. '   ' → logprob: -8.1134614944458
    7. ')+' → logprob: -8.2384614944458
    8. '*)' → logprob: -8.8634614944458
    9. ')))' → logprob: -8.9884614944458
    10. ' ' → logprob: -8.9884614944458

Token 137: 'acc' (ID: 3717)
  Prédit: 'acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.017783120274543762
    2. ' acc' → logprob: -4.142783164978027
    3. '(acc' → logprob: -7.142783164978027
    4. ')' → logprob: -8.642783164978027
    5. 'ac' → logprob: -8.767783164978027
    6. 'pow' → logprob: -9.017783164978027
    7. '(' → logprob: -10.017783164978027
    8. '_acc' → logprob: -10.205283164978027
    9. '	acc' → logprob: -10.517783164978027
    10. '[' → logprob: -10.580283164978027

Token 138: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00012308525037951767
    2. '.append' → logprob: -9.625123023986816
    3. '[' → logprob: -11.250123023986816
    4. '
' → logprob: -11.750123023986816
    5. '[
' → logprob: -11.875123023986816
    6. ')[' → logprob: -11.875123023986816
    7. ' ' → logprob: -12.250123023986816
    8. ')' → logprob: -12.500123023986816
    9. '][-' → logprob: -12.750123023986816
    10. 'append' → logprob: -13.250123023986816

Token 139: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.016278108581900597
    2. '[-' → logprob: -4.516278266906738
    3. '1' → logprob: -5.891278266906738
    4. '(-' → logprob: -6.891278266906738
    5. '-M' → logprob: -7.141278266906738
    6. '-m' → logprob: -9.266278266906738
    7. '-L' → logprob: -9.266278266906738
    8. '
' → logprob: -9.391278266906738
    9. '][-' → logprob: -10.016278266906738
    10. '-i' → logprob: -10.516278266906738

Token 140: '])' (ID: 4636)
  Prédit: ')%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.1299930214881897
    2. ')' → logprob: -2.129992961883545
    3. '))' → logprob: -6.254992961883545
    4. '])' → logprob: -7.504992961883545
    5. '   ' → logprob: -8.254993438720703
    6. ' )' → logprob: -9.879993438720703
    7. '       ' → logprob: -9.879993438720703
    8. ')))' → logprob: -10.004993438720703
    9. '[' → logprob: -10.504993438720703
    10. ']%' → logprob: -10.754993438720703

Token 141: '%' (ID: 4)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -1.2473894357681274
    2. ')))' → logprob: -1.6223894357681274
    3. ')%' → logprob: -1.7473894357681274
    4. '%' → logprob: -1.8723894357681274
    5. '))))' → logprob: -2.622389316558838
    6. ')' → logprob: -3.122389316558838
    7. ')),' → logprob: -3.997389316558838
    8. '))),' → logprob: -4.622389316558838
    9. '),' → logprob: -4.872389316558838
    10. ')))),' → logprob: -5.122389316558838

Token 142: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0006091519608162344
    2. ' M' → logprob: -7.625608921051025
    3. '[M' → logprob: -10.875609397888184
    4. ')' → logprob: -11.000609397888184
    5. 'm' → logprob: -11.625609397888184
    6. 'L' → logprob: -12.000609397888184
    7. '[' → logprob: -12.000609397888184
    8. '(M' → logprob: -12.125609397888184
    9. '(' → logprob: -12.313109397888184
    10. '   ' → logprob: -12.438109397888184

Token 143: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.39782318472862244
    2. ')))' → logprob: -1.8978232145309448
    3. ')' → logprob: -2.1478230953216553
    4. '))))' → logprob: -3.3978230953216553
    5. '))),' → logprob: -5.022823333740234
    6. ')),' → logprob: -5.397823333740234
    7. ',' → logprob: -6.022823333740234
    8. ')))),' → logprob: -6.147823333740234
    9. '),' → logprob: -6.147823333740234
    10. ')]' → logprob: -6.272823333740234

Token 144: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2466009855270386
    2. ' for' → logprob: -1.7466009855270386
    3. 'for' → logprob: -1.7466009855270386
    4. '())' → logprob: -1.9966009855270386
    5. '()' → logprob: -2.371601104736328
    6. '))' → logprob: -3.246601104736328
    7. '()))' → logprob: -3.246601104736328
    8. '   ' → logprob: -4.371601104736328
    9. '       ' → logprob: -4.621601104736328
    10. ' )' → logprob: -4.996601104736328

Token 145: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02333480678498745
    2. ' i' → logprob: -3.7733347415924072
    3. '	i' → logprob: -10.773334503173828
    4. ' ' → logprob: -11.148334503173828
    5. ' ' → logprob: -11.273334503173828
    6. '   ' → logprob: -11.773334503173828
    7. '

' → logprob: -11.898334503173828
    8. ')' → logprob: -12.148334503173828
    9. ')i' → logprob: -12.773334503173828
    10. '  ' → logprob: -12.898334503173828

Token 146: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1008843258023262
    2. 'in' → logprob: -2.350884437561035
    3. ')' → logprob: -8.850884437561035
    4. '(' → logprob: -8.975884437561035
    5. ' range' → logprob: -9.225884437561035
    6. ' ' → logprob: -9.475884437561035
    7. 'range' → logprob: -9.600884437561035
    8. ',' → logprob: -10.100884437561035
    9. '1' → logprob: -10.600884437561035
    10. ' i' → logprob: -11.350884437561035

Token 147: ' range' (ID: 3352)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.39096599817276
    2. ' base' → logprob: -1.2659659385681152
    3. 'range' → logprob: -3.8909659385681152
    4. '1' → logprob: -4.640965938568115
    5. ' range' → logprob: -4.765965938568115
    6. ' ' → logprob: -6.515965938568115
    7. '   ' → logprob: -7.390965938568115
    8. '0' → logprob: -8.515966415405273
    9. 'chain' → logprob: -9.265966415405273
    10. '[' → logprob: -9.265966415405273

Token 148: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009600582998245955
    2. '1' → logprob: -7.250959873199463
    3. '(len' → logprob: -8.625960350036621
    4. '(
' → logprob: -11.125960350036621
    5. '   ' → logprob: -11.500960350036621
    6. '(n' → logprob: -11.750960350036621
    7. ' (' → logprob: -12.000960350036621
    8. '

' → logprob: -12.125960350036621
    9. '(max' → logprob: -12.500960350036621
    10. '
' → logprob: -12.500960350036621

Token 149: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015627454966306686
    2. '60' → logprob: -4.265627384185791
    3. ' ' → logprob: -6.640627384185791
    4. '   ' → logprob: -10.39062786102295
    5. '
' → logprob: -10.51562786102295
    6. '0' → logprob: -10.64062786102295
    7. '(' → logprob: -10.89062786102295
    8. 'len' → logprob: -10.89062786102295
    9. '61' → logprob: -11.39062786102295
    10. '2' → logprob: -12.39062786102295

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005738933105021715
    2. ' ,' → logprob: -5.755738735198975
    3. '(' → logprob: -7.255738735198975
    4. '60' → logprob: -7.630738735198975
    5. ',L' → logprob: -7.755738735198975
    6. ',len' → logprob: -8.255739212036133
    7. ',n' → logprob: -8.380739212036133
    8. ',l' → logprob: -8.880739212036133
    9. ')):' → logprob: -9.880739212036133
    10. '):' → logprob: -10.255739212036133

Token 151: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.16355857253074646
    2. '61' → logprob: -1.9135586023330688
    3. 'len' → logprob: -6.038558483123779
    4. ' ' → logprob: -8.288558959960938
    5. '59' → logprob: -8.913558959960938
    6. '62' → logprob: -9.538558959960938
    7. '51' → logprob: -9.788558959960938
    8. 'base' → logprob: -10.038558959960938
    9. 'n' → logprob: -10.163558959960938
    10. 'max' → logprob: -10.538558959960938

Token 152: ')),' (ID: 12098)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -1.3365695476531982
    2. ']))' → logprob: -1.5865695476531982
    3. ')]' → logprob: -1.8365695476531982
    4. ')])' → logprob: -2.0865695476531982
    5. '))' → logprob: -2.7115695476531982
    6. '])' → logprob: -2.9615695476531982
    7. ')' → logprob: -3.3365695476531982
    8. ']):' → logprob: -3.3365695476531982
    9. ')):' → logprob: -3.9615695476531982
    10. ')))' → logprob: -4.461569786071777

Token 153: ' [' (ID: 723)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.6470934152603149
    2. 'next' → logprob: -1.772093415260315
    3. ')' → logprob: -2.1470932960510254
    4. ' None' → logprob: -2.5220932960510254
    5. '))' → logprob: -3.3970932960510254
    6. ' next' → logprob: -4.147093296051025
    7. '()))' → logprob: -4.647093296051025
    8. '()' → logprob: -4.897093296051025
    9. ').__' → logprob: -5.022093296051025
    10. 'acc' → logprob: -5.522093296051025

Token 154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04127982631325722
    2. '0' → logprob: -4.5412797927856445
    3. ']))' → logprob: -4.5412797927856445
    4. ']' → logprob: -5.4162797927856445
    5. '])[' → logprob: -5.6662797927856445
    6. 'None' → logprob: -6.5412797927856445
    7. ' ' → logprob: -6.9162797927856445
    8. '])' → logprob: -6.9162797927856445
    9. 'base' → logprob: -7.0412797927856445
    10. ']))
' → logprob: -7.2912797927856445

Token 155: '])
' (ID: 5169)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']))' → logprob: -1.0347034931182861
    2. '])' → logprob: -1.1597034931182861
    3. ']' → logprob: -2.159703493118286
    4. '()' → logprob: -3.284703493118286
    5. '])[' → logprob: -3.409703493118286
    6. '][' → logprob: -4.159703254699707
    7. ')][' → logprob: -4.284703254699707
    8. ']):' → logprob: -4.409703254699707
    9. ').__' → logprob: -4.659703254699707
    10. '().__' → logprob: -4.659703254699707

Token 156: '   ' (ID: 271)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -1.568983554840088
    2. ']))' → logprob: -1.693983554840088
    3. '))[' → logprob: -1.943983554840088
    4. ')[' → logprob: -2.443983554840088
    5. ')' → logprob: -2.443983554840088
    6. ')))' → logprob: -2.568983554840088
    7. '):' → logprob: -3.068983554840088
    8. ':' → logprob: -3.568983554840088
    9. ')])' → logprob: -3.818983554840088
    10. '])' → logprob: -3.818983554840088

Token 157: ' ))
' (ID: 43705)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.9146918654441833
    2. ']))' → logprob: -1.9146919250488281
    3. '))[' → logprob: -2.039691925048828
    4. ')))' → logprob: -2.289691925048828
    5. ')' → logprob: -2.789691925048828
    6. '):' → logprob: -3.164691925048828
    7. ')[' → logprob: -3.664691925048828
    8. ':' → logprob: -4.414691925048828
    9. '])' → logprob: -4.664691925048828
    10. ')])' → logprob: -4.789691925048828

Token 158: '   ' (ID: 271)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7068701386451721
    2. ')' → logprob: -1.0818700790405273
    3. ':' → logprob: -1.9568700790405273
    4. ',' → logprob: -5.331870079040527
    5. '[' → logprob: -5.331870079040527
    6. '):
' → logprob: -5.831870079040527
    7. '   ' → logprob: -6.081870079040527
    8. 'def' → logprob: -6.456870079040527
    9. ']' → logprob: -6.581870079040527
    10. ')]' → logprob: -6.581870079040527

Token 159: ' doubling' (ID: 122384)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18971724808216095
    2. ':' → logprob: -2.6897172927856445
    3. '[' → logprob: -3.3147172927856445
    4. '):' → logprob: -3.3147172927856445
    5. '(' → logprob: -5.3147172927856445
    6. ',' → logprob: -5.8147172927856445
    7. '(
' → logprob: -6.0647172927856445
    8. ']' → logprob: -6.0647172927856445
    9. ' ' → logprob: -6.1897172927856445
    10. '   ' → logprob: -6.1897172927856445

Token 160: 'const' (ID: 1671)
  Prédit: 'const'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'const' → logprob: -0.0752207413315773
    2. '_' → logprob: -3.075220823287964
    3. ')' → logprob: -4.700220584869385
    4. '_const' → logprob: -5.325220584869385
    5. '=' → logprob: -6.325220584869385
    6. '[' → logprob: -6.325220584869385
    7. ' =' → logprob: -6.575220584869385
    8. '_consts' → logprob: -6.575220584869385
    9. ']' → logprob: -6.825220584869385
    10. '_)' → logprob: -7.200220584869385

Token 161: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.37552911043167114
    2. ')' → logprob: -2.3755290508270264
    3. '=' → logprob: -2.5005290508270264
    4. ' =' → logprob: -3.2505290508270264
    5. '<|end|>' → logprob: -3.3755290508270264
    6. ']' → logprob: -3.6255290508270264
    7. '[-' → logprob: -4.5005292892456055
    8. ',' → logprob: -4.5005292892456055
    9. ':' → logprob: -5.8755292892456055
    10. '[
' → logprob: -6.0005292892456055

Token 162: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5754217505455017
    2. ' list' → logprob: -1.7004218101501465
    3. '[' → logprob: -2.3254218101501465
    4. ' [' → logprob: -2.4504218101501465
    5. '[]' → logprob: -3.9504218101501465
    6. '[list' → logprob: -3.9504218101501465
    7. 'deque' → logprob: -4.9504218101501465
    8. '[]
' → logprob: -5.4504218101501465
    9. '[(' → logprob: -5.4504218101501465
    10. ' []' → logprob: -5.5754218101501465

Token 163: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7919648289680481
    2. '(' → logprob: -1.1669647693634033
    3. '((' → logprob: -1.6669647693634033
    4. 'pow' → logprob: -4.041965007781982
    5. ' (' → logprob: -4.666965007781982
    6. '0' → logprob: -5.166965007781982
    7. '(pow' → logprob: -5.916965007781982
    8. '(acc' → logprob: -6.416965007781982
    9. 'x' → logprob: -6.541965007781982
    10. ' ' → logprob: -6.666965007781982

Token 164: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7060360908508301
    2. ',' → logprob: -0.8310360908508301
    3. ' for' → logprob: -4.45603609085083
    4. ')' → logprob: -4.58103609085083
    5. '])' → logprob: -4.58103609085083
    6. ',
' → logprob: -4.58103609085083
    7. ']+' → logprob: -4.70603609085083
    8. ' ]' → logprob: -5.45603609085083
    9. ']*' → logprob: -5.95603609085083
    10. ' +' → logprob: -6.20603609085083

Token 165: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 166: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5341638326644897
    2. '[(' → logprob: -1.4091638326644897
    3. '[d' → logprob: -2.2841639518737793
    4. '[((' → logprob: -3.4091639518737793
    5. 'list' → logprob: -4.409163951873779
    6. '[
' → logprob: -4.409163951873779
    7. '[list' → logprob: -4.784163951873779
    8. ' [' → logprob: -7.909163951873779
    9. '[p' → logprob: -8.784163475036621
    10. '[len' → logprob: -9.284163475036621

Token 167: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.06461305171251297
    2. '(pow' → logprob: -3.439613103866577
    3. 'pow' → logprob: -4.689612865447998
    4. '(' → logprob: -4.814612865447998
    5. '(((' → logprob: -5.314612865447998
    6. '(d' → logprob: -5.564612865447998
    7. ' ((' → logprob: -6.439612865447998
    8. '1' → logprob: -7.564612865447998
    9. '(acc' → logprob: -7.564612865447998
    10. ' (' → logprob: -7.689612865447998

Token 168: 'pow' (ID: 30304)
  Prédit: 'pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.03393854945898056
    2. '(pow' → logprob: -3.5339386463165283
    3. '(' → logprob: -5.908938407897949
    4. 'dou' → logprob: -7.783938407897949
    5. ' pow' → logprob: -8.03393840789795
    6. '10' → logprob: -8.03393840789795
    7. '((' → logprob: -9.28393840789795
    8. '(d' → logprob: -9.28393840789795
    9. '(base' → logprob: -10.15893840789795
    10. 'd' → logprob: -10.53393840789795

Token 169: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020566998049616814
    2. '10' → logprob: -3.895566940307617
    3. 'def' → logprob: -11.770566940307617
    4. '(pow' → logprob: -12.395566940307617
    5. '{' → logprob: -12.895566940307617
    6. 'pow' → logprob: -13.145566940307617
    7. ' ' → logprob: -13.395566940307617
    8. '```' → logprob: -13.520566940307617
    9. '   ' → logprob: -13.770566940307617
    10. '<|end|>' → logprob: -14.395566940307617

Token 170: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0012755923671647906
    2. '(' → logprob: -6.751275539398193
    3. 'pow' → logprob: -9.876276016235352
    4. ' ' → logprob: -10.876276016235352
    5. ')' → logprob: -12.001276016235352
    6. '   ' → logprob: -12.126276016235352
    7. '(pow' → logprob: -12.126276016235352
    8. '```' → logprob: -13.188776016235352
    9. '100' → logprob: -13.251276016235352
    10. 'def' → logprob: -13.376276016235352

Token 171: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01191683579236269
    2. ',l' → logprob: -4.636916637420654
    3. ' ,' → logprob: -6.636916637420654
    4. ',L' → logprob: -8.011917114257812
    5. '<|end|>' → logprob: -8.886917114257812
    6. '(' → logprob: -9.136917114257812
    7. ',
' → logprob: -9.386917114257812
    8. '(l' → logprob: -9.761917114257812
    9. ' ' → logprob: -11.136917114257812
    10. '(L' → logprob: -11.261917114257812

Token 172: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.2851976156234741
    2. 'l' → logprob: -1.4101976156234741
    3. 'L' → logprob: -7.035197734832764
    4. ' ' → logprob: -7.160197734832764
    5. '<|end|>' → logprob: -7.285197734832764
    6. ' L' → logprob: -7.910197734832764
    7. '2' → logprob: -8.035197257995605
    8. ' (' → logprob: -8.535197257995605
    9. '(l' → logprob: -8.910197257995605
    10. '1' → logprob: -9.035197257995605

Token 173: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.011717266403138638
    2. '*(' → logprob: -4.511717319488525
    3. '**' → logprob: -8.136716842651367
    4. '2' → logprob: -8.511716842651367
    5. ' *' → logprob: -9.511716842651367
    6. ',' → logprob: -10.386716842651367
    7. '*((' → logprob: -11.261716842651367
    8. '(' → logprob: -11.511716842651367
    9. 'def' → logprob: -11.886716842651367
    10. ')*' → logprob: -12.136716842651367

Token 174: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.09293321520090103
    2. '(' → logprob: -2.467933177947998
    3. 'i' → logprob: -5.967933177947998
    4. '1' → logprob: -7.467933177947998
    5. ' (' → logprob: -8.217933654785156
    6. ' ' → logprob: -8.342933654785156
    7. '(i' → logprob: -8.842933654785156
    8. ')' → logprob: -10.092933654785156
    9. ' i' → logprob: -10.467933654785156
    10. '   ' → logprob: -10.467933654785156

Token 175: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.009872130118310452
    2. ',' → logprob: -5.634871959686279
    3. '*' → logprob: -6.259871959686279
    4. '*(' → logprob: -6.634871959686279
    5. '**,' → logprob: -7.384871959686279
    6. '*i' → logprob: -7.759871959686279
    7. '(' → logprob: -8.009872436523438
    8. '(i' → logprob: -8.384872436523438
    9. ' **' → logprob: -8.384872436523438
    10. ',i' → logprob: -9.134872436523438

Token 176: '(' (ID: 7)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1352711170911789
    2. '(i' → logprob: -2.1352710723876953
    3. '(' → logprob: -4.885271072387695
    4. '_i' → logprob: -7.885271072387695
    5. '0' → logprob: -8.760271072387695
    6. ' i' → logprob: -9.635271072387695
    7. '1' → logprob: -10.510271072387695
    8. '[i' → logprob: -10.885271072387695
    9. ' (' → logprob: -10.885271072387695
    10. '_' → logprob: -11.135271072387695

Token 177: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0016674461076036096
    2. '(' → logprob: -7.626667499542236
    3. ' i' → logprob: -7.626667499542236
    4. '(i' → logprob: -8.001667022705078
    5. '0' → logprob: -8.376667022705078
    6. '1' → logprob: -9.751667022705078
    7. '_i' → logprob: -10.876667022705078
    8. '   ' → logprob: -11.626667022705078
    9. ' ' → logprob: -12.001667022705078
    10. ' (' → logprob: -12.001667022705078

Token 178: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5100623369216919
    2. '],' → logprob: -2.1350622177124023
    3. '),' → logprob: -2.2600622177124023
    4. '**' → logprob: -2.3850622177124023
    5. '-' → logprob: -3.1350622177124023
    6. ']' → logprob: -4.760062217712402
    7. ')' → logprob: -4.760062217712402
    8. '])' → logprob: -5.510062217712402
    9. ']))' → logprob: -5.760062217712402
    10. ',i' → logprob: -6.510062217712402

Token 179: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.016774320974946022
    2. '(i' → logprob: -4.2667741775512695
    3. '1' → logprob: -6.8917741775512695
    4. '(' → logprob: -7.0167741775512695
    5. ' i' → logprob: -8.14177417755127
    6. '_i' → logprob: -8.39177417755127
    7. '0' → logprob: -10.26677417755127
    8. '```' → logprob: -10.64177417755127
    9. '{i' → logprob: -10.64177417755127
    10. ' (' → logprob: -10.89177417755127

Token 180: '),' (ID: 936)
  Prédit: ')+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.08313661813735962
    2. ')' → logprob: -3.708136558532715
    3. ',' → logprob: -3.833136558532715
    4. '),' → logprob: -4.333136558532715
    5. ']+' → logprob: -4.833136558532715
    6. '])' → logprob: -5.208136558532715
    7. '])+' → logprob: -5.708136558532715
    8. '],' → logprob: -6.708136558532715
    9. '   ' → logprob: -6.958136558532715
    10. ')%' → logprob: -7.708136558532715

Token 181: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.16051869094371796
    2. ' M' → logprob: -1.9105186462402344
    3. ')' → logprob: -9.535518646240234
    4. '   ' → logprob: -9.660518646240234
    5. ' ' → logprob: -10.160518646240234
    6. 'pow' → logprob: -10.973018646240234
    7. '    ' → logprob: -11.473018646240234
    8. ',' → logprob: -11.535518646240234
    9. '  ' → logprob: -11.910518646240234
    10. '
' → logprob: -12.160518646240234

Token 182: ')+' (ID: 16161)
  Prédit: ')+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.008047337643802166
    2. ')' → logprob: -5.258047103881836
    3. ']+' → logprob: -6.008047103881836
    4. '])+' → logprob: -9.258047103881836
    5. '])' → logprob: -9.508047103881836
    6. '),' → logprob: -10.008047103881836
    7. '   ' → logprob: -10.508047103881836
    8. '))+' → logprob: -10.633047103881836
    9. '[' → logprob: -10.758047103881836
    10. '+' → logprob: -11.383047103881836

Token 183: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03594997152686119
    2. 'acc' → logprob: -4.035950183868408
    3. ' ' → logprob: -5.285950183868408
    4. ')' → logprob: -5.535950183868408
    5. '(' → logprob: -6.660950183868408
    6. ' acc' → logprob: -7.035950183868408
    7. '[' → logprob: -7.285950183868408
    8. '+' → logprob: -7.410950183868408
    9. 'b' → logprob: -7.410950183868408
    10. '-' → logprob: -7.410950183868408

Token 184: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32071319222450256
    2. ')*' → logprob: -1.8207131624221802
    3. ')%' → logprob: -2.1957132816314697
    4. '*' → logprob: -7.695713043212891
    5. ' )' → logprob: -8.07071304321289
    6. '*)' → logprob: -8.82071304321289
    7. ')**' → logprob: -9.32071304321289
    8. '))' → logprob: -9.94571304321289
    9. ' *' → logprob: -10.44571304321289
    10. '   ' → logprob: -10.82071304321289

Token 185: 'dou' (ID: 122443)
  Prédit: 'dou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.009031333960592747
    2. ' doubling' → logprob: -4.884031295776367
    3. 'acc' → logprob: -7.259031295776367
    4. 'd' → logprob: -8.759031295776367
    5. '   ' → logprob: -9.696531295776367
    6. 'base' → logprob: -9.884031295776367
    7. 'double' → logprob: -9.884031295776367
    8. 'parts' → logprob: -10.384031295776367
    9. '(d' → logprob: -10.384031295776367
    10. ' ' → logprob: -10.571531295776367

Token 186: 'bling' (ID: 11037)
  Prédit: 'bling'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bling' → logprob: -0.002121353754773736
    2. 'ling' → logprob: -7.002121448516846
    3. 'pling' → logprob: -7.127121448516846
    4. 'ble' → logprob: -9.127120971679688
    5. 'bl' → logprob: -9.377120971679688
    6. 'ng' → logprob: -9.752120971679688
    7. 'const' → logprob: -10.127120971679688
    8. 'ing' → logprob: -10.377120971679688
    9. 'gling' → logprob: -10.502120971679688
    10. 'blic' → logprob: -11.627120971679688

Token 187: 'const' (ID: 1671)
  Prédit: 'const'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'const' → logprob: -3.643152740551159e-05
    2. ')' → logprob: -11.125036239624023
    3. ' const' → logprob: -12.250036239624023
    4. '   ' → logprob: -12.250036239624023
    5. '[' → logprob: -12.625036239624023
    6. '
' → logprob: -13.625036239624023
    7. ']' → logprob: -13.750036239624023
    8. '(const' → logprob: -14.375036239624023
    9. '

' → logprob: -14.500036239624023
    10. '_const' → logprob: -14.750036239624023

Token 188: '[i' (ID: 1768)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0052350712940096855
    2. '[i' → logprob: -5.255235195159912
    3. '[' → logprob: -14.005234718322754
    4. '[j' → logprob: -16.13023567199707
    5. 'i' → logprob: -16.63023567199707
    6. '][-' → logprob: -16.75523567199707
    7. '[
' → logprob: -16.88023567199707
    8. '-' → logprob: -17.38023567199707
    9. '[k' → logprob: -17.63023567199707
    10. ' [-' → logprob: -18.00523567199707

Token 189: '-' (ID: 12)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.08140669018030167
    2. ')' → logprob: -3.081406593322754
    3. '-' → logprob: -4.331406593322754
    4. ')])' → logprob: -4.956406593322754
    5. ']' → logprob: -5.456406593322754
    6. '[i' → logprob: -5.456406593322754
    7. ')]' → logprob: -6.456406593322754
    8. ')i' → logprob: -7.581406593322754
    9. '])]' → logprob: -8.456406593322754
    10. '   ' → logprob: -8.706406593322754

Token 190: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004085083492100239
    2. ' ' → logprob: -8.875408172607422
    3. '0' → logprob: -9.125408172607422
    4. '-' → logprob: -9.250408172607422
    5. 'i' → logprob: -10.375408172607422
    6. '   ' → logprob: -11.250408172607422
    7. ']' → logprob: -11.750408172607422
    8. '])' → logprob: -12.750408172607422
    9. ')' → logprob: -13.250408172607422
    10. '  ' → logprob: -13.375408172607422

Token 191: '])' (ID: 4636)
  Prédit: ')%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.34514468908309937
    2. ')' → logprob: -1.3451447486877441
    3. '])' → logprob: -3.595144748687744
    4. '))' → logprob: -5.595144748687744
    5. ' )' → logprob: -9.095144271850586
    6. ']%' → logprob: -10.720144271850586
    7. '   ' → logprob: -10.970144271850586
    8. '})' → logprob: -11.220144271850586
    9. ')])' → logprob: -11.720144271850586
    10. '[i' → logprob: -11.970144271850586

Token 192: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.7532621622085571
    2. ' %' → logprob: -1.7532621622085571
    3. ')' → logprob: -2.0032620429992676
    4. ')%' → logprob: -2.2532620429992676
    5. ' for' → logprob: -2.5032620429992676
    6. 'for' → logprob: -3.5032620429992676
    7. ']%' → logprob: -6.128262042999268
    8. ']' → logprob: -7.503262042999268
    9. '   ' → logprob: -7.753262042999268
    10. ' )' → logprob: -8.128262519836426

Token 193: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.023561300709843636
    2. 'i' → logprob: -3.8985612392425537
    3. ' M' → logprob: -5.898561477661133
    4. ' i' → logprob: -9.023561477661133
    5. '(i' → logprob: -9.773561477661133
    6. '[i' → logprob: -10.273561477661133
    7. '   ' → logprob: -11.273561477661133
    8. '60' → logprob: -11.648561477661133
    9. '100' → logprob: -11.898561477661133
    10. ' ' → logprob: -11.898561477661133

Token 194: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1675245314836502
    2. 'for' → logprob: -2.042524576187134
    3. '   ' → logprob: -4.167524337768555
    4. ']' → logprob: -5.167524337768555
    5. ')' → logprob: -6.792524337768555
    6. '])' → logprob: -7.292524337768555
    7. ')]' → logprob: -7.417524337768555
    8. ',' → logprob: -7.667524337768555
    9. '	for' → logprob: -9.042524337768555
    10. ' ]' → logprob: -9.542524337768555

Token 195: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006890365853905678
    2. ' i' → logprob: -5.006890296936035
    3. 'range' → logprob: -9.131890296936035
    4. ' range' → logprob: -9.631890296936035
    5. ' ' → logprob: -14.506890296936035
    6. '   ' → logprob: -15.256890296936035
    7. '  ' → logprob: -15.631890296936035
    8. ' in' → logprob: -15.756890296936035
    9. 'in' → logprob: -16.63189125061035
    10. '1' → logprob: -16.63189125061035

Token 196: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07035940140485764
    2. 'in' → logprob: -2.695359468460083
    3. '1' → logprob: -8.445359230041504
    4. ' i' → logprob: -10.195359230041504
    5. '+' → logprob: -10.320359230041504
    6. ' ' → logprob: -10.570359230041504
    7. '=' → logprob: -11.070359230041504
    8. 'i' → logprob: -11.070359230041504
    9. ')' → logprob: -11.195359230041504
    10. '0' → logprob: -11.445359230041504

Token 197: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.09320083260536194
    2. ' range' → logprob: -2.468200922012329
    3. '1' → logprob: -5.46820068359375
    4. '   ' → logprob: -11.09320068359375
    5. ' ' → logprob: -11.34320068359375
    6. '(range' → logprob: -13.34320068359375
    7. '	range' → logprob: -13.59320068359375
    8. 'base' → logprob: -13.84320068359375
    9. '  ' → logprob: -14.59320068359375
    10. '    ' → logprob: -14.84320068359375

Token 198: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6944571137428284
    2. '1' → logprob: -0.6944571137428284
    3. '(i' → logprob: -7.194457054138184
    4. '60' → logprob: -8.444457054138184
    5. ' ' → logprob: -8.819457054138184
    6. '(len' → logprob: -9.069457054138184
    7. 'i' → logprob: -9.944457054138184
    8. '   ' → logprob: -11.444457054138184
    9. 'len' → logprob: -11.819457054138184
    10. ' i' → logprob: -12.444457054138184

Token 199: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010328111238777637
    2. '60' → logprob: -7.001032829284668
    3. ' ' → logprob: -9.126032829284668
    4. '   ' → logprob: -12.376032829284668
    5. 'len' → logprob: -12.876032829284668
    6. '0' → logprob: -13.376032829284668
    7. '(' → logprob: -14.001032829284668
    8. '2' → logprob: -14.126032829284668
    9. '
' → logprob: -14.876032829284668
    10. '6' → logprob: -14.876032829284668

Token 200: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010847019031643867
    2. ' ,' → logprob: -5.510847091674805
    3. ')])' → logprob: -5.510847091674805
    4. ',len' → logprob: -7.010847091674805
    5. '(len' → logprob: -8.135847091674805
    6. '])]' → logprob: -8.135847091674805
    7. '(' → logprob: -8.385847091674805
    8. '60' → logprob: -8.385847091674805
    9. ')]' → logprob: -8.510847091674805
    10. '])' → logprob: -8.885847091674805

Token 201: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.0007493520388379693
    2. ' ' → logprob: -7.375749588012695
    3. 'len' → logprob: -9.500749588012695
    4. '   ' → logprob: -11.250749588012695
    5. '1' → logprob: -11.625749588012695
    6. '59' → logprob: -12.500749588012695
    7. ' len' → logprob: -12.625749588012695
    8. '
' → logprob: -13.125749588012695
    9. '30' → logprob: -13.188249588012695
    10. '61' → logprob: -13.250749588012695

Token 202: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.17044229805469513
    2. ']' → logprob: -1.9204423427581787
    3. '])' → logprob: -4.9204421043396
    4. '])]' → logprob: -5.9204421043396
    5. ')])' → logprob: -9.420442581176758
    6. ')' → logprob: -9.545442581176758
    7. ']]' → logprob: -11.795442581176758
    8. ']))' → logprob: -12.420442581176758
    9. ']}' → logprob: -12.420442581176758
    10. ' ]' → logprob: -12.545442581176758

Token 203: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4133315086364746
    2. '   ' → logprob: -1.5383315086364746
    3. '<|end|>' → logprob: -3.0383315086364746
    4. ':' → logprob: -3.1633315086364746
    5. 'def' → logprob: -4.663331508636475
    6. '):' → logprob: -5.038331508636475
    7. ']' → logprob: -5.288331508636475
    8. ' ' → logprob: -5.538331508636475
    9. ',' → logprob: -6.288331508636475
    10. '[' → logprob: -6.413331508636475

Token 204: ' doubling' (ID: 122384)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2629126310348511
    2. ' ' → logprob: -2.6379127502441406
    3. '[' → logprob: -3.1379127502441406
    4. ':' → logprob: -3.2629127502441406
    5. '<|end|>' → logprob: -3.3879127502441406
    6. '(' → logprob: -4.512912750244141
    7. ']' → logprob: -4.887912750244141
    8. ',' → logprob: -5.137912750244141
    9. 'def' → logprob: -5.387912750244141
    10. ' )' → logprob: -5.512912750244141

Token 205: 'line' (ID: 1137)
  Prédit: 'const'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'const' → logprob: -4.1080467781284824e-05
    2. '_const' → logprob: -10.625041007995605
    3. '_consts' → logprob: -12.000041007995605
    4. ' =' → logprob: -12.500041007995605
    5. '_' → logprob: -13.125041007995605
    6. ' const' → logprob: -13.250041007995605
    7. '=' → logprob: -13.500041007995605
    8. '_range' → logprob: -14.875041007995605
    9. '.const' → logprob: -15.750041007995605
    10. ')' → logprob: -15.875041007995605

Token 206: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43129613995552063
    2. ' =' → logprob: -1.0562961101531982
    3. '=[]' → logprob: -6.306296348571777
    4. ']' → logprob: -8.431296348571777
    5. 's' → logprob: -8.556296348571777
    6. '=[' → logprob: -9.556296348571777
    7. 'const' → logprob: -9.806296348571777
    8. ')' → logprob: -9.931296348571777
    9. '_' → logprob: -10.681296348571777
    10. ']=' → logprob: -10.806296348571777

Token 207: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012599836103618145
    2. ' =' → logprob: -4.387599945068359
    3. '=[]' → logprob: -9.88759994506836
    4. '=[' → logprob: -10.76259994506836
    5. ']' → logprob: -12.38759994506836
    6. ']=' → logprob: -12.88759994506836
    7. '=
' → logprob: -13.01259994506836
    8. '[' → logprob: -13.26259994506836
    9. ' =[' → logprob: -13.51259994506836
    10. '=

' → logprob: -13.76259994506836

Token 208: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.053095269948244095
    2. ' [' → logprob: -3.1780953407287598
    3. '[(' → logprob: -4.92809534072876
    4. '[a' → logprob: -7.30309534072876
    5. '[l' → logprob: -8.053094863891602
    6. '[((' → logprob: -8.178094863891602
    7. ' [(' → logprob: -8.678094863891602
    8. '[A' → logprob: -9.053094863891602
    9. '[L' → logprob: -9.178094863891602
    10. '   ' → logprob: -9.178094863891602

Token 209: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.188236802816391
    2. '(' → logprob: -3.063236713409424
    3. 'a' → logprob: -3.438236713409424
    4. '((' → logprob: -3.688236713409424
    5. '0' → logprob: -3.813236713409424
    6. 'A' → logprob: -4.438236713409424
    7. 'pow' → logprob: -4.563236713409424
    8. 'B' → logprob: -4.938236713409424
    9. 'b' → logprob: -5.563236713409424
    10. '(a' → logprob: -5.688236713409424

Token 210: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0024191797710955143
    2. ',' → logprob: -6.8774189949035645
    3. ']*' → logprob: -7.6274189949035645
    4. ']*(' → logprob: -7.6274189949035645
    5. ']+' → logprob: -8.877419471740723
    6. ' for' → logprob: -9.127419471740723
    7. ' ]' → logprob: -9.252419471740723
    8. 'for' → logprob: -11.127419471740723
    9. '<|end|>' → logprob: -11.377419471740723
    10. '])' → logprob: -11.752419471740723

Token 211: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 212: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.025768229737877846
    2. '[((' → logprob: -4.275768280029297
    3. '[(' → logprob: -4.650768280029297
    4. ' [' → logprob: -6.525768280029297
    5. '[d' → logprob: -8.400768280029297
    6. '[L' → logprob: -8.900768280029297
    7. '[l' → logprob: -10.275768280029297
    8. '[A' → logprob: -10.900768280029297
    9. '[len' → logprob: -11.525768280029297
    10. 'dou' → logprob: -11.525768280029297

Token 213: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.15361584722995758
    2. '(' → logprob: -2.653615951538086
    3. 'dou' → logprob: -3.903615951538086
    4. '(((' → logprob: -4.028615951538086
    5. 'pow' → logprob: -4.778615951538086
    6. '1' → logprob: -4.778615951538086
    7. '(l' → logprob: -5.653615951538086
    8. '(pow' → logprob: -5.778615951538086
    9. '(d' → logprob: -5.903615951538086
    10. '(i' → logprob: -6.403615951538086

Token 214: 'pow' (ID: 30304)
  Prédit: 'pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.00968207512050867
    2. '10' → logprob: -5.6346821784973145
    3. '(pow' → logprob: -6.2596821784973145
    4. 'B' → logprob: -6.6346821784973145
    5. 'A' → logprob: -6.7596821784973145
    6. '(' → logprob: -6.8846821784973145
    7. 'L' → logprob: -8.884681701660156
    8. '(A' → logprob: -9.384681701660156
    9. '(B' → logprob: -9.634681701660156
    10. 'b' → logprob: -9.884681701660156

Token 215: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001704579102806747
    2. '10' → logprob: -6.376704692840576
    3. ' (' → logprob: -13.376704216003418
    4. '<|end|>' → logprob: -14.501704216003418
    5. ' ' → logprob: -15.751704216003418
    6. '{' → logprob: -16.626705169677734
    7. 'def' → logprob: -18.251705169677734
    8. '```' → logprob: -18.251705169677734
    9. '...' → logprob: -18.376705169677734
    10. ')' → logprob: -18.376705169677734

Token 216: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.3319124011322856e-05
    2. '(' → logprob: -10.875022888183594
    3. ' ' → logprob: -13.500022888183594
    4. '100' → logprob: -14.375022888183594
    5. '1' → logprob: -14.750022888183594
    6. '0' → logprob: -14.875022888183594
    7. ')' → logprob: -15.125022888183594
    8. '   ' → logprob: -15.500022888183594
    9. 'def' → logprob: -15.500022888183594
    10. '...' → logprob: -15.750022888183594

Token 217: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003619217313826084
    2. ' ,' → logprob: -8.625362396240234
    3. ',l' → logprob: -8.750362396240234
    4. ',L' → logprob: -11.625362396240234
    5. '(' → logprob: -12.125362396240234
    6. ' ' → logprob: -12.625362396240234
    7. '<|end|>' → logprob: -12.875362396240234
    8. '(l' → logprob: -14.125362396240234
    9. '(L' → logprob: -14.625362396240234
    10. ',b' → logprob: -15.125362396240234

Token 218: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.42935580015182495
    2. ' l' → logprob: -1.0543558597564697
    3. 'L' → logprob: -8.67935562133789
    4. ' ' → logprob: -9.17935562133789
    5. 'b' → logprob: -9.30435562133789
    6. '2' → logprob: -9.92935562133789
    7. '   ' → logprob: -10.17935562133789
    8. ' b' → logprob: -10.67935562133789
    9. '    ' → logprob: -10.67935562133789
    10. ' L' → logprob: -10.92935562133789

Token 219: '*' (ID: 9)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21882079541683197
    2. '*' → logprob: -1.7188208103179932
    3. '2' → logprob: -4.218820571899414
    4. ' ,' → logprob: -6.968820571899414
    5. '**' → logprob: -7.468820571899414
    6. ' *' → logprob: -7.843820571899414
    7. '*(' → logprob: -8.343820571899414
    8. ')' → logprob: -9.468820571899414
    9. '*,' → logprob: -9.468820571899414
    10. ' ' → logprob: -10.343820571899414

Token 220: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003820524725597352
    2. '1' → logprob: -8.625382423400879
    3. '(' → logprob: -9.375382423400879
    4. ' ' → logprob: -9.875382423400879
    5. '0' → logprob: -10.875382423400879
    6. 'pow' → logprob: -11.000382423400879
    7. '   ' → logprob: -11.625382423400879
    8. ',' → logprob: -12.750382423400879
    9. 'i' → logprob: -12.875382423400879
    10. ')' → logprob: -12.875382423400879

Token 221: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0022538607008755207
    2. '-' → logprob: -6.127254009246826
    3. '[' → logprob: -11.002253532409668
    4. '*' → logprob: -11.127253532409668
    5. ' ' → logprob: -11.877253532409668
    6. '*(' → logprob: -12.502253532409668
    7. '   ' → logprob: -12.502253532409668
    8. '**,' → logprob: -12.877253532409668
    9. ' **' → logprob: -13.002253532409668
    10. '[-' → logprob: -13.127253532409668

Token 222: '(' (ID: 7)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.002712976885959506
    2. 'i' → logprob: -6.502713203430176
    3. '(' → logprob: -6.752713203430176
    4. ' (' → logprob: -10.377713203430176
    5. '   ' → logprob: -12.377713203430176
    6. '[i' → logprob: -13.377713203430176
    7. ' i' → logprob: -14.127713203430176
    8. '```' → logprob: -14.377713203430176
    9. '{i' → logprob: -14.627713203430176
    10. '(I' → logprob: -14.752713203430176

Token 223: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.010024038143455982
    2. '(i' → logprob: -4.635024070739746
    3. '(' → logprob: -8.510024070739746
    4. ' i' → logprob: -10.260024070739746
    5. '   ' → logprob: -11.260024070739746
    6. '1' → logprob: -12.135024070739746
    7. ' (' → logprob: -12.260024070739746
    8. '0' → logprob: -13.010024070739746
    9. '_i' → logprob: -13.260024070739746
    10. ' ' → logprob: -14.135024070739746

Token 224: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.619311974034645e-05
    2. ' -' → logprob: -11.000036239624023
    3. '   ' → logprob: -11.750036239624023
    4. '[' → logprob: -12.875036239624023
    5. '1' → logprob: -12.875036239624023
    6. '),' → logprob: -13.625036239624023
    7. ')-' → logprob: -13.750036239624023
    8. '```' → logprob: -13.875036239624023
    9. ',' → logprob: -14.125036239624023
    10. '0' → logprob: -14.500036239624023

Token 225: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5309017896652222
    2. '(i' → logprob: -0.9059017896652222
    3. '0' → logprob: -5.030901908874512
    4. 'i' → logprob: -7.280901908874512
    5. '1' → logprob: -8.530901908874512
    6. '-' → logprob: -8.655901908874512
    7. ' (' → logprob: -10.405901908874512
    8. '{i' → logprob: -10.905901908874512
    9. '   ' → logprob: -11.030901908874512
    10. '(j' → logprob: -11.155901908874512

Token 226: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013670233311131597
    2. '),' → logprob: -7.001367092132568
    3. ' ,' → logprob: -8.12636661529541
    4. ',M' → logprob: -9.00136661529541
    5. '   ' → logprob: -10.87636661529541
    6. '],' → logprob: -12.62636661529541
    7. '```' → logprob: -13.37636661529541
    8. ',m' → logprob: -13.50136661529541
    9. ')' → logprob: -13.75136661529541
    10. ',d' → logprob: -14.00136661529541

Token 227: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.2526770532131195
    2. ' M' → logprob: -1.502677083015442
    3. 'i' → logprob: -8.627676963806152
    4. ' ' → logprob: -9.252676963806152
    5. 'dou' → logprob: -9.502676963806152
    6. ')' → logprob: -9.752676963806152
    7. ' i' → logprob: -9.752676963806152
    8. '60' → logprob: -10.252676963806152
    9. '2' → logprob: -10.627676963806152
    10. '[M' → logprob: -10.627676963806152

Token 228: ')+' (ID: 16161)
  Prédit: ')+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.0008623883477412164
    2. ')' → logprob: -8.000862121582031
    3. ']+' → logprob: -8.000862121582031
    4. '+' → logprob: -10.250862121582031
    5. '   ' → logprob: -10.250862121582031
    6. '))+' → logprob: -11.000862121582031
    7. '[' → logprob: -11.000862121582031
    8. ' ' → logprob: -11.250862121582031
    9. ' )' → logprob: -11.250862121582031
    10. '])+' → logprob: -11.500862121582031

Token 229: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12915830314159393
    2. 'B' → logprob: -2.8791582584381104
    3. 'i' → logprob: -3.3791582584381104
    4. '2' → logprob: -5.1291584968566895
    5. 'b' → logprob: -5.5041584968566895
    6. 'A' → logprob: -5.6291584968566895
    7. '(' → logprob: -5.7541584968566895
    8. 'M' → logprob: -5.7541584968566895
    9. '0' → logprob: -5.8791584968566895
    10. '(i' → logprob: -6.2541584968566895

Token 230: ')*' (ID: 11043)
  Prédit: ')*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.0021773851476609707
    2. ')' → logprob: -6.8771772384643555
    3. '   ' → logprob: -8.377177238464355
    4. '*d' → logprob: -8.377177238464355
    5. ']*' → logprob: -8.877177238464355
    6. ')%' → logprob: -9.002177238464355
    7. ')**' → logprob: -9.252177238464355
    8. ' )' → logprob: -9.377177238464355
    9. '*)' → logprob: -9.502177238464355
    10. ')*(' → logprob: -9.877177238464355

Token 231: 'dou' (ID: 122443)
  Prédit: 'dou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.03935326263308525
    2. 'parts' → logprob: -3.664353370666504
    3. 'part' → logprob: -6.039353370666504
    4. 'd' → logprob: -6.414353370666504
    5. 'acc' → logprob: -6.914353370666504
    6. '0' → logprob: -6.914353370666504
    7. 'b' → logprob: -7.414353370666504
    8. ' parts' → logprob: -7.539353370666504
    9. ' doubling' → logprob: -7.539353370666504
    10. '(parts' → logprob: -7.539353370666504

Token 232: 'bling' (ID: 11037)
  Prédit: 'bling'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bling' → logprob: -0.3791219890117645
    2. 'dou' → logprob: -2.254122018814087
    3. 'bl' → logprob: -2.379122018814087
    4. 'const' → logprob: -3.879122018814087
    5. 'ble' → logprob: -3.879122018814087
    6. 'ling' → logprob: -4.629121780395508
    7. 'ing' → logprob: -4.879121780395508
    8. '[' → logprob: -5.129121780395508
    9. 'b' → logprob: -5.379121780395508
    10. 'ou' → logprob: -5.504121780395508

Token 233: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0060171992518007755
    2. 'const' → logprob: -5.131017208099365
    3. 'dou' → logprob: -10.631016731262207
    4. '[' → logprob: -11.256016731262207
    5. 'range' → logprob: -11.381016731262207
    6. '[line' → logprob: -11.756016731262207
    7. ' line' → logprob: -12.006016731262207
    8. ')' → logprob: -12.256016731262207
    9. '_line' → logprob: -12.881016731262207
    10. '  ' → logprob: -13.006016731262207

Token 234: ' if' (ID: 538)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.06346158683300018
    2. '[-' → logprob: -2.8134615421295166
    3. '[' → logprob: -6.813461780548096
    4. '   ' → logprob: -9.438461303710938
    5. ')[' → logprob: -9.563461303710938
    6. '=[' → logprob: -9.563461303710938
    7. ' [' → logprob: -10.188461303710938
    8. 'i' → logprob: -10.313461303710938
    9. '][' → logprob: -11.313461303710938
    10. '=' → logprob: -11.313461303710938

Token 235: ' (' (ID: 350)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.17460931837558746
    2. ' doubling' → logprob: -2.674609422683716
    3. '0' → logprob: -3.799609422683716
    4. 'i' → logprob: -4.174609184265137
    5. 'd' → logprob: -4.174609184265137
    6. '(i' → logprob: -4.549609184265137
    7. '[i' → logprob: -4.674609184265137
    8. ' i' → logprob: -5.049609184265137
    9. '   ' → logprob: -6.424609184265137
    10. '1' → logprob: -6.549609184265137

Token 236: 'dou' (ID: 122443)
  Prédit: 'dou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.18022575974464417
    2. 'i' → logprob: -2.1802258491516113
    3. ' doubling' → logprob: -4.305225849151611
    4. ' i' → logprob: -4.680225849151611
    5. '0' → logprob: -4.805225849151611
    6. '(i' → logprob: -4.930225849151611
    7. 'len' → logprob: -6.055225849151611
    8. '1' → logprob: -6.180225849151611
    9. 'd' → logprob: -6.805225849151611
    10. ')' → logprob: -6.930225849151611

Token 237: 'bling' (ID: 11037)
  Prédit: 'bling'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bling' → logprob: -0.40028560161590576
    2. 'ble' → logprob: -2.0252857208251953
    3. 'b' → logprob: -2.6502857208251953
    4. 'bl' → logprob: -2.6502857208251953
    5. 'g' → logprob: -4.525285720825195
    6. 'ng' → logprob: -4.775285720825195
    7. '[' → logprob: -4.900285720825195
    8. 'pling' → logprob: -4.900285720825195
    9. 'line' → logprob: -5.275285720825195
    10. 'gling' → logprob: -6.150285720825195

Token 238: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.10895418375730515
    2. 'const' → logprob: -2.7339541912078857
    3. ')' → logprob: -4.733953952789307
    4. '_line' → logprob: -4.733953952789307
    5. '[i' → logprob: -5.358953952789307
    6. '_' → logprob: -5.733953952789307
    7. '[' → logprob: -6.358953952789307
    8. 'range' → logprob: -6.358953952789307
    9. '=' → logprob: -6.858953952789307
    10. ')_' → logprob: -7.108953952789307

Token 239: ':' (ID: 25)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.0377376079559326
    2. '==' → logprob: -1.4127376079559326
    3. ':=' → logprob: -1.7877376079559326
    4. ' :=' → logprob: -2.0377376079559326
    5. ' ==' → logprob: -2.9127376079559326
    6. '[i' → logprob: -3.7877376079559326
    7. '[' → logprob: -4.912737846374512
    8. '+' → logprob: -5.537737846374512
    9. 'is' → logprob: -6.162737846374512
    10. ')' → logprob: -6.287737846374512

Token 240: '=[' (ID: 13370)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0611145496368408
    2. '[' → logprob: -1.1861145496368408
    3. ' [' → logprob: -2.061114549636841
    4. '0' → logprob: -2.686114549636841
    5. ')' → logprob: -3.061114549636841
    6. '=' → logprob: -3.311114549636841
    7. ' =' → logprob: -4.686114311218262
    8. 'dou' → logprob: -5.061114311218262
    9. 'i' → logprob: -5.311114311218262
    10. ' i' → logprob: -5.436114311218262

Token 241: '0' (ID: 15)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.14477813243865967
    2. '(d' → logprob: -2.269778251647949
    3. 'd' → logprob: -5.394778251647949
    4. '[d' → logprob: -5.519778251647949
    5. ' doubling' → logprob: -5.519778251647949
    6. '((' → logprob: -5.519778251647949
    7. '0' → logprob: -5.644778251647949
    8. ' (' → logprob: -5.769778251647949
    9. '(' → logprob: -6.269778251647949
    10. '[' → logprob: -6.394778251647949

Token 242: ']+' (ID: 15344)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4087307453155518
    2. '])' → logprob: -1.9087307453155518
    3. '])[' → logprob: -1.9087307453155518
    4. ']+' → logprob: -2.0337307453155518
    5. '][' → logprob: -2.9087307453155518
    6. ']' → logprob: -2.9087307453155518
    7. '+' → logprob: -3.0337307453155518
    8. ' +' → logprob: -3.2837307453155518
    9. 'for' → logprob: -3.5337307453155518
    10. ')' → logprob: -4.533730506896973

Token 243: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.583385169506073
    2. '[d' → logprob: -1.3333852291107178
    3. '[(' → logprob: -2.9583852291107178
    4. 'dou' → logprob: -2.9583852291107178
    5. '[((' → logprob: -3.4583852291107178
    6. ' [' → logprob: -3.7083852291107178
    7. '[int' → logprob: -5.583384990692139
    8. '[
' → logprob: -5.833384990692139
    9. '[i' → logprob: -5.958384990692139
    10. 'd' → logprob: -6.833384990692139

Token 244: '0' (ID: 15)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.7657451033592224
    2. 'dou' → logprob: -0.7657451033592224
    3. '(d' → logprob: -3.890745162963867
    4. '0' → logprob: -4.015745162963867
    5. '(' → logprob: -4.265745162963867
    6. '(((' → logprob: -5.265745162963867
    7. ' ((' → logprob: -6.390745162963867
    8. ' (' → logprob: -6.515745162963867
    9. ' doubling' → logprob: -6.765745162963867
    10. '[(' → logprob: -6.890745162963867

Token 245: ']*(' (ID: 92627)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3425949811935425
    2. ' for' → logprob: -1.8425949811935425
    3. ']*' → logprob: -1.9675949811935425
    4. ']' → logprob: -2.467595100402832
    5. '[i' → logprob: -2.467595100402832
    6. ']*(' → logprob: -3.342595100402832
    7. '])' → logprob: -3.467595100402832
    8. '0' → logprob: -3.592595100402832
    9. '*i' → logprob: -3.592595100402832
    10. '*' → logprob: -3.842595100402832

Token 246: 'i' (ID: 72)
  Prédit: '59'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '59' → logprob: -0.7300967574119568
    2. 'i' → logprob: -1.9800968170166016
    3. '60' → logprob: -1.9800968170166016
    4. '0' → logprob: -2.2300968170166016
    5. '1' → logprob: -2.8550968170166016
    6. 'n' → logprob: -4.105096817016602
    7. '[' → logprob: -4.355096817016602
    8. 'L' → logprob: -4.855096817016602
    9. ' ' → logprob: -5.355096817016602
    10. ')' → logprob: -5.355096817016602

Token 247: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37055525183677673
    2. '[i' → logprob: -1.9955552816390991
    3. '))' → logprob: -2.8705551624298096
    4. ')]' → logprob: -3.7455551624298096
    5. ')])' → logprob: -3.7455551624298096
    6. ')[' → logprob: -4.620555400848389
    7. '[' → logprob: -4.620555400848389
    8. '   ' → logprob: -5.245555400848389
    9. '])' → logprob: -5.370555400848389
    10. ')))' → logprob: -5.370555400848389

Token 248: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4392939507961273
    2. 'i' → logprob: -1.3142939805984497
    3. '59' → logprob: -2.93929386138916
    4. '0' → logprob: -3.93929386138916
    5. 'len' → logprob: -5.93929386138916
    6. '60' → logprob: -6.06429386138916
    7. ')' → logprob: -6.18929386138916
    8. '-' → logprob: -6.81429386138916
    9. 'n' → logprob: -7.06429386138916
    10. '(i' → logprob: -7.18929386138916

Token 249: '))[' (ID: 101036)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0829275846481323
    2. '))' → logprob: -1.7079275846481323
    3. '[i' → logprob: -1.7079275846481323
    4. ')[' → logprob: -1.7079275846481323
    5. ')])' → logprob: -3.582927703857422
    6. ')]' → logprob: -4.207927703857422
    7. '))[' → logprob: -4.332927703857422
    8. ')))' → logprob: -4.457927703857422
    9. 'i' → logprob: -4.832927703857422
    10. '[' → logprob: -5.207927703857422

Token 250: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12245489656925201
    2. '0' → logprob: -3.622454881668091
    3. '])' → logprob: -3.872454881668091
    4. '])]' → logprob: -4.24745512008667
    5. '[i' → logprob: -4.74745512008667
    6. ')' → logprob: -4.74745512008667
    7. ')])' → logprob: -4.87245512008667
    8. ']' → logprob: -5.62245512008667
    9. '-' → logprob: -6.12245512008667
    10. '(i' → logprob: -6.12245512008667

Token 251: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3711399734020233
    2. '])' → logprob: -2.4961400032043457
    3. '][' → logprob: -2.6211400032043457
    4. ']+' → logprob: -3.3711400032043457
    5. '[i' → logprob: -3.7461400032043457
    6. '])]' → logprob: -3.8711400032043457
    7. '-' → logprob: -3.9961400032043457
    8. ')' → logprob: -4.621140003204346
    9. ')]' → logprob: -5.121140003204346
    10. '])+' → logprob: -5.246140003204346

Token 252: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0049684434197843075
    2. 'i' → logprob: -6.004968643188477
    3. '-' → logprob: -7.129968643188477
    4. '0' → logprob: -7.379968643188477
    5. ']' → logprob: -7.879968643188477
    6. ' ' → logprob: -8.379968643188477
    7. '])' → logprob: -9.004968643188477
    8. '```' → logprob: -9.754968643188477
    9. '...' → logprob: -10.254968643188477
    10. '   ' → logprob: -10.254968643188477

Token 253: ']==' (ID: 34128)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.2717554271221161
    2. ']' → logprob: -2.0217554569244385
    3. '])]' → logprob: -3.1467554569244385
    4. ')' → logprob: -4.396755218505859
    5. ']==' → logprob: -4.646755218505859
    6. ')])' → logprob: -5.021755218505859
    7. ')]' → logprob: -5.146755218505859
    8. '][' → logprob: -5.521755218505859
    9. ']))' → logprob: -5.771755218505859
    10. '])[' → logprob: -5.771755218505859

Token 254: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17126275599002838
    2. 'dou' → logprob: -2.546262741088867
    3. '1' → logprob: -3.421262741088867
    4. '[' → logprob: -4.921262741088867
    5. ']' → logprob: -4.921262741088867
    6. 'i' → logprob: -5.171262741088867
    7. ' ' → logprob: -5.796262741088867
    8. ')' → logprob: -5.796262741088867
    9. '[i' → logprob: -5.921262741088867
    10. 'd' → logprob: -6.046262741088867

Token 255: ' else' (ID: 1203)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4666205644607544
    2. '])' → logprob: -1.5916205644607544
    3. ']' → logprob: -2.716620445251465
    4. ')])' → logprob: -3.966620445251465
    5. '])]' → logprob: -4.091620445251465
    6. ')]' → logprob: -4.091620445251465
    7. '[i' → logprob: -4.466620445251465
    8. ']==' → logprob: -4.841620445251465
    9. ')==' → logprob: -4.966620445251465
    10. '[' → logprob: -5.091620445251465

Token 256: ' doubling' (ID: 122384)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6647464632987976
    2. 'dou' → logprob: -1.4147465229034424
    3. ' doubling' → logprob: -2.7897465229034424
    4. '1' → logprob: -2.9147465229034424
    5. '[' → logprob: -3.1647465229034424
    6. ' ' → logprob: -3.4147465229034424
    7. ' [' → logprob: -4.664746284484863
    8. '[i' → logprob: -4.914746284484863
    9. ' (' → logprob: -5.164746284484863
    10. '(' → logprob: -5.414746284484863

Token 257: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.4031651020050049
    2. 'const' → logprob: -1.1531651020050049
    3. '_line' → logprob: -5.278164863586426
    4. ')' → logprob: -6.278164863586426
    5. ']' → logprob: -6.528164863586426
    6. ']_' → logprob: -6.778164863586426
    7. '_' → logprob: -6.903164863586426
    8. '])' → logprob: -7.028164863586426
    9. '[' → logprob: -7.153164863586426
    10. '_const' → logprob: -7.278164863586426

Token 258: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.536406397819519
    2. ')' → logprob: -1.661406397819519
    3. ')]' → logprob: -2.9114065170288086
    4. '])]' → logprob: -3.2864065170288086
    5. ']' → logprob: -3.4114065170288086
    6. '])' → logprob: -3.6614065170288086
    7. ')])' → logprob: -3.7864065170288086
    8. '[' → logprob: -3.9114065170288086
    9. '```' → logprob: -5.161406517028809
    10. ')==' → logprob: -5.536406517028809

Token 259: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03982041776180267
    2. '])' → logprob: -3.789820432662964
    3. ']' → logprob: -4.289820194244385
    4. '])]' → logprob: -7.289820194244385
    5. '1' → logprob: -7.914820194244385
    6. ')])' → logprob: -8.164820671081543
    7. ')' → logprob: -8.289820671081543
    8. ' -' → logprob: -8.414820671081543
    9. ']-' → logprob: -8.789820671081543
    10. ']))' → logprob: -8.789820671081543

Token 260: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16254988312721252
    2. '-' → logprob: -1.9125498533248901
    3. ']' → logprob: -7.16254997253418
    4. '0' → logprob: -7.28754997253418
    5. '])' → logprob: -8.41254997253418
    6. 'i' → logprob: -8.91254997253418
    7. ' ' → logprob: -9.41254997253418
    8. ' -' → logprob: -9.53754997253418
    9. '```' → logprob: -9.53754997253418
    10. ']))' → logprob: -9.66254997253418

Token 261: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.4787197709083557
    2. ']' → logprob: -1.603719711303711
    3. '])]' → logprob: -2.228719711303711
    4. ']+' → logprob: -3.603719711303711
    5. ')])' → logprob: -4.228719711303711
    6. ')]' → logprob: -4.603719711303711
    7. ')' → logprob: -4.603719711303711
    8. '])+' → logprob: -6.603719711303711
    9. ']))' → logprob: -6.853719711303711
    10. ']),' → logprob: -6.978719711303711

Token 262: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08026570826768875
    2. ')]' → logprob: -2.955265760421753
    3. ')' → logprob: -4.205265522003174
    4. '])]' → logprob: -5.580265522003174
    5. '])' → logprob: -6.080265522003174
    6. '[' → logprob: -6.455265522003174
    7. ')])' → logprob: -7.455265522003174
    8. '<|end|>' → logprob: -7.705265522003174
    9. '   ' → logprob: -8.330265998840332
    10. '```' → logprob: -8.580265998840332

Token 263: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7014605402946472
    2. '0' → logprob: -1.201460599899292
    3. ' ' → logprob: -2.201460599899292
    4. '[' → logprob: -3.201460599899292
    5. '[i' → logprob: -4.076460361480713
    6. ' [' → logprob: -4.201460361480713
    7. ')' → logprob: -5.701460361480713
    8. ']' → logprob: -5.826460361480713
    9. 'i' → logprob: -6.576460361480713
    10. ' (' → logprob: -6.951460361480713

Token 264: 'pow' (ID: 30304)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.93536376953125
    2. 'a' → logprob: -1.56036376953125
    3. '0' → logprob: -2.18536376953125
    4. 'pow' → logprob: -2.31036376953125
    5. '1' → logprob: -2.93536376953125
    6. 'B' → logprob: -3.68536376953125
    7. ' b' → logprob: -4.56036376953125
    8. 'A' → logprob: -4.56036376953125
    9. ' (' → logprob: -4.56036376953125
    10. '(a' → logprob: -4.56036376953125

Token 265: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03369457274675369
    2. '10' → logprob: -3.4086945056915283
    3. ' (' → logprob: -10.40869426727295
    4. '(
' → logprob: -11.90869426727295
    5. ' ' → logprob: -12.53369426727295
    6. '```' → logprob: -12.78369426727295
    7. ')' → logprob: -13.40869426727295
    8. '<|end|>' → logprob: -13.65869426727295
    9. ',' → logprob: -14.40869426727295
    10. '=' → logprob: -14.53369426727295

Token 266: '2' (ID: 17)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0004348413785919547
    2. '(' → logprob: -8.000434875488281
    3. '```' → logprob: -9.750434875488281
    4. ')' → logprob: -11.125434875488281
    5. ' ' → logprob: -12.250434875488281
    6. '0' → logprob: -12.500434875488281
    7. '...' → logprob: -13.125434875488281
    8. '<|end|>' → logprob: -13.250434875488281
    9. 'def' → logprob: -13.437934875488281
    10. '1' → logprob: -13.562934875488281

Token 267: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02371125854551792
    2. '[' → logprob: -5.023711204528809
    3. '**' → logprob: -5.273711204528809
    4. '[i' → logprob: -5.898711204528809
    5. '**,' → logprob: -6.023711204528809
    6. ' ,' → logprob: -6.398711204528809
    7. ',i' → logprob: -6.773711204528809
    8. ')' → logprob: -7.398711204528809
    9. '(' → logprob: -7.398711204528809
    10. ',[' → logprob: -7.648711204528809

Token 268: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12641368806362152
    2. ' i' → logprob: -2.251413583755493
    3. 'l' → logprob: -5.126413822174072
    4. ' l' → logprob: -6.376413822174072
    5. '0' → logprob: -6.876413822174072
    6. ' ' → logprob: -7.251413822174072
    7. '2' → logprob: -7.501413822174072
    8. '(i' → logprob: -7.501413822174072
    9. '10' → logprob: -7.626413822174072
    10. '1' → logprob: -8.126413345336914

Token 269: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00705598434433341
    2. ',' → logprob: -5.632055759429932
    3. ' -' → logprob: -6.257055759429932
    4. ')' → logprob: -7.132055759429932
    5. '[i' → logprob: -8.75705623626709
    6. '),' → logprob: -9.00705623626709
    7. ')-' → logprob: -9.13205623626709
    8. '```' → logprob: -9.13205623626709
    9. '[' → logprob: -10.38205623626709
    10. '**' → logprob: -10.50705623626709

Token 270: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.363802433013916
    2. '0' → logprob: -1.988802433013916
    3. '(' → logprob: -2.613802433013916
    4. '(i' → logprob: -3.238802433013916
    5. '1' → logprob: -4.613802433013916
    6. ')' → logprob: -4.988802433013916
    7. '[' → logprob: -4.988802433013916
    8. '-' → logprob: -4.988802433013916
    9. 'L' → logprob: -5.113802433013916
    10. 'l' → logprob: -5.488802433013916

Token 271: ',M' (ID: 54127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03889195993542671
    2. ')' → logprob: -3.9138920307159424
    3. '))' → logprob: -4.913891792297363
    4. '),' → logprob: -5.663891792297363
    5. ' ,' → logprob: -6.038891792297363
    6. ')))' → logprob: -6.413891792297363
    7. ')])' → logprob: -7.538891792297363
    8. ')+' → logprob: -7.788891792297363
    9. ')]' → logprob: -8.288891792297363
    10. '])' → logprob: -8.413891792297363

Token 272: ')' (ID: 8)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.8476522564888
    2. ')' → logprob: -1.2226521968841553
    3. ')+' → logprob: -2.4726521968841553
    4. ')%' → logprob: -2.8476521968841553
    5. ')))' → logprob: -3.3476521968841553
    6. ')**' → logprob: -3.7226521968841553
    7. ',' → logprob: -3.8476521968841553
    8. ')*' → logprob: -4.222652435302734
    9. '),' → logprob: -4.347652435302734
    10. ')]' → logprob: -4.972652435302734

Token 273: ' *' (ID: 425)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.8352534770965576
    2. ')]' → logprob: -1.3352534770965576
    3. ')' → logprob: -1.5852534770965576
    4. '])' → logprob: -3.4602534770965576
    5. ']' → logprob: -4.210253715515137
    6. ')**' → logprob: -4.835253715515137
    7. '[i' → logprob: -4.960253715515137
    8. '**' → logprob: -5.335253715515137
    9. '])]' → logprob: -5.335253715515137
    10. ')][' → logprob: -5.710253715515137

Token 274: ' pow' (ID: 9779)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.8827807307243347
    2. 'pow' → logprob: -2.0077807903289795
    3. 'l' → logprob: -2.2577807903289795
    4. '(' → logprob: -2.6327807903289795
    5. '10' → logprob: -3.2577807903289795
    6. 'L' → logprob: -3.3827807903289795
    7. '(pow' → logprob: -3.5077807903289795
    8. 'B' → logprob: -3.7577807903289795
    9. '(l' → logprob: -3.8827807903289795
    10. 'dou' → logprob: -4.0077805519104

Token 275: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02372150495648384
    2. '10' → logprob: -3.77372145652771
    3. ' (' → logprob: -8.148721694946289
    4. ')' → logprob: -9.898721694946289
    5. '(
' → logprob: -9.898721694946289
    6. '(pow' → logprob: -10.898721694946289
    7. '```' → logprob: -11.023721694946289
    8. ' ' → logprob: -11.148721694946289
    9. 'pow' → logprob: -12.023721694946289
    10. '<|end|>' → logprob: -12.398721694946289

Token 276: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.002394675277173519
    2. '(' → logprob: -6.127394676208496
    3. ' ' → logprob: -9.627394676208496
    4. 'pow' → logprob: -10.002394676208496
    5. ')' → logprob: -10.502394676208496
    6. '0' → logprob: -11.252394676208496
    7. '```' → logprob: -11.502394676208496
    8. '   ' → logprob: -11.627394676208496
    9. '2' → logprob: -12.127394676208496
    10. '
' → logprob: -12.502394676208496

Token 277: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005848204251378775
    2. '(' → logprob: -5.880848407745361
    3. ',l' → logprob: -6.380848407745361
    4. ' ,' → logprob: -7.380848407745361
    5. '(l' → logprob: -8.130847930908203
    6. ')' → logprob: -9.755847930908203
    7. ',
' → logprob: -9.880847930908203
    8. '```' → logprob: -10.005847930908203
    9. 'l' → logprob: -10.130847930908203
    10. 'Sorry' → logprob: -10.255847930908203

Token 278: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.08102903515100479
    2. ' l' → logprob: -2.706028938293457
    3. '(l' → logprob: -5.081028938293457
    4. ' (' → logprob: -6.581028938293457
    5. 'L' → logprob: -6.831028938293457
    6. '(' → logprob: -6.956028938293457
    7. '0' → logprob: -7.956028938293457
    8. 'b' → logprob: -8.081028938293457
    9. ' ' → logprob: -9.581028938293457
    10. ' L' → logprob: -9.706028938293457

Token 279: '*' (ID: 9)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2974472939968109
    2. '**' → logprob: -2.4224472045898438
    3. '*' → logprob: -2.5474472045898438
    4. '*(' → logprob: -2.9224472045898438
    5. ' ,' → logprob: -4.047447204589844
    6. '(' → logprob: -5.297447204589844
    7. ' *' → logprob: -5.797447204589844
    8. '2' → logprob: -6.172447204589844
    9. '```' → logprob: -6.172447204589844
    10. '*i' → logprob: -6.672447204589844

Token 280: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.30914440751075745
    2. '2' → logprob: -2.1841444969177246
    3. 'i' → logprob: -2.4341444969177246
    4. '(i' → logprob: -2.8091444969177246
    5. '0' → logprob: -5.809144496917725
    6. ' (' → logprob: -6.684144496917725
    7. ' i' → logprob: -8.184144020080566
    8. '```' → logprob: -8.559144020080566
    9. '1' → logprob: -8.684144020080566
    10. '[' → logprob: -9.309144020080566

Token 281: '**' (ID: 410)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.9625620245933533
    2. '-' → logprob: -1.337562084197998
    3. '**' → logprob: -1.337562084197998
    4. '(' → logprob: -2.587562084197998
    5. '*(' → logprob: -4.962562084197998
    6. '[i' → logprob: -6.337562084197998
    7. '[' → logprob: -6.337562084197998
    8. ' (' → logprob: -6.337562084197998
    9. '```' → logprob: -6.337562084197998
    10. '-(' → logprob: -6.837562084197998

Token 282: '(' (ID: 7)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.010853740386664867
    2. 'i' → logprob: -5.0108537673950195
    3. '(' → logprob: -5.6358537673950195
    4. '[i' → logprob: -8.76085376739502
    5. '0' → logprob: -8.88585376739502
    6. ' (' → logprob: -9.26085376739502
    7. '```' → logprob: -10.01085376739502
    8. '{i' → logprob: -10.13585376739502
    9. '[' → logprob: -11.13585376739502
    10. ')' → logprob: -11.13585376739502

Token 283: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.012945028021931648
    2. 'i' → logprob: -4.387945175170898
    3. '0' → logprob: -8.762945175170898
    4. '(' → logprob: -8.762945175170898
    5. ' (' → logprob: -10.012945175170898
    6. '{i' → logprob: -10.512945175170898
    7. '[i' → logprob: -11.137945175170898
    8. '   ' → logprob: -11.762945175170898
    9. '```' → logprob: -12.387945175170898
    10. ' i' → logprob: -12.387945175170898

Token 284: '-' (ID: 12)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.29461267590522766
    2. '-' → logprob: -1.4196126461029053
    3. '(' → logprob: -4.419612884521484
    4. '(-' → logprob: -7.044612884521484
    5. '-i' → logprob: -8.919612884521484
    6. ' (' → logprob: -9.294612884521484
    7. 'i' → logprob: -9.669612884521484
    8. '   ' → logprob: -9.794612884521484
    9. '0' → logprob: -10.294612884521484
    10. ' -' → logprob: -10.794612884521484

Token 285: '1' (ID: 16)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.586933434009552
    2. '-' → logprob: -0.961933434009552
    3. '(' → logprob: -3.2119333744049072
    4. '(-' → logprob: -4.711933612823486
    5. '-i' → logprob: -5.086933612823486
    6. 'i' → logprob: -5.461933612823486
    7. ' (' → logprob: -7.086933612823486
    8. '0' → logprob: -7.836933612823486
    9. ' -' → logprob: -8.961933135986328
    10. '{i' → logprob: -9.086933135986328

Token 286: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5264944434165955
    2. '(i' → logprob: -1.4014945030212402
    3. '),' → logprob: -2.2764945030212402
    4. '-' → logprob: -3.4014945030212402
    5. ',i' → logprob: -4.15149450302124
    6. '[i' → logprob: -5.90149450302124
    7. ' ,' → logprob: -6.02649450302124
    8. '],' → logprob: -6.90149450302124
    9. ' ' → logprob: -7.02649450302124
    10. '(' → logprob: -7.52649450302124

Token 287: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.42917317152023315
    2. ' M' → logprob: -1.054173231124878
    3. ')' → logprob: -8.929173469543457
    4. ' ' → logprob: -9.554173469543457
    5. '10' → logprob: -10.054173469543457
    6. '0' → logprob: -10.429173469543457
    7. '1' → logprob: -10.679173469543457
    8. '```' → logprob: -10.991673469543457
    9. '(M' → logprob: -11.054173469543457
    10. 'B' → logprob: -11.241673469543457

Token 288: ')' (ID: 8)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.34865066409111023
    2. ')))' → logprob: -2.0986506938934326
    3. ')' → logprob: -2.2236506938934326
    4. ')+' → logprob: -3.0986506938934326
    5. '),' → logprob: -4.8486504554748535
    6. ')%' → logprob: -6.4736504554748535
    7. '))))' → logprob: -6.5986504554748535
    8. ')**' → logprob: -6.7236504554748535
    9. ')),' → logprob: -7.0986504554748535
    10. '))+' → logprob: -7.2236504554748535

Token 289: ' *' (ID: 425)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.5165637135505676
    2. ')' → logprob: -1.6415636539459229
    3. ')]' → logprob: -2.266563653945923
    4. '))' → logprob: -3.141563653945923
    5. '])' → logprob: -4.141563892364502
    6. ')**' → logprob: -4.516563892364502
    7. ')))' → logprob: -5.016563892364502
    8. ']))' → logprob: -5.141563892364502
    9. '[i' → logprob: -5.516563892364502
    10. '**' → logprob: -5.891563892364502

Token 290: ' doubling' (ID: 122384)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.6832880973815918
    2. 'b' → logprob: -1.6832880973815918
    3. 'A' → logprob: -2.058288097381592
    4. '1' → logprob: -2.183288097381592
    5. 'B' → logprob: -2.433288097381592
    6. 'dou' → logprob: -2.433288097381592
    7. 'acc' → logprob: -2.808288097381592
    8. '(' → logprob: -3.183288097381592
    9. '((' → logprob: -3.933288097381592
    10. '(i' → logprob: -4.558288097381592

Token 291: 'const' (ID: 1671)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.04733247682452202
    2. 'const' → logprob: -3.172332525253296
    3. 'range' → logprob: -6.547332286834717
    4. '_line' → logprob: -6.797332286834717
    5. ')' → logprob: -7.422332286834717
    6. '_range' → logprob: -7.672332286834717
    7. '_' → logprob: -8.797332763671875
    8. '_const' → logprob: -9.172332763671875
    9. ' line' → logprob: -10.172332763671875
    10. ')_' → logprob: -10.297332763671875

Token 292: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.12055432051420212
    2. '[' → logprob: -2.245554208755493
    3. ')[' → logprob: -5.370554447174072
    4. ')' → logprob: -6.120554447174072
    5. '```' → logprob: -8.495553970336914
    6. '[
' → logprob: -9.370553970336914
    7. ',i' → logprob: -9.620553970336914
    8. ',' → logprob: -9.620553970336914
    9. '   ' → logprob: -9.995553970336914
    10. '[-' → logprob: -10.120553970336914

Token 293: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0016724453307688236
    2. '])' → logprob: -7.001672267913818
    3. ']' → logprob: -8.126672744750977
    4. ' -' → logprob: -8.876672744750977
    5. ']))' → logprob: -9.126672744750977
    6. ')])' → logprob: -10.626672744750977
    7. '[i' → logprob: -10.751672744750977
    8. '[' → logprob: -10.751672744750977
    9. '])]' → logprob: -10.876672744750977
    10. ']])' → logprob: -11.001672744750977

Token 294: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0551719069480896
    2. '-' → logprob: -3.1801719665527344
    3. 'i' → logprob: -4.555171966552734
    4. '(i' → logprob: -7.680171966552734
    5. '0' → logprob: -8.055171966552734
    6. '])' → logprob: -8.680171966552734
    7. ']' → logprob: -8.805171966552734
    8. ' ' → logprob: -9.180171966552734
    9. '```' → logprob: -9.305171966552734
    10. '   ' → logprob: -9.805171966552734

Token 295: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.824923574924469
    2. ')])' → logprob: -0.949923574924469
    3. ')' → logprob: -2.574923515319824
    4. ']))' → logprob: -3.074923515319824
    5. ')]' → logprob: -4.074923515319824
    6. '[i' → logprob: -4.324923515319824
    7. '))' → logprob: -4.449923515319824
    8. ')))' → logprob: -6.074923515319824
    9. '])]' → logprob: -6.199923515319824
    10. ')%' → logprob: -6.824923515319824

Token 296: '%' (ID: 4)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')])' → logprob: -1.1295770406723022
    2. ')' → logprob: -1.2545770406723022
    3. ')]' → logprob: -1.7545770406723022
    4. '])' → logprob: -2.879577159881592
    5. '])]' → logprob: -2.879577159881592
    6. '[i' → logprob: -2.879577159881592
    7. ']' → logprob: -3.379577159881592
    8. '   ' → logprob: -5.254577159881592
    9. ']))' → logprob: -6.254577159881592
    10. ')][' → logprob: -7.004577159881592

Token 297: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0002523992152418941
    2. ' M' → logprob: -8.500252723693848
    3. ')' → logprob: -10.500252723693848
    4. '(' → logprob: -12.000252723693848
    5. '(M' → logprob: -12.875252723693848
    6. '```' → logprob: -13.000252723693848
    7. ' ' → logprob: -13.125252723693848
    8. ']' → logprob: -13.750252723693848
    9. 'B' → logprob: -13.875252723693848
    10. ')]' → logprob: -14.937752723693848

Token 298: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8607630133628845
    2. ')]' → logprob: -1.2357630729675293
    3. ']' → logprob: -1.3607630729675293
    4. ')])' → logprob: -4.110763072967529
    5. '])]' → logprob: -5.235763072967529
    6. '])' → logprob: -5.860763072967529
    7. '   ' → logprob: -5.985763072967529
    8. '[i' → logprob: -6.860763072967529
    9. '[' → logprob: -7.360763072967529
    10. '```' → logprob: -8.485762596130371

Token 299: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3134530782699585
    2. ' range' → logprob: -1.3134530782699585
    3. 'i' → logprob: -8.81345272064209
    4. ' i' → logprob: -11.43845272064209
    5. ' ' → logprob: -11.43845272064209
    6. '[' → logprob: -11.68845272064209
    7. '(range' → logprob: -12.81345272064209
    8. '   ' → logprob: -13.18845272064209
    9. '```' → logprob: -13.68845272064209
    10. '0' → logprob: -13.68845272064209

Token 300: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0524139329791069
    2. '<|end|>' → logprob: -4.0524139404296875
    3. '(' → logprob: -4.1774139404296875
    4. 'in' → logprob: -4.4274139404296875
    5. '<|end|>' → logprob: -6.8024139404296875
    6. ')' → logprob: -6.9274139404296875
    7. ']' → logprob: -6.9274139404296875
    8. '+' → logprob: -7.1774139404296875
    9. ' (' → logprob: -7.4274139404296875
    10. 'import' → logprob: -7.5524139404296875

Token 301: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0011745095252990723
    2. ' range' → logprob: -6.751174449920654
    3. '1' → logprob: -12.876174926757812
    4. ' ' → logprob: -14.626174926757812
    5. '   ' → logprob: -14.751174926757812
    6. '(range' → logprob: -15.001174926757812
    7. '60' → logprob: -15.376174926757812
    8. '
' → logprob: -16.626174926757812
    9. '(' → logprob: -16.626174926757812
    10. '```' → logprob: -16.626174926757812

Token 302: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002234116895124316
    2. '1' → logprob: -6.127233982086182
    3. '(len' → logprob: -10.87723445892334
    4. ' (' → logprob: -11.37723445892334
    5. '(
' → logprob: -11.87723445892334
    6. ' ' → logprob: -13.00223445892334
    7. '2' → logprob: -13.12723445892334
    8. '0' → logprob: -13.25223445892334
    9. '```' → logprob: -13.37723445892334
    10. ',' → logprob: -13.62723445892334

Token 303: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0032774105202406645
    2. '60' → logprob: -5.75327730178833
    3. ' ' → logprob: -10.378277778625488
    4. '2' → logprob: -11.003277778625488
    5. '0' → logprob: -11.003277778625488
    6. 'len' → logprob: -11.628277778625488
    7. '   ' → logprob: -11.878277778625488
    8. '(' → logprob: -12.128277778625488
    9. '
' → logprob: -12.753277778625488
    10. '59' → logprob: -13.315777778625488

Token 304: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006217082031071186
    2. ' ,' → logprob: -5.881217002868652
    3. '1' → logprob: -7.131217002868652
    4. '+' → logprob: -7.256217002868652
    5. '(' → logprob: -7.881217002868652
    6. ',
' → logprob: -8.256217002868652
    7. 'import' → logprob: -8.506217002868652
    8. '<|end|>' → logprob: -8.506217002868652
    9. '   ' → logprob: -8.881217002868652
    10. ')])' → logprob: -9.006217002868652

Token 305: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.005511214956641197
    2. '61' → logprob: -5.380511283874512
    3. '2' → logprob: -7.630511283874512
    4. ' ' → logprob: -8.505511283874512
    5. '   ' → logprob: -9.505511283874512
    6. 'len' → logprob: -10.755511283874512
    7. '20' → logprob: -10.755511283874512
    8. '21' → logprob: -11.005511283874512
    9. '1' → logprob: -11.755511283874512
    10. '```' → logprob: -11.880511283874512

Token 306: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.012246259488165379
    2. ']' → logprob: -4.512246131896973
    3. '])]' → logprob: -7.387246131896973
    4. ')' → logprob: -8.137246131896973
    5. ')])' → logprob: -8.762246131896973
    6. '])' → logprob: -10.387246131896973
    7. '   ' → logprob: -10.637246131896973
    8. ')][' → logprob: -11.387246131896973
    9. '```' → logprob: -11.387246131896973
    10. ')]
' → logprob: -11.637246131896973

Token 307: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.40118587017059326
    2. '[' → logprob: -1.7761858701705933
    3. ']' → logprob: -2.026185989379883
    4. '<|end|>' → logprob: -4.651185989379883
    5. '   ' → logprob: -4.901185989379883
    6. ' ' → logprob: -5.651185989379883
    7. '(' → logprob: -6.276185989379883
    8. '[
' → logprob: -6.276185989379883
    9. ':' → logprob: -6.776185989379883
    10. ')]' → logprob: -7.526185989379883

Token 308: ' for' (ID: 395)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8546367883682251
    2. ']' → logprob: -0.9796367883682251
    3. ')' → logprob: -1.729636788368225
    4. '   ' → logprob: -5.2296366691589355
    5. '[
' → logprob: -5.2296366691589355
    6. ' ' → logprob: -5.8546366691589355
    7. '<|end|>' → logprob: -5.8546366691589355
    8. '(' → logprob: -6.3546366691589355
    9. ')]' → logprob: -7.6046366691589355
    10. ',' → logprob: -7.8546366691589355

Token 309: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5349940061569214
    2. ' i' → logprob: -0.9099940061569214
    3. ' b' → logprob: -6.159994125366211
    4. ' j' → logprob: -6.409994125366211
    5. 'j' → logprob: -6.534994125366211
    6. ' k' → logprob: -6.659994125366211
    7. 'k' → logprob: -6.659994125366211
    8. 'b' → logprob: -6.909994125366211
    9. 'x' → logprob: -7.159994125366211
    10. ' x' → logprob: -7.534994125366211

Token 310: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14286965131759644
    2. 'in' → logprob: -2.017869710922241
    3. ' ' → logprob: -9.51786994934082
    4. ',' → logprob: -10.51786994934082
    5. '0' → logprob: -10.51786994934082
    6. '_' → logprob: -10.76786994934082
    7. '  ' → logprob: -11.64286994934082
    8. ' i' → logprob: -12.01786994934082
    9. ' _' → logprob: -12.39286994934082
    10. ')' → logprob: -12.76786994934082

Token 311: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.42890793085098267
    2. 'range' → logprob: -1.053907871246338
    3. ' ' → logprob: -9.678908348083496
    4. ' base' → logprob: -9.678908348083496
    5. 'base' → logprob: -11.053908348083496
    6. '[' → logprob: -11.053908348083496
    7. '0' → logprob: -11.928908348083496
    8. '   ' → logprob: -12.053908348083496
    9. '(range' → logprob: -12.178908348083496
    10. 'in' → logprob: -12.866408348083496

Token 312: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.26623526215553284
    2. '(' → logprob: -1.7662352323532104
    3. '(B' → logprob: -3.6412353515625
    4. '(L' → logprob: -3.6412353515625
    5. '(A' → logprob: -5.0162353515625
    6. '(N' → logprob: -7.3912353515625
    7. '(b' → logprob: -7.3912353515625
    8. '(M' → logprob: -7.3912353515625
    9. '(l' → logprob: -7.6412353515625
    10. '(len' → logprob: -7.6412353515625

Token 313: '1' (ID: 16)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.00121428316924721
    2. '1' → logprob: -7.876214504241943
    3. 'B' → logprob: -8.501214027404785
    4. '61' → logprob: -8.751214027404785
    5. '0' → logprob: -9.251214027404785
    6. 'len' → logprob: -9.501214027404785
    7. 'ceil' → logprob: -9.501214027404785
    8. 'L' → logprob: -10.001214027404785
    9. 'b' → logprob: -10.501214027404785
    10. 'n' → logprob: -10.626214027404785

Token 314: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17783689498901367
    2. '(' → logprob: -2.1778368949890137
    3. '):' → logprob: -4.052836894989014
    4. '60' → logprob: -4.302836894989014
    5. ':' → logprob: -4.802836894989014
    6. '(len' → logprob: -5.927836894989014
    7. '):
' → logprob: -6.052836894989014
    8. ' ,' → logprob: -6.677836894989014
    9. ' ' → logprob: -7.177836894989014
    10. '   ' → logprob: -7.302836894989014

Token 315: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.01852787286043167
    2. '61' → logprob: -4.018527984619141
    3. ' ' → logprob: -8.14352798461914
    4. 'len' → logprob: -10.39352798461914
    5. '   ' → logprob: -10.39352798461914
    6. 'L' → logprob: -12.51852798461914
    7. '(' → logprob: -12.76852798461914
    8. '2' → logprob: -13.26852798461914
    9. '```' → logprob: -13.64352798461914
    10. ')' → logprob: -13.64352798461914

Token 316: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.030300891026854515
    2. '):
' → logprob: -3.6553008556365967
    3. ':' → logprob: -5.530301094055176
    4. '   ' → logprob: -11.905301094055176
    5. ')' → logprob: -12.405301094055176
    6. '}:' → logprob: -12.405301094055176
    7. ':
' → logprob: -12.655301094055176
    8. '+' → logprob: -13.030301094055176
    9. ' ):' → logprob: -13.155301094055176
    10. ']:' → logprob: -13.530301094055176

Token 317: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1919492930173874
    2. '   ' → logprob: -2.1919493675231934
    3. ' if' → logprob: -3.3169493675231934
    4. '<|end|>' → logprob: -3.6919493675231934
    5. ' ' → logprob: -7.816949367523193
    6. '    ' → logprob: -7.941949367523193
    7. ',' → logprob: -7.941949367523193
    8. '<|end|>' → logprob: -8.566948890686035
    9. 'if' → logprob: -9.066948890686035
    10. ':' → logprob: -9.816948890686035

Token 318: ' double' (ID: 3503)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1796109527349472
    2. '   ' → logprob: -2.1796109676361084
    3. 'if' → logprob: -3.1796109676361084
    4. ' doubling' → logprob: -5.304610729217529
    5. ' pass' → logprob: -6.429610729217529
    6. '    ' → logprob: -6.929610729217529
    7. 'dou' → logprob: -7.429610729217529
    8. '       ' → logprob: -7.429610729217529
    9. 'd' → logprob: -9.367111206054688
    10. ' s' → logprob: -9.429611206054688

Token 319: ' =' (ID: 314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.03480297699570656
    2. 's' → logprob: -4.7848029136657715
    3. 'line' → logprob: -5.0348029136657715
    4. 'const' → logprob: -5.0348029136657715
    5. '_line' → logprob: -5.7848029136657715
    6. ' =' → logprob: -6.1598029136657715
    7. '_const' → logprob: -6.5348029136657715
    8. '=' → logprob: -6.7848029136657715
    9. '_' → logprob: -7.1598029136657715
    10. '   ' → logprob: -7.4098029136657715

Token 320: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.5251294374465942
    2. '2' → logprob: -1.7751294374465942
    3. ' parts' → logprob: -1.7751294374465942
    4. 'dou' → logprob: -2.6501293182373047
    5. '(' → logprob: -2.9001293182373047
    6. '(i' → logprob: -3.0251293182373047
    7. ' ' → logprob: -3.1501293182373047
    8. 'pow' → logprob: -3.2751293182373047
    9. 'parts' → logprob: -3.2751293182373047
    10. ' doubling' → logprob: -3.5251293182373047

Token 321: 'pow' (ID: 30304)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.074036717414856
    2. '2' → logprob: -1.324036717414856
    3. 'pow' → logprob: -2.4490365982055664
    4. 'a' → logprob: -2.5740365982055664
    5. '1' → logprob: -2.5740365982055664
    6. 'dou' → logprob: -3.4490365982055664
    7. 'B' → logprob: -3.5740365982055664
    8. 'parts' → logprob: -3.6990365982055664
    9. '(' → logprob: -3.8240365982055664
    10. 'n' → logprob: -4.949036598205566

Token 322: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.42913538217544556
    2. '10' → logprob: -1.0541353225708008
    3. '2' → logprob: -7.804135322570801
    4. ' ' → logprob: -11.3041353225708
    5. 'def' → logprob: -12.4291353225708
    6. '```' → logprob: -12.9291353225708
    7. ')' → logprob: -13.6791353225708
    8. ' (' → logprob: -13.9291353225708
    9. '(pow' → logprob: -14.5541353225708
    10. '=' → logprob: -14.8041353225708

Token 323: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.062117137014865875
    2. '2' → logprob: -2.812117099761963
    3. ' ' → logprob: -9.687117576599121
    4. '(' → logprob: -9.937117576599121
    5. '   ' → logprob: -11.562117576599121
    6. ')' → logprob: -11.562117576599121
    7. '1' → logprob: -12.562117576599121
    8. '```' → logprob: -12.562117576599121
    9. 'def' → logprob: -12.937117576599121
    10. '  ' → logprob: -13.937117576599121

Token 324: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0035732227843254805
    2. ',l' → logprob: -6.128573417663574
    3. ' ,' → logprob: -7.253573417663574
    4. '(' → logprob: -8.128573417663574
    5. '   ' → logprob: -9.628573417663574
    6. '(l' → logprob: -10.128573417663574
    7. '```' → logprob: -10.128573417663574
    8. '**,' → logprob: -10.253573417663574
    9. '**' → logprob: -10.378573417663574
    10. ',
' → logprob: -10.378573417663574

Token 325: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5245850682258606
    2. ' l' → logprob: -0.8995850682258606
    3. '   ' → logprob: -7.774585247039795
    4. 'L' → logprob: -8.274584770202637
    5. '2' → logprob: -8.524584770202637
    6. ' ' → logprob: -8.524584770202637
    7. '(l' → logprob: -9.399584770202637
    8. '    ' → logprob: -9.649584770202637
    9. ' L' → logprob: -10.024584770202637
    10. 'i' → logprob: -10.149584770202637

Token 326: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.010904444381594658
    2. ' *' → logprob: -5.010904312133789
    3. '*(' → logprob: -5.635904312133789
    4. '*i' → logprob: -7.885904312133789
    5. '2' → logprob: -9.385904312133789
    6. ',' → logprob: -9.885904312133789
    7. '**' → logprob: -10.510904312133789
    8. ' ' → logprob: -10.760904312133789
    9. '   ' → logprob: -11.135904312133789
    10. ')' → logprob: -12.135904312133789

Token 327: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.016689922660589218
    2. '(' → logprob: -4.141689777374268
    3. 'i' → logprob: -7.766689777374268
    4. '(i' → logprob: -9.391690254211426
    5. '1' → logprob: -9.891690254211426
    6. ' ' → logprob: -10.391690254211426
    7. '   ' → logprob: -10.516690254211426
    8. '```' → logprob: -11.391690254211426
    9. '0' → logprob: -11.891690254211426
    10. ' (' → logprob: -12.016690254211426

Token 328: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.03444774076342583
    2. '(i' → logprob: -3.65944766998291
    3. '*(' → logprob: -5.03444766998291
    4. '(' → logprob: -7.15944766998291
    5. '*i' → logprob: -7.78444766998291
    6. 'i' → logprob: -8.65944766998291
    7. '```' → logprob: -9.28444766998291
    8. '[i' → logprob: -9.53444766998291
    9. '2' → logprob: -11.28444766998291
    10. ' (' → logprob: -11.65944766998291

Token 329: '(' (ID: 7)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.01192224957048893
    2. 'i' → logprob: -4.511922359466553
    3. '(' → logprob: -7.886922359466553
    4. ' (' → logprob: -8.386921882629395
    5. '   ' → logprob: -9.261921882629395
    6. '{i' → logprob: -9.636921882629395
    7. '[i' → logprob: -9.761921882629395
    8. '```' → logprob: -11.011921882629395
    9. '       ' → logprob: -11.761921882629395
    10. ' i' → logprob: -12.011921882629395

Token 330: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18045221269130707
    2. '(i' → logprob: -1.8054522275924683
    3. '{i' → logprob: -8.430452346801758
    4. '   ' → logprob: -8.555452346801758
    5. ' (' → logprob: -9.305452346801758
    6. '[i' → logprob: -9.555452346801758
    7. '       ' → logprob: -10.305452346801758
    8. '(' → logprob: -10.305452346801758
    9. ' i' → logprob: -10.430452346801758
    10. '```' → logprob: -11.805452346801758

Token 331: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08162765204906464
    2. '(i' → logprob: -2.581627607345581
    3. '(' → logprob: -6.58162784576416
    4. '   ' → logprob: -7.83162784576416
    5. '[i' → logprob: -8.20662784576416
    6. ' -' → logprob: -8.33162784576416
    7. ' (' → logprob: -8.83162784576416
    8. '```' → logprob: -9.83162784576416
    9. '       ' → logprob: -9.95662784576416
    10. ')' → logprob: -9.95662784576416

Token 332: '1' (ID: 16)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.06253939867019653
    2. '(' → logprob: -3.0625393390655518
    3. '-' → logprob: -4.562539577484131
    4. 'i' → logprob: -6.312539577484131
    5. ' (' → logprob: -7.312539577484131
    6. '(-' → logprob: -7.812539577484131
    7. '   ' → logprob: -8.812539100646973
    8. '```' → logprob: -9.687539100646973
    9. '1' → logprob: -9.812539100646973
    10. '(
' → logprob: -10.312539100646973

Token 333: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0528535470366478
    2. ')' → logprob: -3.052853584289551
    3. '),' → logprob: -6.427853584289551
    4. ' ,' → logprob: -6.802853584289551
    5. ')+' → logprob: -7.427853584289551
    6. '))' → logprob: -8.17785358428955
    7. ',)' → logprob: -8.30285358428955
    8. ')**' → logprob: -9.05285358428955
    9. '   ' → logprob: -9.80285358428955
    10. '**' → logprob: -10.55285358428955

Token 334: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.018195830285549164
    2. ' M' → logprob: -4.018195629119873
    3. ')' → logprob: -11.268196105957031
    4. '10' → logprob: -12.143196105957031
    5. ' ' → logprob: -12.268196105957031
    6. 'B' → logprob: -12.268196105957031
    7. '   ' → logprob: -12.393196105957031
    8. '```' → logprob: -13.143196105957031
    9. 'pow' → logprob: -13.143196105957031
    10. '2' → logprob: -13.705696105957031

Token 335: ')+' (ID: 16161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010867179371416569
    2. ')+' → logprob: -4.635867118835449
    3. ')*' → logprob: -7.760867118835449
    4. '))' → logprob: -7.885867118835449
    5. ' )' → logprob: -9.38586711883545
    6. ')<<' → logprob: -10.01086711883545
    7. '   ' → logprob: -10.13586711883545
    8. ')
' → logprob: -10.38586711883545
    9. ')>>' → logprob: -10.63586711883545
    10. ')**' → logprob: -11.01086711883545

Token 336: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00028505371301434934
    2. ')' → logprob: -9.375285148620605
    3. '0' → logprob: -9.500285148620605
    4. 'M' → logprob: -9.625285148620605
    5. ' ' → logprob: -10.750285148620605
    6. 'pow' → logprob: -11.750285148620605
    7. '2' → logprob: -12.875285148620605
    8. '           ' → logprob: -13.125285148620605
    9. '```' → logprob: -13.125285148620605
    10. '(M' → logprob: -13.250285148620605

Token 337: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06510721147060394
    2. ' *' → logprob: -3.3151071071624756
    3. '*' → logprob: -4.815107345581055
    4. ')%' → logprob: -4.815107345581055
    5. ' +' → logprob: -5.940107345581055
    6. ')*' → logprob: -5.940107345581055
    7. '+' → logprob: -6.440107345581055
    8. '   ' → logprob: -6.565107345581055
    9. ' )' → logprob: -7.065107345581055
    10. ')
' → logprob: -7.690107345581055

Token 338: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 339: ' doubling' (ID: 122384)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 340: 'line' (ID: 1137)
  Prédit: 'const'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'const' → logprob: -0.025474954396486282
    2. 'line' → logprob: -3.775475025177002
    3. ')' → logprob: -7.275475025177002
    4. '_line' → logprob: -8.025474548339844
    5. '_const' → logprob: -8.525474548339844
    6. '=' → logprob: -8.900474548339844
    7. '_' → logprob: -9.275474548339844
    8. ' =' → logprob: -9.400474548339844
    9. 'range' → logprob: -9.525474548339844
    10. ']' → logprob: -10.025474548339844

Token 341: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03425423055887222
    2. '=' → logprob: -4.90925407409668
    3. '[' → logprob: -5.03425407409668
    4. '.append' → logprob: -5.03425407409668
    5. ' +=' → logprob: -5.28425407409668
    6. ' =' → logprob: -5.53425407409668
    7. '=[' → logprob: -6.40925407409668
    8. ' [' → logprob: -7.40925407409668
    9. '+=' → logprob: -7.40925407409668
    10. '   ' → logprob: -7.78425407409668

Token 342: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02897629886865616
    2. ']=' → logprob: -3.9039762020111084
    3. '=' → logprob: -5.4039764404296875
    4. ']+=' → logprob: -5.6539764404296875
    5. ' ]' → logprob: -9.778976440429688
    6. ' =' → logprob: -9.778976440429688
    7. '%' → logprob: -9.778976440429688
    8. '-' → logprob: -9.903976440429688
    9. '%=' → logprob: -10.028976440429688
    10. ')' → logprob: -10.403976440429688

Token 343: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31352224946022034
    2. ' =' → logprob: -1.313522219657898
    3. ' +=' → logprob: -8.813522338867188
    4. '+=' → logprob: -9.563522338867188
    5. '%=' → logprob: -11.563522338867188
    6. ' ' → logprob: -11.563522338867188
    7. '*=' → logprob: -11.938522338867188
    8. ' *=' → logprob: -12.188522338867188
    9. ' %=' → logprob: -12.813522338867188
    10. ' =(' → logprob: -13.188522338867188

Token 344: ' (' (ID: 350)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.002383495680987835
    2. ' (' → logprob: -6.252383708953857
    3. '(' → logprob: -8.7523832321167
    4. '(double' → logprob: -9.3773832321167
    5. '   ' → logprob: -9.7523832321167
    6. '(dd' → logprob: -9.8773832321167
    7. '((' → logprob: -10.2523832321167
    8. '(int' → logprob: -10.6273832321167
    9. ' ' → logprob: -11.0023832321167
    10. '(abs' → logprob: -12.6273832321167

Token 345: 'double' (ID: 9489)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.7399090528488159
    2. 'dou' → logprob: -0.7399090528488159
    3. ' doubling' → logprob: -3.7399091720581055
    4. 'd' → logprob: -4.4899091720581055
    5. ' (' → logprob: -5.2399091720581055
    6. '   ' → logprob: -6.3649091720581055
    7. 'double' → logprob: -6.6149091720581055
    8. '(double' → logprob: -7.4899091720581055
    9. '((' → logprob: -7.6149091720581055
    10. '(' → logprob: -7.8649091720581055

Token 346: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3647462725639343
    2. ' *' → logprob: -1.614746332168579
    3. '*d' → logprob: -2.239746332168579
    4. '   ' → logprob: -9.73974609375
    5. '*(' → logprob: -9.98974609375
    6. '**' → logprob: -11.36474609375
    7. '
' → logprob: -11.73974609375
    8. '#' → logprob: -11.73974609375
    9. ' ' → logprob: -11.86474609375
    10. '%d' → logprob: -11.86474609375

Token 347: ' doubling' (ID: 122384)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.004860615357756615
    2. '(d' → logprob: -6.0048604011535645
    3. ' doubling' → logprob: -6.2548604011535645
    4. 'd' → logprob: -8.254860877990723
    5. 'double' → logprob: -9.254860877990723
    6. '(' → logprob: -10.754860877990723
    7. '   ' → logprob: -10.754860877990723
    8. '((' → logprob: -11.254860877990723
    9. ' (' → logprob: -12.192360877990723
    10. 'dbl' → logprob: -12.442360877990723

Token 348: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00020532844064291567
    2. 'const' → logprob: -8.500205039978027
    3. '[line' → logprob: -15.000205039978027
    4. '#line' → logprob: -15.125205039978027
    5. ' line' → logprob: -15.125205039978027
    6. '   ' → logprob: -15.750205039978027
    7. 'linear' → logprob: -15.875205039978027
    8. '_line' → logprob: -16.125205993652344
    9. '(line' → logprob: -16.250205993652344
    10. '```' → logprob: -16.625205993652344

Token 349: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. 'i' → logprob: -14.125000953674316
    3. '[' → logprob: -16.75
    4. '(i' → logprob: -17.25
    5. '```' → logprob: -17.375
    6. ' [' → logprob: -17.5
    7. '
' → logprob: -17.75
    8. '[j' → logprob: -18.0
    9. 'import' → logprob: -18.5
    10. '`' → logprob: -18.625

Token 350: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6403074860572815
    2. '-' → logprob: -0.7653074860572815
    3. 'i' → logprob: -4.890307426452637
    4. ' -' → logprob: -9.765307426452637
    5. '```' → logprob: -10.265307426452637
    6. '[-' → logprob: -10.390307426452637
    7. '[' → logprob: -11.765307426452637
    8. '(i' → logprob: -12.140307426452637
    9. '`' → logprob: -12.265307426452637
    10. '   ' → logprob: -12.640307426452637

Token 351: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05528336018323898
    2. '1' → logprob: -3.055283308029175
    3. '(i' → logprob: -5.055283546447754
    4. '[i' → logprob: -8.680283546447754
    5. ' i' → logprob: -10.305283546447754
    6. '```' → logprob: -10.430283546447754
    7. '   ' → logprob: -10.680283546447754
    8. '(' → logprob: -11.055283546447754
    9. '-' → logprob: -11.430283546447754
    10. '{i' → logprob: -11.930283546447754

Token 352: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07956058531999588
    2. '+' → logprob: -3.0795605182647705
    3. ')' → logprob: -3.7045605182647705
    4. ')%' → logprob: -5.20456075668335
    5. ' )' → logprob: -8.829560279846191
    6. '+i' → logprob: -9.079560279846191
    7. '%' → logprob: -10.079560279846191
    8. '   ' → logprob: -10.704560279846191
    9. ' ' → logprob: -10.829560279846191
    10. ')+' → logprob: -11.454560279846191

Token 353: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.287924200296402
    2. '+' → logprob: -1.4129241704940796
    3. ')' → logprob: -5.037924289703369
    4. ')%' → logprob: -8.537923812866211
    5. '+)' → logprob: -10.537923812866211
    6. '+i' → logprob: -11.537923812866211
    7. ' )' → logprob: -11.912923812866211
    8. '+
' → logprob: -12.287923812866211
    9. '%' → logprob: -12.412923812866211
    10. ')+' → logprob: -12.912923812866211

Token 354: ' pow' (ID: 9779)
  Prédit: '(pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.07166031748056412
    2. 'pow' → logprob: -2.821660280227661
    3. ' (' → logprob: -5.32166051864624
    4. '(' → logprob: -5.94666051864624
    5. '((' → logprob: -6.57166051864624
    6. '   ' → logprob: -8.071660041809082
    7. ' pow' → logprob: -8.946660041809082
    8. '
' → logprob: -9.696660041809082
    9. '(p' → logprob: -10.821660041809082
    10. '  ' → logprob: -10.821660041809082

Token 355: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00014609156642109156
    2. '2' → logprob: -8.87514591217041
    3. '(pow' → logprob: -12.62514591217041
    4. 'pow' → logprob: -13.87514591217041
    5. '10' → logprob: -14.25014591217041
    6. '```' → logprob: -14.62514591217041
    7. ')' → logprob: -15.62514591217041
    8. ' (' → logprob: -15.62514591217041
    9. 'def' → logprob: -15.75014591217041
    10. '(
' → logprob: -16.000146865844727

Token 356: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04326225072145462
    2. '(' → logprob: -3.168262243270874
    3. '10' → logprob: -8.543262481689453
    4. ' ' → logprob: -10.168262481689453
    5. 'pow' → logprob: -11.168262481689453
    6. ')' → logprob: -12.668262481689453
    7. 'two' → logprob: -13.043262481689453
    8. '   ' → logprob: -13.668262481689453
    9. '```' → logprob: -13.793262481689453
    10. '(pow' → logprob: -13.793262481689453

Token 357: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03221598267555237
    2. '(' → logprob: -4.0322160720825195
    3. '(i' → logprob: -4.7822160720825195
    4. ',l' → logprob: -5.9072160720825195
    5. '(l' → logprob: -6.5322160720825195
    6. ',i' → logprob: -7.1572160720825195
    7. ' ,' → logprob: -8.03221607208252
    8. 'i' → logprob: -8.78221607208252
    9. 'l' → logprob: -9.53221607208252
    10. '```' → logprob: -10.65721607208252

Token 358: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0036555302795022726
    2. ' i' → logprob: -5.628655433654785
    3. '(i' → logprob: -10.253655433654785
    4. '   ' → logprob: -11.628655433654785
    5. ' ' → logprob: -12.878655433654785
    6. ' (' → logprob: -13.503655433654785
    7. '{i' → logprob: -13.878655433654785
    8. '(' → logprob: -14.128655433654785
    9. '	i' → logprob: -14.378655433654785
    10. ',i' → logprob: -14.378655433654785

Token 359: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00019591135787777603
    2. ' -' → logprob: -8.750195503234863
    3. 'i' → logprob: -10.625195503234863
    4. '```' → logprob: -11.875195503234863
    5. '[i' → logprob: -13.625195503234863
    6. '(i' → logprob: -13.625195503234863
    7. '   ' → logprob: -13.875195503234863
    8. '[' → logprob: -15.125195503234863
    9. ',' → logprob: -15.125195503234863
    10. ' i' → logprob: -15.250195503234863

Token 360: '1' (ID: 16)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.0146983861923218
    2. '(' → logprob: -1.1396983861923218
    3. 'i' → logprob: -1.8896983861923218
    4. '1' → logprob: -1.8896983861923218
    5. '0' → logprob: -5.139698505401611
    6. '[' → logprob: -5.639698505401611
    7. '[i' → logprob: -6.139698505401611
    8. '   ' → logprob: -7.139698505401611
    9. '
' → logprob: -7.264698505401611
    10. '```' → logprob: -7.514698505401611

Token 361: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04320117458701134
    2. ',M' → logprob: -3.168201208114624
    3. ' ,' → logprob: -8.668201446533203
    4. ',l' → logprob: -10.918201446533203
    5. '(M' → logprob: -12.543201446533203
    6. ',m' → logprob: -13.168201446533203
    7. ',L' → logprob: -13.793201446533203
    8. ',
' → logprob: -14.168201446533203
    9. ',i' → logprob: -14.293201446533203
    10. ')' → logprob: -14.418201446533203

Token 362: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.012516365386545658
    2. ' M' → logprob: -4.387516498565674
    3. ')' → logprob: -13.387516021728516
    4. ' ' → logprob: -14.262516021728516
    5. '   ' → logprob: -14.387516021728516
    6. '```' → logprob: -14.512516021728516
    7. '10' → logprob: -14.887516021728516
    8. '           ' → logprob: -14.887516021728516
    9. '       ' → logprob: -15.262516021728516
    10. ',' → logprob: -15.387516021728516

Token 363: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08498883992433548
    2. ')' → logprob: -2.584988832473755
    3. ' ,' → logprob: -5.834989070892334
    4. '))' → logprob: -6.834989070892334
    5. ')*' → logprob: -7.709989070892334
    6. ' *' → logprob: -7.959989070892334
    7. '*M' → logprob: -8.084988594055176
    8. ')%' → logprob: -8.209988594055176
    9. ',M' → logprob: -8.459988594055176
    10. '   ' → logprob: -8.709988594055176

Token 364: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.022512368857860565
    2. '*' → logprob: -3.897512435913086
    3. ')' → logprob: -6.272512435913086
    4. '   ' → logprob: -10.772512435913086
    5. ' ' → logprob: -11.147512435913086
    6. '```' → logprob: -11.272512435913086
    7. ',' → logprob: -11.522512435913086
    8. ' )' → logprob: -12.022512435913086
    9. '       ' → logprob: -12.272512435913086
    10. ' ' → logprob: -13.022512435913086

Token 365: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.002110766712576151
    2. ' pow' → logprob: -6.377110958099365
    3. '(pow' → logprob: -7.877110958099365
    4. '(' → logprob: -10.877110481262207
    5. ' (' → logprob: -12.502110481262207
    6. '10' → logprob: -13.752110481262207
    7. '```' → logprob: -13.877110481262207
    8. 'dou' → logprob: -14.002110481262207
    9. '((' → logprob: -14.252110481262207
    10. ' ' → logprob: -14.502110481262207

Token 366: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002637199067976326
    2. '10' → logprob: -8.250264167785645
    3. '<|end|>' → logprob: -13.375264167785645
    4. ' (' → logprob: -14.375264167785645
    5. '```' → logprob: -16.000263214111328
    6. '(
' → logprob: -16.625263214111328
    7. ' ' → logprob: -16.750263214111328
    8. '9' → logprob: -18.250263214111328
    9. 'Sorry' → logprob: -18.375263214111328
    10. ')' → logprob: -18.875263214111328

Token 367: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00010032468708232045
    2. '(' → logprob: -9.500100135803223
    3. ' ' → logprob: -10.750100135803223
    4. '```' → logprob: -12.750100135803223
    5. '
' → logprob: -15.000100135803223
    6. ')' → logprob: -15.375100135803223
    7. '  ' → logprob: -16.12510108947754
    8. '1' → logprob: -16.62510108947754
    9. '<|end|>' → logprob: -16.62510108947754
    10. '0' → logprob: -16.75010108947754

Token 368: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021355098579078913
    2. ',l' → logprob: -6.252135276794434
    3. '(' → logprob: -9.002135276794434
    4. ' ,' → logprob: -9.627135276794434
    5. 'l' → logprob: -12.252135276794434
    6. ' l' → logprob: -12.752135276794434
    7. '(l' → logprob: -13.002135276794434
    8. ',
' → logprob: -13.377135276794434
    9. ')' → logprob: -13.502135276794434
    10. ' ' → logprob: -14.752135276794434

Token 369: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.632644772529602
    2. 'l' → logprob: -0.757644772529602
    3. '(l' → logprob: -11.007644653320312
    4. '(' → logprob: -12.257644653320312
    5. ' ' → logprob: -12.257644653320312
    6. ' (' → logprob: -12.382644653320312
    7. '    ' → logprob: -13.132644653320312
    8. '   ' → logprob: -13.132644653320312
    9. '	l' → logprob: -13.257644653320312
    10. '```' → logprob: -13.382644653320312

Token 370: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0009395699598826468
    2. '2' → logprob: -7.50093936920166
    3. ' *' → logprob: -8.37593936920166
    4. '*(' → logprob: -8.87593936920166
    5. '**' → logprob: -11.62593936920166
    6. '```' → logprob: -12.37593936920166
    7. '(' → logprob: -13.37593936920166
    8. ' ' → logprob: -14.50093936920166
    9. '   ' → logprob: -15.12593936920166
    10. ',' → logprob: -15.50093936920166

Token 371: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.9875325708417222e-05
    2. '(' → logprob: -11.375029563903809
    3. ' ' → logprob: -11.875029563903809
    4. '**' → logprob: -12.250029563903809
    5. '*' → logprob: -12.625029563903809
    6. '```' → logprob: -13.250029563903809
    7. '0' → logprob: -15.000029563903809
    8. 'pow' → logprob: -15.375029563903809
    9. '   ' → logprob: -15.750029563903809
    10. '1' → logprob: -16.125030517578125

Token 372: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -2.641841820150148e-05
    2. '2' → logprob: -11.62502670288086
    3. '(i' → logprob: -12.12502670288086
    4. '(' → logprob: -12.25002670288086
    5. '*(' → logprob: -12.62502670288086
    6. '*' → logprob: -13.12502670288086
    7. '```' → logprob: -14.12502670288086
    8. '-' → logprob: -14.50002670288086
    9. '##' → logprob: -15.87502670288086
    10. ')**' → logprob: -16.25002670288086

Token 373: '(' (ID: 7)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00016718693950679153
    2. '(' → logprob: -8.750166893005371
    3. 'i' → logprob: -12.375166893005371
    4. ' (' → logprob: -13.500166893005371
    5. '{i' → logprob: -13.750166893005371
    6. '[i' → logprob: -13.750166893005371
    7. '```' → logprob: -15.125166893005371
    8. '(ii' → logprob: -15.625166893005371
    9. '(I' → logprob: -16.250167846679688
    10. '   ' → logprob: -16.375167846679688

Token 374: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0006489329971373081
    2. 'i' → logprob: -7.5006489753723145
    3. '(' → logprob: -9.375648498535156
    4. ' (' → logprob: -12.625648498535156
    5. '{i' → logprob: -12.625648498535156
    6. '[i' → logprob: -13.000648498535156
    7. '   ' → logprob: -14.500648498535156
    8. '```' → logprob: -15.125648498535156
    9. '(
' → logprob: -15.250648498535156
    10. '
' → logprob: -15.625648498535156

Token 375: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00022928470571059734
    2. '(i' → logprob: -8.750228881835938
    3. '(' → logprob: -9.625228881835938
    4. 'i' → logprob: -14.000228881835938
    5. '   ' → logprob: -14.000228881835938
    6. ' -' → logprob: -14.125228881835938
    7. '[' → logprob: -14.250228881835938
    8. '[i' → logprob: -14.250228881835938
    9. '```' → logprob: -15.375228881835938
    10. ' (' → logprob: -15.750228881835938

Token 376: '1' (ID: 16)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.006007956340909004
    2. '(' → logprob: -5.131008148193359
    3. 'i' → logprob: -9.75600814819336
    4. '1' → logprob: -11.75600814819336
    5. '[i' → logprob: -12.63100814819336
    6. ' (' → logprob: -12.63100814819336
    7. '{i' → logprob: -12.63100814819336
    8. '```' → logprob: -13.63100814819336
    9. '   ' → logprob: -14.75600814819336
    10. '(I' → logprob: -14.88100814819336

Token 377: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012424940941855311
    2. ',M' → logprob: -7.001242637634277
    3. '),' → logprob: -8.626242637634277
    4. ' ,' → logprob: -9.251242637634277
    5. ')' → logprob: -11.626242637634277
    6. ',m' → logprob: -11.876242637634277
    7. '   ' → logprob: -12.376242637634277
    8. 'M' → logprob: -12.501242637634277
    9. ',i' → logprob: -12.501242637634277
    10. '       ' → logprob: -12.626242637634277

Token 378: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.01603870838880539
    2. ' M' → logprob: -4.14103889465332
    3. ')' → logprob: -13.14103889465332
    4. '```' → logprob: -14.26603889465332
    5. ' ' → logprob: -14.64103889465332
    6. ' ' → logprob: -15.01603889465332
    7. '   ' → logprob: -15.64103889465332
    8. '(M' → logprob: -16.07853889465332
    9. '
' → logprob: -16.32853889465332
    10. '(' → logprob: -16.32853889465332

Token 379: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06734142452478409
    2. '))' → logprob: -2.8173413276672363
    3. ')%' → logprob: -5.692341327667236
    4. '   ' → logprob: -6.817341327667236
    5. ' )' → logprob: -7.692341327667236
    6. ')))' → logprob: -8.942341804504395
    7. ')*' → logprob: -9.067341804504395
    8. ',' → logprob: -9.942341804504395
    9. '       ' → logprob: -10.317341804504395
    10. ' ))' → logprob: -11.067341804504395

Token 380: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20207245647907257
    2. ')%' → logprob: -1.7020725011825562
    3. ' )' → logprob: -7.952072620391846
    4. '))' → logprob: -8.327072143554688
    5. '   ' → logprob: -9.827072143554688
    6. '       ' → logprob: -12.827072143554688
    7. '[i' → logprob: -13.077072143554688
    8. ')))' → logprob: -13.577072143554688
    9. ']%' → logprob: -14.577072143554688
    10. ')
' → logprob: -14.702072143554688

Token 381: ' doubling' (ID: 122384)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.0001855406299000606
    2. ' doubling' → logprob: -8.7501859664917
    3. 'double' → logprob: -10.7501859664917
    4. '   ' → logprob: -13.1251859664917
    5. 'd' → logprob: -14.0001859664917
    6. 'dbl' → logprob: -14.6251859664917
    7. ' ' → logprob: -15.0001859664917
    8. '  ' → logprob: -15.2501859664917
    9. ' dou' → logprob: -15.3751859664917
    10. 'Dou' → logprob: -15.6251859664917

Token 382: 'const' (ID: 1671)
  Prédit: 'const'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'const' → logprob: -1.4378848391061183e-05
    2. 'line' → logprob: -12.625014305114746
    3. '_const' → logprob: -12.875014305114746
    4. ')' → logprob: -13.250014305114746
    5. '-' → logprob: -13.375014305114746
    6. ' const' → logprob: -13.500014305114746
    7. '[i' → logprob: -14.500014305114746
    8. '
' → logprob: -14.625014305114746
    9. 'i' → logprob: -14.875014305114746
    10. '   ' → logprob: -15.000014305114746

Token 383: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.438573680294212e-06
    2. 'i' → logprob: -13.000005722045898
    3. '[' → logprob: -14.000005722045898
    4. '(i' → logprob: -14.375005722045898
    5. ')[' → logprob: -14.875005722045898
    6. ')' → logprob: -15.000005722045898
    7. '   ' → logprob: -15.125005722045898
    8. ' [' → logprob: -15.375005722045898
    9. '][' → logprob: -16.0000057220459
    10. '```' → logprob: -16.0000057220459

Token 384: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.7755875129951164e-05
    2. '[i' → logprob: -10.87504768371582
    3. '[' → logprob: -11.12504768371582
    4. 'i' → logprob: -12.00004768371582
    5. ' -' → logprob: -12.37504768371582
    6. '[-' → logprob: -12.75004768371582
    7. '   ' → logprob: -15.37504768371582
    8. '-i' → logprob: -16.00004768371582
    9. ']' → logprob: -16.50004768371582
    10. '1' → logprob: -16.50004768371582

Token 385: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0224976539611816
    2. 'i' → logprob: -1.0224976539611816
    3. '-' → logprob: -2.1474976539611816
    4. '[i' → logprob: -2.3974976539611816
    5. '(i' → logprob: -2.6474976539611816
    6. '[' → logprob: -7.522497653961182
    7. '(' → logprob: -7.647497653961182
    8. '```' → logprob: -7.772497653961182
    9. '   ' → logprob: -8.897497177124023
    10. '0' → logprob: -9.022497177124023

Token 386: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21126647293567657
    2. ')%' → logprob: -2.33626651763916
    3. '])' → logprob: -2.46126651763916
    4. '))' → logprob: -5.08626651763916
    5. '[i' → logprob: -6.46126651763916
    6. ')])' → logprob: -8.08626651763916
    7. '   ' → logprob: -8.71126651763916
    8. ' )' → logprob: -9.83626651763916
    9. ')]' → logprob: -9.96126651763916
    10. '       ' → logprob: -10.33626651763916

Token 387: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7842327356338501
    2. '%' → logprob: -1.40923273563385
    3. ']' → logprob: -1.78423273563385
    4. ' %' → logprob: -3.0342326164245605
    5. '   ' → logprob: -3.4092326164245605
    6. '<|end|>' → logprob: -3.6592326164245605
    7. '       ' → logprob: -4.6592326164245605
    8. ')%' → logprob: -5.0342326164245605
    9. '[i' → logprob: -6.7842326164245605
    10. '<|end|>' → logprob: -6.7842326164245605

Token 388: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -9.627176768844947e-05
    2. ' M' → logprob: -9.250096321105957
    3. '```' → logprob: -16.50009536743164
    4. '(M' → logprob: -18.00009536743164
    5. '   ' → logprob: -19.87509536743164
    6. '(' → logprob: -19.87509536743164
    7. '`' → logprob: -20.00009536743164
    8. '
' → logprob: -20.12509536743164
    9. ' ' → logprob: -20.37509536743164
    10. '``' → logprob: -20.62509536743164

Token 389: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 390: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4651412069797516
    2. ')' → logprob: -1.7151411771774292
    3. ':' → logprob: -2.0901412963867188
    4. '<|end|>' → logprob: -3.5901412963867188
    5. 'def' → logprob: -3.8401412963867188
    6. '):' → logprob: -5.340141296386719
    7. '(' → logprob: -5.465141296386719
    8. '[' → logprob: -5.715141296386719
    9. ']' → logprob: -6.840141296386719
    10. '```' → logprob: -7.090141296386719

Token 391: ' def' (ID: 1056)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5174418091773987
    2. '   ' → logprob: -1.267441749572754
    3. ')' → logprob: -2.267441749572754
    4. '):' → logprob: -5.267441749572754
    5. '<|end|>' → logprob: -5.392441749572754
    6. ' ' → logprob: -6.392441749572754
    7. ' :' → logprob: -6.767441749572754
    8. 'def' (adapté à ' def') → logprob: -6.767441749572754
    9. '    ' → logprob: -7.017441749572754
    10. '[' → logprob: -7.142441749572754

Token 392: ' index' (ID: 3472)
  Prédit: ' pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pow' → logprob: -1.8886774778366089
    2. ' helper' → logprob: -1.8886774778366089
    3. ' calc' → logprob: -2.3886775970458984
    4. 'pow' → logprob: -2.5136775970458984
    5. ' sum' → logprob: -2.7636775970458984
    6. ' inner' → logprob: -2.7636775970458984
    7. 'sum' → logprob: -2.8886775970458984
    8. 'exp' → logprob: -3.2636775970458984
    9. ' parts' → logprob: -3.2636775970458984
    10. ' f' → logprob: -3.5136775970458984

Token 393: '_set' (ID: 5451)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7356467247009277
    2. '(n' → logprob: -1.8606467247009277
    3. '(i' → logprob: -1.9856467247009277
    4. '_' → logprob: -2.2356467247009277
    5. '(x' → logprob: -3.4856467247009277
    6. '_of' → logprob: -4.110646724700928
    7. '(index' → logprob: -4.360646724700928
    8. '(idx' → logprob: -4.610646724700928
    9. '_(' → logprob: -4.735646724700928
    10. '(k' → logprob: -5.235646724700928

Token 394: '_bits' (ID: 48415)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.138889878988266
    2. '(n' → logprob: -2.388889789581299
    3. '(i' → logprob: -3.763889789581299
    4. '(token' → logprob: -6.638889789581299
    5. '(start' → logprob: -6.763889789581299
    6. '(a' → logprob: -6.763889789581299
    7. 's' → logprob: -6.888889789581299
    8. '(x' → logprob: -7.013889789581299
    9. '(index' → logprob: -7.138889789581299
    10. ':' → logprob: -7.138889789581299

Token 395: '(num' (ID: 15828)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.050294358283281326
    2. '(x' → logprob: -3.0502943992614746
    3. '(num' → logprob: -7.050294399261475
    4. '(i' → logprob: -7.925294399261475
    5. '(k' → logprob: -8.050293922424316
    6. '(' → logprob: -9.425293922424316
    7. '(pos' → logprob: -10.425293922424316
    8. '(number' → logprob: -10.425293922424316
    9. ' (' → logprob: -12.300293922424316
    10. '(b' → logprob: -12.800293922424316

Token 396: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0885513424873352
    2. '(num' → logprob: -3.3385512828826904
    3. ',' → logprob: -3.8385512828826904
    4. '(n' → logprob: -4.3385515213012695
    5. '):
' → logprob: -4.7135515213012695
    6. '(' → logprob: -6.2135515213012695
    7. '   ' → logprob: -6.5885515213012695
    8. ')' → logprob: -6.8385515213012695
    9. ',num' → logprob: -7.7135515213012695
    10. '(number' → logprob: -8.46355152130127

Token 397: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7477183938026428
    2. '    ' → logprob: -1.372718334197998
    3. '       ' → logprob: -1.997718334197998
    4. ' ' → logprob: -2.372718334197998
    5. ':' → logprob: -3.872718334197998
    6. ',' → logprob: -5.122718334197998
    7. ' for' → logprob: -5.622718334197998
    8. ' :' → logprob: -6.247718334197998
    9. '  ' → logprob: -6.497718334197998
    10. '        ' → logprob: -6.622718334197998

Token 398: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4508574604988098
    2. ' while' → logprob: -1.950857400894165
    3. 'return' (adapté à ' return') → logprob: -2.075857400894165
    4. 'while' → logprob: -3.450857400894165
    5. '   ' → logprob: -3.575857400894165
    6. ' for' → logprob: -3.825857400894165
    7. 'for' → logprob: -5.325857639312744
    8. ' s' → logprob: -6.325857639312744
    9. ' i' → logprob: -6.450857639312744
    10. '    ' → logprob: -6.575857639312744

Token 399: ' [' (ID: 723)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1778910756111145
    2. '[num' → logprob: -2.1778910160064697
    3. '[' → logprob: -3.5528910160064697
    4. ' [' → logprob: -4.802891254425049
    5. '[index' → logprob: -5.677891254425049
    6. '[n' → logprob: -6.052891254425049
    7. '[k' → logprob: -6.052891254425049
    8. '[b' → logprob: -6.177891254425049
    9. '[int' → logprob: -7.552891254425049
    10. '[pos' → logprob: -7.552891254425049

Token 400: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0008695332217030227
    2. 'idx' → logprob: -7.1258697509765625
    3. 'pos' → logprob: -9.875869750976562
    4. ' i' → logprob: -12.625869750976562
    5. 'j' → logprob: -12.750869750976562
    6. 'index' → logprob: -13.250869750976562
    7. '(i' → logprob: -13.375869750976562
    8. 'k' → logprob: -13.500869750976562
    9. 'bit' → logprob: -14.125869750976562
    10. '   ' → logprob: -14.625869750976562

Token 401: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3132958710193634
    2. 'for' → logprob: -1.313295841217041
    3. '
' → logprob: -10.9382963180542
    4. ' ' → logprob: -11.4382963180542
    5. 'd' → logprob: -13.4382963180542
    6. '   ' → logprob: -13.5632963180542
    7. '	for' → logprob: -14.4382963180542
    8. ' 
' → logprob: -15.1882963180542
    9. '  ' → logprob: -15.3132963180542
    10. '```' → logprob: -15.3132963180542

Token 402: ' i' (ID: 575)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5650254487991333
    2. ' i' → logprob: -1.3150254487991333
    3. 'i' → logprob: -1.8150254487991333
    4. ' in' → logprob: -8.440025329589844
    5. ',i' → logprob: -9.815025329589844
    6. ' range' → logprob: -10.190025329589844
    7. 'range' → logprob: -10.565025329589844
    8. ' ,' → logprob: -11.690025329589844
    9. ' ' → logprob: -11.815025329589844
    10. 'in' → logprob: -13.815025329589844

Token 403: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012763554230332375
    2. ' in' → logprob: -4.387763500213623
    3. 'in' → logprob: -9.512763977050781
    4. ',num' → logprob: -9.637763977050781
    5. ',b' → logprob: -10.012763977050781
    6. ' ,' → logprob: -10.512763977050781
    7. ',x' → logprob: -12.012763977050781
    8. 'n' → logprob: -12.137763977050781
    9. ',n' → logprob: -12.262763977050781
    10. 'range' → logprob: -12.387763977050781

Token 404: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16022443771362305
    2. ' range' → logprob: -1.910224437713623
    3. '(range' → logprob: -15.785224914550781
    4. '(' → logprob: -16.41022491455078
    5. 'enumer' → logprob: -16.66022491455078
    6. '	range' → logprob: -17.78522491455078
    7. '[' → logprob: -18.03522491455078
    8. ' ' → logprob: -18.16022491455078
    9. '.range' → logprob: -18.41022491455078
    10. ',' → logprob: -18.53522491455078

Token 405: '(' (ID: 7)
  Prédit: '(num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.35263049602508545
    2. '(' → logprob: -1.2276304960250854
    3. 'num' → logprob: -5.727630615234375
    4. '64' → logprob: -7.102630615234375
    5. '(len' → logprob: -10.102630615234375
    6. '60' → logprob: -10.227630615234375
    7. ' ' → logprob: -12.102630615234375
    8. ' num' → logprob: -12.727630615234375
    9. '61' → logprob: -13.352630615234375
    10. ' (' → logprob: -13.477630615234375

Token 406: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.00024953833781182766
    2. 'num' → logprob: -8.625249862670898
    3. '64' → logprob: -9.750249862670898
    4. '61' → logprob: -11.500249862670898
    5. '0' → logprob: -14.375249862670898
    6. '62' → logprob: -14.625249862670898
    7. '63' → logprob: -15.625249862670898
    8. ' ' → logprob: -16.0002498626709
    9. '65' → logprob: -16.1252498626709
    10. '59' → logprob: -17.6252498626709

Token 407: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.771655115589965e-05
    2. ' )' → logprob: -11.875018119812012
    3. 'if' → logprob: -12.125018119812012
    4. ' if' → logprob: -12.375018119812012
    5. ' ' → logprob: -15.000018119812012
    6. '   ' → logprob: -15.125018119812012
    7. ')]' → logprob: -15.875018119812012
    8. ')
' → logprob: -16.500017166137695
    9. '  ' → logprob: -16.500017166137695
    10. '))' → logprob: -17.250017166137695

Token 408: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.006735145580023527
    2. 'if' → logprob: -5.006735324859619
    3. ' ' → logprob: -12.131734848022461
    4. '       ' → logprob: -12.381734848022461
    5. '           ' → logprob: -12.381734848022461
    6. ',' → logprob: -13.131734848022461
    7. '   ' → logprob: -13.506734848022461
    8. '	if' → logprob: -14.131734848022461
    9. '        ' → logprob: -14.381734848022461
    10. '          ' → logprob: -15.256734848022461

Token 409: ' (' (ID: 350)
  Prédit: '(num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.9827671647071838
    2. 'num' → logprob: -1.107767105102539
    3. ' (' → logprob: -1.607767105102539
    4. ' num' → logprob: -2.357767105102539
    5. '((' → logprob: -8.482767105102539
    6. '(' → logprob: -9.107767105102539
    7. ' ' → logprob: -9.607767105102539
    8. ' ((' → logprob: -10.107767105102539
    9. '   ' → logprob: -11.232767105102539
    10. '(n' → logprob: -11.857767105102539

Token 410: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.023828722536563873
    2. '(num' → logprob: -3.7738287448883057
    3. ' num' → logprob: -7.523828506469727
    4. ' (' → logprob: -10.398828506469727
    5. '(' → logprob: -11.398828506469727
    6. '((' → logprob: -14.648828506469727
    7. '[num' → logprob: -15.023828506469727
    8. '	num' → logprob: -16.023828506469727
    9. ',num' → logprob: -16.023828506469727
    10. '1' → logprob: -16.398828506469727

Token 411: '>>' (ID: 3920)
  Prédit: '>>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.5850008130073547
    2. '&' → logprob: -0.9600008130073547
    3. ' &' → logprob: -2.83500075340271
    4. '>>&' → logprob: -7.835000991821289
    5. ' >>' → logprob: -8.085000991821289
    6. '&gt' → logprob: -8.960000991821289
    7. '&amp' → logprob: -9.335000991821289
    8. '&
' → logprob: -9.960000991821289
    9. '>' → logprob: -10.085000991821289
    10. '>>(' → logprob: -10.335000991821289

Token 412: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0001234428636962548
    2. ' i' → logprob: -9.000123023986816
    3. ' ' → logprob: -18.500123977661133
    4. '	i' → logprob: -19.125123977661133
    5. '```' → logprob: -19.750123977661133
    6. ')i' → logprob: -20.250123977661133
    7. '_i' → logprob: -20.500123977661133
    8. '(i' → logprob: -20.625123977661133
    9. '   ' → logprob: -20.750123977661133
    10. ')' → logprob: -20.875123977661133

Token 413: ')&' (ID: 34370)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2519362270832062
    2. ')&' → logprob: -1.5019361972808838
    3. ' )' → logprob: -12.376935958862305
    4. '&' → logprob: -13.001935958862305
    5. ')>>' → logprob: -15.751935958862305
    6. ')&&' → logprob: -16.251935958862305
    7. '   ' → logprob: -16.376935958862305
    8. ')
' → logprob: -16.376935958862305
    9. ' ' → logprob: -16.626935958862305
    10. '1' → logprob: -17.251935958862305

Token 414: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '   ' → logprob: -18.50010871887207
    4. '(' → logprob: -19.50010871887207
    5. '0' → logprob: -19.50010871887207
    6. '
' → logprob: -19.50010871887207
    7. '

' → logprob: -20.00010871887207
    8. ' ' → logprob: -20.00010871887207
    9. '```' → logprob: -20.25010871887207
    10. '  ' → logprob: -20.75010871887207

Token 415: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0033912332728505135
    2. ']==' → logprob: -6.503391265869141
    3. ' ]' → logprob: -7.378391265869141
    4. '()]' → logprob: -7.378391265869141
    5. ')]' → logprob: -7.878391265869141
    6. '==' → logprob: -8.87839126586914
    7. ')' → logprob: -10.12839126586914
    8. ' ==' → logprob: -10.62839126586914
    9. '   ' → logprob: -10.75339126586914
    10. ']>' → logprob: -12.25339126586914

Token 416: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 417: ' def' (ID: 1056)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7980360984802246
    2. '   ' → logprob: -1.1730360984802246
    3. ')' → logprob: -1.5480360984802246
    4. '(' → logprob: -5.298036098480225
    5. ',' → logprob: -5.548036098480225
    6. ' ' → logprob: -5.798036098480225
    7. '[' → logprob: -5.923036098480225
    8. ']' → logprob: -6.548036098480225
    9. '=' → logprob: -6.673036098480225
    10. ':
' → logprob: -7.048036098480225

Token 418: ' exponent' (ID: 51159)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -1.9861048460006714
    2. ' accumulate' → logprob: -1.9861048460006714
    3. ' calc' → logprob: -2.736104965209961
    4. ' parts' → logprob: -2.861104965209961
    5. ' add' → logprob: -3.236104965209961
    6. ' combine' → logprob: -3.361104965209961
    7. ' pow' → logprob: -3.486104965209961
    8. 'sum' → logprob: -3.486104965209961
    9. 'calc' → logprob: -3.486104965209961
    10. 'pow' → logprob: -3.611104965209961

Token 419: 'iate' (ID: 5373)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2026828527450562
    2. 'iate' → logprob: -1.2026828527450562
    3. '_set' → logprob: -1.7026828527450562
    4. 'iation' → logprob: -2.7026829719543457
    5. '(n' → logprob: -3.0776829719543457
    6. '(' → logprob: -3.7026829719543457
    7. ')' → logprob: -4.077682971954346
    8. '(num' → logprob: -4.952682971954346
    9. ')_' → logprob: -5.202682971954346
    10. '=' → logprob: -5.577682971954346

Token 420: '_add' (ID: 8390)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.40538105368614197
    2. '(num' → logprob: -1.2803810834884644
    3. '_' → logprob: -3.405380964279175
    4. '(number' → logprob: -4.655381202697754
    5. '(base' → logprob: -4.905381202697754
    6. '(value' → logprob: -7.155381202697754
    7. '(n' → logprob: -7.280381202697754
    8. '(x' → logprob: -7.655381202697754
    9. '10' → logprob: -7.780381202697754
    10. '_(' → logprob: -7.905381202697754

Token 421: '(ch' (ID: 15574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5262304544448853
    2. '(num' → logprob: -1.0262304544448853
    3. ' (' → logprob: -3.1512303352355957
    4. '(n' → logprob: -5.901230335235596
    5. '(a' → logprob: -6.776230335235596
    6. '(x' → logprob: -7.026230335235596
    7. '_' → logprob: -7.401230335235596
    8. '(
' → logprob: -7.901230335235596
    9. '   ' → logprob: -8.026230812072754
    10. ' ' → logprob: -8.401230812072754

Token 422: 'ouse' (ID: 1941)
  Prédit: 'ain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ain' → logprob: -0.4082426130771637
    2. 'o' → logprob: -1.5332425832748413
    3. 'ar' → logprob: -2.908242702484131
    4. 'unks' → logprob: -4.283242702484131
    5. 'ains' → logprob: -4.658242702484131
    6. 'e' → logprob: -4.783242702484131
    7. 'unk' → logprob: -4.908242702484131
    8. 'ained' → logprob: -5.033242702484131
    9. 'un' → logprob: -5.533242702484131
    10. 'aining' → logprob: -5.783242702484131

Token 423: 'i' (ID: 72)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.058888554573059
    2. 's' → logprob: -1.558888554573059
    3. 'n' → logprob: -1.683888554573059
    4. 'd' → logprob: -1.808888554573059
    5. ')' → logprob: -2.8088884353637695
    6. ':' → logprob: -5.1838884353637695
    7. 'rs' → logprob: -5.4338884353637695
    8. '(' → logprob: -5.6838884353637695
    9. '):' → logprob: -5.6838884353637695
    10. '_' → logprob: -6.1838884353637695

Token 424: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9022606015205383
    2. '):' → logprob: -0.9022606015205383
    3. '(num' → logprob: -2.0272605419158936
    4. ',num' → logprob: -3.5272605419158936
    5. '(n' → logprob: -4.402260780334473
    6. ')' → logprob: -5.527260780334473
    7. '(' → logprob: -5.902260780334473
    8. '):
' → logprob: -6.777260780334473
    9. 'num' → logprob: -6.902260780334473
    10. '_' → logprob: -6.902260780334473

Token 425: ' i' (ID: 575)
  Prédit: ' base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' base' → logprob: -1.3470603227615356
    2. ' exp' → logprob: -2.222060203552246
    3. ' n' → logprob: -2.472060203552246
    4. 'num' → logprob: -2.597060203552246
    5. 'exp' → logprob: -2.722060203552246
    6. ' num' → logprob: -2.972060203552246
    7. ' b' → logprob: -2.972060203552246
    8. 'n' → logprob: -3.597060203552246
    9. ' val' → logprob: -3.722060203552246
    10. 'b' → logprob: -3.722060203552246

Token 426: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0025025326758623123
    2. '):
' → logprob: -6.00250244140625
    3. ')' → logprob: -12.12750244140625
    4. ',' → logprob: -12.25250244140625
    5. '):
' → logprob: -12.37750244140625
    6. '   ' → logprob: -12.50250244140625
    7. ':' → logprob: -12.50250244140625
    8. ' ):' → logprob: -12.50250244140625
    9. ' ' → logprob: -14.87750244140625
    10. '  ' → logprob: -16.00250244140625

Token 427: ' l' (ID: 305)
  Prédit: ' base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' base' → logprob: -2.2260303497314453
    2. 'n' → logprob: -2.6010303497314453
    3. ' acc' → logprob: -2.6010303497314453
    4. 'val' → logprob: -2.7260303497314453
    5. 'pow' → logprob: -2.7260303497314453
    6. 'base' → logprob: -2.8510303497314453
    7. 'num' → logprob: -2.9760303497314453
    8. 'acc' → logprob: -3.1010303497314453
    9. 'l' → logprob: -3.1010303497314453
    10. 'b' → logprob: -3.1010303497314453

Token 428: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07275282591581345
    2. '):
' → logprob: -2.9477527141571045
    3. ',' → logprob: -4.072752952575684
    4. '   ' → logprob: -7.822752952575684
    5. '):
' → logprob: -9.197752952575684
    6. ' ):' → logprob: -9.822752952575684
    7. ')' → logprob: -9.947752952575684
    8. ' ,' → logprob: -11.072752952575684
    9. '  ' → logprob: -11.197752952575684
    10. ':' → logprob: -11.447752952575684

Token 429: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8346976041793823
    2. '       ' → logprob: -1.3346976041793823
    3. '):' → logprob: -2.084697723388672
    4. '   ' → logprob: -2.459697723388672
    5. ')' → logprob: -3.709697723388672
    6. '<|end|>' → logprob: -4.334697723388672
    7. '    ' → logprob: -4.584697723388672
    8. ' ' → logprob: -4.834697723388672
    9. ',' → logprob: -4.834697723388672
    10. '(' → logprob: -5.084697723388672

Token 430: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.474122554063797
    2. 'return' (adapté à ' return') → logprob: -1.7241225242614746
    3. '       ' → logprob: -1.8491225242614746
    4. '   ' → logprob: -3.5991225242614746
    5. ' result' → logprob: -5.724122524261475
    6. 'result' → logprob: -5.724122524261475
    7. ' res' → logprob: -5.849122524261475
    8. '    ' → logprob: -5.974122524261475
    9. '        ' → logprob: -7.724122524261475
    10. '           ' → logprob: -8.224123001098633

Token 431: ' pow' (ID: 9779)
  Prédit: '(ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ch' → logprob: -0.42322516441345215
    2. '(pow' → logprob: -1.5482251644134521
    3. ' (' → logprob: -2.298225164413452
    4. '((' → logprob: -3.798225164413452
    5. 'pow' → logprob: -5.423225402832031
    6. 'ch' → logprob: -6.298225402832031
    7. '(' → logprob: -6.673225402832031
    8. '(((' → logprob: -7.548225402832031
    9. ' ((' → logprob: -7.673225402832031
    10. '(p' → logprob: -8.673225402832031

Token 432: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.864272967912257e-05
    2. '10' → logprob: -9.625088691711426
    3. '(pow' → logprob: -10.750088691711426
    4. ' (' → logprob: -14.625088691711426
    5. '((' → logprob: -15.000088691711426
    6. 'pow' → logprob: -15.500088691711426
    7. '(
' → logprob: -17.25008773803711
    8. '(base' → logprob: -18.25008773803711
    9. '<|end|>' → logprob: -18.62508773803711
    10. '(int' → logprob: -18.87508773803711

Token 433: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0002790935104712844
    2. '(' → logprob: -8.500279426574707
    3. 'ch' → logprob: -9.625279426574707
    4. '(ch' → logprob: -13.250279426574707
    5. '```' → logprob: -13.750279426574707
    6. ')' → logprob: -13.750279426574707
    7. ' ' → logprob: -14.000279426574707
    8. ' ch' → logprob: -14.000279426574707
    9. 'pow' → logprob: -14.125279426574707
    10. '
' → logprob: -14.625279426574707

Token 434: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0030452122446149588
    2. ',l' → logprob: -5.878045082092285
    3. ' ,' → logprob: -9.003045082092285
    4. '<|end|>' → logprob: -9.753045082092285
    5. ',
' → logprob: -11.253045082092285
    6. '(l' → logprob: -11.878045082092285
    7. ',i' → logprob: -12.003045082092285
    8. '+' → logprob: -12.628045082092285
    9. '   ' → logprob: -12.628045082092285
    10. '(' → logprob: -12.628045082092285

Token 435: ' ch' (ID: 549)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0459136925637722
    2. ' l' → logprob: -3.1709136962890625
    3. 'i' → logprob: -6.9209136962890625
    4. '(l' → logprob: -7.1709136962890625
    5. '(i' → logprob: -8.045913696289062
    6. ' i' → logprob: -8.670913696289062
    7. '   ' → logprob: -8.670913696289062
    8. '(' → logprob: -8.795913696289062
    9. ' (' → logprob: -9.045913696289062
    10. ' ' → logprob: -9.170913696289062

Token 436: 'ouse' (ID: 1941)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6478124856948853
    2. '*l' → logprob: -0.8978124856948853
    3. ' *' → logprob: -3.8978123664855957
    4. '*' → logprob: -4.272812366485596
    5. ',' → logprob: -4.397812366485596
    6. 'i' → logprob: -4.772812366485596
    7. ' l' → logprob: -5.272812366485596
    8. ',l' → logprob: -5.897812366485596
    9. '*i' → logprob: -6.147812366485596
    10. ' ' → logprob: -6.897812366485596

Token 437: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05265079066157341
    2. ',' → logprob: -3.3026506900787354
    3. 'l' → logprob: -4.4276509284973145
    4. ',i' → logprob: -7.6776509284973145
    5. ' ,' → logprob: -7.9276509284973145
    6. '+' → logprob: -7.9276509284973145
    7. '(i' → logprob: -8.802650451660156
    8. ' ' → logprob: -8.927650451660156
    9. '+i' → logprob: -9.052650451660156
    10. '_i' → logprob: -9.177650451660156

Token 438: '*l' (ID: 176337)
  Prédit: '*l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*l' → logprob: -0.23687195777893066
    2. '*' → logprob: -2.1118719577789307
    3. ' *' → logprob: -2.6118719577789307
    4. '*i' → logprob: -4.236871719360352
    5. '+' → logprob: -6.986871719360352
    6. '+l' → logprob: -7.736871719360352
    7. ' +' → logprob: -8.111871719360352
    8. ',' → logprob: -8.736871719360352
    9. '*(' → logprob: -9.236871719360352
    10. '+i' → logprob: -10.486871719360352

Token 439: ',' (ID: 11)
  Prédit: '*i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.18042483925819397
    2. '*' → logprob: -2.555424928665161
    3. ' *' → logprob: -2.805424928665161
    4. ')' → logprob: -4.305424690246582
    5. '*(' → logprob: -4.430424690246582
    6. '+' → logprob: -7.555424690246582
    7. '+i' → logprob: -7.930424690246582
    8. ',' → logprob: -8.430424690246582
    9. ' +' → logprob: -8.555424690246582
    10. '*l' → logprob: -9.430424690246582

Token 440: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.009771316312253475
    2. ' M' → logprob: -4.634771347045898
    3. '   ' → logprob: -12.134771347045898
    4. '10' → logprob: -12.634771347045898
    5. ' ' → logprob: -13.009771347045898
    6. '  ' → logprob: -14.134771347045898
    7. '           ' → logprob: -14.384771347045898
    8. '       ' → logprob: -14.509771347045898
    9. ')' → logprob: -14.634771347045898
    10. '    ' → logprob: -14.759771347045898

Token 441: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013321757433004677
    2. ')*' → logprob: -9.750133514404297
    3. ')+' → logprob: -10.125133514404297
    4. ' )' → logprob: -11.250133514404297
    5. ')
' → logprob: -11.625133514404297
    6. ')return' → logprob: -12.750133514404297
    7. '   ' → logprob: -13.000133514404297
    8. ')#' → logprob: -13.250133514404297
    9. '+' → logprob: -13.500133514404297
    10. ')}' → logprob: -13.750133514404297

Token 442: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10940039902925491
    2. '<|end|>' → logprob: -2.734400510787964
    3. ':' → logprob: -3.734400510787964
    4. '   ' → logprob: -4.734400272369385
    5. '
' → logprob: -6.484400272369385
    6. '#' → logprob: -6.984400272369385
    7. '(' → logprob: -7.109400272369385
    8. '):' → logprob: -7.484400272369385
    9. ',' → logprob: -7.734400272369385
    10. '+' → logprob: -8.484400749206543

Token 443: ' ans' (ID: 3345)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15433542430400848
    2. ':' → logprob: -2.5293354988098145
    3. '   ' → logprob: -3.2793354988098145
    4. '<|end|>' → logprob: -4.6543354988098145
    5. '(' → logprob: -5.1543354988098145
    6. '):' → logprob: -5.5293354988098145
    7. ' ' → logprob: -6.6543354988098145
    8. '#' → logprob: -7.6543354988098145
    9. '[' → logprob: -7.6543354988098145
    10. 'def' → logprob: -7.7793354988098145

Token 444: 'const' (ID: 1671)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009952045977115631
    2. '=' → logprob: -4.634952068328857
    3. ' +=' → logprob: -9.8849515914917
    4. ' ' → logprob: -10.0099515914917
    5. ',' → logprob: -10.3849515914917
    6. '  ' → logprob: -11.3849515914917
    7. ')' → logprob: -11.5099515914917
    8. '_' → logprob: -11.6349515914917
    9. ' =)' → logprob: -12.0099515914917
    10. '<|end|>' → logprob: -12.0099515914917

Token 445: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38743504881858826
    2. '=' → logprob: -1.1374350786209106
    3. '_' → logprob: -8.387434959411621
    4. ',' → logprob: -9.262434959411621
    5. '   ' → logprob: -9.387434959411621
    6. ')' → logprob: -10.137434959411621
    7. '=[]' → logprob: -10.262434959411621
    8. '[' → logprob: -10.637434959411621
    9. ']' → logprob: -11.137434959411621
    10. ' ' → logprob: -12.012434959411621

Token 446: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.028153177350759506
    2. '1' → logprob: -4.153152942657471
    3. ' ' → logprob: -5.028152942657471
    4. '[' → logprob: -6.653152942657471
    5. '(' → logprob: -6.903152942657471
    6. 'A' → logprob: -7.028152942657471
    7. 'B' → logprob: -7.903152942657471
    8. '[]' → logprob: -8.028153419494629
    9. 'pow' → logprob: -8.278153419494629
    10. '[A' → logprob: -8.528153419494629

Token 447: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.4690404534339905
    2. '(' → logprob: -1.4690403938293457
    3. '(((' → logprob: -2.8440403938293457
    4. '([' → logprob: -3.5940403938293457
    5. '(pow' → logprob: -3.8440403938293457
    6. '([(' → logprob: -4.344040393829346
    7. '(range' → logprob: -4.844040393829346
    8. '(
' → logprob: -5.719040393829346
    9. '(ans' → logprob: -5.844040393829346
    10. '((((' → logprob: -5.844040393829346

Token 448: 'dou' (ID: 122443)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.3495906591415405
    2. 'parts' → logprob: -2.72459077835083
    3. '(pow' → logprob: -3.22459077835083
    4. '((' → logprob: -3.59959077835083
    5. '(parts' → logprob: -3.84959077835083
    6. 'B' → logprob: -3.84959077835083
    7. 'A' → logprob: -4.09959077835083
    8. '(i' → logprob: -4.47459077835083
    9. '(ans' → logprob: -4.84959077835083
    10. '(A' → logprob: -4.97459077835083

Token 449: 'bling' (ID: 11037)
  Prédit: 'bling'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bling' → logprob: -0.0010067274561151862
    2. 'ble' → logprob: -7.501006603240967
    3. 'bl' → logprob: -8.501007080078125
    4. 'pling' → logprob: -9.126007080078125
    5. ')' → logprob: -10.251007080078125
    6. 'b' → logprob: -10.626007080078125
    7. 'gling' → logprob: -11.376007080078125
    8. 'ling' → logprob: -11.876007080078125
    9. '[' → logprob: -11.876007080078125
    10. 'blings' → logprob: -12.126007080078125

Token 450: 'const' (ID: 1671)
  Prédit: 'const'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'const' → logprob: -0.005804955493658781
    2. 'line' → logprob: -5.505805015563965
    3. ')' → logprob: -6.880805015563965
    4. '[i' → logprob: -8.880805015563965
    5. '_const' → logprob: -9.755805015563965
    6. '[' → logprob: -10.005805015563965
    7. '   ' → logprob: -10.130805015563965
    8. 'range' → logprob: -10.255805015563965
    9. '[line' → logprob: -10.630805015563965
    10. ')]' → logprob: -10.755805015563965

Token 451: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.006863963324576616
    2. '[' → logprob: -5.131864070892334
    3. '[:' → logprob: -7.881864070892334
    4. ')' → logprob: -8.631863594055176
    5. '[
' → logprob: -8.631863594055176
    6. ')[' → logprob: -10.131863594055176
    7. '*' → logprob: -11.131863594055176
    8. '[s' → logprob: -11.381863594055176
    9. ' *' → logprob: -11.631863594055176
    10. ',' → logprob: -11.756863594055176

Token 452: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.43819689750671387
    2. '*' → logprob: -1.9381968975067139
    3. ' for' → logprob: -2.438196897506714
    4. ']' → logprob: -2.688196897506714
    5. ']*' → logprob: -3.688196897506714
    6. 'for' → logprob: -3.813196897506714
    7. ')' → logprob: -5.938197135925293
    8. '*(' → logprob: -6.688197135925293
    9. ']*(' → logprob: -6.688197135925293
    10. ' if' → logprob: -7.313197135925293

Token 453: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6879656314849854
    2. ' for' → logprob: -0.8129656314849854
    3. 'for' → logprob: -3.5629656314849854
    4. '*' → logprob: -3.6879656314849854
    5. '*(' → logprob: -8.687965393066406
    6. ' if' → logprob: -8.687965393066406
    7. '<<' → logprob: -10.437965393066406
    8. ')' → logprob: -10.687965393066406
    9. 'if' → logprob: -10.687965393066406
    10. '*((' → logprob: -11.187965393066406

Token 454: ' exponent' (ID: 51159)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.7706244587898254
    2. '((' → logprob: -1.0206243991851807
    3. 'B' → logprob: -3.0206243991851807
    4. '(pow' → logprob: -3.0206243991851807
    5. '(B' → logprob: -3.6456243991851807
    6. '(((' → logprob: -4.52062463760376
    7. 'parts' → logprob: -4.64562463760376
    8. 'A' → logprob: -4.77062463760376
    9. '(' → logprob: -5.02062463760376
    10. '(A' → logprob: -5.39562463760376

Token 455: 'iate' (ID: 5373)
  Prédit: 'iate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iate' → logprob: -0.04077707603573799
    2. '(' → logprob: -4.165777206420898
    3. 'ate' → logprob: -4.665777206420898
    4. '(i' → logprob: -5.040777206420898
    5. 'uate' → logprob: -5.665777206420898
    6. '_' → logprob: -5.790777206420898
    7. 'i' → logprob: -7.540777206420898
    8. ')' → logprob: -8.415777206420898
    9. 'imate' → logprob: -8.915777206420898
    10. '        ' → logprob: -9.165777206420898

Token 456: '_add' (ID: 8390)
  Prédit: '_add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -0.035647813230752945
    2. '(' → logprob: -4.410647869110107
    3. '(A' → logprob: -4.785647869110107
    4. '(B' → logprob: -5.285647869110107
    5. '(i' → logprob: -5.410647869110107
    6. 'add' → logprob: -6.535647869110107
    7. 'A' → logprob: -7.410647869110107
    8. '(a' → logprob: -7.785647869110107
    9. 'Add' → logprob: -7.910647869110107
    10. '10' → logprob: -8.41064739227295

Token 457: '(sum' (ID: 45528)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.33620142936706543
    2. '(A' → logprob: -1.4612014293670654
    3. '(' → logprob: -3.7112014293670654
    4. '(b' → logprob: -4.7112016677856445
    5. '((' → logprob: -4.9612016677856445
    6. '(a' → logprob: -5.0862016677856445
    7. '(i' → logprob: -5.7112016677856445
    8. '(L' → logprob: -6.9612016677856445
    9. ' (' → logprob: -7.3362016677856445
    10. '(
' → logprob: -7.8362016677856445

Token 458: '(' (ID: 7)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -1.3602008819580078
    2. '([' → logprob: -1.4852008819580078
    3. '(A' → logprob: -1.6102008819580078
    4. '((' → logprob: -2.110200881958008
    5. '(i' → logprob: -3.485200881958008
    6. '(index' → logprob: -3.735200881958008
    7. '(parts' → logprob: -3.735200881958008
    8. '(' → logprob: -3.860200881958008
    9. '(range' → logprob: -3.985200881958008
    10. '(ch' → logprob: -4.110200881958008

Token 459: '2' (ID: 17)
  Prédit: '(index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(index' → logprob: -1.3305094242095947
    2. 'index' → logprob: -2.0805094242095947
    3. '[index' → logprob: -2.3305094242095947
    4. '(parts' → logprob: -2.5805094242095947
    5. '(' → logprob: -2.8305094242095947
    6. '((' → logprob: -2.9555094242095947
    7. '(i' → logprob: -3.0805094242095947
    8. '(B' → logprob: -3.4555094242095947
    9. '(j' → logprob: -3.7055094242095947
    10. '[' → logprob: -3.7055094242095947

Token 460: '**' (ID: 410)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9680812358856201
    2. '(i' → logprob: -1.3430812358856201
    3. '**' → logprob: -1.8430812358856201
    4. '>>' → logprob: -3.21808123588562
    5. '[i' → logprob: -3.34308123588562
    6. ')' → logprob: -3.84308123588562
    7. '(B' → logprob: -3.96808123588562
    8. ',' → logprob: -4.218081474304199
    9. '))' → logprob: -4.718081474304199
    10. '>>(' → logprob: -5.218081474304199

Token 461: 'x' (ID: 87)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.18736232817173004
    2. '(j' → logprob: -2.4373624324798584
    3. '(i' → logprob: -3.5623624324798584
    4. 'i' → logprob: -3.9373624324798584
    5. '[j' → logprob: -4.562362194061279
    6. '{' → logprob: -5.312362194061279
    7. 'idx' → logprob: -5.937362194061279
    8. 'index' → logprob: -6.187362194061279
    9. 'k' → logprob: -6.312362194061279
    10. '((' → logprob: -6.312362194061279

Token 462: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.49672719836235046
    2. ' for' → logprob: -0.9967272281646729
    3. 'x' → logprob: -4.621726989746094
    4. '(x' → logprob: -4.746726989746094
    5. 'i' → logprob: -6.621726989746094
    6. '[x' → logprob: -7.496726989746094
    7. ')' → logprob: -7.871726989746094
    8. 'j' → logprob: -8.121726989746094
    9. '[i' → logprob: -8.371726989746094
    10. '[j' → logprob: -8.871726989746094

Token 463: ' x' (ID: 1215)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.7546398043632507
    2. ' index' → logprob: -1.0046398639678955
    3. 'x' → logprob: -2.1296398639678955
    4. ' x' → logprob: -3.5046398639678955
    5. ' range' → logprob: -5.504639625549316
    6. 'range' → logprob: -5.504639625549316
    7. ' parts' → logprob: -6.504639625549316
    8. '(index' → logprob: -6.754639625549316
    9. 'chain' → logprob: -7.379639625549316
    10. 'parts' → logprob: -7.504639625549316

Token 464: ' in' (ID: 306)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.8728806376457214
    2. ' in' → logprob: -1.4978806972503662
    3. ' index' → logprob: -2.247880697250366
    4. 'range' → logprob: -2.247880697250366
    5. 'in' → logprob: -2.372880697250366
    6. ' range' → logprob: -3.497880697250366
    7. '(index' → logprob: -4.747880458831787
    8. ' parts' → logprob: -5.997880458831787
    9. '=index' → logprob: -5.997880458831787
    10. 'parts' → logprob: -6.122880458831787

Token 465: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.05166307091712952
    2. ' index' → logprob: -3.3016631603240967
    3. 'range' → logprob: -5.051662921905518
    4. 'parts' → logprob: -5.301662921905518
    5. ' parts' → logprob: -6.801662921905518
    6. ' range' → logprob: -7.551662921905518
    7. '[index' → logprob: -8.926663398742676
    8. '(index' → logprob: -9.051663398742676
    9. 'chain' → logprob: -9.676663398742676
    10. '(parts' → logprob: -10.551663398742676

Token 466: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.003118060529232025
    2. 'set' → logprob: -5.87811803817749
    3. '(i' → logprob: -9.628118515014648
    4. '   ' → logprob: -10.128118515014648
    5. 's' → logprob: -10.253118515014648
    6. '{' → logprob: -10.753118515014648
    7. 'bits' → logprob: -10.878118515014648
    8. '[i' → logprob: -11.253118515014648
    9. 'Set' → logprob: -11.503118515014648
    10. ')' → logprob: -11.753118515014648

Token 467: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.6458410620689392
    2. 'bits' → logprob: -1.395841121673584
    3. '_set' → logprob: -2.270841121673584
    4. '(i' → logprob: -2.895841121673584
    5. '(bits' → logprob: -4.020841121673584
    6. '[i' → logprob: -4.395841121673584
    7. '(' → logprob: -4.520841121673584
    8. 'range' → logprob: -4.520841121673584
    9. '(range' → logprob: -5.895841121673584
    10. '[' → logprob: -6.270841121673584

Token 468: '(n' (ID: 2406)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.46840986609458923
    2. '(num' → logprob: -1.3434098958969116
    3. '(B' → logprob: -3.343409776687622
    4. '(ans' → logprob: -3.843409776687622
    5. '(n' → logprob: -4.343410015106201
    6. '(i' → logprob: -4.343410015106201
    7. '(a' → logprob: -4.593410015106201
    8. '(A' → logprob: -5.343410015106201
    9. '(ch' → logprob: -5.843410015106201
    10. 'num' → logprob: -5.843410015106201

Token 469: ')' (ID: 8)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1726412773132324
    2. '),' → logprob: -1.6726412773132324
    3. '[:' → logprob: -2.1726412773132324
    4. ')' → logprob: -2.4226412773132324
    5. '[i' → logprob: -2.5476412773132324
    6. ')[' → logprob: -2.6726412773132324
    7. 'if' → logprob: -2.9226412773132324
    8. ')),' → logprob: -3.1726412773132324
    9. '   ' → logprob: -4.297641277313232
    10. '))),' → logprob: -5.172641277313232

Token 470: ' if' (ID: 538)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.08527643978595734
    2. ' if' → logprob: -2.7102763652801514
    3. '),' → logprob: -4.4602766036987305
    4. 'if' → logprob: -6.4602766036987305
    5. '[i' → logprob: -7.5852766036987305
    6. '[' → logprob: -8.08527660369873
    7. ')),' → logprob: -8.21027660369873
    8. '   ' → logprob: -8.33527660369873
    9. ')' → logprob: -8.46027660369873
    10. ')))' → logprob: -9.21027660369873

Token 471: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.007733088452368975
    2. ' x' → logprob: -4.88273286819458
    3. 'i' → logprob: -9.132733345031738
    4. ' ' → logprob: -11.882733345031738
    5. ' i' → logprob: -12.632733345031738
    6. '   ' → logprob: -12.882733345031738
    7. '(x' → logprob: -13.757733345031738
    8. '  ' → logprob: -13.882733345031738
    9. '	x' → logprob: -14.007733345031738
    10. ')' → logprob: -14.507733345031738

Token 472: ' <' (ID: 464)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.3776552081108093
    2. '<=' → logprob: -2.002655267715454
    3. '<' → logprob: -2.252655267715454
    4. ' >=' → logprob: -3.127655267715454
    5. ' <' → logprob: -4.377655029296875
    6. '<i' → logprob: -4.752655029296875
    7. ' <=' → logprob: -5.127655029296875
    8. '>' → logprob: -6.627655029296875
    9. '==' → logprob: -7.127655029296875
    10. '<x' → logprob: -8.127655029296875

Token 473: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0016209072200581431
    2. '=' → logprob: -7.001620769500732
    3. ' i' → logprob: -7.751620769500732
    4. '=i' → logprob: -8.37662124633789
    5. '60' → logprob: -11.50162124633789
    6. ' ' → logprob: -11.75162124633789
    7. '   ' → logprob: -12.12662124633789
    8. 'L' → logprob: -12.25162124633789
    9. '=L' → logprob: -12.62662124633789
    10. '  ' → logprob: -13.25162124633789

Token 474: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.009221290238201618
    2. ')),' → logprob: -6.009221076965332
    3. ')' → logprob: -6.634221076965332
    4. '+' → logprob: -6.634221076965332
    5. ' ),' → logprob: -6.634221076965332
    6. ')))' → logprob: -6.759221076965332
    7. ')+' → logprob: -7.009221076965332
    8. '))' → logprob: -8.384221076965332
    9. ',' → logprob: -8.884221076965332
    10. '))),' → logprob: -9.009221076965332

Token 475: ' i' (ID: 575)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.17497417330741882
    2. 'i' → logprob: -2.174974203109741
    3. '1' → logprob: -3.799974203109741
    4. 'L' → logprob: -4.049973964691162
    5. ' l' → logprob: -6.049973964691162
    6. 'B' → logprob: -6.549973964691162
    7. 'b' → logprob: -7.424973964691162
    8. ' i' → logprob: -7.424973964691162
    9. 'n' → logprob: -7.674973964691162
    10. 'A' → logprob: -7.674973964691162

Token 476: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1993044763803482
    2. '))' → logprob: -2.0743045806884766
    3. ')' → logprob: -4.199304580688477
    4. ')))' → logprob: -4.324304580688477
    5. '),' → logprob: -4.574304580688477
    6. ']))' → logprob: -5.699304580688477
    7. ' ,' → logprob: -5.699304580688477
    8. ',l' → logprob: -5.824304580688477
    9. '])' → logprob: -5.949304580688477
    10. ')*' → logprob: -7.074304580688477

Token 477: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0003673940955195576
    2. ' l' → logprob: -8.000367164611816
    3. 'L' → logprob: -10.625367164611816
    4. ')' → logprob: -12.750367164611816
    5. '```' → logprob: -13.000367164611816
    6. '
' → logprob: -13.875367164611816
    7. '1' → logprob: -14.250367164611816
    8. '   ' → logprob: -15.750367164611816
    9. '`' → logprob: -16.375368118286133
    10. '60' → logprob: -16.500368118286133

Token 478: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.10707291960716248
    2. ')' → logprob: -2.9820728302001953
    3. ')))' → logprob: -2.9820728302001953
    4. ' ))' → logprob: -10.107072830200195
    5. ')%' → logprob: -10.107072830200195
    6. '   ' → logprob: -10.232072830200195
    7. '))))' → logprob: -11.482072830200195
    8. ' ' → logprob: -11.607072830200195
    9. ' )' → logprob: -12.107072830200195
    10. '),' → logprob: -12.232072830200195

Token 479: '%' (ID: 4)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2579556703567505
    2. 'for' → logprob: -2.132955551147461
    3. ')' → logprob: -2.507955551147461
    4. ' *' → logprob: -3.882955551147461
    5. '*' → logprob: -5.132955551147461
    6. ',' → logprob: -8.007955551147461
    7. '%' → logprob: -8.507955551147461
    8. '   ' → logprob: -9.132955551147461
    9. ')%' → logprob: -9.507955551147461
    10. ' )' → logprob: -10.007955551147461

Token 480: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -6.623244553338736e-05
    2. ' M' → logprob: -9.625065803527832
    3. ')' → logprob: -16.50006675720215
    4. '```' → logprob: -18.12506675720215
    5. ' ' → logprob: -18.25006675720215
    6. '
' → logprob: -18.75006675720215
    7. ',' → logprob: -18.87506675720215
    8. '<M' → logprob: -19.00006675720215
    9. '>M' → logprob: -19.12506675720215
    10. '<|end|>' → logprob: -19.12506675720215

Token 481: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1450107842683792
    2. ')' → logprob: -2.3950107097625732
    3. 'for' → logprob: -3.1450107097625732
    4. '   ' → logprob: -8.395010948181152
    5. ' )' → logprob: -8.895010948181152
    6. ')+' → logprob: -9.520010948181152
    7. ',' → logprob: -9.520010948181152
    8. '%' → logprob: -9.895010948181152
    9. '<|end|>' → logprob: -10.270010948181152
    10. '+' → logprob: -10.395010948181152

Token 482: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02599371410906315
    2. ' i' → logprob: -3.775993824005127
    3. 'range' → logprob: -6.275993824005127
    4. ' range' → logprob: -7.150993824005127
    5. 'index' → logprob: -10.275993347167969
    6. 'x' → logprob: -10.775993347167969
    7. ' index' → logprob: -12.025993347167969
    8. 'parts' → logprob: -12.900993347167969
    9. ')' → logprob: -13.025993347167969
    10. ' parts' → logprob: -13.275993347167969

Token 483: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16769059002399445
    2. 'in' → logprob: -1.917690634727478
    3. ',' → logprob: -4.917690753936768
    4. ')' → logprob: -9.91769027709961
    5. 'range' → logprob: -10.16769027709961
    6. ' range' → logprob: -11.79269027709961
    7. ' ,' → logprob: -12.04269027709961
    8. '(' → logprob: -12.04269027709961
    9. ' ' → logprob: -12.41769027709961
    10. ',len' → logprob: -13.04269027709961

Token 484: ' index' (ID: 3472)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0020246391650289297
    2. ' range' → logprob: -6.5020246505737305
    3. 'index' → logprob: -7.6270246505737305
    4. 'parts' → logprob: -10.50202465057373
    5. 'len' → logprob: -13.12702465057373
    6. ' index' → logprob: -13.87702465057373
    7. 'part' → logprob: -14.00202465057373
    8. '(range' → logprob: -14.12702465057373
    9. '[' → logprob: -14.37702465057373
    10. '(' → logprob: -14.50202465057373

Token 485: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.00013858173042535782
    2. '(' → logprob: -9.250138282775879
    3. 'set' → logprob: -11.125138282775879
    4. 'const' → logprob: -11.375138282775879
    5. '(i' → logprob: -13.000138282775879
    6. '_range' → logprob: -13.375138282775879
    7. '_' → logprob: -13.375138282775879
    8. ')' → logprob: -13.750138282775879
    9. '(parts' → logprob: -13.875138282775879
    10. '_(' → logprob: -14.000138282775879

Token 486: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.0730220228433609
    2. 'bits' → logprob: -2.6980221271514893
    3. 's' → logprob: -7.07302188873291
    4. '(' → logprob: -7.82302188873291
    5. '(bits' → logprob: -7.94802188873291
    6. '_set' → logprob: -8.07302188873291
    7. '_BITS' → logprob: -8.07302188873291
    8. '[' → logprob: -8.57302188873291
    9. 'range' → logprob: -9.19802188873291
    10. 'set' → logprob: -9.19802188873291

Token 487: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.002543439855799079
    2. 'n' → logprob: -6.0025434494018555
    3. '(' → logprob: -10.377543449401855
    4. '(B' → logprob: -10.752543449401855
    5. 'B' → logprob: -12.752543449401855
    6. ' (' → logprob: -12.877543449401855
    7. '(A' → logprob: -13.377543449401855
    8. '(N' → logprob: -13.377543449401855
    9. 'A' → logprob: -13.502543449401855
    10. '((' → logprob: -14.002543449401855

Token 488: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4949926733970642
    2. ')' → logprob: -1.619992733001709
    3. ')+' → logprob: -2.244992733001709
    4. ')))' → logprob: -2.619992733001709
    5. ')])' → logprob: -4.619992733001709
    6. '))+' → logprob: -6.244992733001709
    7. ')]' → logprob: -7.994992733001709
    8. '])' → logprob: -8.11999225616455
    9. ']))' → logprob: -8.24499225616455
    10. '))))' → logprob: -8.24499225616455

Token 489: '%' (ID: 4)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 490: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -5.512236498361744e-07
    2. ' M' → logprob: -14.500000953674316
    3. '(M' → logprob: -18.5
    4. '```' → logprob: -19.625
    5. '(' → logprob: -20.5
    6. '[M' → logprob: -21.0
    7. '<M' → logprob: -21.875
    8. '`' → logprob: -22.375
    9. 'B' → logprob: -22.5
    10. 'М' → logprob: -22.625

Token 491: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33483636379241943
    2. '<|end|>' → logprob: -1.5848363637924194
    3. ':' → logprob: -2.959836483001709
    4. '
' → logprob: -3.834836483001709
    5. ')
' → logprob: -6.959836483001709
    6. ':
' → logprob: -6.959836483001709
    7. '<|end|>' → logprob: -6.959836483001709
    8. '):' → logprob: -6.959836483001709
    9. '   ' → logprob: -8.08483600616455
    10. '```' → logprob: -8.08483600616455

Token 492: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30247190594673157
    2. ':' → logprob: -1.5524718761444092
    3. '<|end|>' → logprob: -3.177471876144409
    4. '
' → logprob: -5.802472114562988
    5. '#' → logprob: -7.427472114562988
    6. '[' → logprob: -7.552472114562988
    7. '):' → logprob: -7.677472114562988
    8. '(' → logprob: -7.677472114562988
    9. '```' → logprob: -7.802472114562988
    10. ':
' → logprob: -7.802472114562988

Token 493: ' ch' (ID: 549)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15643346309661865
    2. ':' → logprob: -2.406433582305908
    3. '<|end|>' → logprob: -3.156433582305908
    4. '
' → logprob: -5.656433582305908
    5. ' ' → logprob: -6.281433582305908
    6. '(' → logprob: -6.906433582305908
    7. '#' → logprob: -7.156433582305908
    8. '=' → logprob: -7.281433582305908
    9. '\n' → logprob: -7.281433582305908
    10. ',' → logprob: -7.656433582305908

Token 494: 'ouse' (ID: 1941)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.9222564697265625
    2. 'ose' → logprob: -1.0472564697265625
    3. 'osen' → logprob: -2.2972564697265625
    4. 'ouse' → logprob: -2.5472564697265625
    5. 'os' → logprob: -2.7972564697265625
    6. 'oise' → logprob: -5.5472564697265625
    7. 'e' → logprob: -6.7972564697265625
    8. 'ou' → logprob: -6.9222564697265625
    9. 'osu' → logprob: -7.4222564697265625
    10. '=' → logprob: -7.4222564697265625

Token 495: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002813078695908189
    2. '=' → logprob: -7.25281286239624
    3. '_i' → logprob: -7.62781286239624
    4. '_' → logprob: -7.87781286239624
    5. '[i' → logprob: -8.502813339233398
    6. ' =' → logprob: -8.627813339233398
    7. '=i' → logprob: -8.752813339233398
    8. ''i' → logprob: -9.127813339233398
    9. '```' → logprob: -9.127813339233398
    10. 'const' → logprob: -9.752813339233398

Token 496: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1855691522359848
    2. ' =' → logprob: -1.810569167137146
    3. '<|end|>' → logprob: -5.3105692863464355
    4. '_' → logprob: -7.6855692863464355
    5. ')' → logprob: -8.685568809509277
    6. '<|end|>' → logprob: -10.060568809509277
    7. ',' → logprob: -10.185568809509277
    8. ' ' → logprob: -10.560568809509277
    9. ']' → logprob: -10.935568809509277
    10. ' +=' → logprob: -10.935568809509277

Token 497: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11444518715143204
    2. 'n' → logprob: -4.114445209503174
    3. 'sum' → logprob: -4.114445209503174
    4. 'ans' → logprob: -4.364445209503174
    5. 'A' → logprob: -4.989445209503174
    6. '(ans' → logprob: -4.989445209503174
    7. 'ceil' → logprob: -5.114445209503174
    8. ' ' → logprob: -5.114445209503174
    9. 'B' → logprob: -5.239445209503174
    10. 'L' → logprob: -5.489445209503174

Token 498: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7384386658668518
    2. 'sum' → logprob: -1.113438606262207
    3. 'n' → logprob: -2.988438606262207
    4. 'A' → logprob: -3.488438606262207
    5. 'B' → logprob: -3.613438606262207
    6. '(sum' → logprob: -3.863438606262207
    7. 'pow' → logprob: -4.238438606262207
    8. 'ans' → logprob: -4.613438606262207
    9. 'L' → logprob: -4.613438606262207
    10. '(n' → logprob: -4.863438606262207

Token 499: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 500: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 501: ' ans' (ID: 3345)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16063545644283295
    2. 'while' → logprob: -2.035635471343994
    3. ' for' → logprob: -5.035635471343994
    4. 'n' → logprob: -5.535635471343994
    5. ' while' → logprob: -6.535635471343994
    6. '   ' → logprob: -6.660635471343994
    7. 'ans' (adapté à ' ans') → logprob: -7.160635471343994
    8. '
' → logprob: -7.410635471343994
    9. ')' → logprob: -7.535635471343994
    10. '```' → logprob: -7.660635471343994

Token 502: 'line' (ID: 1137)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 503: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20219886302947998
    2. ' =' → logprob: -1.70219886302948
    3. '<|end|>' → logprob: -8.20219898223877
    4. '[' → logprob: -8.32719898223877
    5. ' +=' → logprob: -9.20219898223877
    6. '+=' → logprob: -9.95219898223877
    7. '=[]' → logprob: -10.70219898223877
    8. ')' → logprob: -10.95219898223877
    9. ',' → logprob: -11.07719898223877
    10. ']' → logprob: -11.20219898223877

Token 504: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009788085706532001
    2. ' ' → logprob: -4.6347880363464355
    3. '[' → logprob: -11.509788513183594
    4. '   ' → logprob: -11.884788513183594
    5. '[]' → logprob: -12.634788513183594
    6. '1' → logprob: -12.634788513183594
    7. '(' → logprob: -13.134788513183594
    8. ' [' → logprob: -14.009788513183594
    9. ' (' → logprob: -14.447288513183594
    10. 'pow' → logprob: -14.509788513183594

Token 505: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.383526149671525e-05
    2. '1' → logprob: -11.000053405761719
    3. '(' → logprob: -12.125053405761719
    4. '[' → logprob: -12.250053405761719
    5. 'pow' → logprob: -12.375053405761719
    6. 'dou' → logprob: -12.500053405761719
    7. ' ' → logprob: -13.000053405761719
    8. 'sum' → logprob: -13.125053405761719
    9. '[]' → logprob: -13.125053405761719
    10. 'ans' → logprob: -13.125053405761719

Token 506: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 507: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 508: ' ch' (ID: 549)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 509: 'ouse' (ID: 1941)
  Prédit: 'ouse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouse' → logprob: -3.106736039626412e-05
    2. 'ose' → logprob: -10.875031471252441
    3. '```' → logprob: -12.750031471252441
    4. '=' → logprob: -13.000031471252441
    5. 'OUSE' → logprob: -13.125031471252441
    6. 'ousse' → logprob: -13.500031471252441
    7. 'o' → logprob: -13.750031471252441
    8. ' =' → logprob: -14.375031471252441
    9. 'ousel' → logprob: -14.625031471252441
    10. ' ' → logprob: -15.000031471252441

Token 510: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.3676733690081164e-05
    2. '=' → logprob: -10.87502384185791
    3. 'и' → logprob: -13.37502384185791
    4. ' =' → logprob: -13.87502384185791
    5. 'ि' → logprob: -14.87502384185791
    6. '```' → logprob: -15.12502384185791
    7. ''i' → logprob: -15.50002384185791
    8. '   ' → logprob: -15.75002384185791
    9. 'ï' → logprob: -15.75002384185791
    10. ' ' → logprob: -16.125022888183594

Token 511: '_map' (ID: 11824)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.630535900592804
    2. ' +=' → logprob: -1.2555358409881592
    3. ' =' → logprob: -2.005535840988159
    4. '+=' → logprob: -3.130535840988159
    5. '<|end|>' → logprob: -6.130536079406738
    6. '+' → logprob: -6.880536079406738
    7. ',' → logprob: -7.755536079406738
    8. ' ' → logprob: -8.505536079406738
    9. ' <<=' → logprob: -8.630536079406738
    10. ')' → logprob: -9.005536079406738

Token 512: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22615006566047668
    2. ' =' → logprob: -1.6011500358581543
    3. '={}' → logprob: -7.726150035858154
    4. '[' → logprob: -8.976150512695312
    5. '={' → logprob: -9.726150512695312
    6. '<|end|>' → logprob: -10.476150512695312
    7. '={}
' → logprob: -11.226150512695312
    8. ' ={' → logprob: -11.226150512695312
    9. '.setdefault' → logprob: -11.476150512695312
    10. '{' → logprob: -11.851150512695312

Token 513: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0007407767116092145
    2. ' {}' → logprob: -7.875741004943848
    3. 'dict' → logprob: -8.125741004943848
    4. '[]' → logprob: -10.125741004943848
    5. ' dict' → logprob: -11.500741004943848
    6. 'set' → logprob: -12.375741004943848
    7. '{' → logprob: -12.500741004943848
    8. '[' → logprob: -12.625741004943848
    9. '{}
' → logprob: -13.750741004943848
    10. '{})' → logprob: -14.375741004943848

Token 514: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 515: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.440178781747818
    2. ')' → logprob: -2.565178871154785
    3. '[' → logprob: -2.940178871154785
    4. ':' → logprob: -3.065178871154785
    5. '<|end|>' → logprob: -3.440178871154785
    6. '   ' → logprob: -3.565178871154785
    7. 'for' (adapté à ' for') → logprob: -3.815178871154785
    8. ' for' → logprob: -3.815178871154785
    9. '=' → logprob: -3.940178871154785
    10. '    ' → logprob: -4.440178871154785

Token 516: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.15289635956287384
    2. ' i' → logprob: -2.0278964042663574
    3. 'bit' → logprob: -5.652896404266357
    4. 'x' → logprob: -6.277896404266357
    5. 'j' → logprob: -6.652896404266357
    6. ' bit' → logprob: -7.402896404266357
    7. ' x' → logprob: -8.0278959274292
    8. 'b' → logprob: -8.1528959274292
    9. ' j' → logprob: -8.1528959274292
    10. 'k' → logprob: -8.2778959274292

Token 517: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4741526246070862
    2. 'in' → logprob: -0.9741526246070862
    3. ',' → logprob: -10.099152565002441
    4. ' ' → logprob: -10.474152565002441
    5. ')' → logprob: -13.974152565002441
    6. '_in' → logprob: -14.349152565002441
    7. '0' → logprob: -14.599152565002441
    8. '```' → logprob: -14.599152565002441
    9. ' ,' → logprob: -14.974152565002441
    10. '   ' → logprob: -14.974152565002441

Token 518: ' base' (ID: 3611)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.32143667340278625
    2. 'index' → logprob: -1.8214366436004639
    3. ' range' → logprob: -2.321436643600464
    4. ' index' → logprob: -4.446436882019043
    5. 'parts' → logprob: -5.946436882019043
    6. ' parts' → logprob: -8.071436882019043
    7. 'chain' → logprob: -9.446436882019043
    8. 'part' → logprob: -9.821436882019043
    9. '[' → logprob: -9.946436882019043
    10. '(' → logprob: -10.696436882019043

Token 519: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -0.0062118698842823505
    2. 'range' → logprob: -5.381211757659912
    3. '_set' → logprob: -7.381211757659912
    4. '_' → logprob: -7.881211757659912
    5. ')' → logprob: -8.50621223449707
    6. ':' → logprob: -9.50621223449707
    7. '_ranges' → logprob: -9.63121223449707
    8. '0' → logprob: -10.50621223449707
    9. ' ' → logprob: -10.88121223449707
    10. '_r' → logprob: -10.88121223449707

Token 520: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012352356687188148
    2. ':
' → logprob: -4.512352466583252
    3. ' in' → logprob: -7.012352466583252
    4. '   ' → logprob: -8.512351989746094
    5. 'in' → logprob: -9.887351989746094
    6. '<|end|>' → logprob: -10.137351989746094
    7. ' :' → logprob: -10.387351989746094
    8. ',' → logprob: -10.762351989746094
    9. '       ' → logprob: -10.887351989746094
    10. '[' → logprob: -11.387351989746094

Token 521: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16994698345661163
    2. '<|end|>' → logprob: -2.1699469089508057
    3. ' ' → logprob: -4.669947147369385
    4. '	' → logprob: -4.669947147369385
    5. '    ' → logprob: -4.919947147369385
    6. '   ' → logprob: -5.294947147369385
    7. '        ' → logprob: -6.044947147369385
    8. ' if' → logprob: -6.169947147369385
    9. ':' → logprob: -6.544947147369385
    10. ' 	' → logprob: -6.919947147369385

Token 522: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6662322878837585
    2. 'ch' → logprob: -1.9162323474884033
    3. '       ' → logprob: -2.4162323474884033
    4. '    ' → logprob: -2.6662323474884033
    5. 'if' (adapté à ' if') → logprob: -2.7912323474884033
    6. '   ' → logprob: -3.5412323474884033
    7. ' ' → logprob: -3.6662323474884033
    8. '<|end|>' → logprob: -3.7912323474884033
    9. ' ch' → logprob: -3.9162323474884033
    10. '        ' → logprob: -4.416232109069824

Token 523: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5831930637359619
    2. '(i' → logprob: -1.833193063735962
    3. '((' → logprob: -1.958193063735962
    4. ' ((' → logprob: -3.083193063735962
    5. '(n' → logprob: -3.583193063735962
    6. ' i' → logprob: -3.583193063735962
    7. 'i' → logprob: -4.958192825317383
    8. ' n' → logprob: -5.083192825317383
    9. '(((' → logprob: -5.208192825317383
    10. 'n' → logprob: -5.333192825317383

Token 524: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6813810467720032
    2. '(n' → logprob: -1.0563809871673584
    3. ' (' → logprob: -2.6813809871673584
    4. '((' → logprob: -3.5563809871673584
    5. ' n' → logprob: -4.1813812255859375
    6. '(i' → logprob: -5.0563812255859375
    7. '(ch' → logprob: -5.0563812255859375
    8. 'ch' → logprob: -5.6813812255859375
    9. ' ((' → logprob: -6.1813812255859375
    10. '(' → logprob: -6.1813812255859375

Token 525: '>>' (ID: 3920)
  Prédit: '>>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.009550427086651325
    2. ' >>' → logprob: -4.75955057144165
    3. ' &' → logprob: -8.759550094604492
    4. '>>(' → logprob: -8.884550094604492
    5. '>' → logprob: -9.009550094604492
    6. ')>>' → logprob: -9.134550094604492
    7. '>>&' → logprob: -9.384550094604492
    8. '&' → logprob: -9.384550094604492
    9. '>=' → logprob: -9.634550094604492
    10. ')' → logprob: -9.884550094604492

Token 526: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.596781946020201e-05
    2. ' i' → logprob: -10.125045776367188
    3. '```' → logprob: -13.250045776367188
    4. ')' → logprob: -14.000045776367188
    5. '1' → logprob: -14.125045776367188
    6. '   ' → logprob: -14.750045776367188
    7. ')i' → logprob: -15.125045776367188
    8. '(i' → logprob: -15.125045776367188
    9. '<|end|>' → logprob: -15.500045776367188
    10. '	i' → logprob: -15.625045776367188

Token 527: ')&' (ID: 34370)
  Prédit: ')&'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')&' → logprob: -0.20143215358257294
    2. ')' → logprob: -1.7014321088790894
    3. '&' → logprob: -11.576432228088379
    4. ' )' → logprob: -12.451432228088379
    5. '1' → logprob: -13.576432228088379
    6. ')==' → logprob: -13.951432228088379
    7. ')>>' → logprob: -14.201432228088379
    8. '   ' → logprob: -14.576432228088379
    9. '0' → logprob: -14.701432228088379
    10. ')&&' → logprob: -14.826432228088379

Token 528: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000156577822053805
    2. '0' → logprob: -8.87515640258789
    3. ' ' → logprob: -11.00015640258789
    4. '   ' → logprob: -18.12515640258789
    5. '
' → logprob: -18.50015640258789
    6. 'i' → logprob: -18.62515640258789
    7. '

' → logprob: -19.12515640258789
    8. '=' → logprob: -19.25015640258789
    9. '(' → logprob: -19.75015640258789
    10. '(i' → logprob: -19.75015640258789

Token 529: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6905764937400818
    2. ':
' → logprob: -0.9405764937400818
    3. '==' → logprob: -2.3155765533447266
    4. ' ==' → logprob: -4.690576553344727
    5. '):
' → logprob: -8.690576553344727
    6. '=' → logprob: -8.940576553344727
    7. ')==' → logprob: -10.565576553344727
    8. '!=' → logprob: -11.190576553344727
    9. '       ' → logprob: -11.440576553344727
    10. '==
' → logprob: -11.440576553344727

Token 530: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008091091178357601
    2. '           ' → logprob: -5.758090972900391
    3. '<|end|>' → logprob: -6.883090972900391
    4. ':
' → logprob: -7.008090972900391
    5. ':' → logprob: -7.133090972900391
    6. '        
' → logprob: -7.633090972900391
    7. ',' → logprob: -7.758090972900391
    8. '
' → logprob: -8.00809097290039
    9. '        ' → logprob: -8.50809097290039
    10. '   ' → logprob: -8.88309097290039

Token 531: ' ch' (ID: 549)
  Prédit: ' ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.06870816648006439
    2. ' ans' → logprob: -3.3187081813812256
    3. 'ch' (adapté à ' ch') → logprob: -3.8187081813812256
    4. '           ' → logprob: -5.4437079429626465
    5. 'ans' → logprob: -6.4437079429626465
    6. '   ' → logprob: -7.0687079429626465
    7. '
' → logprob: -7.4437079429626465
    8. '               ' → logprob: -7.5687079429626465
    9. '       ' → logprob: -9.443708419799805
    10. '```' → logprob: -9.818708419799805

Token 532: 'ouse' (ID: 1941)
  Prédit: 'ouse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouse' → logprob: -1.5570885807392187e-05
    2. 'ose' → logprob: -11.250015258789062
    3. '```' → logprob: -14.000015258789062
    4. '       ' → logprob: -15.000015258789062
    5. 'OUSE' → logprob: -15.000015258789062
    6. '   ' → logprob: -15.000015258789062
    7. 'oused' → logprob: -15.625015258789062
    8. 'ousel' → logprob: -15.875015258789062
    9. ' ' → logprob: -16.125015258789062
    10. 'uose' → logprob: -16.500015258789062

Token 533: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00020532844064291567
    2. '=' → logprob: -8.750205039978027
    3. '_map' → logprob: -11.250205039978027
    4. '   ' → logprob: -11.375205039978027
    5. ' ' → logprob: -12.750205039978027
    6. '       ' → logprob: -12.875205039978027
    7. ' =' → logprob: -13.125205039978027
    8. '_i' → logprob: -13.625205039978027
    9. 'is' → logprob: -13.625205039978027
    10. '_' → logprob: -13.750205039978027

Token 534: '_map' (ID: 11824)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.07503906637430191
    2. '+=' → logprob: -2.8250391483306885
    3. ' =' → logprob: -4.825038909912109
    4. '=' → logprob: -5.575038909912109
    5. ' |=' → logprob: -6.950038909912109
    6. ' <<=' → logprob: -9.45003890991211
    7. ')' → logprob: -10.57503890991211
    8. ']+=' → logprob: -10.57503890991211
    9. ' ^=' → logprob: -10.70003890991211
    10. '|' → logprob: -10.82503890991211

Token 535: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006047414499334991
    2. '[' → logprob: -7.750604629516602
    3. '[ch' → logprob: -9.375604629516602
    4. '=' → logprob: -10.125604629516602
    5. ' =' → logprob: -10.625604629516602
    6. ' [' → logprob: -11.250604629516602
    7. ' |=' → logprob: -12.500604629516602
    8. '[c' → logprob: -13.000604629516602
    9. '=i' → logprob: -14.000604629516602
    10. '   ' → logprob: -14.625604629516602

Token 536: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020867912098765373
    2. ']=' → logprob: -4.020867824554443
    3. '=' → logprob: -6.395867824554443
    4. ' =' → logprob: -7.020867824554443
    5. ')' → logprob: -9.895868301391602
    6. ' ]' → logprob: -10.020868301391602
    7. ']+=' → logprob: -10.520868301391602
    8. ']=(' → logprob: -11.020868301391602
    9. ')=' → logprob: -12.020868301391602
    10. ',' → logprob: -13.270868301391602

Token 537: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00983436219394207
    2. ' =' → logprob: -4.634834289550781
    3. ']' → logprob: -9.884834289550781
    4. ']=' → logprob: -10.884834289550781
    5. '+=' → logprob: -11.884834289550781
    6. ' +=' → logprob: -14.884834289550781
    7. ',' → logprob: -15.134834289550781
    8. ']+=' → logprob: -15.259834289550781
    9. ')' → logprob: -15.884834289550781
    10. ')=' → logprob: -16.00983428955078

Token 538: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.2839351296424866
    2. '(ch' → logprob: -2.158935070037842
    3. 'ans' → logprob: -2.408935070037842
    4. '(ans' → logprob: -3.658935070037842
    5. ' ch' → logprob: -4.783935070037842
    6. '(' → logprob: -5.783935070037842
    7. ' ans' → logprob: -6.533935070037842
    8. 'pow' → logprob: -6.783935070037842
    9. ' (' → logprob: -7.408935070037842
    10. '(n' → logprob: -8.033935546875

Token 539: 'ouse' (ID: 1941)
  Prédit: 'ouse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouse' → logprob: -0.006833652500063181
    2. '0' → logprob: -5.631833553314209
    3. 'ose' → logprob: -5.756833553314209
    4. 'uose' → logprob: -11.631834030151367
    5. 'ause' → logprob: -11.756834030151367
    6. '1' → logprob: -11.756834030151367
    7. 'o' → logprob: -11.881834030151367
    8. 'use' → logprob: -11.881834030151367
    9. ' ' → logprob: -12.006834030151367
    10. '=' → logprob: -12.256834030151367

Token 540: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00015264409012161195
    2. 'い' → logprob: -9.125152587890625
    3. 'ise' → logprob: -11.250152587890625
    4. 'is' → logprob: -11.750152587890625
    5. 'sei' → logprob: -12.250152587890625
    6. ' ' → logprob: -12.750152587890625
    7. '   ' → logprob: -12.875152587890625
    8. '=' → logprob: -13.375152587890625
    9. 'и' → logprob: -13.500152587890625
    10. '0' → logprob: -13.875152587890625

Token 541: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8605698347091675
    2. '
' → logprob: -0.9855698347091675
    3. ' +=' → logprob: -2.360569953918457
    4. ' +' → logprob: -2.735569953918457
    5. '+' → logprob: -3.485569953918457
    6. '+=' → logprob: -5.485569953918457
    7. '<|end|>' → logprob: -5.610569953918457
    8. ' =' → logprob: -7.110569953918457
    9. ' ' → logprob: -7.360569953918457
    10. '=' → logprob: -7.485569953918457

Token 542: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010148070752620697
    2. '<|end|>' → logprob: -4.760148048400879
    3. ' ch' → logprob: -7.385148048400879
    4. '       ' → logprob: -8.385148048400879
    5. '   ' → logprob: -9.010148048400879
    6. '<|end|>' → logprob: -9.135148048400879
    7. '               ' → logprob: -9.260148048400879
    8. ' =' → logprob: -10.010148048400879
    9. ',' → logprob: -10.010148048400879
    10. ' ' → logprob: -10.010148048400879

Token 543: ' ans' (ID: 3345)
  Prédit: ' ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.10279600322246552
    2. 'ch' → logprob: -2.3527960777282715
    3. '           ' → logprob: -5.9777960777282715
    4. '   ' → logprob: -10.727795600891113
    5. '	ch' → logprob: -11.227795600891113
    6. '       ' → logprob: -11.602795600891113
    7. '               ' → logprob: -12.977795600891113
    8. '                   ' → logprob: -13.852795600891113
    9. ',ch' → logprob: -14.602795600891113
    10. '_ch' → logprob: -14.602795600891113

Token 544: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0012541614705696702
    2. 'const' → logprob: -7.376254081726074
    3. '+=' → logprob: -8.126254081726074
    4. '=' → logprob: -8.626254081726074
    5. ' +=' → logprob: -10.001254081726074
    6. ' =' → logprob: -10.626254081726074
    7. '_' → logprob: -11.001254081726074
    8. '_line' → logprob: -11.001254081726074
    9. '_ans' → logprob: -11.251254081726074
    10. '=line' → logprob: -11.251254081726074

Token 545: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2882404923439026
    2. ' +=' → logprob: -1.7882404327392578
    3. '=' → logprob: -2.538240432739258
    4. ' =' → logprob: -5.538240432739258
    5. '+' → logprob: -9.163240432739258
    6. '+=(' → logprob: -10.288240432739258
    7. ']+=' → logprob: -10.413240432739258
    8. '```' → logprob: -10.538240432739258
    9. '%=' → logprob: -12.038240432739258
    10. ' ^=' → logprob: -12.288240432739258

Token 546: ' (' (ID: 350)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.004767834208905697
    2. ' (' → logprob: -5.879767894744873
    3. '(' → logprob: -6.504767894744873
    4. '(d' → logprob: -8.004767417907715
    5. '(ch' → logprob: -9.629767417907715
    6. '   ' → logprob: -11.254767417907715
    7. '(abs' → logprob: -11.379767417907715
    8. '(arr' → logprob: -11.879767417907715
    9. '(ord' → logprob: -12.254767417907715
    10. '(dd' → logprob: -12.504767417907715

Token 547: 'ans' (ID: 616)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.1376314014196396
    2. 'ans' → logprob: -2.637631416320801
    3. 'dou' → logprob: -3.387631416320801
    4. '(d' → logprob: -3.887631416320801
    5. '(' → logprob: -6.762631416320801
    6. 'double' → logprob: -8.1376314163208
    7. ' (' → logprob: -8.3876314163208
    8. 'd' → logprob: -8.3876314163208
    9. '(double' → logprob: -8.5126314163208
    10. ' ans' → logprob: -8.6376314163208

Token 548: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -3.5954712075181305e-05
    2. '+' → logprob: -11.750036239624023
    3. '(line' → logprob: -12.000036239624023
    4. ')' → logprob: -12.375036239624023
    5. ' +' → logprob: -12.375036239624023
    6. 'const' → logprob: -12.625036239624023
    7. '[line' → logprob: -13.375036239624023
    8. '   ' → logprob: -13.500036239624023
    9. ' line' → logprob: -14.000036239624023
    10. '           ' → logprob: -14.000036239624023

Token 549: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.27615824341773987
    2. '+' → logprob: -2.026158332824707
    3. ' *' → logprob: -2.526158332824707
    4. '*' → logprob: -3.526158332824707
    5. ' ' → logprob: -10.276158332824707
    6. ')' → logprob: -10.776158332824707
    7. ' +
' → logprob: -12.401158332824707
    8. '   ' → logprob: -12.776158332824707
    9. '<<' → logprob: -12.901158332824707
    10. '*(' → logprob: -13.151158332824707

Token 550: ' ((' (ID: 3536)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.043986786156892776
    2. '(d' → logprob: -3.4189867973327637
    3. ' doubling' → logprob: -5.668986797332764
    4. 'pow' → logprob: -5.918986797332764
    5. '(pow' → logprob: -6.668986797332764
    6. '((' → logprob: -6.793986797332764
    7. ' (' → logprob: -8.043986320495605
    8. 'd' → logprob: -8.043986320495605
    9. '(' → logprob: -8.293986320495605
    10. '   ' → logprob: -8.918986320495605

Token 551: 'dou' (ID: 122443)
  Prédit: 'dou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.4356687664985657
    2. 'pow' → logprob: -1.060668706893921
    3. '(pow' → logprob: -6.3106689453125
    4. '2' → logprob: -6.6856689453125
    5. 'M' → logprob: -7.6856689453125
    6. 'n' → logprob: -7.6856689453125
    7. '((' → logprob: -7.8106689453125
    8. '(' → logprob: -7.9356689453125
    9. '(d' → logprob: -8.3106689453125
    10. '(M' → logprob: -8.3106689453125

Token 552: 'bling' (ID: 11037)
  Prédit: 'bling'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bling' → logprob: -0.01429431326687336
    2. 'bl' → logprob: -5.014294147491455
    3. 'ble' → logprob: -5.889294147491455
    4. 'b' → logprob: -6.264294147491455
    5. ')' → logprob: -6.639294147491455
    6. 'pling' → logprob: -7.764294147491455
    7. 'dou' → logprob: -8.889294624328613
    8. '```' → logprob: -9.264294624328613
    9. 'cing' → logprob: -9.389294624328613
    10. '_' → logprob: -9.639294624328613

Token 553: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0060962350107729435
    2. 'const' → logprob: -5.131096363067627
    3. ')' → logprob: -9.631095886230469
    4. '
' → logprob: -10.881095886230469
    5. ' line' → logprob: -12.006095886230469
    6. 'linear' → logprob: -12.006095886230469
    7. '_' → logprob: -12.006095886230469
    8. '_line' → logprob: -12.131095886230469
    9. '_const' → logprob: -12.381095886230469
    10. '   ' → logprob: -12.381095886230469

Token 554: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00018339496455155313
    2. '[' → logprob: -9.00018310546875
    3. '<|end|>' → logprob: -10.12518310546875
    4. 'i' → logprob: -12.00018310546875
    5. ')[' → logprob: -12.12518310546875
    6. '[
' → logprob: -13.37518310546875
    7. ' [' → logprob: -13.37518310546875
    8. '[n' → logprob: -14.12518310546875
    9. ' i' → logprob: -14.62518310546875
    10. ')' → logprob: -14.62518310546875

Token 555: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.010253445245325565
    2. '][' → logprob: -4.885253429412842
    3. ']' → logprob: -6.260253429412842
    4. '[' → logprob: -8.26025390625
    5. '-' → logprob: -8.63525390625
    6. ']%' → logprob: -10.13525390625
    7. '   ' → logprob: -10.51025390625
    8. ']*' → logprob: -10.51025390625
    9. ')[' → logprob: -10.63525390625
    10. '
' → logprob: -10.76025390625

Token 556: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6071089506149292
    2. ')*' → logprob: -1.4821089506149292
    3. ' *' → logprob: -1.8571089506149292
    4. '*' → logprob: -3.8571090698242188
    5. '%' → logprob: -4.107109069824219
    6. ')%' → logprob: -4.357109069824219
    7. '+' → logprob: -4.857109069824219
    8. '   ' → logprob: -5.982109069824219
    9. ')*(' → logprob: -6.107109069824219
    10. ' ' → logprob: -6.357109069824219

Token 557: ' ch' (ID: 549)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.9589543342590332
    2. 'ch' → logprob: -1.0839543342590332
    3. 'pow' → logprob: -2.208954334259033
    4. '(ch' → logprob: -2.583954334259033
    5. 'ans' → logprob: -3.708954334259033
    6. '((' → logprob: -4.333954334259033
    7. 'ex' → logprob: -4.458954334259033
    8. 'M' → logprob: -5.208954334259033
    9. '(ans' → logprob: -5.208954334259033
    10. '(pow' → logprob: -5.333954334259033

Token 558: 'ouse' (ID: 1941)
  Prédit: 'ouse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouse' → logprob: -4.036524842376821e-05
    2. 'ose' → logprob: -10.125040054321289
    3. 'ause' → logprob: -16.62504005432129
    4. 'uose' → logprob: -16.75004005432129
    5. '```' → logprob: -16.75004005432129
    6. 'OUSE' → logprob: -17.00004005432129
    7. ')' → logprob: -17.87504005432129
    8. 'o' → logprob: -17.87504005432129
    9. 'oise' → logprob: -18.12504005432129
    10. '

' → logprob: -19.62504005432129

Token 559: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0025429665111005306
    2. 'oi' → logprob: -6.127542972564697
    3. 'o' → logprob: -8.252542495727539
    4. 'oise' → logprob: -10.627542495727539
    5. 'u' → logprob: -11.127542495727539
    6. 'ise' → logprob: -11.377542495727539
    7. 'sei' → logprob: -11.502542495727539
    8. 'is' → logprob: -11.627542495727539
    9. '```' → logprob: -12.377542495727539
    10. 'ei' → logprob: -12.752542495727539

Token 560: '*d' (ID: 81685)
  Prédit: '_map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.4571297764778137
    2. ')' → logprob: -1.457129716873169
    3. '*' → logprob: -2.832129716873169
    4. ' *' → logprob: -3.332129716873169
    5. '))' → logprob: -4.457129955291748
    6. ')*' → logprob: -4.582129955291748
    7. '[i' → logprob: -5.457129955291748
    8. '   ' → logprob: -5.582129955291748
    9. '])' → logprob: -5.957129955291748
    10. '*i' → logprob: -6.207129955291748

Token 561: 'ou' (ID: 283)
  Prédit: 'ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.5014901161193848
    2. 'pow' → logprob: -1.2514901161193848
    3. 'ouble' → logprob: -3.5014901161193848
    4. 'oub' → logprob: -4.251490116119385
    5. ')' → logprob: -4.376490116119385
    6. '(pow' → logprob: -5.001490116119385
    7. '```' → logprob: -5.626490116119385
    8. 'ow' → logprob: -5.751490116119385
    9. '(' → logprob: -5.751490116119385
    10. 'oul' → logprob: -6.001490116119385

Token 562: 'bling' (ID: 11037)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -1.3147075176239014
    2. ')' → logprob: -1.5647075176239014
    3. 'ce' → logprob: -2.1897075176239014
    4. 'oi' → logprob: -2.4397075176239014
    5. '_' → logprob: -2.6897075176239014
    6. 'cei' → logprob: -3.3147075176239014
    7. 'ice' → logprob: -3.6897075176239014
    8. '1' → logprob: -3.8147075176239014
    9. 'c' → logprob: -4.4397077560424805
    10. '(' → logprob: -4.5647077560424805

Token 563: 'const' (ID: 1671)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.5236619114875793
    2. 'const' → logprob: -0.8986619114875793
    3. '_const' → logprob: -8.398661613464355
    4. '   ' → logprob: -10.273661613464355
    5. '```' → logprob: -10.273661613464355
    6. ' const' → logprob: -10.398661613464355
    7. '_' → logprob: -10.648661613464355
    8. '_line' → logprob: -10.773661613464355
    9. 'range' → logprob: -11.398661613464355
    10. ')' → logprob: -11.648661613464355

Token 564: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.2729995988775045e-06
    2. 'i' → logprob: -12.125006675720215
    3. '[' → logprob: -14.750006675720215
    4. '
' → logprob: -15.750006675720215
    5. '(i' → logprob: -16.3750057220459
    6. ' i' → logprob: -17.1250057220459
    7. 'import' → logprob: -17.6250057220459
    8. '[
' → logprob: -17.8750057220459
    9. ')' → logprob: -18.0000057220459
    10. '```' → logprob: -18.2500057220459

Token 565: '])' (ID: 4636)
  Prédit: ')%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.7187115550041199
    2. '])' → logprob: -1.2187116146087646
    3. '[i' → logprob: -1.8437116146087646
    4. ')' → logprob: -2.9687116146087646
    5. ']%' → logprob: -4.9687113761901855
    6. ' )' → logprob: -8.593711853027344
    7. '   ' → logprob: -9.593711853027344
    8. ']' → logprob: -9.718711853027344
    9. ')])' → logprob: -10.218711853027344
    10. '))' → logprob: -10.218711853027344

Token 566: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07054050266742706
    2. ')%' → logprob: -2.695540428161621
    3. ' )' → logprob: -7.695540428161621
    4. '%' → logprob: -9.820540428161621
    5. '   ' → logprob: -9.945540428161621
    6. '))' → logprob: -10.320540428161621
    7. '       ' → logprob: -12.695540428161621
    8. '*' → logprob: -12.820540428161621
    9. ')*' → logprob: -13.320540428161621
    10. '+' → logprob: -14.070540428161621

Token 567: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.008233699947595596
    2. '(pow' → logprob: -5.883233547210693
    3. '((' → logprob: -6.383233547210693
    4. '(' → logprob: -7.258233547210693
    5. 'ex' → logprob: -7.383233547210693
    6. 'B' → logprob: -7.508233547210693
    7. '1' → logprob: -7.508233547210693
    8. 'A' → logprob: -8.383234024047852
    9. 'ans' → logprob: -8.383234024047852
    10. ' pow' → logprob: -8.758234024047852

Token 568: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.673547563375905e-05
    2. '(pow' → logprob: -10.000086784362793
    3. '10' → logprob: -10.125086784362793
    4. 'pow' → logprob: -14.250086784362793
    5. ' (' → logprob: -15.125086784362793
    6. '((' → logprob: -16.250085830688477
    7. '(
' → logprob: -16.500085830688477
    8. '```' → logprob: -16.500085830688477
    9. 'def' → logprob: -17.875085830688477
    10. '(base' → logprob: -18.000085830688477

Token 569: '10' (ID: 702)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029859595000743866
    2. '10' → logprob: -3.5298595428466797
    3. '(pow' → logprob: -9.52985954284668
    4. ')' → logprob: -11.27985954284668
    5. 'pow' → logprob: -11.27985954284668
    6. '```' → logprob: -12.77985954284668
    7. 'def' → logprob: -13.15485954284668
    8. ' (' → logprob: -13.65485954284668
    9. ' ' → logprob: -14.15485954284668
    10. '
' → logprob: -14.52985954284668

Token 570: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018009696155786514
    2. '(' → logprob: -4.643009662628174
    3. ',l' → logprob: -5.768009662628174
    4. '(l' → logprob: -6.018009662628174
    5. ' ,' → logprob: -6.143009662628174
    6. ' l' → logprob: -8.893010139465332
    7. ' (' → logprob: -9.143010139465332
    8. ')' → logprob: -9.518010139465332
    9. ',
' → logprob: -10.018010139465332
    10. 'l' → logprob: -10.643010139465332

Token 571: ' ch' (ID: 549)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.24784648418426514
    2. '(l' → logprob: -1.9978464841842651
    3. '(i' → logprob: -3.3728466033935547
    4. '((' → logprob: -4.247846603393555
    5. 'L' → logprob: -4.372846603393555
    6. 'ch' → logprob: -4.997846603393555
    7. '(L' → logprob: -5.247846603393555
    8. 'i' → logprob: -5.997846603393555
    9. '(' → logprob: -6.622846603393555
    10. '(ch' → logprob: -6.872846603393555

Token 572: 'ouse' (ID: 1941)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0275020599365234
    2. '*l' → logprob: -1.4025020599365234
    3. ')' → logprob: -1.5275020599365234
    4. ',' → logprob: -3.1525020599365234
    5. 'ouse' → logprob: -3.4025020599365234
    6. ' l' → logprob: -4.027502059936523
    7. '```' → logprob: -4.027502059936523
    8. 'i' → logprob: -4.402502059936523
    9. '*' → logprob: -4.527502059936523
    10. ' ' → logprob: -5.152502059936523

Token 573: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.317247167928144e-05
    2. ' ' → logprob: -10.000093460083008
    3. '   ' → logprob: -11.375093460083008
    4. 'oi' → logprob: -12.000093460083008
    5. '```' → logprob: -12.500093460083008
    6. 'и' → logprob: -12.625093460083008
    7. ')' → logprob: -13.000093460083008
    8. '*i' → logprob: -13.125093460083008
    9. ' i' → logprob: -13.250093460083008
    10. '  ' → logprob: -13.625093460083008

Token 574: '*l' (ID: 176337)
  Prédit: '*l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*l' → logprob: -0.014295728877186775
    2. ' *' → logprob: -4.38929557800293
    3. '*' → logprob: -7.01429557800293
    4. 'l' → logprob: -7.76429557800293
    5. '*i' → logprob: -8.26429557800293
    6. '```' → logprob: -9.63929557800293
    7. '*(' → logprob: -9.76429557800293
    8. ',' → logprob: -10.88929557800293
    9. '   ' → logprob: -11.13929557800293
    10. ' l' → logprob: -11.63929557800293

Token 575: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011571277864277363
    2. ' ,' → logprob: -7.376157283782959
    3. '%' → logprob: -8.2511568069458
    4. ',M' → logprob: -9.1261568069458
    5. '   ' → logprob: -10.3761568069458
    6. '*M' → logprob: -10.7511568069458
    7. ')' → logprob: -11.0011568069458
    8. '))' → logprob: -11.1261568069458
    9. '       ' → logprob: -11.3761568069458
    10. ')%' → logprob: -11.5011568069458

Token 576: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0013383356854319572
    2. ' M' → logprob: -6.626338481903076
    3. '   ' → logprob: -12.626338005065918
    4. '```' → logprob: -12.876338005065918
    5. '
' → logprob: -13.501338005065918
    6. '           ' → logprob: -14.126338005065918
    7. ' ' → logprob: -14.126338005065918
    8. '       ' → logprob: -14.251338005065918
    9. '(M' → logprob: -14.751338005065918
    10. '  ' → logprob: -14.751338005065918

Token 577: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33397147059440613
    2. '))' → logprob: -1.3339715003967285
    3. ')%' → logprob: -3.9589715003967285
    4. ')))' → logprob: -7.4589715003967285
    5. ' )' → logprob: -7.9589715003967285
    6. '   ' → logprob: -8.20897102355957
    7. ' ))' → logprob: -9.33397102355957
    8. '       ' → logprob: -10.08397102355957
    9. '           ' → logprob: -10.20897102355957
    10. ')
' → logprob: -11.08397102355957

Token 578: '%' (ID: 4)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22618959844112396
    2. ')%' → logprob: -1.6011896133422852
    3. ' )' → logprob: -7.351189613342285
    4. '%' → logprob: -9.851189613342285
    5. '   ' → logprob: -10.101189613342285
    6. '           ' → logprob: -10.851189613342285
    7. '       ' → logprob: -11.476189613342285
    8. '```' → logprob: -13.101189613342285
    9. '+' → logprob: -13.351189613342285
    10. '%)' → logprob: -13.851189613342285

Token 579: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -7.226628895296017e-06
    2. ' M' → logprob: -12.375007629394531
    3. '```' → logprob: -13.750007629394531
    4. ')' → logprob: -14.000007629394531
    5. '(M' → logprob: -15.750007629394531
    6. 'B' → logprob: -16.00000762939453
    7. ' ' → logprob: -16.00000762939453
    8. '
' → logprob: -16.25000762939453
    9. '(' → logprob: -16.50000762939453
    10. '1' → logprob: -17.12500762939453

Token 580: ' )' (ID: 1546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01374759990721941
    2. '           ' → logprob: -4.513747692108154
    3. ' )' → logprob: -6.513747692108154
    4. ')%' → logprob: -7.638747692108154
    5. '+' → logprob: -8.638747215270996
    6. ')
' → logprob: -8.888747215270996
    7. ' +' → logprob: -9.138747215270996
    8. ')+' → logprob: -9.763747215270996
    9. '       ' → logprob: -9.888747215270996
    10. ')\' → logprob: -10.138747215270996

Token 581: '%' (ID: 4)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3636173605918884
    2. '<|end|>' → logprob: -1.4886174201965332
    3. '           ' → logprob: -3.613617420196533
    4. ' 
' → logprob: -4.238617420196533
    5. '\n' → logprob: -4.488617420196533
    6. '+' → logprob: -5.488617420196533
    7. '<|end|>' → logprob: -5.488617420196533
    8. '```' → logprob: -5.988617420196533
    9. '            
' → logprob: -6.113617420196533
    10. ')' → logprob: -6.238617420196533

Token 582: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -1.688212614681106e-05
    2. ' M' → logprob: -11.000017166137695
    3. '```' → logprob: -16.125017166137695
    4. ' ' → logprob: -17.250017166137695
    5. ')' → logprob: -17.250017166137695
    6. '(M' → logprob: -17.500017166137695
    7. '(' → logprob: -18.625017166137695
    8. '<|end|>' → logprob: -19.250017166137695
    9. '
' → logprob: -19.625017166137695
    10. '`' → logprob: -19.750017166137695

Token 583: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 584: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 585: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' (adapté à ' ch') → logprob: -0.033642932772636414
    2. ' ch' → logprob: -4.158642768859863
    3. '	ch' → logprob: -4.908642768859863
    4. '   ' → logprob: -5.283642768859863
    5. '           ' → logprob: -5.408642768859863
    6. '       ' → logprob: -8.533642768859863
    7. '```' → logprob: -9.533642768859863
    8. '\t' → logprob: -10.158642768859863
    9. '<|end|>' → logprob: -10.658642768859863
    10. ' ' → logprob: -10.908642768859863

Token 586: 'ouse' (ID: 1941)
  Prédit: 'ouse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouse' → logprob: -4.203409844194539e-05
    2. 'ose' → logprob: -10.125041961669922
    3. 'o' → logprob: -15.000041961669922
    4. 'oused' → logprob: -15.000041961669922
    5. '```' → logprob: -15.125041961669922
    6. 'ous' → logprob: -15.125041961669922
    7. 'ou' → logprob: -15.500041961669922
    8. 'ause' → logprob: -15.625041961669922
    9. 'ouses' → logprob: -16.000041961669922
    10. 'OUSE' → logprob: -16.500041961669922

Token 587: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.292907877039397e-06
    2. 'い' → logprob: -13.87500286102295
    3. 'и' → logprob: -14.75000286102295
    4. '   ' → logprob: -14.87500286102295
    5. ' ' → logprob: -15.00000286102295
    6. '_i' → logprob: -15.12500286102295
    7. '=' → logprob: -15.50000286102295
    8. '­i' → logprob: -15.62500286102295
    9. '```' → logprob: -16.000003814697266
    10. 'і' → logprob: -16.750003814697266

Token 588: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.003106296295300126
    2. ' +=' → logprob: -6.003106117248535
    3. '=' → logprob: -7.378106117248535
    4. ']+=' → logprob: -12.628106117248535
    5. '+' → logprob: -14.378106117248535
    6. '+=(' → logprob: -14.753106117248535
    7. '   ' → logprob: -15.003106117248535
    8. '-=' → logprob: -15.003106117248535
    9. '+='' → logprob: -15.253106117248535
    10. '```' → logprob: -15.753106117248535

Token 589: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3389660120010376
    2. '2' → logprob: -1.4639660120010376
    3. 'pow' → logprob: -2.963965892791748
    4. 'B' → logprob: -6.088965892791748
    5. ' ' → logprob: -6.963965892791748
    6. '(' → logprob: -7.213965892791748
    7. 'A' → logprob: -8.963966369628906
    8. '(pow' → logprob: -9.088966369628906
    9. ' pow' → logprob: -9.213966369628906
    10. '10' → logprob: -9.588966369628906

Token 590: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38213616609573364
    2. 'pow' → logprob: -1.2571361064910889
    3. '2' → logprob: -4.007136344909668
    4. 'B' → logprob: -4.757136344909668
    5. '(' → logprob: -5.882136344909668
    6. 'ceil' → logprob: -7.257136344909668
    7. '(pow' → logprob: -7.632136344909668
    8. 'l' → logprob: -7.757136344909668
    9. 'A' → logprob: -7.882136344909668
    10. '10' → logprob: -8.007136344909668

Token 591: '**' (ID: 410)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3631177544593811
    2. '<|end|>' → logprob: -1.2381176948547363
    3. '
' → logprob: -5.238117694854736
    4. ' return' → logprob: -5.738117694854736
    5. ' ' → logprob: -6.363117694854736
    6. ')' → logprob: -6.488117694854736
    7. '	return' → logprob: -6.988117694854736
    8. 'return' → logprob: -7.613117694854736
    9. '<|end|>' → logprob: -8.363118171691895
    10. '  ' → logprob: -8.738118171691895

Token 592: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00019901065388694406
    2. '(' → logprob: -8.625199317932129
    3. '(i' → logprob: -11.000199317932129
    4. 'ch' → logprob: -13.750199317932129
    5. ' i' → logprob: -14.250199317932129
    6. '_i' → logprob: -15.250199317932129
    7. '(ch' → logprob: -15.625199317932129
    8. '```' → logprob: -15.625199317932129
    9. ' (' → logprob: -16.250198364257812
    10. '0' → logprob: -16.250198364257812

Token 593: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6729564666748047
    2. '<|end|>' → logprob: -0.7979564666748047
    3. ')' → logprob: -3.4229564666748047
    4. '
' → logprob: -5.422956466674805
    5. ' ' → logprob: -7.422956466674805
    6. '<|end|>' → logprob: -8.172956466674805
    7. ' return' → logprob: -8.297956466674805
    8. '```' → logprob: -8.297956466674805
    9. '	return' → logprob: -8.547956466674805
    10. 'return' → logprob: -8.797956466674805

Token 594: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 595: ' return' (ID: 622)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26200032234191895
    2. '<|end|>' → logprob: -1.512000322341919
    3. ':' → logprob: -5.38700008392334
    4. '
' → logprob: -6.63700008392334
    5. '```' → logprob: -6.63700008392334
    6. '   ' → logprob: -6.88700008392334
    7. ':return' → logprob: -8.13700008392334
    8. '<|end|>' → logprob: -8.38700008392334
    9. '):' → logprob: -8.51200008392334
    10. ')
' → logprob: -9.01200008392334

Token 596: ' (' (ID: 350)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.050441719591617584
    2. 'ans' → logprob: -3.0504417419433594
    3. ' (' → logprob: -6.800441741943359
    4. '(' → logprob: -7.675441741943359
    5. ' ans' → logprob: -8.42544174194336
    6. '   ' → logprob: -10.67544174194336
    7. '((' → logprob: -10.92544174194336
    8. '	ans' → logprob: -12.92544174194336
    9. '0' → logprob: -13.05044174194336
    10. '```' → logprob: -13.30044174194336

Token 597: 'ans' (ID: 616)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.3486805558204651
    2. 'ans' → logprob: -1.2236804962158203
    3. '(' → logprob: -9.59868049621582
    4. ' ans' → logprob: -9.72368049621582
    5. ' (' → logprob: -9.97368049621582
    6. '((' → logprob: -11.09868049621582
    7. '   ' → logprob: -11.34868049621582
    8. '	ans' → logprob: -11.59868049621582
    9. '(answer' → logprob: -12.72368049621582
    10. '_ans' → logprob: -12.72368049621582

Token 598: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.10628914088010788
    2. 'const' → logprob: -2.3562891483306885
    3. ')' → logprob: -5.231288909912109
    4. ',' → logprob: -8.10628890991211
    5. '_' → logprob: -8.85628890991211
    6. '_const' → logprob: -9.60628890991211
    7. '_,' → logprob: -9.60628890991211
    8. '_line' → logprob: -9.73128890991211
    9. '#line' → logprob: -11.48128890991211
    10. '_)' → logprob: -11.85628890991211

Token 599: '*a' (ID: 78448)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.26751118898391724
    2. '+' → logprob: -1.7675111293792725
    3. ',' → logprob: -2.7675111293792725
    4. ' ,' → logprob: -7.767511367797852
    5. ')' → logprob: -8.267511367797852
    6. '   ' → logprob: -8.267511367797852
    7. ' +
' → logprob: -10.017511367797852
    8. '+,' → logprob: -10.017511367797852
    9. '+
' → logprob: -10.767511367797852
    10. ',
' → logprob: -11.142511367797852

Token 600: '%' (ID: 4)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04609549790620804
    2. ' ,' → logprob: -3.546095609664917
    3. ',b' → logprob: -4.671095371246338
    4. ',a' → logprob: -6.046095371246338
    5. ')' → logprob: -6.546095371246338
    6. ' %' → logprob: -6.921095371246338
    7. '%' → logprob: -6.921095371246338
    8. '[' → logprob: -8.296095848083496
    9. '[a' → logprob: -9.046095848083496
    10. ')%' → logprob: -9.421095848083496

Token 601: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0008214225526899099
    2. ' M' → logprob: -7.125821590423584
    3. 'B' → logprob: -11.375821113586426
    4. ' ' → logprob: -12.500821113586426
    5. '```' → logprob: -14.375821113586426
    6. ')' → logprob: -14.875821113586426
    7. '100' → logprob: -15.125821113586426
    8. '(' → logprob: -15.500821113586426
    9. 'b' → logprob: -15.875821113586426
    10. '`' → logprob: -17.250822067260742

Token 602: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6662046313285828
    2. ')' → logprob: -1.2912046909332275
    3. ' +' → logprob: -2.0412046909332275
    4. '+' → logprob: -3.2912046909332275
    5. ' ,' → logprob: -3.5412046909332275
    6. ' *' → logprob: -5.416204452514648
    7. '*' → logprob: -6.166204452514648
    8. '%' → logprob: -6.541204452514648
    9. ' )' → logprob: -6.791204452514648
    10. '),' → logprob: -7.041204452514648

Token 603: ' ans' (ID: 3345)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2826957404613495
    2. 'ans' → logprob: -1.7826957702636719
    3. '(ans' → logprob: -3.157695770263672
    4. ' ans' → logprob: -4.282695770263672
    5. ' b' → logprob: -4.657695770263672
    6. '(b' → logprob: -4.782695770263672
    7. ' (' → logprob: -6.407695770263672
    8. '((' → logprob: -6.657695770263672
    9. 'a' → logprob: -8.657695770263672
    10. '(' → logprob: -8.657695770263672

Token 604: 'const' (ID: 1671)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6330024600028992
    2. 'const' → logprob: -0.7580024600028992
    3. 'c' → logprob: -9.008002281188965
    4. '_b' → logprob: -9.633002281188965
    5. '_const' → logprob: -10.008002281188965
    6. '*b' → logprob: -10.258002281188965
    7. ')' → logprob: -10.508002281188965
    8. 'B' → logprob: -11.383002281188965
    9. ' b' → logprob: -11.633002281188965
    10. 'con' → logprob: -11.633002281188965

Token 605: '*b' (ID: 72162)
  Prédit: '*b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*b' → logprob: -0.6296592354774475
    2. ')' → logprob: -0.8796592354774475
    3. ' *' → logprob: -3.6296591758728027
    4. '*' → logprob: -4.754659175872803
    5. ')%' → logprob: -4.879659175872803
    6. '%b' → logprob: -5.629659175872803
    7. '%' → logprob: -5.754659175872803
    8. ')b' → logprob: -7.129659175872803
    9. ' )' → logprob: -7.254659175872803
    10. '*a' → logprob: -7.504659175872803

Token 606: '%' (ID: 4)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02709398791193962
    2. ')%' → logprob: -3.6520938873291016
    3. ' )' → logprob: -8.152093887329102
    4. '%' → logprob: -8.402093887329102
    5. ')>>' → logprob: -9.027093887329102
    6. '   ' → logprob: -9.152093887329102
    7. ')<<' → logprob: -11.527093887329102
    8. '<|end|>' → logprob: -12.027093887329102
    9. ' %' → logprob: -12.277093887329102
    10. ',' → logprob: -12.402093887329102

Token 607: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -1.0802738870552275e-05
    2. ')' → logprob: -12.00001049041748
    3. ' M' → logprob: -12.37501049041748
    4. '```' → logprob: -15.62501049041748
    5. ' ' → logprob: -16.375011444091797
    6. '`' → logprob: -17.750011444091797
    7. '(' → logprob: -18.500011444091797
    8. '
' → logprob: -18.625011444091797
    9. '(M' → logprob: -18.750011444091797
    10. '`)' → logprob: -19.000011444091797

Token 608: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.289473822107539e-05
    2. ' )' → logprob: -10.250062942504883
    3. ')%' → logprob: -11.500062942504883
    4. ')return' → logprob: -12.625062942504883
    5. '   ' → logprob: -12.750062942504883
    6. ')
' → logprob: -12.875062942504883
    7. ',' → logprob: -13.250062942504883
    8. ')#' → logprob: -14.000062942504883
    9. ')>>' → logprob: -14.125062942504883
    10. '),' → logprob: -14.375062942504883

Token 609: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -1.771655115589965e-05
    2. '(M' → logprob: -11.625018119812012
    3. ' M' → logprob: -12.250018119812012
    4. '```' → logprob: -13.375018119812012
    5. '(' → logprob: -13.750018119812012
    6. '`' → logprob: -15.125018119812012
    7. '[M' → logprob: -15.875018119812012
    8. '
' → logprob: -15.875018119812012
    9. ' ' → logprob: -16.000017166137695
    10. ')' → logprob: -16.250017166137695

Token 610: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 611: 'start' (ID: 5236)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8738520741462708
    2. ')' → logprob: -0.8738520741462708
    3. '<|end|>' → logprob: -2.748852014541626
    4. '[' → logprob: -3.248852014541626
    5. ' ' → logprob: -3.498852014541626
    6. ':' → logprob: -4.498852252960205
    7. '```' → logprob: -5.498852252960205
    8. ',' → logprob: -5.498852252960205
    9. '=' → logprob: -5.998852252960205
    10. '(
' → logprob: -6.373852252960205

Token 612: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2680898904800415
    2. ',' → logprob: -1.3930898904800415
    3. '=' → logprob: -1.5180898904800415
    4. '(' → logprob: -2.518089771270752
    5. '<|end|>' → logprob: -3.018089771270752
    6. ' =' → logprob: -3.268089771270752
    7. ':' → logprob: -3.518089771270752
    8. '[' → logprob: -4.018089771270752
    9. ')' → logprob: -4.268089771270752
    10. 'def' → logprob: -4.893089771270752

Token 613: ' len' (ID: 4631)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10473596304655075
    2. 'A' → logprob: -2.729735851287842
    3. 'L' → logprob: -4.479735851287842
    4. 'B' → logprob: -4.729735851287842
    5. ' ' → logprob: -5.354735851287842
    6. '(' → logprob: -5.479735851287842
    7. ' A' → logprob: -6.729735851287842
    8. '1' → logprob: -7.229735851287842
    9. '(A' → logprob: -7.354735851287842
    10. ' L' → logprob: -7.729735851287842

Token 614: '(str' (ID: 7946)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -1.0400185585021973
    2. '(' → logprob: -1.4150185585021973
    3. '(start' → logprob: -1.5400185585021973
    4. '(input' → logprob: -2.1650185585021973
    5. '(L' → logprob: -3.4150185585021973
    6. '(str' → logprob: -3.7900185585021973
    7. '(B' → logprob: -5.665018558502197
    8. '(a' → logprob: -6.415018558502197
    9. '(range' → logprob: -6.415018558502197
    10. '(
' → logprob: -6.790018558502197

Token 615: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.09796080738306046
    2. 'A' → logprob: -2.8479607105255127
    3. '(B' → logprob: -3.5979607105255127
    4. '(L' → logprob: -5.472960948944092
    5. 'B' → logprob: -6.722960948944092
    6. '(' → logprob: -7.222960948944092
    7. ' A' → logprob: -7.222960948944092
    8. 'L' → logprob: -7.972960948944092
    9. ' (' → logprob: -7.972960948944092
    10. '((' → logprob: -8.472960472106934

Token 616: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.038160838186740875
    2. ')' → logprob: -3.413160800933838
    3. '))
' → logprob: -5.538160800933838
    4. ')
' → logprob: -8.663161277770996
    5. ' ))' → logprob: -9.663161277770996
    6. ')))' → logprob: -9.788161277770996
    7. '[start' → logprob: -9.913161277770996
    8. 'start' → logprob: -10.038161277770996
    9. '//' → logprob: -10.163161277770996
    10. '))-' → logprob: -10.788161277770996

Token 617: 'end' (ID: 419)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7978241443634033
    2. '<|end|>' → logprob: -1.0478241443634033
    3. ',' → logprob: -2.7978241443634033
    4. ')' → logprob: -2.7978241443634033
    5. 'while' → logprob: -4.422823905944824
    6. '#' → logprob: -4.672823905944824
    7. 'for' → logprob: -4.797823905944824
    8. 'if' → logprob: -5.547823905944824
    9. '
' → logprob: -5.672823905944824
    10. 'start' → logprob: -5.672823905944824

Token 618: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04891242831945419
    2. '=' → logprob: -3.048912525177002
    3. ',' → logprob: -8.173912048339844
    4. '(' → logprob: -11.173912048339844
    5. ' ' → logprob: -11.673912048339844
    6. ' ,' → logprob: -12.048912048339844
    7. '+' → logprob: -12.923912048339844
    8. ')' → logprob: -13.673912048339844
    9. ' +' → logprob: -13.798912048339844
    10. ' (' → logprob: -14.048912048339844

Token 619: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.10609232634305954
    2. 'B' → logprob: -3.2310922145843506
    3. ' len' → logprob: -3.2310922145843506
    4. 'L' → logprob: -4.35609245300293
    5. 'start' → logprob: -5.23109245300293
    6. ' B' → logprob: -6.48109245300293
    7. ' L' → logprob: -7.35609245300293
    8. '(len' → logprob: -8.60609245300293
    9. ' start' → logprob: -8.73109245300293
    10. 'str' → logprob: -9.23109245300293

Token 620: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.0010435284348204732
    2. '(' → logprob: -6.876043319702148
    3. 'str' → logprob: -11.626043319702148
    4. ' (' → logprob: -13.626043319702148
    5. '=str' → logprob: -15.376043319702148
    6. '(s' → logprob: -15.501043319702148
    7. ' str' → logprob: -17.00104331970215
    8. '(
' → logprob: -17.37604331970215
    9. '	str' → logprob: -17.62604331970215
    10. '[str' → logprob: -18.37604331970215

Token 621: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.04870352894067764
    2. 'B' → logprob: -3.04870343208313
    3. '(' → logprob: -10.17370319366455
    4. ' (' → logprob: -10.42370319366455
    5. '((' → logprob: -10.54870319366455
    6. ' B' → logprob: -11.17370319366455
    7. ')' → logprob: -13.17370319366455
    8. '(
' → logprob: -13.92370319366455
    9. '	B' → logprob: -14.04870319366455
    10. '(b' → logprob: -14.42370319366455

Token 622: '*' (ID: 9)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.025566749274730682
    2. '))+' → logprob: -4.025566577911377
    3. '+' → logprob: -5.650566577911377
    4. ')' → logprob: -5.900566577911377
    5. '))
' → logprob: -7.525566577911377
    6. ')+' → logprob: -7.525566577911377
    7. ')))' → logprob: -11.025567054748535
    8. '))-' → logprob: -11.150567054748535
    9. '))

' → logprob: -12.150567054748535
    10. ' ))' → logprob: -12.650567054748535

Token 623: 'L' (ID: 43)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -1.4643993377685547
    2. '(' → logprob: -1.9643993377685547
    3. 'L' → logprob: -1.9643993377685547
    4. '1' → logprob: -2.0893993377685547
    5. '2' → logprob: -2.4643993377685547
    6. 'B' → logprob: -2.5893993377685547
    7. '10' → logprob: -2.9643993377685547
    8. 'M' → logprob: -3.2143993377685547
    9. ')' → logprob: -3.3393993377685547
    10. ' (' → logprob: -4.714399337768555

Token 624: '+A' (ID: 195068)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.02152230218052864
    2. '+' → logprob: -4.646522521972656
    3. '))
' → logprob: -5.021522521972656
    4. ')' → logprob: -5.521522521972656
    5. '))+' → logprob: -7.396522521972656
    6. ')+' → logprob: -8.521522521972656
    7. ')))' → logprob: -9.646522521972656
    8. '//' → logprob: -10.271522521972656
    9. ' ))' → logprob: -10.896522521972656
    10. '(start' → logprob: -10.896522521972656

Token 625: '-B' (ID: 8287)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.005402142181992531
    2. '+' → logprob: -5.880402088165283
    3. '))+' → logprob: -6.880402088165283
    4. '))
' → logprob: -7.255402088165283
    5. ')' → logprob: -7.630402088165283
    6. '//' → logprob: -9.130402565002441
    7. '-' → logprob: -9.255402565002441
    8. ')))' → logprob: -9.380402565002441
    9. ')+' → logprob: -10.630402565002441
    10. ' ))' → logprob: -10.755402565002441

Token 626: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.036790840327739716
    2. '+' → logprob: -3.7867908477783203
    3. '))+' → logprob: -4.66179084777832
    4. '))
' → logprob: -5.66179084777832
    5. ')))' → logprob: -8.66179084777832
    6. ')' → logprob: -9.53679084777832
    7. '1' → logprob: -9.78679084777832
    8. ' +' → logprob: -9.91179084777832
    9. '))-' → logprob: -10.53679084777832
    10. '-' → logprob: -10.53679084777832

Token 627: 'part' (ID: 5815)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5964032411575317
    2. '+' → logprob: -1.7214032411575317
    3. 'for' → logprob: -2.471403121948242
    4. '=' → logprob: -3.846403121948242
    5. 'def' → logprob: -3.846403121948242
    6. '+
' → logprob: -3.971403121948242
    7. ':' → logprob: -3.971403121948242
    8. '<|end|>' → logprob: -4.221403121948242
    9. 'while' → logprob: -4.721403121948242
    10. 'n' → logprob: -4.846403121948242

Token 628: 'itions' (ID: 5500)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.07077953964471817
    2. '=' → logprob: -3.57077956199646
    3. 's' → logprob: -4.070779323577881
    4. 'size' → logprob: -4.445779323577881
    5. '_sum' → logprob: -5.320779323577881
    6. ' =' → logprob: -6.070779323577881
    7. '_size' → logprob: -6.070779323577881
    8. 'len' → logprob: -8.070779800415039
    9. '=sum' → logprob: -8.445779800415039
    10. '_len' → logprob: -8.570779800415039

Token 629: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5792213678359985
    2. ' =' → logprob: -0.8292213678359985
    3. '_' → logprob: -6.204221248626709
    4. '=[]' → logprob: -7.704221248626709
    5. ')' → logprob: -8.454221725463867
    6. '(' → logprob: -9.329221725463867
    7. 's' → logprob: -9.454221725463867
    8. '_=' → logprob: -9.704221725463867
    9. '<|end|>' → logprob: -9.829221725463867
    10. ',' → logprob: -10.204221725463867

Token 630: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.28202271461486816
    2. '[(' → logprob: -1.7820227146148682
    3. '[end' → logprob: -4.157022476196289
    4. 'deque' → logprob: -4.282022476196289
    5. '[' → logprob: -4.657022476196289
    6. '[B' → logprob: -4.657022476196289
    7. '(B' → logprob: -5.282022476196289
    8. '[]
' → logprob: -5.532022476196289
    9. '0' → logprob: -5.657022476196289
    10. '[L' → logprob: -6.282022476196289

Token 631: 'for' (ID: 1938)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6852244734764099
    2. '=' → logprob: -1.9352245330810547
    3. ' =' → logprob: -2.3102245330810547
    4. '<|end|>' → logprob: -2.4352245330810547
    5. ')' → logprob: -3.0602245330810547
    6. ' ' → logprob: -3.5602245330810547
    7. 'for' → logprob: -3.6852245330810547
    8. ']' → logprob: -4.685224533081055
    9. ',' → logprob: -4.685224533081055
    10. '[
' → logprob: -4.935224533081055

Token 632: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02809000387787819
    2. ' i' → logprob: -4.903090000152588
    3. '_' → logprob: -5.528090000152588
    4. 'x' → logprob: -6.028090000152588
    5. '_i' → logprob: -6.028090000152588
    6. 'part' → logprob: -6.153090000152588
    7. 'length' → logprob: -6.403090000152588
    8. 'n' → logprob: -6.403090000152588
    9. 'start' → logprob: -6.528090000152588
    10. 'p' → logprob: -7.028090000152588

Token 633: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.42924466729164124
    2. ' in' → logprob: -1.0542446374893188
    3. ',' → logprob: -8.179244995117188
    4. ')' → logprob: -9.554244995117188
    5. '_' → logprob: -10.054244995117188
    6. ' ' → logprob: -10.179244995117188
    7. '=' → logprob: -10.554244995117188
    8. 'n' → logprob: -10.554244995117188
    9. '_in' → logprob: -11.679244995117188
    10. '   ' → logprob: -11.929244995117188

Token 634: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0033953944221138954
    2. ' range' → logprob: -5.7533955574035645
    3. 'start' → logprob: -8.503395080566406
    4. 'part' → logprob: -12.253395080566406
    5. '(range' → logprob: -12.878395080566406
    6. 'parts' → logprob: -13.253395080566406
    7. '	range' → logprob: -14.253395080566406
    8. 'chain' → logprob: -14.378395080566406
    9. '_' → logprob: -14.503395080566406
    10. '[start' → logprob: -14.628395080566406

Token 635: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.06478993594646454
    2. '(' → logprob: -3.0647900104522705
    3. 'start' → logprob: -4.564789772033691
    4. '(L' → logprob: -5.689789772033691
    5. '(end' → logprob: -6.689789772033691
    6. '1' → logprob: -7.314789772033691
    7. '(len' → logprob: -9.064789772033691
    8. '((' → logprob: -9.939789772033691
    9. '(part' → logprob: -10.314789772033691
    10. '(A' → logprob: -11.064789772033691

Token 636: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024417320266366005
    2. '+' → logprob: -3.8994174003601074
    3. ',start' → logprob: -6.274417400360107
    4. ' ,' → logprob: -6.524417400360107
    5. ' +' → logprob: -8.14941692352295
    6. ',len' → logprob: -9.02441692352295
    7. ',end' → logprob: -10.02441692352295
    8. '(start' → logprob: -11.52441692352295
    9. '   ' → logprob: -11.77441692352295
    10. ',int' → logprob: -12.14941692352295

Token 637: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020749516785144806
    2. 'start' → logprob: -4.270749568939209
    3. 'len' → logprob: -5.895749568939209
    4. ' ' → logprob: -6.895749568939209
    5. '2' → logprob: -7.020749568939209
    6. '(' → logprob: -7.895749568939209
    7. '0' → logprob: -8.27074909210205
    8. 'end' → logprob: -8.39574909210205
    9. ' start' → logprob: -8.52074909210205
    10. 'L' → logprob: -8.64574909210205

Token 638: ',end' (ID: 93014)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07011949270963669
    2. ' ,' → logprob: -2.8201193809509277
    3. ',end' → logprob: -5.695119380950928
    4. ',len' → logprob: -5.820119380950928
    5. ',start' → logprob: -6.570119380950928
    6. ',L' → logprob: -9.570119857788086
    7. '+' → logprob: -9.695119857788086
    8. ',B' → logprob: -10.195119857788086
    9. ',length' → logprob: -10.320119857788086
    10. ',max' → logprob: -10.320119857788086

Token 639: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2926205098628998
    2. ',' → logprob: -1.4176205396652222
    3. ' +' → logprob: -4.792620658874512
    4. '):' → logprob: -6.292620658874512
    5. ' ,' → logprob: -7.667620658874512
    6. ',n' → logprob: -8.917620658874512
    7. ',len' → logprob: -9.167620658874512
    8. '1' → logprob: -9.667620658874512
    9. ',i' → logprob: -9.792620658874512
    10. '+,' → logprob: -9.792620658874512

Token 640: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7359579205513
    2. ' partitions' → logprob: -0.7359579205513
    3. ' if' → logprob: -3.7359578609466553
    4. ' parts' → logprob: -5.235958099365234
    5. '<|end|>' → logprob: -5.985958099365234
    6. 'part' → logprob: -6.360958099365234
    7. ' part' → logprob: -6.610958099365234
    8. ' i' → logprob: -7.235958099365234
    9. ',' → logprob: -7.235958099365234
    10. '	part' → logprob: -7.360958099365234

Token 641: ' l' (ID: 305)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.1782754808664322
    2. 'if' → logprob: -2.3032755851745605
    3. 'low' → logprob: -4.0532755851745605
    4. 'start' → logprob: -4.5532755851745605
    5. 'left' → logprob: -4.6782755851745605
    6. '   ' → logprob: -4.8032755851745605
    7. 's' → logprob: -5.3032755851745605
    8. 'lower' → logprob: -5.9282755851745605
    9. 'x' → logprob: -6.5532755851745605
    10. ' partitions' → logprob: -6.6782755851745605

Token 642: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5240134596824646
    2. ' =' → logprob: -0.8990134596824646
    3. '+=' → logprob: -8.52401351928711
    4. '+' → logprob: -8.52401351928711
    5. '=int' → logprob: -8.77401351928711
    6. '=i' → logprob: -8.77401351928711
    7. '=len' → logprob: -9.52401351928711
    8. ' +=' → logprob: -10.39901351928711
    9. ',' → logprob: -11.02401351928711
    10. '   ' → logprob: -11.52401351928711

Token 643: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00787502620369196
    2. '10' → logprob: -5.007874965667725
    3. 'L' → logprob: -7.882874965667725
    4. ' i' → logprob: -8.257875442504883
    5. '(i' → logprob: -8.757875442504883
    6. '1' → logprob: -9.007875442504883
    7. '2' → logprob: -9.757875442504883
    8. 'pow' → logprob: -10.132875442504883
    9. 'len' → logprob: -10.882875442504883
    10. 'part' → logprob: -11.132875442504883

Token 644: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.016778308898210526
    2. '10' → logprob: -4.266778469085693
    3. '1' → logprob: -7.266778469085693
    4. 'L' → logprob: -7.266778469085693
    5. 'B' → logprob: -7.766778469085693
    6. ' i' → logprob: -8.391777992248535
    7. '(i' → logprob: -8.891777992248535
    8. '0' → logprob: -9.141777992248535
    9. 'A' → logprob: -9.516777992248535
    10. 'pow' → logprob: -9.891777992248535

Token 645: '+(' (ID: 31717)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.777676522731781
    2. ' <<' → logprob: -1.4026765823364258
    3. ')' → logprob: -1.6526765823364258
    4. ',' → logprob: -3.027676582336426
    5. '+' → logprob: -3.777676582336426
    6. ' +' → logprob: -4.527676582336426
    7. ')<<' → logprob: -5.402676582336426
    8. ',)' → logprob: -5.902676582336426
    9. ' )' → logprob: -6.027676582336426
    10. '<<(' → logprob: -6.277676582336426

Token 646: '10' (ID: 702)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22135737538337708
    2. 'B' → logprob: -1.9713573455810547
    3. 'L' → logprob: -3.4713573455810547
    4. '10' → logprob: -4.471357345581055
    5. '(i' → logprob: -5.346357345581055
    6. ' i' → logprob: -5.721357345581055
    7. '(B' → logprob: -6.346357345581055
    8. ' B' → logprob: -6.471357345581055
    9. ' (' → logprob: -6.721357345581055
    10. 'A' → logprob: -6.971357345581055

Token 647: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.01806916669011116
    2. ')' → logprob: -4.893069267272949
    3. ')**' → logprob: -5.268069267272949
    4. 'i' → logprob: -5.768069267272949
    5. ' **' → logprob: -7.018069267272949
    6. '))' → logprob: -7.518069267272949
    7. '*i' → logprob: -8.76806926727295
    8. '```' → logprob: -9.01806926727295
    9. ')i' → logprob: -9.26806926727295
    10. ' ' → logprob: -10.14306926727295

Token 648: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006751431501470506
    2. '(i' → logprob: -7.750675201416016
    3. ' i' → logprob: -9.000675201416016
    4. '(' → logprob: -10.250675201416016
    5. ' (' → logprob: -10.375675201416016
    6. 'l' → logprob: -11.375675201416016
    7. '   ' → logprob: -11.625675201416016
    8. '{i' → logprob: -12.125675201416016
    9. ' ' → logprob: -12.250675201416016
    10. ')' → logprob: -12.500675201416016

Token 649: '-A' (ID: 9406)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.342410683631897
    2. '))' → logprob: -1.342410683631897
    3. ')' → logprob: -1.467410683631897
    4. ' -' → logprob: -1.717410683631897
    5. ')-' → logprob: -3.4674105644226074
    6. ')*' → logprob: -4.467410564422607
    7. '*' → logprob: -5.467410564422607
    8. '//' → logprob: -5.842410564422607
    9. '-L' → logprob: -5.967410564422607
    10. ')<=' → logprob: -6.467410564422607

Token 650: '-' (ID: 12)
  Prédit: ')//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.13786429166793823
    2. ')' → logprob: -2.637864351272583
    3. '))' → logprob: -4.012864112854004
    4. '//' → logprob: -4.262864112854004
    5. ')%' → logprob: -4.387864112854004
    6. '+' → logprob: -5.262864112854004
    7. '*' → logprob: -5.887864112854004
    8. ')*' → logprob: -7.137864112854004
    9. '-' → logprob: -7.262864112854004
    10. ')>=' → logprob: -7.512864112854004

Token 651: '1' (ID: 16)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0711974948644638
    2. '0' → logprob: -3.821197509765625
    3. '1' → logprob: -3.946197509765625
    4. '(B' → logprob: -4.196197509765625
    5. '((' → logprob: -5.696197509765625
    6. ' B' → logprob: -6.321197509765625
    7. '(' → logprob: -6.321197509765625
    8. 'L' → logprob: -6.571197509765625
    9. '(L' → logprob: -7.196197509765625
    10. ' (' → logprob: -7.196197509765625

Token 652: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.04034917801618576
    2. ')' → logprob: -3.290349245071411
    3. '//' → logprob: -6.915349006652832
    4. ' )' → logprob: -7.165349006652832
    5. '+' → logprob: -8.040349006652832
    6. ')#' → logprob: -9.415349006652832
    7. ' //' → logprob: -10.040349006652832
    8. ')>=' → logprob: -11.290349006652832
    9. '#' → logprob: -11.790349006652832
    10. ')/(' → logprob: -11.915349006652832

Token 653: 'B' (ID: 33)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0014815322356298566
    2. 'B' → logprob: -7.626481533050537
    3. '(' → logprob: -7.876481533050537
    4. '(L' → logprob: -8.126481056213379
    5. ' L' → logprob: -8.251481056213379
    6. '10' → logprob: -10.501481056213379
    7. '((' → logprob: -11.626481056213379
    8. ' (' → logprob: -11.876481056213379
    9. '(B' → logprob: -12.126481056213379
    10. '   ' → logprob: -12.751481056213379

Token 654: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009612762369215488
    2. '+' → logprob: -5.384612560272217
    3. ')
' → logprob: -5.634612560272217
    4. ')*' → logprob: -7.134612560272217
    5. '):
' → logprob: -8.759613037109375
    6. ')+' → logprob: -8.884613037109375
    7. ')**' → logprob: -9.634613037109375
    8. '   ' → logprob: -9.884613037109375
    9. ' )' → logprob: -10.009613037109375
    10. ' +' → logprob: -10.134613037109375

Token 655: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.557371973991394
    2. '<|end|>' → logprob: -1.057371973991394
    3. ')' → logprob: -2.8073720932006836
    4. ',' → logprob: -4.932372093200684
    5. '<|end|>' → logprob: -5.432372093200684
    6. ':' → logprob: -6.307372093200684
    7. ' ' → logprob: -6.682372093200684
    8. ' if' → logprob: -7.057372093200684
    9. '  ' → logprob: -7.932372093200684
    10. ']' → logprob: -7.932372093200684

Token 656: ' r' (ID: 428)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4813583493232727
    2. '<|end|>' → logprob: -1.981358289718628
    3. ' partitions' → logprob: -2.481358289718628
    4. '   ' → logprob: -3.106358289718628
    5. ',' → logprob: -3.481358289718628
    6. '[' → logprob: -3.606358289718628
    7. 'part' → logprob: -4.731358528137207
    8. ' parts' → logprob: -5.106358528137207
    9. ' if' → logprob: -5.106358528137207
    10. '<|end|>' → logprob: -5.356358528137207

Token 657: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04860655218362808
    2. '=' → logprob: -3.0486066341400146
    3. ',' → logprob: -11.923606872558594
    4. ' ' → logprob: -12.298606872558594
    5. 's' → logprob: -13.048606872558594
    6. '<|end|>' → logprob: -13.673606872558594
    7. ')' → logprob: -14.173606872558594
    8. ' =
' → logprob: -14.298606872558594
    9. '_' → logprob: -14.548606872558594
    10. ' ,' → logprob: -14.673606872558594

Token 658: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05186603218317032
    2. 'min' → logprob: -3.676866054534912
    3. ' (' → logprob: -3.926866054534912
    4. '(min' → logprob: -6.051866054534912
    5. ' min' → logprob: -6.676866054534912
    6. '((' → logprob: -7.426866054534912
    7. '(i' → logprob: -7.801866054534912
    8. '10' → logprob: -8.176865577697754
    9. 'i' → logprob: -8.801865577697754
    10. 'B' → logprob: -9.301865577697754

Token 659: '10' (ID: 702)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22842390835285187
    2. 'min' → logprob: -2.228423833847046
    3. 'i' → logprob: -3.353423833847046
    4. '10' → logprob: -4.103424072265625
    5. '(i' → logprob: -4.478424072265625
    6. 'B' → logprob: -4.603424072265625
    7. '(min' → logprob: -5.228424072265625
    8. 'A' → logprob: -5.353424072265625
    9. ' (' → logprob: -5.603424072265625
    10. '((' → logprob: -6.103424072265625

Token 660: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0005622077151201665
    2. '^' → logprob: -7.5005621910095215
    3. ' **' → logprob: -12.37556266784668
    4. '```' → logprob: -13.12556266784668
    5. ')' → logprob: -14.12556266784668
    6. ',' → logprob: -14.50056266784668
    7. 'i' → logprob: -14.75056266784668
    8. ')**' → logprob: -15.00056266784668
    9. ',i' → logprob: -15.12556266784668
    10. '^{' → logprob: -15.25056266784668

Token 661: '(' (ID: 7)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02345382422208786
    2. '(i' → logprob: -3.773453712463379
    3. '(' → logprob: -9.148453712463379
    4. '{i' → logprob: -10.273453712463379
    5. ' i' → logprob: -11.148453712463379
    6. ' (' → logprob: -11.273453712463379
    7. '((' → logprob: -11.398453712463379
    8. '_i' → logprob: -11.773453712463379
    9. '```' → logprob: -12.148453712463379
    10. '   ' → logprob: -12.648453712463379

Token 662: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0790972113609314
    2. '(i' → logprob: -2.579097270965576
    3. ' (' → logprob: -9.954096794128418
    4. '{i' → logprob: -9.954096794128418
    5. '(' → logprob: -10.079096794128418
    6. '   ' → logprob: -10.454096794128418
    7. ' i' → logprob: -10.579096794128418
    8. '_i' → logprob: -13.079096794128418
    9. '[i' → logprob: -13.329096794128418
    10. ')' → logprob: -13.579096794128418

Token 663: '+' (ID: 10)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4036363959312439
    2. '+' → logprob: -2.5286364555358887
    3. '-i' → logprob: -2.5286364555358887
    4. ')-' → logprob: -2.9036364555358887
    5. ' -' → logprob: -2.9036364555358887
    6. 'i' → logprob: -3.4036364555358887
    7. ')' → logprob: -4.153636455535889
    8. ')-(' → logprob: -5.153636455535889
    9. ')+' → logprob: -5.778636455535889
    10. '   ' → logprob: -5.903636455535889

Token 664: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.19283567368984222
    2. '1' → logprob: -1.8178356885910034
    3. '(' → logprob: -5.692835807800293
    4. '-' → logprob: -6.067835807800293
    5. '0' → logprob: -6.067835807800293
    6. '(i' → logprob: -6.192835807800293
    7. ')' → logprob: -7.192835807800293
    8. '```' → logprob: -7.192835807800293
    9. '+' → logprob: -7.317835807800293
    10. ' i' → logprob: -8.817835807800293

Token 665: ')-' (ID: 14080)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.322266161441803
    2. ')' → logprob: -2.197266101837158
    3. ' -' → logprob: -2.197266101837158
    4. ')-' → logprob: -3.072266101837158
    5. ' ' → logprob: -6.822266101837158
    6. '-i' → logprob: -7.197266101837158
    7. '   ' → logprob: -7.322266101837158
    8. ')+' → logprob: -7.447266101837158
    9. ')-(' → logprob: -7.447266101837158
    10. '//' → logprob: -7.572266101837158

Token 666: 'A' (ID: 32)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000539093220140785
    2. 'B' → logprob: -7.750539302825928
    3. ' ' → logprob: -10.25053882598877
    4. '(' → logprob: -10.62553882598877
    5. 'A' → logprob: -10.75053882598877
    6. '2' → logprob: -11.25053882598877
    7. ')' → logprob: -12.50053882598877
    8. '(B' → logprob: -12.50053882598877
    9. ' B' → logprob: -13.75053882598877
    10. '```' → logprob: -14.00053882598877

Token 667: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08346939086914062
    2. ')' → logprob: -2.9584693908691406
    3. ' -' → logprob: -3.8334693908691406
    4. ')//' → logprob: -5.333469390869141
    5. '+' → logprob: -6.708469390869141
    6. '   ' → logprob: -8.95846939086914
    7. ' )' → logprob: -9.33346939086914
    8. ')-' → logprob: -10.08346939086914
    9. ')#' → logprob: -10.33346939086914
    10. ')>>' → logprob: -10.45846939086914

Token 668: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009754245402291417
    2. 'B' → logprob: -7.000975608825684
    3. ')' → logprob: -10.000975608825684
    4. ' ' → logprob: -11.625975608825684
    5. ' B' → logprob: -13.000975608825684
    6. '2' → logprob: -13.125975608825684
    7. '
' → logprob: -13.625975608825684
    8. '0' → logprob: -14.875975608825684
    9. '(' → logprob: -14.875975608825684
    10. '   ' → logprob: -15.000975608825684

Token 669: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.012995855882763863
    2. ')' → logprob: -4.387995719909668
    3. ' )' → logprob: -8.137995719909668
    4. '+' → logprob: -9.887995719909668
    5. '   ' → logprob: -10.012995719909668
    6. '//' → logprob: -10.012995719909668
    7. ')#' → logprob: -10.762995719909668
    8. ')
' → logprob: -11.512995719909668
    9. ')>>' → logprob: -12.637995719909668
    10. ' ' → logprob: -12.762995719909668

Token 670: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00014418430509977043
    2. ' B' → logprob: -8.875144004821777
    3. '   ' → logprob: -12.750144004821777
    4. '```' → logprob: -15.125144004821777
    5. '           ' → logprob: -15.625144004821777
    6. ' ' → logprob: -15.750144004821777
    7. '       ' → logprob: -15.875144004821777
    8. '(' → logprob: -15.875144004821777
    9. '  ' → logprob: -16.375144958496094
    10. '(B' → logprob: -16.500144958496094

Token 671: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16403572261333466
    2. '<|end|>' → logprob: -2.4140357971191406
    3. '+' → logprob: -3.4140357971191406
    4. ' +' → logprob: -4.414035797119141
    5. '
' → logprob: -5.164035797119141
    6. ')' → logprob: -5.289035797119141
    7. ' if' → logprob: -5.789035797119141
    8. '<|end|>' → logprob: -7.789035797119141
    9. 'if' → logprob: -8.16403579711914
    10. 'for' → logprob: -8.41403579711914

Token 672: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41176915168762207
    2. '<|end|>' → logprob: -1.286769151687622
    3. ')' → logprob: -3.786769151687622
    4. ' if' → logprob: -4.286768913269043
    5. ' for' → logprob: -5.036768913269043
    6. ',' → logprob: -5.036768913269043
    7. 'for' → logprob: -5.911768913269043
    8. 'part' → logprob: -6.411768913269043
    9. '<|end|>' → logprob: -6.536768913269043
    10. '[' → logprob: -6.786768913269043

Token 673: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9322673678398132
    2. 'part' → logprob: -1.432267427444458
    3. ' if' → logprob: -2.057267427444458
    4. 'if' → logprob: -2.182267427444458
    5. 'for' → logprob: -2.557267427444458
    6. ' for' → logprob: -3.432267427444458
    7. '<|end|>' → logprob: -5.432267189025879
    8. 'parts' → logprob: -5.807267189025879
    9. ')' → logprob: -5.932267189025879
    10. '
' → logprob: -6.807267189025879

Token 674: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.076671838760376
    2. '=' → logprob: -1.076671838760376
    3. '<|end|>' → logprob: -1.451671838760376
    4. ' =' → logprob: -3.076671838760376
    5. '<=' → logprob: -4.201671600341797
    6. ' <=' → logprob: -5.201671600341797
    7. '+' → logprob: -5.826671600341797
    8. '>' → logprob: -6.201671600341797
    9. '+=' → logprob: -6.326671600341797
    10. '<|end|>' → logprob: -6.326671600341797

Token 675: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0005959240952506661
    2. ' max' → logprob: -7.625596046447754
    3. 'min' → logprob: -9.750596046447754
    4. 'l' → logprob: -10.125596046447754
    5. '(max' → logprob: -11.625596046447754
    6. '0' → logprob: -15.000596046447754
    7. '	max' → logprob: -16.375595092773438
    8. '[max' → logprob: -17.000595092773438
    9. 'i' → logprob: -17.125595092773438
    10. ' l' → logprob: -17.250595092773438

Token 676: '(' (ID: 7)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0010510309366509318
    2. '(' → logprob: -6.87605094909668
    3. '(L' → logprob: -11.00105094909668
    4. 'l' → logprob: -15.00105094909668
    5. '(
' → logprob: -15.12605094909668
    6. '(r' → logprob: -15.25105094909668
    7. '(A' → logprob: -16.00105094909668
    8. '(i' → logprob: -16.00105094909668
    9. '(a' → logprob: -16.25105094909668
    10. '0' → logprob: -16.50105094909668

Token 677: '0' (ID: 15)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0024950411170721054
    2. '1' → logprob: -6.627494812011719
    3. '0' → logprob: -6.877494812011719
    4. 'A' → logprob: -10.127494812011719
    5. '(l' → logprob: -10.627494812011719
    6. ' l' → logprob: -10.752494812011719
    7. 'L' → logprob: -11.002494812011719
    8. 'i' → logprob: -11.627494812011719
    9. 'B' → logprob: -11.877494812011719
    10. '(' → logprob: -12.877494812011719

Token 678: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0138053297996521
    2. ',l' → logprob: -4.388805389404297
    3. ' ,' → logprob: -6.763805389404297
    4. 'l' → logprob: -9.388805389404297
    5. '   ' → logprob: -11.013805389404297
    6. ',
' → logprob: -11.013805389404297
    7. ',n' → logprob: -12.513805389404297
    8. ' l' → logprob: -12.638805389404297
    9. ')' → logprob: -12.888805389404297
    10. ',len' → logprob: -13.138805389404297

Token 679: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0003884894831571728
    2. ' l' → logprob: -8.000388145446777
    3. '   ' → logprob: -10.500388145446777
    4. 'min' → logprob: -11.625388145446777
    5. '	l' → logprob: -12.500388145446777
    6. '```' → logprob: -13.125388145446777
    7. ')' → logprob: -13.250388145446777
    8. 'r' → logprob: -13.375388145446777
    9. '    ' → logprob: -13.750388145446777
    10. '       ' → logprob: -13.875388145446777

Token 680: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002077217446640134
    2. ')
' → logprob: -6.752077102661133
    3. ' )' → logprob: -7.502077102661133
    4. '<|end|>' → logprob: -8.127077102661133
    5. '   ' → logprob: -10.377077102661133
    6. ' )
' → logprob: -12.252077102661133
    7. '<|end|>' → logprob: -12.252077102661133
    8. ')+' → logprob: -13.002077102661133
    9. '+' → logprob: -13.127077102661133
    10. ',' → logprob: -13.252077102661133

Token 681: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24592505395412445
    2. '<|end|>' → logprob: -1.7459250688552856
    3. '
' → logprob: -4.245924949645996
    4. ' r' → logprob: -4.995924949645996
    5. ',' → logprob: -5.495924949645996
    6. 'r' → logprob: -5.620924949645996
    7. ' ' → logprob: -5.995924949645996
    8. '<|end|>' → logprob: -6.120924949645996
    9. '```' → logprob: -6.245924949645996
    10. ' if' → logprob: -6.370924949645996

Token 682: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.3871512711048126
    2. ' r' → logprob: -1.1371512413024902
    3. 'max' → logprob: -9.262151718139648
    4. '   ' → logprob: -9.762151718139648
    5. ' if' → logprob: -10.137151718139648
    6. 'if' → logprob: -11.012151718139648
    7. ' max' → logprob: -11.012151718139648
    8. '```' → logprob: -11.262151718139648
    9. 'min' → logprob: -11.637151718139648
    10. ' min' → logprob: -11.887151718139648

Token 683: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04867570847272873
    2. ' =' → logprob: -3.048675775527954
    3. '+' → logprob: -10.423675537109375
    4. '=max' → logprob: -11.173675537109375
    5. '<|end|>' → logprob: -11.298675537109375
    6. '+=' → logprob: -11.423675537109375
    7. ',' → logprob: -12.423675537109375
    8. '=min' → logprob: -12.423675537109375
    9. ' +=' → logprob: -12.673675537109375
    10. '>' → logprob: -12.798675537109375

Token 684: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.033904433250427246
    2. ' min' → logprob: -3.658904552459717
    3. 'max' → logprob: -4.908904552459717
    4. ' max' → logprob: -9.283904075622559
    5. 'r' → logprob: -9.908904075622559
    6. 'B' → logprob: -10.158904075622559
    7. ' B' → logprob: -12.033904075622559
    8. '(min' → logprob: -12.533904075622559
    9. ' r' → logprob: -12.783904075622559
    10. '	min' → logprob: -15.783904075622559

Token 685: '(L' (ID: 11075)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.7410495281219482
    2. '(B' → logprob: -0.8660495281219482
    3. '(L' → logprob: -2.9910495281219482
    4. '((' → logprob: -3.4910495281219482
    5. '(' → logprob: -4.491049766540527
    6. '(len' → logprob: -5.241049766540527
    7. '(N' → logprob: -5.616049766540527
    8. '(R' → logprob: -7.866049766540527
    9. '(M' → logprob: -8.116049766540527
    10. '(l' → logprob: -8.116049766540527

Token 686: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06559576094150543
    2. '-' → logprob: -2.815595865249634
    3. ' -' → logprob: -5.815595626831055
    4. ' ,' → logprob: -8.065595626831055
    5. ',r' → logprob: -8.940595626831055
    6. ')' → logprob: -10.065595626831055
    7. '1' → logprob: -10.065595626831055
    8. ',l' → logprob: -10.565595626831055
    9. 'r' → logprob: -10.940595626831055
    10. '+' → logprob: -11.065595626831055

Token 687: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00041339205927215517
    2. ' ' → logprob: -7.875413417816162
    3. ',' → logprob: -11.750412940979004
    4. '```' → logprob: -12.125412940979004
    5. 'r' → logprob: -12.625412940979004
    6. 'B' → logprob: -12.750412940979004
    7. '+' → logprob: -12.750412940979004
    8. '0' → logprob: -13.125412940979004
    9. ' r' → logprob: -13.125412940979004
    10. ')' → logprob: -13.625412940979004

Token 688: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03834911063313484
    2. ',' → logprob: -3.288349151611328
    3. ')
' → logprob: -9.038349151611328
    4. '<|end|>' → logprob: -9.538349151611328
    5. '   ' → logprob: -9.788349151611328
    6. ',r' → logprob: -11.413349151611328
    7. ' )' → logprob: -11.663349151611328
    8. ')+' → logprob: -11.788349151611328
    9. '),' → logprob: -11.913349151611328
    10. ',
' → logprob: -12.038349151611328

Token 689: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.029751067981123924
    2. ' r' → logprob: -3.5297510623931885
    3. '   ' → logprob: -14.65475082397461
    4. ')' → logprob: -16.15475082397461
    5. ' ' → logprob: -17.02975082397461
    6. '	r' → logprob: -17.27975082397461
    7. '    ' → logprob: -18.52975082397461
    8. '
' → logprob: -19.02975082397461
    9. ' ' → logprob: -19.27975082397461
    10. '  ' → logprob: -19.90475082397461

Token 690: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005076381494291127
    2. ')
' → logprob: -8.000507354736328
    3. '   ' → logprob: -9.125507354736328
    4. ' )' → logprob: -10.625507354736328
    5. ')+' → logprob: -11.000507354736328
    6. '+' → logprob: -11.250507354736328
    7. '<|end|>' → logprob: -12.000507354736328
    8. '+)' → logprob: -14.250507354736328
    9. ' +' → logprob: -15.125507354736328
    10. ')

' → logprob: -15.375507354736328

Token 691: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4317817986011505
    2. ' if' → logprob: -1.9317817687988281
    3. '<|end|>' → logprob: -2.556781768798828
    4. 'if' → logprob: -2.931781768798828
    5. 'for' → logprob: -3.181781768798828
    6. ' for' → logprob: -3.556781768798828
    7. ')' → logprob: -6.306781768798828
    8. ',' → logprob: -7.056781768798828
    9. '<|end|>' → logprob: -8.306781768798828
    10. '[' → logprob: -8.556781768798828

Token 692: ' partitions' (ID: 89097)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6346092820167542
    2. '   ' → logprob: -1.5096092224121094
    3. 'if' → logprob: -1.7596092224121094
    4. ' for' → logprob: -3.5096092224121094
    5. ' if' → logprob: -4.259609222412109
    6. '<|end|>' → logprob: -4.509609222412109
    7. '```' → logprob: -4.884609222412109
    8. ')' → logprob: -5.759609222412109
    9. 'part' → logprob: -6.384609222412109
    10. 'while' → logprob: -6.509609222412109

Token 693: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0086666913703084
    2. '.' → logprob: -4.758666515350342
    3. '<|end|>' → logprob: -11.1336669921875
    4. ' .' → logprob: -11.6336669921875
    5. '.app' → logprob: -11.8836669921875
    6. ').' → logprob: -12.6336669921875
    7. '.extend' → logprob: -12.6336669921875
    8. '_append' → logprob: -13.0086669921875
    9. '.setdefault' → logprob: -13.1336669921875
    10. '+.' → logprob: -13.1336669921875

Token 694: '([' (ID: 5194)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00018744789122138172
    2. '(' → logprob: -8.625187873840332
    3. '(range' → logprob: -12.375187873840332
    4. '([' → logprob: -13.500187873840332
    5. '(l' → logprob: -14.250187873840332
    6. '(((' → logprob: -14.625187873840332
    7. ' ((' → logprob: -15.000187873840332
    8. '(
' → logprob: -15.000187873840332
    9. '   ' → logprob: -15.500187873840332
    10. '[(' → logprob: -16.625186920166016

Token 695: 'i' (ID: 72)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -2.618001053633634e-05
    2. ' l' → logprob: -10.625025749206543
    3. '   ' → logprob: -13.625025749206543
    4. '	l' → logprob: -15.250025749206543
    5. '[l' → logprob: -15.500025749206543
    6. 'i' → logprob: -16.50002670288086
    7. 'A' → logprob: -16.87502670288086
    8. '[' → logprob: -17.75002670288086
    9. '
' → logprob: -17.87502670288086
    10. '(l' → logprob: -17.87502670288086

Token 696: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11560423672199249
    2. '+' → logprob: -2.6156041622161865
    3. '])' → logprob: -3.8656041622161865
    4. ',i' → logprob: -5.240604400634766
    5. ']' → logprob: -6.115604400634766
    6. '][' → logprob: -6.240604400634766
    7. ' ,' → logprob: -6.865604400634766
    8. ',
' → logprob: -6.990604400634766
    9. ' +' → logprob: -7.115604400634766
    10. '   ' → logprob: -7.740604400634766

Token 697: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.492120155598968e-05
    2. ' ' → logprob: -10.000064849853516
    3. ',' → logprob: -11.375064849853516
    4. '```' → logprob: -12.375064849853516
    5. '   ' → logprob: -13.750064849853516
    6. '0' → logprob: -13.750064849853516
    7. '2' → logprob: -14.625064849853516
    8. ' ,' → logprob: -15.625064849853516
    9. ']' → logprob: -15.750064849853516
    10. ')' → logprob: -16.250064849853516

Token 698: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0066227694042027
    2. ',l' → logprob: -5.131622791290283
    3. ' ,' → logprob: -7.381622791290283
    4. ',r' → logprob: -10.756622314453125
    5. ',
' → logprob: -10.881622314453125
    6. '<|end|>' → logprob: -11.631622314453125
    7. '])' → logprob: -11.756622314453125
    8. ',L' → logprob: -12.756622314453125
    9. ',n' → logprob: -12.881622314453125
    10. ' l' → logprob: -13.506622314453125

Token 699: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.05595191940665245
    2. ' l' → logprob: -2.9309518337249756
    3. 'r' → logprob: -7.055952072143555
    4. ' r' → logprob: -9.805952072143555
    5. '[l' → logprob: -9.805952072143555
    6. 'max' → logprob: -10.305952072143555
    7. ' [' → logprob: -11.430952072143555
    8. '(l' → logprob: -11.430952072143555
    9. '   ' → logprob: -11.805952072143555
    10. ' max' → logprob: -11.805952072143555

Token 700: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.033828381448984146
    2. ',r' → logprob: -3.4088284969329834
    3. ' ,' → logprob: -8.658828735351562
    4. '+r' → logprob: -12.908828735351562
    5. ',
' → logprob: -13.533828735351562
    6. '   ' → logprob: -13.658828735351562
    7. 'r' → logprob: -13.908828735351562
    8. '+' → logprob: -13.908828735351562
    9. ' r' → logprob: -14.783828735351562
    10. ',n' → logprob: -15.408828735351562

Token 701: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.005938516929745674
    2. ' r' → logprob: -5.130938529968262
    3. '   ' → logprob: -11.880938529968262
    4. ' ' → logprob: -13.630938529968262
    5. 'min' → logprob: -14.380938529968262
    6. 'max' → logprob: -15.505938529968262
    7. '       ' → logprob: -15.505938529968262
    8. ' min' → logprob: -15.630938529968262
    9. '    ' → logprob: -16.005937576293945
    10. '	r' → logprob: -16.130937576293945

Token 702: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -2.0339031834737398e-05
    2. ')' → logprob: -12.125020027160645
    3. ' ])' → logprob: -12.125020027160645
    4. '])
' → logprob: -12.750020027160645
    5. ']' → logprob: -13.125020027160645
    6. ')])' → logprob: -13.250020027160645
    7. ')]' → logprob: -14.250020027160645
    8. '])]' → logprob: -14.250020027160645
    9. ',' → logprob: -14.500020027160645
    10. ''])' → logprob: -15.250020027160645

Token 703: 'part' (ID: 5815)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7600483894348145
    2. '<|end|>' → logprob: -0.7600483894348145
    3. ')' → logprob: -3.6350483894348145
    4. ':' → logprob: -4.6350483894348145
    5. '+' → logprob: -5.5100483894348145
    6. ',' → logprob: -5.7600483894348145
    7. '```' → logprob: -5.7600483894348145
    8. ' ' → logprob: -5.8850483894348145
    9. '[
' → logprob: -6.1350483894348145
    10. '<|end|>' → logprob: -6.1350483894348145

Token 704: 'itions' (ID: 5500)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.003735706675797701
    2. 'itions' → logprob: -5.628735542297363
    3. '=[]' → logprob: -9.628735542297363
    4. '=' → logprob: -11.378735542297363
    5. '[
' → logprob: -11.628735542297363
    6. '[s' → logprob: -12.253735542297363
    7. '```' → logprob: -12.503735542297363
    8. '=[]
' → logprob: -12.628735542297363
    9. '[' → logprob: -12.753735542297363
    10. 'ss' → logprob: -12.753735542297363

Token 705: '.sort' (ID: 19551)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 706: '(reverse' (ID: 110806)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0035557658411562443
    2. '()
' → logprob: -6.128555774688721
    3. '(reverse' → logprob: -6.878555774688721
    4. '(key' → logprob: -8.628555297851562
    5. '(' → logprob: -9.753555297851562
    6. 'key' → logprob: -10.753555297851562
    7. '<|end|>' → logprob: -11.003555297851562
    8. 'reverse' → logprob: -11.253555297851562
    9. '```' → logprob: -11.503555297851562
    10. '(
' → logprob: -11.753555297851562

Token 707: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.027634618803858757
    2. '())' → logprob: -3.777634620666504
    3. '=' → logprob: -5.777634620666504
    4. ')' → logprob: -7.527634620666504
    5. '()' → logprob: -8.277634620666504
    6. '(),' → logprob: -8.527634620666504
    7. '(True' → logprob: -9.027634620666504
    8. 'key' → logprob: -9.777634620666504
    9. '=False' → logprob: -10.027634620666504
    10. '())
' → logprob: -10.152634620666504

Token 708: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.566264295950532e-05
    2. '())' → logprob: -10.000085830688477
    3. '()' → logprob: -11.125085830688477
    4. ',' → logprob: -11.625085830688477
    5. ')
' → logprob: -12.000085830688477
    6. '))' → logprob: -13.250085830688477
    7. '(' → logprob: -13.500085830688477
    8. '<|end|>' → logprob: -13.625085830688477
    9. ',)' → logprob: -13.750085830688477
    10. '])' → logprob: -13.875085830688477

Token 709: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0980381965637207
    2. '```' → logprob: -3.3480381965637207
    3. ')' → logprob: -4.348038196563721
    4. ' for' → logprob: -4.473038196563721
    5. 'part' → logprob: -4.723038196563721
    6. '<|end|>' → logprob: -4.973038196563721
    7. '
' → logprob: -5.598038196563721
    8. '[' → logprob: -5.973038196563721
    9. ']' → logprob: -6.473038196563721
    10. '#' → logprob: -6.598038196563721

Token 710: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.44165119528770447
    2. '=' → logprob: -1.0666512250900269
    3. '<|end|>' → logprob: -4.441651344299316
    4. '[' → logprob: -8.066651344299316
    5. ')' → logprob: -8.066651344299316
    6. ' ' → logprob: -8.941651344299316
    7. ',' → logprob: -9.691651344299316
    8. ' +=' → logprob: -9.691651344299316
    9. '=[]' → logprob: -10.066651344299316
    10. '_' → logprob: -10.691651344299316

Token 711: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010650822659954429
    2. ' ' → logprob: -6.876065254211426
    3. 'A' → logprob: -11.751065254211426
    4. '1' → logprob: -12.376065254211426
    5. 'B' → logprob: -12.501065254211426
    6. '(' → logprob: -12.626065254211426
    7. '[]' → logprob: -12.876065254211426
    8. 'L' → logprob: -13.126065254211426
    9. '[' → logprob: -13.126065254211426
    10. 'deque' → logprob: -13.876065254211426

Token 712: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001589618914294988
    2. '[]' → logprob: -9.75015926361084
    3. 'deque' → logprob: -10.87515926361084
    4. 'A' → logprob: -11.00015926361084
    5. 'B' → logprob: -11.37515926361084
    6. '(' → logprob: -11.75015926361084
    7. '1' → logprob: -11.87515926361084
    8. '[' → logprob: -12.00015926361084
    9. 'L' → logprob: -12.25015926361084
    10. 'parts' → logprob: -12.50015926361084

Token 713: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.30712029337882996
    2. '
' → logprob: -1.4321203231811523
    3. ' for' → logprob: -3.9321203231811523
    4. '<|end|>' → logprob: -6.057120323181152
    5. ',' → logprob: -6.307120323181152
    6. ')' → logprob: -7.557120323181152
    7. ' 
' → logprob: -7.682120323181152
    8. ',
' → logprob: -8.682120323181152
    9. '```' → logprob: -8.807120323181152
    10. ')
' → logprob: -9.932120323181152

Token 714: 'ch' (ID: 332)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.021503984928131104
    2. ' for' → logprob: -4.021503925323486
    3. '```' → logprob: -7.271503925323486
    4. '<|end|>' → logprob: -7.271503925323486
    5. ')' → logprob: -7.771503925323486
    6. '+' → logprob: -7.771503925323486
    7. ':' → logprob: -8.271504402160645
    8. ',' → logprob: -8.396504402160645
    9. '
' → logprob: -9.021504402160645
    10. '+
' → logprob: -9.396504402160645

Token 715: 'ouse' (ID: 1941)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.17592370510101318
    2. 'ose' → logprob: -2.5509238243103027
    3. 'osen' → logprob: -3.3009238243103027
    4. ' =' → logprob: -4.050923824310303
    5. '=' → logprob: -4.300923824310303
    6. 'os' → logprob: -5.175923824310303
    7. 'oise' → logprob: -5.550923824310303
    8. 'e' → logprob: -6.800923824310303
    9. '```' → logprob: -6.800923824310303
    10. 'ain' → logprob: -7.175923824310303

Token 716: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007248217007145286
    2. '=' → logprob: -7.875724792480469
    3. ' =' → logprob: -8.250724792480469
    4. '_' → logprob: -11.250724792480469
    5. '_map' → logprob: -11.250724792480469
    6. '_i' → logprob: -11.875724792480469
    7. ' +=' → logprob: -12.000724792480469
    8. 'oi' → logprob: -12.000724792480469
    9. '```' → logprob: -12.000724792480469
    10. ' ' → logprob: -12.250724792480469

Token 717: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693072855472565
    2. '=' → logprob: -2.1269307136535645
    3. ',' → logprob: -13.626931190490723
    4. '<|end|>' → logprob: -14.501931190490723
    5. ' +=' → logprob: -14.876931190490723
    6. ' ' → logprob: -15.251931190490723
    7. ')' → logprob: -16.376930236816406
    8. ' ,' → logprob: -16.876930236816406
    9. '+=' → logprob: -17.376930236816406
    10. '0' → logprob: -17.501930236816406

Token 718: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0018420136766508222
    2. ' ' → logprob: -6.626842021942139
    3. '1' → logprob: -8.50184154510498
    4. 'B' → logprob: -8.75184154510498
    5. 'A' → logprob: -9.25184154510498
    6. '-' → logprob: -10.75184154510498
    7. 'L' → logprob: -11.25184154510498
    8. '<|end|>' → logprob: -12.00184154510498
    9. '10' → logprob: -12.62684154510498
    10. ' A' → logprob: -13.25184154510498

Token 719: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0029208993073552847
    2. 'B' → logprob: -6.877921104431152
    3. 'L' → logprob: -7.502921104431152
    4. '1' → logprob: -7.502921104431152
    5. 'A' → logprob: -7.752921104431152
    6. '-' → logprob: -9.377921104431152
    7. ' ' → logprob: -9.627921104431152
    8. '(' → logprob: -10.002921104431152
    9. 'M' → logprob: -10.252921104431152
    10. '10' → logprob: -10.752921104431152

Token 720: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3238182067871094
    2. '<|end|>' → logprob: -1.9488182067871094
    3. ' for' → logprob: -2.3238182067871094
    4. '
' → logprob: -4.073818206787109
    5. ' ' → logprob: -4.948818206787109
    6. ',' → logprob: -5.698818206787109
    7. ')' → logprob: -5.823818206787109
    8. '.' → logprob: -6.823818206787109
    9. ' 
' → logprob: -7.198818206787109
    10. 'i' → logprob: -7.198818206787109

Token 721: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01880342699587345
    2. ' for' → logprob: -4.018803596496582
    3. '<|end|>' → logprob: -8.393803596496582
    4. '
' → logprob: -8.643803596496582
    5. '```' → logprob: -9.018803596496582
    6. ')' → logprob: -10.643803596496582
    7. ',' → logprob: -10.643803596496582
    8. 'i' → logprob: -10.768803596496582
    9. '.' → logprob: -11.268803596496582
    10. 'while' → logprob: -11.518803596496582

Token 722: ' length' (ID: 5517)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5919085741043091
    2. 'length' → logprob: -1.716908574104309
    3. 'i' → logprob: -1.966908574104309
    4. 'p' → logprob: -2.8419084548950195
    5. 'part' → logprob: -3.5919084548950195
    6. '_,' → logprob: -4.5919084548950195
    7. 'pl' → logprob: -5.4669084548950195
    8. ' length' → logprob: -5.9669084548950195
    9. 'idx' → logprob: -5.9669084548950195
    10. 't' → logprob: -6.3419084548950195

Token 723: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.475046843290329
    2. 'in' → logprob: -0.9750468730926514
    3. ',' → logprob: -7.100046634674072
    4. ' ' → logprob: -10.10004711151123
    5. ' ,' → logprob: -10.35004711151123
    6. '_in' → logprob: -11.10004711151123
    7. '	in' → logprob: -11.60004711151123
    8. '_' → logprob: -11.85004711151123
    9. ')' → logprob: -11.85004711151123
    10. 'import' → logprob: -12.60004711151123

Token 724: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.012131685391068459
    2. 'left' → logprob: -4.762131690979004
    3. 'start' → logprob: -6.262131690979004
    4. ' l' → logprob: -7.012131690979004
    5. 's' → logprob: -9.137131690979004
    6. 'part' → logprob: -9.262131690979004
    7. '_l' → logprob: -9.887131690979004
    8. 'L' → logprob: -9.887131690979004
    9. 'low' → logprob: -10.012131690979004
    10. ' left' → logprob: -10.012131690979004

Token 725: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0034780744463205338
    2. ' ,' → logprob: -5.753478050231934
    3. ' in' → logprob: -8.503478050231934
    4. 'in' → logprob: -10.128478050231934
    5. ',l' → logprob: -11.003478050231934
    6. '_,' → logprob: -11.128478050231934
    7. '=' → logprob: -11.753478050231934
    8. ',
' → logprob: -13.128478050231934
    9. ',n' → logprob: -13.628478050231934
    10. ',r' → logprob: -13.878478050231934

Token 726: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -6.754368223482743e-05
    2. ' r' → logprob: -9.625067710876465
    3. '   ' → logprob: -14.000067710876465
    4. '
' → logprob: -15.750067710876465
    5. '```' → logprob: -15.875067710876465
    6. ' ' → logprob: -16.00006675720215
    7. '_r' → logprob: -16.25006675720215
    8. '	r' → logprob: -16.75006675720215
    9. '  ' → logprob: -17.50006675720215
    10. '
' → logprob: -17.62506675720215

Token 727: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06198135390877724
    2. 'in' → logprob: -2.811981439590454
    3. '   ' → logprob: -11.561981201171875
    4. '	in' → logprob: -13.436981201171875
    5. '_in' → logprob: -14.436981201171875
    6. ' ' → logprob: -14.686981201171875
    7. ',' → logprob: -15.186981201171875
    8. 'n' → logprob: -15.561981201171875
    9. ')' → logprob: -15.811981201171875
    10. '
' → logprob: -16.061981201171875

Token 728: ' partitions' (ID: 89097)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.0001454955490771681
    2. ' partitions' → logprob: -9.00014591217041
    3. ' part' → logprob: -11.50014591217041
    4. 'parts' → logprob: -11.87514591217041
    5. '(part' → logprob: -13.25014591217041
    6. 'partition' → logprob: -14.25014591217041
    7. '
' → logprob: -14.50014591217041
    8. '   ' → logprob: -14.50014591217041
    9. '	part' → logprob: -14.62514591217041
    10. ' ' → logprob: -15.12514591217041

Token 729: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04619031772017479
    2. ':
' → logprob: -3.1711902618408203
    3. '   ' → logprob: -6.29619026184082
    4. ',' → logprob: -7.42119026184082
    5. '=' → logprob: -7.79619026184082
    6. ' +=' → logprob: -9.54619026184082
    7. '+=' → logprob: -9.92119026184082
    8. '):
' → logprob: -9.92119026184082
    9. '+' → logprob: -10.17119026184082
    10. '<|end|>' → logprob: -10.42119026184082

Token 730: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0059190778993070126
    2. ' if' → logprob: -6.255918979644775
    3. '```' → logprob: -6.380918979644775
    4. '
' → logprob: -7.005918979644775
    5. ' for' → logprob: -8.005919456481934
    6. ' ans' → logprob: -8.130919456481934
    7. '    
' → logprob: -8.380919456481934
    8. '<|end|>' → logprob: -9.130919456481934
    9. 'if' → logprob: -9.380919456481934
    10. 'ans' → logprob: -9.880919456481934

Token 731: ' const' (ID: 1026)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0654902532696724
    2. 'if' → logprob: -3.065490245819092
    3. ' ans' → logprob: -4.690490245819092
    4. '   ' → logprob: -5.440490245819092
    5. ' if' → logprob: -6.440490245819092
    6. '
' → logprob: -8.19049072265625
    7. 'part' → logprob: -8.44049072265625
    8. 'temp' → logprob: -8.56549072265625
    9. 'res' → logprob: -8.81549072265625
    10. 'answer' → logprob: -9.19049072265625

Token 732: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27884405851364136
    2. '=' → logprob: -2.028844118118286
    3. ' +=' → logprob: -2.403844118118286
    4. '+=' → logprob: -4.028843879699707
    5. ',' → logprob: -6.153843879699707
    6. 's' → logprob: -7.778843879699707
    7. '+' → logprob: -8.528843879699707
    8. '   ' → logprob: -8.903843879699707
    9. ' ,' → logprob: -9.278843879699707
    10. ' ' → logprob: -9.403843879699707

Token 733: ' B' (ID: 418)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.17213869094848633
    2. '(parts' → logprob: -2.9221386909484863
    3. 'parts' → logprob: -3.0471386909484863
    4. '(part' → logprob: -4.422138690948486
    5. ' parts' → logprob: -4.547138690948486
    6. '(l' → logprob: -5.297138690948486
    7. '(' → logprob: -5.422138690948486
    8. '(B' → logprob: -5.672138690948486
    9. '((' → logprob: -5.672138690948486
    10. 'B' → logprob: -5.672138690948486

Token 734: '*r' (ID: 92096)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3289722204208374
    2. ' *' → logprob: -1.3289722204208374
    3. '*(' → logprob: -4.328972339630127
    4. '%' → logprob: -6.703972339630127
    5. '*r' → logprob: -7.203972339630127
    6. '*((' → logprob: -8.828971862792969
    7. '*l' → logprob: -9.328971862792969
    8. ' %' → logprob: -10.578971862792969
    9. '   ' → logprob: -10.828971862792969
    10. '
' → logprob: -10.953971862792969

Token 735: '+A' (ID: 195068)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6800008416175842
    2. '<|end|>' → logprob: -1.4300007820129395
    3. '+' → logprob: -1.9300007820129395
    4. ' +' → logprob: -2.6800007820129395
    5. ' -' → logprob: -4.3050007820129395
    6. ' %' → logprob: -4.3050007820129395
    7. '   ' → logprob: -5.4300007820129395
    8. '<|end|>' → logprob: -5.8050007820129395
    9. '-' → logprob: -6.9300007820129395
    10. '*' → logprob: -7.1800007820129395

Token 736: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0343029499053955
    2. '%' → logprob: -1.1593029499053955
    3. ' +' → logprob: -2.0343029499053955
    4. ' -' → logprob: -2.7843029499053955
    5. '
' → logprob: -3.5343029499053955
    6. '   ' → logprob: -3.5343029499053955
    7. '*(' → logprob: -4.034302711486816
    8. ' %' → logprob: -4.034302711486816
    9. '<|end|>' → logprob: -4.409302711486816
    10. '-' → logprob: -4.784302711486816

Token 737: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 738: ' line' (ID: 2543)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7723501324653625
    2. ' ans' → logprob: -1.0223500728607178
    3. '
' → logprob: -2.6473500728607178
    4. '<|end|>' → logprob: -3.1473500728607178
    5. ')' → logprob: -4.147350311279297
    6. '+' → logprob: -5.147350311279297
    7. 'r' → logprob: -5.522350311279297
    8. '%' → logprob: -5.522350311279297
    9. '(ans' → logprob: -5.647350311279297
    10. '   ' → logprob: -5.647350311279297

Token 739: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759314894676208
    2. ' =' → logprob: -1.5759315490722656
    3. '+=' → logprob: -1.9509315490722656
    4. ' +=' → logprob: -2.7009315490722656
    5. '+' → logprob: -4.075931549072266
    6. '_' → logprob: -7.075931549072266
    7. '_sum' → logprob: -7.825931549072266
    8. '_length' → logprob: -8.200931549072266
    9. '```' → logprob: -8.200931549072266
    10. ' +' → logprob: -8.325931549072266

Token 740: ' B' (ID: 418)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.7074816226959229
    2. ' parts' → logprob: -1.3324816226959229
    3. '(parts' → logprob: -1.8324816226959229
    4. 'parts' → logprob: -3.332481622695923
    5. ' (' → logprob: -4.207481384277344
    6. '(part' → logprob: -4.457481384277344
    7. '(' → logprob: -4.707481384277344
    8. '0' → logprob: -5.332481384277344
    9. ' part' → logprob: -5.457481384277344
    10. 'const' → logprob: -7.957481384277344

Token 741: '
' (ID: 198)
  Prédit: '*l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*l' → logprob: -0.04562538489699364
    2. ' *' → logprob: -3.5456254482269287
    3. '*r' → logprob: -4.54562520980835
    4. '*' → logprob: -5.79562520980835
    5. '<|end|>' → logprob: -6.54562520980835
    6. '*(' → logprob: -7.54562520980835
    7. 'l' → logprob: -9.795625686645508
    8. '+l' → logprob: -11.170625686645508
    9. ' l' → logprob: -11.920625686645508
    10. '<|end|>' → logprob: -12.045625686645508

Token 742: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 743: ' delta' (ID: 18800)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.10305056720972061
    2. ' ans' → logprob: -2.603050470352173
    3. 'for' → logprob: -4.478050708770752
    4. 'if' → logprob: -5.978050708770752
    5. ' for' → logprob: -6.228050708770752
    6. '   ' → logprob: -6.478050708770752
    7. 'step' → logprob: -6.603050708770752
    8. 'while' → logprob: -6.978050708770752
    9. 'segment' → logprob: -7.478050708770752
    10. 'delta' (adapté à ' delta') → logprob: -7.728050708770752

Token 744: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25934964418411255
    2. '=' → logprob: -1.8843495845794678
    3. '<|end|>' → logprob: -3.0093495845794678
    4. ' ' → logprob: -4.634349822998047
    5. ')' → logprob: -5.134349822998047
    6. '<|end|>' → logprob: -5.634349822998047
    7. ' *' → logprob: -6.259349822998047
    8. ' +=' → logprob: -6.509349822998047
    9. ',' → logprob: -7.134349822998047
    10. '*' → logprob: -7.759349822998047

Token 745: ' r' (ID: 428)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.7711198329925537
    2. 'part' → logprob: -1.7711198329925537
    3. 'r' → logprob: -2.0211198329925537
    4. 'parts' → logprob: -2.6461198329925537
    5. '(parts' → logprob: -2.7711198329925537
    6. '(r' → logprob: -3.2711198329925537
    7. ' (' → logprob: -3.6461198329925537
    8. ' r' → logprob: -4.021120071411133
    9. '(part' → logprob: -5.021120071411133
    10. '((' → logprob: -5.521120071411133

Token 746: '-l' (ID: 2887)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.14758825302124023
    2. '-' → logprob: -2.0225882530212402
    3. '+' → logprob: -5.39758825302124
    4. ' +' → logprob: -8.397588729858398
    5. '-r' → logprob: -9.647588729858398
    6. '-l' → logprob: -10.022588729858398
    7. '<|end|>' → logprob: -11.272588729858398
    8. ' ' → logprob: -12.397588729858398
    9. '   ' → logprob: -12.397588729858398
    10. ' -
' → logprob: -12.647588729858398

Token 747: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.236356720328331
    2. ' +' → logprob: -1.6113567352294922
    3. '<|end|>' → logprob: -5.361356735229492
    4. '
' → logprob: -5.861356735229492
    5. '   ' → logprob: -6.111356735229492
    6. '+
' → logprob: -7.861356735229492
    7. '<|end|>' → logprob: -7.861356735229492
    8. ' +
' → logprob: -9.111356735229492
    9. ')' → logprob: -9.861356735229492
    10. ' ' → logprob: -10.111356735229492

Token 748: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2127087504486553e-05
    2. ' ' → logprob: -10.750021934509277
    3. '```' → logprob: -15.000021934509277
    4. '   ' → logprob: -15.375021934509277
    5. '<|end|>' → logprob: -17.875022888183594
    6. ')' → logprob: -19.750022888183594
    7. '0' → logprob: -19.875022888183594
    8. '	' → logprob: -20.000022888183594
    9. '  ' → logprob: -20.125022888183594
    10. '...' → logprob: -20.250022888183594

Token 749: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4287332594394684
    2. '<|end|>' → logprob: -1.178733229637146
    3. ')' → logprob: -4.0537333488464355
    4. '+' → logprob: -4.8037333488464355
    5. '<|end|>' → logprob: -5.1787333488464355
    6. '   ' → logprob: -5.4287333488464355
    7. ' 
' → logprob: -6.6787333488464355
    8. ' ' → logprob: -6.8037333488464355
    9. '  
' → logprob: -7.4287333488464355
    10. '
' → logprob: -7.8037333488464355

Token 750: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14468489587306976
    2. '<|end|>' → logprob: -2.6446847915649414
    3. '   ' → logprob: -3.6446847915649414
    4. ')' → logprob: -4.519684791564941
    5. ' ans' → logprob: -4.769684791564941
    6. 'ans' → logprob: -4.894684791564941
    7. ' 
' → logprob: -6.019684791564941
    8. ')
' → logprob: -6.144684791564941
    9. 'tokens' → logprob: -6.644684791564941
    10. ' if' → logprob: -7.394684791564941

Token 751: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.04232843592762947
    2. 'if' → logprob: -4.292328357696533
    3. 'for' → logprob: -4.417328357696533
    4. ' ans' → logprob: -4.917328357696533
    5. 'while' → logprob: -6.667328357696533
    6. '   ' → logprob: -6.917328357696533
    7. ' if' → logprob: -7.042328357696533
    8. ' for' → logprob: -7.042328357696533
    9. 'part' → logprob: -7.042328357696533
    10. '
' → logprob: -7.292328357696533

Token 752: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7182661890983582
    2. ' =' → logprob: -1.468266248703003
    3. '=' → logprob: -1.843266248703003
    4. '+=' → logprob: -2.093266248703003
    5. '+=(' → logprob: -8.218266487121582
    6. '=(' → logprob: -9.218266487121582
    7. ' ^=' → logprob: -10.218266487121582
    8. ' =(' → logprob: -10.218266487121582
    9. '%=' → logprob: -10.968266487121582
    10. ' ' → logprob: -11.843266487121582

Token 753: ' (' (ID: 350)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.13528883457183838
    2. '(parts' → logprob: -2.135288715362549
    3. ' (' → logprob: -5.260288715362549
    4. '(part' → logprob: -5.885288715362549
    5. '(' → logprob: -8.135289192199707
    6. '(par' → logprob: -11.510289192199707
    7. '(answer' → logprob: -11.760289192199707
    8. '   ' → logprob: -11.760289192199707
    9. 'parts' → logprob: -12.635289192199707
    10. '(params' → logprob: -12.760289192199707

Token 754: 'ans' (ID: 616)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.12822096049785614
    2. 'ans' → logprob: -2.128221035003662
    3. '(parts' → logprob: -8.003220558166504
    4. 'parts' → logprob: -8.128220558166504
    5. ' ans' → logprob: -8.128220558166504
    6. ' (' → logprob: -8.503220558166504
    7. 'part' → logprob: -9.628220558166504
    8. '(' → logprob: -10.378220558166504
    9. '(answer' → logprob: -11.378220558166504
    10. '(part' → logprob: -11.503220558166504

Token 755: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.08997782319784164
    2. '+' → logprob: -2.464977741241455
    3. ' *' → logprob: -7.464977741241455
    4. '*' → logprob: -8.839978218078613
    5. ')' → logprob: -9.339978218078613
    6. ' ans' → logprob: -9.464978218078613
    7. ' ' → logprob: -9.714978218078613
    8. '%' → logprob: -11.214978218078613
    9. ' +
' → logprob: -11.214978218078613
    10. ' or' → logprob: -11.339978218078613

Token 756: ' (' (ID: 350)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.19633658230304718
    2. 'parts' → logprob: -2.446336507797241
    3. ' parts' → logprob: -2.446336507797241
    4. '(parts' → logprob: -6.32133674621582
    5. 'par' → logprob: -7.07133674621582
    6. ' part' → logprob: -7.57133674621582
    7. '   ' → logprob: -7.69633674621582
    8. '
' → logprob: -8.07133674621582
    9. 'const' → logprob: -9.07133674621582
    10. '(' → logprob: -9.32133674621582

Token 757: 'part' (ID: 5815)
  Prédit: 'part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.049211952835321426
    2. 'parts' → logprob: -3.4242119789123535
    3. 'line' → logprob: -5.2992119789123535
    4. 'const' → logprob: -6.2992119789123535
    5. '
' → logprob: -6.5492119789123535
    6. ' parts' → logprob: -6.5492119789123535
    7. 'delta' → logprob: -6.7992119789123535
    8. '(parts' → logprob: -6.9242119789123535
    9. 'lines' → logprob: -7.1742119789123535
    10. '   ' → logprob: -7.1742119789123535

Token 758: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -7.465036105713807e-06
    2. '_sum' → logprob: -13.000007629394531
    3. 'su' → logprob: -13.250007629394531
    4. 'sun' → logprob: -13.875007629394531
    5. ')' → logprob: -14.625007629394531
    6. '(sum' → logprob: -15.000007629394531
    7. 's' → logprob: -15.125007629394531
    8. 'sym' → logprob: -15.375007629394531
    9. '   ' → logprob: -16.12500762939453
    10. 'line' → logprob: -16.12500762939453

Token 759: '(-' (ID: 8087)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.00428531551733613
    2. '(const' → logprob: -5.5042853355407715
    3. '(' → logprob: -9.504284858703613
    4. '(ans' → logprob: -10.254284858703613
    5. '(B' → logprob: -10.754284858703613
    6. 'const' → logprob: -10.879284858703613
    7. 'line' → logprob: -11.004284858703613
    8. ')' → logprob: -11.754284858703613
    9. ')(' → logprob: -11.754284858703613
    10. '(
' → logprob: -12.129284858703613

Token 760: 'line' (ID: 1137)
  Prédit: 'const'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'const' → logprob: -0.6853334307670593
    2. 'line' → logprob: -0.8103334307670593
    3. 'ch' → logprob: -3.060333490371704
    4. '1' → logprob: -5.685333251953125
    5. ')' → logprob: -8.310333251953125
    6. 'delta' → logprob: -8.310333251953125
    7. '(line' → logprob: -8.435333251953125
    8. 'B' → logprob: -9.060333251953125
    9. ' const' → logprob: -10.060333251953125
    10. '   ' → logprob: -10.185333251953125

Token 761: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023262908216565847
    2. ',const' → logprob: -6.502326488494873
    3. 'const' → logprob: -7.627326488494873
    4. '*' → logprob: -9.252326011657715
    5. ',ch' → logprob: -9.502326011657715
    6. ' ,' → logprob: -9.627326011657715
    7. ',line' → logprob: -10.627326011657715
    8. ',B' → logprob: -11.502326011657715
    9. '   ' → logprob: -11.502326011657715
    10. '<|end|>' → logprob: -11.502326011657715

Token 762: ' const' (ID: 1026)
  Prédit: 'const'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'const' → logprob: -0.0500783771276474
    2. '-ch' → logprob: -4.050078392028809
    3. '-' → logprob: -4.550078392028809
    4. 'ch' → logprob: -4.800078392028809
    5. ' const' → logprob: -4.925078392028809
    6. 'line' → logprob: -6.675078392028809
    7. 'delta' → logprob: -7.050078392028809
    8. '-l' → logprob: -7.175078392028809
    9. ' ch' → logprob: -7.800078392028809
    10. '-(' → logprob: -7.925078392028809

Token 763: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005146469455212355
    2. ',length' → logprob: -6.005146503448486
    3. ',l' → logprob: -6.630146503448486
    4. ' ,' → logprob: -6.755146503448486
    5. '+' → logprob: -10.255146026611328
    6. ' +' → logprob: -10.380146026611328
    7. ',ch' → logprob: -10.880146026611328
    8. ',line' → logprob: -11.255146026611328
    9. ' *' → logprob: -11.380146026611328
    10. '*' → logprob: -11.380146026611328

Token 764: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.00014060820103622973
    2. ' length' → logprob: -8.875140190124512
    3. '   ' → logprob: -14.625140190124512
    4. 'leng' → logprob: -16.750141143798828
    5. '	length' → logprob: -16.875141143798828
    6. '(length' → logprob: -17.375141143798828
    7. 'l' → logprob: -17.500141143798828
    8. '[length' → logprob: -17.750141143798828
    9. ' ' → logprob: -18.125141143798828
    10. '-length' → logprob: -18.125141143798828

Token 765: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.839121826691553e-05
    2. ' ,' → logprob: -9.750078201293945
    3. 'delta' → logprob: -11.375078201293945
    4. ',r' → logprob: -12.625078201293945
    5. '   ' → logprob: -13.500078201293945
    6. ',d' → logprob: -13.750078201293945
    7. ' delta' → logprob: -13.875078201293945
    8. ',
' → logprob: -14.250078201293945
    9. '-' → logprob: -15.250078201293945
    10. '(delta' → logprob: -15.875078201293945

Token 766: ' delta' (ID: 18800)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.00032271104282699525
    2. ' delta' → logprob: -8.500322341918945
    3. '   ' → logprob: -9.375322341918945
    4. 'ch' → logprob: -11.250322341918945
    5. ' ' → logprob: -11.875322341918945
    6. '(delta' → logprob: -12.375322341918945
    7. '  ' → logprob: -12.625322341918945
    8. 'd' → logprob: -13.000322341918945
    9. 'r' → logprob: -13.875322341918945
    10. '       ' → logprob: -14.250322341918945

Token 767: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2617543339729309
    2. '))' → logprob: -1.8867542743682861
    3. ')))' → logprob: -2.636754274368286
    4. ')*' → logprob: -6.136754512786865
    5. '   ' → logprob: -6.511754512786865
    6. ' )' → logprob: -7.011754512786865
    7. ')+' → logprob: -7.136754512786865
    8. '-' → logprob: -7.886754512786865
    9. ' -' → logprob: -8.011754035949707
    10. ')
' → logprob: -8.136754035949707

Token 768: ' *' (ID: 425)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1323825865983963
    2. ')' → logprob: -2.13238263130188
    3. ')%' → logprob: -5.882382392883301
    4. ' ))' → logprob: -6.507382392883301
    5. ' )' → logprob: -7.757382392883301
    6. '   ' → logprob: -7.882382392883301
    7. ')))' → logprob: -9.5073823928833
    8. '%' → logprob: -9.6323823928833
    9. ' -' → logprob: -9.8823823928833
    10. '+' → logprob: -10.1323823928833

Token 769: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.02995423413813114
    2. '(' → logprob: -4.154954433441162
    3. '(pow' → logprob: -4.654954433441162
    4. ' pow' → logprob: -6.029954433441162
    5. '1' → logprob: -6.779954433441162
    6. '(-' → logprob: -8.654953956604004
    7. '2' → logprob: -9.029953956604004
    8. '10' → logprob: -9.279953956604004
    9. '(B' → logprob: -9.404953956604004
    10. '((' → logprob: -9.654953956604004

Token 770: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.289473822107539e-05
    2. '10' → logprob: -10.000062942504883
    3. '(-' → logprob: -11.875062942504883
    4. '(pow' → logprob: -12.500062942504883
    5. '(B' → logprob: -13.125062942504883
    6. '(
' → logprob: -13.250062942504883
    7. ' (' → logprob: -13.750062942504883
    8. '```' → logprob: -13.875062942504883
    9. ')' → logprob: -14.625062942504883
    10. '((' → logprob: -16.500062942504883

Token 771: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.015542369335889816
    2. '(' → logprob: -4.265542507171631
    3. 'pow' → logprob: -6.890542507171631
    4. ')' → logprob: -9.015542030334473
    5. '(-' → logprob: -9.640542030334473
    6. '(pow' → logprob: -10.265542030334473
    7. 'B' → logprob: -10.640542030334473
    8. '1' → logprob: -11.140542030334473
    9. '
' → logprob: -11.265542030334473
    10. '(B' → logprob: -11.515542030334473

Token 772: ',' (ID: 11)
  Prédit: ',ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',ch' → logprob: -0.0034426653292030096
    2. ',' → logprob: -5.753442764282227
    3. '(ch' → logprob: -8.378442764282227
    4. ',(' → logprob: -11.003442764282227
    5. ' ch' → logprob: -12.003442764282227
    6. 'ch' → logprob: -12.753442764282227
    7. '[ch' → logprob: -13.128442764282227
    8. ',l' → logprob: -13.628442764282227
    9. ' ,' → logprob: -13.628442764282227
    10. '   ' → logprob: -13.753442764282227

Token 773: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.0011355738388374448
    2. '(ch' → logprob: -7.251135349273682
    3. ' ch' → logprob: -8.00113582611084
    4. '-ch' → logprob: -9.75113582611084
    5. '   ' → logprob: -11.37613582611084
    6. '(' → logprob: -12.00113582611084
    7. 'L' → logprob: -13.12613582611084
    8. '    ' → logprob: -13.62613582611084
    9. '	ch' → logprob: -13.62613582611084
    10. 'l' → logprob: -13.75113582611084

Token 774: 'ouse' (ID: 1941)
  Prédit: 'ouse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouse' → logprob: -0.05150897800922394
    2. 'ose' → logprob: -3.551508903503418
    3. 'oise' → logprob: -4.426508903503418
    4. 'uose' → logprob: -5.176508903503418
    5. 'ause' → logprob: -7.051508903503418
    6. 'o' → logprob: -7.176508903503418
    7. 'ch' → logprob: -7.426508903503418
    8. 'osse' → logprob: -8.426508903503418
    9. 'ousse' → logprob: -8.676508903503418
    10. '```' → logprob: -8.676508903503418

Token 775: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00015979631280060858
    2. 'l' → logprob: -9.500160217285156
    3. ',' → logprob: -11.000160217285156
    4. ',i' → logprob: -11.625160217285156
    5. 'oi' → logprob: -11.625160217285156
    6. 'ivi' → logprob: -12.250160217285156
    7. '_i' → logprob: -12.500160217285156
    8. '*i' → logprob: -12.500160217285156
    9. 'r' → logprob: -12.750160217285156
    10. '```' → logprob: -13.000160217285156

Token 776: ',' (ID: 11)
  Prédit: '*l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*l' → logprob: -0.015192070044577122
    2. '*' → logprob: -4.265192031860352
    3. ',' → logprob: -7.515192031860352
    4. ' *' → logprob: -8.140192031860352
    5. 'l' → logprob: -9.140192031860352
    6. ')' → logprob: -9.765192031860352
    7. '```' → logprob: -11.640192031860352
    8. ' ,' → logprob: -12.765192031860352
    9. ',l' → logprob: -13.015192031860352
    10. '),' → logprob: -13.015192031860352

Token 777: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.00012928384239785373
    2. ' M' → logprob: -9.000129699707031
    3. '   ' → logprob: -12.625129699707031
    4. '       ' → logprob: -14.625129699707031
    5. ' ' → logprob: -15.250129699707031
    6. ')' → logprob: -15.250129699707031
    7. '100' → logprob: -15.375129699707031
    8. '  ' → logprob: -15.625129699707031
    9. '10' → logprob: -15.625129699707031
    10. '    ' → logprob: -15.750129699707031

Token 778: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09098859131336212
    2. '))' → logprob: -2.8409886360168457
    3. ')%' → logprob: -3.5909886360168457
    4. ' )' → logprob: -7.090988636016846
    5. '   ' → logprob: -9.340988159179688
    6. '+' → logprob: -9.715988159179688
    7. ')+' → logprob: -10.590988159179688
    8. ')))' → logprob: -11.715988159179688
    9. ' ))' → logprob: -11.840988159179688
    10. ' +' → logprob: -12.465988159179688

Token 779: '%' (ID: 4)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25520485639572144
    2. ')%' → logprob: -1.5052049160003662
    3. ' )' → logprob: -6.130204677581787
    4. '%' → logprob: -6.880204677581787
    5. '   ' → logprob: -10.630205154418945
    6. '+' → logprob: -11.005205154418945
    7. ' +' → logprob: -11.630205154418945
    8. ' %' → logprob: -11.630205154418945
    9. ')
' → logprob: -12.755205154418945
    10. '%)' → logprob: -13.380205154418945

Token 780: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -2.339278580620885e-06
    2. ' M' → logprob: -14.000001907348633
    3. '```' → logprob: -14.250001907348633
    4. ')' → logprob: -14.625001907348633
    5. '(M' → logprob: -14.875001907348633
    6. '(' → logprob: -17.250001907348633
    7. ' ' → logprob: -18.125001907348633
    8. '
' → logprob: -18.250001907348633
    9. '`' → logprob: -19.250001907348633
    10. '``' → logprob: -19.250001907348633

Token 781: ' )' (ID: 1546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020757809281349182
    2. '+' → logprob: -4.645757675170898
    3. ')%' → logprob: -5.270757675170898
    4. ' +' → logprob: -5.770757675170898
    5. '   ' → logprob: -7.020757675170898
    6. ' )' → logprob: -7.270757675170898
    7. ')
' → logprob: -7.520757675170898
    8. '%' → logprob: -7.770757675170898
    9. '+)' → logprob: -10.145757675170898
    10. ')+' → logprob: -10.645757675170898

Token 782: '%' (ID: 4)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22650359570980072
    2. '<|end|>' → logprob: -2.101503610610962
    3. ')' → logprob: -3.226503610610962
    4. '   ' → logprob: -3.851503610610962
    5. '+
' → logprob: -4.976503372192383
    6. ' +' → logprob: -5.101503372192383
    7. '
' → logprob: -6.476503372192383
    8. 'ch' → logprob: -7.351503372192383
    9. '[' → logprob: -7.601503372192383
    10. '+=' → logprob: -7.851503372192383

Token 783: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -3.128163257315464e-07
    2. ' M' → logprob: -16.375
    3. '(M' → logprob: -16.5
    4. '(' → logprob: -17.125
    5. '```' → logprob: -17.5
    6. '100' → logprob: -18.75
    7. ')' → logprob: -19.375
    8. 'code' → logprob: -19.625
    9. '
' → logprob: -20.5
    10. '[' → logprob: -21.0

Token 784: '
' (ID: 198)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.044255517423152924
    2. '   ' → logprob: -3.169255495071411
    3. '
' → logprob: -7.16925573348999
    4. '	ch' → logprob: -7.91925573348999
    5. ' ch' → logprob: -9.919255256652832
    6. '```' → logprob: -10.669255256652832
    7. '[ch' → logprob: -10.919255256652832
    8. '<|end|>' → logprob: -11.919255256652832
    9. '    
' → logprob: -12.419255256652832
    10. '       ' → logprob: -12.794255256652832

Token 785: '   ' (ID: 271)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.048068054020404816
    2. '<|end|>' → logprob: -3.173068046569824
    3. '\n' → logprob: -6.673068046569824
    4. '```' → logprob: -6.798068046569824
    5. '	ch' → logprob: -7.423068046569824
    6. ' ch' → logprob: -7.673068046569824
    7. '
' → logprob: -7.923068046569824
    8. '...' → logprob: -8.298068046569824
    9. 'print' → logprob: -8.673068046569824
    10. '   ' → logprob: -9.048068046569824

Token 786: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' (adapté à ' ch') → logprob: -4.274932143744081e-05
    2. ' ch' → logprob: -10.500042915344238
    3. '	ch' → logprob: -12.125042915344238
    4. '   ' → logprob: -12.375042915344238
    5. 'print' → logprob: -12.875042915344238
    6. '
' → logprob: -13.625042915344238
    7. '_ch' → logprob: -14.875042915344238
    8. '[ch' → logprob: -15.250042915344238
    9. '```' → logprob: -15.375042915344238
    10. 'c' → logprob: -15.375042915344238

Token 787: 'ouse' (ID: 1941)
  Prédit: 'ouse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouse' → logprob: -0.00604587746784091
    2. 'ose' → logprob: -5.131045818328857
    3. 'o' → logprob: -9.506046295166016
    4. 'ause' → logprob: -10.256046295166016
    5. 'uose' → logprob: -12.256046295166016
    6. 'oise' → logprob: -13.631046295166016
    7. '```' → logprob: -14.381046295166016
    8. 'ou' → logprob: -15.131046295166016
    9. 'use' → logprob: -15.756046295166016
    10. ' ' → logprob: -15.881046295166016

Token 788: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -8.895480277715251e-06
    2. 'и' → logprob: -13.000008583068848
    3. '=' → logprob: -13.125008583068848
    4. 'il' → logprob: -14.375008583068848
    5. 'u' → logprob: -14.625008583068848
    6. 'ि' → logprob: -14.625008583068848
    7. 'is' → logprob: -14.750008583068848
    8. '<|end|>' → logprob: -14.875008583068848
    9. '­i' → logprob: -15.500008583068848
    10. '**' → logprob: -15.750008583068848

Token 789: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0002907718007918447
    2. '=' → logprob: -8.250290870666504
    3. ' +=' → logprob: -10.500290870666504
    4. ']+=' → logprob: -14.500290870666504
    5. '+=(' → logprob: -14.500290870666504
    6. '```' → logprob: -14.625290870666504
    7. '+' → logprob: -14.875290870666504
    8. '+='' → logprob: -16.750289916992188
    9. '-=' → logprob: -17.875289916992188
    10. '%=' → logprob: -18.375289916992188

Token 790: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.004753714893013239
    2. 'L' → logprob: -6.129753589630127
    3. 'l' → logprob: -6.254753589630127
    4. 'delta' → logprob: -8.504754066467285
    5. 'r' → logprob: -8.629754066467285
    6. '(length' → logprob: -8.754754066467285
    7. ' length' → logprob: -10.129754066467285
    8. 'part' → logprob: -10.754754066467285
    9. 'partition' → logprob: -10.879754066467285
    10. 'len' → logprob: -11.504754066467285

Token 791: '*' (ID: 9)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 792: 'delta' (ID: 42200)
  Prédit: 'delta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.0015853313961997628
    2. '(delta' → logprob: -6.626585483551025
    3. ' delta' → logprob: -8.876585006713867
    4. '(r' → logprob: -9.751585006713867
    5. '(B' → logprob: -10.251585006713867
    6. '(' → logprob: -11.001585006713867
    7. ' (' → logprob: -12.376585006713867
    8. '(L' → logprob: -13.126585006713867
    9. 'Delta' → logprob: -13.626585006713867
    10. '((' → logprob: -14.126585006713867

Token 793: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 794: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 795: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -3.5597102396423e-05
    2. '(' → logprob: -10.375035285949707
    3. 'ans' → logprob: -12.500035285949707
    4. '(
' → logprob: -15.125035285949707
    5. '(answer' → logprob: -15.500035285949707
    6. ' (' → logprob: -16.625036239624023
    7. '()' → logprob: -16.875036239624023
    8. '(abs' → logprob: -16.875036239624023
    9. '((' → logprob: -17.875036239624023
    10. '(`' → logprob: -18.125036239624023

Token 796: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.15441757265944e-05
    2. '()' → logprob: -11.250031471252441
    3. '())' → logprob: -11.375031471252441
    4. ')
' → logprob: -13.000031471252441
    5. '))' → logprob: -13.750031471252441
    6. ')`' → logprob: -14.000031471252441
    7. '+' → logprob: -14.250031471252441
    8. '`)' → logprob: -14.500031471252441
    9. '(' → logprob: -14.875031471252441
    10. ' )' → logprob: -15.000031471252441


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 794
Tokens correctement prédits (1ère position, stricte): 304
Tokens correctement prédits (1ère position, avec adaptation): 308
Tokens correctement prédits (top 10): 622
Précision stricte (1ère position): 38.29%
Précision adaptée (1ère position): 38.79%
Précision (top 10): 78.34%
================================================================================
