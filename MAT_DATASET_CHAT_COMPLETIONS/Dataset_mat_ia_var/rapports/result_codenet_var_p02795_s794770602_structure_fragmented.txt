================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:30:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math

def int_input():
    return int(input())

def get_dimensions():
    return int_input(), int_input()

def get_number_of_items():
    return int_input()

def find_max_len(H, W):
    return max(H, W)

def compute_division(N, max_len):
    return N / max_len

def calculate_ceiling(value):
    return math.ceil(value)

def print_result(result):
    print(result)

def main():
    H, W = get_dimensions()
    N = get_number_of_items()
    max_len = find_max_len(H, W)
    division_result = compute_division(N, max_len)
    ceiling_result = calculate_ceiling(division_result)
    print_result(ceiling_result)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -8.470901229884475e-05
    2. 'import' → logprob: -10.62508487701416
    3. '```' → logprob: -11.00008487701416
    4. '\' → logprob: -11.25008487701416
    5. '.
' → logprob: -12.62508487701416
    6. 'def' → logprob: -12.75008487701416
    7. '.pi' → logprob: -12.87508487701416
    8. '\n' → logprob: -13.00008487701416
    9. '<|end|>' → logprob: -13.12508487701416
    10. '.e' → logprob: -13.25008487701416

Token 4: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009838729165494442
    2. ' calculate' → logprob: -6.009838581085205
    3. ' math' → logprob: -6.009838581085205
    4. ' sqrt' → logprob: -6.134838581085205
    5. ' space' → logprob: -7.384838581085205
    6. '_' → logprob: -7.384838581085205
    7. ' factorial' → logprob: -7.384838581085205
    8. ' ' → logprob: -8.884839057922363
    9. ' f' → logprob: -9.134839057922363
    10. ' square' → logprob: -9.634839057922363

Token 5: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3232424259185791
    2. ' _' → logprob: -2.323242425918579
    3. 'eger' → logprob: -2.448242425918579
    4. '_val' → logprob: -3.448242425918579
    5. 'er' → logprob: -3.823242425918579
    6. '(' → logprob: -4.8232421875
    7. 'e' → logprob: -5.0732421875
    8. ' ' → logprob: -5.9482421875
    9. '_e' → logprob: -6.3232421875
    10. '_(' → logprob: -6.5732421875

Token 6: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0012362991692498326
    2. '_' → logprob: -7.501236438751221
    3. '():' → logprob: -7.876236438751221
    4. '(prompt' → logprob: -9.126235961914062
    5. '("("' → logprob: -9.876235961914062
    6. 's' → logprob: -10.501235961914062
    7. ' (' → logprob: -11.126235961914062
    8. ':' → logprob: -11.126235961914062
    9. '(_' → logprob: -11.501235961914062
    10. '()' → logprob: -11.626235961914062

Token 7: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.32049915194511414
    2. '():' → logprob: -1.3204991817474365
    3. '()' → logprob: -5.945498943328857
    4. ':' → logprob: -6.070498943328857
    5. '```' → logprob: -7.445498943328857
    6. ' ():' → logprob: -7.945498943328857
    7. '):' → logprob: -8.195499420166016
    8. '(
' → logprob: -8.570499420166016
    9. ''' → logprob: -8.820499420166016
    10. '('' → logprob: -9.195499420166016

Token 8: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6721034646034241
    2. 'return' (adapté à ' return') → logprob: -0.7971034646034241
    3. ' ' → logprob: -4.172103404998779
    4. '   ' → logprob: -4.172103404998779
    5. 'r' → logprob: -6.297103404998779
    6. '(' → logprob: -6.297103404998779
    7. 'int' → logprob: -6.422103404998779
    8. 'x' → logprob: -7.797103404998779
    9. 'input' → logprob: -7.797103404998779
    10. 'i' → logprob: -7.922103404998779

Token 9: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.00019293125660624355
    2. 'int' → logprob: -9.000192642211914
    3. ' ' → logprob: -9.750192642211914
    4. '(int' → logprob: -11.625192642211914
    5. '  ' → logprob: -13.875192642211914
    6. '   ' → logprob: -14.625192642211914
    7. ' ' → logprob: -14.750192642211914
    8. ' math' → logprob: -15.625192642211914
    9. ' in' → logprob: -16.625192642211914
    10. ' (' → logprob: -16.625192642211914

Token 10: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007520937360823154
    2. '(input' → logprob: -7.625751972198486
    3. '()' → logprob: -9.125752449035645
    4. '<|end|>' → logprob: -10.375752449035645
    5. ' (' → logprob: -10.500752449035645
    6. '```' → logprob: -10.625752449035645
    7. '('' → logprob: -11.500752449035645
    8. '("("' → logprob: -11.750752449035645
    9. '((' → logprob: -12.375752449035645
    10. ' ' → logprob: -12.375752449035645

Token 11: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.19048672914505005
    2. '()' → logprob: -1.8154866695404053
    3. ')' → logprob: -5.190486907958984
    4. '(' → logprob: -5.315486907958984
    5. '()))' → logprob: -9.440486907958984
    6. ' ())' → logprob: -9.440486907958984
    7. '(()' → logprob: -12.190486907958984
    8. '`()' → logprob: -12.315486907958984
    9. '()]' → logprob: -12.565486907958984
    10. '();)' → logprob: -12.565486907958984

Token 12: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08222042769193649
    2. '

' → logprob: -3.0822203159332275
    3. 'd' → logprob: -4.707220554351807
    4. '\' → logprob: -5.207220554351807
    5. '```' → logprob: -5.707220554351807
    6. '(' → logprob: -6.082220554351807
    7. 'x' → logprob: -6.082220554351807
    8. '
' → logprob: -6.082220554351807
    9. '\n' → logprob: -6.707220554351807
    10. '()

' → logprob: -6.832220554351807

Token 13: ' get' (ID: 717)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.34076690673828125
    2. ' main' → logprob: -1.9657669067382812
    3. ' square' → logprob: -3.5907669067382812
    4. '_' → logprob: -3.7157669067382812
    5. ' add' → logprob: -4.215766906738281
    6. ' factorial' → logprob: -4.215766906738281
    7. ' _' → logprob: -4.465766906738281
    8. ' sqrt' → logprob: -4.465766906738281
    9. ' ' → logprob: -4.465766906738281
    10. ' cube' → logprob: -4.965766906738281

Token 14: '_dimensions' (ID: 157264)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.46937239170074463
    2. '_' → logprob: -1.4693723917007446
    3. '_s' → logprob: -3.719372272491455
    4. '_area' → logprob: -3.844372272491455
    5. '_max' → logprob: -3.969372272491455
    6. '_distance' → logprob: -4.219372272491455
    7. '_square' → logprob: -4.344372272491455
    8. '_math' → logprob: -4.719372272491455
    9. '_cube' → logprob: -5.219372272491455
    10. '_sum' → logprob: -5.719372272491455

Token 15: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001420472632162273
    2. '()' → logprob: -7.251420497894287
    3. '_' → logprob: -8.251420021057129
    4. ' (' → logprob: -9.001420021057129
    5. '("("' → logprob: -9.251420021057129
    6. '('' → logprob: -9.751420021057129
    7. '<|end|>' → logprob: -10.376420021057129
    8. '<|end|>' → logprob: -11.126420021057129
    9. '```' → logprob: -11.251420021057129
    10. ' ' → logprob: -11.251420021057129

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03942614793777466
    2. '()' → logprob: -3.78942608833313
    3. '(' → logprob: -4.789426326751709
    4. '    
' → logprob: -6.164426326751709
    5. '<|end|>' → logprob: -6.914426326751709
    6. ' return' → logprob: -7.164426326751709
    7. '```' → logprob: -7.164426326751709
    8. '       ' → logprob: -7.289426326751709
    9. '    ' → logprob: -8.16442584991455
    10. '()\' → logprob: -8.28942584991455

Token 17: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04617984592914581
    2. 'return' (adapté à ' return') → logprob: -3.79617977142334
    3. ' return' → logprob: -4.17117977142334
    4. '       ' → logprob: -5.54617977142334
    5. 'x' → logprob: -7.29617977142334
    6. ' ' → logprob: -7.42117977142334
    7. 'dimensions' → logprob: -7.92117977142334
    8. '```' → logprob: -8.29617977142334
    9. '    
' → logprob: -8.54617977142334
    10. '    ' → logprob: -8.54617977142334

Token 18: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.9087391495704651
    2. ' tuple' → logprob: -1.1587390899658203
    3. 'int' → logprob: -2.1587390899658203
    4. ' list' → logprob: -3.0337390899658203
    5. 'tuple' → logprob: -3.5337390899658203
    6. ' [' → logprob: -3.6587390899658203
    7. '[int' → logprob: -4.15873908996582
    8. '[' → logprob: -4.65873908996582
    9. 'list' → logprob: -4.78373908996582
    10. ' map' → logprob: -4.78373908996582

Token 19: '_input' (ID: 12507)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.14384427666664124
    2. '(' → logprob: -2.3938443660736084
    3. '_input' → logprob: -3.2688443660736084
    4. 'input' → logprob: -6.268844127655029
    5. '()' → logprob: -7.018844127655029
    6. '(_' → logprob: -7.268844127655029
    7. ')' → logprob: -7.768844127655029
    8. ' ' → logprob: -9.018844604492188
    9. ' (' → logprob: -9.143844604492188
    10. ',input' → logprob: -9.643844604492188

Token 20: '(),' (ID: 2547)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -8.73314929776825e-05
    2. '(' → logprob: -9.62508773803711
    3. ' ()' → logprob: -11.12508773803711
    4. '()
' → logprob: -13.25008773803711
    5. '()

' → logprob: -13.50008773803711
    6. '()`' → logprob: -14.50008773803711
    7. '())' → logprob: -14.62508773803711
    8. '`()' → logprob: -14.75008773803711
    9. '()<' → logprob: -14.75008773803711
    10. '(),' → logprob: -15.37508773803711

Token 21: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.10066165030002594
    2. 'int' → logprob: -2.3506617546081543
    3. ' ' → logprob: -7.850661754608154
    4. 'space' → logprob: -11.350661277770996
    5. '[int' → logprob: -11.350661277770996
    6. '  ' → logprob: -11.725661277770996
    7. '(int' → logprob: -11.850661277770996
    8. ' ' → logprob: -12.350661277770996
    9. ' space' → logprob: -12.725661277770996
    10. '2' → logprob: -12.975661277770996

Token 22: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0006768120219931006
    2. 'input' → logprob: -7.75067663192749
    3. '_' → logprob: -8.875677108764648
    4. '(' → logprob: -10.500677108764648
    5. '(input' → logprob: -10.625677108764648
    6. ')' → logprob: -10.875677108764648
    7. 'Input' → logprob: -11.500677108764648
    8. '(_' → logprob: -12.500677108764648
    9. '```' → logprob: -12.875677108764648
    10. ',' → logprob: -13.000677108764648

Token 23: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.988221684878226e-06
    2. '`()' → logprob: -13.125006675720215
    3. '()]' → logprob: -14.125006675720215
    4. '()<' → logprob: -14.250006675720215
    5. '()
' → logprob: -14.375006675720215
    6. '()`' → logprob: -14.375006675720215
    7. '()

' → logprob: -14.375006675720215
    8. '(),' → logprob: -14.375006675720215
    9. ' ()' → logprob: -15.375006675720215
    10. '())' → logprob: -15.875006675720215

Token 24: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07272976636886597
    2. '

' → logprob: -3.4477298259735107
    3. '
' → logprob: -3.6977298259735107
    4. '\' → logprob: -5.572729587554932
    5. '\n' → logprob: -5.947729587554932
    6. '```' → logprob: -6.072729587554932
    7. '<|end|>' → logprob: -6.072729587554932
    8. 'x' → logprob: -7.072729587554932
    9. '<|end|>' → logprob: -7.697729587554932
    10. '(' → logprob: -8.44773006439209

Token 25: ' get' (ID: 717)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.18625123798847198
    2. ' main' → logprob: -2.936251163482666
    3. ' compute' → logprob: -2.936251163482666
    4. ' area' → logprob: -4.311251163482666
    5. ' get' → logprob: -4.436251163482666
    6. 'calculate' → logprob: -4.686251163482666
    7. ' find' → logprob: -4.936251163482666
    8. ' is' → logprob: -5.561251163482666
    9. ' calc' → logprob: -5.561251163482666
    10. ' math' → logprob: -5.811251163482666

Token 26: '_number' (ID: 11733)
  Prédit: '_area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_area' → logprob: -0.09431979060173035
    2. '_' → logprob: -3.5943198204040527
    3. '_max' → logprob: -4.344319820404053
    4. '_volume' → logprob: -4.844319820404053
    5. '_rectangle' → logprob: -5.219319820404053
    6. '_total' → logprob: -5.719319820404053
    7. '_square' → logprob: -5.844319820404053
    8. '_per' → logprob: -6.344319820404053
    9. '_input' → logprob: -6.594319820404053
    10. '_data' → logprob: -6.719319820404053

Token 27: '_of' (ID: 8023)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.19170406460762024
    2. 's' → logprob: -2.066704034805298
    3. '(' → logprob: -4.691704273223877
    4. '_of' → logprob: -4.816704273223877
    5. '_s' → logprob: -4.941704273223877
    6. '_elements' → logprob: -5.066704273223877
    7. '_' → logprob: -5.566704273223877
    8. '_items' → logprob: -6.566704273223877
    9. '_tokens' → logprob: -6.691704273223877
    10. '_particles' → logprob: -7.066704273223877

Token 28: '_items' (ID: 27417)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -2.295684337615967
    2. '_rect' → logprob: -2.295684337615967
    3. '_c' → logprob: -2.670684337615967
    4. '_s' → logprob: -2.920684337615967
    5. '_layers' → logprob: -2.920684337615967
    6. '_cells' → logprob: -3.295684337615967
    7. '_lines' → logprob: -3.420684337615967
    8. '_sh' → logprob: -3.420684337615967
    9. '_rows' → logprob: -3.670684337615967
    10. '_b' → logprob: -3.670684337615967

Token 29: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.019383862614631653
    2. '(' → logprob: -4.019383907318115
    3. '():' → logprob: -7.269383907318115
    4. '_items' → logprob: -8.644383430480957
    5. ')' → logprob: -9.644383430480957
    6. ' ()' → logprob: -9.894383430480957
    7. 's' → logprob: -10.144383430480957
    8. '_' → logprob: -10.269383430480957
    9. '();' → logprob: -11.144383430480957
    10. '()>' → logprob: -11.394383430480957

Token 30: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08175662904977798
    2. '   ' → logprob: -2.581756591796875
    3. ' return' → logprob: -7.081756591796875
    4. 'return' → logprob: -7.081756591796875
    5. ' ()' → logprob: -7.831756591796875
    6. '()
' → logprob: -7.956756591796875
    7. '(' → logprob: -8.581756591796875
    8. '<|end|>' → logprob: -9.956756591796875
    9. ' ' → logprob: -10.081756591796875
    10. '    ' → logprob: -10.331756591796875

Token 31: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.12911126017570496
    2. '   ' → logprob: -2.1291112899780273
    3. ' return' → logprob: -6.129111289978027
    4. '```' → logprob: -13.879111289978027
    5. '	return' → logprob: -14.629111289978027
    6. ' ' → logprob: -14.754111289978027
    7. '    
' → logprob: -15.379111289978027
    8. '  ' → logprob: -15.629111289978027
    9. '    ' → logprob: -16.00411033630371
    10. '{return' → logprob: -17.00411033630371

Token 32: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.06197473779320717
    2. 'int' → logprob: -2.8119747638702393
    3. ' ' → logprob: -12.43697452545166
    4. '(int' → logprob: -13.56197452545166
    5. ' ' → logprob: -14.68697452545166
    6. '   ' → logprob: -15.18697452545166
    7. '<int' → logprob: -15.68697452545166
    8. '[int' → logprob: -15.68697452545166
    9. '	int' → logprob: -15.74947452545166
    10. '  ' → logprob: -15.93697452545166

Token 33: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -7.107425062713446e-06
    2. '_' → logprob: -13.625006675720215
    3. '_output' → logprob: -14.000006675720215
    4. '(input' → logprob: -14.250006675720215
    5. '```' → logprob: -14.250006675720215
    6. ' _' → logprob: -14.250006675720215
    7. '(_' → logprob: -14.500006675720215
    8. 'input' → logprob: -14.875006675720215
    9. '(' → logprob: -14.875006675720215
    10. '_inputs' → logprob: -14.875006675720215

Token 34: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00011427151912357658
    2. '(' → logprob: -9.125114440917969
    3. '()
' → logprob: -13.125114440917969
    4. ' ()' → logprob: -13.625114440917969
    5. '`()' → logprob: -14.250114440917969
    6. '()

' → logprob: -14.625114440917969
    7. '()`' → logprob: -14.875114440917969
    8. '()(' → logprob: -15.375114440917969
    9. '()<' → logprob: -17.00011444091797
    10. '();' → logprob: -17.00011444091797

Token 35: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0004294771933928132
    2. 'class' → logprob: -7.875429630279541
    3. '

' → logprob: -11.000429153442383
    4. '
' → logprob: -11.750429153442383
    5. 'for' → logprob: -11.750429153442383
    6. '```' → logprob: -11.875429153442383
    7. 'items' → logprob: -12.625429153442383
    8. '\' → logprob: -13.500429153442383
    9. 'import' → logprob: -13.625429153442383
    10. ' def' → logprob: -14.125429153442383

Token 36: ' find' (ID: 1646)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.5699788928031921
    2. ' get' → logprob: -1.444978952407837
    3. ' main' → logprob: -3.069978952407837
    4. ' solve' → logprob: -3.194978952407837
    5. ' find' → logprob: -4.319978713989258
    6. ' compute' → logprob: -4.319978713989258
    7. ' max' → logprob: -4.569978713989258
    8. ' pack' → logprob: -4.694978713989258
    9. ' is' → logprob: -4.819978713989258
    10. ' factorial' → logprob: -4.944978713989258

Token 37: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.6716175675392151
    2. '_opt' → logprob: -2.0466175079345703
    3. '_div' → logprob: -2.2966175079345703
    4. '_best' → logprob: -2.6716175079345703
    5. '_l' → logprob: -3.2966175079345703
    6. '_' → logprob: -3.9216175079345703
    7. '_f' → logprob: -4.04661750793457
    8. '_factor' → logprob: -4.29661750793457
    9. '_min' → logprob: -4.54661750793457
    10. '_cl' → logprob: -4.54661750793457

Token 38: '_len' (ID: 13683)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.6556869149208069
    2. '_area' → logprob: -1.530686855316162
    3. '_' → logprob: -2.655686855316162
    4. '_items' → logprob: -2.905686855316162
    5. '_capacity' → logprob: -3.280686855316162
    6. '_sum' → logprob: -4.280686855316162
    7. '_item' → logprob: -4.280686855316162
    8. '_rectangle' → logprob: -4.655686855316162
    9. '_volume' → logprob: -4.905686855316162
    10. '_weight' → logprob: -4.905686855316162

Token 39: '(H' (ID: 20904)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.7443593740463257
    2. '(' → logprob: -1.2443593740463257
    3. '_' → logprob: -1.9943593740463257
    4. '()' → logprob: -4.619359493255615
    5. '```' → logprob: -4.744359493255615
    6. '():' → logprob: -4.869359493255615
    7. '_item' → logprob: -4.994359493255615
    8. '_line' → logprob: -4.994359493255615
    9. '_of' → logprob: -5.119359493255615
    10. '_items' → logprob: -5.494359493255615

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007571723312139511
    2. ')' → logprob: -5.132571697235107
    3. '):' → logprob: -7.007571697235107
    4. '_,' → logprob: -8.382572174072266
    5. '),' → logprob: -8.882572174072266
    6. ' ,' → logprob: -9.632572174072266
    7. ',)' → logprob: -9.632572174072266
    8. 'I' → logprob: -11.257572174072266
    9. 'L' → logprob: -11.320072174072266
    10. '=' → logprob: -11.320072174072266

Token 41: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.21061041951179504
    2. ' W' → logprob: -1.7106103897094727
    3. 'L' → logprob: -5.460610389709473
    4. ' L' → logprob: -6.960610389709473
    5. ' ' → logprob: -7.335610389709473
    6. 'w' → logprob: -7.898110389709473
    7. 'h' → logprob: -8.085610389709473
    8. 'V' → logprob: -8.335610389709473
    9. '   ' → logprob: -8.398110389709473
    10. 'N' → logprob: -8.398110389709473

Token 42: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1278175711631775
    2. ',' → logprob: -2.1278176307678223
    3. ')' → logprob: -7.127817630767822
    4. ' ):' → logprob: -10.127817153930664
    5. ':' → logprob: -11.002817153930664
    6. '):
' → logprob: -11.752817153930664
    7. ' ,' → logprob: -12.252817153930664
    8. '   ' → logprob: -12.377817153930664
    9. ')):' → logprob: -13.502817153930664
    10. '),' → logprob: -13.627817153930664

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02603330835700035
    2. 'max' → logprob: -4.776033401489258
    3. ' max' → logprob: -4.901033401489258
    4. ':' → logprob: -6.026033401489258
    5. ' ' → logprob: -6.151033401489258
    6. '    ' → logprob: -6.401033401489258
    7. '    
' → logprob: -7.526033401489258
    8. ' return' → logprob: -7.651033401489258
    9. ',' → logprob: -8.276033401489258
    10. ' 
' → logprob: -8.401033401489258

Token 44: ' return' (ID: 622)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8510207533836365
    2. ' max' → logprob: -1.3510208129882812
    3. '   ' → logprob: -1.9760208129882812
    4. 'return' (adapté à ' return') → logprob: -2.7260208129882812
    5. ' return' → logprob: -2.8510208129882812
    6. ' min' → logprob: -3.9760208129882812
    7. 'min' → logprob: -4.226020812988281
    8. ' for' → logprob: -5.101020812988281
    9. 'for' → logprob: -5.726020812988281
    10. 'math' → logprob: -5.851020812988281

Token 45: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.7347044348716736
    2. 'max' → logprob: -1.2347044944763184
    3. ' min' → logprob: -2.1097044944763184
    4. 'min' → logprob: -2.3597044944763184
    5. ' math' → logprob: -4.984704494476318
    6. 'math' → logprob: -5.984704494476318
    7. ' H' → logprob: -6.484704494476318
    8. ' int' → logprob: -6.984704494476318
    9. ' ' → logprob: -7.234704494476318
    10. 'int' → logprob: -7.859704494476318

Token 46: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.07920019328594208
    2. '(' → logprob: -2.579200267791748
    3. '((' → logprob: -8.45419979095459
    4. '(math' → logprob: -9.70419979095459
    5. '(len' → logprob: -10.82919979095459
    6. '(max' → logprob: -12.07919979095459
    7. '(Math' → logprob: -12.45419979095459
    8. ' (' → logprob: -13.57919979095459
    9. '(W' → logprob: -13.82919979095459
    10. '([' → logprob: -14.20419979095459

Token 47: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005121442489326
    2. ',W' → logprob: -5.630121231079102
    3. ' ,' → logprob: -6.505121231079102
    4. ')' → logprob: -11.505121231079102
    5. '   ' → logprob: -11.755121231079102
    6. ',w' → logprob: -13.630121231079102
    7. ' ' → logprob: -13.880121231079102
    8. 'W' → logprob: -14.130121231079102
    9. ',H' → logprob: -14.255121231079102
    10. ',
' → logprob: -14.380121231079102

Token 48: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.2519404888153076
    2. ' W' → logprob: -1.5019404888153076
    3. ' ' → logprob: -12.001940727233887
    4. '   ' → logprob: -12.501940727233887
    5. '  ' → logprob: -14.251940727233887
    6. ' ' → logprob: -14.751940727233887
    7. '	W' → logprob: -15.501940727233887
    8. ')' → logprob: -15.501940727233887
    9. '    ' → logprob: -16.50193977355957
    10. ',W' → logprob: -17.25193977355957

Token 49: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.696889623621246e-06
    2. ' )' → logprob: -13.87500286102295
    3. '))' → logprob: -14.12500286102295
    4. ')
' → logprob: -14.37500286102295
    5. '   ' → logprob: -15.75000286102295
    6. '}' → logprob: -17.000001907348633
    7. '),' → logprob: -17.000001907348633
    8. ')))' → logprob: -17.000001907348633
    9. ')}' → logprob: -17.250001907348633
    10. ')return' → logprob: -17.750001907348633

Token 50: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.025973843410611153
    2. '<|end|>' → logprob: -3.7759737968444824
    3. '<|end|>' → logprob: -7.150973796844482
    4. '\' → logprob: -7.275973796844482
    5. '```' → logprob: -7.900973796844482
    6. '#' → logprob: -8.27597427368164
    7. '_' → logprob: -8.52597427368164
    8. '
' → logprob: -8.90097427368164
    9. ')' → logprob: -9.90097427368164
    10. ' def' → logprob: -9.90097427368164

Token 51: ' compute' (ID: 23864)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.09547845274209976
    2. ' main' → logprob: -3.5954785346984863
    3. ' max' → logprob: -3.7204785346984863
    4. ' get' → logprob: -4.845478534698486
    5. 'find' → logprob: -4.970478534698486
    6. ' min' → logprob: -5.220478534698486
    7. ' calculate' → logprob: -5.595478534698486
    8. ' l' → logprob: -5.970478534698486
    9. ' def' → logprob: -6.345478534698486
    10. ' is' → logprob: -6.720478534698486

Token 52: '_div' (ID: 36926)
  Prédit: '_area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_area' → logprob: -0.7813988924026489
    2. '_max' → logprob: -0.9063988924026489
    3. '_factor' → logprob: -4.031398773193359
    4. '_' → logprob: -4.281398773193359
    5. '_volume' → logprob: -4.406398773193359
    6. '_square' → logprob: -4.781398773193359
    7. '_s' → logprob: -5.031398773193359
    8. '_total' → logprob: -5.031398773193359
    9. '(' → logprob: -5.031398773193359
    10. '_cube' → logprob: -5.406398773193359

Token 53: 'ision' (ID: 3625)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.3898693323135376
    2. 'ide' → logprob: -2.139869213104248
    3. '_' → logprob: -2.889869213104248
    4. 'iders' → logprob: -3.014869213104248
    5. 'isor' → logprob: -3.139869213104248
    6. 'ision' → logprob: -4.639869213104248
    7. 'isible' → logprob: -4.889869213104248
    8. 'ider' → logprob: -5.014869213104248
    9. 'mod' → logprob: -5.014869213104248
    10. 's' → logprob: -5.264869213104248

Token 54: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5305218696594238
    2. '(n' → logprob: -1.2805218696594238
    3. '(a' → logprob: -3.155521869659424
    4. '(x' → logprob: -3.655521869659424
    5. '(H' → logprob: -4.280521869659424
    6. '(value' → logprob: -4.655521869659424
    7. '(num' → logprob: -4.780521869659424
    8. ' (' → logprob: -4.780521869659424
    9. '_result' → logprob: -5.030521869659424
    10. '(number' → logprob: -6.280521869659424

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011793258599936962
    2. '):' → logprob: -4.76179313659668
    3. ' ,' → logprob: -6.38679313659668
    4. '):
' → logprob: -7.01179313659668
    5. ')' → logprob: -8.88679313659668
    6. ',N' → logprob: -10.01179313659668
    7. ' //' → logprob: -10.13679313659668
    8. ' ):' → logprob: -10.51179313659668
    9. '   ' → logprob: -10.63679313659668
    10. '):
' → logprob: -10.69929313659668

Token 56: ' max' (ID: 2999)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -1.1061736345291138
    2. ' K' → logprob: -1.8561736345291138
    3. ' D' → logprob: -2.356173515319824
    4. ' divisor' → logprob: -2.481173515319824
    5. ' max' → logprob: -2.856173515319824
    6. ' ' → logprob: -3.231173515319824
    7. ' H' → logprob: -3.231173515319824
    8. 'M' → logprob: -3.481173515319824
    9. 'D' → logprob: -3.731173515319824
    10. 'K' → logprob: -3.981173515319824

Token 57: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.0015877006808295846
    2. 'len' → logprob: -6.876587867736816
    3. '_length' → logprob: -8.126587867736816
    4. 'Len' → logprob: -8.501587867736816
    5. '_l' → logprob: -11.626587867736816
    6. '_LEN' → logprob: -12.001587867736816
    7. '_' → logprob: -12.126587867736816
    8. '_val' → logprob: -12.126587867736816
    9. '_div' → logprob: -12.126587867736816
    10. ')' → logprob: -12.501587867736816

Token 58: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021625321358442307
    2. '):
' → logprob: -3.896625280380249
    3. '):
' → logprob: -7.021625518798828
    4. ')' → logprob: -9.396625518798828
    5. ' ):' → logprob: -10.271625518798828
    6. ',' → logprob: -10.646625518798828
    7. '):

' → logprob: -10.896625518798828
    8. '   ' → logprob: -11.521625518798828
    9. ' ' → logprob: -12.271625518798828
    10. '=' → logprob: -12.396625518798828

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007852434180676937
    2. ':' → logprob: -6.007852554321289
    3. ' return' → logprob: -6.257852554321289
    4. ':
' → logprob: -7.382852554321289
    5. ' (' → logprob: -7.507852554321289
    6. ' math' → logprob: -8.007852554321289
    7. ' =' → logprob: -8.257852554321289
    8. ' :' → logprob: -8.382852554321289
    9. 'return' → logprob: -8.632852554321289
    10. '):
' → logprob: -9.132852554321289

Token 60: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5814292430877686
    2. '   ' → logprob: -1.0814292430877686
    3. ' return' → logprob: -2.4564292430877686
    4. 'math' → logprob: -4.831429481506348
    5. 'N' → logprob: -6.206429481506348
    6. ' N' → logprob: -6.706429481506348
    7. ' math' → logprob: -6.706429481506348
    8. 'if' → logprob: -6.831429481506348
    9. 'import' → logprob: -6.956429481506348
    10. ' if' → logprob: -8.081429481506348

Token 61: ' N' (ID: 478)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.6942667365074158
    2. 'N' → logprob: -0.8192667365074158
    3. ' math' → logprob: -3.8192667961120605
    4. '(N' → logprob: -4.3192667961120605
    5. ' N' → logprob: -4.3192667961120605
    6. '(math' → logprob: -5.1942667961120605
    7. 'int' → logprob: -6.6942667961120605
    8. ' (' → logprob: -6.6942667961120605
    9. '(' → logprob: -7.3192667961120605
    10. 'max' → logprob: -7.3192667961120605

Token 62: ' /' (ID: 820)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.06701885163784027
    2. '//' → logprob: -2.817018747329712
    3. ' /' → logprob: -5.817018985748291
    4. '/' → logprob: -7.317018985748291
    5. ' ' → logprob: -7.317018985748291
    6. ',' → logprob: -8.317018508911133
    7. '   ' → logprob: -9.192018508911133
    8. 'div' → logprob: -9.567018508911133
    9. '#' → logprob: -9.942018508911133
    10. ' #' → logprob: -9.942018508911133

Token 63: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5759477615356445
    2. ' max' → logprob: -0.8259477615356445
    3. ' float' → logprob: -12.700947761535645
    4. 'float' → logprob: -12.950947761535645
    5. '(max' → logprob: -13.325947761535645
    6. ' ' → logprob: -14.700947761535645
    7. ' math' → logprob: -14.950947761535645
    8. '2' → logprob: -16.075946807861328
    9. 'math' → logprob: -16.075946807861328
    10. '	max' → logprob: -16.575946807861328

Token 64: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -1.981667537620524e-06
    2. '_' → logprob: -13.750001907348633
    3. 'len' → logprob: -15.000001907348633
    4. '_length' → logprob: -15.750001907348633
    5. '_l' → logprob: -15.750001907348633
    6. ' _' → logprob: -16.000001907348633
    7. '_le' → logprob: -16.500001907348633
    8. '```' → logprob: -18.000001907348633
    9. '_LEN' → logprob: -18.250001907348633
    10. '_max' → logprob: -19.500001907348633

Token 65: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.53745037317276
    2. '
' → logprob: -1.5374503135681152
    3. '*' → logprob: -2.1624503135681152
    4. '<|end|>' → logprob: -3.2874503135681152
    5. '

' → logprob: -4.162450313568115
    6. ')' → logprob: -5.162450313568115
    7. '```' → logprob: -5.162450313568115
    8. '<|end|>' → logprob: -5.912450313568115
    9. '.' → logprob: -6.037450313568115
    10. '\n' → logprob: -6.162450313568115

Token 66: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7004020810127258
    2. '*' → logprob: -1.575402021408081
    3. 'def' → logprob: -2.325402021408081
    4. '<|end|>' → logprob: -2.325402021408081
    5. '_' → logprob: -3.450402021408081
    6. '(
' → logprob: -4.45040225982666
    7. ')' → logprob: -4.82540225982666
    8. '()' → logprob: -4.82540225982666
    9. '**' → logprob: -5.07540225982666
    10. ' ' → logprob: -5.07540225982666

Token 67: ' calculate' (ID: 17950)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3371973931789398
    2. ' compute' → logprob: -2.2121973037719727
    3. ' find' → logprob: -2.9621973037719727
    4. ' math' → logprob: -3.2121973037719727
    5. 'main' → logprob: -4.087197303771973
    6. ' max' → logprob: -4.212197303771973
    7. ' get' → logprob: -4.337197303771973
    8. ' round' → logprob: -4.712197303771973
    9. ' calculate' → logprob: -4.837197303771973
    10. 'compute' → logprob: -5.212197303771973

Token 68: '_ce' (ID: 137725)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.9925324320793152
    2. '_area' → logprob: -1.74253249168396
    3. '_total' → logprob: -2.74253249168396
    4. '_items' → logprob: -3.24253249168396
    5. '_div' → logprob: -3.74253249168396
    6. '_' → logprob: -3.86753249168396
    7. '_ratio' → logprob: -3.86753249168396
    8. '_required' → logprob: -4.367532253265381
    9. '_rectangle' → logprob: -4.367532253265381
    10. '_s' → logprob: -4.492532253265381

Token 69: 'iling' (ID: 10741)
  Prédit: 'il'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'il' → logprob: -0.0035051610320806503
    2. 'iling' → logprob: -5.753505229949951
    3. 'ilm' → logprob: -9.128504753112793
    4. 'ils' → logprob: -9.878504753112793
    5. 'ilst' → logprob: -10.628504753112793
    6. '_il' → logprob: -10.878504753112793
    7. 'iled' → logprob: -11.003504753112793
    8. 'ilor' → logprob: -11.003504753112793
    9. 'ilang' → logprob: -11.378504753112793
    10. 'iloc' → logprob: -11.878504753112793

Token 70: '(value' (ID: 6333)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.025878358632326126
    2. '(N' → logprob: -4.525878429412842
    3. '(value' → logprob: -5.525878429412842
    4. '(n' → logprob: -5.900878429412842
    5. ' (' → logprob: -6.275878429412842
    6. '_div' → logprob: -6.650878429412842
    7. '(number' → logprob: -6.775878429412842
    8. '(div' → logprob: -7.025878429412842
    9. '(x' → logprob: -7.150878429412842
    10. '(num' → logprob: -7.525878429412842

Token 71: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0016236489173024893
    2. '):
' → logprob: -6.501623630523682
    3. ' ):' → logprob: -9.62662410736084
    4. ')' → logprob: -10.75162410736084
    5. ':' → logprob: -11.25162410736084
    6. '   ' → logprob: -11.50162410736084
    7. '):
' → logprob: -11.75162410736084
    8. ' ' → logprob: -14.12662410736084
    9. '  ' → logprob: -14.87662410736084
    10. '():' → logprob: -15.00162410736084

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025183463003486395
    2. ' math' → logprob: -6.377518177032471
    3. 'math' → logprob: -7.252518177032471
    4. ' return' → logprob: -9.877518653869629
    5. 'import' → logprob: -10.252518653869629
    6. 'return' → logprob: -11.002518653869629
    7. '    ' → logprob: -13.877518653869629
    8. '(math' → logprob: -14.002518653869629
    9. '  ' → logprob: -14.127518653869629
    10. ' ' → logprob: -14.502518653869629

Token 73: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7278266549110413
    2. '   ' → logprob: -1.4778265953063965
    3. 'return' (adapté à ' return') → logprob: -1.6028265953063965
    4. 'math' → logprob: -3.1028265953063965
    5. ' math' → logprob: -3.2278265953063965
    6. 'import' → logprob: -5.8528265953063965
    7. ' ' → logprob: -10.102827072143555
    8. ' import' → logprob: -10.352827072143555
    9. '  ' → logprob: -10.852827072143555
    10. '	return' → logprob: -11.227827072143555

Token 74: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.04868558794260025
    2. 'math' → logprob: -3.0486855506896973
    3. ' int' → logprob: -9.798686027526855
    4. ' ' → logprob: -10.423686027526855
    5. 'int' → logprob: -12.173686027526855
    6. '(math' → logprob: -12.673686027526855
    7. ' ' → logprob: -13.048686027526855
    8. '  ' → logprob: -13.673686027526855
    9. '   ' → logprob: -14.298686027526855
    10. '.math' → logprob: -15.173686027526855

Token 75: '.ceil' (ID: 60295)
  Prédit: '.ceil'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ceil' → logprob: -0.0011871340684592724
    2. '.' → logprob: -6.751187324523926
    3. '.ce' → logprob: -11.751187324523926
    4. ' .' → logprob: -11.751187324523926
    5. '.c' → logprob: -15.001187324523926
    6. 'ceil' → logprob: -15.376187324523926
    7. '`.' → logprob: -15.751187324523926
    8. '.floor' → logprob: -16.00118637084961
    9. '.sqrt' → logprob: -16.37618637084961
    10. '.isnan' → logprob: -16.37618637084961

Token 76: '(value' (ID: 6333)
  Prédit: '(value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(value' → logprob: -0.023247109726071358
    2. '(' → logprob: -3.773247003555298
    3. ' (' → logprob: -14.148246765136719
    4. '(
' → logprob: -14.523246765136719
    5. '(Value' → logprob: -16.02324676513672
    6. '(

' → logprob: -16.02324676513672
    7. '(user' → logprob: -17.02324676513672
    8. '((' → logprob: -17.27324676513672
    9. 'value' → logprob: -17.52324676513672
    10. '('' → logprob: -17.77324676513672

Token 77: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.696889623621246e-06
    2. ' )' → logprob: -13.12500286102295
    3. ')
' → logprob: -15.00000286102295
    4. '))' → logprob: -16.000001907348633
    5. '   ' → logprob: -16.500001907348633
    6. '())' → logprob: -16.750001907348633
    7. ')`' → logprob: -17.250001907348633
    8. ')}' → logprob: -17.375001907348633
    9. ')return' → logprob: -17.625001907348633
    10. '*' → logprob: -18.000001907348633

Token 78: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011315654963254929
    2. '<|end|>' → logprob: -4.636315822601318
    3. '```' → logprob: -7.136315822601318
    4. '
' → logprob: -8.51131534576416
    5. '<|end|>' → logprob: -8.51131534576416
    6. '

' → logprob: -8.76131534576416
    7. '#' → logprob: -9.63631534576416
    8. 'import' → logprob: -10.13631534576416
    9. ' def' → logprob: -10.88631534576416
    10. '\' → logprob: -11.01131534576416

Token 79: ' print' (ID: 2123)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.09591513127088547
    2. 'main' → logprob: -2.4709150791168213
    3. ' max' → logprob: -6.2209153175354
    4. ' calculate' → logprob: -6.7209153175354
    5. 'calculate' → logprob: -7.2209153175354
    6. ' find' → logprob: -7.4709153175354
    7. 'max' → logprob: -7.5959153175354
    8. ' compute' → logprob: -8.345914840698242
    9. ' is' → logprob: -8.595914840698242
    10. ' solve' → logprob: -8.720914840698242

Token 80: '_result' (ID: 11623)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003858031937852502
    2. '_' → logprob: -6.6288580894470215
    3. '()' → logprob: -7.5038580894470215
    4. '("")' → logprob: -7.5038580894470215
    5. '('' → logprob: -7.6288580894470215
    6. '("("' → logprob: -8.253857612609863
    7. '("""' → logprob: -8.628857612609863
    8. ' (' → logprob: -9.628857612609863
    9. '(max' → logprob: -9.628857612609863
    10. '(""' → logprob: -10.253857612609863

Token 81: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08188481628894806
    2. '()' → logprob: -2.5818848609924316
    3. '(result' → logprob: -6.081884860992432
    4. '(value' → logprob: -8.581884384155273
    5. '(print' → logprob: -8.956884384155273
    6. '("("' → logprob: -9.581884384155273
    7. '(()' → logprob: -9.706884384155273
    8. ' (' → logprob: -9.831884384155273
    9. '('' → logprob: -10.331884384155273
    10. '(output' → logprob: -10.956884384155273

Token 82: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10042157024145126
    2. ')' → logprob: -2.350421667098999
    3. '):
' → logprob: -8.475421905517578
    4. '):
' → logprob: -13.600421905517578
    5. ':' → logprob: -13.850421905517578
    6. ')**' → logprob: -13.975421905517578
    7. '   ' → logprob: -14.100421905517578
    8. ' ):' → logprob: -14.225421905517578
    9. '):

' → logprob: -14.600421905517578
    10. ' ' → logprob: -15.600421905517578

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008754377253353596
    2. ' print' → logprob: -4.758754253387451
    3. 'print' → logprob: -8.88375473022461
    4. '```' → logprob: -13.75875473022461
    5. '	print' → logprob: -16.50875473022461
    6. '   ' → logprob: -17.00875473022461
    7. '(print' → logprob: -17.63375473022461
    8. '    ' → logprob: -18.75875473022461
    9. '    
' → logprob: -19.50875473022461
    10. '       ' → logprob: -19.75875473022461

Token 84: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5773476362228394
    2. 'print' (adapté à ' print') → logprob: -0.8273476362228394
    3. '   ' → logprob: -6.577347755432129
    4. '```' → logprob: -11.077347755432129
    5. '	print' → logprob: -16.202346801757812
    6. 'def' → logprob: -16.577346801757812
    7. '``' → logprob: -17.077346801757812
    8. '    ' → logprob: -17.577346801757812
    9. ' ' → logprob: -18.702346801757812
    10. '`' → logprob: -18.702346801757812

Token 85: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.004119480960071087
    2. '(' → logprob: -5.504119396209717
    3. 'result' → logprob: -10.129119873046875
    4. '_result' → logprob: -14.504119873046875
    5. '()' → logprob: -15.504119873046875
    6. ' (' → logprob: -16.129119873046875
    7. '=result' → logprob: -16.504119873046875
    8. ',result' → logprob: -16.754119873046875
    9. 'Result' → logprob: -17.004119873046875
    10. '(Result' → logprob: -17.004119873046875

Token 86: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')
' → logprob: -16.375
    3. ' )' → logprob: -17.5
    4. '))' → logprob: -17.75
    5. ')}' → logprob: -19.5
    6. '()' → logprob: -19.625
    7. '())' → logprob: -19.875
    8. ')`' → logprob: -19.875
    9. '),' → logprob: -20.125
    10. ')

' → logprob: -20.25

Token 87: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008366700261831284
    2. '```' → logprob: -5.508366584777832
    3. 'if' → logprob: -5.883366584777832
    4. '<|end|>' → logprob: -7.883366584777832
    5. 'for' → logprob: -8.008366584777832
    6. '#' → logprob: -8.258366584777832
    7. '

' → logprob: -8.883366584777832
    8. 'import' → logprob: -9.258366584777832
    9. '
' → logprob: -9.633366584777832
    10. '\' → logprob: -10.133366584777832

Token 88: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6934977769851685
    2. 'main' → logprob: -0.6934977769851685
    3. 'solve' → logprob: -8.943497657775879
    4. ' solve' → logprob: -9.693497657775879
    5. 'calculate' → logprob: -9.818497657775879
    6. 'max' → logprob: -10.318497657775879
    7. 'process' → logprob: -10.943497657775879
    8. ' calculate' → logprob: -11.443497657775879
    9. ' max' → logprob: -11.568497657775879
    10. ' process' → logprob: -12.193497657775879

Token 89: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0011216417187824845
    2. '(' → logprob: -6.876121520996094
    3. '()' → logprob: -9.501121520996094
    4. '(:' → logprob: -12.126121520996094
    5. ' ():' → logprob: -12.501121520996094
    6. '():
' → logprob: -13.251121520996094
    7. ':' → logprob: -14.126121520996094
    8. '_' → logprob: -14.251121520996094
    9. '(":' → logprob: -14.251121520996094
    10. '(**' → logprob: -14.751121520996094

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02405661717057228
    2. 'H' → logprob: -3.8990566730499268
    3. ' H' → logprob: -6.149056434631348
    4. '(H' → logprob: -7.149056434631348
    5. '    
' → logprob: -8.149056434631348
    6. '```' → logprob: -9.149056434631348
    7. '(' → logprob: -9.524056434631348
    8. '	H' → logprob: -10.149056434631348
    9. ' (' → logprob: -11.524056434631348
    10. ' ' → logprob: -12.024056434631348

Token 91: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' (adapté à ' H') → logprob: -6.015305552864447e-05
    2. ' H' → logprob: -10.375060081481934
    3. '   ' → logprob: -10.625060081481934
    4. 'height' → logprob: -13.125060081481934
    5. 'h' → logprob: -13.250060081481934
    6. ' ' → logprob: -15.250060081481934
    7. '  ' → logprob: -15.500060081481934
    8. 'def' → logprob: -16.12506103515625
    9. '```' → logprob: -16.25006103515625
    10. '    
' → logprob: -16.75006103515625

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004025481757707894
    2. ' ,' → logprob: -8.000402450561523
    3. ',W' → logprob: -9.625402450561523
    4. ',H' → logprob: -15.500402450561523
    5. '=' → logprob: -15.750402450561523
    6. ' =' → logprob: -15.875402450561523
    7. ')' → logprob: -16.250402450561523
    8. '_,' → logprob: -16.250402450561523
    9. '‌,' → logprob: -16.500402450561523
    10. 'W' → logprob: -16.750402450561523

Token 93: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.42877334356307983
    2. 'W' → logprob: -1.0537734031677246
    3. '<|end|>' → logprob: -10.178772926330566
    4. ' ' → logprob: -10.553772926330566
    5. '    ' → logprob: -12.303772926330566
    6. '  ' → logprob: -13.553772926330566
    7. ' ' → logprob: -14.303772926330566
    8. '   ' → logprob: -14.678772926330566
    9. '‌' → logprob: -15.053772926330566
    10. '<|end|>' → logprob: -15.178772926330566

Token 94: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029750604182481766
    2. '=' → logprob: -3.5297505855560303
    3. ',' → logprob: -16.77975082397461
    4. ' =)' → logprob: -16.90475082397461
    5. '＝' → logprob: -17.27975082397461
    6. ' =
' → logprob: -17.90475082397461
    7. ' ' → logprob: -18.15475082397461
    8. ')' → logprob: -18.27975082397461
    9. '=input' → logprob: -18.65475082397461
    10. '<|end|>' → logprob: -18.77975082397461

Token 95: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.014163863845169544
    2. 'get' → logprob: -4.264163970947266
    3. ' find' → logprob: -15.639163970947266
    4. '=get' → logprob: -16.014163970947266
    5. '	get' → logprob: -16.764163970947266
    6. '(get' → logprob: -17.514163970947266
    7. ' int' → logprob: -18.764163970947266
    8. ' ' → logprob: -18.764163970947266
    9. '[get' → logprob: -19.889163970947266
    10. ')get' → logprob: -20.389163970947266

Token 96: '_dimensions' (ID: 157264)
  Prédit: '_dimensions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dimensions' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.125000953674316
    3. '_dims' → logprob: -16.375
    4. '_dim' → logprob: -16.375
    5. 'dimensions' → logprob: -16.875
    6. '_dimension' → logprob: -17.75
    7. '_d' → logprob: -18.125
    8. '_coordinates' → logprob: -18.5
    9. ' _' → logprob: -18.75
    10. '_di' → logprob: -19.25

Token 97: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.0484450437361374e-05
    2. '()
' → logprob: -10.125040054321289
    3. '()

' → logprob: -15.500040054321289
    4. '()\' → logprob: -16.50004005432129
    5. '()
' → logprob: -16.75004005432129
    6. ' ()' → logprob: -16.75004005432129
    7. '()`' → logprob: -18.25004005432129
    8. '()<' → logprob: -18.50004005432129
    9. '(),' → logprob: -18.75004005432129
    10. '())' → logprob: -18.87504005432129

Token 98: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2814377546310425
    2. 'N' → logprob: -1.5314377546310425
    3. ' N' → logprob: -3.906437873840332
    4. 'n' → logprob: -5.031437873840332
    5. 'K' → logprob: -6.531437873840332
    6. ' K' → logprob: -8.906437873840332
    7. '```' → logprob: -8.906437873840332
    8. 'num' → logprob: -9.281437873840332
    9. 'number' → logprob: -9.531437873840332
    10. ' n' → logprob: -9.656437873840332

Token 99: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.003916564863175154
    2. '   ' → logprob: -6.0039167404174805
    3. 'n' → logprob: -7.2539167404174805
    4. ' N' → logprob: -7.3789167404174805
    5. 'K' → logprob: -10.37891674041748
    6. 'max' → logprob: -10.50391674041748
    7. 'number' → logprob: -10.50391674041748
    8. 'num' → logprob: -12.25391674041748
    9. '```' → logprob: -12.75391674041748
    10. '  ' → logprob: -13.25391674041748

Token 100: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602269560098648
    2. '=' → logprob: -1.9102269411087036
    3. '=int' → logprob: -13.285226821899414
    4. '   ' → logprob: -14.535226821899414
    5. ' ' → logprob: -14.910226821899414
    6. '  ' → logprob: -15.410226821899414
    7. ',' → logprob: -17.035226821899414
    8. '=input' → logprob: -17.660226821899414
    9. '=get' → logprob: -17.660226821899414
    10. '＝' → logprob: -17.785226821899414

Token 101: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.011048642918467522
    2. ' get' → logprob: -4.511048793792725
    3. 'int' → logprob: -14.011048316955566
    4. '   ' → logprob: -18.011049270629883
    5. '=get' → logprob: -18.136049270629883
    6. '	get' → logprob: -18.886049270629883
    7. ' int' → logprob: -19.011049270629883
    8. '(get' → logprob: -19.636049270629883
    9. ' ' → logprob: -20.511049270629883
    10. '_get' → logprob: -21.136049270629883

Token 102: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -1.2664456789934775e-06
    2. 'umber' → logprob: -14.125000953674316
    3. 'number' → logprob: -14.625000953674316
    4. '_NUMBER' → logprob: -19.500001907348633
    5. '_' → logprob: -20.375001907348633
    6. '_input' → logprob: -20.500001907348633
    7. ' number' → logprob: -21.000001907348633
    8. '<number' → logprob: -21.250001907348633
    9. '```' → logprob: -21.625001907348633
    10. '_numbers' → logprob: -21.750001907348633

Token 103: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.008618119172751904
    2. '_items' → logprob: -4.758618354797363
    3. 'of' → logprob: -13.133618354797363
    4. 'ber' → logprob: -14.883618354797363
    5. 'Of' → logprob: -15.508618354797363
    6. 's' → logprob: -15.633618354797363
    7. '_tokens' → logprob: -16.258617401123047
    8. '_' → logprob: -16.383617401123047
    9. 'items' → logprob: -16.508617401123047
    10. ' of' → logprob: -16.633617401123047

Token 104: '_items' (ID: 27417)
  Prédit: '_items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_items' → logprob: -0.16022838652133942
    2. 'items' → logprob: -1.9102283716201782
    3. 'item' → logprob: -13.785228729248047
    4. 'Items' → logprob: -14.035228729248047
    5. 'input' → logprob: -14.035228729248047
    6. 'tems' → logprob: -15.160228729248047
    7. '_ITEMS' → logprob: -15.285228729248047
    8. 'int' → logprob: -15.535228729248047
    9. '_inputs' → logprob: -15.660228729248047
    10. '(items' → logprob: -15.785228729248047

Token 105: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00011033779446734115
    2. '()
' → logprob: -9.125110626220703
    3. ' ()' → logprob: -14.750110626220703
    4. '()

' → logprob: -14.875110626220703
    5. '()\' → logprob: -16.000110626220703
    6. '()`' → logprob: -16.125110626220703
    7. '()"' → logprob: -16.500110626220703
    8. '(' → logprob: -16.625110626220703
    9. '()]' → logprob: -17.125110626220703
    10. '()<' → logprob: -17.125110626220703

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11492723226547241
    2. ' max' → logprob: -2.364927291870117
    3. 'max' → logprob: -4.239927291870117
    4. '```' → logprob: -9.239927291870117
    5. '
' → logprob: -9.864927291870117
    6. '    
' → logprob: -10.489927291870117
    7. '	max' → logprob: -11.864927291870117
    8. ' maximum' → logprob: -12.739927291870117
    9. '_max' → logprob: -12.864927291870117
    10. ' next' → logprob: -13.614927291870117

Token 107: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.01137411966919899
    2. ' max' → logprob: -4.511373996734619
    3. '   ' → logprob: -8.511374473571777
    4. 'result' → logprob: -9.636374473571777
    5. 'import' → logprob: -10.886374473571777
    6. 'if' → logprob: -11.636374473571777
    7. 'm' → logprob: -12.261374473571777
    8. 'res' → logprob: -12.261374473571777
    9. '	max' → logprob: -13.136374473571777
    10. 'min' → logprob: -13.261374473571777

Token 108: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -6.2729995988775045e-06
    2. '_' → logprob: -12.000006675720215
    3. '_length' → logprob: -16.2500057220459
    4. '_LEN' → logprob: -18.2500057220459
    5. '_val' → logprob: -19.0000057220459
    6. '_l' → logprob: -19.3750057220459
    7. ' _' → logprob: -19.3750057220459
    8. 'len' → logprob: -19.5000057220459
    9. 'Len' → logprob: -19.8750057220459
    10. '=_' → logprob: -20.1250057220459

Token 109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00861468818038702
    2. '=' → logprob: -4.758614540100098
    3. ')' → logprob: -16.258615493774414
    4. ' ' → logprob: -17.008615493774414
    5. '(' → logprob: -17.508615493774414
    6. '(H' → logprob: -17.508615493774414
    7. 's' → logprob: -18.508615493774414
    8. ',' → logprob: -18.508615493774414
    9. '=find' → logprob: -18.508615493774414
    10. '  ' → logprob: -19.008615493774414

Token 110: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.20147639513015747
    2. 'find' → logprob: -1.7014763355255127
    3. ' max' → logprob: -10.201476097106934
    4. 'max' → logprob: -10.826476097106934
    5. '(find' → logprob: -12.076476097106934
    6. '	find' → logprob: -15.201476097106934
    7. '=find' → logprob: -16.07647705078125
    8. ')find' → logprob: -18.70147705078125
    9. '.find' → logprob: -18.82647705078125
    10. ' ' → logprob: -18.95147705078125

Token 111: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.00014919086243025959
    2. '_len' → logprob: -9.00014877319336
    3. 'max' → logprob: -10.62514877319336
    4. '_' → logprob: -14.12514877319336
    5. ' _' → logprob: -15.25014877319336
    6. '__' → logprob: -16.25014877319336
    7. 'Max' → logprob: -16.50014877319336
    8. '(_' → logprob: -16.50014877319336
    9. '_Max' → logprob: -16.87514877319336
    10. '(max' → logprob: -17.37514877319336

Token 112: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -6.704273118884885e-07
    2. 'len' → logprob: -15.125000953674316
    3. ' _' → logprob: -16.375
    4. '_' → logprob: -16.5
    5. '(_' → logprob: -16.625
    6. '_LEN' → logprob: -17.0
    7. '_length' → logprob: -18.875
    8. 'Len' → logprob: -19.0
    9. '(len' → logprob: -19.25
    10. '_l' → logprob: -19.5

Token 113: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -4.060365608893335e-05
    2. '(' → logprob: -10.125041007995605
    3. ' (' → logprob: -14.500041007995605
    4. '((' → logprob: -18.00004005432129
    5. '(h' → logprob: -18.62504005432129
    6. '(
' → logprob: -18.75004005432129
    7. '(W' → logprob: -19.37504005432129
    8. '(N' → logprob: -19.87504005432129
    9. ' ' → logprob: -19.87504005432129
    10. ')' → logprob: -20.75004005432129

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.4881879400927573e-05
    2. ',W' → logprob: -10.875035285949707
    3. ' ,' → logprob: -11.125035285949707
    4. '   ' → logprob: -15.000035285949707
    5. ')' → logprob: -15.000035285949707
    6. ',
' → logprob: -15.375035285949707
    7. '‌,' → logprob: -16.12503433227539
    8. '),' → logprob: -16.62503433227539
    9. 'W' → logprob: -17.12503433227539
    10. ',

' → logprob: -17.62503433227539

Token 115: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.42871153354644775
    2. 'W' → logprob: -1.0537115335464478
    3. ')' → logprob: -12.178711891174316
    4. '   ' → logprob: -13.053711891174316
    5. ' ' → logprob: -13.303711891174316
    6. ' ' → logprob: -14.178711891174316
    7. '	W' → logprob: -15.303711891174316
    8. '    ' → logprob: -15.866211891174316
    9. '  ' → logprob: -15.866211891174316
    10. '```' → logprob: -16.3662109375

Token 116: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005561320576816797
    2. ')
' → logprob: -7.500555992126465
    3. '   ' → logprob: -12.875555992126465
    4. ' )' → logprob: -15.125555992126465
    5. ')
' → logprob: -15.750555992126465
    6. ')

' → logprob: -16.62555694580078
    7. '),' → logprob: -17.25055694580078
    8. '))' → logprob: -17.62555694580078
    9. ')#' → logprob: -18.25055694580078
    10. '```' → logprob: -18.50055694580078

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013596145436167717
    2. ' division' → logprob: -5.138596057891846
    3. ' div' → logprob: -6.138596057891846
    4. ' result' → logprob: -6.513596057891846
    5. 'result' → logprob: -6.763596057891846
    6. 'division' → logprob: -7.013596057891846
    7. 'div' → logprob: -7.513596057891846
    8. ' value' → logprob: -8.013596534729004
    9. 'value' → logprob: -8.388596534729004
    10. ' res' → logprob: -8.638596534729004

Token 118: ' division' (ID: 21629)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4465722143650055
    2. 'res' → logprob: -2.3215723037719727
    3. 'division' (adapté à ' division') → logprob: -2.3215723037719727
    4. 'div' → logprob: -2.6965723037719727
    5. 'items' → logprob: -4.446572303771973
    6. '   ' → logprob: -4.446572303771973
    7. 'value' → logprob: -4.571572303771973
    8. 'num' → logprob: -4.696572303771973
    9. 'max' → logprob: -4.821572303771973
    10. 'ans' → logprob: -5.321572303771973

Token 119: '_result' (ID: 11623)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020755473524332047
    2. '=' → logprob: -4.020755290985107
    3. '_result' → logprob: -6.020755290985107
    4. '_' → logprob: -9.145755767822266
    5. '_value' → logprob: -10.020755767822266
    6. 'result' → logprob: -11.270755767822266
    7. '   ' → logprob: -13.020755767822266
    8. 's' → logprob: -13.145755767822266
    9. ' ' → logprob: -13.270755767822266
    10. 'Result' → logprob: -13.645755767822266

Token 120: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003177952254191041
    2. '=' → logprob: -5.753178119659424
    3. ' ' → logprob: -16.128177642822266
    4. ' =
' → logprob: -17.378177642822266
    5. ' ' → logprob: -17.503177642822266
    6. ',' → logprob: -18.378177642822266
    7. '   ' → logprob: -18.628177642822266
    8. '  ' → logprob: -18.628177642822266
    9. 's' → logprob: -19.503177642822266
    10. ')' → logprob: -19.878177642822266

Token 121: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.11292112618684769
    2. ' compute' → logprob: -2.2379212379455566
    3. '   ' → logprob: -10.112920761108398
    4. 'N' → logprob: -10.237920761108398
    5. ' N' → logprob: -10.987920761108398
    6. 'calculate' → logprob: -12.987920761108398
    7. 'int' → logprob: -14.112920761108398
    8. ' ' → logprob: -14.237920761108398
    9. '.compute' → logprob: -14.487920761108398
    10. '  ' → logprob: -14.987920761108398

Token 122: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.001168556627817452
    2. '(N' → logprob: -7.126168727874756
    3. 'division' → logprob: -8.501168251037598
    4. 'div' → logprob: -9.001168251037598
    5. '(' → logprob: -11.001168251037598
    6. 'Division' → logprob: -11.251168251037598
    7. '```' → logprob: -13.126168251037598
    8. 's' → logprob: -13.251168251037598
    9. ' division' → logprob: -13.501168251037598
    10. '_DIV' → logprob: -14.626168251037598

Token 123: 'ision' (ID: 3625)
  Prédit: 'ision'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ision' → logprob: -3.128163257315464e-07
    2. 'vision' → logprob: -17.125
    3. 'is' → logprob: -17.25
    4. 'ISION' → logprob: -17.25
    5. 'isions' → logprob: -17.375
    6. 'ison' → logprob: -17.375
    7. '   ' → logprob: -17.75
    8. 'ion' → logprob: -19.125
    9. 'ition' → logprob: -19.25
    10. 's' → logprob: -19.5

Token 124: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -2.463036435074173e-05
    2. '(' → logprob: -10.625024795532227
    3. ' (' → logprob: -15.125024795532227
    4. '(n' → logprob: -17.750024795532227
    5. 'N' → logprob: -18.500024795532227
    6. '(
' → logprob: -18.625024795532227
    7. '```' → logprob: -18.625024795532227
    8. '   ' → logprob: -18.750024795532227
    9. '(Number' → logprob: -18.875024795532227
    10. '(H' → logprob: -19.750024795532227

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007014761795289814
    2. ',max' → logprob: -7.750701427459717
    3. ' ,' → logprob: -8.250701904296875
    4. 'max' → logprob: -12.625701904296875
    5. '(max' → logprob: -12.750701904296875
    6. ',
' → logprob: -13.750701904296875
    7. ' max' → logprob: -13.875701904296875
    8. ')' → logprob: -15.375701904296875
    9. '[max' → logprob: -15.375701904296875
    10. ' ' → logprob: -15.750701904296875

Token 126: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.47407761216163635
    2. ' max' → logprob: -0.974077582359314
    3. '[max' → logprob: -15.224077224731445
    4. '(max' → logprob: -15.849077224731445
    5. ',max' → logprob: -16.599077224731445
    6. '=max' → logprob: -17.599077224731445
    7. '	max' → logprob: -17.849077224731445
    8. ')' → logprob: -18.099077224731445
    9. ':max' → logprob: -18.474077224731445
    10. ' ' → logprob: -18.599077224731445

Token 127: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -1.9146995327901095e-05
    2. 'len' → logprob: -10.875019073486328
    3. 'Len' → logprob: -16.500019073486328
    4. '_LEN' → logprob: -18.000019073486328
    5. '_length' → logprob: -18.750019073486328
    6. '<len' → logprob: -18.750019073486328
    7. '(len' → logprob: -19.000019073486328
    8. '[len' → logprob: -19.125019073486328
    9. 'max' → logprob: -19.500019073486328
    10. '_l' → logprob: -19.625019073486328

Token 128: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01816738210618496
    2. ')
' → logprob: -4.018167495727539
    3. '   ' → logprob: -11.893167495727539
    4. ')
' → logprob: -12.018167495727539
    5. ' )' → logprob: -12.893167495727539
    6. ')

' → logprob: -13.393167495727539
    7. ' )
' → logprob: -15.268167495727539
    8. '))' → logprob: -16.51816749572754
    9. ' ' → logprob: -16.76816749572754
    10. '),' → logprob: -17.39316749572754

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00099958258215338
    2. 'result' → logprob: -7.875999450683594
    3. ' ceiling' → logprob: -8.625999450683594
    4. ' result' → logprob: -8.875999450683594
    5. '    
' → logprob: -9.250999450683594
    6. '
' → logprob: -9.875999450683594
    7. 'ceil' → logprob: -9.875999450683594
    8. 'ce' → logprob: -10.500999450683594
    9. 'max' → logprob: -11.375999450683594
    10. '```' → logprob: -11.375999450683594

Token 130: ' ceiling' (ID: 32727)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8832223415374756
    2. 'result' → logprob: -1.1332223415374756
    3. 'ce' → logprob: -2.3832223415374756
    4. ' result' → logprob: -2.6332223415374756
    5. 'ceil' → logprob: -2.7582223415374756
    6. ' ceiling' → logprob: -3.5082223415374756
    7. ' ceil' → logprob: -5.633222579956055
    8. '  ' → logprob: -7.758222579956055
    9. ' ce' → logprob: -7.883222579956055
    10. '    
' → logprob: -8.258222579956055

Token 131: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.0015127197839319706
    2. '_value' → logprob: -6.50151252746582
    3. '_' → logprob: -12.00151252746582
    4. 'result' → logprob: -13.75151252746582
    5. '_res' → logprob: -13.75151252746582
    6. '_val' → logprob: -13.87651252746582
    7. ' =' → logprob: -14.37651252746582
    8. '=' → logprob: -15.75151252746582
    9. '_Result' → logprob: -16.12651252746582
    10. 'ed' → logprob: -16.25151252746582

Token 132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020849853754044
    2. '=' → logprob: -2.3502085208892822
    3. '(' → logprob: -13.975208282470703
    4. '   ' → logprob: -14.725208282470703
    5. '  ' → logprob: -15.100208282470703
    6. ' ' → logprob: -16.475208282470703
    7. ')' → logprob: -16.725208282470703
    8. ' ' → logprob: -17.725208282470703
    9. '_' → logprob: -18.225208282470703
    10. ' =)' → logprob: -18.350208282470703

Token 133: ' calculate' (ID: 17950)
  Prédit: ' calculate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.011048528365790844
    2. 'calculate' → logprob: -4.511048316955566
    3. ' math' → logprob: -15.136048316955566
    4. ' ' → logprob: -15.511048316955566
    5. ' compute' → logprob: -15.761048316955566
    6. '.calculate' → logprob: -17.511049270629883
    7. ' calcular' → logprob: -17.761049270629883
    8. 'alculate' → logprob: -18.136049270629883
    9. ' ' → logprob: -18.511049270629883
    10. ' calcul' → logprob: -18.886049270629883

Token 134: '_ce' (ID: 137725)
  Prédit: '_ce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ce' → logprob: -0.024166930466890335
    2. '_' → logprob: -3.7741668224334717
    3. '(' → logprob: -7.024167060852051
    4. '_(' → logprob: -11.02416706085205
    5. '_floor' → logprob: -12.27416706085205
    6. 'ce' → logprob: -12.89916706085205
    7. '_che' → logprob: -13.14916706085205
    8. '```' → logprob: -13.77416706085205
    9. 'ceil' → logprob: -14.02416706085205
    10. '_c' → logprob: -14.02416706085205

Token 135: 'iling' (ID: 10741)
  Prédit: 'iling'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iling' → logprob: -3.023293538717553e-05
    2. '
' → logprob: -12.000030517578125
    3. 'ing' → logprob: -12.000030517578125
    4. 'ling' → logprob: -12.250030517578125
    5. '(' → logprob: -12.375030517578125
    6. 'il' → logprob: -12.875030517578125
    7. '_' → logprob: -13.000030517578125
    8. '\' → logprob: -14.875030517578125
    9. '()
' → logprob: -15.000030517578125
    10. '[' → logprob: -15.125030517578125

Token 136: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.088346359931165e-07
    2. '(div' → logprob: -14.250000953674316
    3. ' (' → logprob: -15.625000953674316
    4. '(
' → logprob: -19.125
    5. 'division' → logprob: -19.25
    6. '(com' → logprob: -19.375
    7. '(int' → logprob: -19.75
    8. '((' → logprob: -19.875
    9. '(decimal' → logprob: -20.25
    10. '(`' → logprob: -20.5

Token 137: 'division' (ID: 50596)
  Prédit: 'division'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'division' → logprob: -0.03850294649600983
    2. '(' → logprob: -3.2885029315948486
    3. ' division' → logprob: -8.03850269317627
    4. 'div' → logprob: -8.91350269317627
    5. ')' → logprob: -12.91350269317627
    6. 'Division' → logprob: -14.16350269317627
    7. '   ' → logprob: -14.28850269317627
    8. ')(' → logprob: -16.288503646850586
    9. '_div' → logprob: -17.288503646850586
    10. ' ' → logprob: -18.163503646850586

Token 138: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -4.320199877838604e-07
    2. 'result' → logprob: -15.5
    3. '_value' → logprob: -16.5
    4. '_RESULT' → logprob: -18.0
    5. '(result' → logprob: -18.125
    6. 'Result' → logprob: -18.125
    7. ')' → logprob: -18.5
    8. '_res' → logprob: -18.75
    9. '_Result' → logprob: -18.875
    10. '   ' → logprob: -19.0

Token 139: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07896171510219574
    2. ')
' → logprob: -2.5789616107940674
    3. '   ' → logprob: -9.703961372375488
    4. ')
' → logprob: -11.703961372375488
    5. ' )' → logprob: -13.828961372375488
    6. '()' → logprob: -14.453961372375488
    7. ')

' → logprob: -14.703961372375488
    8. ' )
' → logprob: -15.078961372375488
    9. '())
' → logprob: -17.078962326049805
    10. ' ' → logprob: -17.078962326049805

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.252241313457489
    2. 'print' → logprob: -1.5022413730621338
    3. ' print' → logprob: -8.252241134643555
    4. '(print' → logprob: -11.252241134643555
    5. '
' → logprob: -11.502241134643555
    6. '    
' → logprob: -11.627241134643555
    7. '	print' → logprob: -11.752241134643555
    8. '```' → logprob: -12.377241134643555
    9. '  ' → logprob: -12.752241134643555
    10. '<|end|>' → logprob: -13.627241134643555

Token 141: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0010494812158867717
    2. ' print' → logprob: -7.251049518585205
    3. '   ' → logprob: -8.001049041748047
    4. 'if' → logprob: -13.376049041748047
    5. '
' → logprob: -14.001049041748047
    6. '```' → logprob: -14.001049041748047
    7. 'result' → logprob: -15.001049041748047
    8. '	print' → logprob: -15.376049041748047
    9. ' ' → logprob: -15.501049041748047
    10. '  ' → logprob: -16.001049041748047

Token 142: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -14.875000953674316
    3. '_results' → logprob: -16.875
    4. '```' → logprob: -16.875
    5. '_res' → logprob: -17.875
    6. '(_' → logprob: -18.125
    7. ' _' → logprob: -18.125
    8. 'result' → logprob: -18.375
    9. '_Result' → logprob: -18.625
    10. '_value' → logprob: -18.875

Token 143: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.061054359131958e-06
    2. ' (' → logprob: -11.750007629394531
    3. '```' → logprob: -17.37500762939453
    4. '   ' → logprob: -17.62500762939453
    5. '(`' → logprob: -17.62500762939453
    6. '((' → logprob: -18.12500762939453
    7. ' ' → logprob: -18.37500762939453
    8. '(
' → logprob: -18.62500762939453
    9. '()' → logprob: -18.62500762939453
    10. '(se' → logprob: -19.75000762939453

Token 144: 'ce' (ID: 400)
  Prédit: 'ce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ce' → logprob: -0.0005008471780456603
    2. ' ceiling' → logprob: -7.625500679016113
    3. 'ceil' → logprob: -11.875500679016113
    4. ')' → logprob: -12.125500679016113
    5. '   ' → logprob: -15.750500679016113
    6. ' ce' → logprob: -15.875500679016113
    7. 'c' → logprob: -17.12550163269043
    8. '_ce' → logprob: -17.37550163269043
    9. '-ce' → logprob: -17.50050163269043
    10. ')
' → logprob: -18.37550163269043

Token 145: 'iling' (ID: 10741)
  Prédit: 'iling'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iling' → logprob: -3.070975071750581e-05
    2. 'ling' → logprob: -11.625030517578125
    3. 'iled' → logprob: -11.875030517578125
    4. 'il' → logprob: -11.875030517578125
    5. '_' → logprob: -13.125030517578125
    6. 'ILING' → logprob: -13.500030517578125
    7. 'ilor' → logprob: -14.375030517578125
    8. '
' → logprob: -14.375030517578125
    9. 'illing' → logprob: -14.750030517578125
    10. 'eling' → logprob: -14.875030517578125

Token 146: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -1.8670179997570813e-05
    2. ')' → logprob: -11.375019073486328
    3. ')_' → logprob: -12.250019073486328
    4. '_res' → logprob: -14.000019073486328
    5. '_results' → logprob: -14.375019073486328
    6. 'result' → logprob: -14.375019073486328
    7. '_Result' → logprob: -16.375019073486328
    8. '_RESULT' → logprob: -16.375019073486328
    9. '_value' → logprob: -17.125019073486328
    10. '```' → logprob: -17.250019073486328

Token 147: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.008129963040119e-06
    2. ')
' → logprob: -12.500003814697266
    3. ' )' → logprob: -16.000003814697266
    4. '())' → logprob: -16.750003814697266
    5. '))' → logprob: -17.750003814697266
    6. ')`' → logprob: -17.750003814697266
    7. ')#' → logprob: -18.250003814697266
    8. '()' → logprob: -18.375003814697266
    9. '   ' → logprob: -19.250003814697266
    10. '）' → logprob: -19.375003814697266

Token 148: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0032251295633614063
    2. 'main' → logprob: -5.878225326538086
    3. '
' → logprob: -8.253225326538086
    4. '\n' → logprob: -9.378225326538086
    5. '```' → logprob: -10.753225326538086
    6. '<|end|>' → logprob: -11.003225326538086
    7. '\' → logprob: -11.253225326538086
    8. ' if' → logprob: -11.378225326538086
    9. 'print' → logprob: -12.253225326538086
    10. '\
' → logprob: -12.878225326538086

Token 149: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006953967968001962
    2. '(' → logprob: -7.37569522857666
    3. '()
' → logprob: -9.62569522857666
    4. '(
' → logprob: -14.37569522857666
    5. '()

' → logprob: -14.37569522857666
    6. ' ()' → logprob: -14.75069522857666
    7. '()`' → logprob: -15.00069522857666
    8. '();' → logprob: -15.25069522857666
    9. '()\' → logprob: -15.50069522857666
    10. '()"' → logprob: -16.375696182250977


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 147
Tokens correctement prédits (1ère position, stricte): 76
Tokens correctement prédits (1ère position, avec adaptation): 82
Tokens correctement prédits (top 10): 125
Précision stricte (1ère position): 51.70%
Précision adaptée (1ère position): 55.78%
Précision (top 10): 85.03%
================================================================================
