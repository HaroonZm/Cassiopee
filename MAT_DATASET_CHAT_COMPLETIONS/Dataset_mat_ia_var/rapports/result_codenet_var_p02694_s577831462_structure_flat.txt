================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:16:18
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
X = int(input())

dyear = 0
price = 100

while True:
    if price >= X:
        break
    dyear += 1
    price = int(price * 1.01)
print(dyear)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'X' (ID: 55)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000925753265619278
    2. ''' → logprob: -7.375925540924072
    3. 'X' → logprob: -9.50092601776123
    4. '[' → logprob: -10.12592601776123
    5. ')' → logprob: -10.50092601776123
    6. '('' → logprob: -10.50092601776123
    7. '```' → logprob: -10.50092601776123
    8. '(
' → logprob: -11.00092601776123
    9. '`' → logprob: -11.12592601776123
    10. '"' → logprob: -11.12592601776123

Token 4: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04529904946684837
    2. ')' → logprob: -3.1702990531921387
    3. '()' → logprob: -6.545299053192139
    4. '())' → logprob: -8.42029857635498
    5. '(
' → logprob: -8.79529857635498
    6. '[' → logprob: -9.29529857635498
    7. '(X' → logprob: -9.92029857635498
    8. '```' → logprob: -10.29529857635498
    9. '))' → logprob: -10.54529857635498
    10. '('' → logprob: -10.54529857635498

Token 5: 'd' (ID: 67)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08595433831214905
    2. '%' → logprob: -3.210954427719116
    3. '*' → logprob: -3.335954427719116
    4. '+
' → logprob: -5.710954189300537
    5. 'if' → logprob: -7.460954189300537
    6. '\n' → logprob: -7.585954189300537
    7. '#' → logprob: -7.585954189300537
    8. ')' → logprob: -8.335954666137695
    9. '\' → logprob: -8.460954666137695
    10. '**' → logprob: -8.960954666137695

Token 6: 'year' (ID: 5682)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.4471725225448608
    2. 'i' → logprob: -1.6971725225448608
    3. ' =' → logprob: -1.8221725225448608
    4. 'iv' → logprob: -1.9471725225448608
    5. '=' → logprob: -2.3221726417541504
    6. 'ef' → logprob: -2.8221726417541504
    7. '[i' → logprob: -3.6971726417541504
    8. '[' → logprob: -3.8221726417541504
    9. 'ict' → logprob: -3.9471726417541504
    10. 'd' → logprob: -4.32217264175415

Token 7: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9658931493759155
    2. 'elta' → logprob: -1.2158931493759155
    3. 'ef' → logprob: -1.8408931493759155
    4. '=' → logprob: -3.465893268585205
    5. '_' → logprob: -4.090893268585205
    6. '_days' → logprob: -4.215893268585205
    7. 'f' → logprob: -4.465893268585205
    8. 'e' → logprob: -4.590893268585205
    9. 'iff' → logprob: -4.715893268585205
    10. ' =' → logprob: -4.715893268585205

Token 8: ' ' (ID: 220)
  Prédit: ' X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.4922838807106018
    2. 'X' → logprob: -1.242283821105957
    3. ' ' → logprob: -2.492283821105957
    4. '365' → logprob: -4.992283821105957
    5. '0' → logprob: -5.367283821105957
    6. '1' → logprob: -6.867283821105957
    7. '202' → logprob: -7.367283821105957
    8. '360' → logprob: -7.492283821105957
    9. '10' → logprob: -7.867283821105957
    10. ''' → logprob: -7.992283821105957

Token 9: '0' (ID: 15)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.49971261620521545
    2. '365' → logprob: -0.9997125864028931
    3. '1' → logprob: -4.6247124671936035
    4. '0' → logprob: -6.2497124671936035
    5. '10' → logprob: -6.3747124671936035
    6. '5' → logprob: -6.7497124671936035
    7. '360' → logprob: -6.8747124671936035
    8. '366' → logprob: -6.8747124671936035
    9. 'd' → logprob: -7.1247124671936035
    10. '202' → logprob: -7.1247124671936035

Token 10: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 11: 'price' (ID: 7629)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3738116919994354
    2. ' while' → logprob: -1.4988117218017578
    3. 'if' → logprob: -3.748811721801758
    4. 'for' → logprob: -3.748811721801758
    5. 'y' → logprob: -4.748811721801758
    6. ' for' → logprob: -4.873811721801758
    7. ' if' → logprob: -4.998811721801758
    8. 'd' → logprob: -5.123811721801758
    9. 'year' → logprob: -6.123811721801758
    10. ',' → logprob: -6.498811721801758

Token 12: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6555890440940857
    2. ' =' → logprob: -1.1555891036987305
    3. '_' → logprob: -2.1555891036987305
    4. '=' → logprob: -3.5305891036987305
    5. '[' → logprob: -4.1555891036987305
    6. ' +=' → logprob: -7.1555891036987305
    7. '[:]' → logprob: -7.2805891036987305
    8. '_s' → logprob: -7.7805891036987305
    9. ')' → logprob: -7.7805891036987305
    10. ' ' → logprob: -8.03058910369873

Token 13: ' ' (ID: 220)
  Prédit: ' X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -1.2692147493362427
    2. 'X' → logprob: -1.5192147493362427
    3. '100' → logprob: -1.6442147493362427
    4. ' ' → logprob: -1.6442147493362427
    5. '0' → logprob: -2.644214630126953
    6. ' int' → logprob: -4.269214630126953
    7. 'int' → logprob: -4.644214630126953
    8. '1' → logprob: -5.144214630126953
    9. '10' → logprob: -5.644214630126953
    10. '999' → logprob: -6.394214630126953

Token 14: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.44897180795669556
    2. 'X' → logprob: -1.1989717483520508
    3. 'int' → logprob: -3.448971748352051
    4. '0' → logprob: -4.573971748352051
    5. '1' → logprob: -5.823971748352051
    6. '500' → logprob: -6.073971748352051
    7. '10' → logprob: -6.198971748352051
    8. '200' → logprob: -6.198971748352051
    9. '999' → logprob: -6.198971748352051
    10. '250' → logprob: -6.573971748352051

Token 15: '

' (ID: 279)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.009420394897461
    2. '
' → logprob: -1.884420394897461
    3. '\n' → logprob: -2.134420394897461
    4. '0' → logprob: -2.884420394897461
    5. '' → logprob: -2.884420394897461
    6. ' ' → logprob: -3.009420394897461
    7. '<|end|>' → logprob: -3.134420394897461
    8. '```' → logprob: -3.259420394897461
    9. '\' → logprob: -3.759420394897461
    10. ' 
' → logprob: -4.009420394897461

Token 16: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.05070872604846954
    2. ' while' → logprob: -3.175708770751953
    3. '<|end|>' → logprob: -5.425708770751953
    4. 'for' → logprob: -6.800708770751953
    5. '
' → logprob: -7.300708770751953
    6. '*' → logprob: -7.925708770751953
    7. 'if' → logprob: -8.425708770751953
    8. '+' → logprob: -9.050708770751953
    9. ' 
' → logprob: -9.425708770751953
    10. ' ' → logprob: -9.425708770751953

Token 17: ' True' (ID: 6432)
  Prédit: ' X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.09939201921224594
    2. ' d' → logprob: -2.5993919372558594
    3. ' ' → logprob: -4.599391937255859
    4. 'X' → logprob: -4.974391937255859
    5. 'd' → logprob: -6.474391937255859
    6. ' price' → logprob: -6.849391937255859
    7. '  ' → logprob: -7.974391937255859
    8. ' ' → logprob: -8.22439193725586
    9. 'price' → logprob: -10.47439193725586
    10. '_' → logprob: -10.84939193725586

Token 18: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.6405310816480778e-05
    2. ':**' → logprob: -12.000016212463379
    3. ' :' → logprob: -12.375016212463379
    4. '):' → logprob: -13.000016212463379
    5. ':
' → logprob: -14.125016212463379
    6. '():' → logprob: -14.500016212463379
    7. '':' → logprob: -14.625016212463379
    8. '':'' → logprob: -15.125016212463379
    9. ':return' → logprob: -15.125016212463379
    10. '>:' → logprob: -15.250016212463379

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15478555858135223
    2. ' ' → logprob: -2.404785633087158
    3. ' price' → logprob: -4.029785633087158
    4. '<|end|>' → logprob: -5.154785633087158
    5. ' if' → logprob: -5.279785633087158
    6. '    ' → logprob: -5.654785633087158
    7. 'price' → logprob: -6.154785633087158
    8. '    
' → logprob: -6.279785633087158
    9. ')' → logprob: -6.279785633087158
    10. '  ' → logprob: -6.404785633087158

Token 20: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6780704855918884
    2. ' if' → logprob: -1.5530705451965332
    3. ' price' → logprob: -1.5530705451965332
    4. ' X' → logprob: -3.803070545196533
    5. 'price' → logprob: -4.053070545196533
    6. ' d' → logprob: -4.553070545196533
    7. 'd' → logprob: -4.678070545196533
    8. 'if' (adapté à ' if') → logprob: -5.803070545196533
    9. 'X' → logprob: -6.178070545196533
    10. '    ' → logprob: -6.428070545196533

Token 21: ' price' (ID: 3911)
  Prédit: ' X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.4413645565509796
    2. ' price' → logprob: -1.9413645267486572
    3. ' d' → logprob: -2.1913645267486572
    4. 'X' → logprob: -3.0663645267486572
    5. 'd' → logprob: -3.1913645267486572
    6. 'price' → logprob: -4.566364765167236
    7. ' year' → logprob: -6.691364765167236
    8. ' ' → logprob: -6.691364765167236
    9. '   ' → logprob: -8.566364288330078
    10. '(price' → logprob: -8.691364288330078

Token 22: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.6629323959350586
    2. ' <=' → logprob: -1.9129323959350586
    3. '>=' → logprob: -1.9129323959350586
    4. '<' → logprob: -2.6629323959350586
    5. ' <' → logprob: -2.7879323959350586
    6. '<=' → logprob: -3.2879323959350586
    7. '>' → logprob: -4.537932395935059
    8. ' >' → logprob: -5.412932395935059
    9. '*' → logprob: -5.912932395935059
    10. ' *' → logprob: -6.787932395935059

Token 23: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.015638958662748337
    2. '200' → logprob: -4.890638828277588
    3. '150' → logprob: -5.265638828277588
    4. '110' → logprob: -7.015638828277588
    5. '120' → logprob: -7.765638828277588
    6. '2' → logprob: -8.015639305114746
    7. 'Y' → logprob: -8.765639305114746
    8. '100' → logprob: -9.140639305114746
    9. '(' → logprob: -9.265639305114746
    10. ' X' → logprob: -9.390639305114746

Token 24: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000747802434489131
    2. ' :' → logprob: -7.7507476806640625
    3. ':
' → logprob: -9.000747680664062
    4. '       ' → logprob: -9.125747680664062
    5. '):' → logprob: -10.125747680664062
    6. '   ' → logprob: -10.125747680664062
    7. '    ' → logprob: -13.625747680664062
    8. '+:' → logprob: -14.250747680664062
    9. ' :
' → logprob: -14.625747680664062
    10. '>:' → logprob: -14.875747680664062

Token 25: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010866894444916397
    2. '   ' → logprob: -10.12510871887207
    3. ' break' → logprob: -10.62510871887207
    4. '      ' → logprob: -11.37510871887207
    5. '    ' → logprob: -11.75010871887207
    6. ':' → logprob: -12.00010871887207
    7. '     ' → logprob: -12.12510871887207
    8. '```' → logprob: -12.62510871887207
    9. '        ' → logprob: -13.25010871887207
    10. 'break' → logprob: -13.37510871887207

Token 26: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024128995835781097
    2. ' break' → logprob: -4.0241289138793945
    3. 'break' (adapté à ' break') → logprob: -5.6491289138793945
    4. '   ' → logprob: -6.0241289138793945
    5. '```' → logprob: -11.649128913879395
    6. '	break' → logprob: -12.024128913879395
    7. '      ' → logprob: -13.274128913879395
    8. '    ' → logprob: -13.774128913879395
    9. '           ' → logprob: -13.899128913879395
    10. '     ' → logprob: -14.149128913879395

Token 27: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39644938707351685
    2. '
' → logprob: -1.771449327468872
    3. '    
' → logprob: -1.896449327468872
    4. '  
' → logprob: -6.146449565887451
    5. '\n' → logprob: -6.146449565887451
    6. ' 
' → logprob: -6.646449565887451
    7. '   
' → logprob: -7.146449565887451
    8. '```' → logprob: -8.771449089050293
    9. '
' → logprob: -9.646449089050293
    10. '  ' → logprob: -10.021449089050293

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05124910548329353
    2. '    
' → logprob: -3.1762490272521973
    3. '
' → logprob: -4.926249027252197
    4. '  
' → logprob: -7.801249027252197
    5. '\n' → logprob: -8.426249504089355
    6. '   
' → logprob: -9.051249504089355
    7. ' 
' → logprob: -9.426249504089355
    8. 'price' → logprob: -10.926249504089355
    9. 'd' → logprob: -11.051249504089355
    10. '        
' → logprob: -11.426249504089355

Token 29: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037803567945957184
    2. 'd' (adapté à ' d') → logprob: -3.7878036499023438
    3. '    
' → logprob: -5.287803649902344
    4. 'price' → logprob: -5.412803649902344
    5. '
' → logprob: -6.537803649902344
    6. ' price' → logprob: -6.787803649902344
    7. '```' → logprob: -6.912803649902344
    8. '\n' → logprob: -7.787803649902344
    9. ' 
' → logprob: -7.787803649902344
    10. ' d' → logprob: -8.787803649902344

Token 30: 'year' (ID: 5682)
  Prédit: 'year'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'year' → logprob: -0.0020071491599082947
    2. 'price' → logprob: -6.252007007598877
    3. 'ear' → logprob: -10.752007484436035
    4. '_year' → logprob: -11.002007484436035
    5. 'ay' → logprob: -11.252007484436035
    6. ' year' → logprob: -11.752007484436035
    7. 'e' → logprob: -12.627007484436035
    8. '-year' → logprob: -12.877007484436035
    9. 'y' → logprob: -13.377007484436035
    10. 'Year' → logprob: -13.752007484436035

Token 31: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.11458519846200943
    2. '+=' → logprob: -2.2395851612091064
    3. '+' → logprob: -6.3645853996276855
    4. ' +' → logprob: -10.739584922790527
    5. '=' → logprob: -11.614584922790527
    6. '   ' → logprob: -12.864584922790527
    7. ' ' → logprob: -13.239584922790527
    8. ' =' → logprob: -13.489584922790527
    9. ']+=' → logprob: -13.614584922790527
    10. 's' → logprob: -14.489584922790527

Token 32: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008619539439678192
    2. ' ' → logprob: -4.75861930847168
    3. '10' → logprob: -13.75861930847168
    4. '2' → logprob: -13.88361930847168
    5. '   ' → logprob: -14.25861930847168
    6. '3' → logprob: -14.94611930847168
    7. '20' → logprob: -15.00861930847168
    8. '5' → logprob: -15.13361930847168
    9. '4' → logprob: -15.63361930847168
    10. '100' → logprob: -15.94611930847168

Token 33: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.370294846012257e-05
    2. ' ' → logprob: -10.250043869018555
    3. '2' → logprob: -13.125043869018555
    4. '10' → logprob: -13.375043869018555
    5. '3' → logprob: -13.875043869018555
    6. '100' → logprob: -14.125043869018555
    7. '5' → logprob: -14.250043869018555
    8. '   ' → logprob: -14.250043869018555
    9. '4' → logprob: -15.312543869018555
    10. '20' → logprob: -15.437543869018555

Token 34: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30867043137550354
    2. '
' → logprob: -1.5586704015731812
    3. 'price' → logprob: -3.6836705207824707
    4. '    
' → logprob: -4.433670520782471
    5. ' price' → logprob: -4.808670520782471
    6. '	price' → logprob: -5.683670520782471
    7. ' 
' → logprob: -5.808670520782471
    8. '```' → logprob: -7.183670520782471
    9. '  
' → logprob: -7.308670520782471
    10. '<|end|>' → logprob: -7.808670520782471

Token 35: '   ' (ID: 271)
  Prédit: ' price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' price' → logprob: -0.7846038341522217
    2. '   ' → logprob: -1.1596038341522217
    3. 'price' → logprob: -1.5346038341522217
    4. '    
' → logprob: -5.284604072570801
    5. '	price' → logprob: -5.909604072570801
    6. '```' → logprob: -6.534604072570801
    7. ' 
' → logprob: -6.659604072570801
    8. '\n' → logprob: -6.909604072570801
    9. '
' → logprob: -7.034604072570801
    10. '_price' → logprob: -7.784604072570801

Token 36: ' price' (ID: 3911)
  Prédit: ' price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' price' → logprob: -0.6945914626121521
    2. 'price' (adapté à ' price') → logprob: -0.6945914626121521
    3. '   ' → logprob: -7.694591522216797
    4. '50' → logprob: -8.819591522216797
    5. '20' → logprob: -9.069591522216797
    6. '	price' → logprob: -9.069591522216797
    7. '100' → logprob: -9.382091522216797
    8. '10' → logprob: -9.569591522216797
    9. 'print' → logprob: -9.819591522216797
    10. ' ' → logprob: -10.132091522216797

Token 37: ' =' (ID: 314)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.789172351360321
    2. ' *=' → logprob: -1.2891724109649658
    3. '+=' → logprob: -2.039172410964966
    4. '=' → logprob: -2.664172410964966
    5. ' +=' → logprob: -3.289172410964966
    6. '-=' → logprob: -4.289172172546387
    7. ' =' → logprob: -4.789172172546387
    8. ' -=' → logprob: -5.539172172546387
    9. '*' → logprob: -5.914172172546387
    10. '//=' → logprob: -6.039172172546387

Token 38: ' int' (ID: 677)
  Prédit: 'price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'price' → logprob: -0.2902999520301819
    2. ' price' → logprob: -1.915299892425537
    3. 'int' → logprob: -2.415299892425537
    4. ' int' → logprob: -4.415299892425537
    5. '100' → logprob: -6.790299892425537
    6. '(price' → logprob: -7.290299892425537
    7. 'round' → logprob: -7.415299892425537
    8. '(int' → logprob: -8.290300369262695
    9. '   ' → logprob: -9.540300369262695
    10. ' round' → logprob: -9.790300369262695

Token 39: '(price' (ID: 81279)
  Prédit: '(price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(price' → logprob: -0.0022951364517211914
    2. '(' → logprob: -6.127295017242432
    3. 'price' → logprob: -9.37729549407959
    4. ' price' → logprob: -11.50229549407959
    5. '((' → logprob: -11.50229549407959
    6. ' (' → logprob: -13.12729549407959
    7. '	price' → logprob: -13.37729549407959
    8. '(pr' → logprob: -14.37729549407959
    9. '(round' → logprob: -15.00229549407959
    10. '(product' → logprob: -15.75229549407959

Token 40: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4743868410587311
    2. ' *' → logprob: -0.9743868112564087
    3. ' +' → logprob: -8.849387168884277
    4. ' ' → logprob: -10.224387168884277
    5. '1' → logprob: -10.224387168884277
    6. ' /' → logprob: -10.599387168884277
    7. '+' → logprob: -11.099387168884277
    8. '*(' → logprob: -11.099387168884277
    9. '/' → logprob: -11.599387168884277
    10. ' *=' → logprob: -11.974387168884277

Token 41: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0683697760105133
    2. ' ' → logprob: -3.1933698654174805
    3. '0' → logprob: -3.6933698654174805
    4. '(' → logprob: -10.06836986541748
    5. '   ' → logprob: -10.75586986541748
    6. '110' → logprob: -10.94336986541748
    7. '11' → logprob: -11.44336986541748
    8. '105' → logprob: -11.75586986541748
    9. ' (' → logprob: -11.81836986541748
    10. '10' → logprob: -12.06836986541748

Token 42: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0708433985710144
    2. '0' → logprob: -2.695843458175659
    3. ' ' → logprob: -7.57084321975708
    4. '(' → logprob: -9.195843696594238
    5. '110' → logprob: -9.695843696594238
    6. '11' → logprob: -10.320843696594238
    7. '105' → logprob: -10.508343696594238
    8. '.' → logprob: -11.195843696594238
    9. '101' → logprob: -11.195843696594238
    10. '10' → logprob: -11.258343696594238

Token 43: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.23916508257389069
    2. '1' → logprob: -1.9891650676727295
    3. '0' → logprob: -2.6141650676727295
    4. '2' → logprob: -7.239165306091309
    5. ' .' → logprob: -7.239165306091309
    6. ' ' → logprob: -7.739165306091309
    7. '05' → logprob: -8.739165306091309
    8. '10' → logprob: -9.114165306091309
    9. '5' → logprob: -9.864165306091309
    10. '3' → logprob: -9.864165306091309

Token 44: '01' (ID: 2290)
  Prédit: '05'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '05' → logprob: -0.13067306578159332
    2. '1' → logprob: -2.6306731700897217
    3. '04' → logprob: -4.005672931671143
    4. '2' → logprob: -4.380672931671143
    5. '0' → logprob: -4.630672931671143
    6. '07' → logprob: -5.505672931671143
    7. '02' → logprob: -6.130672931671143
    8. '5' → logprob: -6.755672931671143
    9. '03' → logprob: -7.130672931671143
    10. '01' → logprob: -7.630672931671143

Token 45: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.868328920158092e-05
    2. ' )' → logprob: -10.500028610229492
    3. ')
' → logprob: -14.000028610229492
    4. '))' → logprob: -15.875028610229492
    5. '+' → logprob: -17.875028610229492
    6. ')`' → logprob: -18.125028610229492
    7. ')#' → logprob: -18.250028610229492
    8. '**' → logprob: -18.500028610229492
    9. ')**' → logprob: -18.625028610229492
    10. ')

' → logprob: -18.750028610229492

Token 46: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.422574907541275
    2. '\n' → logprob: -1.2975748777389526
    3. '
' → logprob: -2.922574996948242
    4. '<|end|>' → logprob: -5.297574996948242
    5. ' print' → logprob: -5.547574996948242
    6. '\' → logprob: -5.922574996948242
    7. '#' → logprob: -6.047574996948242
    8. '\r' → logprob: -7.547574996948242
    9. ')' → logprob: -7.672574996948242
    10. '+' → logprob: -7.797574996948242

Token 47: '(d' (ID: 2572)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.028436163440346718
    2. '(price' → logprob: -3.7784361839294434
    3. '(d' → logprob: -5.278436183929443
    4. '(X' → logprob: -10.403435707092285
    5. '('' → logprob: -10.403435707092285
    6. '("' → logprob: -11.778435707092285
    7. '()' → logprob: -13.403435707092285
    8. '(f' → logprob: -13.653435707092285
    9. '((' → logprob: -14.028435707092285
    10. ' (' → logprob: -14.028435707092285

Token 48: 'year' (ID: 5682)
  Prédit: 'year'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'year' → logprob: -0.000533967511728406
    2. 'y' → logprob: -7.6255340576171875
    3. 'ye' → logprob: -10.250534057617188
    4. 'yer' → logprob: -11.875534057617188
    5. 'YEAR' → logprob: -14.375534057617188
    6. ' year' → logprob: -14.750534057617188
    7. 'Year' → logprob: -15.125534057617188
    8. '-year' → logprob: -15.250534057617188
    9. 'price' → logprob: -15.250534057617188
    10. 'years' → logprob: -15.375534057617188

Token 49: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.125
    3. '))' → logprob: -17.25
    4. '`)' → logprob: -18.25
    5. ')`' → logprob: -18.25
    6. ')
' → logprob: -18.375
    7. '')' → logprob: -18.625
    8. '}' → logprob: -18.875
    9. '")' → logprob: -19.375
    10. '）' → logprob: -19.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 47
Tokens correctement prédits (1ère position, stricte): 16
Tokens correctement prédits (1ère position, avec adaptation): 16
Tokens correctement prédits (top 10): 39
Précision stricte (1ère position): 34.04%
Précision adaptée (1ère position): 34.04%
Précision (top 10): 82.98%
================================================================================
