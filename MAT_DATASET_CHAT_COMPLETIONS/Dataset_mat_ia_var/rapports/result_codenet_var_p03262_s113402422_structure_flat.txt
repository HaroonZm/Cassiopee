================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce

na = list(map(int, input().split()))
N, X = na[0], na[1]
x = list(map(int, input().split()))
y = [abs(v - X) for v in x]

def _gcd(a, b):
    a, b = max(a, b), min(a, b)
    while b > 0:
        a, b = b, a % b
    return a

res = y[0]
for v in y[1:]:
    res = _gcd(res, v)

print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.612085223197937
    2. 'wrap' → logprob: -0.862085223197937
    3. 'reduce' → logprob: -3.4870853424072266
    4. 'l' → logprob: -6.112085342407227
    5. ' wraps' → logprob: -6.487085342407227
    6. 'cached' → logprob: -7.612085342407227
    7. 'cache' → logprob: -8.112085342407227
    8. 'cmp' → logprob: -9.237085342407227
    9. '```' → logprob: -9.237085342407227
    10. ' partial' → logprob: -9.612085342407227

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010317044332623482
    2. '(lambda' → logprob: -4.760316848754883
    3. ' (' → logprob: -7.385316848754883
    4. ',' → logprob: -7.885316848754883
    5. 'def' → logprob: -8.135316848754883
    6. '.' → logprob: -8.635316848754883
    7. '```' → logprob: -10.135316848754883
    8. '(
' → logprob: -10.385316848754883
    9. 'lambda' → logprob: -10.635316848754883
    10. ' ' → logprob: -10.760316848754883

Token 5: 'na' (ID: 1503)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014666754752397537
    2. '(lambda' → logprob: -4.514666557312012
    3. 'def' → logprob: -6.139666557312012
    4. ',' → logprob: -7.389666557312012
    5. '(
' → logprob: -8.389666557312012
    6. '.' → logprob: -8.889666557312012
    7. '\' → logprob: -9.139666557312012
    8. '```' → logprob: -9.639666557312012
    9. 'd' → logprob: -9.889666557312012
    10. '\(' → logprob: -10.264666557312012

Token 6: ' =' (ID: 314)
  Prédit: 'me'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.10214215517044067
    2. 'm' → logprob: -2.477142095565796
    3. 'mes' → logprob: -4.352142333984375
    4. 'med' → logprob: -9.227142333984375
    5. 'mp' → logprob: -10.102142333984375
    6. 'mest' → logprob: -10.477142333984375
    7. 'ms' → logprob: -10.852142333984375
    8. 'mb' → logprob: -11.477142333984375
    9. 'м' → logprob: -11.602142333984375
    10. '```' → logprob: -11.977142333984375

Token 7: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.15523047745227814
    2. '[' → logprob: -2.0302305221557617
    3. ' ' → logprob: -4.655230522155762
    4. ' []' → logprob: -6.905230522155762
    5. '[int' → logprob: -7.655230522155762
    6. ' None' → logprob: -8.155230522155762
    7. '[]' → logprob: -9.030230522155762
    8. 'None' → logprob: -9.155230522155762
    9. '[n' → logprob: -9.155230522155762
    10. 'int' → logprob: -9.280230522155762

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0016047211829572916
    2. '(range' → logprob: -6.8766045570373535
    3. '((' → logprob: -9.126605033874512
    4. '(
' → logprob: -9.251605033874512
    5. '```' → logprob: -10.001605033874512
    6. '("("' → logprob: -10.251605033874512
    7. '(filter' → logprob: -10.251605033874512
    8. '(`' → logprob: -10.751605033874512
    9. '([' → logprob: -10.876605033874512
    10. '('' → logprob: -11.126605033874512

Token 9: '(int' (ID: 2742)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.49383628368377686
    2. '(' → logprob: -1.1188362836837769
    3. '(int' → logprob: -2.8688364028930664
    4. '(str' → logprob: -5.243836402893066
    5. '(abs' → logprob: -7.743836402893066
    6. 'lambda' → logprob: -8.368836402893066
    7. '(len' → logprob: -8.868836402893066
    8. 'int' → logprob: -9.993836402893066
    9. '(
' → logprob: -10.243836402893066
    10. ')' → logprob: -10.368836402893066

Token 10: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03293391689658165
    2. '))' → logprob: -4.032933712005615
    3. ')' → logprob: -6.032933712005615
    4. '(input' → logprob: -6.032933712005615
    5. '('' → logprob: -6.657933712005615
    6. '(range' → logprob: -6.782933712005615
    7. '()))' → logprob: -6.907933712005615
    8. '(data' → logprob: -6.907933712005615
    9. '(""))' → logprob: -7.657933712005615
    10. '((' → logprob: -7.782933712005615

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10646094381809235
    2. ' input' → logprob: -2.4814610481262207
    3. '(input' → logprob: -4.106461048126221
    4. ''' → logprob: -8.356460571289062
    5. ',input' → logprob: -8.356460571289062
    6. '"' → logprob: -9.106460571289062
    7. '[input' → logprob: -9.731460571289062
    8. ')' → logprob: -10.106460571289062
    9. '=input' → logprob: -10.731460571289062
    10. '('' → logprob: -10.856460571289062

Token 12: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2364589124917984
    2. '()' → logprob: -2.3614590167999268
    3. '()))' → logprob: -2.7364590167999268
    4. '())' → logprob: -4.111458778381348
    5. '()));' → logprob: -4.361458778381348
    6. '(()' → logprob: -4.736458778381348
    7. '('' → logprob: -5.361458778381348
    8. '())))' → logprob: -6.486458778381348
    9. '()>' → logprob: -6.486458778381348
    10. '(""))' → logprob: -6.736458778381348

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0011803467059507966
    2. 'strip' → logprob: -6.751180171966553
    3. 'rstrip' → logprob: -11.626180648803711
    4. ' split' → logprob: -13.876180648803711
    5. '(split' → logprob: -16.62618064880371
    6. 'read' → logprob: -16.62618064880371
    7. 'spl' → logprob: -17.75118064880371
    8. '.split' → logprob: -19.00118064880371
    9. ' strip' → logprob: -19.37618064880371
    10. ')' → logprob: -19.62618064880371

Token 14: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4037366807460785
    2. '()))' → logprob: -1.9037367105484009
    3. ')' → logprob: -2.0287365913391113
    4. '())' → logprob: -3.0287365913391113
    5. ')))' → logprob: -6.403736591339111
    6. '(' → logprob: -7.153736591339111
    7. '()' → logprob: -7.278736591339111
    8. '())))' → logprob: -9.27873706817627
    9. '()));' → logprob: -11.52873706817627
    10. ''))' → logprob: -11.52873706817627

Token 15: 'N' (ID: 45)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07246337831020355
    2. 'sum' → logprob: -3.947463274002075
    3. 'reduce' → logprob: -4.197463512420654
    4. '[' → logprob: -4.197463512420654
    5. '.reduce' → logprob: -5.447463512420654
    6. '
' → logprob: -6.197463512420654
    7. 'result' → logprob: -6.572463512420654
    8. '+' → logprob: -6.822463512420654
    9. '[::-' → logprob: -6.947463512420654
    10. 's' → logprob: -6.947463512420654

Token 16: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9001558423042297
    2. '_' → logprob: -1.025155782699585
    3. '[' → logprob: -1.900155782699585
    4. 'a' → logprob: -3.150155782699585
    5. '.' → logprob: -4.275156021118164
    6. '=' → logprob: -5.400156021118164
    7. '_a' → logprob: -5.525156021118164
    8. '>' → logprob: -5.650156021118164
    9. ' ' → logprob: -5.775156021118164
    10. ' =' → logprob: -6.025156021118164

Token 17: ' X' (ID: 2127)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.5678757429122925
    2. 'na' → logprob: -1.3178757429122925
    3. ' K' → logprob: -3.317875862121582
    4. 'len' → logprob: -3.817875862121582
    5. 'k' → logprob: -3.942875862121582
    6. 'M' → logprob: -4.067875862121582
    7. 'sum' → logprob: -4.192875862121582
    8. ' ' → logprob: -4.567875862121582
    9. 'max' → logprob: -4.692875862121582
    10. 'a' → logprob: -4.692875862121582

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1607125997543335
    2. '=' → logprob: -1.9107125997543335
    3. ',' → logprob: -7.660712718963623
    4. ' ' → logprob: -11.535712242126465
    5. ')' → logprob: -13.035712242126465
    6. ' ,' → logprob: -13.535712242126465
    7. '=input' → logprob: -14.285712242126465
    8. '=int' → logprob: -14.285712242126465
    9. '[' → logprob: -14.910712242126465
    10. '<|end|>' → logprob: -15.160712242126465

Token 19: ' na' (ID: 898)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.6238473057746887
    2. ' map' → logprob: -0.8738473057746887
    3. ' na' → logprob: -3.498847246170044
    4. 'na' → logprob: -4.123847484588623
    5. ' ' → logprob: -8.498847007751465
    6. 'input' → logprob: -10.623847007751465
    7. ' list' → logprob: -10.623847007751465
    8. 'list' → logprob: -10.748847007751465
    9. ' input' → logprob: -10.873847007751465
    10. '  ' → logprob: -11.373847007751465

Token 20: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.019417302682995796
    2. '[:]' → logprob: -5.2694172859191895
    3. '[N' → logprob: -6.1444172859191895
    4. '.' → logprob: -6.1444172859191895
    5. '[n' → logprob: -6.5194172859191895
    6. '[user' → logprob: -6.6444172859191895
    7. '<|end|>' → logprob: -6.7694172859191895
    8. '[:' → logprob: -7.2694172859191895
    9. '[int' → logprob: -7.3944172859191895
    10. '[num' → logprob: -7.3944172859191895

Token 21: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001198562909848988
    2. ' ' → logprob: -6.751198768615723
    3. ':' → logprob: -11.376198768615723
    4. ']' → logprob: -11.626198768615723
    5. ' :' → logprob: -13.001198768615723
    6. '])' → logprob: -13.376198768615723
    7. '-' → logprob: -13.501198768615723
    8. ')' → logprob: -14.001198768615723
    9. '1' → logprob: -14.001198768615723
    10. ':]' → logprob: -14.751198768615723

Token 22: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6331583261489868
    2. '],' → logprob: -0.7581583261489868
    3. ' ],' → logprob: -8.633158683776855
    4. ' ]' → logprob: -9.258158683776855
    5. ':' → logprob: -9.508158683776855
    6. '],
' → logprob: -9.633158683776855
    7. ',' → logprob: -10.258158683776855
    8. ':],' → logprob: -10.383158683776855
    9. ':]' → logprob: -10.883158683776855
    10. ']
' → logprob: -11.133158683776855

Token 23: ' na' (ID: 898)
  Prédit: ' na'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' na' → logprob: -0.007612544111907482
    2. 'na' → logprob: -4.882612705230713
    3. ' ' → logprob: -12.007612228393555
    4. ' ' → logprob: -16.007612228393555
    5. 'n' → logprob: -16.507612228393555
    6. 'nbsp' → logprob: -16.882612228393555
    7. '_na' → logprob: -17.757612228393555
    8. '&nbsp' → logprob: -17.882612228393555
    9. ' naive' → logprob: -18.007612228393555
    10. ' n' → logprob: -18.382612228393555

Token 24: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001737431448418647
    2. '1' → logprob: -8.750173568725586
    3. ' [' → logprob: -12.125173568725586
    4. '```' → logprob: -12.125173568725586
    5. '\[' → logprob: -13.375173568725586
    6. '[
' → logprob: -13.750173568725586
    7. '2' → logprob: -14.500173568725586
    8. ' ' → logprob: -15.625173568725586
    9. '[-' → logprob: -16.000173568725586
    10. '`' → logprob: -16.312673568725586

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000111768240458332
    2. ' ' → logprob: -9.12511157989502
    3. '2' → logprob: -13.62511157989502
    4. ']' → logprob: -14.00011157989502
    5. '  ' → logprob: -15.50011157989502
    6. '   ' → logprob: -16.125112533569336
    7. '```' → logprob: -16.375112533569336
    8. '0' → logprob: -16.625112533569336
    9. ')' → logprob: -16.937612533569336
    10. '-' → logprob: -17.187612533569336

Token 26: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001310719089815393
    2. '])' → logprob: -9.750130653381348
    3. ']' → logprob: -10.250130653381348
    4. ')])' → logprob: -11.625130653381348
    5. '),' → logprob: -11.875130653381348
    6. '`)' → logprob: -12.625130653381348
    7. '）' → logprob: -12.750130653381348
    8. ' )' → logprob: -12.875130653381348
    9. '>' → logprob: -13.125130653381348
    10. '})' → logprob: -13.125130653381348

Token 27: 'x' (ID: 87)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.730475902557373
    2. 'a' → logprob: -0.730475902557373
    3. 'arr' → logprob: -3.855475902557373
    4. 'lst' → logprob: -5.855475902557373
    5. ' A' → logprob: -6.605475902557373
    6. '```' → logprob: -6.730475902557373
    7. 'data' → logprob: -6.980475902557373
    8. 's' → logprob: -7.105475902557373
    9. 'B' → logprob: -7.105475902557373
    10. 'S' → logprob: -7.230475902557373

Token 28: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09590018540620804
    2. '[' → logprob: -2.845900297164917
    3. ' =' → logprob: -4.220900058746338
    4. '_' → logprob: -5.345900058746338
    5. '_values' → logprob: -5.470900058746338
    6. '[]' → logprob: -5.845900058746338
    7. '[:]' → logprob: -6.095900058746338
    8. '.' → logprob: -7.095900058746338
    9. '=' → logprob: -7.345900058746338
    10. '[i' → logprob: -7.720900058746338

Token 29: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.013945342972874641
    2. ' list' → logprob: -4.513945579528809
    3. 'int' → logprob: -7.138945579528809
    4. '[int' → logprob: -7.263945579528809
    5. '[]' → logprob: -7.263945579528809
    6. '[list' → logprob: -8.263945579528809
    7. 'input' → logprob: -9.013945579528809
    8. '[' → logprob: -9.138945579528809
    9. '[input' → logprob: -9.638945579528809
    10. ' [' → logprob: -10.263945579528809

Token 30: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.10090276598930359
    2. '(' → logprob: -2.350902795791626
    3. '(range' → logprob: -8.225902557373047
    4. '(int' → logprob: -8.600902557373047
    5. '(input' → logprob: -9.225902557373047
    6. '(x' → logprob: -9.975902557373047
    7. '(
' → logprob: -10.975902557373047
    8. '(list' → logprob: -11.350902557373047
    9. '((' → logprob: -11.475902557373047
    10. '()' → logprob: -11.475902557373047

Token 31: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0019498213659971952
    2. '(' → logprob: -6.251949787139893
    3. 'int' → logprob: -11.12695026397705
    4. '(str' → logprob: -13.12695026397705
    5. '(lambda' → logprob: -13.87695026397705
    6. '<int' → logprob: -14.12695026397705
    7. '(
' → logprob: -14.25195026397705
    8. '<|end|>' → logprob: -14.50195026397705
    9. ')' → logprob: -15.00195026397705
    10. '[int' → logprob: -15.12695026397705

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05605831742286682
    2. ',input' → logprob: -2.931058406829834
    3. '(input' → logprob: -6.931058406829834
    4. '(' → logprob: -8.931057929992676
    5. 'input' → logprob: -9.806057929992676
    6. ',int' → logprob: -12.181057929992676
    7. ' ,' → logprob: -12.806057929992676
    8. '=input' → logprob: -13.681057929992676
    9. ' input' → logprob: -14.181057929992676
    10. '```' → logprob: -15.306057929992676

Token 33: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3132637143135071
    2. ' input' → logprob: -1.3132636547088623
    3. ',input' → logprob: -14.063263893127441
    4. 'lambda' → logprob: -15.063263893127441
    5. '<input' → logprob: -15.438263893127441
    6. '(input' → logprob: -15.688263893127441
    7. '=input' → logprob: -15.938263893127441
    8. ' ' → logprob: -16.188262939453125
    9. '	input' → logprob: -16.188262939453125
    10. ' lambda' → logprob: -16.813262939453125

Token 34: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.3544423381972592e-05
    2. '()' → logprob: -11.62501335144043
    3. '(' → logprob: -13.12501335144043
    4. ' ().' → logprob: -13.37501335144043
    5. '.' → logprob: -14.50001335144043
    6. '(.' → logprob: -14.62501335144043
    7. ').' → logprob: -18.37501335144043
    8. ' .' → logprob: -18.37501335144043
    9. ')' → logprob: -18.62501335144043
    10. '().__' → logprob: -18.87501335144043

Token 35: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.2200749754119897e-06
    2. ' split' → logprob: -13.625001907348633
    3. 'strip' → logprob: -14.875001907348633
    4. 'spl' → logprob: -14.875001907348633
    5. 'rstrip' → logprob: -16.125001907348633
    6. '(split' → logprob: -16.250001907348633
    7. 'sp' → logprob: -16.375001907348633
    8. 'read' → logprob: -16.875001907348633
    9. '```' → logprob: -18.250001907348633
    10. '   ' → logprob: -18.375001907348633

Token 36: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.46274951100349426
    2. '))' → logprob: -1.4627494812011719
    3. '())' → logprob: -2.587749481201172
    4. ')' → logprob: -2.837749481201172
    5. '()' → logprob: -5.337749481201172
    6. '(' → logprob: -8.962749481201172
    7. '()));' → logprob: -9.587749481201172
    8. '()),' → logprob: -11.087749481201172
    9. '()))
' → logprob: -11.337749481201172
    10. '),' → logprob: -11.837749481201172

Token 37: 'y' (ID: 88)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5296520590782166
    2. ' ' → logprob: -1.2796521186828613
    3. ' )' → logprob: -3.0296521186828613
    4. ' 
' → logprob: -3.9046521186828613
    5. 'result' → logprob: -4.279652118682861
    6. '[' → logprob: -4.654652118682861
    7. 'r' → logprob: -5.029652118682861
    8. 'x' → logprob: -5.279652118682861
    9. '
' → logprob: -6.029652118682861
    10. '_' → logprob: -6.029652118682861

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06291693449020386
    2. '=' → logprob: -2.8129169940948486
    3. ',' → logprob: -7.6879167556762695
    4. '[' → logprob: -7.9379167556762695
    5. ' ' → logprob: -10.56291675567627
    6. '.' → logprob: -10.93791675567627
    7. ' =[' → logprob: -10.93791675567627
    8. '[:]' → logprob: -11.18791675567627
    9. ')' → logprob: -11.31291675567627
    10. '=[]' → logprob: -11.68791675567627

Token 39: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6539793014526367
    2. 'list' → logprob: -1.0289793014526367
    3. '[' → logprob: -2.9039793014526367
    4. ' [' → logprob: -3.4039793014526367
    5. ' []' → logprob: -4.653979301452637
    6. '[]' → logprob: -4.903979301452637
    7. 'reduce' → logprob: -4.903979301452637
    8. ' x' → logprob: -5.778979301452637
    9. 'x' → logprob: -6.028979301452637
    10. ' reduce' → logprob: -6.278979301452637

Token 40: 'abs' (ID: 6071)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6679893732070923
    2. '0' → logprob: -1.6679893732070923
    3. 'X' → logprob: -2.5429892539978027
    4. 'xi' → logprob: -2.6679892539978027
    5. 'i' → logprob: -3.2929892539978027
    6. 'abs' → logprob: -3.5429892539978027
    7. '1' → logprob: -3.6679892539978027
    8. 'a' → logprob: -4.417989253997803
    9. '(x' → logprob: -4.792989253997803
    10. '(' → logprob: -4.792989253997803

Token 41: '(v' (ID: 6932)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.09423819929361343
    2. '(a' → logprob: -3.21923828125
    3. '(X' → logprob: -3.59423828125
    4. '(i' → logprob: -4.21923828125
    5. '(' → logprob: -5.09423828125
    6. '(v' → logprob: -7.59423828125
    7. '(t' → logprob: -8.34423828125
    8. '(val' → logprob: -8.96923828125
    9. 'a' → logprob: -9.09423828125
    10. '(e' → logprob: -9.21923828125

Token 42: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.18794851005077362
    2. ' -' → logprob: -1.81294846534729
    3. '(' → logprob: -5.937948703765869
    4. '(x' → logprob: -6.062948703765869
    5. '(X' → logprob: -6.562948703765869
    6. '-X' → logprob: -6.562948703765869
    7. '-x' → logprob: -8.812948226928711
    8. 'x' → logprob: -9.812948226928711
    9. ' ' → logprob: -10.062948226928711
    10. 'X' → logprob: -10.187948226928711

Token 43: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.03387931361794472
    2. ' X' → logprob: -3.408879280090332
    3. ' ' → logprob: -8.658879280090332
    4. '   ' → logprob: -11.033879280090332
    5. '  ' → logprob: -11.658879280090332
    6. '	X' → logprob: -11.783879280090332
    7. '(X' → logprob: -11.908879280090332
    8. 'x' → logprob: -12.408879280090332
    9. '>X' → logprob: -12.908879280090332
    10. '(' → logprob: -13.158879280090332

Token 44: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011546355381142348
    2. ' )' → logprob: -10.000115394592285
    3. ')]' → logprob: -10.250115394592285
    4. ')`' → logprob: -11.750115394592285
    5. ')])' → logprob: -11.875115394592285
    6. ')**' → logprob: -12.500115394592285
    7. '))' → logprob: -12.875115394592285
    8. '[' → logprob: -12.875115394592285
    9. '[i' → logprob: -13.125115394592285
    10. ')
' → logprob: -13.250115394592285

Token 45: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.043479349464178085
    2. ' for' → logprob: -3.4184794425964355
    3. 'for' → logprob: -4.6684794425964355
    4. ' )' → logprob: -8.543478965759277
    5. ' ' → logprob: -9.168478965759277
    6. ']' → logprob: -9.918478965759277
    7. ')]' → logprob: -11.543478965759277
    8. '),' → logprob: -12.168478965759277
    9. '	for' → logprob: -12.418478965759277
    10. '+' → logprob: -12.668478965759277

Token 46: ' v' (ID: 323)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04863346368074417
    2. ' x' → logprob: -3.048633575439453
    3. 'v' → logprob: -10.048633575439453
    4. ' v' → logprob: -13.048633575439453
    5. '(x' → logprob: -15.048633575439453
    6. ' ' → logprob: -16.173633575439453
    7. '	x' → logprob: -16.548633575439453
    8. ')x' → logprob: -17.423633575439453
    9. ',x' → logprob: -17.673633575439453
    10. 'value' → logprob: -17.923633575439453

Token 47: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4166254699230194
    2. 'in' → logprob: -1.9166254997253418
    3. 'x' → logprob: -2.166625499725342
    4. ' x' → logprob: -2.541625499725342
    5. ' ' → logprob: -9.041625022888184
    6. 's' → logprob: -9.791625022888184
    7. ']' → logprob: -10.541625022888184
    8. ')' → logprob: -10.916625022888184
    9. ',' → logprob: -11.416625022888184
    10. 'In' → logprob: -11.791625022888184

Token 48: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.018150413408875465
    2. ' x' → logprob: -4.018150329589844
    3. '(x' → logprob: -15.143150329589844
    4. ' ' → logprob: -16.393150329589844
    5. '	x' → logprob: -17.518150329589844
    6. ')x' → logprob: -17.518150329589844
    7. ']' → logprob: -18.518150329589844
    8. '[x' → logprob: -18.518150329589844
    9. '"x' → logprob: -18.518150329589844
    10. '<x' → logprob: -18.893150329589844

Token 49: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004240093287080526
    2. ')' → logprob: -6.379240036010742
    3. '])' → logprob: -6.629240036010742
    4. ')]' → logprob: -7.254240036010742
    5. ']
' → logprob: -7.879240036010742
    6. ' ]' → logprob: -9.504240036010742
    7. ']

' → logprob: -11.004240036010742
    8. ']
' → logprob: -11.754240036010742
    9. '])]' → logprob: -11.879240036010742
    10. ')
' → logprob: -13.129240036010742

Token 50: 'def' (ID: 1314)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3881213068962097
    2. 'reduce' → logprob: -1.1381213665008545
    3. 'result' → logprob: -7.888121128082275
    4. 'from' → logprob: -8.013121604919434
    5. 'def' → logprob: -8.638121604919434
    6. '```' → logprob: -9.388121604919434
    7. 'import' → logprob: -9.888121604919434
    8. '`' → logprob: -10.138121604919434
    9. '.reduce' → logprob: -10.263121604919434
    10. 'g' → logprob: -10.513121604919434

Token 51: ' _' (ID: 1175)
  Prédit: ' gcd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' gcd' → logprob: -0.3584649860858917
    2. ' reduce' → logprob: -1.2334649562835693
    3. 'g' → logprob: -4.983465194702148
    4. 'reduce' → logprob: -6.858465194702148
    5. ' l' → logprob: -7.233465194702148
    6. ' g' → logprob: -7.483465194702148
    7. ' find' → logprob: -8.483465194702148
    8. ' math' → logprob: -8.733465194702148
    9. ' reducer' → logprob: -9.358465194702148
    10. ' get' → logprob: -9.608465194702148

Token 52: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0012629714328795671
    2. '_g' → logprob: -6.87626314163208
    3. 'l' → logprob: -9.251262664794922
    4. 'gc' → logprob: -9.876262664794922
    5. 'reduce' → logprob: -10.751262664794922
    6. 'calc' → logprob: -11.876262664794922
    7. 'get' → logprob: -11.876262664794922
    8. 'eg' → logprob: -12.126262664794922
    9. 'main' → logprob: -12.376262664794922
    10. ' gcd' → logprob: -12.501262664794922

Token 53: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -2.7848862373502925e-05
    2. '_cd' → logprob: -11.375027656555176
    3. 'g' → logprob: -11.875027656555176
    4. 'def' → logprob: -11.875027656555176
    5. 'cf' → logprob: -14.125027656555176
    6. 'CD' → logprob: -14.375027656555176
    7. 'cdf' → logprob: -14.750027656555176
    8. '_g' → logprob: -15.250027656555176
    9. 'cdn' → logprob: -15.500027656555176
    10. 'cm' → logprob: -16.625028610229492

Token 54: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.07969875633716583
    2. '(' → logprob: -2.5796988010406494
    3. '(x' → logprob: -7.32969856262207
    4. '(n' → logprob: -10.45469856262207
    5. 'def' → logprob: -10.57969856262207
    6. 'a' → logprob: -10.82969856262207
    7. '(_' → logprob: -11.32969856262207
    8. '_' → logprob: -11.57969856262207
    9. '(y' → logprob: -11.70469856262207
    10. '(A' → logprob: -11.95469856262207

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002007506787776947
    2. ',b' → logprob: -6.252007484436035
    3. ' ,' → logprob: -9.627007484436035
    4. ',a' → logprob: -11.627007484436035
    5. ',g' → logprob: -14.002007484436035
    6. ',n' → logprob: -14.502007484436035
    7. 'b' → logprob: -14.627007484436035
    8. ',d' → logprob: -14.627007484436035
    9. ',y' → logprob: -15.377007484436035
    10. ',f' → logprob: -15.502007484436035

Token 56: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.038045622408390045
    2. ' b' → logprob: -3.288045644760132
    3. ' ' → logprob: -12.788045883178711
    4. '   ' → logprob: -14.788045883178711
    5. '  ' → logprob: -15.038045883178711
    6. '	b' → logprob: -15.288045883178711
    7. '    ' → logprob: -15.788045883178711
    8. ')b' → logprob: -15.913045883178711
    9. ' ' → logprob: -16.16304588317871
    10. ',b' → logprob: -16.53804588317871

Token 57: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002821928064804524
    2. ')' → logprob: -8.375282287597656
    3. ':' → logprob: -10.625282287597656
    4. '):
' → logprob: -10.875282287597656
    5. ' ):' → logprob: -12.125282287597656
    6. ',' → logprob: -13.250282287597656
    7. ']:' → logprob: -15.625282287597656
    8. ' ' → logprob: -15.625282287597656
    9. '   ' → logprob: -15.875282287597656
    10. '):
' → logprob: -16.000282287597656

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6254746913909912
    2. ' ' → logprob: -1.2504746913909912
    3. ' return' → logprob: -1.8754746913909912
    4. '	return' → logprob: -4.87547492980957
    5. 'return' → logprob: -5.37547492980957
    6. ':' → logprob: -6.00047492980957
    7. ' if' → logprob: -6.00047492980957
    8. ',' → logprob: -6.12547492980957
    9. '  ' → logprob: -6.25047492980957
    10. '<|end|>' → logprob: -6.87547492980957

Token 59: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.1399976015090942
    2. 'a' (adapté à ' a') → logprob: -1.2649976015090942
    3. ' if' → logprob: -1.8899976015090942
    4. ' return' → logprob: -2.0149974822998047
    5. ' while' → logprob: -2.5149974822998047
    6. 'if' → logprob: -4.264997482299805
    7. 'return' → logprob: -4.764997482299805
    8. 'while' → logprob: -5.514997482299805
    9. '   ' → logprob: -5.639997482299805
    10. ' ' → logprob: -6.389997482299805

Token 60: ',' (ID: 11)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.029029686003923416
    2. ' %' → logprob: -4.404029846191406
    3. '%b' → logprob: -4.404029846191406
    4. ',' → logprob: -6.404029846191406
    5. '%=' → logprob: -6.404029846191406
    6. ' %=' → logprob: -7.529029846191406
    7. '%,' → logprob: -9.154029846191406
    8. '=' → logprob: -9.529029846191406
    9. '%i' → logprob: -10.029029846191406
    10. '%d' → logprob: -10.654029846191406

Token 61: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.47412553429603577
    2. ' b' → logprob: -0.9741255044937134
    3. ' ' → logprob: -10.349125862121582
    4. '0' → logprob: -11.599125862121582
    5. '<|end|>' → logprob: -12.224125862121582
    6. '	b' → logprob: -14.349125862121582
    7. '_' → logprob: -14.474125862121582
    8. '   ' → logprob: -15.099125862121582
    9. '    ' → logprob: -15.224125862121582
    10. '_b' → logprob: -15.349125862121582

Token 62: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008622847497463226
    2. ' =' → logprob: -4.758622646331787
    3. ',' → logprob: -13.008623123168945
    4. '=
' → logprob: -13.383623123168945
    5. '%=' → logprob: -14.008623123168945
    6. '=a' → logprob: -14.133623123168945
    7. '   ' → logprob: -14.258623123168945
    8. '=

' → logprob: -14.258623123168945
    9. '=max' → logprob: -14.758623123168945
    10. ' ' → logprob: -15.508623123168945

Token 63: ' max' (ID: 2999)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.12792940437793732
    2. ' b' → logprob: -2.502929449081421
    3. ' max' → logprob: -3.752929449081421
    4. 'max' → logprob: -4.252929210662842
    5. ' (' → logprob: -8.6279296875
    6. '(b' → logprob: -8.6279296875
    7. '(max' → logprob: -9.5029296875
    8. 'min' → logprob: -10.3779296875
    9. ' min' → logprob: -10.6279296875
    10. 'a' → logprob: -10.7529296875

Token 64: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -2.3080716346157715e-05
    2. '(' → logprob: -11.000022888183594
    3. 'a' → logprob: -12.000022888183594
    4. ' (' → logprob: -16.750022888183594
    5. '((' → logprob: -17.500022888183594
    6. '<|end|>' → logprob: -17.750022888183594
    7. ')' → logprob: -18.750022888183594
    8. ',a' → logprob: -19.250022888183594
    9. '(
' → logprob: -19.625022888183594
    10. '(A' → logprob: -19.875022888183594

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006322878412902355
    2. ',b' → logprob: -5.131322860717773
    3. ' ,' → logprob: -7.881322860717773
    4. '%b' → logprob: -11.631322860717773
    5. 'b' → logprob: -13.006322860717773
    6. ',a' → logprob: -13.756322860717773
    7. 'a' → logprob: -13.881322860717773
    8. '%' → logprob: -14.006322860717773
    9. ')' → logprob: -14.131322860717773
    10. '),' → logprob: -14.256322860717773

Token 66: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.011048408225178719
    2. ' b' → logprob: -4.511048316955566
    3. ' ' → logprob: -15.136048316955566
    4. 'a' → logprob: -15.511048316955566
    5. '   ' → logprob: -16.511049270629883
    6. ')b' → logprob: -17.136049270629883
    7. ' a' → logprob: -17.261049270629883
    8. '  ' → logprob: -17.386049270629883
    9. ')' → logprob: -17.386049270629883
    10. '	b' → logprob: -18.761049270629883

Token 67: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -2.081584716506768e-05
    2. ')' → logprob: -11.125020980834961
    3. ' ),' → logprob: -12.125020980834961
    4. ',' → logprob: -14.625020980834961
    5. '),(' → logprob: -16.25002098083496
    6. 'a' → logprob: -17.62502098083496
    7. ',),' → logprob: -17.62502098083496
    8. '   ' → logprob: -18.00002098083496
    9. ''),' → logprob: -19.62502098083496
    10. ')),' → logprob: -19.87502098083496

Token 68: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.5759415030479431
    2. 'min' → logprob: -0.8259415030479431
    3. '	min' → logprob: -13.95094108581543
    4. '   ' → logprob: -14.07594108581543
    5. '  ' → logprob: -15.57594108581543
    6. ' ' → logprob: -15.82594108581543
    7. '(min' → logprob: -17.07594108581543
    8. '[min' → logprob: -17.95094108581543
    9. 'max' → logprob: -18.20094108581543
    10. '    ' → logprob: -18.32594108581543

Token 69: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0028275810182094574
    2. '(' → logprob: -5.8778276443481445
    3. 'a' → logprob: -11.252827644348145
    4. '<|end|>' → logprob: -11.877827644348145
    5. '(
' → logprob: -14.002827644348145
    6. ' (' → logprob: -14.252827644348145
    7. '<|end|>' → logprob: -14.502827644348145
    8. '(ab' → logprob: -15.877827644348145
    9. '```' → logprob: -16.377826690673828
    10. '(abs' → logprob: -16.502826690673828

Token 70: ',' (ID: 11)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.2097766399383545
    2. '(a' → logprob: -1.9597766399383545
    3. ')' → logprob: -3.2097766399383545
    4. '(' → logprob: -5.084776878356934
    5. 'b' → logprob: -7.459776878356934
    6. 'a' → logprob: -7.459776878356934
    7. '),' → logprob: -8.584776878356934
    8. ' (' → logprob: -8.959776878356934
    9. '   ' → logprob: -9.084776878356934
    10. ',' → logprob: -9.209776878356934

Token 71: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0004963174578733742
    2. ' a' → logprob: -7.6254963874816895
    3. 'b' → logprob: -11.875495910644531
    4. ' ' → logprob: -14.250495910644531
    5. '<|end|>' → logprob: -14.750495910644531
    6. ')' → logprob: -15.500495910644531
    7. ' b' → logprob: -16.75049591064453
    8. '	a' → logprob: -16.87549591064453
    9. '(a' → logprob: -17.12549591064453
    10. '  ' → logprob: -17.25049591064453

Token 72: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032656495459377766
    2. ')
' → logprob: -5.753265857696533
    3. '   ' → logprob: -9.878265380859375
    4. ' )' → logprob: -11.628265380859375
    5. ')
' → logprob: -11.753265380859375
    6. ')

' → logprob: -11.878265380859375
    7. '<|end|>' → logprob: -13.128265380859375
    8. ')return' → logprob: -13.253265380859375
    9. '))' → logprob: -14.003265380859375
    10. '
' → logprob: -14.128265380859375

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10157757997512817
    2. '
' → logprob: -2.8515775203704834
    3. '    
' → logprob: -3.8515775203704834
    4. '<|end|>' → logprob: -4.9765777587890625
    5. ' while' → logprob: -5.9765777587890625
    6. 'while' → logprob: -5.9765777587890625
    7. '  
' → logprob: -6.1015777587890625
    8. '```' → logprob: -6.7265777587890625
    9. '	while' → logprob: -7.7265777587890625
    10. ' 
' → logprob: -7.8515777587890625

Token 74: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.43781334161758423
    2. ' while' → logprob: -1.5628132820129395
    3. 'if' → logprob: -2.3128132820129395
    4. '   ' → logprob: -3.4378132820129395
    5. ' if' → logprob: -4.4378132820129395
    6. '    
' → logprob: -6.8128132820129395
    7. 'r' → logprob: -8.437813758850098
    8. ' ' → logprob: -8.687813758850098
    9. '	while' → logprob: -8.812813758850098
    10. ' 
' → logprob: -8.937813758850098

Token 75: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1602262556552887
    2. ' b' → logprob: -1.9102262258529663
    3. ' ' → logprob: -13.910225868225098
    4. '   ' → logprob: -14.160225868225098
    5. '(b' → logprob: -15.660225868225098
    6. '  ' → logprob: -16.910226821899414
    7. '    ' → logprob: -17.035226821899414
    8. 'a' → logprob: -17.035226821899414
    9. '	b' → logprob: -17.035226821899414
    10. ' a' → logprob: -17.410226821899414

Token 76: ' >' (ID: 1424)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.74638831615448
    2. '>' → logprob: -0.99638831615448
    3. ' !=' → logprob: -2.1213884353637695
    4. ':' → logprob: -3.4963884353637695
    5. ' >' → logprob: -5.1213884353637695
    6. 'and' → logprob: -7.7463884353637695
    7. ':
' → logprob: -9.99638843536377
    8. ' and' → logprob: -9.99638843536377
    9. '!==' → logprob: -11.49638843536377
    10. '!="' → logprob: -11.87138843536377

Token 77: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031777136027812958
    2. ' ' → logprob: -5.753177642822266
    3. '  ' → logprob: -17.628177642822266
    4. ' ' → logprob: -18.003177642822266
    5. '```' → logprob: -18.253177642822266
    6. '   ' → logprob: -18.878177642822266
    7. '<|end|>' → logprob: -19.378177642822266
    8. '>' → logprob: -19.878177642822266
    9. '۰' → logprob: -20.128177642822266
    10. 'a' → logprob: -20.378177642822266

Token 78: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '```' → logprob: -20.375015258789062
    4. '000' → logprob: -20.750015258789062
    5. 'zero' → logprob: -20.875015258789062
    6. '۰' → logprob: -21.000015258789062
    7. '<|end|>' → logprob: -21.000015258789062
    8. '   ' → logprob: -21.250015258789062
    9. '  ' → logprob: -21.375015258789062
    10. 'a' → logprob: -21.625015258789062

Token 79: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3259541392326355
    2. ':
' → logprob: -1.3259541988372803
    3. '   ' → logprob: -4.950953960418701
    4. '       ' → logprob: -6.075953960418701
    5. '<|end|>' → logprob: -6.825953960418701
    6. ',' → logprob: -6.950953960418701
    7. '):
' → logprob: -7.950953960418701
    8. ' :
' → logprob: -8.95095443725586
    9. '<|end|>' → logprob: -9.07595443725586
    10. '
' → logprob: -9.20095443725586

Token 80: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21735265851020813
    2. 'a' → logprob: -1.8423526287078857
    3. '
' → logprob: -3.9673526287078857
    4. ' a' → logprob: -4.717352867126465
    5. '   ' → logprob: -5.592352867126465
    6. '    
' → logprob: -6.592352867126465
    7. '        
' → logprob: -6.717352867126465
    8. ' 
' → logprob: -7.217352867126465
    9. ',' → logprob: -7.592352867126465
    10. '<|end|>' → logprob: -7.967352867126465

Token 81: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.02977987565100193
    2. ' a' → logprob: -3.5297799110412598
    3. '	a' → logprob: -11.404779434204102
    4. 'r' → logprob: -12.029779434204102
    5. '   ' → logprob: -12.279779434204102
    6. '```' → logprob: -12.654779434204102
    7. '       ' → logprob: -14.154779434204102
    8. '
' → logprob: -14.279779434204102
    9. 'temp' → logprob: -14.529779434204102
    10. 't' → logprob: -14.904779434204102

Token 82: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6513007283210754
    2. '%=' → logprob: -1.6513006687164307
    3. ' %=' → logprob: -1.7763006687164307
    4. '%' → logprob: -2.2763006687164307
    5. ' %' → logprob: -5.02630090713501
    6. '%b' → logprob: -5.27630090713501
    7. '=' → logprob: -6.40130090713501
    8. ' ,' → logprob: -7.52630090713501
    9. '%,' → logprob: -7.65130090713501
    10. ',b' → logprob: -8.026300430297852

Token 83: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.47420650720596313
    2. ' b' → logprob: -0.9742065072059631
    3. '<|end|>' → logprob: -9.224206924438477
    4. ' ' → logprob: -10.599206924438477
    5. 'a' → logprob: -13.099206924438477
    6. '    ' → logprob: -13.974206924438477
    7. '<|end|>' → logprob: -14.099206924438477
    8. ' a' → logprob: -14.349206924438477
    9. '%b' → logprob: -15.099206924438477
    10. '  ' → logprob: -15.599206924438477

Token 84: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759672522544861
    2. ' =' → logprob: -0.8259672522544861
    3. '%=' → logprob: -10.825966835021973
    4. ',' → logprob: -12.575966835021973
    5. ' %=' → logprob: -13.075966835021973
    6. '=

' → logprob: -14.325966835021973
    7. 'a' → logprob: -15.075966835021973
    8. '<|end|>' → logprob: -15.200966835021973
    9. ')' → logprob: -15.325966835021973
    10. '%' → logprob: -15.575966835021973

Token 85: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.47407880425453186
    2. ' b' → logprob: -0.9740787744522095
    3. ' ' → logprob: -13.724079132080078
    4. '(b' → logprob: -15.099079132080078
    5. ')b' → logprob: -16.099079132080078
    6. '>b' → logprob: -16.349079132080078
    7. '	b' → logprob: -16.599079132080078
    8. '%b' → logprob: -16.724079132080078
    9. ' (' → logprob: -17.349079132080078
    10. '   ' → logprob: -17.474079132080078

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1517960956552997e-05
    2. 'a' → logprob: -11.750011444091797
    3. ' ,' → logprob: -13.250011444091797
    4. ',a' → logprob: -13.500011444091797
    5. ',
' → logprob: -16.000011444091797
    6. ' ' → logprob: -16.625011444091797
    7. '‌,' → logprob: -16.625011444091797
    8. ' a' → logprob: -17.000011444091797
    9. '，' → logprob: -17.250011444091797
    10. ',b' → logprob: -17.625011444091797

Token 87: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10020937025547028
    2. ' a' → logprob: -2.3502094745635986
    3. ' ' → logprob: -13.10020923614502
    4. '	a' → logprob: -14.85020923614502
    5. '>a' → logprob: -16.725210189819336
    6. '(a' → logprob: -16.850210189819336
    7. '<|end|>' → logprob: -16.850210189819336
    8. ''a' → logprob: -17.225210189819336
    9. '_a' → logprob: -17.350210189819336
    10. '"a' → logprob: -17.475210189819336

Token 88: ' %' (ID: 1851)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.386913925409317
    2. ' a' → logprob: -1.1369138956069946
    3. ' ' → logprob: -10.761914253234863
    4. ' %' → logprob: -11.511914253234863
    5. '%' → logprob: -11.636914253234863
    6. '>a' → logprob: -14.261914253234863
    7. '	a' → logprob: -14.386914253234863
    8. '<|end|>' → logprob: -14.511914253234863
    9. '(a' → logprob: -15.136914253234863
    10. '_a' → logprob: -15.261914253234863

Token 89: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0015023599844425917
    2. ' b' → logprob: -6.501502513885498
    3. ' ' → logprob: -20.876502990722656
    4. '<|end|>' → logprob: -21.126502990722656
    5. '	b' → logprob: -21.751502990722656
    6. 'a' → logprob: -22.876502990722656
    7. '_b' → logprob: -23.376502990722656
    8. ')b' → logprob: -23.501502990722656
    9. '  ' → logprob: -24.501502990722656
    10. '>b' → logprob: -24.501502990722656

Token 90: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3281603753566742
    2. '<|end|>' → logprob: -1.4531604051589966
    3. ' 
' → logprob: -4.453160285949707
    4. 'a' → logprob: -4.828160285949707
    5. '  
' → logprob: -5.078160285949707
    6. '\n' → logprob: -5.328160285949707
    7. '```' → logprob: -5.453160285949707
    8. '0' → logprob: -6.203160285949707
    9. '<|end|>' → logprob: -6.953160285949707
    10. '\' → logprob: -6.953160285949707

Token 91: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0442441701889038
    2. '\n' → logprob: -1.5442441701889038
    3. ' 
' → logprob: -1.9192441701889038
    4. 'a' → logprob: -2.0442442893981934
    5. '<|end|>' → logprob: -2.7942442893981934
    6. '  
' → logprob: -3.6692442893981934
    7. '0' → logprob: -4.294244289398193
    8. '```' → logprob: -4.419244289398193
    9. '\' → logprob: -5.044244289398193
    10. 'return' → logprob: -5.169244289398193

Token 92: ' return' (ID: 622)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.012752254493534565
    2. ' a' → logprob: -4.512752056121826
    3. ' 
' → logprob: -7.637752056121826
    4. ' ' → logprob: -8.012752532958984
    5. ' return' → logprob: -8.137752532958984
    6. 'return' (adapté à ' return') → logprob: -8.512752532958984
    7. '<|end|>' → logprob: -8.762752532958984
    8. '_a' → logprob: -10.012752532958984
    9. '  
' → logprob: -10.512752532958984
    10. '0' → logprob: -10.762752532958984

Token 93: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.15310683415737e-05
    2. ' a' → logprob: -10.750021934509277
    3. ' ' → logprob: -19.87502098083496
    4. '   ' → logprob: -20.37502098083496
    5. '	a' → logprob: -20.62502098083496
    6. '_a' → logprob: -21.12502098083496
    7. '<|end|>' → logprob: -21.12502098083496
    8. '  ' → logprob: -21.37502098083496
    9. 'abs' → logprob: -21.75002098083496
    10. ''a' → logprob: -22.25002098083496

Token 94: '

' (ID: 279)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.7289188504219055
    2. '_' → logprob: -1.9789187908172607
    3. 'y' → logprob: -2.6039187908172607
    4. '
' → logprob: -2.8539187908172607
    5. ')' → logprob: -3.6039187908172607
    6. 'def' → logprob: -3.8539187908172607
    7. ' ' → logprob: -3.8539187908172607
    8. '0' → logprob: -3.8539187908172607
    9. 'n' → logprob: -3.9789187908172607
    10. 'd' → logprob: -3.9789187908172607

Token 95: 'res' (ID: 430)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.1945430338382721
    2. '_' → logprob: -2.0695431232452393
    3. 'reduce' → logprob: -3.6945431232452393
    4. 'def' → logprob: -5.19454288482666
    5. 'r' → logprob: -5.44454288482666
    6. 'd' → logprob: -5.44454288482666
    7. 'result' → logprob: -5.81954288482666
    8. 'print' → logprob: -5.94454288482666
    9. 'y' → logprob: -6.31954288482666
    10. '_g' → logprob: -7.19454288482666

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2525676190853119
    2. '=' → logprob: -1.5025676488876343
    3. '_' → logprob: -7.877567768096924
    4. ' ' → logprob: -9.002567291259766
    5. 's' → logprob: -10.127567291259766
    6. '(' → logprob: -10.502567291259766
    7. 'ult' → logprob: -11.627567291259766
    8. 'space' → logprob: -11.627567291259766
    9. 'u' → logprob: -11.877567291259766
    10. '[:]' → logprob: -12.127567291259766

Token 97: ' y' (ID: 342)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.0006807420286349952
    2. 'y' → logprob: -7.500680923461914
    3. ' reduce' → logprob: -9.000680923461914
    4. '0' → logprob: -12.625680923461914
    5. 'redu' → logprob: -14.500680923461914
    6. ' y' → logprob: -15.000680923461914
    7. 'abs' → logprob: -16.000680923461914
    8. 're' → logprob: -16.500680923461914
    9. '_reduce' → logprob: -17.500680923461914
    10. 'x' → logprob: -17.875680923461914

Token 98: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000374546303646639
    2. 'reduce' → logprob: -8.625374794006348
    3. '.reduce' → logprob: -9.125374794006348
    4. '0' → logprob: -10.625374794006348
    5. 'and' → logprob: -10.625374794006348
    6. ' and' → logprob: -11.875374794006348
    7. '_reduce' → logprob: -12.000374794006348
    8. '.pop' → logprob: -12.375374794006348
    9. ' ' → logprob: -13.125374794006348
    10. '<|end|>' → logprob: -13.875374794006348

Token 99: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004947714623995125
    2. '1' → logprob: -7.625494956970215
    3. '-' → logprob: -12.375494956970215
    4. ' ' → logprob: -13.875494956970215
    5. ']' → logprob: -14.812994956970215
    6. '2' → logprob: -15.625494956970215
    7. '[' → logprob: -15.812994956970215
    8. '])' → logprob: -15.812994956970215
    9. ')' → logprob: -16.5629940032959
    10. '   ' → logprob: -16.7504940032959

Token 100: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05648123472929001
    2. ']' → logprob: -2.931481122970581
    3. '<|end|>' → logprob: -6.93148136138916
    4. '])' → logprob: -8.43148136138916
    5. ' )' → logprob: -8.55648136138916
    6. '>' → logprob: -9.55648136138916
    7. '}' → logprob: -9.93148136138916
    8. '<|end|>' → logprob: -10.80648136138916
    9. ')
' → logprob: -11.43148136138916
    10. ' ]' → logprob: -12.30648136138916

Token 101: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02980569191277027
    2. ' for' → logprob: -3.5298056602478027
    3. '<|end|>' → logprob: -10.404806137084961
    4. '
' → logprob: -11.279806137084961
    5. '.for' → logprob: -13.029806137084961
    6. ' ' → logprob: -13.154806137084961
    7. '```' → logprob: -13.154806137084961
    8. '<|end|>' → logprob: -13.404806137084961
    9. '[' → logprob: -13.529806137084961
    10. '	for' → logprob: -14.779806137084961

Token 102: ' v' (ID: 323)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2560003995895386
    2. ' i' → logprob: -2.131000518798828
    3. 'v' → logprob: -2.381000518798828
    4. ' v' → logprob: -4.756000518798828
    5. 'd' → logprob: -6.006000518798828
    6. 'e' → logprob: -7.006000518798828
    7. ' d' → logprob: -7.256000518798828
    8. 'num' → logprob: -8.381000518798828
    9. 'val' → logprob: -8.381000518798828
    10. 'yi' → logprob: -8.381000518798828

Token 103: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026319457218050957
    2. 'in' → logprob: -3.6513195037841797
    3. ' ' → logprob: -11.02631950378418
    4. 'n' → logprob: -14.27631950378418
    5. '	in' → logprob: -14.65131950378418
    6. 's' → logprob: -15.02631950378418
    7. ' i' → logprob: -15.15131950378418
    8. 'v' → logprob: -15.52631950378418
    9. '  ' → logprob: -15.77631950378418
    10. 'y' → logprob: -15.90131950378418

Token 104: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.16022787988185883
    2. ' y' → logprob: -1.91022789478302
    3. '	y' → logprob: -12.66022777557373
    4. ' ' → logprob: -15.66022777557373
    5. '(y' → logprob: -16.160228729248047
    6. '<|end|>' → logprob: -16.535228729248047
    7. ')y' → logprob: -16.910228729248047
    8. '[y' → logprob: -17.285228729248047
    9. '  ' → logprob: -17.660228729248047
    10. '_y' → logprob: -18.410228729248047

Token 105: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.56233171664644e-05
    2. ':' → logprob: -10.000055313110352
    3. '1' → logprob: -11.500055313110352
    4. '[:' → logprob: -18.87505531311035
    5. 'from' → logprob: -19.37505531311035
    6. ' ' → logprob: -19.37505531311035
    7. '2' → logprob: -19.50005531311035
    8. '```' → logprob: -19.62505531311035
    9. '(' → logprob: -19.75005531311035
    10. '{' → logprob: -20.12505531311035

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. ':' → logprob: -17.375001907348633
    4. '   ' → logprob: -17.500001907348633
    5. ')' → logprob: -17.750001907348633
    6. '):' → logprob: -18.125001907348633
    7. 'range' → logprob: -18.750001907348633
    8. '

' → logprob: -19.250001907348633
    9. '１' → logprob: -19.625001907348633
    10. '(' → logprob: -19.750001907348633

Token 107: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002158146962756291
    2. ']:' → logprob: -8.500215530395508
    3. '():' → logprob: -12.750215530395508
    4. '>:' → logprob: -12.750215530395508
    5. ':]' → logprob: -13.250215530395508
    6. '):' → logprob: -13.375215530395508
    7. ' :' → logprob: -13.500215530395508
    8. '+:' → logprob: -14.250215530395508
    9. '：' → logprob: -15.000215530395508
    10. '}:' → logprob: -15.500215530395508

Token 108: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.00019388488726690412
    2. ':' → logprob: -9.50019359588623
    3. ']' → logprob: -10.12519359588623
    4. ']:
' → logprob: -10.37519359588623
    5. '):' → logprob: -10.87519359588623
    6. ']:
' → logprob: -10.87519359588623
    7. ' ]' → logprob: -12.37519359588623
    8. ']):' → logprob: -12.62519359588623
    9. '"]:' → logprob: -15.00019359588623
    10. ']:

' → logprob: -15.37519359588623

Token 109: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0803208202123642
    2. ' res' → logprob: -3.2053208351135254
    3. 'res' → logprob: -3.3303208351135254
    4. '    
' → logprob: -7.455320835113525
    5. '```' → logprob: -9.455320358276367
    6. '
' → logprob: -9.705320358276367
    7. '	res' → logprob: -9.830320358276367
    8. '<|end|>' → logprob: -10.580320358276367
    9. ' if' → logprob: -11.830320358276367
    10. ' 
' → logprob: -12.080320358276367

Token 110: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.15660879015922546
    2. 'res' (adapté à ' res') → logprob: -2.031608819961548
    3. '   ' → logprob: -4.281608581542969
    4. '	res' → logprob: -12.031608581542969
    5. '       ' → logprob: -12.281608581542969
    6. '_res' → logprob: -13.656608581542969
    7. ' _' → logprob: -14.031608581542969
    8. ' ' → logprob: -14.406608581542969
    9. '```' → logprob: -14.406608581542969
    10. 'g' → logprob: -14.531608581542969

Token 111: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326746940612793
    2. '=' → logprob: -1.313267469406128
    3. '=_' → logprob: -13.188267707824707
    4. ' ' → logprob: -13.813267707824707
    5. '=g' → logprob: -13.938267707824707
    6. ' *=' → logprob: -14.438267707824707
    7. '＝' → logprob: -15.063267707824707
    8. '_=' → logprob: -15.313267707824707
    9. '_' → logprob: -15.438267707824707
    10. '=int' → logprob: -15.563267707824707

Token 112: ' _' (ID: 1175)
  Prédit: '_g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.010517011396586895
    2. 'res' → logprob: -4.760517120361328
    3. ' _' → logprob: -7.135517120361328
    4. 'reduce' → logprob: -7.260517120361328
    5. ' res' → logprob: -8.760517120361328
    6. 'g' → logprob: -9.635517120361328
    7. 'abs' → logprob: -10.260517120361328
    8. ' gcd' → logprob: -10.385517120361328
    9. ' ' → logprob: -10.510517120361328
    10. '   ' → logprob: -10.885517120361328

Token 113: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.004620472434908152
    2. '_g' → logprob: -5.379620552062988
    3. '.g' → logprob: -16.504619598388672
    4. ' gcd' → logprob: -16.754619598388672
    5. 'v' → logprob: -17.379619598388672
    6. 'gcc' → logprob: -17.504619598388672
    7. 'gc' → logprob: -17.629619598388672
    8. '-g' → logprob: -17.879619598388672
    9. 'res' → logprob: -18.254619598388672
    10. 'г' → logprob: -18.254619598388672

Token 114: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.00028648413717746735
    2. 'CD' → logprob: -9.000286102294922
    3. '<|end|>' → logprob: -9.375286102294922
    4. 'c' → logprob: -9.750286102294922
    5. '_cd' → logprob: -11.375286102294922
    6. 'cdn' → logprob: -13.000286102294922
    7. 'cmath' → logprob: -13.500286102294922
    8. 'Cd' → logprob: -13.875286102294922
    9. 'cdf' → logprob: -14.625286102294922
    10. 'cs' → logprob: -15.250286102294922

Token 115: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -3.5597102396423e-05
    2. 'res' → logprob: -10.750035285949707
    3. '(' → logprob: -11.250035285949707
    4. ' res' → logprob: -13.750035285949707
    5. ',res' → logprob: -16.750036239624023
    6. '	res' → logprob: -17.625036239624023
    7. ' (' → logprob: -18.250036239624023
    8. '(v' → logprob: -19.125036239624023
    9. ' ' → logprob: -19.250036239624023
    10. '(
' → logprob: -19.625036239624023

Token 116: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005255337804555893
    2. ',v' → logprob: -5.255255222320557
    3. ' ,' → logprob: -11.380255699157715
    4. 'v' → logprob: -11.630255699157715
    5. ' v' → logprob: -13.630255699157715
    6. ',
' → logprob: -17.0052547454834
    7. '`,' → logprob: -18.1302547454834
    8. '   ' → logprob: -19.3802547454834
    9. '',' → logprob: -19.5052547454834
    10. ' ' → logprob: -19.5052547454834

Token 117: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.47407785058021545
    2. ' v' → logprob: -0.9740778207778931
    3. ')' → logprob: -14.724078178405762
    4. ')v' → logprob: -14.974078178405762
    5. '	v' → logprob: -16.599077224731445
    6. ' ' → logprob: -17.474077224731445
    7. '[v' → logprob: -17.849077224731445
    8. '_v' → logprob: -18.349077224731445
    9. '(v' → logprob: -18.724077224731445
    10. '?v' → logprob: -19.224077224731445

Token 118: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. ')
' → logprob: -12.625003814697266
    3. ' )' → logprob: -16.375003814697266
    4. ')`' → logprob: -18.500003814697266
    5. '))' → logprob: -19.625003814697266
    6. ')return' → logprob: -19.750003814697266
    7. ')
' → logprob: -19.750003814697266
    8. ')

' → logprob: -20.375003814697266
    9. ')v' → logprob: -20.375003814697266
    10. ')#' → logprob: -20.500003814697266

Token 119: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.226628895296017e-06
    2. ')' → logprob: -12.750007629394531
    3. '
' → logprob: -13.000007629394531
    4. ' print' → logprob: -13.250007629394531
    5. '<|end|>' → logprob: -16.62500762939453
    6. '.print' → logprob: -17.00000762939453
    7. ')
' → logprob: -17.25000762939453
    8. '#print' → logprob: -17.50000762939453
    9. '```' → logprob: -17.50000762939453
    10. '(print' → logprob: -17.62500762939453

Token 120: '(res' (ID: 8331)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5759569406509399
    2. '(res' → logprob: -0.8259569406509399
    3. 'res' → logprob: -11.700957298278809
    4. '('' → logprob: -12.700957298278809
    5. '()' → logprob: -13.325957298278809
    6. ' (' → logprob: -13.450957298278809
    7. '("("' → logprob: -13.950957298278809
    8. '(
' → logprob: -14.450957298278809
    9. '(len' → logprob: -14.575957298278809
    10. '(print' → logprob: -15.450957298278809

Token 121: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ' )' → logprob: -13.625000953674316
    3. '))' → logprob: -16.250001907348633
    4. ')`' → logprob: -17.125001907348633
    5. ')
' → logprob: -18.375001907348633
    6. '`)' → logprob: -19.250001907348633
    7. '())' → logprob: -19.750001907348633
    8. '')' → logprob: -19.750001907348633
    9. '()' → logprob: -20.000001907348633
    10. ')**' → logprob: -20.000001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 119
Tokens correctement prédits (1ère position, stricte): 48
Tokens correctement prédits (1ère position, avec adaptation): 50
Tokens correctement prédits (top 10): 98
Précision stricte (1ère position): 40.34%
Précision adaptée (1ère position): 42.02%
Précision (top 10): 82.35%
================================================================================
