================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:33:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demande à l'utilisateur de saisir un entier, puis convertit cette entrée de type chaîne en entier
n = int(input())

# Si l'utilisateur entre 2, il n'y a pas de solution et on affiche -1 puis on arrête le programme immédiatement
if n == 2:
    print(-1)  # Affiche -1 car il n'y a pas de solution pour n = 2
    exit()     # Termine immédiatement le programme

# Si l'utilisateur entre 3, on affiche un motif spécifique et on arrête le programme 
if n == 3:
    print("abb")    # Affiche la première ligne du motif pour n = 3
    print("a.c")    # Affiche la deuxième ligne du motif pour n = 3
    print("ddc")    # Affiche la troisième ligne du motif pour n = 3
    exit()          # Termine immédiatement le programme

# Si l'utilisateur entre 5, on affiche le motif adapté à un carré de taille 5, puis arrêt du programme
if n == 5:
    print("aabbc", "hi..c", "hi..d", "g.jjd", "gffee")  # Affiche les 5 lignes du motif pour n = 5
    exit()          # Termine immédiatement le programme

# Si l'utilisateur entre 7, on affiche le motif adapté à un carré de taille 7, puis arrêt du programme
if n == 7:
    print("..abc..")              # Affiche la première ligne du motif pour n = 7
    print("..abc..")              # Deuxième ligne (identique à la première)
    print("aax..aa")              # Motif particulier à la 3ème ligne
    print("bbx..bb")              # 4ème
    print("cc.yycc")              # 5ème
    print("..abc..")              # 6ème
    print("..abc..")              # 7ème (identique à la 1ère et à la 2ème)
    exit()                        # Termine immédiatement le programme

# Si aucune des conditions précédentes n'est vérifiée,
# on va générer dynamiquement la matrice carré de taille n composée initialement de points ".".
# La compréhension de liste crée une liste de listes, chaque sous-liste représentant une ligne de n caractères, initialisés à "."
a = [n * ["."] for _ in range(n)]

# Si n est impair (vérification du reste de la division euclidienne par 2)
if n % 2:
    # On modifie les 5 dernières lignes et colonnes du carré
    # a[-5] représente l'antépénultième (5ème à partir de la fin) ligne, a[-4] la 4ème à partir de la fin, ...
    # Les indices négatifs sont utilisés pour compter à partir de la fin de la liste
    a[-5][-5], a[-5][-4], a[-5][-3], a[-5][-2], a[-5][-1] = list("aabbc")    # 5ème ligne avant la fin
    a[-4][-5], a[-4][-4], a[-4][-3], a[-4][-2], a[-4][-1] = list("hi..c")    # 4ème
    a[-3][-5], a[-3][-4], a[-3][-3], a[-3][-2], a[-3][-1] = list("hi..d")    # 3ème
    a[-2][-5], a[-2][-4], a[-2][-3], a[-2][-2], a[-2][-1] = list("g.jjd")    # 2ème
    a[-1][-5], a[-1][-4], a[-1][-3], a[-1][-2], a[-1][-1] = list("gffee")    # dernière
    n -= 5  # On diminue n de 5 car les 5 dernières lignes/colonnes sont déjà affectées

# On va remplir la matrice par blocs de 2x2 dans la partie restante (non traitée ci-dessus)
for i in range(0, n, 2):      # De 0 jusqu'à n-1 avec un pas de 2 (on avance de deux lignes et deux colonnes à chaque itération)
    # Remplit la diagonale et la case voisine horizontale avec "a"
    a[i][i], a[i][i+1] = "a", "a"
    # Remplit la ligne suivante de la diagonale et la case voisine horizontale avec "b"
    a[i+1][i], a[i+1][i+1] = "b", "b"

# On sépare maintenant les cas selon un motif de parité de n (divisible par 4 ou non)
if n % 4 == 0:  # Si n est divisible par 4
    for i in range(0, n, 2):  # Parcourt les cases principales des blocs de 2x2 comme plus haut
        # Remplit les deux cases à la fin de la ligne et de la colonne avec "c" et "d"
        a[n-i-2][i], a[n-i-2][i+1] = "c", "d"
        a[n-i-1][i], a[n-i-1][i+1] = "c", "d"
else:          # Si n modulo 4 n'est pas 0
    for i in range(0, n-2, 2):  # On s'arrête à n-4, pour ne pas dépasser les indices lors du placement des "c" et "d"
        a[i][i+2], a[i][i+3] = "c", "d"
        a[i+1][i+2], a[i+1][i+3] = "c", "d"
    # On traite les deux dernières lignes (n-2 et n-1) séparément pour les deux premières colonnes
    a[n-2][0], a[n-2][1] = "c", "d"
    a[n-1][0], a[n-1][1] = "c", "d"

# Enfin, on affiche la matrice ligne par ligne
for i in a:
    # ''.join(i) transforme la liste de caractères en une chaîne de caractères
    print("".join(i))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ande' (ID: 4102)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.2601135969161987
    2. ' ' → logprob: -1.5101135969161987
    3. ':' → logprob: -1.6351135969161987
    4. 's' → logprob: -1.7601135969161987
    5. ' =' → logprob: -3.5101137161254883
    6. ''' → logprob: -3.7601137161254883
    7. '_' → logprob: -3.7601137161254883
    8. ' d' → logprob: -4.260113716125488
    9. '```' → logprob: -4.385113716125488
    10. ' :' → logprob: -4.760113716125488

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00664064846932888
    2. ' l' → logprob: -5.631640434265137
    3. 'util' → logprob: -6.381640434265137
    4. 'user' → logprob: -7.131640434265137
    5. ''' → logprob: -9.381640434265137
    6. '#' → logprob: -9.506640434265137
    7. 'un' → logprob: -9.881640434265137
    8. 'toi' → logprob: -9.881640434265137
    9. 'la' → logprob: -10.006640434265137
    10. '`' → logprob: -10.881640434265137

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.050799041986465454
    2. 'util' → logprob: -3.9257991313934326
    3. 'u' → logprob: -4.9257988929748535
    4. ' utilisateur' → logprob: -4.9257988929748535
    5. '’utilisateur' → logprob: -4.9257988929748535
    6. ''' → logprob: -5.4257988929748535
    7. 'a' → logprob: -6.0507988929748535
    8. 'user' → logprob: -8.050799369812012
    9. ''user' → logprob: -8.175799369812012
    10. 'us' → logprob: -8.925799369812012

Token 6: ' de' (ID: 334)
  Prédit: 'nom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nom' → logprob: -0.3604263961315155
    2. 'name' → logprob: -2.235426425933838
    3. 'user' → logprob: -2.485426425933838
    4. 'n' → logprob: -3.235426425933838
    5. 'input' → logprob: -4.110426425933838
    6. 's' → logprob: -4.360426425933838
    7. 'username' → logprob: -4.735426425933838
    8. '#' → logprob: -5.110426425933838
    9. '`' → logprob: -5.235426425933838
    10. 'print' → logprob: -5.735426425933838

Token 7: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.009185493923723698
    2. ' saisir' → logprob: -5.634185314178467
    3. 'r' → logprob: -6.009185314178467
    4. 'entr' → logprob: -6.259185314178467
    5. '```' → logprob: -7.259185314178467
    6. 'sa' → logprob: -9.009185791015625
    7. '#' → logprob: -9.384185791015625
    8. ' entrer' → logprob: -10.259185791015625
    9. ' fournir' → logprob: -10.634185791015625
    10. 'contin' → logprob: -10.759185791015625

Token 8: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4754936993122101
    2. ' un' → logprob: -1.4754936695098877
    3. ' une' → logprob: -2.2254936695098877
    4. ''' → logprob: -4.350493907928467
    5. 's' → logprob: -5.725493907928467
    6. ''un' → logprob: -5.850493907928467
    7. ' ' → logprob: -5.850493907928467
    8. 'un' → logprob: -6.100493907928467
    9. 'une' → logprob: -6.225493907928467
    10. ''une' → logprob: -6.350493907928467

Token 9: ' entier' (ID: 80473)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7632755041122437
    2. ' espace' → logprob: -1.0132755041122437
    3. 'e' → logprob: -2.638275623321533
    4. 'es' → logprob: -3.888275623321533
    5. 'é' → logprob: -4.638275623321533
    6. '_' → logprob: -4.888275623321533
    7. '```' → logprob: -5.013275623321533
    8. 'texte' → logprob: -5.263275623321533
    9. 'a' → logprob: -5.388275623321533
    10. ' caractère' → logprob: -5.763275623321533

Token 10: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0524139329791069
    2. 'i' → logprob: -3.9274139404296875
    3. 'x' → logprob: -3.9274139404296875
    4. 'e' → logprob: -5.1774139404296875
    5. 'ent' → logprob: -6.5524139404296875
    6. 's' → logprob: -6.8024139404296875
    7. 'nombre' → logprob: -7.5524139404296875
    8. '_' → logprob: -7.6774139404296875
    9. '#' → logprob: -7.9274139404296875
    10. 'v' → logprob: -8.052413940429688

Token 11: ' puis' (ID: 18766)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.027731329202651978
    2. 'n' → logprob: -4.777731418609619
    3. 's' → logprob: -5.402731418609619
    4. 'i' → logprob: -6.027731418609619
    5. 'x' → logprob: -6.277731418609619
    6. 'e' → logprob: -6.652731418609619
    7. '_' → logprob: -7.027731418609619
    8. 'a' → logprob: -7.152731418609619
    9. ',' → logprob: -7.152731418609619
    10. ' ,' → logprob: -7.277731418609619

Token 12: ' convert' (ID: 8452)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.1660493165254593
    2. 'cal' → logprob: -2.7910492420196533
    3. 'calcul' → logprob: -4.041049480438232
    4. ' affiche' → logprob: -4.166049480438232
    5. 'effect' → logprob: -4.666049480438232
    6. 'l' → logprob: -5.041049480438232
    7. ' afficher' → logprob: -5.416049480438232
    8. 'print' → logprob: -5.541049480438232
    9. ' calc' → logprob: -5.791049480438232
    10. '#' → logprob: -5.791049480438232

Token 13: 'it' (ID: 278)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6670798063278198
    2. 'i' → logprob: -1.4170798063278198
    3. '_' → logprob: -2.1670799255371094
    4. 'e' → logprob: -3.0420799255371094
    5. 'er' → logprob: -3.1670799255371094
    6. ' ' → logprob: -3.7920799255371094
    7. 's' → logprob: -4.917079925537109
    8. 'ir' → logprob: -5.917079925537109
    9. 'é' → logprob: -6.417079925537109
    10. 'a' → logprob: -6.542079925537109

Token 14: ' cette' (ID: 7696)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24151800572872162
    2. '_' → logprob: -1.6165180206298828
    3. '```' → logprob: -4.616518020629883
    4. ' en' → logprob: -6.866518020629883
    5. '(' → logprob: -6.991518020629883
    6. ''' → logprob: -7.116518020629883
    7. '`' → logprob: -7.491518020629883
    8. ' _' → logprob: -7.491518020629883
    9. '.' → logprob: -8.366518020629883
    10. 'l' → logprob: -8.366518020629883

Token 15: ' entrée' (ID: 95590)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06282322853803635
    2. '_' → logprob: -3.4378232955932617
    3. ' valeur' → logprob: -4.812823295593262
    4. ' chaîne' → logprob: -5.062823295593262
    5. '  ' → logprob: -5.812823295593262
    6. ' espace' → logprob: -6.812823295593262
    7. 's' → logprob: -7.187823295593262
    8. ' en' → logprob: -7.437823295593262
    9. ' )' → logprob: -7.437823295593262
    10. ' entrée' → logprob: -7.687823295593262

Token 16: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7283896803855896
    2. 'i' → logprob: -1.8533897399902344
    3. ' ' → logprob: -2.2283897399902344
    4. 'x' → logprob: -2.8533897399902344
    5. 'n' → logprob: -3.1033897399902344
    6. 'e' → logprob: -3.8533897399902344
    7. 's' → logprob: -3.9783897399902344
    8. 'input' → logprob: -4.103389739990234
    9. '```' → logprob: -4.103389739990234
    10. '`' → logprob: -4.228389739990234

Token 17: ' type' (ID: 1490)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.5524054765701294
    2. ' type' → logprob: -1.6774054765701294
    3. 'l' → logprob: -2.17740535736084
    4. 'type' → logprob: -2.80240535736084
    5. 'chaine' → logprob: -2.92740535736084
    6. '_' → logprob: -3.05240535736084
    7. 'r' → logprob: -3.17740535736084
    8. ' code' → logprob: -3.30240535736084
    9. 'string' → logprob: -3.55240535736084
    10. ' input' → logprob: -3.80240535736084

Token 18: ' chaîne' (ID: 89288)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.36965855956077576
    2. ' string' → logprob: -1.3696585893630981
    3. ' '' → logprob: -4.494658470153809
    4. ' chaîne' → logprob: -4.619658470153809
    5. ' str' → logprob: -4.869658470153809
    6. ' espace' → logprob: -5.619658470153809
    7. '  ' → logprob: -5.619658470153809
    8. ' space' → logprob: -5.869658470153809
    9. ''' → logprob: -6.244658470153809
    10. ' int' → logprob: -6.494658470153809

Token 19: ' en' (ID: 469)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4263055920600891
    2. ' ' → logprob: -2.1763055324554443
    3. '`' → logprob: -2.8013055324554443
    4. ''' → logprob: -3.5513055324554443
    5. '```' → logprob: -4.051305770874023
    6. '(' → logprob: -4.301305770874023
    7. 'n' → logprob: -4.551305770874023
    8. 's' → logprob: -4.551305770874023
    9. ',' → logprob: -4.676305770874023
    10. 'i' → logprob: -4.676305770874023

Token 20: ' entier' (ID: 80473)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.8439982533454895
    2. ' entier' → logprob: -1.2189981937408447
    3. 'int' → logprob: -2.5939981937408447
    4. 'un' → logprob: -2.7189981937408447
    5. 'ent' → logprob: -2.7189981937408447
    6. ' int' → logprob: -2.8439981937408447
    7. ' ' → logprob: -5.218998432159424
    8. ' ent' → logprob: -6.968998432159424
    9. '```' → logprob: -7.218998432159424
    10. ' nombre' → logprob: -7.343998432159424

Token 21: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2126682996749878
    2. 'x' → logprob: -2.2126684188842773
    3. 'i' → logprob: -3.3376684188842773
    4. '\n' → logprob: -4.212668418884277
    5. 'e' → logprob: -4.712668418884277
    6. '```' → logprob: -4.962668418884277
    7. 'a' → logprob: -5.587668418884277
    8. 'nombre' → logprob: -6.337668418884277
    9. 'ent' → logprob: -6.337668418884277
    10. 'v' → logprob: -6.337668418884277

Token 22: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09619040787220001
    2. 'x' → logprob: -3.0961904525756836
    3. 'e' → logprob: -4.221190452575684
    4. 'i' → logprob: -4.596190452575684
    5. '\n' → logprob: -5.221190452575684
    6. '\' → logprob: -5.221190452575684
    7. 'ent' → logprob: -5.971190452575684
    8. '```' → logprob: -6.471190452575684
    9. 'nombre' → logprob: -6.721190452575684
    10. '#' → logprob: -6.721190452575684

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18045459687709808
    2. '=' → logprob: -1.8054546117782593
    3. ' ' → logprob: -7.430454730987549
    4. '_' → logprob: -9.55545425415039
    5. ')' → logprob: -11.18045425415039
    6. ',' → logprob: -11.68045425415039
    7. '  ' → logprob: -12.30545425415039
    8. '.' → logprob: -12.43045425415039
    9. ' )' → logprob: -13.18045425415039
    10. 's' → logprob: -13.18045425415039

Token 24: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.1282789409160614
    2. 'int' → logprob: -2.128278970718384
    3. ' input' → logprob: -6.753278732299805
    4. 'input' → logprob: -8.628278732299805
    5. '=int' → logprob: -13.003278732299805
    6. ' ' → logprob: -13.878278732299805
    7. ' ' → logprob: -14.628278732299805
    8. '<int' → logprob: -16.378278732299805
    9. '```' → logprob: -16.628278732299805
    10. '[int' → logprob: -17.128278732299805

Token 25: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6932399868965149
    2. '(input' → logprob: -0.6932399868965149
    3. ' (' → logprob: -9.94324016571045
    4. 'input' → logprob: -10.69324016571045
    5. '('' → logprob: -11.69324016571045
    6. '()' → logprob: -12.19324016571045
    7. '(
' → logprob: -12.31824016571045
    8. '(user' → logprob: -14.06824016571045
    9. ' ' → logprob: -14.44324016571045
    10. '(

' → logprob: -14.69324016571045

Token 26: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008241381496191025
    2. '('' → logprob: -5.008241176605225
    3. '("("' → logprob: -7.508241176605225
    4. '()' → logprob: -7.758241176605225
    5. '("' → logprob: -8.758241653442383
    6. '(""))' → logprob: -8.758241653442383
    7. '("")' → logprob: -9.133241653442383
    8. '())' → logprob: -10.258241653442383
    9. ')' → logprob: -10.883241653442383
    10. '(
' → logprob: -11.008241653442383

Token 27: '#' (ID: 2)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.28966251015663147
    2. '#' → logprob: -2.6646625995635986
    3. ' ' → logprob: -2.6646625995635986
    4. ')' → logprob: -3.2896625995635986
    5. '*' → logprob: -3.5396625995635986
    6. '
' → logprob: -4.1646623611450195
    7. '+
' → logprob: -4.9146623611450195
    8. '\n' → logprob: -5.1646623611450195
    9. ' 
' → logprob: -5.6646623611450195
    10. '\' → logprob: -6.1646623611450195

Token 28: ' Si' (ID: 7832)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.18493859469890594
    2. 'if' → logprob: -2.059938669204712
    3. 'factor' → logprob: -4.059938430786133
    4. 'print' → logprob: -5.059938430786133
    5. '#' → logprob: -5.434938430786133
    6. ' print' → logprob: -5.809938430786133
    7. 'Si' → logprob: -6.434938430786133
    8. ' #' → logprob: -6.434938430786133
    9. ' factorial' → logprob: -6.684938430786133
    10. ' for' → logprob: -6.684938430786133

Token 29: ' l' (ID: 305)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0182478129863739
    2. 'n' → logprob: -4.143247604370117
    3. ' ' → logprob: -6.143247604370117
    4. '  ' → logprob: -10.518247604370117
    5. ' ' → logprob: -11.268247604370117
    6. '	n' → logprob: -12.518247604370117
    7. '(n' → logprob: -12.518247604370117
    8. ' (' → logprob: -12.643247604370117
    9. '   ' → logprob: -12.955747604370117
    10. ' )' → logprob: -13.768247604370117

Token 30: ''utilisateur' (ID: 140803)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.524167001247406
    2. 'n' → logprob: -0.899167001247406
    3. ' ' → logprob: -7.274167060852051
    4. ' nombre' → logprob: -9.14916706085205
    5. ''utilisateur' → logprob: -9.89916706085205
    6. 'nombre' → logprob: -10.64916706085205
    7. 'a' → logprob: -10.89916706085205
    8. '   ' → logprob: -11.14916706085205
    9. '`' → logprob: -11.39916706085205
    10. '  ' → logprob: -11.52416706085205

Token 31: ' entre' (ID: 3853)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.33078092336654663
    2. ' n' → logprob: -1.3307809829711914
    3. ' sais' → logprob: -5.955780982971191
    4. ' <' → logprob: -6.205780982971191
    5. ' a' → logprob: -6.330780982971191
    6. ' >' → logprob: -6.455780982971191
    7. ' est' → logprob: -6.580780982971191
    8. ' >=' → logprob: -6.830780982971191
    9. ' souhaite' → logprob: -6.955780982971191
    10. ' veut' → logprob: -6.955780982971191

Token 32: ' ' (ID: 220)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2521272897720337
    2. ' un' → logprob: -2.252127170562744
    3. ' ' → logprob: -2.627127170562744
    4. ' une' → logprob: -3.752127170562744
    5. 'n' → logprob: -4.502127170562744
    6. '(n' → logprob: -5.002127170562744
    7. '  ' → logprob: -7.002127170562744
    8. 'un' → logprob: -7.252127170562744
    9. 'a' → logprob: -7.877127170562744
    10. 'une' → logprob: -8.127127647399902

Token 33: '2' (ID: 17)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.5057566165924072
    2. '0' → logprob: -1.6307566165924072
    3. 'un' → logprob: -2.0057566165924072
    4. 'n' → logprob: -3.7557566165924072
    5. ' ' → logprob: -3.8807566165924072
    6. 'une' → logprob: -4.880756378173828
    7. ' n' → logprob: -5.005756378173828
    8. ' une' → logprob: -5.755756378173828
    9. '1' → logprob: -6.380756378173828
    10. '100' → logprob: -7.255756378173828

Token 34: ',' (ID: 11)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.09093863517045975
    2. ' ==' → logprob: -2.9659385681152344
    3. ' ' → logprob: -3.8409385681152344
    4. ':' → logprob: -4.965938568115234
    5. ' :
' → logprob: -5.965938568115234
    6. ' ,' → logprob: -6.465938568115234
    7. ' <=' → logprob: -6.840938568115234
    8. ',' → logprob: -7.715938568115234
    9. ' **' → logprob: -7.715938568115234
    10. ' <' → logprob: -8.715938568115234

Token 35: ' il' (ID: 1793)
  Prédit: ' alors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' alors' → logprob: -0.839374303817749
    2. ' if' → logprob: -1.089374303817749
    3. ' n' → logprob: -2.839374303817749
    4. 'if' → logprob: -2.964374303817749
    5. ' on' → logprob: -3.214374303817749
    6. ' print' → logprob: -3.589374303817749
    7. 'n' → logprob: -4.214374542236328
    8. ' ' → logprob: -4.839374542236328
    9. 'al' → logprob: -5.339374542236328
    10. '   ' → logprob: -5.339374542236328

Token 36: ' n' (ID: 297)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.2908075749874115
    2. ' faut' → logprob: -2.1658074855804443
    3. 'print' → logprob: -3.1658074855804443
    4. 's' → logprob: -3.6658074855804443
    5. ' ' → logprob: -4.540807723999023
    6. ' n' → logprob: -4.540807723999023
    7. ' affiche' → logprob: -4.540807723999023
    8. 'est' → logprob: -5.165807723999023
    9. ' faudra' → logprob: -5.415807723999023
    10. ' est' → logprob: -5.415807723999023

Token 37: ''y' (ID: 27913)
  Prédit: ' faut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' faut' → logprob: -1.1191147565841675
    2. 'est' → logprob: -1.8691147565841675
    3. ' print' → logprob: -2.494114875793457
    4. ' vaut' → logprob: -2.494114875793457
    5. 'e' → logprob: -2.869114875793457
    6. ' est' → logprob: -3.369114875793457
    7. ' y' → logprob: -3.494114875793457
    8. ' ==' → logprob: -3.494114875793457
    9. 'a' → logprob: -3.744114875793457
    10. ' n' → logprob: -3.744114875793457

Token 38: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.29229092597961426
    2. 'a' → logprob: -2.2922909259796143
    3. ' faut' → logprob: -2.9172909259796143
    4. 'pas' → logprob: -3.5422909259796143
    5. ' pas' → logprob: -3.7922909259796143
    6. 'est' → logprob: -4.167290687561035
    7. 'f' → logprob: -5.167290687561035
    8. ' ==' → logprob: -5.667290687561035
    9. ' faudra' → logprob: -5.667290687561035
    10. ' vaut' → logprob: -5.917290687561035

Token 39: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.10082053393125534
    2. 'pas' → logprob: -2.975820541381836
    3. ' rien' → logprob: -3.475820541381836
    4. ' aucun' → logprob: -4.975820541381836
    5. ' ' → logprob: -5.975820541381836
    6. ' aucune' → logprob: -6.350820541381836
    7. 'r' → logprob: -6.850820541381836
    8. ' plus' → logprob: -7.100820541381836
    9. ' jamais' → logprob: -8.475820541381836
    10. 's' → logprob: -9.600820541381836

Token 40: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6545987725257874
    2. ' de' → logprob: -1.4045987129211426
    3. 'd' → logprob: -1.5295987129211426
    4. ' d' → logprob: -4.154598712921143
    5. ' ' → logprob: -7.279598712921143
    6. 's' → logprob: -7.654598712921143
    7. '#' → logprob: -7.779598712921143
    8. 'pas' → logprob: -8.5295991897583
    9. '_de' → logprob: -8.9045991897583
    10. 'plus' → logprob: -9.6545991897583

Token 41: ' solution' (ID: 7578)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.9640323519706726
    2. ' facteur' → logprob: -1.4640324115753174
    3. 'nombre' → logprob: -2.5890324115753174
    4. ' nombre' → logprob: -2.5890324115753174
    5. ' div' → logprob: -3.3390324115753174
    6. ' factor' → logprob: -3.5890324115753174
    7. ' carré' → logprob: -3.8390324115753174
    8. 'fact' → logprob: -4.089032173156738
    9. ' division' → logprob: -4.214032173156738
    10. ' problème' → logprob: -4.339032173156738

Token 42: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3423930406570435
    2. ' ' → logprob: -1.3423930406570435
    3. ' if' → logprob: -1.5923930406570435
    4. 'if' → logprob: -2.592392921447754
    5. ' ,' → logprob: -2.592392921447754
    6. '```' → logprob: -2.967392921447754
    7. '.' → logprob: -3.592392921447754
    8. '
' → logprob: -4.467392921447754
    9. ' 
' → logprob: -5.217392921447754
    10. ':' → logprob: -5.217392921447754

Token 43: ' on' (ID: 402)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.07461421191692352
    2. 'print' → logprob: -2.6996142864227295
    3. ' on' → logprob: -6.44961404800415
    4. ' exit' → logprob: -6.94961404800415
    5. ' il' → logprob: -8.199614524841309
    6. 'exit' → logprob: -8.324614524841309
    7. ' n' → logprob: -8.449614524841309
    8. ' ' → logprob: -8.699614524841309
    9. ' return' → logprob: -8.949614524841309
    10. ' ' → logprob: -9.199614524841309

Token 44: ' affiche' (ID: 127479)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.3060207664966583
    2. 'print' → logprob: -1.556020736694336
    3. ' affiche' → logprob: -3.431020736694336
    4. 'aff' → logprob: -5.306020736694336
    5. ' continue' → logprob: -5.681020736694336
    6. ' imprime' → logprob: -5.806020736694336
    7. ' ' → logprob: -6.056020736694336
    8. ' met' → logprob: -6.931020736694336
    9. ' quitte' → logprob: -6.931020736694336
    10. 'continue' → logprob: -7.181020736694336

Token 45: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9942137002944946
    2. '(' → logprob: -1.3692137002944946
    3. '"' → logprob: -1.4942137002944946
    4. '("' → logprob: -2.494213581085205
    5. ' "' → logprob: -3.994213581085205
    6. ' un' → logprob: -4.619213581085205
    7. '```' → logprob: -4.619213581085205
    8. ' (' → logprob: -5.369213581085205
    9. ':' → logprob: -5.494213581085205
    10. ' :' → logprob: -6.119213581085205

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.084206375409849e-05
    2. ' ' → logprob: -10.750041007995605
    3. '2' → logprob: -11.000041007995605
    4. '```' → logprob: -13.750041007995605
    5. 's' → logprob: -15.375041007995605
    6. '-' → logprob: -15.625041007995605
    7. 'n' → logprob: -15.750041007995605
    8. ' -' → logprob: -16.43754005432129
    9. ''''' → logprob: -16.56254005432129
    10. '_' → logprob: -16.62504005432129

Token 47: ' puis' (ID: 18766)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6769701838493347
    2. 'if' → logprob: -1.6769702434539795
    3. ' if' → logprob: -2.1769702434539795
    4. '```' → logprob: -2.3019702434539795
    5. '\n' → logprob: -2.6769702434539795
    6. '\' → logprob: -5.4269700050354
    7. ' 
' → logprob: -5.5519700050354
    8. '
' → logprob: -5.8019700050354
    9. '' → logprob: -5.9269700050354
    10. ',' → logprob: -6.4269700050354

Token 48: ' on' (ID: 402)
  Prédit: ' quitte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' quitte' → logprob: -0.389631450176239
    2. ' exit' → logprob: -1.8896315097808838
    3. 'exit' → logprob: -2.514631509780884
    4. ' quit' → logprob: -3.389631509780884
    5. 'quit' → logprob: -4.139631271362305
    6. ' sort' → logprob: -5.139631271362305
    7. '```' → logprob: -5.264631271362305
    8. 'sort' → logprob: -5.264631271362305
    9. ' ' → logprob: -5.514631271362305
    10. 's' → logprob: -5.764631271362305

Token 49: ' arr' (ID: 1724)
  Prédit: ' quitte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' quitte' → logprob: -0.9773660898208618
    2. ' termine' → logprob: -1.6023660898208618
    3. 'exit' → logprob: -2.3523659706115723
    4. 'arr' → logprob: -2.8523659706115723
    5. ' exit' → logprob: -2.8523659706115723
    6. ' stop' → logprob: -2.9773659706115723
    7. ' continue' → logprob: -3.1023659706115723
    8. 'continue' → logprob: -3.9773659706115723
    9. 'stop' → logprob: -4.227365970611572
    10. ' arr' → logprob: -4.602365970611572

Token 50: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.13946326076984406
    2. 'êt' → logprob: -2.389463186264038
    3. 'ete' → logprob: -3.639463186264038
    4. 'êter' → logprob: -5.139463424682617
    5. 'te' → logprob: -5.639463424682617
    6. 'ète' → logprob: -6.889463424682617
    7. 'et' → logprob: -7.139463424682617
    8. 'ter' → logprob: -8.264463424682617
    9. 'ote' → logprob: -9.014463424682617
    10. 'ê' → logprob: -9.014463424682617

Token 51: ' le' (ID: 505)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0262186527252197
    2. ' if' → logprob: -1.5262186527252197
    3. '
' → logprob: -1.6512186527252197
    4. '```' → logprob: -1.9012186527252197
    5. '\n' → logprob: -3.1512186527252197
    6. ' 
' → logprob: -4.776218414306641
    7. '' → logprob: -5.276218414306641
    8. '\' → logprob: -5.276218414306641
    9. '  
' → logprob: -5.651218414306641
    10. ' ' → logprob: -5.901218414306641

Token 52: ' programme' (ID: 18190)
  Prédit: ' programme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' programme' → logprob: -0.7453737258911133
    2. 'programme' → logprob: -0.7453737258911133
    3. 'program' → logprob: -3.1203737258911133
    4. ' program' → logprob: -5.120373725891113
    5. ' code' → logprob: -8.995373725891113
    6. 'programma' → logprob: -9.120373725891113
    7. '```' → logprob: -9.370373725891113
    8. 'code' → logprob: -9.620373725891113
    9. ' programa' → logprob: -9.620373725891113
    10. 's' → logprob: -9.745373725891113

Token 53: ' immédiatement' (ID: 100743)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06634348630905151
    2. ' if' → logprob: -3.1913435459136963
    3. '
' → logprob: -3.9413435459136963
    4. '```' → logprob: -5.816343307495117
    5. '<|end|>' → logprob: -8.316343307495117
    6. 'n' → logprob: -8.816343307495117
    7. ' 
' → logprob: -9.441343307495117
    8. ',' → logprob: -10.191343307495117
    9. '\n' → logprob: -10.316343307495117
    10. 'i' → logprob: -10.441343307495117

Token 54: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004209109116345644
    2. '
' → logprob: -5.879209041595459
    3. ' if' → logprob: -7.004209041595459
    4. '```' → logprob: -7.629209041595459
    5. 'i' → logprob: -13.129209518432617
    6. 'n' → logprob: -13.379209518432617
    7. '``' → logprob: -13.379209518432617
    8. '

' → logprob: -14.004209518432617
    9. '
' → logprob: -14.504209518432617
    10. '\n' → logprob: -14.629209518432617

Token 55: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0006897979183122516
    2. '```' → logprob: -8.125689506530762
    3. ' if' → logprob: -8.375689506530762
    4. '
' → logprob: -8.750689506530762
    5. 'n' → logprob: -13.000689506530762
    6. 'i' → logprob: -14.000689506530762
    7. '``' → logprob: -14.000689506530762
    8. '
' → logprob: -16.250690460205078
    9. '

' → logprob: -16.250690460205078
    10. 'ifs' → logprob: -16.250690460205078

Token 56: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0005564896273426712
    2. 'n' → logprob: -7.500556468963623
    3. ' ' → logprob: -12.875556945800781
    4. ' ' → logprob: -14.000556945800781
    5. '	n' → logprob: -16.62555694580078
    6. '(n' → logprob: -18.00055694580078
    7. ' ‌' → logprob: -18.87555694580078
    8. ' (' → logprob: -19.12555694580078
    9. ' ' → logprob: -19.12555694580078
    10. ' н' → logprob: -20.25055694580078

Token 57: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.004728684201836586
    2. '==' → logprob: -5.5047287940979
    3. ' ' → logprob: -7.8797287940979
    4. ' <' → logprob: -8.629728317260742
    5. ' !=' → logprob: -10.004728317260742
    6. ' <=' → logprob: -10.504728317260742
    7. ' =' → logprob: -11.754728317260742
    8. '=' → logprob: -12.879728317260742
    9. ' ' → logprob: -12.879728317260742
    10. ')' → logprob: -13.129728317260742

Token 58: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006721655838191509
    2. '2' → logprob: -5.006721496582031
    3. ' ' → logprob: -12.006721496582031
    4. '1' → logprob: -16.50672149658203
    5. '0' → logprob: -17.38172149658203
    6. 'space' → logprob: -18.38172149658203
    7. '```' → logprob: -18.81922149658203
    8. '3' → logprob: -19.00672149658203
    9. '  ' → logprob: -19.06922149658203
    10. ' ' → logprob: -19.13172149658203

Token 59: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007099286303855479
    2. ' ' → logprob: -7.2507100105285645
    3. '```' → logprob: -17.125709533691406
    4. ' ' → logprob: -18.875709533691406
    5. '  ' → logprob: -19.000709533691406
    6. '1' → logprob: -19.000709533691406
    7. '   ' → logprob: -19.250709533691406
    8. '3' → logprob: -19.500709533691406
    9. '۲' → logprob: -19.625709533691406
    10. '２' → logprob: -19.750709533691406

Token 60: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00014931005716789514
    2. ' :' → logprob: -9.125149726867676
    3. ':
' → logprob: -10.125149726867676
    4. ':return' → logprob: -16.12514877319336
    5. '):' → logprob: -16.25014877319336
    6. ':
' → logprob: -17.37514877319336
    7. ' :
' → logprob: -17.62514877319336
    8. ':**' → logprob: -17.87514877319336
    9. '：' → logprob: -18.37514877319336
    10. '():' → logprob: -18.87514877319336

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5946475267410278
    2. ' print' → logprob: -1.0946475267410278
    3. 'print' → logprob: -2.2196474075317383
    4. ':' → logprob: -6.469647407531738
    5. '```' → logprob: -6.469647407531738
    6. '	print' → logprob: -7.219647407531738
    7. '
' → logprob: -7.719647407531738
    8. ':
' → logprob: -8.969647407531738
    9. '    ' → logprob: -9.219647407531738
    10. '    
' → logprob: -9.344647407531738

Token 62: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.16026189923286438
    2. ' print' → logprob: -1.910261869430542
    3. '   ' → logprob: -10.410262107849121
    4. 'import' → logprob: -12.785262107849121
    5. '```' → logprob: -13.660262107849121
    6. '    ' → logprob: -14.035262107849121
    7. 'return' → logprob: -14.410262107849121
    8. ' ' → logprob: -14.410262107849121
    9. 'exit' → logprob: -14.535262107849121
    10. '	print' → logprob: -14.785262107849121

Token 63: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.0298537015914917
    2. '(' → logprob: -3.5298538208007812
    3. '("' → logprob: -9.904853820800781
    4. '("-' → logprob: -10.279853820800781
    5. '-' → logprob: -11.529853820800781
    6. '('' → logprob: -12.029853820800781
    7. '()' → logprob: -14.029853820800781
    8. '(
' → logprob: -14.404853820800781
    9. '('-' → logprob: -14.404853820800781
    10. ' (-' → logprob: -14.404853820800781

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '```' → logprob: -19.5625
    4. '2' → logprob: -19.75
    5. '   ' → logprob: -20.375
    6. '' → logprob: -20.75
    7. '１' → logprob: -20.8125
    8. ')' → logprob: -20.875
    9. '१' → logprob: -21.125
    10. '۱' → logprob: -21.1875

Token 65: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07891898602247238
    2. ')
' → logprob: -2.578918933868408
    3. '   ' → logprob: -11.578919410705566
    4. ')
' → logprob: -11.578919410705566
    5. ' )' → logprob: -12.328919410705566
    6. ')return' → logprob: -12.328919410705566
    7. ' )
' → logprob: -14.203919410705566
    8. '')' → logprob: -15.078919410705566
    9. ')#' → logprob: -16.07891845703125
    10. '```' → logprob: -16.32891845703125

Token 66: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1285523772239685
    2. 'else' → logprob: -2.6285524368286133
    3. '
' → logprob: -3.5035524368286133
    4. 'exit' → logprob: -4.753552436828613
    5. 'elif' → logprob: -5.378552436828613
    6. '	exit' → logprob: -6.628552436828613
    7. '```' → logprob: -6.878552436828613
    8. '    
' → logprob: -6.878552436828613
    9. '<|end|>' → logprob: -7.753552436828613
    10. 'import' → logprob: -7.878552436828613

Token 67: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.08066949248313904
    2. 'elif' → logprob: -3.455669403076172
    3. '
' → logprob: -3.580669403076172
    4. 'exit' → logprob: -4.330669403076172
    5. '   ' → logprob: -5.955669403076172
    6. '```' → logprob: -7.080669403076172
    7. '	exit' → logprob: -8.080669403076172
    8. '    
' → logprob: -8.080669403076172
    9. ' else' → logprob: -8.205669403076172
    10. '\n' → logprob: -8.705669403076172

Token 68: ' Aff' (ID: 13741)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.15844863653182983
    2. ' exit' → logprob: -2.1584486961364746
    3. '	exit' → logprob: -4.658448696136475
    4. '   ' → logprob: -5.033448696136475
    5. 'else' → logprob: -5.033448696136475
    6. '```' → logprob: -5.783448696136475
    7. '\n' → logprob: -7.158448696136475
    8. 'import' → logprob: -7.158448696136475
    9. 'elif' → logprob: -7.408448696136475
    10. 'quit' → logprob: -7.658448696136475

Token 69: 'iche' (ID: 7509)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.06797345727682114
    2. 'iche' → logprob: -3.3179733753204346
    3. 'ichage' → logprob: -3.6929733753204346
    4. '   ' → logprob: -5.817973613739014
    5. '#' → logprob: -7.817973613739014
    6. '       ' → logprob: -7.942973613739014
    7. 'ect' → logprob: -8.192973136901855
    8. 'ich' → logprob: -9.192973136901855
    9. 'cher' → logprob: -9.567973136901855
    10. 'ic' → logprob: -9.692973136901855

Token 70: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.750005722045898
    3. '2' → logprob: -13.000005722045898
    4. ')' → logprob: -16.5000057220459
    5. '```' → logprob: -17.1250057220459
    6. ',' → logprob: -17.2500057220459
    7. '   ' → logprob: -17.3125057220459
    8. '.' → logprob: -17.3750057220459
    9. ' ' → logprob: -17.8750057220459
    10. 'l' → logprob: -17.9375057220459

Token 72: ' car' (ID: 1669)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23247002065181732
    2. '
' → logprob: -2.3574700355529785
    3. 'else' → logprob: -2.4824700355529785
    4. 'elif' → logprob: -4.6074700355529785
    5. '<|end|>' → logprob: -4.9824700355529785
    6. '\n' → logprob: -5.8574700355529785
    7. '```' → logprob: -5.9824700355529785
    8. ' else' → logprob: -6.3574700355529785
    9. '    
' → logprob: -6.6074700355529785
    10. ')' → logprob: -7.1074700355529785

Token 73: ' il' (ID: 1793)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.241885781288147
    2. ' on' → logprob: -1.366885781288147
    3. ' exit' → logprob: -2.1168856620788574
    4. ' aucun' → logprob: -2.8668856620788574
    5. 'le' → logprob: -2.9918856620788574
    6. ' la' → logprob: -3.4918856620788574
    7. ' aucune' → logprob: -3.4918856620788574
    8. ' l' → logprob: -3.4918856620788574
    9. ' n' → logprob: -3.6168856620788574
    10. ' ' → logprob: -3.7418856620788574

Token 74: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.20744021236896515
    2. 'n' → logprob: -1.7074402570724487
    3. 's' → logprob: -6.332440376281738
    4. 'n't' → logprob: -6.582440376281738
    5. ' y' → logprob: -7.082440376281738
    6. 'f' → logprob: -7.082440376281738
    7. 'y' → logprob: -7.957440376281738
    8. 'est' → logprob: -8.457440376281738
    9. ' ny' → logprob: -8.707440376281738
    10. ' faut' → logprob: -8.832440376281738

Token 75: ''y' (ID: 27913)
  Prédit: ''y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''y' → logprob: -0.4889841079711914
    2. 'y' → logprob: -1.2389841079711914
    3. 'n' → logprob: -3.2389841079711914
    4. ''' → logprob: -3.6139841079711914
    5. ''ex' → logprob: -4.488984107971191
    6. 'a' → logprob: -5.113984107971191
    7. ' n' → logprob: -5.613984107971191
    8. ' y' → logprob: -5.738984107971191
    9. 'ex' → logprob: -6.113984107971191
    10. '‘y' → logprob: -6.613984107971191

Token 76: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1345226913690567
    2. ' a' → logprob: -2.1345226764678955
    3. ''a' → logprob: -5.009522914886475
    4. ''s' → logprob: -8.384522438049316
    5. ' pas' → logprob: -8.884522438049316
    6. ' ' → logprob: -9.259522438049316
    7. 'y' → logprob: -9.884522438049316
    8. ' avait' → logprob: -10.509522438049316
    9. ' n' → logprob: -10.634522438049316
    10. 's' → logprob: -10.697022438049316

Token 77: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.04937240853905678
    2. ' ' → logprob: -3.924372434616089
    3. ' aucun' → logprob: -4.54937219619751
    4. ' rien' → logprob: -4.92437219619751
    5. 'pas' → logprob: -5.04937219619751
    6. ' aucune' → logprob: -5.92437219619751
    7. ' plus' → logprob: -8.674372673034668
    8. '  ' → logprob: -8.799372673034668
    9. ' a' → logprob: -8.799372673034668
    10. 'auc' → logprob: -9.174372673034668

Token 78: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7153609991073608
    2. '   ' → logprob: -1.0903609991073608
    3. '    ' → logprob: -2.3403611183166504
    4. ' de' → logprob: -4.34036111831665
    5. '  ' → logprob: -4.71536111831665
    6. ')' → logprob: -4.71536111831665
    7. '    
' → logprob: -4.84036111831665
    8. '
' → logprob: -4.84036111831665
    9. '<|end|>' → logprob: -4.84036111831665
    10. ' )' → logprob: -5.59036111831665

Token 79: ' solution' (ID: 7578)
  Prédit: ' solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solution' → logprob: -0.20258766412734985
    2. 'solution' → logprob: -1.827587604522705
    3. 's' → logprob: -4.202587604522705
    4. ' solutions' → logprob: -5.702587604522705
    5. 'solutions' → logprob: -6.327587604522705
    6. ' ' → logprob: -6.577587604522705
    7. ' s' → logprob: -8.452588081359863
    8. '_solution' → logprob: -9.515088081359863
    9. ' solución' → logprob: -9.577588081359863
    10. ' possible' → logprob: -9.702588081359863

Token 80: ' pour' (ID: 1930)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10809782147407532
    2. '   ' → logprob: -2.858097791671753
    3. 'else' → logprob: -3.858097791671753
    4. '<|end|>' → logprob: -4.233098030090332
    5. '```' → logprob: -5.858098030090332
    6. '\n' → logprob: -5.858098030090332
    7. 'elif' → logprob: -6.358098030090332
    8. '    
' → logprob: -7.608098030090332
    9. ' else' → logprob: -7.983098030090332
    10. '<|end|>' → logprob: -8.483098030090332

Token 81: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.18736332654953003
    2. 'n' → logprob: -2.562363386154175
    3. ' ' → logprob: -2.687363386154175
    4. '2' → logprob: -3.937363386154175
    5. ' ce' → logprob: -5.437363147735596
    6. ' deux' → logprob: -7.812363147735596
    7. '   ' → logprob: -8.062363624572754
    8. '    ' → logprob: -8.687363624572754
    9. '  ' → logprob: -9.062363624572754
    10. ' le' → logprob: -9.062363624572754

Token 82: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006823000963777304
    2. '
' → logprob: -5.7568230628967285
    3. '```' → logprob: -6.3818230628967285
    4. '    
' → logprob: -7.2568230628967285
    5. '       ' → logprob: -8.50682258605957
    6. 'else' → logprob: -8.50682258605957
    7. '  ' → logprob: -9.25682258605957
    8. '    ' → logprob: -9.25682258605957
    9. ' else' → logprob: -9.50682258605957
    10. ' ' → logprob: -9.75682258605957

Token 83: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22542527318000793
    2. '2' → logprob: -1.6004252433776855
    3. ' ' → logprob: -12.225425720214844
    4. '  ' → logprob: -13.100425720214844
    5. ' n' → logprob: -13.475425720214844
    6. '```' → logprob: -13.850425720214844
    7. ' 
' → logprob: -14.162925720214844
    8. '1' → logprob: -14.850425720214844
    9. 'n' → logprob: -14.975425720214844
    10. '   ' → logprob: -15.225425720214844

Token 84: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008098635007627308
    2. ' ' → logprob: -7.125809669494629
    3. 'n' → logprob: -12.750809669494629
    4. '  ' → logprob: -14.750809669494629
    5. '```' → logprob: -15.000809669494629
    6. ' n' → logprob: -15.125809669494629
    7. '   ' → logprob: -15.313309669494629
    8. '1' → logprob: -15.438309669494629
    9. '3' → logprob: -15.875809669494629
    10. '"' → logprob: -16.313310623168945

Token 85: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.4691317677497864
    2. '
' → logprob: -1.2191317081451416
    3. 'elif' → logprob: -3.0941317081451416
    4. '   ' → logprob: -4.219131946563721
    5. '\n' → logprob: -5.219131946563721
    6. '<|end|>' → logprob: -5.344131946563721
    7. ' else' → logprob: -5.969131946563721
    8. '```' → logprob: -5.969131946563721
    9. '    
' → logprob: -6.594131946563721
    10. 'exit' → logprob: -8.094131469726562

Token 86: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.052400924265384674
    2. 'elif' → logprob: -3.677400827407837
    3. '   ' → logprob: -3.802400827407837
    4. '
' → logprob: -6.802401065826416
    5. 'exit' → logprob: -7.052401065826416
    6. ' else' → logprob: -7.302401065826416
    7. '```' → logprob: -8.177400588989258
    8. '	exit' → logprob: -9.302400588989258
    9. '\n' → logprob: -9.302400588989258
    10. '<|end|>' → logprob: -9.802400588989258

Token 87: ' exit' (ID: 10654)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' (adapté à ' exit') → logprob: -0.025414874777197838
    2. 'else' → logprob: -4.150414943695068
    3. ' exit' → logprob: -5.150414943695068
    4. '	exit' → logprob: -6.525414943695068
    5. '   ' → logprob: -6.650414943695068
    6. 'import' → logprob: -8.40041446685791
    7. 'elif' → logprob: -8.65041446685791
    8. '```' → logprob: -8.90041446685791
    9. 'quit' → logprob: -8.90041446685791
    10. '_exit' → logprob: -10.27541446685791

Token 88: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.955703818472102e-05
    2. '(' → logprob: -10.000059127807617
    3. '()
' → logprob: -11.625059127807617
    4. '()`' → logprob: -13.250059127807617
    5. ' ()' → logprob: -13.625059127807617
    6. '()

' → logprob: -14.625059127807617
    7. '`()' → logprob: -15.125059127807617
    8. '()\' → logprob: -15.250059127807617
    9. '()(' → logprob: -15.500059127807617
    10. '()<' → logprob: -15.750059127807617

Token 89: '    ' (ID: 257)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.863810658454895
    2. '
' → logprob: -0.988810658454895
    3. 'elif' → logprob: -2.6138105392456055
    4. '<|end|>' → logprob: -2.8638105392456055
    5. 'n' → logprob: -3.8638105392456055
    6. 'else' → logprob: -4.2388105392456055
    7. '  
' → logprob: -5.1138105392456055
    8. '

' → logprob: -5.3638105392456055
    9. ' 
' → logprob: -5.4888105392456055
    10. '```' → logprob: -5.4888105392456055

Token 90: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.046614646911621
    2. '#' (adapté à ' #') → logprob: -1.546614646911621
    3. 'else' → logprob: -1.921614646911621
    4. 'elif' → logprob: -1.921614646911621
    5. '<|end|>' → logprob: -2.796614646911621
    6. 'if' → logprob: -3.671614646911621
    7. '

' → logprob: -4.046614646911621
    8. 'n' → logprob: -4.171614646911621
    9. '\n' → logprob: -5.671614646911621
    10. '```' → logprob: -5.796614646911621

Token 91: ' Termine' (ID: 150192)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.21787366271018982
    2. ' exit' → logprob: -2.2178735733032227
    3. '```' → logprob: -3.5928735733032227
    4. '#' → logprob: -4.092873573303223
    5. 'quit' → logprob: -4.342873573303223
    6. 'import' → logprob: -5.467873573303223
    7. ' quit' → logprob: -5.842873573303223
    8. '<|end|>' → logprob: -5.967873573303223
    9. 'stop' → logprob: -6.092873573303223
    10. 'Quit' → logprob: -6.217873573303223

Token 92: ' immédiatement' (ID: 100743)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0010322150774300098
    2. '(' → logprob: -7.00103235244751
    3. 'le' → logprob: -10.126031875610352
    4. 'l' → logprob: -11.001031875610352
    5. ' le' → logprob: -11.001031875610352
    6. '()
' → logprob: -11.126031875610352
    7. '()

' → logprob: -11.376031875610352
    8. ')' → logprob: -12.001031875610352
    9. ' ()' → logprob: -12.251031875610352
    10. '(
' → logprob: -13.376031875610352

Token 93: ' le' (ID: 505)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0755520686507225
    2. 'le' → logprob: -2.825551986694336
    3. ' le' → logprob: -5.200551986694336
    4. '(' → logprob: -5.450551986694336
    5. 'l' → logprob: -6.325551986694336
    6. '()

' → logprob: -7.200551986694336
    7. '()
' → logprob: -8.075551986694336
    8. '```' → logprob: -8.950551986694336
    9. '#' → logprob: -9.200551986694336
    10. '(program' → logprob: -9.325551986694336

Token 94: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.010436915792524815
    2. ' programme' → logprob: -4.88543701171875
    3. 'program' → logprob: -5.88543701171875
    4. 'programm' → logprob: -11.38543701171875
    5. 'prog' → logprob: -11.76043701171875
    6. 'pro' → logprob: -11.76043701171875
    7. 'programma' → logprob: -12.01043701171875
    8. 'script' → logprob: -12.51043701171875
    9. '```' → logprob: -12.63543701171875
    10. 'Programme' → logprob: -12.88543701171875

Token 95: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2524126470088959
    2. '#' → logprob: -2.6274125576019287
    3. 'elif' → logprob: -3.0024125576019287
    4. '  
' → logprob: -3.6274125576019287
    5. '<|end|>' → logprob: -3.8774125576019287
    6. ' 
' → logprob: -4.002412796020508
    7. 'if' → logprob: -4.627412796020508
    8. '

' → logprob: -4.877412796020508
    9. 'else' → logprob: -5.627412796020508
    10. '```' → logprob: -5.752412796020508

Token 96: '#' (ID: 2)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.7715041637420654
    2. '#' → logprob: -1.1465041637420654
    3. 'else' → logprob: -2.3965041637420654
    4. 'for' → logprob: -2.7715041637420654
    5. 'if' → logprob: -3.2715041637420654
    6. 'n' → logprob: -4.6465044021606445
    7. '```' → logprob: -5.0215044021606445
    8. 'i' → logprob: -5.6465044021606445
    9. 's' → logprob: -6.0215044021606445
    10. '
' → logprob: -7.1465044021606445

Token 97: ' Si' (ID: 7832)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5103079676628113
    2. 'elif' → logprob: -1.510308027267456
    3. 'if' → logprob: -2.885308027267456
    4. '#' → logprob: -2.885308027267456
    5. 'else' → logprob: -3.510308027267456
    6. ' for' → logprob: -4.010307788848877
    7. 'i' → logprob: -5.010307788848877
    8. ' elif' → logprob: -5.635307788848877
    9. 'from' → logprob: -6.260307788848877
    10. 'import' → logprob: -6.385307788848877

Token 98: ' l' (ID: 305)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.008791246451437473
    2. 'n' → logprob: -4.758791446685791
    3. ' ' → logprob: -8.758790969848633
    4. ' ' → logprob: -11.508790969848633
    5. '	n' → logprob: -12.758790969848633
    6. '  ' → logprob: -13.508790969848633
    7. '```' → logprob: -14.008790969848633
    8. '   ' → logprob: -14.758790969848633
    9. ' __' → logprob: -15.008790969848633
    10. ' not' → logprob: -15.008790969848633

Token 99: ''utilisateur' (ID: 140803)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.05900987610220909
    2. 'n' → logprob: -3.9340097904205322
    3. ' ==' → logprob: -3.9340097904205322
    4. ' ' → logprob: -5.059010028839111
    5. ' elif' → logprob: -5.309010028839111
    6. '=' → logprob: -6.434010028839111
    7. 'e' → logprob: -6.559010028839111
    8. ' =' → logprob: -7.184010028839111
    9. 'elif' → logprob: -7.434010028839111
    10. ' <' → logprob: -7.684010028839111

Token 100: ' entre' (ID: 3853)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7842716574668884
    2. ' n' → logprob: -1.2842717170715332
    3. '==' → logprob: -3.034271717071533
    4. ' >' → logprob: -3.284271717071533
    5. ' est' → logprob: -3.409271717071533
    6. 'n' → logprob: -3.409271717071533
    7. ' ' → logprob: -3.659271717071533
    8. 's' → logprob: -4.034271717071533
    9. ' !=' → logprob: -4.034271717071533
    10. '>' → logprob: -4.409271717071533

Token 101: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13637198507785797
    2. '1' → logprob: -2.7613720893859863
    3. ' n' → logprob: -2.8863720893859863
    4. 'n' → logprob: -4.886372089385986
    5. '3' → logprob: -8.011371612548828
    6. ' un' → logprob: -8.386371612548828
    7. '0' → logprob: -8.886371612548828
    8. ' une' → logprob: -9.761371612548828
    9. '4' → logprob: -10.636371612548828
    10. '  ' → logprob: -10.886371612548828

Token 102: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.038451552391052246
    2. ' ' → logprob: -3.663451671600342
    3. '3' → logprob: -4.663451671600342
    4. '0' → logprob: -6.413451671600342
    5. 'n' → logprob: -7.288451671600342
    6. '4' → logprob: -8.413451194763184
    7. ' n' → logprob: -10.788451194763184
    8. 'un' → logprob: -11.288451194763184
    9. '2' → logprob: -11.663451194763184
    10. 'une' → logprob: -12.038451194763184

Token 103: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0068469117395579815
    2. ' :' → logprob: -5.006846904754639
    3. ':
' → logprob: -9.506847381591797
    4. ',' → logprob: -10.381847381591797
    5. ' :
' → logprob: -11.381847381591797
    6. ' or' → logprob: -11.756847381591797
    7. ' ,' → logprob: -13.506847381591797
    8. ' and' → logprob: -13.631847381591797
    9. ' ==' → logprob: -14.381847381591797
    10. '):' → logprob: -14.381847381591797

Token 104: ' on' (ID: 402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0618516206741333
    2. '   ' → logprob: -1.3118516206741333
    3. ' print' → logprob: -1.6868516206741333
    4. 'print' → logprob: -2.3118515014648438
    5. ' :' → logprob: -3.6868515014648438
    6. ' n' → logprob: -3.6868515014648438
    7. ' on' → logprob: -3.9368515014648438
    8. 'n' → logprob: -4.186851501464844
    9. '    ' → logprob: -5.686851501464844
    10. ',' → logprob: -6.061851501464844

Token 105: ' affiche' (ID: 127479)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.17553181946277618
    2. ':' → logprob: -2.1755318641662598
    3. 'print' → logprob: -4.42553186416626
    4. ' continue' → logprob: -4.55053186416626
    5. ' else' → logprob: -5.30053186416626
    6. ' :' → logprob: -5.30053186416626
    7. ' ' → logprob: -5.67553186416626
    8. ' elif' → logprob: -6.55053186416626
    9. ' n' → logprob: -6.80053186416626
    10. ' =' → logprob: -6.80053186416626

Token 106: ' un' (ID: 537)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05076164752244949
    2. ' ' → logprob: -3.5507616996765137
    3. '3' → logprob: -4.175761699676514
    4. '(n' → logprob: -6.425761699676514
    5. '1' → logprob: -7.300761699676514
    6. 'n' → logprob: -7.675761699676514
    7. '2' → logprob: -7.675761699676514
    8. ' (' → logprob: -7.800761699676514
    9. '0' → logprob: -8.300761222839355
    10. '(
' → logprob: -8.425761222839355

Token 107: ' motif' (ID: 72753)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -1.7174925804138184
    2. '3' → logprob: -1.7174925804138184
    3. ' ' → logprob: -1.8424925804138184
    4. '1' → logprob: -1.9674925804138184
    5. '0' → logprob: -2.4674925804138184
    6. '(' → logprob: -2.5924925804138184
    7. '-' → logprob: -3.4674925804138184
    8. ':' → logprob: -4.342492580413818
    9. ' espace' → logprob: -4.592492580413818
    10. '4' → logprob: -4.967492580413818

Token 108: ' spécifique' (ID: 113170)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9064468741416931
    2. ' ' → logprob: -1.281446933746338
    3. ':' → logprob: -1.781446933746338
    4. '(
' → logprob: -3.281446933746338
    5. '()' → logprob: -3.531446933746338
    6. ' :' → logprob: -4.031446933746338
    7. '```' → logprob: -4.656446933746338
    8. '('' → logprob: -4.906446933746338
    9. '("' → logprob: -5.156446933746338
    10. '*' → logprob: -5.156446933746338

Token 109: ' et' (ID: 859)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018541565164923668
    2. ' :' → logprob: -4.14354133605957
    3. ':
' → logprob: -6.89354133605957
    4. ' :
' → logprob: -7.39354133605957
    5. '
' → logprob: -7.76854133605957
    6. '```' → logprob: -9.01854133605957
    7. '\n' → logprob: -9.14354133605957
    8. '\' → logprob: -10.51854133605957
    9. ' ' → logprob: -10.51854133605957
    10. ',' → logprob: -10.51854133605957

Token 110: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7613677978515625
    2. ' n' → logprob: -1.7613677978515625
    3. ' exit' → logprob: -2.2613677978515625
    4. ' continue' → logprob: -3.1363677978515625
    5. 'exit' → logprob: -3.2613677978515625
    6. ' quit' → logprob: -3.6363677978515625
    7. ' print' → logprob: -3.8863677978515625
    8. ' quitte' → logprob: -4.1363677978515625
    9. 'n' → logprob: -4.3863677978515625
    10. '```' → logprob: -4.6363677978515625

Token 111: ' arr' (ID: 1724)
  Prédit: ' exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exit' → logprob: -0.5941582918167114
    2. 'exit' → logprob: -1.7191582918167114
    3. 'arr' → logprob: -2.719158172607422
    4. ' continue' → logprob: -2.719158172607422
    5. ' arr' → logprob: -3.094158172607422
    6. ' stop' → logprob: -3.344158172607422
    7. ' quit' → logprob: -4.094158172607422
    8. ' quitte' → logprob: -5.094158172607422
    9. 'continue' → logprob: -5.219158172607422
    10. ' print' → logprob: -5.219158172607422

Token 112: 'ête' (ID: 16808)
  Prédit: 'êt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êt' → logprob: -0.7820380926132202
    2. 'ête' → logprob: -1.1570380926132202
    3. 'ive' → logprob: -2.0320382118225098
    4. 'ange' → logprob: -3.0320382118225098
    5. 'êter' → logprob: -3.4070382118225098
    6. 'ivée' → logprob: -5.65703821182251
    7. 'ay' → logprob: -6.03203821182251
    8. 'et' → logprob: -6.15703821182251
    9. 'ê' → logprob: -6.15703821182251
    10. 'êts' → logprob: -7.03203821182251

Token 113: ' le' (ID: 505)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.010538602247834206
    2. '(' → logprob: -4.635538578033447
    3. ':' → logprob: -8.135539054870605
    4. '   ' → logprob: -8.760539054870605
    5. 'print' → logprob: -10.385539054870605
    6. '("")' → logprob: -10.385539054870605
    7. '  ' → logprob: -10.510539054870605
    8. ' ()' → logprob: -10.885539054870605
    9. '("""' → logprob: -10.885539054870605
    10. '():' → logprob: -10.885539054870605

Token 114: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.5389095544815063
    2. ' programme' → logprob: -0.9139095544815063
    3. 'program' → logprob: -4.288909435272217
    4. ' program' → logprob: -6.413909435272217
    5. 'programma' → logprob: -9.663909912109375
    6. '```' → logprob: -10.038909912109375
    7. ' progr' → logprob: -10.538909912109375
    8. ' programma' → logprob: -10.788909912109375
    9. ' code' → logprob: -10.788909912109375
    10. 'programm' → logprob: -10.913909912109375

Token 115: ' 
' (ID: 793)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08442981541156769
    2. '   ' → logprob: -3.5844297409057617
    3. '```' → logprob: -4.084429740905762
    4. '
' → logprob: -4.459429740905762
    5. 'print' → logprob: -5.584429740905762
    6. '\n' → logprob: -5.709429740905762
    7. ' :' → logprob: -6.084429740905762
    8. ':
' → logprob: -6.084429740905762
    9. '  ' → logprob: -6.209429740905762
    10. 'n' → logprob: -6.459429740905762

Token 116: 'if' (ID: 366)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03148367255926132
    2. 'if' → logprob: -4.1564836502075195
    3. ':
' → logprob: -4.4064836502075195
    4. ' :' → logprob: -7.2814836502075195
    5. '   ' → logprob: -7.5314836502075195
    6. ' :
' → logprob: -8.03148365020752
    7. '```' → logprob: -8.03148365020752
    8. '
' → logprob: -8.15648365020752
    9. 'elif' → logprob: -8.15648365020752
    10. 'print' → logprob: -8.28148365020752

Token 117: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.00017684244085103273
    2. 'n' → logprob: -8.750176429748535
    3. ' ' → logprob: -11.500176429748535
    4. ' ' → logprob: -11.750176429748535
    5. '	n' → logprob: -15.875176429748535
    6. '<|end|>' → logprob: -16.50017738342285
    7. ' (' → logprob: -17.12517738342285
    8. ' ' → logprob: -17.37517738342285
    9. '```' → logprob: -17.62517738342285
    10. ' н' → logprob: -18.06267738342285

Token 118: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.002280861372128129
    2. '==' → logprob: -6.2522807121276855
    3. ' ' → logprob: -8.002281188964844
    4. ' <=' → logprob: -11.877281188964844
    5. ' =' → logprob: -12.252281188964844
    6. ' <' → logprob: -13.627281188964844
    7. ' ' → logprob: -13.627281188964844
    8. '=' → logprob: -14.627281188964844
    9. '```' → logprob: -14.627281188964844
    10. ' #' → logprob: -14.877281188964844

Token 119: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01816398836672306
    2. '3' → logprob: -4.018164157867432
    3. ' ' → logprob: -12.018163681030273
    4. '1' → logprob: -12.393163681030273
    5. '  ' → logprob: -13.768163681030273
    6. '0' → logprob: -14.455663681030273
    7. '<|end|>' → logprob: -14.643163681030273
    8. '2' → logprob: -15.205663681030273
    9. ' 
' → logprob: -15.455663681030273
    10. '```' → logprob: -15.580663681030273

Token 120: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0013290488859638572
    2. ' ' → logprob: -6.626328945159912
    3. '```' → logprob: -13.12632942199707
    4. '1' → logprob: -15.62632942199707
    5. '   ' → logprob: -15.81382942199707
    6. '`' → logprob: -15.81382942199707
    7. ' ' → logprob: -16.50132942199707
    8. '  ' → logprob: -16.81382942199707
    9. '2' → logprob: -16.81382942199707
    10. '"' → logprob: -17.12632942199707

Token 121: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00019662656995933503
    2. ':
' → logprob: -8.62519645690918
    3. ' :' → logprob: -11.12519645690918
    4. '):' → logprob: -13.37519645690918
    5. ':**' → logprob: -15.00019645690918
    6. ' :
' → logprob: -16.00019645690918
    7. ':

' → logprob: -16.12519645690918
    8. ':
' → logprob: -17.00019645690918
    9. '):
' → logprob: -17.00019645690918
    10. '   ' → logprob: -17.87519645690918

Token 122: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013882211409509182
    2. '   ' → logprob: -4.388882160186768
    3. ':
' → logprob: -6.888882160186768
    4. '
' → logprob: -9.638882637023926
    5. ' :' → logprob: -9.638882637023926
    6. '<|end|>' → logprob: -9.638882637023926
    7. '):' → logprob: -9.763882637023926
    8. '    ' → logprob: -11.138882637023926
    9. ')' → logprob: -11.263882637023926
    10. '<|end|>' → logprob: -11.763882637023926

Token 123: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.0905454009771347
    2. 'print' (adapté à ' print') → logprob: -2.465545415878296
    3. ' for' → logprob: -6.965545177459717
    4. 'for' → logprob: -8.215545654296875
    5. '   ' → logprob: -8.340545654296875
    6. '    ' → logprob: -9.465545654296875
    7. 'pr' → logprob: -11.090545654296875
    8. '```' → logprob: -11.340545654296875
    9. ' ' → logprob: -11.590545654296875
    10. '	print' → logprob: -11.965545654296875

Token 124: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.6844589710235596
    2. '(' → logprob: -0.8094589710235596
    3. '('' → logprob: -3.6844589710235596
    4. '("*' → logprob: -4.6844587326049805
    5. '("""' → logprob: -4.9344587326049805
    6. '(
' → logprob: -5.5594587326049805
    7. '("***' → logprob: -6.1844587326049805
    8. '('*' → logprob: -7.6844587326049805
    9. '([' → logprob: -7.8094587326049805
    10. '("""
' → logprob: -7.9344587326049805

Token 125: 'abb' (ID: 13538)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9736713171005249
    2. '*' → logprob: -1.348671317100525
    3. '-' → logprob: -2.2236714363098145
    4. '**' → logprob: -2.9736714363098145
    5. '2' → logprob: -3.3486714363098145
    6. '***' → logprob: -3.7236714363098145
    7. '.*' → logprob: -4.3486714363098145
    8. 'x' → logprob: -4.7236714363098145
    9. '3' → logprob: -4.8486714363098145
    10. '0' → logprob: -4.9736714363098145

Token 126: '")' (ID: 1405)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5268980860710144
    2. '")' → logprob: -0.9018980860710144
    3. 'b' → logprob: -6.52689790725708
    4. 'ccc' → logprob: -6.90189790725708
    5. 'c' → logprob: -7.77689790725708
    6. '"' → logprob: -8.401898384094238
    7. '")
' → logprob: -8.651898384094238
    8. 'cc' → logprob: -9.276898384094238
    9. 'ba' → logprob: -9.651898384094238
    10. 'acc' → logprob: -10.026898384094238

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003839597338810563
    2. 'exit' → logprob: -8.750384330749512
    3. '	exit' → logprob: -9.125384330749512
    4. ' exit' → logprob: -10.125384330749512
    5. '<|end|>' → logprob: -10.375384330749512
    6. '```' → logprob: -11.375384330749512
    7. '
' → logprob: -11.500384330749512
    8. '    
' → logprob: -12.125384330749512
    9. ')' → logprob: -12.875384330749512
    10. '    ' → logprob: -13.000384330749512

Token 128: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004982201382517815
    2. 'exit' → logprob: -5.504981994628906
    3. ' exit' → logprob: -7.629981994628906
    4. '	exit' → logprob: -8.504981994628906
    5. '<|end|>' → logprob: -9.754981994628906
    6. '  ' → logprob: -10.129981994628906
    7. '    ' → logprob: -10.629981994628906
    8. '
' → logprob: -10.754981994628906
    9. '    
' → logprob: -11.129981994628906
    10. ' ' → logprob: -11.254981994628906

Token 129: ' Aff' (ID: 13741)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.01110806129872799
    2. ' exit' → logprob: -4.511107921600342
    3. '   ' → logprob: -9.7611083984375
    4. '	exit' → logprob: -13.1361083984375
    5. ' ' → logprob: -15.2611083984375
    6. '.exit' → logprob: -16.0111083984375
    7. '  ' → logprob: -16.1361083984375
    8. '(exit' → logprob: -16.1361083984375
    9. '    ' → logprob: -17.2611083984375
    10. '_exit' → logprob: -18.2611083984375

Token 130: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.0008141548605635762
    2. 'ichage' → logprob: -8.125814437866211
    3. 'icher' → logprob: -8.875814437866211
    4. 'ich' → logprob: -9.000814437866211
    5. 'ic' → logprob: -9.375814437866211
    6. 'l' → logprob: -9.625814437866211
    7. 'print' → logprob: -10.750814437866211
    8. 'f' → logprob: -11.250814437866211
    9. 'ixe' → logprob: -11.375814437866211
    10. 'iches' → logprob: -11.500814437866211

Token 131: ' la' (ID: 557)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.5036113858222961
    2. '"' → logprob: -1.3786113262176514
    3. '(' → logprob: -2.7536113262176514
    4. 'abb' → logprob: -3.0036113262176514
    5. ' abb' → logprob: -4.5036115646362305
    6. 'abc' → logprob: -5.1286115646362305
    7. ' "' → logprob: -5.5036115646362305
    8. '('' → logprob: -6.0036115646362305
    9. '")' → logprob: -6.8786115646362305
    10. ')' → logprob: -7.2536115646362305

Token 132: ' première' (ID: 23423)
  Prédit: 'mot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mot' → logprob: -0.6586494445800781
    2. ' chaîne' → logprob: -1.4086494445800781
    3. 'solution' → logprob: -3.033649444580078
    4. ' solution' → logprob: -3.283649444580078
    5. ' motif' → logprob: -3.533649444580078
    6. 'chaine' → logprob: -3.908649444580078
    7. 'prem' → logprob: -4.033649444580078
    8. 'abb' → logprob: -4.408649444580078
    9. 'string' → logprob: -4.533649444580078
    10. ' chaine' → logprob: -5.158649444580078

Token 133: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -1.2655202150344849
    2. ' line' → logprob: -1.7655202150344849
    3. ' ' → logprob: -2.1405200958251953
    4. 'ligne' → logprob: -3.2655200958251953
    5. 'line' → logprob: -3.5155200958251953
    6. 'a' → logprob: -3.5155200958251953
    7. 'abc' → logprob: -3.8905200958251953
    8. ' possible' → logprob: -4.140520095825195
    9. ' a' → logprob: -4.140520095825195
    10. ' pattern' → logprob: -4.140520095825195

Token 134: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05245782062411308
    2. '
' → logprob: -3.802457809448242
    3. '<|end|>' → logprob: -3.927457809448242
    4. '\n' → logprob: -5.677457809448242
    5. 'print' → logprob: -6.677457809448242
    6. '    ' → logprob: -7.302457809448242
    7. '  
' → logprob: -7.427457809448242
    8. '  ' → logprob: -7.677457809448242
    9. '    
' → logprob: -7.677457809448242
    10. ' ' → logprob: -7.802457809448242

Token 135: ' motif' (ID: 72753)
  Prédit: ' motif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' motif' → logprob: -0.1348167210817337
    2. 'mot' → logprob: -2.1348166465759277
    3. 'pattern' → logprob: -6.134816646575928
    4. ' pattern' → logprob: -6.509816646575928
    5. ' code' → logprob: -6.759816646575928
    6. 'pat' → logprob: -7.134816646575928
    7. 'code' → logprob: -8.259817123413086
    8. 'm' → logprob: -8.384817123413086
    9. '
' → logprob: -8.697317123413086
    10. ' triangle' → logprob: -8.697317123413086

Token 136: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03664146363735199
    2. '<|end|>' → logprob: -3.9116413593292236
    3. '
' → logprob: -5.286641597747803
    4. ')' → logprob: -5.661641597747803
    5. '    ' → logprob: -6.411641597747803
    6. 'exit' → logprob: -6.786641597747803
    7. '<|end|>' → logprob: -7.161641597747803
    8. '\n' → logprob: -7.286641597747803
    9. '  ' → logprob: -7.411641597747803
    10. '```' → logprob: -7.411641597747803

Token 137: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.14703939855098724
    2. 'n' → logprob: -2.0220394134521484
    3. ' ' → logprob: -6.147039413452148
    4. '3' → logprob: -6.522039413452148
    5. ' le' → logprob: -8.647039413452148
    6. ' un' → logprob: -8.647039413452148
    7. ' la' → logprob: -9.397039413452148
    8. 'le' → logprob: -10.022039413452148
    9. ' "' → logprob: -10.022039413452148
    10. ' les' → logprob: -10.272039413452148

Token 138: ' =' (ID: 314)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.724692165851593
    2. ' ' → logprob: -1.3496921062469482
    3. ')' → logprob: -2.3496921062469482
    4. '<|end|>' → logprob: -2.9746921062469482
    5. '  ' → logprob: -3.2246921062469482
    6. '==' → logprob: -3.3496921062469482
    7. ' )' → logprob: -4.724692344665527
    8. ' =' → logprob: -5.099692344665527
    9. '=' → logprob: -5.724692344665527
    10. ' >=' → logprob: -6.224692344665527

Token 139: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2254289984703064
    2. '3' → logprob: -1.6004290580749512
    3. ' ' → logprob: -12.350428581237793
    4. ' n' → logprob: -12.850428581237793
    5. '"' → logprob: -12.975428581237793
    6. 'n' → logprob: -13.600428581237793
    7. '1' → logprob: -14.225428581237793
    8. '```' → logprob: -14.537928581237793
    9. ' trois' → logprob: -14.600428581237793
    10. '  ' → logprob: -14.725428581237793

Token 140: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0006272526225075126
    2. ' ' → logprob: -7.375627040863037
    3. '```' → logprob: -15.875627517700195
    4. '   ' → logprob: -16.000627517700195
    5. ' ' → logprob: -16.250627517700195
    6. '  ' → logprob: -16.813127517700195
    7. '۳' → logprob: -16.938127517700195
    8. '1' → logprob: -17.875627517700195
    9. '３' → logprob: -17.938127517700195
    10. ')' → logprob: -18.000627517700195

Token 141: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005347601603716612
    2. 'exit' → logprob: -5.755347728729248
    3. ' exit' → logprob: -7.630347728729248
    4. '<|end|>' → logprob: -7.880347728729248
    5. '
' → logprob: -8.38034725189209
    6. '    
' → logprob: -8.50534725189209
    7. '    ' → logprob: -8.63034725189209
    8. '	exit' → logprob: -8.63034725189209
    9. ')' → logprob: -8.63034725189209
    10. '  ' → logprob: -8.75534725189209

Token 142: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008669180097058415
    2. 'exit' → logprob: -7.625866889953613
    3. '<|end|>' → logprob: -9.125866889953613
    4. ' exit' → logprob: -9.500866889953613
    5. '    
' → logprob: -9.875866889953613
    6. '	exit' → logprob: -10.125866889953613
    7. ')' → logprob: -10.375866889953613
    8. '    ' → logprob: -10.750866889953613
    9. '<|end|>' → logprob: -11.500866889953613
    10. '```' → logprob: -11.750866889953613

Token 143: ' print' (ID: 2123)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.0065733809024095535
    2. '   ' → logprob: -5.13157320022583
    3. ' exit' → logprob: -7.38157320022583
    4. '	exit' → logprob: -11.256573677062988
    5. 'print' (adapté à ' print') → logprob: -12.256573677062988
    6. ' ' → logprob: -13.381573677062988
    7. '  ' → logprob: -13.381573677062988
    8. '    ' → logprob: -15.506573677062988
    9. '.exit' → logprob: -15.631573677062988
    10. 'quit' → logprob: -15.881573677062988

Token 144: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0018033420201390982
    2. '(' → logprob: -6.376803398132324
    3. '()' → logprob: -9.751803398132324
    4. '("")' → logprob: -11.001803398132324
    5. '("_' → logprob: -11.751803398132324
    6. '('' → logprob: -13.126803398132324
    7. '("-' → logprob: -13.251803398132324
    8. '("\"' → logprob: -13.251803398132324
    9. '("""' → logprob: -13.251803398132324
    10. '("'' → logprob: -13.376803398132324

Token 145: 'a' (ID: 64)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.220990538597107
    2. 'baa' → logprob: -1.720990538597107
    3. 'bab' → logprob: -1.720990538597107
    4. 'bcc' → logprob: -2.2209906578063965
    5. 'a' → logprob: -3.2209906578063965
    6. 'bbc' → logprob: -3.2209906578063965
    7. 'aba' → logprob: -3.4709906578063965
    8. 'bbb' → logprob: -3.4709906578063965
    9. '"' → logprob: -3.7209906578063965
    10. 'acc' → logprob: -4.3459906578063965

Token 146: '.c' (ID: 1081)
  Prédit: 'bb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bb' → logprob: -0.31031692028045654
    2. 'ab' → logprob: -2.310317039489746
    3. 'aa' → logprob: -2.810317039489746
    4. 'cc' → logprob: -2.935317039489746
    5. 'bc' → logprob: -3.435317039489746
    6. 'ba' → logprob: -4.810317039489746
    7. 'a' → logprob: -5.685317039489746
    8. 'ac' → logprob: -5.685317039489746
    9. 'b' → logprob: -6.185317039489746
    10. 'ca' → logprob: -6.810317039489746

Token 147: '")' (ID: 1405)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2920732796192169
    2. 'cc' → logprob: -2.6670732498168945
    3. 'a' → logprob: -2.7920732498168945
    4. 'b' → logprob: -3.0420732498168945
    5. 'bb' → logprob: -3.6670732498168945
    6. '")' → logprob: -3.7920732498168945
    7. 'ab' → logprob: -4.2920732498168945
    8. 'bc' → logprob: -5.2920732498168945
    9. 'aa' → logprob: -5.5420732498168945
    10. 'ac' → logprob: -6.7920732498168945

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026182280853390694
    2. '<|end|>' → logprob: -6.502618312835693
    3. '    ' → logprob: -7.752618312835693
    4. ')' → logprob: -8.377617835998535
    5. '  ' → logprob: -8.877617835998535
    6. ' ' → logprob: -9.377617835998535
    7. 'exit' → logprob: -9.877617835998535
    8. '```' → logprob: -10.502617835998535
    9. '
' → logprob: -10.627617835998535
    10. '    
' → logprob: -10.752617835998535

Token 149: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020416523329913616
    2. 'exit' → logprob: -7.127041816711426
    3. ')' → logprob: -7.502041816711426
    4. ' exit' → logprob: -8.627041816711426
    5. '<|end|>' → logprob: -8.877041816711426
    6. '    ' → logprob: -9.252041816711426
    7. '	exit' → logprob: -9.377041816711426
    8. '  ' → logprob: -10.002041816711426
    9. '()' → logprob: -10.377041816711426
    10. '```' → logprob: -10.627041816711426

Token 150: ' Aff' (ID: 13741)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9064805507659912
    2. ' exit' → logprob: -1.2814805507659912
    3. 'exit' → logprob: -1.4064805507659912
    4. ' print' → logprob: -3.156480550765991
    5. 'print' → logprob: -4.03148078918457
    6. '    ' → logprob: -5.53148078918457
    7. '  ' → logprob: -5.90648078918457
    8. ' ' → logprob: -5.90648078918457
    9. '	exit' → logprob: -7.15648078918457
    10. '.exit' → logprob: -7.53148078918457

Token 151: 'iche' (ID: 7509)
  Prédit: 'aise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aise' → logprob: -0.2690388560295105
    2. 'iche' → logprob: -2.7690389156341553
    3. 'raise' → logprob: -2.7690389156341553
    4. 'print' → logprob: -3.5190389156341553
    5. '   ' → logprob: -3.6440389156341553
    6. 'ixe' → logprob: -4.769038677215576
    7. '<|end|>' → logprob: -5.394038677215576
    8. 'ichage' → logprob: -5.394038677215576
    9. 'ase' → logprob: -5.519038677215576
    10. '#' → logprob: -5.519038677215576

Token 152: ' la' (ID: 557)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.07821325212717056
    2. '("."' → logprob: -3.4532132148742676
    3. '(".' → logprob: -4.578213214874268
    4. '"' → logprob: -4.703213214874268
    5. '(' → logprob: -4.703213214874268
    6. '("")' → logprob: -5.828213214874268
    7. 'a' → logprob: -6.078213214874268
    8. 'n' → logprob: -6.203213214874268
    9. '.' → logprob: -6.578213214874268
    10. ')' → logprob: -7.203213214874268

Token 153: ' deuxième' (ID: 51664)
  Prédit: ' deuxième'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deuxième' → logprob: -0.7133853435516357
    2. 'de' → logprob: -1.0883853435516357
    3. ' seconde' → logprob: -2.4633853435516357
    4. 'a' → logprob: -3.7133853435516357
    5. 'se' → logprob: -4.588385581970215
    6. ' a' → logprob: -4.963385581970215
    7. ' suivante' → logprob: -5.338385581970215
    8. ' deux' → logprob: -5.588385581970215
    9. ' ' → logprob: -5.588385581970215
    10. 'ab' → logprob: -5.838385581970215

Token 154: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -1.0218956470489502
    2. 'line' → logprob: -1.2718956470489502
    3. ' line' → logprob: -1.7718956470489502
    4. ')' → logprob: -2.77189564704895
    5. 'ligne' → logprob: -2.77189564704895
    6. '")' → logprob: -3.77189564704895
    7. '<|end|>' → logprob: -4.271895408630371
    8. ' ' → logprob: -5.146895408630371
    9. '()' → logprob: -5.271895408630371
    10. 'l' → logprob: -5.771895408630371

Token 155: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00326410005800426
    2. ')' → logprob: -6.6282639503479
    3. '()' → logprob: -7.0032639503479
    4. '<|end|>' → logprob: -7.7532639503479
    5. '(' → logprob: -9.003264427185059
    6. 'exit' → logprob: -9.003264427185059
    7. '(exit' → logprob: -9.128264427185059
    8. '  ' → logprob: -9.378264427185059
    9. '    ' → logprob: -9.753264427185059
    10. '#' → logprob: -11.378264427185059

Token 156: ' motif' (ID: 72753)
  Prédit: 'mot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mot' → logprob: -0.2839324474334717
    2. ' motif' → logprob: -1.4089324474334717
    3. 'm' → logprob: -6.783932685852051
    4. 'pattern' → logprob: -7.658932685852051
    5. 'pat' → logprob: -7.908932685852051
    6. ' mot' → logprob: -8.03393268585205
    7. ' pattern' → logprob: -9.03393268585205
    8. 'mo' → logprob: -9.53393268585205
    9. ' ' → logprob: -9.65893268585205
    10. 'motiv' → logprob: -10.40893268585205

Token 157: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00017910730093717575
    2. 'exit' → logprob: -9.000179290771484
    3. '<|end|>' → logprob: -11.125179290771484
    4. ' exit' → logprob: -11.250179290771484
    5. '	exit' → logprob: -11.875179290771484
    6. ')' → logprob: -12.125179290771484
    7. '```' → logprob: -12.375179290771484
    8. '    ' → logprob: -13.375179290771484
    9. 'import' → logprob: -13.500179290771484
    10. '
' → logprob: -13.625179290771484

Token 158: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3093000650405884
    2. ' n' → logprob: -1.6843000650405884
    3. '3' → logprob: -3.684299945831299
    4. 'a' → logprob: -3.809299945831299
    5. ' ' → logprob: -4.309299945831299
    6. '"' → logprob: -5.684299945831299
    7. '")' → logprob: -5.684299945831299
    8. 'l' → logprob: -6.059299945831299
    9. ' la' → logprob: -6.559299945831299
    10. ' l' → logprob: -6.684299945831299

Token 159: ' =' (ID: 314)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5367079377174377
    2. ' =' → logprob: -1.036707878112793
    3. '=' → logprob: -3.036707878112793
    4. '==' → logprob: -4.536707878112793
    5. ' ' → logprob: -6.286707878112793
    6. '  ' → logprob: -10.286707878112793
    7. ')' → logprob: -10.786707878112793
    8. ' =)' → logprob: -10.786707878112793
    9. '   ' → logprob: -10.911707878112793
    10. ' ===' → logprob: -11.786707878112793

Token 160: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.005933066830039024
    2. ' ' → logprob: -5.1309332847595215
    3. '2' → logprob: -13.880932807922363
    4. '  ' → logprob: -14.005932807922363
    5. '```' → logprob: -14.005932807922363
    6. '1' → logprob: -14.380932807922363
    7. '   ' → logprob: -15.005932807922363
    8. '4' → logprob: -16.56843376159668
    9. '...' → logprob: -16.63093376159668
    10. ' ' → logprob: -16.69343376159668

Token 161: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.786196975852363e-05
    2. ' ' → logprob: -10.250038146972656
    3. '```' → logprob: -14.125038146972656
    4. '1' → logprob: -14.750038146972656
    5. '2' → logprob: -15.000038146972656
    6. '4' → logprob: -15.250038146972656
    7. '  ' → logprob: -16.000038146972656
    8. '   ' → logprob: -16.125038146972656
    9. '...' → logprob: -16.500038146972656
    10. '`' → logprob: -17.125038146972656

Token 162: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001294030516874045
    2. 'exit' → logprob: -9.125129699707031
    3. '```' → logprob: -12.000129699707031
    4. ' exit' → logprob: -12.250129699707031
    5. '	exit' → logprob: -13.000129699707031
    6. ')' → logprob: -13.250129699707031
    7. 'import' → logprob: -13.500129699707031
    8. '
' → logprob: -13.875129699707031
    9. '<|end|>' → logprob: -14.500129699707031
    10. '(exit' → logprob: -14.750129699707031

Token 163: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001835141738411039
    2. 'exit' → logprob: -8.62518310546875
    3. ' exit' → logprob: -13.62518310546875
    4. '```' → logprob: -13.75018310546875
    5. '	exit' → logprob: -14.37518310546875
    6. 'import' → logprob: -14.62518310546875
    7. '  ' → logprob: -16.00018310546875
    8. '    ' → logprob: -16.25018310546875
    9. '   ' → logprob: -16.25018310546875
    10. '(exit' → logprob: -16.50018310546875

Token 164: ' print' (ID: 2123)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.34886884689331055
    2. '   ' → logprob: -1.2238688468933105
    3. 'print' (adapté à ' print') → logprob: -8.473869323730469
    4. ' exit' → logprob: -8.973869323730469
    5. '	exit' → logprob: -9.723869323730469
    6. 'return' → logprob: -11.973869323730469
    7. '.exit' → logprob: -12.723869323730469
    8. '  ' → logprob: -12.723869323730469
    9. '(exit' → logprob: -13.098869323730469
    10. '    
' → logprob: -13.223869323730469

Token 165: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.022921640425920486
    2. '()' → logprob: -4.272921562194824
    3. '(' → logprob: -5.147921562194824
    4. '(".' → logprob: -6.147921562194824
    5. '("."' → logprob: -7.772921562194824
    6. '('' → logprob: -9.022921562194824
    7. '("")' → logprob: -9.397921562194824
    8. '("("' → logprob: -9.522921562194824
    9. '('.')' → logprob: -11.147921562194824
    10. '("(' → logprob: -11.147921562194824

Token 166: 'dd' (ID: 1183)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.2884231805801392
    2. 'c' → logprob: -1.9134231805801392
    3. 'abc' → logprob: -2.0384230613708496
    4. 'a' → logprob: -2.2884230613708496
    5. 'ccc' → logprob: -3.1634230613708496
    6. 'bcc' → logprob: -3.1634230613708496
    7. 'bbc' → logprob: -3.4134230613708496
    8. 'bbb' → logprob: -3.4134230613708496
    9. 'abb' → logprob: -3.5384230613708496
    10. '"' → logprob: -3.5384230613708496

Token 167: 'c' (ID: 66)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5278977751731873
    2. '")' → logprob: -0.9028977751731873
    3. 'dd' → logprob: -6.152897834777832
    4. 'a' → logprob: -6.402897834777832
    5. '.")' → logprob: -8.277897834777832
    6. 'b' → logprob: -8.402897834777832
    7. 'c' → logprob: -8.527897834777832
    8. '"' → logprob: -9.152897834777832
    9. 'ddd' → logprob: -10.402897834777832
    10. 'e' → logprob: -10.402897834777832

Token 168: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -9.114600834436715e-05
    2. '"' → logprob: -10.250091552734375
    3. '")
' → logprob: -10.250091552734375
    4. 'd' → logprob: -12.250091552734375
    5. ')")' → logprob: -12.500091552734375
    6. ')' → logprob: -12.875091552734375
    7. 'c' → logprob: -13.125091552734375
    8. 'a' → logprob: -13.125091552734375
    9. ' ")' → logprob: -13.500091552734375
    10. 'n' → logprob: -14.125091552734375

Token 169: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016955342143774033
    2. '<|end|>' → logprob: -6.75169563293457
    3. 'exit' → logprob: -8.62669563293457
    4. ' exit' → logprob: -8.75169563293457
    5. '	exit' → logprob: -10.25169563293457
    6. '    ' → logprob: -10.50169563293457
    7. '  ' → logprob: -10.50169563293457
    8. ')' → logprob: -10.87669563293457
    9. '```' → logprob: -10.87669563293457
    10. '(exit' → logprob: -11.00169563293457

Token 170: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1007472351193428
    2. 'exit' → logprob: -2.3507473468780518
    3. ' exit' → logprob: -7.600747108459473
    4. '	exit' → logprob: -10.600747108459473
    5. '(exit' → logprob: -11.600747108459473
    6. '```' → logprob: -13.100747108459473
    7. '
' → logprob: -13.850747108459473
    8. '  ' → logprob: -14.225747108459473
    9. ' ' → logprob: -14.350747108459473
    10. '    
' → logprob: -14.475747108459473

Token 171: ' Aff' (ID: 13741)
  Prédit: ' exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' exit' → logprob: -0.31408825516700745
    2. 'exit' → logprob: -1.564088225364685
    3. '   ' → logprob: -2.8140883445739746
    4. '	exit' → logprob: -8.189087867736816
    5. ' ' → logprob: -11.439087867736816
    6. '(exit' → logprob: -12.064087867736816
    7. '.exit' → logprob: -12.564087867736816
    8. '    ' → logprob: -12.689087867736816
    9. '  ' → logprob: -13.314087867736816
    10. '```' → logprob: -13.564087867736816

Token 172: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.01673598401248455
    2. 'ic' → logprob: -5.391736030578613
    3. 'l' → logprob: -5.516736030578613
    4. 'ase' → logprob: -5.891736030578613
    5. 'le' → logprob: -6.266736030578613
    6. 'lace' → logprob: -7.266736030578613
    7. 'ale' → logprob: -7.766736030578613
    8. ')' → logprob: -7.766736030578613
    9. 'aise' → logprob: -8.391736030578613
    10. 'asse' → logprob: -8.516736030578613

Token 173: ' la' (ID: 557)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.08960103243589401
    2. '("")' → logprob: -2.8396010398864746
    3. '()' → logprob: -4.214601039886475
    4. '(' → logprob: -4.464601039886475
    5. '('' → logprob: -8.839600563049316
    6. '(-' → logprob: -8.964600563049316
    7. '("""' → logprob: -9.214600563049316
    8. ')' → logprob: -9.464600563049316
    9. '(""' → logprob: -9.714600563049316
    10. 'n' → logprob: -9.839600563049316

Token 174: ' troisième' (ID: 75373)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04155008867383003
    2. '("")' → logprob: -3.5415501594543457
    3. '(' → logprob: -6.041550159454346
    4. 'n' → logprob: -6.166550159454346
    5. ')' → logprob: -6.916550159454346
    6. '```' → logprob: -7.166550159454346
    7. '   ' → logprob: -7.291550159454346
    8. 'exit' → logprob: -7.291550159454346
    9. '())' → logprob: -7.291550159454346
    10. '("' → logprob: -7.541550159454346

Token 175: ' ligne' (ID: 19583)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0011275982251390815
    2. '(' → logprob: -7.62612771987915
    3. ')' → logprob: -8.501127243041992
    4. '("")' → logprob: -9.001127243041992
    5. ' line' → logprob: -9.751127243041992
    6. '<|end|>' → logprob: -10.001127243041992
    7. '   ' → logprob: -10.501127243041992
    8. '()
' → logprob: -10.501127243041992
    9. '")' → logprob: -10.751127243041992
    10. '"' → logprob: -10.876127243041992

Token 176: ' du' (ID: 1462)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005191182252019644
    2. '   ' → logprob: -5.380191326141357
    3. '(' → logprob: -8.0051908493042
    4. '<|end|>' → logprob: -9.0051908493042
    5. '#' → logprob: -11.1301908493042
    6. '()
' → logprob: -11.2551908493042
    7. '  ' → logprob: -11.2551908493042
    8. ')' → logprob: -11.3801908493042
    9. '("")' → logprob: -11.3801908493042
    10. '())' → logprob: -11.5051908493042

Token 177: ' motif' (ID: 72753)
  Prédit: ' motif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' motif' → logprob: -0.02206294611096382
    2. 'mot' → logprob: -3.8970630168914795
    3. ' code' → logprob: -6.6470627784729
    4. ' pattern' → logprob: -9.147063255310059
    5. ' mot' → logprob: -9.897063255310059
    6. 'pattern' → logprob: -10.147063255310059
    7. 'code' → logprob: -11.147063255310059
    8. ' ' → logprob: -13.147063255310059
    9. ' motifs' → logprob: -13.147063255310059
    10. 'pat' → logprob: -13.522063255310059

Token 178: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003488129877950996
    2. '<|end|>' → logprob: -8.875349044799805
    3. 'exit' → logprob: -9.125349044799805
    4. ' exit' → logprob: -9.750349044799805
    5. '```' → logprob: -11.125349044799805
    6. ')' → logprob: -11.375349044799805
    7. '	exit' → logprob: -12.500349044799805
    8. '<|end|>' → logprob: -13.000349044799805
    9. '    ' → logprob: -13.125349044799805
    10. '(exit' → logprob: -13.125349044799805

Token 179: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.8286455869674683
    2. 'n' → logprob: -0.9536455869674683
    3. '3' → logprob: -2.328645706176758
    4. ' ' → logprob: -2.953645706176758
    5. '```' → logprob: -5.078645706176758
    6. ' le' → logprob: -5.328645706176758
    7. '(n' → logprob: -5.453645706176758
    8. '   ' → logprob: -5.953645706176758
    9. '  ' → logprob: -6.078645706176758
    10. ')' → logprob: -6.453645706176758

Token 180: ' =' (ID: 314)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.46968263387680054
    2. '==' → logprob: -1.4696826934814453
    3. '=' → logprob: -2.2196826934814453
    4. ' =' → logprob: -3.3446826934814453
    5. ' ' → logprob: -7.594682693481445
    6. '  ' → logprob: -8.844682693481445
    7. '   ' → logprob: -9.094682693481445
    8. ')' → logprob: -10.594682693481445
    9. '3' → logprob: -11.344682693481445
    10. '_' → logprob: -11.594682693481445

Token 181: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.061967797577381134
    2. ' ' → logprob: -2.8119678497314453
    3. '  ' → logprob: -17.436967849731445
    4. '```' → logprob: -17.561967849731445
    5. '1' → logprob: -17.686967849731445
    6. '   ' → logprob: -17.811967849731445
    7. ' ' → logprob: -17.811967849731445
    8. '4' → logprob: -18.186967849731445
    9. '۳' → logprob: -18.624467849731445
    10. '2' → logprob: -19.374467849731445

Token 182: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '```' → logprob: -16.62500762939453
    4. '۳' → logprob: -18.56250762939453
    5. '３' → logprob: -18.68750762939453
    6. '   ' → logprob: -19.31250762939453
    7. '<|end|>' → logprob: -19.62500762939453
    8. '1' → logprob: -19.62500762939453
    9. '33' → logprob: -19.87500762939453
    10. '  ' → logprob: -19.93750762939453

Token 183: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04919255152344704
    2. '<|end|>' → logprob: -3.5491926670074463
    3. '
' → logprob: -5.174192428588867
    4. 'exit' → logprob: -5.424192428588867
    5. '```' → logprob: -5.799192428588867
    6. '\n' → logprob: -5.924192428588867
    7. '    
' → logprob: -6.924192428588867
    8. ' exit' → logprob: -7.174192428588867
    9. '	exit' → logprob: -7.674192428588867
    10. '  ' → logprob: -8.174192428588867

Token 184: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7600759863853455
    2. 'exit' → logprob: -1.1350760459899902
    3. 'else' → logprob: -2.0100760459899902
    4. '```' → logprob: -3.1350760459899902
    5. '
' → logprob: -4.76007604598999
    6. ' exit' → logprob: -5.26007604598999
    7. '<|end|>' → logprob: -5.51007604598999
    8. 'elif' → logprob: -5.63507604598999
    9. '#' → logprob: -5.76007604598999
    10. 'n' → logprob: -6.13507604598999

Token 185: ' exit' (ID: 10654)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' (adapté à ' exit') → logprob: -0.0009587471140548587
    2. '   ' → logprob: -7.0009589195251465
    3. ' exit' → logprob: -10.000958442687988
    4. '	exit' → logprob: -13.625958442687988
    5. '```' → logprob: -15.500958442687988
    6. '  ' → logprob: -16.250959396362305
    7. 'import' → logprob: -16.625959396362305
    8. ' ' → logprob: -16.875959396362305
    9. '(exit' → logprob: -17.250959396362305
    10. '.exit' → logprob: -17.500959396362305

Token 186: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02976854331791401
    2. '(' → logprob: -3.529768466949463
    3. '()
' → logprob: -11.654768943786621
    4. '(
' → logprob: -13.154768943786621
    5. '()

' → logprob: -13.904768943786621
    6. ' ()' → logprob: -14.154768943786621
    7. '()>' → logprob: -14.279768943786621
    8. '()<' → logprob: -14.404768943786621
    9. '```' → logprob: -14.529768943786621
    10. '())' → logprob: -14.654768943786621

Token 187: '         ' (ID: 983)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.579835057258606
    2. 'n' → logprob: -1.954835057258606
    3. '<|end|>' → logprob: -1.954835057258606
    4. '#' → logprob: -2.2048349380493164
    5. '\n' → logprob: -3.4548349380493164
    6. '```' → logprob: -5.454834938049316
    7. ' 
' → logprob: -5.704834938049316
    8. '

' → logprob: -6.454834938049316
    9. '\' → logprob: -6.579834938049316
    10. '  
' → logprob: -6.704834938049316

Token 188: ' #' (ID: 1069)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005493374192155898
    2. '()

' → logprob: -8.50054931640625
    3. '()
' → logprob: -8.62554931640625
    4. '(' → logprob: -9.75054931640625
    5. '#' (adapté à ' #') → logprob: -10.12554931640625
    6. '<|end|>' → logprob: -10.25054931640625
    7. ')' → logprob: -11.25054931640625
    8. '()\' → logprob: -12.12554931640625
    9. '()<' → logprob: -12.50054931640625
    10. '```' → logprob: -13.37554931640625

Token 189: ' Termine' (ID: 150192)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.6828930974006653
    2. '   ' → logprob: -1.5578930377960205
    3. 'Terminate' → logprob: -2.4328930377960205
    4. ' exit' → logprob: -3.1828930377960205
    5. 'terminate' → logprob: -3.3078930377960205
    6. '    ' → logprob: -3.4328930377960205
    7. '  ' → logprob: -3.9328930377960205
    8. 'Term' → logprob: -4.0578932762146
    9. 'Termin' → logprob: -4.6828932762146
    10. '<|end|>' → logprob: -4.8078932762146

Token 190: ' immédiatement' (ID: 100743)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -6.704273118884885e-07
    2. '()
' → logprob: -15.375000953674316
    3. '()<' → logprob: -15.500000953674316
    4. '(' → logprob: -16.5
    5. '()>' → logprob: -16.75
    6. '<|end|>' → logprob: -17.125
    7. '()

' → logprob: -17.375
    8. '()%' → logprob: -17.5
    9. '()">' → logprob: -17.75
    10. ' ()' → logprob: -18.0

Token 191: ' le' (ID: 505)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0025736368261277676
    2. 'le' → logprob: -6.002573490142822
    3. ' le' → logprob: -9.37757396697998
    4. '(' → logprob: -12.50257396697998
    5. 'l' → logprob: -13.62757396697998
    6. '()
' → logprob: -13.87757396697998
    7. 'the' → logprob: -14.00257396697998
    8. '(program' → logprob: -14.00257396697998
    9. ' ()' → logprob: -14.12757396697998
    10. '()<' → logprob: -14.37757396697998

Token 192: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.011106302961707115
    2. ' programme' → logprob: -4.511106491088867
    3. 'program' → logprob: -9.761106491088867
    4. 'programm' → logprob: -15.011106491088867
    5. 'programma' → logprob: -15.136106491088867
    6. 'Programme' → logprob: -15.761106491088867
    7. '```' → logprob: -16.761106491088867
    8. 'code' → logprob: -17.511106491088867
    9. ' program' → logprob: -17.636106491088867
    10. 'prog' → logprob: -18.011106491088867

Token 193: '

' (ID: 279)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.37152814865112305
    2. 'n' → logprob: -1.996528148651123
    3. '<|end|>' → logprob: -2.246528148651123
    4. '
' → logprob: -3.121528148651123
    5. '```' → logprob: -5.246528148651123
    6. 'for' → logprob: -5.371528148651123
    7. '\n' → logprob: -5.621528148651123
    8. 'a' → logprob: -6.246528148651123
    9. 'else' → logprob: -6.371528148651123
    10. '  
' → logprob: -6.621528148651123

Token 194: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.11490479856729507
    2. 'for' → logprob: -2.8649048805236816
    3. 'else' → logprob: -3.7399048805236816
    4. 'n' → logprob: -4.739904880523682
    5. 'a' → logprob: -5.114904880523682
    6. '```' → logprob: -5.739904880523682
    7. 'i' → logprob: -5.864904880523682
    8. 'if' → logprob: -6.614904880523682
    9. 'elif' → logprob: -6.739904880523682
    10. 'import' → logprob: -7.489904880523682

Token 195: ' Si' (ID: 7832)
  Prédit: 'mot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mot' → logprob: -1.0246241092681885
    2. '#' → logprob: -1.1496241092681885
    3. 'result' → logprob: -2.7746241092681885
    4. 'for' → logprob: -3.0246241092681885
    5. 'else' → logprob: -3.0246241092681885
    6. 'res' → logprob: -3.3996241092681885
    7. 'pattern' → logprob: -3.6496241092681885
    8. 'if' → logprob: -4.149623870849609
    9. 'a' → logprob: -4.274623870849609
    10. 'n' → logprob: -5.149623870849609

Token 196: ' l' (ID: 305)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.005944444332271814
    2. 'n' → logprob: -5.13094425201416
    3. ' ' → logprob: -12.38094425201416
    4. ' ' → logprob: -12.63094425201416
    5. '	n' → logprob: -13.00594425201416
    6. ' __' → logprob: -13.38094425201416
    7. '__' → logprob: -13.50594425201416
    8. '...' → logprob: -14.38094425201416
    9. '```' → logprob: -14.88094425201416
    10. '(n' → logprob: -15.06844425201416

Token 197: ''utilisateur' (ID: 140803)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.008901018649339676
    2. 'n' → logprob: -4.758901119232178
    3. 'e' → logprob: -8.88390064239502
    4. ' ==' → logprob: -10.38390064239502
    5. '   ' → logprob: -10.63390064239502
    6. ' ' → logprob: -11.50890064239502
    7. ' elif' → logprob: -11.88390064239502
    8. '(n' → logprob: -12.00890064239502
    9. ' >' → logprob: -12.25890064239502
    10. '>' → logprob: -12.25890064239502

Token 198: ' entre' (ID: 3853)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.42954739928245544
    2. '==' → logprob: -2.0545473098754883
    3. ' >=' → logprob: -2.4295473098754883
    4. ' n' → logprob: -2.9295473098754883
    5. ' >' → logprob: -3.8045473098754883
    6. '>=' → logprob: -3.9295473098754883
    7. 'n' → logprob: -4.679547309875488
    8. 's' → logprob: -5.179547309875488
    9. '>' → logprob: -5.554547309875488
    10. ' <' → logprob: -5.679547309875488

Token 199: ' ' (ID: 220)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.074151635169983
    2. '1' → logprob: -1.324151635169983
    3. ' ' → logprob: -1.574151635169983
    4. 'n' → logprob: -1.699151635169983
    5. '4' → logprob: -6.324151515960693
    6. '0' → logprob: -8.699151992797852
    7. '3' → logprob: -9.074151992797852
    8. '(n' → logprob: -9.199151992797852
    9. '<n' → logprob: -10.699151992797852
    10. '5' → logprob: -11.074151992797852

Token 200: '5' (ID: 20)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02267775684595108
    2. '4' → logprob: -3.8976776599884033
    3. 'n' → logprob: -6.647677898406982
    4. '0' → logprob: -7.397677898406982
    5. '2' → logprob: -8.647677421569824
    6. '5' → logprob: -11.147677421569824
    7. ' ' → logprob: -11.772677421569824
    8. '3' → logprob: -12.272677421569824
    9. '(n' → logprob: -12.397677421569824
    10. '```' → logprob: -12.522677421569824

Token 201: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.227250610711053e-05
    2. ':
' → logprob: -10.125041961669922
    3. ' :' → logprob: -14.750041961669922
    4. ',' → logprob: -14.875041961669922
    5. '=' → logprob: -15.000041961669922
    6. 'n' → logprob: -15.000041961669922
    7. '==' → logprob: -15.375041961669922
    8. 'if' → logprob: -15.625041961669922
    9. ':

' → logprob: -15.750041961669922
    10. ' ==' → logprob: -16.625041961669922

Token 202: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.42604875564575195
    2. ' print' → logprob: -1.176048755645752
    3. ' for' → logprob: -4.301048755645752
    4. 'for' → logprob: -4.676048755645752
    5. '   ' → logprob: -4.801048755645752
    6. ' #' → logprob: -6.301048755645752
    7. '#' → logprob: -6.551048755645752
    8. 'pattern' → logprob: -6.926048755645752
    9. ' pattern' → logprob: -7.176048755645752
    10. ' motif' → logprob: -7.426048755645752

Token 203: ' affiche' (ID: 127479)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.3928171694278717
    2. 'print' → logprob: -1.7678171396255493
    3. ':' → logprob: -2.142817258834839
    4. '   ' → logprob: -4.39281702041626
    5. ' n' → logprob: -5.39281702041626
    6. ' #' → logprob: -5.39281702041626
    7. '#' → logprob: -5.89281702041626
    8. '  ' → logprob: -6.14281702041626
    9. ' :' → logprob: -6.26781702041626
    10. ' imprime' → logprob: -6.39281702041626

Token 204: ' le' (ID: 505)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.02669571526348591
    2. '(' → logprob: -4.526695728302002
    3. '(n' → logprob: -5.276695728302002
    4. '("*' → logprob: -5.276695728302002
    5. '("#' → logprob: -6.901695728302002
    6. '(".' → logprob: -7.401695728302002
    7. '"' → logprob: -7.526695728302002
    8. '(a' → logprob: -8.026695251464844
    9. '("-' → logprob: -8.026695251464844
    10. '("_' → logprob: -8.276695251464844

Token 205: ' motif' (ID: 72753)
  Prédit: ' motif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' motif' → logprob: -0.1421734243631363
    2. 'mot' → logprob: -3.0171735286712646
    3. '"' → logprob: -3.3921735286712646
    4. 'a' → logprob: -4.8921732902526855
    5. ' premier' → logprob: -4.8921732902526855
    6. '"""' → logprob: -5.3921732902526855
    7. 's' → logprob: -5.5171732902526855
    8. ' code' → logprob: -6.0796732902526855
    9. ' mot' → logprob: -6.1421732902526855
    10. ' "' → logprob: -6.3296732902526855

Token 206: ' adapté' (ID: 102650)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3187777996063232
    2. '"' → logprob: -1.8187777996063232
    3. '   ' → logprob: -1.8187777996063232
    4. '("' → logprob: -2.1937777996063232
    5. '(' → logprob: -2.3187777996063232
    6. 'elif' → logprob: -3.3187777996063232
    7. '[' → logprob: -3.4437777996063232
    8. '(
' → logprob: -3.4437777996063232
    9. ' =' → logprob: -3.9437777996063232
    10. ':
' → logprob: -4.568778038024902

Token 207: ' à' (ID: 1221)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.320541113615036
    2. ':' → logprob: -1.4455411434173584
    3. ':
' → logprob: -3.6955411434173584
    4. 'print' → logprob: -5.195540904998779
    5. '   ' → logprob: -5.820540904998779
    6. 'elif' → logprob: -6.070540904998779
    7. 'for' → logprob: -6.695540904998779
    8. ' if' → logprob: -7.320540904998779
    9. ' :' → logprob: -8.195541381835938
    10. 'n' → logprob: -8.570541381835938

Token 208: ' un' (ID: 537)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6613608002662659
    2. ' n' → logprob: -1.286360740661621
    3. '5' → logprob: -2.036360740661621
    4. ' ' → logprob: -2.661360740661621
    5. '"' → logprob: -6.661360740661621
    6. ' ce' → logprob: -7.411360740661621
    7. '3' → logprob: -7.411360740661621
    8. '4' → logprob: -7.411360740661621
    9. 'l' → logprob: -7.911360740661621
    10. '7' → logprob: -8.161360740661621

Token 209: ' carré' (ID: 191546)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.381632924079895
    2. 'pent' → logprob: -1.506632924079895
    3. ' pent' → logprob: -2.3816328048706055
    4. 'pal' → logprob: -3.0066328048706055
    5. 'c' → logprob: -3.1316328048706055
    6. ' ' → logprob: -3.3816328048706055
    7. 'gr' → logprob: -3.6316328048706055
    8. '```' → logprob: -3.6316328048706055
    9. 'mot' → logprob: -3.7566328048706055
    10. ' n' → logprob: -3.8816328048706055

Token 210: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0379564762115479
    2. ' de' → logprob: -1.1629564762115479
    3. '"' → logprob: -2.537956476211548
    4. '5' → logprob: -2.662956476211548
    5. 'de' → logprob: -3.162956476211548
    6. '.' → logprob: -4.162956237792969
    7. '3' → logprob: -4.287956237792969
    8. '(' → logprob: -4.287956237792969
    9. '2' → logprob: -5.037956237792969
    10. ' n' → logprob: -5.287956237792969

Token 211: ' taille' (ID: 41644)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.17432838678359985
    2. 'c' → logprob: -2.424328327178955
    3. 'tail' → logprob: -2.924328327178955
    4. 'car' → logprob: -5.049328327178955
    5. ' ' → logprob: -6.049328327178955
    6. '#' → logprob: -6.674328327178955
    7. 'n' → logprob: -6.924328327178955
    8. 't' → logprob: -6.924328327178955
    9. 'dimension' → logprob: -6.924328327178955
    10. 'size' → logprob: -7.174328327178955

Token 212: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.3513655364513397
    2. ' ' → logprob: -1.226365566253662
    3. '3' → logprob: -6.351365566253662
    4. 'n' → logprob: -7.976365566253662
    5. ' n' → logprob: -7.976365566253662
    6. ' cinq' → logprob: -9.226365089416504
    7. '"' → logprob: -9.851365089416504
    8. '4' → logprob: -9.851365089416504
    9. 'de' → logprob: -10.476365089416504
    10. ' five' → logprob: -10.476365089416504

Token 213: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0010737768607214093
    2. ' ' → logprob: -7.251073837280273
    3. 'n' → logprob: -8.751073837280273
    4. '3' → logprob: -9.501073837280273
    5. '```' → logprob: -9.751073837280273
    6. '   ' → logprob: -11.251073837280273
    7. '`' → logprob: -11.688573837280273
    8. 'five' → logprob: -12.001073837280273
    9. 'c' → logprob: -12.126073837280273
    10. '``' → logprob: -12.188573837280273

Token 214: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12731441855430603
    2. 'if' → logprob: -2.752314329147339
    3. ':' → logprob: -4.127314567565918
    4. 'a' → logprob: -4.752314567565918
    5. 'for' → logprob: -4.752314567565918
    6. ':
' → logprob: -5.252314567565918
    7. '   ' → logprob: -5.377314567565918
    8. '#' → logprob: -5.752314567565918
    9. 'elif' → logprob: -6.252314567565918
    10. 'n' → logprob: -6.502314567565918

Token 215: ' puis' (ID: 18766)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07026095688343048
    2. 'for' → logprob: -3.070261001586914
    3. ' print' → logprob: -4.445261001586914
    4. ' for' → logprob: -5.570261001586914
    5. '#' → logprob: -6.070261001586914
    6. '   ' → logprob: -6.945261001586914
    7. 'n' → logprob: -7.820261001586914
    8. ' 
' → logprob: -8.320261001586914
    9. '  
' → logprob: -8.320261001586914
    10. '```' → logprob: -8.570261001586914

Token 216: ' arrêt' (ID: 77403)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.025982901453971863
    2. ' exit' → logprob: -3.7759828567504883
    3. 'print' → logprob: -6.025982856750488
    4. '   ' → logprob: -8.525982856750488
    5. ' print' → logprob: -10.150982856750488
    6. '	exit' → logprob: -10.900982856750488
    7. ' ' → logprob: -11.525982856750488
    8. '#' → logprob: -11.650982856750488
    9. '```' → logprob: -11.650982856750488
    10. 'quit' → logprob: -11.900982856750488

Token 217: ' du' (ID: 1462)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01822088100016117
    2. '   ' → logprob: -4.768220901489258
    3. 'print' → logprob: -5.518220901489258
    4. ':' → logprob: -6.018220901489258
    5. ' if' → logprob: -6.643220901489258
    6. ':
' → logprob: -7.143220901489258
    7. 'for' → logprob: -7.768220901489258
    8. 'n' → logprob: -9.643220901489258
    9. '("' → logprob: -9.643220901489258
    10. '(
' → logprob: -9.893220901489258

Token 218: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.001257376279681921
    2. ' programme' → logprob: -7.376257419586182
    3. 'program' → logprob: -7.376257419586182
    4. '#' → logprob: -13.126256942749023
    5. 'code' → logprob: -14.001256942749023
    6. 'print' → logprob: -14.126256942749023
    7. 'programma' → logprob: -14.876256942749023
    8. 'programm' → logprob: -15.251256942749023
    9. 'Programme' → logprob: -15.501256942749023
    10. 'prog' → logprob: -15.876256942749023

Token 219: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6387457847595215
    2. 'if' → logprob: -0.7637457847595215
    3. '   ' → logprob: -6.3887457847595215
    4. 'for' → logprob: -6.5137457847595215
    5. 'elif' → logprob: -6.8887457847595215
    6. ':' → logprob: -7.8887457847595215
    7. 'a' → logprob: -8.01374626159668
    8. 'n' → logprob: -8.01374626159668
    9. '```' → logprob: -8.38874626159668
    10. '#' → logprob: -8.63874626159668

Token 220: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0017524146242067218
    2. 'elif' → logprob: -6.5017523765563965
    3. '```' → logprob: -8.751752853393555
    4. 'n' → logprob: -10.251752853393555
    5. 'print' → logprob: -11.001752853393555
    6. 'i' → logprob: -11.126752853393555
    7. ' if' → logprob: -11.876752853393555
    8. 'for' → logprob: -12.126752853393555
    9. '``' → logprob: -12.751752853393555
    10. 'import' → logprob: -13.001752853393555

Token 221: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0021853535436093807
    2. 'n' → logprob: -6.127185344696045
    3. ' ' → logprob: -15.877185821533203
    4. ' ' → logprob: -16.877185821533203
    5. '	n' → logprob: -17.627185821533203
    6. '(n' → logprob: -19.252185821533203
    7. '   ' → logprob: -20.127185821533203
    8. ' н' → logprob: -20.377185821533203
    9. '_n' → logprob: -20.627185821533203
    10. '```' → logprob: -20.627185821533203

Token 222: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.008617646060883999
    2. '==' → logprob: -4.758617877960205
    3. ' ' → logprob: -13.258617401123047
    4. ' ' → logprob: -14.633617401123047
    5. ' =' → logprob: -14.758617401123047
    6. '=' → logprob: -15.258617401123047
    7. ' <=' → logprob: -16.383617401123047
    8. ' !=' → logprob: -17.133617401123047
    9. ')' → logprob: -17.508617401123047
    10. ' #' → logprob: -17.508617401123047

Token 223: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.5759443044662476
    2. ' ' → logprob: -0.8259443044662476
    3. '   ' → logprob: -13.325943946838379
    4. '```' → logprob: -13.325943946838379
    5. '  ' → logprob: -14.325943946838379
    6. ' ' → logprob: -14.763443946838379
    7. '    ' → logprob: -17.388444900512695
    8. ' five' → logprob: -17.513444900512695
    9. '٥' → logprob: -17.513444900512695
    10. '`' → logprob: -17.575944900512695

Token 224: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0008052219054661691
    2. ' ' → logprob: -7.125805377960205
    3. '```' → logprob: -14.750804901123047
    4. '   ' → logprob: -15.375804901123047
    5. '  ' → logprob: -16.125804901123047
    6. '`' → logprob: -17.750804901123047
    7. '٥' → logprob: -18.063304901123047
    8. '５' → logprob: -18.313304901123047
    9. '۵' → logprob: -18.500804901123047
    10. ''' → logprob: -18.875804901123047

Token 225: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03804849088191986
    2. ':
' → logprob: -3.288048505783081
    3. '   ' → logprob: -12.41304874420166
    4. ' :' → logprob: -13.91304874420166
    5. '=' → logprob: -14.41304874420166
    6. ':

' → logprob: -14.66304874420166
    7. ':
' → logprob: -14.91304874420166
    8. ' :
' → logprob: -15.28804874420166
    9. '):
' → logprob: -15.53804874420166
    10. 'print' → logprob: -16.163047790527344

Token 226: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00624669948592782
    2. 'print' → logprob: -5.131246566772461
    3. ' print' → logprob: -8.256246566772461
    4. 'for' → logprob: -10.631246566772461
    5. ':' → logprob: -11.006246566772461
    6. ' for' → logprob: -12.006246566772461
    7. '```' → logprob: -12.256246566772461
    8. '	print' → logprob: -14.006246566772461
    9. '   ' → logprob: -14.131246566772461
    10. 'import' → logprob: -14.131246566772461

Token 227: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.004924546927213669
    2. 'for' → logprob: -6.004924774169922
    3. ' print' → logprob: -6.129924774169922
    4. 'pattern' → logprob: -8.754924774169922
    5. 'mot' → logprob: -9.754924774169922
    6. ' for' → logprob: -10.379924774169922
    7. ' motif' → logprob: -12.754924774169922
    8. 'pat' → logprob: -13.004924774169922
    9. 'lines' → logprob: -13.129924774169922
    10. '   ' → logprob: -13.129924774169922

Token 228: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00610476266592741
    2. '(' → logprob: -5.506104946136475
    3. '("""' → logprob: -6.756104946136475
    4. '(
' → logprob: -7.506104946136475
    5. '('' → logprob: -9.006104469299316
    6. '(""' → logprob: -9.881104469299316
    7. '(".' → logprob: -10.631104469299316
    8. '("""
' → logprob: -11.006104469299316
    9. '("#' → logprob: -11.131104469299316
    10. '("***' → logprob: -11.256104469299316

Token 229: 'a' (ID: 64)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.9084301590919495
    2. 'a' → logprob: -1.5334300994873047
    3. 'aa' → logprob: -2.2834300994873047
    4. 'aaa' → logprob: -2.4084300994873047
    5. 'aaaa' → logprob: -2.4084300994873047
    6. 'abb' → logprob: -2.6584300994873047
    7. 'ab' → logprob: -4.158430099487305
    8. 'aac' → logprob: -5.408430099487305
    9. 'abba' → logprob: -6.783430099487305
    10. 'ee' → logprob: -6.783430099487305

Token 230: 'abb' (ID: 13538)
  Prédit: 'bb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bb' → logprob: -1.2133402824401855
    2. 'b' → logprob: -2.0883402824401855
    3. 'bc' → logprob: -2.2133402824401855
    4. 'bbb' → logprob: -2.3383402824401855
    5. 'a' → logprob: -2.4633402824401855
    6. 'bbbb' → logprob: -3.0883402824401855
    7. 'aa' → logprob: -3.2133402824401855
    8. 'aaaa' → logprob: -3.2133402824401855
    9. 'bcc' → logprob: -3.5883402824401855
    10. 'aaa' → logprob: -3.5883402824401855

Token 231: 'c' (ID: 66)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5260632038116455
    2. 'c' → logprob: -1.4010632038116455
    3. 'cc' → logprob: -2.0260632038116455
    4. 'a' → logprob: -3.9010632038116455
    5. 'bb' → logprob: -5.276062965393066
    6. '")' → logprob: -6.276062965393066
    7. '.")' → logprob: -6.651062965393066
    8. 'aa' → logprob: -7.526062965393066
    9. 'bcc' → logprob: -7.901062965393066
    10. '")
' → logprob: -8.151062965393066

Token 232: '",' (ID: 672)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.027575360611081123
    2. '")
' → logprob: -3.6525752544403076
    3. 'c' → logprob: -7.402575492858887
    4. 'cc' → logprob: -7.777575492858887
    5. 'b' → logprob: -9.402575492858887
    6. 'bb' → logprob: -10.152575492858887
    7. '
' → logprob: -10.402575492858887
    8. '")
' → logprob: -10.527575492858887
    9. '")

' → logprob: -11.152575492858887
    10. '"' → logprob: -11.277575492858887

Token 233: ' "' (ID: 392)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.7804980278015137
    2. ')' → logprob: -1.1554980278015137
    3. '"' → logprob: -2.2804980278015137
    4. 'a' → logprob: -2.7804980278015137
    5. '"\' → logprob: -3.9054980278015137
    6. '   ' → logprob: -4.280498027801514
    7. '")' → logprob: -5.030498027801514
    8. 'print' → logprob: -5.655498027801514
    9. '"a' → logprob: -5.655498027801514
    10. '
' → logprob: -5.905498027801514

Token 234: 'hi' (ID: 3686)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.33991074562072754
    2. '")' → logprob: -2.2149107456207275
    3. ' sep' → logprob: -2.4649107456207275
    4. '",' → logprob: -3.3399107456207275
    5. '"' → logprob: -3.7149107456207275
    6. '")
' → logprob: -4.214910507202148
    7. '"\' → logprob: -5.589910507202148
    8. 'end' → logprob: -5.839910507202148
    9. ')' → logprob: -5.839910507202148
    10. '\n' → logprob: -6.214910507202148

Token 235: '..' (ID: 485)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -1.0381364822387695
    2. 'def' → logprob: -1.6631364822387695
    3. '"' → logprob: -2.1631364822387695
    4. 'dd' → logprob: -2.1631364822387695
    5. 'd' → logprob: -2.2881364822387695
    6. 'de' → logprob: -2.9131364822387695
    7. 'a' → logprob: -3.7881364822387695
    8. 'dde' → logprob: -4.9131364822387695
    9. 'cc' → logprob: -5.0381364822387695
    10. '")
' → logprob: -5.1631364822387695

Token 236: 'c' (ID: 66)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.043712057173252106
    2. 'd' → logprob: -4.168712139129639
    3. '")
' → logprob: -5.168712139129639
    4. 'def' → logprob: -5.168712139129639
    5. 'a' → logprob: -5.668712139129639
    6. '"' → logprob: -5.918712139129639
    7. 'f' → logprob: -5.918712139129639
    8. 'h' → logprob: -6.918712139129639
    9. 'de' → logprob: -6.918712139129639
    10. ' ")' → logprob: -7.293712139129639

Token 237: '",' (ID: 672)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.19784437119960785
    2. '",' → logprob: -1.947844386100769
    3. 'd' → logprob: -3.8228442668914795
    4. 'def' → logprob: -5.322844505310059
    5. 'de' → logprob: -5.572844505310059
    6. '")
' → logprob: -5.822844505310059
    7. '"' → logprob: -6.697844505310059
    8. 'a' → logprob: -7.572844505310059
    9. 'f' → logprob: -8.697844505310059
    10. ' ")' → logprob: -8.697844505310059

Token 238: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6346389651298523
    2. 'sep' → logprob: -1.509639024734497
    3. ' "' → logprob: -1.634639024734497
    4. ' sep' → logprob: -3.884639024734497
    5. '"\' → logprob: -4.509638786315918
    6. ')' → logprob: -5.009638786315918
    7. ' "\' → logprob: -5.134638786315918
    8. '"a' → logprob: -5.509638786315918
    9. '"h' → logprob: -6.884638786315918
    10. '"d' → logprob: -7.259638786315918

Token 239: 'hi' (ID: 3686)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.28325608372688293
    2. 'de' → logprob: -2.9082560539245605
    3. ' "' → logprob: -3.0332560539245605
    4. 'd' → logprob: -4.8457560539245605
    5. 'ab' → logprob: -4.8457560539245605
    6. 'dd' → logprob: -4.8457560539245605
    7. 'def' → logprob: -4.9707560539245605
    8. '"d' → logprob: -5.0332560539245605
    9. 'e' → logprob: -5.2207560539245605
    10. 'abc' → logprob: -5.3457560539245605

Token 240: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.051271192729473114
    2. 'i' → logprob: -3.3012712001800537
    3. '.' → logprob: -5.176270961761475
    4. '...' → logprob: -6.176270961761475
    5. '.cc' → logprob: -7.176270961761475
    6. '.dd' → logprob: -7.176270961761475
    7. 'ii' → logprob: -7.551270961761475
    8. 'h' → logprob: -7.801270961761475
    9. 'j' → logprob: -8.426271438598633
    10. '"..' → logprob: -8.426271438598633

Token 241: 'd' (ID: 67)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.024402545765042305
    2. '"' → logprob: -4.524402618408203
    3. 'cc' → logprob: -4.899402618408203
    4. 'd' → logprob: -6.149402618408203
    5. 'dd' → logprob: -6.399402618408203
    6. 'a' → logprob: -7.274402618408203
    7. 'i' → logprob: -8.024402618408203
    8. '")' → logprob: -8.149402618408203
    9. 'h' → logprob: -8.274402618408203
    10. 'b' → logprob: -9.649402618408203

Token 242: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.015672992914915085
    2. 'print' → logprob: -4.5156731605529785
    3. '")' → logprob: -5.8906731605529785
    4. '"' → logprob: -7.5156731605529785
    5. ' ",' → logprob: -8.14067268371582
    6. 'f' → logprob: -8.39067268371582
    7. '","' → logprob: -8.64067268371582
    8. '\n' → logprob: -9.14067268371582
    9. '")
' → logprob: -9.14067268371582
    10. 'n' → logprob: -9.51567268371582

Token 243: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.44754189252853394
    2. ' "' → logprob: -1.1975419521331787
    3. '"h' → logprob: -3.5725419521331787
    4. '"\' → logprob: -4.4475417137146
    5. ' "\' → logprob: -4.8225417137146
    6. ')' → logprob: -5.5725417137146
    7. '"a' → logprob: -6.0725417137146
    8. 'sep' → logprob: -6.1975417137146
    9. ' sep' → logprob: -7.5725417137146
    10. ' ' → logprob: -7.5725417137146

Token 244: 'g' (ID: 70)
  Prédit: 'hi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hi' → logprob: -0.5423976182937622
    2. '"' → logprob: -0.9173976182937622
    3. ' hi' → logprob: -4.917397499084473
    4. ' "' → logprob: -5.542397499084473
    5. '"h' → logprob: -5.792397499084473
    6. 'h' → logprob: -6.042397499084473
    7. ''' → logprob: -7.417397499084473
    8. ''h' → logprob: -8.042397499084473
    9. ' ' → logprob: -8.167397499084473
    10. 'ihi' → logprob: -9.042397499084473

Token 245: '.j' (ID: 1760)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0779644027352333
    2. 'gg' → logprob: -2.9529643058776855
    3. 'gj' → logprob: -5.3279643058776855
    4. 'ggj' → logprob: -5.3279643058776855
    5. 'gh' → logprob: -5.9529643058776855
    6. 'ggi' → logprob: -6.2029643058776855
    7. 'gaa' → logprob: -7.0779643058776855
    8. 'gge' → logprob: -7.2029643058776855
    9. 'gcc' → logprob: -7.3279643058776855
    10. 'gl' → logprob: -7.5779643058776855

Token 246: 'jd' (ID: 41882)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.1262540966272354
    2. 'j' → logprob: -3.126254081726074
    3. 'k' → logprob: -3.876254081726074
    4. 'gh' → logprob: -4.751254081726074
    5. '"' → logprob: -5.126254081726074
    6. 'gj' → logprob: -5.126254081726074
    7. 'jj' → logprob: -5.251254081726074
    8. 'gg' → logprob: -5.251254081726074
    9. '")' → logprob: -5.501254081726074
    10. 'd' → logprob: -5.501254081726074

Token 247: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.018004190176725388
    2. '")' → logprob: -4.768004417419434
    3. '"' → logprob: -5.643004417419434
    4. 'g' → logprob: -6.143004417419434
    5. '","' → logprob: -6.518004417419434
    6. ' ",' → logprob: -6.768004417419434
    7. 'c' → logprob: -8.143004417419434
    8. 'd' → logprob: -8.768004417419434
    9. 'f' → logprob: -8.768004417419434
    10. 'e' → logprob: -9.018004417419434

Token 248: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6287221312522888
    2. ' "' → logprob: -0.8787221312522888
    3. 'sep' → logprob: -3.7537221908569336
    4. '"h' → logprob: -4.753722190856934
    5. '"a' → logprob: -5.003722190856934
    6. ' sep' → logprob: -5.253722190856934
    7. ')' → logprob: -6.128722190856934
    8. ' "\' → logprob: -6.753722190856934
    9. ' ' → logprob: -6.753722190856934
    10. '"\' → logprob: -7.003722190856934

Token 249: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.8745883703231812
    2. 'gg' → logprob: -1.2495883703231812
    3. 'gh' → logprob: -2.1245884895324707
    4. '"' → logprob: -2.8745884895324707
    5. 'ggj' → logprob: -3.7495884895324707
    6. 'gga' → logprob: -4.124588489532471
    7. 'gge' → logprob: -4.124588489532471
    8. 'a' → logprob: -4.249588489532471
    9. 'ggi' → logprob: -4.499588489532471
    10. 'gaa' → logprob: -5.749588489532471

Token 250: 'ffee' (ID: 76914)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.18634337186813354
    2. 'gj' → logprob: -2.1863434314727783
    3. 'gh' → logprob: -3.9363434314727783
    4. '.g' → logprob: -4.061343193054199
    5. 'gaa' → logprob: -5.561343193054199
    6. 'ggj' → logprob: -5.561343193054199
    7. '..' → logprob: -5.936343193054199
    8. 'gg' → logprob: -6.311343193054199
    9. 'ga' → logprob: -6.561343193054199
    10. '.j' → logprob: -7.436343193054199

Token 251: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.4754904508590698
    2. '",' → logprob: -0.9754904508590698
    3. '"' → logprob: -7.100490570068359
    4. 'f' → logprob: -8.60049057006836
    5. '")
' → logprob: -8.85049057006836
    6. ')' → logprob: -9.85049057006836
    7. 'd' → logprob: -10.47549057006836
    8. 'g' → logprob: -10.97549057006836
    9. '");' → logprob: -10.97549057006836
    10. 'sep' → logprob: -10.97549057006836

Token 252: ' ' (ID: 220)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02145194821059704
    2. 'sep' → logprob: -4.396451950073242
    3. ' ,' → logprob: -5.646451950073242
    4. ' sep' → logprob: -5.896451950073242
    5. ')' → logprob: -6.396451950073242
    6. '   ' → logprob: -8.021451950073242
    7. ' ' → logprob: -8.396451950073242
    8. '[' → logprob: -9.771451950073242
    9. 'split' → logprob: -9.771451950073242
    10. '.split' → logprob: -10.271451950073242

Token 253: ' #' (ID: 1069)
  Prédit: '.replace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.replace' → logprob: -0.9039520025253296
    2. '.split' → logprob: -1.5289520025253296
    3. ',' → logprob: -1.7789520025253296
    4. ')' → logprob: -2.278952121734619
    5. 'sep' → logprob: -3.903952121734619
    6. '<|end|>' → logprob: -3.903952121734619
    7. '
' → logprob: -4.028952121734619
    8. '[' → logprob: -4.653952121734619
    9. ' ' → logprob: -5.278952121734619
    10. '()' → logprob: -5.528952121734619

Token 254: ' Aff' (ID: 13741)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.3718562722206116
    2. 'split' → logprob: -2.871856212615967
    3. '.split' → logprob: -2.996856212615967
    4. ')' → logprob: -3.246856212615967
    5. '.replace' → logprob: -3.621856212615967
    6. 'print' → logprob: -3.746856212615967
    7. ' sep' → logprob: -4.371856212615967
    8. 'for' → logprob: -4.371856212615967
    9. 'replace' → logprob: -4.496856212615967
    10. '   ' → logprob: -4.496856212615967

Token 255: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -6.504040356958285e-05
    2. 'icher' → logprob: -10.625064849853516
    3. 'ic' → logprob: -11.125064849853516
    4. '#' → logprob: -11.375064849853516
    5. 'che' → logprob: -11.750064849853516
    6. 'ichage' → logprob: -12.625064849853516
    7. 'ich' → logprob: -15.000064849853516
    8. '()' → logprob: -15.000064849853516
    9. ' iche' → logprob: -15.000064849853516
    10. '
' → logprob: -15.250064849853516

Token 256: ' les' (ID: 1341)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.26991066336631775
    2. '(' → logprob: -2.1449105739593506
    3. '()' → logprob: -3.1449105739593506
    4. '("\' → logprob: -3.2699105739593506
    5. '("' → logprob: -4.14491081237793
    6. '(*' → logprob: -4.89491081237793
    7. '
' → logprob: -5.14491081237793
    8. '('\' → logprob: -5.51991081237793
    9. '()
' → logprob: -6.39491081237793
    10. '("""
' → logprob: -7.01991081237793

Token 257: ' ' (ID: 220)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5114347338676453
    2. '
' → logprob: -1.88643479347229
    3. ' lines' → logprob: -3.01143479347229
    4. 'lines' → logprob: -3.13643479347229
    5. 'a' → logprob: -3.51143479347229
    6. '"\' → logprob: -4.261434555053711
    7. '\' → logprob: -4.386434555053711
    8. '("\' → logprob: -4.636434555053711
    9. 'n' → logprob: -4.761434555053711
    10. 'sep' → logprob: -4.886434555053711

Token 258: '5' (ID: 20)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.31881365180015564
    2. 'a' → logprob: -3.0688135623931885
    3. '
' → logprob: -3.0688135623931885
    4. '"\' → logprob: -3.1938135623931885
    5. '"""' → logprob: -3.5688135623931885
    6. ')' → logprob: -3.8188135623931885
    7. '"' → logprob: -3.9438135623931885
    8. '"""
' → logprob: -4.193813800811768
    9. 'sep' → logprob: -4.693813800811768
    10. '#' → logprob: -4.943813800811768

Token 259: ' lignes' (ID: 81687)
  Prédit: '("\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("\' → logprob: -0.782290518283844
    2. '.split' → logprob: -1.9072904586791992
    3. '\' → logprob: -2.157290458679199
    4. '\n' → logprob: -2.782290458679199
    5. ')' → logprob: -3.157290458679199
    6. '
' → logprob: -3.282290458679199
    7. '('\' → logprob: -3.407290458679199
    8. 'split' → logprob: -3.532290458679199
    9. '()' → logprob: -4.157290458679199
    10. '"\' → logprob: -4.282290458679199

Token 260: ' du' (ID: 1462)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13396932184696198
    2. '.replace' → logprob: -3.133969306945801
    3. '.split' → logprob: -3.633969306945801
    4. ',' → logprob: -3.758969306945801
    5. ')' → logprob: -4.508969306945801
    6. '<|end|>' → logprob: -5.008969306945801
    7. '.' → logprob: -6.008969306945801
    8. '#' → logprob: -6.133969306945801
    9. '   ' → logprob: -6.383969306945801
    10. '
' → logprob: -7.258969306945801

Token 261: ' motif' (ID: 72753)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""
' → logprob: -1.0662822723388672
    2. '\n' → logprob: -1.6912822723388672
    3. '"\' → logprob: -2.066282272338867
    4. ')' → logprob: -3.191282272338867
    5. ')
' → logprob: -3.441282272338867
    6. '"""' → logprob: -3.566282272338867
    7. '"' → logprob: -3.566282272338867
    8. '
' → logprob: -3.691282272338867
    9. 'n' → logprob: -3.941282272338867
    10. 'print' → logprob: -4.066282272338867

Token 262: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 263: ' n' (ID: 297)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.019018420949578285
    2. ' sep' → logprob: -4.019018650054932
    3. 'n' → logprob: -7.644018650054932
    4. ')' → logprob: -9.144018173217773
    5. ' ' → logprob: -9.269018173217773
    6. 'end' → logprob: -9.519018173217773
    7. ')
' → logprob: -10.394018173217773
    8. 'se' → logprob: -11.394018173217773
    9. 'separator' → logprob: -11.394018173217773
    10. '*' → logprob: -11.769018173217773

Token 264: ' =' (ID: 314)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11516449600458145
    2. ')' → logprob: -3.1151645183563232
    3. ' =' → logprob: -3.6151645183563232
    4. '==' → logprob: -3.9901645183563232
    5. '=' → logprob: -4.115164279937744
    6. ' ' → logprob: -6.865164279937744
    7. ' )' → logprob: -6.865164279937744
    8. ' ===' → logprob: -8.240164756774902
    9. ' ==
' → logprob: -8.740164756774902
    10. ' >=' → logprob: -10.490164756774902

Token 265: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.63261878490448
    2. ' ' → logprob: -0.75761878490448
    3. ' ' → logprob: -12.13261890411377
    4. 'n' → logprob: -12.32011890411377
    5. '```' → logprob: -12.38261890411377
    6. ' n' → logprob: -13.94511890411377
    7. '   ' → logprob: -14.63261890411377
    8. '  ' → logprob: -14.82011890411377
    9. ')' → logprob: -15.07011890411377
    10. ' five' → logprob: -15.19511890411377

Token 266: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0059442054480314255
    2. ' ' → logprob: -5.13094425201416
    3. ')' → logprob: -12.00594425201416
    4. '```' → logprob: -13.00594425201416
    5. 'n' → logprob: -13.75594425201416
    6. '   ' → logprob: -13.81844425201416
    7. ' )' → logprob: -13.81844425201416
    8. ',' → logprob: -14.56844425201416
    9. '    ' → logprob: -14.88094425201416
    10. '  ' → logprob: -14.94344425201416

Token 267: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7010466456413269
    2. '
' → logprob: -1.2010467052459717
    3. '.split' → logprob: -2.7010467052459717
    4. '   ' → logprob: -2.8260467052459717
    5. '<|end|>' → logprob: -2.9510467052459717
    6. '[' → logprob: -5.201046466827393
    7. ',' → logprob: -6.201046466827393
    8. 'for' → logprob: -6.326046466827393
    9. '<|end|>' → logprob: -6.326046466827393
    10. '    
' → logprob: -6.326046466827393

Token 268: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 269: ' exit' (ID: 10654)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6346887350082397
    2. 'exit' (adapté à ' exit') → logprob: -1.0096887350082397
    3. ')' → logprob: -2.6346888542175293
    4. '
' → logprob: -4.384688854217529
    5. ' exit' → logprob: -5.384688854217529
    6. '<|end|>' → logprob: -5.509688854217529
    7. '.exit' → logprob: -5.884688854217529
    8. '	exit' → logprob: -6.134688854217529
    9. '    
' → logprob: -6.384688854217529
    10. '  ' → logprob: -7.134688854217529

Token 270: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.7697225252486533e-06
    2. '()
' → logprob: -13.375003814697266
    3. '(' → logprob: -13.500003814697266
    4. '()

' → logprob: -15.000003814697266
    5. '()]' → logprob: -16.125003814697266
    6. '())' → logprob: -16.625003814697266
    7. '()`' → logprob: -16.625003814697266
    8. '()<' → logprob: -16.875003814697266
    9. '()}' → logprob: -17.125003814697266
    10. ' ()' → logprob: -17.125003814697266

Token 271: '         ' (ID: 983)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05633183941245079
    2. 'for' → logprob: -4.431331634521484
    3. '<|end|>' → logprob: -4.681331634521484
    4. '\n' → logprob: -4.806331634521484
    5. 'print' → logprob: -5.181331634521484
    6. ')' → logprob: -5.431331634521484
    7. '  
' → logprob: -5.431331634521484
    8. '()' → logprob: -5.681331634521484
    9. '

' → logprob: -6.431331634521484
    10. '    
' → logprob: -6.681331634521484

Token 272: ' #' (ID: 1069)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0048108999617397785
    2. ')' → logprob: -6.504810810089111
    3. '()
' → logprob: -6.504810810089111
    4. '<|end|>' → logprob: -7.004810810089111
    5. '(' → logprob: -8.12981128692627
    6. '()

' → logprob: -8.25481128692627
    7. '
' → logprob: -9.00481128692627
    8. '#' (adapté à ' #') → logprob: -9.50481128692627
    9. '()\' → logprob: -10.12981128692627
    10. '())' → logprob: -10.37981128692627

Token 273: ' Termine' (ID: 150192)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 274: ' immédiatement' (ID: 100743)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -4.4849443838757e-06
    2. '()
' → logprob: -12.875004768371582
    3. '<|end|>' → logprob: -13.625004768371582
    4. '())' → logprob: -15.500004768371582
    5. '()<' → logprob: -16.250003814697266
    6. '(' → logprob: -16.625003814697266
    7. '()]' → logprob: -16.750003814697266
    8. '()

' → logprob: -16.750003814697266
    9. '<|end|>' → logprob: -17.000003814697266
    10. ')' → logprob: -17.000003814697266

Token 275: ' le' (ID: 505)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002624086628202349
    2. '<|end|>' → logprob: -9.250262260437012
    3. '()
' → logprob: -9.625262260437012
    4. 'the' → logprob: -9.875262260437012
    5. '(' → logprob: -10.375262260437012
    6. ')' → logprob: -12.125262260437012
    7. '()

' → logprob: -13.000262260437012
    8. ' the' → logprob: -13.500262260437012
    9. '())' → logprob: -13.625262260437012
    10. 'le' → logprob: -14.000262260437012

Token 276: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.0822628065943718
    2. ' programme' → logprob: -2.5822627544403076
    3. 'program' → logprob: -5.707262992858887
    4. 'programm' → logprob: -10.957262992858887
    5. ' program' → logprob: -10.957262992858887
    6. 'Programme' → logprob: -12.207262992858887
    7. 'programma' → logprob: -12.707262992858887
    8. '_program' → logprob: -13.832262992858887
    9. ' programma' → logprob: -14.707262992858887
    10. 'pro' → logprob: -15.707262992858887

Token 277: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5536875128746033
    2. '<|end|>' → logprob: -1.678687572479248
    3. '
' → logprob: -1.803687572479248
    4. '#' → logprob: -3.553687572479248
    5. '[' → logprob: -4.178687572479248
    6. 'print' → logprob: -5.053687572479248
    7. 'n' → logprob: -5.678687572479248
    8. ')' → logprob: -5.928687572479248
    9. '```' → logprob: -5.928687572479248
    10. '\n' → logprob: -5.928687572479248

Token 278: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2577328383922577
    2. 'for' → logprob: -1.75773286819458
    3. '#' → logprob: -4.00773286819458
    4. 'else' → logprob: -4.25773286819458
    5. 'if' → logprob: -5.00773286819458
    6. '<|end|>' → logprob: -5.75773286819458
    7. 'n' → logprob: -6.25773286819458
    8. '[' → logprob: -6.25773286819458
    9. 'print' → logprob: -6.50773286819458
    10. '  
' → logprob: -6.88273286819458

Token 279: ' Si' (ID: 7832)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2081660032272339
    2. 'lines' → logprob: -1.4581660032272339
    3. '#' → logprob: -1.5831660032272339
    4. 'else' → logprob: -2.2081661224365234
    5. 'pattern' → logprob: -2.9581661224365234
    6. 'if' → logprob: -3.0831661224365234
    7. 'result' → logprob: -4.208166122436523
    8. 'ligne' → logprob: -4.833166122436523
    9. 'def' → logprob: -5.333166122436523
    10. 'rows' → logprob: -5.458166122436523

Token 280: ' l' (ID: 305)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.014169150963425636
    2. 'n' → logprob: -4.264169216156006
    3. ' ' → logprob: -13.014168739318848
    4. ' isinstance' → logprob: -13.389168739318848
    5. ' ' → logprob: -14.139168739318848
    6. '	n' → logprob: -14.514168739318848
    7. ' not' → logprob: -15.514168739318848
    8. '  ' → logprob: -16.264169692993164
    9. '   ' → logprob: -17.014169692993164
    10. '#' → logprob: -17.014169692993164

Token 281: ''utilisateur' (ID: 140803)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.02558278851211071
    2. 'n' → logprob: -3.775582790374756
    3. ' user' → logprob: -6.150582790374756
    4. ' ' → logprob: -9.650582313537598
    5. 'user' → logprob: -9.900582313537598
    6. '   ' → logprob: -11.275582313537598
    7. ' is' → logprob: -11.400582313537598
    8. ' not' → logprob: -11.650582313537598
    9. ' ' → logprob: -11.775582313537598
    10. '(n' → logprob: -11.775582313537598

Token 282: ' entre' (ID: 3853)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.4423409402370453
    2. ' >=' → logprob: -1.9423409700393677
    3. ' ==' → logprob: -2.317340850830078
    4. '>' → logprob: -2.442340850830078
    5. '>=' → logprob: -4.192340850830078
    6. '==' → logprob: -4.567340850830078
    7. ' n' → logprob: -7.192340850830078
    8. ' !=' → logprob: -7.442340850830078
    9. ' <' → logprob: -7.817340850830078
    10. ' <=' → logprob: -7.817340850830078

Token 283: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12076468765735626
    2. ' n' → logprob: -2.24576473236084
    3. '1' → logprob: -4.99576473236084
    4. ' ' → logprob: -7.37076473236084
    5. '4' → logprob: -8.24576473236084
    6. '0' → logprob: -9.24576473236084
    7. '(n' → logprob: -9.99576473236084
    8. 'not' → logprob: -10.49576473236084
    9. '6' → logprob: -10.87076473236084
    10. '3' → logprob: -10.87076473236084

Token 284: '7' (ID: 22)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.037206828594207764
    2. '1' → logprob: -3.5372068881988525
    3. '7' → logprob: -5.162206649780273
    4. ' ' → logprob: -7.412206649780273
    5. 'n' → logprob: -7.412206649780273
    6. '6' → logprob: -7.912206649780273
    7. '3' → logprob: -10.037206649780273
    8. '10' → logprob: -10.162206649780273
    9. '2' → logprob: -11.287206649780273
    10. '0' → logprob: -11.912206649780273

Token 285: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0028218738734722137
    2. ':
' → logprob: -5.877821922302246
    3. '   ' → logprob: -11.127821922302246
    4. ',' → logprob: -14.127821922302246
    5. 'if' → logprob: -14.502821922302246
    6. ' :' → logprob: -14.752821922302246
    7. 'print' → logprob: -15.627821922302246
    8. ':

' → logprob: -15.877821922302246
    9. 'n' → logprob: -16.62782096862793
    10. '=' → logprob: -17.25282096862793

Token 286: ' on' (ID: 402)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5591225624084473
    2. '   ' → logprob: -1.5591225624084473
    3. 'print' → logprob: -1.5591225624084473
    4. ' for' → logprob: -5.309122562408447
    5. 'for' → logprob: -6.559122562408447
    6. '    ' → logprob: -8.309122085571289
    7. ' lines' → logprob: -8.684122085571289
    8. '    
' → logprob: -8.684122085571289
    9. ' n' → logprob: -8.809122085571289
    10. '
' → logprob: -9.184122085571289

Token 287: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2893582582473755
    2. ' print' → logprob: -1.6643582582473755
    3. ':' → logprob: -3.664358139038086
    4. '   ' → logprob: -3.664358139038086
    5. ':
' → logprob: -5.164358139038086
    6. ' :' → logprob: -6.539358139038086
    7. ' ' → logprob: -6.789358139038086
    8. 'if' → logprob: -7.539358139038086
    9. '  ' → logprob: -8.039358139038086
    10. ' :
' → logprob: -8.039358139038086

Token 288: ' le' (ID: 505)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.03112044371664524
    2. '(' → logprob: -3.656120538711548
    3. '(
' → logprob: -5.781120300292969
    4. '"' → logprob: -7.656120300292969
    5. '(a' → logprob: -7.781120300292969
    6. '('' → logprob: -8.281120300292969
    7. '"a' → logprob: -8.531120300292969
    8. 'a' → logprob: -8.906120300292969
    9. '("""' → logprob: -8.906120300292969
    10. '("
' → logprob: -10.906120300292969

Token 289: ' motif' (ID: 72753)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.272617906332016
    2. '(' → logprob: -2.272617816925049
    3. '"' → logprob: -2.647617816925049
    4. 'mot' → logprob: -4.147617816925049
    5. '(
' → logprob: -4.397617816925049
    6. 'pattern' → logprob: -4.772617816925049
    7. '"a' → logprob: -4.772617816925049
    8. 'a' → logprob: -5.272617816925049
    9. '(a' → logprob: -5.397617816925049
    10. '('' → logprob: -6.272617816925049

Token 290: ' adapté' (ID: 102650)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.3331238031387329
    2. '(' → logprob: -2.0831236839294434
    3. '"' → logprob: -2.8331236839294434
    4. '(
' → logprob: -2.9581236839294434
    5. 'a' → logprob: -3.7081236839294434
    6. '[' → logprob: -4.458123683929443
    7. '"a' → logprob: -5.833123683929443
    8. '[
' → logprob: -6.083123683929443
    9. 'for' → logprob: -6.583123683929443
    10. '   ' → logprob: -6.958123683929443

Token 291: ' à' (ID: 1221)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.07931791245937347
    2. '(' → logprob: -2.704317808151245
    3. '(
' → logprob: -4.954318046569824
    4. '"' → logprob: -7.329318046569824
    5. 'for' → logprob: -7.329318046569824
    6. 'n' → logprob: -8.454318046569824
    7. '   ' → logprob: -8.704318046569824
    8. '("
' → logprob: -8.704318046569824
    9. 'if' → logprob: -9.079318046569824
    10. '("""' → logprob: -9.454318046569824

Token 292: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.6918607354164124
    2. 'un' → logprob: -1.0668606758117676
    3. 'n' → logprob: -2.6918606758117676
    4. '7' → logprob: -3.3168606758117676
    5. '"' → logprob: -3.5668606758117676
    6. ' n' → logprob: -4.316860675811768
    7. ' ' → logprob: -5.441860675811768
    8. 'print' → logprob: -6.691860675811768
    9. 'a' → logprob: -6.941860675811768
    10. '(n' → logprob: -7.441860675811768

Token 293: ' carré' (ID: 191546)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9372603297233582
    2. ' carré' → logprob: -1.187260389328003
    3. 'car' → logprob: -1.312260389328003
    4. ' carre' → logprob: -5.187260150909424
    5. 'square' → logprob: -5.187260150909424
    6. ' square' → logprob: -5.437260150909424
    7. 'cube' → logprob: -5.562260150909424
    8. ' ' → logprob: -5.687260150909424
    9. ' carr' → logprob: -5.812260150909424
    10. '"' → logprob: -6.437260150909424

Token 294: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8741539120674133
    2. '[' → logprob: -1.2491538524627686
    3. '(
' → logprob: -2.8741538524627686
    4. '(' → logprob: -3.2491538524627686
    5. '[
' → logprob: -3.3741538524627686
    6. '("' → logprob: -3.6241538524627686
    7. 'n' → logprob: -3.9991538524627686
    8. '7' → logprob: -4.124154090881348
    9. 'for' → logprob: -4.249154090881348
    10. ' ' → logprob: -4.249154090881348

Token 295: ' taille' (ID: 41644)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.5613019466400146
    2. '7' → logprob: -1.0613019466400146
    3. ' taille' → logprob: -2.9363019466400146
    4. 'n' → logprob: -3.9363019466400146
    5. 'size' → logprob: -5.311302185058594
    6. ' ' → logprob: -5.936302185058594
    7. ' n' → logprob: -6.561302185058594
    8. 'ta' → logprob: -7.561302185058594
    9. ' size' → logprob: -7.561302185058594
    10. 't' → logprob: -8.186302185058594

Token 296: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.002555211540311575
    2. ' ' → logprob: -6.0025553703308105
    3. 'n' → logprob: -10.127554893493652
    4. '```' → logprob: -10.752554893493652
    5. ' n' → logprob: -11.127554893493652
    6. ' ' → logprob: -15.065054893493652
    7. '``' → logprob: -15.065054893493652
    8. '   ' → logprob: -15.190054893493652
    9. '(n' → logprob: -15.440054893493652
    10. '...' → logprob: -15.690054893493652

Token 297: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00010998018842656165
    2. '```' → logprob: -9.875109672546387
    3. 'n' → logprob: -10.125109672546387
    4. ' ' → logprob: -11.250109672546387
    5. '`' → logprob: -14.125109672546387
    6. '   ' → logprob: -14.312609672546387
    7. '``' → logprob: -14.437609672546387
    8. '5' → logprob: -14.937609672546387
    9. '"' → logprob: -15.187609672546387
    10. ' n' → logprob: -15.812609672546387

Token 298: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16689257323741913
    2. ':
' → logprob: -1.9168925285339355
    3. '   ' → logprob: -5.0418925285339355
    4. 'print' → logprob: -9.041893005371094
    5. '```' → logprob: -10.166893005371094
    6. 'if' → logprob: -11.541893005371094
    7. 'n' → logprob: -12.416893005371094
    8. ':

' → logprob: -12.666893005371094
    9. ' :' → logprob: -13.416893005371094
    10. ',' → logprob: -13.541893005371094

Token 299: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004562943649943918
    2. ':' → logprob: -7.7504563331604
    3. '<|end|>' → logprob: -12.000455856323242
    4. 'print' → logprob: -12.500455856323242
    5. '```' → logprob: -12.750455856323242
    6. '  ' → logprob: -12.750455856323242
    7. ':
' → logprob: -13.125455856323242
    8. 'n' → logprob: -13.375455856323242
    9. '#' → logprob: -13.625455856323242
    10. '    
' → logprob: -13.875455856323242

Token 300: ' arrêt' (ID: 77403)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04431002214550972
    2. ' print' → logprob: -3.1693100929260254
    3. '   ' → logprob: -6.669310092926025
    4. '```' → logprob: -11.169309616088867
    5. ' ' → logprob: -12.294309616088867
    6. '.print' → logprob: -12.794309616088867
    7. '  ' → logprob: -12.794309616088867
    8. '	print' → logprob: -12.794309616088867
    9. '
' → logprob: -12.794309616088867
    10. ':
' → logprob: -13.794309616088867

Token 301: ' du' (ID: 1462)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005530327325686812
    2. '()
' → logprob: -8.250553131103516
    3. '(' → logprob: -8.625553131103516
    4. '   ' → logprob: -9.375553131103516
    5. 'if' → logprob: -11.875553131103516
    6. '(
' → logprob: -12.375553131103516
    7. '():' → logprob: -12.500553131103516
    8. 'n' → logprob: -13.125553131103516
    9. '():
' → logprob: -13.375553131103516
    10. ':' → logprob: -13.500553131103516

Token 302: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.25544726848602295
    2. 'program' → logprob: -1.505447268486023
    3. ' programme' → logprob: -6.1304473876953125
    4. 'print' → logprob: -7.7554473876953125
    5. '7' → logprob: -8.380447387695312
    6. 'n' → logprob: -8.505447387695312
    7. ' program' → logprob: -8.755447387695312
    8. 'programm' → logprob: -9.130447387695312
    9. 'prog' → logprob: -9.880447387695312
    10. ' n' → logprob: -10.005447387695312

Token 303: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0010120879160240293
    2. ':' → logprob: -7.001012325286865
    3. ':
' → logprob: -9.751011848449707
    4. 'print' → logprob: -10.751011848449707
    5. '```' → logprob: -11.376011848449707
    6. ' if' → logprob: -12.001011848449707
    7. '   ' → logprob: -13.126011848449707
    8. '
' → logprob: -14.501011848449707
    9. 'n' → logprob: -15.376011848449707
    10. '[' → logprob: -15.626011848449707

Token 304: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0921942703134846e-05
    2. '```' → logprob: -11.87501049041748
    3. 'print' → logprob: -13.12501049041748
    4. ' if' → logprob: -13.37501049041748
    5. '   ' → logprob: -15.00001049041748
    6. '``' → logprob: -17.750011444091797
    7. ':' → logprob: -18.000011444091797
    8. '
' → logprob: -18.250011444091797
    9. '[' → logprob: -18.625011444091797
    10. '#' → logprob: -19.500011444091797

Token 305: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.17974591255187988
    2. 'n' → logprob: -1.8047459125518799
    3. '	n' → logprob: -14.6797456741333
    4. ' ' → logprob: -14.6797456741333
    5. '#' → logprob: -15.8047456741333
    6. ' ' → logprob: -16.304746627807617
    7. '_n' → logprob: -16.804746627807617
    8. '(n' → logprob: -16.929746627807617
    9. '```' → logprob: -17.054746627807617
    10. '\' → logprob: -17.117246627807617

Token 306: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.005929982289671898
    2. '==' → logprob: -5.130929946899414
    3. ' ' → logprob: -14.630929946899414
    4. ' =' → logprob: -14.630929946899414
    5. ' ' → logprob: -15.380929946899414
    6. '=' → logprob: -15.505929946899414
    7. ')' → logprob: -18.130929946899414
    8. ' ===' → logprob: -18.130929946899414
    9. ' ==
' → logprob: -18.505929946899414
    10. ')==' → logprob: -18.630929946899414

Token 307: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.02975141443312168
    2. ' ' → logprob: -3.5297513008117676
    3. '4' → logprob: -14.904751777648926
    4. '```' → logprob: -15.904751777648926
    5. ' ' → logprob: -16.02975082397461
    6. '6' → logprob: -16.59225082397461
    7. '1' → logprob: -16.71725082397461
    8. '  ' → logprob: -17.15475082397461
    9. '5' → logprob: -17.27975082397461
    10. '   ' → logprob: -17.59225082397461

Token 308: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00017970333283301443
    2. ' ' → logprob: -8.625179290771484
    3. '   ' → logprob: -16.937679290771484
    4. '```' → logprob: -17.000179290771484
    5. '  ' → logprob: -17.625179290771484
    6. '７' → logprob: -17.812679290771484
    7. ' ' → logprob: -18.437679290771484
    8. '4' → logprob: -18.437679290771484
    9. '۷' → logprob: -18.625179290771484
    10. '৭' → logprob: -18.812679290771484

Token 309: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02978774718940258
    2. ':
' → logprob: -3.52978777885437
    3. '   ' → logprob: -10.27978801727295
    4. ':

' → logprob: -14.02978801727295
    5. ' :' → logprob: -14.15478801727295
    6. 'print' → logprob: -14.90478801727295
    7. '=' → logprob: -14.90478801727295
    8. ':
' → logprob: -15.90478801727295
    9. '):
' → logprob: -15.90478801727295
    10. ' :
' → logprob: -15.90478801727295

Token 310: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011253333650529385
    2. 'print' → logprob: -7.001125335693359
    3. ':' → logprob: -9.00112533569336
    4. ' print' → logprob: -9.50112533569336
    5. '    
' → logprob: -12.37612533569336
    6. ':
' → logprob: -12.75112533569336
    7. '[' → logprob: -13.25112533569336
    8. '```' → logprob: -13.50112533569336
    9. '   ' → logprob: -13.62612533569336
    10. '    ' → logprob: -14.25112533569336

Token 311: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00022594700567424297
    2. ' print' → logprob: -8.500226020812988
    3. 'for' → logprob: -11.000226020812988
    4. '   ' → logprob: -13.000226020812988
    5. 'lines' → logprob: -13.000226020812988
    6. 'prints' → logprob: -15.375226020812988
    7. 'pattern' → logprob: -15.625226020812988
    8. ' for' → logprob: -15.875226020812988
    9. '#' → logprob: -16.125225067138672
    10. '[' → logprob: -16.500225067138672

Token 312: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.018832789734005928
    2. '(' → logprob: -4.268832683563232
    3. '(
' → logprob: -5.393832683563232
    4. '('' → logprob: -9.26883316040039
    5. '("""' → logprob: -11.64383316040039
    6. '([' → logprob: -13.01883316040039
    7. '(

' → logprob: -13.64383316040039
    8. '([
' → logprob: -13.76883316040039
    9. '(["' → logprob: -14.01883316040039
    10. '("("' → logprob: -14.01883316040039

Token 313: '..' (ID: 485)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.34371867775917053
    2. 'aa' → logprob: -2.2187187671661377
    3. 'aaaa' → logprob: -3.2187187671661377
    4. '"' → logprob: -3.3437187671661377
    5. 'aaa' → logprob: -3.5937187671661377
    6. 'abb' → logprob: -3.8437187671661377
    7. 'aac' → logprob: -4.218718528747559
    8. 'abc' → logprob: -5.343718528747559
    9. '"a' → logprob: -5.593718528747559
    10. 'abba' → logprob: -5.968718528747559

Token 314: 'abc' (ID: 26682)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5621574521064758
    2. '..' → logprob: -1.062157392501831
    3. 'aa' → logprob: -3.312157392501831
    4. '...' → logprob: -3.562157392501831
    5. 'aac' → logprob: -5.93715763092041
    6. 'aaa' → logprob: -6.18715763092041
    7. 'abb' → logprob: -6.56215763092041
    8. '....' → logprob: -6.68715763092041
    9. 'abc' → logprob: -6.68715763092041
    10. '.' → logprob: -6.68715763092041

Token 315: '..' (ID: 485)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '",' → logprob: -0.6051247119903564
    2. '")' → logprob: -0.9801247119903564
    3. 'def' → logprob: -3.3551247119903564
    4. '")
' → logprob: -4.105124473571777
    5. 'de' → logprob: -5.355124473571777
    6. '"' → logprob: -5.480124473571777
    7. ' ' → logprob: -5.480124473571777
    8. 'c' → logprob: -5.480124473571777
    9. '","' → logprob: -6.355124473571777
    10. 'a' → logprob: -6.730124473571777

Token 316: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.04335927590727806
    2. '")
' → logprob: -3.1683592796325684
    3. 'a' → logprob: -8.91835880279541
    4. '"' → logprob: -9.04335880279541
    5. 'def' → logprob: -10.91835880279541
    6. '")
' → logprob: -11.16835880279541
    7. '",' → logprob: -11.16835880279541
    8. ')' → logprob: -11.91835880279541
    9. '.")' → logprob: -12.04335880279541
    10. '")

' → logprob: -12.16835880279541

Token 317: '             ' (ID: 1698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 318: ' #' (ID: 1069)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2299267053604126
    2. 'print' → logprob: -1.2299267053604126
    3. ')' → logprob: -1.4799267053604126
    4. '   ' → logprob: -2.479926586151123
    5. '\n' → logprob: -3.604926586151123
    6. '
' → logprob: -3.979926586151123
    7. '")' → logprob: -4.479926586151123
    8. ',
' → logprob: -4.604926586151123
    9. ')
' → logprob: -4.604926586151123
    10. '<|end|>' → logprob: -4.729926586151123

Token 319: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001490716531407088
    2. '..' → logprob: -10.00014877319336
    3. '...' → logprob: -10.12514877319336
    4. ' print' → logprob: -10.37514877319336
    5. '   ' → logprob: -10.75014877319336
    6. '.' → logprob: -12.25014877319336
    7. '  ' → logprob: -13.62514877319336
    8. ' ' → logprob: -13.87514877319336
    9. 'for' → logprob: -14.00014877319336
    10. '.print' → logprob: -14.62514877319336

Token 320: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.004943170119076967
    2. 'print' → logprob: -6.254943370819092
    3. 'lace' → logprob: -6.504943370819092
    4. 'ace' → logprob: -7.379943370819092
    5. 'ice' → logprob: -8.504942893981934
    6. 'ichage' → logprob: -9.004942893981934
    7. 'raise' → logprob: -9.129942893981934
    8. 'icher' → logprob: -9.379942893981934
    9. 'aise' → logprob: -10.254942893981934
    10. '#' → logprob: -10.254942893981934

Token 321: ' la' (ID: 557)
  Prédit: '"..'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"..' → logprob: -0.24858306348323822
    2. '..' → logprob: -1.8735830783843994
    3. '"' → logprob: -2.8735830783843994
    4. '".' → logprob: -6.12358283996582
    5. '"a' → logprob: -6.62358283996582
    6. 'a' → logprob: -6.87358283996582
    7. '"...' → logprob: -6.87358283996582
    8. ' "..' → logprob: -7.12358283996582
    9. 'abc' → logprob: -7.12358283996582
    10. '...' → logprob: -7.49858283996582

Token 322: ' première' (ID: 23423)
  Prédit: '..'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '..' → logprob: -0.10385657846927643
    2. 'a' → logprob: -2.8538565635681152
    3. '...' → logprob: -4.478856563568115
    4. 'abc' → logprob: -5.228856563568115
    5. '.' → logprob: -5.728856563568115
    6. 'first' → logprob: -5.853856563568115
    7. '"..' → logprob: -5.853856563568115
    8. 'print' → logprob: -5.978856563568115
    9. '"' → logprob: -6.103856563568115
    10. 'abcdef' → logprob: -6.353856563568115

Token 323: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.3035220801830292
    2. 'ligne' → logprob: -1.6785221099853516
    3. ' line' → logprob: -3.0535221099853516
    4. 'line' → logprob: -4.178522109985352
    5. '"' → logprob: -5.428522109985352
    6. ')' → logprob: -5.678522109985352
    7. ' ' → logprob: -6.178522109985352
    8. ' )' → logprob: -7.303522109985352
    9. 'l' → logprob: -7.803522109985352
    10. 'print' → logprob: -7.803522109985352

Token 324: ' du' (ID: 1462)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1203430891036987
    2. '   ' → logprob: -1.2453430891036987
    3. '<|end|>' → logprob: -1.8703430891036987
    4. '")' → logprob: -2.2453432083129883
    5. 'print' → logprob: -2.3703432083129883
    6. '()' → logprob: -3.9953432083129883
    7. 'a' → logprob: -5.870343208312988
    8. '
' → logprob: -6.370343208312988
    9. '...' → logprob: -6.745343208312988
    10. '\n' → logprob: -6.870343208312988

Token 325: ' motif' (ID: 72753)
  Prédit: 'mot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mot' → logprob: -0.9165193438529968
    2. 'pattern' → logprob: -1.6665194034576416
    3. 'print' → logprob: -1.7915194034576416
    4. 'pat' → logprob: -2.4165194034576416
    5. '..' → logprob: -2.9165194034576416
    6. '"' → logprob: -3.7915194034576416
    7. '#' → logprob: -4.0415191650390625
    8. 'code' → logprob: -4.0415191650390625
    9. 'p' → logprob: -4.2915191650390625
    10. 'a' → logprob: -5.2915191650390625

Token 326: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18554121255874634
    2. '<|end|>' → logprob: -1.9355411529541016
    3. ')' → logprob: -4.060541152954102
    4. '\n' → logprob: -5.935541152954102
    5. 'print' → logprob: -6.685541152954102
    6. '")' → logprob: -7.310541152954102
    7. '
' → logprob: -7.435541152954102
    8. '\' → logprob: -7.810541152954102
    9. '    
' → logprob: -8.060541152954102
    10. '...' → logprob: -8.185541152954102

Token 327: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02462879568338394
    2. '..' → logprob: -4.899628639221191
    3. ' n' → logprob: -5.524628639221191
    4. '7' → logprob: -5.774628639221191
    5. 'print' → logprob: -5.899628639221191
    6. '"' → logprob: -6.149628639221191
    7. '   ' → logprob: -6.774628639221191
    8. 'if' → logprob: -6.899628639221191
    9. '#' → logprob: -7.524628639221191
    10. '"..' → logprob: -7.524628639221191

Token 328: ' =' (ID: 314)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.36707672476768494
    2. ' =' → logprob: -1.6170767545700073
    3. '=' → logprob: -2.8670766353607178
    4. '==' → logprob: -2.9920766353607178
    5. ')' → logprob: -6.492076873779297
    6. '  ' → logprob: -9.867076873779297
    7. '   ' → logprob: -10.242076873779297
    8. ' ==
' → logprob: -10.992076873779297
    9. ' ' → logprob: -11.492076873779297
    10. '[' → logprob: -11.617076873779297

Token 329: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0004338877333793789
    2. ' ' → logprob: -7.750433921813965
    3. '"' → logprob: -14.187933921813965
    4. '   ' → logprob: -14.500433921813965
    5. '```' → logprob: -14.687933921813965
    6. 'n' → logprob: -15.250433921813965
    7. '  ' → logprob: -15.375433921813965
    8. ' ' → logprob: -15.750433921813965
    9. '...' → logprob: -16.25043296813965
    10. '７' → logprob: -16.62543296813965

Token 330: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.875003814697266
    3. '```' → logprob: -15.250003814697266
    4. '3' → logprob: -15.625003814697266
    5. '   ' → logprob: -15.875003814697266
    6. '...' → logprob: -16.250003814697266
    7. '1' → logprob: -16.375003814697266
    8. '"' → logprob: -16.500003814697266
    9. '..' → logprob: -16.937503814697266
    10. 'n' → logprob: -17.062503814697266

Token 331: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21162761747837067
    2. '<|end|>' → logprob: -1.8366276025772095
    3. ')' → logprob: -4.08662748336792
    4. 'print' → logprob: -4.46162748336792
    5. '")' → logprob: -6.96162748336792
    6. '    
' → logprob: -8.336627960205078
    7. '  ' → logprob: -8.336627960205078
    8. '
' → logprob: -8.461627960205078
    9. 'n' → logprob: -8.461627960205078
    10. ')
' → logprob: -8.711627960205078

Token 332: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008633834309875965
    2. 'print' → logprob: -4.758633613586426
    3. ' print' → logprob: -12.133633613586426
    4. '    
' → logprob: -13.383633613586426
    5. '       ' → logprob: -13.508633613586426
    6. '    ' → logprob: -13.633633613586426
    7. '   ' → logprob: -13.633633613586426
    8. '<|end|>' → logprob: -13.633633613586426
    9. ' ' → logprob: -13.758633613586426
    10. '  ' → logprob: -13.758633613586426

Token 333: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.07894101738929749
    2. '   ' → logprob: -2.5789411067962646
    3. ' print' → logprob: -10.203941345214844
    4. '"' → logprob: -12.078941345214844
    5. '	print' → logprob: -13.328941345214844
    6. 'for' → logprob: -13.828941345214844
    7. ' ' → logprob: -13.953941345214844
    8. '  ' → logprob: -14.328941345214844
    9. '    
' → logprob: -14.453941345214844
    10. '```' → logprob: -14.578941345214844

Token 334: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.02354767732322216
    2. '(".' → logprob: -3.773547649383545
    3. '(' → logprob: -8.398548126220703
    4. '("."' → logprob: -10.523548126220703
    5. '("#' → logprob: -10.773548126220703
    6. '("(' → logprob: -11.523548126220703
    7. '("_' → logprob: -12.773548126220703
    8. '(":' → logprob: -13.273548126220703
    9. '(",' → logprob: -13.398548126220703
    10. '("-' → logprob: -13.523548126220703

Token 335: '..' (ID: 485)
  Prédit: '".'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '".' → logprob: -1.0961384773254395
    2. '.' → logprob: -1.2211384773254395
    3. '..' → logprob: -1.8461384773254395
    4. '.ab' → logprob: -2.5961384773254395
    5. '.a' → logprob: -2.9711384773254395
    6. '"..' → logprob: -3.2211384773254395
    7. '.b' → logprob: -4.8461384773254395
    8. '"' → logprob: -5.0961384773254395
    9. 'a' → logprob: -5.3461384773254395
    10. '.de' → logprob: -5.7211384773254395

Token 336: 'abc' (ID: 26682)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2313164621591568
    2. 'de' → logprob: -2.856316566467285
    3. 'abc' → logprob: -2.856316566467285
    4. 'a' → logprob: -3.606316566467285
    5. 'c' → logprob: -4.731316566467285
    6. 'b' → logprob: -4.856316566467285
    7. '..' → logprob: -5.106316566467285
    8. 'ade' → logprob: -5.106316566467285
    9. 'abb' → logprob: -5.231316566467285
    10. '.' → logprob: -5.231316566467285

Token 337: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.01420722994953394
    2. '")' → logprob: -4.889207363128662
    3. '.")' → logprob: -5.764207363128662
    4. '...' → logprob: -6.389207363128662
    5. 'cc' → logprob: -8.014206886291504
    6. ' ' → logprob: -8.139206886291504
    7. 'dd' → logprob: -8.139206886291504
    8. 'def' → logprob: -9.014206886291504
    9. 'abc' → logprob: -9.014206886291504
    10. 'd' → logprob: -9.139206886291504

Token 338: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0024365431163460016
    2. '")
' → logprob: -6.377436637878418
    3. '   ' → logprob: -7.377436637878418
    4. ' ' → logprob: -10.877436637878418
    5. ' ")' → logprob: -10.877436637878418
    6. ')' → logprob: -11.127436637878418
    7. '  ' → logprob: -11.627436637878418
    8. '...' → logprob: -11.752436637878418
    9. '"' → logprob: -11.877436637878418
    10. '.")' → logprob: -12.127436637878418

Token 339: '             ' (ID: 1698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014416613848879933
    2. '<|end|>' → logprob: -7.126441478729248
    3. '  ' → logprob: -8.501441955566406
    4. ' ' → logprob: -8.501441955566406
    5. '    ' → logprob: -9.751441955566406
    6. ')' → logprob: -9.751441955566406
    7. '    
' → logprob: -10.376441955566406
    8. 'print' → logprob: -10.501441955566406
    9. '
' → logprob: -10.876441955566406
    10. '  
' → logprob: -12.251441955566406

Token 340: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01347818598151207
    2. '<|end|>' → logprob: -5.2634782791137695
    3. 'print' → logprob: -6.0134782791137695
    4. '
' → logprob: -6.2634782791137695
    5. ')' → logprob: -6.3884782791137695
    6. '  ' → logprob: -7.5134782791137695
    7. ' ' → logprob: -7.5134782791137695
    8. '#' (adapté à ' #') → logprob: -8.01347827911377
    9. '    
' → logprob: -8.38847827911377
    10. 'if' → logprob: -8.88847827911377

Token 341: ' Deux' (ID: 92086)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.031756818294525146
    2. '..' → logprob: -3.65675687789917
    3. ' print' → logprob: -6.28175687789917
    4. ' ' → logprob: -6.40675687789917
    5. '   ' → logprob: -6.53175687789917
    6. '.' → logprob: -8.406756401062012
    7. ' ' → logprob: -9.406756401062012
    8. ' ..' → logprob: -10.031756401062012
    9. '  ' → logprob: -10.156756401062012
    10. '...' → logprob: -10.656756401062012

Token 342: 'ième' (ID: 41126)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.43549230694770813
    2. 'print' → logprob: -1.3104922771453857
    3. '   ' → logprob: -3.3104922771453857
    4. 'spaces' → logprob: -4.185492515563965
    5. ' ' → logprob: -4.810492515563965
    6. ' espaces' → logprob: -4.935492515563965
    7. '  ' → logprob: -5.185492515563965
    8. 'esp' → logprob: -5.560492515563965
    9. ' spaces' → logprob: -6.185492515563965
    10. '#' → logprob: -6.435492515563965

Token 343: ' ligne' (ID: 19583)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4320167601108551
    2. ' line' → logprob: -1.8070167303085327
    3. ' print' → logprob: -2.0570168495178223
    4. 'line' → logprob: -3.3070168495178223
    5. ')' → logprob: -5.432016849517822
    6. '
' → logprob: -5.682016849517822
    7. '\n' → logprob: -5.807016849517822
    8. ' ' → logprob: -6.307016849517822
    9. '   ' → logprob: -6.307016849517822
    10. 'n' → logprob: -6.932016849517822

Token 344: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040368761867284775
    2. '<|end|>' → logprob: -3.2903687953948975
    3. ')' → logprob: -6.915368556976318
    4. '
' → logprob: -7.540368556976318
    5. '<|end|>' → logprob: -8.540369033813477
    6. '  ' → logprob: -8.915369033813477
    7. '#' → logprob: -8.915369033813477
    8. ' ' → logprob: -9.415369033813477
    9. '    
' → logprob: -9.415369033813477
    10. '  
' → logprob: -10.290369033813477

Token 345: 'ident' (ID: 2477)
  Prédit: '..'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '..' → logprob: -0.7094464302062988
    2. '   ' → logprob: -0.8344464302062988
    3. ')' → logprob: -2.959446430206299
    4. '")' → logprob: -5.584446430206299
    5. ' ' → logprob: -5.834446430206299
    6. '"' → logprob: -6.084446430206299
    7. ')..' → logprob: -6.084446430206299
    8. '..)' → logprob: -6.084446430206299
    9. '...' → logprob: -6.209446430206299
    10. '  ' → logprob: -6.334446430206299

Token 346: 'ique' (ID: 2222)
  Prédit: 'ique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ique' → logprob: -0.007735700346529484
    2. 'ical' → logprob: -5.007735729217529
    3. 'iques' → logprob: -8.007735252380371
    4. 'ic' → logprob: -9.257735252380371
    5. 'que' → logprob: -9.382735252380371
    6. 'e' → logprob: -9.507735252380371
    7. '   ' → logprob: -9.632735252380371
    8. 'iqu' → logprob: -9.757735252380371
    9. '...' → logprob: -9.882735252380371
    10. 'iq' → logprob: -10.007735252380371

Token 347: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012633607722818851
    2. '")' → logprob: -4.637633800506592
    3. '   ' → logprob: -6.012633800506592
    4. ')
' → logprob: -9.137633323669434
    5. ' )' → logprob: -10.012633323669434
    6. ' ' → logprob: -10.262633323669434
    7. '...' → logprob: -10.262633323669434
    8. 'n' → logprob: -10.387633323669434
    9. '  ' → logprob: -10.637633323669434
    10. '```' → logprob: -10.762633323669434

Token 348: ' la' (ID: 557)
  Prédit: '..'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.7739458680152893
    2. '   ' → logprob: -1.0239458084106445
    3. ' ' → logprob: -2.1489458084106445
    4. '"..' → logprob: -3.8989458084106445
    5. ' la' → logprob: -4.2739458084106445
    6. '"' → logprob: -4.6489458084106445
    7. 'la' → logprob: -6.0239458084106445
    8. ' ..' → logprob: -6.1489458084106445
    9. '...' → logprob: -6.1489458084106445
    10. '  ' → logprob: -6.2739458084106445

Token 349: ' première' (ID: 23423)
  Prédit: '..'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '..' → logprob: -0.014017056673765182
    2. 'de' → logprob: -4.514017105102539
    3. '...' → logprob: -7.139017105102539
    4. '#' → logprob: -7.389017105102539
    5. 'prem' → logprob: -7.889017105102539
    6. 'print' → logprob: -8.139017105102539
    7. '..)' → logprob: -8.139017105102539
    8. '"..' → logprob: -9.139017105102539
    9. ' ' → logprob: -9.389017105102539
    10. '.' → logprob: -10.264017105102539

Token 350: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1302398145198822
    2. '   ' → logprob: -2.380239725112915
    3. '")' → logprob: -3.755239725112915
    4. ')
' → logprob: -5.630239963531494
    5. '\n' → logprob: -6.255239963531494
    6. '#' → logprob: -9.130239486694336
    7. '
' → logprob: -9.505239486694336
    8. '```' → logprob: -9.505239486694336
    9. '\' → logprob: -9.755239486694336
    10. 'print' → logprob: -9.755239486694336

Token 351: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00033272415748797357
    2. 'print' → logprob: -8.250332832336426
    3. '    
' → logprob: -10.625332832336426
    4. '<|end|>' → logprob: -11.000332832336426
    5. ')' → logprob: -11.125332832336426
    6. ' ' → logprob: -12.250332832336426
    7. '```' → logprob: -12.875332832336426
    8. '  ' → logprob: -13.125332832336426
    9. '.' → logprob: -13.625332832336426
    10. '    ' → logprob: -13.875332832336426

Token 352: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.31539109349250793
    2. '   ' → logprob: -1.3153910636901855
    3. ' print' → logprob: -6.1903910636901855
    4. '```' → logprob: -10.315391540527344
    5. '	print' → logprob: -11.815391540527344
    6. 'for' → logprob: -11.815391540527344
    7. ' ' → logprob: -12.565391540527344
    8. '  ' → logprob: -12.690391540527344
    9. '    
' → logprob: -12.690391540527344
    10. '.print' → logprob: -13.065391540527344

Token 353: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0012405868619680405
    2. '(".' → logprob: -7.2512407302856445
    3. '(' → logprob: -7.7512407302856445
    4. '("#' → logprob: -10.001240730285645
    5. '(..' → logprob: -10.501240730285645
    6. '("."' → logprob: -11.376240730285645
    7. '"..' → logprob: -12.376240730285645
    8. '('' → logprob: -13.126240730285645
    9. ' ("' → logprob: -13.376240730285645
    10. '(
' → logprob: -13.626240730285645

Token 354: 'a' (ID: 64)
  Prédit: '"..'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"..' → logprob: -0.29450172185897827
    2. '"' → logprob: -1.794501781463623
    3. '".' → logprob: -2.669501781463623
    4. '"a' → logprob: -5.044501781463623
    5. '"...' → logprob: -5.169501781463623
    6. '..' → logprob: -5.294501781463623
    7. 'a' → logprob: -7.919501781463623
    8. '...' → logprob: -8.169501304626465
    9. 'abc' → logprob: -8.669501304626465
    10. '"d' → logprob: -8.794501304626465

Token 355: 'ax' (ID: 1362)
  Prédit: 'bb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bb' → logprob: -1.0414186716079712
    2. 'abb' → logprob: -1.1664186716079712
    3. 'bcc' → logprob: -2.5414185523986816
    4. 'a' → logprob: -2.6664185523986816
    5. 'bbc' → logprob: -2.6664185523986816
    6. 'b' → logprob: -3.2914185523986816
    7. 'bc' → logprob: -3.4164185523986816
    8. 'ab' → logprob: -4.166418552398682
    9. '..' → logprob: -4.666418552398682
    10. 'abc' → logprob: -5.041418552398682

Token 356: '..' (ID: 485)
  Prédit: 'xbb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xbb' → logprob: -0.2715131342411041
    2. 'xbc' → logprob: -2.6465132236480713
    3. 'x' → logprob: -3.0215132236480713
    4. 'bb' → logprob: -3.6465132236480713
    5. 'xcc' → logprob: -3.6465132236480713
    6. 'bcc' → logprob: -4.271512985229492
    7. 'a' → logprob: -4.396512985229492
    8. 'bbc' → logprob: -4.646512985229492
    9. 'xaa' → logprob: -4.896512985229492
    10. 'xdd' → logprob: -5.771512985229492

Token 357: 'aa' (ID: 3545)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8457485437393188
    2. 'a' → logprob: -1.3457485437393188
    3. 'aa' → logprob: -2.2207484245300293
    4. 'cc' → logprob: -2.8457484245300293
    5. 'xcc' → logprob: -3.8457484245300293
    6. 'c' → logprob: -4.095748424530029
    7. 'xaa' → logprob: -4.095748424530029
    8. 'bb' → logprob: -4.220748424530029
    9. 'dd' → logprob: -4.345748424530029
    10. 'xdd' → logprob: -4.345748424530029

Token 358: '")' (ID: 1405)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.862729012966156
    2. '")' → logprob: -0.862729012966156
    3. '..' → logprob: -2.737729072570801
    4. '.")' → logprob: -2.737729072570801
    5. '...' → logprob: -4.612729072570801
    6. 'c' → logprob: -5.112729072570801
    7. 'aa' → logprob: -5.237729072570801
    8. 'cc' → logprob: -6.862729072570801
    9. 'b' → logprob: -7.237729072570801
    10. '.' → logprob: -7.737729072570801

Token 359: '             ' (ID: 1698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09202606230974197
    2. '<|end|>' → logprob: -2.9670259952545166
    3. ')' → logprob: -3.3420259952545166
    4. '  ' → logprob: -8.217025756835938
    5. 'print' → logprob: -8.467025756835938
    6. '
' → logprob: -8.717025756835938
    7. ' ' → logprob: -8.717025756835938
    8. '")' → logprob: -9.592025756835938
    9. '<|end|>' → logprob: -9.967025756835938
    10. '#' → logprob: -10.217025756835938

Token 360: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1962936818599701
    2. ')' → logprob: -2.321293592453003
    3. '")' → logprob: -2.946293592453003
    4. '<|end|>' → logprob: -4.321293830871582
    5. ' ' → logprob: -5.071293830871582
    6. '  ' → logprob: -5.571293830871582
    7. '
' → logprob: -6.946293830871582
    8. '#' (adapté à ' #') → logprob: -7.196293830871582
    9. 'print' → logprob: -7.321293830871582
    10. '')' → logprob: -7.946293830871582

Token 361: ' Mot' (ID: 17718)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5035240054130554
    2. ' print' → logprob: -1.0035240650177002
    3. ' a' → logprob: -4.003523826599121
    4. 'a' → logprob: -5.128523826599121
    5. ' ' → logprob: -5.628523826599121
    6. '<|end|>' → logprob: -8.253523826599121
    7. ')' → logprob: -8.628523826599121
    8. ' )' → logprob: -9.003523826599121
    9. ' ' → logprob: -9.253523826599121
    10. '
' → logprob: -9.253523826599121

Token 362: 'if' (ID: 366)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9593871235847473
    2. 'print' → logprob: -1.2093870639801025
    3. '  ' → logprob: -1.5843870639801025
    4. 'a' → logprob: -2.9593870639801025
    5. ' ' → logprob: -3.4593870639801025
    6. ')' → logprob: -4.209387302398682
    7. '.' → logprob: -5.584387302398682
    8. '...' → logprob: -5.959387302398682
    9. '    ' → logprob: -6.459387302398682
    10. 'r' → logprob: -6.584387302398682

Token 363: ' particulier' (ID: 47842)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10054275393486023
    2. '<|end|>' → logprob: -2.7255427837371826
    3. ')' → logprob: -3.8505427837371826
    4. 'a' → logprob: -5.7255425453186035
    5. '  ' → logprob: -6.3505425453186035
    6. ' ' → logprob: -7.2255425453186035
    7. '")' → logprob: -7.2255425453186035
    8. '...' → logprob: -7.3505425453186035
    9. 'print' → logprob: -7.8505425453186035
    10. '<|end|>' → logprob: -7.9755425453186035

Token 364: ' à' (ID: 1221)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.647515594959259
    2. '   ' → logprob: -0.772515594959259
    3. '<|end|>' → logprob: -5.147515773773193
    4. '\n' → logprob: -5.522515773773193
    5. '    
' → logprob: -6.647515773773193
    6. ')' → logprob: -6.772515773773193
    7. '  
' → logprob: -7.522515773773193
    8. 'newline' → logprob: -7.897515773773193
    9. 'print' → logprob: -8.272515296936035
    10. ' 
' → logprob: -8.397515296936035

Token 365: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5607609152793884
    2. 'a' → logprob: -1.3107609748840332
    3. '7' → logprob: -2.560760974884033
    4. '...' → logprob: -3.685760974884033
    5. 'l' → logprob: -4.185760974884033
    6. '```' → logprob: -4.435760974884033
    7. ' ' → logprob: -4.935760974884033
    8. 'la' → logprob: -5.810760974884033
    9. '  ' → logprob: -6.060760974884033
    10. 'x' → logprob: -6.310760974884033

Token 366: ' ' (ID: 220)
  Prédit: 'tro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tro' → logprob: -0.42402204871177673
    2. 'a' → logprob: -1.7990220785140991
    3. 'third' → logprob: -3.1740219593048096
    4. 'n' → logprob: -3.1740219593048096
    5. '3' → logprob: -3.5490219593048096
    6. ' troisième' → logprob: -3.5490219593048096
    7. '...' → logprob: -4.424022197723389
    8. 'print' → logprob: -5.424022197723389
    9. 'x' → logprob: -5.424022197723389
    10. '```' → logprob: -5.549022197723389

Token 367: '3' (ID: 18)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2240123748779297
    2. 'tro' → logprob: -1.2240123748779297
    3. 'third' → logprob: -1.4740123748779297
    4. ' troisième' → logprob: -2.8490123748779297
    5. '3' → logprob: -2.9740123748779297
    6. 'n' → logprob: -3.8490123748779297
    7. '...' → logprob: -4.34901237487793
    8. 'print' → logprob: -4.47401237487793
    9. 'x' → logprob: -4.47401237487793
    10. 't' → logprob: -6.09901237487793

Token 368: 'ème' (ID: 9767)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.19254791736602783
    2. 'line' → logprob: -3.0675477981567383
    3. 'a' → logprob: -3.1925477981567383
    4. 'ligne' → logprob: -3.4425477981567383
    5. 'l' → logprob: -3.5675477981567383
    6. ' ' → logprob: -5.567547798156738
    7. ' line' → logprob: -5.817547798156738
    8. '  ' → logprob: -5.942547798156738
    9. 'e' → logprob: -6.192547798156738
    10. '   ' → logprob: -6.317547798156738

Token 369: ' ligne' (ID: 19583)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.43920037150382996
    2. 'ligne' → logprob: -1.6892004013061523
    3. 'l' → logprob: -3.0642004013061523
    4. ' ligne' → logprob: -3.0642004013061523
    5. ' line' → logprob: -3.5642004013061523
    6. ')' → logprob: -4.189200401306152
    7. '_l' → logprob: -5.064200401306152
    8. ' ' → logprob: -5.314200401306152
    9. '  
' → logprob: -5.564200401306152
    10. '<|end|>' → logprob: -5.689200401306152

Token 370: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15066157281398773
    2. '
' → logprob: -2.7756614685058594
    3. '<|end|>' → logprob: -2.7756614685058594
    4. '\n' → logprob: -4.525661468505859
    5. ')' → logprob: -6.025661468505859
    6. '    
' → logprob: -7.525661468505859
    7. '<|end|>' → logprob: -7.900661468505859
    8. 'newline' → logprob: -8.02566146850586
    9. '  ' → logprob: -9.02566146850586
    10. '  
' → logprob: -9.02566146850586

Token 371: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000284696085145697
    2. 'print' → logprob: -9.125285148620605
    3. '<|end|>' → logprob: -9.875285148620605
    4. ')' → logprob: -10.375285148620605
    5. '
' → logprob: -10.625285148620605
    6. '```' → logprob: -10.875285148620605
    7. '    
' → logprob: -11.000285148620605
    8. '\' → logprob: -11.500285148620605
    9. '\n' → logprob: -12.000285148620605
    10. '[' → logprob: -12.750285148620605

Token 372: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.07017627358436584
    2. '   ' → logprob: -2.695176362991333
    3. ' print' → logprob: -9.695176124572754
    4. '  ' → logprob: -10.195176124572754
    5. ')' → logprob: -10.570176124572754
    6. ' ' → logprob: -10.570176124572754
    7. '    
' → logprob: -10.820176124572754
    8. '
' → logprob: -11.070176124572754
    9. '<|end|>' → logprob: -11.445176124572754
    10. 'a' → logprob: -11.570176124572754

Token 373: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0032355827279388905
    2. '(".' → logprob: -6.128235816955566
    3. '(' → logprob: -7.003235816955566
    4. '("."' → logprob: -9.003235816955566
    5. '("#' → logprob: -12.378235816955566
    6. '("")' → logprob: -13.253235816955566
    7. '("_' → logprob: -13.253235816955566
    8. '('' → logprob: -13.378235816955566
    9. '("(' → logprob: -13.628235816955566
    10. '(""' → logprob: -13.878235816955566

Token 374: 'bb' (ID: 10029)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4684164524078369
    2. 'aa' → logprob: -2.218416452407837
    3. 'axx' → logprob: -2.843416452407837
    4. '"' → logprob: -2.968416452407837
    5. '..' → logprob: -3.718416452407837
    6. 'ax' → logprob: -4.343416213989258
    7. 'g' → logprob: -4.843416213989258
    8. '".' → logprob: -4.843416213989258
    9. '"a' → logprob: -4.968416213989258
    10. '"..' → logprob: -4.968416213989258

Token 375: 'x' (ID: 87)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.1290968656539917
    2. 'xx' → logprob: -1.6290968656539917
    3. 'x' → logprob: -2.0040969848632812
    4. 'bb' → logprob: -2.0040969848632812
    5. 'bcc' → logprob: -3.1290969848632812
    6. '..' → logprob: -3.2540969848632812
    7. 'cc' → logprob: -3.6290969848632812
    8. '...' → logprob: -4.129096984863281
    9. 'xbb' → logprob: -4.379096984863281
    10. 'bbb' → logprob: -4.629096984863281

Token 376: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.027718573808670044
    2. '...' → logprob: -4.402718544006348
    3. 'bb' → logprob: -4.777718544006348
    4. '.bb' → logprob: -5.527718544006348
    5. 'cc' → logprob: -7.902718544006348
    6. '.' → logprob: -8.152718544006348
    7. 'bbb' → logprob: -8.152718544006348
    8. ' ' → logprob: -8.277718544006348
    9. '....' → logprob: -8.277718544006348
    10. 'b' → logprob: -8.277718544006348

Token 377: 'bb' (ID: 10029)
  Prédit: 'bb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bb' → logprob: -0.0056337895803153515
    2. 'bbb' → logprob: -5.63063383102417
    3. 'b' → logprob: -6.63063383102417
    4. 'aa' → logprob: -8.255633354187012
    5. 'bbc' → logprob: -8.505633354187012
    6. 'bbe' → logprob: -9.505633354187012
    7. 'cc' → logprob: -10.130633354187012
    8. 'baa' → logprob: -10.380633354187012
    9. 'dd' → logprob: -11.005633354187012
    10. 'a' → logprob: -11.255633354187012

Token 378: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.011903055012226105
    2. 'a' → logprob: -5.136903285980225
    3. 'b' → logprob: -5.511903285980225
    4. 'x' → logprob: -6.886903285980225
    5. '")
' → logprob: -7.636903285980225
    6. ' ")' → logprob: -8.511902809143066
    7. ')' → logprob: -9.761902809143066
    8. 'c' → logprob: -10.386902809143066
    9. ' ' → logprob: -10.761902809143066
    10. '   ' → logprob: -10.886902809143066

Token 379: '             ' (ID: 1698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004582853522151709
    2. '<|end|>' → logprob: -5.87958288192749
    3. ')' → logprob: -7.25458288192749
    4. '
' → logprob: -8.004582405090332
    5. 'print' → logprob: -8.379582405090332
    6. ' ' → logprob: -8.879582405090332
    7. '```' → logprob: -8.879582405090332
    8. '#' → logprob: -9.254582405090332
    9. '  ' → logprob: -9.379582405090332
    10. '    
' → logprob: -11.129582405090332

Token 380: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060978736728429794
    2. 'print' → logprob: -3.185978651046753
    3. ')' → logprob: -4.685978889465332
    4. '
' → logprob: -5.685978889465332
    5. '#' (adapté à ' #') → logprob: -6.185978889465332
    6. '<|end|>' → logprob: -6.435978889465332
    7. ' ' → logprob: -7.560978889465332
    8. '  ' → logprob: -7.685978889465332
    9. '```' → logprob: -8.435978889465332
    10. '    
' → logprob: -9.185978889465332

Token 381: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009418348199687898
    2. ' print' → logprob: -7.250941753387451
    3. '   ' → logprob: -8.37594223022461
    4. ' ' → logprob: -14.37594223022461
    5. '```' → logprob: -15.00094223022461
    6. '
' → logprob: -15.75094223022461
    7. '  ' → logprob: -15.87594223022461
    8. '	print' → logprob: -16.25094223022461
    9. '#print' → logprob: -17.37594223022461
    10. 'printf' → logprob: -17.50094223022461

Token 382: '4' (ID: 19)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.537868779967539e-06
    2. '   ' → logprob: -12.375008583068848
    3. ' print' → logprob: -12.750008583068848
    4. '```' → logprob: -15.125008583068848
    5. '#' → logprob: -15.875008583068848
    6. 'bb' → logprob: -16.12500762939453
    7. 'pr' → logprob: -16.25000762939453
    8. ' ' → logprob: -16.25000762939453
    9. 'printf' → logprob: -16.25000762939453
    10. '
' → logprob: -16.25000762939453

Token 383: 'ème' (ID: 9767)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11166214942932129
    2. 'print' → logprob: -2.4866621494293213
    3. ')' → logprob: -4.486661911010742
    4. ' ' → logprob: -5.736661911010742
    5. '```' → logprob: -5.986661911010742
    6. '  ' → logprob: -6.111661911010742
    7. ' print' → logprob: -6.236661911010742
    8. '<|end|>' → logprob: -7.861661911010742
    9. '#' → logprob: -7.986661911010742
    10. '
' → logprob: -9.236661911010742

Token 384: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5500051975250244
    2. ' line' → logprob: -1.6750051975250244
    3. ')' → logprob: -1.9250051975250244
    4. ' ligne' → logprob: -2.1750051975250244
    5. ' ' → logprob: -2.3000051975250244
    6. 'line' → logprob: -2.4250051975250244
    7. 'ligne' → logprob: -2.8000051975250244
    8. '  ' → logprob: -3.9250051975250244
    9. 'print' → logprob: -3.9250051975250244
    10. '
' → logprob: -4.175004959106445

Token 385: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014262347482144833
    2. 'print' → logprob: -4.7642621994018555
    3. '```' → logprob: -5.2642621994018555
    4. '
' → logprob: -7.8892621994018555
    5. '<|end|>' → logprob: -10.389262199401855
    6. ' ' → logprob: -11.139262199401855
    7. ' print' → logprob: -11.264262199401855
    8. '``' → logprob: -11.889262199401855
    9. '  ' → logprob: -12.014262199401855
    10. '    
' → logprob: -12.139262199401855

Token 386: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0007161272224038839
    2. '   ' → logprob: -7.250716209411621
    3. ' print' → logprob: -12.250716209411621
    4. '```' → logprob: -13.625716209411621
    5. '  ' → logprob: -17.125715255737305
    6. ' ' → logprob: -17.125715255737305
    7. '	print' → logprob: -17.500715255737305
    8. '
' → logprob: -17.625715255737305
    9. '``' → logprob: -18.875715255737305
    10. '    
' → logprob: -19.125715255737305

Token 387: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0007195804500952363
    2. '(' → logprob: -7.2507195472717285
    3. '(".' → logprob: -12.000720024108887
    4. ' ("' → logprob: -13.875720024108887
    5. '("."' → logprob: -14.125720024108887
    6. '(
' → logprob: -14.625720024108887
    7. '("#' → logprob: -14.750720024108887
    8. '('' → logprob: -15.125720024108887
    9. '("")' → logprob: -15.750720024108887
    10. '()' → logprob: -16.12571907043457

Token 388: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.13121069967746735
    2. 'bb' → logprob: -2.1312108039855957
    3. '..' → logprob: -7.006210803985596
    4. 'a' → logprob: -7.006210803985596
    5. 'b' → logprob: -7.631210803985596
    6. 'xx' → logprob: -7.756210803985596
    7. 'c' → logprob: -8.131210327148438
    8. '...' → logprob: -8.756210327148438
    9. 'dd' → logprob: -8.881210327148438
    10. '"' → logprob: -9.006210327148438

Token 389: '.yy' (ID: 196757)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.098748053773306e-05
    2. 'xx' → logprob: -10.87506103515625
    3. '..' → logprob: -11.87506103515625
    4. '"x' → logprob: -12.12506103515625
    5. 'xbb' → logprob: -12.12506103515625
    6. '.' → logprob: -12.25006103515625
    7. '...' → logprob: -12.62506103515625
    8. ''x' → logprob: -13.12506103515625
    9. 'ax' → logprob: -13.25006103515625
    10. 'xbc' → logprob: -13.62506103515625

Token 390: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.5870348215103149
    2. '..' → logprob: -0.8370348215103149
    3. '")' → logprob: -5.337034702301025
    4. 'bb' → logprob: -5.712034702301025
    5. 'xx' → logprob: -7.337034702301025
    6. '.cc' → logprob: -7.337034702301025
    7. 'x' → logprob: -7.587034702301025
    8. '.")' → logprob: -7.587034702301025
    9. '...' → logprob: -8.962035179138184
    10. '..)' → logprob: -9.087035179138184

Token 391: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0005284877843223512
    2. '")
' → logprob: -7.875528335571289
    3. ')' → logprob: -9.500528335571289
    4. 'x' → logprob: -10.750528335571289
    5. ' ")' → logprob: -10.875528335571289
    6. ')")' → logprob: -11.000528335571289
    7. '"' → logprob: -12.375528335571289
    8. '.")' → logprob: -13.000528335571289
    9. '')' → logprob: -13.375528335571289
    10. '#' → logprob: -13.500528335571289

Token 392: '             ' (ID: 1698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017496729269623756
    2. '<|end|>' → logprob: -6.751749515533447
    3. 'print' → logprob: -8.126749992370605
    4. ')' → logprob: -9.126749992370605
    5. '```' → logprob: -9.376749992370605
    6. '
' → logprob: -10.376749992370605
    7. ' ' → logprob: -10.751749992370605
    8. '    
' → logprob: -11.126749992370605
    9. '#' → logprob: -11.751749992370605
    10. '  ' → logprob: -12.001749992370605

Token 393: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4323270618915558
    2. 'print' → logprob: -1.0573270320892334
    3. ')' → logprob: -6.9323272705078125
    4. '
' → logprob: -7.4323272705078125
    5. '#' (adapté à ' #') → logprob: -7.4323272705078125
    6. '```' → logprob: -7.9323272705078125
    7. ' ' → logprob: -8.057327270507812
    8. ' print' → logprob: -8.432327270507812
    9. '  ' → logprob: -8.557327270507812
    10. '    
' → logprob: -9.057327270507812

Token 394: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00928494706749916
    2. ' print' → logprob: -4.884284973144531
    3. '   ' → logprob: -7.009284973144531
    4. 'cc' → logprob: -7.509284973144531
    5. '```' → logprob: -8.884284973144531
    6. ' ' → logprob: -10.509284973144531
    7. '
' → logprob: -11.009284973144531
    8. '  ' → logprob: -12.009284973144531
    9. '#' → logprob: -12.259284973144531
    10. '(print' → logprob: -12.384284973144531

Token 395: '5' (ID: 20)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.13326199352741241
    2. 'cc' → logprob: -2.1332619190216064
    3. '5' → logprob: -6.0082621574401855
    4. '   ' → logprob: -7.0082621574401855
    5. '.cc' → logprob: -7.5082621574401855
    6. 'cccc' → logprob: -7.5082621574401855
    7. '..' → logprob: -7.8832621574401855
    8. ' ' → logprob: -8.008261680603027
    9. ' print' → logprob: -8.383261680603027
    10. '...' → logprob: -8.758261680603027

Token 396: 'ème' (ID: 9767)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.7402242422103882
    2. ')' → logprob: -1.4902242422103882
    3. 'print' → logprob: -1.4902242422103882
    4. '   ' → logprob: -2.7402243614196777
    5. '#' → logprob: -6.115224361419678
    6. '<|end|>' → logprob: -6.240224361419678
    7. '")
' → logprob: -6.615224361419678
    8. ')
' → logprob: -7.490224361419678
    9. '```' → logprob: -7.990224361419678
    10. ' print' → logprob: -8.24022388458252

Token 397: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.40436723828315735
    2. '   ' → logprob: -1.154367208480835
    3. '
' → logprob: -4.154367446899414
    4. '```' → logprob: -7.154367446899414
    5. '    
' → logprob: -8.154367446899414
    6. ' print' → logprob: -8.779367446899414
    7. '  
' → logprob: -9.154367446899414
    8. ')' → logprob: -9.404367446899414
    9. '  ' → logprob: -9.779367446899414
    10. '<|end|>' → logprob: -10.154367446899414

Token 398: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08188800513744354
    2. 'print' → logprob: -2.58188796043396
    3. '```' → logprob: -5.831888198852539
    4. ' print' → logprob: -10.206888198852539
    5. '``' → logprob: -11.331888198852539
    6. '<|end|>' → logprob: -12.206888198852539
    7. '	print' → logprob: -12.581888198852539
    8. '    
' → logprob: -14.206888198852539
    9. '
' → logprob: -14.456888198852539
    10. ' ' → logprob: -14.581888198852539

Token 399: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00038562860572710633
    2. '   ' → logprob: -7.875385761260986
    3. ' print' → logprob: -12.250385284423828
    4. '```' → logprob: -14.375385284423828
    5. ' ' → logprob: -16.500385284423828
    6. '  ' → logprob: -17.125385284423828
    7. '	print' → logprob: -17.250385284423828
    8. '
' → logprob: -18.250385284423828
    9. '``' → logprob: -18.625385284423828
    10. '    
' → logprob: -18.750385284423828

Token 400: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.006707789376378059
    2. '(' → logprob: -5.381707668304443
    3. '(".' → logprob: -6.381707668304443
    4. '(..' → logprob: -8.881708145141602
    5. '("."' → logprob: -9.631708145141602
    6. '("#' → logprob: -9.631708145141602
    7. '('' → logprob: -10.506708145141602
    8. '"' → logprob: -10.631708145141602
    9. '(cc' → logprob: -11.256708145141602
    10. 'print' → logprob: -11.756708145141602

Token 401: '..' (ID: 485)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.1883188784122467
    2. 'dd' → logprob: -2.688318967819214
    3. 'c' → logprob: -3.313318967819214
    4. '"' → logprob: -3.688318967819214
    5. '..' → logprob: -4.688318729400635
    6. 'a' → logprob: -5.188318729400635
    7. 'ddy' → logprob: -5.188318729400635
    8. 'd' → logprob: -5.938318729400635
    9. ''' → logprob: -6.250818729400635
    10. 'x' → logprob: -6.313318729400635

Token 402: 'abc' (ID: 26682)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.09555581212043762
    2. 'c' → logprob: -3.3455557823181152
    3. 'abc' → logprob: -4.595555782318115
    4. 'x' → logprob: -4.720555782318115
    5. 'yy' → logprob: -4.720555782318115
    6. '..' → logprob: -4.845555782318115
    7. 'xy' → logprob: -5.095555782318115
    8. 'xx' → logprob: -5.220555782318115
    9. '.cc' → logprob: -6.345555782318115
    10. 'xcc' → logprob: -6.595555782318115

Token 403: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -9.519893501419574e-05
    2. '...' → logprob: -9.50009536743164
    3. '")' → logprob: -12.50009536743164
    4. 'abc' → logprob: -12.62509536743164
    5. '..)' → logprob: -12.62509536743164
    6. '.")' → logprob: -12.75009536743164
    7. '.' → logprob: -13.50009536743164
    8. 'cc' → logprob: -13.75009536743164
    9. ' ' → logprob: -14.00009536743164
    10. '.."' → logprob: -14.12509536743164

Token 404: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0023914675693958998
    2. '   ' → logprob: -6.127391338348389
    3. '")
' → logprob: -9.127391815185547
    4. ')' → logprob: -9.752391815185547
    5. ' ")' → logprob: -11.002391815185547
    6. '\n' → logprob: -12.377391815185547
    7. '  ' → logprob: -12.627391815185547
    8. ' ' → logprob: -12.877391815185547
    9. '..' → logprob: -12.877391815185547
    10. '#' → logprob: -13.252391815185547

Token 405: '             ' (ID: 1698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001342903997283429
    2. '<|end|>' → logprob: -9.750134468078613
    3. 'print' → logprob: -10.375134468078613
    4. ' ' → logprob: -10.875134468078613
    5. '    
' → logprob: -12.125134468078613
    6. '  ' → logprob: -12.125134468078613
    7. ')' → logprob: -12.500134468078613
    8. '```' → logprob: -12.750134468078613
    9. '<|end|>' → logprob: -13.125134468078613
    10. '    ' → logprob: -13.250134468078613

Token 406: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07010193914175034
    2. 'print' → logprob: -2.6951019763946533
    3. ' print' → logprob: -9.695101737976074
    4. ')' → logprob: -10.820101737976074
    5. ' ' → logprob: -10.945101737976074
    6. '<|end|>' → logprob: -10.945101737976074
    7. '	print' → logprob: -11.445101737976074
    8. '```' → logprob: -11.445101737976074
    9. '#' (adapté à ' #') → logprob: -11.945101737976074
    10. '  ' → logprob: -12.070101737976074

Token 407: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00043615259346552193
    2. '   ' → logprob: -8.250435829162598
    3. ' print' → logprob: -8.750435829162598
    4. '..' → logprob: -11.625435829162598
    5. '```' → logprob: -12.625435829162598
    6. ' ' → logprob: -13.500435829162598
    7. '...' → logprob: -13.875435829162598
    8. '  ' → logprob: -14.250435829162598
    9. '	print' → logprob: -15.000435829162598
    10. '
' → logprob: -15.250435829162598

Token 408: '6' (ID: 21)
  Prédit: '..'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '..' → logprob: -0.004758342169225216
    2. 'print' → logprob: -5.379758358001709
    3. '#' → logprob: -10.12975788116455
    4. '...' → logprob: -10.75475788116455
    5. ' ..' → logprob: -10.75475788116455
    6. ' ' → logprob: -11.50475788116455
    7. '..\' → logprob: -11.50475788116455
    8. '../' → logprob: -12.50475788116455
    9. '```' → logprob: -12.50475788116455
    10. '..)' → logprob: -12.87975788116455

Token 409: 'ème' (ID: 9767)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3903323709964752
    2. '   ' → logprob: -1.1403323411941528
    3. ' print' → logprob: -7.515332221984863
    4. '    
' → logprob: -7.640332221984863
    5. '<|end|>' → logprob: -7.765332221984863
    6. '  ' → logprob: -8.015332221984863
    7. '
' → logprob: -8.265332221984863
    8. ' ' → logprob: -8.390332221984863
    9. '..' → logprob: -8.515332221984863
    10. ')' → logprob: -8.515332221984863

Token 410: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029931573197245598
    2. 'print' → logprob: -3.5299315452575684
    3. '```' → logprob: -9.654932022094727
    4. ' print' → logprob: -10.029932022094727
    5. '
' → logprob: -10.404932022094727
    6. '    
' → logprob: -10.779932022094727
    7. '<|end|>' → logprob: -11.654932022094727
    8. '	print' → logprob: -12.279932022094727
    9. '  ' → logprob: -13.529932022094727
    10. ')' → logprob: -13.654932022094727

Token 411: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47441381216049194
    2. 'print' → logprob: -0.9744138121604919
    3. '```' → logprob: -8.224413871765137
    4. ' print' → logprob: -9.724413871765137
    5. '	print' → logprob: -12.099413871765137
    6. '``' → logprob: -13.849413871765137
    7. '(print' → logprob: -14.099413871765137
    8. '    
' → logprob: -15.224413871765137
    9. '\' → logprob: -15.349413871765137
    10. '  ' → logprob: -15.724413871765137

Token 412: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0050099557265639305
    2. '..' → logprob: -5.75501012802124
    3. '   ' → logprob: -6.38001012802124
    4. 'exit' → logprob: -9.880009651184082
    5. '```' → logprob: -10.505009651184082
    6. ' print' → logprob: -10.630009651184082
    7. '``' → logprob: -12.380009651184082
    8. '....' → logprob: -12.505009651184082
    9. '..\' → logprob: -12.630009651184082
    10. '  ' → logprob: -12.880009651184082

Token 413: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00046725376159884036
    2. '(' → logprob: -7.750467300415039
    3. '(..' → logprob: -11.000467300415039
    4. '()' → logprob: -12.500467300415039
    5. ' ("' → logprob: -12.625467300415039
    6. ' (' → logprob: -12.750467300415039
    7. '('' → logprob: -12.875467300415039
    8. '(".' → logprob: -12.875467300415039
    9. '(
' → logprob: -13.625467300415039
    10. '("")' → logprob: -13.625467300415039

Token 414: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.030828045681118965
    2. '"..' → logprob: -3.5308279991149902
    3. 'print' → logprob: -7.40582799911499
    4. '"' → logprob: -8.030828475952148
    5. 'a' → logprob: -10.530828475952148
    6. '.."' → logprob: -10.655828475952148
    7. 'abc' → logprob: -10.905828475952148
    8. ''' → logprob: -11.280828475952148
    9. ' ..' → logprob: -11.280828475952148
    10. '..!' → logprob: -11.780828475952148

Token 415: 'abc' (ID: 26682)
  Prédit: 'abc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -1.6047699318733066e-05
    2. '...' → logprob: -12.625016212463379
    3. '```' → logprob: -13.125016212463379
    4. '.' → logprob: -13.250016212463379
    5. 'abcdef' → logprob: -13.500016212463379
    6. 'xyz' → logprob: -13.750016212463379
    7. 'c' → logprob: -13.875016212463379
    8. '..' → logprob: -14.250016212463379
    9. '
' → logprob: -14.375016212463379
    10. 'ab' → logprob: -14.625016212463379

Token 416: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -4.4849443838757e-06
    2. '..)' → logprob: -13.625004768371582
    3. '()' → logprob: -14.000004768371582
    4. '...' → logprob: -14.125004768371582
    5. '")' → logprob: -14.125004768371582
    6. '.")' → logprob: -14.250004768371582
    7. '.."' → logprob: -15.250004768371582
    8. '.' → logprob: -17.250003814697266
    9. '..\' → logprob: -17.250003814697266
    10. '..!' → logprob: -18.125003814697266

Token 417: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -4.036524842376821e-05
    2. '()' → logprob: -10.375040054321289
    3. '")
' → logprob: -12.125040054321289
    4. ')' → logprob: -13.250040054321289
    5. ')")' → logprob: -14.250040054321289
    6. '"' → logprob: -14.500040054321289
    7. '')' → logprob: -14.750040054321289
    8. ' ")' → logprob: -15.625040054321289
    9. '```' → logprob: -15.750040054321289
    10. '\n' → logprob: -17.37504005432129

Token 418: '             ' (ID: 1698)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7862581014633179
    2. '   ' → logprob: -0.7862581014633179
    3. '<|end|>' → logprob: -2.9112582206726074
    4. '()' → logprob: -3.4112582206726074
    5. '<|end|>' → logprob: -8.16125774383545
    6. '  ' → logprob: -8.28625774383545
    7. '")' → logprob: -8.53625774383545
    8. '
' → logprob: -9.03625774383545
    9. '```' → logprob: -9.03625774383545
    10. '())' → logprob: -9.53625774383545

Token 419: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.061609748750925064
    2. 'exit' → logprob: -3.1866097450256348
    3. ')' → logprob: -4.436609745025635
    4. 'print' → logprob: -5.436609745025635
    5. '(exit' → logprob: -7.436609745025635
    6. '```' → logprob: -7.686609745025635
    7. '	exit' → logprob: -7.936609745025635
    8. '<|end|>' → logprob: -8.186610221862793
    9. ' exit' → logprob: -8.936610221862793
    10. '
' → logprob: -9.061610221862793

Token 420: ' ' (ID: 220)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.0017002914100885391
    2. ' exit' → logprob: -6.501700401306152
    3. '<|end|>' → logprob: -9.126700401306152
    4. '(exit' → logprob: -10.376700401306152
    5. '	exit' → logprob: -10.626700401306152
    6. '```' → logprob: -11.251700401306152
    7. '   ' → logprob: -12.251700401306152
    8. ' ' → logprob: -12.376700401306152
    9. '7' → logprob: -13.126700401306152
    10. '<|end|>' → logprob: -13.251700401306152

Token 421: '7' (ID: 22)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.001990970689803362
    2. 'print' → logprob: -7.626990795135498
    3. '7' → logprob: -7.751990795135498
    4. '(exit' → logprob: -8.001991271972656
    5. ' exit' → logprob: -8.251991271972656
    6. '<|end|>' → logprob: -8.376991271972656
    7. '```' → logprob: -8.751991271972656
    8. '	exit' → logprob: -10.501991271972656
    9. ')' → logprob: -10.626991271972656
    10. '<|end|>' → logprob: -11.251991271972656

Token 422: 'ème' (ID: 9767)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21711529791355133
    2. '()' → logprob: -2.2171154022216797
    3. '")' → logprob: -2.4671154022216797
    4. '')' → logprob: -6.96711540222168
    5. '   ' → logprob: -8.46711540222168
    6. '```' → logprob: -9.46711540222168
    7. '<|end|>' → logprob: -10.21711540222168
    8. '())' → logprob: -10.34211540222168
    9. '"' → logprob: -10.96711540222168
    10. '(' → logprob: -11.09211540222168

Token 423: ' (' (ID: 350)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.5260104537010193
    2. '   ' → logprob: -0.9010104537010193
    3. '	exit' → logprob: -7.276010513305664
    4. ' exit' → logprob: -7.276010513305664
    5. '<|end|>' → logprob: -7.401010513305664
    6. '```' → logprob: -7.776010513305664
    7. '(exit' → logprob: -8.151010513305664
    8. ')' → logprob: -9.526010513305664
    9. '  ' → logprob: -10.651010513305664
    10. '
' → logprob: -10.776010513305664

Token 424: 'ident' (ID: 2477)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018176245503127575
    2. '")' → logprob: -6.75181770324707
    3. '<|end|>' → logprob: -8.00181770324707
    4. '```' → logprob: -8.75181770324707
    5. '   ' → logprob: -9.62681770324707
    6. ')
' → logprob: -10.50181770324707
    7. '')' → logprob: -11.00181770324707
    8. '\n' → logprob: -11.87681770324707
    9. ' )' → logprob: -12.12681770324707
    10. 'exit' → logprob: -12.12681770324707

Token 425: 'ique' (ID: 2222)
  Prédit: 'ique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ique' → logprob: -6.869017852295656e-06
    2. ')' → logprob: -13.375006675720215
    3. '")' → logprob: -13.375006675720215
    4. 'ical' → logprob: -13.875006675720215
    5. '#' → logprob: -14.250006675720215
    6. 'iques' → logprob: -14.625006675720215
    7. 'iq' → logprob: -14.625006675720215
    8. 'iqu' → logprob: -14.875006675720215
    9. 'ic' → logprob: -15.125006675720215
    10. 'i' → logprob: -16.00000762939453

Token 426: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1167130172252655
    2. '")' → logprob: -2.241713047027588
    3. ' à' → logprob: -6.866713047027588
    4. ')")' → logprob: -6.991713047027588
    5. '   ' → logprob: -7.491713047027588
    6. '()' → logprob: -7.741713047027588
    7. ' )' → logprob: -8.11671257019043
    8. ' ")' → logprob: -8.24171257019043
    9. '())' → logprob: -9.11671257019043
    10. ' au' → logprob: -9.61671257019043

Token 427: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.5249207615852356
    2. ' la' → logprob: -1.1499207019805908
    3. 'the' → logprob: -3.024920701980591
    4. '..' → logprob: -4.14992094039917
    5. ')' → logprob: -4.39992094039917
    6. '...' → logprob: -5.27492094039917
    7. 'l' → logprob: -6.02492094039917
    8. '7' → logprob: -6.02492094039917
    9. '")' → logprob: -6.27492094039917
    10. '"' → logprob: -6.64992094039917

Token 428: ' ' (ID: 220)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.4199567139148712
    2. ' première' → logprob: -1.5449566841125488
    3. '7' → logprob: -3.044956684112549
    4. 'first' → logprob: -3.044956684112549
    5. '..' → logprob: -4.169956684112549
    6. '...' → logprob: -4.294956684112549
    7. '```' → logprob: -5.919956684112549
    8. ' first' → logprob: -7.169956684112549
    9. ' dernière' → logprob: -7.544956684112549
    10. ' ' → logprob: -8.419957160949707

Token 429: '1' (ID: 16)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.004937358666211367
    2. 'first' → logprob: -6.254937171936035
    3. '7' → logprob: -6.629937171936035
    4. ' première' → logprob: -6.879937171936035
    5. '...' → logprob: -8.129937171936035
    6. 'sept' → logprob: -8.754937171936035
    7. 'Prem' → logprob: -10.254937171936035
    8. 'der' → logprob: -10.254937171936035
    9. '```' → logprob: -10.379937171936035
    10. '1' → logprob: -10.379937171936035

Token 430: 'ère' (ID: 4346)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3634679913520813
    2. '")' → logprob: -1.2384679317474365
    3. '')' → logprob: -5.488468170166016
    4. '.")' → logprob: -5.488468170166016
    5. ')")' → logprob: -5.988468170166016
    6. '7' → logprob: -6.738468170166016
    7. '#' → logprob: -7.238468170166016
    8. '.' → logprob: -7.488468170166016
    9. '..' → logprob: -7.738468170166016
    10. '...' → logprob: -7.863468170166016

Token 431: ' et' (ID: 859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0041764602065086365
    2. '")' → logprob: -6.129176616668701
    3. '   ' → logprob: -6.379176616668701
    4. ')
' → logprob: -8.254176139831543
    5. '')' → logprob: -11.254176139831543
    6. '```' → logprob: -11.879176139831543
    7. ' )' → logprob: -12.629176139831543
    8. ')")' → logprob: -12.754176139831543
    9. '`)' → logprob: -13.629176139831543
    10. '<|end|>' → logprob: -13.754176139831543

Token 432: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5765390396118164
    2. '7' → logprob: -1.2015390396118164
    3. '   ' → logprob: -2.4515390396118164
    4. ' la' → logprob: -3.8265390396118164
    5. ')' → logprob: -5.076539039611816
    6. '     ' → logprob: -5.201539039611816
    7. '6' → logprob: -5.451539039611816
    8. '...' → logprob: -5.826539039611816
    9. '#' → logprob: -6.201539039611816
    10. '  ' → logprob: -6.326539039611816

Token 433: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.042249131947755814
    2. '..' → logprob: -3.5422492027282715
    3. 'la' → logprob: -5.0422492027282715
    4. '...' → logprob: -6.2922492027282715
    5. '7' → logprob: -6.4172492027282715
    6. '6' → logprob: -7.4172492027282715
    7. '   ' → logprob: -7.4172492027282715
    8. ' ' → logprob: -7.5422492027282715
    9. ' ..' → logprob: -8.292248725891113
    10. '```' → logprob: -8.917248725891113

Token 434: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.30384454131126404
    2. '7' → logprob: -1.8038445711135864
    3. 'prem' → logprob: -3.053844451904297
    4. '0' → logprob: -4.053844451904297
    5. '6' → logprob: -5.053844451904297
    6. ' ' → logprob: -5.178844451904297
    7. '...' → logprob: -5.178844451904297
    8. '..' → logprob: -5.303844451904297
    9. ' première' → logprob: -5.303844451904297
    10. '2' → logprob: -6.053844451904297

Token 435: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009091986576095223
    2. '0' → logprob: -7.625909328460693
    3. '7' → logprob: -8.250908851623535
    4. 'first' → logprob: -9.750908851623535
    5. 'prem' → logprob: -9.750908851623535
    6. '```' → logprob: -11.125908851623535
    7. ' première' → logprob: -11.625908851623535
    8. ' ' → logprob: -12.000908851623535
    9. '6' → logprob: -12.375908851623535
    10. '2' → logprob: -12.750908851623535

Token 436: 'ème' (ID: 9767)
  Prédit: 'ème'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ème' → logprob: -0.4269484281539917
    2. 'ère' → logprob: -1.3019484281539917
    3. ')' → logprob: -3.1769485473632812
    4. 'e' → logprob: -3.9269485473632812
    5. 'eme' → logprob: -4.801948547363281
    6. 'ième' → logprob: -6.426948547363281
    7. 'è' → logprob: -6.801948547363281
    8. '")' → logprob: -7.426948547363281
    9. 'ere' → logprob: -7.926948547363281
    10. '')' → logprob: -8.301948547363281

Token 437: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16044701635837555
    2. '")' → logprob: -1.9104470014572144
    3. ')
' → logprob: -8.910447120666504
    4. ')")' → logprob: -9.910447120666504
    5. '```' → logprob: -11.785447120666504
    6. '")
' → logprob: -11.910447120666504
    7. '')' → logprob: -11.910447120666504
    8. '   ' → logprob: -12.160447120666504
    9. '`)' → logprob: -12.785447120666504
    10. ')"' → logprob: -13.160447120666504

Token 438: '   ' (ID: 271)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.09063578397035599
    2. '<|end|>' → logprob: -2.7156357765197754
    3. '```' → logprob: -4.465635776519775
    4. '   ' → logprob: -5.465635776519775
    5. ' exit' → logprob: -6.590635776519775
    6. '(exit' → logprob: -7.090635776519775
    7. ')' → logprob: -7.090635776519775
    8. '
' → logprob: -7.340635776519775
    9. '\n' → logprob: -7.715635776519775
    10. '	exit' → logprob: -8.090636253356934

Token 439: ' exit' (ID: 10654)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' (adapté à ' exit') → logprob: -0.07934973388910294
    2. '   ' → logprob: -2.5793497562408447
    3. ' exit' → logprob: -8.454349517822266
    4. '	exit' → logprob: -8.704349517822266
    5. '(exit' → logprob: -10.204349517822266
    6. ')' → logprob: -10.704349517822266
    7. '.exit' → logprob: -12.079349517822266
    8. '```' → logprob: -12.329349517822266
    9. '    
' → logprob: -12.454349517822266
    10. '<|end|>' → logprob: -12.454349517822266

Token 440: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003850325592793524
    2. '(' → logprob: -7.87538480758667
    3. '()
' → logprob: -12.625385284423828
    4. '()

' → logprob: -14.375385284423828
    5. '()]' → logprob: -15.625385284423828
    6. '()`' → logprob: -15.625385284423828
    7. '()<' → logprob: -15.750385284423828
    8. '())' → logprob: -16.125385284423828
    9. '()"' → logprob: -16.250385284423828
    10. ' ()' → logprob: -16.625385284423828

Token 441: '                       ' (ID: 968)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 442: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 443: ' Termine' (ID: 150192)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7289329171180725
    2. 'exit' → logprob: -0.8539329171180725
    3. 'pass' → logprob: -3.4789328575134277
    4. '```' → logprob: -3.8539328575134277
    5. '   ' → logprob: -4.478932857513428
    6. '<|end|>' → logprob: -4.728932857513428
    7. 'terminate' → logprob: -5.603932857513428
    8. 'Terminate' → logprob: -5.853932857513428
    9. 'Termin' → logprob: -6.103932857513428
    10. 'return' → logprob: -6.603932857513428

Token 444: ' immédiatement' (ID: 100743)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -2.927930654550437e-05
    2. '<|end|>' → logprob: -11.250029563903809
    3. '(' → logprob: -11.625029563903809
    4. '()<' → logprob: -13.250029563903809
    5. '()
' → logprob: -13.375029563903809
    6. '()\' → logprob: -14.000029563903809
    7. '())' → logprob: -14.625029563903809
    8. '<|end|>' → logprob: -15.000029563903809
    9. '();' → logprob: -15.125029563903809
    10. '()%' → logprob: -15.250029563903809

Token 445: ' le' (ID: 505)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -7.791440293658525e-05
    2. '(' → logprob: -9.750078201293945
    3. '<|end|>' → logprob: -11.625078201293945
    4. '()\' → logprob: -13.125078201293945
    5. '()<' → logprob: -13.375078201293945
    6. '()
' → logprob: -13.375078201293945
    7. 'the' → logprob: -13.625078201293945
    8. '())' → logprob: -14.000078201293945
    9. ' ()' → logprob: -14.250078201293945
    10. ')' → logprob: -14.625078201293945

Token 446: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.0034209280274808407
    2. ' programme' → logprob: -6.378420829772949
    3. 'program' → logprob: -6.378420829772949
    4. 'programm' → logprob: -11.00342082977295
    5. 'programma' → logprob: -13.37842082977295
    6. ' program' → logprob: -14.75342082977295
    7. 'code' → logprob: -14.87842082977295
    8. 'Programme' → logprob: -15.75342082977295
    9. '_program' → logprob: -15.87842082977295
    10. '```' → logprob: -16.378421783447266

Token 447: '

' (ID: 279)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.42770370841026306
    2. '<|end|>' → logprob: -1.1777037382125854
    3. 'if' → logprob: -4.552703857421875
    4. '```' → logprob: -4.552703857421875
    5. 'n' → logprob: -4.927703857421875
    6. 'else' → logprob: -5.677703857421875
    7. '
' → logprob: -5.927703857421875
    8. ')' → logprob: -6.177703857421875
    9. '...' → logprob: -7.677703857421875
    10. '[' → logprob: -7.802703857421875

Token 448: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.05247784033417702
    2. '<|end|>' → logprob: -3.5524778366088867
    3. 'else' → logprob: -4.802477836608887
    4. 'if' → logprob: -4.927477836608887
    5. '```' → logprob: -6.302477836608887
    6. '...' → logprob: -6.427477836608887
    7. 'print' → logprob: -6.927477836608887
    8. 'n' → logprob: -7.177477836608887
    9. 'pass' → logprob: -7.677477836608887
    10. 'elif' → logprob: -8.177477836608887

Token 449: ' Si' (ID: 7832)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.0744330883026123
    2. '#' → logprob: -1.3244330883026123
    3. 'for' → logprob: -1.9494330883026123
    4. 'lines' → logprob: -2.4494330883026123
    5. 'if' → logprob: -2.8244330883026123
    6. 'def' → logprob: -3.4494330883026123
    7. 'rows' → logprob: -4.074433326721191
    8. 'pattern' → logprob: -4.199433326721191
    9. 'rest' → logprob: -4.449433326721191
    10. 'print' → logprob: -4.699433326721191

Token 450: ' aucune' (ID: 51173)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0699521079659462
    2. 'n' → logprob: -2.6949520111083984
    3. ' ' → logprob: -11.444952011108398
    4. ' not' → logprob: -13.194952011108398
    5. '	n' → logprob: -14.194952011108398
    6. '  ' → logprob: -14.569952011108398
    7. ' isinstance' → logprob: -14.694952011108398
    8. ' ' → logprob: -14.819952011108398
    9. '#' → logprob: -15.069952011108398
    10. 'not' → logprob: -15.194952011108398

Token 451: ' des' (ID: 731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7497155666351318
    2. 'n' → logprob: -1.7497155666351318
    3. 'condition' → logprob: -2.499715566635132
    4. '#' → logprob: -2.749715566635132
    5. 'elif' → logprob: -3.374715566635132
    6. 'else' → logprob: -3.374715566635132
    7. ' condition' → logprob: -3.499715566635132
    8. ' n' → logprob: -3.624715566635132
    9. ':' → logprob: -4.374715805053711
    10. ' if' → logprob: -4.749715805053711

Token 452: ' conditions' (ID: 6409)
  Prédit: 'conditions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conditions' → logprob: -0.00306779146194458
    2. ' conditions' → logprob: -5.878067970275879
    3. 'cond' → logprob: -9.628067970275879
    4. 'cases' → logprob: -9.878067970275879
    5. 'condition' → logprob: -10.003067970275879
    6. 'instructions' → logprob: -10.503067970275879
    7. '

' → logprob: -11.253067970275879
    8. '#' → logprob: -11.503067970275879
    9. '
' → logprob: -11.753067970275879
    10. '```' → logprob: -11.878067970275879

Token 453: ' précéd' (ID: 55435)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006064103217795491
    2. 'else' → logprob: -7.625606536865234
    3. ' :' → logprob: -9.750606536865234
    4. ':
' → logprob: -10.750606536865234
    5. ' else' → logprob: -10.750606536865234
    6. '():' → logprob: -12.250606536865234
    7. 'n' → logprob: -12.625606536865234
    8. ':#' → logprob: -13.125606536865234
    9. 'elif' → logprob: -13.875606536865234
    10. '_else' → logprob: -14.250606536865234

Token 454: 'entes' (ID: 5651)
  Prédit: 'entes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entes' → logprob: -0.006779080722481012
    2. 'ent' → logprob: -5.256779193878174
    3. 'ente' → logprob: -7.381779193878174
    4. ':' → logprob: -7.881779193878174
    5. 'ents' → logprob: -8.631778717041016
    6. 'é' → logprob: -9.506778717041016
    7. 'es' → logprob: -9.756778717041016
    8. '```' → logprob: -9.881778717041016
    9. 'e' → logprob: -10.631778717041016
    10. 'ed' → logprob: -10.631778717041016

Token 455: ' n' (ID: 297)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00043567578541114926
    2. ':
' → logprob: -7.875435829162598
    3. 'else' → logprob: -10.250435829162598
    4. ':#' → logprob: -12.125435829162598
    5. 'print' → logprob: -12.500435829162598
    6. ' :' → logprob: -13.125435829162598
    7. '#' → logprob: -13.750435829162598
    8. ':

' → logprob: -14.000435829162598
    9. '#:' → logprob: -14.000435829162598
    10. '<|end|>' → logprob: -14.000435829162598

Token 456: ''est' (ID: 6616)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.36771082878112793
    2. ''est' → logprob: -1.242710828781128
    3. ':' → logprob: -4.242711067199707
    4. '#' → logprob: -6.617711067199707
    5. '’est' → logprob: -6.867711067199707
    6. ' est' → logprob: -7.617711067199707
    7. 'e' → logprob: -8.242711067199707
    8. 'n' → logprob: -8.492711067199707
    9. 'elif' → logprob: -8.617711067199707
    10. 'a' → logprob: -8.867711067199707

Token 457: ' vér' (ID: 42524)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.16194255650043488
    2. 's' → logprob: -2.286942481994629
    3. 'True' → logprob: -4.036942481994629
    4. '#' → logprob: -5.411942481994629
    5. 'true' → logprob: -5.536942481994629
    6. ' rempl' → logprob: -5.536942481994629
    7. '```' → logprob: -5.661942481994629
    8. 'meet' → logprob: -5.786942481994629
    9. 'respect' → logprob: -6.036942481994629
    10. 'rem' → logprob: -6.286942481994629

Token 458: 'ifiée' (ID: 88506)
  Prédit: 'ér'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ér' → logprob: -0.9531534910202026
    2. 'ue' → logprob: -1.3281534910202026
    3. 'ra' → logprob: -2.828153610229492
    4. 'érée' → logprob: -2.828153610229492
    5. 'er' → logprob: -3.578153610229492
    6. 'ifiée' → logprob: -3.953153610229492
    7. '#' → logprob: -4.078153610229492
    8. 'if' → logprob: -4.578153610229492
    9. 'fi' → logprob: -4.578153610229492
    10. 'érit' → logprob: -4.703153610229492

Token 459: ',
' (ID: 412)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0032947517465800047
    2. ':
' → logprob: -6.003294944763184
    3. 'print' → logprob: -8.003294944763184
    4. '#' → logprob: -8.503294944763184
    5. 'else' → logprob: -9.003294944763184
    6. 'for' → logprob: -10.378294944763184
    7. 'if' → logprob: -10.378294944763184
    8. 'n' → logprob: -10.878294944763184
    9. 'pass' → logprob: -11.128294944763184
    10. '.' → logprob: -11.253294944763184

Token 460: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7666946053504944
    2. '#' → logprob: -0.8916946053504944
    3. ':' → logprob: -2.6416945457458496
    4. 'for' → logprob: -4.14169454574585
    5. 'pass' → logprob: -4.14169454574585
    6. '   ' → logprob: -5.01669454574585
    7. ' print' → logprob: -5.26669454574585
    8. ' #' → logprob: -5.39169454574585
    9. 'n' → logprob: -6.26669454574585
    10. 'if' → logprob: -6.64169454574585

Token 461: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.03375323861837387
    2. 'for' → logprob: -4.283753395080566
    3. 'print' → logprob: -4.908753395080566
    4. 'pass' → logprob: -4.908753395080566
    5. 'import' → logprob: -6.533753395080566
    6. 'if' → logprob: -6.908753395080566
    7. ' #' → logprob: -6.908753395080566
    8. 'else' → logprob: -7.658753395080566
    9. ' for' → logprob: -8.908753395080566
    10. 'n' → logprob: -9.033753395080566

Token 462: ' va' (ID: 3423)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.061377596110105515
    2. '#' → logprob: -3.31137752532959
    3. 'continue' → logprob: -4.31137752532959
    4. 'for' → logprob: -5.56137752532959
    5. 'pass' → logprob: -6.18637752532959
    6. 'raise' → logprob: -6.81137752532959
    7. 'n' → logprob: -7.43637752532959
    8. ' print' → logprob: -7.68637752532959
    9. 'def' → logprob: -8.06137752532959
    10. 'else' → logprob: -8.18637752532959

Token 463: ' génér' (ID: 18939)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'contin' → logprob: -1.1383904218673706
    2. '#' → logprob: -1.2633904218673706
    3. ' construire' → logprob: -2.76339054107666
    4. 'print' → logprob: -3.01339054107666
    5. 'import' → logprob: -3.01339054107666
    6. ' continuer' → logprob: -3.26339054107666
    7. ' créer' → logprob: -3.38839054107666
    8. ' génér' → logprob: -3.51339054107666
    9. 'g' → logprob: -3.51339054107666
    10. 'gener' → logprob: -4.13839054107666

Token 464: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -3.7146746763028204e-05
    2. 'érer' → logprob: -10.50003719329834
    3. 'aler' → logprob: -12.50003719329834
    4. 'al' → logprob: -13.00003719329834
    5. 'ate' → logprob: -13.25003719329834
    6. 'erer' → logprob: -13.75003719329834
    7. 'e' → logprob: -15.00003719329834
    8. 'eral' → logprob: -16.000036239624023
    9. 'rer' → logprob: -16.375036239624023
    10. '#' → logprob: -16.875036239624023

Token 465: ' dyn' (ID: 44535)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.6594552397727966
    2. '#' → logprob: -2.1594552993774414
    3. ' une' → logprob: -2.4094552993774414
    4. ' a' → logprob: -2.9094552993774414
    5. 'une' → logprob: -3.4094552993774414
    6. 'un' → logprob: -3.4094552993774414
    7. '_' → logprob: -3.7844552993774414
    8. ' ' → logprob: -3.9094552993774414
    9. 'n' → logprob: -3.9094552993774414
    10. 'for' → logprob: -4.284455299377441

Token 466: 'ami' (ID: 4938)
  Prédit: 'ami'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ami' → logprob: -0.11679989099502563
    2. 'er' → logprob: -2.366799831390381
    3. 'éri' → logprob: -4.741799831390381
    4. 'amiques' → logprob: -5.741799831390381
    5. 'amique' → logprob: -6.741799831390381
    6. 'érer' → logprob: -6.866799831390381
    7. 'am' → logprob: -7.866799831390381
    8. '#' → logprob: -7.991799831390381
    9. 'érique' → logprob: -7.991799831390381
    10. 'éralement' → logprob: -8.491800308227539

Token 467: 'quement' (ID: 42437)
  Prédit: 'quement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quement' → logprob: -0.09189971536397934
    2. 'er' → logprob: -2.5918996334075928
    3. 'que' → logprob: -5.091899871826172
    4. 'quer' → logprob: -6.216899871826172
    5. 't' → logprob: -6.466899871826172
    6. 'qu' → logprob: -7.341899871826172
    7. '#' → logprob: -7.341899871826172
    8. 'quent' → logprob: -7.591899871826172
    9. 'cal' → logprob: -7.966899871826172
    10. 'q' → logprob: -8.341899871826172

Token 468: ' la' (ID: 557)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4688708782196045
    2. '#' → logprob: -1.0938708782196045
    3. ' for' → logprob: -4.843871116638184
    4. 'n' → logprob: -5.218871116638184
    5. '.' → logprob: -5.343871116638184
    6. 'le' → logprob: -5.718871116638184
    7. 'a' → logprob: -5.843871116638184
    8. '[' → logprob: -6.343871116638184
    9. ' ' → logprob: -6.468871116638184
    10. 'une' → logprob: -6.468871116638184

Token 469: ' matr' (ID: 25095)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mat' → logprob: -1.0904065370559692
    2. 'mot' → logprob: -1.0904065370559692
    3. '#' → logprob: -1.5904065370559692
    4. 'pattern' → logprob: -3.2154064178466797
    5. 'prem' → logprob: -4.09040641784668
    6. 'gr' → logprob: -4.21540641784668
    7. 'print' → logprob: -4.71540641784668
    8. 'import' → logprob: -5.21540641784668
    9. 'solution' → logprob: -5.34040641784668
    10. 'ligne' → logprob: -5.34040641784668

Token 470: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.0009738749358803034
    2. 'ix' → logprob: -7.500973701477051
    3. 'rice' → logprob: -8.62597370147705
    4. 'i' → logprob: -9.62597370147705
    5. 'ixe' → logprob: -9.62597370147705
    6. 'atrice' → logprob: -10.12597370147705
    7. 'ic' → logprob: -10.25097370147705
    8. 'î' → logprob: -11.50097370147705
    9. '#' → logprob: -12.12597370147705
    10. 'ì' → logprob: -12.75097370147705

Token 471: ' carré' (ID: 191546)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0395317077636719
    2. '[' → logprob: -1.7895317077636719
    3. 'n' → logprob: -1.7895317077636719
    4. '#' → logprob: -1.9145317077636719
    5. 'import' → logprob: -3.039531707763672
    6. ':' → logprob: -3.539531707763672
    7. 'matrix' → logprob: -3.539531707763672
    8. ',' → logprob: -4.539531707763672
    9. 'm' → logprob: -4.664531707763672
    10. '\' → logprob: -4.914531707763672

Token 472: ' de' (ID: 334)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.875486433506012
    2. '
' → logprob: -1.3754863739013672
    3. '#' → logprob: -1.6254863739013672
    4. '[' → logprob: -2.500486373901367
    5. '\' → logprob: -4.500486373901367
    6. '<|end|>' → logprob: -4.750486373901367
    7. '[
' → logprob: -5.000486373901367
    8. '\n' → logprob: -5.375486373901367
    9. 'import' → logprob: -5.375486373901367
    10. ':' → logprob: -5.750486373901367

Token 473: ' taille' (ID: 41644)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6955468058586121
    2. 'tail' → logprob: -1.1955468654632568
    3. 'car' → logprob: -1.8205468654632568
    4. '.' → logprob: -4.320546627044678
    5. 't' → logprob: -5.070546627044678
    6. 'lett' → logprob: -5.695546627044678
    7. 'size' → logprob: -6.070546627044678
    8. '#' → logprob: -6.570546627044678
    9. 'points' → logprob: -6.570546627044678
    10. 'dimensions' → logprob: -6.570546627044678

Token 474: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.011116675101220608
    2. ' n' → logprob: -4.5111165046691895
    3. '(n' → logprob: -9.761116981506348
    4. '```' → logprob: -12.511116981506348
    5. '`' → logprob: -12.636116981506348
    6. '
' → logprob: -13.636116981506348
    7. '[n' → logprob: -13.761116981506348
    8. 'nx' → logprob: -15.386116981506348
    9. ' ' → logprob: -15.511116981506348
    10. '\n' → logprob: -15.761116981506348

Token 475: ' composée' (ID: 146865)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.8041523694992065
    2. '
' → logprob: -1.8041523694992065
    3. '#' → logprob: -2.054152488708496
    4. 'n' → logprob: -2.554152488708496
    5. 'import' → logprob: -3.179152488708496
    6. 'mat' → logprob: -3.429152488708496
    7. '[' → logprob: -3.554152488708496
    8. ':' → logprob: -3.679152488708496
    9. 'm' → logprob: -4.554152488708496
    10. '.' → logprob: -5.054152488708496

Token 476: ' initial' (ID: 4871)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.561758816242218
    2. 'de' → logprob: -1.4367587566375732
    3. '#' → logprob: -2.4367587566375732
    4. 'd' → logprob: -2.6867587566375732
    5. ' d' → logprob: -3.6867587566375732
    6. ' des' → logprob: -5.311758995056152
    7. 'des' → logprob: -6.311758995056152
    8. ' uniquement' → logprob: -6.311758995056152
    9. ' #' → logprob: -7.186758995056152
    10. 'import' → logprob: -7.436758995056152

Token 477: 'ement' (ID: 962)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.19749845564365387
    2. 'ement' → logprob: -2.8224985599517822
    3. 'isée' → logprob: -3.4474985599517822
    4. 'aire' → logprob: -3.5724985599517822
    5. 'e' → logprob: -3.6974985599517822
    6. 'ément' → logprob: -4.072498321533203
    7. '#' → logprob: -5.947498321533203
    8. 'de' → logprob: -6.072498321533203
    9. ' de' → logprob: -6.197498321533203
    10. 'é' → logprob: -6.322498321533203

Token 478: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.754963219165802
    2. 'd' → logprob: -1.6299631595611572
    3. ' de' → logprob: -1.6299631595611572
    4. ' d' → logprob: -3.2549631595611572
    5. '['' → logprob: -3.3799631595611572
    6. '["' → logprob: -3.7549631595611572
    7. '[' → logprob: -4.504963397979736
    8. '#' → logprob: -5.004963397979736
    9. ' of' → logprob: -5.254963397979736
    10. '=' → logprob: -5.379963397979736

Token 479: ' points' (ID: 5571)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -0.5818777084350586
    2. '.' → logprob: -1.5818777084350586
    3. ''.' → logprob: -1.7068777084350586
    4. '["' → logprob: -3.7068777084350586
    5. '[' → logprob: -4.456877708435059
    6. '"."' → logprob: -4.956877708435059
    7. 'points' → logprob: -5.331877708435059
    8. '".' → logprob: -6.081877708435059
    9. 'dots' → logprob: -6.331877708435059
    10. 'point' → logprob: -7.206877708435059

Token 480: ' "."' (ID: 50107)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.14890286326408386
    2. 'm' → logprob: -2.7739028930664062
    3. 'mat' → logprob: -2.7739028930664062
    4. 'square' → logprob: -5.023902893066406
    5. 'n' → logprob: -6.898902893066406
    6. '
' → logprob: -7.023902893066406
    7. ' matrix' → logprob: -7.023902893066406
    8. '[' → logprob: -7.273902893066406
    9. 's' → logprob: -7.273902893066406
    10. 'car' → logprob: -7.398902893066406

Token 481: '.
' (ID: 558)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.10651764273643494
    2. 'mat' → logprob: -2.8565175533294678
    3. '
' → logprob: -3.6065175533294678
    4. 'm' → logprob: -4.856517791748047
    5. 'square' → logprob: -5.481517791748047
    6. '```' → logprob: -6.731517791748047
    7. 'n' → logprob: -7.481517791748047
    8. 's' → logprob: -7.731517791748047
    9. ' matrix' → logprob: -7.731517791748047
    10. 'grid' → logprob: -8.106517791748047

Token 482: '#' (ID: 2)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.13986271619796753
    2. 'mat' → logprob: -2.1398627758026123
    3. '
' → logprob: -5.139862537384033
    4. 'm' → logprob: -5.764862537384033
    5. 'square' → logprob: -6.514862537384033
    6. 'grid' → logprob: -7.139862537384033
    7. '```' → logprob: -7.764862537384033
    8. ' matrix' → logprob: -8.014863014221191
    9. 'board' → logprob: -9.014863014221191
    10. 'import' → logprob: -9.139863014221191

Token 483: ' La' (ID: 3038)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.2897700369358063
    2. 'mat' → logprob: -1.4147700071334839
    3. 'm' → logprob: -6.039770126342773
    4. '
' → logprob: -6.039770126342773
    5. 'square' → logprob: -6.289770126342773
    6. 'grid' → logprob: -7.039770126342773
    7. 'car' → logprob: -8.539770126342773
    8. ' matrix' → logprob: -8.664770126342773
    9. 'board' → logprob: -8.664770126342773
    10. '```' → logprob: -8.789770126342773

Token 484: ' compréhension' (ID: 142333)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.26582008600234985
    2. 'mat' → logprob: -1.515820026397705
    3. ' matrix' → logprob: -4.765820026397705
    4. '#' → logprob: -6.390820026397705
    5. 'grid' → logprob: -7.015820026397705
    6. 'square' → logprob: -7.390820026397705
    7. 'm' → logprob: -7.640820026397705
    8. 'board' → logprob: -7.765820026397705
    9. ' matr' → logprob: -7.890820026397705
    10. 'car' → logprob: -9.015820503234863

Token 485: ' de' (ID: 334)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.11161747574806213
    2. ' matr' → logprob: -3.2366175651550293
    3. 'mat' → logprob: -3.3616175651550293
    4. ' matrix' → logprob: -4.611617565155029
    5. '[' → logprob: -5.111617565155029
    6. 'n' → logprob: -5.111617565155029
    7. 's' → logprob: -6.361617565155029
    8. 'm' → logprob: -6.611617565155029
    9. ' de' → logprob: -6.736617565155029
    10. 'de' → logprob: -6.861617565155029

Token 486: ' liste' (ID: 31719)
  Prédit: '["'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '["' → logprob: -0.744491696357727
    2. '[' → logprob: -1.244491696357727
    3. '['' → logprob: -1.619491696357727
    4. '[
' → logprob: -4.4944915771484375
    5. '[n' → logprob: -4.6194915771484375
    6. '[['' → logprob: -4.9944915771484375
    7. 'la' → logprob: -5.3694915771484375
    8. 'matrix' → logprob: -5.9944915771484375
    9. 'mat' → logprob: -6.9944915771484375
    10. 'n' → logprob: -7.2444915771484375

Token 487: ' crée' (ID: 102256)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.96701979637146
    2. ' =' → logprob: -1.21701979637146
    3. 'matrix' → logprob: -1.84201979637146
    4. '=' → logprob: -2.71701979637146
    5. 's' → logprob: -2.84201979637146
    6. '[n' → logprob: -4.467020034790039
    7. '[m' → logprob: -4.592020034790039
    8. 'square' → logprob: -5.342020034790039
    9. ' [' → logprob: -6.467020034790039
    10. '[]' → logprob: -6.842020034790039

Token 488: ' une' (ID: 2463)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7872294783592224
    2. '["' → logprob: -1.1622295379638672
    3. '[['' → logprob: -2.287229537963867
    4. '['' → logprob: -2.412229537963867
    5. '[n' → logprob: -4.162229537963867
    6. '[
' → logprob: -4.787229537963867
    7. ' ['' → logprob: -5.662229537963867
    8. ' ["' → logprob: -5.787229537963867
    9. ' [' → logprob: -5.912229537963867
    10. 'matrix' → logprob: -6.162229537963867

Token 489: ' liste' (ID: 31719)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4159800112247467
    2. '[n' → logprob: -2.040980100631714
    3. '[['' → logprob: -2.040980100631714
    4. '[
' → logprob: -2.915980100631714
    5. 'matrix' → logprob: -4.790979862213135
    6. '[[' → logprob: -4.915979862213135
    7. '[m' → logprob: -5.165979862213135
    8. 'mat' → logprob: -6.040979862213135
    9. '["' → logprob: -7.415979862213135
    10. 'n' → logprob: -7.665979862213135

Token 490: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09917322546243668
    2. '[n' → logprob: -2.8491733074188232
    3. '[
' → logprob: -3.5991733074188232
    4. '[['' → logprob: -5.849173069000244
    5. '["' → logprob: -6.474173069000244
    6. ' de' → logprob: -6.599173069000244
    7. ' [' → logprob: -6.974173069000244
    8. 'de' → logprob: -7.224173069000244
    9. 'n' → logprob: -7.849173069000244
    10. '[[' → logprob: -8.349173545837402

Token 491: ' listes' (ID: 179198)
  Prédit: '["'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '["' → logprob: -0.1636374145746231
    2. '[n' → logprob: -2.663637399673462
    3. '['' → logprob: -2.913637399673462
    4. '[' → logprob: -3.913637399673462
    5. 'n' → logprob: -5.163637638092041
    6. '[
' → logprob: -7.038637638092041
    7. 'list' → logprob: -9.413637161254883
    8. ' ["' → logprob: -9.538637161254883
    9. ' [' → logprob: -9.663637161254883
    10. '[['' → logprob: -9.913637161254883

Token 492: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6680101752281189
    2. '[['' → logprob: -1.1680102348327637
    3. '[n' → logprob: -1.9180102348327637
    4. '[
' → logprob: -5.543010234832764
    5. '[[' → logprob: -5.543010234832764
    6. '["' → logprob: -5.793010234832764
    7. ' [['' → logprob: -5.793010234832764
    8. ' [["' → logprob: -5.793010234832764
    9. 's' → logprob: -6.293010234832764
    10. '['' → logprob: -6.418010234832764

Token 493: ' chaque' (ID: 21194)
  Prédit: '[[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[['' → logprob: -0.12554755806922913
    2. ' [['' → logprob: -3.0005476474761963
    3. ' [["' → logprob: -3.2505476474761963
    4. '[' → logprob: -3.7505476474761963
    5. '[[' → logprob: -6.000547409057617
    6. '[n' → logprob: -6.750547409057617
    7. 'matrix' → logprob: -7.500547409057617
    8. ' matrix' → logprob: -7.750547409057617
    9. 'each' → logprob: -8.250547409057617
    10. ' each' → logprob: -8.500547409057617

Token 494: ' sous' (ID: 14487)
  Prédit: '["'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '["' → logprob: -0.714069664478302
    2. '['' → logprob: -1.7140696048736572
    3. '[' → logprob: -1.9640696048736572
    4. 'ligne' → logprob: -1.9640696048736572
    5. '[i' → logprob: -3.4640696048736572
    6. '["_' → logprob: -5.339069843292236
    7. ' ligne' → logprob: -5.589069843292236
    8. '['_' → logprob: -6.089069843292236
    9. ' [' → logprob: -6.964069843292236
    10. 'elem' → logprob: -7.089069843292236

Token 495: '-l' (ID: 2887)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4140891134738922
    2. '['' → logprob: -1.2890890836715698
    3. 'liste' → logprob: -3.6640892028808594
    4. '["' → logprob: -3.9140892028808594
    5. '[
' → logprob: -4.789089202880859
    6. '[l' → logprob: -6.664089202880859
    7. 'chaine' → logprob: -6.789089202880859
    8. '[...]' → logprob: -7.039089202880859
    9. ' ['' → logprob: -7.164089202880859
    10. 'ligne' → logprob: -7.164089202880859

Token 496: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.5244848132133484
    2. 'ignes' → logprob: -1.3994848728179932
    3. 'istes' → logprob: -2.399484872817993
    4. 'ist' → logprob: -3.274484872817993
    5. 'e' → logprob: -4.774484634399414
    6. 'igne' → logprob: -4.774484634399414
    7. 'is' → logprob: -5.649484634399414
    8. 'ists' → logprob: -5.899484634399414
    9. '#' → logprob: -6.149484634399414
    10. 'ines' → logprob: -6.274484634399414

Token 497: ' représentant' (ID: 136122)
  Prédit: '=[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=['' → logprob: -0.9647690653800964
    2. ' ['' → logprob: -1.5897691249847412
    3. '['' → logprob: -1.8397691249847412
    4. '[' → logprob: -2.464769124984741
    5. ' =' → logprob: -2.464769124984741
    6. ' contenant' → logprob: -4.089768886566162
    7. '=["' → logprob: -4.464768886566162
    8. '(['' → logprob: -4.589768886566162
    9. '=' → logprob: -4.839768886566162
    10. ' [' → logprob: -5.089768886566162

Token 498: ' une' (ID: 2463)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.5762538909912109
    2. ' ['' → logprob: -1.076253890991211
    3. '["' → logprob: -2.826253890991211
    4. ' une' → logprob: -3.576253890991211
    5. 'une' → logprob: -5.951253890991211
    6. '[' → logprob: -6.076253890991211
    7. ' ["' → logprob: -6.326253890991211
    8. ' un' → logprob: -6.326253890991211
    9. ' [' → logprob: -7.701253890991211
    10. ' la' → logprob: -8.326253890991211

Token 499: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.04884487763047218
    2. ' ligne' → logprob: -3.298844814300537
    3. 'rang' → logprob: -5.673844814300537
    4. '['' → logprob: -5.798844814300537
    5. '[' → logprob: -6.673844814300537
    6. '["' → logprob: -6.673844814300537
    7. 'row' → logprob: -7.423844814300537
    8. 'liste' → logprob: -8.173845291137695
    9. 'range' → logprob: -8.298845291137695
    10. 'chaine' → logprob: -8.423845291137695

Token 500: ' de' (ID: 334)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.15181466937065125
    2. '[' → logprob: -3.5268146991729736
    3. '[n' → logprob: -4.0268144607543945
    4. 's' → logprob: -4.0268144607543945
    5. ' matrix' → logprob: -4.2768144607543945
    6. 'mat' → logprob: -4.4018144607543945
    7. '[
' → logprob: -4.6518144607543945
    8. '[m' → logprob: -4.9018144607543945
    9. ' =' → logprob: -5.0268144607543945
    10. ' matr' → logprob: -5.6518144607543945

Token 501: ' n' (ID: 297)
  Prédit: '["'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '["' → logprob: -0.7528640627861023
    2. '['' → logprob: -1.002864122390747
    3. 'n' → logprob: -2.752864122390747
    4. ''.' → logprob: -3.002864122390747
    5. '".' → logprob: -4.127863883972168
    6. '[' → logprob: -4.502863883972168
    7. '[n' → logprob: -4.752863883972168
    8. '"."' → logprob: -5.752863883972168
    9. '.' → logprob: -5.877863883972168
    10. ' n' → logprob: -6.377863883972168

Token 502: ' caractères' (ID: 183106)
  Prédit: '["'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '["' → logprob: -0.9890123009681702
    2. '[' → logprob: -1.1140122413635254
    3. ' ["' → logprob: -1.8640122413635254
    4. '['' → logprob: -2.9890122413635254
    5. ' [' → logprob: -3.4890122413635254
    6. ' ['' → logprob: -3.6140122413635254
    7. ']' → logprob: -4.614012241363525
    8. '[n' → logprob: -5.114012241363525
    9. '=["' → logprob: -6.364012241363525
    10. '"' → logprob: -6.489012241363525

Token 503: ',' (ID: 11)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.19098685681819916
    2. 'mat' → logprob: -1.8159868717193604
    3. 'square' → logprob: -5.190986633300781
    4. 'm' → logprob: -6.065986633300781
    5. 'car' → logprob: -6.690986633300781
    6. 'grid' → logprob: -7.190986633300781
    7. 'board' → logprob: -8.440986633300781
    8. ' matrix' → logprob: -8.690986633300781
    9. '
' → logprob: -8.690986633300781
    10. '[
' → logprob: -9.315986633300781

Token 504: ' initial' (ID: 4871)
  Prédit: '[[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[['' → logprob: -0.3938167691230774
    2. ' [['' → logprob: -2.0188167095184326
    3. '[' → logprob: -2.5188167095184326
    4. ' [["' → logprob: -2.8938167095184326
    5. 'matrix' → logprob: -3.5188167095184326
    6. ' matrix' → logprob: -3.8938167095184326
    7. '[
' → logprob: -6.393816947937012
    8. '[[' → logprob: -6.893816947937012
    9. '[n' → logprob: -7.143816947937012
    10. '["' → logprob: -7.143816947937012

Token 505: 'isés' (ID: 58890)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.1978367269039154
    2. 'ale' → logprob: -3.8228366374969482
    3. '[' → logprob: -3.9478366374969482
    4. 'es' → logprob: -4.322836875915527
    5. 'er' → logprob: -4.447836875915527
    6. 's' → logprob: -4.572836875915527
    7. 'èrement' → logprob: -4.572836875915527
    8. 'ser' → logprob: -4.822836875915527
    9. 'a' → logprob: -5.072836875915527
    10. 'alis' → logprob: -5.197836875915527

Token 506: ' à' (ID: 1221)
  Prédit: '["'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '["' → logprob: -0.5599268078804016
    2. ' à' → logprob: -2.434926748275757
    3. '   ' → logprob: -2.559926748275757
    4. '['' → logprob: -2.559926748275757
    5. 'à' → logprob: -2.809926748275757
    6. 'par' → logprob: -3.309926748275757
    7. '[' → logprob: -3.434926748275757
    8. '=' → logprob: -3.684926748275757
    9. ' par' → logprob: -4.809926986694336
    10. ' =' → logprob: -5.059926986694336

Token 507: ' ".' (ID: 11730)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.2310193032026291
    2. '"."' → logprob: -2.3560192584991455
    3. '["' → logprob: -3.1060192584991455
    4. '['' → logprob: -3.2310192584991455
    5. '".' → logprob: -3.8560192584991455
    6. '"' → logprob: -5.856019496917725
    7. '[' → logprob: -5.981019496917725
    8. '.' → logprob: -8.356019020080566
    9. ' '.'' → logprob: -8.481019020080566
    10. ' "."' → logprob: -9.356019020080566

Token 508: '"
' (ID: 1092)
  Prédit: '"]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"]' → logprob: -1.1602694988250732
    2. '"' → logprob: -1.2852694988250732
    3. ']' → logprob: -1.9102694988250732
    4. 'matrix' → logprob: -2.1602694988250732
    5. ']"' → logprob: -3.4102694988250732
    6. '"
' → logprob: -3.6602694988250732
    7. 's' → logprob: -4.035269737243652
    8. '["' → logprob: -4.660269737243652
    9. 'n' → logprob: -4.910269737243652
    10. ']
' → logprob: -4.910269737243652

Token 509: 'a' (ID: 64)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.03175993636250496
    2. 'mat' → logprob: -3.7817599773406982
    3. 'square' → logprob: -5.156759738922119
    4. 'grid' → logprob: -7.156759738922119
    5. 'board' → logprob: -7.531759738922119
    6. 'm' → logprob: -7.531759738922119
    7. 'car' → logprob: -8.656760215759277
    8. '
' → logprob: -8.781760215759277
    9. ' matrix' → logprob: -9.156760215759277
    10. 'lines' → logprob: -9.156760215759277

Token 510: ' =' (ID: 314)
  Prédit: 'rray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rray' → logprob: -0.7327707409858704
    2. 'rr' → logprob: -1.1077706813812256
    3. ' =' → logprob: -2.3577706813812256
    4. 'matrix' → logprob: -3.1077706813812256
    5. '=' → logprob: -3.2327706813812256
    6. 'mat' → logprob: -5.982770919799805
    7. '_matrix' → logprob: -5.982770919799805
    8. 'r' → logprob: -6.732770919799805
    9. '=[' → logprob: -6.732770919799805
    10. '=[[' → logprob: -7.732770919799805

Token 511: ' [' (ID: 723)
  Prédit: '[[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[['' → logprob: -0.6528889536857605
    2. '[' → logprob: -1.1528890132904053
    3. ' [["' → logprob: -2.4028890132904053
    4. ' [['' → logprob: -2.6528890132904053
    5. ' [' → logprob: -5.902888774871826
    6. '["' → logprob: -9.777889251708984
    7. '['' → logprob: -10.527889251708984
    8. '[n' → logprob: -11.652889251708984
    9. '[[' → logprob: -12.527889251708984
    10. '[
' → logprob: -13.527889251708984

Token 512: 'n' (ID: 77)
  Prédit: '["'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '["' → logprob: -0.20203253626823425
    2. '['' → logprob: -1.7020325660705566
    3. '[' → logprob: -7.702032566070557
    4. ' ['' → logprob: -8.827032089233398
    5. ' [' → logprob: -11.577032089233398
    6. ' ["' → logprob: -11.952032089233398
    7. '   ' → logprob: -14.077032089233398
    8. '[
' → logprob: -14.077032089233398
    9. '["@' → logprob: -14.202032089233398
    10. '"' → logprob: -14.452032089233398

Token 513: ' *' (ID: 425)
  Prédit: '["'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '["' → logprob: -0.1187821626663208
    2. '['' → logprob: -2.2437820434570312
    3. '[' → logprob: -5.493782043457031
    4. '   ' → logprob: -7.243782043457031
    5. ' ['' → logprob: -7.243782043457031
    6. ' ["' → logprob: -8.868782043457031
    7. ' [' → logprob: -9.368782043457031
    8. ' ' → logprob: -10.243782043457031
    9. '*' → logprob: -10.743782043457031
    10. 'for' → logprob: -10.743782043457031

Token 514: ' [' (ID: 723)
  Prédit: '["'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '["' → logprob: -0.31952691078186035
    2. '['' → logprob: -1.3195269107818604
    3. '[' → logprob: -5.694526672363281
    4. '".' → logprob: -6.194526672363281
    5. ''.' → logprob: -7.319526672363281
    6. '"."' → logprob: -9.444526672363281
    7. ' [' → logprob: -10.069526672363281
    8. ' ['' → logprob: -10.819526672363281
    9. '"' → logprob: -11.194526672363281
    10. '["+' → logprob: -11.694526672363281

Token 515: '".' (ID: 4050)
  Prédit: '".'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '".' → logprob: -0.3869481086730957
    2. ''.' → logprob: -1.1369481086730957
    3. '"."' → logprob: -9.511947631835938
    4. '"' → logprob: -13.261947631835938
    5. ' ".' → logprob: -14.761947631835938
    6. ''' → logprob: -14.761947631835938
    7. ' '.' → logprob: -15.261947631835938
    8. '.' → logprob: -15.761947631835938
    9. '(".' → logprob: -17.136947631835938
    10. '('.')' → logprob: -17.261947631835938

Token 516: '"]' (ID: 2601)
  Prédit: '"]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.14184802770614624
    2. '"]]' → logprob: -2.141848087310791
    3. '.' → logprob: -4.391848087310791
    4. ']' → logprob: -6.891848087310791
    5. '"' → logprob: -6.891848087310791
    6. '']' → logprob: -9.141847610473633
    7. '']]' → logprob: -9.266847610473633
    8. ' "]' → logprob: -10.016847610473633
    9. '".' → logprob: -10.266847610473633
    10. ''' → logprob: -10.391847610473633

Token 517: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002016331272898242
    2. ' ]' → logprob: -8.625201225280762
    3. '()]' → logprob: -11.625201225280762
    4. 'for' → logprob: -12.125201225280762
    5. ')]' → logprob: -12.500201225280762
    6. ' for' → logprob: -12.750201225280762
    7. '"]' → logprob: -14.500201225280762
    8. ')' → logprob: -15.750201225280762
    9. ']]' → logprob: -15.875201225280762
    10. ']
' → logprob: -16.500202178955078

Token 518: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09585144370794296
    2. ' _' → logprob: -3.345851421356201
    3. 'range' → logprob: -3.595851421356201
    4. ' range' → logprob: -3.595851421356201
    5. ' ' → logprob: -7.720851421356201
    6. 'i' → logprob: -7.845851421356201
    7. ' i' → logprob: -8.22085189819336
    8. '0' → logprob: -9.59585189819336
    9. '_range' → logprob: -10.22085189819336
    10. '_]' → logprob: -10.72085189819336

Token 519: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.048771198838949203
    2. 'in' → logprob: -3.0487711429595947
    3. 'range' → logprob: -9.423770904541016
    4. ' ' → logprob: -9.548770904541016
    5. ' range' → logprob: -11.173770904541016
    6. 'n' → logprob: -11.298770904541016
    7. '_' → logprob: -13.048770904541016
    8. '  ' → logprob: -14.048770904541016
    9. ' _' → logprob: -14.173770904541016
    10. ']' → logprob: -14.673770904541016

Token 520: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0011736786691471934
    2. ' range' → logprob: -6.751173496246338
    3. 'r' → logprob: -14.001173973083496
    4. ' ' → logprob: -14.001173973083496
    5. 'ran' → logprob: -15.001173973083496
    6. '(range' → logprob: -15.001173973083496
    7. 'ra' → logprob: -15.251173973083496
    8. 'rang' → logprob: -15.376173973083496
    9. '   ' → logprob: -15.501173973083496
    10. 'a' → logprob: -15.876173973083496

Token 521: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00525154173374176
    2. 'n' → logprob: -5.255251407623291
    3. '(' → logprob: -11.00525188446045
    4. ' (' → logprob: -14.00525188446045
    5. ' n' → logprob: -15.50525188446045
    6. '(
' → logprob: -17.130250930786133
    7. '	n' → logprob: -19.505250930786133
    8. ')n' → logprob: -20.380250930786133
    9. '((' → logprob: -21.255250930786133
    10. '_n' → logprob: -21.255250930786133

Token 522: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.8624639324116288e-06
    2. ']' → logprob: -13.750001907348633
    3. ')' → logprob: -15.000001907348633
    4. ' )' → logprob: -15.500001907348633
    5. ')]
' → logprob: -16.125001907348633
    6. ')].' → logprob: -17.500001907348633
    7. ')]

' → logprob: -18.250001907348633
    8. '])' → logprob: -18.500001907348633
    9. ')],' → logprob: -18.500001907348633
    10. '))' → logprob: -18.625001907348633

Token 523: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16413506865501404
    2. '<|end|>' → logprob: -2.789134979248047
    3. '#' → logprob: -2.914134979248047
    4. 'for' → logprob: -4.039134979248047
    5. '  
' → logprob: -5.164134979248047
    6. 'a' → logprob: -5.414134979248047
    7. ' 
' → logprob: -6.664134979248047
    8. 'i' → logprob: -6.789134979248047
    9. 'n' → logprob: -6.789134979248047
    10. '\n' → logprob: -7.414134979248047

Token 524: ' Si' (ID: 7832)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25809332728385925
    2. '#' → logprob: -2.2580933570861816
    3. 'i' → logprob: -2.7580933570861816
    4. 'import' → logprob: -4.383093357086182
    5. 'def' → logprob: -4.383093357086182
    6. 'alphabet' → logprob: -4.758093357086182
    7. 'start' → logprob: -5.133093357086182
    8. 'k' → logprob: -5.758093357086182
    9. 'a' → logprob: -5.883093357086182
    10. 'c' → logprob: -6.258093357086182

Token 525: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.008758863434195518
    2. 'n' → logprob: -4.758759021759033
    3. ' ' → logprob: -9.008758544921875
    4. ' a' → logprob: -12.258758544921875
    5. ' ' → logprob: -12.383758544921875
    6. ' not' → logprob: -12.508758544921875
    7. '  ' → logprob: -13.133758544921875
    8. '	n' → logprob: -13.258758544921875
    9. '_' → logprob: -13.633758544921875
    10. ' (' → logprob: -14.571258544921875

Token 526: ' est' (ID: 893)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.12022552639245987
    2. '>' → logprob: -3.120225429534912
    3. ' >=' → logprob: -3.370225429534912
    4. ' ==' → logprob: -4.745225429534912
    5. ' %' → logprob: -4.870225429534912
    6. '%' → logprob: -4.870225429534912
    7. ' <=' → logprob: -5.370225429534912
    8. '>=' → logprob: -5.995225429534912
    9. ' !=' → logprob: -6.870225429534912
    10. '==' → logprob: -6.870225429534912

Token 527: ' impair' (ID: 64113)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -1.1681478023529053
    2. '%' → logprob: -1.2931478023529053
    3. ' >=' → logprob: -2.0431478023529053
    4. '>' → logprob: -2.5431478023529053
    5. ' %' → logprob: -2.6681478023529053
    6. ' ' → logprob: -3.0431478023529053
    7. '>=' → logprob: -3.1681478023529053
    8. ' <' → logprob: -4.668148040771484
    9. ' <=' → logprob: -4.918148040771484
    10. '1' → logprob: -5.293148040771484

Token 528: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007177190855145454
    2. ':
' → logprob: -5.632177352905273
    3. ' :' → logprob: -6.507177352905273
    4. '%' → logprob: -7.507177352905273
    5. 'if' → logprob: -8.007177352905273
    6. ' and' → logprob: -8.132177352905273
    7. ' ==' → logprob: -8.132177352905273
    8. ' if' → logprob: -8.507177352905273
    9. ',' → logprob: -8.632177352905273
    10. '   ' → logprob: -9.257177352905273

Token 529: 'v' (ID: 85)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5769919753074646
    2. ' n' → logprob: -0.8269919753074646
    3. ')' → logprob: -7.076992034912109
    4. '(n' → logprob: -10.07699203491211
    5. ' )' → logprob: -10.57699203491211
    6. ' (' → logprob: -10.57699203491211
    7. '%' → logprob: -10.57699203491211
    8. '   ' → logprob: -10.82699203491211
    9. ' if' → logprob: -11.32699203491211
    10. 'if' → logprob: -11.45199203491211

Token 530: 'ér' (ID: 2156)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.23811988532543182
    2. 'al' → logprob: -2.6131198406219482
    3. 'alid' → logprob: -2.8631198406219482
    4. ')' → logprob: -3.8631198406219482
    5. '>' → logprob: -4.363120079040527
    6. 'a' → logprob: -4.488120079040527
    7. '=' → logprob: -4.488120079040527
    8. 'alue' → logprob: -5.363120079040527
    9. 'isible' → logprob: -5.363120079040527
    10. 'ale' → logprob: -6.238120079040527

Token 531: 'ification' (ID: 3166)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.37937402725219727
    2. 'ifié' → logprob: -1.2543740272521973
    3. 'er' → logprob: -4.879374027252197
    4. 'ifie' → logprob: -5.504374027252197
    5. 'ér' → logprob: -5.504374027252197
    6. 'ifiable' → logprob: -6.004374027252197
    7. 'a' → logprob: -6.254374027252197
    8. 'u' → logprob: -6.254374027252197
    9. 'f' → logprob: -6.504374027252197
    10. 'ifiant' → logprob: -6.879374027252197

Token 532: ' du' (ID: 1462)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.4873773753643036
    2. '%' → logprob: -0.987377405166626
    3. ':' → logprob: -5.612377166748047
    4. ')' → logprob: -5.737377166748047
    5. 'n' → logprob: -6.487377166748047
    6. ' n' → logprob: -6.612377166748047
    7. '%n' → logprob: -6.612377166748047
    8. '):' → logprob: -6.987377166748047
    9. '(n' → logprob: -7.112377166748047
    10. ' ' → logprob: -9.737377166748047

Token 533: ' reste' (ID: 26769)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4748827815055847
    2. ' n' → logprob: -0.9748827815055847
    3. '1' → logprob: -8.099883079528809
    4. '%' → logprob: -8.349883079528809
    5. ' ' → logprob: -8.974883079528809
    6. '%n' → logprob: -10.724883079528809
    7. '2' → logprob: -10.849883079528809
    8. '(n' → logprob: -10.974883079528809
    9. ' %' → logprob: -11.099883079528809
    10. '```' → logprob: -11.099883079528809

Token 534: ' de' (ID: 334)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.35045430064201355
    2. ' de' → logprob: -1.975454330444336
    3. ' %' → logprob: -2.725454330444336
    4. ' ' → logprob: -3.475454330444336
    5. '%n' → logprob: -4.100454330444336
    6. ' n' → logprob: -4.225454330444336
    7. 'n' → logprob: -4.225454330444336
    8. ')' → logprob: -5.100454330444336
    9. '(n' → logprob: -6.600454330444336
    10. 'de' → logprob: -6.725454330444336

Token 535: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4371527135372162
    2. ' n' → logprob: -1.0621527433395386
    3. ' la' → logprob: -5.937152862548828
    4. ' division' → logprob: -5.937152862548828
    5. 'division' → logprob: -6.562152862548828
    6. 'div' → logprob: -7.312152862548828
    7. ' ' → logprob: -7.937152862548828
    8. 'la' → logprob: -8.437152862548828
    9. '2' → logprob: -8.562152862548828
    10. 'l' → logprob: -8.687152862548828

Token 536: ' division' (ID: 21629)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2840728759765625
    2. ' n' → logprob: -1.5340728759765625
    3. '2' → logprob: -4.0340728759765625
    4. ' division' → logprob: -5.1590728759765625
    5. 'division' → logprob: -5.6590728759765625
    6. 'div' → logprob: -6.1590728759765625
    7. ' ' → logprob: -6.1590728759765625
    8. '%' → logprob: -8.909072875976562
    9. '%n' → logprob: -9.284072875976562
    10. '1' → logprob: -9.784072875976562

Token 537: ' eu' (ID: 5658)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.15447251498699188
    2. 'par' → logprob: -3.154472589492798
    3. ' par' → logprob: -3.154472589492798
    4. ' n' → logprob: -3.279472589492798
    5. '%' → logprob: -5.029472351074219
    6. ')' → logprob: -5.154472351074219
    7. '%n' → logprob: -5.279472351074219
    8. '(n' → logprob: -6.904472351074219
    9. 'a' → logprob: -7.529472351074219
    10. ' ' → logprob: -7.904472351074219

Token 538: 'clid' (ID: 156121)
  Prédit: 'clid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clid' → logprob: -0.46792319416999817
    2. 'cl' → logprob: -1.8429231643676758
    3. 'n' → logprob: -2.217923164367676
    4. 're' → logprob: -3.967923164367676
    5. 'l' → logprob: -3.967923164367676
    6. '1' → logprob: -4.342923164367676
    7. 'rée' → logprob: -4.592923164367676
    8. 'naire' → logprob: -5.342923164367676
    9. 'ro' → logprob: -5.592923164367676
    10. 'r' → logprob: -5.592923164367676

Token 539: 'ienne' (ID: 18387)
  Prédit: 'aire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.0396793894469738
    2. 'ale' → logprob: -3.9146792888641357
    3. 'ire' → logprob: -5.414679527282715
    4. 'ère' → logprob: -6.039679527282715
    5. 'ide' → logprob: -6.164679527282715
    6. 'al' → logprob: -6.414679527282715
    7. 'naire' → logprob: -6.664679527282715
    8. 'é' → logprob: -6.789679527282715
    9. 're' → logprob: -6.914679527282715
    10. 'r' → logprob: -7.039679527282715

Token 540: ' par' (ID: 686)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2531796097755432
    2. ' n' → logprob: -2.2531795501708984
    3. ' par' → logprob: -2.7531795501708984
    4. ')' → logprob: -3.3781795501708984
    5. 'par' → logprob: -4.503179550170898
    6. '%' → logprob: -5.503179550170898
    7. '%n' → logprob: -6.128179550170898
    8. '(n' → logprob: -6.878179550170898
    9. ' )' → logprob: -7.503179550170898
    10. ' ' → logprob: -8.003179550170898

Token 541: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.020552631467580795
    2. ' ' → logprob: -3.895552635192871
    3. ')' → logprob: -12.145552635192871
    4. '3' → logprob: -13.770552635192871
    5. 'n' → logprob: -13.895552635192871
    6. ' n' → logprob: -14.145552635192871
    7. ' )' → logprob: -14.145552635192871
    8. '
' → logprob: -14.645552635192871
    9. '```' → logprob: -14.645552635192871
    10. '1' → logprob: -15.395552635192871

Token 542: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.710618905955926e-05
    2. ' ' → logprob: -9.250097274780273
    3. '
' → logprob: -14.875097274780273
    4. '```' → logprob: -15.500097274780273
    5. '3' → logprob: -15.750097274780273
    6. 'n' → logprob: -16.500097274780273
    7. '

' → logprob: -16.750097274780273
    8. '1' → logprob: -16.875097274780273
    9. '   ' → logprob: -17.000097274780273
    10. ')' → logprob: -18.125097274780273

Token 543: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3727019727230072
    2. ' !=' → logprob: -2.24770188331604
    3. ' ==' → logprob: -2.49770188331604
    4. '==' → logprob: -3.24770188331604
    5. '!=' → logprob: -3.37270188331604
    6. '%' → logprob: -3.74770188331604
    7. '):' → logprob: -3.87270188331604
    8. ' )' → logprob: -5.872702121734619
    9. '):
' → logprob: -7.247702121734619
    10. ' %' → logprob: -7.872702121734619

Token 544: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.015257819555699825
    2. ':' → logprob: -4.890257835388184
    3. ' if' → logprob: -4.890257835388184
    4. ':
' → logprob: -9.515257835388184
    5. ' and' → logprob: -11.140257835388184
    6. ' :' → logprob: -11.765257835388184
    7. '   ' → logprob: -12.890257835388184
    8. '```' → logprob: -13.890257835388184
    9. ' 
' → logprob: -14.265257835388184
    10. 'and' → logprob: -14.515257835388184

Token 545: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0007227989844977856
    2. 'n' → logprob: -7.250722885131836
    3. ' ' → logprob: -11.375722885131836
    4. ' ' → logprob: -14.375722885131836
    5. ' (' → logprob: -15.125722885131836
    6. '	n' → logprob: -15.250722885131836
    7. '(n' → logprob: -16.625722885131836
    8. '   ' → logprob: -16.875722885131836
    9. '  ' → logprob: -17.750722885131836
    10. ' 
' → logprob: -18.938222885131836

Token 546: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.023257127031683922
    2. '%' → logprob: -3.77325701713562
    3. ' ' → logprob: -11.7732572555542
    4. ' ' → logprob: -12.7732572555542
    5. ' %
' → logprob: -14.1482572555542
    6. ')' → logprob: -16.148256301879883
    7. '[' → logprob: -17.148256301879883
    8. '
' → logprob: -17.398256301879883
    9. ' not' → logprob: -18.148256301879883
    10. '<|end|>' → logprob: -18.273256301879883

Token 547: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.16022534668445587
    2. ' ' → logprob: -1.9102253913879395
    3. '```' → logprob: -14.785224914550781
    4. '   ' → logprob: -15.410224914550781
    5. '  ' → logprob: -15.535224914550781
    6. ')' → logprob: -16.66022491455078
    7. '3' → logprob: -16.84772491455078
    8. '1' → logprob: -17.03522491455078
    9. '>' → logprob: -17.16022491455078
    10. ' ' → logprob: -17.47272491455078

Token 548: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.517272024415433e-05
    2. ' ' → logprob: -9.500075340270996
    3. '

' → logprob: -16.87507438659668
    4. '3' → logprob: -16.87507438659668
    5. '1' → logprob: -17.25007438659668
    6. '
' → logprob: -17.50007438659668
    7. '   ' → logprob: -17.50007438659668
    8. '4' → logprob: -18.31257438659668
    9. '  ' → logprob: -18.37507438659668
    10. '>' → logprob: -18.43757438659668

Token 549: ':
' (ID: 734)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7671473622322083
    2. '==' → logprob: -1.1421473026275635
    3. ' !=' → logprob: -1.7671473026275635
    4. '!=' → logprob: -3.1421473026275635
    5. '1' → logprob: -6.767147541046143
    6. ' ' → logprob: -7.017147541046143
    7. '=' → logprob: -7.892147541046143
    8. ':' → logprob: -10.142147064208984
    9. ' =' → logprob: -11.767147064208984
    10. ')' → logprob: -11.767147064208984

Token 550: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.255501925945282
    2. '   ' → logprob: -1.5055019855499268
    3. ':
' → logprob: -5.880501747131348
    4. ' :' → logprob: -7.380501747131348
    5. '    
' → logprob: -10.505501747131348
    6. '):' → logprob: -10.505501747131348
    7. '<|end|>' → logprob: -11.380501747131348
    8. '  ' → logprob: -11.505501747131348
    9. ' :
' → logprob: -11.755501747131348
    10. '#' → logprob: -11.880501747131348

Token 551: ' #' (ID: 1069)
  Prédit: ' mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mid' → logprob: -1.3183737993240356
    2. ' for' → logprob: -1.4433737993240356
    3. ' m' → logprob: -2.693373680114746
    4. '   ' → logprob: -2.693373680114746
    5. 'for' → logprob: -2.943373680114746
    6. 'mid' → logprob: -3.193373680114746
    7. ' center' → logprob: -3.443373680114746
    8. ' a' → logprob: -3.693373680114746
    9. ' i' → logprob: -3.693373680114746
    10. ' layer' → logprob: -3.818373680114746

Token 552: ' On' (ID: 2160)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.41267552971839905
    2. 'for' → logprob: -2.162675619125366
    3. '#' → logprob: -3.287675619125366
    4. 'm' → logprob: -3.287675619125366
    5. 'center' → logprob: -3.412675619125366
    6. ' mid' → logprob: -3.537675619125366
    7. 'a' → logprob: -3.662675619125366
    8. 'middle' → logprob: -4.162675380706787
    9. 'c' → logprob: -4.537675380706787
    10. 'i' → logprob: -5.662675380706787

Token 553: ' mod' (ID: 1812)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.676365315914154
    2. 'mid' → logprob: -2.176365375518799
    3. ' for' → logprob: -2.676365375518799
    4. '#' → logprob: -2.926365375518799
    5. 'm' → logprob: -3.051365375518799
    6. 'a' → logprob: -3.051365375518799
    7. 'char' → logprob: -3.551365375518799
    8. 'c' → logprob: -3.926365375518799
    9. ' #' → logprob: -4.176365375518799
    10. 'i' → logprob: -4.426365375518799

Token 554: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.00030972150852903724
    2. 'if' → logprob: -9.250309944152832
    3. 'èle' → logprob: -9.500309944152832
    4. 'ife' → logprob: -9.625309944152832
    5. '   ' → logprob: -11.125309944152832
    6. 'f' → logprob: -11.500309944152832
    7. 'e' → logprob: -11.625309944152832
    8. '       ' → logprob: -11.875309944152832
    9. 'ère' → logprob: -12.125309944152832
    10. 'ule' → logprob: -12.250309944152832

Token 555: ' les' (ID: 1341)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7599824666976929
    2. '   ' → logprob: -2.0099825859069824
    3. ' la' → logprob: -2.3849825859069824
    4. 'i' → logprob: -2.5099825859069824
    5. 'for' → logprob: -2.8849825859069824
    6. ' i' → logprob: -3.5099825859069824
    7. ' a' → logprob: -3.6349825859069824
    8. 'la' → logprob: -3.6349825859069824
    9. 'l' → logprob: -4.009982585906982
    10. ' ' → logprob: -4.259982585906982

Token 556: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06742613017559052
    2. 'i' → logprob: -3.5674262046813965
    3. ' a' → logprob: -4.4424262046813965
    4. ' ' → logprob: -5.3174262046813965
    5. 'n' → logprob: -5.6924262046813965
    6. 'l' → logprob: -6.0674262046813965
    7. 'for' → logprob: -6.0674262046813965
    8. ' i' → logprob: -6.1924262046813965
    9. '#' → logprob: -6.3174262046813965
    10. ' lignes' → logprob: -6.6924262046813965

Token 557: '5' (ID: 20)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07163567841053009
    2. 'i' → logprob: -3.4466357231140137
    3. 'n' → logprob: -3.8216357231140137
    4. '0' → logprob: -5.321635723114014
    5. '#' → logprob: -5.821635723114014
    6. 'for' → logprob: -5.821635723114014
    7. '1' → logprob: -7.446635723114014
    8. 'range' → logprob: -7.446635723114014
    9. 'l' → logprob: -7.821635723114014
    10. ' a' → logprob: -7.946635723114014

Token 558: ' dernières' (ID: 59307)
  Prédit: ' lignes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -0.5128009915351868
    2. 'a' → logprob: -1.637800931930542
    3. ' premières' → logprob: -2.262800931930542
    4. ' a' → logprob: -3.512800931930542
    5. ' ' → logprob: -3.637800931930542
    6. ' premiers' → logprob: -5.012801170349121
    7. 'prem' → logprob: -5.012801170349121
    8. 'i' → logprob: -5.387801170349121
    9. '   ' → logprob: -5.387801170349121
    10. '#' → logprob: -5.512801170349121

Token 559: ' lignes' (ID: 81687)
  Prédit: ' lignes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -0.48485106229782104
    2. 'l' → logprob: -0.984851062297821
    3. ' ' → logprob: -6.109850883483887
    4. 'ligne' → logprob: -6.484850883483887
    5. 'for' → logprob: -6.609850883483887
    6. 'lines' → logprob: -6.984850883483887
    7. ' lines' → logprob: -6.984850883483887
    8. 'a' → logprob: -7.109850883483887
    9. 'i' → logprob: -7.234850883483887
    10. ' lign' → logprob: -7.859850883483887

Token 560: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15060222148895264
    2. ' for' → logprob: -2.400602340698242
    3. 'for' → logprob: -3.400602340698242
    4. '<|end|>' → logprob: -5.150602340698242
    5. ':' → logprob: -5.775602340698242
    6. ' and' → logprob: -6.025602340698242
    7. '
' → logprob: -8.025602340698242
    8. ' ' → logprob: -8.025602340698242
    9. ' =' → logprob: -8.150602340698242
    10. '    ' → logprob: -8.150602340698242

Token 561: ' colon' (ID: 20947)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.10307013988494873
    2. 'cols' → logprob: -3.1030702590942383
    3. 'columns' → logprob: -3.8530702590942383
    4. 'a' → logprob: -4.603070259094238
    5. 'n' → logprob: -5.228070259094238
    6. '3' → logprob: -5.353070259094238
    7. ' ' → logprob: -5.978070259094238
    8. 'col' → logprob: -6.478070259094238
    9. 'les' → logprob: -6.603070259094238
    10. '4' → logprob: -6.978070259094238

Token 562: 'nes' (ID: 4382)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.009867524728178978
    2. 'nes' → logprob: -4.6348676681518555
    3. 's' → logprob: -9.509867668151855
    4. 'e' → logprob: -11.384867668151855
    5. '```' → logprob: -12.259867668151855
    6. 'n' → logprob: -12.384867668151855
    7. ' es' → logprob: -12.384867668151855
    8. 'ne' → logprob: -12.759867668151855
    9. '#' → logprob: -13.634867668151855
    10. '   ' → logprob: -14.384867668151855

Token 563: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06200286000967026
    2. ':' → logprob: -3.4370028972625732
    3. '<|end|>' → logprob: -4.562002658843994
    4. '       ' → logprob: -5.437002658843994
    5. ' for' → logprob: -5.687002658843994
    6. '    ' → logprob: -6.687002658843994
    7. ':
' → logprob: -6.937002658843994
    8. '
' → logprob: -6.937002658843994
    9. ' :' → logprob: -7.062002658843994
    10. '    
' → logprob: -7.312002658843994

Token 564: ' carré' (ID: 191546)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.052838169038295746
    2. 'c' → logprob: -3.552838087081909
    3. 'car' → logprob: -4.677838325500488
    4. 'mat' → logprob: -5.802838325500488
    5. 'code' → logprob: -5.927838325500488
    6. ' carré' → logprob: -6.052838325500488
    7. 'm' → logprob: -6.802838325500488
    8. 'mot' → logprob: -7.427838325500488
    9. '```' → logprob: -7.552838325500488
    10. 'matrix' → logprob: -7.552838325500488

Token 565: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4983896315097809
    2. ':' → logprob: -1.1233896017074585
    3. '<|end|>' → logprob: -3.748389720916748
    4. ':
' → logprob: -4.123389720916748
    5. ' for' → logprob: -5.123389720916748
    6. ' ' → logprob: -5.998389720916748
    7. '       ' → logprob: -6.123389720916748
    8. ' :' → logprob: -6.123389720916748
    9. '    
' → logprob: -6.248389720916748
    10. '[' → logprob: -6.498389720916748

Token 566: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3190111517906189
    2. ':' → logprob: -1.4440112113952637
    3. '       ' → logprob: -3.6940112113952637
    4. ':
' → logprob: -4.944011211395264
    5. ' :' → logprob: -6.694011211395264
    6. '    
' → logprob: -7.069011211395264
    7. '<|end|>' → logprob: -7.444011211395264
    8. '    ' → logprob: -7.694011211395264
    9. '
' → logprob: -7.944011211395264
    10. '        
' → logprob: -8.194010734558105

Token 567: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3924647569656372
    2. 'for' → logprob: -1.6424647569656372
    3. ' for' → logprob: -1.8924647569656372
    4. '    ' → logprob: -1.8924647569656372
    5. '   ' → logprob: -2.0174646377563477
    6. '     
' → logprob: -3.1424646377563477
    7. 'i' → logprob: -4.142464637756348
    8. 'a' → logprob: -4.142464637756348
    9. ' 
' → logprob: -4.267464637756348
    10. '    
' → logprob: -4.517464637756348

Token 568: ' a' (ID: 261)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5826209187507629
    2. ' for' → logprob: -1.4576208591461182
    3. '   ' → logprob: -2.082620859146118
    4. 'a' → logprob: -3.832620859146118
    5. 'i' → logprob: -3.957620859146118
    6. ' mid' → logprob: -5.207621097564697
    7. ' a' → logprob: -5.332621097564697
    8. 'start' → logprob: -5.332621097564697
    9. ' i' → logprob: -5.457621097564697
    10. 'mid' → logprob: -5.582621097564697

Token 569: '[-' (ID: 17503)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.566539466381073
    2. '[' → logprob: -0.941539466381073
    3. '[-' → logprob: -3.8165395259857178
    4. '[len' → logprob: -5.316539287567139
    5. 'a' → logprob: -6.066539287567139
    6. '   ' → logprob: -6.191539287567139
    7. ' [' → logprob: -6.816539287567139
    8. 'for' → logprob: -6.816539287567139
    9. '#' → logprob: -6.941539287567139
    10. ' =' → logprob: -7.066539287567139

Token 570: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.005000936333090067
    2. '1' → logprob: -5.380001068115234
    3. '6' → logprob: -8.380001068115234
    4. '3' → logprob: -10.380001068115234
    5. ' ' → logprob: -10.380001068115234
    6. '2' → logprob: -10.630001068115234
    7. '4' → logprob: -11.005001068115234
    8. '   ' → logprob: -11.692501068115234
    9. '```' → logprob: -11.692501068115234
    10. '7' → logprob: -12.130001068115234

Token 571: ']' (ID: 60)
  Prédit: '][-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][-' → logprob: -0.11203597486019135
    2. ']' → logprob: -2.9870359897613525
    3. '][' → logprob: -3.1120359897613525
    4. '][:' → logprob: -5.362035751342773
    5. ':' → logprob: -5.612035751342773
    6. ':]' → logprob: -6.612035751342773
    7. '[-' → logprob: -7.612035751342773
    8. ' ][' → logprob: -7.612035751342773
    9. ' ]' → logprob: -9.362035751342773
    10. ' ' → logprob: -10.237035751342773

Token 572: ' représente' (ID: 88912)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.529050350189209
    2. '[-' → logprob: -0.904050350189209
    3. '][' → logprob: -6.154050350189209
    4. '][-' → logprob: -7.154050350189209
    5. ' [-' → logprob: -7.529050350189209
    6. ']' → logprob: -7.654050350189209
    7. ' [' → logprob: -7.779050350189209
    8. '[a' → logprob: -7.904050350189209
    9. '#' → logprob: -8.779050827026367
    10. '["' → logprob: -8.904050827026367

Token 573: ' l' (ID: 305)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9201050400733948
    2. ' la' → logprob: -1.29510498046875
    3. ' a' → logprob: -2.29510498046875
    4. 'la' → logprob: -2.42010498046875
    5. 'l' → logprob: -2.54510498046875
    6. ' the' → logprob: -3.79510498046875
    7. ' l' → logprob: -3.92010498046875
    8. 'the' → logprob: -4.92010498046875
    9. ' ' → logprob: -5.67010498046875
    10. 'n' → logprob: -5.79510498046875

Token 574: ''ant' (ID: 191172)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.32555192708969116
    2. 'e' → logprob: -1.825551986694336
    3. ''avant' → logprob: -2.325551986694336
    4. ''' → logprob: -4.700551986694336
    5. 'es' → logprob: -6.325551986694336
    6. '```' → logprob: -6.700551986694336
    7. ''a' → logprob: -6.825551986694336
    8. ''ensemble' → logprob: -7.200551986694336
    9. '['' → logprob: -7.200551986694336
    10. ''e' → logprob: -7.450551986694336

Token 575: 'ép' (ID: 35980)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.49435532093048096
    2. '-' → logprob: -1.869355320930481
    3. '[-' → logprob: -2.4943552017211914
    4. '[' → logprob: -3.6193552017211914
    5. 'é' → logprob: -3.6193552017211914
    6. '```' → logprob: -3.7443552017211914
    7. 'i' → logprob: -4.619355201721191
    8. ']' → logprob: -4.619355201721191
    9. 'ép' → logprob: -4.619355201721191
    10. 'er' → logprob: -4.869355201721191

Token 576: 'én' (ID: 3289)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.23293571174144745
    2. 'en' → logprob: -2.857935667037964
    3. 'én' → logprob: -2.857935667037964
    4. 'e' → logprob: -3.732935667037964
    5. 'r' → logprob: -3.982935667037964
    6. 'p' → logprob: -4.482935905456543
    7. 'é' → logprob: -4.482935905456543
    8. ']' → logprob: -5.607935905456543
    9. 'pen' → logprob: -6.107935905456543
    10. 'ép' → logprob: -6.107935905456543

Token 577: 'ulti' (ID: 10439)
  Prédit: 'ulti'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulti' → logprob: -0.04928526654839516
    2. 'ti' → logprob: -4.049285411834717
    3. 'ult' → logprob: -4.424285411834717
    4. 't' → logprob: -5.924285411834717
    5. 'u' → logprob: -6.049285411834717
    6. 'ul' → logprob: -6.049285411834717
    7. 'der' → logprob: -6.049285411834717
    8. 'i' → logprob: -6.299285411834717
    9. 'últ' → logprob: -6.549285411834717
    10. 'ultimate' → logprob: -6.549285411834717

Token 578: 'ème' (ID: 9767)
  Prédit: 'me'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.008419771678745747
    2. 'm' → logprob: -5.258419990539551
    3. 'ème' → logprob: -6.008419990539551
    4. 'mé' → logprob: -8.25841999053955
    5. 'ma' → logprob: -8.75841999053955
    6. 'mate' → logprob: -9.75841999053955
    7. 'eme' → logprob: -10.13341999053955
    8. 'mi' → logprob: -10.38341999053955
    9. 'mo' → logprob: -10.38341999053955
    10. '`' → logprob: -10.50841999053955

Token 579: ' (' (ID: 350)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6484696269035339
    2. '[' → logprob: -2.0234696865081787
    3. 'e' → logprob: -2.1484696865081787
    4. '[-' → logprob: -2.8984696865081787
    5. 'a' → logprob: -3.7734696865081787
    6. '```' → logprob: -4.0234694480896
    7. 'ligne' → logprob: -4.1484694480896
    8. '][' → logprob: -4.2734694480896
    9. 'l' → logprob: -4.5234694480896
    10. ' ' → logprob: -4.5234694480896

Token 580: '5' (ID: 20)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3485693037509918
    2. '-' → logprob: -1.4735692739486694
    3. ':' → logprob: -4.348569393157959
    4. ' ]' → logprob: -4.598569393157959
    5. 'a' → logprob: -5.223569393157959
    6. ' -' → logprob: -5.223569393157959
    7. ' line' → logprob: -5.973569393157959
    8. '-l' → logprob: -5.973569393157959
    9. ' index' → logprob: -6.098569393157959
    10. 'index' → logprob: -6.098569393157959

Token 581: 'ème' (ID: 9767)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5467920303344727
    2. ']-' → logprob: -1.5467920303344727
    3. '-' → logprob: -2.0467920303344727
    4. 'e' → logprob: -3.6717920303344727
    5. ':' → logprob: -4.046792030334473
    6. ':]' → logprob: -4.546792030334473
    7. 'ième' → logprob: -5.296792030334473
    8. 'i' → logprob: -5.421792030334473
    9. '][-' → logprob: -5.796792030334473
    10. '-i' → logprob: -6.296792030334473

Token 582: ' à' (ID: 1221)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5229835510253906
    2. '-' → logprob: -1.6479835510253906
    3. '-l' → logprob: -1.8979835510253906
    4. 'from' → logprob: -4.897983551025391
    5. ']-' → logprob: -5.022983551025391
    6. 'ligne' → logprob: -5.147983551025391
    7. ' -' → logprob: -5.272983551025391
    8. 'index' → logprob: -5.522983551025391
    9. '][-' → logprob: -5.647983551025391
    10. ')' → logprob: -5.647983551025391

Token 583: ' partir' (ID: 12100)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.29871630668640137
    2. 'last' → logprob: -1.9237163066864014
    3. 'fin' → logprob: -3.0487163066864014
    4. 'dern' → logprob: -3.7987163066864014
    5. ' la' → logprob: -4.7987165451049805
    6. '```' → logprob: -5.0487165451049805
    7. 'l' → logprob: -5.4237165451049805
    8. 'end' → logprob: -5.9237165451049805
    9. 'from' → logprob: -6.0487165451049805
    10. '-end' → logprob: -6.0487165451049805

Token 584: ' de' (ID: 334)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5995263457298279
    2. 'la' → logprob: -0.8495263457298279
    3. '-la' → logprob: -4.474526405334473
    4. ']' → logprob: -5.849526405334473
    5. '-l' → logprob: -6.349526405334473
    6. 'l' → logprob: -6.349526405334473
    7. 'de' → logprob: -6.474526405334473
    8. ' la' → logprob: -7.724526405334473
    9. ')' → logprob: -7.724526405334473
    10. '-end' → logprob: -7.974526405334473

Token 585: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.0060762143693864346
    2. '-' → logprob: -5.756076335906982
    3. ' la' → logprob: -6.756076335906982
    4. 'fin' → logprob: -7.131076335906982
    5. '-la' → logprob: -8.006075859069824
    6. 'a' → logprob: -8.881075859069824
    7. 'l' → logprob: -9.006075859069824
    8. ')' → logprob: -9.256075859069824
    9. 'der' → logprob: -9.256075859069824
    10. 'dern' → logprob: -10.506075859069824

Token 586: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.01272306963801384
    2. 'end' → logprob: -4.637722969055176
    3. 'dern' → logprob: -6.512722969055176
    4. 'd' → logprob: -8.137722969055176
    5. ' fin' → logprob: -8.262722969055176
    6. '```' → logprob: -8.637722969055176
    7. 'a' → logprob: -9.012722969055176
    8. ')' → logprob: -9.512722969055176
    9. 'dro' → logprob: -9.512722969055176
    10. '-fin' → logprob: -9.512722969055176

Token 587: ')' (ID: 8)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005370598752051592
    2. '],' → logprob: -6.130370616912842
    3. ' ]' → logprob: -6.505370616912842
    4. 'index' → logprob: -8.130370140075684
    5. ':' → logprob: -8.380370140075684
    6. '])' → logprob: -8.380370140075684
    7. '][' → logprob: -8.630370140075684
    8. '][-' → logprob: -9.005370140075684
    9. '].' → logprob: -9.255370140075684
    10. '][:' → logprob: -9.505370140075684

Token 588: ' ligne' (ID: 19583)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09431023895740509
    2. '][' → logprob: -2.7193102836608887
    3. '][:' → logprob: -5.094310283660889
    4. '[' → logprob: -5.594310283660889
    5. '<|end|>' → logprob: -5.719310283660889
    6. '][]' → logprob: -5.844310283660889
    7. '][-' → logprob: -5.969310283660889
    8. ']
' → logprob: -7.094310283660889
    9. ' ]' → logprob: -7.094310283660889
    10. '].' → logprob: -7.719310283660889

Token 589: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.595978319644928
    2. ']' → logprob: -2.220978260040283
    3. 'a' → logprob: -2.345978260040283
    4. '<|end|>' → logprob: -2.470978260040283
    5. '[' → logprob: -2.845978260040283
    6. ',' → logprob: -3.720978260040283
    7. '][' → logprob: -4.095978260040283
    8. '#' → logprob: -4.845978260040283
    9. 'for' → logprob: -4.970978260040283
    10. '
' → logprob: -4.970978260040283

Token 590: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.24178153276443481
    2. ' a' → logprob: -1.61678147315979
    3. ' ' → logprob: -5.616781711578369
    4. '#' → logprob: -6.116781711578369
    5. '   ' → logprob: -6.116781711578369
    6. 'for' → logprob: -6.991781711578369
    7. ' #' → logprob: -7.116781711578369
    8. '    ' → logprob: -7.491781711578369
    9. 'and' → logprob: -7.616781711578369
    10. ')' → logprob: -7.616781711578369

Token 591: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00041744497139006853
    2. '[' → logprob: -8.250417709350586
    3. ' [-' → logprob: -9.375417709350586
    4. '   ' → logprob: -10.125417709350586
    5. '#' → logprob: -11.750417709350586
    6. '][-' → logprob: -12.250417709350586
    7. ' ' → logprob: -12.875417709350586
    8. '...' → logprob: -12.875417709350586
    9. '```' → logprob: -13.125417709350586
    10. '
' → logprob: -13.375417709350586

Token 592: '4' (ID: 19)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.03725966811180115
    2. '1' → logprob: -3.537259578704834
    3. '4' → logprob: -5.037259578704834
    4. '3' → logprob: -7.287259578704834
    5. '2' → logprob: -8.787260055541992
    6. '```' → logprob: -10.412260055541992
    7. ']' → logprob: -10.662260055541992
    8. '...' → logprob: -11.162260055541992
    9. ' ' → logprob: -11.162260055541992
    10. '6' → logprob: -11.162260055541992

Token 593: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01635199412703514
    2. '][-' → logprob: -4.64135217666626
    3. '][' → logprob: -5.14135217666626
    4. '],' → logprob: -8.016351699829102
    5. '][]' → logprob: -9.016351699829102
    6. '][:' → logprob: -9.141351699829102
    7. ']
' → logprob: -9.391351699829102
    8. '[-' → logprob: -10.891351699829102
    9. ' ]' → logprob: -11.266351699829102
    10. '].' → logprob: -11.766351699829102

Token 594: ' la' (ID: 557)
  Prédit: ' représente'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' représente' → logprob: -0.7625022530555725
    2. ']' → logprob: -0.8875022530555725
    3. '[' → logprob: -3.7625021934509277
    4. 'rep' → logprob: -3.8875021934509277
    5. ',' → logprob: -4.387502193450928
    6. 'represent' → logprob: -4.637502193450928
    7. ' represents' → logprob: -4.762502193450928
    8. ' représ' → logprob: -5.137502193450928
    9. '   ' → logprob: -5.387502193450928
    10. '[]' → logprob: -5.637502193450928

Token 595: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.015855224803090096
    2. '-' → logprob: -4.265855312347412
    3. '(-' → logprob: -7.515855312347412
    4. '[-' → logprob: -7.515855312347412
    5. ' ' → logprob: -9.140854835510254
    6. '5' → logprob: -9.390854835510254
    7. '```' → logprob: -9.390854835510254
    8. '...' → logprob: -9.890854835510254
    9. '(' → logprob: -9.890854835510254
    10. 'a' → logprob: -10.390854835510254

Token 596: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.012619832530617714
    2. '-' → logprob: -4.387619972229004
    3. '[-' → logprob: -9.637619972229004
    4. '5' → logprob: -11.262619972229004
    5. '(-' → logprob: -11.762619972229004
    6. '```' → logprob: -12.137619972229004
    7. '3' → logprob: -12.387619972229004
    8. ' -' → logprob: -12.387619972229004
    9. ' ' → logprob: -12.512619972229004
    10. '...' → logprob: -13.512619972229004

Token 597: 'ème' (ID: 9767)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.031161805614829063
    2. '5' → logprob: -4.531161785125732
    3. '][' → logprob: -5.281161785125732
    4. '][-' → logprob: -5.281161785125732
    5. ':]' → logprob: -5.281161785125732
    6. ':' → logprob: -6.406161785125732
    7. '[-' → logprob: -6.656161785125732
    8. '   ' → logprob: -7.406161785125732
    9. '][]' → logprob: -8.78116226196289
    10. '[' → logprob: -9.03116226196289

Token 598: ' à' (ID: 1221)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07598570734262466
    2. '][' → logprob: -3.5759856700897217
    3. '[' → logprob: -4.325985908508301
    4. '],' → logprob: -4.825985908508301
    5. '[-' → logprob: -4.825985908508301
    6. '][-' → logprob: -5.075985908508301
    7. '][]' → logprob: -5.950985908508301
    8. '[]' → logprob: -6.950985908508301
    9. '[line' → logprob: -7.075985908508301
    10. '][:' → logprob: -7.700985908508301

Token 599: ' partir' (ID: 12100)
  Prédit: '-end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-end' → logprob: -0.3231964409351349
    2. 'fin' → logprob: -2.5731964111328125
    3. '-' → logprob: -2.6981964111328125
    4. '1' → logprob: -2.9481964111328125
    5. 'end' → logprob: -4.1981964111328125
    6. '-f' → logprob: -4.1981964111328125
    7. '-fin' → logprob: -4.8231964111328125
    8. '-d' → logprob: -4.9481964111328125
    9. '4' → logprob: -4.9481964111328125
    10. 'last' → logprob: -5.3231964111328125

Token 600: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.10807888209819794
    2. 'à' → logprob: -3.233078956604004
    3. ' de' → logprob: -3.358078956604004
    4. 'la' → logprob: -4.983078956604004
    5. '[-' → logprob: -5.483078956604004
    6. ']' → logprob: -5.608078956604004
    7. 'du' → logprob: -5.858078956604004
    8. 'd' → logprob: -6.108078956604004
    9. 'from' → logprob: -6.733078956604004
    10. '-l' → logprob: -6.733078956604004

Token 601: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.0034290081821382046
    2. 'fin' → logprob: -6.003428936004639
    3. ' la' → logprob: -7.003428936004639
    4. '-' → logprob: -11.378429412841797
    5. 'a' → logprob: -11.628429412841797
    6. 'l' → logprob: -11.878429412841797
    7. 'the' → logprob: -12.128429412841797
    8. '-la' → logprob: -13.253429412841797
    9. ' fin' → logprob: -13.378429412841797
    10. ' ' → logprob: -13.503429412841797

Token 602: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.0004474732850212604
    2. ' fin' → logprob: -7.7504472732543945
    3. '-fin' → logprob: -11.375447273254395
    4. '-' → logprob: -13.250447273254395
    5. 'end' → logprob: -14.125447273254395
    6. 'f' → logprob: -14.375447273254395
    7. '_fin' → logprob: -14.625447273254395
    8. 'dern' → logprob: -15.125447273254395
    9. 'fond' → logprob: -15.375447273254395
    10. 'dé' → logprob: -15.500447273254395

Token 603: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0077004432678223
    2. '   ' → logprob: -1.1327004432678223
    3. 'a' → logprob: -1.5077004432678223
    4. ']' → logprob: -2.7577004432678223
    5. '#' → logprob: -5.257700443267822
    6. '<|end|>' → logprob: -5.757700443267822
    7. ',
' → logprob: -6.132700443267822
    8. '
' → logprob: -6.257700443267822
    9. '[' → logprob: -6.507700443267822
    10. ' and' → logprob: -6.632700443267822

Token 604: ' ...
' (ID: 12646)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5052728056907654
    2. 'a' → logprob: -1.0052728652954102
    3. '   ' → logprob: -3.63027286529541
    4. '#' → logprob: -6.38027286529541
    5. ' and' → logprob: -6.88027286529541
    6. 'and' → logprob: -7.00527286529541
    7. ' #' → logprob: -9.00527286529541
    8. '#a' → logprob: -9.25527286529541
    9. '...' → logprob: -9.63027286529541
    10. '```' → logprob: -10.13027286529541

Token 605: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06720823794603348
    2. 'a' → logprob: -2.9422082901000977
    3. ':' → logprob: -5.067208290100098
    4. ' a' → logprob: -6.567208290100098
    5. '
' → logprob: -7.442208290100098
    6. ',' → logprob: -7.442208290100098
    7. '```' → logprob: -7.692208290100098
    8. ' =' → logprob: -7.817208290100098
    9. ':
' → logprob: -7.817208290100098
    10. '    
' → logprob: -8.192208290100098

Token 606: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.447089821100235
    2. 'a' → logprob: -1.1970897912979126
    3. ' a' → logprob: -2.947089910507202
    4. ' for' → logprob: -5.697089672088623
    5. 'for' → logprob: -6.197089672088623
    6. ' ' → logprob: -8.947090148925781
    7. '    
' → logprob: -8.947090148925781
    8. '#' (adapté à ' #') → logprob: -9.197090148925781
    9. '    ' → logprob: -10.447090148925781
    10. '
' → logprob: -10.697090148925781

Token 607: ' Les' (ID: 7029)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09168709814548492
    2. 'for' → logprob: -2.4666872024536133
    3. '#' → logprob: -6.966687202453613
    4. 'i' → logprob: -7.841687202453613
    5. ' a' → logprob: -7.966687202453613
    6. 'mid' → logprob: -8.216687202453613
    7. '   ' → logprob: -8.341687202453613
    8. ' for' → logprob: -8.841687202453613
    9. 'j' → logprob: -9.091687202453613
    10. 'middle' → logprob: -10.216687202453613

Token 608: ' indices' (ID: 30378)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.17369480431079865
    2. '[-' → logprob: -2.2986948490142822
    3. ' a' → logprob: -3.6736948490142822
    4. 'indices' → logprob: -4.798694610595703
    5. ' indices' → logprob: -5.173694610595703
    6. '#' → logprob: -5.298694610595703
    7. ' lignes' → logprob: -6.298694610595703
    8. ' ' → logprob: -6.798694610595703
    9. 'for' → logprob: -7.173694610595703
    10. 'n' → logprob: -7.173694610595703

Token 609: ' nég' (ID: 55805)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34925392270088196
    2. '[-' → logprob: -2.3492538928985596
    3. 'a' → logprob: -2.8492538928985596
    4. '=' → logprob: -3.2242538928985596
    5. 'des' → logprob: -4.224254131317139
    6. ' des' → logprob: -4.224254131317139
    7. 'de' → logprob: -4.724254131317139
    8. '0' → logprob: -4.974254131317139
    9. '-' → logprob: -5.099254131317139
    10. 's' → logprob: -5.224254131317139

Token 610: 'atifs' (ID: 66205)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.47546374797821045
    2. 'iques' → logprob: -1.4754637479782104
    3. ']' → logprob: -3.6004638671875
    4. '4' → logprob: -3.7254638671875
    5. '   ' → logprob: -4.2254638671875
    6. 'atifs' → logprob: -4.3504638671875
    7. '][-' → logprob: -4.4754638671875
    8. 'érieurs' → logprob: -5.3504638671875
    9. 'ales' → logprob: -5.6004638671875
    10. '1' → logprob: -5.6004638671875

Token 611: ' sont' (ID: 5242)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5461888313293457
    2. '[-' → logprob: -1.6711888313293457
    3. 's' → logprob: -2.2961888313293457
    4. ']' → logprob: -2.5461888313293457
    5. ' sont' → logprob: -2.5461888313293457
    6. ' représentent' → logprob: -2.6711888313293457
    7. ' vont' → logprob: -3.5461888313293457
    8. ' continu' → logprob: -3.5461888313293457
    9. ' commencent' → logprob: -3.6711888313293457
    10. ':' → logprob: -3.6711888313293457

Token 612: ' utilisés' (ID: 94258)
  Prédit: ' utilisés'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisés' → logprob: -0.1983044445514679
    2. 'util' → logprob: -1.8233044147491455
    3. ' ici' → logprob: -5.573304653167725
    4. ' utilis' → logprob: -5.948304653167725
    5. ' utilisées' → logprob: -6.073304653167725
    6. 'une' → logprob: -6.198304653167725
    7. ' used' → logprob: -6.698304653167725
    8. ' une' → logprob: -6.948304653167725
    9. ' utilisé' → logprob: -7.448304653167725
    10. 'used' → logprob: -7.573304653167725

Token 613: ' pour' (ID: 1930)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6061534881591797
    2. ']' → logprob: -1.7311534881591797
    3. '[-' → logprob: -2.6061534881591797
    4. '[' → logprob: -2.8561534881591797
    5. '   ' → logprob: -3.9811534881591797
    6. ' for' → logprob: -3.9811534881591797
    7. ' a' → logprob: -4.10615348815918
    8. ' pour' → logprob: -4.10615348815918
    9. ')' → logprob: -4.35615348815918
    10. 'a' → logprob: -4.48115348815918

Token 614: ' compter' (ID: 81694)
  Prédit: ' accéder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' accéder' → logprob: -0.31214529275894165
    2. 'acc' → logprob: -2.062145233154297
    3. ' acc' → logprob: -2.687145233154297
    4. 'index' → logprob: -4.437145233154297
    5. ' acceder' → logprob: -4.687145233154297
    6. ' continuer' → logprob: -5.437145233154297
    7. ' sélectionner' → logprob: -5.562145233154297
    8. 'l' → logprob: -5.812145233154297
    9. ']' → logprob: -5.812145233154297
    10. 'ré' → logprob: -6.062145233154297

Token 615: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -1.4797358512878418
    2. 'de' → logprob: -2.229735851287842
    3. ' des' → logprob: -2.229735851287842
    4. 'des' → logprob: -2.604735851287842
    5. ' de' → logprob: -2.729735851287842
    6. 'à' → logprob: -2.729735851287842
    7. 'from' → logprob: -2.854735851287842
    8. 'les' → logprob: -3.104735851287842
    9. ' vers' → logprob: -3.604735851287842
    10. ' jusqu' → logprob: -3.604735851287842

Token 616: ' partir' (ID: 12100)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.04509247839450836
    2. ' partir' → logprob: -3.1700925827026367
    3. 'par' → logprob: -7.170092582702637
    4. 'l' → logprob: -7.295092582702637
    5. '-part' → logprob: -8.795092582702637
    6. 'la' → logprob: -8.920092582702637
    7. 'comp' → logprob: -8.920092582702637
    8. 'from' → logprob: -9.545092582702637
    9. 'p' → logprob: -10.045092582702637
    10. 'reb' → logprob: -10.670092582702637

Token 617: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.04962313920259476
    2. ' de' → logprob: -3.2996232509613037
    3. 'la' → logprob: -5.049623012542725
    4. 'du' → logprob: -6.799623012542725
    5. '   ' → logprob: -6.799623012542725
    6. 'a' → logprob: -6.924623012542725
    7. 'à' → logprob: -6.924623012542725
    8. '#' → logprob: -8.049623489379883
    9. '[-' → logprob: -9.299623489379883
    10. 'd' → logprob: -9.674623489379883

Token 618: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.03141922131180763
    2. ' la' → logprob: -3.781419277191162
    3. 'l' → logprob: -5.406419277191162
    4. '-' → logprob: -5.906419277191162
    5. '-la' → logprob: -8.156418800354004
    6. 'the' → logprob: -8.406418800354004
    7. '-l' → logprob: -8.906418800354004
    8. 'a' → logprob: -9.656418800354004
    9. '-f' → logprob: -10.156418800354004
    10. ']' → logprob: -10.531418800354004

Token 619: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.06470267474651337
    2. ' fin' → logprob: -2.9397027492523193
    3. 'end' → logprob: -4.93970251083374
    4. '-fin' → logprob: -7.06470251083374
    5. ' end' → logprob: -7.18970251083374
    6. '-end' → logprob: -7.93970251083374
    7. '-' → logprob: -7.93970251083374
    8. 'a' → logprob: -10.189702987670898
    9. 'dern' → logprob: -10.439702987670898
    10. 'n' → logprob: -10.564702987670898

Token 620: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03435893729329109
    2. ':' → logprob: -3.5343589782714844
    3. 'a' → logprob: -6.159358978271484
    4. ':
' → logprob: -6.659358978271484
    5. '    
' → logprob: -8.784358978271484
    6. ' :' → logprob: -9.159358978271484
    7. '.' → logprob: -9.284358978271484
    8. ']' → logprob: -9.284358978271484
    9. '
' → logprob: -9.409358978271484
    10. '```' → logprob: -9.659358978271484

Token 621: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.03692688047885895
    2. 'a' → logprob: -3.6619269847869873
    3. ' la' → logprob: -4.786926746368408
    4. 'l' → logprob: -7.036926746368408
    5. 'liste' → logprob: -7.161926746368408
    6. 'list' → logprob: -8.411927223205566
    7. '```' → logprob: -8.786927223205566
    8. 'n' → logprob: -9.036927223205566
    9. '#' → logprob: -10.411927223205566
    10. ' a' → logprob: -11.161927223205566

Token 622: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.006439788267016411
    2. ' liste' → logprob: -5.506439685821533
    3. 'list' → logprob: -6.256439685821533
    4. 'a' → logprob: -8.381440162658691
    5. '```' → logprob: -9.381440162658691
    6. 'ligne' → logprob: -9.631440162658691
    7. 'mat' → logprob: -11.006440162658691
    8. '#' → logprob: -11.006440162658691
    9. 'Liste' → logprob: -12.006440162658691
    10. ' ' → logprob: -13.006440162658691

Token 623: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06534207612276077
    2. ':' → logprob: -3.3153421878814697
    3. 'a' → logprob: -4.065341949462891
    4. ':
' → logprob: -5.065341949462891
    5. '
' → logprob: -7.315341949462891
    6. '    
' → logprob: -7.315341949462891
    7. ' a' → logprob: -7.440341949462891
    8. '```' → logprob: -8.56534194946289
    9. ' :' → logprob: -8.69034194946289
    10. ' :
' → logprob: -8.81534194946289

Token 624: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1471303552389145
    2. ':' → logprob: -2.272130250930786
    3. 'a' → logprob: -3.897130250930786
    4. ':
' → logprob: -4.772130489349365
    5. ' a' → logprob: -6.522130489349365
    6. ' :
' → logprob: -6.897130489349365
    7. ' :' → logprob: -7.397130489349365
    8. '    
' → logprob: -7.772130489349365
    9. '
' → logprob: -8.022130012512207
    10. '[' → logprob: -9.022130012512207

Token 625: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.1924513429403305
    2. '   ' → logprob: -2.067451238632202
    3. ' a' → logprob: -3.067451238632202
    4. ' 
' → logprob: -7.317451477050781
    5. ' ' → logprob: -7.817451477050781
    6. '#' → logprob: -8.692451477050781
    7. '    
' → logprob: -8.942451477050781
    8. '
' → logprob: -9.192451477050781
    9. '    ' → logprob: -9.317451477050781
    10. '     
' → logprob: -9.567451477050781

Token 626: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.2948405128554441e-05
    2. '[' → logprob: -11.37501335144043
    3. ' [-' → logprob: -14.37501335144043
    4. 'a' → logprob: -15.50001335144043
    5. '   ' → logprob: -15.50001335144043
    6. '][-' → logprob: -15.50001335144043
    7. '#' → logprob: -16.25001335144043
    8. '```' → logprob: -16.62501335144043
    9. '[
' → logprob: -16.75001335144043
    10. '[:-' → logprob: -17.25001335144043

Token 627: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.00048024329589679837
    2. '4' → logprob: -8.250480651855469
    3. '1' → logprob: -9.250480651855469
    4. '3' → logprob: -9.875480651855469
    5. '7' → logprob: -9.875480651855469
    6. '2' → logprob: -12.125480651855469
    7. ' ' → logprob: -12.375480651855469
    8. '```' → logprob: -12.437980651855469
    9. '6' → logprob: -12.875480651855469
    10. '   ' → logprob: -14.375480651855469

Token 628: '][-' (ID: 162298)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.7153473496437073
    2. '][-' → logprob: -0.8403473496437073
    3. ']' → logprob: -2.5903472900390625
    4. '][:' → logprob: -5.5903472900390625
    5. ']["' → logprob: -8.215347290039062
    6. ' ][' → logprob: -9.340347290039062
    7. '][]' → logprob: -9.340347290039062
    8. ']=' → logprob: -9.465347290039062
    9. ']['' → logprob: -10.465347290039062
    10. '[-' → logprob: -10.715347290039062

Token 629: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.03356766700744629
    2. '1' → logprob: -3.6585676670074463
    3. '3' → logprob: -5.658567428588867
    4. '4' → logprob: -6.158567428588867
    5. '2' → logprob: -6.783567428588867
    6. '6' → logprob: -7.783567428588867
    7. '7' → logprob: -9.721067428588867
    8. '```' → logprob: -12.533567428588867
    9. '-' → logprob: -12.596067428588867
    10. ']' → logprob: -12.908567428588867

Token 630: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0029427558183670044
    2. ']=' → logprob: -6.2529425621032715
    3. ' ]' → logprob: -7.0029425621032715
    4. '=' → logprob: -9.62794303894043
    5. '[' → logprob: -11.62794303894043
    6. '-' → logprob: -12.37794303894043
    7. ']='' → logprob: -12.37794303894043
    8. '   ' → logprob: -12.50294303894043
    9. '"]' → logprob: -12.62794303894043
    10. ']="' → logprob: -12.87794303894043

Token 631: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0009398083784617484
    2. ' a' → logprob: -7.000939846038818
    3. '   ' → logprob: -10.50093936920166
    4. '	a' → logprob: -15.25093936920166
    5. ' ' → logprob: -15.50093936920166
    6. '  ' → logprob: -15.75093936920166
    7. '    ' → logprob: -16.250940322875977
    8. '=' → logprob: -16.750940322875977
    9. 'а' → logprob: -17.000940322875977
    10. '_a' → logprob: -17.375940322875977

Token 632: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.735893965815194e-05
    2. '][-' → logprob: -12.000017166137695
    3. ' [-' → logprob: -12.250017166137695
    4. '[' → logprob: -13.375017166137695
    5. '...' → logprob: -13.375017166137695
    6. '   ' → logprob: -13.500017166137695
    7. 'a' → logprob: -14.875017166137695
    8. '-' → logprob: -15.375017166137695
    9. '```' → logprob: -15.375017166137695
    10. '[:-' → logprob: -15.875017166137695

Token 633: '5' (ID: 20)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.10063491761684418
    2. '5' → logprob: -2.350634813308716
    3. '1' → logprob: -7.975635051727295
    4. '3' → logprob: -10.038134574890137
    5. '```' → logprob: -11.413134574890137
    6. '2' → logprob: -11.850634574890137
    7. ' ' → logprob: -13.038134574890137
    8. ']' → logprob: -13.600634574890137
    9. '}' → logprob: -13.663134574890137
    10. '{' → logprob: -13.725634574890137

Token 634: '][-' (ID: 162298)
  Prédit: '][-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][-' → logprob: -8.804671233519912e-05
    2. '[-' → logprob: -9.75008773803711
    3. '][' → logprob: -10.87508773803711
    4. ']' → logprob: -11.75008773803711
    5. '][:' → logprob: -13.62508773803711
    6. '-' → logprob: -14.37508773803711
    7. '   ' → logprob: -15.37508773803711
    8. ' ' → logprob: -15.62508773803711
    9. '1' → logprob: -15.75008773803711
    10. '+' → logprob: -15.87508773803711

Token 635: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -2.8206473871250637e-05
    2. '3' → logprob: -11.000028610229492
    3. '1' → logprob: -11.750028610229492
    4. '```' → logprob: -14.000028610229492
    5. '2' → logprob: -14.125028610229492
    6. '5' → logprob: -14.687528610229492
    7. ' ' → logprob: -15.562528610229492
    8. '{' → logprob: -15.625028610229492
    9. '-' → logprob: -15.812528610229492
    10. '[' → logprob: -15.875028610229492

Token 636: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.012543203309178352
    2. ']' → logprob: -4.387543201446533
    3. ' ],' → logprob: -11.137543678283691
    4. ',' → logprob: -11.387543678283691
    5. ']=' → logprob: -12.512543678283691
    6. 'a' → logprob: -13.512543678283691
    7. '"],' → logprob: -14.512543678283691
    8. '],
' → logprob: -14.762543678283691
    9. '   ' → logprob: -14.762543678283691
    10. ''],' → logprob: -14.887543678283691

Token 637: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3868784010410309
    2. ' a' → logprob: -1.1368783712387085
    3. '=' → logprob: -13.38687801361084
    4. ',' → logprob: -13.38687801361084
    5. ' =' → logprob: -13.63687801361084
    6. ',a' → logprob: -14.26187801361084
    7. '	a' → logprob: -14.38687801361084
    8. ''a' → logprob: -14.76187801361084
    9. '=a' → logprob: -14.88687801361084
    10. '   ' → logprob: -15.13687801361084

Token 638: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0002774246677290648
    2. '][-' → logprob: -8.250277519226074
    3. '-' → logprob: -12.000277519226074
    4. '...' → logprob: -12.500277519226074
    5. '[' → logprob: -12.875277519226074
    6. ' [-' → logprob: -13.375277519226074
    7. '<|end|>' → logprob: -14.875277519226074
    8. ']' → logprob: -14.875277519226074
    9. '[]' → logprob: -15.375277519226074
    10. '```' → logprob: -15.375277519226074

Token 639: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.08702841401100159
    2. '3' → logprob: -2.8370285034179688
    3. '4' → logprob: -3.7120285034179688
    4. '1' → logprob: -9.087028503417969
    5. '```' → logprob: -9.649528503417969
    6. '2' → logprob: -10.024528503417969
    7. '-' → logprob: -10.274528503417969
    8. ']' → logprob: -11.024528503417969
    9. '...' → logprob: -12.899528503417969
    10. '][-' → logprob: -13.024528503417969

Token 640: '][-' (ID: 162298)
  Prédit: '][-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][-' → logprob: -0.007992117665708065
    2. '],' → logprob: -5.257992267608643
    3. ']' → logprob: -6.507992267608643
    4. '[-' → logprob: -6.757992267608643
    5. '][' → logprob: -9.632991790771484
    6. '-' → logprob: -10.632991790771484
    7. ']=-' → logprob: -12.882991790771484
    8. '][:' → logprob: -13.632991790771484
    9. '...' → logprob: -13.632991790771484
    10. ']
' → logprob: -13.757991790771484

Token 641: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00017278951418120414
    2. '2' → logprob: -9.00017261505127
    3. '1' → logprob: -10.62517261505127
    4. '4' → logprob: -11.12517261505127
    5. '```' → logprob: -13.12517261505127
    6. '-' → logprob: -13.25017261505127
    7. '5' → logprob: -13.93767261505127
    8. ']' → logprob: -14.25017261505127
    9. ')' → logprob: -14.56267261505127
    10. '])' → logprob: -14.81267261505127

Token 642: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2822723686695099
    2. '],' → logprob: -1.4072723388671875
    3. ',' → logprob: -7.1572723388671875
    4. ']=' → logprob: -8.532272338867188
    5. ' ]' → logprob: -9.532272338867188
    6. ' ],' → logprob: -10.407272338867188
    7. '   ' → logprob: -10.657272338867188
    8. ' ,' → logprob: -12.907272338867188
    9. '"],' → logprob: -13.032272338867188
    10. 'a' → logprob: -13.407272338867188

Token 643: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.31331413984298706
    2. ' a' → logprob: -1.3133141994476318
    3. ',' → logprob: -11.438314437866211
    4. ' =' → logprob: -11.938314437866211
    5. ''a' → logprob: -12.313314437866211
    6. ''' → logprob: -12.438314437866211
    7. ',a' → logprob: -12.438314437866211
    8. ' ' → logprob: -12.688314437866211
    9. '   ' → logprob: -12.688314437866211
    10. '=' → logprob: -12.688314437866211

Token 644: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.018461517989635468
    2. '][-' → logprob: -4.01846170425415
    3. '-' → logprob: -8.768461227416992
    4. ']' → logprob: -9.643461227416992
    5. ' [-' → logprob: -10.518461227416992
    6. '...' → logprob: -11.143461227416992
    7. '[' → logprob: -11.268461227416992
    8. '   ' → logprob: -11.518461227416992
    9. '```' → logprob: -12.268461227416992
    10. '(-' → logprob: -12.393461227416992

Token 645: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.05865200608968735
    2. '3' → logprob: -3.683651924133301
    3. '4' → logprob: -3.933651924133301
    4. '2' → logprob: -4.433651924133301
    5. '1' → logprob: -8.5586519241333
    6. '```' → logprob: -9.9336519241333
    7. '-' → logprob: -9.9961519241333
    8. ']' → logprob: -10.1211519241333
    9. '])' → logprob: -11.8711519241333
    10. '...' → logprob: -12.0586519241333

Token 646: '][-' (ID: 162298)
  Prédit: '][-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][-' → logprob: -0.14897383749485016
    2. '],' → logprob: -2.1489739418029785
    3. ']' → logprob: -3.8989739418029785
    4. '[-' → logprob: -7.1489739418029785
    5. '-' → logprob: -7.7739739418029785
    6. '][' → logprob: -8.39897346496582
    7. ']=-' → logprob: -10.39897346496582
    8. ']-' → logprob: -10.89897346496582
    9. '][:' → logprob: -11.52397346496582
    10. '],
' → logprob: -11.89897346496582

Token 647: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0018967483192682266
    2. '3' → logprob: -6.626896858215332
    3. '1' → logprob: -7.751896858215332
    4. '-' → logprob: -9.814396858215332
    5. ' ' → logprob: -11.189396858215332
    6. '```' → logprob: -11.251896858215332
    7. ']' → logprob: -11.439396858215332
    8. '...' → logprob: -12.126896858215332
    9. '4' → logprob: -12.376896858215332
    10. '])' → logprob: -12.439396858215332

Token 648: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.04778977856040001
    2. ']' → logprob: -3.4227898120880127
    3. ',' → logprob: -4.297789573669434
    4. ']=' → logprob: -8.297789573669434
    5. '=' → logprob: -9.672789573669434
    6. 'a' → logprob: -9.922789573669434
    7. ' ],' → logprob: -10.422789573669434
    8. '   ' → logprob: -11.172789573669434
    9. '),' → logprob: -11.797789573669434
    10. ' ,' → logprob: -11.922789573669434

Token 649: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2519856095314026
    2. ' a' → logprob: -1.5019855499267578
    3. ''' → logprob: -10.876985549926758
    4. ' ' → logprob: -11.001985549926758
    5. '`' → logprob: -11.626985549926758
    6. ''a' → logprob: -12.751985549926758
    7. '<|end|>' → logprob: -13.001985549926758
    8. ' ' → logprob: -13.251985549926758
    9. 'n' → logprob: -13.376985549926758
    10. '```' → logprob: -13.751985549926758

Token 650: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0006319015519693494
    2. '][-' → logprob: -7.500631809234619
    3. '-' → logprob: -10.000632286071777
    4. ' [-' → logprob: -10.875632286071777
    5. '...' → logprob: -12.500632286071777
    6. '[' → logprob: -12.625632286071777
    7. ']' → logprob: -13.000632286071777
    8. '[]' → logprob: -13.750632286071777
    9. ' -' → logprob: -14.375632286071777
    10. '```' → logprob: -14.500632286071777

Token 651: '5' (ID: 20)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38035938143730164
    2. '3' → logprob: -1.255359411239624
    3. '2' → logprob: -4.005359172821045
    4. '5' → logprob: -4.755359172821045
    5. '4' → logprob: -5.505359172821045
    6. '6' → logprob: -8.005359649658203
    7. '```' → logprob: -9.630359649658203
    8. ' ' → logprob: -10.192859649658203
    9. 'a' → logprob: -11.192859649658203
    10. '0' → logprob: -11.630359649658203

Token 652: '][-' (ID: 162298)
  Prédit: '][-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][-' → logprob: -0.0593009889125824
    2. ']' → logprob: -2.9343008995056152
    3. '],' → logprob: -6.059300899505615
    4. '-' → logprob: -6.809300899505615
    5. '[-' → logprob: -7.559300899505615
    6. '][' → logprob: -8.434301376342773
    7. ']-' → logprob: -9.309301376342773
    8. ']=-' → logprob: -9.434301376342773
    9. ']
' → logprob: -11.434301376342773
    10. '][:' → logprob: -11.559301376342773

Token 653: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.911954500945285e-05
    2. '2' → logprob: -10.125088691711426
    3. '0' → logprob: -10.750088691711426
    4. '3' → logprob: -10.875088691711426
    5. '```' → logprob: -13.375088691711426
    6. ' ' → logprob: -13.687588691711426
    7. '   ' → logprob: -14.187588691711426
    8. '7' → logprob: -14.625088691711426
    9. '5' → logprob: -14.687588691711426
    10. '...' → logprob: -14.750088691711426

Token 654: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005415419116616249
    2. '],' → logprob: -6.130415439605713
    3. '=' → logprob: -6.380415439605713
    4. ']=' → logprob: -6.755415439605713
    5. ',' → logprob: -8.130414962768555
    6. ')' → logprob: -10.505414962768555
    7. ' ]' → logprob: -11.130414962768555
    8. ' =' → logprob: -11.380414962768555
    9. '']' → logprob: -12.380414962768555
    10. ']='' → logprob: -12.630414962768555

Token 655: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014603439718484879
    2. ' =' → logprob: -4.264603614807129
    3. ',' → logprob: -7.889603614807129
    4. '='' → logprob: -9.764603614807129
    5. ' ='' → logprob: -13.264603614807129
    6. '=('' → logprob: -13.389603614807129
    7. '=
' → logprob: -13.514603614807129
    8. '=

' → logprob: -13.889603614807129
    9. ' ,' → logprob: -14.264603614807129
    10. ' '=',' → logprob: -14.389603614807129

Token 656: ' list' (ID: 1562)
  Prédit: ''a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''a' → logprob: -0.007445128634572029
    2. '"a' → logprob: -5.257445335388184
    3. ' '' → logprob: -6.632445335388184
    4. '"' → logprob: -8.007445335388184
    5. ''b' → logprob: -9.007445335388184
    6. 'a' → logprob: -9.257445335388184
    7. ''h' → logprob: -9.757445335388184
    8. ''' → logprob: -10.007445335388184
    9. ''d' → logprob: -10.132445335388184
    10. ''s' → logprob: -10.632445335388184

Token 657: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.28582534193992615
    2. '('' → logprob: -1.7858253717422485
    3. '['' → logprob: -3.285825252532959
    4. '["' → logprob: -3.285825252532959
    5. '(['' → logprob: -5.285825252532959
    6. '(["' → logprob: -6.910825252532959
    7. '"' → logprob: -10.285825729370117
    8. '(' → logprob: -11.410825729370117
    9. ' ['' → logprob: -11.535825729370117
    10. '[' → logprob: -13.035825729370117

Token 658: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005566463340073824
    2. '"a' → logprob: -6.755566596984863
    3. 'abb' → logprob: -7.005566596984863
    4. '"' → logprob: -7.130566596984863
    5. 'aa' → logprob: -7.130566596984863
    6. 'abc' → logprob: -7.255566596984863
    7. 'aac' → logprob: -7.880566596984863
    8. ''a' → logprob: -8.130566596984863
    9. 'e' → logprob: -9.130566596984863
    10. 'aaa' → logprob: -9.380566596984863

Token 659: 'abb' (ID: 13538)
  Prédit: 'abb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abb' → logprob: -0.11430134624242783
    2. 'a' → logprob: -2.8643014430999756
    3. 'bb' → logprob: -3.1143014430999756
    4. 'bbc' → logprob: -5.6143012046813965
    5. 'bbb' → logprob: -6.8643012046813965
    6. 'b' → logprob: -7.3643012046813965
    7. 'abc' → logprob: -7.6143012046813965
    8. 'ab' → logprob: -7.7393012046813965
    9. '"' → logprob: -9.489301681518555
    10. 'bbbb' → logprob: -10.114301681518555

Token 660: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.001070323633030057
    2. 'cc' → logprob: -7.251070499420166
    3. '"' → logprob: -8.876070022583008
    4. '")' → logprob: -8.876070022583008
    5. 'b' → logprob: -11.126070022583008
    6. 'cd' → logprob: -11.126070022583008
    7. 'ccc' → logprob: -11.751070022583008
    8. 'ccd' → logprob: -12.001070022583008
    9. 'e' → logprob: -12.376070022583008
    10. 'cee' → logprob: -12.501070022583008

Token 661: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00263404194265604
    2. '")
' → logprob: -6.002634048461914
    3. '")
' → logprob: -9.502634048461914
    4. '"' → logprob: -10.252634048461914
    5. ' ")' → logprob: -10.752634048461914
    6. '");' → logprob: -11.877634048461914
    7. '')' → logprob: -12.502634048461914
    8. 'a' → logprob: -12.627634048461914
    9. '\"' → logprob: -13.002634048461914
    10. '")

' → logprob: -13.127634048461914

Token 662: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 663: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2365412563085556
    2. ',' → logprob: -2.736541271209717
    3. '  
' → logprob: -3.111541271209717
    4. '<|end|>' → logprob: -3.111541271209717
    5. '
' → logprob: -3.736541271209717
    6. '    
' → logprob: -4.736541271209717
    7. ',
' → logprob: -4.986541271209717
    8. ' a' → logprob: -5.611541271209717
    9. ')' → logprob: -5.986541271209717
    10. '   ' → logprob: -5.986541271209717

Token 664: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10789696872234344
    2. ' a' → logprob: -3.3578970432281494
    3. '   ' → logprob: -3.8578970432281494
    4. '<|end|>' → logprob: -3.9828970432281494
    5. '
' → logprob: -4.60789680480957
    6. ' ' → logprob: -5.10789680480957
    7. ' 
' → logprob: -5.73289680480957
    8. '    
' → logprob: -6.10789680480957
    9. '  
' → logprob: -6.48289680480957
    10. ')' → logprob: -7.10789680480957

Token 665: '5' (ID: 20)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0022772925440222025
    2. '#' → logprob: -7.002277374267578
    3. ' a' → logprob: -7.377277374267578
    4. '   ' → logprob: -9.002277374267578
    5. '
' → logprob: -9.252277374267578
    6. '...' → logprob: -9.377277374267578
    7. '[' → logprob: -9.752277374267578
    8. ')' → logprob: -10.002277374267578
    9. 'for' → logprob: -10.002277374267578
    10. '<|end|>' → logprob: -10.002277374267578

Token 666: 'ème' (ID: 9767)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 667: ' ligne' (ID: 19583)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 668: ' avant' (ID: 13339)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 669: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.09757119417190552
    2. 'fin' → logprob: -2.7225711345672607
    3. 'dern' → logprob: -3.7225711345672607
    4. ' la' → logprob: -6.09757137298584
    5. 'der' → logprob: -8.09757137298584
    6. 'le' → logprob: -8.72257137298584
    7. 'last' → logprob: -9.47257137298584
    8. 'l' → logprob: -10.22257137298584
    9. '<|end|>' → logprob: -10.22257137298584
    10. '```' → logprob: -10.34757137298584

Token 670: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -5.1093578804284334e-05
    2. ' fin' → logprob: -10.750051498413086
    3. 'dern' → logprob: -11.375051498413086
    4. 'f' → logprob: -11.875051498413086
    5. 'end' → logprob: -12.500051498413086
    6. '_fin' → logprob: -14.125051498413086
    7. '-fin' → logprob: -14.125051498413086
    8. 'der' → logprob: -14.250051498413086
    9. 'fim' → logprob: -14.375051498413086
    10. 'last' → logprob: -14.500051498413086

Token 671: '
' (ID: 198)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07456065714359283
    2. '   ' → logprob: -3.3245606422424316
    3. '
' → logprob: -3.6995606422424316
    4. '<|end|>' → logprob: -5.199560642242432
    5. ',' → logprob: -5.949560642242432
    6. '    
' → logprob: -7.199560642242432
    7. ' a' → logprob: -7.199560642242432
    8. ')' → logprob: -7.699560642242432
    9. '  
' → logprob: -8.69956111907959
    10. ' 
' → logprob: -9.07456111907959

Token 672: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0700846016407013
    2. '
' → logprob: -3.070084571838379
    3. ' a' → logprob: -4.695084571838379
    4. '   ' → logprob: -5.320084571838379
    5. '  
' → logprob: -5.945084571838379
    6. '    
' → logprob: -6.820084571838379
    7. ',' → logprob: -7.070084571838379
    8. '<|end|>' → logprob: -7.195084571838379
    9. ' ' → logprob: -7.570084571838379
    10. ' 
' → logprob: -7.820084571838379

Token 673: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.012872648425400257
    2. '   ' → logprob: -4.387872695922852
    3. ' a' → logprob: -8.387872695922852
    4. '
' → logprob: -10.637872695922852
    5. ',' → logprob: -11.262872695922852
    6. ' 
' → logprob: -11.387872695922852
    7. '	a' → logprob: -11.512872695922852
    8. 'for' → logprob: -11.637872695922852
    9. '    
' → logprob: -11.762872695922852
    10. ' ' → logprob: -11.887872695922852

Token 674: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -2.5776860184123507e-06
    2. '   ' → logprob: -13.75000286102295
    3. ' [-' → logprob: -15.00000286102295
    4. '#' → logprob: -15.12500286102295
    5. '[' → logprob: -15.25000286102295
    6. '...' → logprob: -15.50000286102295
    7. '[:-' → logprob: -15.87500286102295
    8. '```' → logprob: -15.87500286102295
    9. '][-' → logprob: -16.625001907348633
    10. 'a' → logprob: -17.375001907348633

Token 675: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0024901647120714188
    2. '5' → logprob: -6.002490043640137
    3. ' ' → logprob: -11.627490043640137
    4. '```' → logprob: -13.627490043640137
    5. '-' → logprob: -13.752490043640137
    6. '3' → logprob: -14.252490043640137
    7. '
' → logprob: -14.752490043640137
    8. '   ' → logprob: -15.252490043640137
    9. '[' → logprob: -15.314990043640137
    10. '４' → logprob: -15.377490043640137

Token 676: '][-' (ID: 162298)
  Prédit: '][-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][-' → logprob: -0.0014834359753876925
    2. '[-' → logprob: -6.62648344039917
    3. ']' → logprob: -9.001482963562012
    4. '][' → logprob: -10.376482963562012
    5. '][:' → logprob: -13.876482963562012
    6. '   ' → logprob: -14.501482963562012
    7. ' ' → logprob: -14.876482963562012
    8. ']-' → logprob: -14.876482963562012
    9. '][]' → logprob: -15.001482963562012
    10. '[' → logprob: -16.376483917236328

Token 677: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.16025885939598083
    2. '4' → logprob: -1.9102588891983032
    3. '3' → logprob: -12.222759246826172
    4. '[' → logprob: -12.285259246826172
    5. '-' → logprob: -12.347759246826172
    6. '```' → logprob: -12.597759246826172
    7. '1' → logprob: -12.660259246826172
    8. ' ' → logprob: -12.847759246826172
    9. 'a' → logprob: -13.285259246826172
    10. '[-' → logprob: -14.347759246826172

Token 678: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0024949219077825546
    2. ']' → logprob: -6.002494812011719
    3. '][-' → logprob: -11.752494812011719
    4. ']=' → logprob: -12.627494812011719
    5. '[-' → logprob: -13.377494812011719
    6. ',' → logprob: -13.752494812011719
    7. '],"' → logprob: -14.002494812011719
    8. ']=-' → logprob: -14.252494812011719
    9. '"],' → logprob: -14.377494812011719
    10. '),' → logprob: -14.627494812011719

Token 679: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20256178081035614
    2. ' a' → logprob: -1.7025617361068726
    3. ''a' → logprob: -7.077561855316162
    4. ''' → logprob: -8.452561378479004
    5. ' '' → logprob: -10.452561378479004
    6. '"a' → logprob: -10.702561378479004
    7. '"' → logprob: -11.202561378479004
    8. '`' → logprob: -12.702561378479004
    9. '	a' → logprob: -12.827561378479004
    10. ' ' → logprob: -13.327561378479004

Token 680: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -7.896309739408025e-07
    2. '][-' → logprob: -14.625000953674316
    3. '-' → logprob: -16.375
    4. '[' → logprob: -17.0
    5. '```' → logprob: -17.25
    6. '...' → logprob: -17.375
    7. ' [-' → logprob: -17.625
    8. '4' → logprob: -18.0
    9. '(-' → logprob: -18.125
    10. '{-' → logprob: -18.125

Token 681: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -8.180258191714529e-06
    2. '5' → logprob: -12.500008583068848
    3. '-' → logprob: -13.875008583068848
    4. '```' → logprob: -14.062508583068848
    5. ' ' → logprob: -14.250008583068848
    6. '' → logprob: -15.250008583068848
    7. '[' → logprob: -15.312508583068848
    8. 'a' → logprob: -15.437508583068848
    9. '3' → logprob: -15.625008583068848
    10. '[-' → logprob: -15.812508583068848

Token 682: '][-' (ID: 162298)
  Prédit: '][-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][-' → logprob: -0.0009250381262972951
    2. '[-' → logprob: -7.000925064086914
    3. '-' → logprob: -11.750925064086914
    4. ']' → logprob: -12.875925064086914
    5. ']-' → logprob: -13.125925064086914
    6. ']=-' → logprob: -15.500925064086914
    7. '...' → logprob: -15.625925064086914
    8. '][' → logprob: -15.875925064086914
    9. '   ' → logprob: -16.000925064086914
    10. '][:' → logprob: -16.000925064086914

Token 683: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0002719449403230101
    2. '3' → logprob: -8.500271797180176
    3. '5' → logprob: -10.375271797180176
    4. '1' → logprob: -11.187771797180176
    5. '2' → logprob: -11.562771797180176
    6. '```' → logprob: -12.312771797180176
    7. ' ' → logprob: -13.250271797180176
    8. '
' → logprob: -14.375271797180176
    9. '-' → logprob: -14.437771797180176
    10. '0' → logprob: -14.812771797180176

Token 684: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4957066774368286
    2. '],' → logprob: -1.3707066774368286
    3. '=' → logprob: -2.370706558227539
    4. ']' → logprob: -3.245706558227539
    5. ']=' → logprob: -6.495706558227539
    6. ' =' → logprob: -6.620706558227539
    7. ' ,' → logprob: -6.745706558227539
    8. 'a' → logprob: -8.495706558227539
    9. ',a' → logprob: -9.870706558227539
    10. '},' → logprob: -9.995706558227539

Token 685: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.1446208357810974
    2. 'a' → logprob: -2.019620895385742
    3. ''a' → logprob: -6.519620895385742
    4. ''' → logprob: -8.144620895385742
    5. ' '' → logprob: -9.019620895385742
    6. '"a' → logprob: -11.144620895385742
    7. '['' → logprob: -11.519620895385742
    8. '"' → logprob: -12.019620895385742
    9. ' ['' → logprob: -12.769620895385742
    10. '...' → logprob: -13.269620895385742

Token 686: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0017550260527059436
    2. '-' → logprob: -6.376755237579346
    3. '[' → logprob: -10.001754760742188
    4. '4' → logprob: -13.001754760742188
    5. '```' → logprob: -13.376754760742188
    6. '(-' → logprob: -13.751754760742188
    7. '][-' → logprob: -14.001754760742188
    8. '...' → logprob: -14.376754760742188
    9. ' [-' → logprob: -15.126754760742188
    10. '{-' → logprob: -15.751754760742188

Token 687: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.12489776313304901
    2. '3' → logprob: -2.2498977184295654
    3. '5' → logprob: -4.7498979568481445
    4. '1' → logprob: -5.7498979568481445
    5. '2' → logprob: -8.999897956848145
    6. '-' → logprob: -10.999897956848145
    7. '```' → logprob: -11.687397956848145
    8. ' ' → logprob: -11.749897956848145
    9. '...' → logprob: -13.687397956848145
    10. '
' → logprob: -13.999897956848145

Token 688: '][-' (ID: 162298)
  Prédit: '][-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][-' → logprob: -0.06371094286441803
    2. '[-' → logprob: -2.813710927963257
    3. '-' → logprob: -6.688711166381836
    4. ']' → logprob: -8.813711166381836
    5. ']-' → logprob: -8.938711166381836
    6. '],' → logprob: -9.063711166381836
    7. '][' → logprob: -10.188711166381836
    8. '...' → logprob: -10.688711166381836
    9. '[' → logprob: -10.938711166381836
    10. '```' → logprob: -12.313711166381836

Token 689: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.018403349444270134
    2. '4' → logprob: -4.26840353012085
    3. '1' → logprob: -5.89340353012085
    4. '2' → logprob: -6.64340353012085
    5. '5' → logprob: -8.768403053283691
    6. '```' → logprob: -12.143403053283691
    7. '-' → logprob: -13.705903053283691
    8. '0' → logprob: -13.893403053283691
    9. '
' → logprob: -13.893403053283691
    10. ' ' → logprob: -14.518403053283691

Token 690: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6146984696388245
    2. '],' → logprob: -0.8646984696388245
    3. ']' → logprob: -3.6146984100341797
    4. '=' → logprob: -4.73969841003418
    5. ']=' → logprob: -6.61469841003418
    6. ' ,' → logprob: -7.48969841003418
    7. '   ' → logprob: -9.11469841003418
    8. ' =' → logprob: -9.36469841003418
    9. 'a' → logprob: -9.61469841003418
    10. ',a' → logprob: -9.61469841003418

Token 691: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.038043901324272156
    2. 'a' → logprob: -3.288043975830078
    3. '	a' → logprob: -14.413043975830078
    4. ''' → logprob: -14.538043975830078
    5. ''a' → logprob: -14.538043975830078
    6. ' ' → logprob: -16.038043975830078
    7. ',a' → logprob: -16.413043975830078
    8. ',' → logprob: -16.538043975830078
    9. '   ' → logprob: -16.788043975830078
    10. '    ' → logprob: -16.913043975830078

Token 692: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.9623810658231378e-05
    2. '-' → logprob: -11.375020027160645
    3. '[' → logprob: -12.250020027160645
    4. '4' → logprob: -13.750020027160645
    5. ' [-' → logprob: -14.125020027160645
    6. '...' → logprob: -14.875020027160645
    7. '][-' → logprob: -14.875020027160645
    8. '```' → logprob: -14.875020027160645
    9. '{-' → logprob: -16.125019073486328
    10. '(-' → logprob: -16.375019073486328

Token 693: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.9510142207145691
    2. '5' → logprob: -1.3260142803192139
    3. '2' → logprob: -1.7010142803192139
    4. '3' → logprob: -1.8260142803192139
    5. '-' → logprob: -5.951014041900635
    6. '1' → logprob: -6.701014041900635
    7. '```' → logprob: -7.576014041900635
    8. '[-' → logprob: -10.763514518737793
    9. '   ' → logprob: -10.888514518737793
    10. 'len' → logprob: -11.388514518737793

Token 694: '][-' (ID: 162298)
  Prédit: '][-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][-' → logprob: -0.14350755512714386
    2. '[-' → logprob: -2.018507480621338
    3. '-' → logprob: -7.268507480621338
    4. ' [-' → logprob: -10.018507957458496
    5. ']' → logprob: -10.643507957458496
    6. '```' → logprob: -11.018507957458496
    7. ']-' → logprob: -11.143507957458496
    8. '][' → logprob: -11.518507957458496
    9. '   ' → logprob: -12.268507957458496
    10. ' -' → logprob: -12.518507957458496

Token 695: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00043126524542458355
    2. '3' → logprob: -8.437931060791016
    3. '1' → logprob: -8.937931060791016
    4. '4' → logprob: -11.187931060791016
    5. '```' → logprob: -11.187931060791016
    6. '-' → logprob: -11.375431060791016
    7. '   ' → logprob: -12.875431060791016
    8. '۲' → logprob: -13.250431060791016
    9. '#' → logprob: -13.562931060791016
    10. ' ' → logprob: -13.625431060791016

Token 696: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0018508200300857425
    2. ',' → logprob: -6.626850605010986
    3. ']' → logprob: -7.626850605010986
    4. ' ],' → logprob: -10.751851081848145
    5. 'a' → logprob: -12.251851081848145
    6. '),' → logprob: -13.251851081848145
    7. '},' → logprob: -13.501851081848145
    8. '   ' → logprob: -13.501851081848145
    9. ''],' → logprob: -13.501851081848145
    10. '>,' → logprob: -13.876851081848145

Token 697: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3484925925731659
    2. 'a' → logprob: -1.2234926223754883
    3. ''a' → logprob: -11.223492622375488
    4. ''' → logprob: -12.098492622375488
    5. ',' → logprob: -12.098492622375488
    6. ')' → logprob: -12.473492622375488
    7. '`' → logprob: -12.848492622375488
    8. ',a' → logprob: -12.973492622375488
    9. ' ' → logprob: -13.348492622375488
    10. '	a' → logprob: -13.348492622375488

Token 698: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -2.0339031834737398e-05
    2. '[' → logprob: -11.375020027160645
    3. '-' → logprob: -12.875020027160645
    4. '][-' → logprob: -13.000020027160645
    5. '```' → logprob: -14.000020027160645
    6. '4' → logprob: -14.000020027160645
    7. ' [-' → logprob: -14.250020027160645
    8. '...' → logprob: -14.875020027160645
    9. '[]' → logprob: -15.000020027160645
    10. 'a' → logprob: -15.500020027160645

Token 699: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.06434380263090134
    2. '5' → logprob: -2.8143436908721924
    3. '1' → logprob: -6.6893439292907715
    4. '3' → logprob: -6.9393439292907715
    5. '2' → logprob: -10.001843452453613
    6. '```' → logprob: -10.126843452453613
    7. '-' → logprob: -10.376843452453613
    8. '[' → logprob: -12.001843452453613
    9. '[-' → logprob: -12.814343452453613
    10. 'a' → logprob: -13.501843452453613

Token 700: '][-' (ID: 162298)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.6338968276977539
    2. '][-' → logprob: -0.7588968276977539
    3. '-' → logprob: -6.758896827697754
    4. ']' → logprob: -9.758896827697754
    5. ']-' → logprob: -10.883896827697754
    6. '[' → logprob: -11.008896827697754
    7. '...' → logprob: -11.633896827697754
    8. '][' → logprob: -11.758896827697754
    9. ' [-' → logprob: -12.008896827697754
    10. '```' → logprob: -12.258896827697754

Token 701: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.584861744660884e-05
    2. '3' → logprob: -10.750045776367188
    3. '2' → logprob: -10.875045776367188
    4. '5' → logprob: -14.000045776367188
    5. '-' → logprob: -14.125045776367188
    6. '0' → logprob: -14.250045776367188
    7. ' ' → logprob: -14.750045776367188
    8. '4' → logprob: -15.125045776367188
    9. '[' → logprob: -15.312545776367188
    10. '!' → logprob: -15.500045776367188

Token 702: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.030365770682692528
    2. ' =' → logprob: -3.5303657054901123
    3. ']' → logprob: -7.530365943908691
    4. ']=' → logprob: -9.655365943908691
    5. ',' → logprob: -12.405365943908691
    6. '   ' → logprob: -12.405365943908691
    7. ')' → logprob: -13.280365943908691
    8. '```' → logprob: -14.280365943908691
    9. ' ]' → logprob: -14.405365943908691
    10. ' ' → logprob: -14.405365943908691

Token 703: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.025637060403823853
    2. ' =' → logprob: -4.025637149810791
    3. ',' → logprob: -4.900637149810791
    4. ' ,' → logprob: -11.900636672973633
    5. '=
' → logprob: -12.525636672973633
    6. '='' → logprob: -13.525636672973633
    7. '=['' → logprob: -13.775636672973633
    8. '=

' → logprob: -14.400636672973633
    9. '   ' → logprob: -14.775636672973633
    10. ')' → logprob: -14.900636672973633

Token 704: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.1540883630514145
    2. '['' → logprob: -3.404088258743286
    3. '["' → logprob: -3.404088258743286
    4. '"h' → logprob: -3.404088258743286
    5. ''h' → logprob: -4.154088497161865
    6. '"' → logprob: -4.404088497161865
    7. ''l' → logprob: -5.654088497161865
    8. 'l' → logprob: -5.904088497161865
    9. '[h' → logprob: -6.404088497161865
    10. ' list' → logprob: -6.529088497161865

Token 705: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0011411691084504128
    2. '(["' → logprob: -7.25114107131958
    3. '(' → logprob: -8.001141548156738
    4. ' ("' → logprob: -9.751141548156738
    5. '('' → logprob: -10.501141548156738
    6. '(("' → logprob: -12.501141548156738
    7. '([' → logprob: -13.251141548156738
    8. '(['' → logprob: -13.501141548156738
    9. '("("' → logprob: -13.876141548156738
    10. '("")' → logprob: -14.501141548156738

Token 706: 'hi' (ID: 3686)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4326542913913727
    2. 'hi' → logprob: -1.0576542615890503
    3. ''' → logprob: -6.05765438079834
    4. '"h' → logprob: -6.80765438079834
    5. ''h' → logprob: -8.30765438079834
    6. 'h' → logprob: -8.93265438079834
    7. 'ghi' → logprob: -10.68265438079834
    8. '["' → logprob: -11.18265438079834
    9. '['' → logprob: -11.43265438079834
    10. 'ihi' → logprob: -11.55765438079834

Token 707: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.001438684994354844
    2. '.."' → logprob: -7.626438617706299
    3. '..)' → logprob: -7.876438617706299
    4. '"..' → logprob: -8.126439094543457
    5. '...' → logprob: -9.376439094543457
    6. '..<' → logprob: -9.876439094543457
    7. 'i' → logprob: -10.001439094543457
    8. '..!' → logprob: -11.001439094543457
    9. 'ii' → logprob: -11.626439094543457
    10. '..\' → logprob: -11.751439094543457

Token 708: 'c' (ID: 66)
  Prédit: '..'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.02040991187095642
    2. 'cc' → logprob: -4.395410060882568
    3. 'c' → logprob: -4.895410060882568
    4. '.' → logprob: -8.89540958404541
    5. '.c' → logprob: -9.64540958404541
    6. '.cc' → logprob: -10.14540958404541
    7. '..)' → logprob: -10.77040958404541
    8. '"' → logprob: -11.02040958404541
    9. '"..' → logprob: -11.02040958404541
    10. '.."' → logprob: -11.14540958404541

Token 709: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.012298783287405968
    2. '"),' → logprob: -4.887298583984375
    3. ' ")' → logprob: -5.762298583984375
    4. 'h' → logprob: -7.137298583984375
    5. 'hi' → logprob: -8.012298583984375
    6. ' "),' → logprob: -9.012298583984375
    7. '")
' → logprob: -9.512298583984375
    8. ' hi' → logprob: -10.137298583984375
    9. 'a' → logprob: -10.137298583984375
    10. ')' → logprob: -10.262298583984375

Token 710: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08426742255687714
    2. 'a' → logprob: -2.7092673778533936
    3. '
' → logprob: -5.209267616271973
    4. '<|end|>' → logprob: -5.334267616271973
    5. '  ' → logprob: -7.084267616271973
    6. ' ' → logprob: -7.209267616271973
    7. '    
' → logprob: -7.334267616271973
    8. ' a' → logprob: -7.459267616271973
    9. ',' → logprob: -8.084267616271973
    10. ')' → logprob: -8.084267616271973

Token 711: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06421458721160889
    2. 'a' → logprob: -2.8142147064208984
    3. '    
' → logprob: -7.814214706420898
    4. ' ' → logprob: -7.939214706420898
    5. ' a' → logprob: -7.939214706420898
    6. '  ' → logprob: -7.939214706420898
    7. '
' → logprob: -8.439214706420898
    8. ',' → logprob: -9.064214706420898
    9. ')' → logprob: -9.189214706420898
    10. '<|end|>' → logprob: -9.189214706420898

Token 712: ' ' (ID: 220)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.07627059519290924
    2. 'a' → logprob: -3.201270580291748
    3. ' h' → logprob: -3.701270580291748
    4. 'hi' → logprob: -5.826270580291748
    5. ' a' → logprob: -6.201270580291748
    6. '"h' → logprob: -6.701270580291748
    7. ''h' → logprob: -7.451270580291748
    8. '   ' → logprob: -7.576270580291748
    9. '"' → logprob: -9.201271057128906
    10. '['' → logprob: -9.201271057128906

Token 713: '4' (ID: 19)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.07305427640676498
    2. 'a' → logprob: -2.823054313659668
    3. '"h' → logprob: -5.573054313659668
    4. ''h' → logprob: -5.823054313659668
    5. 'hi' → logprob: -6.198054313659668
    6. '['' → logprob: -7.448054313659668
    7. '[' → logprob: -7.948054313659668
    8. '["' → logprob: -7.948054313659668
    9. '[h' → logprob: -8.198054313659668
    10. '[-' → logprob: -8.573054313659668

Token 714: 'ème' (ID: 9767)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00370280840434134
    2. 'a' → logprob: -5.628702640533447
    3. '   ' → logprob: -9.503703117370605
    4. '[' → logprob: -11.503703117370605
    5. '#' → logprob: -12.253703117370605
    6. '```' → logprob: -12.878703117370605
    7. '-' → logprob: -13.128703117370605
    8. ' a' → logprob: -13.128703117370605
    9. '][-' → logprob: -13.128703117370605
    10. ' [-' → logprob: -13.503703117370605

Token 715: '
' (ID: 198)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00408801669254899
    2. 'a' → logprob: -5.629087924957275
    3. ' [-' → logprob: -8.129088401794434
    4. ' a' → logprob: -9.379088401794434
    5. '][-' → logprob: -10.004088401794434
    6. '```' → logprob: -10.629088401794434
    7. '   ' → logprob: -11.254088401794434
    8. '[' → logprob: -11.504088401794434
    9. '[:-' → logprob: -12.629088401794434
    10. '-' → logprob: -13.129088401794434

Token 716: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05208367854356766
    2. ' a' → logprob: -3.677083730697632
    3. '   ' → logprob: -3.677083730697632
    4. '	a' → logprob: -9.302083969116211
    5. ' ' → logprob: -10.177083969116211
    6. ',a' → logprob: -11.677083969116211
    7. ',' → logprob: -11.802083969116211
    8. '  ' → logprob: -12.177083969116211
    9. '    ' → logprob: -13.302083969116211
    10. ''a' → logprob: -14.177083969116211

Token 717: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.039362888783216476
    2. ' a' → logprob: -3.289362907409668
    3. '   ' → logprob: -6.664362907409668
    4. '[a' → logprob: -11.539362907409668
    5. ' ' → logprob: -11.664362907409668
    6. '[' → logprob: -12.664362907409668
    7. '['' → logprob: -12.664362907409668
    8. '  ' → logprob: -12.789362907409668
    9. ' =' → logprob: -12.914362907409668
    10. ',' → logprob: -13.164362907409668

Token 718: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.8624639324116288e-06
    2. ' [-' → logprob: -13.875001907348633
    3. '[' → logprob: -14.500001907348633
    4. '][-' → logprob: -15.750001907348633
    5. '[:-' → logprob: -16.625001907348633
    6. '   ' → logprob: -16.625001907348633
    7. '```' → logprob: -17.125001907348633
    8. '#' → logprob: -17.500001907348633
    9. '...' → logprob: -18.125001907348633
    10. '[]' → logprob: -18.625001907348633

Token 719: '3' (ID: 18)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0004306692280806601
    2. '3' → logprob: -7.750430583953857
    3. '-' → logprob: -17.125431060791016
    4. '
' → logprob: -17.500431060791016
    5. '```' → logprob: -17.875431060791016
    6. '' → logprob: -18.500431060791016
    7. ' ' → logprob: -18.625431060791016
    8. '۴' → logprob: -19.562931060791016
    9. '[-' → logprob: -19.937931060791016
    10. '４' → logprob: -20.000431060791016

Token 720: '][-' (ID: 162298)
  Prédit: '][-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][-' → logprob: -0.0015345009742304683
    2. '[-' → logprob: -6.501534461975098
    3. ']' → logprob: -10.626534461975098
    4. '][' → logprob: -11.876534461975098
    5. ']-' → logprob: -15.251534461975098
    6. '-' → logprob: -15.751534461975098
    7. '][]' → logprob: -15.876534461975098
    8. ')[' → logprob: -16.001535415649414
    9. '][:' → logprob: -16.376535415649414
    10. '>' → logprob: -16.501535415649414

Token 721: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -8.0536883615423e-05
    2. '4' → logprob: -9.625080108642578
    3. '3' → logprob: -12.625080108642578
    4. '1' → logprob: -12.937580108642578
    5. '-' → logprob: -13.187580108642578
    6. '```' → logprob: -13.250080108642578
    7. '[' → logprob: -13.875080108642578
    8. '2' → logprob: -14.750080108642578
    9. '...' → logprob: -14.812580108642578
    10. 'a' → logprob: -15.187580108642578

Token 722: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0014370197895914316
    2. ']' → logprob: -6.751437187194824
    3. '][-' → logprob: -8.251437187194824
    4. '[-' → logprob: -12.751437187194824
    5. '"],' → logprob: -14.126437187194824
    6. ''],' → logprob: -15.001437187194824
    7. '   ' → logprob: -15.251437187194824
    8. '][' → logprob: -15.251437187194824
    9. ']-' → logprob: -15.501437187194824
    10. ']=-' → logprob: -15.626437187194824

Token 723: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.10020990669727325
    2. 'a' → logprob: -2.350209951400757
    3. '	a' → logprob: -13.600210189819336
    4. ''a' → logprob: -14.225210189819336
    5. '   ' → logprob: -15.600210189819336
    6. '[a' → logprob: -15.600210189819336
    7. '[' → logprob: -15.975210189819336
    8. '=a' → logprob: -15.975210189819336
    9. '    ' → logprob: -16.225210189819336
    10. '```' → logprob: -16.225210189819336

Token 724: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -9.150362166110426e-05
    2. '][-' → logprob: -9.500091552734375
    3. '-' → logprob: -11.125091552734375
    4. '[' → logprob: -14.000091552734375
    5. '```' → logprob: -15.250091552734375
    6. '(-' → logprob: -15.625091552734375
    7. '...' → logprob: -15.750091552734375
    8. ' [-' → logprob: -15.750091552734375
    9. '{-' → logprob: -16.125091552734375
    10. '[:-' → logprob: -16.875091552734375

Token 725: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0008118899422697723
    2. '4' → logprob: -7.12581205368042
    3. '-' → logprob: -12.000811576843262
    4. '5' → logprob: -14.625811576843262
    5. '```' → logprob: -14.875811576843262
    6. '[-' → logprob: -16.063312530517578
    7. '' → logprob: -16.750812530517578
    8. '1' → logprob: -17.188312530517578
    9. '][-' → logprob: -17.438312530517578
    10. '2' → logprob: -17.500812530517578

Token 726: '][-' (ID: 162298)
  Prédit: '][-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][-' → logprob: -0.005933186039328575
    2. '[-' → logprob: -5.1309332847595215
    3. '-' → logprob: -13.255932807922363
    4. ']' → logprob: -13.755932807922363
    5. ']-' → logprob: -14.130932807922363
    6. '][' → logprob: -14.505932807922363
    7. '```' → logprob: -15.630932807922363
    8. '>-' → logprob: -16.25593376159668
    9. ']=-' → logprob: -17.38093376159668
    10. '][]' → logprob: -17.63093376159668

Token 727: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.007965974509716034
    2. '5' → logprob: -4.882966041564941
    3. '3' → logprob: -8.132966041564941
    4. '1' → logprob: -10.257966041564941
    5. '```' → logprob: -10.882966041564941
    6. '-' → logprob: -12.257966041564941
    7. '2' → logprob: -13.445466041564941
    8. '...' → logprob: -14.320466041564941
    9. '' → logprob: -14.445466041564941
    10. '[-' → logprob: -14.820466041564941

Token 728: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0021267069969326258
    2. ']' → logprob: -6.627126693725586
    3. ',' → logprob: -8.127126693725586
    4. 'a' → logprob: -8.502126693725586
    5. '[-' → logprob: -8.877126693725586
    6. '][-' → logprob: -9.627126693725586
    7. '),' → logprob: -10.627126693725586
    8. '"],' → logprob: -10.752126693725586
    9. ''],' → logprob: -11.377126693725586
    10. '   ' → logprob: -12.502126693725586

Token 729: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5231563448905945
    2. ' a' → logprob: -0.8981563448905945
    3. ''a' → logprob: -10.52315616607666
    4. '[a' → logprob: -13.39815616607666
    5. '['' → logprob: -13.77315616607666
    6. '"a' → logprob: -14.02315616607666
    7. '	a' → logprob: -14.52315616607666
    8. '   ' → logprob: -14.89815616607666
    9. '[' → logprob: -14.89815616607666
    10. ' ' → logprob: -15.64815616607666

Token 730: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.735893965815194e-05
    2. '-' → logprob: -11.125017166137695
    3. '[' → logprob: -14.000017166137695
    4. '][-' → logprob: -14.000017166137695
    5. '(-' → logprob: -15.250017166137695
    6. '```' → logprob: -15.625017166137695
    7. 'a' → logprob: -15.875017166137695
    8. '3' → logprob: -16.375017166137695
    9. ' [-' → logprob: -16.625017166137695
    10. '[:-' → logprob: -16.875017166137695

Token 731: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.9743012671824545e-05
    2. '5' → logprob: -11.625020027160645
    3. '2' → logprob: -12.375020027160645
    4. '```' → logprob: -13.375020027160645
    5. '4' → logprob: -13.562520027160645
    6. '1' → logprob: -13.750020027160645
    7. '-' → logprob: -14.437520027160645
    8. '[' → logprob: -14.750020027160645
    9. '...' → logprob: -15.937520027160645
    10. '[-' → logprob: -16.437519073486328

Token 732: '][-' (ID: 162298)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.1161198765039444
    2. '][-' → logprob: -2.241119861602783
    3. '-' → logprob: -5.741119861602783
    4. '...' → logprob: -10.491120338439941
    5. ']' → logprob: -11.366120338439941
    6. '[' → logprob: -11.616120338439941
    7. '```' → logprob: -12.116120338439941
    8. ']-' → logprob: -12.116120338439941
    9. '5' → logprob: -12.241120338439941
    10. ' [-' → logprob: -12.491120338439941

Token 733: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.0087516784551553e-05
    2. '2' → logprob: -12.12501049041748
    3. '1' → logprob: -12.75001049041748
    4. '```' → logprob: -13.87501049041748
    5. '4' → logprob: -15.75001049041748
    6. '-' → logprob: -15.93751049041748
    7. '   ' → logprob: -16.187509536743164
    8. '۳' → logprob: -17.062509536743164
    9. '' → logprob: -17.812509536743164
    10. '...' → logprob: -17.812509536743164

Token 734: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.02747979946434498
    2. ',' → logprob: -3.652479887008667
    3. ']' → logprob: -7.527479648590088
    4. 'a' → logprob: -8.152480125427246
    5. '[-' → logprob: -9.527480125427246
    6. '```' → logprob: -9.902480125427246
    7. '"],' → logprob: -10.027480125427246
    8. '),' → logprob: -10.152480125427246
    9. '['' → logprob: -10.777480125427246
    10. ''],' → logprob: -10.777480125427246

Token 735: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3133021295070648
    2. ' a' → logprob: -1.3133021593093872
    3. ' =' → logprob: -11.563302040100098
    4. ''a' → logprob: -11.813302040100098
    5. '	a' → logprob: -12.563302040100098
    6. '=' → logprob: -12.563302040100098
    7. '_a' → logprob: -12.813302040100098
    8. '   ' → logprob: -12.938302040100098
    9. '=a' → logprob: -13.563302040100098
    10. '    ' → logprob: -13.813302040100098

Token 736: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00015991552209015936
    2. '-' → logprob: -8.750160217285156
    3. '][-' → logprob: -13.875160217285156
    4. '```' → logprob: -15.000160217285156
    5. '[' → logprob: -16.250160217285156
    6. '...' → logprob: -17.000160217285156
    7. '``' → logprob: -17.625160217285156
    8. '(-' → logprob: -17.750160217285156
    9. ' [-' → logprob: -17.750160217285156
    10. '[:-' → logprob: -17.875160217285156

Token 737: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.5941604690160602e-05
    2. '-' → logprob: -10.875025749206543
    3. '2' → logprob: -13.000025749206543
    4. '5' → logprob: -13.250025749206543
    5. '[-' → logprob: -13.875025749206543
    6. '```' → logprob: -13.875025749206543
    7. '1' → logprob: -15.625025749206543
    8. '4' → logprob: -15.812525749206543
    9. '...' → logprob: -16.18752670288086
    10. '[' → logprob: -16.25002670288086

Token 738: '][-' (ID: 162298)
  Prédit: '][-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][-' → logprob: -0.282090425491333
    2. '[-' → logprob: -1.407090425491333
    3. '-' → logprob: -7.032090187072754
    4. ']' → logprob: -10.907090187072754
    5. ']-' → logprob: -11.657090187072754
    6. '][' → logprob: -11.657090187072754
    7. '```' → logprob: -11.782090187072754
    8. '...' → logprob: -12.657090187072754
    9. '[]' → logprob: -13.282090187072754
    10. '>-' → logprob: -13.657090187072754

Token 739: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.102680633077398e-05
    2. '3' → logprob: -9.625090599060059
    3. '-' → logprob: -11.000090599060059
    4. '```' → logprob: -13.375090599060059
    5. '1' → logprob: -13.750090599060059
    6. '...' → logprob: -14.437590599060059
    7. '۲' → logprob: -14.687590599060059
    8. '4' → logprob: -14.687590599060059
    9. '   ' → logprob: -14.875090599060059
    10. '' → logprob: -14.875090599060059

Token 740: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.000958031858317554
    2. ']' → logprob: -7.62595796585083
    3. ',' → logprob: -8.000958442687988
    4. '[-' → logprob: -9.750958442687988
    5. 'a' → logprob: -10.000958442687988
    6. '][-' → logprob: -11.250958442687988
    7. ' ],' → logprob: -12.250958442687988
    8. '"],' → logprob: -13.375958442687988
    9. '   ' → logprob: -13.375958442687988
    10. '```' → logprob: -13.625958442687988

Token 741: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.17975009977817535
    2. 'a' → logprob: -1.8047500848770142
    3. '	a' → logprob: -13.554750442504883
    4. ''a' → logprob: -14.179750442504883
    5. ',a' → logprob: -14.304750442504883
    6. ',' → logprob: -14.554750442504883
    7. '`' → logprob: -15.054750442504883
    8. '_a' → logprob: -15.429750442504883
    9. '   ' → logprob: -15.554750442504883
    10. '=a' → logprob: -15.554750442504883

Token 742: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -3.440506407059729e-05
    2. '][-' → logprob: -11.25003433227539
    3. '-' → logprob: -11.37503433227539
    4. '...' → logprob: -12.25003433227539
    5. '[' → logprob: -12.87503433227539
    6. ' [-' → logprob: -14.62503433227539
    7. '```' → logprob: -14.75003433227539
    8. '[]' → logprob: -14.75003433227539
    9. 'a' → logprob: -15.00003433227539
    10. '(-' → logprob: -15.37503433227539

Token 743: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00013405199570115656
    2. '4' → logprob: -9.625134468078613
    3. '1' → logprob: -10.000134468078613
    4. '5' → logprob: -11.625134468078613
    5. '-' → logprob: -11.750134468078613
    6. '2' → logprob: -13.750134468078613
    7. '```' → logprob: -13.937634468078613
    8. '...' → logprob: -14.000134468078613
    9. '[-' → logprob: -14.187634468078613
    10. '.' → logprob: -15.000134468078613

Token 744: '][-' (ID: 162298)
  Prédit: '][-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][-' → logprob: -0.01897011697292328
    2. '[-' → logprob: -4.143970012664795
    3. '-' → logprob: -5.893970012664795
    4. ']-' → logprob: -9.268970489501953
    5. ']' → logprob: -9.518970489501953
    6. '][' → logprob: -12.893970489501953
    7. ']=-' → logprob: -13.768970489501953
    8. ' -' → logprob: -14.518970489501953
    9. '...' → logprob: -14.893970489501953
    10. '][]' → logprob: -15.018970489501953

Token 745: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '-' → logprob: -15.625000953674316
    3. ']' → logprob: -16.25
    4. '2' → logprob: -16.625
    5. 'd' → logprob: -16.625
    6. '```' → logprob: -16.75
    7. '...' → logprob: -17.5625
    8. ' ' → logprob: -17.9375
    9. '3' → logprob: -18.25
    10. 'a' → logprob: -18.5

Token 746: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18997381627559662
    2. ']' → logprob: -1.8149738311767578
    3. ']=' → logprob: -5.064973831176758
    4. ' =' → logprob: -5.564973831176758
    5. ',' → logprob: -11.939973831176758
    6. ' ]' → logprob: -12.189973831176758
    7. ')' → logprob: -12.314973831176758
    8. '['' → logprob: -12.439973831176758
    9. '],' → logprob: -12.814973831176758
    10. '   ' → logprob: -12.939973831176758

Token 747: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048639144748449326
    2. ' =' → logprob: -3.0486390590667725
    3. ',' → logprob: -10.048639297485352
    4. '=list' → logprob: -11.798639297485352
    5. '   ' → logprob: -15.548639297485352
    6. ' ' → logprob: -16.17363929748535
    7. '=['' → logprob: -16.17363929748535
    8. '=a' → logprob: -16.54863929748535
    9. 'a' → logprob: -16.54863929748535
    10. '=

' → logprob: -16.67363929748535

Token 748: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.20145533978939056
    2. ' list' → logprob: -1.7014553546905518
    3. '['' → logprob: -10.826455116271973
    4. '["' → logprob: -11.326455116271973
    5. ' ['' → logprob: -11.701455116271973
    6. ' ["' → logprob: -14.201455116271973
    7. 'l' → logprob: -14.451455116271973
    8. '	list' → logprob: -15.951455116271973
    9. '[list' → logprob: -16.07645606994629
    10. 'List' → logprob: -16.20145606994629

Token 749: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -1.6405310816480778e-05
    2. '(["' → logprob: -12.000016212463379
    3. '('' → logprob: -12.375016212463379
    4. '(' → logprob: -12.500016212463379
    5. '["' → logprob: -13.250016212463379
    6. ' ("' → logprob: -15.000016212463379
    7. '(("' → logprob: -16.500017166137695
    8. '"' → logprob: -17.375017166137695
    9. '([' → logprob: -17.500017166137695
    10. '(
' → logprob: -17.500017166137695

Token 750: 'hi' (ID: 3686)
  Prédit: 'hi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hi' → logprob: -0.011219115927815437
    2. '"' → logprob: -4.636219024658203
    3. 'h' → logprob: -6.886219024658203
    4. ''' → logprob: -8.511219024658203
    5. ' hi' → logprob: -9.136219024658203
    6. ''h' → logprob: -10.011219024658203
    7. '"h' → logprob: -10.011219024658203
    8. 'list' → logprob: -12.136219024658203
    9. 'ghi' → logprob: -12.136219024658203
    10. '["' → logprob: -12.761219024658203

Token 751: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.0002666999935172498
    2. '['' → logprob: -9.125267028808594
    3. '[..' → logprob: -9.750267028808594
    4. '["' → logprob: -10.125267028808594
    5. '.' → logprob: -11.125267028808594
    6. '..<' → logprob: -11.250267028808594
    7. '"..' → logprob: -11.375267028808594
    8. '.."' → logprob: -12.000267028808594
    9. '..)' → logprob: -12.250267028808594
    10. '[' → logprob: -12.750267028808594

Token 752: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0035909218713641167
    2. '"d' → logprob: -5.753591060638428
    3. ''d' → logprob: -8.12859058380127
    4. 'dd' → logprob: -9.62859058380127
    5. '"' → logprob: -10.00359058380127
    6. '.d' → logprob: -13.25359058380127
    7. 'cd' → logprob: -13.37859058380127
    8. ' d' → logprob: -13.62859058380127
    9. 'c' → logprob: -14.62859058380127
    10. ')d' → logprob: -14.75359058380127

Token 753: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0004928641719743609
    2. '")
' → logprob: -8.000493049621582
    3. 'a' → logprob: -9.250493049621582
    4. '"),' → logprob: -10.375493049621582
    5. '')' → logprob: -11.500493049621582
    6. ' ")' → logprob: -12.000493049621582
    7. ')' → logprob: -12.375493049621582
    8. '"' → logprob: -13.250493049621582
    9. '")
' → logprob: -13.250493049621582
    10. 'g' → logprob: -13.500493049621582

Token 754: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02386399172246456
    2. 'a' → logprob: -3.7738640308380127
    3. '
' → logprob: -8.523863792419434
    4. '#' → logprob: -8.648863792419434
    5. ' a' → logprob: -9.648863792419434
    6. '    
' → logprob: -9.773863792419434
    7. '<|end|>' → logprob: -10.148863792419434
    8. ' ' → logprob: -10.648863792419434
    9. '  ' → logprob: -10.773863792419434
    10. '```' → logprob: -11.773863792419434

Token 755: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2783256471157074
    2. '   ' → logprob: -2.1533255577087402
    3. '<|end|>' → logprob: -2.1533255577087402
    4. ' a' → logprob: -6.15332555770874
    5. ')' → logprob: -6.15332555770874
    6. '#' (adapté à ' #') → logprob: -6.27832555770874
    7. ',' → logprob: -6.77832555770874
    8. ' ' → logprob: -7.27832555770874
    9. '
' → logprob: -7.27832555770874
    10. '  ' → logprob: -7.52832555770874

Token 756: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0031812789384275675
    2. ' a' → logprob: -5.753181457519531
    3. 'list' → logprob: -13.503181457519531
    4. '[a' → logprob: -13.878181457519531
    5. '['' → logprob: -14.503181457519531
    6. ''a' → logprob: -16.12818145751953
    7. '["' → logprob: -16.12818145751953
    8. '[' → logprob: -16.50318145751953
    9. '"a' → logprob: -16.50318145751953
    10. '	a' → logprob: -16.50318145751953

Token 757: '3' (ID: 18)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06065972149372101
    2. 'list' → logprob: -3.185659646987915
    3. '[-' → logprob: -4.060659885406494
    4. '```' → logprob: -9.060659408569336
    5. '-' → logprob: -9.560659408569336
    6. '...' → logprob: -10.685659408569336
    7. '[' → logprob: -11.310659408569336
    8. '``' → logprob: -11.435659408569336
    9. ' a' → logprob: -11.810659408569336
    10. '`' → logprob: -12.185659408569336

Token 758: 'ème' (ID: 9767)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00010103991371579468
    2. 'a' → logprob: -9.875101089477539
    3. '-' → logprob: -10.625101089477539
    4. '][-' → logprob: -11.500101089477539
    5. '```' → logprob: -12.250101089477539
    6. '   ' → logprob: -12.375101089477539
    7. '#' → logprob: -12.375101089477539
    8. '...' → logprob: -14.375101089477539
    9. ']' → logprob: -15.250101089477539
    10. '[' → logprob: -15.500101089477539

Token 759: '
' (ID: 198)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.006621819920837879
    2. '   ' → logprob: -5.381621837615967
    3. ' a' → logprob: -6.256621837615967
    4. '[-' → logprob: -9.506621360778809
    5. ' ' → logprob: -12.756621360778809
    6. '  ' → logprob: -13.881621360778809
    7. '-' → logprob: -14.381621360778809
    8. '	a' → logprob: -14.506621360778809
    9. '
' → logprob: -14.756621360778809
    10. '_a' → logprob: -14.881621360778809

Token 760: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2553160488605499
    2. '   ' → logprob: -1.5053160190582275
    3. ' a' → logprob: -6.380316257476807
    4. '	a' → logprob: -6.755316257476807
    5. '```' → logprob: -8.755315780639648
    6. '\' → logprob: -8.880315780639648
    7. '\t' → logprob: -9.255315780639648
    8. ' ' → logprob: -10.505315780639648
    9. '#' → logprob: -10.880315780639648
    10. '  ' → logprob: -11.505315780639648

Token 761: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.01629405841231346
    2. '   ' → logprob: -4.516294002532959
    3. ' a' → logprob: -5.266294002532959
    4. '	a' → logprob: -9.766294479370117
    5. ' ' → logprob: -12.766294479370117
    6. '    ' → logprob: -12.891294479370117
    7. 'g' → logprob: -13.266294479370117
    8. '  ' → logprob: -13.516294479370117
    9. '       ' → logprob: -13.891294479370117
    10. '[a' → logprob: -14.391294479370117

Token 762: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -2.2200749754119897e-06
    2. ' [-' → logprob: -13.875001907348633
    3. '[' → logprob: -14.500001907348633
    4. '[:-' → logprob: -15.250001907348633
    5. '   ' → logprob: -15.625001907348633
    6. '-' → logprob: -16.375001907348633
    7. '][-' → logprob: -16.500001907348633
    8. '...' → logprob: -17.125001907348633
    9. '(-' → logprob: -17.250001907348633
    10. '```' → logprob: -17.250001907348633

Token 763: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.28118786215782166
    2. '3' → logprob: -1.406187891960144
    3. '1' → logprob: -10.281188011169434
    4. '4' → logprob: -14.531188011169434
    5. ' ' → logprob: -14.593688011169434
    6. '

' → logprob: -14.781188011169434
    7. '```' → logprob: -14.843688011169434
    8. '
' → logprob: -15.156188011169434
    9. '   ' → logprob: -15.468688011169434
    10. '``' → logprob: -15.718688011169434

Token 764: '][-' (ID: 162298)
  Prédit: '][-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][-' → logprob: -0.0003874166286550462
    2. '[-' → logprob: -7.875387191772461
    3. ']' → logprob: -12.250387191772461
    4. '][' → logprob: -13.125387191772461
    5. ']-' → logprob: -15.875387191772461
    6. '][]' → logprob: -16.00038719177246
    7. '```' → logprob: -16.12538719177246
    8. '>' → logprob: -17.00038719177246
    9. '][:' → logprob: -17.12538719177246
    10. ')[' → logprob: -17.12538719177246

Token 765: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.00023274161503650248
    2. '4' → logprob: -9.125232696533203
    3. '2' → logprob: -9.500232696533203
    4. '3' → logprob: -11.000232696533203
    5. '1' → logprob: -11.187732696533203
    6. '```' → logprob: -11.812732696533203
    7. '[' → logprob: -13.125232696533203
    8. '...' → logprob: -14.562732696533203
    9. '   ' → logprob: -14.687732696533203
    10. 'a' → logprob: -14.687732696533203

Token 766: '],' (ID: 2155)
  Prédit: '][-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][-' → logprob: -0.20646941661834717
    2. '],' → logprob: -1.7064694166183472
    3. ']' → logprob: -5.456469535827637
    4. '[-' → logprob: -7.331469535827637
    5. '][' → logprob: -9.331469535827637
    6. ',' → logprob: -11.081469535827637
    7. ']-' → logprob: -12.456469535827637
    8. '][:' → logprob: -12.831469535827637
    9. ']
' → logprob: -13.456469535827637
    10. '   ' → logprob: -13.706469535827637

Token 767: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.1602250337600708
    2. 'a' → logprob: -1.9102250337600708
    3. '   ' → logprob: -14.910224914550781
    4. '[a' → logprob: -14.910224914550781
    5. '	a' → logprob: -15.535224914550781
    6. ' ' → logprob: -17.28522491455078
    7. '#a' → logprob: -18.16022491455078
    8. '[' → logprob: -18.28522491455078
    9. ' а' → logprob: -18.28522491455078
    10. '    ' → logprob: -18.41022491455078

Token 768: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -2.2200749754119897e-06
    2. '][-' → logprob: -13.375001907348633
    3. '-' → logprob: -14.875001907348633
    4. '```' → logprob: -16.250001907348633
    5. '...' → logprob: -16.500001907348633
    6. '[' → logprob: -17.000001907348633
    7. ' [-' → logprob: -17.250001907348633
    8. '(-' → logprob: -18.250001907348633
    9. '``' → logprob: -18.500001907348633
    10. '[]' → logprob: -19.125001907348633

Token 769: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.451116051815916e-05
    2. '3' → logprob: -11.250024795532227
    3. '4' → logprob: -12.000024795532227
    4. '-' → logprob: -13.375024795532227
    5. '5' → logprob: -13.437524795532227
    6. '```' → logprob: -14.187524795532227
    7. '1' → logprob: -15.062524795532227
    8. '   ' → logprob: -15.375024795532227
    9. '...' → logprob: -15.937524795532227
    10. '[' → logprob: -16.062524795532227

Token 770: '][-' (ID: 162298)
  Prédit: '][-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][-' → logprob: -0.014167149551212788
    2. '[-' → logprob: -4.264167308807373
    3. ']' → logprob: -13.514166831970215
    4. '```' → logprob: -14.014166831970215
    5. '][' → logprob: -14.264166831970215
    6. '...' → logprob: -15.889166831970215
    7. '-' → logprob: -16.13916778564453
    8. ']-' → logprob: -16.38916778564453
    9. '>' → logprob: -16.51416778564453
    10. '>-' → logprob: -16.51416778564453

Token 771: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.9981420336989686e-05
    2. '2' → logprob: -11.750020027160645
    3. '-' → logprob: -12.000020027160645
    4. '5' → logprob: -12.500020027160645
    5. '1' → logprob: -14.125020027160645
    6. '3' → logprob: -14.750020027160645
    7. '```' → logprob: -14.750020027160645
    8. '[-' → logprob: -14.875020027160645
    9. '[' → logprob: -15.750020027160645
    10. ' ' → logprob: -17.312519073486328

Token 772: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.03096119686961174
    2. '[-' → logprob: -4.155961036682129
    3. '][-' → logprob: -4.530961036682129
    4. ']' → logprob: -6.155961036682129
    5. ',' → logprob: -6.405961036682129
    6. 'a' → logprob: -9.905961036682129
    7. '),' → logprob: -10.155961036682129
    8. '   ' → logprob: -10.530961036682129
    9. '>,' → logprob: -10.905961036682129
    10. '[' → logprob: -10.905961036682129

Token 773: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6931504011154175
    2. ' a' → logprob: -0.6931504011154175
    3. '	a' → logprob: -13.943150520324707
    4. '   ' → logprob: -14.443150520324707
    5. '[a' → logprob: -14.568150520324707
    6. ''a' → logprob: -15.443150520324707
    7. ' ' → logprob: -15.693150520324707
    8. '#a' → logprob: -16.19314956665039
    9. '"a' → logprob: -16.19314956665039
    10. '```' → logprob: -16.19314956665039

Token 774: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -4.3464544432936236e-05
    2. '-' → logprob: -10.500043869018555
    3. '[' → logprob: -11.750043869018555
    4. '][-' → logprob: -12.250043869018555
    5. '```' → logprob: -13.875043869018555
    6. '...' → logprob: -14.500043869018555
    7. '(-' → logprob: -14.875043869018555
    8. '[]' → logprob: -15.000043869018555
    9. ' [-' → logprob: -15.125043869018555
    10. 'a' → logprob: -15.125043869018555

Token 775: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001721934968372807
    2. '3' → logprob: -9.00017261505127
    3. '5' → logprob: -10.75017261505127
    4. '-' → logprob: -11.62517261505127
    5. '1' → logprob: -11.62517261505127
    6. '```' → logprob: -13.00017261505127
    7. '[' → logprob: -14.31267261505127
    8. '...' → logprob: -14.56267261505127
    9. '[-' → logprob: -14.87517261505127
    10. '4' → logprob: -15.12517261505127

Token 776: '][-' (ID: 162298)
  Prédit: '][-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][-' → logprob: -0.04301871359348297
    2. '[-' → logprob: -3.1680188179016113
    3. '-' → logprob: -11.793018341064453
    4. ']' → logprob: -12.293018341064453
    5. ']-' → logprob: -12.793018341064453
    6. '][' → logprob: -13.043018341064453
    7. '```' → logprob: -13.918018341064453
    8. '...' → logprob: -14.168018341064453
    9. '][]' → logprob: -15.668018341064453
    10. '[' → logprob: -16.043018341064453

Token 777: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5256883502006531
    2. '2' → logprob: -0.9006883502006531
    3. '1' → logprob: -6.025688171386719
    4. '5' → logprob: -9.400688171386719
    5. '4' → logprob: -9.900688171386719
    6. '0' → logprob: -12.150688171386719
    7. '```' → logprob: -13.088188171386719
    8. 'd' → logprob: -13.963188171386719
    9. '-' → logprob: -14.463188171386719
    10. '``' → logprob: -15.338188171386719

Token 778: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.04889959469437599
    2. ',' → logprob: -3.1738996505737305
    3. '[-' → logprob: -5.4238996505737305
    4. ']' → logprob: -7.9238996505737305
    5. '```' → logprob: -8.79889965057373
    6. '   ' → logprob: -8.92389965057373
    7. '),' → logprob: -8.92389965057373
    8. 'a' → logprob: -9.04889965057373
    9. ' ,' → logprob: -9.04889965057373
    10. '>,' → logprob: -9.54889965057373

Token 779: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.25194206833839417
    2. 'a' → logprob: -1.5019420385360718
    3. '   ' → logprob: -12.501941680908203
    4. '	a' → logprob: -12.876941680908203
    5. ''a' → logprob: -13.751941680908203
    6. ' ' → logprob: -14.251941680908203
    7. '[-' → logprob: -14.251941680908203
    8. '`' → logprob: -14.626941680908203
    9. ' =' → logprob: -14.876941680908203
    10. '```' → logprob: -15.001941680908203

Token 780: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.9266199160483666e-05
    2. '-' → logprob: -11.375019073486328
    3. '][-' → logprob: -12.250019073486328
    4. '```' → logprob: -13.250019073486328
    5. '[' → logprob: -15.000019073486328
    6. '(-' → logprob: -15.250019073486328
    7. '...' → logprob: -15.375019073486328
    8. '``' → logprob: -15.625019073486328
    9. ' [-' → logprob: -16.500019073486328
    10. '[]' → logprob: -16.625019073486328

Token 781: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003345122095197439
    2. '-' → logprob: -9.000334739685059
    3. '3' → logprob: -9.000334739685059
    4. '5' → logprob: -9.500334739685059
    5. '[-' → logprob: -12.687834739685059
    6. '1' → logprob: -13.187834739685059
    7. '```' → logprob: -13.312834739685059
    8. '4' → logprob: -13.500334739685059
    9. '][-' → logprob: -14.375334739685059
    10. '...' → logprob: -14.562834739685059

Token 782: '][-' (ID: 162298)
  Prédit: '][-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][-' → logprob: -0.28230732679367065
    2. '[-' → logprob: -1.4073073863983154
    3. '-' → logprob: -7.032307147979736
    4. '```' → logprob: -8.782307624816895
    5. ']-' → logprob: -10.407307624816895
    6. '][' → logprob: -10.782307624816895
    7. '   ' → logprob: -11.032307624816895
    8. ']' → logprob: -11.407307624816895
    9. '...' → logprob: -11.782307624816895
    10. ' [-' → logprob: -12.282307624816895

Token 783: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00020473242329899222
    2. '3' → logprob: -8.625205039978027
    3. '-' → logprob: -11.375205039978027
    4. 'd' → logprob: -12.750205039978027
    5. '1' → logprob: -12.812705039978027
    6. '```' → logprob: -13.187705039978027
    7. ' ' → logprob: -13.687705039978027
    8. '[' → logprob: -13.937705039978027
    9. '   ' → logprob: -13.937705039978027
    10. 'b' → logprob: -15.375205039978027

Token 784: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.005643993616104126
    2. ',' → logprob: -5.255643844604492
    3. '[-' → logprob: -8.505643844604492
    4. ']' → logprob: -9.005643844604492
    5. '][-' → logprob: -10.130643844604492
    6. '   ' → logprob: -11.630643844604492
    7. '),' → logprob: -11.630643844604492
    8. 'a' → logprob: -11.880643844604492
    9. '},' → logprob: -12.505643844604492
    10. '```' → logprob: -12.755643844604492

Token 785: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4740966260433197
    2. 'a' → logprob: -0.9740966558456421
    3. '   ' → logprob: -11.224096298217773
    4. '	a' → logprob: -13.099096298217773
    5. ''a' → logprob: -14.349096298217773
    6. '_a' → logprob: -14.599096298217773
    7. '```' → logprob: -14.849096298217773
    8. '[a' → logprob: -14.974096298217773
    9. '"a' → logprob: -14.974096298217773
    10. ' ' → logprob: -15.224096298217773

Token 786: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -2.2246291337069124e-05
    2. '][-' → logprob: -11.500021934509277
    3. '-' → logprob: -11.750021934509277
    4. ' [-' → logprob: -13.875021934509277
    5. '[' → logprob: -14.125021934509277
    6. '```' → logprob: -14.250021934509277
    7. '...' → logprob: -14.625021934509277
    8. '`' → logprob: -14.750021934509277
    9. 'a' → logprob: -14.875021934509277
    10. '[]' → logprob: -16.000022888183594

Token 787: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00033081689616665244
    2. '-' → logprob: -8.125330924987793
    3. '1' → logprob: -10.625330924987793
    4. '[-' → logprob: -12.000330924987793
    5. '3' → logprob: -13.687830924987793
    6. '```' → logprob: -14.312830924987793
    7. '...' → logprob: -14.937830924987793
    8. '5' → logprob: -15.500330924987793
    9. '][-' → logprob: -15.500330924987793
    10. '[' → logprob: -15.750330924987793

Token 788: '][-' (ID: 162298)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.5760070085525513
    2. '][-' → logprob: -0.8260070085525513
    3. '-' → logprob: -9.951006889343262
    4. ' [-' → logprob: -11.826006889343262
    5. '][' → logprob: -12.701006889343262
    6. ']' → logprob: -12.701006889343262
    7. ']-' → logprob: -13.076006889343262
    8. '...' → logprob: -13.951006889343262
    9. '```' → logprob: -14.326006889343262
    10. '[' → logprob: -14.451006889343262

Token 789: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.682846287731081e-05
    2. '-' → logprob: -10.250066757202148
    3. '2' → logprob: -10.625066757202148
    4. '[-' → logprob: -12.875066757202148
    5. '3' → logprob: -14.375066757202148
    6. ']' → logprob: -14.500066757202148
    7. '```' → logprob: -14.562566757202148
    8. '5' → logprob: -14.812566757202148
    9. ' ' → logprob: -15.312566757202148
    10. '   ' → logprob: -15.312566757202148

Token 790: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04862881079316139
    2. ' =' → logprob: -3.048628807067871
    3. ']' → logprob: -10.423628807067871
    4. ',' → logprob: -12.173628807067871
    5. ']=' → logprob: -12.298628807067871
    6. ' ' → logprob: -14.548628807067871
    7. ')' → logprob: -14.923628807067871
    8. '```' → logprob: -15.423628807067871
    9. '=
' → logprob: -15.798628807067871
    10. '   ' → logprob: -16.173629760742188

Token 791: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4287503659725189
    2. ' =' → logprob: -1.0537503957748413
    3. ',' → logprob: -10.053750038146973
    4. '=list' → logprob: -12.428750038146973
    5. ' ' → logprob: -13.678750038146973
    6. ' ,' → logprob: -14.928750038146973
    7. '   ' → logprob: -15.428750038146973
    8. 'a' → logprob: -15.678750038146973
    9. '=a' → logprob: -15.928750038146973
    10. '=['' → logprob: -16.67875099182129

Token 792: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.11296968162059784
    2. ' list' → logprob: -2.2379696369171143
    3. '['' → logprob: -9.362969398498535
    4. '["' → logprob: -9.987969398498535
    5. ' ['' → logprob: -11.862969398498535
    6. 'g' → logprob: -12.237969398498535
    7. ' ["' → logprob: -14.112969398498535
    8. 'l' → logprob: -14.487969398498535
    9. ' g' → logprob: -14.487969398498535
    10. '	list' → logprob: -14.987969398498535

Token 793: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -6.2729995988775045e-06
    2. '('' → logprob: -12.875006675720215
    3. '(["' → logprob: -13.250006675720215
    4. ' ("' → logprob: -13.750006675720215
    5. '["' → logprob: -14.500006675720215
    6. '(' → logprob: -14.875006675720215
    7. '(
' → logprob: -17.6250057220459
    8. '"' → logprob: -18.0000057220459
    9. '(g' → logprob: -18.0000057220459
    10. '(("' → logprob: -18.3750057220459

Token 794: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.25601673126220703
    2. '"' → logprob: -1.506016731262207
    3. ''g' → logprob: -5.506016731262207
    4. '#g' → logprob: -12.631016731262207
    5. ''' → logprob: -12.756016731262207
    6. '[g' → logprob: -12.756016731262207
    7. ' g' → logprob: -13.006016731262207
    8. '	g' → logprob: -13.131016731262207
    9. 'list' → logprob: -14.756016731262207
    10. '.g' → logprob: -14.881016731262207

Token 795: '.j' (ID: 1760)
  Prédit: '.j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.j' → logprob: -0.01128819864243269
    2. '.' → logprob: -4.761288166046143
    3. '.g' → logprob: -6.761288166046143
    4. ' .' → logprob: -7.636288166046143
    5. 'g' → logprob: -8.5112886428833
    6. '..' → logprob: -8.6362886428833
    7. '.jpg' → logprob: -9.3862886428833
    8. '...' → logprob: -10.1362886428833
    9. '.jupiter' → logprob: -10.1362886428833
    10. '.jav' → logprob: -10.2612886428833

Token 796: 'jd' (ID: 41882)
  Prédit: 'jd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jd' → logprob: -0.0029651038348674774
    2. 'j' → logprob: -5.877964973449707
    3. 'jde' → logprob: -10.377964973449707
    4. 'd' → logprob: -10.377964973449707
    5. '```' → logprob: -10.877964973449707
    6. 'jdk' → logprob: -11.127964973449707
    7. 'jid' → logprob: -11.752964973449707
    8. 'jad' → logprob: -12.127964973449707
    9. '[j' → logprob: -12.377964973449707
    10. ']' → logprob: -12.377964973449707

Token 797: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0002833848411682993
    2. 'g' → logprob: -9.125283241271973
    3. '")
' → logprob: -9.375283241271973
    4. ' ")' → logprob: -10.125283241271973
    5. ')' → logprob: -11.500283241271973
    6. 'a' → logprob: -11.875283241271973
    7. '')' → logprob: -11.875283241271973
    8. '"' → logprob: -12.125283241271973
    9. '"),' → logprob: -12.500283241271973
    10. 'd' → logprob: -12.625283241271973

Token 798: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 799: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08553518354892731
    2. '#' (adapté à ' #') → logprob: -2.7105352878570557
    3. 'a' → logprob: -4.460535049438477
    4. '<|end|>' → logprob: -6.335535049438477
    5. ' #' → logprob: -6.710535049438477
    6. ')' → logprob: -8.585535049438477
    7. ',' → logprob: -8.710535049438477
    8. '  ' → logprob: -8.835535049438477
    9. ' ' → logprob: -9.085535049438477
    10. ' a' → logprob: -9.335535049438477

Token 800: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.13730838894844055
    2. 'g' → logprob: -2.262308359146118
    3. ' a' → logprob: -4.387308597564697
    4. ' g' → logprob: -4.887308597564697
    5. '"a' → logprob: -6.512308597564697
    6. '5' → logprob: -6.887308597564697
    7. '"' → logprob: -7.762308597564697
    8. '["' → logprob: -7.887308597564697
    9. '   ' → logprob: -8.262308120727539
    10. ' ' → logprob: -8.762308120727539

Token 801: '2' (ID: 17)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3069216310977936
    2. 'g' → logprob: -1.6819216012954712
    3. '-' → logprob: -3.0569217205047607
    4. '[-' → logprob: -4.181921482086182
    5. '4' → logprob: -5.056921482086182
    6. '"' → logprob: -5.931921482086182
    7. '"a' → logprob: -6.306921482086182
    8. '5' → logprob: -6.431921482086182
    9. '```' → logprob: -7.306921482086182
    10. '2' → logprob: -7.806921482086182

Token 802: 'ème' (ID: 9767)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.007906957529485226
    2. 'a' → logprob: -5.382906913757324
    3. '   ' → logprob: -6.257906913757324
    4. '][-' → logprob: -8.382906913757324
    5. '[]' → logprob: -8.507906913757324
    6. '-' → logprob: -8.632906913757324
    7. '```' → logprob: -8.632906913757324
    8. '#' → logprob: -8.757906913757324
    9. ']' → logprob: -9.257906913757324
    10. '(-' → logprob: -9.382906913757324

Token 803: '
' (ID: 198)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02942100167274475
    2. '   ' → logprob: -3.654421091079712
    3. ' a' → logprob: -5.779420852661133
    4. '<|end|>' → logprob: -11.029420852661133
    5. ' ' → logprob: -12.529420852661133
    6. '  ' → logprob: -13.029420852661133
    7. '
' → logprob: -14.154420852661133
    8. '    ' → logprob: -14.654420852661133
    9. '```' → logprob: -14.779420852661133
    10. ')' → logprob: -14.779420852661133

Token 804: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.31341272592544556
    2. '   ' → logprob: -1.3134126663208008
    3. ' a' → logprob: -9.3134126663208
    4. '```' → logprob: -9.8134126663208
    5. '#a' → logprob: -14.0634126663208
    6. '	a' → logprob: -14.1884126663208
    7. '[a' → logprob: -14.1884126663208
    8. ',a' → logprob: -14.4384126663208
    9. '[' → logprob: -14.5634126663208
    10. '#' → logprob: -14.6884126663208

Token 805: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0008098635007627308
    2. ' a' → logprob: -7.125809669494629
    3. '   ' → logprob: -12.250809669494629
    4. '[a' → logprob: -14.375809669494629
    5. '	a' → logprob: -17.250810623168945
    6. ''a' → logprob: -17.875810623168945
    7. '"a' → logprob: -18.375810623168945
    8. ',a' → logprob: -18.375810623168945
    9. '>a' → logprob: -19.000810623168945
    10. '#a' → logprob: -19.125810623168945

Token 806: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -6.704273118884885e-07
    2. '...' → logprob: -14.625000953674316
    3. ' [-' → logprob: -17.0
    4. '```' → logprob: -17.0
    5. '[:-' → logprob: -17.125
    6. '][-' → logprob: -17.5
    7. '#' → logprob: -17.75
    8. '[' → logprob: -18.125
    9. '-' → logprob: -18.375
    10. '`' → logprob: -18.5

Token 807: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.42870569229125977
    2. '2' → logprob: -1.0537056922912598
    3. '0' → logprob: -13.178705215454102
    4. '-' → logprob: -14.053705215454102
    5. '[-' → logprob: -14.178705215454102
    6. '```' → logprob: -14.428705215454102
    7. '[' → logprob: -15.178705215454102
    8. '``' → logprob: -15.491205215454102
    9. '   ' → logprob: -15.866205215454102
    10. ' ' → logprob: -15.991205215454102

Token 808: '][-' (ID: 162298)
  Prédit: '][-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][-' → logprob: -0.001752891344949603
    2. '[-' → logprob: -6.376752853393555
    3. ']' → logprob: -10.501752853393555
    4. '][' → logprob: -10.876752853393555
    5. '][:' → logprob: -12.751752853393555
    6. ']-' → logprob: -14.876752853393555
    7. '-' → logprob: -15.126752853393555
    8. ']
' → logprob: -15.876752853393555
    9. '0' → logprob: -16.001752853393555
    10. '```' → logprob: -16.376752853393555

Token 809: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -6.392202976712724e-06
    2. 'f' → logprob: -13.125006675720215
    3. '6' → logprob: -14.000006675720215
    4. '1' → logprob: -14.000006675720215
    5. '```' → logprob: -14.312506675720215
    6. '[' → logprob: -14.562506675720215
    7. '٥' → logprob: -15.125006675720215
    8. '৫' → logprob: -15.687506675720215
    9. '۵' → logprob: -16.2500057220459
    10. '५' → logprob: -16.4375057220459

Token 810: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.00045617512660101056
    2. ']' → logprob: -8.625455856323242
    3. '][-' → logprob: -8.625455856323242
    4. '[-' → logprob: -9.250455856323242
    5. ',' → logprob: -15.375455856323242
    6. ':],' → logprob: -16.125455856323242
    7. '},' → logprob: -16.375455856323242
    8. ']-' → logprob: -16.875455856323242
    9. '"],' → logprob: -16.875455856323242
    10. '   ' → logprob: -16.875455856323242

Token 811: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.12692862749099731
    2. 'a' → logprob: -2.1269285678863525
    3. '   ' → logprob: -15.251928329467773
    4. '	a' → logprob: -15.751928329467773
    5. ' ' → logprob: -16.751928329467773
    6. '[a' → logprob: -17.126928329467773
    7. '    ' → logprob: -17.501928329467773
    8. ',a' → logprob: -17.626928329467773
    9. '```' → logprob: -18.001928329467773
    10. 's' → logprob: -18.251928329467773

Token 812: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -9.088346359931165e-07
    2. '][-' → logprob: -14.250000953674316
    3. '-' → logprob: -16.25
    4. '[' → logprob: -17.5
    5. '```' → logprob: -18.75
    6. '...' → logprob: -18.875
    7. ' [-' → logprob: -19.75
    8. '[]' → logprob: -20.5
    9. '[:-' → logprob: -20.5
    10. '1' → logprob: -20.875

Token 813: '1' (ID: 16)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.4331134259700775
    2. '1' → logprob: -1.0581134557724
    3. '5' → logprob: -5.4331135749816895
    4. '-' → logprob: -10.558113098144531
    5. '[-' → logprob: -12.683113098144531
    6. '```' → logprob: -13.183113098144531
    7. '][-' → logprob: -14.808113098144531
    8. '3' → logprob: -15.120613098144531
    9. '   ' → logprob: -15.120613098144531
    10. '2' → logprob: -15.245613098144531

Token 814: '][-' (ID: 162298)
  Prédit: '][-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][-' → logprob: -0.007612898014485836
    2. '[-' → logprob: -4.882612705230713
    3. ']' → logprob: -12.257613182067871
    4. '...' → logprob: -14.757613182067871
    5. '][' → logprob: -15.007613182067871
    6. ']-' → logprob: -15.132613182067871
    7. ' [-' → logprob: -15.257613182067871
    8. '-' → logprob: -15.507613182067871
    9. '```' → logprob: -15.882613182067871
    10. '   ' → logprob: -16.007612228393555

Token 815: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0005323022487573326
    2. '5' → logprob: -7.625532150268555
    3. '1' → logprob: -10.125532150268555
    4. '```' → logprob: -13.250532150268555
    5. '[' → logprob: -14.313032150268555
    6. '-' → logprob: -14.313032150268555
    7. '[-' → logprob: -15.125532150268555
    8. '2' → logprob: -15.688032150268555
    9. '' → logprob: -16.125532150268555
    10. '3' → logprob: -16.188032150268555

Token 816: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.00027706706896424294
    2. ']' → logprob: -8.500277519226074
    3. ',' → logprob: -9.625277519226074
    4. 'a' → logprob: -13.000277519226074
    5. '),' → logprob: -13.625277519226074
    6. '[-' → logprob: -14.125277519226074
    7. '>,' → logprob: -14.250277519226074
    8. ' ],' → logprob: -14.500277519226074
    9. '},' → logprob: -14.750277519226074
    10. '`,' → logprob: -15.125277519226074

Token 817: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.10020763427019119
    2. 'a' → logprob: -2.350207567214966
    3. '[a' → logprob: -14.350207328796387
    4. '   ' → logprob: -15.975207328796387
    5. '	a' → logprob: -15.975207328796387
    6. '[' → logprob: -17.100208282470703
    7. ' ' → logprob: -17.475208282470703
    8. ' а' → logprob: -17.475208282470703
    9. '```' → logprob: -17.475208282470703
    10. ''a' → logprob: -17.600208282470703

Token 818: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00019948746194131672
    2. '-' → logprob: -8.750199317932129
    3. '```' → logprob: -10.875199317932129
    4. '1' → logprob: -11.250199317932129
    5. '][-' → logprob: -12.750199317932129
    6. '[' → logprob: -12.875199317932129
    7. '...' → logprob: -13.375199317932129
    8. '``' → logprob: -14.125199317932129
    9. ' [-' → logprob: -14.250199317932129
    10. '5' → logprob: -15.500199317932129

Token 819: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000344044849043712
    2. '5' → logprob: -8.375344276428223
    3. '3' → logprob: -9.250344276428223
    4. '2' → logprob: -11.375344276428223
    5. '```' → logprob: -12.500344276428223
    6. '``' → logprob: -15.250344276428223
    7. '4' → logprob: -15.312844276428223
    8. '-' → logprob: -15.375344276428223
    9. '(' → logprob: -15.750344276428223
    10. '...' → logprob: -15.875344276428223

Token 820: '][-' (ID: 162298)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.005308942869305611
    2. '][-' → logprob: -5.255309104919434
    3. '```' → logprob: -10.380309104919434
    4. '[' → logprob: -11.255309104919434
    5. '...' → logprob: -11.630309104919434
    6. ']' → logprob: -11.880309104919434
    7. '-' → logprob: -12.255309104919434
    8. '   ' → logprob: -13.005309104919434
    9. ' [-' → logprob: -13.005309104919434
    10. '[:-' → logprob: -13.755309104919434

Token 821: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03904249891638756
    2. '3' → logprob: -3.2890424728393555
    3. '2' → logprob: -7.2890424728393555
    4. '5' → logprob: -8.164042472839355
    5. '```' → logprob: -10.664042472839355
    6. '4' → logprob: -13.039042472839355
    7. '[' → logprob: -13.351542472839355
    8. '-' → logprob: -13.414042472839355
    9. '0' → logprob: -13.976542472839355
    10. '   ' → logprob: -14.101542472839355

Token 822: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.01133369468152523
    2. ',' → logprob: -4.511333465576172
    3. ']' → logprob: -8.761333465576172
    4. '[-' → logprob: -9.261333465576172
    5. '),' → logprob: -11.386333465576172
    6. 'a' → logprob: -11.886333465576172
    7. '},' → logprob: -13.011333465576172
    8. '][-' → logprob: -13.011333465576172
    9. '```' → logprob: -13.136333465576172
    10. '>,' → logprob: -13.261333465576172

Token 823: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3132629990577698
    2. 'a' → logprob: -1.313262939453125
    3. '   ' → logprob: -14.188262939453125
    4. '	a' → logprob: -15.813262939453125
    5. ' ' → logprob: -15.938262939453125
    6. '```' → logprob: -16.563262939453125
    7. '[a' → logprob: -16.938262939453125
    8. '[-' → logprob: -17.188262939453125
    9. '    ' → logprob: -17.438262939453125
    10. 'n' → logprob: -17.688262939453125

Token 824: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -8.2994620242971e-06
    2. '-' → logprob: -11.875008583068848
    3. '...' → logprob: -14.625008583068848
    4. '[' → logprob: -15.125008583068848
    5. '```' → logprob: -15.250008583068848
    6. '][-' → logprob: -15.750008583068848
    7. '1' → logprob: -16.12500762939453
    8. '``' → logprob: -17.50000762939453
    9. 'a' → logprob: -17.62500762939453
    10. '`' → logprob: -17.75000762939453

Token 825: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004990590969100595
    2. '-' → logprob: -7.625499248504639
    3. '```' → logprob: -11.75049877166748
    4. '[-' → logprob: -13.87549877166748
    5. '3' → logprob: -14.00049877166748
    6. '2' → logprob: -14.50049877166748
    7. '4' → logprob: -15.50049877166748
    8. '...' → logprob: -15.62549877166748
    9. '][-' → logprob: -16.500499725341797
    10. '``' → logprob: -16.500499725341797

Token 826: '][-' (ID: 162298)
  Prédit: '][-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][-' → logprob: -0.5253586769104004
    2. '[-' → logprob: -0.9003586769104004
    3. '-' → logprob: -6.1503586769104
    4. '...' → logprob: -10.775358200073242
    5. '```' → logprob: -10.775358200073242
    6. ']-' → logprob: -10.900358200073242
    7. '][' → logprob: -11.275358200073242
    8. '>-' → logprob: -12.275358200073242
    9. ']' → logprob: -12.775358200073242
    10. '],' → logprob: -13.025358200073242

Token 827: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2520463764667511
    2. '2' → logprob: -1.5020463466644287
    3. '-' → logprob: -9.877046585083008
    4. '5' → logprob: -10.252046585083008
    5. '```' → logprob: -10.752046585083008
    6. '3' → logprob: -12.002046585083008
    7. '   ' → logprob: -13.877046585083008
    8. ' ' → logprob: -14.377046585083008
    9. '[' → logprob: -14.939546585083008
    10. '[-' → logprob: -15.439546585083008

Token 828: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0038053072057664394
    2. ',' → logprob: -5.628805160522461
    3. ']' → logprob: -8.628805160522461
    4. '[-' → logprob: -11.753805160522461
    5. '),' → logprob: -12.003805160522461
    6. ' ],' → logprob: -12.878805160522461
    7. 'a' → logprob: -13.503805160522461
    8. '```' → logprob: -13.503805160522461
    9. '},' → logprob: -13.753805160522461
    10. ' ,' → logprob: -14.128805160522461

Token 829: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.018150413408875465
    2. 'a' → logprob: -4.018150329589844
    3. '   ' → logprob: -15.768150329589844
    4. '	a' → logprob: -15.768150329589844
    5. '```' → logprob: -16.143150329589844
    6. ' ' → logprob: -16.768150329589844
    7. ' а' → logprob: -17.268150329589844
    8. ' ' → logprob: -17.518150329589844
    9. '`' → logprob: -17.768150329589844
    10. '[a' → logprob: -17.893150329589844

Token 830: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00012106612848583609
    2. '][-' → logprob: -9.250121116638184
    3. '-' → logprob: -10.750121116638184
    4. '[' → logprob: -13.375121116638184
    5. '```' → logprob: -14.375121116638184
    6. '...' → logprob: -14.625121116638184
    7. '`' → logprob: -15.125121116638184
    8. ' [-' → logprob: -16.000120162963867
    9. '[]' → logprob: -16.500120162963867
    10. 'a' → logprob: -17.000120162963867

Token 831: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8789383830153383e-05
    2. '-' → logprob: -11.125019073486328
    3. '5' → logprob: -12.875019073486328
    4. '```' → logprob: -14.375019073486328
    5. '[-' → logprob: -15.250019073486328
    6. '4' → logprob: -15.625019073486328
    7. '3' → logprob: -16.187519073486328
    8. ' ' → logprob: -16.437519073486328
    9. '   ' → logprob: -17.187519073486328
    10. '``' → logprob: -17.500019073486328

Token 832: '][-' (ID: 162298)
  Prédit: '][-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][-' → logprob: -0.260127991437912
    2. '[-' → logprob: -1.5101280212402344
    3. ']' → logprob: -5.760128021240234
    4. ']-' → logprob: -6.010128021240234
    5. '-' → logprob: -6.010128021240234
    6. ']=-' → logprob: -9.510128021240234
    7. '][' → logprob: -12.010128021240234
    8. ']==' → logprob: -12.135128021240234
    9. '][]' → logprob: -12.885128021240234
    10. '>-' → logprob: -13.010128021240234

Token 833: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -15.500000953674316
    3. '3' → logprob: -16.375
    4. ' ' → logprob: -16.875
    5. '   ' → logprob: -17.75
    6. '4' → logprob: -18.0
    7. '-' → logprob: -18.375
    8. '0' → logprob: -18.8125
    9. '2' → logprob: -19.25
    10. '１' → logprob: -19.5625

Token 834: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01000987272709608
    2. ' =' → logprob: -4.635009765625
    3. ']' → logprob: -8.385009765625
    4. ']=' → logprob: -10.760009765625
    5. ')' → logprob: -13.010009765625
    6. ',' → logprob: -13.760009765625
    7. ' ]' → logprob: -15.385009765625
    8. ' ' → logprob: -15.510009765625
    9. ')=' → logprob: -15.635009765625
    10. '<|end|>' → logprob: -16.260009765625

Token 835: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029751643538475037
    2. ' =' → logprob: -3.5297515392303467
    3. ',' → logprob: -13.904751777648926
    4. '=list' → logprob: -15.904751777648926
    5. '=

' → logprob: -16.90475082397461
    6. '=
' → logprob: -17.65475082397461
    7. ']=' → logprob: -18.52975082397461
    8. ')=' → logprob: -18.52975082397461
    9. '<|end|>' → logprob: -18.52975082397461
    10. ')' → logprob: -18.77975082397461

Token 836: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.3868788182735443
    2. 'list' → logprob: -1.1368788480758667
    3. '["' → logprob: -12.136878967285156
    4. '['' → logprob: -14.136878967285156
    5. 'l' → logprob: -14.761878967285156
    6. ' ['' → logprob: -15.136878967285156
    7. ' ["' → logprob: -15.511878967285156
    8. '	list' → logprob: -15.886878967285156
    9. ' ' → logprob: -16.011878967285156
    10. '(list' → logprob: -16.261878967285156

Token 837: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -1.3856492842023727e-06
    2. ' ("' → logprob: -14.000000953674316
    3. '(' → logprob: -14.500000953674316
    4. '('' → logprob: -16.875001907348633
    5. '(["' → logprob: -16.875001907348633
    6. '(("' → logprob: -17.000001907348633
    7. ')("' → logprob: -18.000001907348633
    8. '(
' → logprob: -18.625001907348633
    9. '("")' → logprob: -18.750001907348633
    10. '("("' → logprob: -19.000001907348633

Token 838: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.09355123341083527
    2. '"' → logprob: -2.4685511589050293
    3. ''g' → logprob: -5.468551158905029
    4. 'gf' → logprob: -8.218551635742188
    5. ''' → logprob: -9.593551635742188
    6. '#g' → logprob: -10.968551635742188
    7. '.g' → logprob: -12.218551635742188
    8. '	g' → logprob: -12.468551635742188
    9. '"group' → logprob: -12.968551635742188
    10. '"github' → logprob: -13.468551635742188

Token 839: 'ffee' (ID: 76914)
  Prédit: 'ffee'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ffee' → logprob: -0.0006671638693660498
    2. 'ff' → logprob: -7.375667095184326
    3. 'f' → logprob: -10.500667572021484
    4. 'ffe' → logprob: -12.125667572021484
    5. 'offee' → logprob: -13.000667572021484
    6. 'ffff' → logprob: -13.125667572021484
    7. 'ffaa' → logprob: -13.375667572021484
    8. 'фф' → logprob: -15.250667572021484
    9. 'ffect' → logprob: -15.250667572021484
    10. 'ffset' → logprob: -15.375667572021484

Token 840: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0004635584482457489
    2. ')")' → logprob: -8.125463485717773
    3. '")
' → logprob: -9.125463485717773
    4. '()' → logprob: -10.750463485717773
    5. ')' → logprob: -11.375463485717773
    6. ' ")' → logprob: -11.875463485717773
    7. '")

' → logprob: -12.250463485717773
    8. 'e' → logprob: -12.625463485717773
    9. '}")' → logprob: -13.125463485717773
    10. 'd' → logprob: -13.500463485717773

Token 841: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8612784743309021
    2. '#' → logprob: -0.9862784743309021
    3. '<|end|>' → logprob: -2.611278533935547
    4. '
' → logprob: -2.861278533935547
    5. 'for' → logprob: -3.111278533935547
    6. ')' → logprob: -4.736278533935547
    7. 'print' → logprob: -4.861278533935547
    8. ' for' → logprob: -5.861278533935547
    9. '```' → logprob: -6.111278533935547
    10. '    
' → logprob: -6.736278533935547

Token 842: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45498594641685486
    2. '#' (adapté à ' #') → logprob: -1.7049859762191772
    3. '<|end|>' → logprob: -2.2049858570098877
    4. ')' → logprob: -3.5799858570098877
    5. '```' → logprob: -3.8299858570098877
    6. ' ' → logprob: -5.204986095428467
    7. 'exit' → logprob: -5.329986095428467
    8. '  ' → logprob: -5.579986095428467
    9. 'print' → logprob: -6.454986095428467
    10. '
' → logprob: -6.454986095428467

Token 843: ' dernière' (ID: 39497)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.9476525783538818
    2. ')' → logprob: -1.6976525783538818
    3. 'a' → logprob: -1.8226525783538818
    4. '")' → logprob: -2.697652578353882
    5. ' exit' → logprob: -2.822652578353882
    6. ']' → logprob: -4.072652816772461
    7. '"' → logprob: -4.447652816772461
    8. '[' → logprob: -4.572652816772461
    9. 'n' → logprob: -4.572652816772461
    10. '["' → logprob: -4.697652816772461

Token 844: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7408112287521362
    2. ']' → logprob: -1.1158112287521362
    3. '   ' → logprob: -2.990811347961426
    4. '"' → logprob: -3.240811347961426
    5. ' line' → logprob: -3.740811347961426
    6. ' ' → logprob: -4.240811347961426
    7. '```' → logprob: -4.490811347961426
    8. 'a' → logprob: -4.615811347961426
    9. '<|end|>' → logprob: -4.615811347961426
    10. '  ' → logprob: -5.240811347961426

Token 845: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0033020011615008116
    2. '#' → logprob: -6.128302097320557
    3. '
' → logprob: -7.003302097320557
    4. ' for' → logprob: -8.878301620483398
    5. '<|end|>' → logprob: -11.003301620483398
    6. 'print' → logprob: -11.128301620483398
    7. '```' → logprob: -11.628301620483398
    8. '    
' → logprob: -12.128301620483398
    9. 'n' → logprob: -12.128301620483398
    10. '  
' → logprob: -12.378301620483398

Token 846: ' n' (ID: 297)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010190908797085285
    2. '#' → logprob: -4.635190963745117
    3. '   ' → logprob: -8.385190963745117
    4. ' for' → logprob: -9.385190963745117
    5. '
' → logprob: -10.510190963745117
    6. 'else' → logprob: -10.635190963745117
    7. '    
' → logprob: -10.760190963745117
    8. 'print' → logprob: -10.885190963745117
    9. 'if' → logprob: -11.510190963745117
    10. 'elif' → logprob: -12.010190963745117

Token 847: ' -=' (ID: 12583)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7936877012252808
    2. '=' → logprob: -1.6686877012252808
    3. ' ' → logprob: -1.6686877012252808
    4. ' -=' → logprob: -1.9186877012252808
    5. ' +=' → logprob: -4.54368782043457
    6. '-' → logprob: -5.41868782043457
    7. '-=' → logprob: -6.66868782043457
    8. '%' → logprob: -6.79368782043457
    9. ')' → logprob: -7.29368782043457
    10. ' #' → logprob: -7.54368782043457

Token 848: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.02089989371597767
    2. '6' → logprob: -4.020899772644043
    3. ' ' → logprob: -6.145899772644043
    4. '1' → logprob: -8.020899772644043
    5. '7' → logprob: -8.270899772644043
    6. '10' → logprob: -11.020899772644043
    7. '2' → logprob: -13.395899772644043
    8. '8' → logprob: -14.270899772644043
    9. '4' → logprob: -15.020899772644043
    10. '9' → logprob: -15.708399772644043

Token 849: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.016928229480981827
    2. '6' → logprob: -5.016928195953369
    3. '7' → logprob: -5.141928195953369
    4. '4' → logprob: -6.266928195953369
    5. '2' → logprob: -6.766928195953369
    6. '10' → logprob: -7.516928195953369
    7. '1' → logprob: -7.766928195953369
    8. '8' → logprob: -9.016928672790527
    9. '3' → logprob: -9.391928672790527
    10. '9' → logprob: -10.829428672790527

Token 850: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19116953015327454
    2. '<|end|>' → logprob: -1.8161695003509521
    3. '#' → logprob: -5.816169738769531
    4. '  
' → logprob: -6.066169738769531
    5. '    
' → logprob: -6.441169738769531
    6. '```' → logprob: -6.816169738769531
    7. '<|end|>' → logprob: -7.066169738769531
    8. ' 
' → logprob: -7.441169738769531
    9. '

' → logprob: -7.691169738769531
    10. '
' → logprob: -8.316169738769531

Token 851: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0014229720691218972
    2. '#' → logprob: -7.376422882080078
    3. '
' → logprob: -8.501422882080078
    4. '<|end|>' → logprob: -8.751422882080078
    5. '

' → logprob: -9.251422882080078
    6. '    
' → logprob: -9.501422882080078
    7. '\n' → logprob: -9.751422882080078
    8. ' 
' → logprob: -10.001422882080078
    9. '  
' → logprob: -10.251422882080078
    10. 'a' → logprob: -10.376422882080078

Token 852: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.37401846051216125
    2. 'n' → logprob: -2.124018430709839
    3. ' n' → logprob: -2.624018430709839
    4. ' #' → logprob: -2.624018430709839
    5. ' continue' → logprob: -3.999018430709839
    6. 'continue' → logprob: -4.374018669128418
    7. 'contin' → logprob: -5.124018669128418
    8. 'for' → logprob: -6.374018669128418
    9. ' continuer' → logprob: -6.374018669128418
    10. 'Continue' → logprob: -6.499018669128418

Token 853: ' dim' (ID: 6051)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.33090996742248535
    2. ' continue' → logprob: -2.4559099674224854
    3. 'n' → logprob: -2.7059099674224854
    4. ' n' → logprob: -3.2059099674224854
    5. '    ' → logprob: -3.2059099674224854
    6. ' #' → logprob: -3.9559099674224854
    7. '#' → logprob: -4.830909729003906
    8. 'continue' → logprob: -5.080909729003906
    9. '-=' → logprob: -5.455909729003906
    10. 'contin' → logprob: -6.455909729003906

Token 854: 'inue' (ID: 9329)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.9150928258895874
    2. '=' → logprob: -1.7900928258895874
    3. 'inue' → logprob: -1.9150928258895874
    4. '   ' → logprob: -2.290092945098877
    5. '-' → logprob: -3.040092945098877
    6. 'n' → logprob: -3.165092945098877
    7. ' -=' → logprob: -3.915092945098877
    8. 'ine' → logprob: -4.415092945098877
    9. 's' → logprob: -4.665092945098877
    10. 'ines' → logprob: -4.790092945098877

Token 855: ' n' (ID: 297)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.43562135100364685
    2. 'n' → logprob: -1.0606213808059692
    3. '<|end|>' → logprob: -5.56062126159668
    4. '```' → logprob: -6.81062126159668
    5. ' n' → logprob: -6.93562126159668
    6. '7' → logprob: -7.68562126159668
    7. ' ' → logprob: -8.18562126159668
    8. '(n' → logprob: -9.93562126159668
    9. '<|end|>' → logprob: -10.06062126159668
    10. '1' → logprob: -10.68562126159668

Token 856: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 857: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.00033558503491804004
    2. ' ' → logprob: -8.000335693359375
    3. '```' → logprob: -16.625335693359375
    4. '1' → logprob: -18.625335693359375
    5. ' five' → logprob: -19.500335693359375
    6. ' cinq' → logprob: -19.625335693359375
    7. '   ' → logprob: -20.875335693359375
    8. '...' → logprob: -21.000335693359375
    9. ' cinco' → logprob: -21.125335693359375
    10. '٥' → logprob: -21.125335693359375

Token 858: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.00038086410495452583
    2. ' ' → logprob: -7.875380992889404
    3. '1' → logprob: -14.250380516052246
    4. '```' → logprob: -15.875380516052246
    5. '   ' → logprob: -18.250381469726562
    6. ' cinq' → logprob: -19.875381469726562
    7. '    ' → logprob: -20.125381469726562
    8. '  ' → logprob: -20.250381469726562
    9. '2' → logprob: -20.500381469726562
    10. '٥' → logprob: -21.125381469726562

Token 859: ' car' (ID: 1669)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8297153115272522
    2. '
' → logprob: -0.9547153115272522
    3. '<|end|>' → logprob: -2.3297152519226074
    4. 'n' → logprob: -3.5797152519226074
    5. '```' → logprob: -4.329715251922607
    6. 'a' → logprob: -4.704715251922607
    7. ' 
' → logprob: -4.829715251922607
    8. '  
' → logprob: -5.204715251922607
    9. '    
' → logprob: -5.329715251922607
    10. 'for' → logprob: -5.704715251922607

Token 860: ' les' (ID: 1341)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.1019452810287476
    2. ' n' → logprob: -1.2269452810287476
    3. 'n' → logprob: -1.3519452810287476
    4. ' la' → logprob: -3.476945400238037
    5. '#' → logprob: -3.851945400238037
    6. 'on' → logprob: -4.101945400238037
    7. ' il' → logprob: -4.476945400238037
    8. ' ce' → logprob: -4.976945400238037
    9. ' #' → logprob: -5.351945400238037
    10. 'la' → logprob: -5.476945400238037

Token 861: ' ' (ID: 220)
  Prédit: ' lignes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -0.3937314450740814
    2. '#' → logprob: -2.2687313556671143
    3. '5' → logprob: -2.3937313556671143
    4. ' ' → logprob: -2.7687313556671143
    5. 'n' → logprob: -4.268731594085693
    6. '...' → logprob: -4.643731594085693
    7. 'l' → logprob: -5.018731594085693
    8. ' prochaines' → logprob: -5.143731594085693
    9. ' #' → logprob: -5.393731594085693
    10. ' dernières' → logprob: -5.768731594085693

Token 862: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.144911527633667
    2. 'l' → logprob: -1.269911527633667
    3. 'n' → logprob: -1.769911527633667
    4. 'c' → logprob: -2.644911527633667
    5. ' lignes' → logprob: -3.144911527633667
    6. '#' → logprob: -3.269911527633667
    7. '...' → logprob: -4.144911766052246
    8. '.' → logprob: -4.519911766052246
    9. 'rest' → logprob: -4.769911766052246
    10. 'remaining' → logprob: -5.394911766052246

Token 863: ' dernières' (ID: 59307)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.5873892307281494
    2. ' =' → logprob: -1.5873892307281494
    3. '=' → logprob: -2.4623892307281494
    4. '#' → logprob: -3.0873892307281494
    5. ' #' → logprob: -3.2123892307281494
    6. ' lignes' → logprob: -3.7123892307281494
    7. ' +=' → logprob: -4.46238899230957
    8. ' lines' → logprob: -4.58738899230957
    9. ' ' → logprob: -5.33738899230957
    10. '-=' → logprob: -5.96238899230957

Token 864: ' lignes' (ID: 81687)
  Prédit: ' lignes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -0.0510360449552536
    2. ' lines' → logprob: -3.1760361194610596
    3. '=' → logprob: -5.9260358810424805
    4. 'lines' → logprob: -6.4260358810424805
    5. 'rows' → logprob: -7.6760358810424805
    6. ' -=' → logprob: -7.8010358810424805
    7. ' =' → logprob: -7.8010358810424805
    8. '<|end|>' → logprob: -8.05103588104248
    9. 'l' → logprob: -8.30103588104248
    10. ' ligne' → logprob: -8.30103588104248

Token 865: '/' (ID: 14)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07013805210590363
    2. '<|end|>' → logprob: -3.1951379776000977
    3. '=' → logprob: -4.320137977600098
    4. ' =' → logprob: -5.195137977600098
    5. ' #' → logprob: -5.445137977600098
    6. ' are' → logprob: -7.695137977600098
    7. 'n' → logprob: -7.695137977600098
    8. ' and' → logprob: -7.945137977600098
    9. 'continue' → logprob: -7.945137977600098
    10. '   ' → logprob: -8.445137977600098

Token 866: 'colon' (ID: 106148)
  Prédit: 'colon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colon' → logprob: -0.0023026280105113983
    2. ' colon' → logprob: -6.377302646636963
    3. 'col' → logprob: -8.002302169799805
    4. '#' → logprob: -8.502302169799805
    5. 'columns' → logprob: -10.502302169799805
    6. 'cols' → logprob: -10.627302169799805
    7. 'et' → logprob: -12.252302169799805
    8. 'colm' → logprob: -13.002302169799805
    9. '...' → logprob: -14.127302169799805
    10. ' ' → logprob: -14.377302169799805

Token 867: 'nes' (ID: 4382)
  Prédit: 'nes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nes' → logprob: -1.7954958821064793e-05
    2. 'es' → logprob: -12.125018119812012
    3. 'les' → logprob: -12.500018119812012
    4. '```' → logprob: -12.500018119812012
    5. 'n' → logprob: -13.375018119812012
    6. 'nelles' → logprob: -14.000018119812012
    7. 'nées' → logprob: -14.375018119812012
    8. '   ' → logprob: -14.750018119812012
    9. '``' → logprob: -15.250018119812012
    10. '	' → logprob: -15.750018119812012

Token 868: ' sont' (ID: 5242)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 869: ' déjà' (ID: 21229)
  Prédit: 'trait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trait' → logprob: -0.6320720911026001
    2. 'fix' → logprob: -2.0070719718933105
    3. 'g' → logprob: -2.2570719718933105
    4. 'maint' → logprob: -2.3820719718933105
    5. 'dé' → logprob: -2.7570719718933105
    6. ' désormais' → logprob: -4.0070719718933105
    7. 'ré' → logprob: -4.6320719718933105
    8. 'dés' → logprob: -5.1320719718933105
    9. 'fixed' → logprob: -5.3820719718933105
    10. ' maintenant' → logprob: -5.5070719718933105

Token 870: ' affect' (ID: 7902)
  Prédit: 'trait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trait' → logprob: -0.30208155512809753
    2. 'rem' → logprob: -1.67708158493042
    3. 'g' → logprob: -3.05208158493042
    4. 'initial' → logprob: -5.05208158493042
    5. 'fix' → logprob: -5.17708158493042
    6. 'fait' → logprob: -5.92708158493042
    7. 'dé' → logprob: -6.30208158493042
    8. 'prise' → logprob: -6.42708158493042
    9. 'plac' → logprob: -6.80208158493042
    10. 'cré' → logprob: -7.17708158493042

Token 871: 'ées' (ID: 5161)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.7073484659194946
    2. 'ées' → logprob: -0.8323484659194946
    3. 'és' → logprob: -2.707348346710205
    4. 'u' → logprob: -5.957348346710205
    5. 'ée' → logprob: -6.082348346710205
    6. 'ed' → logprob: -9.082348823547363
    7. '=' → logprob: -9.457348823547363
    8. 'ué' → logprob: -9.707348823547363
    9. 'e' → logprob: -10.082348823547363
    10. ']' → logprob: -10.582348823547363

Token 872: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3229871988296509
    2. 'for' → logprob: -1.4479871988296509
    3. 'while' → logprob: -1.6979871988296509
    4. '#' → logprob: -1.6979871988296509
    5. 'a' → logprob: -2.6979870796203613
    6. 'n' → logprob: -3.8229870796203613
    7. '<|end|>' → logprob: -3.8229870796203613
    8. 'if' → logprob: -5.072987079620361
    9. ' 
' → logprob: -5.447987079620361
    10. '  
' → logprob: -6.197987079620361

Token 873: '#' (ID: 2)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4218006432056427
    2. 'for' → logprob: -1.5468006134033203
    3. '#' → logprob: -2.5468006134033203
    4. 'a' → logprob: -4.29680061340332
    5. 'if' → logprob: -4.29680061340332
    6. 'i' → logprob: -4.54680061340332
    7. 'n' → logprob: -5.67180061340332
    8. 'c' → logprob: -6.04680061340332
    9. 'mid' → logprob: -6.67180061340332
    10. 'm' → logprob: -6.67180061340332

Token 874: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.442412793636322
    2. 'while' → logprob: -2.442412853240967
    3. 'alphabet' → logprob: -2.442412853240967
    4. 'letters' → logprob: -3.067412853240967
    5. 'alpha' → logprob: -3.067412853240967
    6. 'import' → logprob: -3.317412853240967
    7. 'from' → logprob: -4.192412853240967
    8. 'c' → logprob: -4.692412853240967
    9. 'offset' → logprob: -5.317412853240967
    10. 'char' → logprob: -5.567412853240967

Token 875: ' va' (ID: 3423)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3645222783088684
    2. ' for' → logprob: -1.4895222187042236
    3. '#' → logprob: -2.9895222187042236
    4. ' #' → logprob: -4.114522457122803
    5. '[' → logprob: -5.739522457122803
    6. ' =' → logprob: -6.114522457122803
    7. '=' → logprob: -6.489522457122803
    8. 'n' → logprob: -6.614522457122803
    9. ']' → logprob: -7.364522457122803
    10. ' now' → logprob: -7.489522457122803

Token 876: ' remplir' (ID: 113625)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12719528377056122
    2. ' for' → logprob: -2.252195358276367
    3. '#' → logprob: -5.127195358276367
    4. 'while' → logprob: -6.377195358276367
    5. ' ' → logprob: -6.877195358276367
    6. '   ' → logprob: -6.877195358276367
    7. '...' → logprob: -7.627195358276367
    8. 'continue' → logprob: -7.627195358276367
    9. 'n' → logprob: -7.752195358276367
    10. ' #' → logprob: -7.752195358276367

Token 877: ' la' (ID: 557)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19330242276191711
    2. 'i' → logprob: -3.3183023929595947
    3. ' for' → logprob: -3.5683023929595947
    4. 'a' → logprob: -3.8183023929595947
    5. 'c' → logprob: -4.068302631378174
    6. 'l' → logprob: -4.318302631378174
    7. 'layers' → logprob: -4.568302631378174
    8. '#' → logprob: -4.693302631378174
    9. 'layer' → logprob: -5.068302631378174
    10. ' i' → logprob: -5.068302631378174

Token 878: ' matr' (ID: 25095)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.48877450823783875
    2. 'while' → logprob: -0.9887745380401611
    3. 'if' → logprob: -5.613774299621582
    4. 'c' → logprob: -5.863774299621582
    5. 'b' → logprob: -6.113774299621582
    6. '#' → logprob: -6.863774299621582
    7. 'center' → logprob: -7.113774299621582
    8. 'rest' → logprob: -7.363774299621582
    9. 'remaining' → logprob: -7.613774299621582
    10. 'a' → logprob: -8.113774299621582

Token 879: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.0037866546772420406
    2. 'i' → logprob: -5.753786563873291
    3. 'ic' → logprob: -7.503786563873291
    4. 'ix' → logprob: -10.12878704071045
    5. '[' → logprob: -12.37878704071045
    6. '#' → logprob: -12.87878704071045
    7. 'e' → logprob: -13.00378704071045
    8. '```' → logprob: -13.50378704071045
    9. '[i' → logprob: -13.62878704071045
    10. 'a' → logprob: -13.75378704071045

Token 880: ' par' (ID: 686)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012554984539747238
    2. 'with' → logprob: -5.262555122375488
    3. 'b' → logprob: -6.137555122375488
    4. ' for' → logprob: -6.512555122375488
    5. 'i' → logprob: -6.762555122375488
    6. 'while' → logprob: -6.762555122375488
    7. 'a' → logprob: -8.637555122375488
    8. 'char' → logprob: -8.637555122375488
    9. '#' → logprob: -8.637555122375488
    10. 'car' → logprob: -8.887555122375488

Token 881: ' blocs' (ID: 182599)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1672847419977188
    2. 'str' → logprob: -3.5422847270965576
    3. 'rings' → logprob: -4.167284965515137
    4. 'car' → logprob: -4.542284965515137
    5. 'des' → logprob: -4.667284965515137
    6. 'une' → logprob: -4.667284965515137
    7. 'layers' → logprob: -4.792284965515137
    8. ' couches' → logprob: -4.792284965515137
    9. 'rang' → logprob: -4.792284965515137
    10. '#' → logprob: -5.292284965515137

Token 882: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3964448869228363
    2. 'while' → logprob: -2.146444797515869
    3. 'i' → logprob: -2.396444797515869
    4. 'block' → logprob: -2.646444797515869
    5. 'char' → logprob: -5.021444797515869
    6. 'x' → logprob: -5.396444797515869
    7. 'b' → logprob: -5.521444797515869
    8. 'size' → logprob: -5.521444797515869
    9. 'c' → logprob: -5.896444797515869
    10. 'blocks' → logprob: -6.021444797515869

Token 883: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.635535717010498
    2. '2' → logprob: -1.260535717010498
    3. '4' → logprob: -2.260535717010498
    4. '3' → logprob: -2.635535717010498
    5. '6' → logprob: -5.135535717010498
    6. 'size' → logprob: -6.510535717010498
    7. 'a' → logprob: -7.260535717010498
    8. '7' → logprob: -7.260535717010498
    9. 'n' → logprob: -7.260535717010498
    10. '```' → logprob: -7.635535717010498

Token 884: '2' (ID: 17)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.7120380401611328
    2. '5' → logprob: -1.0870380401611328
    3. '2' → logprob: -2.212038040161133
    4. '3' → logprob: -2.962038040161133
    5. '6' → logprob: -4.712038040161133
    6. 'size' → logprob: -7.587038040161133
    7. 'n' → logprob: -8.087038040161133
    8. '9' → logprob: -8.337038040161133
    9. '7' → logprob: -8.337038040161133
    10. '```' → logprob: -8.587038040161133

Token 885: 'x' (ID: 87)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7202329039573669
    2. ' ' → logprob: -1.2202329635620117
    3. 'for' → logprob: -2.0952329635620117
    4. '   ' → logprob: -3.7202329635620117
    5. 'x' → logprob: -3.7202329635620117
    6. ' *' → logprob: -4.345232963562012
    7. ' x' → logprob: -4.970232963562012
    8. '*' → logprob: -4.970232963562012
    9. 'n' → logprob: -5.845232963562012
    10. ',' → logprob: -5.845232963562012

Token 886: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.625004768371582
    3. '3' → logprob: -13.500004768371582
    4. '1' → logprob: -15.875004768371582
    5. '...' → logprob: -16.6250057220459
    6. '5' → logprob: -16.6250057220459
    7. '```' → logprob: -17.7500057220459
    8. '4' → logprob: -17.8750057220459
    9. 'n' → logprob: -17.9375057220459
    10. '   ' → logprob: -18.1250057220459

Token 887: ' dans' (ID: 2671)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.017092885449528694
    2. 'i' → logprob: -4.267092704772949
    3. ' for' → logprob: -6.642092704772949
    4. 'while' → logprob: -6.892092704772949
    5. '#' → logprob: -8.51709270477295
    6. 'x' → logprob: -8.89209270477295
    7. 'b' → logprob: -9.39209270477295
    8. 'a' → logprob: -10.14209270477295
    9. '
' → logprob: -10.26709270477295
    10. 'if' → logprob: -10.39209270477295

Token 888: ' la' (ID: 557)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2813931107521057
    2. 'for' → logprob: -1.531393051147461
    3. ' range' → logprob: -4.656393051147461
    4. 'while' → logprob: -4.781393051147461
    5. 'la' → logprob: -5.281393051147461
    6. ' la' → logprob: -5.906393051147461
    7. 're' → logprob: -6.281393051147461
    8. ' for' → logprob: -7.656393051147461
    9. 'a' → logprob: -8.531393051147461
    10. 'le' → logprob: -8.656393051147461

Token 889: ' partie' (ID: 22139)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3575117588043213
    2. 'while' → logprob: -1.2325117588043213
    3. 'range' → logprob: -4.732511520385742
    4. '
' → logprob: -9.982511520385742
    5. 'bou' → logprob: -10.107511520385742
    6. 'rang' → logprob: -10.607511520385742
    7. ' while' → logprob: -10.857511520385742
    8. ' for' → logprob: -11.232511520385742
    9. '```' → logprob: -11.232511520385742
    10. 'else' → logprob: -11.357511520385742

Token 890: ' restante' (ID: 130202)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.8531945943832397
    2. 'for' → logprob: -1.4781945943832397
    3. 'rest' → logprob: -1.6031945943832397
    4. 'sup' → logprob: -2.3531947135925293
    5. ' restante' → logprob: -4.228194713592529
    6. 'super' → logprob: -5.103194713592529
    7. ' supérieure' → logprob: -5.103194713592529
    8. 'n' → logprob: -5.353194713592529
    9. 'range' → logprob: -5.978194713592529
    10. 'remaining' → logprob: -6.478194713592529

Token 891: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04353071376681328
    2. 'while' → logprob: -3.5435307025909424
    3. 'i' → logprob: -4.5435309410095215
    4. '
' → logprob: -6.2935309410095215
    5. 'a' → logprob: -7.5435309410095215
    6. 'x' → logprob: -8.668530464172363
    7. ' for' → logprob: -9.293530464172363
    8. 'y' → logprob: -9.418530464172363
    9. 'b' → logprob: -10.293530464172363
    10. '#' → logprob: -10.418530464172363

Token 892: 'non' (ID: 11741)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4745649993419647
    2. 'while' → logprob: -0.9745650291442871
    3. 'i' → logprob: -7.974565029144287
    4. ' for' → logprob: -9.724564552307129
    5. ' while' → logprob: -9.849564552307129
    6. '#' → logprob: -11.724564552307129
    7. '```' → logprob: -12.224564552307129
    8. 'row' → logprob: -13.099564552307129
    9. '   ' → logprob: -13.099564552307129
    10. ' i' → logprob: -13.224564552307129

Token 893: ' trait' (ID: 15458)
  Prédit: 'vide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vide' → logprob: -0.9124084115028381
    2. 'n' → logprob: -1.2874083518981934
    3. 'mod' → logprob: -2.2874083518981934
    4. 'aff' → logprob: -2.4124083518981934
    5. 'rem' → logprob: -3.2874083518981934
    6. 'vid' → logprob: -3.4124083518981934
    7. 'occup' → logprob: -3.6624083518981934
    8. '```' → logprob: -5.662408351898193
    9. 'v' → logprob: -5.912408351898193
    10. 'compl' → logprob: -6.037408351898193

Token 894: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.5026271343231201
    2. 'ie' → logprob: -1.0026271343231201
    3. 'e' → logprob: -4.002627372741699
    4. 'i' → logprob: -6.002627372741699
    5. 'ee' → logprob: -6.127627372741699
    6. 'ite' → logprob: -6.252627372741699
    7. 'é' → logprob: -6.377627372741699
    8. 'ant' → logprob: -8.1276273727417
    9. 'rée' → logprob: -8.2526273727417
    10. 'enue' → logprob: -8.8776273727417

Token 895: ' ci' (ID: 7405)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6954673528671265
    2. 'for' → logprob: -1.8204673528671265
    3. ',' → logprob: -1.9454673528671265
    4. '.' → logprob: -2.320467472076416
    5. 'n' → logprob: -3.945467472076416
    6. '#' → logprob: -4.320467472076416
    7. '
' → logprob: -4.445467472076416
    8. 's' → logprob: -4.695467472076416
    9. 'while' → logprob: -4.695467472076416
    10. ')' → logprob: -4.820467472076416

Token 896: '-dessus' (ID: 74812)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7136735320091248
    2. 'n' → logprob: -1.7136735916137695
    3. 'rc' → logprob: -2.5886735916137695
    4. 'ble' → logprob: -3.2136735916137695
    5. 'r' → logprob: -3.5886735916137695
    6. 'rée' → logprob: -3.8386735916137695
    7. '-dessus' → logprob: -3.9636735916137695
    8. 'm' → logprob: -3.9636735916137695
    9. 'née' → logprob: -4.2136735916137695
    10. 'p' → logprob: -4.3386735916137695

Token 897: ')
' (ID: 446)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07442168891429901
    2. 'for' → logprob: -2.6994216442108154
    3. 'while' → logprob: -6.3244218826293945
    4. ':
' → logprob: -7.9494218826293945
    5. ':' → logprob: -7.9494218826293945
    6. ',' → logprob: -8.074421882629395
    7. '#' → logprob: -8.074421882629395
    8. ' for' → logprob: -8.324421882629395
    9. '

' → logprob: -8.449421882629395
    10. '.' → logprob: -8.699421882629395

Token 898: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.046486567705869675
    2. 'while' → logprob: -3.1714866161346436
    3. 'i' → logprob: -5.7964863777160645
    4. 'a' → logprob: -9.546486854553223
    5. 'block' → logprob: -9.671486854553223
    6. 'x' → logprob: -9.921486854553223
    7. 'char' → logprob: -9.921486854553223
    8. 'c' → logprob: -10.046486854553223
    9. 'letter' → logprob: -10.421486854553223
    10. 'row' → logprob: -11.296486854553223

Token 899: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.018635177984833717
    2. ' i' → logprob: -4.018635272979736
    3. 'x' → logprob: -8.643634796142578
    4. '_i' → logprob: -8.893634796142578
    5. 'r' → logprob: -10.393634796142578
    6. '	i' → logprob: -10.393634796142578
    7. '```' → logprob: -10.768634796142578
    8. '_' → logprob: -10.893634796142578
    9. 'y' → logprob: -11.018634796142578
    10. 'j' → logprob: -11.268634796142578

Token 900: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02335367351770401
    2. 'in' → logprob: -3.7733535766601562
    3. ' ' → logprob: -9.273353576660156
    4. ',' → logprob: -12.773353576660156
    5. ' i' → logprob: -12.773353576660156
    6. ' 
' → logprob: -13.648353576660156
    7. '	in' → logprob: -13.773353576660156
    8. 'range' → logprob: -13.898353576660156
    9. ' ' → logprob: -14.023353576660156
    10. 'n' → logprob: -14.398353576660156

Token 901: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.7610454708337784e-05
    2. ' range' → logprob: -10.500027656555176
    3. '(range' → logprob: -19.25002670288086
    4. 'r' → logprob: -20.12502670288086
    5. 'rang' → logprob: -21.00002670288086
    6. '0' → logprob: -21.00002670288086
    7. '	range' → logprob: -21.37502670288086
    8. 'ra' → logprob: -21.50002670288086
    9. 'ran' → logprob: -21.62502670288086
    10. ' ' → logprob: -22.62502670288086

Token 902: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6932220458984375
    2. '(n' → logprob: -0.6932220458984375
    3. 'n' → logprob: -9.943222045898438
    4. '0' → logprob: -11.068222045898438
    5. '(
' → logprob: -12.318222045898438
    6. ' (' → logprob: -12.443222045898438
    7. '((' → logprob: -13.193222045898438
    8. ' n' → logprob: -15.443222045898438
    9. 's' → logprob: -16.318222045898438
    10. ' ' → logprob: -16.318222045898438

Token 903: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03370010480284691
    2. 'n' → logprob: -3.4086999893188477
    3. '(' → logprob: -10.783699989318848
    4. '1' → logprob: -11.158699989318848
    5. '(n' → logprob: -11.658699989318848
    6. ' ' → logprob: -12.408699989318848
    7. ' n' → logprob: -12.408699989318848
    8. '2' → logprob: -14.033699989318848
    9. '   ' → logprob: -14.533699989318848
    10. 'a' → logprob: -15.408699989318848

Token 904: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8620328903198242
    2. ' n' → logprob: -1.3620328903198242
    3. ',' → logprob: -1.6120328903198242
    4. '0' → logprob: -2.862032890319824
    5. ' ,' → logprob: -3.237032890319824
    6. ',n' → logprob: -3.862032890319824
    7. ' ' → logprob: -5.487032890319824
    8. '(n' → logprob: -8.362032890319824
    9. '   ' → logprob: -9.112032890319824
    10. ' (' → logprob: -10.362032890319824

Token 905: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.036524842376821e-05
    2. ' n' → logprob: -10.125040054321289
    3. '2' → logprob: -16.50004005432129
    4. '   ' → logprob: -16.62504005432129
    5. '(n' → logprob: -17.12504005432129
    6. ' ' → logprob: -18.50004005432129
    7. '	n' → logprob: -18.75004005432129
    8. ')n' → logprob: -19.00004005432129
    9. '
' → logprob: -19.25004005432129
    10. '0' → logprob: -19.87504005432129

Token 906: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007291650865226984
    2. ' ,' → logprob: -5.007291793823242
    3. '-' → logprob: -8.007291793823242
    4. ' -' → logprob: -8.382291793823242
    5. '   ' → logprob: -12.382291793823242
    6. ' ' → logprob: -12.882291793823242
    7. 'n' → logprob: -13.132291793823242
    8. ',n' → logprob: -13.507291793823242
    9. '//' → logprob: -14.132291793823242
    10. ',
' → logprob: -14.132291793823242

Token 907: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '```' → logprob: -18.25000762939453
    4. ')' → logprob: -18.75000762939453
    5. '۲' → logprob: -18.87500762939453
    6. '   ' → logprob: -18.87500762939453
    7. '２' → logprob: -19.75000762939453
    8. '٢' → logprob: -20.43750762939453
    9. '﻿' → logprob: -20.81250762939453
    10. '...' → logprob: -20.87500762939453

Token 908: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -17.12501335144043
    4. '```' → logprob: -17.18751335144043
    5. ')' → logprob: -17.31251335144043
    6. '۲' → logprob: -18.50001335144043
    7. '２' → logprob: -18.93751335144043
    8. '3' → logprob: -19.12501335144043
    9. '4' → logprob: -19.37501335144043
    10. '22' → logprob: -19.50001335144043

Token 909: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.28193414211273193
    2. '):
' → logprob: -1.406934142112732
    3. '):
' → logprob: -7.6569342613220215
    4. ' ):' → logprob: -8.781933784484863
    5. ',' → logprob: -9.906933784484863
    6. ' ):
' → logprob: -10.156933784484863
    7. ':' → logprob: -10.781933784484863
    8. ')' → logprob: -10.781933784484863
    9. '   ' → logprob: -11.156933784484863
    10. '```' → logprob: -13.406933784484863

Token 910: '     ' (ID: 530)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2751554250717163
    2. 'for' → logprob: -1.5251554250717163
    3. ' for' → logprob: -3.775155544281006
    4. ' ' → logprob: -11.400155067443848
    5. '	for' → logprob: -11.400155067443848
    6. '  ' → logprob: -13.150155067443848
    7. '   ' → logprob: -14.400155067443848
    8. '       ' → logprob: -16.400156021118164
    9. '    
' → logprob: -17.025156021118164
    10. '    ' → logprob: -17.525156021118164

Token 911: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10120972990989685
    2. 'for' → logprob: -2.3512096405029297
    3. ' for' → logprob: -6.97620964050293
    4. '	for' → logprob: -10.10120964050293
    5. ' ' → logprob: -10.72620964050293
    6. '   ' → logprob: -12.97620964050293
    7. '       ' → logprob: -13.85120964050293
    8. '    
' → logprob: -13.85120964050293
    9. '  ' → logprob: -14.60120964050293
    10. '
' → logprob: -14.97620964050293

Token 912: ' De' (ID: 1516)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.77022064034827e-05
    2. ' for' → logprob: -9.250097274780273
    3. '   ' → logprob: -13.750097274780273
    4. ' ' → logprob: -14.625097274780273
    5. '
' → logprob: -18.125097274780273
    6. '	for' → logprob: -18.500097274780273
    7. '  ' → logprob: -18.750097274780273
    8. '```' → logprob: -18.875097274780273
    9. 'f' → logprob: -20.125097274780273
    10. 'j' → logprob: -20.375097274780273

Token 913: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.23294779658317566
    2. ' range' → logprob: -2.482947826385498
    3. 'i' → logprob: -2.732947826385498
    4. 'n' → logprob: -3.357947826385498
    5. '0' → logprob: -4.107947826385498
    6. ' i' → logprob: -5.482947826385498
    7. ' ' → logprob: -6.107947826385498
    8. ' n' → logprob: -7.107947826385498
    9. 'for' → logprob: -7.607947826385498
    10. ' for' → logprob: -9.10794734954834

Token 914: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6157636046409607
    2. '0' → logprob: -0.8657636046409607
    3. 'n' → logprob: -3.6157636642456055
    4. 'i' → logprob: -4.4907636642456055
    5. ' range' → logprob: -8.365763664245605
    6. 'len' → logprob: -8.490763664245605
    7. 'a' → logprob: -9.240763664245605
    8. ' ' → logprob: -9.490763664245605
    9. '2' → logprob: -9.615763664245605
    10. 'r' → logprob: -10.115763664245605

Token 915: ' jusqu' (ID: 21961)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01123185083270073
    2. ' in' → logprob: -5.761231899261475
    3. ' ,' → logprob: -6.011231899261475
    4. ' for' → logprob: -6.511231899261475
    5. '   ' → logprob: -6.636231899261475
    6. 'for' → logprob: -7.261231899261475
    7. ' to' → logprob: -7.511231899261475
    8. ' ' → logprob: -7.636231899261475
    9. ',n' → logprob: -7.761231899261475
    10. ' n' → logprob: -8.386231422424316

Token 916: ''à' (ID: 33688)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.43981078267097473
    2. ''à' → logprob: -1.8148107528686523
    3. ' à' → logprob: -2.0648107528686523
    4. 'a' → logprob: -3.1898107528686523
    5. '’à' → logprob: -3.8148107528686523
    6. 'n' → logprob: -6.814810752868652
    7. '```' → logprob: -7.439810752868652
    8. ' a' → logprob: -8.064810752868652
    9. 'À' → logprob: -8.564810752868652
    10. 'e' → logprob: -8.939810752868652

Token 917: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.1008713702030946e-06
    2. ' n' → logprob: -13.125001907348633
    3. '   ' → logprob: -19.750001907348633
    4. '
' → logprob: -19.750001907348633
    5. '	n' → logprob: -20.000001907348633
    6. 'i' → logprob: -20.625001907348633
    7. 'min' → logprob: -20.750001907348633
    8. ' ' → logprob: -20.750001907348633
    9. ',' → logprob: -20.875001907348633
    10. 'len' → logprob: -20.875001907348633

Token 918: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026195557788014412
    2. '   ' → logprob: -3.901195526123047
    3. ':' → logprob: -5.901195526123047
    4. ' ' → logprob: -7.276195526123047
    5. '
' → logprob: -7.776195526123047
    6. ' in' → logprob: -7.901195526123047
    7. ' ,' → logprob: -8.026195526123047
    8. 'for' → logprob: -8.026195526123047
    9. ' for' → logprob: -8.151195526123047
    10. ',n' → logprob: -8.776195526123047

Token 919: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4306277930736542
    2. '2' → logprob: -1.0556278228759766
    3. ' ' → logprob: -6.430627822875977
    4. ',' → logprob: -8.305627822875977
    5. '```' → logprob: -10.430627822875977
    6. '
' → logprob: -11.555627822875977
    7. '+' → logprob: -12.930627822875977
    8. ')' → logprob: -12.930627822875977
    9. '...' → logprob: -13.305627822875977
    10. '   ' → logprob: -13.305627822875977

Token 920: ' avec' (ID: 3937)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09055432677268982
    2. ':
' → logprob: -2.7155542373657227
    3. 'for' → logprob: -4.090554237365723
    4. ' for' → logprob: -6.215554237365723
    5. ',' → logprob: -7.090554237365723
    6. '   ' → logprob: -7.715554237365723
    7. '
' → logprob: -8.965554237365723
    8. '<|end|>' → logprob: -8.965554237365723
    9. '{' → logprob: -10.965554237365723
    10. '+' → logprob: -11.215554237365723

Token 921: ' un' (ID: 537)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.013394445180892944
    2. ' ' → logprob: -4.388394355773926
    3. 'n' → logprob: -7.513394355773926
    4. ' n' → logprob: -8.263394355773926
    5. 'i' → logprob: -10.013394355773926
    6. ')' → logprob: -11.263394355773926
    7. ' i' → logprob: -11.263394355773926
    8. 'range' → logprob: -12.513394355773926
    9. ' two' → logprob: -13.888394355773926
    10. ' step' → logprob: -13.888394355773926

Token 922: ' pas' (ID: 2173)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.016176657751202583
    2. ' ' → logprob: -4.141176700592041
    3. 'range' → logprob: -9.766176223754883
    4. ' step' → logprob: -10.766176223754883
    5. ' range' → logprob: -11.016176223754883
    6. ' i' → logprob: -11.266176223754883
    7. 'n' → logprob: -11.891176223754883
    8. ')' → logprob: -12.141176223754883
    9. 'step' → logprob: -12.266176223754883
    10. ',' → logprob: -12.391176223754883

Token 923: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.46486738324165344
    2. '2' → logprob: -1.214867353439331
    3. '=' → logprob: -3.089867353439331
    4. 'de' → logprob: -3.589867353439331
    5. ' ' → logprob: -6.58986759185791
    6. ' =' → logprob: -7.71486759185791
    7. ',' → logprob: -11.08986759185791
    8. ' of' → logprob: -11.33986759185791
    9. ' +=' → logprob: -11.33986759185791
    10. '```' → logprob: -11.58986759185791

Token 924: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '```' → logprob: -17.375335693359375
    4. '   ' → logprob: -18.625335693359375
    5. '
' → logprob: -19.000335693359375
    6. '۲' → logprob: -19.625335693359375
    7. ' ' → logprob: -19.750335693359375
    8. '1' → logprob: -19.875335693359375
    9. '  ' → logprob: -20.000335693359375
    10. '２' → logprob: -20.000335693359375

Token 925: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '```' → logprob: -16.625011444091797
    4. '   ' → logprob: -17.500011444091797
    5. '1' → logprob: -18.312511444091797
    6. '
' → logprob: -18.937511444091797
    7. '۲' → logprob: -19.000011444091797
    8. '  ' → logprob: -19.625011444091797
    9. '২' → logprob: -19.875011444091797
    10. '２' → logprob: -19.875011444091797

Token 926: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20749813318252563
    2. 'for' → logprob: -1.7074980735778809
    3. ' for' → logprob: -5.332498073577881
    4. ':' → logprob: -7.332498073577881
    5. ' ' → logprob: -8.457498550415039
    6. ':
' → logprob: -8.957498550415039
    7. '    
' → logprob: -9.457498550415039
    8. '	for' → logprob: -9.832498550415039
    9. '  ' → logprob: -10.082498550415039
    10. '```' → logprob: -10.582498550415039

Token 927: 'on' (ID: 263)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07723439484834671
    2. ' for' → logprob: -3.5772345066070557
    3. '   ' → logprob: -3.8272345066070557
    4. 'n' → logprob: -3.9522345066070557
    5. ')' → logprob: -6.327234268188477
    6. '):' → logprob: -6.827234268188477
    7. 'range' → logprob: -7.452234268188477
    8. '):
' → logprob: -7.702234268188477
    9. '```' → logprob: -7.702234268188477
    10. ' ' → logprob: -8.077234268188477

Token 928: ' avance' (ID: 81376)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5907090306282043
    2. ' range' → logprob: -1.9657089710235596
    3. ' )' → logprob: -2.5907089710235596
    4. 'range' → logprob: -2.8407089710235596
    5. ' in' → logprob: -3.3407089710235596
    6. ' n' → logprob: -3.8407089710235596
    7. ' continue' → logprob: -3.8407089710235596
    8. ' ' → logprob: -3.9657089710235596
    9. 'n' → logprob: -4.215709209442139
    10. ' +=' → logprob: -4.590709209442139

Token 929: ' de' (ID: 334)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.47524434328079224
    2. ' ' → logprob: -1.3502442836761475
    3. ')' → logprob: -2.6002442836761475
    4. ' de' → logprob: -4.475244522094727
    5. ' )' → logprob: -4.600244522094727
    6. ' i' → logprob: -4.600244522094727
    7. 'de' → logprob: -5.100244522094727
    8. 'i' → logprob: -6.600244522094727
    9. ' ,' → logprob: -6.725244522094727
    10. ' n' → logprob: -7.100244522094727

Token 930: ' deux' (ID: 10301)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007124318508431315
    2. ' ' → logprob: -7.2507123947143555
    3. '```' → logprob: -14.125712394714355
    4. ')' → logprob: -14.500712394714355
    5. 'de' → logprob: -14.625712394714355
    6. '
' → logprob: -15.000712394714355
    7. ' deux' → logprob: -15.625712394714355
    8. '   ' → logprob: -16.375713348388672
    9. 'i' → logprob: -16.750713348388672
    10. ' ' → logprob: -16.750713348388672

Token 931: ' lignes' (ID: 81687)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11616488546133041
    2. ' )' → logprob: -2.4911649227142334
    3. '):' → logprob: -4.741164684295654
    4. ' ' → logprob: -5.116164684295654
    5. ',' → logprob: -5.366164684295654
    6. ' ,' → logprob: -5.616164684295654
    7. ' ):' → logprob: -6.366164684295654
    8. '2' → logprob: -7.991164684295654
    9. '):
' → logprob: -7.991164684295654
    10. '<|end|>' → logprob: -8.116165161132812

Token 932: ' et' (ID: 859)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2046234905719757
    2. '):
' → logprob: -1.7046234607696533
    3. ')' → logprob: -6.579623699188232
    4. ':' → logprob: -6.954623699188232
    5. '   ' → logprob: -7.704623699188232
    6. 'for' → logprob: -8.579623222351074
    7. ',' → logprob: -8.829623222351074
    8. '):
' → logprob: -10.954623222351074
    9. ':
' → logprob: -11.079623222351074
    10. '
' → logprob: -11.579623222351074

Token 933: ' deux' (ID: 10301)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011077644303441048
    2. ' ' → logprob: -4.511077880859375
    3. '```' → logprob: -10.761077880859375
    4. ')' → logprob: -12.761077880859375
    5. ' ' → logprob: -13.386077880859375
    6. ' i' → logprob: -14.386077880859375
    7. ' )' → logprob: -14.386077880859375
    8. ' 
' → logprob: -14.636077880859375
    9. 'i' → logprob: -14.698577880859375
    10. '
' → logprob: -14.761077880859375

Token 934: ' colon' (ID: 20947)
  Prédit: 'colon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colon' → logprob: -0.0575510673224926
    2. ' ' → logprob: -4.18255090713501
    3. 'cols' → logprob: -4.18255090713501
    4. '2' → logprob: -4.80755090713501
    5. 'columns' → logprob: -4.93255090713501
    6. 'col' → logprob: -5.43255090713501
    7. ' colon' → logprob: -6.05755090713501
    8. ',' → logprob: -6.55755090713501
    9. ')' → logprob: -7.30755090713501
    10. '```' → logprob: -8.057551383972168

Token 935: 'nes' (ID: 4382)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.04730929061770439
    2. 'nes' → logprob: -3.172309398651123
    3. 'e' → logprob: -6.172309398651123
    4. 'nées' → logprob: -7.297309398651123
    5. '2' → logprob: -7.672309398651123
    6. 'ies' → logprob: -8.547308921813965
    7. ')' → logprob: -8.547308921813965
    8. 'ne' → logprob: -8.547308921813965
    9. '```' → logprob: -8.547308921813965
    10. 'ces' → logprob: -9.047308921813965

Token 936: ' à' (ID: 1221)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2073291689157486
    2. '):
' → logprob: -1.7073291540145874
    3. '   ' → logprob: -5.957329273223877
    4. ':' → logprob: -6.332329273223877
    5. ')' → logprob: -7.082329273223877
    6. ',' → logprob: -7.582329273223877
    7. ' ):' → logprob: -9.957328796386719
    8. 'for' → logprob: -9.957328796386719
    9. '):
' → logprob: -10.707328796386719
    10. ':
' → logprob: -11.082328796386719

Token 937: ' chaque' (ID: 21194)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002465582510922104
    2. ' ' → logprob: -9.00024700164795
    3. 'range' → logprob: -10.25024700164795
    4. 'de' → logprob: -10.50024700164795
    5. '```' → logprob: -11.25024700164795
    6. '   ' → logprob: -11.37524700164795
    7. '
' → logprob: -11.50024700164795
    8. 'i' → logprob: -12.25024700164795
    9. 'pas' → logprob: -12.25024700164795
    10. 'step' → logprob: -12.37524700164795

Token 938: ' it' (ID: 480)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026821410283446312
    2. ' )' → logprob: -4.651821613311768
    3. 'iteration' → logprob: -5.276821613311768
    4. '```' → logprob: -6.026821613311768
    5. '2' → logprob: -6.151821613311768
    6. ' ' → logprob: -6.526821613311768
    7. 'pas' → logprob: -6.526821613311768
    8. 'i' → logprob: -7.401821613311768
    9. '
' → logprob: -7.651821613311768
    10. ' i' → logprob: -8.02682113647461

Token 939: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.5515161156654358
    2. 'er' → logprob: -1.051516056060791
    3. 'ère' → logprob: -2.676516056060791
    4. 'éré' → logprob: -6.426516056060791
    5. 'èr' → logprob: -6.426516056060791
    6. 'e' → logprob: -7.551516056060791
    7. 'érée' → logprob: -7.676516056060791
    8. 'ér' → logprob: -8.42651653289795
    9. 'érations' → logprob: -8.42651653289795
    10. 'éra' → logprob: -8.42651653289795

Token 940: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.562545120716095
    2. '):' → logprob: -1.4375450611114502
    3. '   ' → logprob: -2.06254506111145
    4. ':' → logprob: -2.81254506111145
    5. ':
' → logprob: -5.562545299530029
    6. ')' → logprob: -7.812545299530029
    7. '):
' → logprob: -8.062544822692871
    8. ' ):
' → logprob: -8.562544822692871
    9. ',' → logprob: -8.687544822692871
    10. ' ' → logprob: -8.687544822692871

Token 941: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00016587569552939385
    2. ':' → logprob: -9.500165939331055
    3. 'for' → logprob: -9.875165939331055
    4. ' for' → logprob: -10.750165939331055
    5. '    
' → logprob: -12.375165939331055
    6. ':
' → logprob: -12.625165939331055
    7. ' ' → logprob: -12.875165939331055
    8. '   ' → logprob: -12.875165939331055
    9. '	for' → logprob: -13.250165939331055
    10. '```' → logprob: -13.500165939331055

Token 942: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13113562762737274
    2. '   ' → logprob: -2.1311357021331787
    3. ' for' → logprob: -5.5061354637146
    4. ' ' → logprob: -9.756135940551758
    5. 'a' → logprob: -10.131135940551758
    6. '	for' → logprob: -10.631135940551758
    7. '    
' → logprob: -11.756135940551758
    8. '  ' → logprob: -12.756135940551758
    9. '       ' → logprob: -13.506135940551758
    10. '
' → logprob: -14.381135940551758

Token 943: ' Rem' (ID: 6890)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.274932143744081e-05
    2. '   ' → logprob: -10.500042915344238
    3. 'a' → logprob: -11.500042915344238
    4. 'j' → logprob: -12.625042915344238
    5. ' for' → logprob: -13.500042915344238
    6. ' ' → logprob: -15.875042915344238
    7. 'if' → logprob: -16.125041961669922
    8. 'b' → logprob: -16.500041961669922
    9. '  ' → logprob: -17.375041961669922
    10. '    
' → logprob: -17.500041961669922

Token 944: 'plit' (ID: 4059)
  Prédit: 'pl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.008498627692461014
    2. 'plit' → logprob: -4.883498668670654
    3. '   ' → logprob: -8.133498191833496
    4. 'p' → logprob: -8.383498191833496
    5. 'placer' → logprob: -9.258498191833496
    6. 'plier' → logprob: -9.383498191833496
    7. 'pli' → logprob: -9.758498191833496
    8. 'et' → logprob: -10.633498191833496
    9. 'place' → logprob: -10.758498191833496
    10. 'plies' → logprob: -10.758498191833496

Token 945: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3877035081386566
    2. ' for' → logprob: -1.887703537940979
    3. 'for' → logprob: -2.1377034187316895
    4. 'a' → logprob: -3.6377034187316895
    5. ' a' → logprob: -3.8877034187316895
    6. ' ' → logprob: -5.6377034187316895
    7. '  ' → logprob: -7.1377034187316895
    8. '    ' → logprob: -8.137703895568848
    9. ' j' → logprob: -8.512703895568848
    10. 's' → logprob: -8.887703895568848

Token 946: ' diagon' (ID: 146014)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6201868653297424
    2. 'for' → logprob: -1.3701868057250977
    3. 'i' → logprob: -1.6201868057250977
    4. ' for' → logprob: -5.870186805725098
    5. 'range' → logprob: -6.370186805725098
    6. ' a' → logprob: -6.745186805725098
    7. '0' → logprob: -7.245186805725098
    8. '[i' → logprob: -7.245186805725098
    9. ' i' → logprob: -7.370186805725098
    10. '   ' → logprob: -7.620186805725098

Token 947: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.034238334745168686
    2. 'al' → logprob: -3.409238338470459
    3. 'a' → logprob: -7.909238338470459
    4. 'e' → logprob: -9.1592378616333
    5. 'ales' → logprob: -9.4092378616333
    6. 'o' → logprob: -11.4092378616333
    7. 'als' → logprob: -12.1592378616333
    8. '[' → logprob: -12.1592378616333
    9. '#' → logprob: -12.2842378616333
    10. 'on' → logprob: -13.1592378616333

Token 948: ' et' (ID: 859)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5260022282600403
    2. '   ' → logprob: -0.9010022282600403
    3. 'for' → logprob: -6.151002407073975
    4. ' a' → logprob: -7.526002407073975
    5. ' for' → logprob: -9.526001930236816
    6. ' ' → logprob: -9.776001930236816
    7. '[' → logprob: -10.526001930236816
    8. '  ' → logprob: -10.901001930236816
    9. '       ' → logprob: -11.776001930236816
    10. '[a' → logprob: -12.026001930236816

Token 949: ' la' (ID: 557)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5376283526420593
    2. 'i' → logprob: -1.787628412246704
    3. ' for' → logprob: -2.537628412246704
    4. '   ' → logprob: -3.162628412246704
    5. ' i' → logprob: -3.287628412246704
    6. ' the' → logprob: -3.412628412246704
    7. 'a' → logprob: -3.662628412246704
    8. 'the' → logprob: -4.412628173828125
    9. 'j' → logprob: -4.912628173828125
    10. ' j' → logprob: -5.912628173828125

Token 950: ' case' (ID: 1890)
  Prédit: 'anti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'anti' → logprob: -1.1882858276367188
    2. 'a' → logprob: -1.5632858276367188
    3. 'ant' → logprob: -1.5632858276367188
    4. 'i' → logprob: -2.1882858276367188
    5. 'for' → logprob: -2.4382858276367188
    6. 'ligne' → logprob: -4.813285827636719
    7. 'off' → logprob: -5.063285827636719
    8. 'adj' → logprob: -5.063285827636719
    9. 'col' → logprob: -5.188285827636719
    10. 'di' → logprob: -5.188285827636719

Token 951: ' vo' (ID: 778)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7022570371627808
    2. '[i' → logprob: -1.0772570371627808
    3. 'adj' → logprob: -2.4522571563720703
    4. 'i' → logprob: -3.5772571563720703
    5. '[' → logprob: -3.9522571563720703
    6. '[j' → logprob: -4.57725715637207
    7. '(i' → logprob: -4.95225715637207
    8. 'j' → logprob: -5.57725715637207
    9. 'off' → logprob: -6.95225715637207
    10. ' i' → logprob: -6.95225715637207

Token 952: 'isine' (ID: 24412)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.653836727142334
    2. '[i' → logprob: -1.903836727142334
    3. 'i' → logprob: -2.153836727142334
    4. 'r' → logprob: -2.278836727142334
    5. '#' → logprob: -2.653836727142334
    6. 'x' → logprob: -2.903836727142334
    7. '   ' → logprob: -3.528836727142334
    8. 'isins' → logprob: -3.528836727142334
    9. 'ur' → logprob: -3.778836727142334
    10. 'c' → logprob: -3.778836727142334

Token 953: ' horizont' (ID: 69308)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01007408183068037
    2. 'a' → logprob: -4.635074138641357
    3. 'for' → logprob: -8.3850736618042
    4. ' a' → logprob: -10.1350736618042
    5. '       ' → logprob: -11.2600736618042
    6. ' for' → logprob: -11.3850736618042
    7. ' ' → logprob: -11.8850736618042
    8. '  ' → logprob: -12.2600736618042
    9. '[' → logprob: -12.3850736618042
    10. '	a' → logprob: -13.5100736618042

Token 954: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.00014013137842994183
    2. 't' → logprob: -10.375140190124512
    3. 'ales' → logprob: -10.500140190124512
    4. 'al' → logprob: -11.125140190124512
    5. 'e' → logprob: -11.375140190124512
    6. '   ' → logprob: -11.500140190124512
    7. 'nale' → logprob: -11.500140190124512
    8. 'le' → logprob: -12.000140190124512
    9. '```' → logprob: -12.375140190124512
    10. '#' → logprob: -12.875140190124512

Token 955: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03877832740545273
    2. 'a' → logprob: -3.288778305053711
    3. ' a' → logprob: -7.413778305053711
    4. '       ' → logprob: -10.538778305053711
    5. '	a' → logprob: -10.663778305053711
    6. '[' → logprob: -10.788778305053711
    7. ' for' → logprob: -11.663778305053711
    8. '[a' → logprob: -11.788778305053711
    9. '    
' → logprob: -12.163778305053711
    10. ' ' → logprob: -12.163778305053711

Token 956: ' "' (ID: 392)
  Prédit: '"a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"a' → logprob: -0.7228744029998779
    2. ''a' → logprob: -1.222874402999878
    3. '"' → logprob: -2.472874402999878
    4. 'a' → logprob: -2.597874402999878
    5. '["' → logprob: -3.097874402999878
    6. '['' → logprob: -4.472874641418457
    7. ''' → logprob: -7.222874641418457
    8. '[' → logprob: -7.222874641418457
    9. 'chr' → logprob: -7.347874641418457
    10. '"x' → logprob: -7.597874641418457

Token 957: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.992385983467102
    2. '"a' → logprob: -0.992385983467102
    3. '"' → logprob: -2.2423858642578125
    4. ''a' → logprob: -2.3673858642578125
    5. 'aa' → logprob: -3.6173858642578125
    6. '["' → logprob: -3.8673858642578125
    7. '['' → logprob: -5.2423858642578125
    8. '"x' → logprob: -6.3673858642578125
    9. 'ab' → logprob: -7.4923858642578125
    10. '[' → logprob: -7.6173858642578125

Token 958: '"
' (ID: 1092)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7227132320404053
    2. '"' → logprob: -0.9727132320404053
    3. '"
' → logprob: -2.5977132320404053
    4. '",' → logprob: -2.9727132320404053
    5. 'b' → logprob: -5.097713470458984
    6. '"a' → logprob: -6.472713470458984
    7. '"[' → logprob: -7.472713470458984
    8. '","' → logprob: -7.722713470458984
    9. ' "
' → logprob: -8.597713470458984
    10. 's' → logprob: -8.597713470458984

Token 959: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005268738139420748
    2. 'a' → logprob: -5.255268573760986
    3. ' a' → logprob: -10.630269050598145
    4. '       ' → logprob: -13.130269050598145
    5. '  ' → logprob: -13.505269050598145
    6. '
' → logprob: -13.505269050598145
    7. '    
' → logprob: -13.630269050598145
    8. ' ' → logprob: -13.880269050598145
    9. '   ' → logprob: -13.880269050598145
    10. ' for' → logprob: -14.380269050598145

Token 960: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.06877260655164719
    2. '   ' → logprob: -2.818772554397583
    3. ' a' → logprob: -5.068772792816162
    4. 'for' → logprob: -7.943772792816162
    5. ' ' → logprob: -9.318772315979004
    6. ' for' → logprob: -10.568772315979004
    7. '	a' → logprob: -12.318772315979004
    8. '  ' → logprob: -12.443772315979004
    9. '       ' → logprob: -12.568772315979004
    10. '    
' → logprob: -12.693772315979004

Token 961: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.676981345459353e-06
    2. '   ' → logprob: -13.000005722045898
    3. '[a' → logprob: -13.375005722045898
    4. 'i' → logprob: -13.875005722045898
    5. 'a' → logprob: -14.125005722045898
    6. '[j' → logprob: -16.7500057220459
    7. '[' → logprob: -17.1250057220459
    8. ' [' → logprob: -17.3750057220459
    9. '
' → logprob: -18.5000057220459
    10. '[n' → logprob: -18.8750057220459

Token 962: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.02084747515618801
    2. '[i' → logprob: -3.8958475589752197
    3. ' ][' → logprob: -8.52084732055664
    4. '   ' → logprob: -9.77084732055664
    5. 'a' → logprob: -11.27084732055664
    6. ' ' → logprob: -11.52084732055664
    7. ']' → logprob: -11.77084732055664
    8. '"][' → logprob: -12.39584732055664
    9. 'i' → logprob: -12.77084732055664
    10. '[a' → logprob: -13.14584732055664

Token 963: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00028183520771563053
    2. 'j' → logprob: -8.250282287597656
    3. ' i' → logprob: -11.250282287597656
    4. '   ' → logprob: -12.750282287597656
    5. '[i' → logprob: -13.875282287597656
    6. '	i' → logprob: -14.250282287597656
    7. '    ' → logprob: -14.375282287597656
    8. '  ' → logprob: -14.375282287597656
    9. ']' → logprob: -15.250282287597656
    10. ' ' → logprob: -15.375282287597656

Token 964: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00313660129904747
    2. ']=' → logprob: -6.25313663482666
    3. '],' → logprob: -6.87813663482666
    4. ' ]' → logprob: -9.12813663482666
    5. '=' → logprob: -9.87813663482666
    6. '   ' → logprob: -11.62813663482666
    7. ']="' → logprob: -13.37813663482666
    8. '"]' → logprob: -13.50313663482666
    9. 'i' → logprob: -13.87813663482666
    10. 'a' → logprob: -14.00313663482666

Token 965: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -8.888114098226652e-05
    2. ' a' → logprob: -9.375088691711426
    3. '   ' → logprob: -12.500088691711426
    4. '	a' → logprob: -16.625089645385742
    5. '    ' → logprob: -17.000089645385742
    6. '       ' → logprob: -17.125089645385742
    7. ' ' → logprob: -17.500089645385742
    8. '     ' → logprob: -17.750089645385742
    9. '  ' → logprob: -18.000089645385742
    10. 'i' → logprob: -18.500089645385742

Token 966: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.869017852295656e-06
    2. '][' → logprob: -12.875006675720215
    3. 'i' → logprob: -13.250006675720215
    4. 'a' → logprob: -13.375006675720215
    5. '[a' → logprob: -14.375006675720215
    6. ' [' → logprob: -15.750006675720215
    7. '[' → logprob: -16.12500762939453
    8. '
' → logprob: -16.87500762939453
    9. '[j' → logprob: -17.62500762939453
    10. '   ' → logprob: -17.75000762939453

Token 967: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0019488678080961108
    2. '+' → logprob: -7.001948833465576
    3. '[i' → logprob: -7.626948833465576
    4. ' ][' → logprob: -7.751948833465576
    5. ']' → logprob: -9.376949310302734
    6. '   ' → logprob: -11.501949310302734
    7. ' +' → logprob: -11.751949310302734
    8. '+i' → logprob: -11.751949310302734
    9. '[' → logprob: -13.126949310302734
    10. '"][' → logprob: -13.751949310302734

Token 968: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.7729658540920354e-05
    2. '[i' → logprob: -11.375027656555176
    3. ' i' → logprob: -11.875027656555176
    4. '(i' → logprob: -12.875027656555176
    5. '   ' → logprob: -12.875027656555176
    6. '{i' → logprob: -13.875027656555176
    7. '1' → logprob: -14.000027656555176
    8. '+' → logprob: -14.125027656555176
    9. '	i' → logprob: -14.875027656555176
    10. 'j' → logprob: -15.500027656555176

Token 969: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0022925175726413727
    2. ' +' → logprob: -6.127292633056641
    3. '+i' → logprob: -9.62729263305664
    4. '[i' → logprob: -10.50229263305664
    5. ']' → logprob: -11.62729263305664
    6. '[' → logprob: -13.75229263305664
    7. '+[' → logprob: -13.87729263305664
    8. '   ' → logprob: -14.25229263305664
    9. '+]' → logprob: -14.50229263305664
    10. '][' → logprob: -14.75229263305664

Token 970: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -15.750004768371582
    4. '0' → logprob: -16.437503814697266
    5. ']' → logprob: -16.437503814697266
    6. '```' → logprob: -16.875003814697266
    7. '`' → logprob: -17.125003814697266
    8. '2' → logprob: -17.312503814697266
    9. '-' → logprob: -18.000003814697266
    10. '۱' → logprob: -18.125003814697266

Token 971: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6408443450927734
    2. ']' → logprob: -0.7658443450927734
    3. ' =' → logprob: -5.515844345092773
    4. ']=' → logprob: -6.015844345092773
    5. ',' → logprob: -6.515844345092773
    6. '],' → logprob: -8.390844345092773
    7. '   ' → logprob: -11.265844345092773
    8. ')' → logprob: -12.015844345092773
    9. ' ]' → logprob: -12.140844345092773
    10. ' ' → logprob: -12.265844345092773

Token 972: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06205933168530464
    2. ' =' → logprob: -2.8120594024658203
    3. ',' → logprob: -9.31205940246582
    4. '='' → logprob: -15.06205940246582
    5. ' ,' → logprob: -15.43705940246582
    6. ' ' → logprob: -15.93705940246582
    7. '<|end|>' → logprob: -16.06205940246582
    8. '   ' → logprob: -16.31205940246582
    9. '=a' → logprob: -16.31205940246582
    10. 'a' → logprob: -16.68705940246582

Token 973: ' "' (ID: 392)
  Prédit: '"a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"a' → logprob: -0.11927352845668793
    2. ''a' → logprob: -2.3692734241485596
    3. '"' → logprob: -3.9942734241485596
    4. '("' → logprob: -8.86927318572998
    5. 'a' → logprob: -8.86927318572998
    6. '"x' → logprob: -9.36927318572998
    7. ' "' → logprob: -10.11927318572998
    8. '"h' → logprob: -10.99427318572998
    9. '('' → logprob: -11.24427318572998
    10. '"A' → logprob: -11.61927318572998

Token 974: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07219790667295456
    2. '"a' → logprob: -3.322197914123535
    3. ''a' → logprob: -3.572197914123535
    4. 'aa' → logprob: -5.447197914123535
    5. '"' → logprob: -6.822197914123535
    6. ''' → logprob: -10.322197914123535
    7. ' a' → logprob: -10.572197914123535
    8. 'b' → logprob: -12.197197914123535
    9. ' aa' → logprob: -13.322197914123535
    10. ' "' → logprob: -13.572197914123535

Token 975: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.27384671568870544
    2. 'a' → logprob: -1.6488467454910278
    3. '","' → logprob: -3.1488466262817383
    4. '"' → logprob: -5.648846626281738
    5. 'b' → logprob: -7.398846626281738
    6. '",'' → logprob: -9.398846626281738
    7. ' ",' → logprob: -9.773846626281738
    8. '"a' → logprob: -11.273846626281738
    9. 'r' → logprob: -11.523846626281738
    10. ''",' → logprob: -11.773846626281738

Token 976: ' "' (ID: 392)
  Prédit: '"a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"a' → logprob: -0.5791505575180054
    2. '"' → logprob: -1.0791505575180054
    3. ' "' → logprob: -2.329150676727295
    4. 'a' → logprob: -6.579150676727295
    5. ' a' → logprob: -7.204150676727295
    6. ''a' → logprob: -8.579150199890137
    7. ' ' → logprob: -10.954150199890137
    8. '"A' → logprob: -12.204150199890137
    9. '"h' → logprob: -12.704150199890137
    10. '"s' → logprob: -12.829150199890137

Token 977: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.7848862373502925e-05
    2. 'b' → logprob: -10.625027656555176
    3. '"' → logprob: -13.500027656555176
    4. '"a' → logprob: -13.875027656555176
    5. ' a' → logprob: -14.250027656555176
    6. 'а' → logprob: -15.250027656555176
    7. '	a' → logprob: -16.625028610229492
    8. ''a' → logprob: -16.875028610229492
    9. 'aa' → logprob: -17.500028610229492
    10. 'ab' → logprob: -18.437528610229492

Token 978: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -6.933173426659778e-05
    2. ' "' → logprob: -10.500069618225098
    3. '   ' → logprob: -10.750069618225098
    4. 'a' → logprob: -11.625069618225098
    5. '"
' → logprob: -12.625069618225098
    6. '"a' → logprob: -12.875069618225098
    7. '<|end|>' → logprob: -13.250069618225098
    8. '"#' → logprob: -14.375069618225098
    9. '"user' → logprob: -14.750069618225098
    10. '```' → logprob: -15.125069618225098

Token 979: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016070619225502014
    2. 'a' → logprob: -4.64107084274292
    3. '<|end|>' → logprob: -5.51607084274292
    4. '    
' → logprob: -7.14107084274292
    5. ',' → logprob: -7.76607084274292
    6. ' ' → logprob: -8.016070365905762
    7. ' a' → logprob: -8.391070365905762
    8. '  
' → logprob: -9.141070365905762
    9. '  ' → logprob: -9.641070365905762
    10. '[' → logprob: -9.766070365905762

Token 980: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4312593638896942
    2. '   ' → logprob: -1.1812593936920166
    3. 'i' → logprob: -3.4312593936920166
    4. ' ' → logprob: -5.4312591552734375
    5. '[i' → logprob: -6.3062591552734375
    6. '  
' → logprob: -6.8062591552734375
    7. '    
' → logprob: -7.1812591552734375
    8. ' a' → logprob: -7.1812591552734375
    9. '<|end|>' → logprob: -7.6812591552734375
    10. '[' → logprob: -7.9312591552734375

Token 981: ' Rem' (ID: 6890)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.000662280130200088
    2. '   ' → logprob: -7.375662326812744
    3. ' a' → logprob: -10.375661849975586
    4. 'for' → logprob: -13.375661849975586
    5. '  ' → logprob: -14.125661849975586
    6. 'i' → logprob: -14.250661849975586
    7. ' ' → logprob: -14.875661849975586
    8. '    ' → logprob: -15.875661849975586
    9. '	a' → logprob: -15.875661849975586
    10. '       ' → logprob: -16.000661849975586

Token 982: 'plit' (ID: 4059)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.08789236098527908
    2. 'pl' → logprob: -2.8378922939300537
    3. 'a' → logprob: -4.087892532348633
    4. 'p' → logprob: -6.212892532348633
    5. 'et' → logprob: -6.462892532348633
    6. 'i' → logprob: -6.837892532348633
    7. 'placer' → logprob: -6.837892532348633
    8. 'place' → logprob: -7.212892532348633
    9. '   ' → logprob: -7.462892532348633
    10. '[' → logprob: -7.712892532348633

Token 983: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.17083047330379486
    2. ' a' → logprob: -2.170830488204956
    3. '   ' → logprob: -3.170830488204956
    4. ' the' → logprob: -7.545830249786377
    5. 'the' → logprob: -9.170830726623535
    6. ' ' → logprob: -9.295830726623535
    7. '  ' → logprob: -9.545830726623535
    8. '	a' → logprob: -10.170830726623535
    9. '    ' → logprob: -10.420830726623535
    10. '[a' → logprob: -10.670830726623535

Token 984: ' ligne' (ID: 19583)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6104286909103394
    2. '[i' → logprob: -0.9854286909103394
    3. 'i' → logprob: -2.485428810119629
    4. '
' → logprob: -10.110428810119629
    5. 'b' → logprob: -10.485428810119629
    6. ' i' → logprob: -10.485428810119629
    7. '[a' → logprob: -10.735428810119629
    8. '```' → logprob: -10.735428810119629
    9. '   ' → logprob: -10.860428810119629
    10. ' a' → logprob: -10.860428810119629

Token 985: ' suivante' (ID: 107439)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.006224425043910742
    2. 'i' → logprob: -5.506224632263184
    3. '   ' → logprob: -6.256224632263184
    4. 'a' → logprob: -8.881224632263184
    5. ' i' → logprob: -10.131224632263184
    6. ' [' → logprob: -10.631224632263184
    7. '[a' → logprob: -11.756224632263184
    8. '[' → logprob: -12.131224632263184
    9. ' ' → logprob: -13.006224632263184
    10. '(i' → logprob: -13.506224632263184

Token 986: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3142891824245453
    2. '[i' → logprob: -1.6892892122268677
    3. 'a' → logprob: -2.689289093017578
    4. ' a' → logprob: -4.564289093017578
    5. ',' → logprob: -5.564289093017578
    6. '[a' → logprob: -6.564289093017578
    7. ' i' → logprob: -7.564289093017578
    8. 'i' → logprob: -7.939289093017578
    9. '<|end|>' → logprob: -9.439289093017578
    10. ' ' → logprob: -9.564289093017578

Token 987: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1255960315465927
    2. '[i' → logprob: -2.500596046447754
    3. 'i' → logprob: -3.750596046447754
    4. ' a' → logprob: -5.625596046447754
    5. '"' → logprob: -5.625596046447754
    6. '"a' → logprob: -6.500596046447754
    7. '["' → logprob: -6.875596046447754
    8. 'b' → logprob: -7.125596046447754
    9. ' i' → logprob: -7.500596046447754
    10. '[a' → logprob: -8.125596046447754

Token 988: ' diagon' (ID: 146014)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.21020430326461792
    2. 'i' → logprob: -1.9602043628692627
    3. '[i' → logprob: -3.9602043628692627
    4. 'di' → logprob: -4.960204124450684
    5. 'de' → logprob: -5.460204124450684
    6. 'car' → logprob: -5.460204124450684
    7. 'b' → logprob: -5.585204124450684
    8. 'bloc' → logprob: -6.460204124450684
    9. '"' → logprob: -6.960204124450684
    10. '2' → logprob: -7.085204124450684

Token 989: 'ale' (ID: 1167)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.4911954700946808
    2. '[i' → logprob: -1.6161954402923584
    3. 'i' → logprob: -2.1161954402923584
    4. 'e' → logprob: -3.3661954402923584
    5. 'a' → logprob: -3.8661954402923584
    6. 'ale' → logprob: -4.7411956787109375
    7. '   ' → logprob: -7.1161956787109375
    8. 'née' → logprob: -7.6161956787109375
    9. 'ées' → logprob: -7.9911956787109375
    10. 'lée' → logprob: -8.241195678710938

Token 990: ' et' (ID: 859)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06547585129737854
    2. '   ' → logprob: -2.8154759407043457
    3. ',' → logprob: -6.565475940704346
    4. '[i' → logprob: -6.940475940704346
    5. ' a' → logprob: -7.440475940704346
    6. '```' → logprob: -8.815475463867188
    7. '[' → logprob: -8.940475463867188
    8. '[a' → logprob: -9.565475463867188
    9. 'i' → logprob: -10.315475463867188
    10. ' ' → logprob: -10.440475463867188

Token 991: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10514403879642487
    2. '[i' → logprob: -3.8551440238952637
    3. 'la' → logprob: -3.8551440238952637
    4. ' la' → logprob: -3.9801440238952637
    5. '   ' → logprob: -4.480144023895264
    6. 'l' → logprob: -4.730144023895264
    7. ' a' → logprob: -5.230144023895264
    8. 'i' → logprob: -6.230144023895264
    9. '[a' → logprob: -6.355144023895264
    10. '#' → logprob: -6.730144023895264

Token 992: ' case' (ID: 1890)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.17774498462677
    2. '[i' → logprob: -1.30274498462677
    3. 'case' → logprob: -1.30274498462677
    4. 'col' → logprob: -2.3027448654174805
    5. 'i' → logprob: -4.3027448654174805
    6. 'c' → logprob: -4.8027448654174805
    7. 'cell' → logprob: -5.0527448654174805
    8. 'ligne' → logprob: -5.1777448654174805
    9. 'cases' → logprob: -6.1777448654174805
    10. ' a' → logprob: -6.5527448654174805

Token 993: ' vo' (ID: 778)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000920869642868638
    2. 'i' → logprob: -7.12592077255249
    3. '   ' → logprob: -9.625921249389648
    4. ' i' → logprob: -10.500921249389648
    5. '[' → logprob: -12.000921249389648
    6. ' [' → logprob: -12.125921249389648
    7. 'a' → logprob: -12.500921249389648
    8. '```' → logprob: -12.875921249389648
    9. '(i' → logprob: -13.250921249389648
    10. ' ' → logprob: -13.875921249389648

Token 994: 'isine' (ID: 24412)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.003133155405521393
    2. 'i' → logprob: -6.128133296966553
    3. 'is' → logprob: -7.128133296966553
    4. '[l' → logprob: -9.753132820129395
    5. 'isine' → logprob: -11.378132820129395
    6. 'lee' → logprob: -11.628132820129395
    7. '[' → logprob: -11.753132820129395
    8. '(i' → logprob: -12.003132820129395
    9. 'y' → logprob: -12.253132820129395
    10. 'isins' → logprob: -12.253132820129395

Token 995: ' horizont' (ID: 69308)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00021271906734909862
    2. '```' → logprob: -9.500212669372559
    3. 'horizontal' → logprob: -10.375212669372559
    4. 'i' → logprob: -10.625212669372559
    5. 'h' → logprob: -11.000212669372559
    6. 'a' → logprob: -11.250212669372559
    7. ' ' → logprob: -11.250212669372559
    8. '   ' → logprob: -11.625212669372559
    9. ' [' → logprob: -11.875212669372559
    10. 'adj' → logprob: -12.125212669372559

Token 996: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.0001290454383706674
    2. 'al' → logprob: -10.000128746032715
    3. 't' → logprob: -10.625128746032715
    4. 'ales' → logprob: -11.500128746032715
    5. 'e' → logprob: -11.750128746032715
    6. 'ont' → logprob: -12.125128746032715
    7. 'ante' → logprob: -12.125128746032715
    8. 'le' → logprob: -12.125128746032715
    9. 'cale' → logprob: -12.375128746032715
    10. 'nale' → logprob: -12.875128746032715

Token 997: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7582789659500122
    2. ',' → logprob: -1.0082789659500122
    3. '[i' → logprob: -2.1332788467407227
    4. 'a' → logprob: -3.2582788467407227
    5. 'i' → logprob: -5.758278846740723
    6. ',i' → logprob: -6.258278846740723
    7. '```' → logprob: -7.008278846740723
    8. ' a' → logprob: -7.133278846740723
    9. '[' → logprob: -7.258278846740723
    10. ' i' → logprob: -7.383278846740723

Token 998: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.003542932216078043
    2. ' "' → logprob: -5.753542900085449
    3. 'b' → logprob: -8.50354290008545
    4. ''b' → logprob: -9.25354290008545
    5. ''' → logprob: -11.00354290008545
    6. '"a' → logprob: -11.25354290008545
    7. ' b' → logprob: -11.37854290008545
    8. ' ' → logprob: -11.50354290008545
    9. ' ' → logprob: -12.75354290008545
    10. '"s' → logprob: -13.50354290008545

Token 999: 'b' (ID: 65)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.20185279846191406
    2. 'b' → logprob: -1.701852798461914
    3. ''b' → logprob: -8.076852798461914
    4. '"a' → logprob: -9.451852798461914
    5. 'a' → logprob: -11.576852798461914
    6. ' "' → logprob: -11.826852798461914
    7. '
' → logprob: -12.451852798461914
    8. '"d' → logprob: -12.576852798461914
    9. ' b' → logprob: -12.576852798461914
    10. 'bb' → logprob: -12.951852798461914

Token 1000: '"
' (ID: 1092)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '",' → logprob: -0.00037359268753789365
    2. 'b' → logprob: -8.375373840332031
    3. '"' → logprob: -9.000373840332031
    4. ',' → logprob: -11.750373840332031
    5. ' ",' → logprob: -12.750373840332031
    6. 'a' → logprob: -12.875373840332031
    7. '',' → logprob: -13.125373840332031
    8. '",
' → logprob: -13.500373840332031
    9. '   ' → logprob: -13.625373840332031
    10. 's' → logprob: -15.125373840332031

Token 1001: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.009301366284489632
    2. ' a' → logprob: -5.00930118560791
    3. '   ' → logprob: -6.00930118560791
    4. '```' → logprob: -10.50930118560791
    5. '`' → logprob: -10.63430118560791
    6. 'i' → logprob: -10.88430118560791
    7. ',' → logprob: -11.63430118560791
    8. ' =' → logprob: -12.00930118560791
    9. '<|end|>' → logprob: -12.00930118560791
    10. '	a' → logprob: -12.13430118560791

Token 1002: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.007868047803640366
    2. ' a' → logprob: -4.882867813110352
    3. '   ' → logprob: -8.257867813110352
    4. '	a' → logprob: -13.132867813110352
    5. ' ' → logprob: -14.757867813110352
    6. '    ' → logprob: -15.882867813110352
    7. '  ' → logprob: -16.50786781311035
    8. 'i' → logprob: -17.13286781311035
    9. '    
' → logprob: -17.25786781311035
    10. '(a' → logprob: -17.88286781311035

Token 1003: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1517960956552997e-05
    2. 'i' → logprob: -11.375011444091797
    3. '   ' → logprob: -18.125011444091797
    4. '(i' → logprob: -19.000011444091797
    5. '```' → logprob: -19.250011444091797
    6. ' i' → logprob: -19.375011444091797
    7. '{i' → logprob: -19.750011444091797
    8. '[' → logprob: -20.125011444091797
    9. ' [' → logprob: -21.000011444091797
    10. '[I' → logprob: -21.125011444091797

Token 1004: '+' (ID: 10)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2870312035083771
    2. '][' → logprob: -1.4120311737060547
    3. '+' → logprob: -5.287031173706055
    4. '   ' → logprob: -8.537031173706055
    5. '+i' → logprob: -8.537031173706055
    6. ' [' → logprob: -9.287031173706055
    7. '[' → logprob: -9.537031173706055
    8. ']' → logprob: -9.912031173706055
    9. ' ][' → logprob: -10.412031173706055
    10. ' +' → logprob: -10.537031173706055

Token 1005: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.530025064945221
    2. '1' → logprob: -0.905025064945221
    3. 'i' → logprob: -5.905025005340576
    4. '[i' → logprob: -6.405025005340576
    5. ' ' → logprob: -6.530025005340576
    6. '][' → logprob: -7.405025005340576
    7. '[' → logprob: -8.155025482177734
    8. '   ' → logprob: -9.155025482177734
    9. '  ' → logprob: -11.905025482177734
    10. ']' → logprob: -12.030025482177734

Token 1006: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.4746609032154083
    2. '[i' → logprob: -0.9746608734130859
    3. ' ][' → logprob: -8.474660873413086
    4. '[' → logprob: -8.974660873413086
    5. ']' → logprob: -9.599660873413086
    6. '   ' → logprob: -9.974660873413086
    7. ' [' → logprob: -10.349660873413086
    8. '}[' → logprob: -10.599660873413086
    9. ')[' → logprob: -10.974660873413086
    10. '>[' → logprob: -10.974660873413086

Token 1007: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0012365375878289342
    2. '[i' → logprob: -6.751236438751221
    3. ' i' → logprob: -9.751236915588379
    4. '   ' → logprob: -13.126236915588379
    5. '	i' → logprob: -13.501236915588379
    6. ' ' → logprob: -14.126236915588379
    7. '][' → logprob: -14.126236915588379
    8. 'a' → logprob: -14.376236915588379
    9. '{i' → logprob: -14.501236915588379
    10. '(i' → logprob: -15.001236915588379

Token 1008: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.5818265676498413
    2. ']' → logprob: -0.8318265676498413
    3. '][' → logprob: -5.456826686859131
    4. ',' → logprob: -7.331826686859131
    5. '+' → logprob: -7.581826686859131
    6. ' ],' → logprob: -9.081826210021973
    7. '   ' → logprob: -9.081826210021973
    8. '[' → logprob: -9.831826210021973
    9. '[i' → logprob: -10.081826210021973
    10. ' ]' → logprob: -10.206826210021973

Token 1009: ' a' (ID: 261)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5683682560920715
    2. 'b' → logprob: -0.9433682560920715
    3. '"' → logprob: -3.3183681964874268
    4. 'a' → logprob: -5.818368434906006
    5. ' a' → logprob: -6.068368434906006
    6. ' "' → logprob: -6.193368434906006
    7. '"a' → logprob: -7.693368434906006
    8. ''b' → logprob: -8.443367958068848
    9. '>b' → logprob: -12.193367958068848
    10. ' ' → logprob: -12.693367958068848

Token 1010: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.810037742368877e-05
    2. 'i' → logprob: -10.500038146972656
    3. '[' → logprob: -11.750038146972656
    4. '"' → logprob: -14.000038146972656
    5. ']' → logprob: -14.750038146972656
    6. 'a' → logprob: -14.875038146972656
    7. '][' → logprob: -15.250038146972656
    8. '[a' → logprob: -15.500038146972656
    9. '"[' → logprob: -15.750038146972656
    10. ' i' → logprob: -16.250038146972656

Token 1011: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.245724504580721e-05
    2. '[' → logprob: -9.500092506408691
    3. ' +' → logprob: -12.125092506408691
    4. '+[' → logprob: -12.250092506408691
    5. '+i' → logprob: -12.500092506408691
    6. '[i' → logprob: -13.500092506408691
    7. '][' → logprob: -13.875092506408691
    8. '1' → logprob: -14.750092506408691
    9. '   ' → logprob: -14.750092506408691
    10. 'i' → logprob: -16.250091552734375

Token 1012: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.500005722045898
    3. 'i' → logprob: -13.625005722045898
    4. '+' → logprob: -15.125005722045898
    5. '[' → logprob: -15.875005722045898
    6. 'b' → logprob: -16.2500057220459
    7. '   ' → logprob: -16.7500057220459
    8. '[i' → logprob: -17.6875057220459
    9. '```' → logprob: -18.1250057220459
    10. '১' → logprob: -18.2500057220459

Token 1013: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0704139694571495
    2. '[i' → logprob: -2.6954140663146973
    3. ']' → logprob: -8.945413589477539
    4. ' ][' → logprob: -9.070413589477539
    5. '   ' → logprob: -9.320413589477539
    6. '[' → logprob: -9.570413589477539
    7. '+' → logprob: -11.320413589477539
    8. '"][' → logprob: -11.445413589477539
    9. ' [' → logprob: -11.945413589477539
    10. ' ' → logprob: -11.945413589477539

Token 1014: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00042983482126146555
    2. '[i' → logprob: -7.875429630279541
    3. ' i' → logprob: -10.1254301071167
    4. '   ' → logprob: -12.2504301071167
    5. '	i' → logprob: -13.6254301071167
    6. 'a' → logprob: -13.6254301071167
    7. '{i' → logprob: -14.3754301071167
    8. '`' → logprob: -15.2504301071167
    9. ''i' → logprob: -15.5004301071167
    10. ' ' → logprob: -15.5004301071167

Token 1015: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002204024465754628
    2. '+i' → logprob: -6.877203941345215
    3. '[i' → logprob: -7.377203941345215
    4. '+[' → logprob: -8.127203941345215
    5. ' +' → logprob: -9.002203941345215
    6. '][' → logprob: -9.752203941345215
    7. '[' → logprob: -10.127203941345215
    8. 'i' → logprob: -11.752203941345215
    9. '   ' → logprob: -12.502203941345215
    10. ']+' → logprob: -12.752203941345215

Token 1016: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.37500286102295
    3. '   ' → logprob: -15.37500286102295
    4. '+' → logprob: -15.56250286102295
    5. '```' → logprob: -15.81250286102295
    6. '[' → logprob: -16.250001907348633
    7. 'i' → logprob: -16.250001907348633
    8. '0' → logprob: -16.312501907348633
    9. '{' → logprob: -17.375001907348633
    10. '2' → logprob: -17.375001907348633

Token 1017: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.32226666808128357
    2. ']' → logprob: -1.447266697883606
    3. ' =' → logprob: -3.4472665786743164
    4. ',' → logprob: -4.947266578674316
    5. ']=' → logprob: -6.822266578674316
    6. ' ]' → logprob: -9.572266578674316
    7. ')' → logprob: -9.697266578674316
    8. '}' → logprob: -9.822266578674316
    9. 's' → logprob: -10.447266578674316
    10. '],' → logprob: -11.322266578674316

Token 1018: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0052350712940096855
    2. ' =' → logprob: -5.255235195159912
    3. ',' → logprob: -13.630234718322754
    4. '=
' → logprob: -17.88023567199707
    5. '=

' → logprob: -18.25523567199707
    6. '='' → logprob: -18.75523567199707
    7. ')' → logprob: -19.13023567199707
    8. ' ' → logprob: -19.25523567199707
    9. '   ' → logprob: -19.75523567199707
    10. '="' → logprob: -20.13023567199707

Token 1019: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00020687808864749968
    2. ''b' → logprob: -9.12520694732666
    3. 'b' → logprob: -9.25020694732666
    4. ' "' → logprob: -13.37520694732666
    5. '("' → logprob: -15.75020694732666
    6. '"B' → logprob: -16.500205993652344
    7. '   ' → logprob: -17.625205993652344
    8. '	b' → logprob: -17.625205993652344
    9. ' ' → logprob: -17.750205993652344
    10. '>b' → logprob: -18.125205993652344

Token 1020: 'b' (ID: 65)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10071306675672531
    2. 'b' → logprob: -2.350713014602661
    3. ''b' → logprob: -7.60071325302124
    4. ' "' → logprob: -12.850712776184082
    5. '	b' → logprob: -13.975712776184082
    6. ' b' → logprob: -14.475712776184082
    7. '>b' → logprob: -14.475712776184082
    8. ')b' → logprob: -14.850712776184082
    9. '   ' → logprob: -15.100712776184082
    10. ''' → logprob: -15.850712776184082

Token 1021: '",' (ID: 672)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12230575084686279
    2. '",' → logprob: -2.2473058700561523
    3. 'b' → logprob: -4.747305870056152
    4. ' ,' → logprob: -8.122305870056152
    5. ',b' → logprob: -8.247305870056152
    6. '"' → logprob: -9.372305870056152
    7. ' b' → logprob: -9.747305870056152
    8. '","' → logprob: -10.372305870056152
    9. 'a' → logprob: -11.247305870056152
    10. '',' → logprob: -11.872305870056152

Token 1022: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.003660049056634307
    2. 'b' → logprob: -5.628660202026367
    3. ''b' → logprob: -10.253660202026367
    4. ' "' → logprob: -11.128660202026367
    5. ' b' → logprob: -12.628660202026367
    6. ' ' → logprob: -13.128660202026367
    7. '	b' → logprob: -13.253660202026367
    8. '>b' → logprob: -14.378660202026367
    9. '   ' → logprob: -14.878660202026367
    10. '	' → logprob: -15.128660202026367

Token 1023: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.12765569984912872
    2. '"' → logprob: -2.1276557445526123
    3. ''b' → logprob: -7.252655506134033
    4. '	b' → logprob: -11.252655982971191
    5. '"a' → logprob: -13.127655982971191
    6. 'a' → logprob: -13.752655982971191
    7. ' b' → logprob: -14.127655982971191
    8. ')b' → logprob: -14.752655982971191
    9. '>b' → logprob: -14.752655982971191
    10. '`' → logprob: -15.002655982971191

Token 1024: '"

' (ID: 2678)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1025: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00909938383847475
    2. 'print' → logprob: -5.00909948348999
    3. '   ' → logprob: -6.25909948348999
    4. ' for' → logprob: -8.509099006652832
    5. '#' → logprob: -9.134099006652832
    6. '<|end|>' → logprob: -9.509099006652832
    7. '```' → logprob: -10.759099006652832
    8. 'char' → logprob: -11.134099006652832
    9. 'a' → logprob: -11.759099006652832
    10. '    
' → logprob: -12.134099006652832

Token 1026: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.282920129597187e-05
    2. 'print' → logprob: -11.875012397766113
    3. '#' → logprob: -12.125012397766113
    4. '```' → logprob: -15.750012397766113
    5. ' for' → logprob: -15.875012397766113
    6. 'pour' → logprob: -17.75001335144043
    7. 'result' → logprob: -18.37501335144043
    8. 'if' → logprob: -19.25001335144043
    9. 'a' → logprob: -19.37501335144043
    10. '
' → logprob: -19.62501335144043

Token 1027: ' sé' (ID: 7462)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3885287940502167
    2. '#' → logprob: -1.138528823852539
    3. ' for' → logprob: -7.263528823852539
    4. '
' → logprob: -7.638528823852539
    5. 'print' → logprob: -8.263528823852539
    6. 'n' → logprob: -9.513528823852539
    7. '[' → logprob: -10.638528823852539
    8. ' #' → logprob: -10.638528823852539
    9. '#print' → logprob: -11.138528823852539
    10. '```' → logprob: -11.388528823852539

Token 1028: 'pare' (ID: 6900)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0076262690126895905
    2. '#' → logprob: -5.632626056671143
    3. 'r' → logprob: -6.757626056671143
    4. ' for' → logprob: -7.382626056671143
    5. 'print' → logprob: -7.882626056671143
    6. 'lect' → logprob: -7.882626056671143
    7. 'lection' → logprob: -8.1326265335083
    8. 'par' → logprob: -8.3826265335083
    9. 't' → logprob: -8.7576265335083
    10. 'e' → logprob: -9.0076265335083

Token 1029: ' maintenant' (ID: 35735)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03471651300787926
    2. ' for' → logprob: -3.7847166061401367
    3. '#' → logprob: -5.034716606140137
    4. '
' → logprob: -5.909716606140137
    5. 'print' → logprob: -7.534716606140137
    6. 'les' → logprob: -8.409716606140137
    7. '_' → logprob: -8.534716606140137
    8. 'le' → logprob: -8.659716606140137
    9. 'a' → logprob: -9.034716606140137
    10. 'pour' → logprob: -9.159716606140137

Token 1030: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.5509455800056458
    2. 'for' → logprob: -1.425945520401001
    3. '#' → logprob: -3.175945520401001
    4. ' les' → logprob: -3.175945520401001
    5. ' la' → logprob: -3.675945520401001
    6. 'la' → logprob: -4.05094575881958
    7. 'l' → logprob: -4.17594575881958
    8. 'le' → logprob: -4.17594575881958
    9. ' for' → logprob: -4.55094575881958
    10. 'par' → logprob: -5.92594575881958

Token 1031: ' cas' (ID: 2108)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09609728306531906
    2. 'l' → logprob: -3.096097230911255
    3. '#' → logprob: -3.346097230911255
    4. 'ligne' → logprob: -5.221097469329834
    5. 'lines' → logprob: -6.096097469329834
    6. ' lignes' → logprob: -6.471097469329834
    7. ' for' → logprob: -7.846097469329834
    8. '```' → logprob: -7.846097469329834
    9. 'rows' → logprob: -8.846096992492676
    10. 'n' → logprob: -8.971096992492676

Token 1032: ' selon' (ID: 27571)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7020996809005737
    2. ' if' → logprob: -2.2020998001098633
    3. ' where' → logprob: -2.4520998001098633
    4. 'où' → logprob: -2.8270998001098633
    5. 'en' → logprob: -2.9520998001098633
    6. ' en' → logprob: -3.2020998001098633
    7. 'for' → logprob: -3.4520998001098633
    8. ' où' → logprob: -3.7020998001098633
    9. 'where' → logprob: -3.7020998001098633
    10. ' suivant' → logprob: -4.327099800109863

Token 1033: ' un' (ID: 537)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.4537180960178375
    2. ' la' → logprob: -2.2037181854248047
    3. 'le' → logprob: -2.3287181854248047
    4. 'n' → logprob: -2.7037181854248047
    5. 'l' → logprob: -3.0787181854248047
    6. 'leur' → logprob: -4.578718185424805
    7. 'les' → logprob: -4.703718185424805
    8. 'que' → logprob: -5.453718185424805
    9. ' le' → logprob: -5.578718185424805
    10. 'len' → logprob: -5.578718185424805

Token 1034: ' motif' (ID: 72753)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.3645926713943481
    2. 'car' → logprob: -1.7395926713943481
    3. 'n' → logprob: -2.1145925521850586
    4. 'if' → logprob: -2.6145925521850586
    5. '#' → logprob: -2.8645925521850586
    6. 'elif' → logprob: -2.9895925521850586
    7. '=' → logprob: -3.2395925521850586
    8. 'range' → logprob: -3.2395925521850586
    9. 'for' → logprob: -3.8645925521850586
    10. 'es' → logprob: -3.9895925521850586

Token 1035: ' de' (ID: 334)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05385046824812889
    2. 'for' → logprob: -3.5538504123687744
    3. 'n' → logprob: -5.1788506507873535
    4. '<|end|>' → logprob: -5.1788506507873535
    5. '#' → logprob: -5.5538506507873535
    6. ' if' → logprob: -5.5538506507873535
    7. ':' → logprob: -6.3038506507873535
    8. '```' → logprob: -6.8038506507873535
    9. ' for' → logprob: -7.4288506507873535
    10. '
' → logprob: -8.303850173950195

Token 1036: ' par' (ID: 686)
  Prédit: 'lett'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lett' → logprob: -0.754749596118927
    2. 'car' → logprob: -2.0047495365142822
    3. 'de' → logprob: -2.5047495365142822
    4. 'l' → logprob: -3.3797495365142822
    5. 'mot' → logprob: -3.5047495365142822
    6. '2' → logprob: -3.6297495365142822
    7. 'n' → logprob: -3.7547495365142822
    8. 'ligne' → logprob: -3.8797495365142822
    9. 'i' → logprob: -4.004749774932861
    10. 'di' → logprob: -4.754749774932861

Token 1037: 'ité' (ID: 3761)
  Prédit: 'ité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.04485612362623215
    2. 'it' → logprob: -3.419856071472168
    3. 'i' → logprob: -4.919856071472168
    4. 'ite' → logprob: -6.669856071472168
    5. 'ités' → logprob: -6.669856071472168
    6. 'ent' → logprob: -7.669856071472168
    7. 'e' → logprob: -8.544856071472168
    8. '```' → logprob: -8.919856071472168
    9. 'ity' → logprob: -9.169856071472168
    10. 't' → logprob: -9.169856071472168

Token 1038: ' de' (ID: 334)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02732740342617035
    2. '
' → logprob: -4.027327537536621
    3. '<|end|>' → logprob: -5.152327537536621
    4. ' if' → logprob: -6.152327537536621
    5. 'n' → logprob: -8.152327537536621
    6. 'for' → logprob: -8.277327537536621
    7. ':' → logprob: -8.902327537536621
    8. '#' → logprob: -9.027327537536621
    9. '```' → logprob: -9.027327537536621
    10. '<|end|>' → logprob: -9.527327537536621

Token 1039: ' n' (ID: 297)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.27024322748184204
    2. 'n' → logprob: -2.1452431678771973
    3. ' i' → logprob: -3.5202431678771973
    4. 'l' → logprob: -3.8952431678771973
    5. 'car' → logprob: -4.270243167877197
    6. 'ligne' → logprob: -4.520243167877197
    7. 'lett' → logprob: -4.895243167877197
    8. '(n' → logprob: -5.145243167877197
    9. ' n' → logprob: -5.145243167877197
    10. 'range' → logprob: -5.645243167877197

Token 1040: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6451965570449829
    2. 'if' → logprob: -0.7701965570449829
    3. ' if' → logprob: -5.145196437835693
    4. '<|end|>' → logprob: -5.395196437835693
    5. '

' → logprob: -7.020196437835693
    6. ':' → logprob: -7.395196437835693
    7. '```' → logprob: -9.020196914672852
    8. '#' → logprob: -9.020196914672852
    9. 'n' → logprob: -9.770196914672852
    10. '
' → logprob: -9.895196914672852

Token 1041: 'div' (ID: 862)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.043842583894729614
    2. ' if' → logprob: -3.7938425540924072
    3. '#' → logprob: -4.043842792510986
    4. 'n' → logprob: -7.418842792510986
    5. 'for' → logprob: -7.668842792510986
    6. 'si' → logprob: -7.793842792510986
    7. ' si' → logprob: -8.293842315673828
    8. ' #' → logprob: -8.293842315673828
    9. '```' → logprob: -8.418842315673828
    10. 'import' → logprob: -9.293842315673828

Token 1042: 'isible' (ID: 181386)
  Prédit: 'ité'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.02524726465344429
    2. 'i' → logprob: -4.400247097015381
    3. 't' → logprob: -5.650247097015381
    4. 'a' → logprob: -5.900247097015381
    5. 'e' → logprob: -6.150247097015381
    6. 'ités' → logprob: -6.900247097015381
    7. 'ite' → logprob: -6.900247097015381
    8. 'it' → logprob: -7.650247097015381
    9. 'té' → logprob: -8.025247573852539
    10. 'itié' → logprob: -8.025247573852539

Token 1043: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.6623092293739319
    2. ' par' → logprob: -1.162309169769287
    3. ' ou' → logprob: -1.787309169769287
    4. 'ou' → logprob: -5.662309169769287
    5. ' ' → logprob: -8.412309646606445
    6. '_par' → logprob: -9.037309646606445
    7. ' or' → logprob: -9.037309646606445
    8. '(par' → logprob: -9.537309646606445
    9. ')' → logprob: -10.287309646606445
    10. '```' → logprob: -10.537309646606445

Token 1044: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0359594002366066
    2. ' ' → logprob: -3.535959482192993
    3. '4' → logprob: -5.160959243774414
    4. '3' → logprob: -7.785959243774414
    5. '6' → logprob: -11.660959243774414
    6. ' deux' → logprob: -12.410959243774414
    7. ' ' → logprob: -12.410959243774414
    8. 'de' → logprob: -12.785959243774414
    9. '1' → logprob: -12.785959243774414
    10. ')' → logprob: -13.160959243774414

Token 1045: '4' (ID: 19)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.015027916990220547
    2. '4' → logprob: -4.64002799987793
    3. '3' → logprob: -5.26502799987793
    4. '6' → logprob: -10.89002799987793
    5. '5' → logprob: -11.01502799987793
    6. ' ' → logprob: -11.26502799987793
    7. ')' → logprob: -11.64002799987793
    8. '```' → logprob: -11.64002799987793
    9. '1' → logprob: -12.14002799987793
    10. '10' → logprob: -12.26502799987793

Token 1046: ' ou' (ID: 2031)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.027531994506716728
    2. ')' → logprob: -4.15253210067749
    3. ' if' → logprob: -5.27753210067749
    4. ':' → logprob: -5.40253210067749
    5. '
' → logprob: -7.27753210067749
    6. 'for' → logprob: -8.027531623840332
    7. ',' → logprob: -8.402531623840332
    8. ')
' → logprob: -8.652531623840332
    9. '```' → logprob: -9.527531623840332
    10. '<|end|>' → logprob: -9.652531623840332

Token 1047: ' non' (ID: 2893)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.23254691064357758
    2. 'not' → logprob: -1.6075469255447388
    3. ' pas' → logprob: -5.857546806335449
    4. '#' → logprob: -7.107546806335449
    5. '2' → logprob: -7.107546806335449
    6. ' non' → logprob: -7.357546806335449
    7. 'non' → logprob: -7.607546806335449
    8. ' ' → logprob: -7.982546806335449
    9. 'n' → logprob: -8.23254680633545
    10. '4' → logprob: -8.35754680633545

Token 1048: ')
' (ID: 446)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0005815077456645668
    2. ' if' → logprob: -8.250581741333008
    3. '
' → logprob: -8.750581741333008
    4. ':' → logprob: -8.875581741333008
    5. 'n' → logprob: -12.250581741333008
    6. '#' → logprob: -12.750581741333008
    7. '.' → logprob: -12.750581741333008
    8. ':
' → logprob: -12.875581741333008
    9. ',' → logprob: -13.375581741333008
    10. '<|end|>' → logprob: -13.500581741333008

Token 1049: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.0339031834737398e-05
    2. '```' → logprob: -11.750020027160645
    3. '
' → logprob: -12.000020027160645
    4. 'for' → logprob: -12.500020027160645
    5. ' if' → logprob: -13.875020027160645
    6. 'i' → logprob: -14.125020027160645
    7. '#' → logprob: -15.625020027160645
    8. 'n' → logprob: -15.875020027160645
    9. 'elif' → logprob: -16.25002098083496
    10. '    
' → logprob: -16.37502098083496

Token 1050: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1442192643880844
    2. 'n' → logprob: -2.019219160079956
    3. '(n' → logprob: -7.019219398498535
    4. ' (' → logprob: -7.394219398498535
    5. ' ' → logprob: -11.394219398498535
    6. '(' → logprob: -11.519219398498535
    7. '	n' → logprob: -12.144219398498535
    8. '   ' → logprob: -13.269219398498535
    9. ' ' → logprob: -13.519219398498535
    10. '_n' → logprob: -13.769219398498535

Token 1051: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.17987160384655
    2. '%' → logprob: -1.8048715591430664
    3. ' ' → logprob: -9.179871559143066
    4. ' ' → logprob: -11.804871559143066
    5. ' %=' → logprob: -11.804871559143066
    6. ' ==' → logprob: -13.429871559143066
    7. '   ' → logprob: -13.679871559143066
    8. ' <=' → logprob: -13.929871559143066
    9. '<|end|>' → logprob: -14.179871559143066
    10. '%=' → logprob: -14.304871559143066

Token 1052: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -9.85366350505501e-05
    2. ' ' → logprob: -9.25009822845459
    3. '2' → logprob: -13.25009822845459
    4. '```' → logprob: -14.87509822845459
    5. '==' → logprob: -16.250099182128906
    6. '   ' → logprob: -16.375099182128906
    7. '٤' → logprob: -17.812599182128906
    8. '{' → logprob: -17.875099182128906
    9. '' → logprob: -18.062599182128906
    10. '8' → logprob: -18.250099182128906

Token 1053: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -2.963691804325208e-05
    2. '2' → logprob: -10.500029563903809
    3. ' ' → logprob: -13.250029563903809
    4. '```' → logprob: -16.000030517578125
    5. '   ' → logprob: -16.625030517578125
    6. '{' → logprob: -17.000030517578125
    7. '==' → logprob: -17.500030517578125
    8. '' → logprob: -17.625030517578125
    9. '
' → logprob: -17.937530517578125
    10. '٤' → logprob: -18.312530517578125

Token 1054: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00631210021674633
    2. ' ==' → logprob: -5.256311893463135
    3. ':' → logprob: -6.881311893463135
    4. '!=' → logprob: -10.006312370300293
    5. '=' → logprob: -13.631312370300293
    6. '==
' → logprob: -13.631312370300293
    7. '()==' → logprob: -13.756312370300293
    8. ' !=' → logprob: -14.506312370300293
    9. '```' → logprob: -15.131312370300293
    10. '===' → logprob: -15.381312370300293

Token 1055: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004958236124366522
    2. '2' → logprob: -5.379958152770996
    3. ' ' → logprob: -8.004958152770996
    4. '=' → logprob: -12.754958152770996
    5. ':' → logprob: -14.754958152770996
    6. '   ' → logprob: -15.004958152770996
    7. '1' → logprob: -15.379958152770996
    8. '==' → logprob: -16.317459106445312
    9. '  ' → logprob: -16.504959106445312
    10. '4' → logprob: -17.129959106445312

Token 1056: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006783455144613981
    2. '2' → logprob: -5.006783485412598
    3. ' ' → logprob: -9.881783485412598
    4. '=' → logprob: -12.006783485412598
    5. ':' → logprob: -12.256783485412598
    6. '1' → logprob: -12.506783485412598
    7. '==' → logprob: -13.631783485412598
    8. '   ' → logprob: -15.569283485412598
    9. '4' → logprob: -15.944283485412598
    10. '3' → logprob: -16.13178253173828

Token 1057: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014170682057738304
    2. ':
' → logprob: -4.2641706466674805
    3. '   ' → logprob: -12.88917064666748
    4. ':
' → logprob: -13.26417064666748
    5. ' :' → logprob: -13.63917064666748
    6. ':

' → logprob: -13.88917064666748
    7. '=' → logprob: -15.26417064666748
    8. ' :
' → logprob: -16.014171600341797
    9. '):
' → logprob: -16.639171600341797
    10. ':</' → logprob: -16.889171600341797

Token 1058: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013638949021697044
    2. ':' → logprob: -4.388638973236084
    3. ':
' → logprob: -6.888638973236084
    4. '    
' → logprob: -10.013638496398926
    5. '
' → logprob: -10.763638496398926
    6. 'for' → logprob: -11.763638496398926
    7. ' for' → logprob: -11.888638496398926
    8. '       ' → logprob: -11.888638496398926
    9. '#' → logprob: -12.388638496398926
    10. '	for' → logprob: -12.763638496398926

Token 1059: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13663582503795624
    2. ':' → logprob: -2.1366357803344727
    3. ':
' → logprob: -4.886635780334473
    4. 'for' → logprob: -6.261635780334473
    5. ' for' → logprob: -9.261635780334473
    6. '#' → logprob: -10.761635780334473
    7. '    
' → logprob: -10.886635780334473
    8. 'a' → logprob: -11.886635780334473
    9. '	for' → logprob: -12.011635780334473
    10. '       ' → logprob: -12.261635780334473

Token 1060: ' Si' (ID: 7832)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1062911748886108
    2. 'for' → logprob: -1.3562911748886108
    3. '#' → logprob: -1.8562911748886108
    4. 'lett' → logprob: -2.9812912940979004
    5. 'letter' → logprob: -3.2312912940979004
    6. 'car' → logprob: -3.3562912940979004
    7. 'c' → logprob: -3.6062912940979004
    8. 'char' → logprob: -3.8562912940979004
    9. 'ch' → logprob: -4.3562912940979
    10. 'letters' → logprob: -4.8562912940979

Token 1061: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.41157063841819763
    2. 'n' → logprob: -1.16157066822052
    3. 'True' → logprob: -4.4115705490112305
    4. ' True' → logprob: -4.5365705490112305
    5. '(n' → logprob: -7.2865705490112305
    6. ' (' → logprob: -8.78657054901123
    7. '```' → logprob: -8.91157054901123
    8. 'False' → logprob: -9.78657054901123
    9. ' ' → logprob: -9.78657054901123
    10. ' la' → logprob: -9.91157054901123

Token 1062: ' est' (ID: 893)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.13205987215042114
    2. '%' → logprob: -2.2570598125457764
    3. ' ==' → logprob: -4.1320600509643555
    4. ' ' → logprob: -6.5070600509643555
    5. '==' → logprob: -6.6320600509643555
    6. ' %=' → logprob: -10.007060050964355
    7. '   ' → logprob: -10.132060050964355
    8. '=' → logprob: -10.257060050964355
    9. ' ' → logprob: -11.257060050964355
    10. '  ' → logprob: -11.507060050964355

Token 1063: ' divisible' (ID: 167813)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.6976535320281982
    2. ' divisible' → logprob: -0.6976535320281982
    3. '0' → logprob: -5.572653770446777
    4. 'multiple' → logprob: -7.947653770446777
    5. ' div' → logprob: -9.197653770446777
    6. ' multiple' → logprob: -9.822653770446777
    7. '4' → logprob: -10.072653770446777
    8. ' ' → logprob: -10.072653770446777
    9. '   ' → logprob: -10.697653770446777
    10. ' divis' → logprob: -10.947653770446777

Token 1064: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.3490712344646454
    2. ' par' → logprob: -1.3490712642669678
    3. '4' → logprob: -3.4740712642669678
    4. '   ' → logprob: -6.349071025848389
    5. ' ' → logprob: -6.724071025848389
    6. '_par' → logprob: -8.349071502685547
    7. '(' → logprob: -8.349071502685547
    8. 'by' → logprob: -8.974071502685547
    9. '```' → logprob: -9.099071502685547
    10. '#' → logprob: -9.224071502685547

Token 1065: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -4.584861744660884e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.500045776367188
    4. '2' → logprob: -16.500045776367188
    5. '  ' → logprob: -16.875045776367188
    6. '```' → logprob: -17.125045776367188
    7. '' → logprob: -17.625045776367188
    8. '٤' → logprob: -18.250045776367188
    9. '
' → logprob: -18.625045776367188
    10. '۴' → logprob: -19.500045776367188

Token 1066: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -17.5000057220459
    4. '```' → logprob: -17.8750057220459
    5. '' → logprob: -18.0000057220459
    6. '٤' → logprob: -18.6250057220459
    7. '  ' → logprob: -19.1250057220459
    8. '2' → logprob: -19.2500057220459
    9. '۴' → logprob: -20.2500057220459
    10. '４' → logprob: -20.6250057220459

Token 1067: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5339763164520264
    2. '   ' → logprob: -0.9089763164520264
    3. ':
' → logprob: -4.5339765548706055
    4. ' :' → logprob: -11.658976554870605
    5. 'for' → logprob: -11.908976554870605
    6. '       ' → logprob: -12.283976554870605
    7. ',' → logprob: -12.283976554870605
    8. '    
' → logprob: -12.533976554870605
    9. '```' → logprob: -12.533976554870605
    10. '):' → logprob: -12.908976554870605

Token 1068: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00021212305000517517
    2. 'for' → logprob: -9.000211715698242
    3. ' for' → logprob: -10.125211715698242
    4. ':' → logprob: -10.250211715698242
    5. '
' → logprob: -12.625211715698242
    6. '    
' → logprob: -12.625211715698242
    7. '   ' → logprob: -13.125211715698242
    8. ':
' → logprob: -13.375211715698242
    9. '```' → logprob: -13.875211715698242
    10. '#' → logprob: -14.375211715698242

Token 1069: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06597326695919037
    2. '   ' → logprob: -3.0659732818603516
    3. 'offset' → logprob: -5.690973281860352
    4. 'car' → logprob: -6.065973281860352
    5. 'letter' → logprob: -6.065973281860352
    6. 'c' → logprob: -6.190973281860352
    7. 'char' → logprob: -6.565973281860352
    8. 'lett' → logprob: -6.815973281860352
    9. 'block' → logprob: -7.315973281860352
    10. 'letters' → logprob: -7.440973281860352

Token 1070: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0696757361292839
    2. ' i' → logprob: -3.1946756839752197
    3. 'j' → logprob: -3.9446756839752197
    4. 'x' → logprob: -5.819675922393799
    5. ' j' → logprob: -6.319675922393799
    6. 'k' → logprob: -7.444675922393799
    7. 'row' → logprob: -8.44467544555664
    8. 'ligne' → logprob: -8.56967544555664
    9. 'y' → logprob: -8.94467544555664
    10. '   ' → logprob: -8.94467544555664

Token 1071: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07900281250476837
    2. 'in' → logprob: -2.579002857208252
    3. '   ' → logprob: -9.829002380371094
    4. ' ' → logprob: -11.329002380371094
    5. 'import' → logprob: -11.954002380371094
    6. '```' → logprob: -12.329002380371094
    7. 'range' → logprob: -12.454002380371094
    8. 'd' → logprob: -12.579002380371094
    9. '0' → logprob: -12.704002380371094
    10. '	in' → logprob: -12.829002380371094

Token 1072: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011049000546336174
    2. ' range' → logprob: -4.511048793792725
    3. ' ' → logprob: -14.386049270629883
    4. '   ' → logprob: -14.761049270629883
    5. '  ' → logprob: -16.386049270629883
    6. '	range' → logprob: -17.011049270629883
    7. '    ' → logprob: -17.511049270629883
    8. 'a' → logprob: -17.761049270629883
    9. '(range' → logprob: -17.761049270629883
    10. 'r' → logprob: -17.886049270629883

Token 1073: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006214474327862263
    2. '(n' → logprob: -5.131214618682861
    3. '0' → logprob: -8.256214141845703
    4. '(i' → logprob: -11.006214141845703
    5. 'n' → logprob: -12.756214141845703
    6. '(a' → logprob: -13.256214141845703
    7. ' (' → logprob: -13.381214141845703
    8. '(
' → logprob: -14.006214141845703
    9. '(len' → logprob: -14.131214141845703
    10. '   ' → logprob: -14.381214141845703

Token 1074: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003150980919599533
    2. 'n' → logprob: -5.878150939941406
    3. '1' → logprob: -8.128150939941406
    4. '2' → logprob: -10.628150939941406
    5. ' ' → logprob: -11.003150939941406
    6. '   ' → logprob: -12.128150939941406
    7. '4' → logprob: -14.128150939941406
    8. 'len' → logprob: -14.503150939941406
    9. 'i' → logprob: -14.565650939941406
    10. ' n' → logprob: -14.565650939941406

Token 1075: ',' (ID: 11)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16003195941448212
    2. ',' → logprob: -2.035032033920288
    3. 'n' → logprob: -4.160031795501709
    4. ' ' → logprob: -7.285031795501709
    5. '(' → logprob: -7.910031795501709
    6. ',n' → logprob: -8.660032272338867
    7. ' ,' → logprob: -8.785032272338867
    8. '   ' → logprob: -9.160032272338867
    9. '(n' → logprob: -10.035032272338867
    10. ' n' → logprob: -10.285032272338867

Token 1076: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0003360582049936056
    2. ' n' → logprob: -8.000335693359375
    3. 'len' → logprob: -15.375335693359375
    4. '   ' → logprob: -16.000335693359375
    5. '	n' → logprob: -16.375335693359375
    6. ' ' → logprob: -16.625335693359375
    7. 'a' → logprob: -16.875335693359375
    8. ')n' → logprob: -18.125335693359375
    9. 'int' → logprob: -18.875335693359375
    10. '(n' → logprob: -19.250335693359375

Token 1077: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003210865193977952
    2. '   ' → logprob: -6.37821102142334
    3. ' ,' → logprob: -6.50321102142334
    4. ' ' → logprob: -12.75321102142334
    5. '  ' → logprob: -14.00321102142334
    6. 'n' → logprob: -14.12821102142334
    7. '       ' → logprob: -14.12821102142334
    8. '    ' → logprob: -14.50321102142334
    9. ',
' → logprob: -14.50321102142334
    10. '+' → logprob: -14.62821102142334

Token 1078: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11022082716226578
    2. '4' → logprob: -2.3602209091186523
    3. ' ' → logprob: -4.610220909118652
    4. '   ' → logprob: -11.360220909118652
    5. '8' → logprob: -14.110220909118652
    6. '  ' → logprob: -14.672720909118652
    7. '```' → logprob: -14.797720909118652
    8. '	' → logprob: -15.047720909118652
    9. '1' → logprob: -15.235220909118652
    10. ')' → logprob: -16.047719955444336

Token 1079: '2' (ID: 17)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.5759429931640625
    2. '2' → logprob: -0.8259429931640625
    3. '8' → logprob: -13.950942993164062
    4. ' ' → logprob: -14.013442993164062
    5. '1' → logprob: -14.575942993164062
    6. '```' → logprob: -15.075942993164062
    7. '

' → logprob: -16.200942993164062
    8. '   ' → logprob: -16.388442993164062
    9. '3' → logprob: -16.513442993164062
    10. '6' → logprob: -16.513442993164062

Token 1080: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08846985548734665
    2. '   ' → logprob: -3.3384697437286377
    3. '):
' → logprob: -3.4634697437286377
    4. ':' → logprob: -4.213469982147217
    5. ',' → logprob: -6.838469982147217
    6. ')' → logprob: -6.963469982147217
    7. '       ' → logprob: -7.088469982147217
    8. ':
' → logprob: -9.713469505310059
    9. '):
' → logprob: -9.713469505310059
    10. ' ):' → logprob: -11.088469505310059

Token 1081: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6943012475967407
    2. '       ' → logprob: -0.6943012475967407
    3. 'a' → logprob: -7.569301128387451
    4. ':' → logprob: -8.31930160522461
    5. '[' → logprob: -8.94430160522461
    6. '```' → logprob: -9.81930160522461
    7. '<|end|>' → logprob: -10.06930160522461
    8. '
' → logprob: -10.94430160522461
    9. '        
' → logprob: -10.94430160522461
    10. '	   ' → logprob: -11.19430160522461

Token 1082: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34924814105033875
    2. '   ' → logprob: -1.2242481708526611
    3. 'for' → logprob: -7.599247932434082
    4. 'a' → logprob: -8.599247932434082
    5. ' for' → logprob: -9.349247932434082
    6. '[' → logprob: -11.974247932434082
    7. '```' → logprob: -12.599247932434082
    8. '        
' → logprob: -12.724247932434082
    9. '           ' → logprob: -12.849247932434082
    10. '	   ' → logprob: -13.099247932434082

Token 1083: ' Parc' (ID: 68618)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0030868053436279297
    2. '       ' → logprob: -5.878087043762207
    3. 'for' → logprob: -8.753087043762207
    4. 'a' → logprob: -9.378087043762207
    5. ' for' → logprob: -10.628087043762207
    6. '```' → logprob: -12.128087043762207
    7. '   ' → logprob: -12.878087043762207
    8. '	for' → logprob: -13.003087043762207
    9. '    
' → logprob: -13.753087043762207
    10. '
' → logprob: -14.503087043762207

Token 1084: 'ourt' (ID: 38600)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.58393394947052
    2. 'for' → logprob: -1.33393394947052
    3. '       ' → logprob: -2.2089338302612305
    4. 'or' → logprob: -3.9589338302612305
    5. 'range' → logprob: -3.9589338302612305
    6. 'er' → logprob: -4.4589338302612305
    7. ' for' → logprob: -5.7089338302612305
    8. 'i' → logprob: -6.0839338302612305
    9. 'def' → logprob: -6.2089338302612305
    10. 'r' → logprob: -6.4589338302612305

Token 1085: ' les' (ID: 1341)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.3127860128879547
    2. '(n' → logprob: -1.6877859830856323
    3. '(' → logprob: -3.187786102294922
    4. '   ' → logprob: -3.437786102294922
    5. 'i' → logprob: -5.687786102294922
    6. 'n' → logprob: -5.687786102294922
    7. '(a' → logprob: -6.687786102294922
    8. 'a' → logprob: -6.937786102294922
    9. ' i' → logprob: -7.937786102294922
    10. 'range' → logprob: -8.562786102294922

Token 1086: ' cases' (ID: 7911)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.817693293094635
    2. 'range' → logprob: -0.942693293094635
    3. 'i' → logprob: -1.8176932334899902
    4. 'a' → logprob: -5.94269323348999
    5. '   ' → logprob: -5.94269323348999
    6. ' range' → logprob: -7.31769323348999
    7. '```' → logprob: -8.317693710327148
    8. ' ' → logprob: -9.192693710327148
    9. 'for' → logprob: -9.692693710327148
    10. ' n' → logprob: -9.817693710327148

Token 1087: ' principales' (ID: 37058)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14321722090244293
    2. '[i' → logprob: -2.7682173252105713
    3. 'for' → logprob: -3.1432173252105713
    4. '       ' → logprob: -4.018217086791992
    5. '[' → logprob: -5.518217086791992
    6. ' for' → logprob: -5.893217086791992
    7. ',' → logprob: -6.768217086791992
    8. '```' → logprob: -8.143217086791992
    9. 'i' → logprob: -8.643217086791992
    10. '[j' → logprob: -8.768217086791992

Token 1088: ' des' (ID: 731)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005744148511439562
    2. '   ' → logprob: -5.255743980407715
    3. ',' → logprob: -8.755743980407715
    4. ' for' → logprob: -9.380743980407715
    5. 'for' → logprob: -9.505743980407715
    6. '```' → logprob: -10.130743980407715
    7. '<|end|>' → logprob: -10.380743980407715
    8. '[' → logprob: -10.630743980407715
    9. '        
' → logprob: -10.630743980407715
    10. '           ' → logprob: -10.880743980407715

Token 1089: ' blocs' (ID: 182599)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5409611463546753
    2. 'a' → logprob: -1.5409611463546753
    3. 'range' → logprob: -2.165961265563965
    4. '2' → logprob: -2.915961265563965
    5. '4' → logprob: -4.540961265563965
    6. 'n' → logprob: -4.665961265563965
    7. '0' → logprob: -5.040961265563965
    8. 'la' → logprob: -5.540961265563965
    9. ' ' → logprob: -6.540961265563965
    10. ' i' → logprob: -7.790961265563965

Token 1090: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03437057137489319
    2. '   ' → logprob: -3.4093706607818604
    3. ',' → logprob: -8.659370422363281
    4. '        
' → logprob: -9.284370422363281
    5. '[' → logprob: -9.409370422363281
    6. '<|end|>' → logprob: -9.534370422363281
    7. '```' → logprob: -9.909370422363281
    8. 'a' → logprob: -10.409370422363281
    9. '           ' → logprob: -10.409370422363281
    10. '
' → logprob: -10.534370422363281

Token 1091: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008728709071874619
    2. 'de' → logprob: -7.62587308883667
    3. ' ' → logprob: -8.125872611999512
    4. '4' → logprob: -10.875872611999512
    5. 'range' → logprob: -11.125872611999512
    6. '   ' → logprob: -11.375872611999512
    7. 'a' → logprob: -11.750872611999512
    8. 'i' → logprob: -11.875872611999512
    9. '```' → logprob: -12.125872611999512
    10. 'size' → logprob: -12.813372611999512

Token 1092: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002231736434623599
    2. '4' → logprob: -6.127231597900391
    3. 'a' → logprob: -11.12723159790039
    4. ' ' → logprob: -11.12723159790039
    5. 'i' → logprob: -12.12723159790039
    6. 'range' → logprob: -13.00223159790039
    7. '   ' → logprob: -13.12723159790039
    8. '0' → logprob: -13.12723159790039
    9. 'de' → logprob: -13.75223159790039
    10. '```' → logprob: -14.43973159790039

Token 1093: 'x' (ID: 87)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007354951463639736
    2. ' ' → logprob: -6.132354736328125
    3. '       ' → logprob: -6.507354736328125
    4. '2' → logprob: -6.632354736328125
    5. '```' → logprob: -7.257354736328125
    6. ',' → logprob: -7.882354736328125
    7. '[i' → logprob: -7.882354736328125
    8. '[' → logprob: -8.132354736328125
    9. 'for' → logprob: -8.257354736328125
    10. '  ' → logprob: -9.507354736328125

Token 1094: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -13.125003814697266
    3. '   ' → logprob: -14.500003814697266
    4. 'for' → logprob: -15.375003814697266
    5. 'i' → logprob: -15.750003814697266
    6. ',' → logprob: -16.000003814697266
    7. '```' → logprob: -16.062503814697266
    8. '...' → logprob: -16.500003814697266
    9. '4' → logprob: -16.625003814697266
    10. '
' → logprob: -16.812503814697266

Token 1095: ' comme' (ID: 7971)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2562845051288605
    2. '   ' → logprob: -1.506284475326538
    3. ':' → logprob: -6.131284713745117
    4. ',' → logprob: -7.131284713745117
    5. '        
' → logprob: -7.381284713745117
    6. '```' → logprob: -8.506284713745117
    7. '    
' → logprob: -8.756284713745117
    8. 'a' → logprob: -8.756284713745117
    9. ':
' → logprob: -9.881284713745117
    10. '
' → logprob: -10.006284713745117

Token 1096: ' plus' (ID: 2932)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.028422489762306213
    2. 'la' → logprob: -4.9034223556518555
    3. 'avant' → logprob: -5.1534223556518555
    4. ' range' → logprob: -5.1534223556518555
    5. 'before' → logprob: -6.1534223556518555
    6. '   ' → logprob: -6.5284223556518555
    7. '```' → logprob: -7.2784223556518555
    8. 'i' → logprob: -7.7784223556518555
    9. 'su' → logprob: -7.9034223556518555
    10. 'pr' → logprob: -7.9034223556518555

Token 1097: ' haut' (ID: 28223)
  Prédit: 'haut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'haut' → logprob: -0.2516731321811676
    2. '```' → logprob: -2.5016732215881348
    3. '#' → logprob: -3.8766732215881348
    4. ' haut' → logprob: -3.8766732215881348
    5. 'bas' → logprob: -4.001673221588135
    6. 'avant' → logprob: -4.251673221588135
    7. 'for' → logprob: -4.251673221588135
    8. '   ' → logprob: -5.001673221588135
    9. '+' → logprob: -5.251673221588135
    10. 'à' → logprob: -5.626673221588135

Token 1098: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010244950652122498
    2. ':' → logprob: -5.385244846343994
    3. '   ' → logprob: -5.510244846343994
    4. 'a' → logprob: -7.510244846343994
    5. ':
' → logprob: -8.010245323181152
    6. '        
' → logprob: -8.385245323181152
    7. '```' → logprob: -9.010245323181152
    8. ',' → logprob: -9.260245323181152
    9. '
' → logprob: -9.885245323181152
    10. '[' → logprob: -10.010245323181152

Token 1099: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41121673583984375
    2. '   ' → logprob: -1.1612167358398438
    3. ':' → logprob: -4.036216735839844
    4. 'a' → logprob: -6.036216735839844
    5. '```' → logprob: -6.661216735839844
    6. ':
' → logprob: -7.161216735839844
    7. '        
' → logprob: -7.536216735839844
    8. '    
' → logprob: -8.036216735839844
    9. '
' → logprob: -8.161216735839844
    10. '[' → logprob: -8.911216735839844

Token 1100: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3971098065376282
    2. 'a' → logprob: -1.6471097469329834
    3. '   ' → logprob: -2.1471097469329834
    4. 'for' → logprob: -4.0221099853515625
    5. '```' → logprob: -9.022109985351562
    6. ' for' → logprob: -9.272109985351562
    7. 'b' → logprob: -10.272109985351562
    8. '
' → logprob: -10.397109985351562
    9. '           ' → logprob: -10.397109985351562
    10. ' a' → logprob: -10.397109985351562

Token 1101: ' Rem' (ID: 6890)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.048663217574357986
    2. '   ' → logprob: -4.048663139343262
    3. '       ' → logprob: -4.048663139343262
    4. 'for' → logprob: -4.548663139343262
    5. 'if' → logprob: -7.173663139343262
    6. 'j' → logprob: -7.548663139343262
    7. ' a' → logprob: -7.673663139343262
    8. 'c' → logprob: -10.048663139343262
    9. '
' → logprob: -10.298663139343262
    10. '        
' → logprob: -10.673663139343262

Token 1102: 'plit' (ID: 4059)
  Prédit: 'pl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.7345536947250366
    2. 'plit' → logprob: -0.9845536947250366
    3. '       ' → logprob: -2.234553813934326
    4. 'p' → logprob: -4.484553813934326
    5. '        ' → logprob: -4.859553813934326
    6. 'et' → logprob: -4.984553813934326
    7. 'place' → logprob: -5.484553813934326
    8. 'pli' → logprob: -5.859553813934326
    9. '[i' → logprob: -6.484553813934326
    10. '           ' → logprob: -7.359553813934326

Token 1103: ' les' (ID: 1341)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8012373447418213
    2. ' a' → logprob: -0.8012373447418213
    3. '   ' → logprob: -2.3012373447418213
    4. '       ' → logprob: -6.551237106323242
    5. '	a' → logprob: -8.676237106323242
    6. '  ' → logprob: -9.301237106323242
    7. 'i' → logprob: -9.426237106323242
    8. ' i' → logprob: -9.801237106323242
    9. '    ' → logprob: -9.801237106323242
    10. '        
' → logprob: -10.113737106323242

Token 1104: ' deux' (ID: 10301)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04191218689084053
    2. 'i' → logprob: -3.666912078857422
    3. ' a' → logprob: -4.416912078857422
    4. '[i' → logprob: -6.166912078857422
    5. ' i' → logprob: -6.916912078857422
    6. '   ' → logprob: -9.791912078857422
    7. 'b' → logprob: -10.416912078857422
    8. '[a' → logprob: -10.479412078857422
    9. ' ' → logprob: -10.791912078857422
    10. 'j' → logprob: -10.854412078857422

Token 1105: ' cases' (ID: 7911)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6959713101387024
    2. 'i' → logprob: -1.4459712505340576
    3. ' a' → logprob: -2.3209712505340576
    4. '[i' → logprob: -2.8209712505340576
    5. ' i' → logprob: -2.8209712505340576
    6. '   ' → logprob: -3.9459712505340576
    7. ' lignes' → logprob: -4.195971488952637
    8. ' [' → logprob: -6.195971488952637
    9. ' lines' → logprob: -6.445971488952637
    10. '[' → logprob: -6.570971488952637

Token 1106: ' à' (ID: 1221)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.16662438213825226
    2. 'a' → logprob: -2.9166243076324463
    3. '   ' → logprob: -2.9166243076324463
    4. '       ' → logprob: -3.5416243076324463
    5. 'i' → logprob: -5.041624546051025
    6. 'adj' → logprob: -6.041624546051025
    7. '[j' → logprob: -6.166624546051025
    8. '[' → logprob: -6.916624546051025
    9. '[a' → logprob: -6.916624546051025
    10. '```' → logprob: -7.666624546051025

Token 1107: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.21953564882278442
    2. '[i' → logprob: -1.7195355892181396
    3. 'l' → logprob: -4.594535827636719
    4. ' i' → logprob: -5.469535827636719
    5. 'a' → logprob: -6.469535827636719
    6. '(i' → logprob: -7.719535827636719
    7. 'j' → logprob: -8.094535827636719
    8. '[' → logprob: -8.594535827636719
    9. ' [' → logprob: -8.969535827636719
    10. 'la' → logprob: -9.094535827636719

Token 1108: ' fin' (ID: 2131)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.2981242835521698
    2. 'i' → logprob: -1.9231243133544922
    3. '[i' → logprob: -2.548124313354492
    4. 'g' → logprob: -4.423124313354492
    5. ' droite' → logprob: -4.548124313354492
    6. 'd' → logprob: -5.423124313354492
    7. '[' → logprob: -6.923124313354492
    8. 'di' → logprob: -7.048124313354492
    9. '```' → logprob: -7.923124313354492
    10. ' gauche' → logprob: -8.048124313354492

Token 1109: ' de' (ID: 334)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.21037326753139496
    2. 'a' → logprob: -2.2103731632232666
    3. '   ' → logprob: -3.0853731632232666
    4. 'i' → logprob: -4.710373401641846
    5. '[a' → logprob: -5.085373401641846
    6. '       ' → logprob: -5.460373401641846
    7. ' a' → logprob: -5.460373401641846
    8. '[-' → logprob: -5.960373401641846
    9. ' i' → logprob: -6.210373401641846
    10. ' [' → logprob: -6.210373401641846

Token 1110: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0013619012897834182
    2. ' a' → logprob: -7.376361846923828
    3. 'la' → logprob: -8.251361846923828
    4. 'range' → logprob: -8.751361846923828
    5. 'i' → logprob: -9.501361846923828
    6. '[a' → logprob: -9.626361846923828
    7. '   ' → logprob: -9.751361846923828
    8. 'l' → logprob: -9.876361846923828
    9. ' la' → logprob: -11.251361846923828
    10. ' ' → logprob: -11.251361846923828

Token 1111: ' ligne' (ID: 19583)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8484641909599304
    2. 'ligne' → logprob: -0.8484641909599304
    3. 'bloc' → logprob: -2.848464250564575
    4. 'a' → logprob: -3.723464250564575
    5. 'range' → logprob: -3.723464250564575
    6. '[i' → logprob: -4.223464012145996
    7. 'block' → logprob: -4.598464012145996
    8. 'rang' → logprob: -5.973464012145996
    9. 'bl' → logprob: -6.598464012145996
    10. ' ligne' → logprob: -6.723464012145996

Token 1112: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33595535159111023
    2. 'a' → logprob: -1.7109553813934326
    3. '[i' → logprob: -2.9609553813934326
    4. ' a' → logprob: -3.8359553813934326
    5. ',' → logprob: -3.9609553813934326
    6. '       ' → logprob: -5.5859551429748535
    7. '[a' → logprob: -5.8359551429748535
    8. ' at' → logprob: -6.7109551429748535
    9. '[' → logprob: -7.3359551429748535
    10. ' ,' → logprob: -7.4609551429748535

Token 1113: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4913512468338013
    2. 'la' → logprob: -1.7413512468338013
    3. 'les' → logprob: -1.8663512468338013
    4. 'col' → logprob: -2.2413511276245117
    5. 'colon' → logprob: -3.1163511276245117
    6. ' colonne' → logprob: -3.1163511276245117
    7. ' la' → logprob: -3.2413511276245117
    8. 'a' → logprob: -3.2413511276245117
    9. ' les' → logprob: -3.6163511276245117
    10. '       ' → logprob: -3.6163511276245117

Token 1114: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.4914679527282715
    2. 'a' → logprob: -1.8664679527282715
    3. '   ' → logprob: -2.7414679527282715
    4. ' la' → logprob: -2.7414679527282715
    5. 'range' → logprob: -3.1164679527282715
    6. 'i' → logprob: -3.3664679527282715
    7. 'l' → logprob: -4.6164679527282715
    8. ' range' → logprob: -5.1164679527282715
    9. ' ' → logprob: -5.7414679527282715
    10. ' chaque' → logprob: -6.9914679527282715

Token 1115: ' colonne' (ID: 148275)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.5243712067604065
    2. 'ligne' → logprob: -1.0243711471557617
    3. 'i' → logprob: -3.8993711471557617
    4. 'bloc' → logprob: -4.399371147155762
    5. 'colon' → logprob: -4.899371147155762
    6. '   ' → logprob: -5.774371147155762
    7. 'block' → logprob: -7.024371147155762
    8. 'column' → logprob: -7.149371147155762
    9. ' colonne' → logprob: -7.149371147155762
    10. 'rang' → logprob: -7.524371147155762

Token 1116: ' avec' (ID: 3937)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9297426342964172
    2. '   ' → logprob: -1.3047425746917725
    3. '       ' → logprob: -1.5547425746917725
    4. ' =' → logprob: -2.9297425746917725
    5. ' a' → logprob: -3.5547425746917725
    6. ',' → logprob: -4.429742813110352
    7. '[i' → logprob: -4.679742813110352
    8. '=' → logprob: -5.054742813110352
    9. ' with' → logprob: -5.929742813110352
    10. '[a' → logprob: -6.054742813110352

Token 1117: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3404049277305603
    2. '"a' → logprob: -1.340404987335205
    3. '"x' → logprob: -4.715404987335205
    4. ' "' → logprob: -5.215404987335205
    5. 'a' → logprob: -5.715404987335205
    6. '"d' → logprob: -5.840404987335205
    7. 'c' → logprob: -6.590404987335205
    8. 'b' → logprob: -6.590404987335205
    9. ''a' → logprob: -6.840404987335205
    10. '".' → logprob: -7.465404987335205

Token 1118: 'c' (ID: 66)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6012681126594543
    2. '"a' → logprob: -0.9762681126594543
    3. '"d' → logprob: -3.3512680530548096
    4. '"x' → logprob: -3.6012680530548096
    5. 'a' → logprob: -5.226268291473389
    6. 'c' → logprob: -6.226268291473389
    7. ''a' → logprob: -6.726268291473389
    8. '"h' → logprob: -7.351268291473389
    9. '".' → logprob: -7.476268291473389
    10. '"."' → logprob: -7.726268291473389

Token 1119: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6005204916000366
    2. '",' → logprob: -0.8505204916000366
    3. '"
' → logprob: -3.975520610809326
    4. 'a' → logprob: -6.350520610809326
    5. '   ' → logprob: -7.100520610809326
    6. ' ",' → logprob: -7.350520610809326
    7. '"a' → logprob: -7.600520610809326
    8. '",
' → logprob: -7.975520610809326
    9. ' "' → logprob: -7.975520610809326
    10. 's' → logprob: -8.350520133972168

Token 1120: ' et' (ID: 859)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8390957117080688
    2. 'a' → logprob: -1.0890957117080688
    3. '   ' → logprob: -1.5890957117080688
    4. ',' → logprob: -3.7140955924987793
    5. ' a' → logprob: -6.964095592498779
    6. ' and' → logprob: -7.339095592498779
    7. ' =' → logprob: -8.839096069335938
    8. '
' → logprob: -8.839096069335938
    9. '=' → logprob: -8.964096069335938
    10. '<|end|>' → logprob: -8.964096069335938

Token 1121: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.009247150272130966
    2. '"a' → logprob: -5.384247303009033
    3. '"d' → logprob: -6.384247303009033
    4. 'c' → logprob: -6.384247303009033
    5. 'b' → logprob: -7.259247303009033
    6. 'a' → logprob: -8.259246826171875
    7. '#' → logprob: -9.634246826171875
    8. 'd' → logprob: -10.009246826171875
    9. ' "' → logprob: -10.134246826171875
    10. '
' → logprob: -10.259246826171875

Token 1122: 'd' (ID: 67)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.20569837093353271
    2. 'c' → logprob: -2.0806984901428223
    3. '"d' → logprob: -3.4556984901428223
    4. 'd' → logprob: -3.5806984901428223
    5. 'b' → logprob: -7.205698490142822
    6. '"a' → logprob: -8.080698013305664
    7. ''' → logprob: -8.330698013305664
    8. 'a' → logprob: -8.955698013305664
    9. ''d' → logprob: -9.830698013305664
    10. '
' → logprob: -10.330698013305664

Token 1123: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.08701376616954803
    2. '   ' → logprob: -2.9620137214660645
    3. '"
' → logprob: -3.7120137214660645
    4. '",' → logprob: -6.2120137214660645
    5. 'a' → logprob: -6.3370137214660645
    6. ' "' → logprob: -6.3370137214660645
    7. ',' → logprob: -7.8370137214660645
    8. '"a' → logprob: -8.087014198303223
    9. ' ' → logprob: -8.712014198303223
    10. ',"' → logprob: -8.837014198303223

Token 1124: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1598721593618393
    2. 'a' → logprob: -2.284872055053711
    3. '       ' → logprob: -3.409872055053711
    4. ',' → logprob: -5.409872055053711
    5. '```' → logprob: -6.284872055053711
    6. '[' → logprob: -6.409872055053711
    7. '    
' → logprob: -6.784872055053711
    8. '        
' → logprob: -7.284872055053711
    9. '
' → logprob: -7.284872055053711
    10. ':
' → logprob: -7.534872055053711

Token 1125: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.05967097356915474
    2. '       ' → logprob: -3.309670925140381
    3. '   ' → logprob: -3.934670925140381
    4. ' a' → logprob: -6.309670925140381
    5. 'for' → logprob: -11.684671401977539
    6. '	a' → logprob: -12.059671401977539
    7. ' ' → logprob: -12.809671401977539
    8. '           ' → logprob: -12.809671401977539
    9. '```' → logprob: -13.684671401977539
    10. '    ' → logprob: -13.809671401977539

Token 1126: '[n' (ID: 15433)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00011605957115534693
    2. '[-' → logprob: -9.625116348266602
    3. '[n' → logprob: -10.375116348266602
    4. 'i' → logprob: -11.125116348266602
    5. '   ' → logprob: -13.625116348266602
    6. '[' → logprob: -13.625116348266602
    7. '[a' → logprob: -13.875116348266602
    8. ' [' → logprob: -15.625116348266602
    9. 'a' → logprob: -16.6251163482666
    10. '[j' → logprob: -17.0001163482666

Token 1127: '-i' (ID: 18499)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0072150686755776405
    2. ' -' → logprob: -5.6322150230407715
    3. '[-' → logprob: -6.5072150230407715
    4. '-i' → logprob: -6.8822150230407715
    5. '[i' → logprob: -7.8822150230407715
    6. '   ' → logprob: -8.38221549987793
    7. '][' → logprob: -8.50721549987793
    8. '][-' → logprob: -9.13221549987793
    9. '[' → logprob: -10.13221549987793
    10. ' ' → logprob: -10.50721549987793

Token 1128: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0015220028581097722
    2. ' -' → logprob: -7.001522064208984
    3. '][-' → logprob: -8.001522064208984
    4. '][' → logprob: -8.876522064208984
    5. '[-' → logprob: -9.626522064208984
    6. '2' → logprob: -10.501522064208984
    7. ']' → logprob: -10.876522064208984
    8. '[' → logprob: -11.751522064208984
    9. ']-' → logprob: -12.501522064208984
    10. '1' → logprob: -12.501522064208984

Token 1129: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5250645875930786
    2. '1' → logprob: -0.9000645875930786
    3. '3' → logprob: -6.275064468383789
    4. ']' → logprob: -11.025064468383789
    5. '4' → logprob: -11.650064468383789
    6. '-' → logprob: -12.025064468383789
    7. '][' → logprob: -12.212564468383789
    8. '```' → logprob: -12.275064468383789
    9. ' ' → logprob: -12.712564468383789
    10. '],' → logprob: -13.462564468383789

Token 1130: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.143528014421463
    2. '][-' → logprob: -2.0185279846191406
    3. '],' → logprob: -7.643527984619141
    4. ']' → logprob: -8.14352798461914
    5. ' ][' → logprob: -10.89352798461914
    6. '[-' → logprob: -10.89352798461914
    7. '-' → logprob: -11.39352798461914
    8. '   ' → logprob: -11.64352798461914
    9. '[n' → logprob: -11.76852798461914
    10. '][:' → logprob: -12.51852798461914

Token 1131: 'i' (ID: 72)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.007272233720868826
    2. 'i' → logprob: -5.132272243499756
    3. '-' → logprob: -7.507272243499756
    4. '-n' → logprob: -8.257271766662598
    5. '0' → logprob: -9.007271766662598
    6. ']' → logprob: -9.382271766662598
    7. '-i' → logprob: -9.382271766662598
    8. ' n' → logprob: -9.632271766662598
    9. '][' → logprob: -10.132271766662598
    10. '[n' → logprob: -10.507271766662598

Token 1132: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.036342963576316833
    2. ']' → logprob: -3.5363428592681885
    3. '-' → logprob: -5.911343097686768
    4. '+' → logprob: -6.286343097686768
    5. ']=' → logprob: -7.036343097686768
    6. '][' → logprob: -7.536343097686768
    7. '][-' → logprob: -8.16134262084961
    8. '   ' → logprob: -9.28634262084961
    9. '[-' → logprob: -9.66134262084961
    10. ' ],' → logprob: -10.41134262084961

Token 1133: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.018230482935905457
    2. ' a' → logprob: -4.018230438232422
    3. '   ' → logprob: -10.393230438232422
    4. '	a' → logprob: -10.893230438232422
    5. 'c' → logprob: -11.393230438232422
    6. '"a' → logprob: -11.393230438232422
    7. '       ' → logprob: -13.143230438232422
    8. 'd' → logprob: -13.643230438232422
    9. ''a' → logprob: -13.768230438232422
    10. ' c' → logprob: -14.143230438232422

Token 1134: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.2246291337069124e-05
    2. '[' → logprob: -12.000021934509277
    3. '[i' → logprob: -12.375021934509277
    4. '[a' → logprob: -12.375021934509277
    5. '][' → logprob: -13.500021934509277
    6. 'n' → logprob: -13.500021934509277
    7. ' [' → logprob: -13.625021934509277
    8. '[
' → logprob: -14.000021934509277
    9. ']' → logprob: -14.125021934509277
    10. 'a' → logprob: -14.250021934509277

Token 1135: '-i' (ID: 18499)
  Prédit: '-i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.0036205046344548464
    2. '-' → logprob: -5.753620624542236
    3. ' -' → logprob: -7.753620624542236
    4. 'i' → logprob: -12.503620147705078
    5. '-n' → logprob: -12.753620147705078
    6. '[i' → logprob: -13.878620147705078
    7. '```' → logprob: -14.253620147705078
    8. '-I' → logprob: -14.378620147705078
    9. '[-' → logprob: -14.628620147705078
    10. '[' → logprob: -14.753620147705078

Token 1136: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.465036105713807e-06
    2. '2' → logprob: -12.250007629394531
    3. '-i' → logprob: -13.500007629394531
    4. ' -' → logprob: -14.000007629394531
    5. '```' → logprob: -15.750007629394531
    6. 'i' → logprob: -15.875007629394531
    7. '   ' → logprob: -16.25000762939453
    8. '1' → logprob: -17.50000762939453
    9. '[' → logprob: -17.50000762939453
    10. ' ' → logprob: -17.87500762939453

Token 1137: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002817358821630478
    2. '1' → logprob: -5.877817153930664
    3. 'i' → logprob: -12.002817153930664
    4. '3' → logprob: -13.440317153930664
    5. ' ' → logprob: -14.127817153930664
    6. 'a' → logprob: -14.315317153930664
    7. 'n' → logprob: -14.377817153930664
    8. '4' → logprob: -14.502817153930664
    9. '   ' → logprob: -14.877817153930664
    10. '```' → logprob: -15.127817153930664

Token 1138: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.01341785304248333
    2. '[i' → logprob: -4.513417720794678
    3. ']' → logprob: -7.263417720794678
    4. '[n' → logprob: -7.638417720794678
    5. ' ][' → logprob: -7.638417720794678
    6. '-' → logprob: -8.263418197631836
    7. '   ' → logprob: -9.138418197631836
    8. ' -' → logprob: -9.763418197631836
    9. ' [' → logprob: -9.763418197631836
    10. '+' → logprob: -10.263418197631836

Token 1139: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.012720479629933834
    2. 'n' → logprob: -4.387720584869385
    3. '-i' → logprob: -9.887720108032227
    4. '[i' → logprob: -10.012720108032227
    5. '-' → logprob: -10.512720108032227
    6. ' i' → logprob: -10.887720108032227
    7. 'a' → logprob: -11.262720108032227
    8. ']' → logprob: -12.262720108032227
    9. '{i' → logprob: -12.387720108032227
    10. '   ' → logprob: -12.387720108032227

Token 1140: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0015664035454392433
    2. '],' → logprob: -7.501566410064697
    3. ']' → logprob: -7.876566410064697
    4. '-' → logprob: -7.876566410064697
    5. ' +' → logprob: -9.501565933227539
    6. '][' → logprob: -9.501565933227539
    7. ']+' → logprob: -10.751565933227539
    8. '   ' → logprob: -10.876565933227539
    9. '+]' → logprob: -11.251565933227539
    10. '][-' → logprob: -11.251565933227539

Token 1141: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.945094355614856e-05
    2. ' ' → logprob: -10.250069618225098
    3. '2' → logprob: -10.625069618225098
    4. '3' → logprob: -12.625069618225098
    5. '   ' → logprob: -13.000069618225098
    6. '0' → logprob: -13.062569618225098
    7. '+' → logprob: -14.187569618225098
    8. '```' → logprob: -15.937569618225098
    9. '4' → logprob: -16.12506866455078
    10. ')' → logprob: -16.37506866455078

Token 1142: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7467367649078369
    2. ']' → logprob: -0.7467367649078369
    3. ',' → logprob: -3.746736764907837
    4. ' =' → logprob: -3.996736764907837
    5. ']=' → logprob: -4.996736526489258
    6. '],' → logprob: -5.746736526489258
    7. ' ]' → logprob: -9.246736526489258
    8. '   ' → logprob: -10.121736526489258
    9. ' ' → logprob: -10.246736526489258
    10. ')' → logprob: -10.871736526489258

Token 1143: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006843361537903547
    2. ' =' → logprob: -5.131843566894531
    3. ',' → logprob: -7.006843566894531
    4. '=
' → logprob: -12.381843566894531
    5. ' ,' → logprob: -12.631843566894531
    6. '=

' → logprob: -14.256843566894531
    7. '   ' → logprob: -16.25684356689453
    8. ' ' → logprob: -16.50684356689453
    9. ' =
' → logprob: -16.88184356689453
    10. '='' → logprob: -17.00684356689453

Token 1144: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0017132589127868414
    2. '"d' → logprob: -7.001713275909424
    3. ''' → logprob: -7.251713275909424
    4. ' "' → logprob: -10.001712799072266
    5. 'c' → logprob: -10.751712799072266
    6. '"C' → logprob: -12.126712799072266
    7. ''d' → logprob: -12.251712799072266
    8. '"x' → logprob: -12.751712799072266
    9. '"h' → logprob: -12.751712799072266
    10. 'd' → logprob: -13.376712799072266

Token 1145: 'c' (ID: 66)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0034778357949107885
    2. ''' → logprob: -5.878478050231934
    3. 'c' → logprob: -7.503478050231934
    4. '"d' → logprob: -9.253478050231934
    5. '"x' → logprob: -12.128478050231934
    6. ' "' → logprob: -12.253478050231934
    7. '"a' → logprob: -12.878478050231934
    8. '"s' → logprob: -13.378478050231934
    9. ''d' → logprob: -13.503478050231934
    10. '".' → logprob: -13.753478050231934

Token 1146: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.0004822697374038398
    2. ',' → logprob: -8.500482559204102
    3. '"' → logprob: -8.750482559204102
    4. ' ",' → logprob: -9.625482559204102
    5. '","' → logprob: -10.625482559204102
    6. 'c' → logprob: -11.375482559204102
    7. 'a' → logprob: -12.125482559204102
    8. '",
' → logprob: -12.375482559204102
    9. ',",' → logprob: -12.875482559204102
    10. ',"' → logprob: -13.375482559204102

Token 1147: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04182588681578636
    2. ' "' → logprob: -3.291825771331787
    3. '"d' → logprob: -5.791825771331787
    4. ' d' → logprob: -7.791825771331787
    5. 'd' → logprob: -8.541826248168945
    6. ' c' → logprob: -10.166826248168945
    7. 'c' → logprob: -10.666826248168945
    8. ''' → logprob: -10.791826248168945
    9. ' ' → logprob: -11.416826248168945
    10. ' ' → logprob: -12.166826248168945

Token 1148: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.001981333363801241
    2. '"d' → logprob: -6.626981258392334
    3. 'c' → logprob: -7.501981258392334
    4. '"' → logprob: -9.376981735229492
    5. ''d' → logprob: -11.501981735229492
    6. '	d' → logprob: -12.876981735229492
    7. ' d' → logprob: -12.876981735229492
    8. '"""' → logprob: -14.376981735229492
    9. '""' → logprob: -14.501981735229492
    10. '"."' → logprob: -15.751981735229492

Token 1149: '"
' (ID: 1092)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1150: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07568833976984024
    2. 'a' → logprob: -2.700688362121582
    3. '<|end|>' → logprob: -5.575688362121582
    4. '```' → logprob: -7.325688362121582
    5. '    
' → logprob: -7.825688362121582
    6. ' ' → logprob: -8.450688362121582
    7. ' a' → logprob: -9.075688362121582
    8. '       ' → logprob: -9.075688362121582
    9. '  ' → logprob: -9.075688362121582
    10. '  
' → logprob: -9.450688362121582

Token 1151: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.10771223902702332
    2. '   ' → logprob: -2.3577122688293457
    3. '       ' → logprob: -5.232712268829346
    4. ' a' → logprob: -6.232712268829346
    5. ' ' → logprob: -9.107711791992188
    6. '<|end|>' → logprob: -10.482711791992188
    7. '  ' → logprob: -11.482711791992188
    8. '	a' → logprob: -12.107711791992188
    9. '        
' → logprob: -12.482711791992188
    10. '    ' → logprob: -12.732711791992188

Token 1152: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0015848544426262379
    2. '[i' → logprob: -6.501585006713867
    3. '[' → logprob: -9.751585006713867
    4. 'n' → logprob: -11.501585006713867
    5. '[a' → logprob: -12.126585006713867
    6. '[-' → logprob: -12.751585006713867
    7. '   ' → logprob: -13.876585006713867
    8. ' [' → logprob: -14.001585006713867
    9. '[
' → logprob: -14.251585006713867
    10. '
' → logprob: -14.501585006713867

Token 1153: '-i' (ID: 18499)
  Prédit: '-i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.013914310373365879
    2. ' -' → logprob: -4.763914108276367
    3. '-' → logprob: -5.263914108276367
    4. '[i' → logprob: -10.513914108276367
    5. 'i' → logprob: -10.763914108276367
    6. '[-' → logprob: -11.263914108276367
    7. '   ' → logprob: -11.638914108276367
    8. '#' → logprob: -12.013914108276367
    9. ' ' → logprob: -12.013914108276367
    10. '-n' → logprob: -12.138914108276367

Token 1154: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.9040898880339228e-05
    2. ' -' → logprob: -10.625028610229492
    3. '   ' → logprob: -13.000028610229492
    4. '[' → logprob: -13.750028610229492
    5. '2' → logprob: -15.125028610229492
    6. '3' → logprob: -15.250028610229492
    7. '][' → logprob: -15.500028610229492
    8. ' ' → logprob: -15.875028610229492
    9. '-i' → logprob: -15.875028610229492
    10. '  ' → logprob: -16.750028610229492

Token 1155: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14280609786510468
    2. '2' → logprob: -2.142806053161621
    3. '4' → logprob: -4.642806053161621
    4. '3' → logprob: -5.142806053161621
    5. 'i' → logprob: -8.392806053161621
    6. 'n' → logprob: -11.080306053161621
    7. ' ' → logprob: -12.142806053161621
    8. 'a' → logprob: -12.267806053161621
    9. '```' → logprob: -12.392806053161621
    10. '-' → logprob: -13.455306053161621

Token 1156: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.42131373286247253
    2. '][' → logprob: -1.171313762664795
    3. '[n' → logprob: -3.546313762664795
    4. '[' → logprob: -6.171313762664795
    5. ' [' → logprob: -6.296313762664795
    6. ')[' → logprob: -8.546313285827637
    7. '}[' → logprob: -8.546313285827637
    8. '>[' → logprob: -8.671313285827637
    9. '   ' → logprob: -8.921313285827637
    10. ']' → logprob: -8.921313285827637

Token 1157: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007141007808968425
    2. '[i' → logprob: -7.625714302062988
    3. 'n' → logprob: -8.625714302062988
    4. ' i' → logprob: -11.000714302062988
    5. '   ' → logprob: -11.625714302062988
    6. '0' → logprob: -12.750714302062988
    7. '-i' → logprob: -13.000714302062988
    8. '[n' → logprob: -13.125714302062988
    9. '[' → logprob: -13.500714302062988
    10. '
' → logprob: -13.813214302062988

Token 1158: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.02991791069507599
    2. ']' → logprob: -3.7799179553985596
    3. '   ' → logprob: -5.9049177169799805
    4. '][' → logprob: -6.2799177169799805
    5. ',' → logprob: -7.0299177169799805
    6. '+' → logprob: -7.1549177169799805
    7. ' ' → logprob: -9.15491771697998
    8. ' ],' → logprob: -9.65491771697998
    9. '-' → logprob: -9.77991771697998
    10. ' ,' → logprob: -10.52991771697998

Token 1159: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.012516716495156288
    2. 'a' → logprob: -4.387516498565674
    3. '"' → logprob: -13.262516975402832
    4. ' ' → logprob: -13.762516975402832
    5. '	a' → logprob: -13.887516975402832
    6. '"a' → logprob: -14.012516975402832
    7. ' а' → logprob: -14.887516975402832
    8. ')' → logprob: -15.262516975402832
    9. ' ' → logprob: -15.387516975402832
    10. ''a' → logprob: -15.512516975402832

Token 1160: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.8550976164988242e-05
    2. 'n' → logprob: -11.000018119812012
    3. ' [' → logprob: -14.625018119812012
    4. '[' → logprob: -14.625018119812012
    5. '```' → logprob: -14.875018119812012
    6. '=n' → logprob: -15.875018119812012
    7. '(n' → logprob: -16.125019073486328
    8. '   ' → logprob: -16.500019073486328
    9. ' n' → logprob: -16.625019073486328
    10. '<n' → logprob: -17.000019073486328

Token 1161: '-i' (ID: 18499)
  Prédit: '-i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.0004897649050690234
    2. 'n' → logprob: -8.125490188598633
    3. 'i' → logprob: -9.500490188598633
    4. '-' → logprob: -10.000490188598633
    5. ' -' → logprob: -10.250490188598633
    6. '```' → logprob: -11.375490188598633
    7. '...' → logprob: -12.000490188598633
    8. '[' → logprob: -12.250490188598633
    9. '   ' → logprob: -12.500490188598633
    10. '[i' → logprob: -12.625490188598633

Token 1162: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.036524842376821e-05
    2. '+' → logprob: -11.000040054321289
    3. '1' → logprob: -11.375040054321289
    4. '[' → logprob: -11.625040054321289
    5. '...' → logprob: -13.875040054321289
    6. '   ' → logprob: -14.125040054321289
    7. '```' → logprob: -14.125040054321289
    8. 'i' → logprob: -15.625040054321289
    9. ' -' → logprob: -16.25004005432129
    10. '[i' → logprob: -16.75004005432129

Token 1163: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.643152740551159e-05
    2. 'd' → logprob: -11.000036239624023
    3. '-' → logprob: -12.125036239624023
    4. 'i' → logprob: -12.562536239624023
    5. ' ' → logprob: -13.250036239624023
    6. '```' → logprob: -13.625036239624023
    7. '   ' → logprob: -13.625036239624023
    8. '0' → logprob: -13.750036239624023
    9. '...' → logprob: -14.062536239624023
    10. '[' → logprob: -14.562536239624023

Token 1164: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2043822556734085
    2. '][' → logprob: -1.704382300376892
    3. '   ' → logprob: -6.954382419586182
    4. '[' → logprob: -7.204382419586182
    5. ' [' → logprob: -7.454382419586182
    6. ']' → logprob: -8.329381942749023
    7. 'i' → logprob: -8.829381942749023
    8. ')[' → logprob: -10.079381942749023
    9. '       ' → logprob: -10.579381942749023
    10. ' ][' → logprob: -10.579381942749023

Token 1165: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00018422940047457814
    2. '[i' → logprob: -8.875184059143066
    3. 'n' → logprob: -10.625184059143066
    4. ' i' → logprob: -12.000184059143066
    5. '   ' → logprob: -12.500184059143066
    6. 'a' → logprob: -13.500184059143066
    7. ''i' → logprob: -13.500184059143066
    8. '{i' → logprob: -13.500184059143066
    9. '[' → logprob: -13.625184059143066
    10. '	i' → logprob: -14.125184059143066

Token 1166: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003305784775875509
    2. '[' → logprob: -9.000330924987793
    3. '[i' → logprob: -9.000330924987793
    4. '+i' → logprob: -10.375330924987793
    5. ' +' → logprob: -11.000330924987793
    6. 'i' → logprob: -11.500330924987793
    7. '   ' → logprob: -11.500330924987793
    8. '+[' → logprob: -12.250330924987793
    9. ']' → logprob: -13.375330924987793
    10. '+
' → logprob: -13.625330924987793

Token 1167: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003436872211750597
    2. '0' → logprob: -8.500343322753906
    3. '+' → logprob: -9.875343322753906
    4. '   ' → logprob: -10.375343322753906
    5. ' ' → logprob: -10.875343322753906
    6. '[' → logprob: -12.000343322753906
    7. 'd' → logprob: -12.062843322753906
    8. '```' → logprob: -12.562843322753906
    9. '	' → logprob: -12.625343322753906
    10. '       ' → logprob: -13.062843322753906

Token 1168: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5285784006118774
    2. '=' → logprob: -0.9035784006118774
    3. ']' → logprob: -5.278578281402588
    4. ')' → logprob: -8.778578758239746
    5. '<|end|>' → logprob: -9.278578758239746
    6. ']=' → logprob: -9.653578758239746
    7. ',' → logprob: -11.278578758239746
    8. '}' → logprob: -12.528578758239746
    9. ' ]' → logprob: -13.153578758239746
    10. '       ' → logprob: -13.278578758239746

Token 1169: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0297551192343235
    2. ' =' → logprob: -3.529755115509033
    3. '   ' → logprob: -12.529755592346191
    4. ',' → logprob: -14.654755592346191
    5. ' ' → logprob: -15.404755592346191
    6. '=
' → logprob: -15.654755592346191
    7. '  ' → logprob: -16.904754638671875
    8. '=

' → logprob: -17.154754638671875
    9. '       ' → logprob: -17.404754638671875
    10. '<|end|>' → logprob: -17.529754638671875

Token 1170: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.016524016857147217
    2. '"d' → logprob: -4.516523838043213
    3. '"h' → logprob: -5.516523838043213
    4. ' "' → logprob: -7.016523838043213
    5. '"x' → logprob: -8.641524314880371
    6. '"a' → logprob: -9.516524314880371
    7. 'e' → logprob: -9.891524314880371
    8. 'f' → logprob: -10.016524314880371
    9. '"s' → logprob: -10.266524314880371
    10. '"k' → logprob: -10.516524314880371

Token 1171: 'c' (ID: 66)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.20547428727149963
    2. 'e' → logprob: -2.080474376678467
    3. '"d' → logprob: -3.080474376678467
    4. ''e' → logprob: -5.080474376678467
    5. 'd' → logprob: -5.330474376678467
    6. 'c' → logprob: -6.830474376678467
    7. 'f' → logprob: -6.830474376678467
    8. '"a' → logprob: -7.580474376678467
    9. ''' → logprob: -8.455473899841309
    10. ''f' → logprob: -8.955473899841309

Token 1172: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.0013602360850200057
    2. ',' → logprob: -7.1263604164123535
    3. '"' → logprob: -7.8763604164123535
    4. '","' → logprob: -9.501359939575195
    5. ' ",' → logprob: -9.751359939575195
    6. ',"' → logprob: -11.376359939575195
    7. '",
' → logprob: -11.626359939575195
    8. ',",' → logprob: -11.876359939575195
    9. ' ,' → logprob: -12.001359939575195
    10. 'd' → logprob: -12.626359939575195

Token 1173: ' "' (ID: 392)
  Prédit: '"d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"d' → logprob: -0.11250437796115875
    2. 'd' → logprob: -2.362504482269287
    3. '"' → logprob: -4.737504482269287
    4. ' d' → logprob: -5.987504482269287
    5. ' "' → logprob: -7.737504482269287
    6. ''d' → logprob: -8.237504005432129
    7. ' ' → logprob: -9.487504005432129
    8. '	d' → logprob: -9.612504005432129
    9. '	' → logprob: -11.175004005432129
    10. '   ' → logprob: -11.425004005432129

Token 1174: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00017421995289623737
    2. '"d' → logprob: -9.250174522399902
    3. 'c' → logprob: -10.000174522399902
    4. '"' → logprob: -10.875174522399902
    5. ''d' → logprob: -12.125174522399902
    6. ' d' → logprob: -12.250174522399902
    7. 'e' → logprob: -13.625174522399902
    8. 'a' → logprob: -14.500174522399902
    9. '	d' → logprob: -15.000174522399902
    10. 'b' → logprob: -15.000174522399902

Token 1175: '"
' (ID: 1092)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1176: 'else' (ID: 2807)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1177: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1431681513786316
    2. ':
' → logprob: -2.0181682109832764
    3. '   ' → logprob: -7.893167972564697
    4. ' :' → logprob: -10.268168449401855
    5. ' for' → logprob: -10.268168449401855
    6. 'for' → logprob: -10.393168449401855
    7. ' :
' → logprob: -11.018168449401855
    8. ':

' → logprob: -14.018168449401855
    9. ':
' → logprob: -14.268168449401855
    10. '{' → logprob: -14.518168449401855

Token 1178: '         ' (ID: 983)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4645088016986847
    2. ' for' → logprob: -1.3395087718963623
    3. 'for' → logprob: -2.2145087718963623
    4. '```' → logprob: -8.339509010314941
    5. '	for' → logprob: -10.464509010314941
    6. ' ' → logprob: -10.714509010314941
    7. '    
' → logprob: -10.714509010314941
    8. '    ' → logprob: -10.714509010314941
    9. ' ' → logprob: -11.339509010314941
    10. '#' → logprob: -12.089509010314941

Token 1179: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13951976597309113
    2. 'for' → logprob: -2.139519691467285
    3. ' for' → logprob: -4.389519691467285
    4. ':' → logprob: -10.389519691467285
    5. '```' → logprob: -10.389519691467285
    6. '#' (adapté à ' #') → logprob: -10.764519691467285
    7. ':
' → logprob: -11.764519691467285
    8. '       ' → logprob: -12.764519691467285
    9. '	for' → logprob: -12.889519691467285
    10. '    
' → logprob: -12.889519691467285

Token 1180: ' Si' (ID: 7832)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5327531099319458
    2. ' for' → logprob: -1.4077531099319458
    3. '   ' → logprob: -1.7827531099319458
    4. '#' → logprob: -9.907752990722656
    5. '    ' → logprob: -10.532752990722656
    6. ' ' → logprob: -11.032752990722656
    7. '```' → logprob: -11.282752990722656
    8. ' #' → logprob: -11.532752990722656
    9. '	for' → logprob: -11.657752990722656
    10. ' ' → logprob: -12.032752990722656

Token 1181: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.033706676214933395
    2. 'n' → logprob: -3.4087066650390625
    3. ' not' → logprob: -10.408706665039062
    4. ' ' → logprob: -11.533706665039062
    5. 'not' → logprob: -12.033706665039062
    6. ' ' → logprob: -12.533706665039062
    7. '	n' → logprob: -12.783706665039062
    8. '   ' → logprob: -12.783706665039062
    9. '(n' → logprob: -13.408706665039062
    10. '  ' → logprob: -14.033706665039062

Token 1182: ' modulo' (ID: 112372)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3133525252342224
    2. '%' → logprob: -1.3133525848388672
    3. ' ' → logprob: -9.813352584838867
    4. ' ' → logprob: -11.313352584838867
    5. ' ==' → logprob: -11.938352584838867
    6. '   ' → logprob: -12.313352584838867
    7. '==' → logprob: -13.313352584838867
    8. '%s' → logprob: -13.313352584838867
    9. ' >=' → logprob: -13.563352584838867
    10. ' !=' → logprob: -14.063352584838867

Token 1183: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.07627225667238235
    2. ' ' → logprob: -2.7012722492218018
    3. '2' → logprob: -5.076272487640381
    4. '   ' → logprob: -10.701272010803223
    5. '```' → logprob: -10.951272010803223
    6. ' n' → logprob: -13.013772010803223
    7. ' !=' → logprob: -13.138772010803223
    8. '=' → logprob: -13.138772010803223
    9. '8' → logprob: -13.263772010803223
    10. '%' → logprob: -13.263772010803223

Token 1184: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0005943780997768044
    2. ' ' → logprob: -7.625594615936279
    3. '2' → logprob: -9.250594139099121
    4. '   ' → logprob: -12.250594139099121
    5. '```' → logprob: -13.375594139099121
    6. '8' → logprob: -13.875594139099121
    7. '
' → logprob: -14.625594139099121
    8. '{' → logprob: -15.188094139099121
    9. '0' → logprob: -15.313094139099121
    10. '#' → logprob: -15.438094139099121

Token 1185: ' n' (ID: 297)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4989829957485199
    2. ' ==' → logprob: -1.4989830255508423
    3. ':' → logprob: -1.8739830255508423
    4. '!=' → logprob: -5.248982906341553
    5. ':
' → logprob: -5.248982906341553
    6. ' !=' → logprob: -5.498982906341553
    7. '   ' → logprob: -6.998982906341553
    8. ' :' → logprob: -8.873983383178711
    9. '=' → logprob: -9.498983383178711
    10. '>' → logprob: -9.998983383178711

Token 1186: ''est' (ID: 6616)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.3962666988372803
    2. ' !=' → logprob: -1.1462666988372803
    3. '==' → logprob: -5.396266937255859
    4. '%' → logprob: -6.146266937255859
    5. ' ==' → logprob: -6.521266937255859
    6. '=' → logprob: -7.771266937255859
    7. '>' → logprob: -8.39626693725586
    8. '```' → logprob: -8.77126693725586
    9. ''est' → logprob: -9.27126693725586
    10. '!==' → logprob: -9.77126693725586

Token 1187: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.5291151404380798
    2. 'pas' → logprob: -0.9041151404380798
    3. '0' → logprob: -6.154115200042725
    4. 'not' → logprob: -6.779115200042725
    5. '1' → logprob: -7.154115200042725
    6. '=' → logprob: -7.404115200042725
    7. ' not' → logprob: -7.529115200042725
    8. '_pas' → logprob: -8.029114723205566
    9. '>' → logprob: -8.904114723205566
    10. 'Pas' → logprob: -9.404114723205566

Token 1188: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013113131280988455
    2. ' ' → logprob: -7.126311302185059
    3. '=' → logprob: -7.751311302185059
    4. '==' → logprob: -9.751311302185059
    5. '1' → logprob: -11.626311302185059
    6. '4' → logprob: -13.001311302185059
    7. '2' → logprob: -13.126311302185059
    8. ' =' → logprob: -13.126311302185059
    9. '```' → logprob: -13.501311302185059
    10. ' ==' → logprob: -14.501311302185059

Token 1189: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.656383680412546e-05
    2. '=' → logprob: -10.125046730041504
    3. '==' → logprob: -13.000046730041504
    4. ' ' → logprob: -13.125046730041504
    5. '2' → logprob: -13.375046730041504
    6. 'pas' → logprob: -15.125046730041504
    7. '4' → logprob: -16.250045776367188
    8. '```' → logprob: -16.500045776367188
    9. '1' → logprob: -16.625045776367188
    10. 'zero' → logprob: -17.500045776367188

Token 1190: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18555745482444763
    2. ':' → logprob: -1.93555748462677
    3. ':
' → logprob: -3.9355573654174805
    4. 'for' → logprob: -5.3105573654174805
    5. ' for' → logprob: -7.8105573654174805
    6. '```' → logprob: -10.18555736541748
    7. ',' → logprob: -10.56055736541748
    8. '=' → logprob: -11.31055736541748
    9. '       ' → logprob: -11.43555736541748
    10. '    
' → logprob: -12.06055736541748

Token 1191: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004234985448420048
    2. 'for' → logprob: -5.754234790802002
    3. ' for' → logprob: -7.129234790802002
    4. '```' → logprob: -8.37923526763916
    5. '       ' → logprob: -10.75423526763916
    6. '	for' → logprob: -13.62923526763916
    7. '    ' → logprob: -13.75423526763916
    8. '   ' → logprob: -14.12923526763916
    9. ' ' → logprob: -14.75423526763916
    10. '    
' → logprob: -15.25423526763916

Token 1192: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5711830258369446
    2. '   ' → logprob: -0.9461830258369446
    3. ' for' → logprob: -3.0711829662323
    4. '       ' → logprob: -8.446183204650879
    5. '```' → logprob: -8.946183204650879
    6. 'a' → logprob: -9.446183204650879
    7. '	for' → logprob: -9.946183204650879
    8. '   ' → logprob: -10.696183204650879
    9. '    ' → logprob: -11.071183204650879
    10. ' ' → logprob: -11.446183204650879

Token 1193: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0049424623139202595
    2. ' i' → logprob: -5.379942417144775
    3. 'j' → logprob: -8.129942893981934
    4. '   ' → logprob: -11.504942893981934
    5. ' j' → logprob: -12.004942893981934
    6. ' ' → logprob: -12.754942893981934
    7. '	i' → logprob: -13.379942893981934
    8. '  ' → logprob: -13.942442893981934
    9. 'k' → logprob: -14.004942893981934
    10. 'a' → logprob: -14.192442893981934

Token 1194: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11296286433935165
    2. 'in' → logprob: -2.2379629611968994
    3. '   ' → logprob: -9.73796272277832
    4. ' ' → logprob: -10.36296272277832
    5. '(' → logprob: -11.86296272277832
    6. 'n' → logprob: -11.98796272277832
    7. '[' → logprob: -12.36296272277832
    8. 'range' → logprob: -12.48796272277832
    9. '0' → logprob: -12.73796272277832
    10. 'en' → logprob: -12.73796272277832

Token 1195: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00462284917011857
    2. ' range' → logprob: -5.379622936248779
    3. ' ' → logprob: -13.754622459411621
    4. '(range' → logprob: -14.879622459411621
    5. '(' → logprob: -15.379622459411621
    6. '[' → logprob: -15.504622459411621
    7. '0' → logprob: -15.504622459411621
    8. '   ' → logprob: -15.629622459411621
    9. '	range' → logprob: -16.004623413085938
    10. '  ' → logprob: -16.129623413085938

Token 1196: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00013834332639817148
    2. 'in' → logprob: -9.250138282775879
    3. 'range' → logprob: -10.875138282775879
    4. '(range' → logprob: -11.500138282775879
    5. ' (' → logprob: -12.000138282775879
    6. '0' → logprob: -12.875138282775879
    7. ' in' → logprob: -13.000138282775879
    8. ' range' → logprob: -13.875138282775879
    9. '(n' → logprob: -14.875138282775879
    10. '(in' → logprob: -15.750138282775879

Token 1197: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16306325793266296
    2. 'range' → logprob: -1.9130632877349854
    3. ' range' → logprob: -6.038063049316406
    4. ' ' → logprob: -8.163063049316406
    5. '(' → logprob: -8.913063049316406
    6. '   ' → logprob: -11.663063049316406
    7. '2' → logprob: -12.413063049316406
    8. '1' → logprob: -12.413063049316406
    9. ',' → logprob: -13.163063049316406
    10. '(range' → logprob: -13.288063049316406

Token 1198: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.26872825622558594
    2. ',' → logprob: -1.643728256225586
    3. 'range' → logprob: -4.018728256225586
    4. ' range' → logprob: -4.518728256225586
    5. '   ' → logprob: -5.143728256225586
    6. ' ' → logprob: -6.268728256225586
    7. ' in' → logprob: -6.268728256225586
    8. ' (' → logprob: -7.143728256225586
    9. '(range' → logprob: -7.393728256225586
    10. '=' → logprob: -7.768728256225586

Token 1199: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03813719004392624
    2. ' n' → logprob: -3.288137197494507
    3. '   ' → logprob: -9.663137435913086
    4. ' ' → logprob: -10.913137435913086
    5. ',' → logprob: -12.663137435913086
    6. '  ' → logprob: -13.538137435913086
    7. '    ' → logprob: -13.788137435913086
    8. '```' → logprob: -13.788137435913086
    9. '(n' → logprob: -13.913137435913086
    10. '2' → logprob: -13.913137435913086

Token 1200: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002133960137143731
    2. '+' → logprob: -6.502133846282959
    3. ' ,' → logprob: -7.627133846282959
    4. '-' → logprob: -9.377134323120117
    5. '   ' → logprob: -10.627134323120117
    6. ' +' → logprob: -11.752134323120117
    7. ',
' → logprob: -12.002134323120117
    8. ' ' → logprob: -12.752134323120117
    9. '+,' → logprob: -12.752134323120117
    10. '```' → logprob: -13.002134323120117

Token 1201: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1322726160287857
    2. '1' → logprob: -2.132272720336914
    3. '3' → logprob: -5.257272720336914
    4. '4' → logprob: -9.757272720336914
    5. ' ' → logprob: -10.507272720336914
    6. '
' → logprob: -11.819772720336914
    7. '5' → logprob: -12.007272720336914
    8. '-' → logprob: -12.444772720336914
    9. '```' → logprob: -12.507272720336914
    10. '6' → logprob: -12.882272720336914

Token 1202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012374912621453404
    2. ' ,' → logprob: -7.001237392425537
    3. '   ' → logprob: -8.126237869262695
    4. '):' → logprob: -11.876237869262695
    5. ':' → logprob: -12.376237869262695
    6. ')' → logprob: -12.751237869262695
    7. ' ' → logprob: -13.001237869262695
    8. '+' → logprob: -13.251237869262695
    9. '-' → logprob: -13.376237869262695
    10. '```' → logprob: -13.376237869262695

Token 1203: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10021939873695374
    2. '2' → logprob: -2.350219488143921
    3. '4' → logprob: -12.4752197265625
    4. '   ' → logprob: -12.8502197265625
    5. ')' → logprob: -13.6627197265625
    6. ' ' → logprob: -13.9752197265625
    7. '  ' → logprob: -14.3502197265625
    8. '1' → logprob: -14.4127197265625
    9. '```' → logprob: -14.4752197265625
    10. '3' → logprob: -14.6002197265625

Token 1204: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00017827287956606597
    2. '4' → logprob: -9.000178337097168
    3. ' ' → logprob: -9.875178337097168
    4. '   ' → logprob: -13.750178337097168
    5. '1' → logprob: -14.125178337097168
    6. ')' → logprob: -14.625178337097168
    7. '3' → logprob: -15.312678337097168
    8. 'i' → logprob: -16.37517738342285
    9. '...' → logprob: -16.37517738342285
    10. '```' → logprob: -16.56267738342285

Token 1205: '):' (ID: 3127)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.411668598651886
    2. '):' → logprob: -1.1616685390472412
    3. '):
' → logprob: -4.03666877746582
    4. '   ' → logprob: -5.16166877746582
    5. ':
' → logprob: -6.91166877746582
    6. ',' → logprob: -10.53666877746582
    7. ')' → logprob: -10.78666877746582
    8. ' :' → logprob: -11.03666877746582
    9. '):
' → logprob: -11.66166877746582
    10. '       ' → logprob: -11.78666877746582

Token 1206: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.160644993185997
    2. '       ' → logprob: -1.9106450080871582
    3. '
' → logprob: -8.78564453125
    4. '#' → logprob: -9.03564453125
    5. 'a' → logprob: -10.03564453125
    6. '```' → logprob: -10.53564453125
    7. ':' → logprob: -11.28564453125
    8. '<|end|>' → logprob: -11.41064453125
    9. '[' → logprob: -11.53564453125
    10. '   ' → logprob: -12.16064453125

Token 1207: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02464170940220356
    2. '       ' → logprob: -3.774641752243042
    3. '#' → logprob: -7.024641513824463
    4. 'a' → logprob: -8.024641990661621
    5. '```' → logprob: -9.774641990661621
    6. '
' → logprob: -10.149641990661621
    7. '#a' → logprob: -10.899641990661621
    8. ':
' → logprob: -11.024641990661621
    9. ':' → logprob: -11.149641990661621
    10. '    
' → logprob: -12.399641990661621

Token 1208: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012338228523731232
    2. '#' → logprob: -4.637338161468506
    3. '       ' → logprob: -6.262338161468506
    4. 'a' → logprob: -7.762338161468506
    5. 'for' → logprob: -9.012338638305664
    6. '
' → logprob: -9.762338638305664
    7. '```' → logprob: -10.262338638305664
    8. ' #' → logprob: -11.512338638305664
    9. '#a' → logprob: -12.137338638305664
    10. ' ' → logprob: -12.637338638305664

Token 1209: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3587692975997925
    2. 'for' → logprob: -1.8587692975997925
    3. 'range' → logprob: -3.358769416809082
    4. '#' → logprob: -3.733769416809082
    5. 'n' → logprob: -3.983769416809082
    6. 'continue' → logprob: -4.483769416809082
    7. '       ' → logprob: -4.733769416809082
    8. ' for' → logprob: -4.733769416809082
    9. ' range' → logprob: -5.108769416809082
    10. '    ' → logprob: -5.483769416809082

Token 1210: ''arr' (ID: 49695)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.099299669265747
    2. 'n' → logprob: -1.849299669265747
    3. '[-' → logprob: -1.974299669265747
    4. '[i' → logprob: -2.849299669265747
    5. 'for' → logprob: -2.974299669265747
    6. '[' → logprob: -3.099299669265747
    7. '   ' → logprob: -3.224299669265747
    8. 'range' → logprob: -3.349299669265747
    9. '[:-' → logprob: -3.599299669265747
    10. 'e' → logprob: -3.974299669265747

Token 1211: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.005302538629621267
    2. 'ete' → logprob: -5.380302429199219
    3. 'ète' → logprob: -7.630302429199219
    4. 'êt' → logprob: -9.255302429199219
    5. 'ê' → logprob: -11.255302429199219
    6. 'ive' → logprob: -11.255302429199219
    7. 'rete' → logprob: -11.255302429199219
    8. 'te' → logprob: -11.255302429199219
    9. 'ange' → logprob: -11.630302429199219
    10. 'e' → logprob: -12.005302429199219

Token 1212: ' à' (ID: 1221)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1472017616033554
    2. '   ' → logprob: -2.0222017765045166
    3. ':
' → logprob: -6.3972015380859375
    4. '       ' → logprob: -6.8972015380859375
    5. ' at' → logprob: -7.8972015380859375
    6. '=' → logprob: -8.522201538085938
    7. '<|end|>' → logprob: -8.897201538085938
    8. ',' → logprob: -9.147201538085938
    9. 'in' → logprob: -9.397201538085938
    10. 'n' → logprob: -9.522201538085938

Token 1213: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014307122677564621
    2. ' n' → logprob: -4.264307022094727
    3. '   ' → logprob: -10.014307022094727
    4. '(n' → logprob: -10.264307022094727
    5. 'range' → logprob: -10.264307022094727
    6. ' ' → logprob: -11.764307022094727
    7. ' range' → logprob: -12.014307022094727
    8. 'i' → logprob: -12.639307022094727
    9. '	n' → logprob: -13.139307022094727
    10. '2' → logprob: -13.514307022094727

Token 1214: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.015025920234620571
    2. ' -' → logprob: -4.765026092529297
    3. '   ' → logprob: -5.390026092529297
    4. ',' → logprob: -6.515026092529297
    5. ' ' → logprob: -8.765026092529297
    6. '```' → logprob: -9.015026092529297
    7. '
' → logprob: -10.640026092529297
    8. ')' → logprob: -11.390026092529297
    9. '       ' → logprob: -11.640026092529297
    10. '  ' → logprob: -12.015026092529297

Token 1215: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.18033169209957123
    2. '2' → logprob: -1.8053317070007324
    3. '3' → logprob: -7.555331707000732
    4. '
' → logprob: -11.055331230163574
    5. '```' → logprob: -11.055331230163574
    6. '6' → logprob: -11.680331230163574
    7. ' ' → logprob: -11.930331230163574
    8. '-' → logprob: -12.180331230163574
    9. '   ' → logprob: -12.555331230163574
    10. '1' → logprob: -12.930331230163574

Token 1216: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06842955201864243
    2. ':
' → logprob: -3.068429470062256
    3. '   ' → logprob: -3.943429470062256
    4. '```' → logprob: -8.943429946899414
    5. '       ' → logprob: -9.943429946899414
    6. ',' → logprob: -10.443429946899414
    7. 'a' → logprob: -10.568429946899414
    8. '[' → logprob: -12.318429946899414
    9. ' :' → logprob: -12.443429946899414
    10. 'for' → logprob: -13.318429946899414

Token 1217: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034170713275671005
    2. '   ' → logprob: -3.409170627593994
    3. '    ' → logprob: -8.784171104431152
    4. '        
' → logprob: -9.659171104431152
    5. '
' → logprob: -9.909171104431152
    6. '      ' → logprob: -10.159171104431152
    7. '     ' → logprob: -10.409171104431152
    8. ':' → logprob: -10.784171104431152
    9. ' ' → logprob: -10.784171104431152
    10. '           ' → logprob: -10.909171104431152

Token 1218: ' ne' (ID: 453)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.097670078277588
    2. 'i' → logprob: -1.222670078277588
    3. '   ' → logprob: -1.972670078277588
    4. ' ' → logprob: -3.222670078277588
    5. 'n' → logprob: -3.347670078277588
    6. ' range' → logprob: -3.472670078277588
    7. 'range' → logprob: -3.972670078277588
    8. ' for' → logprob: -4.097670078277588
    9. 'for' → logprob: -4.222670078277588
    10. '...' → logprob: -4.347670078277588

Token 1219: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.11837823688983917
    2. ' pas' → logprob: -2.868378162384033
    3. 'range' → logprob: -3.868378162384033
    4. ' range' → logprob: -5.118378162384033
    5. '   ' → logprob: -5.493378162384033
    6. '```' → logprob: -5.618378162384033
    7. 'avoir' → logprob: -5.743378162384033
    8. '...' → logprob: -5.993378162384033
    9. ''avoir' → logprob: -6.368378162384033
    10. ''assurer' → logprob: -6.368378162384033

Token 1220: ' dépasser' (ID: 187375)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7156950831413269
    2. 'aff' → logprob: -2.3406951427459717
    3. 'for' → logprob: -2.7156951427459717
    4. 'i' → logprob: -2.9656951427459717
    5. 'n' → logprob: -3.5906951427459717
    6. '```' → logprob: -3.5906951427459717
    7. 'mettre' → logprob: -3.7156951427459717
    8. '   ' → logprob: -3.7156951427459717
    9. '...' → logprob: -3.9656951427459717
    10. '#' → logprob: -4.090694904327393

Token 1221: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07934962958097458
    2. '       ' → logprob: -3.0793495178222656
    3. '(n' → logprob: -4.954349517822266
    4. ':' → logprob: -5.204349517822266
    5. ' ' → logprob: -5.579349517822266
    6. ' (' → logprob: -5.829349517822266
    7. 'n' → logprob: -6.329349517822266
    8. '  ' → logprob: -6.704349517822266
    9. '
' → logprob: -6.954349517822266
    10. ' n' → logprob: -7.204349517822266

Token 1222: ' indices' (ID: 30378)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.34756994247436523
    2. 'range' → logprob: -2.3475699424743652
    3. 'lim' → logprob: -3.2225699424743652
    4. 'len' → logprob: -3.3475699424743652
    5. 'indices' → logprob: -3.5975699424743652
    6. ' limites' → logprob: -4.097569942474365
    7. ' n' → logprob: -4.472569942474365
    8. 'i' → logprob: -4.597569942474365
    9. ' range' → logprob: -4.722569942474365
    10. 'bord' → logprob: -5.097569942474365

Token 1223: ' lors' (ID: 15456)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19595938920974731
    2. '       ' → logprob: -2.4459593296051025
    3. ':' → logprob: -2.6959593296051025
    4. ':
' → logprob: -3.8209593296051025
    5. 'a' → logprob: -7.445959568023682
    6. '           ' → logprob: -8.695959091186523
    7. '
' → logprob: -8.820959091186523
    8. ' a' → logprob: -9.070959091186523
    9. '```' → logprob: -9.195959091186523
    10. '[' → logprob: -9.570959091186523

Token 1224: ' du' (ID: 1462)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.2077624648809433
    2. ' de' → logprob: -2.3327624797821045
    3. 'd' → logprob: -3.2077624797821045
    4. '   ' → logprob: -3.4577624797821045
    5. 'des' → logprob: -5.207762241363525
    6. 'du' → logprob: -5.707762241363525
    7. 'range' → logprob: -6.957762241363525
    8. 'à' → logprob: -6.957762241363525
    9. ' d' → logprob: -7.082762241363525
    10. 'que' → logprob: -7.207762241363525

Token 1225: ' placement' (ID: 29002)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8298349380493164
    2. 'rem' → logprob: -1.5798349380493164
    3. 'i' → logprob: -1.8298349380493164
    4. 'bou' → logprob: -2.7048349380493164
    5. 'assign' → logprob: -3.2048349380493164
    6. 'for' → logprob: -3.3298349380493164
    7. 'aff' → logprob: -4.079834938049316
    8. 'acc' → logprob: -5.079834938049316
    9. 'iteration' → logprob: -5.204834938049316
    10. 'loop' → logprob: -5.454834938049316

Token 1226: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.051821328699588776
    2. '       ' → logprob: -3.426821231842041
    3. ':' → logprob: -4.176821231842041
    4. ':
' → logprob: -6.051821231842041
    5. 'a' → logprob: -9.1768217086792
    6. '```' → logprob: -9.9268217086792
    7. '(a' → logprob: -9.9268217086792
    8. ' a' → logprob: -10.9268217086792
    9. '[a' → logprob: -11.4268217086792
    10. '[' → logprob: -12.0518217086792

Token 1227: ' "' (ID: 392)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6883817911148071
    2. 'a' → logprob: -1.3133817911148071
    3. 'i' → logprob: -2.1883816719055176
    4. 'car' → logprob: -2.9383816719055176
    5. '"' → logprob: -3.9383816719055176
    6. 'lett' → logprob: -4.938381671905518
    7. '"a' → logprob: -5.438381671905518
    8. 'n' → logprob: -5.438381671905518
    9. '["' → logprob: -5.563381671905518
    10. 'd' → logprob: -6.063381671905518

Token 1228: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3302171230316162
    2. 'a' → logprob: -1.4552171230316162
    3. 'd' → logprob: -4.080217361450195
    4. 'i' → logprob: -4.205217361450195
    5. '"' → logprob: -5.080217361450195
    6. 'b' → logprob: -5.330217361450195
    7. 'j' → logprob: -6.955217361450195
    8. 'e' → logprob: -7.205217361450195
    9. ' c' → logprob: -7.705217361450195
    10. 'g' → logprob: -7.830217361450195

Token 1229: '"' (ID: 1)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.21355973184108734
    2. '"' → logprob: -2.338559627532959
    3. ',' → logprob: -2.588559627532959
    4. '":' → logprob: -5.213559627532959
    5. ',"' → logprob: -5.963559627532959
    6. '+' → logprob: -6.338559627532959
    7. '")' → logprob: -6.713559627532959
    8. '   ' → logprob: -6.713559627532959
    9. '][' → logprob: -6.713559627532959
    10. '[i' → logprob: -6.838559627532959

Token 1230: ' et' (ID: 859)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2303621470928192
    2. '   ' → logprob: -1.7303621768951416
    3. ':
' → logprob: -3.7303621768951416
    4. '       ' → logprob: -5.4803619384765625
    5. '):' → logprob: -8.480361938476562
    6. ' :' → logprob: -10.105361938476562
    7. '):
' → logprob: -10.730361938476562
    8. '    ' → logprob: -11.480361938476562
    9. ':

' → logprob: -11.480361938476562
    10. '```' → logprob: -11.605361938476562

Token 1231: ' "' (ID: 392)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09174104034900665
    2. '2' → logprob: -2.7167410850524902
    3. 'n' → logprob: -4.59174108505249
    4. '4' → logprob: -5.46674108505249
    5. '   ' → logprob: -5.71674108505249
    6. ' i' → logprob: -6.21674108505249
    7. '#' → logprob: -7.71674108505249
    8. 'a' → logprob: -7.71674108505249
    9. '1' → logprob: -8.341740608215332
    10. '```' → logprob: -8.841740608215332

Token 1232: 'd' (ID: 67)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009331957437098026
    2. ' i' → logprob: -5.384332180023193
    3. 'd' → logprob: -5.634332180023193
    4. '   ' → logprob: -7.509332180023193
    5. 'j' → logprob: -8.134331703186035
    6. ' ' → logprob: -9.509331703186035
    7. ' d' → logprob: -9.884331703186035
    8. '1' → logprob: -10.384331703186035
    9. '
' → logprob: -10.759331703186035
    10. 'n' → logprob: -10.884331703186035

Token 1233: '"
' (ID: 1092)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3779698312282562
    2. '   ' → logprob: -1.8779698610305786
    3. '):' → logprob: -2.002969741821289
    4. ':
' → logprob: -4.002969741821289
    5. '):
' → logprob: -4.877969741821289
    6. ')' → logprob: -7.627969741821289
    7. '":' → logprob: -8.627969741821289
    8. '       ' → logprob: -8.627969741821289
    9. '```' → logprob: -9.377969741821289
    10. ',' → logprob: -11.252969741821289

Token 1234: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5940486788749695
    2. '       ' → logprob: -0.8440486788749695
    3. ':' → logprob: -4.219048500061035
    4. 'a' → logprob: -6.719048500061035
    5. '```' → logprob: -6.719048500061035
    6. ':
' → logprob: -7.594048500061035
    7. '
' → logprob: -8.719048500061035
    8. '           ' → logprob: -10.719048500061035
    9. '[' → logprob: -10.719048500061035
    10. '[a' → logprob: -10.844048500061035

Token 1235: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.49200889468193054
    2. '       ' → logprob: -1.492008924484253
    3. '   ' → logprob: -1.867008924484253
    4. '#' → logprob: -4.742008686065674
    5. ' a' → logprob: -8.867009162902832
    6. 'for' → logprob: -9.867009162902832
    7. '#a' → logprob: -10.117009162902832
    8. '
' → logprob: -10.492009162902832
    9. '           ' → logprob: -11.117009162902832
    10. '```' → logprob: -11.242009162902832

Token 1236: '[i' (ID: 1768)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.3165285587310791
    2. '[i' → logprob: -1.316528558731079
    3. '[-' → logprob: -5.9415283203125
    4. '[' → logprob: -8.3165283203125
    5. 'n' → logprob: -8.6915283203125
    6. '[a' → logprob: -9.0665283203125
    7. 'i' → logprob: -9.6915283203125
    8. 'a' → logprob: -11.8165283203125
    9. '   ' → logprob: -12.4415283203125
    10. '[
' → logprob: -12.5040283203125

Token 1237: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.17277784645557404
    2. '+' → logprob: -1.9227778911590576
    3. '][-' → logprob: -4.5477776527404785
    4. '[i' → logprob: -7.5477776527404785
    5. '   ' → logprob: -7.6727776527404785
    6. ']' → logprob: -8.672778129577637
    7. ' ][' → logprob: -8.672778129577637
    8. '+i' → logprob: -9.422778129577637
    9. '[-' → logprob: -9.547778129577637
    10. ' ' → logprob: -9.547778129577637

Token 1238: 'i' (ID: 72)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.013316809199750423
    2. 'i' → logprob: -4.388316631317139
    3. '[n' → logprob: -8.138317108154297
    4. '[i' → logprob: -9.138317108154297
    5. '   ' → logprob: -9.388317108154297
    6. '+' → logprob: -9.763317108154297
    7. '-' → logprob: -10.013317108154297
    8. 'a' → logprob: -10.138317108154297
    9. ']' → logprob: -10.763317108154297
    10. ' ' → logprob: -10.888317108154297

Token 1239: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.052238237112760544
    2. '],' → logprob: -3.0522382259368896
    3. ']' → logprob: -6.052238464355469
    4. '][' → logprob: -7.802238464355469
    5. ']+' → logprob: -8.427238464355469
    6. '   ' → logprob: -8.427238464355469
    7. ' +' → logprob: -8.802238464355469
    8. '][-' → logprob: -9.052238464355469
    9. '[' → logprob: -9.427238464355469
    10. '-' → logprob: -10.677238464355469

Token 1240: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.016160588711500168
    2. '1' → logprob: -4.391160488128662
    3. '3' → logprob: -6.016160488128662
    4. '4' → logprob: -7.016160488128662
    5. '   ' → logprob: -9.70366096496582
    6. '
' → logprob: -10.14116096496582
    7. ']' → logprob: -10.39116096496582
    8. '0' → logprob: -10.45366096496582
    9. ' ' → logprob: -10.76616096496582
    10. '5' → logprob: -11.01616096496582

Token 1241: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6421040892601013
    2. '],' → logprob: -0.7671040892601013
    3. ']=' → logprob: -4.892104148864746
    4. ',' → logprob: -7.017104148864746
    5. '=' → logprob: -7.017104148864746
    6. ' ],' → logprob: -10.142104148864746
    7. ' ]' → logprob: -10.642104148864746
    8. '[' → logprob: -11.017104148864746
    9. ' =' → logprob: -11.142104148864746
    10. ']="' → logprob: -11.517104148864746

Token 1242: ' a' (ID: 261)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4245910048484802
    2. 'a' → logprob: -2.299591064453125
    3. 'c' → logprob: -2.549591064453125
    4. ' "' → logprob: -3.049591064453125
    5. '=' → logprob: -3.174591064453125
    6. '"a' → logprob: -3.299591064453125
    7. ' c' → logprob: -4.424591064453125
    8. ' a' → logprob: -4.674591064453125
    9. ' =' → logprob: -4.799591064453125
    10. 'b' → logprob: -5.924591064453125

Token 1243: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00012118533049942926
    2. '][' → logprob: -9.250121116638184
    3. '[a' → logprob: -11.875121116638184
    4. '[' → logprob: -12.625121116638184
    5. '```' → logprob: -12.750121116638184
    6. '[j' → logprob: -13.125121116638184
    7. ']' → logprob: -13.500121116638184
    8. ' [' → logprob: -13.750121116638184
    9. '
' → logprob: -14.000121116638184
    10. '[
' → logprob: -14.000121116638184

Token 1244: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.014612840488553047
    2. '+' → logprob: -4.639612674713135
    3. '[i' → logprob: -5.389612674713135
    4. ']' → logprob: -9.389613151550293
    5. '   ' → logprob: -10.014613151550293
    6. '[' → logprob: -10.264613151550293
    7. '+i' → logprob: -10.514613151550293
    8. ' ][' → logprob: -10.514613151550293
    9. '+[' → logprob: -11.389613151550293
    10. '```' → logprob: -11.514613151550293

Token 1245: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.641841820150148e-05
    2. '[i' → logprob: -11.50002670288086
    3. ' i' → logprob: -12.00002670288086
    4. '   ' → logprob: -12.87502670288086
    5. '	i' → logprob: -12.87502670288086
    6. '1' → logprob: -13.87502670288086
    7. ' ' → logprob: -14.68752670288086
    8. '+' → logprob: -14.93752670288086
    9. '(i' → logprob: -14.93752670288086
    10. '...' → logprob: -15.18752670288086

Token 1246: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.466968650580384e-05
    2. '[' → logprob: -10.875054359436035
    3. ' +' → logprob: -11.000054359436035
    4. '1' → logprob: -12.125054359436035
    5. '+
' → logprob: -12.375054359436035
    6. ']+' → logprob: -12.375054359436035
    7. '+i' → logprob: -13.625054359436035
    8. '+[' → logprob: -14.000054359436035
    9. '   ' → logprob: -14.375054359436035
    10. '
' → logprob: -15.000054359436035

Token 1247: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.037835580878891e-05
    2. '2' → logprob: -10.50005054473877
    3. '1' → logprob: -11.00005054473877
    4. '4' → logprob: -13.56255054473877
    5. ' ' → logprob: -13.56255054473877
    6. ']' → logprob: -14.50005054473877
    7. '```' → logprob: -14.50005054473877
    8. '+' → logprob: -14.68755054473877
    9. '
' → logprob: -15.00005054473877
    10. '３' → logprob: -15.68755054473877

Token 1248: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21412263810634613
    2. ' =' → logprob: -1.7141226530075073
    3. ',' → logprob: -4.589122772216797
    4. ']' → logprob: -6.214122772216797
    5. ']=' → logprob: -8.089122772216797
    6. ' ,' → logprob: -9.839122772216797
    7. '],' → logprob: -9.964122772216797
    8. '   ' → logprob: -10.214122772216797
    9. '    ' → logprob: -12.714122772216797
    10. ' ' → logprob: -12.714122772216797

Token 1249: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0021893989760428667
    2. ' =' → logprob: -6.127189636230469
    3. ',' → logprob: -12.377189636230469
    4. '=
' → logprob: -16.75218963623047
    5. '   ' → logprob: -17.00218963623047
    6. '=

' → logprob: -17.50218963623047
    7. ' ' → logprob: -18.00218963623047
    8. ')' → logprob: -19.25218963623047
    9. '='' → logprob: -19.37718963623047
    10. '="' → logprob: -19.37718963623047

Token 1250: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.003927845042198896
    2. ' "' → logprob: -6.503927707672119
    3. ''' → logprob: -6.753927707672119
    4. 'c' → logprob: -7.503927707672119
    5. '".' → logprob: -8.003928184509277
    6. '"d' → logprob: -8.503928184509277
    7. '"a' → logprob: -10.128928184509277
    8. '"."' → logprob: -10.503928184509277
    9. '"x' → logprob: -11.253928184509277
    10. ' '' → logprob: -11.503928184509277

Token 1251: 'c' (ID: 66)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.049850668758153915
    2. 'c' → logprob: -3.1748507022857666
    3. ''' → logprob: -5.2998504638671875
    4. '"d' → logprob: -6.6748504638671875
    5. 'd' → logprob: -8.924850463867188
    6. '"a' → logprob: -9.049850463867188
    7. '".' → logprob: -9.799850463867188
    8. '"."' → logprob: -10.049850463867188
    9. ' "' → logprob: -10.174850463867188
    10. ''d' → logprob: -10.299850463867188

Token 1252: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.07086105644702911
    2. ',' → logprob: -2.6958611011505127
    3. '"' → logprob: -8.070860862731934
    4. '","' → logprob: -8.320860862731934
    5. ' ",' → logprob: -8.695860862731934
    6. ' ,' → logprob: -9.195860862731934
    7. '',' → logprob: -10.070860862731934
    8. ',"' → logprob: -10.945860862731934
    9. ',",' → logprob: -11.570860862731934
    10. 'a' → logprob: -11.695860862731934

Token 1253: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.009327941574156284
    2. '"d' → logprob: -4.8843278884887695
    3. ' "' → logprob: -7.0093278884887695
    4. 'd' → logprob: -7.3843278884887695
    5. ' d' → logprob: -9.00932788848877
    6. ''' → logprob: -10.00932788848877
    7. ' ' → logprob: -11.38432788848877
    8. ''d' → logprob: -12.38432788848877
    9. ' ' → logprob: -13.25932788848877
    10. 's' → logprob: -13.63432788848877

Token 1254: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.006346445996314287
    2. '"d' → logprob: -5.256346225738525
    3. ''d' → logprob: -7.506346225738525
    4. 'c' → logprob: -7.881346225738525
    5. '"' → logprob: -8.756346702575684
    6. '	d' → logprob: -11.756346702575684
    7. ' d' → logprob: -12.881346702575684
    8. '""' → logprob: -12.881346702575684
    9. '`' → logprob: -12.881346702575684
    10. ''' → logprob: -13.381346702575684

Token 1255: '"
' (ID: 1092)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6219303607940674
    2. '<|end|>' → logprob: -1.3719303607940674
    3. '   ' → logprob: -1.6219303607940674
    4. ')' → logprob: -5.371930122375488
    5. '
' → logprob: -6.371930122375488
    6. ',' → logprob: -6.746930122375488
    7. ' ' → logprob: -6.996930122375488
    8. 'a' → logprob: -7.246930122375488
    9. '<|end|>' → logprob: -7.246930122375488
    10. '```' → logprob: -7.746930122375488

Token 1256: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01805441826581955
    2. '   ' → logprob: -4.518054485321045
    3. 'a' → logprob: -5.018054485321045
    4. ' a' → logprob: -8.643054008483887
    5. ' ' → logprob: -9.893054008483887
    6. '<|end|>' → logprob: -10.018054008483887
    7. '        
' → logprob: -10.268054008483887
    8. '```' → logprob: -11.018054008483887
    9. '	a' → logprob: -11.768054008483887
    10. '           ' → logprob: -11.893054008483887

Token 1257: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.05603623390197754
    2. '       ' → logprob: -3.3060362339019775
    3. ' a' → logprob: -4.556035995483398
    4. '   ' → logprob: -4.931035995483398
    5. '	a' → logprob: -9.181035995483398
    6. '```' → logprob: -12.931035995483398
    7. ' ' → logprob: -13.306035995483398
    8. '           ' → logprob: -13.806035995483398
    9. '        ' → logprob: -14.181035995483398
    10. '  ' → logprob: -14.306035995483398

Token 1258: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.650518920039758e-06
    2. '[' → logprob: -13.875003814697266
    3. '```' → logprob: -13.875003814697266
    4. 'i' → logprob: -14.500003814697266
    5. '[a' → logprob: -15.000003814697266
    6. '[
' → logprob: -15.500003814697266
    7. '[n' → logprob: -16.000003814697266
    8. '   ' → logprob: -16.500003814697266
    9. 'a' → logprob: -16.500003814697266
    10. '
' → logprob: -16.625003814697266

Token 1259: '+' (ID: 10)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4617423713207245
    2. '][' → logprob: -1.2117424011230469
    3. '+' → logprob: -2.836742401123047
    4. '[' → logprob: -4.461742401123047
    5. '   ' → logprob: -7.211742401123047
    6. '[j' → logprob: -8.586742401123047
    7. '+i' → logprob: -8.961742401123047
    8. '+[' → logprob: -9.086742401123047
    9. '```' → logprob: -9.461742401123047
    10. ' ' → logprob: -9.586742401123047

Token 1260: '1' (ID: 16)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5239846110343933
    2. '1' → logprob: -1.148984670639038
    3. '2' → logprob: -3.148984670639038
    4. 'i' → logprob: -3.773984670639038
    5. '[' → logprob: -3.898984670639038
    6. '3' → logprob: -5.773984432220459
    7. '(i' → logprob: -6.648984432220459
    8. '][' → logprob: -9.398984909057617
    9. '+' → logprob: -10.023984909057617
    10. '```' → logprob: -10.023984909057617

Token 1261: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.4746822416782379
    2. '[i' → logprob: -0.9746822118759155
    3. '[' → logprob: -7.849682331085205
    4. '   ' → logprob: -9.724681854248047
    5. ']' → logprob: -9.849681854248047
    6. ' ][' → logprob: -10.224681854248047
    7. '}[' → logprob: -11.224681854248047
    8. ' [' → logprob: -11.349681854248047
    9. '[a' → logprob: -12.099681854248047
    10. '```' → logprob: -12.224681854248047

Token 1262: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006730287801474333
    2. '[i' → logprob: -5.006730079650879
    3. ' i' → logprob: -11.381730079650879
    4. '][' → logprob: -13.131730079650879
    5. '	i' → logprob: -14.756730079650879
    6. ',i' → logprob: -15.256730079650879
    7. '   ' → logprob: -15.256730079650879
    8. '```' → logprob: -15.881730079650879
    9. ' ' → logprob: -16.381731033325195
    10. '
' → logprob: -16.506731033325195

Token 1263: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3499278426170349
    2. '][' → logprob: -1.2249279022216797
    3. '[' → logprob: -6.72492790222168
    4. ']' → logprob: -9.72492790222168
    5. '   ' → logprob: -9.84992790222168
    6. '+[' → logprob: -10.09992790222168
    7. ' +' → logprob: -10.34992790222168
    8. ' ][' → logprob: -10.72492790222168
    9. '1' → logprob: -10.84992790222168
    10. '[i' → logprob: -11.34992790222168

Token 1264: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001870902779046446
    2. '3' → logprob: -9.250186920166016
    3. ' ' → logprob: -9.625186920166016
    4. '1' → logprob: -11.000186920166016
    5. '0' → logprob: -12.312686920166016
    6. '+' → logprob: -13.500186920166016
    7. '   ' → logprob: -14.250186920166016
    8. '  ' → logprob: -15.437686920166016
    9. '4' → logprob: -15.687686920166016
    10. '
' → logprob: -15.750186920166016

Token 1265: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.03930042311549187
    2. ']' → logprob: -3.5393004417419434
    3. ',' → logprob: -4.664300441741943
    4. ' ],' → logprob: -10.664299964904785
    5. ' ,' → logprob: -11.164299964904785
    6. '   ' → logprob: -11.289299964904785
    7. '"],' → logprob: -11.414299964904785
    8. '",' → logprob: -12.414299964904785
    9. '),' → logprob: -13.039299964904785
    10. '},' → logprob: -13.289299964904785

Token 1266: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.25215691328048706
    2. ' a' → logprob: -1.5021569728851318
    3. '"a' → logprob: -8.752157211303711
    4. '	a' → logprob: -10.502157211303711
    5. '"' → logprob: -10.752157211303711
    6. '[i' → logprob: -11.627157211303711
    7. '[a' → logprob: -12.127157211303711
    8. ' ' → logprob: -13.877157211303711
    9. ''a' → logprob: -14.127157211303711
    10. ' "' → logprob: -14.502157211303711

Token 1267: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004043361986987293
    2. 'i' → logprob: -7.875404357910156
    3. '[' → logprob: -11.375404357910156
    4. '1' → logprob: -11.625404357910156
    5. ' [' → logprob: -13.750404357910156
    6. '+' → logprob: -13.875404357910156
    7. '```' → logprob: -14.750404357910156
    8. 'a' → logprob: -14.875404357910156
    9. '][' → logprob: -15.125404357910156
    10. '+i' → logprob: -15.750404357910156

Token 1268: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.029183337464928627
    2. '[' → logprob: -3.6541833877563477
    3. '[i' → logprob: -5.904183387756348
    4. '+[' → logprob: -9.279183387756348
    5. '+i' → logprob: -10.654183387756348
    6. '```' → logprob: -11.154183387756348
    7. '][' → logprob: -12.154183387756348
    8. '1' → logprob: -12.279183387756348
    9. ' +' → logprob: -12.904183387756348
    10. '[
' → logprob: -13.279183387756348

Token 1269: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.625000953674316
    3. '3' → logprob: -15.375000953674316
    4. '   ' → logprob: -17.125
    5. '```' → logprob: -17.25
    6. '[' → logprob: -17.5
    7. '+' → logprob: -17.625
    8. 'i' → logprob: -18.75
    9. '2' → logprob: -19.25
    10. '[i' → logprob: -19.8125

Token 1270: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.062072329223155975
    2. '][' → logprob: -2.812072277069092
    3. '[' → logprob: -9.68707275390625
    4. '```' → logprob: -11.56207275390625
    5. '}[' → logprob: -11.81207275390625
    6. '   ' → logprob: -12.18707275390625
    7. ']' → logprob: -12.18707275390625
    8. ')[' → logprob: -12.43707275390625
    9. ' [' → logprob: -12.93707275390625
    10. '[ind' → logprob: -13.31207275390625

Token 1271: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005072805215604603
    2. '[i' → logprob: -7.625507354736328
    3. ' i' → logprob: -11.000507354736328
    4. '   ' → logprob: -14.250507354736328
    5. '{i' → logprob: -14.250507354736328
    6. '(i' → logprob: -14.750507354736328
    7. ' ' → logprob: -15.250507354736328
    8. '	i' → logprob: -15.625507354736328
    9. '```' → logprob: -15.625507354736328
    10. ''i' → logprob: -16.000507354736328

Token 1272: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.4617256056226324e-05
    2. '3' → logprob: -11.750014305114746
    3. '[' → logprob: -13.250014305114746
    4. '+
' → logprob: -13.500014305114746
    5. ' +' → logprob: -13.625014305114746
    6. '+i' → logprob: -14.000014305114746
    7. '+[' → logprob: -14.750014305114746
    8. '1' → logprob: -15.125014305114746
    9. '+]' → logprob: -15.250014305114746
    10. '+c' → logprob: -15.625014305114746

Token 1273: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '1' → logprob: -19.25
    4. '۳' → logprob: -19.5
    5. '   ' → logprob: -20.5
    6. '৩' → logprob: -20.625
    7. '2' → logprob: -20.75
    8. '```' → logprob: -21.0
    9. '३' → logprob: -21.3125
    10. '' → logprob: -21.375

Token 1274: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2640262544155121
    2. ' =' → logprob: -1.5140262842178345
    3. ']' → logprob: -4.514026165008545
    4. ']=' → logprob: -6.889026165008545
    5. ',' → logprob: -11.264026641845703
    6. ' ]' → logprob: -11.389026641845703
    7. '   ' → logprob: -11.639026641845703
    8. '],' → logprob: -12.639026641845703
    9. ' ' → logprob: -12.639026641845703
    10. ')' → logprob: -12.764026641845703

Token 1275: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014163863845169544
    2. ' =' → logprob: -4.264163970947266
    3. '   ' → logprob: -15.764163970947266
    4. ' ' → logprob: -16.639163970947266
    5. ']=' → logprob: -17.514163970947266
    6. '=
' → logprob: -17.514163970947266
    7. ',' → logprob: -17.889163970947266
    8. '="' → logprob: -18.139163970947266
    9. ']' → logprob: -18.264163970947266
    10. '=

' → logprob: -18.639163970947266

Token 1276: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0010803256882354617
    2. ' "' → logprob: -7.501080513000488
    3. '"d' → logprob: -8.001080513000488
    4. ''' → logprob: -9.001080513000488
    5. 'c' → logprob: -9.876080513000488
    6. ' c' → logprob: -12.626080513000488
    7. '"s' → logprob: -12.751080513000488
    8. '"C' → logprob: -13.126080513000488
    9. '["' → logprob: -13.501080513000488
    10. '"x' → logprob: -13.876080513000488

Token 1277: 'c' (ID: 66)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.027759738266468048
    2. 'c' → logprob: -3.6527597904205322
    3. '"d' → logprob: -6.902759552001953
    4. ''' → logprob: -7.777759552001953
    5. 'd' → logprob: -11.402759552001953
    6. ' "' → logprob: -12.027759552001953
    7. ')c' → logprob: -12.652759552001953
    8. '	c' → logprob: -12.902759552001953
    9. ''d' → logprob: -13.277759552001953
    10. '["' → logprob: -13.777759552001953

Token 1278: '",' (ID: 672)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3504786789417267
    2. '",' → logprob: -1.2254786491394043
    3. ' ,' → logprob: -7.225478649139404
    4. '","' → logprob: -7.350478649139404
    5. '"' → logprob: -8.600479125976562
    6. ',"' → logprob: -8.850479125976562
    7. ',",' → logprob: -9.600479125976562
    8. ' ",' → logprob: -9.725479125976562
    9. '`,' → logprob: -10.475479125976562
    10. '       ' → logprob: -10.600479125976562

Token 1279: ' "' (ID: 392)
  Prédit: '"d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"d' → logprob: -0.005556744057685137
    2. 'd' → logprob: -5.255556583404541
    3. '"' → logprob: -8.6305570602417
    4. ' d' → logprob: -9.2555570602417
    5. ''d' → logprob: -10.5055570602417
    6. ' "' → logprob: -11.3805570602417
    7. '	d' → logprob: -12.3805570602417
    8. '>d' → logprob: -13.3805570602417
    9. ' ' → logprob: -13.8805570602417
    10. ')d' → logprob: -14.5055570602417

Token 1280: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -3.941161776310764e-05
    2. '"d' → logprob: -10.250039100646973
    3. ''d' → logprob: -13.000039100646973
    4. '"' → logprob: -14.125039100646973
    5. ' d' → logprob: -14.125039100646973
    6. '	d' → logprob: -16.00004005432129
    7. '`' → logprob: -16.87504005432129
    8. ')d' → logprob: -16.87504005432129
    9. '   ' → logprob: -17.12504005432129
    10. '```' → logprob: -17.25004005432129

Token 1281: '"
' (ID: 1092)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1282: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5727214217185974
    2. 'print' → logprob: -1.5727214813232422
    3. '   ' → logprob: -1.5727214813232422
    4. '       ' → logprob: -4.947721481323242
    5. '#' → logprob: -5.822721481323242
    6. 'a' → logprob: -5.822721481323242
    7. '<|end|>' → logprob: -5.822721481323242
    8. ' for' → logprob: -6.072721481323242
    9. 'exit' → logprob: -6.947721481323242
    10. '```' → logprob: -7.822721481323242

Token 1283: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4461175203323364
    2. 'for' → logprob: -1.5711175203323364
    3. 'a' → logprob: -1.9461175203323364
    4. '#' (adapté à ' #') → logprob: -5.196117401123047
    5. '```' → logprob: -5.946117401123047
    6. ' for' → logprob: -8.071117401123047
    7. '       ' → logprob: -8.071117401123047
    8. 'i' → logprob: -8.821117401123047
    9. 'n' → logprob: -9.446117401123047
    10. 'print' → logprob: -9.946117401123047

Token 1284: ' On' (ID: 2160)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.002533452119678259
    2. 'for' → logprob: -6.627533435821533
    3. '   ' → logprob: -7.127533435821533
    4. '#' → logprob: -9.002533912658691
    5. ' a' → logprob: -9.002533912658691
    6. 'i' → logprob: -9.627533912658691
    7. 'if' → logprob: -10.127533912658691
    8. '       ' → logprob: -10.627533912658691
    9. '```' → logprob: -11.627533912658691
    10. '
' → logprob: -12.502533912658691

Token 1285: ' traite' (ID: 180696)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.5623424053192139
    2. '[i' → logprob: -1.5623424053192139
    3. 'for' → logprob: -2.187342405319214
    4. 'a' → logprob: -2.812342405319214
    5. '[a' → logprob: -4.437342643737793
    6. '[' → logprob: -4.437342643737793
    7. '#' → logprob: -4.937342643737793
    8. '[n' → logprob: -5.062342643737793
    9. '   ' → logprob: -5.312342643737793
    10. 'n' → logprob: -6.312342643737793

Token 1286: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.8945595026016235
    2. '   ' → logprob: -1.8945595026016235
    3. ' la' → logprob: -2.144559383392334
    4. 'a' → logprob: -2.269559383392334
    5. ' a' → logprob: -2.519559383392334
    6. ' ' → logprob: -3.019559383392334
    7. ' l' → logprob: -3.269559383392334
    8. 'l' → logprob: -4.519559383392334
    9. ' the' → logprob: -4.894559383392334
    10. '[' → logprob: -5.519559383392334

Token 1287: ' deux' (ID: 10301)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.6190439462661743
    2. 'i' → logprob: -1.7440439462661743
    3. 'last' → logprob: -1.9940439462661743
    4. 'de' → logprob: -2.1190438270568848
    5. '-' → logprob: -2.3690438270568848
    6. '2' → logprob: -2.6190438270568848
    7. 'dern' → logprob: -2.8690438270568848
    8. 'n' → logprob: -2.9940438270568848
    9. '[-' → logprob: -3.3690438270568848
    10. ' deux' → logprob: -4.244043827056885

Token 1288: ' dernières' (ID: 59307)
  Prédit: 'der'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'der' → logprob: -0.9209602475166321
    2. ' dernières' → logprob: -0.9209602475166321
    3. 'dern' → logprob: -1.7959601879119873
    4. '[-' → logprob: -4.670960426330566
    5. 'l' → logprob: -4.920960426330566
    6. ' derniers' → logprob: -5.670960426330566
    7. ' lignes' → logprob: -5.670960426330566
    8. ' derni' → logprob: -5.795960426330566
    9. 'Dern' → logprob: -6.170960426330566
    10. ' dernière' → logprob: -6.295960426330566

Token 1289: ' lignes' (ID: 81687)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3911452293395996
    2. ' lignes' → logprob: -1.1411452293395996
    3. 'ligne' → logprob: -6.1411452293396
    4. 'for' → logprob: -6.8911452293396
    5. ' lines' → logprob: -7.8911452293396
    6. 'lines' → logprob: -8.016145706176758
    7. ' ligne' → logprob: -9.016145706176758
    8. 'i' → logprob: -9.516145706176758
    9. ' lign' → logprob: -10.141145706176758
    10. '   ' → logprob: -10.391145706176758

Token 1290: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02002626471221447
    2. 'a' → logprob: -4.020026206970215
    3. ' a' → logprob: -6.395026206970215
    4. ' for' → logprob: -9.395026206970215
    5. 'for' → logprob: -9.895026206970215
    6. '
' → logprob: -10.270026206970215
    7. ',' → logprob: -10.895026206970215
    8. '```' → logprob: -12.270026206970215
    9. ' ' → logprob: -12.770026206970215
    10. 'n' → logprob: -13.395026206970215

Token 1291: 'n' (ID: 77)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.006879118736833334
    2. '   ' → logprob: -5.2568793296813965
    3. 'for' → logprob: -6.5068793296813965
    4. ' a' → logprob: -9.631878852844238
    5. 'n' → logprob: -10.131878852844238
    6. ')' → logprob: -10.631878852844238
    7. '```' → logprob: -11.631878852844238
    8. ' for' → logprob: -12.381878852844238
    9. 'i' → logprob: -13.631878852844238
    10. '...' → logprob: -13.756878852844238

Token 1292: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04951753467321396
    2. '[-' → logprob: -3.0495176315307617
    3. '   ' → logprob: -8.049517631530762
    4. '][-' → logprob: -8.924517631530762
    5. '```' → logprob: -9.424517631530762
    6. '[i' → logprob: -9.424517631530762
    7. '
' → logprob: -9.549517631530762
    8. ' -' → logprob: -10.049517631530762
    9. 'n' → logprob: -10.049517631530762
    10. 'a' → logprob: -10.174517631530762

Token 1293: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0034031171817332506
    2. '4' → logprob: -6.628403186798096
    3. '3' → logprob: -6.753403186798096
    4. '1' → logprob: -7.128403186798096
    5. '```' → logprob: -9.878402709960938
    6. '-' → logprob: -10.878402709960938
    7. '
' → logprob: -11.128402709960938
    8. '   ' → logprob: -12.315902709960938
    9. 'n' → logprob: -12.690902709960938
    10. ' ' → logprob: -13.128402709960938

Token 1294: ' et' (ID: 859)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.08946815878152847
    2. ')' → logprob: -3.464468240737915
    3. ']' → logprob: -3.839468240737915
    4. ')[' → logprob: -4.589468002319336
    5. '][-' → logprob: -4.714468002319336
    6. '   ' → logprob: -5.089468002319336
    7. '],' → logprob: -6.714468002319336
    8. '),' → logprob: -6.714468002319336
    9. ',' → logprob: -6.714468002319336
    10. ')
' → logprob: -7.589468002319336

Token 1295: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.007627330720424652
    2. '   ' → logprob: -5.882627487182617
    3. '[n' → logprob: -5.882627487182617
    4. ' n' → logprob: -6.382627487182617
    5. ')' → logprob: -10.007627487182617
    6. 'i' → logprob: -10.382627487182617
    7. '0' → logprob: -10.382627487182617
    8. '...' → logprob: -10.382627487182617
    9. 'a' → logprob: -10.507627487182617
    10. '
' → logprob: -10.507627487182617

Token 1296: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0008991966024041176
    2. '[-' → logprob: -8.125899314880371
    3. '][' → logprob: -8.625899314880371
    4. ')[' → logprob: -9.000899314880371
    5. '```' → logprob: -9.375899314880371
    6. '][-' → logprob: -9.750899314880371
    7. ')' → logprob: -9.875899314880371
    8. '[' → logprob: -10.125899314880371
    9. ' -' → logprob: -10.500899314880371
    10. '   ' → logprob: -11.625899314880371

Token 1297: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0626038983464241
    2. '2' → logprob: -2.8126039505004883
    3. '3' → logprob: -7.437603950500488
    4. '4' → logprob: -10.437603950500488
    5. '```' → logprob: -11.312603950500488
    6. ' ' → logprob: -13.812603950500488
    7. '
' → logprob: -14.125103950500488
    8. '   ' → logprob: -14.437603950500488
    9. '１' → logprob: -15.000103950500488
    10. '``' → logprob: -15.062603950500488

Token 1298: ')' (ID: 8)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025014597922563553
    2. ')' → logprob: -7.002501487731934
    3. ',' → logprob: -7.127501487731934
    4. '][' → logprob: -8.502501487731934
    5. 'a' → logprob: -8.627501487731934
    6. '[a' → logprob: -9.252501487731934
    7. 'for' → logprob: -9.877501487731934
    8. ')[' → logprob: -10.127501487731934
    9. ']' → logprob: -10.377501487731934
    10. '),' → logprob: -10.627501487731934

Token 1299: ' sépar' (ID: 97160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06289062649011612
    2. 'a' → logprob: -3.8128905296325684
    3. '
' → logprob: -4.062890529632568
    4. 'for' → logprob: -4.937890529632568
    5. ':' → logprob: -5.187890529632568
    6. ' for' → logprob: -5.562890529632568
    7. '```' → logprob: -5.812890529632568
    8. ' a' → logprob: -8.062891006469727
    9. 'n' → logprob: -8.062891006469727
    10. '[' → logprob: -8.187891006469727

Token 1300: 'ément' (ID: 17645)
  Prédit: 'ément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ément' → logprob: -0.0006614457233808935
    2. 'é' → logprob: -7.500661373138428
    3. 'ment' → logprob: -9.500661849975586
    4. 'ement' → logprob: -10.750661849975586
    5. 'ém' → logprob: -12.500661849975586
    6. 'er' → logprob: -13.625661849975586
    7. '```' → logprob: -13.625661849975586
    8. 'e' → logprob: -13.875661849975586
    9. 'ée' → logprob: -13.875661849975586
    10. '   ' → logprob: -14.000661849975586

Token 1301: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06531137228012085
    2. 'a' → logprob: -2.8153114318847656
    3. '```' → logprob: -6.440311431884766
    4. ':' → logprob: -6.815311431884766
    5. ' a' → logprob: -8.315311431884766
    6. '[' → logprob: -8.815311431884766
    7. ':
' → logprob: -9.440311431884766
    8. '[a' → logprob: -9.940311431884766
    9. '
' → logprob: -10.440311431884766
    10. 'n' → logprob: -10.690311431884766

Token 1302: ' les' (ID: 1341)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03814603388309479
    2. ' a' → logprob: -3.4131460189819336
    3. 'i' → logprob: -5.663146018981934
    4. ' i' → logprob: -8.163146018981934
    5. '   ' → logprob: -8.163146018981934
    6. 'c' → logprob: -8.288146018981934
    7. '[i' → logprob: -10.288146018981934
    8. ' c' → logprob: -10.288146018981934
    9. '[a' → logprob: -10.538146018981934
    10. 'n' → logprob: -10.913146018981934

Token 1303: ' deux' (ID: 10301)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2579725980758667
    2. 'i' → logprob: -1.6329725980758667
    3. 'c' → logprob: -4.757972717285156
    4. 'de' → logprob: -5.257972717285156
    5. 'indices' → logprob: -6.007972717285156
    6. 'dern' → logprob: -6.007972717285156
    7. '[i' → logprob: -6.132972717285156
    8. 'l' → logprob: -6.132972717285156
    9. 'placer' → logprob: -6.507972717285156
    10. '```' → logprob: -6.882972717285156

Token 1304: ' premières' (ID: 73562)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7155953049659729
    2. 'dern' → logprob: -1.2155952453613281
    3. 'der' → logprob: -2.090595245361328
    4. 'i' → logprob: -3.965595245361328
    5. ' dernières' → logprob: -3.965595245361328
    6. 'l' → logprob: -4.215595245361328
    7. '[i' → logprob: -4.840595245361328
    8. '[-' → logprob: -4.840595245361328
    9. '[a' → logprob: -5.590595245361328
    10. 'n' → logprob: -5.965595245361328

Token 1305: ' colon' (ID: 20947)
  Prédit: ' lignes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -0.6742879152297974
    2. 'cols' → logprob: -1.9242879152297974
    3. 'a' → logprob: -2.174287796020508
    4. 'for' → logprob: -2.174287796020508
    5. '   ' → logprob: -3.424287796020508
    6. 'columns' → logprob: -3.924287796020508
    7. ' lines' → logprob: -4.174287796020508
    8. 'indices' → logprob: -4.424287796020508
    9. 'lines' → logprob: -4.674287796020508
    10. 'l' → logprob: -4.799287796020508

Token 1306: 'nes' (ID: 4382)
  Prédit: 'nes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nes' → logprob: -0.046039607375860214
    2. 'es' → logprob: -3.671039581298828
    3. 'n' → logprob: -4.296039581298828
    4. 'nées' → logprob: -6.296039581298828
    5. 'onnes' → logprob: -6.921039581298828
    6. 's' → logprob: -7.046039581298828
    7. '```' → logprob: -7.046039581298828
    8. '   ' → logprob: -8.796039581298828
    9. 'cols' → logprob: -9.421039581298828
    10. 'nn' → logprob: -9.421039581298828

Token 1307: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07142183184623718
    2. 'a' → logprob: -2.6964218616485596
    3. '
' → logprob: -7.1964216232299805
    4. '```' → logprob: -7.6964216232299805
    5. ' a' → logprob: -8.44642162322998
    6. '``' → logprob: -10.94642162322998
    7. '    
' → logprob: -11.19642162322998
    8. '	a' → logprob: -11.57142162322998
    9. '#a' → logprob: -12.69642162322998
    10. ':' → logprob: -13.19642162322998

Token 1308: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3928334414958954
    2. 'a' → logprob: -1.1428334712982178
    3. '```' → logprob: -5.142833232879639
    4. ' a' → logprob: -9.892833709716797
    5. '``' → logprob: -10.392833709716797
    6. '[a' → logprob: -11.017833709716797
    7. '	a' → logprob: -13.767833709716797
    8. '    
' → logprob: -13.892833709716797
    9. '[' → logprob: -14.142833709716797
    10. 'for' → logprob: -14.267833709716797

Token 1309: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0013117826310917735
    2. '   ' → logprob: -6.751311779022217
    3. ' a' → logprob: -8.876312255859375
    4. '```' → logprob: -13.376312255859375
    5. '	a' → logprob: -15.876312255859375
    6. 'for' → logprob: -16.126312255859375
    7. '``' → logprob: -17.126312255859375
    8. ' ' → logprob: -17.376312255859375
    9. '[a' → logprob: -17.376312255859375
    10. '
' → logprob: -17.376312255859375

Token 1310: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.011059258133172989
    2. '[-' → logprob: -4.511059284210205
    3. 'n' → logprob: -12.136058807373047
    4. '[' → logprob: -12.136058807373047
    5. '```' → logprob: -15.386058807373047
    6. '[a' → logprob: -15.761058807373047
    7. '[
' → logprob: -16.011058807373047
    8. '
' → logprob: -16.261058807373047
    9. '[i' → logprob: -16.636058807373047
    10. '[m' → logprob: -17.636058807373047

Token 1311: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.2352385965641588e-05
    2. '[-' → logprob: -12.125012397766113
    3. ' -' → logprob: -12.750012397766113
    4. '[' → logprob: -12.750012397766113
    5. '[n' → logprob: -14.875012397766113
    6. '][' → logprob: -16.000011444091797
    7. '```' → logprob: -16.250011444091797
    8. 'n' → logprob: -16.375011444091797
    9. '   ' → logprob: -16.500011444091797
    10. '-[' → logprob: -17.000011444091797

Token 1312: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.319370302458992e-06
    2. '1' → logprob: -13.125005722045898
    3. '
' → logprob: -13.375005722045898
    4. '-' → logprob: -14.500005722045898
    5. '```' → logprob: -15.062505722045898
    6. ' ' → logprob: -15.250005722045898
    7. '3' → logprob: -15.562505722045898
    8. '   ' → logprob: -15.937505722045898
    9. '
' → logprob: -16.3750057220459
    10. '

' → logprob: -16.9375057220459

Token 1313: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.011303862556815147
    2. '[' → logprob: -4.511303901672363
    3. '0' → logprob: -8.761303901672363
    4. ']' → logprob: -10.011303901672363
    5. '[n' → logprob: -10.386303901672363
    6. ' ][' → logprob: -12.386303901672363
    7. '][-' → logprob: -12.886303901672363
    8. '   ' → logprob: -13.261303901672363
    9. ' ' → logprob: -13.261303901672363
    10. '}[' → logprob: -13.636303901672363

Token 1314: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00034297199454158545
    2. 'n' → logprob: -8.000343322753906
    3. '[' → logprob: -13.000343322753906
    4. ' ' → logprob: -13.625343322753906
    5. '[n' → logprob: -13.625343322753906
    6. 'i' → logprob: -13.875343322753906
    7. ']' → logprob: -14.875343322753906
    8. '(' → logprob: -15.562843322753906
    9. '
' → logprob: -15.750343322753906
    10. '1' → logprob: -15.937843322753906

Token 1315: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.00011510594777064398
    2. ']' → logprob: -9.125115394592285
    3. ']=' → logprob: -13.125115394592285
    4. '"],' → logprob: -13.625115394592285
    5. ' ],' → logprob: -13.625115394592285
    6. ',' → logprob: -14.250115394592285
    7. 'a' → logprob: -14.500115394592285
    8. '],"' → logprob: -15.500115394592285
    9. '"' → logprob: -16.37511444091797
    10. ']="' → logprob: -16.50011444091797

Token 1316: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0002286886883666739
    2. ' a' → logprob: -8.500228881835938
    3. '   ' → logprob: -10.625228881835938
    4. '    ' → logprob: -14.875228881835938
    5. ' ' → logprob: -15.375228881835938
    6. '  ' → logprob: -15.625228881835938
    7. '	a' → logprob: -15.750228881835938
    8. 'n' → logprob: -16.750228881835938
    9. '       ' → logprob: -17.750228881835938
    10. '     ' → logprob: -17.875228881835938

Token 1317: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0010387639049440622
    2. 'n' → logprob: -6.876038551330566
    3. '[
' → logprob: -12.876038551330566
    4. '[' → logprob: -14.001038551330566
    5. ' [' → logprob: -14.251038551330566
    6. '	n' → logprob: -14.501038551330566
    7. '
' → logprob: -15.001038551330566
    8. '```' → logprob: -15.001038551330566
    9. '<n' → logprob: -15.626038551330566
    10. '][' → logprob: -16.501039505004883

Token 1318: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.935296834039036e-06
    2. ' -' → logprob: -13.50000286102295
    3. '[' → logprob: -13.75000286102295
    4. '[-' → logprob: -14.75000286102295
    5. 'n' → logprob: -17.375003814697266
    6. '<|end|>' → logprob: -18.875003814697266
    7. '...' → logprob: -19.250003814697266
    8. '[n' → logprob: -19.500003814697266
    9. '```' → logprob: -19.625003814697266
    10. '−' → logprob: -20.375003814697266

Token 1319: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.8961017202818766e-05
    2. '1' → logprob: -9.750059127807617
    3. ' ' → logprob: -15.437559127807617
    4. '```' → logprob: -15.812559127807617
    5. '۲' → logprob: -16.937559127807617
    6. '２' → logprob: -17.062559127807617
    7. '-' → logprob: -17.437559127807617
    8. '   ' → logprob: -17.750059127807617
    9. '
' → logprob: -18.250059127807617
    10. '[' → logprob: -18.500059127807617

Token 1320: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10504617542028427
    2. '][' → logprob: -2.355046272277832
    3. '1' → logprob: -5.355046272277832
    4. ']' → logprob: -10.355046272277832
    5. '}[' → logprob: -10.730046272277832
    6. ' [' → logprob: -10.980046272277832
    7. ' ' → logprob: -12.480046272277832
    8. ')[' → logprob: -12.480046272277832
    9. '>[' → logprob: -12.480046272277832
    10. '[
' → logprob: -12.605046272277832

Token 1321: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.750003814697266
    3. '[' → logprob: -13.750003814697266
    4. '   ' → logprob: -15.250003814697266
    5. '0' → logprob: -17.000003814697266
    6. '  ' → logprob: -17.375003814697266
    7. '```' → logprob: -18.125003814697266
    8. '`' → logprob: -18.312503814697266
    9. '2' → logprob: -18.812503814697266
    10. '
' → logprob: -19.437503814697266

Token 1322: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12190492451190948
    2. ',' → logprob: -2.4969048500061035
    3. ']' → logprob: -3.9969048500061035
    4. ' =' → logprob: -4.4969048500061035
    5. '],' → logprob: -6.2469048500061035
    6. ']=' → logprob: -7.1219048500061035
    7. ' ,' → logprob: -8.871905326843262
    8. ')' → logprob: -12.246905326843262
    9. 'a' → logprob: -12.246905326843262
    10. '   ' → logprob: -12.371905326843262

Token 1323: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05896008014678955
    2. ',' → logprob: -3.1839599609375
    3. ' =' → logprob: -4.1839599609375
    4. ' ,' → logprob: -7.4339599609375
    5. ',a' → logprob: -13.5589599609375
    6. ',c' → logprob: -14.0589599609375
    7. 'a' → logprob: -14.1839599609375
    8. '=

' → logprob: -14.1839599609375
    9. '   ' → logprob: -14.3089599609375
    10. ' ' → logprob: -15.3089599609375

Token 1324: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.003255430841818452
    2. ''' → logprob: -6.128255367279053
    3. ' "' → logprob: -7.378255367279053
    4. 'c' → logprob: -8.503255844116211
    5. '"d' → logprob: -8.878255844116211
    6. '"h' → logprob: -10.003255844116211
    7. '"C' → logprob: -11.753255844116211
    8. '"a' → logprob: -11.753255844116211
    9. ' '' → logprob: -11.878255844116211
    10. ''d' → logprob: -12.503255844116211

Token 1325: 'c' (ID: 66)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.022497331723570824
    2. 'c' → logprob: -4.522497177124023
    3. '"d' → logprob: -5.022497177124023
    4. ''' → logprob: -6.397497177124023
    5. 'e' → logprob: -7.522497177124023
    6. 'd' → logprob: -7.647497177124023
    7. '"a' → logprob: -7.772497177124023
    8. 'f' → logprob: -8.022497177124023
    9. 'g' → logprob: -8.147497177124023
    10. '"h' → logprob: -8.147497177124023

Token 1326: '",' (ID: 672)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6934202909469604
    2. '",' → logprob: -0.6934202909469604
    3. ' ,' → logprob: -9.19342041015625
    4. '"' → logprob: -9.56842041015625
    5. 'a' → logprob: -10.56842041015625
    6. ',"' → logprob: -11.31842041015625
    7. '","' → logprob: -11.44342041015625
    8. 'c' → logprob: -11.44342041015625
    9. ',c' → logprob: -11.44342041015625
    10. '',' → logprob: -11.56842041015625

Token 1327: ' "' (ID: 392)
  Prédit: '"d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"d' → logprob: -0.061880845576524734
    2. '"' → logprob: -2.9368808269500732
    3. 'd' → logprob: -5.061881065368652
    4. ' "' → logprob: -7.811881065368652
    5. ''d' → logprob: -8.936881065368652
    6. ' d' → logprob: -9.811881065368652
    7. ' ' → logprob: -11.686881065368652
    8. ' ' → logprob: -11.811881065368652
    9. 'c' → logprob: -11.936881065368652
    10. '	d' → logprob: -12.436881065368652

Token 1328: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0034104858059436083
    2. '"d' → logprob: -6.128410339355469
    3. '"' → logprob: -7.378410339355469
    4. 'c' → logprob: -7.503410339355469
    5. ''d' → logprob: -10.253410339355469
    6. ' d' → logprob: -12.253410339355469
    7. '	d' → logprob: -12.878410339355469
    8. '""' → logprob: -13.753410339355469
    9. '"""' → logprob: -13.878410339355469
    10. ''' → logprob: -14.378410339355469

Token 1329: '"
' (ID: 1092)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5873952507972717
    2. '   ' → logprob: -0.8373952507972717
    3. '
' → logprob: -4.837395191192627
    4. ')' → logprob: -6.587395191192627
    5. ' a' → logprob: -7.087395191192627
    6. ')
' → logprob: -8.212395668029785
    7. '<|end|>' → logprob: -8.212395668029785
    8. 'n' → logprob: -8.837395668029785
    9. '	a' → logprob: -9.212395668029785
    10. ')a' → logprob: -9.462395668029785

Token 1330: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10633416473865509
    2. '   ' → logprob: -2.3563342094421387
    3. '```' → logprob: -5.106334209442139
    4. '``' → logprob: -10.35633373260498
    5. ' a' → logprob: -10.98133373260498
    6. '`' → logprob: -14.48133373260498
    7. ' ' → logprob: -14.60633373260498
    8. '  ' → logprob: -15.10633373260498
    9. 'n' → logprob: -15.23133373260498
    10. '	a' → logprob: -16.481334686279297

Token 1331: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -2.558399319241289e-05
    2. ' a' → logprob: -11.125025749206543
    3. '   ' → logprob: -11.875025749206543
    4. '```' → logprob: -12.500025749206543
    5. '``' → logprob: -16.000024795532227
    6. '`' → logprob: -18.750024795532227
    7. '	a' → logprob: -19.625024795532227
    8. '
' → logprob: -19.750024795532227
    9. 'n' → logprob: -20.250024795532227
    10. ' ' → logprob: -20.250024795532227

Token 1332: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00014084660506341606
    2. 'n' → logprob: -8.875141143798828
    3. '
' → logprob: -14.250141143798828
    4. ' [' → logprob: -16.375141143798828
    5. '[' → logprob: -17.125141143798828
    6. ' n' → logprob: -17.250141143798828
    7. '[
' → logprob: -17.375141143798828
    8. '```' → logprob: -18.125141143798828
    9. '	n' → logprob: -18.250141143798828
    10. '(n' → logprob: -19.500141143798828

Token 1333: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.5776860184123507e-06
    2. ' -' → logprob: -12.87500286102295
    3. '[-' → logprob: -18.125001907348633
    4. '1' → logprob: -19.250001907348633
    5. '-
' → logprob: -19.375001907348633
    6. '[' → logprob: -19.875001907348633
    7. '   ' → logprob: -20.250001907348633
    8. '−' → logprob: -20.250001907348633
    9. '```' → logprob: -22.000001907348633
    10. '
' → logprob: -22.375001907348633

Token 1334: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011703446507453918
    2. '2' → logprob: -6.7511701583862305
    3. ' ' → logprob: -16.876171112060547
    4. '-' → logprob: -17.876171112060547
    5. '```' → logprob: -18.001171112060547
    6. '   ' → logprob: -19.251171112060547
    7. '
' → logprob: -20.501171112060547
    8. '[' → logprob: -21.001171112060547
    9. '１' → logprob: -21.188671112060547
    10. '``' → logprob: -21.813671112060547

Token 1335: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007717363070696592
    2. '][' → logprob: -4.882717132568359
    3. ' [' → logprob: -10.25771713256836
    4. '0' → logprob: -10.38271713256836
    5. '>[' → logprob: -10.75771713256836
    6. '}[' → logprob: -11.75771713256836
    7. ']' → logprob: -12.38271713256836
    8. ')[' → logprob: -12.63271713256836
    9. ' ' → logprob: -13.00771713256836
    10. '   ' → logprob: -13.25771713256836

Token 1336: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4140441635390744e-05
    2. ' ' → logprob: -11.750014305114746
    3. '[' → logprob: -13.000014305114746
    4. '1' → logprob: -13.250014305114746
    5. '   ' → logprob: -14.562514305114746
    6. 'c' → logprob: -14.687514305114746
    7. '
' → logprob: -14.875014305114746
    8. '"' → logprob: -15.687514305114746
    9. '  ' → logprob: -16.06251335144043
    10. '2' → logprob: -16.62501335144043

Token 1337: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.03507396951317787
    2. ',' → logprob: -3.53507399559021
    3. ']' → logprob: -5.285073757171631
    4. ' ,' → logprob: -9.160074234008789
    5. ' ],' → logprob: -9.410074234008789
    6. '   ' → logprob: -10.160074234008789
    7. '),' → logprob: -12.285074234008789
    8. '"],' → logprob: -12.910074234008789
    9. ' ' → logprob: -13.410074234008789
    10. '[' → logprob: -13.660074234008789

Token 1338: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.1314643621444702
    2. '"' → logprob: -1.7564643621444702
    3. ' "' → logprob: -1.7564643621444702
    4. ' c' → logprob: -1.7564643621444702
    5. 'a' → logprob: -2.2564644813537598
    6. '"a' → logprob: -3.2564644813537598
    7. 'c' → logprob: -4.25646448135376
    8. 'd' → logprob: -7.50646448135376
    9. '"d' → logprob: -7.50646448135376
    10. ' d' → logprob: -7.63146448135376

Token 1339: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00013154871703591198
    2. '-' → logprob: -9.500131607055664
    3. 'n' → logprob: -10.250131607055664
    4. '[-' → logprob: -11.125131607055664
    5. '[' → logprob: -12.875131607055664
    6. '][' → logprob: -14.375131607055664
    7. ' -' → logprob: -14.500131607055664
    8. '(n' → logprob: -14.625131607055664
    9. '-n' → logprob: -14.750131607055664
    10. ' [' → logprob: -14.875131607055664

Token 1340: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.896309739408025e-07
    2. ' -' → logprob: -14.625000953674316
    3. '[-' → logprob: -15.375000953674316
    4. '[' → logprob: -17.375
    5. '[n' → logprob: -19.25
    6. '...' → logprob: -19.25
    7. 'n' → logprob: -19.375
    8. '−' → logprob: -19.875
    9. '```' → logprob: -20.125
    10. '   ' → logprob: -20.25

Token 1341: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -14.375001907348633
    3. '-' → logprob: -14.625001907348633
    4. '2' → logprob: -15.625001907348633
    5. '```' → logprob: -15.750001907348633
    6. '   ' → logprob: -16.250001907348633
    7. '[' → logprob: -17.500001907348633
    8. '
' → logprob: -17.687501907348633
    9. '...' → logprob: -18.250001907348633
    10. '`' → logprob: -18.562501907348633

Token 1342: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.38756126165390015
    2. '[' → logprob: -1.137561321258545
    3. ' ][' → logprob: -8.512560844421387
    4. '1' → logprob: -8.637560844421387
    5. ']' → logprob: -9.137560844421387
    6. ' [' → logprob: -9.512560844421387
    7. ',' → logprob: -9.762560844421387
    8. '   ' → logprob: -10.387560844421387
    9. ')[' → logprob: -11.762560844421387
    10. '],' → logprob: -11.887560844421387

Token 1343: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -13.25000286102295
    3. '[' → logprob: -14.37500286102295
    4. '   ' → logprob: -15.00000286102295
    5. 'd' → logprob: -16.375003814697266
    6. '0' → logprob: -16.562503814697266
    7. '```' → logprob: -17.125003814697266
    8. '2' → logprob: -17.812503814697266
    9. '-' → logprob: -17.875003814697266
    10. '  ' → logprob: -18.500003814697266

Token 1344: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.22914302349090576
    2. '=' → logprob: -1.6041430234909058
    3. ']=' → logprob: -6.104143142700195
    4. ' =' → logprob: -6.604143142700195
    5. ' ]' → logprob: -9.229143142700195
    6. ',' → logprob: -10.854143142700195
    7. '],' → logprob: -11.979143142700195
    8. ')' → logprob: -12.354143142700195
    9. '}' → logprob: -12.979143142700195
    10. '[' → logprob: -13.604143142700195

Token 1345: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003179259831085801
    2. ' =' → logprob: -5.75317907333374
    3. ',' → logprob: -13.378179550170898
    4. '=

' → logprob: -17.5031795501709
    5. '=
' → logprob: -18.1281795501709
    6. '   ' → logprob: -19.2531795501709
    7. ' ' → logprob: -19.3781795501709
    8. ' ,' → logprob: -19.5031795501709
    9. ')' → logprob: -19.5031795501709
    10. ']=' → logprob: -20.6281795501709

Token 1346: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0002979240380227566
    2. ' "' → logprob: -8.875297546386719
    3. 'c' → logprob: -9.625297546386719
    4. ''' → logprob: -9.875297546386719
    5. '"d' → logprob: -10.250297546386719
    6. ' c' → logprob: -13.500297546386719
    7. '"C' → logprob: -13.750297546386719
    8. '"s' → logprob: -14.750297546386719
    9. '	c' → logprob: -14.750297546386719
    10. '"x' → logprob: -14.875297546386719

Token 1347: 'c' (ID: 66)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.025688646361231804
    2. 'c' → logprob: -3.775688648223877
    3. ''' → logprob: -6.150688648223877
    4. '"d' → logprob: -8.275688171386719
    5. 'd' → logprob: -11.775688171386719
    6. ')c' → logprob: -11.900688171386719
    7. '"a' → logprob: -12.150688171386719
    8. '	c' → logprob: -12.400688171386719
    9. ' "' → logprob: -13.275688171386719
    10. '`' → logprob: -13.275688171386719

Token 1348: '",' (ID: 672)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05616787075996399
    2. '",' → logprob: -2.9311678409576416
    3. ' ,' → logprob: -6.806168079376221
    4. '","' → logprob: -9.806167602539062
    5. '"' → logprob: -9.931167602539062
    6. ',d' → logprob: -10.556167602539062
    7. ',"' → logprob: -10.556167602539062
    8. '',' → logprob: -11.681167602539062
    9. ',",' → logprob: -12.556167602539062
    10. '`,' → logprob: -12.806167602539062

Token 1349: ' "' (ID: 392)
  Prédit: '"d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"d' → logprob: -0.0014235681155696511
    2. '"' → logprob: -7.126423358917236
    3. 'd' → logprob: -7.751423358917236
    4. ' "' → logprob: -9.001423835754395
    5. ' d' → logprob: -10.376423835754395
    6. ''d' → logprob: -10.501423835754395
    7. '	d' → logprob: -12.626423835754395
    8. '>d' → logprob: -14.251423835754395
    9. '	' → logprob: -14.501423835754395
    10. ' ' → logprob: -14.501423835754395

Token 1350: 'd' (ID: 67)
  Prédit: '"d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"d' → logprob: -0.20216955244541168
    2. 'd' → logprob: -1.7021695375442505
    3. ''d' → logprob: -7.452169418334961
    4. '"' → logprob: -8.702169418334961
    5. '	d' → logprob: -12.952169418334961
    6. ')d' → logprob: -12.952169418334961
    7. ' d' → logprob: -13.077169418334961
    8. '$d' → logprob: -14.702169418334961
    9. '   ' → logprob: -15.077169418334961
    10. '>d' → logprob: -15.202169418334961

Token 1351: '"

' (ID: 2678)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7339097857475281
    2. ')' → logprob: -1.2339098453521729
    3. 'for' → logprob: -2.233909845352173
    4. 'print' → logprob: -2.858909845352173
    5. '   ' → logprob: -3.858909845352173
    6. '
' → logprob: -4.108909606933594
    7. '<|end|>' → logprob: -4.483909606933594
    8. '```' → logprob: -5.608909606933594
    9. 'a' → logprob: -5.983909606933594
    10. 'if' → logprob: -5.983909606933594

Token 1352: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005535095697268844
    2. '#' → logprob: -7.500553607940674
    3. 'print' → logprob: -14.625553131103516
    4. ' for' → logprob: -16.750553131103516
    5. '```' → logprob: -17.250553131103516
    6. '#print' → logprob: -19.750553131103516
    7. '
' → logprob: -20.375553131103516
    8. '    
' → logprob: -20.750553131103516
    9. '   ' → logprob: -20.750553131103516
    10. 'a' → logprob: -20.750553131103516

Token 1353: ' Enfin' (ID: 85274)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.968312951968983e-06
    2. '#' → logprob: -12.000009536743164
    3. 'print' → logprob: -12.500009536743164
    4. ' for' → logprob: -17.500009536743164
    5. 'pour' → logprob: -19.750009536743164
    6. '```' → logprob: -20.125009536743164
    7. '[' → logprob: -22.125009536743164
    8. '#print' → logprob: -22.125009536743164
    9. '
' → logprob: -22.875009536743164
    10. '	for' → logprob: -23.250009536743164

Token 1354: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004957173950970173
    2. ' for' → logprob: -5.50495719909668
    3. '
' → logprob: -7.62995719909668
    4. '#' → logprob: -7.87995719909668
    5. 'print' → logprob: -11.50495719909668
    6. '
' → logprob: -13.75495719909668
    7. 'a' → logprob: -14.37995719909668
    8. ':' → logprob: -14.62995719909668
    9. ' #' → logprob: -14.75495719909668
    10. '```' → logprob: -14.75495719909668

Token 1355: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.292907877039397e-06
    2. '#' → logprob: -13.25000286102295
    3. ' for' → logprob: -13.50000286102295
    4. '
' → logprob: -20.625003814697266
    5. '```' → logprob: -21.000003814697266
    6. 'print' → logprob: -21.625003814697266
    7. 'pour' → logprob: -23.125003814697266
    8. ' #' → logprob: -24.125003814697266
    9. '
' → logprob: -24.875003814697266
    10. '

' → logprob: -25.250003814697266

Token 1356: ' affiche' (ID: 127479)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.810037742368877e-05
    2. ' for' → logprob: -10.250038146972656
    3. '#' → logprob: -12.875038146972656
    4. '
' → logprob: -18.000038146972656
    5. 'print' → logprob: -18.250038146972656
    6. 'pour' → logprob: -18.375038146972656
    7. 'n' → logprob: -21.375038146972656
    8. '```' → logprob: -22.250038146972656
    9. '.for' → logprob: -22.750038146972656
    10. '=' → logprob: -23.000038146972656

Token 1357: ' la' (ID: 557)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006151323672384024
    2. '("\' → logprob: -5.13115119934082
    3. '(*' → logprob: -9.63115119934082
    4. '
' → logprob: -9.75615119934082
    5. '('\' → logprob: -9.88115119934082
    6. '("' → logprob: -11.50615119934082
    7. '(' → logprob: -11.50615119934082
    8. '*' → logprob: -11.75615119934082
    9. '#' → logprob: -12.00615119934082
    10. '(
' → logprob: -12.75615119934082

Token 1358: ' matr' (ID: 25095)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018779318779706955
    2. ' for' → logprob: -4.018779277801514
    3. '
' → logprob: -7.643779277801514
    4. '#' → logprob: -9.643779754638672
    5. 'def' → logprob: -10.893779754638672
    6. '"\' → logprob: -11.643779754638672
    7. 'a' → logprob: -11.768779754638672
    8. 'n' → logprob: -11.768779754638672
    9. '"' → logprob: -11.768779754638672
    10. 'print' → logprob: -12.268779754638672

Token 1359: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.00301323807798326
    2. 'rice' → logprob: -6.3780131340026855
    3. 'ce' → logprob: -7.6280131340026855
    4. '#' → logprob: -7.7530131340026855
    5. 'atrice' → logprob: -8.628013610839844
    6. 'ix' → logprob: -8.878013610839844
    7. 'x' → logprob: -10.878013610839844
    8. '[' → logprob: -11.003013610839844
    9. 'tr' → logprob: -11.128013610839844
    10. '   ' → logprob: -11.753013610839844

Token 1360: ' ligne' (ID: 19583)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9361264946837764e-07
    2. ' for' → logprob: -16.125
    3. '```' → logprob: -17.875
    4. '
' → logprob: -18.625
    5. 'print' → logprob: -22.125
    6. '#' → logprob: -22.125
    7. '``' → logprob: -22.125
    8. '	for' → logprob: -23.5
    9. '   ' → logprob: -23.5
    10. '\' → logprob: -23.5

Token 1361: ' par' (ID: 686)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003362835617735982
    2. 's' → logprob: -6.128362655639648
    3. ' for' → logprob: -7.378362655639648
    4. 'e' → logprob: -7.878362655639648
    5. 'a' → logprob: -9.253362655639648
    6. 'par' → logprob: -9.753362655639648
    7. 'es' → logprob: -11.753362655639648
    8. ' par' → logprob: -12.128362655639648
    9. 'print' → logprob: -13.878362655639648
    10. 'pour' → logprob: -14.003362655639648

Token 1362: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.0025437972508370876
    2. 'lig' → logprob: -6.127543926239014
    3. 'l' → logprob: -8.127543449401855
    4. ' ligne' → logprob: -9.877543449401855
    5. 'a' → logprob: -12.252543449401855
    6. '```' → logprob: -13.502543449401855
    7. 'lin' → logprob: -14.127543449401855
    8. 'li' → logprob: -14.252543449401855
    9. '   ' → logprob: -14.252543449401855
    10. 'linge' → logprob: -15.002543449401855

Token 1363: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.320199877838604e-07
    2. '
' → logprob: -15.5
    3. ' for' → logprob: -16.125
    4. '```' → logprob: -17.75
    5. '``' → logprob: -21.125
    6. '
' → logprob: -23.25
    7. '`
' → logprob: -23.625
    8. '	for' → logprob: -24.0
    9. '#' → logprob: -24.125
    10. '\' → logprob: -24.5

Token 1364: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. '```' → logprob: -17.25
    3. ' for' → logprob: -20.5
    4. 'print' → logprob: -22.375
    5. '``' → logprob: -23.0
    6. '
' → logprob: -23.875
    7. '   ' → logprob: -26.5
    8. '	for' → logprob: -26.625
    9. '`' → logprob: -27.375
    10. 'For' → logprob: -27.75

Token 1365: ' i' (ID: 575)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.8750441670417786
    2. 'ligne' → logprob: -0.8750441670417786
    3. 'row' → logprob: -1.8750441074371338
    4. 'i' → logprob: -4.375044345855713
    5. ' ligne' → logprob: -8.125043869018555
    6. 'l' → logprob: -9.875043869018555
    7. ' row' → logprob: -11.375043869018555
    8. ' line' → logprob: -11.625043869018555
    9. 'range' → logprob: -12.625043869018555
    10. ' i' → logprob: -12.875043869018555

Token 1366: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043017804622650146
    2. 'in' → logprob: -3.168017864227295
    3. ' ' → logprob: -12.043017387390137
    4. 'range' → logprob: -12.543017387390137
    5. 'n' → logprob: -13.168017387390137
    6. '	in' → logprob: -13.293017387390137
    7. '  ' → logprob: -13.793017387390137
    8. '   ' → logprob: -13.918017387390137
    9. '_' → logprob: -14.793017387390137
    10. '0' → logprob: -14.918017387390137

Token 1367: ' a' (ID: 261)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01894134096801281
    2. 'a' → logprob: -4.018941402435303
    3. ' range' → logprob: -7.143941402435303
    4. ' a' → logprob: -13.643940925598145
    5. '(range' → logprob: -16.64394187927246
    6. 'Range' → logprob: -17.39394187927246
    7. '	range' → logprob: -18.01894187927246
    8. '   ' → logprob: -18.51894187927246
    9. 'r' → logprob: -18.64394187927246
    10. 'ranges' → logprob: -19.14394187927246

Token 1368: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05565338581800461
    2. 'print' → logprob: -3.6806533336639404
    3. ' in' → logprob: -4.6806535720825195
    4. 'in' → logprob: -4.8056535720825195
    5. ':
' → logprob: -5.1806535720825195
    6. ')' → logprob: -5.9306535720825195
    7. '):' → logprob: -6.0556535720825195
    8. ' :' → logprob: -8.80565357208252
    9. '):
' → logprob: -9.55565357208252
    10. '.' → logprob: -9.93065357208252

Token 1369: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00011343709047650918
    2. 'print' → logprob: -9.125113487243652
    3. ' print' → logprob: -12.500113487243652
    4. '	print' → logprob: -14.875113487243652
    5. '```' → logprob: -15.125113487243652
    6. '       ' → logprob: -15.875113487243652
    7. '  ' → logprob: -18.250112533569336
    8. '   ' → logprob: -18.375112533569336
    9. '    ' → logprob: -18.875112533569336
    10. ' ' → logprob: -19.625112533569336

Token 1370: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.088346359931165e-07
    2. ' print' → logprob: -14.500000953674316
    3. '   ' → logprob: -15.000000953674316
    4. '```' → logprob: -22.25
    5. '	print' → logprob: -22.375
    6. '    ' → logprob: -23.75
    7. ' ' → logprob: -24.125
    8. '       ' → logprob: -24.625
    9. '#print' → logprob: -24.75
    10. '  ' → logprob: -25.125

Token 1371: ' ''.' (ID: 105941)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0280383548888494e-06
    2. '   ' → logprob: -14.250000953674316
    3. ' print' → logprob: -15.000000953674316
    4. '	print' → logprob: -21.250001907348633
    5. 'prin' → logprob: -21.375001907348633
    6. ' ' → logprob: -22.000001907348633
    7. '```' → logprob: -23.250001907348633
    8. '  ' → logprob: -23.375001907348633
    9. 'for' → logprob: -23.375001907348633
    10. '#print' → logprob: -23.500001907348633

Token 1372: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.47408124804496765
    2. 'print' → logprob: -0.97408127784729
    3. 'write' → logprob: -12.974081039428711
    4. ' join' → logprob: -14.099081039428711
    5. 'println' → logprob: -14.724081039428711
    6. '```' → logprob: -15.224081039428711
    7. 'j' → logprob: -15.474081039428711
    8. 'jo' → logprob: -16.22408103942871
    9. 'p' → logprob: -17.09908103942871
    10. ' print' → logprob: -17.22408103942871

Token 1373: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00035274302354082465
    2. '(' → logprob: -9.12535285949707
    3. '('' → logprob: -9.25035285949707
    4. 'print' → logprob: -9.50035285949707
    5. '("' → logprob: -9.87535285949707
    6. 'i' → logprob: -11.50035285949707
    7. '("")' → logprob: -12.00035285949707
    8. '()' → logprob: -12.75035285949707
    9. '(str' → logprob: -14.87535285949707
    10. '(print' → logprob: -14.87535285949707

Token 1374: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008783325552940369
    2. '))' → logprob: -4.758783340454102
    3. ')")' → logprob: -9.633783340454102
    4. ')))' → logprob: -9.758783340454102
    5. '())' → logprob: -10.383783340454102
    6. ' )' → logprob: -11.883783340454102
    7. '")' → logprob: -12.758783340454102
    8. ')}}' → logprob: -14.508783340454102
    9. ')"' → logprob: -14.758783340454102
    10. ')}' → logprob: -14.758783340454102

Token 1375: ' transforme' (ID: 184109)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05169318988919258
    2. 'print' → logprob: -3.1766932010650635
    3. '()' → logprob: -5.426692962646484
    4. '   ' → logprob: -6.551692962646484
    5. '())' → logprob: -7.051692962646484
    6. '")' → logprob: -7.301692962646484
    7. ' )' → logprob: -8.301692962646484
    8. ',' → logprob: -8.551692962646484
    9. '))' → logprob: -8.551692962646484
    10. '=' → logprob: -9.176692962646484

Token 1376: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0019068585243076086
    2. ' i' → logprob: -6.501906871795654
    3. '[i' → logprob: -8.876906394958496
    4. '(i' → logprob: -9.126906394958496
    5. '""' → logprob: -9.626906394958496
    6. '"' → logprob: -10.126906394958496
    7. '```' → logprob: -10.876906394958496
    8. '''.' → logprob: -11.626906394958496
    9. '   ' → logprob: -12.501906394958496
    10. '	i' → logprob: -12.501906394958496

Token 1377: ' liste' (ID: 31719)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.9959143400192261
    2. 'chaine' → logprob: -1.245914340019226
    3. '""' → logprob: -1.620914340019226
    4. 'str' → logprob: -2.6209144592285156
    5. 'string' → logprob: -3.3709144592285156
    6. 'chain' → logprob: -4.370914459228516
    7. '''' → logprob: -5.120914459228516
    8. '''.' → logprob: -5.120914459228516
    9. ' chaîne' → logprob: -5.245914459228516
    10. 'i' → logprob: -6.495914459228516

Token 1378: ' de' (ID: 334)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.34382492303848267
    2. '(i' → logprob: -1.718824863433838
    3. '[i' → logprob: -3.093824863433838
    4. ' i' → logprob: -3.343824863433838
    5. 'en' → logprob: -3.593824863433838
    6. ' en' → logprob: -6.718824863433838
    7. '```' → logprob: -7.218824863433838
    8. 'de' → logprob: -7.593824863433838
    9. '[]' → logprob: -7.718824863433838
    10. '   ' → logprob: -9.343825340270996

Token 1379: ' caractères' (ID: 183106)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06748619675636292
    2. 'car' → logprob: -3.19248628616333
    3. ' caractères' → logprob: -4.81748628616333
    4. 'chars' → logprob: -5.06748628616333
    5. 'characters' → logprob: -5.19248628616333
    6. ' i' → logprob: -5.94248628616333
    7. 'str' → logprob: -7.31748628616333
    8. ' caracteres' → logprob: -7.44248628616333
    9. 'char' → logprob: -8.692485809326172
    10. 'strings' → logprob: -9.317485809326172

Token 1380: ' en' (ID: 469)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.45639753341674805
    2. 'en' → logprob: -1.706397533416748
    3. 'i' → logprob: -2.581397533416748
    4. '[i' → logprob: -2.956397533416748
    5. ' en' → logprob: -3.831397533416748
    6. '   ' → logprob: -4.456397533416748
    7. ')' → logprob: -5.331397533416748
    8. ' i' → logprob: -5.331397533416748
    9. '("")' → logprob: -5.831397533416748
    10. '```' → logprob: -5.956397533416748

Token 1381: ' une' (ID: 2463)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.3325270414352417
    2. '"' → logprob: -2.0825271606445312
    3. 'chaine' → logprob: -2.2075271606445312
    4. 'string' → logprob: -3.4575271606445312
    5. '''' → logprob: -4.332527160644531
    6. 'str' → logprob: -6.082527160644531
    7. ' chaîne' → logprob: -7.457527160644531
    8. '"""' → logprob: -8.207527160644531
    9. '''.' → logprob: -8.832527160644531
    10. ' chaine' → logprob: -9.207527160644531

Token 1382: ' chaîne' (ID: 89288)
  Prédit: 'string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.16586846113204956
    2. 'chaine' → logprob: -1.9158685207366943
    3. 'str' → logprob: -5.915868282318115
    4. ' chaîne' → logprob: -6.665868282318115
    5. '"' → logprob: -7.040868282318115
    6. 'chain' → logprob: -7.915868282318115
    7. '""' → logprob: -8.415868759155273
    8. ' string' → logprob: -9.915868759155273
    9. ' chaine' → logprob: -9.915868759155273
    10. 'cha' → logprob: -10.540868759155273

Token 1383: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02141297422349453
    2. '   ' → logprob: -3.8964130878448486
    3. '("")' → logprob: -7.6464128494262695
    4. ' print' → logprob: -8.39641284942627
    5. '()' → logprob: -9.64641284942627
    6. '(print' → logprob: -10.02141284942627
    7. '(' → logprob: -11.14641284942627
    8. '```' → logprob: -11.89641284942627
    9. '	print' → logprob: -12.14641284942627
    10. '#' → logprob: -12.39641284942627

Token 1384: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.005544173996895552
    2. 'chaine' → logprob: -6.130544185638428
    3. 'texte' → logprob: -6.630544185638428
    4. 'chars' → logprob: -7.380544185638428
    5. ' caractères' → logprob: -7.630544185638428
    6. 'string' → logprob: -7.755544185638428
    7. 'str' → logprob: -8.50554370880127
    8. 'cha' → logprob: -9.00554370880127
    9. 'char' → logprob: -9.00554370880127
    10. '```' → logprob: -11.25554370880127

Token 1385: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.17627748847007751
    2. '   ' → logprob: -1.9262775182724
    3. ')' → logprob: -4.1762776374816895
    4. ' print' → logprob: -7.8012776374816895
    5. ')
' → logprob: -9.301277160644531
    6. ',' → logprob: -10.426277160644531
    7. '	print' → logprob: -11.176277160644531
    8. ').' → logprob: -12.051277160644531
    9. '),' → logprob: -12.426277160644531
    10. '(print' → logprob: -12.551277160644531

Token 1386: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007110013975761831
    2. 'print' → logprob: -7.250710964202881
    3. ' print' → logprob: -13.750711441040039
    4. '       ' → logprob: -18.75071144104004
    5. '```' → logprob: -18.87571144104004
    6. '	print' → logprob: -19.50071144104004
    7. '  ' → logprob: -19.75071144104004
    8. '    ' → logprob: -20.87571144104004
    9. '   ' → logprob: -20.87571144104004
    10. ' ' → logprob: -22.00071144104004

Token 1387: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.128163257315464e-07
    2. ' print' → logprob: -15.25
    3. '   ' → logprob: -17.5
    4. '```' → logprob: -22.625
    5. '	print' → logprob: -23.5
    6. ' ' → logprob: -25.5
    7. '    
' → logprob: -25.875
    8. '  ' → logprob: -27.0
    9. '
' → logprob: -27.5
    10. 'Print' → logprob: -27.875

Token 1388: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.008686667308211327
    2. '("' → logprob: -4.758686542510986
    3. '(' → logprob: -9.883687019348145
    4. '''.' → logprob: -10.883687019348145
    5. '"' → logprob: -14.008687019348145
    6. '('').' → logprob: -14.133687019348145
    7. '(""' → logprob: -15.258687019348145
    8. '('.' → logprob: -16.133686065673828
    9. '(('' → logprob: -16.133686065673828
    10. '('',' → logprob: -16.383686065673828

Token 1389: '".' (ID: 4050)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.4803258180618286
    2. '"' → logprob: -0.9803258180618286
    3. '".' → logprob: -5.230325698852539
    4. '''' → logprob: -7.230325698852539
    5. '")' → logprob: -9.480325698852539
    6. '""' → logprob: -9.730325698852539
    7. ' ''.' → logprob: -12.230325698852539
    8. '").' → logprob: -12.355325698852539
    9. ''.' → logprob: -12.355325698852539
    10. ''' → logprob: -12.980325698852539

Token 1390: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.9361264946837764e-07
    2. ' join' → logprob: -15.875
    3. 'j' → logprob: -17.5
    4. 'jo' → logprob: -17.875
    5. '(join' → logprob: -21.375
    6. '.join' → logprob: -21.375
    7. 'joint' → logprob: -22.375
    8. 'print' → logprob: -22.375
    9. '```' → logprob: -22.5
    10. '''.' → logprob: -22.625

Token 1391: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -6.704273118884885e-07
    2. ')i' → logprob: -15.250000953674316
    3. 'i' → logprob: -15.500000953674316
    4. ')' → logprob: -15.875000953674316
    5. '[i' → logprob: -17.375
    6. '(' → logprob: -17.625
    7. ' (' → logprob: -19.5
    8. '(a' → logprob: -19.75
    9. ')(' → logprob: -19.875
    10. '(
' → logprob: -20.25

Token 1392: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.20142386853694916
    2. ')' → logprob: -1.7014238834381104
    3. '())' → logprob: -12.076423645019531
    4. '()))' → logprob: -13.201423645019531
    5. ')")' → logprob: -14.076423645019531
    6. '))
' → logprob: -14.201423645019531
    7. ')))' → logprob: -14.326423645019531
    8. '"))' → logprob: -14.826423645019531
    9. '})' → logprob: -15.826423645019531
    10. '])' → logprob: -16.07642364501953


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1390
Tokens correctement prédits (1ère position, stricte): 473
Tokens correctement prédits (1ère position, avec adaptation): 501
Tokens correctement prédits (top 10): 921
Précision stricte (1ère position): 34.03%
Précision adaptée (1ère position): 36.04%
Précision (top 10): 66.26%
================================================================================
