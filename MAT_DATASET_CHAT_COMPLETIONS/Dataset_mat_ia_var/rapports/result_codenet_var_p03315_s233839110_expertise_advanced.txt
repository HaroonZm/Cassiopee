================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import Counter

signe_counts = Counter(input())
print(signe_counts['+'] - signe_counts['-'])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' Counter' (ID: 32251)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.0460870265960693
    2. 'default' → logprob: -1.1710870265960693
    3. 'abc' → logprob: -1.7960870265960693
    4. 'Counter' → logprob: -2.4210870265960693
    5. ' defaultdict' → logprob: -2.6710870265960693
    6. 'named' → logprob: -5.421087265014648
    7. ' Counter' → logprob: -5.546087265014648
    8. ' abc' → logprob: -6.046087265014648
    9. ' deque' → logprob: -6.421087265014648
    10. '```' → logprob: -6.796087265014648

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -5.8961017202818766e-05
    2. '\(' → logprob: -10.375059127807617
    3. ' (' → logprob: -11.500059127807617
    4. '()' → logprob: -12.625059127807617
    5. '\' → logprob: -12.875059127807617
    6. '(
' → logprob: -12.875059127807617
    7. 'a' → logprob: -12.875059127807617
    8. '\n' → logprob: -14.000059127807617
    9. '```' → logprob: -14.000059127807617
    10. '.' → logprob: -14.250059127807617

Token 5: 's' (ID: 82)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001039479160681367
    2. 'a' → logprob: -7.876039505004883
    3. '.' → logprob: -8.376039505004883
    4. '\(' → logprob: -9.251039505004883
    5. '(
' → logprob: -9.376039505004883
    6. 'newline' → logprob: -9.876039505004883
    7. '\' → logprob: -10.001039505004883
    8. '\n' → logprob: -10.001039505004883
    9. ',' → logprob: -10.876039505004883
    10. '```' → logprob: -11.751039505004883

Token 6: 'igne' (ID: 24120)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4709135890007019
    2. '(' → logprob: -1.9709136486053467
    3. 'u' → logprob: -2.7209136486053467
    4. '=' → logprob: -2.8459136486053467
    5. 't' → logprob: -3.2209136486053467
    6. 's' → logprob: -4.220913410186768
    7. '[' → logprob: -4.345913410186768
    8. 'a' → logprob: -4.720913410186768
    9. 'tring' → logprob: -4.720913410186768
    10. ' =' → logprob: -4.720913410186768

Token 7: '_counts' (ID: 61971)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4945319890975952
    2. '(' → logprob: -1.3695319890975952
    3. 't' → logprob: -2.7445321083068848
    4. 'd' → logprob: -3.1195321083068848
    5. 's' → logprob: -3.8695321083068848
    6. '('' → logprob: -6.369532108306885
    7. 'l' → logprob: -6.994532108306885
    8. '=' → logprob: -7.244532108306885
    9. 'm' → logprob: -7.869532108306885
    10. '.' → logprob: -7.869532108306885

Token 8: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.36370930075645447
    2. '=' → logprob: -1.6137093305587769
    3. 's' → logprob: -2.6137092113494873
    4. 'r' → logprob: -4.238709449768066
    5. 't' → logprob: -4.363709449768066
    6. '[' → logprob: -6.113709449768066
    7. ')' → logprob: -6.738709449768066
    8. '_' → logprob: -7.488709449768066
    9. ' =' → logprob: -7.488709449768066
    10. 'd' → logprob: -8.488709449768066

Token 9: ' Counter' (ID: 32251)
  Prédit: ' Counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Counter' → logprob: -0.4741428792476654
    2. 'Counter' → logprob: -0.9741429090499878
    3. ' ' → logprob: -10.099143028259277
    4. '.Counter' → logprob: -11.724143028259277
    5. ' counter' → logprob: -12.224143028259277
    6. 'Counters' → logprob: -12.849143028259277
    7. '_counter' → logprob: -13.349143028259277
    8. 'C' → logprob: -13.599143028259277
    9. 'counter' → logprob: -13.599143028259277
    10. '	C' → logprob: -13.849143028259277

Token 10: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01877627521753311
    2. '(s' → logprob: -4.0187764167785645
    3. '()' → logprob: -7.7687764167785645
    4. 's' → logprob: -9.143775939941406
    5. '('' → logprob: -9.768775939941406
    6. '(
' → logprob: -11.768775939941406
    7. '(S' → logprob: -12.143775939941406
    8. '(user' → logprob: -12.893775939941406
    9. '(`' → logprob: -13.018775939941406
    10. '({' → logprob: -13.018775939941406

Token 11: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6559100151062012
    2. '()' → logprob: -0.9059100151062012
    3. '(' → logprob: -2.780910015106201
    4. ')' → logprob: -4.405910015106201
    5. '('' → logprob: -6.655910015106201
    6. 's' → logprob: -7.405910015106201
    7. '().' → logprob: -8.03091049194336
    8. '()))' → logprob: -9.03091049194336
    9. '("' → logprob: -9.78091049194336
    10. ' ())' → logprob: -9.90591049194336

Token 12: 'print' (ID: 1598)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1617603451013565
    2. '(' → logprob: -2.7867603302001953
    3. ')' → logprob: -3.2867603302001953
    4. 's' → logprob: -3.4117603302001953
    5. 'print' → logprob: -5.161760330200195
    6. '[' → logprob: -5.661760330200195
    7. '' → logprob: -6.786760330200195
    8. ' ' → logprob: -7.286760330200195
    9. '.print' → logprob: -7.286760330200195
    10. '.s' → logprob: -7.661760330200195

Token 13: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00026085900026373565
    2. '(s' → logprob: -9.125261306762695
    3. '('' → logprob: -9.250261306762695
    4. '("("' → logprob: -10.125261306762695
    5. 's' → logprob: -11.875261306762695
    6. '(.' → logprob: -13.000261306762695
    7. '()' → logprob: -13.125261306762695
    8. '(
' → logprob: -13.750261306762695
    9. '((' → logprob: -14.375261306762695
    10. ' (' → logprob: -14.500261306762695

Token 14: 'igne' (ID: 24120)
  Prédit: 'gne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gne' → logprob: -0.14334654808044434
    2. 'igne' → logprob: -2.2683465480804443
    3. 'g' → logprob: -3.5183465480804443
    4. 'gn' → logprob: -8.768346786499023
    5. 'ne' → logprob: -9.768346786499023
    6. 's' → logprob: -10.268346786499023
    7. 'ign' → logprob: -10.393346786499023
    8. 'ge' → logprob: -11.143346786499023
    9. 'gene' → logprob: -11.268346786499023
    10. ')' → logprob: -11.643346786499023

Token 15: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.6345212459564209
    2. 's' → logprob: -0.7595212459564209
    3. '_s' → logprob: -6.509521484375
    4. '_c' → logprob: -8.759521484375
    5. '_chars' → logprob: -9.259521484375
    6. '_count' → logprob: -10.259521484375
    7. 'r' → logprob: -10.384521484375
    8. ')_' → logprob: -10.509521484375
    9. '_' → logprob: -11.134521484375
    10. '_counter' → logprob: -11.634521484375

Token 16: '['' (ID: 1181)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003404687449801713
    2. '[' → logprob: -9.000340461730957
    3. '))' → logprob: -9.250340461730957
    4. '`)' → logprob: -10.000340461730957
    5. '.)' → logprob: -10.625340461730957
    6. '(' → logprob: -11.500340461730957
    7. '()' → logprob: -11.750340461730957
    8. ' )' → logprob: -11.875340461730957
    9. '())' → logprob: -12.000340461730957
    10. '])' → logprob: -12.500340461730957

Token 17: '+' (ID: 10)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20114010572433472
    2. ')' → logprob: -2.0761401653289795
    3. ' '' → logprob: -4.0761399269104
    4. '('' → logprob: -4.7011399269104
    5. ''' → logprob: -5.0761399269104
    6. ''])' → logprob: -5.7011399269104
    7. '(' → logprob: -5.8261399269104
    8. '\n' → logprob: -6.2011399269104
    9. 'e' → logprob: -6.3261399269104
    10. '!' → logprob: -6.4511399269104

Token 18: '']' (ID: 1089)
  Prédit: ''])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''])' → logprob: -0.6135244965553284
    2. '+' → logprob: -0.9885244965553284
    3. '']' → logprob: -2.7385244369506836
    4. ''' → logprob: -3.9885244369506836
    5. ''+' → logprob: -6.113524436950684
    6. '']))' → logprob: -8.363524436950684
    7. '+'' → logprob: -8.988524436950684
    8. '-' → logprob: -8.988524436950684
    9. '])' → logprob: -9.238524436950684
    10. ')' → logprob: -9.863524436950684

Token 19: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010447999462485313
    2. '])' → logprob: -4.635447978973389
    3. '')' → logprob: -8.010448455810547
    4. ']' → logprob: -9.260448455810547
    5. ''])' → logprob: -9.260448455810547
    6. '+)' → logprob: -9.885448455810547
    7. '`)' → logprob: -10.135448455810547
    8. '))' → logprob: -10.385448455810547
    9. '[' → logprob: -11.385448455810547
    10. '+' → logprob: -11.510448455810547

Token 20: ' signe' (ID: 87345)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2993376553058624
    2. ' signe' → logprob: -1.42433762550354
    3. '1' → logprob: -4.674337863922119
    4. 'sign' → logprob: -4.799337863922119
    5. ' ' → logprob: -8.799337387084961
    6. ' signes' → logprob: -9.174337387084961
    7. ' sign' → logprob: -9.424337387084961
    8. ')' → logprob: -10.674337387084961
    9. '0' → logprob: -11.424337387084961
    10. ' signo' → logprob: -11.549337387084961

Token 21: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.002318203216418624
    2. '_' → logprob: -6.752318382263184
    3. '_c' → logprob: -7.127318382263184
    4. 's' → logprob: -8.127318382263184
    5. 'r' → logprob: -11.627318382263184
    6. 'c' → logprob: -11.627318382263184
    7. 'e' → logprob: -12.502318382263184
    8. 't' → logprob: -12.627318382263184
    9. 'g' → logprob: -12.752318382263184
    10. '_count' → logprob: -12.877318382263184

Token 22: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.001115211984142661
    2. '[' → logprob: -6.876115322113037
    3. ''' → logprob: -10.001114845275879
    4. ''+' → logprob: -11.751114845275879
    5. '['_' → logprob: -12.001114845275879
    6. '[['' → logprob: -12.626114845275879
    7. '["+' → logprob: -12.751114845275879
    8. ')' → logprob: -12.876114845275879
    9. ''s' → logprob: -13.001114845275879
    10. '[...]' → logprob: -13.251114845275879

Token 23: '-' (ID: 12)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.04875427857041359
    2. '-' → logprob: -3.0487542152404785
    3. ''' → logprob: -9.173754692077637
    4. '"-' → logprob: -10.923754692077637
    5. ''])' → logprob: -11.798754692077637
    6. '']' → logprob: -11.923754692077637
    7. '('-' → logprob: -12.548754692077637
    8. '1' → logprob: -12.673754692077637
    9. ''+' → logprob: -12.798754692077637
    10. ' '-')' → logprob: -12.798754692077637

Token 24: ''])' (ID: 11775)
  Prédit: ''])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''])' → logprob: -0.09245958179235458
    2. '']' → logprob: -2.4674596786499023
    3. '])' → logprob: -6.092459678649902
    4. ']' → logprob: -7.592459678649902
    5. ''' → logprob: -7.967459678649902
    6. ')' → logprob: -8.592459678649902
    7. '+' → logprob: -9.217459678649902
    8. '')' → logprob: -9.967459678649902
    9. '"])' → logprob: -10.592459678649902
    10. ''])
' → logprob: -10.842459678649902


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 22
Tokens correctement prédits (1ère position, stricte): 5
Tokens correctement prédits (1ère position, avec adaptation): 5
Tokens correctement prédits (top 10): 13
Précision stricte (1ère position): 22.73%
Précision adaptée (1ère position): 22.73%
Précision (top 10): 59.09%
================================================================================
