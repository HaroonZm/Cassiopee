================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:04:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import defaultdict
from functools import lru_cache

n = int(input())
mod = 10**9 + 7
chars = 'ACGT'
states = defaultdict(int)
states['XXX'] = 1

@lru_cache(maxsize=None)
def acceptable(t: str) -> bool:
    # Check if any AGC can be formed by single swap in last 4 chars
    for pos in range(4):
        arr = list(t)
        if pos > 0:
            arr[pos-1], arr[pos] = arr[pos], arr[pos-1]
        if 'AGC' in ''.join(arr):
            return False
    return True

for _ in range(n):
    new_states = defaultdict(int)
    for s, cnt in states.items():
        for c in chars:
            nexts = s[1:] + c
            if acceptable(s + c):
                new_states[nexts] = (new_states[nexts] + cnt) % mod
    states = new_states

print(sum(states.values()) % mod)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' defaultdict' (ID: 107098)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.037925124168396
    2. 'default' → logprob: -1.162925124168396
    3. 'abc' → logprob: -1.787925124168396
    4. 'Counter' → logprob: -2.4129252433776855
    5. ' defaultdict' → logprob: -2.7879252433776855
    6. 'named' → logprob: -5.4129252433776855
    7. ' Counter' → logprob: -5.5379252433776855
    8. ' abc' → logprob: -6.0379252433776855
    9. ' deque' → logprob: -6.4129252433776855
    10. '```' → logprob: -6.7879252433776855

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10028732568025589
    2. '\' → logprob: -3.725287437438965
    3. '```' → logprob: -3.725287437438965
    4. '[' → logprob: -4.475287437438965
    5. '(
' → logprob: -4.850287437438965
    6. '\(' → logprob: -5.100287437438965
    7. 'a' → logprob: -5.725287437438965
    8. '\n' → logprob: -5.725287437438965
    9. 'newline' → logprob: -5.975287437438965
    10. '\[' → logprob: -5.975287437438965

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3513121008872986
    2. '
' → logprob: -2.2263121604919434
    3. '\n' → logprob: -2.8513121604919434
    4. '(
' → logprob: -3.3513121604919434
    5. '```' → logprob: -4.101312160491943
    6. '\' → logprob: -4.351312160491943
    7. '' → logprob: -4.476312160491943
    8. '

' → logprob: -4.476312160491943
    9. 'd' → logprob: -5.101312160491943
    10. 'import' → logprob: -5.226312160491943

Token 6: ' functools' (ID: 142636)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.5972343683242798
    2. ' itertools' → logprob: -1.0972343683242798
    3. ' typing' → logprob: -2.8472342491149902
    4. 'collections' → logprob: -3.7222342491149902
    5. ' functools' → logprob: -5.22223424911499
    6. ' os' → logprob: -5.34723424911499
    7. ' sys' → logprob: -5.47223424911499
    8. ' ' → logprob: -5.47223424911499
    9. ' json' → logprob: -5.59723424911499
    10. ' math' → logprob: -5.72223424911499

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.144243523478508
    2. 'import' → logprob: -2.0192434787750244
    3. '_import' → logprob: -6.5192437171936035
    4. ' ' → logprob: -10.269243240356445
    5. '	import' → logprob: -11.019243240356445
    6. ' _' → logprob: -11.394243240356445
    7. '.' → logprob: -11.644243240356445
    8. '_' → logprob: -11.644243240356445
    9. ' .' → logprob: -13.019243240356445
    10. ' ' → logprob: -13.019243240356445

Token 8: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.614680290222168
    2. 'l' → logprob: -1.489680290222168
    3. ' wraps' → logprob: -2.239680290222168
    4. 'wrap' → logprob: -2.364680290222168
    5. 'partial' → logprob: -3.989680290222168
    6. 'reduce' → logprob: -4.989680290222168
    7. ' partial' → logprob: -5.114680290222168
    8. ' reduce' → logprob: -6.989680290222168
    9. 'cache' → logprob: -7.989680290222168
    10. 'cached' → logprob: -8.114680290222168

Token 9: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -3.440506407059729e-05
    2. 'amb' → logprob: -11.12503433227539
    3. 'ambda' → logprob: -11.25003433227539
    4. 'r' → logprob: -12.75003433227539
    5. 'ruz' → logprob: -13.87503433227539
    6. 'a' → logprob: -14.12503433227539
    7. '_ru' → logprob: -14.87503433227539
    8. 'z' → logprob: -15.37503433227539
    9. 'ruh' → logprob: -15.37503433227539
    10. 'azy' → logprob: -15.50003433227539

Token 10: '_cache' (ID: 27045)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.10024624317884445
    2. '_cache' → logprob: -2.3502461910247803
    3. 'c' → logprob: -10.60024642944336
    4. 'ca' → logprob: -12.35024642944336
    5. 'cached' → logprob: -12.47524642944336
    6. 'ut' → logprob: -12.85024642944336
    7. 'Cache' → logprob: -14.47524642944336
    8. '```' → logprob: -14.60024642944336
    9. 'che' → logprob: -14.85024642944336
    10. ' cache' → logprob: -14.97524642944336

Token 11: '

' (ID: 279)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.22999981045722961
    2. '(' → logprob: -2.1049997806549072
    3. '\' → logprob: -3.4799997806549072
    4. 'def' → logprob: -3.4799997806549072
    5. '```' → logprob: -5.105000019073486
    6. '\n' → logprob: -5.605000019073486
    7. '(
' → logprob: -5.980000019073486
    8. 'd' → logprob: -6.105000019073486
    9. '@
' → logprob: -6.730000019073486
    10. '#' → logprob: -6.855000019073486

Token 12: 'n' (ID: 77)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.006260800175368786
    2. 'd' → logprob: -5.631260871887207
    3. 'def' → logprob: -7.381260871887207
    4. '@
' → logprob: -7.506260871887207
    5. '```' → logprob: -7.506260871887207
    6. '\' → logprob: -7.756260871887207
    7. '`' → logprob: -8.006260871887207
    8. '\n' → logprob: -10.256260871887207
    9. '@\' → logprob: -10.881260871887207
    10. 'import' → logprob: -11.506260871887207

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5033380389213562
    2. '=' → logprob: -1.253338098526001
    3. ' ' → logprob: -2.503338098526001
    4. '_' → logprob: -3.878338098526001
    5. '.' → logprob: -5.753337860107422
    6. ',' → logprob: -6.878337860107422
    7. '  ' → logprob: -7.128337860107422
    8. 'u' → logprob: -7.128337860107422
    9. ')' → logprob: -7.378337860107422
    10. 'a' → logprob: -8.753337860107422

Token 14: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.023316634818911552
    2. ' int' → logprob: -4.398316860198975
    3. 'int' → logprob: -5.398316860198975
    4. '10' → logprob: -5.523316860198975
    5. '0' → logprob: -6.398316860198975
    6. '20' → logprob: -8.648316383361816
    7. '32' → logprob: -9.273316383361816
    8. ' defaultdict' → logprob: -9.273316383361816
    9. '100' → logprob: -10.023316383361816
    10. '5' → logprob: -10.523316383361816

Token 15: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006771695916540921
    2. '('' → logprob: -8.125677108764648
    3. '(input' → logprob: -8.125677108764648
    4. '()' → logprob: -9.875677108764648
    5. ' (' → logprob: -11.875677108764648
    6. '(
' → logprob: -12.375677108764648
    7. '("' → logprob: -12.625677108764648
    8. '(...)' → logprob: -12.750677108764648
    9. '(`' → logprob: -12.875677108764648
    10. ''' → logprob: -13.125677108764648

Token 16: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24851539731025696
    2. '()' → logprob: -1.9985153675079346
    3. '(' → logprob: -2.9985153675079346
    4. '())' → logprob: -3.3735153675079346
    5. '`)' → logprob: -8.998515129089355
    6. '))' → logprob: -9.248515129089355
    7. '')' → logprob: -9.998515129089355
    8. '(
' → logprob: -10.998515129089355
    9. '")' → logprob: -11.123515129089355
    10. '('' → logprob: -11.498515129089355

Token 17: 'mod' (ID: 4847)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.552509069442749
    2. 'dp' → logprob: -1.177509069442749
    3. 'counts' → logprob: -3.427509069442749
    4. 'cache' → logprob: -3.677509069442749
    5. 'arr' → logprob: -4.802509307861328
    6. 'graph' → logprob: -4.802509307861328
    7. 'data' → logprob: -4.802509307861328
    8. 'a' → logprob: -4.802509307861328
    9. 'counter' → logprob: -5.427509307861328
    10. 'count' → logprob: -5.552509307861328

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26888716220855713
    2. '=' → logprob: -1.5188871622085571
    3. ' ' → logprob: -4.518887042999268
    4. '_' → logprob: -5.268887042999268
    5. '.' → logprob: -8.268887519836426
    6. ')' → logprob: -8.643887519836426
    7. ',' → logprob: -9.393887519836426
    8. '<|end|>' → logprob: -10.393887519836426
    9. '  ' → logprob: -10.518887519836426
    10. ' )' → logprob: -10.768887519836426

Token 19: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10026619583368301
    2. '10' → logprob: -2.350266218185425
    3. '100' → logprob: -9.850266456604004
    4. '1' → logprob: -12.225266456604004
    5. '998' → logprob: -13.725266456604004
    6. ' ' → logprob: -15.725266456604004
    7. ' (' → logprob: -16.100265502929688
    8. 'int' → logprob: -16.350265502929688
    9. ' \(' → logprob: -16.725265502929688
    10. '0' → logprob: -16.725265502929688

Token 20: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0011932061752304435
    2. '100' → logprob: -6.751193046569824
    3. '1' → logprob: -11.251193046569824
    4. '998' → logprob: -12.001193046569824
    5. ' ' → logprob: -12.501193046569824
    6. '(' → logprob: -17.25119400024414
    7. 'int' → logprob: -18.50119400024414
    8. '```' → logprob: -19.12619400024414
    9. '`' → logprob: -19.25119400024414
    10. '１０' → logprob: -19.87619400024414

Token 21: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.6994761824607849
    2. '**' → logprob: -1.3244762420654297
    3. '0' → logprob: -1.4494762420654297
    4. '09' → logprob: -6.57447624206543
    5. '00' → logprob: -7.57447624206543
    6. '7' → logprob: -8.44947624206543
    7. '000' → logprob: -8.94947624206543
    8. '4' → logprob: -10.07447624206543
    9. '```' → logprob: -10.19947624206543
    10. '^' → logprob: -10.32447624206543

Token 22: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.128163257315464e-07
    2. '09' → logprob: -15.5
    3. '```' → logprob: -17.25
    4. ' ' → logprob: -18.625
    5. '10' → logprob: -19.625
    6. '+' → logprob: -19.75
    7. '``' → logprob: -20.875
    8. '4' → logprob: -21.0
    9. '**' → logprob: -21.25
    10. '   ' → logprob: -21.25

Token 23: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0022053320426493883
    2. ' +' → logprob: -6.1272053718566895
    3. '+
' → logprob: -11.502204895019531
    4. '7' → logprob: -12.002204895019531
    5. ' +
' → logprob: -13.502204895019531
    6. '+

' → logprob: -13.627204895019531
    7. ' +
' → logprob: -14.627204895019531
    8. '＋' → logprob: -15.252204895019531
    9. '+</' → logprob: -15.752204895019531
    10. '+\' → logprob: -16.12720489501953

Token 24: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -5.512236498361744e-07
    2. '+' → logprob: -15.000000953674316
    3. ' ' → logprob: -16.25
    4. '```' → logprob: -18.375
    5. '07' → logprob: -18.625
    6. '9' → logprob: -19.375
    7. '   ' → logprob: -20.375
    8. '37' → logprob: -21.3125
    9. ' +' → logprob: -21.4375
    10. '' → logprob: -21.75

Token 25: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '+' → logprob: -17.75
    4. '```' → logprob: -17.75
    5. '07' → logprob: -19.25
    6. '   ' → logprob: -19.25
    7. '

' → logprob: -20.3125
    8. '9' → logprob: -20.4375
    9. '' → logprob: -20.6875
    10. '``' → logprob: -21.0

Token 26: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13466742634773254
    2. ' 
' → logprob: -3.63466739654541
    3. 'a' → logprob: -4.25966739654541
    4. '\' → logprob: -4.38466739654541
    5. 'data' → logprob: -4.50966739654541
    6. '

' → logprob: -4.50966739654541
    7. 'dp' → logprob: -4.50966739654541
    8. 'd' → logprob: -4.63466739654541
    9. '' → logprob: -5.25966739654541
    10. 'def' → logprob: -5.38466739654541

Token 27: 'chars' (ID: 46043)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3047000765800476
    2. '
' → logprob: -2.1797001361846924
    3. 'd' → logprob: -2.8047001361846924
    4. 'def' → logprob: -4.054699897766113
    5. 'a' → logprob: -4.179699897766113
    6. '\' → logprob: -4.304699897766113
    7. '\n' → logprob: -5.179699897766113
    8. 'result' → logprob: -5.304699897766113
    9. 'data' → logprob: -5.429699897766113
    10. '

' → logprob: -5.554699897766113

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04449406638741493
    2. '=' → logprob: -3.669494152069092
    3. '[' → logprob: -4.794494152069092
    4. '_counts' → logprob: -5.294494152069092
    5. '_' → logprob: -6.294494152069092
    6. '_count' → logprob: -6.794494152069092
    7. ' ' → logprob: -7.294494152069092
    8. '[]' → logprob: -8.169493675231934
    9. '['' → logprob: -8.919493675231934
    10. 's' → logprob: -9.544493675231934

Token 29: ' '' (ID: 461)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -1.5846763849258423
    2. ' ['' → logprob: -1.5846763849258423
    3. ' defaultdict' → logprob: -1.7096763849258423
    4. ' '' → logprob: -2.3346762657165527
    5. '"' → logprob: -2.5846762657165527
    6. ' []' → logprob: -3.0846762657165527
    7. ' ' → logprob: -3.3346762657165527
    8. ''' → logprob: -3.4596762657165527
    9. '['' → logprob: -3.4596762657165527
    10. ' [' → logprob: -3.4596762657165527

Token 30: 'AC' (ID: 2436)
  Prédit: 'abcdefghijklmnopqrstuvwxyz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abcdefghijklmnopqrstuvwxyz' → logprob: -0.3160087764263153
    2. 'abc' → logprob: -1.6910088062286377
    3. ' abc' → logprob: -3.3160088062286377
    4. 'abcdef' → logprob: -4.816008567810059
    5. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -4.941008567810059
    6. 'AC' → logprob: -5.441008567810059
    7. 'abcd' → logprob: -5.566008567810059
    8. 'ab' → logprob: -5.691008567810059
    9. 'a' → logprob: -5.691008567810059
    10. '('' → logprob: -5.941008567810059

Token 31: 'GT' (ID: 30016)
  Prédit: 'GT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'GT' → logprob: -0.0011773703154176474
    2. 'G' → logprob: -6.7511773109436035
    3. 'M' → logprob: -13.001177787780762
    4. 'TG' → logprob: -13.001177787780762
    5. 'T' → logprob: -13.751177787780762
    6. ' GT' → logprob: -14.751177787780762
    7. 'GPT' → logprob: -15.251177787780762
    8. '_GT' → logprob: -15.376177787780762
    9. 'GMT' → logprob: -15.626177787780762
    10. 'MG' → logprob: -15.876177787780762

Token 32: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0022033092100173235
    2. '')' → logprob: -6.127203464508057
    3. ''
' → logprob: -12.127202987670898
    4. ')'' → logprob: -12.502202987670898
    5. 'A' → logprob: -13.127202987670898
    6. ''''' → logprob: -13.252202987670898
    7. '['' → logprob: -14.127202987670898
    8. ')' → logprob: -14.252202987670898
    9. 'AC' → logprob: -14.377202987670898
    10. '']' → logprob: -15.002202987670898

Token 33: 'states' (ID: 71154)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0890587717294693
    2. 'count' → logprob: -3.9640588760375977
    3. '@' → logprob: -4.089058876037598
    4. 'd' → logprob: -4.214058876037598
    5. 'def' → logprob: -4.714058876037598
    6. '
' → logprob: -5.339058876037598
    7. 'counts' → logprob: -5.589058876037598
    8. 'a' → logprob: -6.089058876037598
    9. '\' → logprob: -6.214058876037598
    10. '#' → logprob: -6.714058876037598

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0009193199803121388
    2. '=' → logprob: -7.000919342041016
    3. ' ' → logprob: -12.750919342041016
    4. ',' → logprob: -13.625919342041016
    5. '_' → logprob: -13.750919342041016
    6. ')' → logprob: -14.500919342041016
    7. '_count' → logprob: -15.250919342041016
    8. ' =)' → logprob: -15.250919342041016
    9. ' =[' → logprob: -15.375919342041016
    10. '_states' → logprob: -15.375919342041016

Token 35: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.018567778170108795
    2. ' ' → logprob: -5.1435675621032715
    3. 'default' → logprob: -5.6435675621032715
    4. ' {}' → logprob: -5.7685675621032715
    5. ' [' → logprob: -6.1435675621032715
    6. ' {' → logprob: -7.0185675621032715
    7. ' ['' → logprob: -7.0185675621032715
    8. ' set' → logprob: -7.3935675621032715
    9. ' []' → logprob: -7.7685675621032715
    10. ' {'' → logprob: -8.64356803894043

Token 36: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.061068691313266754
    2. '(lambda' → logprob: -3.0610687732696533
    3. '(list' → logprob: -4.936068534851074
    4. '(' → logprob: -5.311068534851074
    5. '(dict' → logprob: -8.936068534851074
    6. '(set' → logprob: -9.811068534851074
    7. 'int' → logprob: -10.561068534851074
    8. '(<' → logprob: -10.686068534851074
    9. '<int' → logprob: -11.311068534851074
    10. '(
' → logprob: -11.811068534851074

Token 37: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.265633419388905e-05
    2. '()' → logprob: -10.375062942504883
    3. ' )' → logprob: -11.500062942504883
    4. '())' → logprob: -11.625062942504883
    5. '[' → logprob: -11.875062942504883
    6. '))' → logprob: -13.375062942504883
    7. ')
' → logprob: -13.625062942504883
    8. '`)' → logprob: -14.625062942504883
    9. '])' → logprob: -14.750062942504883
    10. ')`' → logprob: -15.125062942504883

Token 38: 'states' (ID: 71154)
  Prédit: 'states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.8994381427764893
    2. ' states' → logprob: -1.7744381427764893
    3. '[' → logprob: -2.0244381427764893
    4. '[
' → logprob: -2.7744381427764893
    5. '(states' → logprob: -3.1494381427764893
    6. '
' → logprob: -3.1494381427764893
    7. 'for' → logprob: -3.2744381427764893
    8. ' 
' → logprob: -3.8994381427764893
    9. 's' → logprob: -4.14943790435791
    10. ' for' → logprob: -4.64943790435791

Token 39: '['' (ID: 1181)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1807784140110016
    2. '['' → logprob: -1.8057783842086792
    3. '["' → logprob: -7.930778503417969
    4. '[(' → logprob: -8.430778503417969
    5. '[]' → logprob: -9.430778503417969
    6. '```' → logprob: -9.680778503417969
    7. '\[' → logprob: -9.930778503417969
    8. '[...]' → logprob: -9.930778503417969
    9. '[
' → logprob: -10.305778503417969
    10. '.' → logprob: -10.805778503417969

Token 40: 'XXX' (ID: 53296)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '']' → logprob: -0.014087112620472908
    2. ''' → logprob: -5.264087200164795
    3. ' ']' → logprob: -5.389087200164795
    4. 'A' → logprob: -5.639087200164795
    5. 'AC' → logprob: -9.139086723327637
    6. ''>' → logprob: -9.139086723327637
    7. '"]' → logprob: -9.764086723327637
    8. 'AAAA' → logprob: -9.764086723327637
    9. '']]' → logprob: -9.764086723327637
    10. ' '' → logprob: -9.764086723327637

Token 41: '']' (ID: 1089)
  Prédit: '']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -4.1080467781284824e-05
    2. '"]' → logprob: -11.375041007995605
    3. ''' → logprob: -11.625041007995605
    4. '']=' → logprob: -11.875041007995605
    5. 'X' → logprob: -12.250041007995605
    6. ']' → logprob: -12.875041007995605
    7. 'XXX' → logprob: -13.000041007995605
    8. '']]' → logprob: -14.375041007995605
    9. '')' → logprob: -14.750041007995605
    10. '']='' → logprob: -14.750041007995605

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13410590589046478
    2. '=' → logprob: -2.134105920791626
    3. ' +=' → logprob: -5.009105682373047
    4. ' ' → logprob: -8.509105682373047
    5. '+=' → logprob: -8.634105682373047
    6. '<|end|>' → logprob: -9.384105682373047
    7. ',' → logprob: -13.509105682373047
    8. ' +' → logprob: -13.509105682373047
    9. ' |=' → logprob: -13.759105682373047
    10. '+' → logprob: -14.009105682373047

Token 43: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.440506407059729e-05
    2. ' ' → logprob: -10.37503433227539
    3. '0' → logprob: -12.75003433227539
    4. '   ' → logprob: -16.62503433227539
    5. '<|end|>' → logprob: -18.18753433227539
    6. '`' → logprob: -18.25003433227539
    7. '```' → logprob: -18.25003433227539
    8. 'n' → logprob: -18.68753433227539
    9. '  ' → logprob: -18.81253433227539
    10. '۱' → logprob: -19.25003433227539

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3306015716807451e-05
    2. '0' → logprob: -11.62501335144043
    3. ' ' → logprob: -12.50001335144043
    4. '```' → logprob: -16.62501335144043
    5. '   ' → logprob: -17.12501335144043
    6. '<|end|>' → logprob: -17.18751335144043
    7. '`' → logprob: -17.25001335144043
    8. '۱' → logprob: -17.56251335144043
    9. '' → logprob: -18.06251335144043
    10. '  ' → logprob: -18.18751335144043

Token 45: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.49503758549690247
    2. '\n' → logprob: -1.24503755569458
    3. '```' → logprob: -2.62003755569458
    4. '\' → logprob: -4.62003755569458
    5. 'newline' → logprob: -4.74503755569458
    6. 'for' → logprob: -5.24503755569458
    7. '<|end|>' → logprob: -6.24503755569458
    8. 'n' → logprob: -6.62003755569458
    9. '

' → logprob: -7.62003755569458
    10. ' 
' → logprob: -7.74503755569458

Token 46: '@' (ID: 31)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4372498393058777
    2. '
' → logprob: -1.0622498989105225
    3. ' for' → logprob: -5.187249660491943
    4. '```' → logprob: -6.187249660491943
    5. '\n' → logprob: -7.187249660491943
    6. '<|end|>' → logprob: -10.562250137329102
    7. ' 
' → logprob: -10.812250137329102
    8. '\' → logprob: -10.812250137329102
    9. '

' → logprob: -11.312250137329102
    10. '  
' → logprob: -11.812250137329102

Token 47: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -15.375
    3. '@' → logprob: -16.625
    4. ' l' → logprob: -18.0
    5. '`' → logprob: -19.625
    6. '1' → logprob: -20.5
    7. '	l' → logprob: -20.625
    8. 'staticmethod' → logprob: -20.75
    9. '@@' → logprob: -20.875
    10. '``' → logprob: -21.375

Token 48: 'ru' (ID: 1942)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0022181766107678413
    2. 'ru' → logprob: -6.127218246459961
    3. '```' → logprob: -11.002218246459961
    4. '_r' → logprob: -12.752218246459961
    5. '	r' → logprob: -13.502218246459961
    6. 'ру' → logprob: -14.002218246459961
    7. 'rule' → logprob: -14.314718246459961
    8. 'a' → logprob: -14.377218246459961
    9. '_ru' → logprob: -14.439718246459961
    10. 'ruby' → logprob: -14.689718246459961

Token 49: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.00021343429398257285
    2. '_cached' → logprob: -9.125213623046875
    3. '_' → logprob: -10.125213623046875
    4. 'cache' → logprob: -10.500213623046875
    5. '_c' → logprob: -11.000213623046875
    6. '_ca' → logprob: -12.000213623046875
    7. '```' → logprob: -12.875213623046875
    8. ' _' → logprob: -13.250213623046875
    9. '_wrap' → logprob: -13.750213623046875
    10. 'Cache' → logprob: -13.875213623046875

Token 50: '(max' (ID: 17178)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17484626173973083
    2. '(None' → logprob: -1.9248462915420532
    3. 'None' → logprob: -4.924846172332764
    4. '(int' → logprob: -5.674846172332764
    5. '(max' → logprob: -6.549846172332764
    6. '
' → logprob: -7.174846172332764
    7. 'int' → logprob: -7.674846172332764
    8. '()' → logprob: -8.049846649169922
    9. '(def' → logprob: -8.549846649169922
    10. '(' → logprob: -8.674846649169922

Token 51: 'size' (ID: 4461)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7097358703613281
    2. 'size' → logprob: -1.3347358703613281
    3. '=None' → logprob: -1.4597358703613281
    4. '_size' → logprob: -4.959735870361328
    5. ')' → logprob: -6.709735870361328
    6. '_cache' → logprob: -6.834735870361328
    7. '256' → logprob: -6.959735870361328
    8. '(None' → logprob: -7.459735870361328
    9. '(' → logprob: -7.709735870361328
    10. '=size' → logprob: -8.209735870361328

Token 52: '=None' (ID: 12783)
  Prédit: '=None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=None' → logprob: -0.16022644937038422
    2. '=' → logprob: -1.9102264642715454
    3. 'None' → logprob: -13.535226821899414
    4. '=

' → logprob: -15.035226821899414
    5. '=
' → logprob: -15.660226821899414
    6. '(None' → logprob: -15.785226821899414
    7. '=}' → logprob: -16.535226821899414
    8. '=`' → logprob: -16.660226821899414
    9. ')=' → logprob: -16.785226821899414
    10. ')' → logprob: -16.785226821899414

Token 53: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004857884719967842
    2. ')
' → logprob: -5.379858016967773
    3. 'def' → logprob: -8.379858016967773
    4. ' )' → logprob: -13.629858016967773
    5. '`)' → logprob: -13.754858016967773
    6. ')
' → logprob: -14.129858016967773
    7. '
' → logprob: -14.129858016967773
    8. ')`' → logprob: -14.379858016967773
    9. '):' → logprob: -14.379858016967773
    10. '```' → logprob: -14.879858016967773

Token 54: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00015133652777876705
    2. '
' → logprob: -9.000151634216309
    3. ' def' → logprob: -10.875151634216309
    4. '<|end|>' → logprob: -12.625151634216309
    5. '(def' → logprob: -13.125151634216309
    6. '```' → logprob: -14.125151634216309
    7. '\' → logprob: -14.250151634216309
    8. '('' → logprob: -14.500151634216309
    9. 'de' → logprob: -15.250151634216309
    10. '  
' → logprob: -15.375151634216309

Token 55: ' acceptable' (ID: 34028)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.4603334963321686
    2. ' dp' → logprob: -1.5853334665298462
    3. ' count' → logprob: -2.5853335857391357
    4. 'dp' → logprob: -2.9603335857391357
    5. 'dfs' → logprob: -3.4603335857391357
    6. 'count' → logprob: -5.335333347320557
    7. ' solve' → logprob: -7.835333347320557
    8. 'solve' → logprob: -9.585333824157715
    9. ' f' → logprob: -10.085333824157715
    10. 'def' → logprob: -11.085333824157715

Token 56: '(t' (ID: 2025)
  Prédit: '(state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(state' → logprob: -0.08252375572919846
    2. '(s' → logprob: -3.457523822784424
    3. '(sequence' → logprob: -4.207523822784424
    4. '(states' → logprob: -4.457523822784424
    5. '(' → logprob: -4.707523822784424
    6. '(seq' → logprob: -4.957523822784424
    7. '(string' → logprob: -6.832523822784424
    8. '(word' → logprob: -7.332523822784424
    9. '(sub' → logprob: -7.457523822784424
    10. '(pattern' → logprob: -8.082523345947266

Token 57: ':' (ID: 25)
  Prédit: 'oken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'oken' → logprob: -0.14835430681705475
    2. ')' → logprob: -3.3983542919158936
    3. 'ext' → logprob: -3.6483542919158936
    4. 'rip' → logprob: -3.8983542919158936
    5. 'ok' → logprob: -4.273354530334473
    6. '):' → logprob: -4.398354530334473
    7. 'okens' → logprob: -4.648354530334473
    8. 'uple' → logprob: -4.898354530334473
    9. '):

' → logprob: -5.898354530334473
    10. 'r' → logprob: -6.023354530334473

Token 58: ' str' (ID: 989)
  Prédit: 'uple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uple' → logprob: -0.15521934628486633
    2. 'str' → logprob: -2.155219316482544
    3. 'r' → logprob: -4.280219554901123
    4. 'ple' → logprob: -4.905219554901123
    5. 'up' → logprob: -5.905219554901123
    6. 'tuple' → logprob: -6.405219554901123
    7. 'oken' → logprob: -6.530219554901123
    8. ' str' → logprob: -8.405219078063965
    9. 'ples' → logprob: -9.530219078063965
    10. 'ext' → logprob: -9.530219078063965

Token 59: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5237399935722351
    2. ')' → logprob: -0.8987399935722351
    3. '):
' → logprob: -7.898739814758301
    4. ')->' → logprob: -9.1487398147583
    5. '):
' → logprob: -9.7737398147583
    6. ' ):' → logprob: -10.1487398147583
    7. ',' → logprob: -10.8987398147583
    8. ' )' → logprob: -11.8987398147583
    9. '   ' → logprob: -12.3987398147583
    10. ':' → logprob: -12.8987398147583

Token 60: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019401769386604428
    2. '):' → logprob: -7.0019402503967285
    3. ' :' → logprob: -7.2519402503967285
    4. ':return' → logprob: -8.50193977355957
    5. '->' → logprob: -9.87693977355957
    6. ')' → logprob: -10.75193977355957
    7. ' ->' → logprob: -11.37693977355957
    8. '():' → logprob: -11.50193977355957
    9. ':**' → logprob: -12.12693977355957
    10. ':def' → logprob: -12.87693977355957

Token 61: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.01286417618393898
    2. ' bool' → logprob: -4.387864112854004
    3. 'int' → logprob: -8.012864112854004
    4. '<bool' → logprob: -11.262864112854004
    5. ' ' → logprob: -12.887864112854004
    6. 'b' → logprob: -13.137864112854004
    7. ' int' → logprob: -13.387864112854004
    8. '(bool' → logprob: -13.512864112854004
    9. '	bool' → logprob: -14.137864112854004
    10. '  ' → logprob: -14.387864112854004

Token 62: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002478985348716378
    2. '):' → logprob: -6.127479076385498
    3. '():' → logprob: -9.00247859954834
    4. ' :' → logprob: -9.00247859954834
    5. ':return' → logprob: -11.00247859954834
    6. ':**' → logprob: -11.12747859954834
    7. ':
' → logprob: -11.75247859954834
    8. '<|end|>' → logprob: -12.62747859954834
    9. ')' → logprob: -13.75247859954834
    10. '   ' → logprob: -14.25247859954834

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03745466098189354
    2. 'for' → logprob: -4.162454605102539
    3. ' if' → logprob: -4.537454605102539
    4. ' for' → logprob: -5.162454605102539
    5. 'if' → logprob: -5.912454605102539
    6. '    ' → logprob: -7.787454605102539
    7. '    
' → logprob: -7.787454605102539
    8. ' ' → logprob: -8.162454605102539
    9. '  ' → logprob: -8.412454605102539
    10. '#' → logprob: -9.162454605102539

Token 64: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.244889497756958
    2. 'if' → logprob: -1.619889497756958
    3. '   ' → logprob: -4.619889259338379
    4. 'return' → logprob: -5.869889259338379
    5. ' for' → logprob: -5.994889259338379
    6. ' if' → logprob: -6.119889259338379
    7. '#' (adapté à ' #') → logprob: -7.369889259338379
    8. 'n' → logprob: -8.244889259338379
    9. '
' → logprob: -8.369889259338379
    10. 'bad' → logprob: -8.494889259338379

Token 65: ' Check' (ID: 6208)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7328136563301086
    2. '   ' → logprob: -1.8578135967254639
    3. 'for' → logprob: -1.8578135967254639
    4. ' return' → logprob: -2.232813596725464
    5. ' if' → logprob: -3.107813596725464
    6. 'return' → logprob: -3.732813596725464
    7. 'if' → logprob: -4.482813835144043
    8. ' ' → logprob: -4.982813835144043
    9. ')' → logprob: -6.232813835144043
    10. '  ' → logprob: -6.357813835144043

Token 66: ' if' (ID: 538)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2215859740972519
    2. ''t' → logprob: -2.221585988998413
    3. 't' → logprob: -3.346585988998413
    4. ' ' → logprob: -4.596585750579834
    5. ' '' → logprob: -4.846585750579834
    6. 'if' → logprob: -4.971585750579834
    7. '('' → logprob: -5.471585750579834
    8. 'any' → logprob: -5.596585750579834
    9. ' any' → logprob: -5.721585750579834
    10. '   ' → logprob: -5.846585750579834

Token 67: ' any' (ID: 1062)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.030764302238821983
    2. '"' → logprob: -4.655764102935791
    3. ''t' → logprob: -4.655764102935791
    4. ''any' → logprob: -5.780764102935791
    5. 'any' → logprob: -6.655764102935791
    6. ' '' → logprob: -6.905764102935791
    7. '('' → logprob: -6.905764102935791
    8. ''T' → logprob: -7.030764102935791
    9. ''GC' → logprob: -7.280764102935791
    10. ''A' → logprob: -7.280764102935791

Token 68: ' AG' (ID: 19215)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.4212807416915894
    2. ''' → logprob: -1.5462807416915894
    3. 's' → logprob: -2.796280860900879
    4. 'for' → logprob: -2.796280860900879
    5. 'abc' → logprob: -3.046280860900879
    6. 'seq' → logprob: -3.171280860900879
    7. ''ab' → logprob: -3.421280860900879
    8. '(t' → logprob: -3.546280860900879
    9. 'a' → logprob: -3.796280860900879
    10. '"' → logprob: -4.046280860900879

Token 69: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.2889790534973145
    2. 'CT' → logprob: -1.2889790534973145
    3. ''' → logprob: -2.0389790534973145
    4. ' in' → logprob: -2.2889790534973145
    5. 'T' → logprob: -2.6639790534973145
    6. 't' → logprob: -2.7889790534973145
    7. 'G' → logprob: -3.6639790534973145
    8. 'AC' → logprob: -3.9139790534973145
    9. 'A' → logprob: -4.2889790534973145
    10. ' not' → logprob: -5.0389790534973145

Token 70: ' can' (ID: 665)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.32295212149620056
    2. 'in' → logprob: -2.1979520320892334
    3. 'substring' → logprob: -3.1979520320892334
    4. ' substring' → logprob: -3.3229520320892334
    5. ' sequence' → logprob: -3.6979520320892334
    6. ' is' → logprob: -3.8229520320892334
    7. 'sequence' → logprob: -4.1979522705078125
    8. 'pattern' → logprob: -5.0729522705078125
    9. ' occurs' → logprob: -5.4479522705078125
    10. ' pattern' → logprob: -5.4479522705078125

Token 71: ' be' (ID: 413)
  Prédit: ' appear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' appear' → logprob: -0.6547693610191345
    2. ' be' → logprob: -1.1547694206237793
    3. ' occur' → logprob: -2.7797694206237793
    4. ' in' → logprob: -3.0297694206237793
    5. 'appear' → logprob: -3.5297694206237793
    6. ' ' → logprob: -5.154769420623779
    7. 'occur' → logprob: -5.654769420623779
    8. 'in' → logprob: -5.779769420623779
    9. ' found' → logprob: -6.029769420623779
    10. ' not' → logprob: -6.404769420623779

Token 72: ' formed' (ID: 20680)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.9542732834815979
    2. ' found' → logprob: -1.3292732238769531
    3. ' formed' → logprob: -1.8292732238769531
    4. 'formed' → logprob: -1.9542732238769531
    5. 't' → logprob: -4.829273223876953
    6. 'generated' → logprob: -5.579273223876953
    7. ' detected' → logprob: -5.579273223876953
    8. 'f' → logprob: -5.704273223876953
    9. 'created' → logprob: -6.329273223876953
    10. 'det' → logprob: -6.454273223876953

Token 73: ' by' (ID: 656)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4794212281703949
    2. '   ' → logprob: -1.2294212579727173
    3. '):' → logprob: -3.4794211387634277
    4. '<|end|>' → logprob: -3.9794211387634277
    5. ')' → logprob: -4.104421138763428
    6. ' ' → logprob: -5.354421138763428
    7. ' :' → logprob: -5.604421138763428
    8. '  ' → logprob: -5.854421138763428
    9. ' or' → logprob: -5.854421138763428
    10. '<|end|>' → logprob: -6.104421138763428

Token 74: ' single' (ID: 4590)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3468298614025116
    2. 't' → logprob: -1.846829891204834
    3. ' inserting' → logprob: -3.346829891204834
    4. 're' → logprob: -4.096829891204834
    5. ' replacing' → logprob: -4.096829891204834
    6. 'changing' → logprob: -4.346829891204834
    7. 'adding' → logprob: -5.096829891204834
    8. 'sw' → logprob: -5.221829891204834
    9. ' t' → logprob: -5.221829891204834
    10. 'insert' → logprob: -5.471829891204834

Token 75: ' swap' (ID: 25489)
  Prédit: ' insertion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' insertion' → logprob: -0.13050413131713867
    2. ' insert' → logprob: -2.7555041313171387
    3. ' replacement' → logprob: -4.255504131317139
    4. 'insert' → logprob: -4.380504131317139
    5. 's' → logprob: -4.880504131317139
    6. 'replacement' → logprob: -5.130504131317139
    7. ' or' → logprob: -5.255504131317139
    8. ' change' → logprob: -6.755504131317139
    9. ' deletion' → logprob: -6.755504131317139
    10. 't' → logprob: -6.880504131317139

Token 76: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7380109429359436
    2. ':' → logprob: -1.1130108833312988
    3. '):' → logprob: -2.613010883331299
    4. ' :' → logprob: -2.738010883331299
    5. ')' → logprob: -3.863010883331299
    6. ' ' → logprob: -4.738010883331299
    7. '  ' → logprob: -5.113010883331299
    8. '<|end|>' → logprob: -5.113010883331299
    9. '    ' → logprob: -5.863010883331299
    10. ' ):' → logprob: -6.363010883331299

Token 77: ' last' (ID: 2174)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6885925531387329
    2. 'range' → logprob: -1.688592553138733
    3. ' range' → logprob: -1.688592553138733
    4. ' t' → logprob: -2.0635924339294434
    5. ' ' → logprob: -7.563592433929443
    6. ' the' → logprob: -9.313592910766602
    7. '[t' → logprob: -9.313592910766602
    8. 'the' → logprob: -9.438592910766602
    9. '   ' → logprob: -9.438592910766602
    10. '(t' → logprob: -9.563592910766602

Token 78: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.07826385647058487
    2. '4' → logprob: -2.703263759613037
    3. ' ' → logprob: -4.828263759613037
    4. ' three' → logprob: -8.828264236450195
    5. 'three' → logprob: -9.328264236450195
    6. '   ' → logprob: -11.203264236450195
    7. 'len' → logprob: -11.328264236450195
    8. 't' → logprob: -12.203264236450195
    9. 'four' → logprob: -12.453264236450195
    10. '```' → logprob: -12.703264236450195

Token 79: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.20201489329338074
    2. '3' → logprob: -1.7020149230957031
    3. ' ' → logprob: -7.702014923095703
    4. 'four' → logprob: -9.702014923095703
    5. '2' → logprob: -10.702014923095703
    6. ' four' → logprob: -10.827014923095703
    7. 'three' → logprob: -11.077014923095703
    8. 'len' → logprob: -11.452014923095703
    9. ' three' → logprob: -12.202014923095703
    10. '1' → logprob: -12.702014923095703

Token 80: ' chars' (ID: 47991)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8545695543289185
    2. ':' → logprob: -1.7295695543289185
    3. ')' → logprob: -1.9795695543289185
    4. ' ):' → logprob: -2.729569435119629
    5. ' ' → logprob: -3.479569435119629
    6. ' :' → logprob: -3.854569435119629
    7. 't' → logprob: -3.854569435119629
    8. 's' → logprob: -4.104569435119629
    9. '   ' → logprob: -4.104569435119629
    10. ' or' → logprob: -4.104569435119629

Token 81: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18409685790538788
    2. ':' → logprob: -1.9340968132019043
    3. ' :' → logprob: -4.934096813201904
    4. ')' → logprob: -5.059096813201904
    5. '):' → logprob: -5.434096813201904
    6. '<|end|>' → logprob: -5.934096813201904
    7. '    ' → logprob: -7.309096813201904
    8. ' ' → logprob: -7.559096813201904
    9. '
' → logprob: -7.684096813201904
    10. '<|end|>' → logprob: -8.559097290039062

Token 82: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7043505907058716
    2. '   ' → logprob: -0.8293505907058716
    3. '):' → logprob: -3.079350471496582
    4. ')' → logprob: -4.329350471496582
    5. ' :' → logprob: -5.204350471496582
    6. '<|end|>' → logprob: -6.579350471496582
    7. ' ' → logprob: -6.954350471496582
    8. '    ' → logprob: -8.204350471496582
    9. '  ' → logprob: -8.329350471496582
    10. ':
' → logprob: -8.454350471496582

Token 83: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3531839847564697
    2. ' ' → logprob: -1.7281839847564697
    3. ' 
' → logprob: -3.8531839847564697
    4. ')' → logprob: -3.9781839847564697
    5. '\n' → logprob: -4.353183746337891
    6. ':' → logprob: -4.478183746337891
    7. ' \' → logprob: -4.603183746337891
    8. '\' → logprob: -4.728183746337891
    9. '
' → logprob: -4.728183746337891
    10. '    
' → logprob: -4.978183746337891

Token 84: ' pos' (ID: 1253)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.009950626641511917
    2. 'i' → logprob: -4.634950637817383
    3. ' ' → logprob: -9.384950637817383
    4. ' _' → logprob: -10.134950637817383
    5. '_' → logprob: -10.634950637817383
    6. ' range' → logprob: -11.009950637817383
    7. '_i' → logprob: -12.009950637817383
    8. 'range' → logprob: -12.259950637817383
    9. ' idx' → logprob: -12.509950637817383
    10. '   ' → logprob: -12.509950637817383

Token 85: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0024502077139914036
    2. 'in' → logprob: -6.627449989318848
    3. ',' → logprob: -7.002449989318848
    4. ' ' → logprob: -8.877449989318848
    5. ' ,' → logprob: -10.752449989318848
    6. ' i' → logprob: -11.252449989318848
    7. 'i' → logprob: -11.502449989318848
    8. 's' → logprob: -11.877449989318848
    9. '  ' → logprob: -12.127449989318848
    10. 'range' → logprob: -12.627449989318848

Token 86: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.005275619216263294
    2. 'range' → logprob: -5.255275726318359
    3. '[' → logprob: -10.38027572631836
    4. ' [' → logprob: -12.13027572631836
    5. ' ' → logprob: -13.25527572631836
    6. '(range' → logprob: -13.63027572631836
    7. '   ' → logprob: -14.13027572631836
    8. '	range' → logprob: -14.25527572631836
    9. '  ' → logprob: -14.50527572631836
    10. '[-' → logprob: -16.25527572631836

Token 87: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0430319607257843
    2. '(len' → logprob: -3.168031930923462
    3. 'len' → logprob: -11.543031692504883
    4. '(max' → logprob: -11.793031692504883
    5. '(-' → logprob: -12.543031692504883
    6. ' ' → logprob: -12.543031692504883
    7. '3' → logprob: -12.918031692504883
    8. ' (' → logprob: -13.418031692504883
    9. '4' → logprob: -13.418031692504883
    10. '   ' → logprob: -13.918031692504883

Token 88: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.44971150159835815
    2. '3' → logprob: -1.074711561203003
    3. ' ' → logprob: -4.699711322784424
    4. 'len' → logprob: -4.824711322784424
    5. '2' → logprob: -6.449711322784424
    6. '1' → logprob: -6.574711322784424
    7. 'max' → logprob: -8.074711799621582
    8. ' len' → logprob: -8.824711799621582
    9. '5' → logprob: -9.324711799621582
    10. '   ' → logprob: -9.574711799621582

Token 89: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.27451083064079285
    2. ' -' → logprob: -2.0245108604431152
    3. '-' → logprob: -2.3995108604431152
    4. ' ):' → logprob: -4.649510860443115
    5. '):
' → logprob: -5.024510860443115
    6. ')' → logprob: -7.274510860443115
    7. '   ' → logprob: -8.399510383605957
    8. ' ' → logprob: -9.899510383605957
    9. ' ):
' → logprob: -10.274510383605957
    10. ' )' → logprob: -10.524510383605957

Token 90: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7114095687866211
    2. '       ' → logprob: -0.8364095687866211
    3. '    ' → logprob: -3.211409568786621
    4. ' if' → logprob: -4.086409568786621
    5. ' ' → logprob: -4.586409568786621
    6. ' s' → logprob: -6.461409568786621
    7. '<|end|>' → logprob: -6.586409568786621
    8. ')' → logprob: -7.461409568786621
    9. ',' → logprob: -7.586409568786621
    10. ' for' → logprob: -7.711409568786621

Token 91: ' arr' (ID: 1724)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5713182687759399
    2. ' s' → logprob: -1.69631826877594
    3. ' for' → logprob: -2.6963181495666504
    4. '   ' → logprob: -2.6963181495666504
    5. 's' → logprob: -3.5713181495666504
    6. 'if' → logprob: -3.6963181495666504
    7. '       ' → logprob: -4.69631814956665
    8. ' t' → logprob: -4.69631814956665
    9. '    ' → logprob: -4.82131814956665
    10. ' tmp' → logprob: -4.94631814956665

Token 92: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004666861146688461
    2. '=' → logprob: -5.379666805267334
    3. '[' → logprob: -11.504667282104492
    4. '   ' → logprob: -12.254667282104492
    5. ')' → logprob: -12.379667282104492
    6. 's' → logprob: -12.504667282104492
    7. ' =[' → logprob: -12.629667282104492
    8. '[:]' → logprob: -12.879667282104492
    9. '=[' → logprob: -13.129667282104492
    10. ' ' → logprob: -13.254667282104492

Token 93: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.7020763158798218
    2. 'list' → logprob: -0.7020763158798218
    3. ' t' → logprob: -5.202076435089111
    4. 't' → logprob: -5.827076435089111
    5. '[t' → logprob: -9.452075958251953
    6. '[list' → logprob: -9.577075958251953
    7. '   ' → logprob: -9.702075958251953
    8. '[' → logprob: -9.702075958251953
    9. ' [' → logprob: -10.327075958251953
    10. 'chars' → logprob: -10.952075958251953

Token 94: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -3.023293538717553e-05
    2. '(' → logprob: -10.750030517578125
    3. 't' → logprob: -11.750030517578125
    4. '(range' → logprob: -15.000030517578125
    5. '('' → logprob: -15.625030517578125
    6. '(s' → logprob: -16.125030517578125
    7. ' t' → logprob: -17.125030517578125
    8. '(arr' → logprob: -17.625030517578125
    9. '(chars' → logprob: -17.750030517578125
    10. '(
' → logprob: -18.375030517578125

Token 95: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0707240030169487
    2. ')
' → logprob: -2.6957240104675293
    3. ')
' → logprob: -7.570724010467529
    4. '       ' → logprob: -9.195723533630371
    5. '   ' → logprob: -10.070723533630371
    6. '[' → logprob: -10.195723533630371
    7. '[:' → logprob: -10.445723533630371
    8. ')

' → logprob: -11.195723533630371
    9. ' )' → logprob: -11.695723533630371
    10. '           ' → logprob: -12.320723533630371

Token 96: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0044974153861403465
    2. '<|end|>' → logprob: -6.129497528076172
    3. ' if' → logprob: -6.879497528076172
    4. '   ' → logprob: -7.754497528076172
    5. ' for' → logprob: -8.004497528076172
    6. '           ' → logprob: -9.129497528076172
    7. '        ' → logprob: -9.754497528076172
    8. '    ' → logprob: -10.129497528076172
    9. '<|end|>' → logprob: -10.254497528076172
    10. ' ' → logprob: -10.254497528076172

Token 97: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5292118787765503
    2. 'if' (adapté à ' if') → logprob: -1.0292118787765503
    3. 'for' → logprob: -3.90421199798584
    4. ' for' → logprob: -4.27921199798584
    5. '       ' → logprob: -4.65421199798584
    6. 'arr' → logprob: -5.02921199798584
    7. ' arr' → logprob: -5.90421199798584
    8. '   ' → logprob: -7.52921199798584
    9. '           ' → logprob: -8.52921199798584
    10. '[arr' → logprob: -10.90421199798584

Token 98: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.062024373561143875
    2. 'pos' → logprob: -2.8120243549346924
    3. '0' → logprob: -10.437024116516113
    4. '	pos' → logprob: -11.687024116516113
    5. ' ' → logprob: -12.312024116516113
    6. '   ' → logprob: -13.062024116516113
    7. '(pos' → logprob: -13.187024116516113
    8. '1' → logprob: -13.187024116516113
    9. '    ' → logprob: -13.812024116516113
    10. ' len' → logprob: -13.812024116516113

Token 99: ' >' (ID: 1424)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.013850589282810688
    2. '<' → logprob: -4.513850688934326
    3. '<len' → logprob: -6.388850688934326
    4. '+' → logprob: -7.638850688934326
    5. ' >' → logprob: -8.138850212097168
    6. ' +' → logprob: -9.138850212097168
    7. '<n' → logprob: -9.513850212097168
    8. ' ' → logprob: -9.763850212097168
    9. '>' → logprob: -10.138850212097168
    10. ' ==' → logprob: -11.263850212097168

Token 100: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.179789736866951
    2. ' ' → logprob: -1.8047897815704346
    3. '=' → logprob: -10.804789543151855
    4. '1' → logprob: -11.179789543151855
    5. '   ' → logprob: -13.242289543151855
    6. '  ' → logprob: -13.554789543151855
    7. '2' → logprob: -13.617289543151855
    8. '3' → logprob: -13.929789543151855
    9. '

' → logprob: -13.929789543151855
    10. '    ' → logprob: -14.117289543151855

Token 101: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005934604909271002
    2. ' ' → logprob: -5.130934715270996
    3. '1' → logprob: -13.005934715270996
    4. '   ' → logprob: -13.630934715270996
    5. '2' → logprob: -14.130934715270996
    6. '=' → logprob: -14.880934715270996
    7. '```' → logprob: -15.193434715270996
    8. '3' → logprob: -15.380934715270996
    9. '

' → logprob: -15.818434715270996
    10. '  ' → logprob: -16.13093376159668

Token 102: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.11266862601041794
    2. 'and' → logprob: -2.362668514251709
    3. '           ' → logprob: -5.237668514251709
    4. ':' → logprob: -5.612668514251709
    5. ':
' → logprob: -6.112668514251709
    6. '       ' → logprob: -7.862668514251709
    7. '   ' → logprob: -8.112668991088867
    8. ' ' → logprob: -8.237668991088867
    9. ',' → logprob: -10.112668991088867
    10. '          ' → logprob: -10.237668991088867

Token 103: '           ' (ID: 352)
  Prédit: ' arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.5718005895614624
    2. '           ' → logprob: -1.0718005895614624
    3. 'arr' → logprob: -2.446800708770752
    4. '               ' → logprob: -5.571800708770752
    5. '	arr' → logprob: -6.696800708770752
    6. '   ' → logprob: -7.821800708770752
    7. '[arr' → logprob: -7.946800708770752
    8. '       ' → logprob: -8.446800231933594
    9. '(arr' → logprob: -8.946800231933594
    10. '<arr' → logprob: -9.821800231933594

Token 104: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' (adapté à ' arr') → logprob: -0.16177727282047272
    2. ' arr' → logprob: -1.9117772579193115
    3. '           ' → logprob: -7.161777496337891
    4. '	arr' → logprob: -7.661777496337891
    5. '               ' → logprob: -9.53677749633789
    6. '   ' → logprob: -9.66177749633789
    7. '[arr' → logprob: -9.91177749633789
    8. '(arr' → logprob: -10.16177749633789
    9. '<arr' → logprob: -10.78677749633789
    10. '       ' → logprob: -11.16177749633789

Token 105: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.0003254527400713414
    2. ',' → logprob: -8.750325202941895
    3. ',pos' → logprob: -9.000325202941895
    4. '[' → logprob: -11.000325202941895
    5. '   ' → logprob: -11.750325202941895
    6. 'pos' → logprob: -12.250325202941895
    7. ' ,' → logprob: -12.750325202941895
    8. '[arr' → logprob: -13.000325202941895
    9. '[i' → logprob: -13.375325202941895
    10. '[-' → logprob: -13.750325202941895

Token 106: '-' (ID: 12)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.005359213799238205
    2. '-' → logprob: -5.880359172821045
    3. ',' → logprob: -6.255359172821045
    4. ' -' → logprob: -7.880359172821045
    5. ']' → logprob: -8.755359649658203
    6. ' ],' → logprob: -9.630359649658203
    7. ' ,' → logprob: -11.755359649658203
    8. '   ' → logprob: -12.005359649658203
    9. '),' → logprob: -12.130359649658203
    10. '},' → logprob: -13.005359649658203

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007681751740165055
    2. ' ' → logprob: -7.250768184661865
    3. 'pos' → logprob: -10.125767707824707
    4. ']' → logprob: -11.500767707824707
    5. '```' → logprob: -13.125767707824707
    6. '0' → logprob: -13.250767707824707
    7. '   ' → logprob: -13.625767707824707
    8. ')' → logprob: -13.875767707824707
    9. ' pos' → logprob: -14.125767707824707
    10. '    ' → logprob: -15.000767707824707

Token 108: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.2818756699562073
    2. ',' → logprob: -1.4068756103515625
    3. ' ,' → logprob: -7.5318756103515625
    4. '>,' → logprob: -9.656875610351562
    5. ' ],' → logprob: -10.031875610351562
    6. '},' → logprob: -11.156875610351562
    7. ' ' → logprob: -11.656875610351562
    8. '),' → logprob: -11.781875610351562
    9. 'swap' → logprob: -12.031875610351562
    10. ']' → logprob: -12.156875610351562

Token 109: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.12696044147014618
    2. ' arr' → logprob: -2.126960515975952
    3. '	arr' → logprob: -10.626960754394531
    4. '$arr' → logprob: -12.751960754394531
    5. '[arr' → logprob: -12.751960754394531
    6. '(arr' → logprob: -13.626960754394531
    7. '<arr' → logprob: -14.876960754394531
    8. '<|end|>' → logprob: -15.001960754394531
    9. ' ' → logprob: -15.126960754394531
    10. '.arr' → logprob: -17.12696075439453

Token 110: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -4.246537173457909e-06
    2. 'pos' → logprob: -12.875003814697266
    3. '[' → logprob: -13.625003814697266
    4. '[
' → logprob: -15.250003814697266
    5. '[arr' → logprob: -16.500003814697266
    6. '
' → logprob: -17.375003814697266
    7. '[position' → logprob: -17.500003814697266
    8. '```' → logprob: -17.625003814697266
    9. ',pos' → logprob: -17.750003814697266
    10. '	pos' → logprob: -17.875003814697266

Token 111: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005054924986325204
    2. ' ]' → logprob: -7.750505447387695
    3. '],' → logprob: -10.500505447387695
    4. ']=' → logprob: -11.000505447387695
    5. ']+=' → logprob: -12.000505447387695
    6. '-' → logprob: -12.250505447387695
    7. '+' → logprob: -12.250505447387695
    8. ' ' → logprob: -12.625505447387695
    9. '<|end|>' → logprob: -12.750505447387695
    10. '   ' → logprob: -13.625505447387695

Token 112: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012510941363871098
    2. ' =' → logprob: -4.387510776519775
    3. ',' → logprob: -15.137511253356934
    4. '=

' → logprob: -15.137511253356934
    5. '<|end|>' → logprob: -16.387510299682617
    6. ']=' → logprob: -16.387510299682617
    7. '＝' → logprob: -16.637510299682617
    8. '.=' → logprob: -16.887510299682617
    9. '_swap' → logprob: -16.887510299682617
    10. '=s' → logprob: -16.887510299682617

Token 113: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.009771670214831829
    2. ' arr' → logprob: -4.634771823883057
    3. '	arr' → logprob: -11.259771347045898
    4. '   ' → logprob: -14.009771347045898
    5. '           ' → logprob: -14.009771347045898
    6. ' ' → logprob: -15.009771347045898
    7. '[arr' → logprob: -15.009771347045898
    8. '$arr' → logprob: -15.509771347045898
    9. '(arr' → logprob: -15.759771347045898
    10. '<arr' → logprob: -16.3847713470459

Token 114: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.00011319868644932285
    2. 'pos' → logprob: -9.125113487243652
    3. ',pos' → logprob: -13.625113487243652
    4. '[' → logprob: -14.250113487243652
    5. '   ' → logprob: -14.625113487243652
    6. ' ' → logprob: -14.875113487243652
    7. ']' → logprob: -15.500113487243652
    8. '(pos' → logprob: -15.500113487243652
    9. 'arr' → logprob: -15.750113487243652
    10. '[arr' → logprob: -15.875113487243652

Token 115: '],' (ID: 2155)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01403974462300539
    2. '],' → logprob: -4.389039516448975
    3. ',' → logprob: -7.389039516448975
    4. ' -' → logprob: -7.514039516448975
    5. ']' → logprob: -9.014039993286133
    6. '1' → logprob: -9.264039993286133
    7. '   ' → logprob: -9.889039993286133
    8. ' ' → logprob: -10.139039993286133
    9. 'pos' → logprob: -11.139039993286133
    10. '0' → logprob: -11.139039993286133

Token 116: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.5759477615356445
    2. ' arr' → logprob: -0.8259477615356445
    3. '	arr' → logprob: -12.075947761535645
    4. '(arr' → logprob: -13.575947761535645
    5. '[arr' → logprob: -14.450947761535645
    6. '$arr' → logprob: -15.325947761535645
    7. ' ' → logprob: -15.450947761535645
    8. '<arr' → logprob: -16.200946807861328
    9. '           ' → logprob: -16.700946807861328
    10. '   ' → logprob: -16.950946807861328

Token 117: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.43407002091407776
    2. '-' → logprob: -1.0590699911117554
    3. 'pos' → logprob: -5.309070110321045
    4. '-pos' → logprob: -8.309069633483887
    5. '[' → logprob: -9.684069633483887
    6. '_pos' → logprob: -10.684069633483887
    7. '[-' → logprob: -10.809069633483887
    8. ' -' → logprob: -11.434069633483887
    9. ' pos' → logprob: -11.684069633483887
    10. ']' → logprob: -12.309069633483887

Token 118: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.204720582696609e-05
    2. ' -' → logprob: -9.875052452087402
    3. '1' → logprob: -15.125052452087402
    4. ']' → logprob: -15.875052452087402
    5. '[' → logprob: -16.500051498413086
    6. ' ' → logprob: -17.125051498413086
    7. '   ' → logprob: -17.375051498413086
    8. 'pos' → logprob: -17.750051498413086
    9. ']-' → logprob: -18.250051498413086
    10. '```' → logprob: -18.625051498413086

Token 119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023131117632146925
    2. ' ' → logprob: -8.375231742858887
    3. '0' → logprob: -15.375231742858887
    4. '2' → logprob: -16.25023078918457
    5. '```' → logprob: -16.75023078918457
    6. 'pos' → logprob: -16.87523078918457
    7. '   ' → logprob: -16.93773078918457
    8. '<|end|>' → logprob: -17.25023078918457
    9. '<|end|>' → logprob: -17.25023078918457
    10. '-' → logprob: -17.37523078918457

Token 120: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06239974871277809
    2. ')' → logprob: -2.8123998641967773
    3. '])' → logprob: -8.562399864196777
    4. ')]' → logprob: -8.812399864196777
    5. ']
' → logprob: -10.062399864196777
    6. ')
' → logprob: -11.312399864196777
    7. '']' → logprob: -11.312399864196777
    8. '')' → logprob: -11.687399864196777
    9. ' ]' → logprob: -11.687399864196777
    10. '   ' → logprob: -13.187399864196777

Token 121: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06052520498633385
    2. '<|end|>' → logprob: -3.4355251789093018
    3. '   ' → logprob: -4.310525417327881
    4. ')' → logprob: -5.810525417327881
    5. ':' → logprob: -5.935525417327881
    6. '           ' → logprob: -6.060525417327881
    7. ',' → logprob: -7.435525417327881
    8. '        
' → logprob: -7.685525417327881
    9. ' 
' → logprob: -7.935525417327881
    10. ' ' → logprob: -7.935525417327881

Token 122: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30867043137550354
    2. '   ' → logprob: -2.1836705207824707
    3. ' for' → logprob: -2.3086705207824707
    4. 'for' → logprob: -3.5586705207824707
    5. ' if' → logprob: -3.9336705207824707
    6. 'if' (adapté à ' if') → logprob: -5.683670520782471
    7. '```' → logprob: -6.933670520782471
    8. '           ' → logprob: -7.808670520782471
    9. ')' → logprob: -8.058670043945312
    10. '    ' → logprob: -9.683670043945312

Token 123: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.28870657086372375
    2. '"' → logprob: -1.4137065410614014
    3. ' '' → logprob: -5.6637067794799805
    4. '''.' → logprob: -6.1637067794799805
    5. ' "' → logprob: -7.0387067794799805
    6. ' ''.' → logprob: -7.2887067794799805
    7. ''ag' → logprob: -9.03870677947998
    8. ''any' → logprob: -9.53870677947998
    9. ''T' → logprob: -10.66370677947998
    10. 'any' → logprob: -10.66370677947998

Token 124: 'AG' (ID: 2971)
  Prédit: 'AG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AG' → logprob: -0.018169373273849487
    2. ''' → logprob: -4.018169403076172
    3. '"' → logprob: -11.268169403076172
    4. ' AG' → logprob: -12.518169403076172
    5. ''ag' → logprob: -13.268169403076172
    6. ''GC' → logprob: -13.893169403076172
    7. 'AGN' → logprob: -15.143169403076172
    8. '_AG' → logprob: -16.268169403076172
    9. '.AG' → logprob: -16.643169403076172
    10. ''''' → logprob: -18.018169403076172

Token 125: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.000261216628132388
    2. ''C' → logprob: -9.125261306762695
    3. 'CT' → logprob: -9.250261306762695
    4. ' C' → logprob: -10.625261306762695
    5. ''' → logprob: -11.500261306762695
    6. 'С' → logprob: -13.000261306762695
    7. '>C' → logprob: -13.250261306762695
    8. '"C' → logprob: -13.500261306762695
    9. 'T' → logprob: -13.687761306762695
    10. '```' → logprob: -13.750261306762695

Token 126: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -6.074907287256792e-05
    2. ''in' → logprob: -10.00006103515625
    3. '')' → logprob: -11.37506103515625
    4. ''''' → logprob: -13.87506103515625
    5. '''' → logprob: -14.00006103515625
    6. 'A' → logprob: -14.50006103515625
    7. ')'' → logprob: -15.00006103515625
    8. ' in' → logprob: -15.25006103515625
    9. '"' → logprob: -15.75006103515625
    10. 'C' → logprob: -15.87506103515625

Token 127: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005257356911897659
    2. 'in' → logprob: -5.2552571296691895
    3. ' not' → logprob: -11.380257606506348
    4. ')' → logprob: -11.630257606506348
    5. ''in' → logprob: -13.630257606506348
    6. ''' → logprob: -14.880257606506348
    7. 'not' → logprob: -15.005257606506348
    8. ' ' → logprob: -15.255257606506348
    9. '<|end|>' → logprob: -15.630257606506348
    10. 's' → logprob: -15.880257606506348

Token 128: ' ''.' (ID: 105941)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.28586775064468384
    2. ' ''.' → logprob: -1.410867691040039
    3. 'arr' → logprob: -6.035867691040039
    4. ' "".' → logprob: -6.660867691040039
    5. ' arr' → logprob: -7.035867691040039
    6. '"' → logprob: -9.660867691040039
    7. '''' → logprob: -10.035867691040039
    8. '('' → logprob: -11.160867691040039
    9. '```' → logprob: -11.910867691040039
    10. '   ' → logprob: -11.910867691040039

Token 129: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -3.7697225252486533e-06
    2. '(join' → logprob: -12.750003814697266
    3. '.join' → logprob: -14.875003814697266
    4. ' join' → logprob: -14.875003814697266
    5. '```' → logprob: -16.875003814697266
    6. '''.' → logprob: -18.125003814697266
    7. 'concat' → logprob: -18.750003814697266
    8. 'joins' → logprob: -19.500003814697266
    9. 'jo' → logprob: -19.625003814697266
    10. 'Join' → logprob: -19.625003814697266

Token 130: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.1002098023891449
    2. 'arr' → logprob: -2.3502097129821777
    3. ' arr' → logprob: -13.100210189819336
    4. '[arr' → logprob: -14.100210189819336
    5. '	arr' → logprob: -15.225210189819336
    6. '<arr' → logprob: -16.225210189819336
    7. '$arr' → logprob: -17.475210189819336
    8. '(' → logprob: -17.725210189819336
    9. '_arr' → logprob: -18.600210189819336
    10. '.arr' → logprob: -19.850210189819336

Token 131: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0032226298935711384
    2. ')' → logprob: -6.003222465515137
    3. '):
' → logprob: -7.503222465515137
    4. ''):' → logprob: -9.128222465515137
    5. ' ):' → logprob: -9.878222465515137
    6. '   ' → logprob: -11.503222465515137
    7. ':' → logprob: -11.753222465515137
    8. ')):' → logprob: -12.878222465515137
    9. '[]):' → logprob: -13.378222465515137
    10. ']:' → logprob: -13.503222465515137

Token 132: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006766928127035499
    2. ':' → logprob: -8.375677108764648
    3. ' return' → logprob: -9.000677108764648
    4. '       ' → logprob: -9.750677108764648
    5. ':
' → logprob: -9.750677108764648
    6. ':return' → logprob: -9.750677108764648
    7. '               ' → logprob: -9.875677108764648
    8. 'return' → logprob: -9.875677108764648
    9. '          ' → logprob: -11.125677108764648
    10. '```' → logprob: -12.250677108764648

Token 133: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4718703329563141
    2. ' return' → logprob: -1.2218703031539917
    3. '           ' → logprob: -2.5968704223632812
    4. '       ' → logprob: -5.471870422363281
    5. '               ' → logprob: -6.471870422363281
    6. '
' → logprob: -7.721870422363281
    7. '   ' → logprob: -7.721870422363281
    8. '	return' → logprob: -8.346870422363281
    9. ':return' → logprob: -10.096870422363281
    10. '```' → logprob: -10.221870422363281

Token 134: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.15697138011455536
    2. ' False' → logprob: -2.1569714546203613
    3. 'True' → logprob: -3.9069714546203613
    4. ' True' → logprob: -4.656971454620361
    5. '(False' → logprob: -18.656970977783203
    6. ' ' → logprob: -19.281970977783203
    7. '(True' → logprob: -20.656970977783203
    8. '=False' → logprob: -21.406970977783203
    9. '   ' → logprob: -21.406970977783203
    10. '_false' → logprob: -21.531970977783203

Token 135: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009999402100220323
    2. ' return' → logprob: -7.875999927520752
    3. '	return' → logprob: -8.37600040435791
    4. '<|end|>' → logprob: -9.12600040435791
    5. '       ' → logprob: -9.75100040435791
    6. 'return' → logprob: -10.00100040435791
    7. '
' → logprob: -10.25100040435791
    8. '    
' → logprob: -10.37600040435791
    9. '  ' → logprob: -10.75100040435791
    10. ')' → logprob: -11.00100040435791

Token 136: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001176416757516563
    2. 'return' → logprob: -6.876176357269287
    3. ' return' → logprob: -9.376176834106445
    4. '	return' → logprob: -10.251176834106445
    5. '       ' → logprob: -11.251176834106445
    6. '+' → logprob: -13.126176834106445
    7. '   ' → logprob: -13.501176834106445
    8. ' ' → logprob: -13.501176834106445
    9. '  ' → logprob: -14.001176834106445
    10. '
' → logprob: -14.751176834106445

Token 137: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.711610734462738
    2. 'return' (adapté à ' return') → logprob: -0.711610734462738
    3. ' return' → logprob: -4.086610794067383
    4. '	return' → logprob: -6.836610794067383
    5. ' ' → logprob: -8.086610794067383
    6. '       ' → logprob: -10.586610794067383
    7. '  ' → logprob: -10.961610794067383
    8. '
' → logprob: -11.586610794067383
    9. ':return' → logprob: -11.711610794067383
    10. 'True' → logprob: -11.836610794067383

Token 138: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.01416350994259119
    2. ' True' → logprob: -4.264163494110107
    3. '(True' → logprob: -19.014163970947266
    4. 'Tr' → logprob: -20.264163970947266
    5. 'False' → logprob: -20.264163970947266
    6. ' ' → logprob: -21.139163970947266
    7. '=True' → logprob: -21.264163970947266
    8. 'true' → logprob: -22.264163970947266
    9. ' ' → logprob: -22.639163970947266
    10. ' Tru' → logprob: -22.889163970947266

Token 139: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4046805202960968
    2. ')' → logprob: -1.1546804904937744
    3. '<|end|>' → logprob: -4.9046807289123535
    4. 'for' → logprob: -5.0296807289123535
    5. '   ' → logprob: -7.9046807289123535
    6. '.' → logprob: -7.9046807289123535
    7. '(' → logprob: -8.029680252075195
    8. '(
' → logprob: -8.154680252075195
    9. '#' → logprob: -8.404680252075195
    10. '  
' → logprob: -8.404680252075195

Token 140: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.048644594848155975
    2. 'def' → logprob: -3.048644542694092
    3. 'dp' → logprob: -10.54864501953125
    4. ' for' → logprob: -10.67364501953125
    5. 'from' → logprob: -11.92364501953125
    6. '@' → logprob: -13.92364501953125
    7. '```' → logprob: -14.92364501953125
    8. '
' → logprob: -17.04864501953125
    9. '    
' → logprob: -19.29864501953125
    10. ' def' → logprob: -19.29864501953125

Token 141: ' _' (ID: 1175)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.522847592830658
    2. ' _' → logprob: -1.2728476524353027
    3. '_' → logprob: -2.1478476524353027
    4. 'length' → logprob: -5.022847652435303
    5. '_length' → logprob: -6.397847652435303
    6. ' i' → logprob: -7.022847652435303
    7. 'i' → logprob: -8.022847175598145
    8. ' l' → logprob: -8.147847175598145
    9. '_i' → logprob: -8.522847175598145
    10. 'l' → logprob: -9.022847175598145

Token 142: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03455967456102371
    2. 'in' → logprob: -3.409559726715088
    3. '_' → logprob: -7.659559726715088
    4. ' _' → logprob: -8.40955924987793
    5. ' ' → logprob: -8.53455924987793
    6. 'range' → logprob: -11.40955924987793
    7. 'n' → logprob: -12.28455924987793
    8. ' n' → logprob: -13.53455924987793
    9. ' i' → logprob: -14.03455924987793
    10. '_in' → logprob: -14.15955924987793

Token 143: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031804447062313557
    2. ' range' → logprob: -5.753180503845215
    3. '(range' → logprob: -14.003180503845215
    4. 'ange' → logprob: -14.253180503845215
    5. 'in' → logprob: -14.753180503845215
    6. '```' → logprob: -15.503180503845215
    7. ' ' → logprob: -15.628180503845215
    8. 'n' → logprob: -16.1281795501709
    9. 'r' → logprob: -16.5031795501709
    10. '   ' → logprob: -16.5031795501709

Token 144: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.048688311129808426
    2. '(' → logprob: -3.0486884117126465
    3. '(range' → logprob: -9.298687934875488
    4. ' (' → logprob: -13.048687934875488
    5. 'n' → logprob: -13.048687934875488
    6. 'range' → logprob: -13.173687934875488
    7. '(_' → logprob: -13.923687934875488
    8. ' n' → logprob: -14.548687934875488
    9. '(i' → logprob: -14.673687934875488
    10. '(len' → logprob: -15.048687934875488

Token 145: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0065284958109259605
    2. '):
' → logprob: -5.631528377532959
    3. ' ):' → logprob: -5.881528377532959
    4. ':' → logprob: -10.131528854370117
    5. '+' → logprob: -10.256528854370117
    6. ')' → logprob: -10.756528854370117
    7. ',' → logprob: -11.131528854370117
    8. '-' → logprob: -11.631528854370117
    9. ' ):
' → logprob: -11.881528854370117
    10. '):
' → logprob: -13.881528854370117

Token 146: '   ' (ID: 271)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.11421414464712143
    2. 'next' → logprob: -2.3642141819000244
    3. ' new' → logprob: -5.239213943481445
    4. 'n' → logprob: -5.489213943481445
    5. '   ' → logprob: -5.989213943481445
    6. ' next' → logprob: -6.739213943481445
    7. 'nst' → logprob: -7.364213943481445
    8. ' ' → logprob: -9.489213943481445
    9. ' nxt' → logprob: -10.239213943481445
    10. 'nd' → logprob: -11.114213943481445

Token 147: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.1980019211769104
    2. 'next' → logprob: -1.8230018615722656
    3. 'n' → logprob: -4.198001861572266
    4. 'nst' → logprob: -5.948001861572266
    5. 'temp' → logprob: -8.948001861572266
    6. 'tmp' → logprob: -9.448001861572266
    7. 'nd' → logprob: -9.823001861572266
    8. '_next' → logprob: -9.823001861572266
    9. ' new' → logprob: -10.198001861572266
    10. ' next' → logprob: -10.698001861572266

Token 148: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.011777587234973907
    2. 'states' → logprob: -4.511777400970459
    3. 's' → logprob: -7.261777400970459
    4. ' states' → logprob: -11.511777877807617
    5. '_' → logprob: -12.011777877807617
    6. 'States' → logprob: -12.261777877807617
    7. '=' → logprob: -13.136777877807617
    8. ' =' → logprob: -13.511777877807617
    9. '_state' → logprob: -13.886777877807617
    10. 't' → logprob: -14.511777877807617

Token 149: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141977071762085
    2. ' =' → logprob: -1.7014198303222656
    3. 'new' → logprob: -14.076419830322266
    4. '_new' → logprob: -14.201419830322266
    5. 's' → logprob: -14.576419830322266
    6. ' ' → logprob: -14.701419830322266
    7. '_temp' → logprob: -14.701419830322266
    8. 'temp' → logprob: -14.701419830322266
    9. '```' → logprob: -14.701419830322266
    10. '_tmp' → logprob: -14.951419830322266

Token 150: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -1.0325924449716695e-05
    2. ' defaultdict' → logprob: -11.50001049041748
    3. '(default' → logprob: -16.750009536743164
    4. '"default' → logprob: -17.625009536743164
    5. ''default' → logprob: -17.875009536743164
    6. ' default' → logprob: -18.250009536743164
    7. '.default' → logprob: -18.375009536743164
    8. '   ' → logprob: -18.500009536743164
    9. 'collections' → logprob: -20.750009536743164
    10. ' ' → logprob: -21.125009536743164

Token 151: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.5759563446044922
    2. 'int' → logprob: -0.8259563446044922
    3. '[int' → logprob: -11.700956344604492
    4. 'lambda' → logprob: -13.200956344604492
    5. '0' → logprob: -13.325956344604492
    6. '=int' → logprob: -13.700956344604492
    7. '```' → logprob: -13.950956344604492
    8. '<int' → logprob: -14.075956344604492
    9. ',int' → logprob: -14.075956344604492
    10. ':int' → logprob: -14.825956344604492

Token 152: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3133769929409027
    2. ')' → logprob: -1.313377022743225
    3. '   ' → logprob: -9.188377380371094
    4. ' )
' → logprob: -12.313377380371094
    5. ')
' → logprob: -12.938377380371094
    6. ')

' → logprob: -13.313377380371094
    7. '()' → logprob: -13.813377380371094
    8. '())
' → logprob: -13.813377380371094
    9. ' ' → logprob: -14.188377380371094
    10. ' )' → logprob: -14.438377380371094

Token 153: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05699799582362175
    2. '   ' → logprob: -2.9319980144500732
    3. ' for' → logprob: -6.181997776031494
    4. '	for' → logprob: -10.306998252868652
    5. '<|end|>' → logprob: -11.431998252868652
    6. ' ' → logprob: -13.556998252868652
    7. '       ' → logprob: -14.181998252868652
    8. 'from' → logprob: -15.431998252868652
    9. '```' → logprob: -15.681998252868652
    10. '    
' → logprob: -15.931998252868652

Token 154: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -5.943783253314905e-05
    2. ' for' → logprob: -9.875059127807617
    3. '   ' → logprob: -11.750059127807617
    4. '	for' → logprob: -17.500059127807617
    5. ' ' → logprob: -18.375059127807617
    6. '    
' → logprob: -18.500059127807617
    7. '
' → logprob: -18.875059127807617
    8. '  ' → logprob: -20.375059127807617
    9. '```' → logprob: -20.625059127807617
    10. '       ' → logprob: -21.250059127807617

Token 155: ' s' (ID: 265)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.39925721287727356
    2. 'key' → logprob: -2.149257183074951
    3. ' state' → logprob: -2.274257183074951
    4. 's' → logprob: -3.274257183074951
    5. 'prev' → logprob: -3.399257183074951
    6. ' key' → logprob: -4.149257183074951
    7. ' prev' → logprob: -5.149257183074951
    8. '(prev' → logprob: -5.524257183074951
    9. ' s' → logprob: -5.774257183074951
    10. '(state' → logprob: -5.899257183074951

Token 156: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12694847583770752
    2. 'in' → logprob: -2.126948356628418
    3. '_' → logprob: -11.876948356628418
    4. 's' → logprob: -12.751948356628418
    5. '_in' → logprob: -13.126948356628418
    6. ' ' → logprob: -13.376948356628418
    7. ',' → logprob: -13.376948356628418
    8. 'import' → logprob: -13.501948356628418
    9. '```' → logprob: -14.626948356628418
    10. 'i' → logprob: -14.876948356628418

Token 157: ' cnt' (ID: 27340)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.8808574676513672
    2. 'cnt' → logprob: -1.1308574676513672
    3. 'v' → logprob: -1.3808574676513672
    4. ' cnt' → logprob: -5.130857467651367
    5. ' v' → logprob: -5.880857467651367
    6. ' count' → logprob: -6.005857467651367
    7. 'c' → logprob: -8.505857467651367
    8. 'val' → logprob: -9.630857467651367
    9. 'ct' → logprob: -11.380857467651367
    10. ' val' → logprob: -13.130857467651367

Token 158: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029755808413028717
    2. 'in' → logprob: -3.5297558307647705
    3. ' ' → logprob: -12.904755592346191
    4. 's' → logprob: -14.029755592346191
    5. '	in' → logprob: -14.529755592346191
    6. ',' → logprob: -14.904755592346191
    7. '  ' → logprob: -14.904755592346191
    8. '_in' → logprob: -15.904755592346191
    9. 'n' → logprob: -16.154756546020508
    10. 'In' → logprob: -16.279756546020508

Token 159: ' states' (ID: 9407)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.014164102263748646
    2. ' states' → logprob: -4.264163970947266
    3. '(states' → logprob: -15.264163970947266
    4. '.states' → logprob: -15.764163970947266
    5. '_states' → logprob: -16.639163970947266
    6. 'States' → logprob: -17.139163970947266
    7. 'state' → logprob: -18.014163970947266
    8. ' ' → logprob: -19.264163970947266
    9. '   ' → logprob: -19.889163970947266
    10. 's' → logprob: -20.389163970947266

Token 160: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.057731904089450836
    2. 'items' → logprob: -2.932731866836548
    3. ' in' → logprob: -6.307732105255127
    4. ' items' → logprob: -7.182732105255127
    5. '.' → logprob: -9.807731628417969
    6. ':' → logprob: -10.057731628417969
    7. 'in' → logprob: -10.182731628417969
    8. '   ' → logprob: -10.432731628417969
    9. ',' → logprob: -10.682731628417969
    10. '_items' → logprob: -10.932731628417969

Token 161: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.014894749037921429
    2. '():
' → logprob: -4.264894962310791
    3. '()' → logprob: -7.264894962310791
    4. '()):
' → logprob: -11.514894485473633
    5. '():
' → logprob: -11.514894485473633
    6. '():

' → logprob: -12.639894485473633
    7. ' ():' → logprob: -12.764894485473633
    8. '):' → logprob: -13.264894485473633
    9. '(' → logprob: -13.389894485473633
    10. ':' → logprob: -14.139894485473633

Token 162: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03600412979722023
    2. ' for' → logprob: -3.661004066467285
    3. 'for' → logprob: -5.036004066467285
    4. '   ' → logprob: -6.036004066467285
    5. '	' → logprob: -8.661004066467285
    6. ' ' → logprob: -8.911004066467285
    7. '	for' → logprob: -8.911004066467285
    8. '        
' → logprob: -9.036004066467285
    9. '	   ' → logprob: -9.536004066467285
    10. '<|end|>' → logprob: -10.786004066467285

Token 163: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0623672716319561
    2. ' for' → logprob: -2.8123672008514404
    3. '       ' → logprob: -7.9373674392700195
    4. '   ' → logprob: -10.18736743927002
    5. '	for' → logprob: -12.43736743927002
    6. '
' → logprob: -14.68736743927002
    7. ' ' → logprob: -15.93736743927002
    8. '        
' → logprob: -16.062366485595703
    9. 'if' → logprob: -16.312366485595703
    10. '           ' → logprob: -16.687366485595703

Token 164: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07355012744665146
    2. ' c' → logprob: -2.698550224304199
    3. 'ch' → logprob: -5.823550224304199
    4. 'char' → logprob: -7.573550224304199
    5. ' ch' → logprob: -9.3235502243042
    6. '   ' → logprob: -10.5735502243042
    7. ' ' → logprob: -11.5735502243042
    8. ' char' → logprob: -12.0735502243042
    9. '```' → logprob: -12.5735502243042
    10. '  ' → logprob: -14.0735502243042

Token 165: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018158137798309326
    2. 'in' → logprob: -4.018157958984375
    3. 's' → logprob: -12.143157958984375
    4. ' ' → logprob: -13.643157958984375
    5. 'n' → logprob: -14.893157958984375
    6. '  ' → logprob: -15.393157958984375
    7. '   ' → logprob: -15.643157958984375
    8. '	in' → logprob: -16.143157958984375
    9. ' ' → logprob: -16.268157958984375
    10. 'i' → logprob: -16.518157958984375

Token 166: ' chars' (ID: 47991)
  Prédit: 'chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chars' → logprob: -0.07890047132968903
    2. ' chars' → logprob: -2.5789005756378174
    3. '(chars' → logprob: -11.953900337219238
    4. '_chars' → logprob: -12.828900337219238
    5. 'char' → logprob: -14.203900337219238
    6. 'Chars' → logprob: -14.703900337219238
    7. ' ' → logprob: -15.578900337219238
    8. 'characters' → logprob: -15.703900337219238
    9. '   ' → logprob: -15.953900337219238
    10. ' characters' → logprob: -17.328901290893555

Token 167: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1128462627530098
    2. ':
' → logprob: -2.2378463745117188
    3. ' :' → logprob: -12.112846374511719
    4. ' :
' → logprob: -12.487846374511719
    5. '):
' → logprob: -12.737846374511719
    6. '       ' → logprob: -12.737846374511719
    7. ':
' → logprob: -12.862846374511719
    8. '           ' → logprob: -13.112846374511719
    9. ':

' → logprob: -13.612846374511719
    10. '):' → logprob: -13.987846374511719

Token 168: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017313449643552303
    2. ' if' → logprob: -6.5017313957214355
    3. ' new' → logprob: -9.126730918884277
    4. '       ' → logprob: -10.001730918884277
    5. 'if' → logprob: -10.751730918884277
    6. '            
' → logprob: -10.876730918884277
    7. 'new' → logprob: -11.626730918884277
    8. '          ' → logprob: -12.251730918884277
    9. '```' → logprob: -12.376730918884277
    10. '               ' → logprob: -12.751730918884277

Token 169: ' next' (ID: 2613)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.0857744216918945
    2. ' new' → logprob: -1.5857744216918945
    3. ' t' → logprob: -1.7107744216918945
    4. 'new' → logprob: -1.9607744216918945
    5. 'ns' → logprob: -2.9607744216918945
    6. ' ns' → logprob: -3.2107744216918945
    7. ' nxt' → logprob: -4.3357744216918945
    8. 'next' (adapté à ' next') → logprob: -4.5857744216918945
    9. '           ' → logprob: -4.8357744216918945
    10. ' next' → logprob: -5.2107744216918945

Token 170: 's' (ID: 82)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.12477992475032806
    2. 's' → logprob: -2.6247799396514893
    3. '_str' → logprob: -3.7497799396514893
    4. '_state' → logprob: -3.8747799396514893
    5. 'state' → logprob: -8.49977970123291
    6. '_seq' → logprob: -8.74977970123291
    7. 'str' → logprob: -9.49977970123291
    8. ' =' → logprob: -9.74977970123291
    9. '_states' → logprob: -10.37477970123291
    10. '   ' → logprob: -11.37477970123291

Token 171: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011508353054523468
    2. '=' → logprob: -4.511508464813232
    3. 's' → logprob: -8.011507987976074
    4. '_s' → logprob: -9.886507987976074
    5. 't' → logprob: -10.136507987976074
    6. '_str' → logprob: -11.386507987976074
    7. 'tr' → logprob: -12.011507987976074
    8. '_states' → logprob: -12.136507987976074
    9. '_state' → logprob: -12.261507987976074
    10. 'tring' → logprob: -13.011507987976074

Token 172: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16341380774974823
    2. ' s' → logprob: -1.9134137630462646
    3. '(s' → logprob: -5.913414001464844
    4. ' (' → logprob: -7.913414001464844
    5. '   ' → logprob: -9.538414001464844
    6. '(' → logprob: -10.663414001464844
    7. ' ' → logprob: -12.163414001464844
    8. '           ' → logprob: -13.038414001464844
    9. '_s' → logprob: -13.288414001464844
    10. '`s' → logprob: -13.538414001464844

Token 173: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00035238542477600276
    2. '[-' → logprob: -8.00035285949707
    3. ' [' → logprob: -12.12535285949707
    4. '
' → logprob: -12.37535285949707
    5. '1' → logprob: -12.37535285949707
    6. '+' → logprob: -13.62535285949707
    7. ' +' → logprob: -14.75035285949707
    8. '(' → logprob: -15.12535285949707
    9. '=' → logprob: -15.37535285949707
    10. ' ' → logprob: -15.62535285949707

Token 174: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1041145626222715e-05
    2. '
' → logprob: -12.375011444091797
    3. ' ' → logprob: -12.500011444091797
    4. '-' → logprob: -13.375011444091797
    5. '+' → logprob: -14.250011444091797
    6. '[' → logprob: -14.875011444091797
    7. '   ' → logprob: -15.500011444091797
    8. '

' → logprob: -16.125011444091797
    9. '```' → logprob: -16.750011444091797
    10. '(' → logprob: -17.000011444091797

Token 175: ':]' (ID: 67377)
  Prédit: ':]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.002219368703663349
    2. ']' → logprob: -6.252219200134277
    3. ':' → logprob: -8.877219200134277
    4. '+' → logprob: -9.502219200134277
    5. '2' → logprob: -10.252219200134277
    6. '1' → logprob: -10.752219200134277
    7. ']+' → logprob: -11.002219200134277
    8. ':]
' → logprob: -13.377219200134277
    9. '+]' → logprob: -14.252219200134277
    10. ' :]' → logprob: -14.877219200134277

Token 176: ' +' (ID: 659)
  Prédit: '+c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+c' → logprob: -0.6941395401954651
    2. ' +' → logprob: -0.9441395401954651
    3. '+' → logprob: -2.1941394805908203
    4. 'c' → logprob: -11.06913948059082
    5. '           ' → logprob: -12.06913948059082
    6. '+
' → logprob: -12.69413948059082
    7. ' c' → logprob: -13.69413948059082
    8. '＋' → logprob: -14.69413948059082
    9. '+C' → logprob: -15.06913948059082
    10. '       ' → logprob: -15.56913948059082

Token 177: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -7.493430894101039e-05
    2. ' c' → logprob: -9.500075340270996
    3. '	c' → logprob: -20.25007438659668
    4. ')c' → logprob: -20.25007438659668
    5. '*c' → logprob: -22.12507438659668
    6. '$c' → logprob: -22.62507438659668
    7. '%c' → logprob: -22.75007438659668
    8. '[c' → logprob: -23.37507438659668
    9. '_c' → logprob: -23.37507438659668
    10. '```' → logprob: -23.37507438659668

Token 178: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35220104455947876
    2. '           ' → logprob: -1.227200984954834
    3. '            
' → logprob: -6.102200984954834
    4. ' 
' → logprob: -7.477200984954834
    5. '  
' → logprob: -7.602200984954834
    6. '
' → logprob: -8.602201461791992
    7. ' if' → logprob: -9.352201461791992
    8. '<|end|>' → logprob: -9.477201461791992
    9. '    
' → logprob: -10.852201461791992
    10. 'if' → logprob: -10.852201461791992

Token 179: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.040211085230112076
    2. '
' → logprob: -3.7902112007141113
    3. '            
' → logprob: -4.540211200714111
    4. '<|end|>' → logprob: -5.415211200714111
    5. '```' → logprob: -7.540211200714111
    6. '  
' → logprob: -8.290210723876953
    7. ' if' → logprob: -8.915210723876953
    8. ' 
' → logprob: -8.915210723876953
    9. '           
' → logprob: -8.915210723876953
    10. '<|end|>' → logprob: -9.165210723876953

Token 180: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16373609006404877
    2. ' if' → logprob: -2.41373610496521
    3. 'if' (adapté à ' if') → logprob: -2.78873610496521
    4. '   ' → logprob: -10.788736343383789
    5. '            
' → logprob: -11.163736343383789
    6. '
' → logprob: -11.538736343383789
    7. '       ' → logprob: -13.288736343383789
    8. ' ' → logprob: -13.413736343383789
    9. '```' → logprob: -13.538736343383789
    10. ' 
' → logprob: -13.538736343383789

Token 181: ' acceptable' (ID: 34028)
  Prédit: ' acceptable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' acceptable' → logprob: -0.4740951955318451
    2. 'acceptable' → logprob: -0.9740952253341675
    3. ' not' → logprob: -11.099095344543457
    4. 'not' → logprob: -12.974095344543457
    5. 'accept' → logprob: -15.224095344543457
    6. ' ' → logprob: -15.349095344543457
    7. ' ' → logprob: -16.47409439086914
    8. 'accepted' → logprob: -17.09909439086914
    9. ' unacceptable' → logprob: -17.34909439086914
    10. '   ' → logprob: -18.09909439086914

Token 182: '(s' (ID: 1858)
  Prédit: '(next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(next' → logprob: -1.27099974633893e-05
    2. ' (' → logprob: -11.500012397766113
    3. '(' → logprob: -12.875012397766113
    4. '[next' → logprob: -18.50001335144043
    5. '((' → logprob: -19.75001335144043
    6. '('' → logprob: -20.12501335144043
    7. '(
' → logprob: -20.12501335144043
    8. ',next' → logprob: -20.25001335144043
    9. '(new' → logprob: -20.87501335144043
    10. '(prev' → logprob: -21.25001335144043

Token 183: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7959169149398804
    2. ' +' → logprob: -1.0459169149398804
    3. '[' → logprob: -1.6709169149398804
    4. 'next' → logprob: -5.29591703414917
    5. ')' → logprob: -6.17091703414917
    6. '1' → logprob: -7.04591703414917
    7. ' next' → logprob: -8.170916557312012
    8. '(' → logprob: -8.545916557312012
    9. '(next' → logprob: -8.920916557312012
    10. '[:-' → logprob: -9.045916557312012

Token 184: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06251352280378342
    2. ' c' → logprob: -2.812513589859009
    3. ' next' → logprob: -8.06251335144043
    4. 'next' → logprob: -8.43751335144043
    5. '	c' → logprob: -12.43751335144043
    6. ' ' → logprob: -12.43751335144043
    7. ')c' → logprob: -13.18751335144043
    8. '   ' → logprob: -13.81251335144043
    9. ')' → logprob: -14.81251335144043
    10. '  ' → logprob: -14.87501335144043

Token 185: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0086546391248703
    2. '):
' → logprob: -4.758654594421387
    3. ')' → logprob: -10.758654594421387
    4. '):
' → logprob: -11.508654594421387
    5. ' ):' → logprob: -12.008654594421387
    6. ''):' → logprob: -13.508654594421387
    7. '):

' → logprob: -14.633654594421387
    8. '"):' → logprob: -15.633654594421387
    9. ':' → logprob: -15.883654594421387
    10. ')):' → logprob: -15.883654594421387

Token 186: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002090423135086894
    2. ' new' → logprob: -6.2520904541015625
    3. 'new' → logprob: -9.877090454101562
    4. ' continue' → logprob: -10.627090454101562
    5. ':
' → logprob: -11.127090454101562
    6. '```' → logprob: -11.252090454101562
    7. ')' → logprob: -11.502090454101562
    8. ':' → logprob: -12.127090454101562
    9. '[new' → logprob: -12.127090454101562
    10. '):
' → logprob: -12.127090454101562

Token 187: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.4050624370574951
    2. 'new' (adapté à ' new') → logprob: -1.1550624370574951
    3. '               ' → logprob: -4.030062675476074
    4. '                   ' → logprob: -8.905062675476074
    5. '
' → logprob: -9.655062675476074
    6. '           ' → logprob: -11.280062675476074
    7. '[new' → logprob: -11.530062675476074
    8. '   ' → logprob: -11.655062675476074
    9. '```' → logprob: -12.155062675476074
    10. '	new' → logprob: -12.655062675476074

Token 188: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.5
    3. 'States' → logprob: -17.625
    4. '_state' → logprob: -18.0
    5. 'states' → logprob: -18.75
    6. '_s' → logprob: -20.25
    7. '_stats' → logprob: -20.625
    8. '```' → logprob: -21.25
    9. ' _' → logprob: -21.5
    10. '_st' → logprob: -21.75

Token 189: '[next' (ID: 103383)
  Prédit: '[next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -0.0004897649050690234
    2. '[new' → logprob: -7.750489711761475
    3. '[' → logprob: -9.750490188598633
    4. ' [' → logprob: -15.125490188598633
    5. 'next' → logprob: -16.000490188598633
    6. '[s' → logprob: -16.125490188598633
    7. '[(' → logprob: -17.125490188598633
    8. '(next' → logprob: -17.125490188598633
    9. '[last' → logprob: -17.375490188598633
    10. '           ' → logprob: -17.375490188598633

Token 190: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.3795937522663735e-05
    2. '[next' → logprob: -11.25002384185791
    3. 'x' → logprob: -12.25002384185791
    4. '(next' → logprob: -12.62502384185791
    5. '[s' → logprob: -14.62502384185791
    6. '[' → logprob: -15.00002384185791
    7. '(s' → logprob: -15.00002384185791
    8. '_states' → logprob: -15.37502384185791
    9. 'next' → logprob: -15.50002384185791
    10. '       ' → logprob: -16.000022888183594

Token 191: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008807347039692104
    2. ']+=' → logprob: -7.375880718231201
    3. '=' → logprob: -8.62588119506836
    4. '+=' → logprob: -9.75088119506836
    5. ')' → logprob: -12.25088119506836
    6. ']=' → logprob: -12.50088119506836
    7. ' =' → logprob: -13.12588119506836
    8. ' +=' → logprob: -13.50088119506836
    9. '(' → logprob: -13.62588119506836
    10. ' ]' → logprob: -14.12588119506836

Token 192: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10391706228256226
    2. '=' → logprob: -2.353917121887207
    3. ' +=' → logprob: -5.728917121887207
    4. ' =' → logprob: -8.353917121887207
    5. ']+=' → logprob: -8.978917121887207
    6. '[' → logprob: -9.978917121887207
    7. '%=' → logprob: -11.228917121887207
    8. '   ' → logprob: -12.103917121887207
    9. '           ' → logprob: -12.228917121887207
    10. ']' → logprob: -12.603917121887207

Token 193: ' (' (ID: 350)
  Prédit: '(new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.31900742650032043
    2. ' (' → logprob: -1.319007396697998
    3. '(next' → logprob: -5.444007396697998
    4. '           ' → logprob: -7.819007396697998
    5. '(updated' → logprob: -8.194007873535156
    6. '   ' → logprob: -9.319007873535156
    7. '(update' → logprob: -9.444007873535156
    8. '               ' → logprob: -9.569007873535156
    9. '(prev' → logprob: -9.819007873535156
    10. '(add' → logprob: -9.819007873535156

Token 194: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.3156457841396332
    2. '(new' → logprob: -1.3156458139419556
    3. ' new' → logprob: -6.065645694732666
    4. ' (' → logprob: -10.690646171569824
    5. '           ' → logprob: -11.190646171569824
    6. '[new' → logprob: -11.690646171569824
    7. '               ' → logprob: -12.065646171569824
    8. ')new' → logprob: -12.315646171569824
    9. '                   ' → logprob: -13.940646171569824
    10. '$new' → logprob: -14.190646171569824

Token 195: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -4.127333340875339e-06
    2. 'States' → logprob: -13.500003814697266
    3. 'states' → logprob: -13.625003814697266
    4. 'new' → logprob: -14.375003814697266
    5. 's' → logprob: -14.875003814697266
    6. '_state' → logprob: -15.125003814697266
    7. 'w' → logprob: -15.500003814697266
    8. '_' → logprob: -17.250003814697266
    9. ' states' → logprob: -17.875003814697266
    10. '(new' → logprob: -18.000003814697266

Token 196: '[next' (ID: 103383)
  Prédit: '[next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -4.513339445111342e-05
    2. 'next' → logprob: -10.875044822692871
    3. '[new' → logprob: -11.250044822692871
    4. '.get' → logprob: -11.750044822692871
    5. 'get' → logprob: -12.875044822692871
    6. '[' → logprob: -13.375044822692871
    7. '[s' → logprob: -14.125044822692871
    8. 's' → logprob: -15.875044822692871
    9. 'new' → logprob: -16.250045776367188
    10. '(next' → logprob: -16.500045776367188

Token 197: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.620622712536715e-05
    2. '[next' → logprob: -11.875045776367188
    3. '_states' → logprob: -12.000045776367188
    4. 'ts' → logprob: -12.250045776367188
    5. 'sts' → logprob: -12.375045776367188
    6. 'x' → logprob: -12.375045776367188
    7. 'st' → logprob: -12.500045776367188
    8. 't' → logprob: -12.625045776367188
    9. '[' → logprob: -13.125045776367188
    10. '[s' → logprob: -13.250045776367188

Token 198: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20141392946243286
    2. '+' → logprob: -1.701413869857788
    3. ' ' → logprob: -15.326414108276367
    4. ' ' → logprob: -15.326414108276367
    5. '+c' → logprob: -15.826414108276367
    6. '＋' → logprob: -17.826414108276367
    7. '+C' → logprob: -18.076414108276367
    8. 'import' → logprob: -18.576414108276367
    9. '+n' → logprob: -19.201414108276367
    10. '+b' → logprob: -19.326414108276367

Token 199: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38687387108802795
    2. '+' → logprob: -1.1368738412857056
    3. '+c' → logprob: -13.136874198913574
    4. ' ' → logprob: -14.761874198913574
    5. ' ' → logprob: -15.386874198913574
    6. '+C' → logprob: -16.261873245239258
    7. '＋' → logprob: -17.011873245239258
    8. '+n' → logprob: -18.011873245239258
    9. '+(' → logprob: -18.011873245239258
    10. 'import' → logprob: -18.261873245239258

Token 200: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.16022726893424988
    2. ' cnt' → logprob: -1.9102272987365723
    3. '(cnt' → logprob: -13.035226821899414
    4. '	cnt' → logprob: -14.285226821899414
    5. 'count' → logprob: -15.910226821899414
    6. '               ' → logprob: -16.410226821899414
    7. '[cnt' → logprob: -16.910226821899414
    8. '           ' → logprob: -17.035226821899414
    9. '   ' → logprob: -17.785226821899414
    10. '_cnt' → logprob: -18.035226821899414

Token 201: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011343709047650918
    2. ' )' → logprob: -9.125113487243652
    3. ')%' → logprob: -12.500113487243652
    4. '%' → logprob: -14.375113487243652
    5. ' %' → logprob: -17.375112533569336
    6. '%)' → logprob: -19.000112533569336
    7. '）' → logprob: -19.375112533569336
    8. '   ' → logprob: -19.750112533569336
    9. '')' → logprob: -20.000112533569336
    10. ' ' → logprob: -20.000112533569336

Token 202: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.47408437728881836
    2. ' %' → logprob: -0.9740843772888184
    3. '%c' → logprob: -12.849084854125977
    4. ')' → logprob: -12.974084854125977
    5. '%n' → logprob: -14.224084854125977
    6. ')%' → logprob: -14.224084854125977
    7. ' ' → logprob: -15.724084854125977
    8. '%s' → logprob: -15.724084854125977
    9. '%b' → logprob: -16.099084854125977
    10. ' %=' → logprob: -16.224084854125977

Token 203: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -9.639096970204264e-05
    2. ' mod' → logprob: -9.250096321105957
    3. '(mod' → logprob: -15.250096321105957
    4. '```' → logprob: -20.875097274780273
    5. '	mod' → logprob: -21.375097274780273
    6. ' ' → logprob: -22.625097274780273
    7. 'MOD' → logprob: -23.500097274780273
    8. '
' → logprob: -23.625097274780273
    9. '   ' → logprob: -24.000097274780273
    10. '`' → logprob: -24.250097274780273

Token 204: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 205: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008334425278007984
    2. 'states' → logprob: -4.883334636688232
    3. ' states' → logprob: -7.383334636688232
    4. '```' → logprob: -9.508334159851074
    5. '`' → logprob: -12.008334159851074
    6. ')' → logprob: -12.008334159851074
    7. '    
' → logprob: -12.383334159851074
    8. '<|end|>' → logprob: -12.508334159851074
    9. '.states' → logprob: -13.133334159851074
    10. '(states' → logprob: -13.383334159851074

Token 206: ' states' (ID: 9407)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' (adapté à ' states') → logprob: -0.0007162463734857738
    2. ' states' → logprob: -7.250716209411621
    3. '   ' → logprob: -12.500716209411621
    4. '```' → logprob: -14.000716209411621
    5. '(states' → logprob: -14.250716209411621
    6. '.states' → logprob: -14.375716209411621
    7. ')' → logprob: -15.750716209411621
    8. '_states' → logprob: -15.875716209411621
    9. '}' → logprob: -16.375717163085938
    10. 'States' → logprob: -16.375717163085938

Token 207: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519293427467346
    2. ' =' → logprob: -1.5019292831420898
    3. ',' → logprob: -15.62692928314209
    4. '＝' → logprob: -16.501930236816406
    5. '=new' → logprob: -17.251930236816406
    6. '.=' → logprob: -18.876930236816406
    7. ' new' → logprob: -19.376930236816406
    8. ' ' → logprob: -19.751930236816406
    9. '=n' → logprob: -19.876930236816406
    10. ')' → logprob: -20.126930236816406

Token 208: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.00033546582562848926
    2. ' new' → logprob: -8.000335693359375
    3. '	new' → logprob: -21.250335693359375
    4. '新' → logprob: -21.625335693359375
    5. '```' → logprob: -22.000335693359375
    6. 'New' → logprob: -22.375335693359375
    7. '   ' → logprob: -22.500335693359375
    8. ' ' → logprob: -22.500335693359375
    9. '(new' → logprob: -22.625335693359375
    10. '[new' → logprob: -22.875335693359375

Token 209: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.00010711929644457996
    2. 'states' → logprob: -9.250106811523438
    3. 'w' → logprob: -11.500106811523438
    4. '_state' → logprob: -15.125106811523438
    5. 'new' → logprob: -15.375106811523438
    6. 'States' → logprob: -15.625106811523438
    7. '_' → logprob: -16.750106811523438
    8. '_st' → logprob: -17.500106811523438
    9. 't' → logprob: -18.375106811523438
    10. ' states' → logprob: -18.375106811523438

Token 210: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00013905855303164572
    2. 'result' → logprob: -9.000139236450195
    3. 'answer' → logprob: -11.875139236450195
    4. 'total' → logprob: -12.375139236450195
    5. 'for' → logprob: -12.750139236450195
    6. 'ans' → logprob: -14.625139236450195
    7. ' print' → logprob: -15.125139236450195
    8. '```' → logprob: -15.375139236450195
    9. '
' → logprob: -15.625139236450195
    10. '    
' → logprob: -16.250139236450195

Token 211: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.77627644513268e-06
    2. 'result' → logprob: -12.000008583068848
    3. 'answer' → logprob: -13.125008583068848
    4. ' print' → logprob: -15.000008583068848
    5. 'ans' → logprob: -15.500008583068848
    6. '```' → logprob: -16.250009536743164
    7. 'total' → logprob: -19.000009536743164
    8. '``' → logprob: -21.125009536743164
    9. '#print' → logprob: -21.250009536743164
    10. 'output' → logprob: -21.500009536743164

Token 212: '(sum' (ID: 45528)
  Prédit: '(sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.004650491755455732
    2. '(states' → logprob: -6.129650592803955
    3. '(len' → logprob: -6.504650592803955
    4. '(' → logprob: -7.004650592803955
    5. '(max' → logprob: -10.629650115966797
    6. 'sum' → logprob: -11.379650115966797
    7. '(
' → logprob: -11.754650115966797
    8. '((' → logprob: -12.379650115966797
    9. '(list' → logprob: -12.504650115966797
    10. '(next' → logprob: -12.754650115966797

Token 213: '(states' (ID: 193162)
  Prédit: '(states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(states' → logprob: -0.0004481885116547346
    2. 'states' → logprob: -7.750448226928711
    3. '(st' → logprob: -11.375448226928711
    4. '(' → logprob: -12.375448226928711
    5. ' states' → logprob: -13.875448226928711
    6. '(state' → logprob: -15.000448226928711
    7. '(values' → logprob: -15.875448226928711
    8. '(list' → logprob: -16.12544822692871
    9. '_states' → logprob: -16.75044822692871
    10. '.states' → logprob: -16.75044822692871

Token 214: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -2.7133641196996905e-05
    2. 'values' → logprob: -10.75002670288086
    3. '(values' → logprob: -13.00002670288086
    4. '.' → logprob: -13.37502670288086
    5. ' .' → logprob: -14.12502670288086
    6. '().' → logprob: -14.87502670288086
    7. '.Values' → logprob: -15.12502670288086
    8. '.value' → logprob: -15.50002670288086
    9. ')' → logprob: -16.00002670288086
    10. ' values' → logprob: -16.37502670288086

Token 215: '())' (ID: 3516)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00920227449387312
    2. '())' → logprob: -4.759202480316162
    3. '()%' → logprob: -7.634202480316162
    4. ')' → logprob: -9.259202003479004
    5. '()))' → logprob: -11.759202003479004
    6. '()]' → logprob: -14.884202003479004
    7. '()`' → logprob: -15.884202003479004
    8. '（）' → logprob: -16.00920295715332
    9. ' ()' → logprob: -16.13420295715332
    10. '%' → logprob: -16.63420295715332

Token 216: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.7628053426742554
    2. ')' → logprob: -0.7628053426742554
    3. ' %' → logprob: -2.762805461883545
    4. '()' → logprob: -5.762805461883545
    5. ')%' → logprob: -7.012805461883545
    6. '()%' → logprob: -9.887804985046387
    7. '))' → logprob: -10.637804985046387
    8. '%)' → logprob: -11.512804985046387
    9. ' )' → logprob: -11.637804985046387
    10. ' ' → logprob: -11.887804985046387

Token 217: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00013643606507685035
    2. ' mod' → logprob: -9.000136375427246
    3. '(mod' → logprob: -11.250136375427246
    4. '	mod' → logprob: -20.875137329101562
    5. '```' → logprob: -21.750137329101562
    6. '(' → logprob: -21.875137329101562
    7. '100' → logprob: -22.875137329101562
    8. ' мод' → logprob: -23.125137329101562
    9. '10' → logprob: -23.125137329101562
    10. ' (' → logprob: -24.125137329101562

Token 218: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022356293629854918
    2. '())' → logprob: -8.500223159790039
    3. '()' → logprob: -11.375223159790039
    4. '))' → logprob: -12.875223159790039
    5. ' )' → logprob: -12.875223159790039
    6. '`)' → logprob: -13.500223159790039
    7. ')`' → logprob: -14.125223159790039
    8. '})' → logprob: -14.625223159790039
    9. '(' → logprob: -15.000223159790039
    10. '')' → logprob: -16.00022315979004


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 216
Tokens correctement prédits (1ère position, stricte): 92
Tokens correctement prédits (1ère position, avec adaptation): 98
Tokens correctement prédits (top 10): 184
Précision stricte (1ère position): 42.59%
Précision adaptée (1ère position): 45.37%
Précision (top 10): 85.19%
================================================================================
