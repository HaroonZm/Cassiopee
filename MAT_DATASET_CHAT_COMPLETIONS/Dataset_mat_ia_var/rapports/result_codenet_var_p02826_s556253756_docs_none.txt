================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:33:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import numpy as np
n,m=map(int, input().split())
coef = np.minimum(np.arange(n,1,-1),np.arange(1,n))
dp = np.zeros(n, dtype=np.int64)
dp[0] = 1
for c in coef:
    ndp = dp.copy()
    for i in range(c, n, c):
        ndp[i:] += dp[:n-i]
    dp = ndp % m
print((dp*np.arange(n, 0, -1) % m).sum() % m)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' numpy' (ID: 19529)
  → Token d'amorce (pas de prédiction)

Token 2: ' as' (ID: 472)
  → Token d'amorce (pas de prédiction)

Token 3: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.0017933472990989685
    2. 'np' → logprob: -6.376793384552002
    3. ' ' → logprob: -9.501792907714844
    4. ' numpy' → logprob: -11.251792907714844
    5. ' ' → logprob: -12.751792907714844
    6. 'numpy' → logprob: -15.501792907714844
    7. '_np' → logprob: -16.126792907714844
    8. ' n' → logprob: -16.626792907714844
    9. '```' → logprob: -17.376792907714844
    10. ' npc' → logprob: -17.626792907714844

Token 4: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.009758921340107918
    2. 'import' → logprob: -6.134758949279785
    3. '\n' → logprob: -6.134758949279785
    4. 'newline' → logprob: -6.134758949279785
    5. '[' → logprob: -6.634758949279785
    6. '```' → logprob: -7.634758949279785
    7. '\' → logprob: -7.634758949279785
    8. '
' → logprob: -9.134758949279785
    9. '<|end|>' → logprob: -9.259758949279785
    10. '.import' → logprob: -9.384758949279785

Token 5: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.2500253915786743
    2. 'newline' → logprob: -1.6250253915786743
    3. '.' → logprob: -1.7500253915786743
    4. '<|end|>' → logprob: -2.1250252723693848
    5. '\' → logprob: -2.2500252723693848
    6. '```' → logprob: -2.8750252723693848
    7. 'import' → logprob: -3.5000252723693848
    8. '
' → logprob: -4.750025272369385
    9. '<|end|>' → logprob: -5.125025272369385
    10. '[' → logprob: -5.875025272369385

Token 6: ',m' (ID: 26648)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00019591135787777603
    2. 'umpy' → logprob: -9.125195503234863
    3. '_' → logprob: -10.625195503234863
    4. '.' → logprob: -11.375195503234863
    5. 'u' → logprob: -11.500195503234863
    6. '=' → logprob: -12.000195503234863
    7. '_p' → logprob: -12.000195503234863
    8. ',' → logprob: -12.250195503234863
    9. ' ' → logprob: -12.250195503234863
    10. 'um' → logprob: -12.250195503234863

Token 7: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.695900559425354
    2. ' =' → logprob: -0.945900559425354
    3. ',' → logprob: -2.3209004402160645
    4. ' ' → logprob: -5.0709004402160645
    5. ')' → logprob: -5.8209004402160645
    6. '<|end|>' → logprob: -6.1959004402160645
    7. '[' → logprob: -6.5709004402160645
    8. ' ,' → logprob: -6.8209004402160645
    9. '_' → logprob: -8.445900917053223
    10. '.' → logprob: -9.445900917053223

Token 8: 'map' (ID: 3726)
  Prédit: ' np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.04115501791238785
    2. 'np' → logprob: -3.4161550998687744
    3. ' map' → logprob: -5.541154861450195
    4. ' ' → logprob: -6.291154861450195
    5. 'map' → logprob: -6.666154861450195
    6. '10' → logprob: -8.541154861450195
    7. '0' → logprob: -9.291154861450195
    8. ' int' → logprob: -10.166154861450195
    9. 'int' → logprob: -10.541154861450195
    10. ' input' → logprob: -10.791154861450195

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.036421019583940506
    2. '(' → logprob: -3.536421060562134
    3. 'int' → logprob: -5.286420822143555
    4. '(str' → logprob: -6.786420822143555
    5. '[int' → logprob: -8.411420822143555
    6. '<int' → logprob: -9.661420822143555
    7. '(lambda' → logprob: -9.661420822143555
    8. '(input' → logprob: -10.161420822143555
    9. ' int' → logprob: -11.286420822143555
    10. 'str' → logprob: -11.411420822143555

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6570168733596802
    2. 'input' → logprob: -0.9070168733596802
    3. ')' → logprob: -3.1570167541503906
    4. ',input' → logprob: -3.7820167541503906
    5. '(' → logprob: -5.282016754150391
    6. ' input' → logprob: -5.532016754150391
    7. ',' → logprob: -5.782016754150391
    8. '=input' → logprob: -8.78201675415039
    9. '<input' → logprob: -9.53201675415039
    10. '),' → logprob: -10.03201675415039

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03804929554462433
    2. ' input' → logprob: -3.2880492210388184
    3. ')' → logprob: -12.538049697875977
    4. '(input' → logprob: -12.913049697875977
    5. ',input' → logprob: -13.413049697875977
    6. '=input' → logprob: -16.163049697875977
    7. ' )' → logprob: -16.913049697875977
    8. ' ' → logprob: -17.288049697875977
    9. '<input' → logprob: -17.663049697875977
    10. '[input' → logprob: -17.788049697875977

Token 12: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4532111883163452
    2. '())' → logprob: -1.0782111883163452
    3. '(' → logprob: -4.703211307525635
    4. '('' → logprob: -4.828211307525635
    5. '().' → logprob: -5.453211307525635
    6. ')' → logprob: -6.328211307525635
    7. '());' → logprob: -8.328210830688477
    8. '(),' → logprob: -9.328210830688477
    9. '()>' → logprob: -9.453210830688477
    10. '("' → logprob: -9.703210830688477

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.762356209335849e-05
    2. 'strip' → logprob: -10.25003719329834
    3. ' split' → logprob: -13.75003719329834
    4. 'rstrip' → logprob: -14.37503719329834
    5. '(split' → logprob: -14.75003719329834
    6. 'spl' → logprob: -16.875038146972656
    7. ')' → logprob: -17.000038146972656
    8. 'read' → logprob: -19.000038146972656
    9. '```' → logprob: -20.000038146972656
    10. 'replace' → logprob: -20.250038146972656

Token 14: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008431835100054741
    2. '))' → logprob: -4.883431911468506
    3. '())' → logprob: -7.258431911468506
    4. '()' → logprob: -10.133431434631348
    5. '(' → logprob: -10.508431434631348
    6. '`)' → logprob: -10.758431434631348
    7. ' )' → logprob: -11.758431434631348
    8. ')`' → logprob: -12.133431434631348
    9. ')))' → logprob: -12.258431434631348
    10. '')' → logprob: -12.758431434631348

Token 15: 'coef' (ID: 156436)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.41969603300094604
    2. 'data' → logprob: -1.9196960926055908
    3. 'arr' → logprob: -2.544696092605591
    4. 'array' → logprob: -2.669696092605591
    5. 'matrix' → logprob: -4.044695854187012
    6. 'x' → logprob: -4.294695854187012
    7. 'dp' → logprob: -6.044695854187012
    8. 'A' → logprob: -6.294695854187012
    9. '```' → logprob: -6.294695854187012
    10. 'result' → logprob: -6.419695854187012

Token 16: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6359958648681641
    2. '[' → logprob: -0.7609958648681641
    3. '[s' → logprob: -6.385995864868164
    4. '[]' → logprob: -7.135995864868164
    5. '_' → logprob: -7.885995864868164
    6. 'icients' → logprob: -8.635995864868164
    7. '[:]' → logprob: -9.510995864868164
    8. '\[' → logprob: -10.010995864868164
    9. '[np' → logprob: -10.135995864868164
    10. '[...]' → logprob: -10.635995864868164

Token 17: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.08583848923444748
    2. ' np' → logprob: -2.710838556289673
    3. '[np' → logprob: -4.835838317871094
    4. '[]' → logprob: -5.085838317871094
    5. 'list' → logprob: -6.835838317871094
    6. '[' → logprob: -8.460838317871094
    7. ' []' → logprob: -8.835838317871094
    8. ' list' → logprob: -9.210838317871094
    9. ' [' → logprob: -10.210838317871094
    10. '(np' → logprob: -10.460838317871094

Token 18: '.minimum' (ID: 126839)
  Prédit: '.array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.array' → logprob: -0.915703296661377
    2. '.zeros' → logprob: -1.040703296661377
    3. '.' → logprob: -2.290703296661377
    4. '.ones' → logprob: -3.290703296661377
    5. '.linspace' → logprob: -3.415703296661377
    6. '.linalg' → logprob: -4.040703296661377
    7. '.eye' → logprob: -4.040703296661377
    8. '.arange' → logprob: -4.540703296661377
    9. '.random' → logprob: -5.165703296661377
    10. '.poly' → logprob: -5.290703296661377

Token 19: '(np' (ID: 21997)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.40326598286628723
    2. '(np' → logprob: -1.6532659530639648
    3. '(' → logprob: -2.153265953063965
    4. '([' → logprob: -4.528265953063965
    5. '.reduce' → logprob: -4.903265953063965
    6. '.outer' → logprob: -5.403265953063965
    7. '(.' → logprob: -8.153265953063965
    8. '.acc' → logprob: -8.278265953063965
    9. '((' → logprob: -8.403265953063965
    10. '(m' → logprob: -8.528265953063965

Token 20: '.arange' (ID: 57220)
  Prédit: '.outer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.outer' → logprob: -0.1377478539943695
    2. '.arange' → logprob: -2.2627477645874023
    3. '.array' → logprob: -5.012747764587402
    4. '.ones' → logprob: -5.512747764587402
    5. '.add' → logprob: -5.887747764587402
    6. '(n' → logprob: -6.137747764587402
    7. '.reduce' → logprob: -6.637747764587402
    8. '(np' → logprob: -6.762747764587402
    9. '.' → logprob: -6.762747764587402
    10. '.linspace' → logprob: -7.512747764587402

Token 21: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.009979184716939926
    2. '(' → logprob: -4.759979248046875
    3. '(m' → logprob: -6.634979248046875
    4. 'n' → logprob: -10.384979248046875
    5. ' (' → logprob: -11.259979248046875
    6. ' n' → logprob: -12.884979248046875
    7. ')n' → logprob: -14.384979248046875
    8. '(-' → logprob: -14.509979248046875
    9. 'm' → logprob: -15.009979248046875
    10. '(start' → logprob: -15.009979248046875

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26886820793151855
    2. '[:,' → logprob: -1.8938682079315186
    3. ')' → logprob: -3.5188682079315186
    4. ' ,' → logprob: -4.268868446350098
    5. ',m' → logprob: -4.643868446350098
    6. '.reshape' → logprob: -5.018868446350098
    7. '(n' → logprob: -5.268868446350098
    8. ' (' → logprob: -5.393868446350098
    9. '[' → logprob: -5.768868446350098
    10. '(' → logprob: -6.018868446350098

Token 23: '1' (ID: 16)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6409448981285095
    2. ' m' → logprob: -0.8909448981285095
    3. ' n' → logprob: -3.8909449577331543
    4. '0' → logprob: -4.140944957733154
    5. 'n' → logprob: -4.515944957733154
    6. '1' → logprob: -4.890944957733154
    7. ' ' → logprob: -5.140944957733154
    8. ' None' → logprob: -7.890944957733154
    9. ' -' → logprob: -8.015944480895996
    10. 'None' → logprob: -8.390944480895996

Token 24: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.054336532950401306
    2. ',' → logprob: -3.0543365478515625
    3. ' ,-' → logprob: -6.0543365478515625
    4. '-' → logprob: -6.3043365478515625
    5. '0' → logprob: -7.1793365478515625
    6. '1' → logprob: -8.554336547851562
    7. ' ,' → logprob: -9.054336547851562
    8. ' -' → logprob: -9.054336547851562
    9. ',n' → logprob: -9.429336547851562
    10. '2' → logprob: -9.554336547851562

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018113377154804766
    2. '-' → logprob: -8.750181198120117
    3. ' ' → logprob: -11.500181198120117
    4. '0' → logprob: -11.875181198120117
    5. '2' → logprob: -13.000181198120117
    6. ' -' → logprob: -14.000181198120117
    7. '```' → logprob: -14.687681198120117
    8. '１' → logprob: -15.062681198120117
    9. '--' → logprob: -16.125181198120117
    10. '5' → logprob: -16.125181198120117

Token 26: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.444507896900177
    2. ',' → logprob: -1.6945078372955322
    3. ')' → logprob: -1.8195078372955322
    4. '-' → logprob: -5.694508075714111
    5. ',-' → logprob: -5.819508075714111
    6. ',n' → logprob: -6.569508075714111
    7. '))' → logprob: -6.819508075714111
    8. '1' → logprob: -7.194508075714111
    9. ' ),' → logprob: -7.819508075714111
    10. ' ' → logprob: -7.819508075714111

Token 27: 'np' (ID: 12766)
  Prédit: 'np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.4576868712902069
    2. ' np' → logprob: -1.5826869010925293
    3. 'm' → logprob: -2.0826869010925293
    4. ' m' → logprob: -3.3326869010925293
    5. 'n' → logprob: -7.207686901092529
    6. ' n' → logprob: -8.332686424255371
    7. '(np' → logprob: -8.457686424255371
    8. '[np' → logprob: -9.332686424255371
    9. ' ' → logprob: -9.582686424255371
    10. '2' → logprob: -10.582686424255371

Token 28: '.arange' (ID: 57220)
  Prédit: '.arange'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.arange' → logprob: -0.00045438710367307067
    2. '.' → logprob: -8.37545394897461
    3. '.linspace' → logprob: -9.37545394897461
    4. '.array' → logprob: -9.50045394897461
    5. '.arr' → logprob: -11.50045394897461
    6. '.ndarray' → logprob: -11.75045394897461
    7. '.range' → logprob: -11.75045394897461
    8. '.ar' → logprob: -11.87545394897461
    9. '.ones' → logprob: -11.87545394897461
    10. '`.' → logprob: -12.37545394897461

Token 29: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47713837027549744
    2. '(m' → logprob: -0.9771384000778198
    3. '(n' → logprob: -5.852138519287109
    4. ' (' → logprob: -9.47713851928711
    5. 'm' → logprob: -10.60213851928711
    6. '(-' → logprob: -11.10213851928711
    7. '((' → logprob: -11.22713851928711
    8. ')' → logprob: -11.72713851928711
    9. ' m' → logprob: -12.10213851928711
    10. '(
' → logprob: -12.10213851928711

Token 30: '1' (ID: 16)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.019977182149887085
    2. '1' → logprob: -4.14497709274292
    3. ' m' → logprob: -6.01997709274292
    4. 'n' → logprob: -7.26997709274292
    5. '0' → logprob: -7.89497709274292
    6. '(m' → logprob: -9.269977569580078
    7. '2' → logprob: -9.644977569580078
    8. '(' → logprob: -9.644977569580078
    9. ')m' → logprob: -9.894977569580078
    10. ')' → logprob: -10.269977569580078

Token 31: ',n' (ID: 18103)
  Prédit: ',m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',m' → logprob: -0.33907368779182434
    2. ',' → logprob: -1.339073657989502
    3. ',n' → logprob: -3.714073657989502
    4. ' ,' → logprob: -6.839073657989502
    5. ',np' → logprob: -11.71407413482666
    6. ',j' → logprob: -12.21407413482666
    7. 'm' → logprob: -12.21407413482666
    8. ',min' → logprob: -13.08907413482666
    9. ' ' → logprob: -13.71407413482666
    10. ',num' → logprob: -13.71407413482666

Token 32: '))
' (ID: 2210)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12896457314491272
    2. ' +' → logprob: -2.12896466255188
    3. ',+' → logprob: -7.003964424133301
    4. ',' → logprob: -7.253964424133301
    5. '+,' → logprob: -9.2539644241333
    6. '-' → logprob: -10.0039644241333
    7. ')+' → logprob: -10.0039644241333
    8. ')' → logprob: -10.1289644241333
    9. ' ,' → logprob: -10.5039644241333
    10. ' ' → logprob: -10.5039644241333

Token 33: 'dp' (ID: 19037)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7774888277053833
    2. '+' → logprob: -0.9024888277053833
    3. '[' → logprob: -2.4024887084960938
    4. '*' → logprob: -3.5274887084960938
    5. '<|end|>' → logprob: -5.777488708496094
    6. '[n' → logprob: -5.902488708496094
    7. '+
' → logprob: -6.652488708496094
    8. ' +' → logprob: -7.027488708496094
    9. '**' → logprob: -7.027488708496094
    10. ',' → logprob: -7.277488708496094

Token 34: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.010803625918924809
    2. ' =' → logprob: -5.135803699493408
    3. '=' → logprob: -5.510803699493408
    4. '[np' → logprob: -8.76080322265625
    5. ' [' → logprob: -8.88580322265625
    6. ' ' → logprob: -9.01080322265625
    7. '_' → logprob: -9.51080322265625
    8. '[:,' → logprob: -10.01080322265625
    9. ',' → logprob: -10.13580322265625
    10. '.' → logprob: -10.51080322265625

Token 35: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.252445250749588
    2. ' np' → logprob: -1.5024452209472656
    3. '(np' → logprob: -8.502445220947266
    4. '[' → logprob: -9.252445220947266
    5. '0' → logprob: -9.627445220947266
    6. '[np' → logprob: -10.127445220947266
    7. 'coef' → logprob: -10.877445220947266
    8. ' [' → logprob: -11.002445220947266
    9. 'n' → logprob: -11.502445220947266
    10. '1' → logprob: -11.502445220947266

Token 36: '.zeros' (ID: 29146)
  Prédit: '.zeros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.zeros' → logprob: -0.027439681813120842
    2. '.ones' → logprob: -4.027439594268799
    3. '.empty' → logprob: -5.527439594268799
    4. ' zeros' → logprob: -6.152439594268799
    5. 'zeros' → logprob: -7.027439594268799
    6. '.arange' → logprob: -7.277439594268799
    7. '.eye' → logprob: -7.402439594268799
    8. 'empty' → logprob: -8.402440071105957
    9. '.ndarray' → logprob: -8.402440071105957
    10. '.full' → logprob: -8.777440071105957

Token 37: '(n' (ID: 2406)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.21580374240875244
    2. '(n' → logprob: -2.215803623199463
    3. '(' → logprob: -2.465803623199463
    4. '([' → logprob: -10.590804100036621
    5. '(shape' → logprob: -11.340804100036621
    6. '(m' → logprob: -11.340804100036621
    7. ' (' → logprob: -11.465804100036621
    8. '(int' → logprob: -11.465804100036621
    9. '_like' → logprob: -11.715804100036621
    10. '(np' → logprob: -12.590804100036621

Token 38: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1342102438211441
    2. ',' → logprob: -2.5092103481292725
    3. '+' → logprob: -3.3842103481292725
    4. ',n' → logprob: -5.884210109710693
    5. ',)' → logprob: -5.884210109710693
    6. ',d' → logprob: -6.509210109710693
    7. ',m' → logprob: -6.884210109710693
    8. '),' → logprob: -7.884210109710693
    9. '*' → logprob: -7.884210109710693
    10. '))' → logprob: -8.009210586547852

Token 39: ' dtype' (ID: 29770)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.018298864364624
    2. 'dtype' → logprob: -1.518298864364624
    3. 'n' → logprob: -1.768298864364624
    4. ' m' → logprob: -2.393298864364624
    5. ')' → logprob: -2.768298864364624
    6. ' n' → logprob: -3.268298864364624
    7. ' dtype' → logprob: -3.768298864364624
    8. ' np' → logprob: -5.018299102783203
    9. 'np' → logprob: -5.018299102783203
    10. '2' → logprob: -5.143299102783203

Token 40: '=np' (ID: 40593)
  Prédit: '=int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=int' → logprob: -0.3493311107158661
    2. '=' → logprob: -1.3493311405181885
    3. '=np' → logprob: -3.3493311405181885
    4. '=float' → logprob: -8.22433090209961
    5. 'int' → logprob: -10.09933090209961
    6. '=

' → logprob: -12.72433090209961
    7. '='' → logprob: -13.34933090209961
    8. '=`' → logprob: -13.84933090209961
    9. '=i' → logprob: -13.84933090209961
    10. '=
' → logprob: -14.09933090209961

Token 41: '.int' (ID: 21499)
  Prédit: '.int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.int' → logprob: -0.057257406413555145
    2. '.float' → logprob: -3.3072574138641357
    3. '.uint' → logprob: -4.057257175445557
    4. '.' → logprob: -6.682257175445557
    5. '.i' → logprob: -7.932257175445557
    6. '.bool' → logprob: -9.807257652282715
    7. '.in' → logprob: -10.307257652282715
    8. '.dtype' → logprob: -11.557257652282715
    9. '.integer' → logprob: -12.182257652282715
    10. '.com' → logprob: -12.557257652282715

Token 42: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: -0.4742041826248169
    2. '32' → logprob: -0.9742041826248169
    3. 'p' → logprob: -9.474204063415527
    4. 'c' → logprob: -10.099204063415527
    5. '8' → logprob: -12.349204063415527
    6. '16' → logprob: -12.849204063415527
    7. '6' → logprob: -13.849204063415527
    8. '_' → logprob: -14.599204063415527
    9. ')' → logprob: -14.724204063415527
    10. '_)' → logprob: -15.724204063415527

Token 43: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3080716346157715e-05
    2. ')
' → logprob: -11.125022888183594
    3. ' )' → logprob: -13.125022888183594
    4. ')

' → logprob: -13.250022888183594
    5. '))' → logprob: -13.625022888183594
    6. '())' → logprob: -14.125022888183594
    7. '()' → logprob: -14.250022888183594
    8. '')' → logprob: -15.000022888183594
    9. '),' → logprob: -15.000022888183594
    10. '[' → logprob: -15.125022888183594

Token 44: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.26210305094718933
    2. 'for' → logprob: -1.8871030807495117
    3. '[' → logprob: -2.7621030807495117
    4. ' for' → logprob: -5.387103080749512
    5. '=' → logprob: -6.137103080749512
    6. '[
' → logprob: -6.262103080749512
    7. '```' → logprob: -6.762103080749512
    8. '
' → logprob: -7.387103080749512
    9. ')' → logprob: -7.512103080749512
    10. ' dp' → logprob: -7.512103080749512

Token 45: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16144777834415436
    2. '+' → logprob: -1.9114477634429932
    3. ' +' → logprob: -7.911448001861572
    4. '[:]' → logprob: -7.911448001861572
    5. '[]' → logprob: -9.161447525024414
    6. '<|end|>' → logprob: -9.911447525024414
    7. '*' → logprob: -10.161447525024414
    8. '[np' → logprob: -10.161447525024414
    9. '[n' → logprob: -10.411447525024414
    10. '=' → logprob: -10.536447525024414

Token 46: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016226617619395256
    2. '1' → logprob: -4.891226768493652
    3. '-' → logprob: -5.016226768493652
    4. ':' → logprob: -7.141226768493652
    5. ' ' → logprob: -7.391226768493652
    6. '[' → logprob: -8.766226768493652
    7. 'n' → logprob: -8.766226768493652
    8. ']' → logprob: -9.891226768493652
    9. ':]' → logprob: -10.266226768493652
    10. ':n' → logprob: -10.891226768493652

Token 47: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.023677963763475418
    2. ']=' → logprob: -3.7736780643463135
    3. ' ]' → logprob: -8.398677825927734
    4. ']+=' → logprob: -9.023677825927734
    5. '=' → logprob: -9.898677825927734
    6. ')' → logprob: -11.148677825927734
    7. ')]' → logprob: -12.648677825927734
    8. ']==' → logprob: -12.898677825927734
    9. '[' → logprob: -13.023677825927734
    10. ')=' → logprob: -13.148677825927734

Token 48: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2254778891801834
    2. ' =' → logprob: -1.600477933883667
    3. ' +=' → logprob: -10.350478172302246
    4. '+=' → logprob: -10.850478172302246
    5. '+' → logprob: -12.475478172302246
    6. ' ' → logprob: -12.725478172302246
    7. '<|end|>' → logprob: -13.100478172302246
    8. '=True' → logprob: -13.725478172302246
    9. ',' → logprob: -14.475478172302246
    10. '=np' → logprob: -14.600478172302246

Token 49: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009789824252948165
    2. ' ' → logprob: -7.625978946685791
    3. '0' → logprob: -7.875978946685791
    4. 'm' → logprob: -10.62597942352295
    5. '2' → logprob: -10.75097942352295
    6. 'coef' → logprob: -10.75097942352295
    7. 'n' → logprob: -11.25097942352295
    8. 'np' → logprob: -12.12597942352295
    9. '3' → logprob: -12.37597942352295
    10. '-' → logprob: -12.87597942352295

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006191504653543234
    2. '0' → logprob: -7.750618934631348
    3. ' ' → logprob: -9.875618934631348
    4. 'm' → logprob: -10.125618934631348
    5. 'n' → logprob: -10.500618934631348
    6. '2' → logprob: -10.750618934631348
    7. 'coef' → logprob: -11.625618934631348
    8. 'np' → logprob: -11.750618934631348
    9. '-' → logprob: -11.875618934631348
    10. '3' → logprob: -12.500618934631348

Token 51: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7675502300262451
    2. '<|end|>' → logprob: -1.3925502300262451
    3. '\n' → logprob: -1.7675502300262451
    4. '+' → logprob: -3.892550230026245
    5. '' → logprob: -4.267550468444824
    6. '[' → logprob: -4.267550468444824
    7. ' 
' → logprob: -4.392550468444824
    8. '\' → logprob: -4.642550468444824
    9. ' ' → logprob: -4.767550468444824
    10. '
' → logprob: -5.017550468444824

Token 52: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4891396462917328
    2. ' for' → logprob: -0.9891396760940552
    3. '```' → logprob: -5.364139556884766
    4. '<|end|>' → logprob: -6.114139556884766
    5. '\n' → logprob: -6.239139556884766
    6. ')' → logprob: -6.614139556884766
    7. '+' → logprob: -6.739139556884766
    8. '=' → logprob: -6.989139556884766
    9. '[' → logprob: -6.989139556884766
    10. 'n' → logprob: -8.239139556884766

Token 53: ' c' (ID: 274)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5825594067573547
    2. ' i' → logprob: -0.8325594067573547
    3. ' _' → logprob: -5.332559585571289
    4. '_' → logprob: -6.832559585571289
    5. 'i' → logprob: -7.832559585571289
    6. '  ' → logprob: -8.457559585571289
    7. ' ' → logprob: -10.707559585571289
    8. ' ‌' → logprob: -10.707559585571289
    9. '_i' → logprob: -12.582559585571289
    10. ' ▁' → logprob: -12.707559585571289

Token 54: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.027465881779789925
    2. 'in' → logprob: -3.7774658203125
    3. ' ' → logprob: -5.7774658203125
    4. 'ount' → logprob: -8.5274658203125
    5. ' i' → logprob: -8.5274658203125
    6. 'o' → logprob: -8.7774658203125
    7. 'i' → logprob: -8.9024658203125
    8. '  ' → logprob: -9.5274658203125
    9. '_' → logprob: -9.7774658203125
    10. ',' → logprob: -10.0274658203125

Token 55: ' coef' (ID: 107584)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03836826607584953
    2. 'range' → logprob: -3.2883682250976562
    3. ' coef' → logprob: -8.788368225097656
    4. ' ' → logprob: -9.663368225097656
    5. 'coef' → logprob: -10.163368225097656
    6. ' np' → logprob: -10.788368225097656
    7. '_' → logprob: -11.413368225097656
    8. '  ' → logprob: -12.538368225097656
    9. ' ra' → logprob: -12.663368225097656
    10. ' ran' → logprob: -12.788368225097656

Token 56: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010281291790306568
    2. '[' → logprob: -5.385281085968018
    3. ' :' → logprob: -6.010281085968018
    4. '[:' → logprob: -6.135281085968018
    5. '+' → logprob: -7.385281085968018
    6. '+:' → logprob: -9.135281562805176
    7. '[:-' → logprob: -9.760281562805176
    8. '>' → logprob: -10.135281562805176
    9. ':
' → logprob: -10.260281562805176
    10. '[:]' → logprob: -10.510281562805176

Token 57: '   ' (ID: 271)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.2232002317905426
    2. 'dp' → logprob: -2.4732003211975098
    3. ' for' → logprob: -2.5982003211975098
    4. ' ' → logprob: -4.09820032119751
    5. '    ' → logprob: -4.72320032119751
    6. '   ' → logprob: -4.84820032119751
    7. '	dp' → logprob: -5.97320032119751
    8. 'for' → logprob: -6.84820032119751
    9. ' 
' → logprob: -7.09820032119751
    10. ' i' → logprob: -7.22320032119751

Token 58: ' nd' (ID: 5914)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.27042627334594727
    2. ' for' → logprob: -1.5204262733459473
    3. 'dp' → logprob: -4.520426273345947
    4. 'for' → logprob: -5.770426273345947
    5. ' ' → logprob: -6.770426273345947
    6. ' range' → logprob: -6.895426273345947
    7. ' new' → logprob: -7.270426273345947
    8. ' i' → logprob: -7.770426273345947
    9. ' np' → logprob: -7.895426273345947
    10. '    ' → logprob: -8.645425796508789

Token 59: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0007992653991095722
    2. '=' → logprob: -7.250799179077148
    3. ' =' → logprob: -9.625799179077148
    4. '=np' → logprob: -11.500799179077148
    5. '+=' → logprob: -12.500799179077148
    6. '=p' → logprob: -12.625799179077148
    7. 'п' → logprob: -13.375799179077148
    8. '[' → logprob: -14.125799179077148
    9. '[p' → logprob: -14.750799179077148
    10. '```' → logprob: -14.875799179077148

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.315106600522995
    2. '=' → logprob: -1.3151066303253174
    3. ' +=' → logprob: -6.690106391906738
    4. '+=' → logprob: -7.690106391906738
    5. '[' → logprob: -9.440106391906738
    6. ' ' → logprob: -10.565106391906738
    7. '+' → logprob: -11.190106391906738
    8. '[:]' → logprob: -11.315106391906738
    9. '=np' → logprob: -11.940106391906738
    10. '[:' → logprob: -13.815106391906738

Token 61: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3043292462825775
    2. 'np' → logprob: -1.9293292760849
    3. ' dp' → logprob: -2.4293291568756104
    4. ' np' → logprob: -3.5543291568756104
    5. '(dp' → logprob: -8.929328918457031
    6. ' ' → logprob: -9.429328918457031
    7. ' (' → logprob: -9.429328918457031
    8. '(np' → logprob: -10.304328918457031
    9. '	dp' → logprob: -10.429328918457031
    10. '0' → logprob: -11.116828918457031

Token 62: '.copy' (ID: 22925)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05673333629965782
    2. ' +' → logprob: -2.9317333698272705
    3. '.copy' → logprob: -6.306733131408691
    4. '+c' → logprob: -11.556733131408691
    5. '[' → logprob: -12.306733131408691
    6. ' ' → logprob: -12.806733131408691
    7. '[:]' → logprob: -13.306733131408691
    8. '*' → logprob: -13.931733131408691
    9. '+b' → logprob: -14.556733131408691
    10. '+C' → logprob: -14.556733131408691

Token 63: '()
' (ID: 1234)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1275327205657959
    2. ' +' → logprob: -2.877532720565796
    3. '*' → logprob: -3.252532720565796
    4. '
' → logprob: -4.377532958984375
    5. '<|end|>' → logprob: -5.002532958984375
    6. ' *' → logprob: -6.502532958984375
    7. ')' → logprob: -7.127532958984375
    8. ' ' → logprob: -7.877532958984375
    9. '<|end|>' → logprob: -7.877532958984375
    10. '   ' → logprob: -8.002532958984375

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5580134987831116
    2. ' for' → logprob: -1.0580134391784668
    3. '<|end|>' → logprob: -3.058013439178467
    4. '
' → logprob: -4.308013439178467
    5. '	for' → logprob: -4.683013439178467
    6. '+' → logprob: -5.808013439178467
    7. 'for' → logprob: -6.058013439178467
    8. '    
' → logprob: -6.558013439178467
    9. ' dp' → logprob: -7.183013439178467
    10. '<|end|>' → logprob: -7.808013439178467

Token 65: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5969833135604858
    2. 'for' (adapté à ' for') → logprob: -0.8469833135604858
    3. '   ' → logprob: -4.971983432769775
    4. '+' → logprob: -5.221983432769775
    5. ' nd' → logprob: -5.596983432769775
    6. 'nd' → logprob: -5.846983432769775
    7. 'dp' → logprob: -6.721983432769775
    8. '	for' → logprob: -8.471982955932617
    9. '<|end|>' → logprob: -8.846982955932617
    10. '    ' → logprob: -9.596982955932617

Token 66: ' i' (ID: 575)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.9688373804092407
    2. ' i' → logprob: -0.9688373804092407
    3. 'i' → logprob: -1.9688373804092407
    4. 'j' → logprob: -2.343837261199951
    5. ' k' → logprob: -6.093837261199951
    6. 'k' → logprob: -7.093837261199951
    7. ' x' → logprob: -7.468837261199951
    8. 'x' → logprob: -7.843837261199951
    9. ' t' → logprob: -8.21883773803711
    10. ' _' → logprob: -8.84383773803711

Token 67: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002012263983488083
    2. 'in' → logprob: -6.502012252807617
    3. ' ' → logprob: -8.127012252807617
    4. '+' → logprob: -8.627012252807617
    5. '	in' → logprob: -11.502012252807617
    6. ',' → logprob: -11.752012252807617
    7. '  ' → logprob: -12.752012252807617
    8. ' +' → logprob: -13.377012252807617
    9. '   ' → logprob: -13.502012252807617
    10. 'range' → logprob: -13.502012252807617

Token 68: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -6.229872087715194e-05
    2. 'range' → logprob: -10.000061988830566
    3. ' ' → logprob: -11.250061988830566
    4. '	range' → logprob: -13.500061988830566
    5. ' np' → logprob: -14.375061988830566
    6. ' xrange' → logprob: -14.625061988830566
    7. '   ' → logprob: -14.750061988830566
    8. '  ' → logprob: -14.875061988830566
    9. '(range' → logprob: -15.500061988830566
    10. ' ran' → logprob: -15.500061988830566

Token 69: '(c' (ID: 2410)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.183800607919693
    2. '(' → logprob: -2.43380069732666
    3. '(m' → logprob: -2.55880069732666
    4. '(c' → logprob: -5.93380069732666
    5. '(len' → logprob: -9.80880069732666
    6. '(i' → logprob: -10.68380069732666
    7. '(co' → logprob: -10.68380069732666
    8. 'n' → logprob: -11.68380069732666
    9. '(dp' → logprob: -12.05880069732666
    10. 'm' → logprob: -12.05880069732666

Token 70: ',' (ID: 11)
  Prédit: ',n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.7000386714935303
    2. '+' → logprob: -1.2000386714935303
    3. ',' → logprob: -1.7000386714935303
    4. ' +' → logprob: -4.075038909912109
    5. ' ,' → logprob: -6.575038909912109
    6. '):' → logprob: -7.325038909912109
    7. ',m' → logprob: -8.45003890991211
    8. '+n' → logprob: -8.70003890991211
    9. '   ' → logprob: -10.32503890991211
    10. '-' → logprob: -10.45003890991211

Token 71: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0007367274374701083
    2. 'm' → logprob: -7.375736713409424
    3. ' n' → logprob: -9.125737190246582
    4. '   ' → logprob: -14.250737190246582
    5. ' m' → logprob: -15.625737190246582
    6. 'nm' → logprob: -15.875737190246582
    7. '	n' → logprob: -16.000736236572266
    8. ' ' → logprob: -16.625736236572266
    9. 'min' → logprob: -16.750736236572266
    10. 'np' → logprob: -17.000736236572266

Token 72: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02360694669187069
    2. '):
' → logprob: -3.773607015609741
    3. '+' → logprob: -8.14860725402832
    4. ':' → logprob: -10.39860725402832
    5. '):
' → logprob: -10.39860725402832
    6. ' ):' → logprob: -11.89860725402832
    7. ')' → logprob: -14.02360725402832
    8. ',' → logprob: -14.39860725402832
    9. '}:' → logprob: -14.52360725402832
    10. '**' → logprob: -14.89860725402832

Token 73: ' c' (ID: 274)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001166056958027184
    2. ' ' → logprob: -7.001165866851807
    3. ')' → logprob: -8.501166343688965
    4. '+' → logprob: -10.751166343688965
    5. '   ' → logprob: -11.251166343688965
    6. 'm' → logprob: -11.626166343688965
    7. '):
' → logprob: -12.751166343688965
    8. '  ' → logprob: -13.876166343688965
    9. 'n' → logprob: -14.126166343688965
    10. '):' → logprob: -14.376166343688965

Token 74: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014342490583658218
    2. '):
' → logprob: -4.264342308044434
    3. '+' → logprob: -8.889342308044434
    4. '):
' → logprob: -11.014342308044434
    5. ')' → logprob: -11.514342308044434
    6. ':' → logprob: -11.764342308044434
    7. ' ):' → logprob: -13.389342308044434
    8. '1' → logprob: -13.514342308044434
    9. ',' → logprob: -13.764342308044434
    10. '2' → logprob: -14.139342308044434

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007109848316758871
    2. ' nd' → logprob: -5.757109642028809
    3. '<|end|>' → logprob: -6.757109642028809
    4. 'nd' → logprob: -6.882109642028809
    5. '   ' → logprob: -7.382109642028809
    6. '    ' → logprob: -8.132109642028809
    7. '+' → logprob: -8.257109642028809
    8. ' ' → logprob: -8.882109642028809
    9. '      ' → logprob: -9.257109642028809
    10. '  ' → logprob: -10.382109642028809

Token 76: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.024928955361247063
    2. 'nd' (adapté à ' nd') → logprob: -3.7749290466308594
    3. '       ' → logprob: -7.024929046630859
    4. '   ' → logprob: -8.02492904663086
    5. ' dp' → logprob: -8.89992904663086
    6. 'dp' → logprob: -9.27492904663086
    7. '```' → logprob: -9.52492904663086
    8. '           ' → logprob: -10.39992904663086
    9. '_nd' → logprob: -10.52492904663086
    10. '(nd' → logprob: -10.89992904663086

Token 77: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.024733472615480423
    2. '[i' → logprob: -3.774733543395996
    3. 'i' → logprob: -7.274733543395996
    4. '[' → logprob: -7.524733543395996
    5. 'dp' → logprob: -8.524733543395996
    6. '```' → logprob: -11.024733543395996
    7. '   ' → logprob: -11.524733543395996
    8. '[p' → logprob: -11.649733543395996
    9. 'pm' → logprob: -12.774733543395996
    10. ' ' → logprob: -13.274733543395996

Token 78: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00022558939235750586
    2. '[' → logprob: -8.750226020812988
    3. '[:' → logprob: -10.000226020812988
    4. '+=' → logprob: -11.125226020812988
    5. '[:]' → logprob: -12.875226020812988
    6. ']+=' → logprob: -13.875226020812988
    7. '[:-' → logprob: -14.125226020812988
    8. ' +=' → logprob: -14.625226020812988
    9. '```' → logprob: -15.000226020812988
    10. '[I' → logprob: -15.500226020812988

Token 79: ':]' (ID: 67377)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2813558876514435
    2. ']+=' → logprob: -1.406355857849121
    3. ']+' → logprob: -9.031355857849121
    4. ' ]' → logprob: -10.531355857849121
    5. '|' → logprob: -10.781355857849121
    6. ']=' → logprob: -10.781355857849121
    7. '+=' → logprob: -12.156355857849121
    8. '+' → logprob: -13.031355857849121
    9. '[' → logprob: -13.156355857849121
    10. '```' → logprob: -13.781355857849121

Token 80: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.011514847166836262
    2. ' +=' → logprob: -4.636514663696289
    3. '=' → logprob: -6.761514663696289
    4. ']+=' → logprob: -7.886514663696289
    5. '+' → logprob: -9.386514663696289
    6. '|' → logprob: -9.511514663696289
    7. '[' → logprob: -11.011514663696289
    8. ' =' → logprob: -11.386514663696289
    9. '+=(' → logprob: -11.761514663696289
    10. '^' → logprob: -12.011514663696289

Token 81: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6327288746833801
    2. ' dp' → logprob: -0.7577288746833801
    3. '	dp' → logprob: -9.757728576660156
    4. 'np' → logprob: -10.632728576660156
    5. '   ' → logprob: -11.382728576660156
    6. '       ' → logprob: -11.507728576660156
    7. ' np' → logprob: -12.007728576660156
    8. ' ' → logprob: -12.132728576660156
    9. 'nd' → logprob: -12.257728576660156
    10. '(dp' → logprob: -12.632728576660156

Token 82: '[:' (ID: 7808)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.29202452301979065
    2. '[:' → logprob: -1.4170244932174683
    3. '[:-' → logprob: -4.542024612426758
    4. ':i' → logprob: -9.542024612426758
    5. '[' → logprob: -10.292024612426758
    6. 'i' → logprob: -10.792024612426758
    7. '[(' → logprob: -10.917024612426758
    8. '(i' → logprob: -12.292024612426758
    9. '   ' → logprob: -12.292024612426758
    10. 'a' → logprob: -12.917024612426758

Token 83: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0036556494887918234
    2. '(n' → logprob: -6.378655433654785
    3. '-n' → logprob: -7.128655433654785
    4. ' n' → logprob: -7.378655433654785
    5. 'i' → logprob: -8.628655433654785
    6. ':n' → logprob: -9.003655433654785
    7. '-' → logprob: -9.628655433654785
    8. '   ' → logprob: -10.628655433654785
    9. '(' → logprob: -10.753655433654785
    10. ' -' → logprob: -10.878655433654785

Token 84: '-i' (ID: 18499)
  Prédit: '-i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.3179596960544586
    2. ' -' → logprob: -1.3179596662521362
    3. '-' → logprob: -6.067959785461426
    4. '   ' → logprob: -6.942959785461426
    5. 'i' → logprob: -7.442959785461426
    6. '-n' → logprob: -8.317959785461426
    7. '[i' → logprob: -8.567959785461426
    8. '-c' → logprob: -8.942959785461426
    9. '(i' → logprob: -9.317959785461426
    10. ' ' → logprob: -9.442959785461426

Token 85: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008733469061553478
    2. '])' → logprob: -5.00873327255249
    3. ' ]' → logprob: -6.50873327255249
    4. ']
' → logprob: -8.633733749389648
    5. '   ' → logprob: -8.883733749389648
    6. '-' → logprob: -9.883733749389648
    7. '-i' → logprob: -10.383733749389648
    8. ' ' → logprob: -10.633733749389648
    9. ' ])' → logprob: -10.758733749389648
    10. ']

' → logprob: -10.883733749389648

Token 86: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3436430096626282
    2. ' dp' → logprob: -1.3436429500579834
    3. '   ' → logprob: -3.5936429500579834
    4. '	dp' → logprob: -6.3436431884765625
    5. '[' → logprob: -8.718643188476562
    6. '<|end|>' → logprob: -8.718643188476562
    7. ' ' → logprob: -9.218643188476562
    8. '_dp' → logprob: -9.343643188476562
    9. '(dp' → logprob: -9.718643188476562
    10. '```' → logprob: -10.968643188476562

Token 87: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.05891041085124016
    2. ' dp' → logprob: -2.933910369873047
    3. '   ' → logprob: -5.558910369873047
    4. ' ' → logprob: -9.308910369873047
    5. '	dp' → logprob: -10.308910369873047
    6. 'import' → logprob: -10.933910369873047
    7. '  ' → logprob: -12.058910369873047
    8. '(dp' → logprob: -12.558910369873047
    9. '```' → logprob: -13.058910369873047
    10. ' for' → logprob: -13.183910369873047

Token 88: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.29901760816574097
    2. ' =' → logprob: -1.4240176677703857
    3. '[:]' → logprob: -4.174017429351807
    4. ' +=' → logprob: -6.674017429351807
    5. '+=' → logprob: -7.174017429351807
    6. ',' → logprob: -8.924017906188965
    7. '[' → logprob: -9.549017906188965
    8. '[:' → logprob: -10.299017906188965
    9. '<|end|>' → logprob: -11.799017906188965
    10. '.=' → logprob: -11.799017906188965

Token 89: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.14273571968078613
    2. 'nd' → logprob: -2.017735719680786
    3. ' np' → logprob: -10.642735481262207
    4. 'np' → logprob: -11.142735481262207
    5. '(nd' → logprob: -11.767735481262207
    6. '_nd' → logprob: -12.642735481262207
    7. 'n' → logprob: -13.517735481262207
    8. ' nde' → logprob: -13.642735481262207
    9. 'dp' → logprob: -13.767735481262207
    10. ' ' → logprob: -14.017735481262207

Token 90: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.173704271830502e-06
    2. '[' → logprob: -14.00000286102295
    3. ' ' → logprob: -14.75000286102295
    4. ' p' → logprob: -15.00000286102295
    5. '[p' → logprob: -15.12500286102295
    6. '```' → logprob: -15.62500286102295
    7. '   ' → logprob: -15.75000286102295
    8. 'dp' → logprob: -15.75000286102295
    9. '  ' → logprob: -16.500003814697266
    10. '{' → logprob: -16.500003814697266

Token 91: ' %' (ID: 1851)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 92: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0005711443373002112
    2. '100' → logprob: -8.250571250915527
    3. '(' → logprob: -9.125571250915527
    4. ' m' → logprob: -9.500571250915527
    5. '(m' → logprob: -9.750571250915527
    6. '998' → logprob: -10.625571250915527
    7. '10' → logprob: -10.750571250915527
    8. ' (' → logprob: -11.625571250915527
    9. '1' → logprob: -12.375571250915527
    10. ' ' → logprob: -12.750571250915527

Token 93: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05200060084462166
    2. '\n' → logprob: -4.052000522613525
    3. ')' → logprob: -4.552000522613525
    4. '<|end|>' → logprob: -4.552000522613525
    5. '[' → logprob: -5.802000522613525
    6. '
' → logprob: -6.177000522613525
    7. ' print' → logprob: -6.552000522613525
    8. ']' → logprob: -6.802000522613525
    9. ' ' → logprob: -7.052000522613525
    10. 'dp' → logprob: -7.177000522613525

Token 94: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5552440285682678
    2. '<|end|>' → logprob: -1.430243968963623
    3. '\n' → logprob: -2.805243968963623
    4. '[' → logprob: -3.180243968963623
    5. ']' → logprob: -3.555243968963623
    6. '#' → logprob: -4.430243968963623
    7. '```' → logprob: -4.680243968963623
    8. 'n' → logprob: -4.805243968963623
    9. '
' → logprob: -4.805243968963623
    10. '}' → logprob: -5.305243968963623

Token 95: '((' (ID: 2054)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.057149775326251984
    2. '(np' → logprob: -3.057149887084961
    3. '(' → logprob: -4.932149887084961
    4. '(sum' → logprob: -6.682149887084961
    5. '(max' → logprob: -10.807149887084961
    6. 'dp' → logprob: -10.932149887084961
    7. '(*' → logprob: -12.432149887084961
    8. '()' → logprob: -12.432149887084961
    9. '(len' → logprob: -12.557149887084961
    10. ' (' → logprob: -12.807149887084961

Token 96: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0090049859136343
    2. ' dp' → logprob: -5.384005069732666
    3. 'np' → logprob: -5.634005069732666
    4. 'sum' → logprob: -7.384005069732666
    5. '(dp' → logprob: -9.384004592895508
    6. 'int' → logprob: -9.759004592895508
    7. ' np' → logprob: -10.759004592895508
    8. ' sum' → logprob: -11.884004592895508
    9. ' ' → logprob: -13.509004592895508
    10. '	dp' → logprob: -13.759004592895508

Token 97: '*np' (ID: 98005)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.13019660115242004
    2. '[n' → logprob: -2.1301965713500977
    3. '[' → logprob: -5.755196571350098
    4. '.sum' → logprob: -10.005196571350098
    5. '[np' → logprob: -11.005196571350098
    6. '[:' → logprob: -11.755196571350098
    7. '[:-' → logprob: -11.755196571350098
    8. ')' → logprob: -12.630196571350098
    9. ' [-' → logprob: -12.755196571350098
    10. ' [' → logprob: -12.880196571350098

Token 98: '.arange' (ID: 57220)
  Prédit: '.arange'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.arange' → logprob: -0.0016549444990232587
    2. '.' → logprob: -7.251655101776123
    3. '.math' → logprob: -7.751655101776123
    4. '.factor' → logprob: -9.626654624938965
    5. '.array' → logprob: -10.126654624938965
    6. '.ones' → logprob: -10.251654624938965
    7. '[' → logprob: -10.501654624938965
    8. '.c' → logprob: -10.626654624938965
    9. '.linspace' → logprob: -10.751654624938965
    10. '[::-' → logprob: -10.876654624938965

Token 99: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04300855100154877
    2. '(' → logprob: -3.16800856590271
    3. '1' → logprob: -12.793008804321289
    4. ' (' → logprob: -13.043008804321289
    5. '(len' → logprob: -13.168008804321289
    6. 'n' → logprob: -13.793008804321289
    7. '(
' → logprob: -14.168008804321289
    8. '(start' → logprob: -15.543008804321289
    9. '((' → logprob: -15.793008804321289
    10. '(-' → logprob: -16.04300880432129

Token 100: ',' (ID: 11)
  Prédit: ')).'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')).' → logprob: -0.055248845368623734
    2. '))' → logprob: -3.180248737335205
    3. ').' → logprob: -5.430248737335205
    4. ',n' → logprob: -6.180248737335205
    5. ')' → logprob: -6.305248737335205
    6. ',' → logprob: -6.305248737335205
    7. ' )' → logprob: -6.680248737335205
    8. ')[' → logprob: -7.805248737335205
    9. '))).' → logprob: -9.430249214172363
    10. ' ,' → logprob: -9.930249214172363

Token 101: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9206051230430603
    2. '-' → logprob: -1.170605182647705
    3. 'n' → logprob: -1.420605182647705
    4. '1' → logprob: -3.045605182647705
    5. '-n' → logprob: -6.795605182647705
    6. ' -' → logprob: -7.420605182647705
    7. ',' → logprob: -8.295604705810547
    8. '2' → logprob: -9.170604705810547
    9. ' n' → logprob: -9.170604705810547
    10. ' ' → logprob: -9.420604705810547

Token 102: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3156319558620453
    2. '-' → logprob: -1.5656319856643677
    3. '1' → logprob: -3.440631866455078
    4. 'n' → logprob: -3.565631866455078
    5. '-n' → logprob: -7.065631866455078
    6. ' -' → logprob: -8.440631866455078
    7. '2' → logprob: -8.690631866455078
    8. ',' → logprob: -9.690631866455078
    9. ' ' → logprob: -10.440631866455078
    10. ' n' → logprob: -10.940631866455078

Token 103: ',' (ID: 11)
  Prédit: ',-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.002919353311881423
    2. ',' → logprob: -5.8779191970825195
    3. '-' → logprob: -9.87791919708252
    4. ' ,-' → logprob: -9.87791919708252
    5. '-,' → logprob: -12.50291919708252
    6. ' ,' → logprob: -13.00291919708252
    7. ',-
' → logprob: -13.00291919708252
    8. ',-

' → logprob: -13.87791919708252
    9. '  ' → logprob: -14.62791919708252
    10. '1' → logprob: -14.87791919708252

Token 104: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0004618896055035293
    2. ' -' → logprob: -7.750462055206299
    3. ',-' → logprob: -10.50046157836914
    4. '  ' → logprob: -13.00046157836914
    5. '   ' → logprob: -15.00046157836914
    6. '-step' → logprob: -15.25046157836914
    7. '```' → logprob: -15.62546157836914
    8. '	' → logprob: -15.87546157836914
    9. '-d' → logprob: -16.12546157836914
    10. ' ' → logprob: -16.62546157836914

Token 105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2127087504486553e-05
    2. '-' → logprob: -10.750021934509277
    3. ' ' → logprob: -14.500021934509277
    4. ' -' → logprob: -16.500022888183594
    5. '```' → logprob: -17.500022888183594
    6. '   ' → logprob: -17.625022888183594
    7. '2' → logprob: -19.375022888183594
    8. '  ' → logprob: -19.375022888183594
    9. '１' → logprob: -19.625022888183594
    10. ')' → logprob: -19.875022888183594

Token 106: ')' (ID: 8)
  Prédit: ')).'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')).' → logprob: -0.0035732227843254805
    2. ')[' → logprob: -5.878573417663574
    3. '))[' → logprob: -8.253573417663574
    4. ' )' → logprob: -8.503573417663574
    5. '))' → logprob: -8.628573417663574
    6. ').' → logprob: -9.628573417663574
    7. '))).' → logprob: -10.753573417663574
    8. ')' → logprob: -10.753573417663574
    9. ')%' → logprob: -11.753573417663574
    10. '  ' → logprob: -13.253573417663574

Token 107: ' %' (ID: 1851)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ').' → logprob: -0.013186587952077389
    2. ')[' → logprob: -5.138186454772949
    3. ')%' → logprob: -5.638186454772949
    4. ')' → logprob: -5.638186454772949
    5. ' ).' → logprob: -9.88818645477295
    6. '[' → logprob: -10.88818645477295
    7. '%' → logprob: -11.01318645477295
    8. ')).' → logprob: -11.76318645477295
    9. '))' → logprob: -12.38818645477295
    10. '[::-' → logprob: -12.38818645477295

Token 108: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.016035189852118492
    2. ' m' → logprob: -4.141035079956055
    3. 'n' → logprob: -14.516035079956055
    4. ' ' → logprob: -14.766035079956055
    5. ' n' → logprob: -17.141035079956055
    6. '  ' → logprob: -17.266035079956055
    7. ')m' → logprob: -17.516035079956055
    8. ')' → logprob: -18.266035079956055
    9. '   ' → logprob: -18.391035079956055
    10. ' ' → logprob: -18.391035079956055

Token 109: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.02435869164764881
    2. ')' → logprob: -3.7743587493896484
    3. ')[' → logprob: -7.524358749389648
    4. ')%' → logprob: -8.024358749389648
    5. '))' → logprob: -8.524358749389648
    6. ')).' → logprob: -10.524358749389648
    7. ' ).' → logprob: -11.524358749389648
    8. ' )' → logprob: -13.149358749389648
    9. '%' → logprob: -13.399358749389648
    10. ')`' → logprob: -13.399358749389648

Token 110: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.1472419600977446e-06
    2. ' sum' → logprob: -14.625000953674316
    3. 'dot' → logprob: -15.375000953674316
    4. '```' → logprob: -15.625000953674316
    5. '.sum' → logprob: -16.000001907348633
    6. '(sum' → logprob: -17.000001907348633
    7. 'tolist' → logprob: -17.375001907348633
    8. 'astype' → logprob: -17.750001907348633
    9. 'reduce' → logprob: -18.750001907348633
    10. '
' → logprob: -18.750001907348633

Token 111: '()' (ID: 416)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2524983286857605
    2. '()' → logprob: -1.5024983882904053
    3. ')' → logprob: -7.877498149871826
    4. ' ())' → logprob: -9.002498626708984
    5. '()%' → logprob: -10.752498626708984
    6. '(' → logprob: -11.002498626708984
    7. '())
' → logprob: -12.127498626708984
    8. ' ()' → logprob: -12.252498626708984
    9. '()`' → logprob: -12.252498626708984
    10. '()))' → logprob: -13.127498626708984

Token 112: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5094070477061905e-05
    2. '))' → logprob: -11.750015258789062
    3. ' )' → logprob: -13.250015258789062
    4. ')
' → logprob: -13.375015258789062
    5. '`)' → logprob: -13.500015258789062
    6. '')' → logprob: -14.875015258789062
    7. ')`' → logprob: -14.875015258789062
    8. ')#' → logprob: -15.250015258789062
    9. '+' → logprob: -15.375015258789062
    10. '#' → logprob: -15.500015258789062

Token 113: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00033546582562848926
    2. ' m' → logprob: -8.000335693359375
    3. ')m' → logprob: -18.250335693359375
    4. ')' → logprob: -19.875335693359375
    5. '(m' → logprob: -20.000335693359375
    6. ' ' → logprob: -20.250335693359375
    7. '```' → logprob: -21.375335693359375
    8. '	m' → logprob: -22.000335693359375
    9. '%m' → logprob: -22.250335693359375
    10. '   ' → logprob: -22.375335693359375

Token 114: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. ')
' → logprob: -14.00000286102295
    3. ' )' → logprob: -14.12500286102295
    4. '))' → logprob: -14.50000286102295
    5. '`)' → logprob: -16.000001907348633
    6. ')`' → logprob: -16.500001907348633
    7. '')' → logprob: -16.625001907348633
    8. '")' → logprob: -18.625001907348633
    9. ')#' → logprob: -18.750001907348633
    10. '),' → logprob: -18.875001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 112
Tokens correctement prédits (1ère position, stricte): 45
Tokens correctement prédits (1ère position, avec adaptation): 46
Tokens correctement prédits (top 10): 93
Précision stricte (1ère position): 40.18%
Précision adaptée (1ère position): 41.07%
Précision (top 10): 83.04%
================================================================================
