================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:04:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce

def is_base(ch):
    return ch == 'A' or ch == 'T' or ch == 'C' or ch == 'G'

def indices(seq):
    for idx, x in enumerate(seq):
        yield idx, x

s = list(input())
BASES = set(['A', 'T', 'C', 'G'])
l, r = -1, -1
res = [0, -1]

flag = False
start = end = None

idx = 0
while idx < len(s):
    letter = s[idx]
    if (letter in BASES):
        if not flag:
            flag = True
            start = idx
        end = idx
    else:
        if flag:
            if start is not None and end is not None:
                res = max(res, [start, end], key=lambda p: p[1] - p[0])
            flag = False
            start = end = None
    idx += 1

if flag and start is not None and end is not None:
    res = max(res, [start, end], key=lambda p: p[1] - p[0])

print((lambda l, r: r - l + 1)(res[0], res[1]))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.6121250987052917
    2. 'wrap' → logprob: -0.8621250987052917
    3. 'reduce' → logprob: -3.4871251583099365
    4. 'l' → logprob: -6.112124919891357
    5. ' wraps' → logprob: -6.487124919891357
    6. 'cached' → logprob: -7.612124919891357
    7. 'cache' → logprob: -7.987124919891357
    8. 'cmp' → logprob: -9.237125396728516
    9. '```' → logprob: -9.237125396728516
    10. ' partial' → logprob: -9.612125396728516

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010288605466485023
    2. '(lambda' → logprob: -4.760288715362549
    3. ' (' → logprob: -7.385288715362549
    4. ',' → logprob: -7.885288715362549
    5. 'def' → logprob: -8.13528823852539
    6. '.' → logprob: -8.76028823852539
    7. '```' → logprob: -10.13528823852539
    8. '(
' → logprob: -10.51028823852539
    9. 'lambda' → logprob: -10.63528823852539
    10. 'a' → logprob: -10.76028823852539

Token 5: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016088567674160004
    2. '(lambda' → logprob: -4.391088485717773
    3. 'def' → logprob: -6.141088485717773
    4. ',' → logprob: -7.391088485717773
    5. '(
' → logprob: -8.391088485717773
    6. '.' → logprob: -9.016088485717773
    7. '\' → logprob: -9.266088485717773
    8. '```' → logprob: -9.641088485717773
    9. 'd' → logprob: -10.016088485717773
    10. '\(' → logprob: -10.391088485717773

Token 6: ' is' (ID: 382)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6618690490722656
    2. ' reduce' → logprob: -0.9118690490722656
    3. ' factorial' → logprob: -3.6618690490722656
    4. ' sum' → logprob: -4.411869049072266
    5. ' calculate' → logprob: -4.411869049072266
    6. ' add' → logprob: -4.411869049072266
    7. ' map' → logprob: -4.786869049072266
    8. ' space' → logprob: -6.161869049072266
    9. ' compute' → logprob: -6.911869049072266
    10. ' process' → logprob: -6.911869049072266

Token 7: '_base' (ID: 17096)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6391183137893677
    2. ' _' → logprob: -1.2641183137893677
    3. ' ' → logprob: -2.764118194580078
    4. '_prime' → logprob: -2.764118194580078
    5. '_pal' → logprob: -3.389118194580078
    6. 's' → logprob: -4.264118194580078
    7. '_s' → logprob: -5.764118194580078
    8. '_space' → logprob: -6.389118194580078
    9. ' space' → logprob: -6.639118194580078
    10. 'space' → logprob: -7.014118194580078

Token 8: '(ch' (ID: 15574)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07070589810609818
    2. '_n' → logprob: -3.1957058906555176
    3. '_case' → logprob: -4.945705890655518
    4. ' _' → logprob: -5.570705890655518
    5. '_x' → logprob: -5.695705890655518
    6. ' ' → logprob: -5.945705890655518
    7. '64' → logprob: -6.320705890655518
    8. 'case' → logprob: -6.570705890655518
    9. '_string' → logprob: -6.570705890655518
    10. 'n' → logprob: -6.820705890655518

Token 9: '):
' (ID: 1883)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.38800373673439026
    2. 'r' → logprob: -1.5130037069320679
    3. 'x' → logprob: -3.3880038261413574
    4. '):' → logprob: -3.6380038261413574
    5. 'd' → logprob: -4.138003826141357
    6. 'n' → logprob: -5.138003826141357
    7. 's' → logprob: -5.388003826141357
    8. ')' → logprob: -5.388003826141357
    9. 'm' → logprob: -5.763003826141357
    10. 'c' → logprob: -6.013003826141357

Token 10: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019228467717766762
    2. ' return' → logprob: -4.019228458404541
    3. 'return' → logprob: -7.269228458404541
    4. ':' → logprob: -9.2692289352417
    5. ' ' → logprob: -9.2692289352417
    6. '  ' → logprob: -9.8942289352417
    7. ''' → logprob: -10.3942289352417
    8. ':return' → logprob: -10.7692289352417
    9. '    ' → logprob: -10.8942289352417
    10. ''s' → logprob: -11.1442289352417

Token 11: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.21928197145462036
    2. '   ' → logprob: -1.8442819118499756
    3. 'return' (adapté à ' return') → logprob: -3.7192819118499756
    4. ' ch' → logprob: -4.469282150268555
    5. 'ch' → logprob: -6.344282150268555
    6. ' ' → logprob: -7.094282150268555
    7. ' if' → logprob: -8.969282150268555
    8. '  ' → logprob: -9.219282150268555
    9. '    ' → logprob: -9.219282150268555
    10. '    
' → logprob: -10.844282150268555

Token 12: ' ch' (ID: 549)
  Prédit: ' ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.01606111414730549
    2. 'ch' → logprob: -4.141061305999756
    3. ' ' → logprob: -11.016060829162598
    4. '(ch' → logprob: -12.266060829162598
    5. ' ' → logprob: -13.016060829162598
    6. '	ch' → logprob: -13.766060829162598
    7. ' (' → logprob: -14.641060829162598
    8. '  ' → logprob: -14.891060829162598
    9. ' True' → logprob: -15.266060829162598
    10. '   ' → logprob: -15.328560829162598

Token 13: ' ==' (ID: 951)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02079668454825878
    2. 'in' → logprob: -3.895796775817871
    3. ' ' → logprob: -9.145796775817871
    4. '.' → logprob: -10.020796775817871
    5. ' .' → logprob: -10.520796775817871
    6. '  ' → logprob: -11.270796775817871
    7. '.is' → logprob: -11.395796775817871
    8. '.upper' → logprob: -11.395796775817871
    9. '.lower' → logprob: -11.770796775817871
    10. '   ' → logprob: -12.020796775817871

Token 14: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.06818995624780655
    2. ''A' → logprob: -2.943189859390259
    3. ''' → logprob: -4.443190097808838
    4. ''T' → logprob: -6.818190097808838
    5. ''C' → logprob: -8.56818962097168
    6. '"A' → logprob: -9.31818962097168
    7. 'A' → logprob: -10.69318962097168
    8. ' "' → logprob: -11.06818962097168
    9. ' A' → logprob: -11.31818962097168
    10. ''t' → logprob: -11.69318962097168

Token 15: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0028521865606307983
    2. 'C' → logprob: -6.377851963043213
    3. 'G' → logprob: -7.127851963043213
    4. 'T' → logprob: -8.752852439880371
    5. 'a' → logprob: -9.502852439880371
    6. ''A' → logprob: -10.377852439880371
    7. '>' → logprob: -10.627852439880371
    8. ' A' → logprob: -11.627852439880371
    9. 'AT' → logprob: -11.627852439880371
    10. ''' → logprob: -12.002852439880371

Token 16: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0014184460742399096
    2. 'T' → logprob: -7.376418590545654
    3. ' or' → logprob: -8.376418113708496
    4. ''or' → logprob: -8.751418113708496
    5. ''C' → logprob: -9.251418113708496
    6. ' '' → logprob: -9.251418113708496
    7. 'C' → logprob: -9.751418113708496
    8. 'or' → logprob: -10.126418113708496
    9. ''T' → logprob: -10.376418113708496
    10. 'G' → logprob: -10.501418113708496

Token 17: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.010369546711444855
    2. 'or' → logprob: -4.760369777679443
    3. ' ' → logprob: -6.510369777679443
    4. ' C' → logprob: -9.260369300842285
    5. '  ' → logprob: -9.885369300842285
    6. 'T' → logprob: -10.385369300842285
    7. 'C' → logprob: -10.385369300842285
    8. ' T' → logprob: -11.385369300842285
    9. 'G' → logprob: -11.760369300842285
    10. '   ' → logprob: -12.010369300842285

Token 18: ' ch' (ID: 549)
  Prédit: ' ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.04862041026353836
    2. 'ch' → logprob: -3.0486204624176025
    3. '	ch' → logprob: -10.423620223999023
    4. '(ch' → logprob: -13.423620223999023
    5. '   ' → logprob: -14.798620223999023
    6. '<|end|>' → logprob: -14.923620223999023
    7. '[ch' → logprob: -15.048620223999023
    8. '_ch' → logprob: -15.798620223999023
    9. ',ch' → logprob: -16.048620223999023
    10. ' ' → logprob: -16.048620223999023

Token 19: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.390744149684906
    2. ' ==' → logprob: -1.1407442092895508
    3. '=='' → logprob: -5.640744209289551
    4. ' =='' → logprob: -8.89074420928955
    5. '=' → logprob: -9.14074420928955
    6. '  ' → logprob: -11.64074420928955
    7. ' ' → logprob: -11.89074420928955
    8. ''' → logprob: -11.89074420928955
    9. ''s' → logprob: -11.89074420928955
    10. 's' → logprob: -12.01574420928955

Token 20: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.3584711253643036
    2. ''' → logprob: -1.733471155166626
    3. ''T' → logprob: -2.233471155166626
    4. ' T' → logprob: -4.233470916748047
    5. ' ' → logprob: -6.983470916748047
    6. 'T' → logprob: -7.233470916748047
    7. ''C' → logprob: -7.233470916748047
    8. ''t' → logprob: -8.233470916748047
    9. '"T' → logprob: -9.983470916748047
    10. '  ' → logprob: -10.108470916748047

Token 21: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.03439141809940338
    2. 'C' → logprob: -3.784391403198242
    3. 'G' → logprob: -4.534391403198242
    4. 'a' → logprob: -9.034391403198242
    5. ''' → logprob: -9.409391403198242
    6. 'B' → logprob: -9.784391403198242
    7. 'U' → logprob: -10.034391403198242
    8. 'Z' → logprob: -11.534391403198242
    9. ' T' → logprob: -12.034391403198242
    10. ''T' → logprob: -12.034391403198242

Token 22: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00010926496179308742
    2. ''or' → logprob: -10.000109672546387
    3. 'or' → logprob: -10.500109672546387
    4. ' or' → logprob: -11.125109672546387
    5. '')' → logprob: -11.125109672546387
    6. ''''' → logprob: -12.625109672546387
    7. ''s' → logprob: -14.125109672546387
    8. '"' → logprob: -14.500109672546387
    9. '<|end|>' → logprob: -14.750109672546387
    10. ''A' → logprob: -14.750109672546387

Token 23: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.02362138405442238
    2. 'or' → logprob: -3.7736213207244873
    3. ''' → logprob: -8.773621559143066
    4. ' ' → logprob: -9.398621559143066
    5. '	or' → logprob: -10.023621559143066
    6. ''or' → logprob: -10.398621559143066
    7. '  ' → logprob: -11.023621559143066
    8. '   ' → logprob: -11.273621559143066
    9. 'def' → logprob: -11.773621559143066
    10. '```' → logprob: -12.273621559143066

Token 24: ' ch' (ID: 549)
  Prédit: ' ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.009808151982724667
    2. 'ch' → logprob: -4.63480806350708
    3. ''' → logprob: -10.259808540344238
    4. '(ch' → logprob: -12.509808540344238
    5. ''ch' → logprob: -12.509808540344238
    6. '	ch' → logprob: -12.634808540344238
    7. ' ' → logprob: -13.009808540344238
    8. ' ' → logprob: -13.509808540344238
    9. '`' → logprob: -14.634808540344238
    10. '"' → logprob: -14.759808540344238

Token 25: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2532370686531067
    2. '==' → logprob: -1.503237009048462
    3. '=='' → logprob: -6.878237247467041
    4. ''' → logprob: -8.628236770629883
    5. ' =='' → logprob: -10.003236770629883
    6. '=' → logprob: -10.503236770629883
    7. '===' → logprob: -12.128236770629883
    8. ' '' → logprob: -12.253236770629883
    9. ' =' → logprob: -12.503236770629883
    10. '  ' → logprob: -13.128236770629883

Token 26: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.40113770961761475
    2. ''' → logprob: -1.1511377096176147
    3. ''C' → logprob: -4.276137828826904
    4. ''GC' → logprob: -8.776137351989746
    5. ' ' → logprob: -9.776137351989746
    6. ''g' → logprob: -11.151137351989746
    7. ' G' → logprob: -12.026137351989746
    8. '('' → logprob: -12.026137351989746
    9. ' ' → logprob: -12.401137351989746
    10. '"' → logprob: -12.526137351989746

Token 27: 'C' (ID: 34)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.20151099562644958
    2. 'C' → logprob: -1.701511025428772
    3. ''' → logprob: -9.70151138305664
    4. ''C' → logprob: -11.45151138305664
    5. '')' → logprob: -12.07651138305664
    6. 'U' → logprob: -12.70151138305664
    7. ')' → logprob: -12.70151138305664
    8. 'CG' → logprob: -12.95151138305664
    9. ' G' → logprob: -13.32651138305664
    10. 'T' → logprob: -13.32651138305664

Token 28: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0003277176001574844
    2. 'G' → logprob: -8.250328063964844
    3. ''''' → logprob: -10.750328063964844
    4. ' or' → logprob: -10.875328063964844
    5. ''or' → logprob: -11.500328063964844
    6. '')' → logprob: -12.000328063964844
    7. '```' → logprob: -12.500328063964844
    8. 'or' → logprob: -12.750328063964844
    9. ' '' → logprob: -13.750328063964844
    10. '''' → logprob: -13.875328063964844

Token 29: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.002329267328605056
    2. 'or' → logprob: -6.127329349517822
    3. ' ' → logprob: -9.877328872680664
    4. ''' → logprob: -10.377328872680664
    5. ''or' → logprob: -10.752328872680664
    6. '	or' → logprob: -11.002328872680664
    7. '<|end|>' → logprob: -12.127328872680664
    8. '```' → logprob: -12.127328872680664
    9. '  ' → logprob: -13.002328872680664
    10. '   ' → logprob: -13.002328872680664

Token 30: ' ch' (ID: 549)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02636498026549816
    2. ' '' → logprob: -3.776365041732788
    3. ' G' → logprob: -5.901364803314209
    4. 'G' → logprob: -8.776365280151367
    5. ' ' → logprob: -9.526365280151367
    6. ''GC' → logprob: -10.151365280151367
    7. ' ' → logprob: -10.651365280151367
    8. '`' → logprob: -10.776365280151367
    9. '"' → logprob: -10.901365280151367
    10. ''g' → logprob: -11.151365280151367

Token 31: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3492271304130554
    2. ' ==' → logprob: -1.2242271900177002
    3. '=='' → logprob: -7.724226951599121
    4. '=' → logprob: -8.849226951599121
    5. '===' → logprob: -9.599226951599121
    6. ''' → logprob: -9.599226951599121
    7. ' =='' → logprob: -10.724226951599121
    8. '  ' → logprob: -11.474226951599121
    9. ' ' → logprob: -12.474226951599121
    10. ' ' → logprob: -12.599226951599121

Token 32: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.06258149445056915
    2. ' '' → logprob: -2.8125815391540527
    3. ' G' → logprob: -8.062581062316895
    4. 'G' → logprob: -9.062581062316895
    5. ' ' → logprob: -9.187581062316895
    6. ''GC' → logprob: -10.062581062316895
    7. ' ' → logprob: -11.062581062316895
    8. ''g' → logprob: -11.687581062316895
    9. '"G' → logprob: -12.687581062316895
    10. '  ' → logprob: -13.187581062316895

Token 33: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.0036775132175534964
    2. ''' → logprob: -5.6286773681640625
    3. '```' → logprob: -10.878677368164062
    4. '')' → logprob: -11.378677368164062
    5. '''' → logprob: -11.753677368164062
    6. ''''' → logprob: -11.816177368164062
    7. '`' → logprob: -12.503677368164062
    8. ' G' → logprob: -12.941177368164062
    9. '
' → logprob: -13.066177368164062
    10. 'C' → logprob: -13.128677368164062

Token 34: ''

' (ID: 7497)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -6.73052782076411e-05
    2. '')' → logprob: -9.625067710876465
    3. ')' → logprob: -14.375067710876465
    4. '"' → logprob: -15.500067710876465
    5. ' '' → logprob: -15.750067710876465
    6. ''''' → logprob: -15.750067710876465
    7. ')'' → logprob: -16.25006675720215
    8. '('' → logprob: -17.87506675720215
    9. ''or' → logprob: -17.87506675720215
    10. ''
' → logprob: -17.87506675720215

Token 35: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0013808291405439377
    2. '\' → logprob: -7.376380920410156
    3. '
' → logprob: -8.501380920410156
    4. ' def' → logprob: -8.751380920410156
    5. 'd' → logprob: -9.251380920410156
    6. '_' → logprob: -9.251380920410156
    7. '

' → logprob: -10.001380920410156
    8. '#' → logprob: -10.626380920410156
    9. ':' → logprob: -10.876380920410156
    10. ',' → logprob: -11.126380920410156

Token 36: ' indices' (ID: 30378)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.39086151123046875
    2. ' count' → logprob: -1.7658615112304688
    3. ' dna' → logprob: -2.8908615112304688
    4. ' reverse' → logprob: -4.265861511230469
    5. ' nucleotide' → logprob: -4.265861511230469
    6. ' reduce' → logprob: -4.515861511230469
    7. ' get' → logprob: -4.640861511230469
    8. ' valid' → logprob: -4.765861511230469
    9. ' base' → logprob: -4.890861511230469
    10. ' check' → logprob: -6.140861511230469

Token 37: '(seq' (ID: 78669)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005090375896543264
    2. '_' → logprob: -6.130090236663818
    3. '<|end|>' → logprob: -6.130090236663818
    4. '<|end|>' → logprob: -8.630090713500977
    5. '("("' → logprob: -9.005090713500977
    6. 's' → logprob: -9.630090713500977
    7. '_of' → logprob: -9.755090713500977
    8. '```' → logprob: -9.880090713500977
    9. '('' → logprob: -10.255090713500977
    10. ' (' → logprob: -10.380090713500977

Token 38: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03403395414352417
    2. '):' → logprob: -3.409034013748169
    3. ')' → logprob: -8.03403377532959
    4. ' ,' → logprob: -10.53403377532959
    5. '[' → logprob: -11.15903377532959
    6. ':' → logprob: -12.15903377532959
    7. ' ):' → logprob: -13.03403377532959
    8. '):
' → logprob: -13.28403377532959
    9. '[]):' → logprob: -13.90903377532959
    10. ',s' → logprob: -14.03403377532959

Token 39: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6444721817970276
    2. '[]' → logprob: -1.2694721221923828
    3. '   ' → logprob: -2.519472122192383
    4. '[:]' → logprob: -3.144472122192383
    5. '(' → logprob: -3.769472122192383
    6. ' [' → logprob: -4.394472122192383
    7. ' []' → logprob: -5.144472122192383
    8. '[i' → logprob: -5.144472122192383
    9. ':' → logprob: -5.519472122192383
    10. ' ' → logprob: -5.519472122192383

Token 40: ' for' (ID: 395)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.06306031346321106
    2. 'return' → logprob: -3.5630602836608887
    3. ' [' → logprob: -3.9380602836608887
    4. '[' → logprob: -4.938060283660889
    5. '   ' → logprob: -6.563060283660889
    6. ' ' → logprob: -6.688060283660889
    7. ' []' → logprob: -6.938060283660889
    8. '```' → logprob: -7.188060283660889
    9. '[]' → logprob: -7.938060283660889
    10. ' [
' → logprob: -8.063060760498047

Token 41: ' idx' (ID: 14016)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2036563754081726
    2. ' ' → logprob: -1.7036564350128174
    3. ' _' → logprob: -6.453656196594238
    4. ' idx' → logprob: -7.953656196594238
    5. 'i' → logprob: -8.703656196594238
    6. ' index' → logprob: -9.703656196594238
    7. '_' → logprob: -10.203656196594238
    8. ' ' → logprob: -11.203656196594238
    9. ' c' → logprob: -11.578656196594238
    10. '  ' → logprob: -11.703656196594238

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013309870846569538
    2. ' ,' → logprob: -5.263309955596924
    3. ' in' → logprob: -5.263309955596924
    4. 'in' → logprob: -5.888309955596924
    5. ' ' → logprob: -10.013309478759766
    6. ',in' → logprob: -10.888309478759766
    7. '```' → logprob: -12.513309478759766
    8. 's' → logprob: -12.638309478759766
    9. '‌,' → logprob: -12.888309478759766
    10. '_,' → logprob: -13.013309478759766

Token 43: ' x' (ID: 1215)
  Prédit: ' ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.036240991204977036
    2. 'ch' → logprob: -3.411241054534912
    3. ' char' → logprob: -7.161241054534912
    4. ' base' → logprob: -7.536241054534912
    5. ' nucleotide' → logprob: -7.786241054534912
    6. ' item' → logprob: -8.411240577697754
    7. ' val' → logprob: -8.911240577697754
    8. ' element' → logprob: -8.911240577697754
    9. ' value' → logprob: -9.536240577697754
    10. ' elem' → logprob: -9.661240577697754

Token 44: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018211636692285538
    2. 'in' → logprob: -4.018211841583252
    3. ',' → logprob: -10.018211364746094
    4. ' ' → logprob: -11.393211364746094
    5. '	in' → logprob: -13.768211364746094
    6. '```' → logprob: -14.455711364746094
    7. '<|end|>' → logprob: -14.768211364746094
    8. 's' → logprob: -14.893211364746094
    9. '  ' → logprob: -15.268211364746094
    10. 'n' → logprob: -15.330711364746094

Token 45: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.03806249052286148
    2. 'enumer' → logprob: -3.288062572479248
    3. '```' → logprob: -11.28806209564209
    4. '(en' → logprob: -12.41306209564209
    5. 'en' → logprob: -13.16306209564209
    6. 'umer' → logprob: -14.91306209564209
    7. 'seq' → logprob: -15.16306209564209
    8. '`' → logprob: -15.66306209564209
    9. '.enumer' → logprob: -15.66306209564209
    10. 's' → logprob: -15.78806209564209

Token 46: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.0001246348983841017
    2. '(' → logprob: -9.62512493133545
    3. '(sequence' → logprob: -9.75012493133545
    4. '(se' → logprob: -16.750123977661133
    5. 'seq' → logprob: -16.875123977661133
    6. '(s' → logprob: -17.875123977661133
    7. ' (' → logprob: -17.875123977661133
    8. '(ss' → logprob: -19.000123977661133
    9. '(
' → logprob: -19.250123977661133
    10. ' seq' → logprob: -19.375123977661133

Token 47: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003505042055621743
    2. ' ):' → logprob: -5.753505229949951
    3. '):
' → logprob: -8.253504753112793
    4. ' if' → logprob: -10.503504753112793
    5. '():' → logprob: -11.253504753112793
    6. ')' → logprob: -11.378504753112793
    7. ':' → logprob: -11.628504753112793
    8. ',' → logprob: -13.128504753112793
    9. 'if' → logprob: -13.128504753112793
    10. '   ' → logprob: -14.378504753112793

Token 48: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019187305122613907
    2. ' if' → logprob: -4.3941874504089355
    3. ':' → logprob: -6.0191874504089355
    4. ' ' → logprob: -6.6441874504089355
    5. '        
' → logprob: -7.5191874504089355
    6. '<|end|>' → logprob: -7.5191874504089355
    7. '    ' → logprob: -7.7691874504089355
    8. '        ' → logprob: -7.8941874504089355
    9. 'if' → logprob: -8.144186973571777
    10. '   ' → logprob: -8.769186973571777

Token 49: ' yield' (ID: 14376)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.023347150534391403
    2. '       ' → logprob: -5.0233473777771
    3. ' yield' → logprob: -5.1483473777771
    4. 'if' → logprob: -5.2733473777771
    5. '        ' → logprob: -5.8983473777771
    6. ' ' → logprob: -6.6483473777771
    7. '    ' → logprob: -7.2733473777771
    8. 'yield' (adapté à ' yield') → logprob: -8.273346900939941
    9. '<|end|>' → logprob: -8.398346900939941
    10. '   ' → logprob: -8.648346900939941

Token 50: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.31339696049690247
    2. 'idx' → logprob: -1.31339693069458
    3. '(idx' → logprob: -9.313397407531738
    4. '	idx' → logprob: -10.313397407531738
    5. '0' → logprob: -12.313397407531738
    6. '   ' → logprob: -13.188397407531738
    7. ' ' → logprob: -13.688397407531738
    8. '[idx' → logprob: -14.063397407531738
    9. ' (' → logprob: -14.313397407531738
    10. '_idx' → logprob: -14.563397407531738

Token 51: ',' (ID: 11)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.36036235094070435
    2. '<|end|>' → logprob: -1.6103622913360596
    3. 'if' → logprob: -2.9853622913360596
    4. ' ' → logprob: -3.4853622913360596
    5. ',' → logprob: -4.985362529754639
    6. '   ' → logprob: -5.485362529754639
    7. '       ' → logprob: -5.735362529754639
    8. '	if' → logprob: -6.110362529754639
    9. '<|end|>' → logprob: -6.610362529754639
    10. '    ' → logprob: -6.860362529754639

Token 52: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0548846572637558
    2. ' x' → logprob: -2.929884672164917
    3. '<|end|>' → logprob: -14.304884910583496
    4. ' ' → logprob: -14.804884910583496
    5. '	x' → logprob: -15.179884910583496
    6. 'ch' → logprob: -15.804884910583496
    7. '(x' → logprob: -15.929884910583496
    8. '   ' → logprob: -16.05488395690918
    9. 'is' → logprob: -16.30488395690918
    10. 's' → logprob: -16.42988395690918

Token 53: '

' (ID: 279)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1089967489242554
    2. 'def' → logprob: -1.1089967489242554
    3. '   ' → logprob: -1.8589967489242554
    4. ' 
' → logprob: -3.108996868133545
    5. '
' → logprob: -3.483996868133545
    6. '\' → logprob: -4.108996868133545
    7. '    
' → logprob: -4.233996868133545
    8. '<|end|>' → logprob: -4.233996868133545
    9. ' 

' → logprob: -4.483996868133545
    10. '  
' → logprob: -4.858996868133545

Token 54: 's' (ID: 82)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0025962304789572954
    2. '
' → logprob: -6.502596378326416
    3. 'd' → logprob: -7.502596378326416
    4. '

' → logprob: -8.877595901489258
    5. '_' → logprob: -9.127595901489258
    6. '\' → logprob: -9.752595901489258
    7. ' def' → logprob: -10.377595901489258
    8. '```' → logprob: -10.502595901489258
    9. ' 
' → logprob: -10.877595901489258
    10. '#' → logprob: -10.877595901489258

Token 55: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2702387571334839
    2. 'q' → logprob: -2.2702388763427734
    3. '[' → logprob: -3.5202388763427734
    4. 'u' → logprob: -3.7702388763427734
    5. 't' → logprob: -4.395238876342773
    6. ' =' → logprob: -4.520238876342773
    7. '=' → logprob: -4.520238876342773
    8. ')' → logprob: -5.020238876342773
    9. 'a' → logprob: -5.145238876342773
    10. '.' → logprob: -5.270238876342773

Token 56: ' list' (ID: 1562)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6610826253890991
    2. ' "' → logprob: -0.9110826253890991
    3. '"AT' → logprob: -2.9110827445983887
    4. ''' → logprob: -4.161082744598389
    5. ' '' → logprob: -5.161082744598389
    6. '"A' → logprob: -6.411082744598389
    7. 'input' → logprob: -6.536082744598389
    8. ' input' → logprob: -7.036082744598389
    9. '"T' → logprob: -7.661082744598389
    10. '""' → logprob: -8.28608226776123

Token 57: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17455026507377625
    2. '('' → logprob: -1.9245502948760986
    3. '("' → logprob: -4.9245500564575195
    4. '(s' → logprob: -5.1745500564575195
    5. '(input' → logprob: -8.17455005645752
    6. '(range' → logprob: -8.17455005645752
    7. '("("' → logprob: -8.67455005645752
    8. '("""' → logprob: -9.17455005645752
    9. '("")' → logprob: -9.29955005645752
    10. '([' → logprob: -9.54955005645752

Token 58: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.31373900175094604
    2. '()' → logprob: -1.3137390613555908
    3. '(' → logprob: -8.188738822937012
    4. '()))' → logprob: -10.063738822937012
    5. '();)' → logprob: -10.438738822937012
    6. '());' → logprob: -10.688738822937012
    7. ')' → logprob: -11.063738822937012
    8. '()`' → logprob: -11.313738822937012
    9. '().' → logprob: -11.563738822937012
    10. '()]' → logprob: -11.688738822937012

Token 59: 'BASE' (ID: 34439)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1253998279571533
    2. ':' → logprob: -2.0003998279571533
    3. 'for' → logprob: -2.1253998279571533
    4. 'if' → logprob: -2.2503998279571533
    5. '
' → logprob: -3.0003998279571533
    6. ' ' → logprob: -3.1253998279571533
    7. '[' → logprob: -3.2503998279571533
    8. ' if' → logprob: -3.6253998279571533
    9. 'def' → logprob: -3.7503998279571533
    10. '#' → logprob: -4.250399589538574

Token 60: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.003029998391866684
    2. 's' → logprob: -6.128029823303223
    3. '_' → logprob: -8.378029823303223
    4. '_S' → logprob: -8.628029823303223
    5. '_IND' → logprob: -8.753029823303223
    6. '_indices' → logprob: -9.378029823303223
    7. ')' → logprob: -10.378029823303223
    8. ' =' → logprob: -10.878029823303223
    9. '_SET' → logprob: -11.003029823303223
    10. '_IDX' → logprob: -11.128029823303223

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011923193000257015
    2. '=' → logprob: -4.636923313140869
    3. ')' → logprob: -6.761923313140869
    4. 'S' → logprob: -7.511923313140869
    5. '_' → logprob: -9.261922836303711
    6. '  ' → logprob: -9.511922836303711
    7. '   ' → logprob: -9.511922836303711
    8. ' ' → logprob: -10.136922836303711
    9. ' )' → logprob: -10.886922836303711
    10. '_SET' → logprob: -11.011922836303711

Token 62: ' set' (ID: 920)
  Prédit: ' [''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ['' → logprob: -0.5602886080741882
    2. '['' → logprob: -1.060288667678833
    3. ' {'' → logprob: -2.935288667678833
    4. '{'' → logprob: -3.685288667678833
    5. '[' → logprob: -6.685288429260254
    6. ''' → logprob: -7.310288429260254
    7. ' [' → logprob: -7.310288429260254
    8. ' '' → logprob: -7.810288429260254
    9. 'set' → logprob: -7.935288429260254
    10. '["' → logprob: -8.185288429260254

Token 63: '(['' (ID: 14113)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.031909465789795
    2. '({'' → logprob: -1.031909465789795
    3. '(['' → logprob: -1.281909465789795
    4. '(' → logprob: -5.406909465789795
    5. '(('' → logprob: -5.531909465789795
    6. '("' → logprob: -6.781909465789795
    7. '({' → logprob: -9.156909942626953
    8. '([' → logprob: -9.656909942626953
    9. '(["' → logprob: -10.031909942626953
    10. '()' → logprob: -11.031909942626953

Token 64: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0015564014902338386
    2. 'AT' → logprob: -6.501556396484375
    3. 'AC' → logprob: -10.876556396484375
    4. ''A' → logprob: -11.751556396484375
    5. ' A' → logprob: -11.876556396484375
    6. 'ACT' → logprob: -12.251556396484375
    7. ''' → logprob: -13.126556396484375
    8. 'AG' → logprob: -13.314056396484375
    9. 'T' → logprob: -13.814056396484375
    10. 'G' → logprob: -13.814056396484375

Token 65: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0026592432986944914
    2. ''' → logprob: -6.252659320831299
    3. '','' → logprob: -7.752659320831299
    4. ''T' → logprob: -8.50265884399414
    5. 'T' → logprob: -9.75265884399414
    6. ',' → logprob: -10.87765884399414
    7. 'A' → logprob: -11.37765884399414
    8. ''A' → logprob: -12.12765884399414
    9. ' ',' → logprob: -13.87765884399414
    10. '',
' → logprob: -14.00265884399414

Token 66: ' '' (ID: 461)
  Prédit: ''T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''T' → logprob: -0.8658128380775452
    2. ''' → logprob: -1.2408127784729004
    3. 'T' → logprob: -2.1158127784729004
    4. ' T' → logprob: -2.3658127784729004
    5. ' '' → logprob: -2.6158127784729004
    6. ' ' → logprob: -6.1158127784729
    7. ''C' → logprob: -8.615813255310059
    8. ''t' → logprob: -9.115813255310059
    9. '"T' → logprob: -10.615813255310059
    10. ' ' → logprob: -11.240813255310059

Token 67: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.00033320096554234624
    2. 'C' → logprob: -8.250332832336426
    3. ''' → logprob: -10.625332832336426
    4. ' T' → logprob: -10.875332832336426
    5. 'G' → logprob: -11.375332832336426
    6. ''T' → logprob: -11.875332832336426
    7. 'Т' → logprob: -12.875332832336426
    8. ' ' → logprob: -13.125332832336426
    9. 'A' → logprob: -13.875332832336426
    10. '''' → logprob: -14.812832832336426

Token 68: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0017352750292047858
    2. ''C' → logprob: -7.001735210418701
    3. 'C' → logprob: -8.25173568725586
    4. ''' → logprob: -8.25173568725586
    5. '','' → logprob: -8.75173568725586
    6. ',' → logprob: -8.87673568725586
    7. ' ',' → logprob: -13.87673568725586
    8. '",' → logprob: -14.25173568725586
    9. ','' → logprob: -14.62673568725586
    10. ',C' → logprob: -14.75173568725586

Token 69: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.6214360594749451
    2. ''C' → logprob: -1.2464361190795898
    3. ''' → logprob: -1.7464361190795898
    4. ' ' → logprob: -7.37143611907959
    5. ''GC' → logprob: -8.99643611907959
    6. ' C' → logprob: -9.62143611907959
    7. 'C' → logprob: -9.74643611907959
    8. '',' → logprob: -11.99643611907959
    9. ' 
' → logprob: -12.87143611907959
    10. '  ' → logprob: -13.12143611907959

Token 70: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.002061757491901517
    2. ''C' → logprob: -6.62706184387207
    3. 'G' → logprob: -7.25206184387207
    4. ''' → logprob: -11.25206184387207
    5. ' C' → logprob: -11.37706184387207
    6. ' ' → logprob: -15.12706184387207
    7. '')' → logprob: -15.81456184387207
    8. 'c' → logprob: -15.87706184387207
    9. '   ' → logprob: -15.87706184387207
    10. '  ' → logprob: -15.93956184387207

Token 71: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0002978048287332058
    2. ''' → logprob: -8.500297546386719
    3. '','' → logprob: -9.625297546386719
    4. ',' → logprob: -10.750297546386719
    5. 'G' → logprob: -12.375297546386719
    6. '',
' → logprob: -13.875297546386719
    7. ' ',' → logprob: -14.000297546386719
    8. '",' → logprob: -15.250297546386719
    9. ',G' → logprob: -15.625297546386719
    10. ''])' → logprob: -15.750297546386719

Token 72: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5761330723762512
    2. ' '' → logprob: -0.8261330723762512
    3. ''GC' → logprob: -9.451132774353027
    4. ' ' → logprob: -10.076132774353027
    5. ' G' → logprob: -10.201132774353027
    6. 'G' → logprob: -11.701132774353027
    7. ' ' → logprob: -12.451132774353027
    8. '`' → logprob: -12.701132774353027
    9. ''g' → logprob: -12.826132774353027
    10. ' ,' → logprob: -12.826132774353027

Token 73: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.00039492646465077996
    2. ''' → logprob: -8.000394821166992
    3. ' G' → logprob: -10.250394821166992
    4. '```' → logprob: -12.125394821166992
    5. '',' → logprob: -13.000394821166992
    6. '`' → logprob: -13.187894821166992
    7. '']' → logprob: -13.375394821166992
    8. '')' → logprob: -13.375394821166992
    9. ' ' → logprob: -13.562894821166992
    10. '
' → logprob: -13.812894821166992

Token 74: ''])
' (ID: 16733)
  Prédit: ''])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''])' → logprob: -0.00026264708139933646
    2. '])' → logprob: -8.500262260437012
    3. '',' → logprob: -10.625262260437012
    4. ''' → logprob: -11.125262260437012
    5. '']' → logprob: -11.500262260437012
    6. '')' → logprob: -12.125262260437012
    7. '"])' → logprob: -13.375262260437012
    8. ''])
' → logprob: -13.875262260437012
    9. ')' → logprob: -14.250262260437012
    10. '','' → logprob: -14.375262260437012

Token 75: 'l' (ID: 75)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4984563887119293
    2. '<|end|>' → logprob: -2.7484564781188965
    3. 'def' → logprob: -2.8734564781188965
    4. '#' → logprob: -2.8734564781188965
    5. '[' → logprob: -3.2484564781188965
    6. '
' → logprob: -3.4984564781188965
    7. 'n' → logprob: -3.8734564781188965
    8. 's' → logprob: -4.1234564781188965
    9. 'for' → logprob: -4.1234564781188965
    10. ' ' → logprob: -4.4984564781188965

Token 76: ',' (ID: 11)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.7395011186599731
    2. ' =' → logprob: -1.7395011186599731
    3. 'ength' → logprob: -2.1145009994506836
    4. 'ast' → logprob: -2.6145009994506836
    5. '=' → logprob: -2.7395009994506836
    6. 'eft' → logprob: -2.9895009994506836
    7. 'et' → logprob: -5.239500999450684
    8. 'e' → logprob: -5.239500999450684
    9. 'ist' → logprob: -5.489500999450684
    10. '=len' → logprob: -5.489500999450684

Token 77: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4347630441188812
    2. ' r' → logprob: -1.0597630739212036
    3. ' ' → logprob: -6.934762954711914
    4. 'i' → logprob: -7.434762954711914
    5. 'count' → logprob: -7.434762954711914
    6. 's' → logprob: -8.184762954711914
    7. ' count' → logprob: -8.184762954711914
    8. ' =' → logprob: -8.309762954711914
    9. 'n' → logprob: -8.809762954711914
    10. 'idx' → logprob: -8.934762954711914

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3484678268432617
    2. '=' → logprob: -1.2234678268432617
    3. ',' → logprob: -11.348467826843262
    4. ' ' → logprob: -11.973467826843262
    5. '=

' → logprob: -13.723467826843262
    6. '=int' → logprob: -14.473467826843262
    7. ' =
' → logprob: -14.598467826843262
    8. ' ,' → logprob: -15.098467826843262
    9. '  ' → logprob: -15.098467826843262
    10. '<|end|>' → logprob: -15.098467826843262

Token 79: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026319116353988647
    2. ' ' → logprob: -3.6513190269470215
    3. 'len' → logprob: -11.52631950378418
    4. '(' → logprob: -13.02631950378418
    5. '-' → logprob: -13.40131950378418
    6. ' -' → logprob: -13.40131950378418
    7. '1' → logprob: -14.27631950378418
    8. ' len' → logprob: -14.40131950378418
    9. ' (' → logprob: -14.52631950378418
    10. '<|end|>' → logprob: -14.90131950378418

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005818653153255582
    2. ' ' → logprob: -7.500581741333008
    3. 'len' → logprob: -11.750581741333008
    4. ' -' → logprob: -12.125581741333008
    5. '-' → logprob: -12.250581741333008
    6. '2' → logprob: -12.375581741333008
    7. 's' → logprob: -13.000581741333008
    8. ' len' → logprob: -14.500581741333008
    9. ',' → logprob: -14.563081741333008
    10. '<|end|>' → logprob: -14.625581741333008

Token 81: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012144395150244236
    2. ' ,' → logprob: -5.137144565582275
    3. '1' → logprob: -5.387144565582275
    4. '<|end|>' → logprob: -7.012144565582275
    5. ',
' → logprob: -8.512144088745117
    6. ' ' → logprob: -9.262144088745117
    7. '```' → logprob: -9.262144088745117
    8. '0' → logprob: -9.387144088745117
    9. '<|end|>' → logprob: -9.637144088745117
    10. ',None' → logprob: -9.637144088745117

Token 82: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04241230711340904
    2. ' -' → logprob: -3.792412281036377
    3. 'len' → logprob: -4.167412281036377
    4. '0' → logprob: -6.167412281036377
    5. ' len' → logprob: -7.292412281036377
    6. '-l' → logprob: -7.917412281036377
    7. ' ' → logprob: -8.417412757873535
    8. '1' → logprob: -9.667412757873535
    9. '<|end|>' → logprob: -10.667412757873535
    10. '-length' → logprob: -11.792412757873535

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.598092684522271e-05
    2. '2' → logprob: -9.875056266784668
    3. ' ' → logprob: -13.500056266784668
    4. 'len' → logprob: -14.125056266784668
    5. '-' → logprob: -14.687556266784668
    6. 'inf' → logprob: -14.687556266784668
    7. '0' → logprob: -15.250056266784668
    8. '```' → logprob: -15.562556266784668
    9. 's' → logprob: -15.750056266784668
    10. 'l' → logprob: -16.18755531311035

Token 84: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07380404323339462
    2. '<|end|>' → logprob: -3.1988041400909424
    3. ' 
' → logprob: -3.8238041400909424
    4. ' ' → logprob: -6.073803901672363
    5. ',' → logprob: -6.823803901672363
    6. 'for' → logprob: -6.948803901672363
    7. ' for' → logprob: -6.948803901672363
    8. ':' → logprob: -7.073803901672363
    9. '<|end|>' → logprob: -7.198803901672363
    10. '  
' → logprob: -7.198803901672363

Token 85: 'res' (ID: 430)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5947149991989136
    2. ' for' → logprob: -1.3447149991989136
    3. ' ' → logprob: -2.344715118408203
    4. ' 
' → logprob: -3.469715118408203
    5. '<|end|>' → logprob: -3.969715118408203
    6. '
' → logprob: -4.469715118408203
    7. ',' → logprob: -4.719715118408203
    8. '0' → logprob: -4.844715118408203
    9. 'i' → logprob: -5.594715118408203
    10. 'n' → logprob: -6.094715118408203

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.360299676656723
    2. '=' → logprob: -1.2352997064590454
    3. ',' → logprob: -4.485299587249756
    4. ' ' → logprob: -8.610300064086914
    5. 's' → logprob: -8.860300064086914
    6. '_' → logprob: -9.610300064086914
    7. ' ,' → logprob: -11.360300064086914
    8. '=[]' → logprob: -11.360300064086914
    9. '_length' → logprob: -11.485300064086914
    10. ')' → logprob: -11.735300064086914

Token 87: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04683254659175873
    2. ' ' → logprob: -3.17183256149292
    3. '[]' → logprob: -6.04683256149292
    4. '-' → logprob: -6.79683256149292
    5. ' -' → logprob: -8.671832084655762
    6. ' []' → logprob: -9.046832084655762
    7. '1' → logprob: -11.171832084655762
    8. '[' → logprob: -11.421832084655762
    9. '(' → logprob: -12.796832084655762
    10. '[]
' → logprob: -12.796832084655762

Token 88: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01235424168407917
    2. '-' → logprob: -4.887354373931885
    3. ']' → logprob: -5.887354373931885
    4. '(' → logprob: -6.762354373931885
    5. ' ' → logprob: -7.887354373931885
    6. 'len' → logprob: -8.887353897094727
    7. '(-' → logprob: -10.012353897094727
    8. ')' → logprob: -10.387353897094727
    9. '[]' → logprob: -10.387353897094727
    10. '()]' → logprob: -10.512353897094727

Token 89: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.045796316117048264
    2. ',' → logprob: -3.1707963943481445
    3. ' ]' → logprob: -5.9207963943481445
    4. ',
' → logprob: -10.795796394348145
    5. ' ,' → logprob: -10.920796394348145
    6. ')]' → logprob: -11.420796394348145
    7. '0' → logprob: -11.420796394348145
    8. ']
' → logprob: -11.920796394348145
    9. ')' → logprob: -12.045796394348145
    10. ' ' → logprob: -12.170796394348145

Token 90: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04997371509671211
    2. ' ' → logprob: -3.049973726272583
    3. '-' → logprob: -7.424973487854004
    4. 'len' → logprob: -7.674973487854004
    5. ' -' → logprob: -9.174973487854004
    6. ']' → logprob: -9.424973487854004
    7. ' len' → logprob: -9.424973487854004
    8. '1' → logprob: -11.049973487854004
    9. ')' → logprob: -12.237473487854004
    10. ' ' → logprob: -12.424973487854004

Token 91: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.584239938296378e-06
    2. '2' → logprob: -12.625007629394531
    3. '-' → logprob: -13.000007629394531
    4. ' ' → logprob: -14.500007629394531
    5. 'float' → logprob: -15.125007629394531
    6. 'inf' → logprob: -15.625007629394531
    7. '100' → logprob: -16.25000762939453
    8. ')' → logprob: -16.50000762939453
    9. '999' → logprob: -16.68750762939453
    10. '```' → logprob: -17.00000762939453

Token 92: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002295728772878647
    2. ' ]' → logprob: -6.37729549407959
    3. ']
' → logprob: -7.62729549407959
    4. ']

' → logprob: -9.87729549407959
    5. ',' → logprob: -10.37729549407959
    6. ')' → logprob: -11.87729549407959
    7. '}' → logprob: -12.12729549407959
    8. ']
' → logprob: -13.00229549407959
    9. ' ]
' → logprob: -13.12729549407959
    10. '<|end|>' → logprob: -13.75229549407959

Token 93: 'flag' (ID: 17665)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03192887455224991
    2. ' for' → logprob: -3.531928777694702
    3. ')' → logprob: -7.531929016113281
    4. 'def' → logprob: -7.781929016113281
    5. '0' → logprob: -7.906929016113281
    6. '+' → logprob: -8.281929016113281
    7. '<|end|>' → logprob: -8.656929016113281
    8. ',' → logprob: -8.906929016113281
    9. ' ' → logprob: -9.656929016113281
    10. '
' → logprob: -9.656929016113281

Token 94: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06229513883590698
    2. '=' → logprob: -2.8122951984405518
    3. '_' → logprob: -8.312294960021973
    4. ' ' → logprob: -10.062294960021973
    5. ',' → logprob: -10.812294960021973
    6. ':' → logprob: -11.562294960021973
    7. 's' → logprob: -13.062294960021973
    8. '_=' → logprob: -13.812294960021973
    9. '_found' → logprob: -13.937294960021973
    10. ' ,' → logprob: -14.312294960021973

Token 95: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.4327661693096161
    2. ' False' → logprob: -1.0577661991119385
    3. ' True' → logprob: -6.307765960693359
    4. 'True' → logprob: -6.557765960693359
    5. '0' → logprob: -7.182765960693359
    6. ' ' → logprob: -10.43276596069336
    7. 'F' → logprob: -12.18276596069336
    8. '1' → logprob: -12.68276596069336
    9. '-' → logprob: -12.80776596069336
    10. ' F' → logprob: -12.93276596069336

Token 96: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5177174806594849
    2. ' for' → logprob: -1.5177174806594849
    3. '
' → logprob: -1.8927174806594849
    4. '<|end|>' → logprob: -3.5177173614501953
    5. ':' → logprob: -5.892717361450195
    6. ':
' → logprob: -7.267717361450195
    7. '<|end|>' → logprob: -7.517717361450195
    8. '\n' → logprob: -8.642717361450195
    9. ' 
' → logprob: -9.142717361450195
    10. '```' → logprob: -9.892717361450195

Token 97: 'start' (ID: 5236)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20585323870182037
    2. ' for' → logprob: -1.7058532238006592
    3. ':' → logprob: -6.580853462219238
    4. '<|end|>' → logprob: -6.830853462219238
    5. ' ' → logprob: -7.580853462219238
    6. ')' → logprob: -7.830853462219238
    7. '
' → logprob: -8.205853462219238
    8. ',' → logprob: -8.955853462219238
    9. 'while' → logprob: -8.955853462219238
    10. ':
' → logprob: -9.830853462219238

Token 98: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6134362816810608
    2. ' =' → logprob: -0.8634362816810608
    3. ',' → logprob: -3.363436222076416
    4. '_idx' → logprob: -6.488436222076416
    5. '_index' → logprob: -8.613436698913574
    6. '_' → logprob: -8.613436698913574
    7. ' ,' → logprob: -9.238436698913574
    8. ' ' → logprob: -9.363436698913574
    9. 'idx' → logprob: -10.488436698913574
    10. '=index' → logprob: -11.488436698913574

Token 99: ' end' (ID: 1268)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04607842490077019
    2. '-' → logprob: -3.1710784435272217
    3. ' ' → logprob: -5.921078205108643
    4. ' -' → logprob: -7.921078205108643
    5. 'None' → logprob: -11.0460786819458
    6. '<|end|>' → logprob: -12.0460786819458
    7. 's' → logprob: -12.9210786819458
    8. ' None' → logprob: -13.2960786819458
    9. '1' → logprob: -14.4210786819458
    10. '000' → logprob: -14.9210786819458

Token 100: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4310851991176605
    2. '=' → logprob: -1.056085228919983
    3. '<|end|>' → logprob: -6.556085109710693
    4. '0' → logprob: -7.431085109710693
    5. '=False' → logprob: -9.181085586547852
    6. '=-' → logprob: -9.431085586547852
    7. '<|end|>' → logprob: -9.681085586547852
    8. '=None' → logprob: -10.556085586547852
    9. ',' → logprob: -10.556085586547852
    10. ' ' → logprob: -10.681085586547852

Token 101: ' None' (ID: 4662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03697892650961876
    2. ' ' → logprob: -3.4119789600372314
    3. '-' → logprob: -5.911978721618652
    4. ' -' → logprob: -7.411978721618652
    5. 'None' → logprob: -11.661978721618652
    6. ' None' → logprob: -12.661978721618652
    7. 's' → logprob: -13.161978721618652
    8. '  ' → logprob: -14.411978721618652
    9. '<|end|>' → logprob: -14.474478721618652
    10. '   ' → logprob: -14.849478721618652

Token 102: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5136234760284424
    2. ' for' → logprob: -1.5136234760284424
    3. '
' → logprob: -2.2636234760284424
    4. '<|end|>' → logprob: -2.6386234760284424
    5. ':' → logprob: -6.263623237609863
    6. ' 
' → logprob: -6.638623237609863
    7. '<|end|>' → logprob: -6.638623237609863
    8. '\n' → logprob: -8.138623237609863
    9. ' ' → logprob: -8.263623237609863
    10. 'def' → logprob: -8.763623237609863

Token 103: 'idx' (ID: 13196)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008519167313352227
    2. ' for' → logprob: -7.125852108001709
    3. 'i' → logprob: -10.50085163116455
    4. 'n' → logprob: -11.50085163116455
    5. 'length' → logprob: -13.00085163116455
    6. 'while' → logprob: -13.12585163116455
    7. 'def' → logprob: -13.50085163116455
    8. '0' → logprob: -13.62585163116455
    9. 'count' → logprob: -14.12585163116455
    10. 'max' → logprob: -14.37585163116455

Token 104: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06939150393009186
    2. 's' → logprob: -2.9443914890289307
    3. ' =' → logprob: -4.94439172744751
    4. 'for' → logprob: -6.31939172744751
    5. '=' → logprob: -6.56939172744751
    6. 'x' → logprob: -6.69439172744751
    7. ' ,' → logprob: -6.94439172744751
    8. 'ex' → logprob: -7.31939172744751
    9. 'es' → logprob: -7.81939172744751
    10. ' ' → logprob: -8.319391250610352

Token 105: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0025064588990062475
    2. ' ' → logprob: -6.127506256103516
    3. '-' → logprob: -8.127506256103516
    4. ' -' → logprob: -10.752506256103516
    5. '1' → logprob: -12.877506256103516
    6. 's' → logprob: -15.002506256103516
    7. '2' → logprob: -15.252506256103516
    8. 'len' → logprob: -15.627506256103516
    9. '[]' → logprob: -15.752506256103516
    10. '  ' → logprob: -15.752506256103516

Token 106: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000614624354057014
    2. '-' → logprob: -8.000614166259766
    3. ' ' → logprob: -8.250614166259766
    4. ' -' → logprob: -12.000614166259766
    5. '1' → logprob: -12.375614166259766
    6. 'len' → logprob: -12.875614166259766
    7. 'next' → logprob: -13.875614166259766
    8. 's' → logprob: -14.000614166259766
    9. '2' → logprob: -14.563114166259766
    10. '[]' → logprob: -14.688114166259766

Token 107: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.02600102499127388
    2. ' while' → logprob: -3.7760009765625
    3. '<|end|>' → logprob: -6.2760009765625
    4. 'for' → logprob: -7.5260009765625
    5. 'n' → logprob: -8.5260009765625
    6. 'length' → logprob: -10.6510009765625
    7. '<|end|>' → logprob: -10.6510009765625
    8. '
' → logprob: -10.9010009765625
    9. '```' → logprob: -11.4010009765625
    10. 'def' → logprob: -11.6510009765625

Token 109: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.01818728819489479
    2. 'idx' → logprob: -4.018187522888184
    3. ' True' → logprob: -10.893187522888184
    4. 'True' → logprob: -12.018187522888184
    5. '	idx' → logprob: -12.018187522888184
    6. '(idx' → logprob: -12.393187522888184
    7. ' ' → logprob: -13.518187522888184
    8. '_idx' → logprob: -15.393187522888184
    9. ' not' → logprob: -15.768187522888184
    10. 'flag' → logprob: -16.268186569213867

Token 110: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.08148931711912155
    2. '<' → logprob: -2.581489324569702
    3. '<len' → logprob: -5.956489086151123
    4. 'len' → logprob: -12.831489562988281
    5. ' ' → logprob: -13.206489562988281
    6. '<size' → logprob: -13.956489562988281
    7. ' len' → logprob: -14.206489562988281
    8. '<n' → logprob: -14.581489562988281
    9. '<s' → logprob: -15.706489562988281
    10. '<num' → logprob: -16.33148956298828

Token 111: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.20141489803791046
    2. ' len' → logprob: -1.701414942741394
    3. '(len' → logprob: -14.201415061950684
    4. '=len' → logprob: -14.701415061950684
    5. ' ' → logprob: -15.076415061950684
    6. '   ' → logprob: -16.201414108276367
    7. '<len' → logprob: -17.201414108276367
    8. '	len' → logprob: -17.576414108276367
    9. 'length' → logprob: -17.701414108276367
    10. '[len' → logprob: -18.326414108276367

Token 112: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -7.135819760151207e-05
    2. 's' → logprob: -9.87507152557373
    3. '(' → logprob: -11.00007152557373
    4. ' s' → logprob: -13.25007152557373
    5. ' (' → logprob: -13.50007152557373
    6. ')' → logprob: -17.875070571899414
    7. '(
' → logprob: -18.125070571899414
    8. '```' → logprob: -18.500070571899414
    9. ' ' → logprob: -18.875070571899414
    10. '_s' → logprob: -19.125070571899414

Token 113: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07489661872386932
    2. '):
' → logprob: -2.9498965740203857
    3. ')' → logprob: -3.9498965740203857
    4. ' ):' → logprob: -8.449896812438965
    5. ' and' → logprob: -8.824896812438965
    6. 'and' → logprob: -9.074896812438965
    7. ':' → logprob: -9.824896812438965
    8. '):

' → logprob: -11.074896812438965
    9. ' ):
' → logprob: -11.949896812438965
    10. ' )' → logprob: -12.949896812438965

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07315997779369354
    2. ' if' → logprob: -2.69815993309021
    3. '<|end|>' → logprob: -6.823160171508789
    4. '    
' → logprob: -7.198160171508789
    5. ' ' → logprob: -7.448160171508789
    6. 'if' → logprob: -7.948160171508789
    7. ' 
' → logprob: -9.198160171508789
    8. ':' → logprob: -9.698160171508789
    9. '<|end|>' → logprob: -9.698160171508789
    10. '    ' → logprob: -9.948160171508789

Token 115: ' letter' (ID: 10263)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20920653641223907
    2. '   ' → logprob: -1.7092065811157227
    3. 'if' → logprob: -4.959206581115723
    4. ' ' → logprob: -8.209206581115723
    5. '```' → logprob: -8.709206581115723
    6. '    
' → logprob: -9.584206581115723
    7. '    ' → logprob: -9.584206581115723
    8. ' 
' → logprob: -10.459206581115723
    9. 'ch' → logprob: -10.709206581115723
    10. '	if' → logprob: -10.834206581115723

Token 116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42918500304222107
    2. '=' → logprob: -1.0541850328445435
    3. 's' → logprob: -8.054184913635254
    4. ' ' → logprob: -9.429184913635254
    5. ')' → logprob: -10.554184913635254
    6. '=s' → logprob: -10.679184913635254
    7. '   ' → logprob: -11.429184913635254
    8. ' ==' → logprob: -11.429184913635254
    9. '==' → logprob: -12.679184913635254
    10. ']' → logprob: -13.054184913635254

Token 117: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.20141568779945374
    2. 's' → logprob: -1.7014156579971313
    3. ' ' → logprob: -14.451416015625
    4. '	s' → logprob: -14.826416015625
    5. ' ' → logprob: -14.951416015625
    6. '```' → logprob: -15.076416015625
    7. '   ' → logprob: -15.701416015625
    8. '`s' → logprob: -15.951416015625
    9. '_s' → logprob: -16.076416015625
    10. '(s' → logprob: -16.201416015625

Token 118: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -4.60414821645827e-06
    2. '[' → logprob: -12.875004768371582
    3. '[s' → logprob: -13.375004768371582
    4. ' [' → logprob: -15.875004768371582
    5. '```' → logprob: -15.875004768371582
    6. 'idx' → logprob: -16.500003814697266
    7. '[
' → logprob: -17.125003814697266
    8. '[i' → logprob: -17.875003814697266
    9. '   ' → logprob: -18.000003814697266
    10. 's' → logprob: -18.125003814697266

Token 119: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49240100383758545
    2. ']' → logprob: -0.9924010038375854
    3. '])' → logprob: -4.117401123046875
    4. ')
' → logprob: -7.117401123046875
    5. ']
' → logprob: -7.617401123046875
    6. ' )' → logprob: -8.242401123046875
    7. ')]' → logprob: -8.367401123046875
    8. '   ' → logprob: -10.742401123046875
    9. ' ]' → logprob: -10.992401123046875
    10. '[' → logprob: -12.242401123046875

Token 120: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 121: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.35488542914390564
    2. 'if' (adapté à ' if') → logprob: -1.229885458946228
    3. '   ' → logprob: -6.354885578155518
    4. 'idx' → logprob: -6.729885578155518
    5. ' not' → logprob: -6.854885578155518
    6. ' idx' → logprob: -6.979885578155518
    7. '
' → logprob: -7.604885578155518
    8. ' 
' → logprob: -7.979885578155518
    9. 'not' → logprob: -8.60488510131836
    10. '    
' → logprob: -8.72988510131836

Token 122: ' (' (ID: 350)
  Prédit: ' letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' letter' → logprob: -0.24765406548976898
    2. 'letter' → logprob: -1.9976540803909302
    3. ' is' → logprob: -2.8726539611816406
    4. ' not' → logprob: -3.9976539611816406
    5. ' flag' → logprob: -5.622653961181641
    6. 'is' → logprob: -5.747653961181641
    7. 'not' → logprob: -7.122653961181641
    8. 'flag' → logprob: -7.747653961181641
    9. '(letter' → logprob: -8.56015396118164
    10. ' ' → logprob: -8.68515396118164

Token 123: 'letter' (ID: 12793)
  Prédit: 'letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.025990337133407593
    2. ' letter' → logprob: -3.7759902477264404
    3. 'not' → logprob: -6.7759904861450195
    4. 'flag' → logprob: -7.0259904861450195
    5. '(letter' → logprob: -8.52599048614502
    6. 's' → logprob: -8.65099048614502
    7. ' not' → logprob: -9.02599048614502
    8. 'is' → logprob: -9.52599048614502
    9. ' s' → logprob: -9.77599048614502
    10. ' flag' → logprob: -10.65099048614502

Token 124: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2941282093524933
    2. ' not' → logprob: -1.669128179550171
    3. 'in' → logprob: -3.044128179550171
    4. 'not' → logprob: -4.04412841796875
    5. ' ==' → logprob: -7.66912841796875
    6. ' ' → logprob: -8.16912841796875
    7. '==' → logprob: -8.29412841796875
    8. ')' → logprob: -8.91912841796875
    9. ' !=' → logprob: -10.66912841796875
    10. 'is' → logprob: -11.04412841796875

Token 125: ' BASE' (ID: 42998)
  Prédit: 'BASE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BASE' → logprob: -0.2520274817943573
    2. ' BASE' → logprob: -1.5020275115966797
    3. '(BASE' → logprob: -9.62702751159668
    4. ' ' → logprob: -11.00202751159668
    5. '   ' → logprob: -11.50202751159668
    6. ')' → logprob: -13.62702751159668
    7. '  ' → logprob: -13.75202751159668
    8. 'BA' → logprob: -14.25202751159668
    9. '.BASE' → logprob: -14.62702751159668
    10. 's' → logprob: -15.25202751159668

Token 126: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0001495484757469967
    2. ')' → logprob: -9.375149726867676
    3. '):
' → logprob: -10.250149726867676
    4. '):' → logprob: -11.375149726867676
    5. 's' → logprob: -11.625149726867676
    6. 'ES' → logprob: -13.000149726867676
    7. '   ' → logprob: -13.000149726867676
    8. ' S' → logprob: -13.750149726867676
    9. 'BASE' → logprob: -13.750149726867676
    10. ' ' → logprob: -15.125149726867676

Token 127: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8793476819992065
    2. '):' → logprob: -0.8793476819992065
    3. ')' → logprob: -2.004347801208496
    4. ' and' → logprob: -3.504347801208496
    5. 'and' → logprob: -6.129347801208496
    6. '):

' → logprob: -6.629347801208496
    7. ' ):' → logprob: -7.504347801208496
    8. ' ):
' → logprob: -7.629347801208496
    9. ' )' → logprob: -9.004347801208496
    10. ' or' → logprob: -9.254347801208496

Token 128: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11543472856283188
    2. ' and' → logprob: -2.7404346466064453
    3. ':
' → logprob: -3.6154346466064453
    4. ':' → logprob: -4.365434646606445
    5. ' if' → logprob: -6.365434646606445
    6. '):
' → logprob: -6.990434646606445
    7. '   ' → logprob: -7.615434646606445
    8. '
' → logprob: -8.115434646606445
    9. ' or' → logprob: -8.490434646606445
    10. ',' → logprob: -8.490434646606445

Token 129: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0404857397079468
    2. ' if' → logprob: -1.1654857397079468
    3. 'if' (adapté à ' if') → logprob: -1.1654857397079468
    4. '   ' → logprob: -3.9154858589172363
    5. 'start' → logprob: -6.540485858917236
    6. '           ' → logprob: -7.290485858917236
    7. 'l' → logprob: -8.165485382080078
    8. ' ' → logprob: -8.915485382080078
    9. ' l' → logprob: -9.165485382080078
    10. '
' → logprob: -9.665485382080078

Token 130: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.1059809923171997
    2. ' l' → logprob: -1.6059809923171997
    3. ' start' → logprob: -1.9809809923171997
    4. ' flag' → logprob: -1.9809809923171997
    5. 'start' → logprob: -2.60598087310791
    6. 'flag' → logprob: -2.73098087310791
    7. 'l' → logprob: -3.48098087310791
    8. 'not' → logprob: -3.98098087310791
    9. ' ' → logprob: -6.23098087310791
    10. '   ' → logprob: -7.35598087310791

Token 131: ' flag' (ID: 9641)
  Prédit: ' flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.4740865230560303
    2. 'flag' → logprob: -0.9740865230560303
    3. '	flag' → logprob: -12.72408676147461
    4. '(flag' → logprob: -13.22408676147461
    5. ' ' → logprob: -13.34908676147461
    6. '   ' → logprob: -13.47408676147461
    7. 'Flag' → logprob: -13.97408676147461
    8. '_flag' → logprob: -15.09908676147461
    9. '  ' → logprob: -15.47408676147461
    10. '    ' → logprob: -16.09908676147461

Token 132: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38688555359840393
    2. ':
' → logprob: -1.1368855237960815
    3. ':

' → logprob: -12.386885643005371
    4. ' or' → logprob: -12.511885643005371
    5. ' and' → logprob: -13.011885643005371
    6. '):
' → logprob: -13.261885643005371
    7. '       ' → logprob: -14.761885643005371
    8. '   ' → logprob: -15.011885643005371
    9. '):' → logprob: -15.011885643005371
    10. ' :' → logprob: -15.136885643005371

Token 133: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1707867532968521
    2. ':
' → logprob: -2.2957868576049805
    3. ':' → logprob: -3.1707868576049805
    4. ' flag' → logprob: -4.7957868576049805
    5. 'flag' → logprob: -6.2957868576049805
    6. '       ' → logprob: -6.5457868576049805
    7. '
' → logprob: -7.2957868576049805
    8. '            
' → logprob: -8.04578685760498
    9. ',' → logprob: -8.17078685760498
    10. '        
' → logprob: -8.29578685760498

Token 134: ' flag' (ID: 9641)
  Prédit: ' flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flag' → logprob: -1.0219508409500122
    2. 'flag' (adapté à ' flag') → logprob: -1.0219508409500122
    3. 'start' → logprob: -2.0219507217407227
    4. ' start' → logprob: -2.1469507217407227
    5. '           ' → logprob: -3.5219507217407227
    6. ' l' → logprob: -6.771950721740723
    7. 'l' → logprob: -9.021950721740723
    8. '               ' → logprob: -10.146950721740723
    9. ' ' → logprob: -10.396950721740723
    10. '   ' → logprob: -10.646950721740723

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011067629791796207
    2. '=' → logprob: -4.511067867279053
    3. '=True' → logprob: -10.886067390441895
    4. '<|end|>' → logprob: -14.261067390441895
    5. ' ' → logprob: -14.636067390441895
    6. ' =
' → logprob: -17.38606834411621
    7. ',' → logprob: -17.63606834411621
    8. ' True' → logprob: -17.63606834411621
    9. '=False' → logprob: -18.51106834411621
    10. 'True' → logprob: -18.51106834411621

Token 136: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3132617771625519
    2. ' True' → logprob: -1.3132617473602295
    3. '=True' → logprob: -17.313261032104492
    4. '(True' → logprob: -17.438261032104492
    5. '   ' → logprob: -18.313261032104492
    6. 'true' → logprob: -18.813261032104492
    7. '1' → logprob: -19.688261032104492
    8. ' ' → logprob: -19.938261032104492
    9. 'False' → logprob: -21.313261032104492
    10. ' ' → logprob: -21.313261032104492

Token 137: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.007929784245789051
    2. '<|end|>' → logprob: -5.632929801940918
    3. '           ' → logprob: -5.882929801940918
    4. ',' → logprob: -7.382929801940918
    5. '            
' → logprob: -8.132929801940918
    6. '
' → logprob: -8.382929801940918
    7. '  
' → logprob: -8.632929801940918
    8. '<|end|>' → logprob: -9.882929801940918
    9. '    
' → logprob: -10.257929801940918
    10. ' 
' → logprob: -10.632929801940918

Token 138: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16365806758403778
    2. '
' → logprob: -1.9136580228805542
    3. 'start' → logprob: -6.038658142089844
    4. ',' → logprob: -7.288658142089844
    5. ' start' → logprob: -9.413658142089844
    6. '       ' → logprob: -9.413658142089844
    7. ',start' → logprob: -9.913658142089844
    8. '<|end|>' → logprob: -10.038658142089844
    9. '   ' → logprob: -10.913658142089844
    10. '
' → logprob: -11.163658142089844

Token 139: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.030288411304354668
    2. 'l' → logprob: -4.030288219451904
    3. ' start' → logprob: -4.530288219451904
    4. '           ' → logprob: -7.030288219451904
    5. ' l' → logprob: -8.030288696289062
    6. '   ' → logprob: -9.780288696289062
    7. '       ' → logprob: -12.405288696289062
    8. ' ' → logprob: -12.405288696289062
    9. '	start' → logprob: -13.030288696289062
    10. 'idx' → logprob: -13.280288696289062

Token 140: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602521538734436
    2. '=' → logprob: -1.9102520942687988
    3. '<|end|>' → logprob: -10.660252571105957
    4. '=index' → logprob: -13.285252571105957
    5. ' ' → logprob: -13.660252571105957
    6. ')' → logprob: -14.660252571105957
    7. ',' → logprob: -14.785252571105957
    8. '=end' → logprob: -14.910252571105957
    9. '<|end|>' → logprob: -15.285252571105957
    10. 'idx' → logprob: -15.410252571105957

Token 141: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.011049704626202583
    2. ' idx' → logprob: -4.511049747467041
    3. '	idx' → logprob: -13.636049270629883
    4. '_idx' → logprob: -14.886049270629883
    5. '[idx' → logprob: -15.511049270629883
    6. '(idx' → logprob: -15.761049270629883
    7. 'Idx' → logprob: -17.261049270629883
    8. 'index' → logprob: -18.011049270629883
    9. '   ' → logprob: -18.261049270629883
    10. '<|end|>' → logprob: -18.636049270629883

Token 142: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 143: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31226447224617004
    2. '   ' → logprob: -1.5622644424438477
    3. '<|end|>' → logprob: -2.9372644424438477
    4. '<|end|>' → logprob: -5.312264442443848
    5. '           ' → logprob: -8.687264442443848
    6. 'else' → logprob: -9.312264442443848
    7. ' ' → logprob: -9.312264442443848
    8. '
' → logprob: -9.812264442443848
    9. ')' → logprob: -9.937264442443848
    10. ',' → logprob: -11.062264442443848

Token 144: ' end' (ID: 1268)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4476177990436554
    2. 'end' (adapté à ' end') → logprob: -1.572617769241333
    3. '<|end|>' → logprob: -2.447617769241333
    4. 'idx' → logprob: -3.572617769241333
    5. '<|end|>' → logprob: -4.572618007659912
    6. 'r' → logprob: -4.947618007659912
    7. '
' → logprob: -4.947618007659912
    8. ' end' → logprob: -5.947618007659912
    9. '       ' → logprob: -5.947618007659912
    10. 'else' → logprob: -6.822618007659912

Token 145: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20143009722232819
    2. '=' → logprob: -1.701430082321167
    3. '<|end|>' → logprob: -11.201430320739746
    4. ' ' → logprob: -13.076430320739746
    5. '=index' → logprob: -14.951430320739746
    6. '<|end|>' → logprob: -15.201430320739746
    7. '=end' → logprob: -16.20142936706543
    8. ')' → logprob: -16.45142936706543
    9. '   ' → logprob: -16.82642936706543
    10. '  ' → logprob: -17.20142936706543

Token 146: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.16022564470767975
    2. 'idx' → logprob: -1.9102256298065186
    3. '	idx' → logprob: -13.785225868225098
    4. '[idx' → logprob: -15.660225868225098
    5. '(idx' → logprob: -15.660225868225098
    6. ' ' → logprob: -16.53522491455078
    7. '_idx' → logprob: -17.53522491455078
    8. 'Idx' → logprob: -17.53522491455078
    9. '.idx' → logprob: -18.03522491455078
    10. '   ' → logprob: -18.03522491455078

Token 147: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034800104796886444
    2. '
' → logprob: -3.4098000526428223
    3. '    
' → logprob: -7.284800052642822
    4. '<|end|>' → logprob: -8.65980052947998
    5. '       ' → logprob: -8.78480052947998
    6. '        
' → logprob: -10.15980052947998
    7. '  
' → logprob: -10.53480052947998
    8. '
' → logprob: -10.78480052947998
    9. '<|end|>' → logprob: -10.90980052947998
    10. '   
' → logprob: -12.03480052947998

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006766928127035499
    2. '
' → logprob: -7.75067663192749
    3. '    
' → logprob: -8.875677108764648
    4. 'else' → logprob: -10.250677108764648
    5. 'idx' → logprob: -10.625677108764648
    6. 'elif' → logprob: -10.625677108764648
    7. '        
' → logprob: -11.750677108764648
    8. '  
' → logprob: -12.000677108764648
    9. '       ' → logprob: -12.375677108764648
    10. '
' → logprob: -14.375677108764648

Token 149: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6898566484451294
    2. 'else' (adapté à ' else') → logprob: -0.9398566484451294
    3. ' else' → logprob: -2.31485652923584
    4. 'elif' → logprob: -4.93985652923584
    5. ' elif' → logprob: -6.43985652923584
    6. 'idx' → logprob: -9.31485652923584
    7. '
' → logprob: -11.06485652923584
    8. '	else' → logprob: -11.43985652923584
    9. ' idx' → logprob: -11.68985652923584
    10. '	elif' → logprob: -12.93985652923584

Token 150: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.593518853187561
    2. '       ' → logprob: -0.968518853187561
    3. ':' → logprob: -2.9685187339782715
    4. ' if' → logprob: -4.8435187339782715
    5. '   ' → logprob: -4.9685187339782715
    6. '):
' → logprob: -7.5935187339782715
    7. 'if' → logprob: -7.5935187339782715
    8. ',' → logprob: -8.09351921081543
    9. '
' → logprob: -9.09351921081543
    10. ' :
' → logprob: -9.34351921081543

Token 151: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08176685124635696
    2. '   ' → logprob: -2.9567668437957764
    3. ' if' → logprob: -4.2067670822143555
    4. 'if' → logprob: -4.4567670822143555
    5. '     ' → logprob: -11.831767082214355
    6. '           ' → logprob: -11.956767082214355
    7. '
' → logprob: -12.581767082214355
    8. ',' → logprob: -12.831767082214355
    9. '	if' → logprob: -13.081767082214355
    10. 'If' → logprob: -13.456767082214355

Token 152: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7622071504592896
    2. 'if' (adapté à ' if') → logprob: -1.2622071504592896
    3. ' if' → logprob: -1.6372071504592896
    4. '       ' → logprob: -2.88720703125
    5. ' ' → logprob: -10.13720703125
    6. '	if' → logprob: -10.88720703125
    7. '
' → logprob: -11.76220703125
    8. '  ' → logprob: -12.76220703125
    9. '    ' → logprob: -13.01220703125
    10. '           ' → logprob: -13.26220703125

Token 153: ' flag' (ID: 9641)
  Prédit: ' flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.03835289180278778
    2. 'flag' → logprob: -3.2883529663085938
    3. '(flag' → logprob: -9.163352966308594
    4. '   ' → logprob: -9.538352966308594
    5. ' ' → logprob: -9.913352966308594
    6. '	flag' → logprob: -10.038352966308594
    7. '  ' → logprob: -11.038352966308594
    8. ' not' → logprob: -11.413352966308594
    9. 'Flag' → logprob: -12.538352966308594
    10. '    ' → logprob: -12.913352966308594

Token 154: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47424790263175964
    2. ':
' → logprob: -0.974247932434082
    3. '):
' → logprob: -9.849247932434082
    4. ' and' → logprob: -9.974247932434082
    5. '       ' → logprob: -10.974247932434082
    6. ':

' → logprob: -11.349247932434082
    7. '):' → logprob: -11.349247932434082
    8. '           ' → logprob: -11.474247932434082
    9. '==' → logprob: -11.724247932434082
    10. '   ' → logprob: -12.599247932434082

Token 155: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028584346175193787
    2. '           ' → logprob: -3.6535842418670654
    3. ' if' → logprob: -6.6535844802856445
    4. '   ' → logprob: -8.278584480285645
    5. '```' → logprob: -8.903584480285645
    6. ',' → logprob: -9.028584480285645
    7. ' flag' → logprob: -9.153584480285645
    8. ' length' → logprob: -9.528584480285645
    9. 'if' → logprob: -9.653584480285645
    10. '
' → logprob: -9.778584480285645

Token 156: ' if' (ID: 538)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -1.087449550628662
    2. ' length' → logprob: -1.587449550628662
    3. '       ' → logprob: -1.962449550628662
    4. 'if' (adapté à ' if') → logprob: -2.462449550628662
    5. ' if' → logprob: -2.462449550628662
    6. '           ' → logprob: -2.712449550628662
    7. '   ' → logprob: -2.712449550628662
    8. 'flag' → logprob: -5.837449550628662
    9. ' res' → logprob: -6.087449550628662
    10. 'res' → logprob: -6.337449550628662

Token 157: ' start' (ID: 1604)
  Prédit: ' end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.06499192863702774
    2. 'end' → logprob: -3.4399919509887695
    3. ' (' → logprob: -4.3149919509887695
    4. '(end' → logprob: -4.4399919509887695
    5. '   ' → logprob: -6.0649919509887695
    6. ' res' → logprob: -6.1899919509887695
    7. ' ' → logprob: -7.5649919509887695
    8. '(' → logprob: -8.31499195098877
    9. '  ' → logprob: -9.06499195098877
    10. ' start' → logprob: -9.18999195098877

Token 158: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.9325875639915466
    2. ' !=' → logprob: -1.5575876235961914
    3. '!=' → logprob: -1.8075876235961914
    4. '<=' → logprob: -2.1825876235961914
    5. ' <=' → logprob: -2.3075876235961914
    6. '<|end|>' → logprob: -5.057587623596191
    7. '==' → logprob: -5.432587623596191
    8. ' ==' → logprob: -6.057587623596191
    9. '+' → logprob: -6.807587623596191
    10. ' ' → logprob: -7.057587623596191

Token 159: ' not' (ID: 625)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.24537743628025055
    2. 'not' → logprob: -1.8703774213790894
    3. ' None' → logprob: -3.495377540588379
    4. ' not' → logprob: -3.620377540588379
    5. '0' → logprob: -5.120377540588379
    6. '-' → logprob: -8.495377540588379
    7. ' ' → logprob: -9.745377540588379
    8. 'Not' → logprob: -9.745377540588379
    9. '   ' → logprob: -10.495377540588379
    10. ' -' → logprob: -10.495377540588379

Token 160: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0011846343986690044
    2. ' None' → logprob: -7.251184463500977
    3. 'end' → logprob: -7.751184463500977
    4. '   ' → logprob: -10.626184463500977
    5. '-' → logprob: -12.126184463500977
    6. 'idx' → logprob: -12.501184463500977
    7. '0' → logprob: -12.626184463500977
    8. '       ' → logprob: -13.751184463500977
    9. 'r' → logprob: -14.126184463500977
    10. ' ' → logprob: -14.251184463500977

Token 161: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08813121914863586
    2. 'and' → logprob: -2.8381311893463135
    3. '           ' → logprob: -3.8381311893463135
    4. '               ' → logprob: -5.713131427764893
    5. ':' → logprob: -7.838131427764893
    6. ':
' → logprob: -8.213130950927734
    7. '   ' → logprob: -9.463130950927734
    8. '       ' → logprob: -9.713130950927734
    9. ' ' → logprob: -10.213130950927734
    10. '<|end|>' → logprob: -10.338130950927734

Token 162: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.008709948509931564
    2. ' end' → logprob: -4.758709907531738
    3. '           ' → logprob: -9.883709907531738
    4. '   ' → logprob: -10.508709907531738
    5. ' ' → logprob: -11.883709907531738
    6. '  ' → logprob: -12.633709907531738
    7. '	end' → logprob: -13.508709907531738
    8. '       ' → logprob: -14.008709907531738
    9. '(end' → logprob: -14.133709907531738
    10. '               ' → logprob: -14.133709907531738

Token 163: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.00091050990158692
    2. 'is' → logprob: -7.12591028213501
    3. '>=' → logprob: -10.625910758972168
    4. '-' → logprob: -10.750910758972168
    5. ' -' → logprob: -11.375910758972168
    6. '<|end|>' → logprob: -11.625910758972168
    7. '<|end|>' → logprob: -11.625910758972168
    8. '   ' → logprob: -12.000910758972168
    9. '!=' → logprob: -12.375910758972168
    10. ' ' → logprob: -12.500910758972168

Token 164: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.22548530995845795
    2. ' not' → logprob: -1.6004853248596191
    3. ' ' → logprob: -11.350484848022461
    4. '   ' → logprob: -11.475484848022461
    5. 'Not' → logprob: -11.725484848022461
    6. 'None' → logprob: -11.725484848022461
    7. '       ' → logprob: -12.225484848022461
    8. '
' → logprob: -12.600484848022461
    9. '!' → logprob: -12.600484848022461
    10. '    ' → logprob: -12.725484848022461

Token 165: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0036111166700720787
    2. ' None' → logprob: -5.628611087799072
    3. '   ' → logprob: -13.00361156463623
    4. '           ' → logprob: -13.00361156463623
    5. '       ' → logprob: -13.12861156463623
    6. '=None' → logprob: -13.50361156463623
    7. ' ' → logprob: -14.50361156463623
    8. '_None' → logprob: -14.50361156463623
    9. '(None' → logprob: -14.62861156463623
    10. '-' → logprob: -15.00361156463623

Token 166: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.1124966144561768
    2. ':
' → logprob: -1.1124966144561768
    3. ':' → logprob: -1.6124966144561768
    4. '               ' → logprob: -1.9874966144561768
    5. '):
' → logprob: -6.362496376037598
    6. 'and' → logprob: -6.487496376037598
    7. '           ' → logprob: -6.487496376037598
    8. ',' → logprob: -7.362496376037598
    9. ':

' → logprob: -8.487496376037598
    10. '):' → logprob: -8.987496376037598

Token 167: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35032179951667786
    2. '               ' → logprob: -1.2253217697143555
    3. ' if' → logprob: -7.6003217697143555
    4. ':
' → logprob: -8.225321769714355
    5. 'length' → logprob: -8.475321769714355
    6. 'res' → logprob: -8.600321769714355
    7. ' res' → logprob: -8.975321769714355
    8. ':' → logprob: -9.100321769714355
    9. ' length' → logprob: -9.225321769714355
    10. ',' → logprob: -9.725321769714355

Token 168: ' res' (ID: 694)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.5869091153144836
    2. 'length' → logprob: -0.9619091153144836
    3. '               ' → logprob: -3.211909055709839
    4. ' if' → logprob: -4.711909294128418
    5. '           ' → logprob: -5.586909294128418
    6. 'if' → logprob: -6.211909294128418
    7. ' segment' → logprob: -6.336909294128418
    8. 'segment' → logprob: -6.836909294128418
    9. 'curr' → logprob: -6.961909294128418
    10. ' curr' → logprob: -7.461909294128418

Token 169: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008046258008107543
    2. '=' → logprob: -7.750804424285889
    3. ' =' → logprob: -8.000804901123047
    4. ' [' → logprob: -11.375804901123047
    5. '[
' → logprob: -11.875804901123047
    6. 'max' → logprob: -12.375804901123047
    7. '[max' → logprob: -12.500804901123047
    8. ' ' → logprob: -12.875804901123047
    9. '=[' → logprob: -13.500804901123047
    10. '[:]' → logprob: -14.000804901123047

Token 170: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.38498952984809875
    2. ' max' → logprob: -1.7599895000457764
    3. '[max' → logprob: -2.2599895000457764
    4. '(max' → logprob: -3.3849895000457764
    5. '[' → logprob: -5.5099897384643555
    6. '   ' → logprob: -6.3849897384643555
    7. ' [' → logprob: -6.6349897384643555
    8. '[start' → logprob: -7.0099897384643555
    9. ' (' → logprob: -7.8849897384643555
    10. '[s' → logprob: -8.509989738464355

Token 171: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.00020532844064291567
    2. ' (' → logprob: -9.250205039978027
    3. 'res' → logprob: -10.250205039978027
    4. '([' → logprob: -10.375205039978027
    5. '((' → logprob: -10.500205039978027
    6. '(' → logprob: -12.000205039978027
    7. '   ' → logprob: -12.125205039978027
    8. '[' → logprob: -13.625205039978027
    9. ' res' → logprob: -13.750205039978027
    10. '               ' → logprob: -15.375205039978027

Token 172: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001592822722159326
    2. ' ,' → logprob: -6.626592636108398
    3. '[' → logprob: -8.876592636108398
    4. ',[' → logprob: -10.126592636108398
    5. '   ' → logprob: -10.751592636108398
    6. ',(' → logprob: -10.876592636108398
    7. ',res' → logprob: -11.251592636108398
    8. ',key' → logprob: -11.251592636108398
    9. '               ' → logprob: -12.501592636108398
    10. ' (' → logprob: -12.751592636108398

Token 173: ' [' (ID: 723)
  Prédit: '[end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[end' → logprob: -0.6358082294464111
    2. ' (' → logprob: -1.3858082294464111
    3. '(end' → logprob: -2.010808229446411
    4. ' [' → logprob: -2.760808229446411
    5. '[' → logprob: -4.010807991027832
    6. '(' → logprob: -6.135807991027832
    7. '[(' → logprob: -7.135807991027832
    8. '[start' → logprob: -7.260807991027832
    9. '(key' → logprob: -8.260807991027832
    10. '((' → logprob: -8.385807991027832

Token 174: 'start' (ID: 5236)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0025304758455604315
    2. ' end' → logprob: -6.502530574798584
    3. '(end' → logprob: -7.502530574798584
    4. '   ' → logprob: -7.752530574798584
    5. ' ' → logprob: -11.002530097961426
    6. '(' → logprob: -11.627530097961426
    7. ' (' → logprob: -12.127530097961426
    8. '	end' → logprob: -12.752530097961426
    9. '    ' → logprob: -13.252530097961426
    10. '  ' → logprob: -13.252530097961426

Token 175: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01898275502026081
    2. ',end' → logprob: -4.768982887268066
    3. 'end' → logprob: -5.768982887268066
    4. ' ,' → logprob: -5.768982887268066
    5. ' -' → logprob: -6.643982887268066
    6. '-' → logprob: -6.893982887268066
    7. '   ' → logprob: -7.268982887268066
    8. ' end' → logprob: -8.393982887268066
    9. '-end' → logprob: -8.518982887268066
    10. '+' → logprob: -8.518982887268066

Token 176: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.10034512728452682
    2. ' end' → logprob: -2.3503451347351074
    3. '   ' → logprob: -9.72534465789795
    4. '       ' → logprob: -11.10034465789795
    5. ' ' → logprob: -11.22534465789795
    6. '(end' → logprob: -11.72534465789795
    7. '           ' → logprob: -11.85034465789795
    8. '    ' → logprob: -11.97534465789795
    9. '	end' → logprob: -12.47534465789795
    10. '  ' → logprob: -12.47534465789795

Token 177: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.3192712366580963
    2. '])' → logprob: -1.319271206855774
    3. '])
' → logprob: -5.569271087646484
    4. '           ' → logprob: -7.444271087646484
    5. '               ' → logprob: -7.944271087646484
    6. ']' → logprob: -7.944271087646484
    7. ' ],' → logprob: -8.569271087646484
    8. ' -' → logprob: -8.944271087646484
    9. ' ])' → logprob: -9.194271087646484
    10. '+' → logprob: -9.569271087646484

Token 178: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.014168446883559227
    2. ' key' → logprob: -4.2641682624816895
    3. '   ' → logprob: -12.639168739318848
    4. 'lambda' → logprob: -14.514168739318848
    5. '  ' → logprob: -14.889168739318848
    6. '           ' → logprob: -15.264168739318848
    7. '(key' → logprob: -15.764168739318848
    8. '	key' → logprob: -16.01416778564453
    9. ' ' → logprob: -16.13916778564453
    10. '    ' → logprob: -16.51416778564453

Token 179: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.0004032634024042636
    2. '=' → logprob: -8.00040340423584
    3. 'lambda' → logprob: -10.25040340423584
    4. ' =' → logprob: -10.50040340423584
    5. '   ' → logprob: -12.25040340423584
    6. '=len' → logprob: -17.000402450561523
    7. ' ' → logprob: -17.125402450561523
    8. '=(' → logprob: -17.750402450561523
    9. '  ' → logprob: -17.875402450561523
    10. '1' → logprob: -18.000402450561523

Token 180: ' p' (ID: 275)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.3220330476760864
    2. ' lambda' → logprob: -1.3220330476760864
    3. 'x' → logprob: -4.947032928466797
    4. '=lambda' → logprob: -6.697032928466797
    5. ' x' → logprob: -8.572032928466797
    6. '   ' → logprob: -9.572032928466797
    7. 'ambda' → logprob: -9.822032928466797
    8. 'a' → logprob: -10.447032928466797
    9. ':' → logprob: -10.822032928466797
    10. '(lambda' → logprob: -10.822032928466797

Token 181: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002590992720797658
    2. ':p' → logprob: -6.002591133117676
    3. ' :' → logprob: -9.377591133117676
    4. 'p' → logprob: -10.502591133117676
    5. ':(' → logprob: -13.377591133117676
    6. ':
' → logprob: -13.752591133117676
    7. 'lambda' → logprob: -16.00259017944336
    8. '_:' → logprob: -16.37759017944336
    9. ' p' → logprob: -16.62759017944336
    10. '(p' → logprob: -16.87759017944336

Token 182: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.003923449199646711
    2. 'lambda' → logprob: -6.253923416137695
    3. ' p' → logprob: -6.378923416137695
    4. ' lambda' → logprob: -8.878923416137695
    5. '(lambda' → logprob: -9.753923416137695
    6. '(p' → logprob: -9.878923416137695
    7. '   ' → logprob: -10.378923416137695
    8. ' (' → logprob: -12.003923416137695
    9. '=lambda' → logprob: -13.253923416137695
    10. '	p' → logprob: -13.378923416137695

Token 183: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.44258081912994385
    2. 'p' → logprob: -1.1925808191299438
    3. ':' → logprob: -3.3175806999206543
    4. ' p' → logprob: -5.817580699920654
    5. '1' → logprob: -5.942580699920654
    6. ':p' → logprob: -5.942580699920654
    7. '[p' → logprob: -6.442580699920654
    8. '-' → logprob: -6.692580699920654
    9. '-p' → logprob: -6.942580699920654
    10. '2' → logprob: -6.942580699920654

Token 184: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4153549020411447e-05
    2. '
' → logprob: -12.25002384185791
    3. '   ' → logprob: -12.93752384185791
    4. ' ' → logprob: -13.06252384185791
    5. '[' → logprob: -13.12502384185791
    6. '::-' → logprob: -13.18752384185791
    7. '-' → logprob: -13.43752384185791
    8. ']' → logprob: -13.75002384185791
    9. '```' → logprob: -13.81252384185791
    10. '

' → logprob: -13.81252384185791

Token 185: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.22562943398952484
    2. '-' → logprob: -1.600629448890686
    3. ' ' → logprob: -9.475629806518555
    4. ' p' → logprob: -9.600629806518555
    5. '-p' → logprob: -10.100629806518555
    6. ')' → logprob: -11.725629806518555
    7. 'p' → logprob: -11.850629806518555
    8. '-
' → logprob: -12.475629806518555
    9. '   ' → logprob: -12.600629806518555
    10. '<|end|>' → logprob: -12.850629806518555

Token 186: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6401916742324829
    2. '-' → logprob: -0.7651916742324829
    3. '-p' → logprob: -4.890191555023193
    4. ' ' → logprob: -11.015192031860352
    5. ' p' → logprob: -11.640192031860352
    6. ')' → logprob: -11.640192031860352
    7. '-
' → logprob: -12.890192031860352
    8. '   ' → logprob: -13.140192031860352
    9. 'p' → logprob: -13.390192031860352
    10. '-)' → logprob: -13.765192031860352

Token 187: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.06994565576314926
    2. ' p' → logprob: -2.6949455738067627
    3. '   ' → logprob: -12.819945335388184
    4. ' ' → logprob: -12.944945335388184
    5. '	p' → logprob: -13.819945335388184
    6. '    ' → logprob: -14.069945335388184
    7. '  ' → logprob: -14.444945335388184
    8. '<p' → logprob: -15.319945335388184
    9. '1' → logprob: -15.569945335388184
    10. '
' → logprob: -16.0699462890625

Token 188: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.059608981013298035
    2. '0' → logprob: -3.3096089363098145
    3. 'p' → logprob: -4.5596089363098145
    4. '1' → logprob: -5.3096089363098145
    5. ' p' → logprob: -5.3096089363098145
    6. ' ' → logprob: -7.3096089363098145
    7. '[p' → logprob: -9.184609413146973
    8. 's' → logprob: -9.809609413146973
    9. '   ' → logprob: -10.434609413146973
    10. '_' → logprob: -11.684609413146973

Token 189: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.431207682704553e-05
    2. ' ' → logprob: -10.375054359436035
    3. 'p' → logprob: -11.250054359436035
    4. '1' → logprob: -12.375054359436035
    5. ' p' → logprob: -12.750054359436035
    6. '   ' → logprob: -13.375054359436035
    7. '[' → logprob: -14.125054359436035
    8. '  ' → logprob: -16.37505340576172
    9. '    ' → logprob: -16.87505340576172
    10. '-' → logprob: -17.12505340576172

Token 190: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18912187218666077
    2. '+' → logprob: -2.064121961593628
    3. '])' → logprob: -3.314121961593628
    4. ' )' → logprob: -5.314121723175049
    5. ' +' → logprob: -6.064121723175049
    6. '+)' → logprob: -7.439121723175049
    7. ')
' → logprob: -7.939121723175049
    8. ' ])' → logprob: -8.314122200012207
    9. ')+' → logprob: -8.564122200012207
    10. ']' → logprob: -9.064122200012207

Token 191: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2619127929210663
    2. '           ' → logprob: -2.2619128227233887
    3. '
' → logprob: -2.7619128227233887
    4. '        
' → logprob: -3.1369128227233887
    5. '            
' → logprob: -4.136912822723389
    6. '    
' → logprob: -6.261912822723389
    7. '                
' → logprob: -7.261912822723389
    8. ' 
' → logprob: -7.886912822723389
    9. ')' → logprob: -9.13691234588623
    10. '       
' → logprob: -9.13691234588623

Token 192: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' (adapté à ' flag') → logprob: -0.5309085249900818
    2. '       ' → logprob: -1.1559085845947266
    3. ' flag' → logprob: -2.6559085845947266
    4. '           ' → logprob: -3.6559085845947266
    5. 'start' → logprob: -7.405908584594727
    6. '   ' → logprob: -7.905908584594727
    7. ' start' → logprob: -9.905908584594727
    8. '        
' → logprob: -11.155908584594727
    9. '
' → logprob: -11.280908584594727
    10. '	flag' → logprob: -12.155908584594727

Token 193: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16027478873729706
    2. '=' → logprob: -1.9102747440338135
    3. '=False' → logprob: -9.910274505615234
    4. '=True' → logprob: -14.285274505615234
    5. ' ' → logprob: -15.660274505615234
    6. 'False' → logprob: -16.410274505615234
    7. ' False' → logprob: -16.910274505615234
    8. '<|end|>' → logprob: -17.160274505615234
    9. ')' → logprob: -18.035274505615234
    10. ' =
' → logprob: -18.410274505615234

Token 194: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00020354038861114532
    2. ' False' → logprob: -8.500203132629395
    3. '(False' → logprob: -18.62520408630371
    4. '=False' → logprob: -19.75020408630371
    5. 'false' → logprob: -21.12520408630371
    6. '_false' → logprob: -21.62520408630371
    7. '.False' → logprob: -22.50020408630371
    8. '   ' → logprob: -23.12520408630371
    9. 'True' → logprob: -23.50020408630371
    10. '0' → logprob: -23.87520408630371

Token 195: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10815495997667313
    2. '       ' → logprob: -2.4831550121307373
    3. '           ' → logprob: -4.108154773712158
    4. '
' → logprob: -6.483154773712158
    5. '    
' → logprob: -7.733154773712158
    6. '        
' → logprob: -8.358155250549316
    7. ' idx' → logprob: -8.483155250549316
    8. 'idx' → logprob: -9.108155250549316
    9. '<|end|>' → logprob: -10.483155250549316
    10. ',' → logprob: -11.483155250549316

Token 196: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19859056174755096
    2. '           ' → logprob: -2.1985905170440674
    3. '       ' → logprob: -2.6985905170440674
    4. 'start' → logprob: -7.0735907554626465
    5. '
' → logprob: -7.4485907554626465
    6. 'idx' → logprob: -8.198590278625488
    7. ' start' → logprob: -9.823590278625488
    8. '    
' → logprob: -10.073590278625488
    9. ' idx' → logprob: -10.698590278625488
    10. ',' → logprob: -12.073590278625488

Token 197: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -9.043078898685053e-05
    2. '   ' → logprob: -10.625090599060059
    3. '           ' → logprob: -11.000090599060059
    4. '       ' → logprob: -11.125090599060059
    5. ' start' → logprob: -11.250090599060059
    6. 's' → logprob: -11.250090599060059
    7. 'idx' → logprob: -11.750090599060059
    8. ' ' → logprob: -15.250090599060059
    9. '  ' → logprob: -15.750090599060059
    10. '	start' → logprob: -16.750089645385742

Token 198: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.693181574344635
    2. ' =' → logprob: -0.693181574344635
    3. '=None' → logprob: -10.818181991577148
    4. ',' → logprob: -11.318181991577148
    5. ' ' → logprob: -13.443181991577148
    6. ' None' → logprob: -14.818181991577148
    7. 'None' → logprob: -15.568181991577148
    8. ' ,' → logprob: -17.19318199157715
    9. '<|end|>' → logprob: -17.19318199157715
    10. '=
' → logprob: -17.44318199157715

Token 199: ' end' (ID: 1268)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0036676526069641113
    2. 'end' → logprob: -5.628667831420898
    3. ' None' → logprob: -9.628667831420898
    4. 'none' → logprob: -13.878667831420898
    5. '   ' → logprob: -14.878667831420898
    6. '=None' → logprob: -15.378667831420898
    7. '0' → logprob: -16.8786678314209
    8. '(None' → logprob: -17.0036678314209
    9. ' end' → logprob: -17.1286678314209
    10. '```' → logprob: -17.3786678314209

Token 200: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0024259560741484165
    2. ' =' → logprob: -6.1274261474609375
    3. '=None' → logprob: -9.002426147460938
    4. 'None' → logprob: -9.127426147460938
    5. ' None' → logprob: -11.752426147460938
    6. '=end' → logprob: -14.502426147460938
    7. '           ' → logprob: -14.502426147460938
    8. ' ' → logprob: -16.752426147460938
    9. '(None' → logprob: -16.752426147460938
    10. '=
' → logprob: -17.502426147460938

Token 201: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -6.635164754698053e-05
    2. ' None' → logprob: -9.625066757202148
    3. '   ' → logprob: -16.00006675720215
    4. '(None' → logprob: -17.25006675720215
    5. 'none' → logprob: -17.50006675720215
    6. '=None' → logprob: -18.12506675720215
    7. '  ' → logprob: -18.25006675720215
    8. '_None' → logprob: -18.25006675720215
    9. ' ' → logprob: -19.12506675720215
    10. '-' → logprob: -19.12506675720215

Token 202: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12262088805437088
    2. '
' → logprob: -2.4976208209991455
    3. '    
' → logprob: -3.4976208209991455
    4. '        
' → logprob: -6.997621059417725
    5. 'idx' → logprob: -7.622621059417725
    6. '       ' → logprob: -7.622621059417725
    7. ' idx' → logprob: -8.122620582580566
    8. '            
' → logprob: -8.372620582580566
    9. '<|end|>' → logprob: -8.997620582580566
    10. ' 
' → logprob: -9.372620582580566

Token 203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022014055866748095
    2. 'idx' → logprob: -6.627201557159424
    3. ' idx' → logprob: -7.502201557159424
    4. '
' → logprob: -8.377201080322266
    5. '       ' → logprob: -9.502201080322266
    6. '    
' → logprob: -11.502201080322266
    7. '	idx' → logprob: -12.877201080322266
    8. '           ' → logprob: -13.002201080322266
    9. '  ' → logprob: -13.502201080322266
    10. '        
' → logprob: -14.627201080322266

Token 204: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.10651999711990356
    2. '   ' → logprob: -2.606519937515259
    3. ' idx' → logprob: -3.606519937515259
    4. '	idx' → logprob: -9.98151969909668
    5. '
' → logprob: -10.10651969909668
    6. '    
' → logprob: -11.35651969909668
    7. '[idx' → logprob: -13.35651969909668
    8. '_idx' → logprob: -13.35651969909668
    9. ' ' → logprob: -13.85651969909668
    10. '       ' → logprob: -14.10651969909668

Token 205: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.09021814167499542
    2. '+' → logprob: -2.8402180671691895
    3. ' +=' → logprob: -3.5902180671691895
    4. '=' → logprob: -8.340218544006348
    5. '<|end|>' → logprob: -11.465218544006348
    6. '++' → logprob: -12.965218544006348
    7. '+="' → logprob: -13.090218544006348
    8. '+='' → logprob: -13.215218544006348
    9. ' +' → logprob: -13.340218544006348
    10. ' ' → logprob: -13.465218544006348

Token 206: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -17.75002670288086
    4. '```' → logprob: -17.75002670288086
    5. '  ' → logprob: -19.75002670288086
    6. '+' → logprob: -21.00002670288086
    7. 's' → logprob: -21.37502670288086
    8. '۱' → logprob: -21.50002670288086
    9. ' ' → logprob: -21.50002670288086
    10. '<|end|>' → logprob: -21.56252670288086

Token 207: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '```' → logprob: -16.375009536743164
    4. '   ' → logprob: -18.062509536743164
    5. '  ' → logprob: -19.875009536743164
    6. '１' → logprob: -20.187509536743164
    7. '۱' → logprob: -20.312509536743164
    8. '+' → logprob: -20.437509536743164
    9. '
' → logprob: -20.562509536743164
    10. '...' → logprob: -20.687509536743164

Token 208: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.017190849408507347
    2. '#' → logprob: -4.142190933227539
    3. 'else' → logprob: -7.392190933227539
    4. 'print' → logprob: -8.267190933227539
    5. '
' → logprob: -8.892190933227539
    6. '```' → logprob: -10.267190933227539
    7. 'while' → logprob: -10.517190933227539
    8. ' if' → logprob: -10.642190933227539
    9. 'idx' → logprob: -10.767190933227539
    10. 'res' → logprob: -11.892190933227539

Token 209: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.012533196248114109
    2. '#' → logprob: -4.762533187866211
    3. 'print' → logprob: -5.637533187866211
    4. 'else' → logprob: -8.137533187866211
    5. '```' → logprob: -10.512533187866211
    6. 'res' → logprob: -11.387533187866211
    7. ' if' → logprob: -11.637533187866211
    8. '
' → logprob: -12.762533187866211
    9. 'result' → logprob: -13.637533187866211
    10. '   ' → logprob: -14.137533187866211

Token 210: ' flag' (ID: 9641)
  Prédit: ' flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.002017144113779068
    2. 'flag' → logprob: -6.377017021179199
    3. ' not' → logprob: -8.1270170211792
    4. '(flag' → logprob: -11.3770170211792
    5. ' start' → logprob: -12.3770170211792
    6. '	flag' → logprob: -13.8770170211792
    7. ' ' → logprob: -13.8770170211792
    8. 'not' → logprob: -14.0020170211792
    9. '  ' → logprob: -15.7520170211792
    10. ' len' → logprob: -15.8770170211792

Token 211: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3133862316608429
    2. ':
' → logprob: -1.3133862018585205
    3. '   ' → logprob: -9.313385963439941
    4. ' and' → logprob: -11.313385963439941
    5. '==' → logprob: -11.563385963439941
    6. ':
' → logprob: -12.688385963439941
    7. ':

' → logprob: -13.063385963439941
    8. '>' → logprob: -13.313385963439941
    9. 'and' → logprob: -13.438385963439941
    10. ' :' → logprob: -13.688385963439941

Token 212: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.32953551411628723
    2. '(start' → logprob: -1.3295354843139648
    3. ' start' → logprob: -4.579535484313965
    4. ' (' → logprob: -5.954535484313965
    5. '(end' → logprob: -6.829535484313965
    6. '(s' → logprob: -7.204535484313965
    7. '(True' → logprob: -7.954535484313965
    8. 'end' → logprob: -8.454535484313965
    9. 's' → logprob: -8.704535484313965
    10. '(res' → logprob: -8.954535484313965

Token 213: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.25193214416503906
    2. 'is' → logprob: -1.501932144165039
    3. ' ' → logprob: -14.251932144165039
    4. '>' → logprob: -14.626932144165039
    5. ',' → logprob: -14.751932144165039
    6. ')' → logprob: -15.001932144165039
    7. '!=' → logprob: -15.001932144165039
    8. '   ' → logprob: -15.376932144165039
    9. '	is' → logprob: -15.376932144165039
    10. '[' → logprob: -16.37693214416504

Token 214: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.043069642037153244
    2. ' not' → logprob: -3.16806960105896
    3. 'None' → logprob: -9.793069839477539
    4. '0' → logprob: -12.168069839477539
    5. '   ' → logprob: -12.793069839477539
    6. '```' → logprob: -13.918069839477539
    7. 'end' → logprob: -14.293069839477539
    8. '...' → logprob: -14.418069839477539
    9. '	not' → logprob: -14.543069839477539
    10. '!' → logprob: -14.668069839477539

Token 215: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00043233807082287967
    2. ' None' → logprob: -7.75043249130249
    3. '   ' → logprob: -14.250432014465332
    4. '(None' → logprob: -14.375432014465332
    5. '  ' → logprob: -15.250432014465332
    6. '_None' → logprob: -16.12543296813965
    7. '    ' → logprob: -17.00043296813965
    8. ' ' → logprob: -17.25043296813965
    9. 'none' → logprob: -17.37543296813965
    10. '=None' → logprob: -17.50043296813965

Token 216: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.017002765089273453
    2. 'and' → logprob: -4.142002582550049
    3. '   ' → logprob: -7.142002582550049
    4. ':' → logprob: -9.142003059387207
    5. ':
' → logprob: -9.892003059387207
    6. '>' → logprob: -12.017003059387207
    7. ' ' → logprob: -13.392003059387207
    8. '       ' → logprob: -13.392003059387207
    9. '```' → logprob: -13.517003059387207
    10. ' is' → logprob: -13.767003059387207

Token 217: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.03804275393486023
    2. ' end' → logprob: -3.2880427837371826
    3. '(end' → logprob: -14.288043022155762
    4. '   ' → logprob: -14.413043022155762
    5. ' ' → logprob: -16.163042068481445
    6. '  ' → logprob: -18.038042068481445
    7. '	end' → logprob: -18.788042068481445
    8. '[end' → logprob: -19.288042068481445
    9. 'flag' → logprob: -19.538042068481445
    10. '=end' → logprob: -19.788042068481445

Token 218: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.026306452229619026
    2. 'is' → logprob: -3.651306390762329
    3. 'and' → logprob: -13.02630615234375
    4. ')' → logprob: -13.27630615234375
    5. '   ' → logprob: -14.27630615234375
    6. ' ' → logprob: -14.65130615234375
    7. ' and' → logprob: -15.15130615234375
    8. '	is' → logprob: -15.15130615234375
    9. 'not' → logprob: -16.02630615234375
    10. ':' → logprob: -16.40130615234375

Token 219: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.3132767081260681
    2. ' not' → logprob: -1.313276767730713
    3. '   ' → logprob: -11.938276290893555
    4. 'None' → logprob: -13.313276290893555
    5. ' ' → logprob: -13.688276290893555
    6. '```' → logprob: -13.938276290893555
    7. '	not' → logprob: -13.938276290893555
    8. 'Not' → logprob: -14.063276290893555
    9. '!' → logprob: -14.313276290893555
    10. '...' → logprob: -14.938276290893555

Token 220: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.03811366483569145
    2. ' None' → logprob: -3.288113594055176
    3. 'not' → logprob: -10.788113594055176
    4. '_None' → logprob: -11.038113594055176
    5. '(None' → logprob: -11.163113594055176
    6. '   ' → logprob: -11.538113594055176
    7. ' ' → logprob: -12.538113594055176
    8. 'none' → logprob: -12.788113594055176
    9. '_none' → logprob: -13.163113594055176
    10. '=None' → logprob: -13.663113594055176

Token 221: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6071839928627014
    2. ':
' → logprob: -0.8571839928627014
    3. '   ' → logprob: -3.4821839332580566
    4. '       ' → logprob: -11.232184410095215
    5. '):
' → logprob: -12.982184410095215
    6. ':

' → logprob: -13.232184410095215
    7. '    
' → logprob: -14.107184410095215
    8. ':
' → logprob: -14.607184410095215
    9. '):' → logprob: -14.732184410095215
    10. ',' → logprob: -14.732184410095215

Token 222: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017088521271944046
    2. 'res' → logprob: -6.376708984375
    3. '       ' → logprob: -12.501708984375
    4. ' res' → logprob: -12.876708984375
    5. '```' → logprob: -16.251708984375
    6. '  ' → logprob: -16.501708984375
    7. '	res' → logprob: -16.626708984375
    8. '    
' → logprob: -17.001708984375
    9. '           ' → logprob: -17.126708984375
    10. ' ' → logprob: -17.501708984375

Token 223: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.0033576088026165962
    2. '   ' → logprob: -5.753357410430908
    3. ' res' → logprob: -8.628357887268066
    4. ' ' → logprob: -15.128357887268066
    5. '	res' → logprob: -15.253357887268066
    6. '       ' → logprob: -15.378357887268066
    7. '  ' → logprob: -15.878357887268066
    8. '    
' → logprob: -17.00335693359375
    9. '           ' → logprob: -17.00335693359375
    10. '               ' → logprob: -17.37835693359375

Token 224: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931503415107727
    2. ' =' → logprob: -0.6931503415107727
    3. '   ' → logprob: -13.443150520324707
    4. '=max' → logprob: -14.068150520324707
    5. 'max' → logprob: -14.943150520324707
    6. ' ' → logprob: -15.068150520324707
    7. '[' → logprob: -15.443150520324707
    8. '=
' → logprob: -18.06814956665039
    9. '
' → logprob: -18.19314956665039
    10. '  ' → logprob: -18.31814956665039

Token 225: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.07889088988304138
    2. ' max' → logprob: -2.578890800476074
    3. '   ' → logprob: -14.078890800476074
    4. '(max' → logprob: -15.578890800476074
    5. '[max' → logprob: -16.82889175415039
    6. ' ' → logprob: -17.32889175415039
    7. '	max' → logprob: -17.82889175415039
    8. '  ' → logprob: -18.07889175415039
    9. '=max' → logprob: -18.95389175415039
    10. '    ' → logprob: -19.70389175415039

Token 226: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -7.107425062713446e-06
    2. 'res' → logprob: -11.875006675720215
    3. '(' → logprob: -16.50000762939453
    4. ' res' → logprob: -18.37500762939453
    5. ',res' → logprob: -18.75000762939453
    6. '   ' → logprob: -19.87500762939453
    7. '```' → logprob: -19.87500762939453
    8. '=res' → logprob: -20.00000762939453
    9. '$res' → logprob: -20.12500762939453
    10. '	res' → logprob: -20.25000762939453

Token 227: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0050592985935509205
    2. '(res' → logprob: -5.505059242248535
    3. 'res' → logprob: -7.505059242248535
    4. ',res' → logprob: -7.755059242248535
    5. ' res' → logprob: -13.880059242248535
    6. ' ,' → logprob: -14.755059242248535
    7. '   ' → logprob: -16.00506019592285
    8. ',
' → logprob: -16.38006019592285
    9. '```' → logprob: -16.88006019592285
    10. '=res' → logprob: -17.13006019592285

Token 228: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.21330828964710236
    2. '[' → logprob: -1.963308334350586
    3. '[start' → logprob: -2.963308334350586
    4. '   ' → logprob: -10.338308334350586
    5. '[s' → logprob: -11.588308334350586
    6. ' ' → logprob: -12.338308334350586
    7. '[end' → logprob: -13.838308334350586
    8. '[max' → logprob: -14.213308334350586
    9. '  ' → logprob: -14.713308334350586
    10. 'res' → logprob: -14.838308334350586

Token 229: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -9.13388703338569e-06
    2. '[start' → logprob: -12.000009536743164
    3. ' start' → logprob: -12.750009536743164
    4. '(start' → logprob: -17.000009536743164
    5. '[' → logprob: -19.125009536743164
    6. 'res' → logprob: -20.125009536743164
    7. ',start' → logprob: -20.375009536743164
    8. '   ' → logprob: -20.750009536743164
    9. 's' → logprob: -21.375009536743164
    10. '	start' → logprob: -22.125009536743164

Token 230: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8670179997570813e-05
    2. ',end' → logprob: -11.125019073486328
    3. ' ,' → logprob: -12.625019073486328
    4. ',
' → logprob: -14.500019073486328
    5. 'end' → logprob: -18.000019073486328
    6. ',

' → logprob: -20.000019073486328
    7. ',
' → logprob: -20.375019073486328
    8. ',r' → logprob: -20.375019073486328
    9. '```' → logprob: -20.500019073486328
    10. '[' → logprob: -20.500019073486328

Token 231: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.1002098023891449
    2. ' end' → logprob: -2.3502097129821777
    3. '   ' → logprob: -13.350210189819336
    4. ' ' → logprob: -14.225210189819336
    5. '	end' → logprob: -14.975210189819336
    6. '[end' → logprob: -15.350210189819336
    7. '(end' → logprob: -15.725210189819336
    8. '  ' → logprob: -16.475210189819336
    9. '    ' → logprob: -16.475210189819336
    10. ',end' → logprob: -16.725210189819336

Token 232: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -9.014684110297821e-06
    2. ' ],' → logprob: -11.875008583068848
    3. ',' → logprob: -13.500008583068848
    4. '   ' → logprob: -15.250008583068848
    5. '),' → logprob: -15.750008583068848
    6. ']' → logprob: -16.000009536743164
    7. '],
' → logprob: -16.750009536743164
    8. ''],' → logprob: -17.500009536743164
    9. '},' → logprob: -18.125009536743164
    10. '       ' → logprob: -18.125009536743164

Token 233: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.22542650997638702
    2. ' key' → logprob: -1.6004265546798706
    3. '   ' → logprob: -12.22542667388916
    4. 'lambda' → logprob: -12.85042667388916
    5. ' ' → logprob: -13.10042667388916
    6. '  ' → logprob: -13.97542667388916
    7. '	key' → logprob: -14.22542667388916
    8. '
' → logprob: -14.60042667388916
    9. ',key' → logprob: -14.97542667388916
    10. '(key' → logprob: -15.10042667388916

Token 234: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.00010127831774298102
    2. '=' → logprob: -9.250101089477539
    3. 'lambda' → logprob: -12.250101089477539
    4. '(lambda' → logprob: -16.12510108947754
    5. ' =' → logprob: -16.87510108947754
    6. '=
' → logprob: -17.00010108947754
    7. ' lambda' → logprob: -17.50010108947754
    8. '   ' → logprob: -19.37510108947754
    9. '=None' → logprob: -19.75010108947754
    10. '```' → logprob: -19.87510108947754

Token 235: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.28115394711494446
    2. 'p' → logprob: -1.406153917312622
    3. 'x' → logprob: -13.781153678894043
    4. ' ' → logprob: -14.156153678894043
    5. '   ' → logprob: -14.406153678894043
    6. ' x' → logprob: -14.531153678894043
    7. 'a' → logprob: -15.281153678894043
    8. '  ' → logprob: -15.906153678894043
    9. 'b' → logprob: -16.03115463256836
    10. ' ' → logprob: -16.78115463256836

Token 236: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007025919388979673
    2. 'p' → logprob: -5.132025718688965
    3. ' p' → logprob: -6.882025718688965
    4. ' :' → logprob: -10.132025718688965
    5. ':p' → logprob: -10.632025718688965
    6. '[' → logprob: -12.507025718688965
    7. ' ' → logprob: -13.382025718688965
    8. ':
' → logprob: -14.882025718688965
    9. '   ' → logprob: -15.257025718688965
    10. '(p' → logprob: -15.757025718688965

Token 237: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.20141352713108063
    2. ' p' → logprob: -1.7014135122299194
    3. '   ' → logprob: -16.701414108276367
    4. '(p' → logprob: -17.201414108276367
    5. ' ' → logprob: -17.451414108276367
    6. '	p' → logprob: -17.701414108276367
    7. '1' → logprob: -17.826414108276367
    8. ' ' → logprob: -19.076414108276367
    9. '[' → logprob: -19.326414108276367
    10. '[p' → logprob: -19.451414108276367

Token 238: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.1424973713001236e-05
    2. '1' → logprob: -10.375031471252441
    3. ' [' → logprob: -17.000030517578125
    4. '#' → logprob: -17.250030517578125
    5. ' ' → logprob: -17.250030517578125
    6. '```' → logprob: -17.375030517578125
    7. '2' → logprob: -17.875030517578125
    8. 'p' → logprob: -18.250030517578125
    9. '[
' → logprob: -18.500030517578125
    10. '{' → logprob: -19.000030517578125

Token 239: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.8497312895488e-05
    2. '[' → logprob: -10.125068664550781
    3. ' ' → logprob: -10.750068664550781
    4. '
' → logprob: -13.687568664550781
    5. '   ' → logprob: -13.687568664550781
    6. '```' → logprob: -14.000068664550781
    7. ']' → logprob: -14.687568664550781
    8. 'p' → logprob: -14.812568664550781
    9. '-' → logprob: -14.937568664550781
    10. '#' → logprob: -15.500068664550781

Token 240: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03855227679014206
    2. '-' → logprob: -3.2885522842407227
    3. ' p' → logprob: -8.538552284240723
    4. '-p' → logprob: -9.038552284240723
    5. ' ' → logprob: -9.413552284240723
    6. 'p' → logprob: -10.288552284240723
    7. ']' → logprob: -10.288552284240723
    8. '[' → logprob: -11.163552284240723
    9. ')' → logprob: -11.413552284240723
    10. ' ' → logprob: -12.538552284240723

Token 241: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1134205088019371
    2. '-' → logprob: -2.2384204864501953
    3. '-p' → logprob: -7.738420486450195
    4. ' p' → logprob: -8.988420486450195
    5. ' ' → logprob: -10.863420486450195
    6. 'p' → logprob: -11.238420486450195
    7. '[' → logprob: -13.488420486450195
    8. '-
' → logprob: -13.863420486450195
    9. ' -
' → logprob: -14.363420486450195
    10. '```' → logprob: -15.238420486450195

Token 242: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.20141372084617615
    2. ' p' → logprob: -1.7014137506484985
    3. ' ' → logprob: -15.576414108276367
    4. '   ' → logprob: -15.826414108276367
    5. '	p' → logprob: -16.701414108276367
    6. '```' → logprob: -17.326414108276367
    7. '<p' → logprob: -17.451414108276367
    8. ')p' → logprob: -17.951414108276367
    9. '
' → logprob: -18.201414108276367
    10. ''p' → logprob: -18.326414108276367

Token 243: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001325241639278829
    2. 'p' → logprob: -6.8763251304626465
    3. '0' → logprob: -9.126325607299805
    4. ' p' → logprob: -9.626325607299805
    5. ' ' → logprob: -10.626325607299805
    6. ' [' → logprob: -10.626325607299805
    7. '-' → logprob: -10.751325607299805
    8. ')' → logprob: -11.251325607299805
    9. '_' → logprob: -11.376325607299805
    10. '(p' → logprob: -11.751325607299805

Token 244: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.492120155598968e-05
    2. 'p' → logprob: -9.750064849853516
    3. ' ' → logprob: -12.375064849853516
    4. '۰' → logprob: -14.000064849853516
    5. '
' → logprob: -15.250064849853516
    6. ' p' → logprob: -15.312564849853516
    7. '```' → logprob: -15.437564849853516
    8. '   ' → logprob: -15.625064849853516
    9. '[' → logprob: -15.875064849853516
    10. ' ' → logprob: -16.375064849853516

Token 245: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002441766206175089
    2. '])' → logprob: -6.877441883087158
    3. '+' → logprob: -7.127441883087158
    4. ')+' → logprob: -8.00244140625
    5. ')
' → logprob: -8.87744140625
    6. '})' → logprob: -10.00244140625
    7. '))' → logprob: -10.00244140625
    8. '+)' → logprob: -11.00244140625
    9. ' )' → logprob: -11.25244140625
    10. '>)' → logprob: -13.37744140625

Token 246: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007952123996801674
    2. 'if' → logprob: -8.125795364379883
    3. 'start' → logprob: -8.125795364379883
    4. 'for' → logprob: -9.125795364379883
    5. 'l' → logprob: -10.500795364379883
    6. 'length' → logprob: -10.625795364379883
    7. 'pr' → logprob: -11.250795364379883
    8. 'a' → logprob: -11.375795364379883
    9. '```' → logprob: -12.000795364379883
    10. 'result' → logprob: -12.125795364379883

Token 247: '((' (ID: 2054)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00758639071136713
    2. '('' → logprob: -5.632586479187012
    3. '(' → logprob: -6.257586479187012
    4. 's' → logprob: -6.632586479187012
    5. '("' → logprob: -8.007586479187012
    6. '(res' → logprob: -8.382586479187012
    7. '((' → logprob: -9.757586479187012
    8. '(*' → logprob: -9.882586479187012
    9. '(f' → logprob: -10.632586479187012
    10. '(chr' → logprob: -11.257586479187012

Token 248: 'lambda' (ID: 35280)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -5.717296517104842e-05
    2. 's' → logprob: -10.375057220458984
    3. ' res' → logprob: -10.625057220458984
    4. '   ' → logprob: -14.500057220458984
    5. ')' → logprob: -14.750057220458984
    6. '(res' → logprob: -15.000057220458984
    7. '
' → logprob: -16.000057220458984
    8. 'r' → logprob: -16.125057220458984
    9. '	res' → logprob: -16.625057220458984
    10. '$res' → logprob: -17.500057220458984

Token 249: ' l' (ID: 305)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8434059619903564
    2. ' x' → logprob: -0.8434059619903564
    3. ' s' → logprob: -3.4684059619903564
    4. ' res' → logprob: -4.093405723571777
    5. 'p' → logprob: -4.343405723571777
    6. 's' → logprob: -4.468405723571777
    7. 'start' → logprob: -4.468405723571777
    8. ' p' → logprob: -4.843405723571777
    9. 'l' → logprob: -4.843405723571777
    10. ' start' → logprob: -5.093405723571777

Token 250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6992205381393433
    2. ':' → logprob: -1.1992205381393433
    3. 'x' → logprob: -1.8242205381393433
    4. 'a' → logprob: -4.199220657348633
    5. 's' → logprob: -5.199220657348633
    6. 'ambda' → logprob: -5.199220657348633
    7. ' :' → logprob: -5.574220657348633
    8. 'r' → logprob: -6.199220657348633
    9. ' x' → logprob: -6.699220657348633
    10. ',l' → logprob: -6.949220657348633

Token 251: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -6.623244553338736e-05
    2. ' r' → logprob: -9.625065803527832
    3. '```' → logprob: -16.62506675720215
    4. '   ' → logprob: -17.62506675720215
    5. 'res' → logprob: -17.75006675720215
    6. ' ' → logprob: -17.87506675720215
    7. '	r' → logprob: -18.25006675720215
    8. '
' → logprob: -18.25006675720215
    9. 's' → logprob: -18.62506675720215
    10. ')' → logprob: -18.75006675720215

Token 252: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015071245143190026
    2. ':l' → logprob: -6.75150728225708
    3. ' :' → logprob: -8.126506805419922
    4. ':(' → logprob: -10.876506805419922
    5. ':[' → logprob: -11.626506805419922
    6. ',l' → logprob: -12.251506805419922
    7. ',' → logprob: -12.501506805419922
    8. ':list' → logprob: -13.251506805419922
    9. ':
' → logprob: -14.751506805419922
    10. ':r' → logprob: -14.751506805419922

Token 253: ' r' (ID: 428)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14861181378364563
    2. 'r' → logprob: -2.7736117839813232
    3. ' s' → logprob: -3.2736117839813232
    4. '''.' → logprob: -3.6486117839813232
    5. 'l' → logprob: -5.523612022399902
    6. ' ''.' → logprob: -6.023612022399902
    7. ' r' → logprob: -6.648612022399902
    8. '(s' → logprob: -6.898612022399902
    9. '''' → logprob: -7.148612022399902
    10. ' "".' → logprob: -7.273612022399902

Token 254: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.34391164779663086
    2. '-' → logprob: -1.7189116477966309
    3. '-l' → logprob: -2.218911647796631
    4. '+' → logprob: -6.093911647796631
    5. '-r' → logprob: -7.968911647796631
    6. ' +' → logprob: -8.843912124633789
    7. '>=' → logprob: -9.468912124633789
    8. ' if' → logprob: -9.593912124633789
    9. 'and' → logprob: -11.093912124633789
    10. '
' → logprob: -11.218912124633789

Token 255: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.018150413408875465
    2. ' l' → logprob: -4.018150329589844
    3. ' ' → logprob: -15.268150329589844
    4. '	l' → logprob: -16.518150329589844
    5. '   ' → logprob: -17.018150329589844
    6. '  ' → logprob: -17.893150329589844
    7. '    ' → logprob: -17.893150329589844
    8. ' л' → logprob: -18.643150329589844
    9. '```' → logprob: -19.393150329589844
    10. ' ' → logprob: -19.643150329589844

Token 256: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.08913064002990723
    2. '+' → logprob: -2.4641306400299072
    3. ')' → logprob: -8.714130401611328
    4. ' if' → logprob: -11.964130401611328
    5. ' ' → logprob: -12.214130401611328
    6. '))' → logprob: -12.339130401611328
    7. 'if' → logprob: -12.339130401611328
    8. '```' → logprob: -13.339130401611328
    9. '>' → logprob: -13.464130401611328
    10. ')+' → logprob: -13.964130401611328

Token 257: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007139815716072917
    2. ' ' → logprob: -7.25071382522583
    3. '0' → logprob: -13.125714302062988
    4. '```' → logprob: -13.750714302062988
    5. ')' → logprob: -14.625714302062988
    6. '   ' → logprob: -15.375714302062988
    7. ''' → logprob: -17.000713348388672
    8. ',' → logprob: -17.250713348388672
    9. '`' → logprob: -17.250713348388672
    10. '  ' → logprob: -17.375713348388672

Token 258: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5451681974809617e-05
    2. ' ' → logprob: -11.375015258789062
    3. '0' → logprob: -12.625015258789062
    4. '```' → logprob: -14.875015258789062
    5. ')' → logprob: -15.625015258789062
    6. 'l' → logprob: -17.125015258789062
    7. 's' → logprob: -17.375015258789062
    8. '   ' → logprob: -17.500015258789062
    9. '2' → logprob: -17.875015258789062
    10. '`' → logprob: -17.875015258789062

Token 259: ')(' (ID: 4898)
  Prédit: ')('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')(' → logprob: -0.002904135501012206
    2. ' if' → logprob: -6.252903938293457
    3. 'if' → logprob: -7.252903938293457
    4. ')' → logprob: -8.502903938293457
    5. ' )(' → logprob: -10.627903938293457
    6. '(res' → logprob: -10.877903938293457
    7. ')((' → logprob: -11.627903938293457
    8. '(s' → logprob: -12.127903938293457
    9. 'res' → logprob: -13.127903938293457
    10. ' ' → logprob: -13.627903938293457

Token 260: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -3.7697225252486533e-06
    2. ' res' → logprob: -12.500003814697266
    3. '
' → logprob: -19.875003814697266
    4. 're' → logprob: -20.875003814697266
    5. ')' → logprob: -21.250003814697266
    6. '	res' → logprob: -21.375003814697266
    7. '(res' → logprob: -21.375003814697266
    8. '*' → logprob: -21.500003814697266
    9. '_res' → logprob: -22.250003814697266
    10. '   ' → logprob: -22.250003814697266

Token 261: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.676981345459353e-06
    2. '0' → logprob: -12.250005722045898
    3. ')' → logprob: -15.250005722045898
    4. ' [' → logprob: -15.375005722045898
    5. '```' → logprob: -15.500005722045898
    6. ' ' → logprob: -16.2500057220459
    7. '[
' → logprob: -16.7500057220459
    8. '   ' → logprob: -17.2500057220459
    9. ',' → logprob: -17.2500057220459
    10. '
' → logprob: -17.3750057220459

Token 262: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -12.625005722045898
    3. '1' → logprob: -13.500005722045898
    4. '   ' → logprob: -14.625005722045898
    5. '```' → logprob: -16.0000057220459
    6. '
' → logprob: -16.6250057220459
    7. ')' → logprob: -16.6875057220459
    8. ',' → logprob: -16.6875057220459
    9. '-' → logprob: -16.6875057220459
    10. '[' → logprob: -16.8750057220459

Token 263: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -7.707997428951785e-05
    2. ' ,' → logprob: -9.625077247619629
    3. ',res' → logprob: -11.500077247619629
    4. ',
' → logprob: -14.125077247619629
    5. 'res' → logprob: -17.750076293945312
    6. ',

' → logprob: -18.000076293945312
    7. '[' → logprob: -18.750076293945312
    8. ')' → logprob: -18.750076293945312
    9. '‌,' → logprob: -18.875076293945312
    10. '```' → logprob: -19.125076293945312

Token 264: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.002475777640938759
    2. ' res' → logprob: -6.002475738525391
    3. '	res' → logprob: -17.87747573852539
    4. '$res' → logprob: -18.00247573852539
    5. '(res' → logprob: -18.50247573852539
    6. '
' → logprob: -19.62747573852539
    7. ' ' → logprob: -19.62747573852539
    8. 'resi' → logprob: -19.87747573852539
    9. '_res' → logprob: -20.12747573852539
    10. '```' → logprob: -20.75247573852539

Token 265: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008617646060883999
    2. '1' → logprob: -4.758617877960205
    3. ' ' → logprob: -13.633617401123047
    4. '```' → logprob: -14.008617401123047
    5. '[
' → logprob: -14.133617401123047
    6. 'res' → logprob: -15.508617401123047
    7. '0' → logprob: -16.633617401123047
    8. ' [' → logprob: -17.508617401123047
    9. '[-' → logprob: -17.633617401123047
    10. ']' → logprob: -18.008617401123047

Token 266: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.625
    3. '0' → logprob: -16.0
    4. '```' → logprob: -17.5
    5. '   ' → logprob: -18.875
    6. '-' → logprob: -18.875
    7. ']' → logprob: -19.5
    8. '[' → logprob: -19.625
    9. '])' → logprob: -20.0
    10. '4' → logprob: -20.375

Token 267: ']))' (ID: 20259)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.011056429706513882
    2. ')' → logprob: -4.511056423187256
    3. ')))' → logprob: -12.261056900024414
    4. '))
' → logprob: -12.886056900024414
    5. ')
' → logprob: -14.886056900024414
    6. '])' → logprob: -15.511056900024414
    7. ' ))' → logprob: -15.511056900024414
    8. '})' → logprob: -15.886056900024414
    9. ')}' → logprob: -15.886056900024414
    10. '));' → logprob: -16.761056900024414


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 265
Tokens correctement prédits (1ère position, stricte): 124
Tokens correctement prédits (1ère position, avec adaptation): 129
Tokens correctement prédits (top 10): 221
Précision stricte (1ère position): 46.79%
Précision adaptée (1ère position): 48.68%
Précision (top 10): 83.40%
================================================================================
