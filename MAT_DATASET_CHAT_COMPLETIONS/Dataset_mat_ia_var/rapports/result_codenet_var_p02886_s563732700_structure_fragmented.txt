================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:41:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def get_input():
    return input()

def parse_int(s):
    return int(s)

def parse_int_list(s):
    return list(map(int, s.split()))

def get_n():
    return parse_int(get_input())

def get_d():
    return parse_int_list(get_input())

def calculate_product(a, b):
    return a * b

def add_to_total(total, value):
    return total + value

def process_pair(i, j, d):
    return calculate_product(d[i], d[j])

def loop_inner(i, N, d, current_res):
    j = i + 1
    while j < N:
        current_res = add_to_total(current_res, process_pair(i, j, d))
        j += 1
    return current_res

def compute_result(N, d):
    res = 0
    i = 0
    while i < N:
        res = loop_inner(i, N, d, res)
        i += 1
    return res

def print_result(res):
    print(res)

def main():
    N = get_n()
    d = get_d()
    res = compute_result(N, d)
    print_result(res)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' get' (ID: 717)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015994871500879526
    2. '_' → logprob: -6.626599311828613
    3. ' (' → logprob: -9.376599311828613
    4. '():' → logprob: -9.376599311828613
    5. '```' → logprob: -10.751599311828613
    6. '()' → logprob: -11.126599311828613
    7. '(:' → logprob: -11.501599311828613
    8. '("("' → logprob: -11.876599311828613
    9. ':' → logprob: -12.376599311828613
    10. '(_:' → logprob: -12.501599311828613

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.05937580764293671
    2. '():' → logprob: -3.684375762939453
    3. ':' → logprob: -4.559375762939453
    4. '   ' → logprob: -4.684375762939453
    5. '\' → logprob: -5.809375762939453
    6. '\n' → logprob: -5.934375762939453
    7. '``' → logprob: -5.934375762939453
    8. '    
' → logprob: -7.059375762939453
    9. '()' → logprob: -7.934375762939453
    10. '(' → logprob: -7.934375762939453

Token 5: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.24199044704437256
    2. 'input' → logprob: -2.366990566253662
    3. 'user' → logprob: -3.116990566253662
    4. '   ' → logprob: -3.241990566253662
    5. '```' → logprob: -4.616990566253662
    6. 'x' → logprob: -4.741990566253662
    7. ' ' → logprob: -4.866990566253662
    8. ' return' → logprob: -5.866990566253662
    9. 'text' → logprob: -6.241990566253662
    10. 'i' → logprob: -6.491990566253662

Token 6: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7762201428413391
    2. ' input' → logprob: -0.7762201428413391
    3. 'input' → logprob: -2.9012200832366943
    4. '"' → logprob: -4.026220321655273
    5. ''' → logprob: -5.651220321655273
    6. ' "' → logprob: -6.776220321655273
    7. '  ' → logprob: -7.401220321655273
    8. ' '' → logprob: -7.901220321655273
    9. '(input' → logprob: -8.276220321655273
    10. ' None' → logprob: -8.401220321655273

Token 7: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007676983950659633
    2. '()' → logprob: -7.750767707824707
    3. '('' → logprob: -9.000767707824707
    4. '("("' → logprob: -9.500767707824707
    5. ' (' → logprob: -10.000767707824707
    6. '(
' → logprob: -10.625767707824707
    7. '```' → logprob: -11.000767707824707
    8. ''' → logprob: -11.750767707824707
    9. ' ' → logprob: -11.750767707824707
    10. '("")' → logprob: -11.875767707824707

Token 8: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9562095403671265
    2. '(' → logprob: -1.3312095403671265
    3. '()' → logprob: -2.456209659576416
    4. '\n' → logprob: -2.581209659576416
    5. '```' → logprob: -3.206209659576416
    6. '(
' → logprob: -3.456209659576416
    7. '#' → logprob: -3.706209659576416
    8. '<|end|>' → logprob: -3.831209659576416
    9. '\' → logprob: -4.331209659576416
    10. '
' → logprob: -4.706209659576416

Token 9: ' parse' (ID: 8420)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.21845389902591705
    2. ' calculate' → logprob: -2.093453884124756
    3. ' process' → logprob: -4.093453884124756
    4. ' add' → logprob: -4.343453884124756
    5. ' user' → logprob: -4.468453884124756
    6. ' space' → logprob: -5.093453884124756
    7. ' ' → logprob: -5.093453884124756
    8. ' compute' → logprob: -6.093453884124756
    9. ' my' → logprob: -6.218453884124756
    10. ' read' → logprob: -6.218453884124756

Token 10: '_int' (ID: 12285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3267499804496765
    2. '(' → logprob: -1.3267500400543213
    3. '_input' → logprob: -4.451749801635742
    4. '_line' → logprob: -7.826749801635742
    5. '_token' → logprob: -8.451749801635742
    6. '(_)' → logprob: -8.576749801635742
    7. '(_' → logprob: -8.826749801635742
    8. '_user' → logprob: -9.201749801635742
    9. '_text' → logprob: -9.826749801635742
    10. '_(' → logprob: -9.826749801635742

Token 11: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0014158309204503894
    2. '_' → logprob: -7.001415729522705
    3. ' (' → logprob: -8.501416206359863
    4. '("("' → logprob: -8.626416206359863
    5. 's' → logprob: -10.626416206359863
    6. '('' → logprob: -11.251416206359863
    7. ' ' → logprob: -11.251416206359863
    8. '   ' → logprob: -11.876416206359863
    9. '()' → logprob: -12.126416206359863
    10. '```' → logprob: -12.501416206359863

Token 12: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20238447189331055
    2. ')' → logprob: -1.7023844718933105
    3. ':' → logprob: -7.8273844718933105
    4. '):
' → logprob: -8.577384948730469
    5. ' ):' → logprob: -8.827384948730469
    6. ' )' → logprob: -10.452384948730469
    7. '**' → logprob: -10.577384948730469
    8. 's' → logprob: -10.952384948730469
    9. ':int' → logprob: -10.952384948730469
    10. '(' → logprob: -11.202384948730469

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1819683313369751
    2. ' int' → logprob: -2.8069682121276855
    3. 'int' → logprob: -2.8069682121276855
    4. '(int' → logprob: -3.3069682121276855
    5. ' return' → logprob: -5.8069682121276855
    6. '    ' → logprob: -5.9319682121276855
    7. '(' → logprob: -6.0569682121276855
    8. ' (' → logprob: -8.806968688964844
    9. 'return' → logprob: -8.931968688964844
    10. '  ' → logprob: -9.056968688964844

Token 14: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22219975292682648
    2. 'try' → logprob: -2.0971996784210205
    3. ' try' → logprob: -2.5971996784210205
    4. ' return' → logprob: -6.9721999168396
    5. 'return' (adapté à ' return') → logprob: -7.2221999168396
    6. '```' → logprob: -8.222199440002441
    7. 'int' → logprob: -10.972199440002441
    8. '``' → logprob: -13.222199440002441
    9. '	try' → logprob: -13.222199440002441
    10. '   ' → logprob: -13.847199440002441

Token 15: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0015078396536409855
    2. 'int' → logprob: -6.501507759094238
    3. '   ' → logprob: -12.751507759094238
    4. '(int' → logprob: -13.626507759094238
    5. ' ' → logprob: -15.001507759094238
    6. '```' → logprob: -15.126507759094238
    7. '=int' → logprob: -15.376507759094238
    8. '<int' → logprob: -15.626507759094238
    9. '[int' → logprob: -16.001508712768555
    10. '	int' → logprob: -16.126508712768555

Token 16: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.16024452447891235
    2. '(' → logprob: -1.9102444648742676
    3. ' (' → logprob: -11.660244941711426
    4. 's' → logprob: -11.785244941711426
    5. '('' → logprob: -13.035244941711426
    6. '(
' → logprob: -14.660244941711426
    7. '("("' → logprob: -14.910244941711426
    8. '(`' → logprob: -15.160244941711426
    9. '(

' → logprob: -15.785244941711426
    10. ' ' → logprob: -15.910244941711426

Token 17: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. '))' → logprob: -13.00000286102295
    3. ' )' → logprob: -15.25000286102295
    4. ')))' → logprob: -16.250001907348633
    5. '`)' → logprob: -17.250001907348633
    6. '')' → logprob: -17.500001907348633
    7. ')
' → logprob: -17.625001907348633
    8. ')return' → logprob: -17.750001907348633
    9. '[' → logprob: -17.875001907348633
    10. '())' → logprob: -18.125001907348633

Token 18: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.28320345282554626
    2. 'd' → logprob: -1.5332034826278687
    3. '\' → logprob: -4.283203601837158
    4. '#' → logprob: -5.283203601837158
    5. '\n' → logprob: -5.658203601837158
    6. '
' → logprob: -5.908203601837158
    7. '

' → logprob: -6.408203601837158
    8. 'n' → logprob: -6.658203601837158
    9. '<|end|>' → logprob: -7.408203601837158
    10. '' → logprob: -8.033203125

Token 19: ' parse' (ID: 8420)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.520986020565033
    2. ' calculate' → logprob: -1.7709860801696777
    3. ' add' → logprob: -2.1459860801696777
    4. ' sum' → logprob: -3.7709860801696777
    5. ' solve' → logprob: -3.7709860801696777
    6. ' factorial' → logprob: -4.020986080169678
    7. ' compute' → logprob: -4.145986080169678
    8. ' multiply' → logprob: -4.770986080169678
    9. 'calculate' → logprob: -4.770986080169678
    10. 'main' → logprob: -5.270986080169678

Token 20: '_int' (ID: 12285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.19417613744735718
    2. '_float' → logprob: -1.819176197052002
    3. '_int' → logprob: -4.944176197052002
    4. '_string' → logprob: -6.444176197052002
    5. '_f' → logprob: -6.444176197052002
    6. '_list' → logprob: -6.944176197052002
    7. '_str' → logprob: -7.319176197052002
    8. ' _' → logprob: -7.319176197052002
    9. '_s' → logprob: -8.444175720214844
    10. '_line' → logprob: -8.569175720214844

Token 21: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4177508056163788
    2. '(' → logprob: -1.6677508354187012
    3. '_' → logprob: -3.542750835418701
    4. '_array' → logprob: -3.542750835418701
    5. '_list' → logprob: -3.667750835418701
    6. '32' → logprob: -4.167750835418701
    7. '_s' → logprob: -4.292750835418701
    8. '_range' → logprob: -4.542750835418701
    9. '(s' → logprob: -5.042750835418701
    10. '_parent' → logprob: -5.542750835418701

Token 22: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003998615313321352
    2. '(s' → logprob: -5.628998756408691
    3. '("("' → logprob: -8.628998756408691
    4. '_list' → logprob: -9.628998756408691
    5. '(ls' → logprob: -10.503998756408691
    6. ' (' → logprob: -10.503998756408691
    7. '(lst' → logprob: -11.253998756408691
    8. '('' → logprob: -11.253998756408691
    9. '(line' → logprob: -11.503998756408691
    10. '([]' → logprob: -11.878998756408691

Token 23: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003143704670947045
    2. ' ):' → logprob: -8.875314712524414
    3. ')' → logprob: -9.000314712524414
    4. '):
' → logprob: -10.375314712524414
    5. ':' → logprob: -11.250314712524414
    6. '   ' → logprob: -12.750314712524414
    7. 's' → logprob: -14.625314712524414
    8. '):

' → logprob: -14.750314712524414
    9. '):
' → logprob: -14.750314712524414
    10. ')=' → logprob: -15.000314712524414

Token 24: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2059478461742401
    2. '(s' → logprob: -1.9559478759765625
    3. 's' → logprob: -3.3309478759765625
    4. '   ' → logprob: -5.5809478759765625
    5. 'return' → logprob: -6.2059478759765625
    6. ' return' → logprob: -6.9559478759765625
    7. ' s' → logprob: -7.2059478759765625
    8. ' (' → logprob: -7.3309478759765625
    9. '[' → logprob: -7.5809478759765625
    10. 'list' → logprob: -9.705947875976562

Token 25: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3740050792694092
    2. 'return' (adapté à ' return') → logprob: -1.4990050792694092
    3. ' list' → logprob: -2.874005079269409
    4. '   ' → logprob: -4.499005317687988
    5. ' s' → logprob: -4.999005317687988
    6. 'list' → logprob: -4.999005317687988
    7. 's' → logprob: -5.749005317687988
    8. '[s' → logprob: -5.874005317687988
    9. ' [' → logprob: -6.624005317687988
    10. '[' → logprob: -8.874005317687988

Token 26: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.3579472303390503
    2. ' [' → logprob: -1.6079472303390503
    3. '[s' → logprob: -2.98294734954834
    4. ' s' → logprob: -3.73294734954834
    5. 'list' → logprob: -4.23294734954834
    6. '[' → logprob: -5.23294734954834
    7. 's' → logprob: -5.73294734954834
    8. '[list' → logprob: -5.85794734954834
    9. ' ' → logprob: -10.48294734954834
    10. '[int' → logprob: -10.98294734954834

Token 27: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.011099939234554768
    2. '(' → logprob: -4.511099815368652
    3. '(s' → logprob: -10.261099815368652
    4. '(int' → logprob: -11.136099815368652
    5. 'map' → logprob: -14.136099815368652
    6. '(eval' → logprob: -14.886099815368652
    7. '(parse' → logprob: -15.261099815368652
    8. '(
' → logprob: -15.261099815368652
    9. '_map' → logprob: -15.761099815368652
    10. ' map' → logprob: -15.761099815368652

Token 28: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0010325727052986622
    2. '(' → logprob: -7.12603235244751
    3. 'int' → logprob: -9.126032829284668
    4. ' int' → logprob: -10.126032829284668
    5. ' (' → logprob: -10.376032829284668
    6. '(parse' → logprob: -10.751032829284668
    7. ',int' → logprob: -11.626032829284668
    8. ')' → logprob: -11.876032829284668
    9. '   ' → logprob: -12.376032829284668
    10. '<int' → logprob: -12.501032829284668

Token 29: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06513010710477829
    2. '(s' → logprob: -3.1901299953460693
    3. 's' → logprob: -4.315130233764648
    4. ',s' → logprob: -4.940130233764648
    5. ' s' → logprob: -7.690130233764648
    6. ' ,' → logprob: -7.815130233764648
    7. ')' → logprob: -8.440130233764648
    8. '(' → logprob: -8.440130233764648
    9. '),' → logprob: -10.315130233764648
    10. '   ' → logprob: -10.815130233764648

Token 30: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.38695913553237915
    2. ' s' → logprob: -1.1369590759277344
    3. '   ' → logprob: -9.511959075927734
    4. ' ' → logprob: -12.261959075927734
    5. ')' → logprob: -12.761959075927734
    6. '(s' → logprob: -13.011959075927734
    7. '  ' → logprob: -13.636959075927734
    8. '	s' → logprob: -14.261959075927734
    9. '))' → logprob: -14.511959075927734
    10. '    ' → logprob: -14.636959075927734

Token 31: '.split' (ID: 10347)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4844592809677124
    2. '.strip' → logprob: -1.3594592809677124
    3. '.split' → logprob: -2.109459400177002
    4. ' .' → logprob: -5.484459400177002
    5. '().' → logprob: -6.484459400177002
    6. '   ' → logprob: -9.359458923339844
    7. 'split' → logprob: -10.359458923339844
    8. '('.' → logprob: -10.734458923339844
    9. '.trim' → logprob: -10.984458923339844
    10. 'strip' → logprob: -11.484458923339844

Token 32: '()))

' (ID: 125972)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.4183512330055237
    2. '()))' → logprob: -1.168351173400879
    3. '()' → logprob: -3.918351173400879
    4. '())' → logprob: -4.543351173400879
    5. '(' → logprob: -8.793351173400879
    6. '(','' → logprob: -8.918351173400879
    7. '())))' → logprob: -9.043351173400879
    8. '()))
' → logprob: -11.168351173400879
    9. '()))

' → logprob: -11.543351173400879
    10. '("' → logprob: -11.668351173400879

Token 33: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.4140441635390744e-05
    2. '
' → logprob: -11.625014305114746
    3. '\' → logprob: -13.250014305114746
    4. '```' → logprob: -14.000014305114746
    5. '#' → logprob: -14.500014305114746
    6. 'd' → logprob: -14.500014305114746
    7. ' def' → logprob: -14.750014305114746
    8. 'ndef' → logprob: -15.000014305114746
    9. 'n' → logprob: -15.500014305114746
    10. '

' → logprob: -15.625014305114746

Token 34: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.06007898226380348
    2. ' sum' → logprob: -4.060079097747803
    3. ' parse' → logprob: -4.435079097747803
    4. ' get' → logprob: -4.685079097747803
    5. 'main' → logprob: -4.935079097747803
    6. ' solve' → logprob: -5.685079097747803
    7. ' add' → logprob: -6.060079097747803
    8. ' factorial' → logprob: -6.310079097747803
    9. 'sum' → logprob: -7.185079097747803
    10. ' multiply' → logprob: -7.435079097747803

Token 35: '_n' (ID: 2170)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.1530073583126068
    2. '_int' → logprob: -2.2780072689056396
    3. '_' → logprob: -4.278007507324219
    4. '_line' → logprob: -4.653007507324219
    5. '_list' → logprob: -5.028007507324219
    6. '_string' → logprob: -6.278007507324219
    7. '_user' → logprob: -6.778007507324219
    8. '_str' → logprob: -6.778007507324219
    9. '_output' → logprob: -6.778007507324219
    10. '_data' → logprob: -7.278007507324219

Token 36: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2812621295452118
    2. '_' → logprob: -2.656262159347534
    3. 'um' → logprob: -2.656262159347534
    4. 'umber' → logprob: -2.656262159347534
    5. 'ame' → logprob: -4.406261920928955
    6. 'ext' → logprob: -4.531261920928955
    7. 'u' → logprob: -5.781261920928955
    8. 'umbers' → logprob: -6.031261920928955
    9. '():' → logprob: -7.156261920928955
    10. '(' → logprob: -7.156261920928955

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06500846892595291
    2. 'return' → logprob: -3.3150084018707275
    3. ' return' → logprob: -3.8150084018707275
    4. '()' → logprob: -5.440008640289307
    5. ' ()' → logprob: -8.940008163452148
    6. '()
' → logprob: -10.440008163452148
    7. ' ' → logprob: -10.565008163452148
    8. ')' → logprob: -11.315008163452148
    9. '	return' → logprob: -11.815008163452148
    10. '  ' → logprob: -12.065008163452148

Token 38: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.004086708649992943
    2. '   ' → logprob: -5.754086494445801
    3. ' return' → logprob: -7.004086494445801
    4. ' ' → logprob: -16.379087448120117
    5. '	return' → logprob: -16.379087448120117
    6. 'try' → logprob: -16.754087448120117
    7. '    
' → logprob: -17.504087448120117
    8. '  ' → logprob: -18.004087448120117
    9. 'int' → logprob: -18.129087448120117
    10. 'n' → logprob: -18.254087448120117

Token 39: ' parse' (ID: 8420)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.13928011059761047
    2. ' parse' → logprob: -2.389280080795288
    3. 'int' → logprob: -3.514280080795288
    4. 'parse' → logprob: -4.764280319213867
    5. ' ' → logprob: -11.514280319213867
    6. '  ' → logprob: -11.889280319213867
    7. ' get' → logprob: -13.014280319213867
    8. '   ' → logprob: -13.764280319213867
    9. '(parse' → logprob: -14.264280319213867
    10. '(int' → logprob: -14.639280319213867

Token 40: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -8.65707261255011e-06
    2. '_' → logprob: -12.750008583068848
    3. '_in' → logprob: -13.000008583068848
    4. ' _' → logprob: -14.250008583068848
    5. '_uint' → logprob: -14.375008583068848
    6. 'int' → logprob: -14.375008583068848
    7. '_i' → logprob: -14.750008583068848
    8. '_integer' → logprob: -15.375008583068848
    9. '_str' → logprob: -15.500008583068848
    10. '_nt' → logprob: -15.625008583068848

Token 41: '(get' (ID: 7119)
  Prédit: '(get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(get' → logprob: -0.029157856479287148
    2. '(input' → logprob: -3.779157876968384
    3. '(' → logprob: -5.154157638549805
    4. '("("' → logprob: -9.654157638549805
    5. ' (' → logprob: -10.904157638549805
    6. '((' → logprob: -11.404157638549805
    7. '(
' → logprob: -11.654157638549805
    8. '('' → logprob: -12.404157638549805
    9. '(_' → logprob: -12.529157638549805
    10. 'input' → logprob: -13.529157638549805

Token 42: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.000000953674316
    3. '_n' → logprob: -16.625
    4. '_in' → logprob: -17.125
    5. 'input' → logprob: -17.375
    6. '_line' → logprob: -18.125
    7. '_output' → logprob: -18.25
    8. ' _' → logprob: -18.75
    9. '_string' → logprob: -19.25
    10. '(_' → logprob: -19.5

Token 43: '())

' (ID: 27654)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.1275271475315094
    2. '())' → logprob: -2.1275272369384766
    3. '()' → logprob: -7.502527236938477
    4. '()))
' → logprob: -10.377527236938477
    5. '))' → logprob: -12.502527236938477
    6. '()))

' → logprob: -12.877527236938477
    7. '())
' → logprob: -13.377527236938477
    8. '()));' → logprob: -13.377527236938477
    9. '())))' → logprob: -13.502527236938477
    10. ')' → logprob: -13.752527236938477

Token 44: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005635190173052251
    2. '
' → logprob: -8.250563621520996
    3. '<|end|>' → logprob: -8.875563621520996
    4. 'ndef' → logprob: -10.125563621520996
    5. '

' → logprob: -10.375563621520996
    6. '```' → logprob: -11.125563621520996
    7. '\' → logprob: -11.250563621520996
    8. ' def' → logprob: -11.250563621520996
    9. 'n' → logprob: -11.500563621520996
    10. '\n' → logprob: -11.625563621520996

Token 45: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.03389037773013115
    2. '_get' → logprob: -4.283890247344971
    3. 'get' → logprob: -4.533890247344971
    4. '_' → logprob: -5.658890247344971
    5. ' main' → logprob: -5.658890247344971
    6. '_main' → logprob: -6.533890247344971
    7. '_input' → logprob: -9.533890724182129
    8. ' parse' → logprob: -9.783890724182129
    9. ' g' → logprob: -10.283890724182129
    10. '_parse' → logprob: -10.533890724182129

Token 46: '_d' (ID: 1565)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.8934224247932434
    2. '_m' → logprob: -1.2684223651885986
    3. '_int' → logprob: -1.3934223651885986
    4. '_s' → logprob: -3.8934223651885986
    5. '_input' → logprob: -3.8934223651885986
    6. '_str' → logprob: -5.268422603607178
    7. '_k' → logprob: -5.768422603607178
    8. '_lst' → logprob: -6.018422603607178
    9. '_' → logprob: -6.143422603607178
    10. '_l' → logprob: -6.268422603607178

Token 47: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3912036120891571
    2. '_list' → logprob: -1.3912036418914795
    3. 'istance' → logprob: -3.7662036418914795
    4. 'ef' → logprob: -4.8912034034729
    5. '():' → logprob: -4.8912034034729
    6. 'ata' → logprob: -5.0162034034729
    7. 'atalist' → logprob: -5.1412034034729
    8. 'ist' → logprob: -5.2662034034729
    9. '())' → logprob: -5.7662034034729
    10. '_array' → logprob: -5.7662034034729

Token 48: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.64743572473526
    2. '   ' → logprob: -0.77243572473526
    3. ' return' → logprob: -4.647435665130615
    4. '()' → logprob: -5.397435665130615
    5. 'get' → logprob: -8.272436141967773
    6. 'def' → logprob: -8.397436141967773
    7. ' ' → logprob: -10.022436141967773
    8. '	return' → logprob: -10.522436141967773
    9. ')' → logprob: -11.397436141967773
    10. '  ' → logprob: -11.522436141967773

Token 49: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0020958955865353346
    2. ' return' → logprob: -6.877095699310303
    3. '   ' → logprob: -7.502095699310303
    4. 'parse' → logprob: -7.627095699310303
    5. 'get' → logprob: -11.002096176147461
    6. 'int' → logprob: -13.127096176147461
    7. 'def' → logprob: -13.252096176147461
    8. ' ' → logprob: -13.252096176147461
    9. ' parse' → logprob: -14.752096176147461
    10. 'eturn' → logprob: -15.127096176147461

Token 50: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.044020555913448334
    2. ' parse' → logprob: -3.669020652770996
    3. 'get' → logprob: -4.294020652770996
    4. 'int' → logprob: -6.419020652770996
    5. 'float' → logprob: -7.044020652770996
    6. ' get' → logprob: -7.044020652770996
    7. ' int' → logprob: -8.419020652770996
    8. '(parse' → logprob: -9.044020652770996
    9. ' float' → logprob: -9.669020652770996
    10. '   ' → logprob: -9.794020652770996

Token 51: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -1.5928495486150496e-05
    2. '_' → logprob: -12.250016212463379
    3. 'int' → logprob: -12.625016212463379
    4. '_uint' → logprob: -12.875016212463379
    5. '_float' → logprob: -13.000016212463379
    6. '_char' → logprob: -14.000016212463379
    7. '_input' → logprob: -14.375016212463379
    8. '_i' → logprob: -15.250016212463379
    9. '_integer' → logprob: -16.000015258789062
    10. ' _' → logprob: -16.125015258789062

Token 52: '_list' (ID: 4162)
  Prédit: '(get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(get' → logprob: -2.5107177862082608e-05
    2. '(' → logprob: -10.750024795532227
    3. '(input' → logprob: -13.750024795532227
    4. 'get' → logprob: -13.750024795532227
    5. ' (' → logprob: -14.000024795532227
    6. '((' → logprob: -16.375024795532227
    7. '('' → logprob: -16.375024795532227
    8. '("("' → logprob: -16.375024795532227
    9. '```' → logprob: -16.875024795532227
    10. '(_' → logprob: -16.875024795532227

Token 53: '(get' (ID: 7119)
  Prédit: '(get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(get' → logprob: -4.3464544432936236e-05
    2. '(' → logprob: -10.500043869018555
    3. ' (' → logprob: -11.500043869018555
    4. '(input' → logprob: -12.750043869018555
    5. '("("' → logprob: -14.250043869018555
    6. '('' → logprob: -15.000043869018555
    7. '(Get' → logprob: -15.125043869018555
    8. '(s' → logprob: -15.625043869018555
    9. '('(' → logprob: -15.750043869018555
    10. '((' → logprob: -15.750043869018555

Token 54: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.0206720617134124e-05
    2. 'input' → logprob: -11.50001049041748
    3. 'Input' → logprob: -17.125009536743164
    4. '_' → logprob: -17.500009536743164
    5. '_INPUT' → logprob: -19.375009536743164
    6. '_d' → logprob: -19.375009536743164
    7. '_in' → logprob: -19.625009536743164
    8. '(input' → logprob: -19.750009536743164
    9. '_output' → logprob: -19.875009536743164
    10. '_Input' → logprob: -19.875009536743164

Token 55: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0007716284599155188
    2. '()' → logprob: -7.750771522521973
    3. '()))' → logprob: -8.625771522521973
    4. ')' → logprob: -8.750771522521973
    5. ' ())' → logprob: -13.500771522521973
    6. '))' → logprob: -13.875771522521973
    7. '();)' → logprob: -14.750771522521973
    8. '())
' → logprob: -15.000771522521973
    9. '());' → logprob: -17.12577247619629
    10. '()),' → logprob: -17.12577247619629

Token 56: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00020330198458395898
    2. '\' → logprob: -9.500203132629395
    3. 'd' → logprob: -10.625203132629395
    4. '#' → logprob: -10.625203132629395
    5. '```' → logprob: -10.875203132629395
    6. '<|end|>' → logprob: -11.250203132629395
    7. '[' → logprob: -12.125203132629395
    8. '
' → logprob: -12.375203132629395
    9. '(' → logprob: -12.375203132629395
    10. '\n' → logprob: -12.500203132629395

Token 57: ' calculate' (ID: 17950)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3122914135456085
    2. ' solve' → logprob: -1.4372913837432861
    3. 'solve' → logprob: -4.437291622161865
    4. 'main' → logprob: -5.062291622161865
    5. ' get' → logprob: -6.062291622161865
    6. ' count' → logprob: -6.187291622161865
    7. ' max' → logprob: -6.312291622161865
    8. ' calculate' → logprob: -6.562291622161865
    9. ' sum' → logprob: -7.062291622161865
    10. ' process' → logprob: -7.187291622161865

Token 58: '_product' (ID: 21247)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.18970690667629242
    2. '(' → logprob: -3.064706802368164
    3. '_' → logprob: -3.564706802368164
    4. '_difference' → logprob: -4.064706802368164
    5. '_total' → logprob: -4.189706802368164
    6. '_average' → logprob: -4.689706802368164
    7. '_diff' → logprob: -5.064706802368164
    8. '_distance' → logprob: -5.064706802368164
    9. '_max' → logprob: -5.189706802368164
    10. '_frequency' → logprob: -5.564706802368164

Token 59: '(a' (ID: 6271)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.49835383892059326
    2. '(' → logprob: -1.2483538389205933
    3. '(s' → logprob: -3.248353958129883
    4. '(lst' → logprob: -3.498353958129883
    5. '(l' → logprob: -4.248353958129883
    6. '(n' → logprob: -4.998353958129883
    7. '(a' → logprob: -5.498353958129883
    8. '(ls' → logprob: -6.123353958129883
    9. '(nums' → logprob: -6.248353958129883
    10. '(numbers' → logprob: -6.373353958129883

Token 60: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0051310500130057335
    2. '):' → logprob: -5.880131244659424
    3. ',b' → logprob: -7.005131244659424
    4. ')' → logprob: -8.005130767822266
    5. 's' → logprob: -8.130130767822266
    6. ',a' → logprob: -8.380130767822266
    7. ' ,' → logprob: -8.630130767822266
    8. '[' → logprob: -9.005130767822266
    9. '_,' → logprob: -9.755130767822266
    10. ',n' → logprob: -10.505130767822266

Token 61: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.018184473738074303
    2. ' b' → logprob: -4.018184661865234
    3. '   ' → logprob: -10.893184661865234
    4. 'n' → logprob: -12.143184661865234
    5. ' ' → logprob: -12.393184661865234
    6. '    ' → logprob: -13.143184661865234
    7. ')' → logprob: -14.018184661865234
    8. ' n' → logprob: -14.643184661865234
    9. '  ' → logprob: -14.643184661865234
    10. 'k' → logprob: -14.768184661865234

Token 62: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -4.274932143744081e-05
    2. ')' → logprob: -10.500042915344238
    3. '):
' → logprob: -11.625042915344238
    4. ' ):' → logprob: -12.500042915344238
    5. ':' → logprob: -13.625042915344238
    6. '):
' → logprob: -15.250042915344238
    7. ',' → logprob: -15.750042915344238
    8. '   ' → logprob: -15.750042915344238
    9. '():' → logprob: -16.375041961669922
    10. '=' → logprob: -16.500041961669922

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05001294985413551
    2. ' return' → logprob: -3.6750130653381348
    3. 'return' → logprob: -4.050013065338135
    4. ':' → logprob: -5.800013065338135
    5. 'a' → logprob: -6.425013065338135
    6. ' a' → logprob: -7.300013065338135
    7. ':
' → logprob: -7.925013065338135
    8. ':return' → logprob: -8.550012588500977
    9. '(a' → logprob: -9.925012588500977
    10. '    ' → logprob: -10.300012588500977

Token 64: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2318931221961975
    2. 'return' (adapté à ' return') → logprob: -1.7318930625915527
    3. '   ' → logprob: -4.106893062591553
    4. ' a' → logprob: -4.481893062591553
    5. 'a' → logprob: -6.106893062591553
    6. '    ' → logprob: -11.106893539428711
    7. ' ' → logprob: -12.981893539428711
    8. '	return' → logprob: -13.856893539428711
    9. '    
' → logprob: -14.106893539428711
    10. '  ' → logprob: -14.731893539428711

Token 65: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5759415030479431
    2. ' a' → logprob: -0.8259415030479431
    3. '   ' → logprob: -13.95094108581543
    4. ' ' → logprob: -14.95094108581543
    5. '(a' → logprob: -15.07594108581543
    6. '1' → logprob: -15.32594108581543
    7. '	a' → logprob: -15.45094108581543
    8. '_a' → logprob: -17.32594108581543
    9. '  ' → logprob: -17.45094108581543
    10. ' ' → logprob: -17.57594108581543

Token 66: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.38688328862190247
    2. '*' → logprob: -1.13688325881958
    3. ' ' → logprob: -11.761883735656738
    4. '*b' → logprob: -13.386883735656738
    5. '**' → logprob: -14.011883735656738
    6. ' **' → logprob: -14.261883735656738
    7. ' ' → logprob: -14.761883735656738
    8. '_' → logprob: -15.261883735656738
    9. '`' → logprob: -16.011882781982422
    10. ')' → logprob: -16.011882781982422

Token 67: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0001584850688232109
    2. ' b' → logprob: -8.750158309936523
    3. '   ' → logprob: -20.500158309936523
    4. '	b' → logprob: -20.625158309936523
    5. ' ' → logprob: -21.625158309936523
    6. ')b' → logprob: -22.000158309936523
    7. '*b' → logprob: -22.500158309936523
    8. '  ' → logprob: -22.625158309936523
    9. '_b' → logprob: -23.000158309936523
    10. '```' → logprob: -23.125158309936523

Token 68: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.030860643833875656
    2. '<|end|>' → logprob: -3.780860662460327
    3. '

' → logprob: -5.780860424041748
    4. '\' → logprob: -6.780860424041748
    5. '(' → logprob: -7.030860424041748
    6. '<|end|>' → logprob: -7.155860424041748
    7. '()' → logprob: -7.905860424041748
    8. '\n' → logprob: -7.905860424041748
    9. '(def' → logprob: -8.405860900878906
    10. '
' → logprob: -8.530860900878906

Token 69: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002448893792461604
    2. '<|end|>' → logprob: -9.125245094299316
    3. '#' → logprob: -9.875245094299316
    4. '
' → logprob: -10.000245094299316
    5. '\' → logprob: -11.000245094299316
    6. '

' → logprob: -12.000245094299316
    7. '<|end|>' → logprob: -12.500245094299316
    8. ' def' → logprob: -12.625245094299316
    9. '\n' → logprob: -13.250245094299316
    10. '```' → logprob: -13.250245094299316

Token 70: ' add' (ID: 1147)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3530123829841614
    2. ' calculate' → logprob: -1.2280123233795166
    3. 'calculate' → logprob: -6.478012561798096
    4. ' multiply' → logprob: -6.603012561798096
    5. ' sum' → logprob: -7.853012561798096
    6. 'main' → logprob: -7.853012561798096
    7. ' solve' → logprob: -8.103012084960938
    8. ' get' → logprob: -8.103012084960938
    9. ' compute' → logprob: -9.353012084960938
    10. ' factorial' → logprob: -10.353012084960938

Token 71: '_to' (ID: 5089)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.06569645553827286
    2. '(' → logprob: -3.6906964778900146
    3. '_numbers' → logprob: -3.8156964778900146
    4. '_' → logprob: -4.1906962394714355
    5. ' (' → logprob: -8.440696716308594
    6. '(x' → logprob: -8.565696716308594
    7. '_product' → logprob: -8.815696716308594
    8. '(_' → logprob: -9.065696716308594
    9. '_two' → logprob: -9.190696716308594
    10. 'ition' → logprob: -9.565696716308594

Token 72: '_total' (ID: 23814)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.007690986152738333
    2. '_' → logprob: -5.007690906524658
    3. '_product' → logprob: -8.382691383361816
    4. '_array' → logprob: -8.882691383361816
    5. '_sum' → logprob: -9.132691383361816
    6. '_set' → logprob: -9.257691383361816
    7. '_dict' → logprob: -9.382691383361816
    8. 'list' → logprob: -10.132691383361816
    9. '_queue' → logprob: -10.382691383361816
    10. '_total' → logprob: -10.632691383361816

Token 73: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.014435910619795322
    2. '(' → logprob: -4.264435768127441
    3. ' (' → logprob: -9.264435768127441
    4. 'total' → logprob: -9.389435768127441
    5. '(amount' → logprob: -10.389435768127441
    6. '_total' → logprob: -10.889435768127441
    7. ' total' → logprob: -12.139435768127441
    8. '(s' → logprob: -12.139435768127441
    9. '(a' → logprob: -12.264435768127441
    10. '(value' → logprob: -12.514435768127441

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003003081073984504
    2. ' ,' → logprob: -8.125300407409668
    3. ',value' → logprob: -13.000300407409668
    4. ',total' → logprob: -13.625300407409668
    5. ',a' → logprob: -15.875300407409668
    6. ',item' → logprob: -16.25029945373535
    7. ',val' → logprob: -16.37529945373535
    8. ',num' → logprob: -16.75029945373535
    9. ',n' → logprob: -16.87529945373535
    10. ',int' → logprob: -17.00029945373535

Token 75: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.5771806240081787
    2. 'value' → logprob: -0.8271806240081787
    3. ' amount' → logprob: -7.702180862426758
    4. 'amount' → logprob: -7.702180862426758
    5. ' ' → logprob: -9.702180862426758
    6. '   ' → logprob: -10.077180862426758
    7. ' val' → logprob: -10.452180862426758
    8. ' number' → logprob: -10.452180862426758
    9. 'x' → logprob: -10.577180862426758
    10. 'val' → logprob: -10.952180862426758

Token 76: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010460281046107411
    2. '):
' → logprob: -6.876046180725098
    3. ' ):' → logprob: -11.751046180725098
    4. ')' → logprob: -13.001046180725098
    5. '):
' → logprob: -13.126046180725098
    6. '   ' → logprob: -14.376046180725098
    7. ':' → logprob: -15.251046180725098
    8. ' ' → logprob: -16.50104522705078
    9. '}:' → logprob: -16.87604522705078
    10. '):

' → logprob: -17.00104522705078

Token 77: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6224563717842102
    2. '   ' → logprob: -0.8724563717842102
    3. 'return' → logprob: -3.1224563121795654
    4. ' total' → logprob: -6.9974565505981445
    5. 'total' → logprob: -8.497456550598145
    6. '    ' → logprob: -8.997456550598145
    7. '    
' → logprob: -9.872456550598145
    8. ':return' → logprob: -10.747456550598145
    9. ':' → logprob: -10.872456550598145
    10. '	return' → logprob: -11.122456550598145

Token 78: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.13797208666801453
    2. '   ' → logprob: -2.137972116470337
    3. 'return' (adapté à ' return') → logprob: -4.512971878051758
    4. ' total' → logprob: -11.387971878051758
    5. '    ' → logprob: -12.387971878051758
    6. '	return' → logprob: -14.262971878051758
    7. 'total' → logprob: -15.262971878051758
    8. '    
' → logprob: -15.387971878051758
    9. '   ' → logprob: -15.387971878051758
    10. 'eturn' → logprob: -15.387971878051758

Token 79: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.10020741820335388
    2. 'total' → logprob: -2.3502073287963867
    3. ' ' → logprob: -15.350207328796387
    4. '(total' → logprob: -15.725207328796387
    5. ' ' → logprob: -15.850207328796387
    6. '	total' → logprob: -15.850207328796387
    7. '   ' → logprob: -15.975207328796387
    8. ' tot' → logprob: -18.600208282470703
    9. '$total' → logprob: -18.725208282470703
    10. '_total' → logprob: -19.100208282470703

Token 80: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07889287173748016
    2. '+' → logprob: -2.578892946243286
    3. ' plus' → logprob: -13.078892707824707
    4. ' ' → logprob: -14.453892707824707
    5. ' ' → logprob: -15.453892707824707
    6. ' +
' → logprob: -15.953892707824707
    7. ' +

' → logprob: -17.328893661499023
    8. '＋' → logprob: -17.453893661499023
    9. ' +=' → logprob: -18.078893661499023
    10. ' +
' → logprob: -18.078893661499023

Token 81: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.07888989895582199
    2. 'value' → logprob: -2.578889846801758
    3. '(value' → logprob: -16.953889846801758
    4. '	value' → logprob: -17.828889846801758
    5. ' ' → logprob: -17.953889846801758
    6. '    ' → logprob: -18.328889846801758
    7. ' ' → logprob: -18.453889846801758
    8. '"value' → logprob: -19.203889846801758
    9. '   ' → logprob: -19.453889846801758
    10. '.value' → logprob: -19.578889846801758

Token 82: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10236471146345139
    2. '

' → logprob: -2.3523647785186768
    3. '<|end|>' → logprob: -6.727364540100098
    4. '()

' → logprob: -7.602364540100098
    5. '
' → logprob: -8.602364540100098
    6. ' def' → logprob: -9.477364540100098
    7. '(def' → logprob: -9.977364540100098
    8. '(' → logprob: -9.977364540100098
    9. '<|end|>' → logprob: -10.477364540100098
    10. '```' → logprob: -10.602364540100098

Token 83: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.676981345459353e-06
    2. 'if' → logprob: -12.875005722045898
    3. '\' → logprob: -13.125005722045898
    4. '#' → logprob: -15.125005722045898
    5. 'n' → logprob: -16.0000057220459
    6. 'd' → logprob: -16.0000057220459
    7. 'for' → logprob: -16.0000057220459
    8. 'from' → logprob: -16.1250057220459
    9. '```' → logprob: -16.3750057220459
    10. '\n' → logprob: -17.1250057220459

Token 84: ' process' (ID: 2273)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.7156305909156799
    2. ' main' → logprob: -1.0906305313110352
    3. 'calculate' → logprob: -2.840630531311035
    4. ' sum' → logprob: -3.215630531311035
    5. ' multiply' → logprob: -3.840630531311035
    6. 'main' → logprob: -4.340630531311035
    7. 'sum' → logprob: -4.840630531311035
    8. ' compute' → logprob: -4.840630531311035
    9. ' accumulate' → logprob: -4.840630531311035
    10. ' process' → logprob: -5.715630531311035

Token 85: '_pair' (ID: 34819)
  Prédit: '_data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.7126393914222717
    2. '_list' → logprob: -1.712639331817627
    3. '_d' → logprob: -2.462639331817627
    4. '_input' → logprob: -2.962639331817627
    5. '_array' → logprob: -2.962639331817627
    6. '_items' → logprob: -3.462639331817627
    7. '_' → logprob: -3.837639331817627
    8. '(' → logprob: -4.087639331817627
    9. '_numbers' → logprob: -4.087639331817627
    10. '_values' → logprob: -4.212639331817627

Token 86: '(i' (ID: 3649)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.05248485505580902
    2. '(' → logprob: -3.5524847507476807
    3. ' (' → logprob: -3.8024847507476807
    4. '(pair' → logprob: -9.677484512329102
    5. '(p' → logprob: -9.802484512329102
    6. '(s' → logprob: -10.927484512329102
    7. ' ' → logprob: -11.427484512329102
    8. '(x' → logprob: -12.677484512329102
    9. '((' → logprob: -12.927484512329102
    10. '(i' → logprob: -13.052484512329102

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05490868538618088
    2. 'n' → logprob: -4.679908752441406
    3. 'x' → logprob: -4.679908752441406
    4. 'dx' → logprob: -4.804908752441406
    5. 'nt' → logprob: -5.179908752441406
    6. 'nd' → logprob: -5.429908752441406
    7. ' ,' → logprob: -5.679908752441406
    8. ')' → logprob: -5.804908752441406
    9. '):' → logprob: -6.054908752441406
    10. '1' → logprob: -6.304908752441406

Token 88: ' j' (ID: 441)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8529939651489258
    2. 'j' → logprob: -1.1029939651489258
    3. 'value' → logprob: -2.727993965148926
    4. ' j' → logprob: -2.852993965148926
    5. ' a' → logprob: -2.977993965148926
    6. ' value' → logprob: -3.727993965148926
    7. 'pair' → logprob: -4.227993965148926
    8. ' pair' → logprob: -4.602993965148926
    9. 'data' → logprob: -6.227993965148926
    10. 'arr' → logprob: -6.227993965148926

Token 89: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0001170132018160075
    2. ')' → logprob: -9.625117301940918
    3. ',' → logprob: -10.250117301940918
    4. ':' → logprob: -12.000117301940918
    5. ' ):' → logprob: -12.125117301940918
    6. '):
' → logprob: -13.125117301940918
    7. '():' → logprob: -14.625117301940918
    8. '   ' → logprob: -14.750117301940918
    9. '}:' → logprob: -15.250117301940918
    10. ''):' → logprob: -15.375117301940918

Token 90: ' d' (ID: 272)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -1.5998753309249878
    2. ' data' → logprob: -1.7248753309249878
    3. ' d' → logprob: -2.0998754501342773
    4. ' values' → logprob: -2.3498754501342773
    5. 'd' → logprob: -2.4748754501342773
    6. ' pairs' → logprob: -2.4748754501342773
    7. ' arr' → logprob: -3.0998754501342773
    8. ' pair' → logprob: -3.2248754501342773
    9. 'total' → logprob: -3.4748754501342773
    10. 'data' → logprob: -3.8498754501342773

Token 91: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03663962706923485
    2. '):
' → logprob: -3.41163969039917
    3. ',' → logprob: -6.53663969039917
    4. ')' → logprob: -7.53663969039917
    5. '_list' → logprob: -8.036639213562012
    6. '):
' → logprob: -9.036639213562012
    7. ' ):' → logprob: -9.161639213562012
    8. 'ist' → logprob: -9.536639213562012
    9. ':' → logprob: -9.661639213562012
    10. '):

' → logprob: -9.786639213562012

Token 92: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05394433066248894
    2. '   ' → logprob: -3.3039443492889404
    3. ':
' → logprob: -4.178944110870361
    4. '):' → logprob: -8.55394458770752
    5. ' :' → logprob: -9.30394458770752
    6. ',' → logprob: -9.92894458770752
    7. '       ' → logprob: -10.80394458770752
    8. ' :
' → logprob: -11.05394458770752
    9. '):
' → logprob: -11.30394458770752
    10. ' ' → logprob: -11.42894458770752

Token 93: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7182826995849609
    2. '   ' → logprob: -1.468282699584961
    3. ' if' → logprob: -2.593282699584961
    4. 'return' (adapté à ' return') → logprob: -2.718282699584961
    5. ' total' → logprob: -2.843282699584961
    6. ' result' → logprob: -3.218282699584961
    7. 'result' → logprob: -4.593282699584961
    8. 'total' → logprob: -4.843282699584961
    9. ' product' → logprob: -4.968282699584961
    10. 'if' → logprob: -4.968282699584961

Token 94: ' calculate' (ID: 17950)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3620229661464691
    2. ' d' → logprob: -1.3620229959487915
    3. 'calculate' → logprob: -3.612022876739502
    4. '(d' → logprob: -4.987022876739502
    5. ' calculate' → logprob: -5.237022876739502
    6. 'i' → logprob: -6.112022876739502
    7. '(i' → logprob: -6.862022876739502
    8. ' i' → logprob: -6.862022876739502
    9. ' (' → logprob: -6.987022876739502
    10. 'abs' → logprob: -6.987022876739502

Token 95: '_product' (ID: 21247)
  Prédit: '_product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_product' → logprob: -7.226628895296017e-06
    2. 'product' → logprob: -12.125007629394531
    3. 'Product' → logprob: -14.625007629394531
    4. 'd' → logprob: -14.875007629394531
    5. '_' → logprob: -15.250007629394531
    6. '_products' → logprob: -15.375007629394531
    7. 's' → logprob: -15.875007629394531
    8. '_pro' → logprob: -16.37500762939453
    9. '(product' → logprob: -17.12500762939453
    10. '_d' → logprob: -17.87500762939453

Token 96: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.00997516792267561
    2. '(i' → logprob: -4.634974956512451
    3. '(' → logprob: -8.50997543334961
    4. 'd' → logprob: -11.50997543334961
    5. '((' → logprob: -12.50997543334961
    6. ' (' → logprob: -13.38497543334961
    7. '(
' → logprob: -13.63497543334961
    8. '(j' → logprob: -15.25997543334961
    9. ' d' → logprob: -15.63497543334961
    10. '(D' → logprob: -15.63497543334961

Token 97: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00016468366084154695
    2. '[' → logprob: -9.000164985656738
    3. '[j' → logprob: -10.500164985656738
    4. ' [' → logprob: -12.625164985656738
    5. 'i' → logprob: -12.875164985656738
    6. '[
' → logprob: -13.750164985656738
    7. '```' → logprob: -13.750164985656738
    8. ')[' → logprob: -14.250164985656738
    9. '(i' → logprob: -14.250164985656738
    10. '[I' → logprob: -14.375164985656738

Token 98: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.001255230512470007
    2. ',' → logprob: -7.126255035400391
    3. ']' → logprob: -8.50125503540039
    4. ' ],' → logprob: -9.37625503540039
    5. '[j' → logprob: -9.50125503540039
    6. '[' → logprob: -11.00125503540039
    7. ''],' → logprob: -11.12625503540039
    8. '][' → logprob: -11.50125503540039
    9. ' ' → logprob: -11.62625503540039
    10. '],[' → logprob: -11.75125503540039

Token 99: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2814605236053467
    2. ' d' → logprob: -1.4064605236053467
    3. '   ' → logprob: -8.531460762023926
    4. ' ' → logprob: -9.906460762023926
    5. '  ' → logprob: -10.156460762023926
    6. '    ' → logprob: -11.531460762023926
    7. '	d' → logprob: -11.781460762023926
    8. ' ' → logprob: -12.656460762023926
    9. ')d' → logprob: -14.031460762023926
    10. '(d' → logprob: -14.406460762023926

Token 100: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0004131536406930536
    2. '])' → logprob: -8.750412940979004
    3. '[' → logprob: -9.500412940979004
    4. ']' → logprob: -9.625412940979004
    5. '],' → logprob: -10.125412940979004
    6. 'j' → logprob: -10.375412940979004
    7. ')' → logprob: -11.625412940979004
    8. '][' → logprob: -11.750412940979004
    9. ' [' → logprob: -12.125412940979004
    10. ',j' → logprob: -12.375412940979004

Token 101: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.162090465426445
    2. '])' → logprob: -1.9120904207229614
    3. '})' → logprob: -6.787090301513672
    4. '))' → logprob: -7.412090301513672
    5. ')
' → logprob: -10.662090301513672
    6. '>)' → logprob: -10.787090301513672
    7. ''])' → logprob: -11.037090301513672
    8. ' )' → logprob: -11.287090301513672
    9. ')])' → logprob: -11.412090301513672
    10. '),' → logprob: -11.537090301513672

Token 102: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1403304785490036
    2. '<|end|>' → logprob: -2.1403305530548096
    3. '
' → logprob: -4.8903303146362305
    4. '

' → logprob: -5.5153303146362305
    5. '<|end|>' → logprob: -6.6403303146362305
    6. '```' → logprob: -9.26533031463623
    7. '+' → logprob: -9.39033031463623
    8. '\' → logprob: -9.76533031463623
    9. 'for' → logprob: -10.01533031463623
    10. ' def' → logprob: -10.14033031463623

Token 103: ' loop' (ID: 11453)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3152856230735779
    2. ' process' → logprob: -1.6902856826782227
    3. 'main' → logprob: -3.8152856826782227
    4. ' sum' → logprob: -3.9402856826782227
    5. 'process' → logprob: -3.9402856826782227
    6. ' calculate' → logprob: -4.565285682678223
    7. ' find' → logprob: -5.940285682678223
    8. 'sum' → logprob: -6.190285682678223
    9. ' compute' → logprob: -6.190285682678223
    10. ' solve' → logprob: -6.315285682678223

Token 104: '_inner' (ID: 81672)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.6832001805305481
    2. '(' → logprob: -1.0582001209259033
    3. '(n' → logprob: -2.1832001209259033
    4. '(for' → logprob: -4.933200359344482
    5. '_over' → logprob: -5.183200359344482
    6. ' (' → logprob: -5.433200359344482
    7. ' for' → logprob: -5.558200359344482
    8. 'for' → logprob: -5.808200359344482
    9. '_for' → logprob: -6.058200359344482
    10. '(range' → logprob: -6.558200359344482

Token 105: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0018449827330186963
    2. '(' → logprob: -6.626844882965088
    3. '(d' → logprob: -8.001845359802246
    4. '(n' → logprob: -9.876845359802246
    5. '(for' → logprob: -10.876845359802246
    6. ' (' → logprob: -11.001845359802246
    7. '(range' → logprob: -11.001845359802246
    8. '(def' → logprob: -11.001845359802246
    9. '(j' → logprob: -11.126845359802246
    10. 'def' → logprob: -11.126845359802246

Token 106: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002661147154867649
    2. ' ,' → logprob: -6.127661228179932
    3. ',j' → logprob: -8.252660751342773
    4. '+' → logprob: -9.627660751342773
    5. '   ' → logprob: -10.002660751342773
    6. ',n' → logprob: -10.252660751342773
    7. ' +' → logprob: -11.002660751342773
    8. '+,' → logprob: -11.502660751342773
    9. ' j' → logprob: -12.252660751342773
    10. ',i' → logprob: -12.252660751342773

Token 107: ' N' (ID: 478)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.9588718414306641
    2. ' j' → logprob: -1.208871841430664
    3. 'n' → logprob: -2.083871841430664
    4. ' n' → logprob: -2.208871841430664
    5. 'd' → logprob: -3.708871841430664
    6. ' range' → logprob: -3.833871841430664
    7. 'range' → logprob: -3.958871841430664
    8. ' d' → logprob: -4.333871841430664
    9. '   ' → logprob: -6.458871841430664
    10. 'N' → logprob: -6.708871841430664

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001252134912647307
    2. '):' → logprob: -8.001252174377441
    3. ' ,' → logprob: -8.001252174377441
    4. '   ' → logprob: -8.626252174377441
    5. ',j' → logprob: -8.626252174377441
    6. '):
' → logprob: -8.751252174377441
    7. '-' → logprob: -10.501252174377441
    8. ',
' → logprob: -11.876252174377441
    9. '+' → logprob: -12.501252174377441
    10. '    ' → logprob: -12.626252174377441

Token 109: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.027111291885376
    2. ' d' → logprob: -1.027111291885376
    3. 'j' → logprob: -1.902111291885376
    4. ' j' → logprob: -2.027111291885376
    5. '   ' → logprob: -6.777111053466797
    6. ' ' → logprob: -8.027111053466797
    7. 'def' → logprob: -8.839611053466797
    8. 'N' → logprob: -8.839611053466797
    9. ' N' → logprob: -8.839611053466797
    10. ')' → logprob: -8.902111053466797

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.035985615104436874
    2. '):
' → logprob: -3.5359857082366943
    3. '):' → logprob: -5.160985469818115
    4. '   ' → logprob: -7.910985469818115
    5. '):
' → logprob: -10.035985946655273
    6. ' ,' → logprob: -10.035985946655273
    7. ',j' → logprob: -11.410985946655273
    8. '):

' → logprob: -12.660985946655273
    9. ')' → logprob: -12.785985946655273
    10. ',i' → logprob: -13.285985946655273

Token 111: ' current' (ID: 2208)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.8318398594856262
    2. 'total' → logprob: -0.8318398594856262
    3. 'j' → logprob: -2.5818397998809814
    4. ' j' → logprob: -3.3318397998809814
    5. '   ' → logprob: -4.7068400382995605
    6. 'result' → logprob: -6.5818400382995605
    7. ' loop' → logprob: -6.7068400382995605
    8. 'acc' → logprob: -6.8318400382995605
    9. ' result' → logprob: -6.8318400382995605
    10. ' ' → logprob: -7.0818400382995605

Token 112: '_res' (ID: 10626)
  Prédit: '_total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.07021506875753403
    2. '_sum' → logprob: -2.8202149868011475
    3. ',' → logprob: -5.820215225219727
    4. '_value' → logprob: -5.945215225219727
    5. 'total' → logprob: -6.320215225219727
    6. '_result' → logprob: -8.445215225219727
    7. 'Total' → logprob: -8.945215225219727
    8. ',total' → logprob: -9.070215225219727
    9. ' total' → logprob: -9.570215225219727
    10. 'sum' → logprob: -10.070215225219727

Token 113: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4707871377468109
    2. '):' → logprob: -1.3457871675491333
    3. '):
' → logprob: -2.2207870483398438
    4. 'ult' → logprob: -5.345787048339844
    5. '   ' → logprob: -7.595787048339844
    6. '):

' → logprob: -7.720787048339844
    7. 't' → logprob: -8.095787048339844
    8. 'ault' → logprob: -8.845787048339844
    9. ' ,' → logprob: -9.470787048339844
    10. 'ent' → logprob: -9.720787048339844

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0187272597104311
    2. ':' → logprob: -4.8937273025512695
    3. 'for' → logprob: -5.3937273025512695
    4. ' for' → logprob: -5.6437273025512695
    5. '	for' → logprob: -6.3937273025512695
    6. ':
' → logprob: -7.5187273025512695
    7. '       ' → logprob: -9.01872730255127
    8. ',' → logprob: -9.01872730255127
    9. '
' → logprob: -9.14372730255127
    10. '```' → logprob: -9.39372730255127

Token 115: ' j' (ID: 441)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2652372717857361
    2. '   ' → logprob: -2.140237331390381
    3. ' for' → logprob: -2.765237331390381
    4. 'if' → logprob: -3.015237331390381
    5. ' if' → logprob: -6.015237331390381
    6. 'while' → logprob: -7.890237331390381
    7. 'j' (adapté à ' j') → logprob: -8.015236854553223
    8. '```' → logprob: -9.140236854553223
    9. ' while' → logprob: -10.765236854553223
    10. 'current' → logprob: -11.265236854553223

Token 116: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3872781991958618
    2. ' =' → logprob: -1.1372781991958618
    3. ' in' → logprob: -8.01227855682373
    4. 'range' → logprob: -10.63727855682373
    5. 'in' → logprob: -11.01227855682373
    6. ' range' → logprob: -11.26227855682373
    7. '=i' → logprob: -11.76227855682373
    8. 'for' → logprob: -12.26227855682373
    9. ' ' → logprob: -13.26227855682373
    10. ' for' → logprob: -13.51227855682373

Token 117: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.012811693362891674
    2. ' i' → logprob: -4.387811660766602
    3. '0' → logprob: -8.137811660766602
    4. '   ' → logprob: -12.012811660766602
    5. '(i' → logprob: -13.512811660766602
    6. '	i' → logprob: -13.762811660766602
    7. ' ' → logprob: -15.137811660766602
    8. '1' → logprob: -15.262811660766602
    9. ' =' → logprob: -16.3878116607666
    10. 'j' → logprob: -16.6378116607666

Token 118: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759447813034058
    2. '+' → logprob: -0.8259447813034058
    3. '1' → logprob: -13.575944900512695
    4. '   ' → logprob: -13.700944900512695
    5. ' plus' → logprob: -14.325944900512695
    6. '+j' → logprob: -14.575944900512695
    7. '+
' → logprob: -14.700944900512695
    8. '<|end|>' → logprob: -14.825944900512695
    9. ' +
' → logprob: -15.700944900512695
    10. '<|end|>' → logprob: -15.825944900512695

Token 119: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017035098280757666
    2. ' ' → logprob: -6.37670373916626
    3. '   ' → logprob: -13.626703262329102
    4. '<|end|>' → logprob: -17.1267032623291
    5. '    ' → logprob: -17.6267032623291
    6. '  ' → logprob: -18.5017032623291
    7. '	' → logprob: -18.8767032623291
    8. '
' → logprob: -18.8767032623291
    9. '```' → logprob: -19.0017032623291
    10. '0' → logprob: -19.2517032623291

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5332478142227046e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -15.625015258789062
    4. '2' → logprob: -15.625015258789062
    5. '```' → logprob: -16.500015258789062
    6. 'def' → logprob: -17.625015258789062
    7. '<|end|>' → logprob: -17.625015258789062
    8. '0' → logprob: -17.875015258789062
    9. '  ' → logprob: -18.250015258789062
    10. '
' → logprob: -18.750015258789062

Token 121: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04947713389992714
    2. 'while' → logprob: -3.0494771003723145
    3. ' while' → logprob: -7.1744771003723145
    4. '<|end|>' → logprob: -9.924477577209473
    5. '	while' → logprob: -11.174477577209473
    6. ' 
' → logprob: -11.174477577209473
    7. '  
' → logprob: -11.299477577209473
    8. '    
' → logprob: -11.424477577209473
    9. '
' → logprob: -12.174477577209473
    10. 'While' → logprob: -12.299477577209473

Token 122: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2566830813884735
    2. '
' → logprob: -1.631683111190796
    3. ' while' → logprob: -3.506683111190796
    4. '   ' → logprob: -7.506682872772217
    5. '	while' → logprob: -9.381683349609375
    6. '    
' → logprob: -9.881683349609375
    7. '<|end|>' → logprob: -10.131683349609375
    8. ' 
' → logprob: -11.131683349609375
    9. 'While' → logprob: -11.131683349609375
    10. '  
' → logprob: -11.256683349609375

Token 123: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.09001149237155914
    2. ' while' → logprob: -2.4650115966796875
    3. '
' → logprob: -7.3400115966796875
    4. '   ' → logprob: -7.8400115966796875
    5. '	while' → logprob: -11.215011596679688
    6. 'def' → logprob: -11.840011596679688
    7. ' ' → logprob: -12.965011596679688
    8. 'if' → logprob: -13.965011596679688
    9. ',' → logprob: -14.090011596679688
    10. '```' → logprob: -14.215011596679688

Token 124: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.38688334822654724
    2. 'j' → logprob: -1.1368833780288696
    3. '   ' → logprob: -12.136883735656738
    4. '(j' → logprob: -12.386883735656738
    5. '	j' → logprob: -13.386883735656738
    6. '    ' → logprob: -14.511883735656738
    7. ' ' → logprob: -15.261883735656738
    8. '$j' → logprob: -15.386883735656738
    9. '[j' → logprob: -16.011882781982422
    10. ' ' → logprob: -16.136882781982422

Token 125: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.22681795060634613
    2. '<' → logprob: -1.6018179655075073
    3. '<N' → logprob: -6.601818084716797
    4. '<n' → logprob: -10.476818084716797
    5. ' ' → logprob: -11.726818084716797
    6. '<len' → logprob: -12.226818084716797
    7. ' <=' → logprob: -13.351818084716797
    8. '<=' → logprob: -13.976818084716797
    9. '<size' → logprob: -14.726818084716797
    10. '[' → logprob: -15.226818084716797

Token 126: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.01815052703022957
    2. ' N' → logprob: -4.018150329589844
    3. '   ' → logprob: -15.393150329589844
    4. 'len' → logprob: -15.643150329589844
    5. ' ' → logprob: -16.143150329589844
    6. '	N' → logprob: -16.518150329589844
    7. ' len' → logprob: -16.893150329589844
    8. 'n' → logprob: -17.393150329589844
    9. '(N' → logprob: -17.768150329589844
    10. '>N' → logprob: -17.893150329589844

Token 127: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4743114113807678
    2. ':
' → logprob: -0.9743114113807678
    3. '   ' → logprob: -9.099311828613281
    4. ' and' → logprob: -10.349311828613281
    5. ':

' → logprob: -10.474311828613281
    6. '       ' → logprob: -10.974311828613281
    7. '):
' → logprob: -11.099311828613281
    8. ' :
' → logprob: -11.349311828613281
    9. ',' → logprob: -12.474311828613281
    10. 'and' → logprob: -12.974311828613281

Token 128: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2703763246536255
    2. 'current' → logprob: -1.7703763246536255
    3. ' current' → logprob: -2.770376205444336
    4. '
' → logprob: -5.895376205444336
    5. '   ' → logprob: -7.395376205444336
    6. ',current' → logprob: -8.645376205444336
    7. '	current' → logprob: -9.020376205444336
    8. ',' → logprob: -9.520376205444336
    9. 'result' → logprob: -9.895376205444336
    10. '(current' → logprob: -10.520376205444336

Token 129: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.6732131838798523
    2. 'current' (adapté à ' current') → logprob: -0.9232131838798523
    3. '       ' → logprob: -2.423213243484497
    4. '
' → logprob: -6.298213005065918
    5. 'result' → logprob: -7.173213005065918
    6. '           ' → logprob: -7.923213005065918
    7. ' if' → logprob: -8.548213005065918
    8. '   ' → logprob: -8.548213005065918
    9. ' result' → logprob: -8.923213005065918
    10. 'if' → logprob: -9.048213005065918

Token 130: '_res' (ID: 10626)
  Prédit: '_res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_res' → logprob: -1.7432603272027336e-06
    2. 'res' → logprob: -14.000001907348633
    3. '_result' → logprob: -14.750001907348633
    4. '_' → logprob: -15.250001907348633
    5. '   ' → logprob: -16.375001907348633
    6. ' _' → logprob: -16.875001907348633
    7. '
' → logprob: -18.125001907348633
    8. '_value' → logprob: -18.125001907348633
    9. '	res' → logprob: -18.750001907348633
    10. '_val' → logprob: -19.125001907348633

Token 131: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48913297057151794
    2. ' +=' → logprob: -0.9891330003738403
    3. '=' → logprob: -4.364132881164551
    4. '+=' → logprob: -6.114132881164551
    5. ' ' → logprob: -12.48913288116455
    6. '+' → logprob: -14.11413288116455
    7. ' +' → logprob: -14.86413288116455
    8. '   ' → logprob: -15.36413288116455
    9. ' *=' → logprob: -15.48913288116455
    10. '```' → logprob: -16.364133834838867

Token 132: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.0037447367794811726
    2. ' add' → logprob: -5.878744602203369
    3. 'max' → logprob: -7.003744602203369
    4. ' max' → logprob: -11.003745079040527
    5. '   ' → logprob: -12.128745079040527
    6. 'process' → logprob: -12.128745079040527
    7. '	add' → logprob: -13.878745079040527
    8. 'loop' → logprob: -14.128745079040527
    9. ' ' → logprob: -14.628745079040527
    10. 'current' → logprob: -15.003745079040527

Token 133: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.0280383548888494e-06
    2. 'To' → logprob: -15.250000953674316
    3. '_' → logprob: -15.375000953674316
    4. '(current' → logprob: -16.250001907348633
    5. 'to' → logprob: -16.625001907348633
    6. '(_' → logprob: -17.125001907348633
    7. '(' → logprob: -17.250001907348633
    8. '```' → logprob: -17.250001907348633
    9. '   ' → logprob: -17.500001907348633
    10. 'toc' → logprob: -17.750001907348633

Token 134: '_total' (ID: 23814)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.018527166917920113
    2. '_total' → logprob: -4.018527030944824
    3. 'otal' → logprob: -7.893527030944824
    4. ' total' → logprob: -12.643527030944824
    5. 'Total' → logprob: -14.268527030944824
    6. '	total' → logprob: -16.01852798461914
    7. 't' → logprob: -16.64352798461914
    8. 'current' → logprob: -17.26852798461914
    9. '(total' → logprob: -17.64352798461914
    10. 'tot' → logprob: -17.64352798461914

Token 135: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.00319482758641243
    2. '(' → logprob: -5.753194808959961
    3. 'current' → logprob: -11.378194808959961
    4. '(
' → logprob: -12.128194808959961
    5. ' current' → logprob: -16.75319480895996
    6. '(cur' → logprob: -17.25319480895996
    7. ',current' → logprob: -17.37819480895996
    8. '(

' → logprob: -17.75319480895996
    9. ' (' → logprob: -17.87819480895996
    10. '(
' → logprob: -18.37819480895996

Token 136: '_res' (ID: 10626)
  Prédit: '_res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_res' → logprob: -0.00014168102643452585
    2. 'res' → logprob: -8.875142097473145
    3. '(res' → logprob: -15.000142097473145
    4. ',' → logprob: -15.250142097473145
    5. 'Res' → logprob: -15.250142097473145
    6. '   ' → logprob: -15.625142097473145
    7. 's' → logprob: -15.750142097473145
    8. '	res' → logprob: -16.125141143798828
    9. '_result' → logprob: -16.250141143798828
    10. '
' → logprob: -16.625141143798828

Token 137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016018765047192574
    2. 'process' → logprob: -4.641018867492676
    3. '(process' → logprob: -5.516018867492676
    4. ' process' → logprob: -6.266018867492676
    5. ' ,' → logprob: -8.141018867492676
    6. '(' → logprob: -11.266018867492676
    7. '   ' → logprob: -12.766018867492676
    8. ' +' → logprob: -12.891018867492676
    9. ',
' → logprob: -12.891018867492676
    10. '.process' → logprob: -13.016018867492676

Token 138: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.07889275997877121
    2. ' process' → logprob: -2.578892707824707
    3. '(process' → logprob: -12.953892707824707
    4. '	process' → logprob: -15.078892707824707
    5. 'proces' → logprob: -16.328893661499023
    6. '   ' → logprob: -16.453893661499023
    7. '.process' → logprob: -16.453893661499023
    8. ' proces' → logprob: -16.578893661499023
    9. 'rocess' → logprob: -17.078893661499023
    10. 'calculate' → logprob: -18.328893661499023

Token 139: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -1.8624639324116288e-06
    2. 'pair' → logprob: -13.375001907348633
    3. '_pairs' → logprob: -16.750001907348633
    4. '```' → logprob: -17.125001907348633
    5. '(pair' → logprob: -17.250001907348633
    6. '_' → logprob: -17.375001907348633
    7. ' pair' → logprob: -17.750001907348633
    8. '
' → logprob: -18.000001907348633
    9. '_PAIR' → logprob: -18.125001907348633
    10. '_partner' → logprob: -18.250001907348633

Token 140: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0005551783833652735
    2. '(' → logprob: -7.500555038452148
    3. '(j' → logprob: -13.500555038452148
    4. ' (' → logprob: -14.375555038452148
    5. '(
' → logprob: -15.500555038452148
    6. ')' → logprob: -16.87555503845215
    7. '(ii' → logprob: -19.00055503845215
    8. '(index' → logprob: -19.37555503845215
    9. '(I' → logprob: -19.62555503845215
    10. ' ' → logprob: -19.75055503845215

Token 141: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022690063633490354
    2. ',j' → logprob: -8.500226974487305
    3. ' ,' → logprob: -10.750226974487305
    4. '   ' → logprob: -14.125226974487305
    5. ',
' → logprob: -14.250226974487305
    6. 'j' → logprob: -15.625226974487305
    7. '```' → logprob: -16.375226974487305
    8. '',' → logprob: -16.875226974487305
    9. ')' → logprob: -17.000226974487305
    10. '
' → logprob: -17.500226974487305

Token 142: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0008077251841314137
    2. ' j' → logprob: -7.125807762145996
    3. '   ' → logprob: -12.875807762145996
    4. '<|end|>' → logprob: -15.375807762145996
    5. '	j' → logprob: -15.875807762145996
    6. '    ' → logprob: -16.50080680847168
    7. ')' → logprob: -16.50080680847168
    8. ' ' → logprob: -16.62580680847168
    9. '       ' → logprob: -17.75080680847168
    10. '  ' → logprob: -17.75080680847168

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013786651834379882
    2. ' ,' → logprob: -9.625138282775879
    3. ',d' → logprob: -9.625138282775879
    4. 'd' → logprob: -12.375138282775879
    5. '   ' → logprob: -14.500138282775879
    6. ',
' → logprob: -15.500138282775879
    7. '```' → logprob: -16.125137329101562
    8. '),' → logprob: -16.250137329101562
    9. '_,' → logprob: -16.750137329101562
    10. '`,' → logprob: -16.750137329101562

Token 144: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.12693189084529877
    2. 'd' → logprob: -2.12693190574646
    3. ')d' → logprob: -13.501932144165039
    4. ')' → logprob: -13.876932144165039
    5. ' ' → logprob: -14.251932144165039
    6. '	d' → logprob: -15.126932144165039
    7. ' ' → logprob: -15.626932144165039
    8. '_d' → logprob: -16.00193214416504
    9. ',' → logprob: -16.00193214416504
    10. ',d' → logprob: -17.00193214416504

Token 145: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.08017989248037338
    2. '))' → logprob: -2.5801799297332764
    3. '       ' → logprob: -6.830179691314697
    4. ')' → logprob: -9.330180168151855
    5. '))
' → logprob: -9.830180168151855
    6. ')
' → logprob: -10.330180168151855
    7. '   ' → logprob: -10.830180168151855
    8. '))

' → logprob: -12.205180168151855
    9. ' ))
' → logprob: -12.580180168151855
    10. '           ' → logprob: -13.330180168151855

Token 146: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031470584217458963
    2. '
' → logprob: -5.878147125244141
    3. '   ' → logprob: -8.87814712524414
    4. 'j' → logprob: -8.87814712524414
    5. ' j' → logprob: -10.25314712524414
    6. '        
' → logprob: -11.12814712524414
    7. '  
' → logprob: -13.25314712524414
    8. '	' → logprob: -13.37814712524414
    9. '    
' → logprob: -13.50314712524414
    10. ' ' → logprob: -13.62814712524414

Token 147: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.14375342428684235
    2. '       ' → logprob: -2.1437535285949707
    3. ' j' → logprob: -4.643753528594971
    4. '   ' → logprob: -5.018753528594971
    5. '
' → logprob: -7.893753528594971
    6. '        
' → logprob: -11.143753051757812
    7. '	j' → logprob: -11.143753051757812
    8. '           ' → logprob: -11.268753051757812
    9. ' ' → logprob: -11.893753051757812
    10. '     ' → logprob: -12.268753051757812

Token 148: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10070951282978058
    2. ' +=' → logprob: -2.3507094383239746
    3. '+' → logprob: -7.850709438323975
    4. '=' → logprob: -9.100709915161133
    5. '++' → logprob: -14.725709915161133
    6. '   ' → logprob: -15.100709915161133
    7. ' +' → logprob: -15.225709915161133
    8. '+="' → logprob: -15.600709915161133
    9. ']+=' → logprob: -15.725709915161133
    10. '+='' → logprob: -15.975709915161133

Token 149: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -18.500009536743164
    4. '```' → logprob: -19.500009536743164
    5. '１' → logprob: -21.250009536743164
    6. '2' → logprob: -21.875009536743164
    7. '  ' → logprob: -22.000009536743164
    8. '۱' → logprob: -22.312509536743164
    9. '
' → logprob: -22.375009536743164
    10. ' ' → logprob: -22.437509536743164

Token 150: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '```' → logprob: -17.750001907348633
    4. '   ' → logprob: -18.625001907348633
    5. '１' → logprob: -18.687501907348633
    6. '
' → logprob: -19.125001907348633
    7. '۱' → logprob: -20.250001907348633
    8. '  ' → logprob: -20.562501907348633
    9. '2' → logprob: -21.062501907348633
    10. '१' → logprob: -21.062501907348633

Token 151: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006167700630612671
    2. 'return' → logprob: -7.750616550445557
    3. ' return' → logprob: -8.875617027282715
    4. 'def' → logprob: -10.125617027282715
    5. '	return' → logprob: -12.375617027282715
    6. '
' → logprob: -14.625617027282715
    7. '       ' → logprob: -14.875617027282715
    8. '<|end|>' → logprob: -14.875617027282715
    9. '    
' → logprob: -15.125617027282715
    10. ' ' → logprob: -16.0006160736084

Token 152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009075401350855827
    2. 'def' → logprob: -5.134075164794922
    3. 'return' → logprob: -5.884075164794922
    4. ' return' → logprob: -8.009075164794922
    5. ' def' → logprob: -11.259075164794922
    6. '	return' → logprob: -11.884075164794922
    7. '       ' → logprob: -13.259075164794922
    8. '```' → logprob: -13.509075164794922
    9. ' ' → logprob: -13.759075164794922
    10. '
' → logprob: -14.384075164794922

Token 153: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08314046263694763
    2. '   ' → logprob: -2.5831403732299805
    3. ' return' → logprob: -5.8331403732299805
    4. 'def' → logprob: -6.7081403732299805
    5. '	return' → logprob: -9.58314037322998
    6. '
' → logprob: -11.08314037322998
    7. ' ' → logprob: -12.70814037322998
    8. '```' → logprob: -13.95814037322998
    9. '    
' → logprob: -14.20814037322998
    10. '       ' → logprob: -14.45814037322998

Token 154: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.02975071594119072
    2. ' current' → logprob: -3.5297508239746094
    3. '(current' → logprob: -16.52975082397461
    4. '	current' → logprob: -17.52975082397461
    5. '$current' → logprob: -17.90475082397461
    6. '_current' → logprob: -18.40475082397461
    7. '   ' → logprob: -18.77975082397461
    8. ' ' → logprob: -18.77975082397461
    9. ',current' → logprob: -19.15475082397461
    10. '[current' → logprob: -19.15475082397461

Token 155: '_res' (ID: 10626)
  Prédit: '_res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_res' → logprob: -1.0280383548888494e-06
    2. 'res' → logprob: -14.000000953674316
    3. '_result' → logprob: -17.000001907348633
    4. '_r' → logprob: -17.750001907348633
    5. ' _' → logprob: -17.875001907348633
    6. '_re' → logprob: -20.000001907348633
    7. '_' → logprob: -20.375001907348633
    8. '_ref' → logprob: -20.375001907348633
    9. 's' → logprob: -20.500001907348633
    10. '_results' → logprob: -20.875001907348633

Token 156: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012250149622559547
    2. '
' → logprob: -4.512249946594238
    3. '

' → logprob: -6.887249946594238
    4. '<|end|>' → logprob: -8.762249946594238
    5. '<|end|>' → logprob: -11.762249946594238
    6. '  
' → logprob: -12.012249946594238
    7. '    
' → logprob: -13.012249946594238
    8. ' def' → logprob: -13.012249946594238
    9. '
' → logprob: -13.262249946594238
    10. '```' → logprob: -13.262249946594238

Token 157: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: 0.0
    2. 'N' → logprob: -17.5
    3. '<|end|>' → logprob: -18.25
    4. 'for' → logprob: -18.5
    5. '```' → logprob: -18.625
    6. ' def' → logprob: -18.625
    7. '#' → logprob: -19.25
    8. 'ndef' → logprob: -19.375
    9. '    
' → logprob: -19.625
    10. '  
' → logprob: -20.0

Token 158: ' compute' (ID: 23864)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.3350410461425781
    2. ' loop' → logprob: -1.7100410461425781
    3. 'main' → logprob: -2.835041046142578
    4. ' main' → logprob: -3.460041046142578
    5. 'process' → logprob: -5.460041046142578
    6. 'solve' → logprob: -6.210041046142578
    7. 'compute' → logprob: -6.460041046142578
    8. 'calculate' → logprob: -6.585041046142578
    9. ' process' → logprob: -7.210041046142578
    10. 'outer' → logprob: -7.335041046142578

Token 159: '_result' (ID: 11623)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.64305579662323
    2. '_total' → logprob: -1.01805579662323
    3. '_sum' → logprob: -3.2680559158325195
    4. '_result' → logprob: -3.5180559158325195
    5. '():' → logprob: -3.8930559158325195
    6. '(N' → logprob: -4.5180559158325195
    7. '(' → logprob: -5.2680559158325195
    8. '(n' → logprob: -6.2680559158325195
    9. 'max' → logprob: -6.5180559158325195
    10. '(max' → logprob: -6.6430559158325195

Token 160: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.06789238750934601
    2. '(n' → logprob: -2.81789231300354
    3. '():' → logprob: -5.442892551422119
    4. '(' → logprob: -6.567892551422119
    5. ' (' → logprob: -9.192892074584961
    6. '():
' → logprob: -10.067892074584961
    7. '()' → logprob: -11.067892074584961
    8. ' ():' → logprob: -12.692892074584961
    9. '(
' → logprob: -13.192892074584961
    10. '()(' → logprob: -13.317892074584961

Token 161: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.895480277715251e-06
    2. ',d' → logprob: -11.875008583068848
    3. ' ,' → logprob: -13.250008583068848
    4. ',
' → logprob: -16.250009536743164
    5. 'd' → logprob: -16.875009536743164
    6. '   ' → logprob: -18.625009536743164
    7. '):' → logprob: -18.875009536743164
    8. '_,' → logprob: -19.250009536743164
    9. ',

' → logprob: -19.625009536743164
    10. '):
' → logprob: -19.750009536743164

Token 162: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.023246292024850845
    2. ' d' → logprob: -3.7732462882995605
    3. '   ' → logprob: -15.648246765136719
    4. 'D' → logprob: -15.648246765136719
    5. ')' → logprob: -15.898246765136719
    6. ')d' → logprob: -16.14824676513672
    7. 'def' → logprob: -16.39824676513672
    8. 'N' → logprob: -16.52324676513672
    9. ' ' → logprob: -16.89824676513672
    10. '```' → logprob: -17.52324676513672

Token 163: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.49808987975120544
    2. '):
' → logprob: -0.9980899095535278
    3. ',' → logprob: -3.7480897903442383
    4. '   ' → logprob: -9.498089790344238
    5. '):
' → logprob: -9.873089790344238
    6. ')' → logprob: -10.623089790344238
    7. '):

' → logprob: -12.123089790344238
    8. ':' → logprob: -12.498089790344238
    9. '  ' → logprob: -14.248089790344238
    10. ',current' → logprob: -14.248089790344238

Token 164: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015362853882834315
    2. 'current' → logprob: -7.0015363693237305
    3. ' current' → logprob: -8.12653636932373
    4. 'total' → logprob: -8.62653636932373
    5. 'result' → logprob: -9.50153636932373
    6. ' total' → logprob: -10.00153636932373
    7. 'res' → logprob: -11.25153636932373
    8. ' result' → logprob: -11.50153636932373
    9. ' res' → logprob: -12.25153636932373
    10. '```' → logprob: -13.50153636932373

Token 165: ' res' (ID: 694)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0680970773100853
    2. 'result' → logprob: -3.3180971145629883
    3. 'current' → logprob: -3.5680971145629883
    4. 'res' (adapté à ' res') → logprob: -6.818097114562988
    5. ' total' → logprob: -8.193097114562988
    6. ' current' → logprob: -11.068097114562988
    7. '   ' → logprob: -11.568097114562988
    8. ' result' → logprob: -12.818097114562988
    9. 'results' → logprob: -15.068097114562988
    10. '```' → logprob: -15.068097114562988

Token 166: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06558772176504135
    2. '=' → logprob: -2.8155877590179443
    3. 'ult' → logprob: -6.065587520599365
    4. '   ' → logprob: -6.940587520599365
    5. ' ' → logprob: -8.190587997436523
    6. 'ults' → logprob: -10.690587997436523
    7. 'ultat' → logprob: -11.940587997436523
    8. 's' → logprob: -12.065587997436523
    9. '  ' → logprob: -12.440587997436523
    10. 'ULT' → logprob: -13.065587997436523

Token 167: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013270224444568157
    2. ' ' → logprob: -6.626327037811279
    3. '   ' → logprob: -14.001326560974121
    4. '  ' → logprob: -16.126327514648438
    5. 'def' → logprob: -17.001327514648438
    6. '1' → logprob: -17.126327514648438
    7. ' ' → logprob: -17.313827514648438
    8. 'sum' → logprob: -17.376327514648438
    9. '    ' → logprob: -17.751327514648438
    10. '```' → logprob: -18.001327514648438

Token 168: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.250004768371582
    3. '1' → logprob: -15.875004768371582
    4. '   ' → logprob: -16.8750057220459
    5. '[' → logprob: -17.2500057220459
    6. 'sum' → logprob: -17.9375057220459
    7. '100' → logprob: -18.1250057220459
    8. '```' → logprob: -18.2500057220459
    9. '000' → logprob: -18.6875057220459
    10. 'def' → logprob: -18.8125057220459

Token 169: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43058329820632935
    2. '   ' → logprob: -1.0555832386016846
    3. ' for' → logprob: -6.930583477020264
    4. 'for' → logprob: -7.680583477020264
    5. '    
' → logprob: -8.180583000183105
    6. '
' → logprob: -9.055583000183105
    7. '	for' → logprob: -11.555583000183105
    8. 'def' → logprob: -11.930583000183105
    9. '```' → logprob: -12.305583000183105
    10. '' → logprob: -12.555583000183105

Token 170: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010908338241279125
    2. 'for' → logprob: -5.385908126831055
    3. ' for' → logprob: -5.385908126831055
    4. 'i' → logprob: -6.885908126831055
    5. '
' → logprob: -7.635908126831055
    6. ' i' → logprob: -8.760908126831055
    7. 'def' → logprob: -11.635908126831055
    8. '    
' → logprob: -11.760908126831055
    9. '  ' → logprob: -12.510908126831055
    10. '```' → logprob: -13.260908126831055

Token 171: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.3134709894657135
    2. 'for' → logprob: -1.3134709596633911
    3. '   ' → logprob: -9.188470840454102
    4. ' for' → logprob: -9.438470840454102
    5. ' i' → logprob: -10.688470840454102
    6. '```' → logprob: -12.813470840454102
    7. 'res' → logprob: -14.313470840454102
    8. '       ' → logprob: -15.313470840454102
    9. '  ' → logprob: -15.438470840454102
    10. '	for' → logprob: -15.938470840454102

Token 172: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014184147119522
    2. '=' → logprob: -1.701418399810791
    3. ' ' → logprob: -12.57641887664795
    4. ' in' → logprob: -14.45141887664795
    5. 'n' → logprob: -15.20141887664795
    6. '   ' → logprob: -15.45141887664795
    7. 'def' → logprob: -15.82641887664795
    8. ',' → logprob: -16.326417922973633
    9. ')' → logprob: -16.826417922973633
    10. 's' → logprob: -16.826417922973633

Token 173: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003178544342517853
    2. ' ' → logprob: -5.753178596496582
    3. '1' → logprob: -14.753178596496582
    4. '   ' → logprob: -16.003177642822266
    5. 'def' → logprob: -16.128177642822266
    6. '۰' → logprob: -16.753177642822266
    7. '=' → logprob: -18.065677642822266
    8. '```' → logprob: -18.128177642822266
    9. '０' → logprob: -18.253177642822266
    10. '2' → logprob: -18.315677642822266

Token 174: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014036978245712817
    2. ' ' → logprob: -8.875140190124512
    3. '1' → logprob: -14.875140190124512
    4. 'def' → logprob: -16.812641143798828
    5. '   ' → logprob: -16.875141143798828
    6. '۰' → logprob: -17.312641143798828
    7. '```' → logprob: -17.437641143798828
    8. '=' → logprob: -17.500141143798828
    9. '(' → logprob: -17.937641143798828
    10. '[' → logprob: -18.312641143798828

Token 175: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.013060462661087513
    2. '   ' → logprob: -4.388060569763184
    3. ' while' → logprob: -8.013060569763184
    4. 'while' → logprob: -9.638060569763184
    5. '
' → logprob: -9.763060569763184
    6. '	while' → logprob: -10.013060569763184
    7. '    
' → logprob: -11.013060569763184
    8. '  
' → logprob: -12.013060569763184
    9. '<|end|>' → logprob: -12.013060569763184
    10. ' 
' → logprob: -12.263060569763184

Token 176: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4761478006839752
    2. '   ' → logprob: -1.1011477708816528
    3. ' while' → logprob: -3.4761478900909424
    4. 'while' → logprob: -4.351147651672363
    5. '	while' → logprob: -6.101147651672363
    6. '```' → logprob: -9.226147651672363
    7. '    
' → logprob: -9.976147651672363
    8. '\n' → logprob: -10.476147651672363
    9. 'def' → logprob: -10.726147651672363
    10. '' → logprob: -10.976147651672363

Token 177: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.08047734946012497
    2. ' while' → logprob: -2.580477237701416
    3. '   ' → logprob: -6.455477237701416
    4. '
' → logprob: -11.455477714538574
    5. '	while' → logprob: -13.205477714538574
    6. '```' → logprob: -13.580477714538574
    7. 'def' → logprob: -14.830477714538574
    8. 'While' → logprob: -15.455477714538574
    9. ' ' → logprob: -16.205476760864258
    10. 'i' → logprob: -17.205476760864258

Token 178: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07889056205749512
    2. 'i' → logprob: -2.578890562057495
    3. '(i' → logprob: -15.078890800476074
    4. '   ' → logprob: -15.328890800476074
    5. '	i' → logprob: -16.203889846801758
    6. ' ' → logprob: -17.078889846801758
    7. ' ' → logprob: -17.203889846801758
    8. 'I' → logprob: -19.203889846801758
    9. '<i' → logprob: -19.203889846801758
    10. '```' → logprob: -19.328889846801758

Token 179: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.03824619948863983
    2. '<' → logprob: -3.2882461547851562
    3. '<N' → logprob: -8.538246154785156
    4. ' ' → logprob: -12.163246154785156
    5. '<n' → logprob: -13.163246154785156
    6. '[' → logprob: -14.663246154785156
    7. ' <
' → logprob: -14.913246154785156
    8. '<len' → logprob: -16.038246154785156
    9. '   ' → logprob: -16.163246154785156
    10. '<size' → logprob: -16.538246154785156

Token 180: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.004079112783074379
    2. ' N' → logprob: -5.504079341888428
    3. '   ' → logprob: -14.25407886505127
    4. ' ' → logprob: -17.004079818725586
    5. '	N' → logprob: -17.754079818725586
    6. '  ' → logprob: -19.254079818725586
    7. '(N' → logprob: -19.879079818725586
    8. '    ' → logprob: -20.254079818725586
    9. '```' → logprob: -20.254079818725586
    10. '
' → logprob: -20.504079818725586

Token 181: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5240960717201233
    2. ':' → logprob: -1.1490960121154785
    3. '   ' → logprob: -2.3990960121154785
    4. '       ' → logprob: -9.524096488952637
    5. ' :
' → logprob: -10.024096488952637
    6. '):
' → logprob: -10.649096488952637
    7. '
' → logprob: -11.649096488952637
    8. ' :' → logprob: -11.649096488952637
    9. '```' → logprob: -12.149096488952637
    10. '    
' → logprob: -12.274096488952637

Token 182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4998318552970886
    2. 'res' → logprob: -1.2498319149017334
    3. '   ' → logprob: -2.8748319149017334
    4. ' res' → logprob: -2.9998319149017334
    5. ' current' → logprob: -7.999831676483154
    6. 'current' → logprob: -8.999832153320312
    7. '
' → logprob: -9.874832153320312
    8. '```' → logprob: -9.874832153320312
    9. ' ' → logprob: -11.624832153320312
    10. '	res' → logprob: -11.999832153320312

Token 183: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.03291880711913109
    2. ' res' → logprob: -3.532918691635132
    3. '   ' → logprob: -5.782918930053711
    4. 'current' → logprob: -10.032918930053711
    5. ' current' → logprob: -10.782918930053711
    6. ' ' → logprob: -12.032918930053711
    7. '
' → logprob: -12.532918930053711
    8. '       ' → logprob: -12.782918930053711
    9. '```' → logprob: -13.032918930053711
    10. '  ' → logprob: -13.282918930053711

Token 184: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0788951888680458
    2. '=' → logprob: -2.578895092010498
    3. ' +=' → logprob: -12.203895568847656
    4. ' ' → logprob: -15.078895568847656
    5. '+=' → logprob: -15.703895568847656
    6. '	' → logprob: -16.828895568847656
    7. '   ' → logprob: -16.828895568847656
    8. ',' → logprob: -18.328895568847656
    9. '    ' → logprob: -18.578895568847656
    10. '  ' → logprob: -18.953895568847656

Token 185: ' loop' (ID: 11453)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.20141908526420593
    2. ' loop' → logprob: -1.7014191150665283
    3. 'add' → logprob: -13.07641887664795
    4. ' add' → logprob: -13.82641887664795
    5. '   ' → logprob: -14.32641887664795
    6. '       ' → logprob: -14.70141887664795
    7. ' ' → logprob: -14.82641887664795
    8. '(loop' → logprob: -14.82641887664795
    9. '    ' → logprob: -15.07641887664795
    10. '.loop' → logprob: -15.20141887664795

Token 186: '_inner' (ID: 81672)
  Prédit: '_inner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inner' → logprob: 0.0
    2. '_outer' → logprob: -17.125
    3. '_inline' → logprob: -18.25
    4. 'inner' → logprob: -18.75
    5. '_in' → logprob: -20.0
    6. '_inside' → logprob: -20.125
    7. '_internal' → logprob: -21.0
    8. '(inner' → logprob: -21.875
    9. '_' → logprob: -22.125
    10. '_i' → logprob: -22.25

Token 187: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.4974866644479334e-05
    2. '(' → logprob: -11.125015258789062
    3. ' (' → logprob: -16.375015258789062
    4. '(
' → logprob: -18.625015258789062
    5. '(I' → logprob: -21.500015258789062
    6. '   ' → logprob: -21.875015258789062
    7. 'i' → logprob: -22.125015258789062
    8. '```' → logprob: -22.500015258789062
    9. ' ' → logprob: -22.875015258789062
    10. '(ii' → logprob: -23.000015258789062

Token 188: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006950391689315438
    2. ' ,' → logprob: -7.50069522857666
    3. '(' → logprob: -9.62569522857666
    4. ',N' → logprob: -10.37569522857666
    5. '(N' → logprob: -10.50069522857666
    6. '(i' → logprob: -11.75069522857666
    7. ',i' → logprob: -12.87569522857666
    8. '+' → logprob: -13.25069522857666
    9. ')' → logprob: -13.25069522857666
    10. '   ' → logprob: -14.50069522857666

Token 189: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03804183006286621
    2. ' N' → logprob: -3.288041830062866
    3. '   ' → logprob: -15.288042068481445
    4. ' ' → logprob: -16.663042068481445
    5. '	N' → logprob: -17.913042068481445
    6. '    ' → logprob: -18.788042068481445
    7. ',N' → logprob: -19.413042068481445
    8. ')' → logprob: -19.538042068481445
    9. ',' → logprob: -19.538042068481445
    10. '_N' → logprob: -19.538042068481445

Token 190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001817297888919711
    2. ',d' → logprob: -9.250182151794434
    3. ' ,' → logprob: -9.375182151794434
    4. '   ' → logprob: -14.875182151794434
    5. 'd' → logprob: -15.000182151794434
    6. ',
' → logprob: -17.000181198120117
    7. ' d' → logprob: -17.875181198120117
    8. '```' → logprob: -18.125181198120117
    9. '       ' → logprob: -18.250181198120117
    10. 's' → logprob: -18.750181198120117

Token 191: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4740790128707886
    2. ' d' → logprob: -0.9740790128707886
    3. '   ' → logprob: -14.724079132080078
    4. ',' → logprob: -14.849079132080078
    5. '	d' → logprob: -15.224079132080078
    6. ' ' → logprob: -15.724079132080078
    7. ',d' → logprob: -15.724079132080078
    8. ')d' → logprob: -15.724079132080078
    9. ' ' → logprob: -15.974079132080078
    10. '```' → logprob: -16.349079132080078

Token 192: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.123899558791891e-05
    2. ' ,' → logprob: -9.75007152557373
    3. ',res' → logprob: -11.37507152557373
    4. '   ' → logprob: -14.25007152557373
    5. 'res' → logprob: -14.37507152557373
    6. ')' → logprob: -16.375070571899414
    7. ' res' → logprob: -17.125070571899414
    8. ',
' → logprob: -17.375070571899414
    9. '),' → logprob: -18.875070571899414
    10. ',i' → logprob: -19.375070571899414

Token 193: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -3.547789674485102e-05
    2. ' res' → logprob: -10.250035285949707
    3. '(res' → logprob: -21.750036239624023
    4. '	res' → logprob: -22.000036239624023
    5. '   ' → logprob: -22.250036239624023
    6. '$res' → logprob: -22.625036239624023
    7. 'resi' → logprob: -23.625036239624023
    8. 'r' → logprob: -23.625036239624023
    9. '_res' → logprob: -23.875036239624023
    10. 'resc' → logprob: -24.000036239624023

Token 194: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21518602967262268
    2. ')
' → logprob: -1.9651859998703003
    3. ')' → logprob: -3.09018611907959
    4. '   ' → logprob: -4.84018611907959
    5. '
' → logprob: -9.96518611907959
    6. ')
' → logprob: -11.46518611907959
    7. ' ' → logprob: -12.21518611907959
    8. ')

' → logprob: -13.21518611907959
    9. '        
' → logprob: -13.34018611907959
    10. ' )
' → logprob: -13.46518611907959

Token 195: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0380522795021534
    2. '   ' → logprob: -3.2880523204803467
    3. ' i' → logprob: -12.038052558898926
    4. 'i' → logprob: -12.538052558898926
    5. '
' → logprob: -14.163052558898926
    6. ' ' → logprob: -15.538052558898926
    7. '      ' → logprob: -15.663052558898926
    8. '```' → logprob: -16.28805160522461
    9. '     ' → logprob: -16.66305160522461
    10. '	' → logprob: -17.03805160522461

Token 196: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.011772050522267818
    2. ' i' → logprob: -4.761772155761719
    3. '   ' → logprob: -5.761772155761719
    4. '       ' → logprob: -12.136772155761719
    5. ' ' → logprob: -14.261772155761719
    6. '  ' → logprob: -14.386772155761719
    7. '	i' → logprob: -15.011772155761719
    8. '
' → logprob: -16.01177215576172
    9. '    ' → logprob: -17.63677215576172
    10. '    
' → logprob: -18.88677215576172

Token 197: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.38706451654434204
    2. '+=' → logprob: -1.1370644569396973
    3. '+' → logprob: -8.637064933776855
    4. '=' → logprob: -11.512064933776855
    5. '1' → logprob: -13.762064933776855
    6. ' +' → logprob: -13.887064933776855
    7. '    ' → logprob: -13.887064933776855
    8. ' ' → logprob: -14.262064933776855
    9. '++' → logprob: -14.512064933776855
    10. '<|end|>' → logprob: -14.637064933776855

Token 198: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0380416102707386
    2. ' ' → logprob: -3.288041591644287
    3. '```' → logprob: -16.038042068481445
    4. '   ' → logprob: -16.913042068481445
    5. ' ' → logprob: -17.163042068481445
    6. 'def' → logprob: -20.475542068481445
    7. '１' → logprob: -20.725542068481445
    8. '
' → logprob: -20.725542068481445
    9. '<|end|>' → logprob: -21.100542068481445
    10. '۱' → logprob: -21.350542068481445

Token 199: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -19.3750057220459
    4. '   ' → logprob: -19.5000057220459
    5. '１' → logprob: -21.0000057220459
    6. '  ' → logprob: -22.3125057220459
    7. '
' → logprob: -22.6250057220459
    8. '۱' → logprob: -22.6250057220459
    9. '0' → logprob: -23.1250057220459
    10. 'def' → logprob: -23.5000057220459

Token 200: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021758655086159706
    2. 'return' → logprob: -4.271758556365967
    3. '
' → logprob: -5.271758556365967
    4. ' return' → logprob: -6.021758556365967
    5. '	return' → logprob: -12.646759033203125
    6. '    
' → logprob: -13.146759033203125
    7. '
' → logprob: -14.771759033203125
    8. '```' → logprob: -15.021759033203125
    9. ' ' → logprob: -15.646759033203125
    10. ':return' → logprob: -15.896759033203125

Token 201: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004475934896618128
    2. 'return' → logprob: -5.504476070404053
    3. ' return' → logprob: -7.879476070404053
    4. '
' → logprob: -11.004475593566895
    5. '	return' → logprob: -13.254475593566895
    6. '    
' → logprob: -15.254475593566895
    7. '       ' → logprob: -15.879475593566895
    8. '```' → logprob: -15.879475593566895
    9. ':return' → logprob: -16.87947654724121
    10. '  ' → logprob: -17.87947654724121

Token 202: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0005388548015616834
    2. ' return' → logprob: -8.00053882598877
    3. '   ' → logprob: -8.50053882598877
    4. '	return' → logprob: -16.375539779663086
    5. '
' → logprob: -18.500539779663086
    6. ' ' → logprob: -20.750539779663086
    7. '{return' → logprob: -21.125539779663086
    8. '```' → logprob: -21.375539779663086
    9. 'eturn' → logprob: -21.500539779663086
    10. ':return' → logprob: -21.500539779663086

Token 203: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.6931473612785339
    2. ' res' → logprob: -0.6931473612785339
    3. '(res' → logprob: -16.943147659301758
    4. '	res' → logprob: -16.943147659301758
    5. '_res' → logprob: -17.818147659301758
    6. '$res' → logprob: -18.568147659301758
    7. ' ' → logprob: -18.693147659301758
    8. ' ' → logprob: -19.568147659301758
    9. 're' → logprob: -21.068147659301758
    10. '   ' → logprob: -21.068147659301758

Token 204: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01690067909657955
    2. 'if' → logprob: -4.141900539398193
    3. 'n' → logprob: -7.641900539398193
    4. '#' → logprob: -8.266901016235352
    5. '```' → logprob: -9.516901016235352
    6. 'print' → logprob: -10.141901016235352
    7. '<|end|>' → logprob: -11.891901016235352
    8. 'N' → logprob: -12.266901016235352
    9. ' if' → logprob: -13.891901016235352
    10. '
' → logprob: -13.891901016235352

Token 205: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.34189385175704956
    2. 'def' → logprob: -1.3418939113616943
    3. 'n' → logprob: -3.5918939113616943
    4. 'print' → logprob: -8.216894149780273
    5. '#' → logprob: -8.341894149780273
    6. 'N' → logprob: -8.716894149780273
    7. '```' → logprob: -12.216894149780273
    8. ' if' → logprob: -12.966894149780273
    9. 'num' → logprob: -15.466894149780273
    10. ' n' → logprob: -16.591894149780273

Token 206: ' print' (ID: 2123)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.5759398937225342
    2. ' main' → logprob: -0.8259398937225342
    3. 'def' → logprob: -15.575940132141113
    4. 'solve' → logprob: -16.450939178466797
    5. ' run' → logprob: -16.575939178466797
    6. 'run' → logprob: -16.825939178466797
    7. ' solve' → logprob: -16.825939178466797
    8. '	main' → logprob: -17.450939178466797
    9. '__' → logprob: -18.200939178466797
    10. '_main' → logprob: -18.700939178466797

Token 207: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.03851659968495369
    2. '(' → logprob: -4.038516521453857
    3. '_' → logprob: -4.663516521453857
    4. '(com' → logprob: -5.538516521453857
    5. '("_' → logprob: -6.288516521453857
    6. '_(' → logprob: -6.288516521453857
    7. '(_' → logprob: -6.663516521453857
    8. '_results' → logprob: -7.038516521453857
    9. '(result' → logprob: -7.788516521453857
    10. '('_' → logprob: -9.288516998291016

Token 208: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.18253768980503082
    2. '(result' → logprob: -2.182537794113159
    3. '(' → logprob: -2.932537794113159
    4. '(com' → logprob: -8.057538032531738
    5. '():' → logprob: -8.432538032531738
    6. '(value' → logprob: -8.807538032531738
    7. '(results' → logprob: -9.682538032531738
    8. '(output' → logprob: -10.932538032531738
    9. ' (' → logprob: -11.057538032531738
    10. '(print' → logprob: -11.557538032531738

Token 209: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023408057168126106
    2. '):
' → logprob: -3.7734081745147705
    3. ')' → logprob: -8.898407936096191
    4. '):
' → logprob: -10.648407936096191
    5. '(res' → logprob: -13.898407936096191
    6. ' ):' → logprob: -14.273407936096191
    7. '):

' → logprob: -14.898407936096191
    8. '   ' → logprob: -16.273408889770508
    9. 'res' → logprob: -16.398408889770508
    10. '(' → logprob: -17.273408889770508

Token 210: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019627494737505913
    2. ' print' → logprob: -4.019627571105957
    3. 'print' → logprob: -6.519627571105957
    4. '```' → logprob: -13.144627571105957
    5. '    ' → logprob: -15.894627571105957
    6. '(print' → logprob: -16.26962661743164
    7. '	print' → logprob: -16.76962661743164
    8. '   ' → logprob: -17.14462661743164
    9. '    
' → logprob: -18.64462661743164
    10. 'def' → logprob: -18.76962661743164

Token 211: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0032232257071882486
    2. ' print' → logprob: -5.753223419189453
    3. '   ' → logprob: -10.003223419189453
    4. '```' → logprob: -16.003223419189453
    5. 'def' → logprob: -16.128223419189453
    6. '	print' → logprob: -21.503223419189453
    7. '`' → logprob: -22.253223419189453
    8. 'return' → logprob: -22.503223419189453
    9. '    ' → logprob: -22.503223419189453
    10. '``' → logprob: -22.753223419189453

Token 212: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0003634713648352772
    2. '(' → logprob: -8.00036334991455
    3. 'res' → logprob: -10.50036334991455
    4. '(result' → logprob: -15.87536334991455
    5. ' res' → logprob: -16.250364303588867
    6. '(f' → logprob: -16.250364303588867
    7. ' (' → logprob: -16.875364303588867
    8. '()' → logprob: -17.000364303588867
    9. '(
' → logprob: -17.750364303588867
    10. '	res' → logprob: -19.250364303588867

Token 213: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')
' → logprob: -16.375
    3. ' )' → logprob: -17.125
    4. '()' → logprob: -17.25
    5. ')`' → logprob: -17.75
    6. '())' → logprob: -17.875
    7. '')' → logprob: -18.25
    8. '))' → logprob: -18.625
    9. '")' → logprob: -20.0
    10. '`)' → logprob: -20.625

Token 214: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0052354102954268456
    2. 'if' → logprob: -5.255235195159912
    3. 'n' → logprob: -14.00523567199707
    4. '#' → logprob: -15.00523567199707
    5. '```' → logprob: -15.00523567199707
    6. 'N' → logprob: -16.00523567199707
    7. ' def' → logprob: -17.50523567199707
    8. 'ndef' → logprob: -17.75523567199707
    9. ' if' → logprob: -17.88023567199707
    10. '
' → logprob: -18.25523567199707

Token 215: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0031838975846767426
    2. ' main' → logprob: -5.753183841705322
    3. 'def' → logprob: -12.12818431854248
    4. 'run' → logprob: -14.87818431854248
    5. '_main' → logprob: -15.12818431854248
    6. 'if' → logprob: -15.62818431854248
    7. '__' → logprob: -17.878183364868164
    8. '	main' → logprob: -18.003183364868164
    9. 'solve' → logprob: -18.253183364868164
    10. '
' → logprob: -18.378183364868164

Token 216: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -9.078839502763003e-05
    2. ' ():' → logprob: -9.750090599060059
    3. '():
' → logprob: -10.375090599060059
    4. '()' → logprob: -13.750090599060059
    5. '_' → logprob: -16.375091552734375
    6. '():
' → logprob: -17.000091552734375
    7. '(' → logprob: -17.125091552734375
    8. '()>' → logprob: -18.250091552734375
    9. '():

' → logprob: -18.875091552734375
    10. ' ()' → logprob: -19.625091552734375

Token 217: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016486376989632845
    2. 'n' → logprob: -6.626648426055908
    3. ' n' → logprob: -8.751648902893066
    4. 'N' → logprob: -8.876648902893066
    5. ' N' → logprob: -10.751648902893066
    6. 'def' → logprob: -13.376648902893066
    7. '	n' → logprob: -14.626648902893066
    8. ' ' → logprob: -15.251648902893066
    9. '    
' → logprob: -15.501648902893066
    10. '()' → logprob: -15.751648902893066

Token 218: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.008569537661969662
    2. 'n' → logprob: -5.508569717407227
    3. '   ' → logprob: -5.883569717407227
    4. ' N' → logprob: -6.383569717407227
    5. ' n' → logprob: -12.008569717407227
    6. ' ' → logprob: -14.633569717407227
    7. '  ' → logprob: -15.133569717407227
    8. '	N' → logprob: -15.883569717407227
    9. '	n' → logprob: -16.883569717407227
    10. '#' → logprob: -17.008569717407227

Token 219: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0019300628919154406
    2. '=' → logprob: -6.251930236816406
    3. ',' → logprob: -14.251930236816406
    4. ' ' → logprob: -14.376930236816406
    5. ' =
' → logprob: -16.501930236816406
    6. '   ' → logprob: -16.751930236816406
    7. ')' → logprob: -16.751930236816406
    8. '=int' → logprob: -17.376930236816406
    9. ' =)' → logprob: -17.376930236816406
    10. '  ' → logprob: -17.501930236816406

Token 220: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.0007099286303855479
    2. ' get' → logprob: -7.2507100105285645
    3. '(get' → logprob: -18.500709533691406
    4. '	get' → logprob: -18.625709533691406
    5. '=get' → logprob: -18.875709533691406
    6. '   ' → logprob: -20.125709533691406
    7. '_get' → logprob: -20.625709533691406
    8. '[get' → logprob: -20.875709533691406
    9. '/get' → logprob: -21.000709533691406
    10. '  ' → logprob: -21.500709533691406

Token 221: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.00034821697045117617
    2. '_input' → logprob: -8.000348091125488
    3. '_' → logprob: -11.875348091125488
    4. '_d' → logprob: -12.750348091125488
    5. 'n' → logprob: -13.375348091125488
    6. '()' → logprob: -15.000348091125488
    7. '_i' → logprob: -15.250348091125488
    8. '_N' → logprob: -15.750348091125488
    9. '_x' → logprob: -15.875348091125488
    10. '(' → logprob: -16.125349044799805

Token 222: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2061537206172943
    2. '
' → logprob: -1.8311537504196167
    3. 'd' → logprob: -3.706153631210327
    4. '    
' → logprob: -7.206153869628906
    5. '<|end|>' → logprob: -8.581153869628906
    6. '()
' → logprob: -8.831153869628906
    7. '()' → logprob: -9.456153869628906
    8. 'D' → logprob: -9.706153869628906
    9. '(d' → logprob: -9.831153869628906
    10. 'def' → logprob: -10.206153869628906

Token 223: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2579317092895508
    2. 'd' → logprob: -1.5079317092895508
    3. ' d' → logprob: -5.132931709289551
    4. 'D' → logprob: -10.00793170928955
    5. '	d' → logprob: -10.38293170928955
    6. '```' → logprob: -13.00793170928955
    7. ' ' → logprob: -13.38293170928955
    8. ' D' → logprob: -13.63293170928955
    9. '  ' → logprob: -13.75793170928955
    10. '_d' → logprob: -14.25793170928955

Token 224: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.011773581616580486
    2. '   ' → logprob: -4.761773586273193
    3. ' d' → logprob: -5.761773586273193
    4. 'D' → logprob: -12.386773109436035
    5. '	d' → logprob: -13.136773109436035
    6. ' ' → logprob: -13.636773109436035
    7. '  ' → logprob: -14.011773109436035
    8. '_d' → logprob: -16.01177406311035
    9. ' D' → logprob: -16.76177406311035
    10. '    ' → logprob: -16.88677406311035

Token 225: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740777611732483
    2. ' =' → logprob: -0.9740777611732483
    3. '   ' → logprob: -15.349078178405762
    4. ',' → logprob: -16.474077224731445
    5. '=get' → logprob: -16.474077224731445
    6. ')' → logprob: -16.849077224731445
    7. '	' → logprob: -17.224077224731445
    8. ' ' → logprob: -17.224077224731445
    9. '()' → logprob: -17.349077224731445
    10. '[' → logprob: -17.849077224731445

Token 226: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.0009115827269852161
    2. ' get' → logprob: -7.000911712646484
    3. '(get' → logprob: -16.000911712646484
    4. '=get' → logprob: -20.250911712646484
    5. '	get' → logprob: -21.000911712646484
    6. '[get' → logprob: -21.500911712646484
    7. '_get' → logprob: -21.750911712646484
    8. '   ' → logprob: -22.750911712646484
    9. '.get' → logprob: -22.750911712646484
    10. ' ' → logprob: -23.625911712646484

Token 227: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -6.869017852295656e-06
    2. '_' → logprob: -12.250006675720215
    3. 'd' → logprob: -13.750006675720215
    4. '_input' → logprob: -14.125006675720215
    5. '_n' → logprob: -16.25000762939453
    6. '_i' → logprob: -16.62500762939453
    7. ' _' → logprob: -17.62500762939453
    8. '_a' → logprob: -17.62500762939453
    9. 'input' → logprob: -17.87500762939453
    10. '_data' → logprob: -18.87500762939453

Token 228: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04378245025873184
    2. '
' → logprob: -3.1687824726104736
    3. 'res' → logprob: -7.6687822341918945
    4. ' res' → logprob: -8.543782234191895
    5. '    
' → logprob: -10.043782234191895
    6. '()
' → logprob: -11.043782234191895
    7. '  ' → logprob: -11.418782234191895
    8. '<|end|>' → logprob: -11.418782234191895
    9. 'def' → logprob: -11.668782234191895
    10. 'result' → logprob: -11.918782234191895

Token 229: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018704519607126713
    2. ' res' → logprob: -7.251870632171631
    3. 'res' → logprob: -7.376870632171631
    4. '
' → logprob: -7.626870632171631
    5. '    
' → logprob: -10.376870155334473
    6. '```' → logprob: -11.376870155334473
    7. '	res' → logprob: -13.126870155334473
    8. '<|end|>' → logprob: -14.001870155334473
    9. 'result' → logprob: -15.126870155334473
    10. '``' → logprob: -15.376870155334473

Token 230: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.2149738371372223
    2. ' res' → logprob: -1.7149738073349
    3. '   ' → logprob: -4.7149739265441895
    4. 'result' → logprob: -5.4649739265441895
    5. ' result' → logprob: -8.214973449707031
    6. '```' → logprob: -12.589973449707031
    7. '	res' → logprob: -13.964973449707031
    8. '
' → logprob: -14.339973449707031
    9. '  ' → logprob: -15.339973449707031
    10. ' ' → logprob: -15.464973449707031

Token 231: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020667314529419
    2. '=' → logprob: -2.3502066135406494
    3. ' ' → logprob: -18.47520637512207
    4. '   ' → logprob: -19.10020637512207
    5. ' ' → logprob: -19.35020637512207
    6. '＝' → logprob: -19.85020637512207
    7. ',' → logprob: -19.85020637512207
    8. ')' → logprob: -19.97520637512207
    9. ' =
' → logprob: -19.97520637512207
    10. '  ' → logprob: -20.22520637512207

Token 232: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.10020667314529419
    2. ' compute' → logprob: -2.3502066135406494
    3. '.compute' → logprob: -17.10020637512207
    4. 'calculate' → logprob: -17.60020637512207
    5. '   ' → logprob: -18.10020637512207
    6. '_compute' → logprob: -18.60020637512207
    7. 'computer' → logprob: -19.35020637512207
    8. 'comput' → logprob: -19.85020637512207
    9. ' calculate' → logprob: -21.10020637512207
    10. ' computer' → logprob: -22.72520637512207

Token 233: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -3.128163257315464e-07
    2. '_res' → logprob: -15.5
    3. '_results' → logprob: -16.5
    4. '_' → logprob: -18.5
    5. '_RESULT' → logprob: -19.125
    6. '_Result' → logprob: -19.125
    7. ' _' → logprob: -19.25
    8. '_product' → logprob: -19.75
    9. '```' → logprob: -20.25
    10. '_value' → logprob: -20.625

Token 234: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -4.096126576769166e-05
    2. '(' → logprob: -10.500041007995605
    3. ' (' → logprob: -11.500041007995605
    4. '   ' → logprob: -13.750041007995605
    5. '_result' → logprob: -14.375041007995605
    6. '```' → logprob: -14.500041007995605
    7. 'result' → logprob: -14.625041007995605
    8. '(
' → logprob: -15.625041007995605
    9. ' ' → logprob: -16.12504005432129
    10. 'Result' → logprob: -16.62504005432129

Token 235: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00025966696557588875
    2. ',d' → logprob: -8.375259399414062
    3. ' ,' → logprob: -10.500259399414062
    4. '(' → logprob: -14.250259399414062
    5. 'd' → logprob: -15.000259399414062
    6. ',
' → logprob: -15.375259399414062
    7. '(d' → logprob: -15.875259399414062
    8. ')' → logprob: -16.250259399414062
    9. '   ' → logprob: -17.250259399414062
    10. ' d' → logprob: -17.750259399414062

Token 236: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0380416102707386
    2. ' d' → logprob: -3.288041591644287
    3. '   ' → logprob: -15.663042068481445
    4. ')d' → logprob: -18.288042068481445
    5. '	d' → logprob: -18.663042068481445
    6. '
' → logprob: -18.663042068481445
    7. ' ' → logprob: -19.413042068481445
    8. '  ' → logprob: -19.663042068481445
    9. '    ' → logprob: -20.038042068481445
    10. ')' → logprob: -20.788042068481445

Token 237: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1002432256937027
    2. ')
' → logprob: -2.350243330001831
    3. ')
' → logprob: -10.35024356842041
    4. '   ' → logprob: -12.35024356842041
    5. ')

' → logprob: -15.97524356842041
    6. ')`
' → logprob: -16.725242614746094
    7. ' )' → logprob: -16.850242614746094
    8. ' )
' → logprob: -17.475242614746094
    9. ' ' → logprob: -17.850242614746094
    10. ')`' → logprob: -18.725242614746094

Token 238: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023838846012949944
    2. 'print' → logprob: -3.773838758468628
    3. ' print' → logprob: -7.773838996887207
    4. '
' → logprob: -8.773838996887207
    5. '    
' → logprob: -12.023838996887207
    6. '```' → logprob: -12.398838996887207
    7. '(print' → logprob: -12.523838996887207
    8. '	print' → logprob: -12.648838996887207
    9. '   ' → logprob: -15.523838996887207
    10. '_print' → logprob: -15.898838996887207

Token 239: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.005784331820905209
    2. ' print' → logprob: -5.255784511566162
    3. '   ' → logprob: -7.505784511566162
    4. '
' → logprob: -14.880784034729004
    5. '	print' → logprob: -16.50578498840332
    6. '(print' → logprob: -17.50578498840332
    7. ' ' → logprob: -17.63078498840332
    8. '  ' → logprob: -18.13078498840332
    9. '.print' → logprob: -18.50578498840332
    10. '_print' → logprob: -19.13078498840332

Token 240: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -4.7994282795116305e-05
    2. '_res' → logprob: -10.75004768371582
    3. '(_' → logprob: -11.37504768371582
    4. '_' → logprob: -12.37504768371582
    5. '_results' → logprob: -12.62504768371582
    6. '(' → logprob: -12.75004768371582
    7. '```' → logprob: -13.25004768371582
    8. '"_' → logprob: -14.00004768371582
    9. '_output' → logprob: -14.87504768371582
    10. '(result' → logprob: -15.25004768371582

Token 241: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0002714681322686374
    2. '(' → logprob: -8.250271797180176
    3. ' (' → logprob: -11.500271797180176
    4. 'res' → logprob: -17.62527084350586
    5. '(s' → logprob: -18.62527084350586
    6. '(rest' → logprob: -19.12527084350586
    7. '(
' → logprob: -19.62527084350586
    8. ' ' → logprob: -19.75027084350586
    9. '(re' → logprob: -19.87527084350586
    10. '(resp' → logprob: -20.12527084350586

Token 242: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.35837464465294e-05
    2. '())' → logprob: -10.750043869018555
    3. '()' → logprob: -11.000043869018555
    4. ')
' → logprob: -12.250043869018555
    5. ' )' → logprob: -15.500043869018555
    6. '))' → logprob: -15.625043869018555
    7. ')`' → logprob: -16.000043869018555
    8. '(' → logprob: -17.250043869018555
    9. '   ' → logprob: -18.000043869018555
    10. ')#' → logprob: -18.125043869018555

Token 243: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06197217106819153
    2. 'main' → logprob: -2.811972141265869
    3. ' if' → logprob: -13.061972618103027
    4. ' main' → logprob: -14.186972618103027
    5. '(main' → logprob: -14.436972618103027
    6. '
' → logprob: -14.436972618103027
    7. '#' → logprob: -15.061972618103027
    8. '```' → logprob: -15.936972618103027
    9. '\n' → logprob: -16.06197166442871
    10. '_main' → logprob: -16.93697166442871

Token 244: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 242
Tokens correctement prédits (1ère position, stricte): 113
Tokens correctement prédits (1ère position, avec adaptation): 129
Tokens correctement prédits (top 10): 212
Précision stricte (1ère position): 46.69%
Précision adaptée (1ère position): 53.31%
Précision (top 10): 87.60%
================================================================================
