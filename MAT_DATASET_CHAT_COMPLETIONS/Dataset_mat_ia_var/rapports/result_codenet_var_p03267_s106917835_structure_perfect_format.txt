================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
L = int(input())

edges = []
v = 1
base = 1
while base * 2 <= L:
    edges.append([v, v + 1, 0])
    edges.append([v, v + 1, base])
    base *= 2
    v += 1

end = edges[-1][1]
rest = L - base

for i in range(19):
    if (rest >> i) & 1:
        num = 2 ** i
        edges.append([i + 1, end, L - rest])
        rest -= num

print(v, len(edges))
for edge in edges:
    print(*edge)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'L' (ID: 43)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008122475701384246
    2. 'L' → logprob: -7.62581205368042
    3. ''' → logprob: -9.375812530517578
    4. '(L' → logprob: -9.500812530517578
    5. '```' → logprob: -9.875812530517578
    6. '`' → logprob: -10.750812530517578
    7. ')' → logprob: -11.250812530517578
    8. '(
' → logprob: -11.375812530517578
    9. '\(' → logprob: -11.375812530517578
    10. '[' → logprob: -11.375812530517578

Token 4: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.33102238178253174
    2. ')' → logprob: -1.3310223817825317
    3. '()' → logprob: -4.706022262573242
    4. '())' → logprob: -5.831022262573242
    5. '(
' → logprob: -7.081022262573242
    6. '")' → logprob: -7.206022262573242
    7. '```' → logprob: -7.456022262573242
    8. '))' → logprob: -7.581022262573242
    9. '')' → logprob: -7.956022262573242
    10. '('' → logprob: -8.081022262573242

Token 5: 'edges' (ID: 39127)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7432430386543274
    2. 'if' → logprob: -1.1182429790496826
    3. 'for' → logprob: -2.3682429790496826
    4. 'f' → logprob: -3.1182429790496826
    5. '*' → logprob: -3.6182429790496826
    6. 's' → logprob: -5.118243217468262
    7. '#' → logprob: -5.493243217468262
    8. '+' → logprob: -5.743243217468262
    9. 'n' → logprob: -5.993243217468262
    10. 'F' → logprob: -5.993243217468262

Token 6: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06906714290380478
    2. '=' → logprob: -2.9440672397613525
    3. '.' → logprob: -5.069067001342773
    4. '[' → logprob: -5.819067001342773
    5. '_' → logprob: -6.319067001342773
    6. ')' → logprob: -6.444067001342773
    7. ',' → logprob: -7.819067001342773
    8. '=[]' → logprob: -8.319067001342773
    9. '[]' → logprob: -8.569067001342773
    10. '[:]' → logprob: -8.569067001342773

Token 7: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.014246598817408085
    2. '[]' → logprob: -4.264246463775635
    3. ' ' → logprob: -10.139246940612793
    4. '[' → logprob: -10.514246940612793
    5. ' [' → logprob: -11.389246940612793
    6. ' [[]' → logprob: -13.389246940612793
    7. ' [][]' → logprob: -13.889246940612793
    8. ' set' → logprob: -15.139246940612793
    9. ' "' → logprob: -15.139246940612793
    10. ' []
' → logprob: -15.264246940612793

Token 8: 'v' (ID: 85)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.039206549525260925
    2. ' for' → logprob: -3.5392065048217773
    3. '\n' → logprob: -5.039206504821777
    4. '```' → logprob: -6.539206504821777
    5. '\' → logprob: -6.914206504821777
    6. '
' → logprob: -8.664206504821777
    7. '[' → logprob: -9.289206504821777
    8. '<|end|>' → logprob: -10.164206504821777
    9. 'n' → logprob: -10.289206504821777
    10. ' 
' → logprob: -10.539206504821777

Token 9: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2048218548297882
    2. 'al' → logprob: -2.079821825027466
    3. '=' → logprob: -3.329821825027466
    4. 'er' → logprob: -3.954821825027466
    5. 'ert' → logprob: -6.829822063446045
    6. ' ' → logprob: -6.954822063446045
    7. 's' → logprob: -6.954822063446045
    8. ',' → logprob: -7.704822063446045
    9. 'alue' → logprob: -7.829822063446045
    10. '_' → logprob: -8.454821586608887

Token 10: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5950860381126404
    2. ' L' → logprob: -1.2200860977172852
    3. '0' → logprob: -2.595086097717285
    4. ' []' → logprob: -2.970086097717285
    5. ' int' → logprob: -4.720086097717285
    6. 'L' → logprob: -4.720086097717285
    7. '[]' → logprob: -5.220086097717285
    8. 'int' → logprob: -6.470086097717285
    9. '  ' → logprob: -7.470086097717285
    10. '2' → logprob: -7.470086097717285

Token 11: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8841363787651062
    2. 'L' → logprob: -0.8841363787651062
    3. '[]' → logprob: -2.009136438369751
    4. '{}' → logprob: -4.259136199951172
    5. 'int' → logprob: -4.509136199951172
    6. '2' → logprob: -5.384136199951172
    7. '1' → logprob: -5.884136199951172
    8. 'set' → logprob: -6.259136199951172
    9. '[L' → logprob: -7.009136199951172
    10. '[' → logprob: -7.134136199951172

Token 12: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 13: 'base' (ID: 5423)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.35803866386413574
    2. 'for' → logprob: -1.7330386638641357
    3. ' while' → logprob: -2.3580386638641357
    4. ' for' → logprob: -4.233038902282715
    5. ',' → logprob: -5.858038902282715
    6. ')' → logprob: -6.358038902282715
    7. '<|end|>' → logprob: -6.608038902282715
    8. '+' → logprob: -6.608038902282715
    9. '=' → logprob: -6.858038902282715
    10. '.' → logprob: -6.858038902282715

Token 14: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.30799201130867004
    2. ' =' → logprob: -2.4329919815063477
    3. 'd' → logprob: -2.8079919815063477
    4. '+' → logprob: -3.8079919815063477
    5. '=' → logprob: -4.057991981506348
    6. ' +' → logprob: -4.307991981506348
    7. ' ' → logprob: -4.307991981506348
    8. ')' → logprob: -4.432991981506348
    9. ' *' → logprob: -4.557991981506348
    10. ' +=' → logprob: -5.432991981506348

Token 15: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.078787662088871
    2. '0' → logprob: -2.8287875652313232
    3. '1' → logprob: -4.578787803649902
    4. '10' → logprob: -6.453787803649902
    5. ' v' → logprob: -6.703787803649902
    6. ' L' → logprob: -7.078787803649902
    7. 'v' → logprob: -7.078787803649902
    8. '2' → logprob: -7.203787803649902
    9. 'L' → logprob: -7.953787803649902
    10. ' [' → logprob: -9.453787803649902

Token 16: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7618181705474854
    2. '0' → logprob: -1.5118181705474854
    3. '2' → logprob: -1.7618181705474854
    4. '10' → logprob: -2.5118181705474854
    5. 'v' → logprob: -3.5118181705474854
    6. 'L' → logprob: -3.8868181705474854
    7. '100' → logprob: -6.011817932128906
    8. ' ' → logprob: -6.511817932128906
    9. '3' → logprob: -7.011817932128906
    10. '-' → logprob: -7.011817932128906

Token 17: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.9075418710708618
    2. '<|end|>' → logprob: -1.5325418710708618
    3. ' while' → logprob: -2.0325417518615723
    4. '+' → logprob: -2.7825417518615723
    5. 'for' → logprob: -2.7825417518615723
    6. '
' → logprob: -3.1575417518615723
    7. ',' → logprob: -3.6575417518615723
    8. ' for' → logprob: -4.157541751861572
    9. '```' → logprob: -4.407541751861572
    10. '*' → logprob: -5.032541751861572

Token 18: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.15793205797672272
    2. 'for' → logprob: -2.5329320430755615
    3. ' while' → logprob: -3.1579320430755615
    4. '
' → logprob: -4.407932281494141
    5. '+' → logprob: -5.532932281494141
    6. ' for' → logprob: -6.032932281494141
    7. '```' → logprob: -6.407932281494141
    8. '<|end|>' → logprob: -7.157932281494141
    9. ',' → logprob: -7.407932281494141
    10. ')' → logprob: -7.782932281494141

Token 19: ' base' (ID: 3611)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.39696168899536133
    2. ' ' → logprob: -1.1469616889953613
    3. ' L' → logprob: -4.771961688995361
    4. 'v' → logprob: -6.646961688995361
    5. ' ' → logprob: -9.271961212158203
    6. ' base' → logprob: -9.271961212158203
    7. '  ' → logprob: -10.771961212158203
    8. ' not' → logprob: -11.021961212158203
    9. ' (' → logprob: -11.146961212158203
    10. 'L' → logprob: -11.646961212158203

Token 20: ' *' (ID: 425)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3125093877315521
    2. ' <' → logprob: -1.8125094175338745
    3. '<=' → logprob: -2.562509298324585
    4. '<' → logprob: -4.062509536743164
    5. '*' → logprob: -4.812509536743164
    6. ' *' → logprob: -6.437509536743164
    7. ' <<=' → logprob: -7.687509536743164
    8. '<<' → logprob: -8.187509536743164
    9. '+' → logprob: -8.437509536743164
    10. ' <<' → logprob: -9.687509536743164

Token 21: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05635742098093033
    2. '10' → logprob: -3.4313573837280273
    3. '3' → logprob: -4.556357383728027
    4. '6' → logprob: -4.931357383728027
    5. '5' → logprob: -6.681357383728027
    6. ' ' → logprob: -6.931357383728027
    7. 'L' → logprob: -7.181357383728027
    8. '4' → logprob: -7.306357383728027
    9. 'v' → logprob: -7.806357383728027
    10. '7' → logprob: -8.181357383728027

Token 22: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.13148237764835358
    2. '10' → logprob: -2.3814823627471924
    3. '3' → logprob: -4.6314826011657715
    4. '6' → logprob: -4.7564826011657715
    5. '5' → logprob: -5.3814826011657715
    6. 'L' → logprob: -5.6314826011657715
    7. 'v' → logprob: -6.3814826011657715
    8. '4' → logprob: -6.5064826011657715
    9. '7' → logprob: -7.8814826011657715
    10. ' ' → logprob: -8.881482124328613

Token 23: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.02292490191757679
    2. '<=' → logprob: -3.8979249000549316
    3. ' <' → logprob: -6.147924900054932
    4. '<' → logprob: -8.52292537689209
    5. ' ' → logprob: -10.89792537689209
    6. ' <<=' → logprob: -11.02292537689209
    7. ' ≤' → logprob: -13.52292537689209
    8. '```' → logprob: -13.64792537689209
    9. ' ' → logprob: -14.02292537689209
    10. '...' → logprob: -14.52292537689209

Token 24: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.14270459115505219
    2. ' L' → logprob: -2.017704486846924
    3. 'v' → logprob: -10.767704963684082
    4. ' v' → logprob: -12.392704963684082
    5. ' ' → logprob: -12.892704963684082
    6. 'l' → logprob: -14.017704963684082
    7. '	L' → logprob: -15.392704963684082
    8. '   ' → logprob: -16.267704010009766
    9. '10' → logprob: -16.267704010009766
    10. '2' → logprob: -16.455204010009766

Token 25: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006040781736373901
    2. ' :' → logprob: -5.131040573120117
    3. ':
' → logprob: -9.256040573120117
    4. ' :
' → logprob: -11.881040573120117
    5. ':**' → logprob: -13.131040573120117
    6. ' and' → logprob: -13.506040573120117
    7. '):' → logprob: -13.631040573120117
    8. ' ' → logprob: -13.631040573120117
    9. '<|end|>' → logprob: -14.381040573120117
    10. '+:' → logprob: -14.506040573120117

Token 26: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06353844702243805
    2. '    ' → logprob: -3.1885385513305664
    3. '   ' → logprob: -4.563538551330566
    4. '<|end|>' → logprob: -5.813538551330566
    5. ' 
' → logprob: -6.438538551330566
    6. ':' → logprob: -6.938538551330566
    7. 'base' → logprob: -7.063538551330566
    8. '  ' → logprob: -7.188538551330566
    9. ' :' → logprob: -7.438538551330566
    10. '     
' → logprob: -8.313538551330566

Token 27: ' edges' (ID: 22569)
  Prédit: ' base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.9748989939689636
    2. ' edges' → logprob: -1.5998990535736084
    3. 'v' → logprob: -2.3498990535736084
    4. 'base' → logprob: -2.3498990535736084
    5. 'edges' (adapté à ' edges') → logprob: -2.5998990535736084
    6. ' v' → logprob: -2.8498990535736084
    7. ' ' → logprob: -2.8498990535736084
    8. '    ' → logprob: -4.099898815155029
    9. '   ' → logprob: -4.224898815155029
    10. ' for' → logprob: -6.474898815155029

Token 28: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.045916080474853516
    2. '.extend' → logprob: -3.4209160804748535
    3. '.' → logprob: -4.4209160804748535
    4. ' .' → logprob: -8.795915603637695
    5. ' +=' → logprob: -11.045915603637695
    6. ' .=' → logprob: -13.920915603637695
    7. '.add' → logprob: -13.920915603637695
    8. 'append' → logprob: -14.295915603637695
    9. '.push' → logprob: -14.420915603637695
    10. '.app' → logprob: -14.420915603637695

Token 29: '([' (ID: 5194)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.02072826400399208
    2. '(' → logprob: -4.02072811126709
    3. '(base' → logprob: -6.39572811126709
    4. '([' → logprob: -7.27072811126709
    5. '(v' → logprob: -8.89572811126709
    6. '(f' → logprob: -9.89572811126709
    7. '(('' → logprob: -12.14572811126709
    8. '(((' → logprob: -12.52072811126709
    9. '([(' → logprob: -12.64572811126709
    10. '('' → logprob: -13.14572811126709

Token 30: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.03523636609315872
    2. 'base' → logprob: -3.410236358642578
    3. ' v' → logprob: -6.910236358642578
    4. ' base' → logprob: -7.785236358642578
    5. '   ' → logprob: -9.285236358642578
    6. '(base' → logprob: -10.660236358642578
    7. '0' → logprob: -11.410236358642578
    8. '(v' → logprob: -11.660236358642578
    9. '1' → logprob: -11.910236358642578
    10. '2' → logprob: -12.160236358642578

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.061832208186388016
    2. '+' → logprob: -3.4368321895599365
    3. ' +' → logprob: -3.8118321895599365
    4. ' ,' → logprob: -5.436832427978516
    5. '*' → logprob: -7.561832427978516
    6. '-' → logprob: -8.311832427978516
    7. ',v' → logprob: -8.561832427978516
    8. ' *' → logprob: -8.686832427978516
    9. ' -' → logprob: -9.936832427978516
    10. ',
' → logprob: -10.311832427978516

Token 32: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.018624287098646164
    2. ' v' → logprob: -4.143624305725098
    3. '2' → logprob: -6.268624305725098
    4. 'base' → logprob: -7.518624305725098
    5. ' base' → logprob: -9.268624305725098
    6. ' ' → logprob: -10.393624305725098
    7. '   ' → logprob: -12.518624305725098
    8. '3' → logprob: -12.768624305725098
    9. '4' → logprob: -12.768624305725098
    10. '	v' → logprob: -13.143624305725098

Token 33: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14275360107421875
    2. ' +' → logprob: -2.0177536010742188
    3. '*' → logprob: -10.392753601074219
    4. ',' → logprob: -11.017753601074219
    5. ' *' → logprob: -11.892753601074219
    6. '2' → logprob: -12.142753601074219
    7. ' ' → logprob: -12.517753601074219
    8. '1' → logprob: -12.767753601074219
    9. '+,' → logprob: -12.767753601074219
    10. ' ,' → logprob: -13.517753601074219

Token 34: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.042432188987731934
    2. ' ' → logprob: -3.4174323081970215
    3. 'base' → logprob: -4.9174323081970215
    4. ' base' → logprob: -6.7924323081970215
    5. '2' → logprob: -8.792431831359863
    6. '   ' → logprob: -9.292431831359863
    7. '  ' → logprob: -10.979931831359863
    8. '+' → logprob: -11.604931831359863
    9. '(base' → logprob: -11.979931831359863
    10. '	base' → logprob: -12.542431831359863

Token 35: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006506113335490227
    2. 'base' → logprob: -5.256505966186523
    3. ' ' → logprob: -6.756505966186523
    4. ' base' → logprob: -9.756505966186523
    5. '2' → logprob: -10.631505966186523
    6. '(base' → logprob: -12.131505966186523
    7. 'v' → logprob: -12.256505966186523
    8. 'len' → logprob: -12.569005966186523
    9. '   ' → logprob: -13.631505966186523
    10. '  ' → logprob: -13.819005966186523

Token 36: ',' (ID: 11)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.12109087407588959
    2. ',' → logprob: -2.246090888977051
    3. ' ])' → logprob: -5.121090888977051
    4. ')' → logprob: -6.996090888977051
    5. ']' → logprob: -7.621090888977051
    6. ' ,' → logprob: -8.49609088897705
    7. '])
' → logprob: -8.87109088897705
    8. '   ' → logprob: -9.12109088897705
    9. ' ' → logprob: -9.74609088897705
    10. ')])' → logprob: -9.87109088897705

Token 37: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19844892621040344
    2. 'base' → logprob: -2.073448896408081
    3. ' base' → logprob: -3.823448896408081
    4. '1' → logprob: -4.19844913482666
    5. ' ' → logprob: -4.32344913482666
    6. 'v' → logprob: -6.19844913482666
    7. ' v' → logprob: -8.07344913482666
    8. '2' → logprob: -8.32344913482666
    9. '])' → logprob: -8.32344913482666
    10. '   ' → logprob: -8.38594913482666

Token 38: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4636886715888977
    2. 'base' → logprob: -1.088688611984253
    3. '1' → logprob: -3.838688611984253
    4. 'v' → logprob: -4.838688850402832
    5. ' base' → logprob: -6.338688850402832
    6. ' ' → logprob: -7.338688850402832
    7. ''' → logprob: -7.588688850402832
    8. '(base' → logprob: -7.838688850402832
    9. '2' → logprob: -8.338688850402832
    10. '])' → logprob: -8.713688850402832

Token 39: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.015946855768561363
    2. ',' → logprob: -4.765946865081787
    3. ' ])' → logprob: -5.265946865081787
    4. '])
' → logprob: -7.140946865081787
    5. ')' → logprob: -7.515946865081787
    6. ']' → logprob: -7.890946865081787
    7. ']])' → logprob: -9.890946388244629
    8. '])
' → logprob: -9.890946388244629
    9. ')])' → logprob: -10.015946388244629
    10. '+' → logprob: -10.140946388244629

Token 40: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5630071759223938
    2. '   ' → logprob: -1.688007116317749
    3. '  
' → logprob: -2.563007116317749
    4. '    
' → logprob: -2.688007116317749
    5. '\n' → logprob: -2.938007116317749
    6. ' 
' → logprob: -4.313007354736328
    7. '   
' → logprob: -4.563007354736328
    8. ' ' → logprob: -5.188007354736328
    9. '
' → logprob: -5.938007354736328
    10. '```' → logprob: -5.938007354736328

Token 41: ' edges' (ID: 22569)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0571616031229496
    2. 'base' → logprob: -3.182161569595337
    3. '   ' → logprob: -4.307161808013916
    4. ' v' → logprob: -8.057161331176758
    5. ' base' → logprob: -9.432161331176758
    6. '	v' → logprob: -10.057161331176758
    7. '  ' → logprob: -10.432161331176758
    8. '```' → logprob: -10.557161331176758
    9. 'b' → logprob: -10.682161331176758
    10. 'edges' (adapté à ' edges') → logprob: -10.932161331176758

Token 42: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.7852617502212524
    2. '[-' → logprob: -0.9102617502212524
    3. '.' → logprob: -2.160261631011963
    4. '.extend' → logprob: -3.785261631011963
    5. '<|end|>' → logprob: -6.660261631011963
    6. '.pop' → logprob: -7.660261631011963
    7. ' .' → logprob: -7.785261631011963
    8. '   ' → logprob: -8.285262107849121
    9. '[' → logprob: -8.285262107849121
    10. ' ' → logprob: -8.660262107849121

Token 43: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.0005790081340819597
    2. ' ([' → logprob: -7.875578880310059
    3. '(' → logprob: -8.625578880310059
    4. '[' → logprob: -11.250578880310059
    5. ' (' → logprob: -13.000578880310059
    6. ' [' → logprob: -13.250578880310059
    7. ' ' → logprob: -14.250578880310059
    8. '([
' → logprob: -14.250578880310059
    9. '((' → logprob: -15.125578880310059
    10. '([[' → logprob: -15.500578880310059

Token 44: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00015038289711810648
    2. ' v' → logprob: -8.875150680541992
    3. '1' → logprob: -11.875150680541992
    4. '   ' → logprob: -13.875150680541992
    5. '2' → logprob: -14.500150680541992
    6. '	v' → logprob: -14.750150680541992
    7. ' ' → logprob: -14.875150680541992
    8. '(v' → logprob: -15.250150680541992
    9. ',v' → logprob: -15.500150680541992
    10. ')v' → logprob: -15.875150680541992

Token 45: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.28404325246810913
    2. ' +' → logprob: -1.534043312072754
    3. ',' → logprob: -3.534043312072754
    4. ' ,' → logprob: -6.159043312072754
    5. '+,' → logprob: -8.784043312072754
    6. ' ' → logprob: -9.909043312072754
    7. '   ' → logprob: -10.284043312072754
    8. '1' → logprob: -11.159043312072754
    9. ',v' → logprob: -11.721543312072754
    10. '2' → logprob: -11.909043312072754

Token 46: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.07952271401882172
    2. 'v' → logprob: -2.5795226097106934
    3. ' ' → logprob: -8.079523086547852
    4. ' base' → logprob: -8.954523086547852
    5. '2' → logprob: -9.954523086547852
    6. 'base' → logprob: -9.954523086547852
    7. '	v' → logprob: -10.704523086547852
    8. '    ' → logprob: -11.329523086547852
    9. ' ' → logprob: -11.642023086547852
    10. ',' → logprob: -12.517023086547852

Token 47: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10029498487710953
    2. ' +' → logprob: -2.350295066833496
    3. ' ' → logprob: -10.850295066833496
    4. '   ' → logprob: -11.725295066833496
    5. '<|end|>' → logprob: -11.850295066833496
    6. '	' → logprob: -11.975295066833496
    7. '    ' → logprob: -12.225295066833496
    8. '1' → logprob: -12.350295066833496
    9. ''+' → logprob: -12.350295066833496
    10. '[' → logprob: -12.475295066833496

Token 48: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3652343153953552
    2. '2' → logprob: -1.365234375
    3. ' ' → logprob: -2.990234375
    4. 'base' → logprob: -9.740234375
    5. '<|end|>' → logprob: -10.177734375
    6. '0' → logprob: -10.302734375
    7. '  ' → logprob: -10.302734375
    8. '   ' → logprob: -10.490234375
    9. ' base' → logprob: -10.990234375
    10. '3' → logprob: -11.052734375

Token 49: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00807962380349636
    2. '2' → logprob: -4.883079528808594
    3. ' ' → logprob: -8.133079528808594
    4. 'base' → logprob: -9.133079528808594
    5. 'v' → logprob: -10.883079528808594
    6. '0' → logprob: -11.508079528808594
    7. ' base' → logprob: -11.695579528808594
    8. '   ' → logprob: -12.258079528808594
    9. '_base' → logprob: -12.445579528808594
    10. '  ' → logprob: -12.508079528808594

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013611078262329102
    2. '+' → logprob: -5.13861083984375
    3. ' ,' → logprob: -5.26361083984375
    4. ' +' → logprob: -6.26361083984375
    5. '1' → logprob: -9.13861083984375
    6. '0' → logprob: -9.38861083984375
    7. '   ' → logprob: -9.63861083984375
    8. '*' → logprob: -9.76361083984375
    9. '-' → logprob: -9.88861083984375
    10. '2' → logprob: -10.26361083984375

Token 51: ' base' (ID: 3611)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5759665966033936
    2. 'base' → logprob: -1.0759665966033936
    3. ' base' → logprob: -2.9509665966033936
    4. '(base' → logprob: -4.075966835021973
    5. '2' → logprob: -4.450966835021973
    6. 'v' → logprob: -4.575966835021973
    7. ' ' → logprob: -5.825966835021973
    8. '(' → logprob: -7.200966835021973
    9. '0' → logprob: -7.325966835021973
    10. ' v' → logprob: -7.950966835021973

Token 52: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.03096420131623745
    2. ' ])' → logprob: -3.6559641361236572
    3. '])
' → logprob: -6.155964374542236
    4. '*' → logprob: -7.280964374542236
    5. ']])' → logprob: -7.780964374542236
    6. ' ])
' → logprob: -8.155963897705078
    7. ' *' → logprob: -8.155963897705078
    8. ')' → logprob: -8.530963897705078
    9. '   ' → logprob: -8.905963897705078
    10. ' ' → logprob: -9.405963897705078

Token 53: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.17987060546875
    2. '
' → logprob: -1.55487060546875
    3. '\n' → logprob: -1.80487060546875
    4. 'v' → logprob: -2.05487060546875
    5. '``' → logprob: -2.92987060546875
    6. ' 
' → logprob: -3.30487060546875
    7. '    
' → logprob: -3.42987060546875
    8. '  
' → logprob: -3.42987060546875
    9. '   ' → logprob: -3.80487060546875
    10. '   
' → logprob: -5.92987060546875

Token 54: ' base' (ID: 3611)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.027811560779809952
    2. '```' → logprob: -4.277811527252197
    3. '``' → logprob: -4.777811527252197
    4. '\n' → logprob: -6.027811527252197
    5. '
' → logprob: -6.777811527252197
    6. '   ' → logprob: -7.402811527252197
    7. ' 
' → logprob: -8.152812004089355
    8. 'base' (adapté à ' base') → logprob: -8.152812004089355
    9. ' v' → logprob: -9.027812004089355
    10. '    
' → logprob: -9.152812004089355

Token 55: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.03273377567529678
    2. ' *=' → logprob: -4.032733917236328
    3. '=' → logprob: -4.282733917236328
    4. '*' → logprob: -7.782733917236328
    5. ' <<=' → logprob: -9.032733917236328
    6. ' =' → logprob: -9.907733917236328
    7. ' ' → logprob: -10.032733917236328
    8. ' ' → logprob: -11.282733917236328
    9. '```' → logprob: -11.532733917236328
    10. '+=' → logprob: -12.282733917236328

Token 56: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.870950215263292e-05
    2. ' ' → logprob: -10.000048637390137
    3. '   ' → logprob: -12.875048637390137
    4. '```' → logprob: -14.500048637390137
    5. '  ' → logprob: -17.000049591064453
    6. '２' → logprob: -17.312549591064453
    7. '`' → logprob: -17.500049591064453
    8. '1' → logprob: -17.687549591064453
    9. '۲' → logprob: -18.000049591064453
    10. '	' → logprob: -18.125049591064453

Token 57: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.895480277715251e-06
    2. ' ' → logprob: -11.875008583068848
    3. '   ' → logprob: -13.750008583068848
    4. '```' → logprob: -14.500008583068848
    5. '２' → logprob: -16.625009536743164
    6. '  ' → logprob: -17.437509536743164
    7. '1' → logprob: -17.500009536743164
    8. '۲' → logprob: -17.562509536743164
    9. '`' → logprob: -17.875009536743164
    10. '२' → logprob: -18.625009536743164

Token 58: '
' (ID: 198)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3922359049320221
    2. '   ' → logprob: -1.2672358751296997
    3. '	v' → logprob: -3.7672359943389893
    4. ' v' → logprob: -5.01723575592041
    5. '```' → logprob: -5.26723575592041
    6. ',v' → logprob: -5.89223575592041
    7. '
' → logprob: -6.51723575592041
    8. '\n' → logprob: -7.01723575592041
    9. '``' → logprob: -7.01723575592041
    10. '    
' → logprob: -7.64223575592041

Token 59: '   ' (ID: 271)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0010313807288184762
    2. '   ' → logprob: -7.501031398773193
    3. '```' → logprob: -7.876031398773193
    4. ' v' → logprob: -9.751030921936035
    5. '``' → logprob: -10.876030921936035
    6. '	v' → logprob: -11.376030921936035
    7. '
' → logprob: -12.876030921936035
    8. ',v' → logprob: -13.251030921936035
    9. '<|end|>' → logprob: -14.001030921936035
    10. '?v' → logprob: -14.251030921936035

Token 60: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.00023452966706827283
    2. ' v' → logprob: -8.750234603881836
    3. '   ' → logprob: -9.625234603881836
    4. '```' → logprob: -11.625234603881836
    5. '	v' → logprob: -14.125234603881836
    6. '``' → logprob: -15.250234603881836
    7. ' ' → logprob: -18.250234603881836
    8. '
' → logprob: -18.250234603881836
    9. '  ' → logprob: -18.625234603881836
    10. ',v' → logprob: -18.875234603881836

Token 61: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1015390157699585
    2. ' +=' → logprob: -2.351539134979248
    3. '+' → logprob: -6.976539134979248
    4. '=' → logprob: -7.851539134979248
    5. '++' → logprob: -12.72653865814209
    6. ' =' → logprob: -13.10153865814209
    7. '+='' → logprob: -13.72653865814209
    8. ']+=' → logprob: -14.47653865814209
    9. ' ' → logprob: -14.47653865814209
    10. '<|end|>' → logprob: -14.60153865814209

Token 62: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015337858349084854
    2. '2' → logprob: -6.5015339851379395
    3. ' ' → logprob: -10.376533508300781
    4. '   ' → logprob: -16.12653350830078
    5. '```' → logprob: -16.50153350830078
    6. '<|end|>' → logprob: -17.00153350830078
    7. '  ' → logprob: -17.68903350830078
    8. '+' → logprob: -18.18903350830078
    9. '１' → logprob: -18.81403350830078
    10. '۱' → logprob: -18.93903350830078

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001511408481746912
    2. '2' → logprob: -6.501511573791504
    3. ' ' → logprob: -11.626511573791504
    4. '   ' → logprob: -16.501510620117188
    5. '```' → logprob: -17.189010620117188
    6. '  ' → logprob: -17.501510620117188
    7. '<|end|>' → logprob: -17.939010620117188
    8. '3' → logprob: -18.751510620117188
    9. '１' → logprob: -18.939010620117188
    10. '+' → logprob: -18.939010620117188

Token 64: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 65: 'end' (ID: 419)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.33449915051460266
    2. 'if' → logprob: -1.3344991207122803
    3. 'v' → logprob: -4.709499359130859
    4. 'print' → logprob: -5.084499359130859
    5. '```' → logprob: -6.209499359130859
    6. '#' → logprob: -6.334499359130859
    7. 'while' → logprob: -7.209499359130859
    8. ' edges' → logprob: -7.584499359130859
    9. 'for' → logprob: -7.709499359130859
    10. ' if' → logprob: -10.20949935913086

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26993703842163086
    2. 'v' → logprob: -1.6449370384216309
    3. '```' → logprob: -4.644937038421631
    4. '=' → logprob: -4.769937038421631
    5. 'if' → logprob: -5.019937038421631
    6. '+' → logprob: -5.144937038421631
    7. 's' → logprob: -6.394937038421631
    8. '#' → logprob: -6.394937038421631
    9. 'edges' → logprob: -6.644937038421631
    10. '   ' → logprob: -6.769937038421631

Token 67: ' edges' (ID: 22569)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.38716480135917664
    2. 'v' → logprob: -1.137164831161499
    3. ' ' → logprob: -8.887165069580078
    4. ' L' → logprob: -9.762165069580078
    5. '1' → logprob: -10.512165069580078
    6. 'L' → logprob: -10.512165069580078
    7. '2' → logprob: -11.512165069580078
    8. '4' → logprob: -12.387165069580078
    9. ' base' → logprob: -12.387165069580078
    10. 'base' → logprob: -12.387165069580078

Token 68: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.1843453198671341
    2. '+' → logprob: -1.8093453645706177
    3. ' +' → logprob: -6.184345245361328
    4. '[' → logprob: -6.434345245361328
    5. '.append' → logprob: -8.184345245361328
    6. '[len' → logprob: -8.684345245361328
    7. '+[' → logprob: -9.309345245361328
    8. '[:]' → logprob: -9.684345245361328
    9. '-' → logprob: -9.809345245361328
    10. '[v' → logprob: -9.934345245361328

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1041145626222715e-05
    2. '[' → logprob: -12.125011444091797
    3. '][' → logprob: -12.625011444091797
    4. ' ' → logprob: -13.500011444091797
    5. '2' → logprob: -14.250011444091797
    6. '１' → logprob: -17.125011444091797
    7. '```' → logprob: -17.312511444091797
    8. ']' → logprob: -17.750011444091797
    9. '   ' → logprob: -17.875011444091797
    10. ' [' → logprob: -18.000011444091797

Token 70: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.026428135111927986
    2. '[' → logprob: -3.65142822265625
    3. ']' → logprob: -9.27642822265625
    4. ' ][' → logprob: -10.52642822265625
    5. '][-' → logprob: -13.02642822265625
    6. ''][' → logprob: -13.65142822265625
    7. '1' → logprob: -14.27642822265625
    8. ' [' → logprob: -14.52642822265625
    9. '"][' → logprob: -14.77642822265625
    10. '[-' → logprob: -14.77642822265625

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002370416419580579
    2. '0' → logprob: -6.252370357513428
    3. '2' → logprob: -8.002370834350586
    4. '```' → logprob: -10.564870834350586
    5. ' ' → logprob: -11.002370834350586
    6. '`' → logprob: -11.627370834350586
    7. ']' → logprob: -11.814870834350586
    8. '
' → logprob: -12.314870834350586
    9. '   ' → logprob: -12.314870834350586
    10. 'v' → logprob: -12.377370834350586

Token 72: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10832419991493225
    2. '+' → logprob: -2.3583242893218994
    3. ' +' → logprob: -5.60832405090332
    4. ')' → logprob: -6.35832405090332
    5. ']+' → logprob: -6.48332405090332
    6. ' ]' → logprob: -7.73332405090332
    7. '<|end|>' → logprob: -7.73332405090332
    8. '+]' → logprob: -8.73332405090332
    9. ')]' → logprob: -10.10832405090332
    10. ']
' → logprob: -10.73332405090332

Token 73: 'rest' (ID: 7134)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5338624119758606
    2. 'while' → logprob: -1.0338623523712158
    3. 'edges' → logprob: -3.283862352371216
    4. 'current' → logprob: -5.408862590789795
    5. 'diff' → logprob: -6.283862590789795
    6. 'remaining' → logprob: -6.408862590789795
    7. 'for' → logprob: -6.658862590789795
    8. 'result' → logprob: -6.658862590789795
    9. '```' → logprob: -6.783862590789795
    10. 'next' → logprob: -6.783862590789795

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006517479196190834
    2. '=' → logprob: -5.13151741027832
    3. '_' → logprob: -8.00651741027832
    4. ' -=' → logprob: -9.25651741027832
    5. ' +=' → logprob: -9.75651741027832
    6. ' >' → logprob: -10.75651741027832
    7. ' ' → logprob: -11.13151741027832
    8. '>' → logprob: -11.13151741027832
    9. ' ,' → logprob: -12.25651741027832
    10. ' _' → logprob: -12.38151741027832

Token 75: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.007739716209471226
    2. 'L' → logprob: -4.882739543914795
    3. ' ' → logprob: -9.257740020751953
    4. ''' → logprob: -11.882740020751953
    5. '"' → logprob: -12.132740020751953
    6. '`' → logprob: -12.382740020751953
    7. ' ' → logprob: -12.382740020751953
    8. '	L' → logprob: -12.507740020751953
    9. ' '' → logprob: -12.757740020751953
    10. '(L' → logprob: -12.882740020751953

Token 76: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.25317859649658203
    2. '-' → logprob: -1.503178596496582
    3. '<|end|>' → logprob: -6.878178596496582
    4. '-rest' → logprob: -9.253178596496582
    5. ' ' → logprob: -10.503178596496582
    6. '+' → logprob: -10.503178596496582
    7. '<|end|>' → logprob: -11.253178596496582
    8. '-end' → logprob: -11.878178596496582
    9. ' -=' → logprob: -12.753178596496582
    10. '-n' → logprob: -12.878178596496582

Token 77: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.05084050074219704
    2. ' base' → logprob: -3.0508406162261963
    3. '1' → logprob: -6.425840377807617
    4. '(base' → logprob: -8.050840377807617
    5. 'end' → logprob: -8.300840377807617
    6. ' (' → logprob: -10.425840377807617
    7. ' ' → logprob: -11.050840377807617
    8. '(' → logprob: -12.550840377807617
    9. 'sum' → logprob: -12.925840377807617
    10. '	base' → logprob: -12.925840377807617

Token 78: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15035545825958252
    2. '<|end|>' → logprob: -2.400355339050293
    3. '```' → logprob: -3.775355339050293
    4. ' 
' → logprob: -5.025355339050293
    5. 'if' → logprob: -5.150355339050293
    6. 'edges' → logprob: -5.525355339050293
    7. '<|end|>' → logprob: -5.900355339050293
    8. '  
' → logprob: -6.525355339050293
    9. ' edges' → logprob: -6.900355339050293
    10. ' if' → logprob: -7.025355339050293

Token 79: 'for' (ID: 1938)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01590966433286667
    2. '<|end|>' → logprob: -5.140909671783447
    3. ' if' → logprob: -5.515909671783447
    4. '```' → logprob: -5.890909671783447
    5. 'edges' → logprob: -6.515909671783447
    6. '[' → logprob: -7.515909671783447
    7. 'If' → logprob: -7.765909671783447
    8. '
' → logprob: -9.390909194946289
    9. 'v' → logprob: -9.390909194946289
    10. 'e' → logprob: -9.390909194946289

Token 80: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.027279023081064224
    2. ' v' → logprob: -4.152278900146484
    3. 'i' → logprob: -5.152278900146484
    4. ' ' → logprob: -6.652278900146484
    5. ' _' → logprob: -6.777278900146484
    6. '_' → logprob: -6.902278900146484
    7. ' rest' → logprob: -8.027278900146484
    8. 'v' → logprob: -8.527278900146484
    9. ' u' → logprob: -8.527278900146484
    10. ' e' → logprob: -8.527278900146484

Token 81: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04848334565758705
    2. 'in' → logprob: -3.298483371734619
    3. ' ' → logprob: -5.048483371734619
    4. ',' → logprob: -5.548483371734619
    5. '  ' → logprob: -10.548482894897461
    6. ' ,' → logprob: -10.673482894897461
    7. '	in' → logprob: -11.673482894897461
    8. ' n' → logprob: -12.798482894897461
    9. '   ' → logprob: -13.173482894897461
    10. 'n' → logprob: -13.298482894897461

Token 82: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6932350993156433
    2. 'range' → logprob: -0.6932350993156433
    3. ' ' → logprob: -10.068235397338867
    4. '	range' → logprob: -11.193235397338867
    5. '(range' → logprob: -11.693235397338867
    6. 'rest' → logprob: -11.818235397338867
    7. ' xrange' → logprob: -11.818235397338867
    8. '  ' → logprob: -12.818235397338867
    9. '   ' → logprob: -13.818235397338867
    10. '[' → logprob: -14.318235397338867

Token 83: '(' (ID: 7)
  Prédit: '(rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rest' → logprob: -0.5501179099082947
    2. '(' → logprob: -1.1751179695129395
    3. '(len' → logprob: -2.1751179695129395
    4. ' (' → logprob: -7.9251179695129395
    5. '(end' → logprob: -8.925117492675781
    6. 'rest' → logprob: -9.675117492675781
    7. '(i' → logprob: -10.425117492675781
    8. '(L' → logprob: -10.550117492675781
    9. '((' → logprob: -10.675117492675781
    10. ' rest' → logprob: -11.300117492675781

Token 84: '19' (ID: 858)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.48726531863212585
    2. 'len' → logprob: -1.2372653484344482
    3. ' len' → logprob: -3.2372653484344482
    4. ' rest' → logprob: -3.8622653484344482
    5. '1' → logprob: -3.9872653484344482
    6. 'v' → logprob: -5.112265110015869
    7. '   ' → logprob: -6.487265110015869
    8. 'end' → logprob: -6.487265110015869
    9. ' ' → logprob: -6.737265110015869
    10. '0' → logprob: -6.987265110015869

Token 85: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06703223288059235
    2. '+' → logprob: -3.9420323371887207
    3. ' ):' → logprob: -3.9420323371887207
    4. '):
' → logprob: -4.442032337188721
    5. ',' → logprob: -4.942032337188721
    6. ' +' → logprob: -5.192032337188721
    7. '):
' → logprob: -7.317032337188721
    8. ' ,' → logprob: -7.817032337188721
    9. ')' → logprob: -8.567031860351562
    10. ' ):
' → logprob: -9.192031860351562

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017261149361729622
    2. ':' → logprob: -4.642261028289795
    3. ' if' → logprob: -5.142261028289795
    4. ' ' → logprob: -7.517261028289795
    5. '<|end|>' → logprob: -8.267261505126953
    6. '    ' → logprob: -8.392261505126953
    7. '    
' → logprob: -8.642261505126953
    8. '  ' → logprob: -9.392261505126953
    9. '```' → logprob: -9.767261505126953
    10. ' :' → logprob: -9.767261505126953

Token 87: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.31137531995773315
    2. '   ' → logprob: -1.436375379562378
    3. ' ' → logprob: -4.061375141143799
    4. '    ' → logprob: -4.686375141143799
    5. 'if' (adapté à ' if') → logprob: -6.186375141143799
    6. '  ' → logprob: -7.811375141143799
    7. '<|end|>' → logprob: -8.186375617980957
    8. '       ' → logprob: -8.936375617980957
    9. '```' → logprob: -9.186375617980957
    10. ' 
' → logprob: -9.561375617980957

Token 88: ' (' (ID: 350)
  Prédit: ' rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rest' → logprob: -0.3682118356227875
    2. '(rest' → logprob: -1.7432118654251099
    3. 'rest' → logprob: -2.2432117462158203
    4. ' (' → logprob: -3.6182117462158203
    5. '(' → logprob: -9.74321174621582
    6. '((' → logprob: -10.86821174621582
    7. ' ' → logprob: -11.11821174621582
    8. '   ' → logprob: -12.24321174621582
    9. '_rest' → logprob: -12.36821174621582
    10. ' ((' → logprob: -12.68071174621582

Token 89: 'rest' (ID: 7134)
  Prédit: ' rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rest' → logprob: -0.4895140528678894
    2. 'rest' → logprob: -0.9895140528678894
    3. '(rest' → logprob: -4.364513874053955
    4. ' (' → logprob: -5.989513874053955
    5. '(' → logprob: -10.739514350891113
    6. '   ' → logprob: -11.114514350891113
    7. ')' → logprob: -11.114514350891113
    8. '_rest' → logprob: -11.614514350891113
    9. ' ' → logprob: -11.739514350891113
    10. '1' → logprob: -12.114514350891113

Token 90: ' >>' (ID: 6832)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.25791245698928833
    2. '>>' → logprob: -2.1329123973846436
    3. ' >>' → logprob: -2.5079123973846436
    4. ')' → logprob: -4.382912635803223
    5. '&' → logprob: -4.632912635803223
    6. ' )' → logprob: -5.632912635803223
    7. ' ' → logprob: -6.757912635803223
    8. ')&' → logprob: -8.132912635803223
    9. '&gt' → logprob: -10.007912635803223
    10. ')>>' → logprob: -10.007912635803223

Token 91: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04858986660838127
    2. ' i' → logprob: -3.0485899448394775
    3. '	i' → logprob: -13.298589706420898
    4. ' ' → logprob: -14.423589706420898
    5. '   ' → logprob: -15.548589706420898
    6. ')i' → logprob: -16.9235897064209
    7. ')' → logprob: -17.2985897064209
    8. '```' → logprob: -17.5485897064209
    9. '1' → logprob: -17.9235897064209
    10. '(i' → logprob: -18.4235897064209

Token 92: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00133595522493124
    2. ' )' → logprob: -6.876336097717285
    3. ')&' → logprob: -8.126336097717285
    4. '&' → logprob: -12.251336097717285
    5. '1' → logprob: -14.376336097717285
    6. '）' → logprob: -14.626336097717285
    7. ' &' → logprob: -15.001336097717285
    8. '0' → logprob: -15.251336097717285
    9. '`)' → logprob: -15.501336097717285
    10. '   ' → logprob: -15.876336097717285

Token 93: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.1799086481332779
    2. '&' → logprob: -1.8049086332321167
    3. ' ' → logprob: -9.804908752441406
    4. ')' → logprob: -10.179908752441406
    5. '&amp' → logprob: -10.429908752441406
    6. ')&' → logprob: -10.554908752441406
    7. '   ' → logprob: -12.554908752441406
    8. ' &)' → logprob: -13.429908752441406
    9. '1' → logprob: -13.554908752441406
    10. ' )' → logprob: -13.679908752441406

Token 94: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020542005077004433
    2. ' ' → logprob: -3.8955419063568115
    3. '   ' → logprob: -16.27054214477539
    4. '```' → logprob: -17.89554214477539
    5. '１' → logprob: -18.77054214477539
    6. '  ' → logprob: -19.20804214477539
    7. '0' → logprob: -19.39554214477539
    8. '`' → logprob: -19.52054214477539
    9. '>' → logprob: -19.83304214477539
    10. '01' → logprob: -19.89554214477539

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '```' → logprob: -18.125139236450195
    4. '   ' → logprob: -18.250139236450195
    5. '0' → logprob: -18.250139236450195
    6. '01' → logprob: -18.625139236450195
    7. '１' → logprob: -19.250139236450195
    8. '' → logprob: -19.625139236450195
    9. '`' → logprob: -19.687639236450195
    10. '  ' → logprob: -20.375139236450195

Token 96: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02249092236161232
    2. ' :' → logprob: -4.147490978240967
    3. ':
' → logprob: -5.147490978240967
    4. ' :
' → logprob: -8.022490501403809
    5. ' ==' → logprob: -8.522490501403809
    6. '==' → logprob: -9.897490501403809
    7. '>' → logprob: -11.897490501403809
    8. '>:' → logprob: -12.022490501403809
    9. '=' → logprob: -12.647490501403809
    10. ' ):' → logprob: -12.647490501403809

Token 97: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7469817399978638
    2. ' edges' → logprob: -0.7469817399978638
    3. 'edges' → logprob: -3.746981620788574
    4. '   ' → logprob: -3.746981620788574
    5. '(edges' → logprob: -6.621981620788574
    6. '```' → logprob: -6.746981620788574
    7. ' ' → logprob: -7.246981620788574
    8. '_edges' → logprob: -8.121981620788574
    9. '    ' → logprob: -8.246981620788574
    10. ',' → logprob: -8.371981620788574

Token 98: ' num' (ID: 2269)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.05526181682944298
    2. 'edges' → logprob: -2.9302618503570557
    3. '   ' → logprob: -8.555261611938477
    4. '       ' → logprob: -10.180261611938477
    5. '(edges' → logprob: -10.305261611938477
    6. '.edges' → logprob: -10.805261611938477
    7. '           ' → logprob: -10.930261611938477
    8. '_edges' → logprob: -10.930261611938477
    9. ' ' → logprob: -11.305261611938477
    10. '[' → logprob: -11.430261611938477

Token 99: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0791531577706337
    2. '_edges' → logprob: -2.829153060913086
    3. '=' → logprob: -4.704153060913086
    4. 's' → logprob: -5.829153060913086
    5. '_nodes' → logprob: -7.079153060913086
    6. '   ' → logprob: -7.204153060913086
    7. 'edges' → logprob: -7.329153060913086
    8. ' ' → logprob: -7.454153060913086
    9. '_vertices' → logprob: -8.329153060913086
    10. '_tokens' → logprob: -8.579153060913086

Token 100: ' ' (ID: 220)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -1.0374947786331177
    2. 'edges' → logprob: -1.2874947786331177
    3. ' base' → logprob: -1.6624947786331177
    4. 'end' → logprob: -2.412494659423828
    5. ' edges' → logprob: -3.162494659423828
    6. 'rest' → logprob: -3.787494659423828
    7. 'v' → logprob: -5.287494659423828
    8. ' rest' → logprob: -5.412494659423828
    9. '1' → logprob: -5.537494659423828
    10. ' end' → logprob: -5.912494659423828

Token 101: '2' (ID: 17)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.8084995746612549
    2. 'edges' → logprob: -1.4334995746612549
    3. 'end' → logprob: -1.9334995746612549
    4. 'v' → logprob: -2.433499574661255
    5. 'i' → logprob: -3.058499574661255
    6. ' base' → logprob: -4.058499336242676
    7. 'rest' → logprob: -4.933499336242676
    8. ' edges' → logprob: -5.808499336242676
    9. '1' → logprob: -5.933499336242676
    10. ' i' → logprob: -6.308499336242676

Token 102: ' **' (ID: 6240)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15199655294418335
    2. ' *' → logprob: -3.151996612548828
    3. '0' → logprob: -3.776996612548828
    4. '=' → logprob: -3.776996612548828
    5. ' ' → logprob: -4.401996612548828
    6. '*v' → logprob: -5.026996612548828
    7. 'v' → logprob: -5.651996612548828
    8. ' +' → logprob: -5.651996612548828
    9. 'edges' → logprob: -5.651996612548828
    10. ',' → logprob: -5.776996612548828

Token 103: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.8961017202818766e-05
    2. ' i' → logprob: -9.750059127807617
    3. '	i' → logprob: -14.750059127807617
    4. '(i' → logprob: -16.750059127807617
    5. '*i' → logprob: -17.000059127807617
    6. '   ' → logprob: -17.500059127807617
    7. '{i' → logprob: -18.000059127807617
    8. '_i' → logprob: -18.125059127807617
    9. '%i' → logprob: -18.750059127807617
    10. '<|end|>' → logprob: -18.750059127807617

Token 104: '
' (ID: 198)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.5659279227256775
    2. '       ' → logprob: -1.0659279823303223
    3. ' edges' → logprob: -3.1909279823303223
    4. '
' → logprob: -3.9409279823303223
    5. '   ' → logprob: -4.815927982330322
    6. ',' → logprob: -5.315927982330322
    7. '(edges' → logprob: -5.815927982330322
    8. '+' → logprob: -6.065927982330322
    9. '        
' → logprob: -6.065927982330322
    10. '<|end|>' → logprob: -6.315927982330322

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47483929991722107
    2. 'edges' → logprob: -1.0998393297195435
    3. ' edges' → logprob: -3.349839210510254
    4. '   ' → logprob: -4.974839210510254
    5. ',' → logprob: -6.474839210510254
    6. '(edges' → logprob: -7.349839210510254
    7. ' ' → logprob: -8.724839210510254
    8. '        
' → logprob: -8.724839210510254
    9. '.edges' → logprob: -9.224839210510254
    10. '```' → logprob: -9.224839210510254

Token 106: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.010745593346655369
    2. ' edges' → logprob: -4.635745525360107
    3. '   ' → logprob: -7.510745525360107
    4. '       ' → logprob: -7.760745525360107
    5. '.edges' → logprob: -12.760746002197266
    6. '(edges' → logprob: -12.885746002197266
    7. '           ' → logprob: -13.010746002197266
    8. ' ' → logprob: -13.260746002197266
    9. '```' → logprob: -13.510746002197266
    10. '
' → logprob: -13.760746002197266

Token 107: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00028576893964782357
    2. '.' → logprob: -8.250286102294922
    3. '.app' → logprob: -11.875286102294922
    4. '[-' → logprob: -12.125286102294922
    5. 'append' → logprob: -12.875286102294922
    6. ' .' → logprob: -12.875286102294922
    7. '[' → logprob: -13.125286102294922
    8. '   ' → logprob: -13.625286102294922
    9. ').' → logprob: -13.750286102294922
    10. '].' → logprob: -14.000286102294922

Token 108: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.0004212594940327108
    2. '[end' → logprob: -8.250421524047852
    3. '[' → logprob: -9.000421524047852
    4. '(' → logprob: -10.625421524047852
    5. '(end' → logprob: -11.625421524047852
    6. '([
' → logprob: -13.750421524047852
    7. '((' → logprob: -14.375421524047852
    8. '(edges' → logprob: -14.375421524047852
    9. ' ([' → logprob: -14.875421524047852
    10. '(
' → logprob: -15.000421524047852

Token 109: 'i' (ID: 72)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.001692315679974854
    2. 'v' → logprob: -6.501692295074463
    3. ' end' → logprob: -8.876692771911621
    4. '[end' → logprob: -10.376692771911621
    5. '   ' → logprob: -11.626692771911621
    6. '(end' → logprob: -12.001692771911621
    7. ',end' → logprob: -13.876692771911621
    8. '
' → logprob: -14.376692771911621
    9. '	end' → logprob: -14.501692771911621
    10. ''end' → logprob: -15.251692771911621

Token 110: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09391269087791443
    2. ' +' → logprob: -2.5939126014709473
    3. ',' → logprob: -4.218912601470947
    4. 'v' → logprob: -9.593913078308105
    5. ' ,' → logprob: -10.093913078308105
    6. 'end' → logprob: -10.718913078308105
    7. ',end' → logprob: -10.718913078308105
    8. 's' → logprob: -11.218913078308105
    9. ',v' → logprob: -12.093913078308105
    10. '1' → logprob: -12.718913078308105

Token 111: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02545868046581745
    2. '2' → logprob: -3.900458574295044
    3. ' ' → logprob: -5.400458812713623
    4. 'v' → logprob: -8.025458335876465
    5. ' v' → logprob: -10.275458335876465
    6. '3' → logprob: -11.400458335876465
    7. '   ' → logprob: -12.025458335876465
    8. '+' → logprob: -13.025458335876465
    9. 'end' → logprob: -13.275458335876465
    10. '0' → logprob: -13.525458335876465

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04307501018047333
    2. '2' → logprob: -3.1680750846862793
    3. 'v' → logprob: -9.918074607849121
    4. 'end' → logprob: -11.293074607849121
    5. ' ' → logprob: -11.918074607849121
    6. '3' → logprob: -12.793074607849121
    7. 'start' → logprob: -13.543074607849121
    8. '0' → logprob: -14.043074607849121
    9. 'base' → logprob: -14.293074607849121
    10. 'edges' → logprob: -15.105574607849121

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005643874406814575
    2. ',end' → logprob: -5.755643844604492
    3. ' ,' → logprob: -6.380643844604492
    4. '+' → logprob: -7.505643844604492
    5. ' +' → logprob: -8.880643844604492
    6. 'end' → logprob: -10.005643844604492
    7. ',
' → logprob: -11.130643844604492
    8. ' end' → logprob: -12.505643844604492
    9. '[end' → logprob: -12.505643844604492
    10. '   ' → logprob: -12.630643844604492

Token 114: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0036226429510861635
    2. ' end' → logprob: -5.628622531890869
    3. '   ' → logprob: -11.378623008728027
    4. ' ' → logprob: -13.128623008728027
    5. '[end' → logprob: -13.253623008728027
    6. '(end' → logprob: -13.503623008728027
    7. '	end' → logprob: -13.628623008728027
    8. '=end' → logprob: -14.128623008728027
    9. ''end' → logprob: -14.253623008728027
    10. 'v' → logprob: -14.253623008728027

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004935794277116656
    2. ' ,' → logprob: -7.87549352645874
    3. '+' → logprob: -9.750494003295898
    4. ' +' → logprob: -10.375494003295898
    5. ',end' → logprob: -11.125494003295898
    6. ',num' → logprob: -12.500494003295898
    7. ',
' → logprob: -13.000494003295898
    8. '   ' → logprob: -14.000494003295898
    9. ',len' → logprob: -14.375494003295898
    10. '+,' → logprob: -14.625494003295898

Token 116: ' L' (ID: 451)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0702304020524025
    2. ' num' → logprob: -2.695230484008789
    3. '       ' → logprob: -9.570230484008789
    4. 'rest' → logprob: -9.570230484008789
    5. '   ' → logprob: -9.820230484008789
    6. '           ' → logprob: -10.445230484008789
    7. ' ' → logprob: -11.320230484008789
    8. ' rest' → logprob: -11.445230484008789
    9. '	num' → logprob: -11.570230484008789
    10. '        ' → logprob: -11.945230484008789

Token 117: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.41877779364585876
    2. ',' → logprob: -1.5437778234481812
    3. '-' → logprob: -2.1687777042388916
    4. ' ,' → logprob: -4.543777942657471
    5. '   ' → logprob: -6.668777942657471
    6. ',num' → logprob: -7.043777942657471
    7. '-num' → logprob: -7.293777942657471
    8. ' ' → logprob: -8.668777465820312
    9. '
' → logprob: -9.418777465820312
    10. 'num' → logprob: -9.668777465820312

Token 118: ' rest' (ID: 2867)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0023448499850928783
    2. ' num' → logprob: -6.127345085144043
    3. '   ' → logprob: -9.127345085144043
    4. 'rest' → logprob: -10.377345085144043
    5. '       ' → logprob: -12.252345085144043
    6. '	num' → logprob: -12.627345085144043
    7. '1' → logprob: -12.752345085144043
    8. '           ' → logprob: -13.002345085144043
    9. '(num' → logprob: -13.002345085144043
    10. ' ' → logprob: -13.627345085144043

Token 119: '])
' (ID: 5169)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4751899242401123
    2. '+' → logprob: -0.9751899242401123
    3. ' -' → logprob: -7.600190162658691
    4. '-' → logprob: -8.475190162658691
    5. '   ' → logprob: -8.600190162658691
    6. '       ' → logprob: -8.975190162658691
    7. ' ' → logprob: -10.350190162658691
    8. '    ' → logprob: -11.225190162658691
    9. ',' → logprob: -11.600190162658691
    10. '           ' → logprob: -12.100190162658691

Token 120: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 121: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' (adapté à ' rest') → logprob: -0.4311401844024658
    2. 'edges' → logprob: -1.8061401844024658
    3. '0' → logprob: -2.681140184402466
    4. ' rest' → logprob: -3.181140184402466
    5. ' edges' → logprob: -3.681140184402466
    6. '<|end|>' → logprob: -3.931140184402466
    7. ' ' → logprob: -4.556139945983887
    8. '[' → logprob: -5.806139945983887
    9. 'num' → logprob: -6.181139945983887
    10. ',' → logprob: -6.556139945983887

Token 122: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.25619131326675415
    2. '-=' → logprob: -1.5061912536621094
    3. ' ^=' → logprob: -6.381191253662109
    4. '=' → logprob: -6.881191253662109
    5. '-' → logprob: -7.006191253662109
    6. '^' → logprob: -8.38119125366211
    7. '&' → logprob: -8.88119125366211
    8. ' &=' → logprob: -9.63119125366211
    9. '|' → logprob: -10.00619125366211
    10. '+=' → logprob: -10.13119125366211

Token 123: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0006272526225075126
    2. ' num' → logprob: -7.375627040863037
    3. '	num' → logprob: -15.375627517700195
    4. '2' → logprob: -16.250627517700195
    5. '(num' → logprob: -16.750627517700195
    6. '           ' → logprob: -16.750627517700195
    7. '1' → logprob: -17.250627517700195
    8. ' ' → logprob: -17.500627517700195
    9. '$num' → logprob: -17.625627517700195
    10. '   ' → logprob: -17.875627517700195

Token 124: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 125: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 126: '(v' (ID: 6932)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14357292652130127
    2. '(len' → logprob: -2.0185728073120117
    3. '()' → logprob: -7.393572807312012
    4. '('' → logprob: -9.768572807312012
    5. '(edges' → logprob: -9.768572807312012
    6. 'len' → logprob: -10.143572807312012
    7. '("' → logprob: -10.268572807312012
    8. '(`' → logprob: -10.518572807312012
    9. '(sum' → logprob: -11.018572807312012
    10. '(
' → logprob: -11.268572807312012

Token 127: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07046639919281006
    2. '+' → logprob: -2.9454665184020996
    3. ',' → logprob: -4.8204665184021
    4. ' +' → logprob: -5.1954665184021
    5. '+)' → logprob: -6.9454665184021
    6. ' )' → logprob: -7.3204665184021
    7. ')
' → logprob: -9.695466041564941
    8. ' ,' → logprob: -10.320466041564941
    9. ',
' → logprob: -10.445466041564941
    10. ',)' → logprob: -10.695466041564941

Token 128: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0049661858938634396
    2. ' len' → logprob: -5.5049662590026855
    3. 'v' → logprob: -7.6299662590026855
    4. '(len' → logprob: -8.254965782165527
    5. 'edges' → logprob: -9.504965782165527
    6. 'end' → logprob: -10.129965782165527
    7. ' ' → logprob: -12.504965782165527
    8. ')' → logprob: -12.504965782165527
    9. '   ' → logprob: -12.879965782165527
    10. '2' → logprob: -12.879965782165527

Token 129: '(edges' (ID: 185298)
  Prédit: '(edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edges' → logprob: -0.16027124226093292
    2. '(' → logprob: -1.9102712869644165
    3. 'edges' → logprob: -10.160271644592285
    4. ')' → logprob: -12.160271644592285
    5. '(vertices' → logprob: -14.285271644592285
    6. ' edges' → logprob: -14.660271644592285
    7. '(nodes' → logprob: -14.785271644592285
    8. '(
' → logprob: -14.785271644592285
    9. ' (' → logprob: -14.910271644592285
    10. '(edge' → logprob: -14.910271644592285

Token 130: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009316958487033844
    2. ',' → logprob: -4.884316921234131
    3. ')
' → logprob: -6.384316921234131
    4. ',)' → logprob: -11.759317398071289
    5. '),' → logprob: -12.759317398071289
    6. '))' → logprob: -13.009317398071289
    7. ' )' → logprob: -13.009317398071289
    8. '()' → logprob: -13.634317398071289
    9. '')' → logprob: -13.884317398071289
    10. '`)' → logprob: -14.009317398071289

Token 131: 'for' (ID: 1938)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.13992933928966522
    2. ')' → logprob: -2.6399292945861816
    3. ',' → logprob: -3.7649292945861816
    4. '``' → logprob: -4.514929294586182
    5. 'edges' → logprob: -5.014929294586182
    6. '[' → logprob: -5.389929294586182
    7. '<|end|>' → logprob: -5.764929294586182
    8. ' edges' → logprob: -6.139929294586182
    9. 'for' → logprob: -6.139929294586182
    10. '_edges' → logprob: -6.639929294586182

Token 132: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.48562297224998474
    2. 'e' → logprob: -0.9856230020523071
    3. ' edge' → logprob: -4.735622882843018
    4. 'u' → logprob: -6.235622882843018
    5. ' e' → logprob: -7.235622882843018
    6. ' u' → logprob: -10.735623359680176
    7. '(edge' → logprob: -14.485623359680176
    8. 'x' → logprob: -14.610623359680176
    9. 'a' → logprob: -14.735623359680176
    10. '(u' → logprob: -15.110623359680176

Token 133: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020560456439852715
    2. 'in' → logprob: -3.8955605030059814
    3. 's' → logprob: -12.145560264587402
    4. ' ' → logprob: -12.770560264587402
    5. '[' → logprob: -13.270560264587402
    6. '_' → logprob: -13.520560264587402
    7. '_in' → logprob: -13.520560264587402
    8. 'print' → logprob: -13.770560264587402
    9. '	in' → logprob: -13.770560264587402
    10. '  ' → logprob: -14.020560264587402

Token 134: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.5759413838386536
    2. 'edges' → logprob: -0.8259413838386536
    3. '(edges' → logprob: -13.82594108581543
    4. 'edge' → logprob: -14.45094108581543
    5. '.edges' → logprob: -15.32594108581543
    6. ' edge' → logprob: -15.95094108581543
    7. '_edges' → logprob: -16.70094108581543
    8. 'Edges' → logprob: -17.82594108581543
    9. '   ' → logprob: -18.07594108581543
    10. ' ' → logprob: -18.32594108581543

Token 135: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1924586147069931
    2. ':
' → logprob: -1.8174586296081543
    3. '):
' → logprob: -5.442458629608154
    4. 'print' → logprob: -5.567458629608154
    5. '):' → logprob: -5.692458629608154
    6. ')' → logprob: -8.192458152770996
    7. ',' → logprob: -8.692458152770996
    8. '[' → logprob: -8.692458152770996
    9. '   ' → logprob: -8.942458152770996
    10. ' print' → logprob: -9.317458152770996

Token 136: '   ' (ID: 271)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5929097533226013
    2. 'print' → logprob: -0.8429097533226013
    3. '   ' → logprob: -4.092909812927246
    4. '    
' → logprob: -10.092909812927246
    5. '	print' → logprob: -10.342909812927246
    6. ' for' → logprob: -10.467909812927246
    7. 'for' → logprob: -11.717909812927246
    8. '```' → logprob: -11.717909812927246
    9. ' 
' → logprob: -11.842909812927246
    10. '<|end|>' → logprob: -12.467909812927246

Token 137: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00020401719666551799
    2. ' print' → logprob: -8.500204086303711
    3. '   ' → logprob: -14.625204086303711
    4. '```' → logprob: -19.87520408630371
    5. '	print' → logprob: -20.50020408630371
    6. '    
' → logprob: -22.00020408630371
    7. 'for' → logprob: -22.00020408630371
    8. 'printf' → logprob: -22.37520408630371
    9. ' ' → logprob: -24.00020408630371
    10. '.print' → logprob: -24.37520408630371

Token 138: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.004690710920840502
    2. '(edge' → logprob: -6.129690647125244
    3. '(' → logprob: -6.504690647125244
    4. '('' → logprob: -7.129690647125244
    5. '(f' → logprob: -9.129691123962402
    6. '("' → logprob: -10.129691123962402
    7. '*' → logprob: -10.379691123962402
    8. '("{}' → logprob: -11.629691123962402
    9. '('{}' → logprob: -12.004691123962402
    10. 'edge' → logprob: -12.004691123962402

Token 139: 'edge' (ID: 13457)
  Prédit: 'edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -3.583550642360933e-05
    2. ' edge' → logprob: -10.250036239624023
    3. '(edge' → logprob: -15.500036239624023
    4. 'edges' → logprob: -16.000036239624023
    5. '=edge' → logprob: -18.625036239624023
    6. '[' → logprob: -19.625036239624023
    7. ')' → logprob: -20.000036239624023
    8. '   ' → logprob: -20.125036239624023
    9. '.edge' → logprob: -20.250036239624023
    10. ' ' → logprob: -20.750036239624023

Token 140: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.849109119386412e-06
    2. ')
' → logprob: -11.625009536743164
    3. ' )' → logprob: -15.000009536743164
    4. '))' → logprob: -16.250009536743164
    5. ')#' → logprob: -16.625009536743164
    6. ')`' → logprob: -16.625009536743164
    7. '')' → logprob: -16.875009536743164
    8. '")' → logprob: -17.000009536743164
    9. '`)' → logprob: -17.125009536743164
    10. ',' → logprob: -17.625009536743164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 138
Tokens correctement prédits (1ère position, stricte): 53
Tokens correctement prédits (1ère position, avec adaptation): 57
Tokens correctement prédits (top 10): 112
Précision stricte (1ère position): 38.41%
Précision adaptée (1ère position): 41.30%
Précision (top 10): 81.16%
================================================================================
