================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:34:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_input():
    return input()

def split_input(s):
    return s.split()

def convert_to_int_list(str_list):
    return list(map(int, str_list))

def calc_sum(int_list):
    return sum(int_list)

def is_win(total):
    return total < 22

def print_result(result):
    if result:
        print("win")
    else:
        print("bust")

def main():
    s = read_input()
    str_list = split_input(s)
    int_list = convert_to_int_list(str_list)
    total = calc_sum(int_list)
    result = is_win(total)
    print_result(result)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004457178059965372
    2. '_' → logprob: -5.754456996917725
    3. '():' → logprob: -7.629456996917725
    4. '(:' → logprob: -8.004457473754883
    5. '```' → logprob: -9.004457473754883
    6. '(_:' → logprob: -9.004457473754883
    7. ':' → logprob: -9.504457473754883
    8. ' (' → logprob: -9.879457473754883
    9. '(_' → logprob: -10.629457473754883
    10. '_:' → logprob: -12.004457473754883

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7243372797966003
    2. '\n' → logprob: -0.9743372797966003
    3. '\' → logprob: -2.599337339401245
    4. '   ' → logprob: -3.224337339401245
    5. ':' → logprob: -5.224337100982666
    6. '``' → logprob: -5.974337100982666
    7. ''\' → logprob: -5.974337100982666
    8. '    
' → logprob: -5.974337100982666
    9. '
' → logprob: -6.349337100982666
    10. 'newline' → logprob: -6.474337100982666

Token 5: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.618809163570404
    2. '   ' → logprob: -1.3688092231750488
    3. 'input' → logprob: -2.493809223175049
    4. 'r' → logprob: -3.618809223175049
    5. 'data' → logprob: -3.743809223175049
    6. 'x' → logprob: -4.118809223175049
    7. '```' → logprob: -4.493809223175049
    8. 'i' → logprob: -4.868809223175049
    9. 'user' → logprob: -4.993809223175049
    10. 'n' → logprob: -5.118809223175049

Token 6: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34299758076667786
    2. 'input' → logprob: -2.0929975509643555
    3. '"' → logprob: -2.4679975509643555
    4. ' input' → logprob: -2.7179975509643555
    5. ''' → logprob: -4.3429975509643555
    6. '  ' → logprob: -6.8429975509643555
    7. ' "' → logprob: -7.8429975509643555
    8. '(input' → logprob: -8.092997550964355
    9. ' []' → logprob: -8.217997550964355
    10. ' '' → logprob: -8.717997550964355

Token 7: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011711753904819489
    2. '()' → logprob: -6.876171112060547
    3. '.' → logprob: -10.501171112060547
    4. '('' → logprob: -10.751171112060547
    5. '(
' → logprob: -11.001171112060547
    6. '```' → logprob: -11.251171112060547
    7. ''' → logprob: -11.376171112060547
    8. ' (' → logprob: -11.376171112060547
    9. '("("' → logprob: -11.751171112060547
    10. '(.)' → logprob: -12.376171112060547

Token 8: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.90214604139328
    2. '
' → logprob: -1.7771461009979248
    3. '```' → logprob: -2.402146100997925
    4. '<|end|>' → logprob: -2.652146100997925
    5. '(' → logprob: -2.777146100997925
    6. '()' → logprob: -3.027146100997925
    7. 'def' → logprob: -3.277146100997925
    8. 'newline' → logprob: -4.027145862579346
    9. '\' → logprob: -4.152145862579346
    10. '(
' → logprob: -4.152145862579346

Token 9: ' split' (ID: 12648)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' process' → logprob: -1.309850811958313
    2. ' read' → logprob: -1.559850811958313
    3. ' write' → logprob: -1.684850811958313
    4. ' calculate' → logprob: -1.809850811958313
    5. ' main' → logprob: -2.0598506927490234
    6. ' compute' → logprob: -4.559850692749023
    7. ' parse' → logprob: -4.934850692749023
    8. ' space' → logprob: -5.559850692749023
    9. ' print' → logprob: -5.684850692749023
    10. ' add' → logprob: -5.809850692749023

Token 10: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.007607100997120142
    2. '(' → logprob: -5.8826069831848145
    3. '_text' → logprob: -6.0076069831848145
    4. '_line' → logprob: -7.2576069831848145
    5. '_string' → logprob: -8.132607460021973
    6. '_input' → logprob: -8.132607460021973
    7. '_words' → logprob: -9.007607460021973
    8. '_word' → logprob: -9.132607460021973
    9. '_s' → logprob: -9.382607460021973
    10. '_user' → logprob: -9.507607460021973

Token 11: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011876199394464493
    2. '_' → logprob: -4.886876106262207
    3. '('_' → logprob: -6.011876106262207
    4. '("("' → logprob: -8.011876106262207
    5. '("_' → logprob: -8.136876106262207
    6. '(_' → logprob: -8.261876106262207
    7. '(_)' → logprob: -8.386876106262207
    8. '```' → logprob: -9.011876106262207
    9. '('' → logprob: -9.636876106262207
    10. '()' → logprob: -9.761876106262207

Token 12: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.017899634316563606
    2. ',' → logprob: -4.267899513244629
    3. ')' → logprob: -6.142899513244629
    4. '):
' → logprob: -7.017899513244629
    5. ' ):' → logprob: -7.892899513244629
    6. ':' → logprob: -9.017899513244629
    7. '):
' → logprob: -10.267899513244629
    8. ' ,' → logprob: -10.892899513244629
    9. '_string' → logprob: -11.517899513244629
    10. '.split' → logprob: -11.767899513244629

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013234462589025497
    2. ' return' → logprob: -4.763234615325928
    3. 'return' → logprob: -6.138234615325928
    4. 's' → logprob: -7.513234615325928
    5. '(s' → logprob: -7.513234615325928
    6. '    ' → logprob: -7.763234615325928
    7. ' s' → logprob: -8.51323413848877
    8. '.split' → logprob: -8.76323413848877
    9. '(' → logprob: -8.88823413848877
    10. '_' → logprob: -9.26323413848877

Token 14: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6127169728279114
    2. ' s' → logprob: -1.2377169132232666
    3. 's' → logprob: -1.9877169132232666
    4. 'return' (adapté à ' return') → logprob: -3.4877169132232666
    5. '   ' → logprob: -7.612717151641846
    6. '```' → logprob: -13.612716674804688
    7. '(s' → logprob: -14.237716674804688
    8. ' ' → logprob: -14.487716674804688
    9. ' split' → logprob: -14.612716674804688
    10. '_s' → logprob: -15.112716674804688

Token 15: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.06196802109479904
    2. 's' → logprob: -2.8119680881500244
    3. '(s' → logprob: -14.936967849731445
    4. ' ' → logprob: -17.561967849731445
    5. '[' → logprob: -17.936967849731445
    6. '   ' → logprob: -18.061967849731445
    7. ' []' → logprob: -18.311967849731445
    8. '`s' → logprob: -18.311967849731445
    9. '	s' → logprob: -18.436967849731445
    10. ''s' → logprob: -18.811967849731445

Token 16: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.2024604082107544
    2. '.' → logprob: -1.7024604082107544
    3. '.strip' → logprob: -6.952460289001465
    4. ' .' → logprob: -9.452460289001465
    5. 'split' → logprob: -12.702460289001465
    6. '.s' → logprob: -12.827460289001465
    7. '.rstrip' → logprob: -13.452460289001465
    8. '.lower' → logprob: -13.827460289001465
    9. '.replace' → logprob: -13.827460289001465
    10. '.
' → logprob: -14.452460289001465

Token 17: '()

' (ID: 5874)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.028434421867132187
    2. '(' → logprob: -4.0284342765808105
    3. '()' → logprob: -4.9034342765808105
    4. '("("' → logprob: -5.9034342765808105
    5. ''' → logprob: -10.528434753417969
    6. '("' → logprob: -10.653434753417969
    7. '('.')' → logprob: -11.653434753417969
    8. '(',' → logprob: -11.778434753417969
    9. '(`' → logprob: -12.903434753417969
    10. '(('' → logprob: -13.028434753417969

Token 18: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.2246291337069124e-05
    2. '```' → logprob: -11.500021934509277
    3. '<|end|>' → logprob: -12.125021934509277
    4. '\' → logprob: -13.000021934509277
    5. ' def' → logprob: -13.375021934509277
    6. '#' → logprob: -14.500021934509277
    7. '<|end|>' → logprob: -14.500021934509277
    8. 'de' → logprob: -15.125021934509277
    9. '[' → logprob: -15.375021934509277
    10. '``' → logprob: -16.000022888183594

Token 19: ' convert' (ID: 8452)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3645744323730469
    2. 'main' → logprob: -1.4895744323730469
    3. ' join' → logprob: -3.864574432373047
    4. ' process' → logprob: -3.864574432373047
    5. 'process' → logprob: -4.239574432373047
    6. 'join' → logprob: -4.364574432373047
    7. 'parse' → logprob: -5.614574432373047
    8. ' parse' → logprob: -6.114574432373047
    9. 'convert' → logprob: -6.489574432373047
    10. ' convert' → logprob: -7.114574432373047

Token 20: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.41627293825149536
    2. '_' → logprob: -1.1662728786468506
    3. '(' → logprob: -4.04127311706543
    4. '_token' → logprob: -5.04127311706543
    5. '_tokens' → logprob: -6.54127311706543
    6. '_input' → logprob: -7.66627311706543
    7. '```' → logprob: -7.66627311706543
    8. '(_' → logprob: -8.04127311706543
    9. '_string' → logprob: -8.16627311706543
    10. '_(' → logprob: -8.16627311706543

Token 21: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.0015142656629905105
    2. 'int' → logprob: -6.501514434814453
    3. '_' → logprob: -12.626514434814453
    4. '_in' → logprob: -13.001514434814453
    5. '_list' → logprob: -13.376514434814453
    6. '_float' → logprob: -13.751514434814453
    7. '_integer' → logprob: -13.876514434814453
    8. '_numbers' → logprob: -14.001514434814453
    9. 'Int' → logprob: -14.751514434814453
    10. '_tokens' → logprob: -15.126514434814453

Token 22: '_list' (ID: 4162)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.2467341274023056
    2. 's' → logprob: -1.7467341423034668
    3. '(' → logprob: -3.121734142303467
    4. ' (' → logprob: -9.371733665466309
    5. '(x' → logprob: -10.621733665466309
    6. '(token' → logprob: -11.371733665466309
    7. '(n' → logprob: -11.496733665466309
    8. '(tokens' → logprob: -11.496733665466309
    9. '(strings' → logprob: -11.496733665466309
    10. '(t' → logprob: -11.871733665466309

Token 23: '(str' (ID: 7946)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.4747867286205292
    2. '(' → logprob: -0.9747867584228516
    3. ' (' → logprob: -7.724786758422852
    4. '(lst' → logprob: -8.849786758422852
    5. '(ls' → logprob: -10.724786758422852
    6. '(l' → logprob: -10.724786758422852
    7. '("("' → logprob: -11.474786758422852
    8. '(n' → logprob: -11.849786758422852
    9. '(x' → logprob: -11.849786758422852
    10. '(line' → logprob: -12.099786758422852

Token 24: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9033930897712708
    2. '_list' → logprob: -1.403393030166626
    3. 'ing' → logprob: -1.528393030166626
    4. 'ings' → logprob: -2.028393030166626
    5. '_lst' → logprob: -8.278392791748047
    6. '_' → logprob: -8.528392791748047
    7. '_lists' → logprob: -10.278392791748047
    8. 'List' → logprob: -10.278392791748047
    9. ')' → logprob: -11.403392791748047
    10. '_List' → logprob: -11.528392791748047

Token 25: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0016200727550312877
    2. ')' → logprob: -6.626620292663574
    3. '):
' → logprob: -8.751620292663574
    4. ' ):' → logprob: -9.751620292663574
    5. ',' → logprob: -10.376620292663574
    6. '(' → logprob: -11.501620292663574
    7. 's' → logprob: -11.751620292663574
    8. ':' → logprob: -11.751620292663574
    9. '):

' → logprob: -12.126620292663574
    10. '[]):' → logprob: -12.751620292663574

Token 26: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.19513137638568878
    2. '[int' → logprob: -2.195131301879883
    3. '   ' → logprob: -2.945131301879883
    4. ' return' → logprob: -5.570131301879883
    5. 'return' → logprob: -5.820131301879883
    6. '[:]' → logprob: -6.070131301879883
    7. ' [' → logprob: -6.445131301879883
    8. '(' → logprob: -7.070131301879883
    9. '[
' → logprob: -7.945131301879883
    10. 'def' → logprob: -7.945131301879883

Token 27: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16652840375900269
    2. ' return' → logprob: -2.1665284633636475
    3. 'return' (adapté à ' return') → logprob: -3.2915284633636475
    4. '[' → logprob: -7.166528224945068
    5. '[int' → logprob: -7.166528224945068
    6. ' [' → logprob: -9.541528701782227
    7. '[
' → logprob: -12.666528701782227
    8. '	return' → logprob: -13.166528701782227
    9. ' ' → logprob: -13.291528701782227
    10. '  ' → logprob: -13.791528701782227

Token 28: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.026915879920125008
    2. ' list' → logprob: -3.7769157886505127
    3. '[list' → logprob: -5.901916027069092
    4. '[' → logprob: -7.026916027069092
    5. 'list' → logprob: -10.776915550231934
    6. '[int' → logprob: -11.526915550231934
    7. '[List' → logprob: -11.651915550231934
    8. ' ' → logprob: -14.651915550231934
    9. '   ' → logprob: -14.901915550231934
    10. ' ' → logprob: -14.901915550231934

Token 29: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0007117166533134878
    2. '(' → logprob: -7.250711917877197
    3. '(
' → logprob: -14.000711441040039
    4. '(int' → logprob: -14.250711441040039
    5. 'map' → logprob: -15.625711441040039
    6. '(

' → logprob: -16.62571144104004
    7. ',map' → logprob: -17.50071144104004
    8. ' map' → logprob: -17.50071144104004
    9. '	map' → logprob: -17.87571144104004
    10. '_map' → logprob: -18.12571144104004

Token 30: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0009683952084742486
    2. '(' → logprob: -7.6259684562683105
    3. ' int' → logprob: -8.000967979431152
    4. 'int' → logprob: -9.000967979431152
    5. ' (' → logprob: -11.875967979431152
    6. '<int' → logprob: -12.000967979431152
    7. '   ' → logprob: -12.750967979431152
    8. ',int' → logprob: -13.125967979431152
    9. '=int' → logprob: -13.625967979431152
    10. '	int' → logprob: -14.000967979431152

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0042577809654176235
    2. ',str' → logprob: -5.754257678985596
    3. ' ,' → logprob: -7.004257678985596
    4. '(str' → logprob: -8.754258155822754
    5. '(' → logprob: -12.379258155822754
    6. '   ' → logprob: -13.504258155822754
    7. ',
' → logprob: -13.504258155822754
    8. ')' → logprob: -13.754258155822754
    9. ',s' → logprob: -13.754258155822754
    10. ' str' → logprob: -14.004258155822754

Token 32: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.4740813970565796
    2. ' str' → logprob: -0.9740813970565796
    3. '(str' → logprob: -13.724081039428711
    4. '	str' → logprob: -13.849081039428711
    5. ' ' → logprob: -14.474081039428711
    6. 's' → logprob: -14.599081039428711
    7. ')' → logprob: -15.474081039428711
    8. '_str' → logprob: -15.474081039428711
    9. ',str' → logprob: -15.474081039428711
    10. '   ' → logprob: -15.724081039428711

Token 33: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -9.088346359931165e-07
    2. '_' → logprob: -14.625000953674316
    3. ')_' → logprob: -15.625000953674316
    4. '_lst' → logprob: -16.25
    5. ')' → logprob: -16.375
    6. ' _' → logprob: -16.875
    7. 'list' → logprob: -17.875
    8. '   ' → logprob: -18.125
    9. '_l' → logprob: -18.25
    10. '))' → logprob: -18.375

Token 34: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00011009939044015482
    2. ')))' → logprob: -9.750109672546387
    3. ')' → logprob: -10.125109672546387
    4. ' ))' → logprob: -11.625109672546387
    5. '))
' → logprob: -13.500109672546387
    6. '   ' → logprob: -14.125109672546387
    7. ' ' → logprob: -14.625109672546387
    8. '()))' → logprob: -16.625110626220703
    9. '))

' → logprob: -17.125110626220703
    10. '))))' → logprob: -17.375110626220703

Token 35: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.23917081207037e-05
    2. '<|end|>' → logprob: -11.000041961669922
    3. '<|end|>' → logprob: -11.875041961669922
    4. '
' → logprob: -12.125041961669922
    5. '\' → logprob: -12.250041961669922
    6. '```' → logprob: -12.875041961669922
    7. '

' → logprob: -13.125041961669922
    8. ' def' → logprob: -13.250041961669922
    9. '[' → logprob: -14.000041961669922
    10. '\n' → logprob: -15.375041961669922

Token 36: ' calc' (ID: 25691)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.17548711597919464
    2. ' calculate' → logprob: -3.0504870414733887
    3. ' process' → logprob: -3.3004870414733887
    4. ' solve' → logprob: -3.6754870414733887
    5. ' find' → logprob: -4.175487041473389
    6. ' compute' → logprob: -4.675487041473389
    7. ' sum' → logprob: -4.925487041473389
    8. ' count' → logprob: -5.300487041473389
    9. 'main' → logprob: -5.425487041473389
    10. 'calculate' → logprob: -6.050487041473389

Token 37: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.1127014234662056
    2. '_factor' → logprob: -3.112701416015625
    3. 'ulate' → logprob: -3.862701416015625
    4. '_max' → logprob: -4.487701416015625
    5. '_average' → logprob: -5.487701416015625
    6. '_' → logprob: -5.737701416015625
    7. '_difference' → logprob: -5.862701416015625
    8. '_s' → logprob: -6.237701416015625
    9. '_total' → logprob: -6.487701416015625
    10. '_product' → logprob: -6.612701416015625

Token 38: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0071202609688043594
    2. '()' → logprob: -6.007120132446289
    3. '_' → logprob: -6.632120132446289
    4. '(a' → logprob: -6.882120132446289
    5. '(s' → logprob: -7.882120132446289
    6. '(sum' → logprob: -8.382120132446289
    7. '(x' → logprob: -8.882120132446289
    8. '_sum' → logprob: -9.132120132446289
    9. '(numbers' → logprob: -9.132120132446289
    10. '(user' → logprob: -9.257120132446289

Token 39: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.014081232249736786
    2. 's' → logprob: -4.889081001281738
    3. '_s' → logprob: -5.264081001281738
    4. '_lists' → logprob: -7.264081001281738
    5. ')_' → logprob: -8.514081001281738
    6. ')' → logprob: -9.014081001281738
    7. '_lst' → logprob: -9.514081001281738
    8. '_' → logprob: -9.514081001281738
    9. '(_' → logprob: -10.764081001281738
    10. ' _' → logprob: -11.514081001281738

Token 40: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009275413467548788
    2. ')' → logprob: -7.125927448272705
    3. ' ):' → logprob: -9.250927925109863
    4. '):
' → logprob: -11.250927925109863
    5. '[]):' → logprob: -12.250927925109863
    6. '   ' → logprob: -13.000927925109863
    7. ')):' → logprob: -13.625927925109863
    8. '_list' → logprob: -14.125927925109863
    9. ',' → logprob: -14.250927925109863
    10. ':' → logprob: -14.250927925109863

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004972358699887991
    2. ' return' → logprob: -5.504972457885742
    3. 'return' → logprob: -7.504972457885742
    4. 'sum' → logprob: -8.754972457885742
    5. ' sum' → logprob: -8.879972457885742
    6. '(' → logprob: -11.629972457885742
    7. '    ' → logprob: -11.629972457885742
    8. '(sum' → logprob: -11.629972457885742
    9. '    
' → logprob: -12.504972457885742
    10. ')' → logprob: -13.379972457885742

Token 42: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.48276904225349426
    2. '   ' → logprob: -1.2327690124511719
    3. 'return' (adapté à ' return') → logprob: -2.482769012451172
    4. ' sum' → logprob: -5.232769012451172
    5. 'sum' → logprob: -5.982769012451172
    6. ' ' → logprob: -10.232769012451172
    7. '    ' → logprob: -10.982769012451172
    8. '  ' → logprob: -11.482769012451172
    9. ')' → logprob: -13.232769012451172
    10. '```' → logprob: -13.482769012451172

Token 43: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.005238260608166456
    2. 'sum' → logprob: -5.255238056182861
    3. ' ' → logprob: -13.13023853302002
    4. '(sum' → logprob: -13.50523853302002
    5. ' ' → logprob: -14.00523853302002
    6. '	sum' → logprob: -15.88023853302002
    7. '   ' → logprob: -16.380237579345703
    8. '  ' → logprob: -16.880237579345703
    9. '=sum' → logprob: -17.380237579345703
    10. '.sum' → logprob: -18.255237579345703

Token 44: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.20142288506031036
    2. '(' → logprob: -1.701422929763794
    3. ' (' → logprob: -12.451422691345215
    4. '(
' → logprob: -14.076422691345215
    5. 'int' → logprob: -14.826422691345215
    6. '(s' → logprob: -15.076422691345215
    7. '<int' → logprob: -15.201422691345215
    8. '()' → logprob: -15.201422691345215
    9. '(

' → logprob: -15.201422691345215
    10. '(in' → logprob: -15.326422691345215

Token 45: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00017290872347075492
    2. '_l' → logprob: -9.25017261505127
    3. '_' → logprob: -9.75017261505127
    4. '_li' → logprob: -11.37517261505127
    5. ')' → logprob: -13.12517261505127
    6. ')_' → logprob: -13.62517261505127
    7. '_lst' → logprob: -13.75017261505127
    8. '_)' → logprob: -14.50017261505127
    9. '_ls' → logprob: -14.87517261505127
    10. '_lists' → logprob: -15.00017261505127

Token 46: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. '))' → logprob: -14.625000953674316
    3. ')
' → logprob: -16.125
    4. ' )' → logprob: -16.125
    5. '`)' → logprob: -16.5
    6. '')' → logprob: -17.25
    7. '()' → logprob: -17.625
    8. '(' → logprob: -18.25
    9. ')`' → logprob: -18.375
    10. '[' → logprob: -18.5

Token 47: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0011740362970158458
    2. 'print' → logprob: -7.751173973083496
    3. 'n' → logprob: -8.501173973083496
    4. '```' → logprob: -9.001173973083496
    5. 'if' → logprob: -9.126173973083496
    6. '#' → logprob: -9.126173973083496
    7. '\' → logprob: -10.001173973083496
    8. '(' → logprob: -10.376173973083496
    9. 'result' → logprob: -11.001173973083496
    10. '
' → logprob: -11.126173973083496

Token 48: ' is' (ID: 382)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.09406647086143494
    2. ' calculate' → logprob: -2.7190663814544678
    3. ' calc' → logprob: -4.344066619873047
    4. ' _' → logprob: -5.844066619873047
    5. ' ' → logprob: -6.594066619873047
    6. ' compute' → logprob: -6.594066619873047
    7. ' process' → logprob: -7.344066619873047
    8. ' space' → logprob: -7.344066619873047
    9. ' find' → logprob: -7.469066619873047
    10. ' def' → logprob: -7.719066619873047

Token 49: '_win' (ID: 63099)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.042239077389240265
    2. '_even' → logprob: -3.917239189147949
    3. ' _' → logprob: -4.292239189147949
    4. '_prime' → logprob: -6.167239189147949
    5. '_pal' → logprob: -6.167239189147949
    6. '_positive' → logprob: -6.542239189147949
    7. '_sum' → logprob: -7.542239189147949
    8. ' ' → logprob: -7.792239189147949
    9. '_valid' → logprob: -8.04223918914795
    10. '_space' → logprob: -8.04223918914795

Token 50: '(total' (ID: 39744)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006034261547029018
    2. '_' → logprob: -5.5060343742370605
    3. '(s' → logprob: -7.3810343742370605
    4. '_(' → logprob: -8.506033897399902
    5. 's' → logprob: -8.631033897399902
    6. '(_)' → logprob: -8.881033897399902
    7. '()' → logprob: -9.006033897399902
    8. '('' → logprob: -9.006033897399902
    9. '("("' → logprob: -9.256033897399902
    10. '((' → logprob: -9.506033897399902

Token 51: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8084102272987366
    2. '>=' → logprob: -1.8084101676940918
    3. '>' → logprob: -1.9334101676940918
    4. '):' → logprob: -2.808410167694092
    5. '_' → logprob: -3.058410167694092
    6. ' >=' → logprob: -3.058410167694092
    7. '(' → logprob: -3.683410167694092
    8. ' >' → logprob: -4.308410167694092
    9. ' ' → logprob: -4.433410167694092
    10. ' )' → logprob: -5.183410167694092

Token 52: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13452228903770447
    2. ':' → logprob: -2.7595221996307373
    3. ' :' → logprob: -3.2595221996307373
    4. '   ' → logprob: -4.134522438049316
    5. ' (' → logprob: -5.384522438049316
    6. '    ' → logprob: -6.384522438049316
    7. ' ' → logprob: -7.634522438049316
    8. '_' → logprob: -8.259522438049316
    9. '):' → logprob: -8.634522438049316
    10. '():' → logprob: -8.634522438049316

Token 53: ' return' (ID: 622)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.9550737142562866
    2. '   ' → logprob: -1.3300737142562866
    3. 'total' → logprob: -1.4550737142562866
    4. '(' → logprob: -2.830073833465576
    5. ' ' → logprob: -3.955073833465576
    6. '(total' → logprob: -4.080073833465576
    7. ' (' → logprob: -4.955073833465576
    8. ' return' → logprob: -5.580073833465576
    9. '    ' → logprob: -5.830073833465576
    10. 'return' (adapté à ' return') → logprob: -6.330073833465576

Token 54: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.0036098056007176638
    2. 'total' → logprob: -5.628609657287598
    3. '(total' → logprob: -13.128609657287598
    4. ' tot' → logprob: -13.503609657287598
    5. ' True' → logprob: -13.628609657287598
    6. ' ' → logprob: -13.753609657287598
    7. ' ' → logprob: -13.753609657287598
    8. ' tota' → logprob: -13.878609657287598
    9. ' t' → logprob: -14.503609657287598
    10. '	total' → logprob: -14.503609657287598

Token 55: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.7961775064468384
    2. ' %' → logprob: -1.2961775064468384
    3. '%' → logprob: -2.046177387237549
    4. '>' → logprob: -2.046177387237549
    5. ' >=' → logprob: -4.296177387237549
    6. ' ' → logprob: -6.421177387237549
    7. '>=' → logprob: -6.671177387237549
    8. ' ==' → logprob: -9.171177864074707
    9. '()>' → logprob: -9.921177864074707
    10. '==' → logprob: -10.171177864074707

Token 56: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4808852672576904
    2. '100' → logprob: -1.4808852672576904
    3. '10' → logprob: -1.7308852672576904
    4. '20' → logprob: -2.2308852672576904
    5. '50' → logprob: -2.7308852672576904
    6. '21' → logprob: -2.8558852672576904
    7. '40' → logprob: -2.9808852672576904
    8. '0' → logprob: -4.1058855056762695
    9. '18' → logprob: -4.2308855056762695
    10. '=' → logprob: -4.6058855056762695

Token 57: '22' (ID: 1709)
  Prédit: '21'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -1.077027440071106
    2. '100' → logprob: -1.577027440071106
    3. '10' → logprob: -1.702027440071106
    4. '20' → logprob: -2.8270273208618164
    5. '50' → logprob: -2.9520273208618164
    6. '0' → logprob: -3.9520273208618164
    7. '15' → logprob: -4.077027320861816
    8. '30' → logprob: -4.202027320861816
    9. '22' → logprob: -4.202027320861816
    10. '3' → logprob: -4.327027320861816

Token 58: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21512342989444733
    2. '
' → logprob: -2.340123414993286
    3. '<|end|>' → logprob: -3.340123414993286
    4. '\n' → logprob: -3.965123414993286
    5. '\' → logprob: -4.090123653411865
    6. '

' → logprob: -4.465123653411865
    7. ':' → logprob: -5.465123653411865
    8. '#' → logprob: -5.715123653411865
    9. 'newline' → logprob: -6.215123653411865
    10. '```' → logprob: -6.715123653411865

Token 59: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005009244196116924
    2. 'print' → logprob: -6.005009174346924
    3. 'if' → logprob: -7.255009174346924
    4. '<|end|>' → logprob: -7.255009174346924
    5. '#' → logprob: -7.630009174346924
    6. '
' → logprob: -9.380009651184082
    7. 'n' → logprob: -9.505009651184082
    8. '```' → logprob: -9.630009651184082
    9. '.' → logprob: -9.755009651184082
    10. '<|end|>' → logprob: -10.005009651184082

Token 60: ' print' (ID: 2123)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.014982939697802067
    2. ' def' → logprob: -5.139983177185059
    3. ' play' → logprob: -5.389983177185059
    4. ' check' → logprob: -6.514983177185059
    5. ' calculate' → logprob: -7.014983177185059
    6. ' game' → logprob: -7.889983177185059
    7. ' __' → logprob: -8.264983177185059
    8. ' ' → logprob: -8.389983177185059
    9. ' solve' → logprob: -8.889983177185059
    10. ' process' → logprob: -9.264983177185059

Token 61: '_result' (ID: 11623)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002238043351098895
    2. '("("' → logprob: -6.7522382736206055
    3. '()' → logprob: -8.377238273620605
    4. '_' → logprob: -8.502238273620605
    5. '("' → logprob: -8.877238273620605
    6. '("")' → logprob: -9.002238273620605
    7. '_result' → logprob: -9.127238273620605
    8. '('' → logprob: -9.877238273620605
    9. '("_' → logprob: -9.877238273620605
    10. '(""' → logprob: -10.502238273620605

Token 62: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000399925687815994
    2. '("("' → logprob: -8.625399589538574
    3. '('' → logprob: -8.750399589538574
    4. '()' → logprob: -10.375399589538574
    5. '("' → logprob: -11.625399589538574
    6. '("")' → logprob: -12.000399589538574
    7. '_' → logprob: -12.375399589538574
    8. '("""' → logprob: -12.625399589538574
    9. '(s' → logprob: -14.000399589538574
    10. ' (' → logprob: -14.250399589538574

Token 63: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005357906222343445
    2. ')' → logprob: -5.25535774230957
    3. '):
' → logprob: -9.13035774230957
    4. ':' → logprob: -12.13035774230957
    5. ' ):' → logprob: -12.50535774230957
    6. '   ' → logprob: -12.88035774230957
    7. '(' → logprob: -13.88035774230957
    8. ',' → logprob: -14.25535774230957
    9. ' ' → logprob: -14.75535774230957
    10. '):
' → logprob: -14.88035774230957

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.317247167928144e-05
    2. '(' → logprob: -9.750093460083008
    3. 'print' → logprob: -11.125093460083008
    4. ' print' → logprob: -11.250093460083008
    5. '()' → logprob: -12.750093460083008
    6. '    
' → logprob: -13.625093460083008
    7. '    ' → logprob: -14.125093460083008
    8. ' if' → logprob: -14.875093460083008
    9. '```' → logprob: -15.000093460083008
    10. '   ' → logprob: -15.500093460083008

Token 65: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4593861997127533
    2. '   ' → logprob: -1.5843862295150757
    3. ' print' → logprob: -1.8343862295150757
    4. ' if' → logprob: -6.209386348724365
    5. 'if' (adapté à ' if') → logprob: -6.584386348724365
    6. 'def' → logprob: -9.959385871887207
    7. '```' → logprob: -10.084385871887207
    8. 'pr' → logprob: -11.084385871887207
    9. ' pass' → logprob: -11.709385871887207
    10. 'pass' → logprob: -11.959385871887207

Token 66: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.004285792354494333
    2. 'result' → logprob: -5.50428581237793
    3. ' is' → logprob: -9.12928581237793
    4. ' not' → logprob: -9.25428581237793
    5. '(result' → logprob: -13.62928581237793
    6. ' ' → logprob: -14.62928581237793
    7. 'is' → logprob: -14.75428581237793
    8. '    ' → logprob: -14.75428581237793
    9. 'not' → logprob: -15.12928581237793
    10. '	result' → logprob: -15.87928581237793

Token 67: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1120351254940033
    2. ' ==' → logprob: -2.612035036087036
    3. ' :' → logprob: -3.612035036087036
    4. '==' → logprob: -5.237035274505615
    5. '):' → logprob: -9.487034797668457
    6. ':
' → logprob: -9.487034797668457
    7. ' ):' → logprob: -10.237034797668457
    8. '():' → logprob: -10.987034797668457
    9. ' >=' → logprob: -11.362034797668457
    10. '   ' → logprob: -11.362034797668457

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0917559489607811
    2. ':' → logprob: -2.4667558670043945
    3. '   ' → logprob: -6.0917558670043945
    4. '(' → logprob: -9.091755867004395
    5. ' :' → logprob: -9.341755867004395
    6. ':
' → logprob: -9.591755867004395
    7. '():' → logprob: -9.966755867004395
    8. '(True' → logprob: -10.216755867004395
    9. '    ' → logprob: -10.341755867004395
    10. ' print' → logprob: -10.591755867004395

Token 69: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5713396668434143
    2. '   ' → logprob: -0.9463396668434143
    3. ' print' → logprob: -3.4463396072387695
    4. 'print' (adapté à ' print') → logprob: -4.3213396072387695
    5. '    ' → logprob: -7.0713396072387695
    6. '    
' → logprob: -8.57133960723877
    7. '\' → logprob: -8.82133960723877
    8. '(' → logprob: -9.07133960723877
    9. ' ' → logprob: -9.69633960723877
    10. ''' → logprob: -9.82133960723877

Token 70: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.1429135650396347
    2. '(' → logprob: -2.017913579940796
    3. '('' → logprob: -8.392913818359375
    4. '("("' → logprob: -11.892913818359375
    5. '"' → logprob: -13.267913818359375
    6. '(True' → logprob: -14.267913818359375
    7. '(
' → logprob: -14.392913818359375
    8. '("")' → logprob: -14.392913818359375
    9. '()' → logprob: -14.642913818359375
    10. ' ("' → logprob: -15.642913818359375

Token 71: 'win' (ID: 11668)
  Prédit: 'You'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'You' → logprob: -0.8903473019599915
    2. 'Win' → logprob: -1.1403472423553467
    3. 'win' → logprob: -2.0153472423553467
    4. 'WIN' → logprob: -2.5153472423553467
    5. '勝' → logprob: -4.390347480773926
    6. 'Black' → logprob: -4.765347480773926
    7. 'B' → logprob: -4.890347480773926
    8. 'Yes' → logprob: -5.515347480773926
    9. 'Player' → logprob: -6.015347480773926
    10. 'Won' → logprob: -6.140347480773926

Token 72: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.22087585926055908
    2. '")
' → logprob: -1.720875859260559
    3. '!")' → logprob: -4.4708757400512695
    4. '")
' → logprob: -5.0958757400512695
    5. '!")
' → logprob: -6.5958757400512695
    6. '!' → logprob: -8.47087574005127
    7. '")

' → logprob: -9.34587574005127
    8. 's' → logprob: -10.72087574005127
    9. ' ")' → logprob: -11.97087574005127
    10. '")

' → logprob: -11.97087574005127

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4560478627681732
    2. ' else' → logprob: -1.2060478925704956
    3. 'else' → logprob: -2.706047773361206
    4. '	else' → logprob: -10.956048011779785
    5. ' ' → logprob: -11.956048011779785
    6. 'e' → logprob: -12.331048011779785
    7. ' elif' → logprob: -12.956048011779785
    8. 'elif' → logprob: -13.331048011779785
    9. '    ' → logprob: -13.581048011779785
    10. '  ' → logprob: -13.581048011779785

Token 74: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5770685076713562
    2. 'else' (adapté à ' else') → logprob: -0.8270685076713562
    3. '   ' → logprob: -6.952068328857422
    4. 'e' → logprob: -9.452068328857422
    5. ' ' → logprob: -10.327068328857422
    6. 'elif' → logprob: -10.577068328857422
    7. ' elif' → logprob: -11.077068328857422
    8. 'el' → logprob: -11.827068328857422
    9. '	else' → logprob: -12.327068328857422
    10. '```' → logprob: -13.077068328857422

Token 75: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02134891413152218
    2. '       ' → logprob: -4.39634895324707
    3. ':
' → logprob: -4.77134895324707
    4. '   ' → logprob: -8.27134895324707
    5. ' :' → logprob: -10.39634895324707
    6. '    ' → logprob: -11.39634895324707
    7. 'print' → logprob: -12.14634895324707
    8. ' :
' → logprob: -12.39634895324707
    9. '```' → logprob: -12.77134895324707
    10. '        ' → logprob: -12.77134895324707

Token 76: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008460559882223606
    2. 'print' → logprob: -5.133460521697998
    3. ' print' → logprob: -6.133460521697998
    4. '    ' → logprob: -8.633460998535156
    5. '   ' → logprob: -9.008460998535156
    6. '        ' → logprob: -10.133460998535156
    7. ' ' → logprob: -12.633460998535156
    8. '```' → logprob: -12.758460998535156
    9. '     ' → logprob: -12.883460998535156
    10. '      ' → logprob: -12.883460998535156

Token 77: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.07889816164970398
    2. ' print' → logprob: -2.5788981914520264
    3. '       ' → logprob: -12.703898429870605
    4. '	print' → logprob: -13.328898429870605
    5. '   ' → logprob: -13.703898429870605
    6. '.print' → logprob: -14.328898429870605
    7. ' ' → logprob: -14.453898429870605
    8. 'pr' → logprob: -14.578898429870605
    9. '    ' → logprob: -15.328898429870605
    10. '(print' → logprob: -15.453898429870605

Token 78: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00248849974013865
    2. '(' → logprob: -6.002488613128662
    3. '("("' → logprob: -11.877488136291504
    4. '"' → logprob: -12.377488136291504
    5. '("")' → logprob: -14.002488136291504
    6. '("(' → logprob: -15.252488136291504
    7. '(
' → logprob: -15.877488136291504
    8. '(""' → logprob: -16.12748908996582
    9. '('' → logprob: -16.25248908996582
    10. '(":' → logprob: -16.50248908996582

Token 79: 'b' (ID: 65)
  Prédit: 'lose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lose' → logprob: -0.024602973833680153
    2. 'loss' → logprob: -3.7746028900146484
    3. 'lost' → logprob: -7.274602890014648
    4. 'lo' → logprob: -8.274602890014648
    5. 'fail' → logprob: -8.524602890014648
    6. '"' → logprob: -9.024602890014648
    7. ' lose' → logprob: -9.899602890014648
    8. 'los' → logprob: -10.649602890014648
    9. 'b' → logprob: -12.274602890014648
    10. 'Lose' → logprob: -12.899602890014648

Token 80: 'ust' (ID: 570)
  Prédit: 'ust'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ust' → logprob: -0.08110697567462921
    2. 'u' → logprob: -2.5811069011688232
    3. 'us' → logprob: -6.206107139587402
    4. 'urst' → logprob: -10.456107139587402
    5. 'r' → logprob: -10.581107139587402
    6. 'o' → logprob: -10.706107139587402
    7. '"' → logprob: -11.206107139587402
    8. 'ur' → logprob: -11.206107139587402
    9. 'usted' → logprob: -11.206107139587402
    10. 'lose' → logprob: -11.706107139587402

Token 81: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.000192812061868608
    2. ')' → logprob: -9.250192642211914
    3. ')")' → logprob: -9.250192642211914
    4. '")
' → logprob: -15.375192642211914
    5. '}")' → logprob: -15.375192642211914
    6. '"' → logprob: -18.000192642211914
    7. '!")' → logprob: -18.375192642211914
    8. ')"' → logprob: -18.500192642211914
    9. '")
' → logprob: -18.875192642211914
    10. '")

' → logprob: -19.125192642211914

Token 82: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0028946325182914734
    2. 'if' → logprob: -5.877894401550293
    3. 's' → logprob: -9.877894401550293
    4. 'for' → logprob: -10.377894401550293
    5. 'n' → logprob: -12.377894401550293
    6. 'while' → logprob: -13.627894401550293
    7. 'input' → logprob: -14.377894401550293
    8. 'num' → logprob: -15.502894401550293
    9. 'print' → logprob: -15.502894401550293
    10. 'data' → logprob: -15.627894401550293

Token 83: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0008323782822117209
    2. 'main' → logprob: -7.375832557678223
    3. ' blackjack' → logprob: -8.750832557678223
    4. ' play' → logprob: -10.375832557678223
    5. '_main' → logprob: -12.125832557678223
    6. ' run' → logprob: -12.125832557678223
    7. ' process' → logprob: -13.125832557678223
    8. ' game' → logprob: -13.250832557678223
    9. ' black' → logprob: -14.500832557678223
    10. ' poker' → logprob: -15.375832557678223

Token 84: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -8.268254896393046e-05
    2. '(' → logprob: -9.875082969665527
    3. '()' → logprob: -10.875082969665527
    4. ' ():' → logprob: -12.000082969665527
    5. '_' → logprob: -12.625082969665527
    6. '():
' → logprob: -13.375082969665527
    7. '(:' → logprob: -14.000082969665527
    8. ':' → logprob: -16.37508201599121
    9. '(":' → logprob: -16.62508201599121
    10. '()>' → logprob: -17.00008201599121

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012447258457541466
    2. 's' → logprob: -5.012447357177734
    3. 'input' → logprob: -5.887447357177734
    4. ' s' → logprob: -6.262447357177734
    5. ' input' → logprob: -7.137447357177734
    6. '    
' → logprob: -9.637447357177734
    7. '   ' → logprob: -10.137447357177734
    8. ' line' → logprob: -10.387447357177734
    9. '(s' → logprob: -10.887447357177734
    10. 'user' → logprob: -11.137447357177734

Token 86: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.3772316575050354
    2. 's' (adapté à ' s') → logprob: -1.2522315979003906
    3. ' user' → logprob: -4.377231597900391
    4. '   ' → logprob: -5.502231597900391
    5. ' input' → logprob: -5.502231597900391
    6. ' line' → logprob: -5.502231597900391
    7. ' raw' → logprob: -7.002231597900391
    8. 'input' → logprob: -7.377231597900391
    9. ' inputs' → logprob: -7.627231597900391
    10. ' lines' → logprob: -7.877231597900391

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038080278784036636
    2. '=' → logprob: -3.2880802154541016
    3. '=input' → logprob: -10.663080215454102
    4. ' ' → logprob: -11.913080215454102
    5. '_' → logprob: -12.038080215454102
    6. '_input' → logprob: -13.788080215454102
    7. ' =)' → logprob: -14.163080215454102
    8. '_=' → logprob: -14.913080215454102
    9. '   ' → logprob: -15.663080215454102
    10. '=_' → logprob: -15.913080215454102

Token 88: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.00822742935270071
    2. 'read' → logprob: -5.008227348327637
    3. ' input' → logprob: -6.508227348327637
    4. 'input' → logprob: -11.008227348327637
    5. ' ' → logprob: -12.883227348327637
    6. '	read' → logprob: -15.508227348327637
    7. ' readline' → logprob: -15.758227348327637
    8. '  ' → logprob: -15.883227348327637
    9. '(read' → logprob: -16.133228302001953
    10. ' ' → logprob: -18.008228302001953

Token 89: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0002087853499688208
    2. '_' → logprob: -8.500208854675293
    3. ' _' → logprob: -13.500208854675293
    4. '_inputs' → logprob: -14.000208854675293
    5. '```' → logprob: -14.250208854675293
    6. '_in' → logprob: -14.500208854675293
    7. '_put' → logprob: -14.625208854675293
    8. '_Input' → logprob: -14.750208854675293
    9. '__' → logprob: -15.250208854675293
    10. '"_' → logprob: -15.625208854675293

Token 90: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.226628895296017e-06
    2. '()
' → logprob: -12.250007629394531
    3. '()

' → logprob: -14.375007629394531
    4. ' ()' → logprob: -14.625007629394531
    5. '(' → logprob: -15.250007629394531
    6. '()`' → logprob: -15.250007629394531
    7. '();' → logprob: -16.00000762939453
    8. '()\' → logprob: -16.00000762939453
    9. '())' → logprob: -16.12500762939453
    10. '().' → logprob: -16.37500762939453

Token 91: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12402643263339996
    2. 'tokens' → logprob: -2.4990265369415283
    3. ' tokens' → logprob: -4.499026298522949
    4. ' parts' → logprob: -5.499026298522949
    5. 's' → logprob: -5.499026298522949
    6. 'lst' → logprob: -5.874026298522949
    7. ' ' → logprob: -6.249026298522949
    8. '  ' → logprob: -6.374026298522949
    9. 'str' → logprob: -6.624026298522949
    10. '    
' → logprob: -6.624026298522949

Token 92: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.7945125102996826
    2. ' tokens' → logprob: -1.2945125102996826
    3. ' parts' → logprob: -2.2945125102996826
    4. ' strs' → logprob: -2.2945125102996826
    5. 'tokens' → logprob: -3.9195125102996826
    6. ' sl' → logprob: -4.544512748718262
    7. ' splitted' → logprob: -4.669512748718262
    8. ' words' → logprob: -4.669512748718262
    9. ' lst' → logprob: -4.919512748718262
    10. 'str' (adapté à ' str') → logprob: -5.044512748718262

Token 93: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0019104309612885118
    2. '_lst' → logprob: -6.876910209655762
    3. '_' → logprob: -7.126910209655762
    4. 's' → logprob: -10.376910209655762
    5. '_l' → logprob: -10.876910209655762
    6. '_lists' → logprob: -12.001910209655762
    7. 'ing' → logprob: -12.251910209655762
    8. '_input' → logprob: -12.251910209655762
    9. '_parts' → logprob: -13.126910209655762
    10. '_li' → logprob: -13.376910209655762

Token 94: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011050177738070488
    2. '=' → logprob: -4.511050224304199
    3. ' ' → logprob: -13.8860502243042
    4. '_' → logprob: -14.5110502243042
    5. 's' → logprob: -15.1360502243042
    6. ')' → logprob: -15.5110502243042
    7. ' =)' → logprob: -16.136049270629883
    8. ' ' → logprob: -16.386049270629883
    9. '(s' → logprob: -16.886049270629883
    10. ' =(' → logprob: -17.011049270629883

Token 95: ' split' (ID: 12648)
  Prédit: ' split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' split' → logprob: -0.12692999839782715
    2. 'split' → logprob: -2.126929998397827
    3. '(split' → logprob: -13.876930236816406
    4. 's' → logprob: -14.876930236816406
    5. ' s' → logprob: -15.501930236816406
    6. 'spl' → logprob: -15.751930236816406
    7. ' ' → logprob: -15.876930236816406
    8. ' ' → logprob: -17.501930236816406
    9. '.split' → logprob: -17.626930236816406
    10. '_split' → logprob: -17.751930236816406

Token 96: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -14.625000953674316
    3. '_in' → logprob: -16.75
    4. '_inputs' → logprob: -17.5
    5. '_output' → logprob: -19.0
    6. 'input' → logprob: -19.25
    7. '(_' → logprob: -19.375
    8. '(input' → logprob: -19.375
    9. '_Input' → logprob: -19.375
    10. ' _' → logprob: -19.625

Token 97: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0024838652461767197
    2. '(' → logprob: -6.00248384475708
    3. ' (' → logprob: -11.752484321594238
    4. 's' → logprob: -15.377484321594238
    5. ' ' → logprob: -17.002483367919922
    6. '```' → logprob: -17.877483367919922
    7. ')' → logprob: -18.627483367919922
    8. '(
' → logprob: -18.627483367919922
    9. '(input' → logprob: -19.252483367919922
    10. '()' → logprob: -19.627483367919922

Token 98: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.246537173457909e-06
    2. ')
' → logprob: -12.500003814697266
    3. ' )' → logprob: -14.875003814697266
    4. '   ' → logprob: -16.875003814697266
    5. ')s' → logprob: -17.875003814697266
    6. '))' → logprob: -18.750003814697266
    7. ')

' → logprob: -19.250003814697266
    8. ' ' → logprob: -19.375003814697266
    9. ')#' → logprob: -19.375003814697266
    10. ')
' → logprob: -19.375003814697266

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039797160774469376
    2. 'int' → logprob: -3.414797067642212
    3. '
' → logprob: -5.789797306060791
    4. ' int' → logprob: -6.039797306060791
    5. '    ' → logprob: -8.664796829223633
    6. '    
' → logprob: -8.789796829223633
    7. '  ' → logprob: -8.914796829223633
    8. ' ' → logprob: -9.539796829223633
    9. '<int' → logprob: -10.164796829223633
    10. '<|end|>' → logprob: -10.664796829223633

Token 100: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.22563399374485016
    2. ' int' → logprob: -1.600633978843689
    3. '   ' → logprob: -8.72563362121582
    4. 'ints' → logprob: -10.97563362121582
    5. '<int' → logprob: -11.22563362121582
    6. ' ints' → logprob: -12.10063362121582
    7. '[int' → logprob: -12.10063362121582
    8. '	int' → logprob: -12.47563362121582
    9. ' ' → logprob: -12.97563362121582
    10. '_int' → logprob: -13.10063362121582

Token 101: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00029112942866049707
    2. '_' → logprob: -8.625290870666504
    3. ' _' → logprob: -10.375290870666504
    4. '_lst' → logprob: -10.500290870666504
    5. '_l' → logprob: -10.875290870666504
    6. '_lists' → logprob: -11.375290870666504
    7. '_li' → logprob: -11.375290870666504
    8. 's' → logprob: -12.750290870666504
    9. '_lista' → logprob: -13.125290870666504
    10. '_s' → logprob: -13.375290870666504

Token 102: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009756677784025669
    2. '=' → logprob: -4.634756565093994
    3. ')' → logprob: -14.509757041931152
    4. ' ' → logprob: -16.384756088256836
    5. ' =)' → logprob: -17.009756088256836
    6. '(' → logprob: -18.009756088256836
    7. '＝' → logprob: -18.384756088256836
    8. ' ' → logprob: -18.509756088256836
    9. '<|end|>' → logprob: -18.634756088256836
    10. ',' → logprob: -19.009756088256836

Token 103: ' convert' (ID: 8452)
  Prédit: ' convert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convert' → logprob: -0.01814994215965271
    2. 'convert' → logprob: -4.0181498527526855
    3. '(convert' → logprob: -16.393150329589844
    4. '_convert' → logprob: -17.768150329589844
    5. '.convert' → logprob: -18.143150329589844
    6. ' convertir' → logprob: -20.768150329589844
    7. '   ' → logprob: -21.143150329589844
    8. ' conversion' → logprob: -21.268150329589844
    9. ' ' → logprob: -22.018150329589844
    10. '  ' → logprob: -22.143150329589844

Token 104: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -5.080963092041202e-06
    2. '_' → logprob: -12.750004768371582
    3. '_t' → logprob: -13.500004768371582
    4. ' _' → logprob: -15.625004768371582
    5. '```' → logprob: -15.625004768371582
    6. '_of' → logprob: -16.5000057220459
    7. '##_' → logprob: -16.8750057220459
    8. '_from' → logprob: -17.1250057220459
    9. '_for' → logprob: -17.5000057220459
    10. 's' → logprob: -17.7500057220459

Token 105: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.0002319071936653927
    2. 'int' → logprob: -8.375231742858887
    3. 'nt' → logprob: -14.250231742858887
    4. '_' → logprob: -14.875231742858887
    5. '_in' → logprob: -16.375232696533203
    6. '_list' → logprob: -16.500232696533203
    7. ' int' → logprob: -16.875232696533203
    8. '_str' → logprob: -17.125232696533203
    9. '<int' → logprob: -17.250232696533203
    10. ' _' → logprob: -18.375232696533203

Token 106: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.128163257315464e-07
    2. 'List' → logprob: -16.0
    3. '_lst' → logprob: -16.625
    4. '_' → logprob: -17.0
    5. ' _' → logprob: -17.625
    6. 'list' → logprob: -17.625
    7. '_int' → logprob: -17.625
    8. '_lists' → logprob: -17.625
    9. 'int' → logprob: -18.375
    10. '_to' → logprob: -18.375

Token 107: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.0024958718568086624
    2. '(' → logprob: -6.002495765686035
    3. ' (' → logprob: -11.002495765686035
    4. '(s' → logprob: -12.752495765686035
    5. '(int' → logprob: -15.877495765686035
    6. '(string' → logprob: -16.12749671936035
    7. '(
' → logprob: -16.25249671936035
    8. ' str' → logprob: -17.25249671936035
    9. '(st' → logprob: -17.37749671936035
    10. '[str' → logprob: -17.37749671936035

Token 108: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.128163257315464e-07
    2. 'list' → logprob: -15.75
    3. '_' → logprob: -16.875
    4. ')' → logprob: -17.75
    5. 'List' → logprob: -18.0
    6. '_l' → logprob: -18.25
    7. ' _' → logprob: -18.875
    8. '_lists' → logprob: -18.875
    9. '_LIST' → logprob: -19.0
    10. '   ' → logprob: -19.5

Token 109: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8219583075260743e-05
    2. ')
' → logprob: -10.250038146972656
    3. '   ' → logprob: -13.125038146972656
    4. ' )' → logprob: -15.000038146972656
    5. ' ' → logprob: -16.125038146972656
    6. '[' → logprob: -16.750038146972656
    7. ')
' → logprob: -16.875038146972656
    8. ')

' → logprob: -17.000038146972656
    9. '()' → logprob: -17.250038146972656
    10. '))' → logprob: -17.500038146972656

Token 110: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33483636379241943
    2. '   ' → logprob: -1.3348363637924194
    3. 'total' → logprob: -4.209836483001709
    4. ' total' → logprob: -5.459836483001709
    5. '    
' → logprob: -6.834836483001709
    6. '	total' → logprob: -7.959836483001709
    7. '<|end|>' → logprob: -8.45983600616455
    8. '
' → logprob: -8.83483600616455
    9. '```' → logprob: -9.58483600616455
    10. '  
' → logprob: -9.83483600616455

Token 111: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.25256508588790894
    2. 'total' (adapté à ' total') → logprob: -1.5025651454925537
    3. '   ' → logprob: -7.752564907073975
    4. ' result' → logprob: -9.127565383911133
    5. 'result' → logprob: -9.627565383911133
    6. ' ' → logprob: -11.877565383911133
    7. ' sum' → logprob: -12.002565383911133
    8. '	total' → logprob: -12.252565383911133
    9. 'sum' → logprob: -12.377565383911133
    10. 't' → logprob: -12.627565383911133

Token 112: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007649341132491827
    2. '=' → logprob: -4.8826494216918945
    3. '_' → logprob: -10.382649421691895
    4. ')' → logprob: -11.382649421691895
    5. ' ' → logprob: -14.882649421691895
    6. ' =)' → logprob: -15.632649421691895
    7. ' _' → logprob: -16.132648468017578
    8. '   ' → logprob: -16.882648468017578
    9. ' )' → logprob: -17.007648468017578
    10. ' ' → logprob: -17.132648468017578

Token 113: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.2014317512512207
    2. ' calc' → logprob: -1.7014317512512207
    3. '(calc' → logprob: -11.451431274414062
    4. '   ' → logprob: -12.201431274414062
    5. '.calc' → logprob: -13.701431274414062
    6. 'calculate' → logprob: -14.951431274414062
    7. '  ' → logprob: -15.326431274414062
    8. 'cal' → logprob: -15.451431274414062
    9. ' ' → logprob: -15.451431274414062
    10. '_calc' → logprob: -15.451431274414062

Token 114: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -3.774276774493046e-05
    2. '_' → logprob: -10.250038146972656
    3. '_s' → logprob: -13.625038146972656
    4. '_total' → logprob: -14.250038146972656
    5. ' _' → logprob: -15.625038146972656
    6. '__' → logprob: -16.375038146972656
    7. ')_' → logprob: -18.000038146972656
    8. '_SUM' → logprob: -18.500038146972656
    9. '_S' → logprob: -19.000038146972656
    10. 'sum' → logprob: -19.250038146972656

Token 115: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0007106438861228526
    2. '(' → logprob: -7.250710487365723
    3. ' (' → logprob: -16.00071144104004
    4. '(Int' → logprob: -16.00071144104004
    5. '(INT' → logprob: -16.25071144104004
    6. '(_' → logprob: -16.37571144104004
    7. '(uint' → logprob: -16.75071144104004
    8. '_int' → logprob: -17.00071144104004
    9. '(intent' → logprob: -17.00071144104004
    10. 'int' → logprob: -17.25071144104004

Token 116: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -4.008129963040119e-06
    2. 'List' → logprob: -13.125003814697266
    3. 'list' → logprob: -13.500003814697266
    4. ')' → logprob: -15.750003814697266
    5. '_' → logprob: -16.125003814697266
    6. ')_' → logprob: -16.750003814697266
    7. 'ist' → logprob: -16.875003814697266
    8. '_LIST' → logprob: -17.500003814697266
    9. '_l' → logprob: -17.625003814697266
    10. '   ' → logprob: -17.750003814697266

Token 117: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005238736979663372
    2. ')
' → logprob: -5.2552385330200195
    3. '   ' → logprob: -13.00523853302002
    4. ')
' → logprob: -13.63023853302002
    5. ' )' → logprob: -14.13023853302002
    6. ')

' → logprob: -14.75523853302002
    7. '()' → logprob: -16.255239486694336
    8. '))' → logprob: -16.380239486694336
    9. '())' → logprob: -17.005239486694336
    10. ')`' → logprob: -17.005239486694336

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06888967007398605
    2. 'result' → logprob: -3.568889617919922
    3. ' result' → logprob: -3.693889617919922
    4. '
' → logprob: -4.443889617919922
    5. '    
' → logprob: -7.693889617919922
    6. '<|end|>' → logprob: -8.318889617919922
    7. '```' → logprob: -8.568889617919922
    8. '	result' → logprob: -8.818889617919922
    9. ' ' → logprob: -9.193889617919922
    10. 'print' → logprob: -9.443889617919922

Token 119: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.9279580116271973
    2. 'print' → logprob: -1.4279580116271973
    3. 'result' (adapté à ' result') → logprob: -1.8029580116271973
    4. ' print' → logprob: -1.9279580116271973
    5. '   ' → logprob: -2.9279580116271973
    6. ' is' → logprob: -8.552957534790039
    7. ' win' → logprob: -8.677957534790039
    8. ' res' → logprob: -8.802957534790039
    9. ' if' → logprob: -8.927957534790039
    10. 'if' → logprob: -9.427957534790039

Token 120: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03856396675109863
    2. '=' → logprob: -3.2885639667510986
    3. ')' → logprob: -8.16356372833252
    4. '(' → logprob: -8.53856372833252
    5. '=is' → logprob: -11.03856372833252
    6. ' ' → logprob: -12.03856372833252
    7. '()' → logprob: -12.66356372833252
    8. ' is' → logprob: -12.78856372833252
    9. '_' → logprob: -12.91356372833252
    10. ' ==' → logprob: -13.16356372833252

Token 121: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.25193148851394653
    2. ' is' → logprob: -1.5019314289093018
    3. '   ' → logprob: -13.501931190490723
    4. '(is' → logprob: -14.501931190490723
    5. ' ' → logprob: -15.251931190490723
    6. '	is' → logprob: -16.12693214416504
    7. ' ' → logprob: -16.87693214416504
    8. '=is' → logprob: -17.87693214416504
    9. '"is' → logprob: -18.00193214416504
    10. '  ' → logprob: -18.12693214416504

Token 122: '_win' (ID: 63099)
  Prédit: '_win'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_win' → logprob: -1.5048530030981055e-06
    2. '_w' → logprob: -13.750001907348633
    3. '_' → logprob: -15.250001907348633
    4. 'win' → logprob: -16.375001907348633
    5. '_WIN' → logprob: -17.750001907348633
    6. '_write' → logprob: -18.500001907348633
    7. '(win' → logprob: -18.625001907348633
    8. '_sum' → logprob: -18.750001907348633
    9. 'Win' → logprob: -18.875001907348633
    10. ' _' → logprob: -18.875001907348633

Token 123: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.04859395697712898
    2. '(' → logprob: -3.0485939979553223
    3. ' (' → logprob: -12.423593521118164
    4. '(
' → logprob: -13.798593521118164
    5. '_total' → logprob: -14.423593521118164
    6. 'total' → logprob: -15.048593521118164
    7. '(

' → logprob: -15.548593521118164
    8. '(t' → logprob: -15.798593521118164
    9. ' total' → logprob: -16.923593521118164
    10. ' ' → logprob: -17.048593521118164

Token 124: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014173506759107113
    2. ')
' → logprob: -4.26417350769043
    3. ')

' → logprob: -12.01417350769043
    4. ')
' → logprob: -13.13917350769043
    5. '   ' → logprob: -13.88917350769043
    6. ' )' → logprob: -14.38917350769043
    7. ' ' → logprob: -16.38917350769043
    8. ')`' → logprob: -16.63917350769043
    9. '())' → logprob: -17.01417350769043
    10. ' )
' → logprob: -17.13917350769043

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1691286414861679
    2. '
' → logprob: -1.919128656387329
    3. '    
' → logprob: -5.04412841796875
    4. 'print' → logprob: -7.16912841796875
    5. '  
' → logprob: -7.29412841796875
    6. ' 
' → logprob: -8.16912841796875
    7. '()
' → logprob: -9.04412841796875
    8. ' ' → logprob: -9.29412841796875
    9. '' → logprob: -9.66912841796875
    10. '
' → logprob: -10.04412841796875

Token 126: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.4048576354980469
    2. ' print' → logprob: -1.1548576354980469
    3. '   ' → logprob: -4.029857635498047
    4. '(print' → logprob: -10.779857635498047
    5. '	print' → logprob: -11.279857635498047
    6. ' ' → logprob: -11.904857635498047
    7. '.print' → logprob: -12.529857635498047
    8. '_print' → logprob: -13.279857635498047
    9. '
' → logprob: -13.904857635498047
    10. '    
' → logprob: -14.404857635498047

Token 127: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -4.842555426876061e-06
    2. '_' → logprob: -12.500004768371582
    3. '"_' → logprob: -14.875004768371582
    4. ' _' → logprob: -15.375004768371582
    5. '_results' → logprob: -15.750004768371582
    6. '_Result' → logprob: -16.0000057220459
    7. '_RESULT' → logprob: -16.6250057220459
    8. '```' → logprob: -16.6250057220459
    9. '_res' → logprob: -16.7500057220459
    10. '(_' → logprob: -17.3750057220459

Token 128: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.02325700782239437
    2. '(' → logprob: -3.77325701713562
    3. ' (' → logprob: -11.6482572555542
    4. '(results' → logprob: -14.0232572555542
    5. '(total' → logprob: -14.2732572555542
    6. '(resultado' → logprob: -14.6482572555542
    7. '(res' → logprob: -15.5232572555542
    8. '(
' → logprob: -15.6482572555542
    9. '(Result' → logprob: -16.148256301879883
    10. ' ' → logprob: -16.523256301879883

Token 129: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7954958821064793e-05
    2. ')
' → logprob: -11.000018119812012
    3. '()' → logprob: -14.375018119812012
    4. '())' → logprob: -15.125018119812012
    5. ' )' → logprob: -15.500018119812012
    6. ')

' → logprob: -17.250017166137695
    7. ')`' → logprob: -18.000017166137695
    8. '))' → logprob: -18.250017166137695
    9. ')#' → logprob: -19.000017166137695
    10. '   ' → logprob: -19.000017166137695

Token 130: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0008564318413846195
    2. '
' → logprob: -7.625856399536133
    3. '\n' → logprob: -8.625856399536133
    4. 'main' → logprob: -8.875856399536133
    5. '\' → logprob: -10.750856399536133
    6. ' if' → logprob: -11.500856399536133
    7. '  
' → logprob: -12.500856399536133
    8. '```' → logprob: -12.750856399536133
    9. '<|end|>' → logprob: -13.000856399536133
    10. '    
' → logprob: -13.000856399536133

Token 131: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.018162935972213745
    2. '(' → logprob: -4.018162727355957
    3. '()
' → logprob: -11.518162727355957
    4. '(
' → logprob: -13.643162727355957
    5. '()

' → logprob: -14.518162727355957
    6. ' ()' → logprob: -15.018162727355957
    7. '()`' → logprob: -15.018162727355957
    8. '();' → logprob: -15.893162727355957
    9. '(

' → logprob: -16.018163681030273
    10. '#' → logprob: -16.018163681030273


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 129
Tokens correctement prédits (1ère position, stricte): 69
Tokens correctement prédits (1ère position, avec adaptation): 73
Tokens correctement prédits (top 10): 112
Précision stricte (1ère position): 53.49%
Précision adaptée (1ère position): 56.59%
Précision (top 10): 86.82%
================================================================================
