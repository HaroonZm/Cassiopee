================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:37:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def stepper():
    N_M = input().split()
    try: N, M = [int(x) for x in N_M]
    except: sys.exit()
    S = input()[::-1]
    res = []
    idx = 0
    while idx < N - M:
        executed = 0
        for val in range(M, 0, -1):
            target = S[idx + val]
            if target == '0':
                res.append(val)
                idx += val
                executed = 1
                break
        if not executed:
            print(-1)
            sys.exit()
    def wrap(lst): return ' '.join(str(x) for x in lst[::-1])
    res.append(N-idx)
    print(wrap(res))

stepper()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18268179893493652
    2. '\n' → logprob: -2.1826817989349365
    3. 'import' → logprob: -3.5576817989349365
    4. '<|end|>' → logprob: -4.932682037353516
    5. '' → logprob: -5.807682037353516
    6. 'newline' → logprob: -5.932682037353516
    7. '\' → logprob: -6.057682037353516
    8. 'print' → logprob: -6.432682037353516
    9. '[' → logprob: -6.557682037353516
    10. '<|end|>' → logprob: -6.807682037353516

Token 4: ' step' (ID: 5983)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.27202650904655457
    2. ' process' → logprob: -2.647026538848877
    3. ' read' → logprob: -3.022026538848877
    4. ' space' → logprob: -3.397026538848877
    5. ' main' → logprob: -3.772026538848877
    6. ' calculate' → logprob: -4.772026538848877
    7. ' my' → logprob: -5.022026538848877
    8. ' sys' → logprob: -5.272026538848877
    9. ' ' → logprob: -5.522026538848877
    10. ' def' → logprob: -5.772026538848877

Token 5: 'per' (ID: 543)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.49389246106147766
    2. '_' → logprob: -0.9938924312591553
    3. '(_' → logprob: -4.743892669677734
    4. '_(' → logprob: -5.868892669677734
    5. 's' → logprob: -6.993892669677734
    6. '_:' → logprob: -7.493892669677734
    7. '(_:' → logprob: -7.618892669677734
    8. ' (' → logprob: -7.743892669677734
    9. '_size' → logprob: -7.993892669677734
    10. 'wise' → logprob: -7.993892669677734

Token 6: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006714421324431896
    2. '_' → logprob: -5.506714344024658
    3. '(:' → logprob: -6.881714344024658
    4. '(step' → logprob: -7.381714344024658
    5. ':' → logprob: -7.756714344024658
    6. '_step' → logprob: -8.381714820861816
    7. '_:' → logprob: -9.506714820861816
    8. '():' → logprob: -10.131714820861816
    9. '(_' → logprob: -10.506714820861816
    10. '(_:' → logprob: -10.756714820861816

Token 7: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05299069732427597
    2. '(' → logprob: -4.302990913391113
    3. ':' → logprob: -4.302990913391113
    4. '\n' → logprob: -5.177990913391113
    5. '\' → logprob: -5.302990913391113
    6. '    ' → logprob: -5.427990913391113
    7. '```' → logprob: -6.052990913391113
    8. '    
' → logprob: -6.177990913391113
    9. '():' → logprob: -6.552990913391113
    10. '()' → logprob: -6.927990913391113

Token 8: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.7119637727737427
    2. 'pass' → logprob: -1.7119637727737427
    3. '   ' → logprob: -1.9619637727737427
    4. 'i' → logprob: -1.9619637727737427
    5. 'for' → logprob: -2.211963653564453
    6. 'print' → logprob: -2.586963653564453
    7. ' ' → logprob: -3.586963653564453
    8. 'x' → logprob: -3.586963653564453
    9. '    ' → logprob: -3.836963653564453
    10. '_' → logprob: -4.086963653564453

Token 9: '_M' (ID: 2372)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.017311885952949524
    2. '=' → logprob: -4.392312049865723
    3. ' ' → logprob: -5.642312049865723
    4. ',' → logprob: -7.892312049865723
    5. '   ' → logprob: -8.267312049865723
    6. ' ,' → logprob: -9.267312049865723
    7. '  ' → logprob: -9.267312049865723
    8. '.' → logprob: -9.517312049865723
    9. '_' → logprob: -9.892312049865723
    10. ')' → logprob: -10.017312049865723

Token 10: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4824768900871277
    2. ' =' → logprob: -1.1074769496917725
    3. '_' → logprob: -3.8574769496917725
    4. '[' → logprob: -4.107476711273193
    5. ')' → logprob: -5.232476711273193
    6. '[]' → logprob: -5.857476711273193
    7. '  ' → logprob: -6.857476711273193
    8. '   ' → logprob: -7.232476711273193
    9. ',' → logprob: -7.482476711273193
    10. 's' → logprob: -7.732476711273193

Token 11: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.40363025665283203
    2. ' sys' → logprob: -1.903630256652832
    3. 'input' → logprob: -2.278630256652832
    4. ' list' → logprob: -2.778630256652832
    5. 'list' → logprob: -5.028630256652832
    6. 'sys' → logprob: -5.153630256652832
    7. ' map' → logprob: -5.653630256652832
    8. ' tuple' → logprob: -7.028630256652832
    9. 'map' → logprob: -7.278630256652832
    10. ' int' → logprob: -8.278630256652832

Token 12: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.025010693818330765
    2. '('' → logprob: -4.150010585784912
    3. '("("' → logprob: -5.150010585784912
    4. '()' → logprob: -7.150010585784912
    5. '"' → logprob: -7.275010585784912
    6. ''' → logprob: -7.525010585784912
    7. '[' → logprob: -8.77501106262207
    8. '("' → logprob: -9.02501106262207
    9. ' ' → logprob: -9.15001106262207
    10. '.' → logprob: -9.27501106262207

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0380459688603878
    2. 'strip' → logprob: -3.288045883178711
    3. 'rstrip' → logprob: -12.413045883178711
    4. ' split' → logprob: -14.788045883178711
    5. 'spl' → logprob: -17.78804588317871
    6. 'replace' → logprob: -17.91304588317871
    7. 'read' → logprob: -18.28804588317871
    8. ' strip' → logprob: -19.16304588317871
    9. 'startswith' → logprob: -20.16304588317871
    10. 'plit' → logprob: -21.16304588317871

Token 14: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.49213796854019165
    2. '('' → logprob: -1.1171379089355469
    3. '()' → logprob: -3.117137908935547
    4. '("("' → logprob: -4.117137908935547
    5. '("' → logprob: -8.367137908935547
    6. '(`' → logprob: -8.492137908935547
    7. '((' → logprob: -9.617137908935547
    8. '(
' → logprob: -9.742137908935547
    9. '(()' → logprob: -10.117137908935547
    10. '(

' → logprob: -10.242137908935547

Token 15: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.661113440990448
    2. '   ' → logprob: -0.786113440990448
    3. '```' → logprob: -4.536113262176514
    4. '[N' → logprob: -5.161113262176514
    5. '[n' → logprob: -5.911113262176514
    6. '[i' → logprob: -6.411113262176514
    7. '`' → logprob: -6.786113262176514
    8. '    
' → logprob: -6.911113262176514
    9. '[
' → logprob: -7.036113262176514
    10. 'n' → logprob: -7.411113262176514

Token 16: ' try' (ID: 2075)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2081493139266968
    2. 'N' → logprob: -1.4581493139266968
    3. '[' → logprob: -1.4581493139266968
    4. '   ' → logprob: -2.4581494331359863
    5. ' N' → logprob: -3.2081494331359863
    6. ' n' → logprob: -3.9581494331359863
    7. '    ' → logprob: -4.458149433135986
    8. 'x' → logprob: -4.708149433135986
    9. 'i' → logprob: -4.708149433135986
    10. ' if' → logprob: -4.958149433135986

Token 17: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00019197762594558299
    2. ' :' → logprob: -8.875191688537598
    3. ':
' → logprob: -10.375191688537598
    4. '{' → logprob: -11.750191688537598
    5. '   ' → logprob: -12.125191688537598
    6. '[' → logprob: -13.125191688537598
    7. ':return' → logprob: -13.500191688537598
    8. '    ' → logprob: -14.250191688537598
    9. '):' → logprob: -14.375191688537598
    10. '<|end|>' → logprob: -14.750191688537598

Token 18: ' N' (ID: 478)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20933128893375397
    2. ':' → logprob: -2.7093312740325928
    3. '    ' → logprob: -2.8343312740325928
    4. '   ' → logprob: -2.9593312740325928
    5. '[' → logprob: -6.084331512451172
    6. '<|end|>' → logprob: -6.084331512451172
    7. '        ' → logprob: -6.334331512451172
    8. ' ' → logprob: -6.334331512451172
    9. '```' → logprob: -7.584331512451172
    10. ':
' → logprob: -7.709331512451172

Token 19: ',' (ID: 11)
  Prédit: '_M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_M' → logprob: -0.10083399713039398
    2. '[' → logprob: -2.7258338928222656
    3. '_' → logprob: -3.8508338928222656
    4. '.' → logprob: -5.225833892822266
    5. '._' → logprob: -6.475833892822266
    6. '[]' → logprob: -7.475833892822266
    7. '   ' → logprob: -8.600833892822266
    8. 'ext' → logprob: -8.600833892822266
    9. 'M' → logprob: -8.850833892822266
    10. ' _' → logprob: -8.850833892822266

Token 20: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.013222464360296726
    2. 'M' → logprob: -4.388222694396973
    3. '_' → logprob: -8.638222694396973
    4. ' ' → logprob: -9.263222694396973
    5. ' ' → logprob: -9.263222694396973
    6. ' =' → logprob: -9.513222694396973
    7. '=' → logprob: -10.263222694396973
    8. '    ' → logprob: -10.513222694396973
    9. '```' → logprob: -10.513222694396973
    10. ' int' → logprob: -10.638222694396973

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012547792866826057
    2. '=' → logprob: -4.387547969818115
    3. ' ' → logprob: -10.262547492980957
    4. ',' → logprob: -13.637547492980957
    5. ' =
' → logprob: -14.137547492980957
    6. ')' → logprob: -15.262547492980957
    7. ' ,' → logprob: -15.637547492980957
    8. '=int' → logprob: -15.637547492980957
    9. ' =[' → logprob: -15.887547492980957
    10. '  ' → logprob: -16.137548446655273

Token 22: ' [' (ID: 723)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.44772621989250183
    2. ' map' → logprob: -1.0727262496948242
    3. 'int' → logprob: -4.072726249694824
    4. 'map' → logprob: -6.947726249694824
    5. ' ' → logprob: -7.947726249694824
    6. ' list' → logprob: -8.072726249694824
    7. ' [' → logprob: -9.947726249694824
    8. '[int' → logprob: -9.947726249694824
    9. ' tuple' → logprob: -11.072726249694824
    10. ' N' → logprob: -11.322726249694824

Token 23: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0010356683051213622
    2. ' int' → logprob: -6.876035690307617
    3. 'map' → logprob: -13.626035690307617
    4. ']int' → logprob: -14.251035690307617
    5. '[int' → logprob: -15.376035690307617
    6. '(int' → logprob: -15.376035690307617
    7. '   ' → logprob: -15.626035690307617
    8. '  ' → logprob: -16.001035690307617
    9. ' ' → logprob: -16.501035690307617
    10. ':int' → logprob: -16.501035690307617

Token 24: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.09650318324565887
    2. '(i' → logprob: -2.471503257751465
    3. '(N' → logprob: -5.596503257751465
    4. '(n' → logprob: -6.846503257751465
    5. '(token' → logprob: -6.846503257751465
    6. '(' → logprob: -7.471503257751465
    7. '(_)' → logprob: -7.971503257751465
    8. '(s' → logprob: -8.346503257751465
    9. '(v' → logprob: -9.096503257751465
    10. ']' → logprob: -9.096503257751465

Token 25: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.084206375409849e-05
    2. ' )' → logprob: -11.125041007995605
    3. '(x' → logprob: -11.875041007995605
    4. '()' → logprob: -12.500041007995605
    5. '.strip' → logprob: -12.500041007995605
    6. '())' → logprob: -12.625041007995605
    7. ' for' → logprob: -13.125041007995605
    8. 'for' → logprob: -13.375041007995605
    9. '(' → logprob: -13.750041007995605
    10. '(i' → logprob: -14.625041007995605

Token 26: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4305611550807953
    2. 'for' → logprob: -1.3055611848831177
    3. ')' → logprob: -2.555561065673828
    4. ' ' → logprob: -8.055561065673828
    5. '(' → logprob: -8.430561065673828
    6. 'token' → logprob: -8.805561065673828
    7. ' )' → logprob: -9.180561065673828
    8. '(x' → logprob: -9.680561065673828
    9. ']' → logprob: -9.680561065673828
    10. '()' → logprob: -9.805561065673828

Token 27: ' x' (ID: 1215)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.012017426081001759
    2. ' ' → logprob: -5.387017250061035
    3. ' x' → logprob: -5.512017250061035
    4. 'N' → logprob: -5.887017250061035
    5. 'x' → logprob: -8.637017250061035
    6. '<|end|>' → logprob: -9.137017250061035
    7. '_' → logprob: -9.887017250061035
    8. '<|end|>' → logprob: -10.262017250061035
    9. ' in' → logprob: -10.512017250061035
    10. '(N' → logprob: -10.512017250061035

Token 28: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016110381111502647
    2. 'in' → logprob: -4.141110420227051
    3. ' ' → logprob: -10.01611042022705
    4. ' N' → logprob: -11.89111042022705
    5. '<|end|>' → logprob: -12.14111042022705
    6. 'N' → logprob: -12.51611042022705
    7. ']' → logprob: -13.01611042022705
    8. ')' → logprob: -13.26611042022705
    9. '<|end|>' → logprob: -13.51611042022705
    10. 's' → logprob: -13.51611042022705

Token 29: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.5759764313697815
    2. 'N' → logprob: -0.8259764313697815
    3. ' ' → logprob: -10.575976371765137
    4. ' sys' → logprob: -12.075976371765137
    5. 'sys' → logprob: -13.200976371765137
    6. '  ' → logprob: -13.700976371765137
    7. '	N' → logprob: -14.575976371765137
    8. ']' → logprob: -15.075976371765137
    9. ' ' → logprob: -15.200976371765137
    10. 'input' → logprob: -15.575976371765137

Token 30: '_M' (ID: 2372)
  Prédit: '_M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_M' → logprob: -2.057743949990254e-05
    2. '])' → logprob: -11.375020980834961
    3. ')' → logprob: -13.375020980834961
    4. ' _' → logprob: -13.625020980834961
    5. ']' → logprob: -13.750020980834961
    6. '_' → logprob: -14.375020980834961
    7. 'M' → logprob: -14.625020980834961
    8. '[' → logprob: -14.625020980834961
    9. ')]' → logprob: -14.750020980834961
    10. ',' → logprob: -14.875020980834961

Token 31: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001120572560466826
    2. ' ]' → logprob: -7.376120567321777
    3. ')' → logprob: -8.001120567321777
    4. '])' → logprob: -9.376120567321777
    5. ')]' → logprob: -10.376120567321777
    6. '[' → logprob: -11.001120567321777
    7. '   ' → logprob: -11.876120567321777
    8. '<|end|>' → logprob: -12.751120567321777
    9. ']
' → logprob: -13.251120567321777
    10. ']>' → logprob: -13.501120567321777

Token 32: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5329352021217346
    2. 'except' → logprob: -1.5329351425170898
    3. ' except' → logprob: -2.15793514251709
    4. '\n' → logprob: -3.15793514251709
    5. '   ' → logprob: -3.78293514251709
    6. '    
' → logprob: -5.15793514251709
    7. ':' → logprob: -5.40793514251709
    8. '
' → logprob: -6.53293514251709
    9. '```' → logprob: -6.90793514251709
    10. '       ' → logprob: -7.15793514251709

Token 33: ' except' (ID: 6384)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0200958251953125
    2. '
' → logprob: -1.6450958251953125
    3. 'except' (adapté à ' except') → logprob: -1.6450958251953125
    4. ' except' → logprob: -1.8950958251953125
    5. '\n' → logprob: -2.6450958251953125
    6. '    
' → logprob: -4.3950958251953125
    7. '   ' → logprob: -5.1450958251953125
    8. '' → logprob: -5.7700958251953125
    9. ':
' → logprob: -5.7700958251953125
    10. '```' → logprob: -6.8950958251953125

Token 34: ':' (ID: 25)
  Prédit: ' Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.04302910342812538
    2. ' ' → logprob: -3.9180290699005127
    3. 'Value' → logprob: -4.543029308319092
    4. ':' → logprob: -5.418029308319092
    5. '(Value' → logprob: -5.793029308319092
    6. '	Value' → logprob: -6.293029308319092
    7. '  ' → logprob: -7.293029308319092
    8. ' Exception' → logprob: -7.543029308319092
    9. '<Value' → logprob: -8.293028831481934
    10. ' Name' → logprob: -8.418028831481934

Token 35: ' sys' (ID: 12228)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7374882698059082
    2. '    ' → logprob: -0.8624882698059082
    3. ' pass' → logprob: -2.987488269805908
    4. ' print' → logprob: -4.237488269805908
    5. ' ' → logprob: -4.487488269805908
    6. 'return' → logprob: -4.862488269805908
    7. ' raise' → logprob: -4.987488269805908
    8. '   ' → logprob: -6.237488269805908
    9. ' sys' → logprob: -6.237488269805908
    10. ' None' → logprob: -7.362488269805908

Token 36: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -0.0021939214784651995
    2. '.' → logprob: -6.252193927764893
    3. '.stderr' → logprob: -8.752193450927734
    4. '.stdout' → logprob: -9.377193450927734
    5. '.stdin' → logprob: -11.752193450927734
    6. ' .' → logprob: -11.877193450927734
    7. '.ex' → logprob: -13.002193450927734
    8. '.quit' → logprob: -13.627193450927734
    9. ' exit' → logprob: -14.002193450927734
    10. '.setdefault' → logprob: -14.377193450927734

Token 37: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20148661732673645
    2. '(' → logprob: -1.701486587524414
    3. '('' → logprob: -10.201486587524414
    4. '();' → logprob: -12.201486587524414
    5. ' ()' → logprob: -12.201486587524414
    6. '("' → logprob: -12.451486587524414
    7. '()\' → logprob: -12.576486587524414
    8. '()`' → logprob: -12.701486587524414
    9. '(
' → logprob: -12.826486587524414
    10. '0' → logprob: -13.576486587524414

Token 38: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9087029695510864
    2. '\n' → logprob: -1.4087029695510864
    3. ':' → logprob: -2.158702850341797
    4. ' 
' → logprob: -2.283702850341797
    5. '    
' → logprob: -3.033702850341797
    6. '\' → logprob: -3.908702850341797
    7. '   ' → logprob: -4.158702850341797
    8. '  
' → logprob: -4.283702850341797
    9. '<|end|>' → logprob: -4.783702850341797
    10. '' → logprob: -5.033702850341797

Token 39: ' S' (ID: 336)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4119375944137573
    2. '
' → logprob: -1.9119375944137573
    3. ' 
' → logprob: -2.786937713623047
    4. '\' → logprob: -3.036937713623047
    5. '    
' → logprob: -3.661937713623047
    6. ':' → logprob: -4.161937713623047
    7. '  
' → logprob: -4.661937713623047
    8. 'newline' → logprob: -5.286937713623047
    9. '<|end|>' → logprob: -5.411937713623047
    10. '   ' → logprob: -5.411937713623047

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24124576151371002
    2. '=' → logprob: -1.6162457466125488
    3. 'tep' → logprob: -4.741245746612549
    4. '_' → logprob: -5.616245746612549
    5. ' ' → logprob: -6.241245746612549
    6. '=input' → logprob: -7.991245746612549
    7. ',' → logprob: -8.741246223449707
    8. '   ' → logprob: -8.741246223449707
    9. '.' → logprob: -8.991246223449707
    10. '[' → logprob: -9.116246223449707

Token 41: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.20163825154304504
    2. 'input' → logprob: -1.7016382217407227
    3. ' ' → logprob: -10.201638221740723
    4. ' list' → logprob: -10.201638221740723
    5. ' []' → logprob: -10.326638221740723
    6. 'list' → logprob: -10.576638221740723
    7. ' [' → logprob: -10.826638221740723
    8. '[input' → logprob: -11.326638221740723
    9. '[' → logprob: -11.576638221740723
    10. '[]' → logprob: -11.701638221740723

Token 42: '()[' (ID: 20778)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00039968726923689246
    2. '().' → logprob: -8.125399589538574
    3. '(' → logprob: -10.125399589538574
    4. ' ()' → logprob: -10.625399589538574
    5. '`()' → logprob: -11.625399589538574
    6. '())' → logprob: -12.375399589538574
    7. '>()' → logprob: -12.875399589538574
    8. ')' → logprob: -12.875399589538574
    9. ']()' → logprob: -12.875399589538574
    10. '()<' → logprob: -13.125399589538574

Token 43: '::-' (ID: 96612)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3666209876537323
    2. 'M' → logprob: -2.1166210174560547
    3. ':' → logprob: -2.7416210174560547
    4. '-' → logprob: -3.4916210174560547
    5. '1' → logprob: -3.7416210174560547
    6. '::-' → logprob: -4.241621017456055
    7. ':]' → logprob: -4.491621017456055
    8. 'N' → logprob: -4.866621017456055
    9. ':M' → logprob: -4.866621017456055
    10. ' ' → logprob: -5.616621017456055

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00025871701654978096
    2. '-' → logprob: -8.625258445739746
    3. ' ' → logprob: -10.250258445739746
    4. 'strip' → logprob: -10.625258445739746
    5. ']' → logprob: -12.000258445739746
    6. 's' → logprob: -12.875258445739746
    7. '```' → logprob: -14.187758445739746
    8. '2' → logprob: -14.312758445739746
    9. 'd' → logprob: -14.625258445739746
    10. 'rstrip' → logprob: -14.625258445739746

Token 45: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.244413766078651e-05
    2. ' )' → logprob: -9.750082015991211
    3. ']' → logprob: -11.125082015991211
    4. ')
' → logprob: -11.750082015991211
    5. '   ' → logprob: -14.875082015991211
    6. '）' → logprob: -15.750082015991211
    7. '`)' → logprob: -15.875082015991211
    8. '')' → logprob: -16.12508201599121
    9. '))' → logprob: -16.25008201599121
    10. ')]' → logprob: -16.50008201599121

Token 46: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 47: ' res' (ID: 694)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9205867052078247
    2. 'n' → logprob: -1.7955867052078247
    3. 'for' → logprob: -2.295586585998535
    4. 'p' → logprob: -2.670586585998535
    5. ' for' → logprob: -3.170586585998535
    6. 'r' → logprob: -3.295586585998535
    7. '_' → logprob: -3.420586585998535
    8. 's' → logprob: -3.545586585998535
    9. ')' → logprob: -4.420586585998535
    10. '#' → logprob: -4.420586585998535

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5218089818954468
    2. '=' → logprob: -1.2718089818954468
    3. 'ult' → logprob: -2.2718091011047363
    4. 'u' → logprob: -4.521809101104736
    5. 'ults' → logprob: -4.771809101104736
    6. 'ul' → logprob: -6.521809101104736
    7. ' ' → logprob: -7.271809101104736
    8. 'ultat' → logprob: -7.771809101104736
    9. 'ULT' → logprob: -8.021808624267578
    10. 'ulta' → logprob: -8.146808624267578

Token 49: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5105827450752258
    2. ' []' → logprob: -1.510582685470581
    3. '0' → logprob: -2.010582685470581
    4. '[' → logprob: -3.635582685470581
    5. ' ' → logprob: -5.01058292388916
    6. ' [' → logprob: -5.51058292388916
    7. '""' → logprob: -6.13558292388916
    8. '"' → logprob: -6.13558292388916
    9. '[]
' → logprob: -7.38558292388916
    10. '1' → logprob: -7.51058292388916

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7503513693809509
    2. 'for' → logprob: -1.3753514289855957
    3. ' for' → logprob: -1.5003514289855957
    4. ' ' → logprob: -3.5003514289855957
    5. '<|end|>' → logprob: -5.125351428985596
    6. '    
' → logprob: -5.500351428985596
    7. '    ' → logprob: -5.625351428985596
    8. '  ' → logprob: -6.500351428985596
    9. ' 
' → logprob: -6.625351428985596
    10. '	for' → logprob: -6.875351428985596

Token 51: ' idx' (ID: 14016)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2797912657260895
    2. ' for' → logprob: -1.904791235923767
    3. 'i' → logprob: -3.0297913551330566
    4. '   ' → logprob: -4.154791355133057
    5. 'while' → logprob: -4.529791355133057
    6. 'pos' → logprob: -5.154791355133057
    7. ' while' → logprob: -5.654791355133057
    8. 'current' → logprob: -6.529791355133057
    9. 'cur' → logprob: -6.654791355133057
    10. ' i' → logprob: -7.029791355133057

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007632062304764986
    2. '=' → logprob: -4.882632255554199
    3. ' ' → logprob: -10.8826322555542
    4. ' =)' → logprob: -12.3826322555542
    5. ',' → logprob: -14.1326322555542
    6. ' ,' → logprob: -14.7576322555542
    7. ' =
' → logprob: -14.8826322555542
    8. ' +=' → logprob: -15.2576322555542
    9. '<|end|>' → logprob: -15.5076322555542
    10. '_' → logprob: -16.257631301879883

Token 53: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008901137858629227
    2. ' ' → logprob: -4.883901119232178
    3. 'len' → logprob: -7.633901119232178
    4. '-' → logprob: -7.758901119232178
    5. 'M' → logprob: -8.883901596069336
    6. ' M' → logprob: -9.633901596069336
    7. ' -' → logprob: -9.758901596069336
    8. '1' → logprob: -9.883901596069336
    9. ' len' → logprob: -10.133901596069336
    10. 'N' → logprob: -12.571401596069336

Token 54: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01867401972413063
    2. 'len' → logprob: -4.518673896789551
    3. 'M' → logprob: -5.393673896789551
    4. '-' → logprob: -6.143673896789551
    5. ' ' → logprob: -7.643673896789551
    6. 'N' → logprob: -8.64367389678955
    7. '1' → logprob: -9.26867389678955
    8. '-M' → logprob: -10.26867389678955
    9. ' len' → logprob: -10.39367389678955
    10. ' M' → logprob: -10.51867389678955

Token 55: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7572513222694397
    2. ' ' → logprob: -1.507251262664795
    3. ' while' → logprob: -2.382251262664795
    4. '<|end|>' → logprob: -2.757251262664795
    5. '
' → logprob: -3.007251262664795
    6. ' 
' → logprob: -3.382251262664795
    7. 'while' → logprob: -3.632251262664795
    8. '    
' → logprob: -4.132251262664795
    9. '\n' → logprob: -5.132251262664795
    10. '	while' → logprob: -5.757251262664795

Token 57: ' while' (ID: 2049)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0020776987075806
    2. ' while' → logprob: -1.3770776987075806
    3. '\n' → logprob: -2.377077579498291
    4. 'while' (adapté à ' while') → logprob: -2.877077579498291
    5. ' 
' → logprob: -3.002077579498291
    6. ' \' → logprob: -3.252077579498291
    7. '   ' → logprob: -3.377077579498291
    8. '\' → logprob: -3.627077579498291
    9. '	while' → logprob: -3.877077579498291
    10. '<|end|>' → logprob: -4.127077579498291

Token 58: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.006816839333623648
    2. 'idx' → logprob: -5.006816864013672
    3. ' True' → logprob: -9.506816864013672
    4. ' len' → logprob: -11.506816864013672
    5. 'True' → logprob: -12.256816864013672
    6. '(idx' → logprob: -12.381816864013672
    7. '	idx' → logprob: -13.131816864013672
    8. '   ' → logprob: -13.881816864013672
    9. 'len' → logprob: -13.881816864013672
    10. '    ' → logprob: -14.006816864013672

Token 59: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.11028916388750076
    2. '<' → logprob: -2.6102890968322754
    3. ' <=' → logprob: -3.6102890968322754
    4. '<=' → logprob: -6.110289096832275
    5. '<len' → logprob: -7.110289096832275
    6. '+' → logprob: -7.860289096832275
    7. ' ' → logprob: -8.360289573669434
    8. ' +' → logprob: -9.860289573669434
    9. '<M' → logprob: -9.860289573669434
    10. '<N' → logprob: -9.985289573669434

Token 60: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.786873996257782
    2. 'N' → logprob: -1.4118740558624268
    3. ' M' → logprob: -1.6618740558624268
    4. 'M' → logprob: -3.1618740558624268
    5. ' len' → logprob: -3.1618740558624268
    6. 'len' → logprob: -3.7868740558624268
    7. ' ' → logprob: -5.661873817443848
    8. 'n' → logprob: -8.911873817443848
    9. ' n' → logprob: -9.161873817443848
    10. '   ' → logprob: -9.661873817443848

Token 61: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016807749634608626
    2. ' :' → logprob: -7.376680850982666
    3. ':
' → logprob: -7.876680850982666
    4. ' and' → logprob: -8.126680374145508
    5. '+' → logprob: -8.376680374145508
    6. '+:' → logprob: -9.126680374145508
    7. 'and' → logprob: -11.251680374145508
    8. '   ' → logprob: -11.876680374145508
    9. ' +' → logprob: -12.626680374145508
    10. ' ' → logprob: -12.626680374145508

Token 62: ' M' (ID: 391)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00770955067127943
    2. ' ' → logprob: -4.882709503173828
    3. 'M' → logprob: -10.882709503173828
    4. '-' → logprob: -10.882709503173828
    5. ' M' → logprob: -10.882709503173828
    6. '   ' → logprob: -11.257709503173828
    7. '2' → logprob: -11.695209503173828
    8. '0' → logprob: -11.757709503173828
    9. '    ' → logprob: -13.382709503173828
    10. '  ' → logprob: -13.445209503173828

Token 63: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3432076871395111
    2. ':' → logprob: -1.3432077169418335
    3. 'and' → logprob: -4.093207836151123
    4. '+' → logprob: -4.718207836151123
    5. ':
' → logprob: -6.843207836151123
    6. ' :' → logprob: -7.093207836151123
    7. ' +' → logprob: -7.218207836151123
    8. ' or' → logprob: -8.093207359313965
    9. '   ' → logprob: -8.343207359313965
    10. ' ' → logprob: -8.718207359313965

Token 64: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35598671436309814
    2. '   ' → logprob: -2.2309865951538086
    3. '    ' → logprob: -2.4809865951538086
    4. ' ' → logprob: -2.7309865951538086
    5. '<|end|>' → logprob: -4.105986595153809
    6. ':' → logprob: -4.855986595153809
    7. ',' → logprob: -6.230986595153809
    8. '        ' → logprob: -6.355986595153809
    9. '        
' → logprob: -6.355986595153809
    10. '+' → logprob: -6.480986595153809

Token 65: ' executed' (ID: 30830)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.5196489691734314
    2. ' for' → logprob: -2.144649028778076
    3. ' if' → logprob: -2.644649028778076
    4. ' ' → logprob: -3.269649028778076
    5. '       ' → logprob: -3.894649028778076
    6. ' step' → logprob: -3.894649028778076
    7. ' res' → logprob: -4.144649028778076
    8. '   ' → logprob: -4.394649028778076
    9. ' max' → logprob: -4.644649028778076
    10. 'for' → logprob: -4.769649028778076

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.000663161277771
    2. ' +=' → logprob: -1.000663161277771
    3. '+' → logprob: -2.6256632804870605
    4. '=' → logprob: -2.7506632804870605
    5. '+=' → logprob: -2.8756632804870605
    6. '_' → logprob: -3.6256632804870605
    7. ' +' → logprob: -4.7506632804870605
    8. ' ' → logprob: -4.8756632804870605
    9. '_idx' → logprob: -5.3756632804870605
    10. '_step' → logprob: -6.0006632804870605

Token 67: ' ' (ID: 220)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.03919864445924759
    2. ' False' → logprob: -3.289198637008667
    3. '0' → logprob: -7.289198875427246
    4. 'S' → logprob: -9.164198875427246
    5. 'True' → logprob: -9.414198875427246
    6. '   ' → logprob: -9.789198875427246
    7. 'idx' → logprob: -10.164198875427246
    8. 'min' → logprob: -10.164198875427246
    9. 'max' → logprob: -10.414198875427246
    10. '(False' → logprob: -10.914198875427246

Token 68: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0036035135854035616
    2. '0' → logprob: -6.128603458404541
    3. 'S' → logprob: -7.753603458404541
    4. 'min' → logprob: -8.3786039352417
    5. 'max' → logprob: -8.5036039352417
    6. 'True' → logprob: -8.7536039352417
    7. ' False' → logprob: -9.1286039352417
    8. 'idx' → logprob: -9.3786039352417
    9. 'int' → logprob: -10.0036039352417
    10. 'len' → logprob: -11.0036039352417

Token 69: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 70: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7499459981918335
    2. ' for' → logprob: -1.1249459981918335
    3. '<|end|>' → logprob: -2.499946117401123
    4. 'for' → logprob: -3.124946117401123
    5. '   ' → logprob: -3.249946117401123
    6. ')' → logprob: -4.874946117401123
    7. '        
' → logprob: -4.999946117401123
    8. '    ' → logprob: -5.499946117401123
    9. '    
' → logprob: -5.624946117401123
    10. ' ' → logprob: -5.999946117401123

Token 71: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5362367033958435
    2. 'for' (adapté à ' for') → logprob: -0.9112367033958435
    3. '       ' → logprob: -4.661236763000488
    4. '   ' → logprob: -6.286236763000488
    5. '    ' → logprob: -7.536236763000488
    6. '	for' → logprob: -8.411236763000488
    7. ' 
' → logprob: -9.286236763000488
    8. ' ' → logprob: -9.536236763000488
    9. '
' → logprob: -9.786236763000488
    10. '<|end|>' → logprob: -9.911236763000488

Token 72: ' val' (ID: 1459)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.11175618320703506
    2. ' step' → logprob: -3.1117560863494873
    3. 'i' → logprob: -3.9867560863494873
    4. ' j' → logprob: -4.236756324768066
    5. ' range' → logprob: -4.861756324768066
    6. 'step' → logprob: -5.111756324768066
    7. ' d' → logprob: -5.486756324768066
    8. 'j' → logprob: -6.361756324768066
    9. ' jump' → logprob: -6.486756324768066
    10. 'd' → logprob: -7.111756324768066

Token 73: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004592468962073326
    2. 'ex' → logprob: -5.879592418670654
    3. ',' → logprob: -7.504592418670654
    4. 'x' → logprob: -8.129592895507812
    5. 'ue' → logprob: -8.129592895507812
    6. 'al' → logprob: -9.004592895507812
    7. 'uel' → logprob: -9.129592895507812
    8. 'in' → logprob: -9.754592895507812
    9. ' ' → logprob: -9.754592895507812
    10. '   ' → logprob: -9.754592895507812

Token 74: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.006591382436454296
    2. 'range' → logprob: -5.131591320037842
    3. ' reversed' → logprob: -7.881591320037842
    4. ' ' → logprob: -8.756591796875
    5. ' list' → logprob: -10.631591796875
    6. ' xrange' → logprob: -10.756591796875
    7. '	range' → logprob: -10.881591796875
    8. ' [' → logprob: -11.006591796875
    9. '[' → logprob: -11.256591796875
    10. '   ' → logprob: -11.506591796875

Token 75: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.029954465106129646
    2. '(' → logprob: -3.529954433441162
    3. ' M' → logprob: -9.52995491027832
    4. 'M' → logprob: -9.77995491027832
    5. ' (' → logprob: -10.77995491027832
    6. '1' → logprob: -10.90495491027832
    7. ' ' → logprob: -11.65495491027832
    8. '(min' → logprob: -12.02995491027832
    9. '   ' → logprob: -12.27995491027832
    10. '(m' → logprob: -12.77995491027832

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011713240382960066
    2. ' ,' → logprob: -9.500117301940918
    3. '1' → logprob: -11.375117301940918
    4. '+' → logprob: -11.625117301940918
    5. '   ' → logprob: -11.875117301940918
    6. '-' → logprob: -12.875117301940918
    7. ',M' → logprob: -12.875117301940918
    8. '0' → logprob: -13.875117301940918
    9. '3' → logprob: -14.000117301940918
    10. '),' → logprob: -14.125117301940918

Token 77: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.47412243485450745
    2. ' ' → logprob: -0.9741224050521851
    3. '1' → logprob: -10.599122047424316
    4. '  ' → logprob: -12.474122047424316
    5. ' ' → logprob: -12.474122047424316
    6. '```' → logprob: -12.474122047424316
    7. '>' → logprob: -12.599122047424316
    8. '   ' → logprob: -13.599122047424316
    9. ' -' → logprob: -14.224122047424316
    10. '-' → logprob: -14.411622047424316

Token 78: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03393601253628731
    2. ' ' → logprob: -3.408936023712158
    3. '1' → logprob: -8.283935546875
    4. '-' → logprob: -11.596435546875
    5. ' -' → logprob: -11.721435546875
    6. '```' → logprob: -12.596435546875
    7. '  ' → logprob: -12.846435546875
    8. ' ' → logprob: -13.158935546875
    9. '   ' → logprob: -13.158935546875
    10. ' M' → logprob: -13.596435546875

Token 79: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004377428907901049
    2. ',-' → logprob: -5.504377365112305
    3. '-' → logprob: -8.879377365112305
    4. ' ,' → logprob: -9.004377365112305
    5. '0' → logprob: -11.254377365112305
    6. ' ,-' → logprob: -11.629377365112305
    7. '   ' → logprob: -12.254377365112305
    8. ' -' → logprob: -12.254377365112305
    9. '-,' → logprob: -13.004377365112305
    10. '```' → logprob: -14.379377365112305

Token 80: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.22563782334327698
    2. '-' → logprob: -1.6006377935409546
    3. ' ' → logprob: -8.850637435913086
    4. ')' → logprob: -10.350637435913086
    5. '```' → logprob: -10.850637435913086
    6. '<|end|>' → logprob: -11.725637435913086
    7. '1' → logprob: -12.225637435913086
    8. '  ' → logprob: -12.600637435913086
    9. '   ' → logprob: -12.600637435913086
    10. '0' → logprob: -13.225637435913086

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.500003814697266
    3. ' -' → logprob: -15.875003814697266
    4. '-' → logprob: -16.625003814697266
    5. '<|end|>' → logprob: -16.750003814697266
    6. ')' → logprob: -17.375003814697266
    7. '```' → logprob: -18.500003814697266
    8. '<|end|>' → logprob: -20.000003814697266
    9. '>' → logprob: -20.250003814697266
    10. ')>' → logprob: -20.375003814697266

Token 82: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0022526723332703114
    2. '):
' → logprob: -6.377252578735352
    3. ' ):' → logprob: -7.877252578735352
    4. ':' → logprob: -9.502252578735352
    5. ')' → logprob: -10.002252578735352
    6. ',' → logprob: -10.377252578735352
    7. '):
' → logprob: -12.002252578735352
    8. '   ' → logprob: -13.127252578735352
    9. '-' → logprob: -13.252252578735352
    10. '):

' → logprob: -13.252252578735352

Token 83: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: ' target' (ID: 3783)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22665290534496307
    2. '<|end|>' → logprob: -1.6016528606414795
    3. ' if' → logprob: -7.601653099060059
    4. '<|end|>' → logprob: -7.851653099060059
    5. ' 
' → logprob: -8.851653099060059
    6. ' ' → logprob: -9.726653099060059
    7. '        ' → logprob: -10.226653099060059
    8. 's' → logprob: -11.101653099060059
    9. '       ' → logprob: -11.101653099060059
    10. 'if' → logprob: -11.476653099060059

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1310080587863922
    2. '=' → logprob: -2.1310081481933594
    3. '_idx' → logprob: -5.881008148193359
    4. 'idx' → logprob: -8.50600814819336
    5. 's' → logprob: -8.63100814819336
    6. '_index' → logprob: -9.25600814819336
    7. '_' → logprob: -9.38100814819336
    8. '+' → logprob: -9.63100814819336
    9. ' ' → logprob: -9.63100814819336
    10. ',' → logprob: -9.88100814819336

Token 86: ' S' (ID: 336)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.12036007642745972
    2. 'idx' → logprob: -2.2453601360321045
    3. ' S' → logprob: -5.370359897613525
    4. 'S' → logprob: -6.870359897613525
    5. ' N' → logprob: -8.245360374450684
    6. ' res' → logprob: -8.370360374450684
    7. ' min' → logprob: -8.495360374450684
    8. ' val' → logprob: -8.745360374450684
    9. ' len' → logprob: -9.245360374450684
    10. 'val' → logprob: -9.245360374450684

Token 87: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.008157429285347462
    2. 'idx' → logprob: -5.133157253265381
    3. ' idx' → logprob: -6.758157253265381
    4. '[' → logprob: -7.383157253265381
    5. ' [' → logprob: -8.633157730102539
    6. '```' → logprob: -9.383157730102539
    7. '   ' → logprob: -10.258157730102539
    8. '	idx' → logprob: -10.508157730102539
    9. '.find' → logprob: -11.133157730102539
    10. '.idx' → logprob: -11.258157730102539

Token 88: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16061362624168396
    2. ' +' → logprob: -1.9106136560440063
    3. '-' → logprob: -8.410614013671875
    4. ' -' → logprob: -9.535614013671875
    5. '   ' → logprob: -11.160614013671875
    6. '+j' → logprob: -11.410614013671875
    7. '+xml' → logprob: -11.910614013671875
    8. ':' → logprob: -12.035614013671875
    9. '...' → logprob: -12.160614013671875
    10. ' :' → logprob: -12.160614013671875

Token 89: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.00016063073417171836
    2. ' val' → logprob: -8.750160217285156
    3. '	val' → logprob: -14.625160217285156
    4. '[val' → logprob: -14.750160217285156
    5. '   ' → logprob: -15.000160217285156
    6. '(val' → logprob: -15.000160217285156
    7. '           ' → logprob: -15.375160217285156
    8. ',val' → logprob: -15.875160217285156
    9. '```' → logprob: -16.750160217285156
    10. ' ' → logprob: -16.875160217285156

Token 90: ']
' (ID: 1592)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7697072625160217
    2. ']' → logprob: -0.7697072625160217
    3. ' -' → logprob: -2.644707202911377
    4. ' ]' → logprob: -7.144707202911377
    5. '])' → logprob: -7.269707202911377
    6. ')' → logprob: -8.144707679748535
    7. ')]' → logprob: -8.394707679748535
    8. '1' → logprob: -8.394707679748535
    9. ']-' → logprob: -9.019707679748535
    10. '   ' → logprob: -10.519707679748535

Token 91: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.37921664118766785
    2. 'if' → logprob: -1.5042166709899902
    3. '<|end|>' → logprob: -3.8792166709899902
    4. ']' → logprob: -4.00421667098999
    5. ')' → logprob: -4.37921667098999
    6. ' ==' → logprob: -4.50421667098999
    7. ' ' → logprob: -5.00421667098999
    8. '           ' → logprob: -5.00421667098999
    9. '==' → logprob: -5.50421667098999
    10. '        ' → logprob: -6.37921667098999

Token 92: ' if' (ID: 538)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2000032365322113
    2. '==' → logprob: -2.075003147125244
    3. ' if' → logprob: -3.575003147125244
    4. 'if' (adapté à ' if') → logprob: -4.700003147125244
    5. ' ' → logprob: -5.200003147125244
    6. ' !=' → logprob: -5.450003147125244
    7. '=' → logprob: -5.825003147125244
    8. ')' → logprob: -7.075003147125244
    9. '!=' → logprob: -7.075003147125244
    10. ' '' → logprob: -7.325003147125244

Token 93: ' target' (ID: 3783)
  Prédit: ' target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.04583796486258507
    2. 'target' → logprob: -3.170837879180908
    3. ' not' → logprob: -5.920837879180908
    4. ' val' → logprob: -9.670838356018066
    5. '(target' → logprob: -10.545838356018066
    6. 'val' → logprob: -11.045838356018066
    7. 'not' → logprob: -11.670838356018066
    8. ' ' → logprob: -11.795838356018066
    9. ' executed' → logprob: -11.795838356018066
    10. '	target' → logprob: -12.295838356018066

Token 94: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.24441339075565338
    2. '==' → logprob: -1.6194133758544922
    3. ' in' → logprob: -4.994413375854492
    4. ' !=' → logprob: -5.869413375854492
    5. '=='' → logprob: -5.869413375854492
    6. '!=' → logprob: -6.369413375854492
    7. '=' → logprob: -6.994413375854492
    8. ' =='' → logprob: -7.119413375854492
    9. ' ' → logprob: -7.494413375854492
    10. ' not' → logprob: -8.119413375854492

Token 95: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.06376463174819946
    2. ' '' → logprob: -3.4387645721435547
    3. ''.' → logprob: -4.813764572143555
    4. '"' → logprob: -4.938764572143555
    5. ''S' → logprob: -5.813764572143555
    6. ''s' → logprob: -6.313764572143555
    7. ''o' → logprob: -6.938764572143555
    8. ''O' → logprob: -7.063764572143555
    9. ''A' → logprob: -7.188764572143555
    10. ''a' → logprob: -7.188764572143555

Token 96: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.44603121280670166
    2. '0' → logprob: -1.5710312128067017
    3. '1' → logprob: -2.446031093597412
    4. ''.' → logprob: -3.446031093597412
    5. ' '' → logprob: -4.946031093597412
    6. '.' → logprob: -5.321031093597412
    7. '"' → logprob: -5.946031093597412
    8. ' ' → logprob: -6.071031093597412
    9. ''s' → logprob: -6.071031093597412
    10. ''o' → logprob: -6.196031093597412

Token 97: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.009986975230276585
    2. ''' → logprob: -4.884986877441406
    3. '':
' → logprob: -6.884986877441406
    4. ':' → logprob: -7.384986877441406
    5. ' ':' → logprob: -7.509986877441406
    6. ' or' → logprob: -9.759986877441406
    7. ' '' → logprob: -10.259986877441406
    8. ''or' → logprob: -10.259986877441406
    9. '':
' → logprob: -10.759986877441406
    10. ' :' → logprob: -11.634986877441406

Token 98: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08622067421674728
    2. '           ' → logprob: -2.8362207412719727
    3. ' and' → logprob: -4.836220741271973
    4. ':' → logprob: -5.336220741271973
    5. ' or' → logprob: -5.711220741271973
    6. '<|end|>' → logprob: -5.961220741271973
    7. ':
' → logprob: -6.461220741271973
    8. ' :' → logprob: -6.836220741271973
    9. '            ' → logprob: -7.711220741271973
    10. '<|end|>' → logprob: -8.211220741271973

Token 99: ' res' (ID: 694)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.3870154023170471
    2. '               ' → logprob: -1.8870153427124023
    3. ' res' → logprob: -2.2620153427124023
    4. '           ' → logprob: -4.012015342712402
    5. ' executed' → logprob: -4.012015342712402
    6. 'idx' → logprob: -4.762015342712402
    7. '                ' → logprob: -4.887015342712402
    8. '            ' → logprob: -5.012015342712402
    9. '                   ' → logprob: -5.512015342712402
    10. 'res' (adapté à ' res') → logprob: -7.387015342712402

Token 100: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00033951509976759553
    2. ' .' → logprob: -8.37533950805664
    3. '.' → logprob: -9.25033950805664
    4. '.extend' → logprob: -11.50033950805664
    5. '.add' → logprob: -13.87533950805664
    6. 'append' → logprob: -14.75033950805664
    7. ' +=' → logprob: -15.25033950805664
    8. '.Append' → logprob: -15.62533950805664
    9. '.push' → logprob: -15.62533950805664
    10. '.app' → logprob: -15.87533950805664

Token 101: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.016560014337301254
    2. '(' → logprob: -4.891560077667236
    3. 'val' → logprob: -5.766560077667236
    4. '('' → logprob: -6.141560077667236
    5. ' val' → logprob: -6.141560077667236
    6. ' (' → logprob: -7.266560077667236
    7. '(idx' → logprob: -7.641560077667236
    8. '(str' → logprob: -9.766559600830078
    9. ''' → logprob: -10.016559600830078
    10. '((' → logprob: -10.266559600830078

Token 102: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.25611400604248047
    2. ')' → logprob: -1.5061140060424805
    3. '               ' → logprob: -5.8811140060424805
    4. ' )
' → logprob: -7.3811140060424805
    5. ')
' → logprob: -7.5061140060424805
    6. ' )' → logprob: -9.00611400604248
    7. '                   ' → logprob: -10.63111400604248
    8. '           ' → logprob: -11.00611400604248
    9. ')

' → logprob: -11.75611400604248
    10. '<|end|>' → logprob: -12.00611400604248

Token 103: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04633293300867081
    2. '
' → logprob: -3.546332836151123
    3. '                
' → logprob: -5.296332836151123
    4. '<|end|>' → logprob: -5.546332836151123
    5. '                   ' → logprob: -5.796332836151123
    6. '           ' → logprob: -6.171332836151123
    7. '                ' → logprob: -7.921332836151123
    8. '                    
' → logprob: -8.171333312988281
    9. '            
' → logprob: -8.421333312988281
    10. '\n' → logprob: -8.546333312988281

Token 104: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.5772790908813477
    2. 'idx' (adapté à ' idx') → logprob: -0.8272790908813477
    3. '               ' → logprob: -6.827279090881348
    4. '           ' → logprob: -8.702279090881348
    5. ' executed' → logprob: -10.202279090881348
    6. '	idx' → logprob: -10.952279090881348
    7. '                   ' → logprob: -11.327279090881348
    8. '```' → logprob: -11.827279090881348
    9. '[idx' → logprob: -12.327279090881348
    10. '
' → logprob: -12.827279090881348

Token 105: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0563676655292511
    2. '+' → logprob: -3.4313676357269287
    3. ' +=' → logprob: -3.8063676357269287
    4. '=' → logprob: -8.431367874145508
    5. '+='' → logprob: -12.306367874145508
    6. '<|end|>' → logprob: -12.431367874145508
    7. ' +' → logprob: -13.056367874145508
    8. ']+=' → logprob: -13.431367874145508
    9. ' =' → logprob: -13.431367874145508
    10. '+++' → logprob: -13.556367874145508

Token 106: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0031777136027812958
    2. ' val' → logprob: -5.753177642822266
    3. '	val' → logprob: -17.628177642822266
    4. '[val' → logprob: -18.753177642822266
    5. '(val' → logprob: -19.753177642822266
    6. ',val' → logprob: -20.628177642822266
    7. '_val' → logprob: -20.878177642822266
    8. '.val' → logprob: -21.003177642822266
    9. ' ' → logprob: -21.003177642822266
    10. 'v' → logprob: -21.378177642822266

Token 107: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002863127738237381
    2. '
' → logprob: -6.502862930297852
    3. '                
' → logprob: -7.752862930297852
    4. '           ' → logprob: -8.377862930297852
    5. '<|end|>' → logprob: -8.377862930297852
    6. '                   ' → logprob: -8.877862930297852
    7. '```' → logprob: -9.127862930297852
    8. '              ' → logprob: -9.877862930297852
    9. '  
' → logprob: -10.377862930297852
    10. '<|end|>' → logprob: -10.877862930297852

Token 108: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00089442846365273
    2. '                
' → logprob: -8.500894546508789
    3. '           ' → logprob: -8.750894546508789
    4. '<|end|>' → logprob: -8.750894546508789
    5. '                   ' → logprob: -9.000894546508789
    6. '
' → logprob: -9.375894546508789
    7. '```' → logprob: -10.000894546508789
    8. '              ' → logprob: -10.375894546508789
    9. '                ' → logprob: -10.750894546508789
    10. '  
' → logprob: -11.250894546508789

Token 109: ' executed' (ID: 30830)
  Prédit: ' executed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' executed' → logprob: -0.2090444564819336
    2. 'execut' → logprob: -1.7090444564819336
    3. '               ' → logprob: -4.959044456481934
    4. '           ' → logprob: -7.584044456481934
    5. '       ' → logprob: -10.209044456481934
    6. '   ' → logprob: -11.084044456481934
    7. '                   ' → logprob: -11.959044456481934
    8. '.execut' → logprob: -12.834044456481934
    9. ' break' → logprob: -12.959044456481934
    10. '```' → logprob: -13.209044456481934

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10023557394742966
    2. '=' → logprob: -2.3502354621887207
    3. ' +=' → logprob: -10.600235939025879
    4. '+=' → logprob: -12.725235939025879
    5. '=True' → logprob: -14.475235939025879
    6. ' ' → logprob: -15.600235939025879
    7. ' |=' → logprob: -16.100234985351562
    8. '           ' → logprob: -16.850234985351562
    9. '1' → logprob: -16.975234985351562
    10. '<|end|>' → logprob: -17.100234985351562

Token 111: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004915529862046242
    2. ' ' → logprob: -7.625491619110107
    3. 'True' → logprob: -13.00049114227295
    4. ' True' → logprob: -14.00049114227295
    5. '   ' → logprob: -15.87549114227295
    6. '           ' → logprob: -16.125492095947266
    7. '                   ' → logprob: -16.125492095947266
    8. '               ' → logprob: -16.125492095947266
    9. '       ' → logprob: -18.125492095947266
    10. '                       ' → logprob: -18.625492095947266

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7954958821064793e-05
    2. 'True' → logprob: -11.125018119812012
    3. ' ' → logprob: -13.000018119812012
    4. '   ' → logprob: -15.000018119812012
    5. 'val' → logprob: -15.500018119812012
    6. '           ' → logprob: -15.875018119812012
    7. ' True' → logprob: -16.375017166137695
    8. '       ' → logprob: -17.625017166137695
    9. '                   ' → logprob: -17.875017166137695
    10. 'true' → logprob: -17.875017166137695

Token 113: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00020187153131701052
    2. '<|end|>' → logprob: -8.750202178955078
    3. '           ' → logprob: -11.125202178955078
    4. '                
' → logprob: -11.375202178955078
    5. '       ' → logprob: -12.500202178955078
    6. '                   ' → logprob: -13.000202178955078
    7. '                ' → logprob: -13.375202178955078
    8. '              ' → logprob: -13.500202178955078
    9. '<|end|>' → logprob: -13.750202178955078
    10. '   ' → logprob: -13.875202178955078

Token 114: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001431114797014743
    2. '<|end|>' → logprob: -9.375143051147461
    3. '                
' → logprob: -10.375143051147461
    4. '           ' → logprob: -11.750143051147461
    5. '       ' → logprob: -12.500143051147461
    6. '                   ' → logprob: -12.875143051147461
    7. '<|end|>' → logprob: -13.250143051147461
    8. '                ' → logprob: -13.250143051147461
    9. ' ' → logprob: -13.375143051147461
    10. '              ' → logprob: -13.375143051147461

Token 115: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005543104838579893
    2. 'break' (adapté à ' break') → logprob: -5.380543231964111
    3. ' break' → logprob: -7.005543231964111
    4. '           ' → logprob: -11.755542755126953
    5. '                   ' → logprob: -13.255542755126953
    6. '	break' → logprob: -13.505542755126953
    7. '              ' → logprob: -13.505542755126953
    8. '                ' → logprob: -14.130542755126953
    9. '   ' → logprob: -14.380542755126953
    10. '       ' → logprob: -14.505542755126953

Token 116: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 117: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 118: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8445305824279785
    2. ' ' → logprob: -1.4695305824279785
    3. '<|end|>' → logprob: -2.3445305824279785
    4. ' if' → logprob: -2.5945305824279785
    5. ' 
' → logprob: -3.0945305824279785
    6. '   ' → logprob: -3.4695305824279785
    7. 'if' (adapté à ' if') → logprob: -3.8445305824279785
    8. '
' → logprob: -3.9695305824279785
    9. '    ' → logprob: -4.0945305824279785
    10. '        ' → logprob: -4.2195305824279785

Token 119: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.06394166499376297
    2. ' executed' → logprob: -2.938941717147827
    3. 'not' → logprob: -4.938941478729248
    4. 'execut' → logprob: -6.313941478729248
    5. '	not' → logprob: -11.313941955566406
    6. ' ' → logprob: -11.313941955566406
    7. '(not' → logprob: -12.313941955566406
    8. ' ' → logprob: -12.313941955566406
    9. '   ' → logprob: -12.313941955566406
    10. 'Executed' → logprob: -12.688941955566406

Token 120: ' executed' (ID: 30830)
  Prédit: ' executed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' executed' → logprob: -0.06197025999426842
    2. 'execut' → logprob: -2.8119702339172363
    3. ' ' → logprob: -13.811970710754395
    4. ' ' → logprob: -13.811970710754395
    5. '.execut' → logprob: -15.811970710754395
    6. 'execute' → logprob: -16.061969757080078
    7. 'ex' → logprob: -16.186969757080078
    8. 'Executed' → logprob: -16.311969757080078
    9. ' execut' → logprob: -16.936969757080078
    10. 'exec' → logprob: -17.936969757080078

Token 121: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0025248879101127386
    2. ':
' → logprob: -6.0025248527526855
    3. ' :' → logprob: -10.377525329589844
    4. ':return' → logprob: -11.252525329589844
    5. ':

' → logprob: -12.627525329589844
    6. ' :
' → logprob: -14.627525329589844
    7. '):' → logprob: -15.377525329589844
    8. '=' → logprob: -16.127525329589844
    9. ' or' → logprob: -16.127525329589844
    10. '():
' → logprob: -16.252525329589844

Token 122: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.055156007409095764
    2. 'print' → logprob: -3.1801559925079346
    3. ' print' → logprob: -5.555156230926514
    4. 'return' → logprob: -5.805156230926514
    5. '       ' → logprob: -6.055156230926514
    6. ' return' → logprob: -6.555156230926514
    7. '   ' → logprob: -7.430156230926514
    8. ' sys' → logprob: -8.430155754089355
    9. '```' → logprob: -8.680155754089355
    10. 'sys' → logprob: -8.930155754089355

Token 123: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.08001384884119034
    2. 'return' → logprob: -3.3300137519836426
    3. '           ' → logprob: -3.9550137519836426
    4. 'break' → logprob: -4.330013751983643
    5. 'sys' → logprob: -5.330013751983643
    6. 'res' → logprob: -6.330013751983643
    7. ' print' → logprob: -7.205013751983643
    8. '       ' → logprob: -7.330013751983643
    9. '   ' → logprob: -8.0800142288208
    10. '               ' → logprob: -8.5800142288208

Token 124: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.07510906457901001
    2. '-' → logprob: -2.9501090049743652
    3. '(' → logprob: -4.575109004974365
    4. '("' → logprob: -4.950109004974365
    5. '("-' → logprob: -6.200109004974365
    6. '('' → logprob: -7.825109004974365
    7. '0' → logprob: -9.075109481811523
    8. '('-' → logprob: -10.325109481811523
    9. '(False' → logprob: -11.200109481811523
    10. '(
' → logprob: -11.325109481811523

Token 125: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.500006675720215
    3. '   ' → logprob: -14.125006675720215
    4. 'res' → logprob: -14.687506675720215
    5. '       ' → logprob: -14.687506675720215
    6. '2' → logprob: -15.687506675720215
    7. 'print' → logprob: -16.0625057220459
    8. '```' → logprob: -16.2500057220459
    9. '           ' → logprob: -16.3125057220459
    10. ')' → logprob: -16.3125057220459

Token 126: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20165082812309265
    2. ')
' → logprob: -1.701650857925415
    3. '       ' → logprob: -8.951650619506836
    4. ')return' → logprob: -9.951650619506836
    5. '           ' → logprob: -10.326650619506836
    6. ' )' → logprob: -11.576650619506836
    7. ')
' → logprob: -11.701650619506836
    8. '   ' → logprob: -12.826650619506836
    9. ' )
' → logprob: -13.326650619506836
    10. '
' → logprob: -13.826650619506836

Token 127: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002326224057469517
    2. '       ' → logprob: -9.125232696533203
    3. '<|end|>' → logprob: -9.625232696533203
    4. '
' → logprob: -10.625232696533203
    5. 'return' → logprob: -11.625232696533203
    6. '               ' → logprob: -11.875232696533203
    7. '   ' → logprob: -11.875232696533203
    8. '		' → logprob: -13.000232696533203
    9. ' return' → logprob: -13.250232696533203
    10. '            
' → logprob: -13.625232696533203

Token 128: ' sys' (ID: 12228)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.016626140102744102
    2. ' return' → logprob: -4.266626358032227
    3. '
' → logprob: -6.016626358032227
    4. '
' → logprob: -11.391626358032227
    5. '   ' → logprob: -12.766626358032227
    6. '	return' → logprob: -13.016626358032227
    7. '       ' → logprob: -13.516626358032227
    8. '```' → logprob: -13.516626358032227
    9. '           ' → logprob: -13.641626358032227
    10. '    
' → logprob: -14.141626358032227

Token 129: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -0.00021974841365590692
    2. 'exit' → logprob: -8.500219345092773
    3. '	exit' → logprob: -11.250219345092773
    4. '_exit' → logprob: -13.875219345092773
    5. '.stdout' → logprob: -14.375219345092773
    6. ' exit' → logprob: -14.500219345092773
    7. '.' → logprob: -14.875219345092773
    8. '.EXIT' → logprob: -15.875219345092773
    9. '.stderr' → logprob: -16.000219345092773
    10. '退出' → logprob: -16.125219345092773

Token 130: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.386147626675665e-05
    2. '(' → logprob: -9.625073432922363
    3. '()
' → logprob: -13.000073432922363
    4. '()]' → logprob: -13.500073432922363
    5. '()`' → logprob: -13.750073432922363
    6. '()">' → logprob: -14.625073432922363
    7. '`()' → logprob: -14.750073432922363
    8. ' ()' → logprob: -14.875073432922363
    9. '()

' → logprob: -14.875073432922363
    10. '();' → logprob: -15.000073432922363

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008972502313554287
    2. '    
' → logprob: -6.133972644805908
    3. '<|end|>' → logprob: -6.133972644805908
    4. '
' → logprob: -6.258972644805908
    5. '       ' → logprob: -6.633972644805908
    6. ')' → logprob: -7.383972644805908
    7. '\n' → logprob: -8.00897216796875
    8. '        
' → logprob: -9.25897216796875
    9. ' 
' → logprob: -9.88397216796875
    10. '  
' → logprob: -10.13397216796875

Token 132: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008978884667158127
    2. 'print' → logprob: -4.883978843688965
    3. '    
' → logprob: -8.008978843688965
    4. '<|end|>' → logprob: -8.258978843688965
    5. ' print' → logprob: -8.383978843688965
    6. 'return' → logprob: -8.508978843688965
    7. ' return' → logprob: -9.133978843688965
    8. '
' → logprob: -9.383978843688965
    9. '\n' → logprob: -10.133978843688965
    10. '    ' → logprob: -11.133978843688965

Token 133: ' wrap' (ID: 20404)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6112508177757263
    2. ' ' → logprob: -1.236250877380371
    3. ' _' → logprob: -2.236250877380371
    4. ' step' → logprob: -3.486250877380371
    5. '_' → logprob: -4.236250877380371
    6. ' process' → logprob: -6.236250877380371
    7. ' __' → logprob: -6.611250877380371
    8. '  ' → logprob: -6.611250877380371
    9. ' factorial' → logprob: -6.611250877380371
    10. ' f' → logprob: -6.986250877380371

Token 134: '(lst' (ID: 95688)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4312087893486023
    2. '():' → logprob: -1.681208848953247
    3. '_' → logprob: -2.681208848953247
    4. 'per' → logprob: -3.556208848953247
    5. 'er' → logprob: -3.556208848953247
    6. '(' → logprob: -3.681208848953247
    7. '():
' → logprob: -5.431208610534668
    8. '_step' → logprob: -6.556208610534668
    9. 'step' → logprob: -7.056208610534668
    10. 'around' → logprob: -7.181208610534668

Token 135: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01295938715338707
    2. ',' → logprob: -4.5129594802856445
    3. '):
' → logprob: -6.8879594802856445
    4. ')' → logprob: -7.2629594802856445
    5. '   ' → logprob: -9.887959480285645
    6. '_list' → logprob: -10.762959480285645
    7. '[]):' → logprob: -11.012959480285645
    8. ' ,' → logprob: -11.012959480285645
    9. ' ):' → logprob: -11.262959480285645
    10. ':' → logprob: -11.762959480285645

Token 136: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08326485753059387
    2. '<|end|>' → logprob: -3.4582648277282715
    3. ' return' → logprob: -3.8332648277282715
    4. 'return' → logprob: -4.3332648277282715
    5. '
' → logprob: -4.7082648277282715
    6. '   ' → logprob: -6.2082648277282715
    7. '    
' → logprob: -7.9582648277282715
    8. '  
' → logprob: -8.08326530456543
    9. '	return' → logprob: -8.33326530456543
    10. '[]' → logprob: -8.45826530456543

Token 137: ' '' (ID: 461)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.858524739742279
    2. ''' → logprob: -1.9835247993469238
    3. '[int' → logprob: -2.608524799346924
    4. '"' → logprob: -2.733524799346924
    5. 'lst' → logprob: -2.733524799346924
    6. 'list' → logprob: -2.858524799346924
    7. '[list' → logprob: -3.483524799346924
    8. '[len' → logprob: -3.608524799346924
    9. '''.' → logprob: -3.858524799346924
    10. ' [' → logprob: -4.233524799346924

Token 138: ' '.' (ID: 12662)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03961167111992836
    2. ' '' → logprob: -3.539611577987671
    3. '"' → logprob: -5.03961181640625
    4. ' '.' → logprob: -6.66461181640625
    5. ''.' → logprob: -7.16461181640625
    6. '''.' → logprob: -7.28961181640625
    7. '','.' → logprob: -8.91461181640625
    8. ' ''.' → logprob: -9.16461181640625
    9. ' "' → logprob: -9.28961181640625
    10. ''+' → logprob: -9.53961181640625

Token 139: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -5.5577775128767826e-06
    2. ' join' → logprob: -12.500005722045898
    3. 'j' → logprob: -13.750005722045898
    4. 'jo' → logprob: -14.625005722045898
    5. '```' → logprob: -16.1250057220459
    6. '.' → logprob: -16.2500057220459
    7. '.join' → logprob: -17.1250057220459
    8. ' ' → logprob: -18.3750057220459
    9. 'split' → logprob: -18.3750057220459
    10. ''' → logprob: -19.0000057220459

Token 140: '(str' (ID: 7946)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.08161479979753494
    2. '(str' → logprob: -2.5816147327423096
    3. 'map' → logprob: -6.081614971160889
    4. '[str' → logprob: -8.95661449432373
    5. 'str' → logprob: -9.08161449432373
    6. '(lst' → logprob: -9.33161449432373
    7. '(list' → logprob: -9.45661449432373
    8. '([' → logprob: -10.70661449432373
    9. '(' → logprob: -13.08161449432373
    10. 'lst' → logprob: -13.20661449432373

Token 141: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.006951814517378807
    2. '(i' → logprob: -5.006951808929443
    3. '(e' → logprob: -9.506952285766602
    4. '(num' → logprob: -9.756952285766602
    5. '(n' → logprob: -10.381952285766602
    6. '(el' → logprob: -10.881952285766602
    7. '(v' → logprob: -11.131952285766602
    8. 'x' → logprob: -11.881952285766602
    9. '(a' → logprob: -12.131952285766602
    10. '(' → logprob: -12.131952285766602

Token 142: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005961624556221068
    2. '(x' → logprob: -8.000596046447754
    3. '(i' → logprob: -9.000596046447754
    4. ' for' → logprob: -9.750596046447754
    5. 'for' → logprob: -10.500596046447754
    6. '(v' → logprob: -11.625596046447754
    7. '(item' → logprob: -11.875596046447754
    8. ' )' → logprob: -12.000596046447754
    9. '   ' → logprob: -12.500596046447754
    10. ')item' → logprob: -13.000596046447754

Token 143: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.116239070892334
    2. ')' → logprob: -1.491239070892334
    3. '(x' → logprob: -1.491239070892334
    4. ' for' → logprob: -1.866239070892334
    5. '(lst' → logprob: -3.366239070892334
    6. 'lst' → logprob: -3.866239070892334
    7. 'elem' → logprob: -6.366239070892334
    8. '(elem' → logprob: -6.491239070892334
    9. '(i' → logprob: -6.616239070892334
    10. ',' → logprob: -6.616239070892334

Token 144: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.01507405936717987
    2. 'x' → logprob: -4.265074253082275
    3. ' in' → logprob: -7.265074253082275
    4. '<|end|>' → logprob: -9.265073776245117
    5. ' ' → logprob: -10.140073776245117
    6. '(x' → logprob: -10.765073776245117
    7. '	x' → logprob: -11.515073776245117
    8. 'lst' → logprob: -11.515073776245117
    9. '<|end|>' → logprob: -11.640073776245117
    10. '_x' → logprob: -11.890073776245117

Token 145: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.24672798812389374
    2. 'lst' → logprob: -1.7467279434204102
    3. ' lst' → logprob: -3.24672794342041
    4. 'in' → logprob: -5.37172794342041
    5. '_lst' → logprob: -7.74672794342041
    6. '(lst' → logprob: -8.49672794342041
    7. ' ' → logprob: -10.12172794342041
    8. 'Lst' → logprob: -10.37172794342041
    9. '<|end|>' → logprob: -11.37172794342041
    10. 's' → logprob: -11.74672794342041

Token 146: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.009759512729942799
    2. ' lst' → logprob: -4.634759426116943
    3. '(lst' → logprob: -13.634759902954102
    4. 'res' → logprob: -13.759759902954102
    5. 'list' → logprob: -14.384759902954102
    6. '_lst' → logprob: -14.884759902954102
    7. 'l' → logprob: -16.2597599029541
    8. '
' → logprob: -16.3847599029541
    9. ' res' → logprob: -17.0097599029541
    10. '   ' → logprob: -17.1347599029541

Token 147: '[::-' (ID: 159890)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.384836888173595e-05
    2. ' )' → logprob: -10.8750638961792
    3. '())' → logprob: -11.1250638961792
    4. '))' → logprob: -11.5000638961792
    5. ')}' → logprob: -12.1250638961792
    6. '   ' → logprob: -12.3750638961792
    7. ')`' → logprob: -13.1250638961792
    8. ')}}' → logprob: -13.3750638961792
    9. ')
' → logprob: -13.8750638961792
    10. ')return' → logprob: -13.8750638961792

Token 148: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2091655731201172
    2. 'st' → logprob: -1.5841655731201172
    3. 'ist' → logprob: -1.7091655731201172
    4. 'erse' → logprob: -2.834165573120117
    5. 'er' → logprob: -3.084165573120117
    6. 'v' → logprob: -3.209165573120117
    7. ')' → logprob: -3.334165573120117
    8. 'lst' → logprob: -3.459165573120117
    9. 'ed' → logprob: -3.709165573120117
    10. '])' → logprob: -3.959165573120117

Token 149: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029954811558127403
    2. '))' → logprob: -3.5299549102783203
    3. '())' → logprob: -8.90495491027832
    4. '])' → logprob: -10.40495491027832
    5. '()' → logprob: -11.52995491027832
    6. ' )' → logprob: -12.15495491027832
    7. '})' → logprob: -12.15495491027832
    8. ')))' → logprob: -12.15495491027832
    9. ')])' → logprob: -12.65495491027832
    10. ')")' → logprob: -13.02995491027832

Token 150: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7757394909858704
    2. '   ' → logprob: -0.9007394909858704
    3. '<|end|>' → logprob: -2.5257394313812256
    4. '    
' → logprob: -3.9007394313812256
    5. ')' → logprob: -4.650739669799805
    6. ' 
' → logprob: -5.150739669799805
    7. ' ' → logprob: -5.150739669799805
    8. '  
' → logprob: -5.400739669799805
    9. '\n' → logprob: -5.775739669799805
    10. 'print' → logprob: -7.650739669799805

Token 151: ' res' (ID: 694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01586332358419895
    2. 'print' → logprob: -4.640863418579102
    3. 'return' → logprob: -5.390863418579102
    4. ' return' → logprob: -7.140863418579102
    5. '<|end|>' → logprob: -8.140863418579102
    6. '    
' → logprob: -8.515863418579102
    7. ' print' → logprob: -9.140863418579102
    8. '
' → logprob: -10.140863418579102
    9. '    ' → logprob: -10.390863418579102
    10. '       ' → logprob: -11.265863418579102

Token 152: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.04294472560286522
    2. '<|end|>' → logprob: -4.41794490814209
    3. '.reverse' → logprob: -5.41794490814209
    4. ')' → logprob: -5.54294490814209
    5. '.' → logprob: -5.79294490814209
    6. 'return' → logprob: -5.91794490814209
    7. '=' → logprob: -6.16794490814209
    8. ',' → logprob: -6.41794490814209
    9. '.pop' → logprob: -6.54294490814209
    10. '.clear' → logprob: -6.79294490814209

Token 153: '(N' (ID: 10564)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.11272219568490982
    2. '(N' → logprob: -2.362722158432007
    3. '(' → logprob: -4.737722396850586
    4. '(S' → logprob: -5.862722396850586
    5. '(M' → logprob: -7.612722396850586
    6. '(len' → logprob: -9.237722396850586
    7. '((' → logprob: -9.487722396850586
    8. '(sum' → logprob: -10.237722396850586
    9. '(sys' → logprob: -10.362722396850586
    10. '(index' → logprob: -10.987722396850586

Token 154: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.040067028254270554
    2. '-' → logprob: -3.290066957473755
    3. ' -' → logprob: -6.415067195892334
    4. ')
' → logprob: -8.040066719055176
    5. ' )' → logprob: -10.790066719055176
    6. '))' → logprob: -11.290066719055176
    7. '-M' → logprob: -11.665066719055176
    8. '   ' → logprob: -12.665066719055176
    9. ')`' → logprob: -13.040066719055176
    10. ')}' → logprob: -13.165066719055176

Token 155: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.030866539105772972
    2. '1' → logprob: -3.6558666229248047
    3. ' idx' → logprob: -5.405866622924805
    4. 'M' → logprob: -10.530866622924805
    5. 'len' → logprob: -11.530866622924805
    6. ' ' → logprob: -11.655866622924805
    7. '(idx' → logprob: -12.155866622924805
    8. 'res' → logprob: -12.530866622924805
    9. '	idx' → logprob: -13.155866622924805
    10. 'index' → logprob: -13.155866622924805

Token 156: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010509284038562328
    2. ')
' → logprob: -9.625104904174805
    3. ' )' → logprob: -10.250104904174805
    4. '))' → logprob: -13.250104904174805
    5. '   ' → logprob: -14.125104904174805
    6. ')`' → logprob: -15.000104904174805
    7. ')}' → logprob: -15.625104904174805
    8. '-' → logprob: -15.750104904174805
    9. ')

' → logprob: -16.125104904174805
    10. ')))' → logprob: -17.000104904174805

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022055702283978462
    2. '
' → logprob: -6.5022053718566895
    3. 'print' → logprob: -7.8772053718566895
    4. ' return' → logprob: -9.127205848693848
    5. 'return' → logprob: -9.627205848693848
    6. ' print' → logprob: -9.877205848693848
    7. '    
' → logprob: -10.002205848693848
    8. '<|end|>' → logprob: -10.127205848693848
    9. '       ' → logprob: -12.252205848693848
    10. '```' → logprob: -13.502205848693848

Token 158: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0884322077035904
    2. '   ' → logprob: -2.5884323120117188
    3. ' print' → logprob: -4.713432312011719
    4. 'return' → logprob: -7.713432312011719
    5. ' return' → logprob: -9.963432312011719
    6. '
' → logprob: -11.213432312011719
    7. '	print' → logprob: -11.463432312011719
    8. '    
' → logprob: -13.213432312011719
    9. '       ' → logprob: -14.088432312011719
    10. '```' → logprob: -14.213432312011719

Token 159: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.003185436362400651
    2. '(' → logprob: -5.753185272216797
    3. 'wrap' → logprob: -12.503185272216797
    4. ' (' → logprob: -13.878185272216797
    5. '('' → logprob: -13.878185272216797
    6. '(wrapper' → logprob: -14.128185272216797
    7. '(f' → logprob: -14.503185272216797
    8. '((' → logprob: -15.128185272216797
    9. '()' → logprob: -15.753185272216797
    10. '("' → logprob: -16.128185272216797

Token 160: 'rap' (ID: 1807)
  Prédit: 'rap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rap' → logprob: -1.2664456789934775e-06
    2. 'wrap' → logprob: -13.875000953674316
    3. 'r' → logprob: -15.875000953674316
    4. 'raph' → logprob: -16.250001907348633
    5. '(' → logprob: -17.625001907348633
    6. ' rap' → logprob: -17.875001907348633
    7. 'rapper' → logprob: -19.250001907348633
    8. 'ra' → logprob: -19.375001907348633
    9. '(r' → logprob: -19.375001907348633
    10. 'ap' → logprob: -19.500001907348633

Token 161: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -9.372294698550832e-06
    2. '(' → logprob: -11.750009536743164
    3. ' (' → logprob: -13.750009536743164
    4. 'res' → logprob: -15.125009536743164
    5. ')' → logprob: -15.750009536743164
    6. ',res' → logprob: -18.000009536743164
    7. '=res' → logprob: -18.625009536743164
    8. ')(' → logprob: -19.250009536743164
    9. '(rest' → logprob: -19.375009536743164
    10. '(
' → logprob: -20.000009536743164

Token 162: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04858953505754471
    2. '))' → logprob: -3.0485894680023193
    3. ')))' → logprob: -13.548589706420898
    4. '())' → logprob: -15.298589706420898
    5. ')`' → logprob: -15.548589706420898
    6. ' )' → logprob: -16.1735897064209
    7. '})' → logprob: -16.2985897064209
    8. '])' → logprob: -16.5485897064209
    9. ')}' → logprob: -16.7985897064209
    10. ')")' → logprob: -17.0485897064209

Token 163: 'step' (ID: 17509)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20154832303524017
    2. '<|end|>' → logprob: -2.2015483379364014
    3. '#' → logprob: -3.7015483379364014
    4. '
' → logprob: -4.076548099517822
    5. ':' → logprob: -4.576548099517822
    6. '[' → logprob: -4.701548099517822
    7. '```' → logprob: -5.701548099517822
    8. ' ' → logprob: -6.201548099517822
    9. ',' → logprob: -6.826548099517822
    10. '<|end|>' → logprob: -6.951548099517822

Token 164: 'per' (ID: 543)
  Prédit: 'per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -1.688212614681106e-05
    2. 'er' → logprob: -11.000017166137695
    3. '()' → logprob: -16.125017166137695
    4. '_per' → logprob: -17.000017166137695
    5. 'mer' → logprob: -19.375017166137695
    6. '_' → logprob: -19.750017166137695
    7. '(per' → logprob: -20.000017166137695
    8. 'ber' → logprob: -20.125017166137695
    9. 'r' → logprob: -20.250017166137695
    10. 'пер' → logprob: -20.625017166137695

Token 165: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14404340088367462
    2. '()' → logprob: -2.019043445587158
    3. '.' → logprob: -6.894043445587158
    4. '(
' → logprob: -8.51904296875
    5. '#' → logprob: -10.14404296875
    6. '()
' → logprob: -10.51904296875
    7. ' (' → logprob: -10.89404296875
    8. '(

' → logprob: -11.26904296875
    9. '!' → logprob: -11.51904296875
    10. '().' → logprob: -12.14404296875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 163
Tokens correctement prédits (1ère position, stricte): 74
Tokens correctement prédits (1ère position, avec adaptation): 76
Tokens correctement prédits (top 10): 122
Précision stricte (1ère position): 45.40%
Précision adaptée (1ère position): 46.63%
Précision (top 10): 74.85%
================================================================================
