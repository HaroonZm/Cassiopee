================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:42:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
s = input()
li = []
answer = 0
temp = ''
for i in s:
    if temp == i:
        continue
    else:
        temp = i
        answer += 1
print(answer)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004278083215467632
    2. ''' → logprob: -8.625428199768066
    3. '('' → logprob: -9.375428199768066
    4. '(n' → logprob: -9.875428199768066
    5. '```' → logprob: -10.375428199768066
    6. '`' → logprob: -10.750428199768066
    7. '("("' → logprob: -11.125428199768066
    8. '(
' → logprob: -11.125428199768066
    9. ')' → logprob: -11.750428199768066
    10. '()' → logprob: -12.250428199768066

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03871168941259384
    2. ')' → logprob: -3.5387117862701416
    3. '()' → logprob: -4.9137115478515625
    4. '())' → logprob: -7.1637115478515625
    5. '(
' → logprob: -8.663711547851562
    6. '```' → logprob: -9.163711547851562
    7. '(()' → logprob: -9.413711547851562
    8. '("("' → logprob: -9.663711547851562
    9. '('' → logprob: -9.913711547851562
    10. '`' → logprob: -10.163711547851562

Token 5: 's' (ID: 82)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7040315866470337
    2. 'if' → logprob: -1.4540315866470337
    3. 'for' → logprob: -2.329031467437744
    4. 's' → logprob: -2.454031467437744
    5. 'f' → logprob: -4.329031467437744
    6. ' ' → logprob: -4.454031467437744
    7. 'x' → logprob: -4.829031467437744
    8. ')' → logprob: -4.954031467437744
    9. 'a' → logprob: -4.954031467437744
    10. ''' → logprob: -5.079031467437744

Token 6: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9085284471511841
    2. 'um' → logprob: -1.408528447151184
    3. '[' → logprob: -2.0335283279418945
    4. '=' → logprob: -2.2835283279418945
    5. '.' → logprob: -2.6585283279418945
    6. 'u' → logprob: -4.6585283279418945
    7. 'tr' → logprob: -4.9085283279418945
    8. ' +=' → logprob: -5.2835283279418945
    9. '[i' → logprob: -5.9085283279418945
    10. '_' → logprob: -5.9085283279418945

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.24063017964363098
    2. ' input' → logprob: -1.8656301498413086
    3. '""' → logprob: -3.2406301498413086
    4. '''' → logprob: -4.490630149841309
    5. '"' → logprob: -5.990630149841309
    6. ''' → logprob: -6.490630149841309
    7. '0' → logprob: -6.740630149841309
    8. ' ""' → logprob: -6.865630149841309
    9. ' ''' → logprob: -7.115630149841309
    10. ' ' → logprob: -7.365630149841309

Token 8: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004013576544821262
    2. ''' → logprob: -6.379013538360596
    3. '('' → logprob: -6.754013538360596
    4. '"' → logprob: -8.254014015197754
    5. '()' → logprob: -8.254014015197754
    6. ')' → logprob: -8.504014015197754
    7. '`' → logprob: -9.004014015197754
    8. '(
' → logprob: -9.129014015197754
    9. ' (' → logprob: -10.004014015197754
    10. '("("' → logprob: -10.254014015197754

Token 9: 'li' (ID: 1307)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9632422924041748
    2. 'for' → logprob: -1.0882422924041748
    3. 'count' → logprob: -1.7132422924041748
    4. 'i' → logprob: -2.963242292404175
    5. 'f' → logprob: -4.338242530822754
    6. 'result' → logprob: -4.588242530822754
    7. 'c' → logprob: -4.713242530822754
    8. 'sum' → logprob: -5.088242530822754
    9. 'd' → logprob: -5.963242530822754
    10. 't' → logprob: -6.463242530822754

Token 10: ' =' (ID: 314)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.072670578956604
    2. 's' → logprob: -2.6976704597473145
    3. 'n' → logprob: -6.5726704597473145
    4. '.append' → logprob: -7.8226704597473145
    5. ' =' → logprob: -8.322670936584473
    6. 'ne' → logprob: -8.447670936584473
    7. '.' → logprob: -9.072670936584473
    8. 'sts' → logprob: -9.197670936584473
    9. '=' → logprob: -9.947670936584473
    10. 'sting' → logprob: -10.947670936584473

Token 11: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.07400974631309509
    2. 'list' → logprob: -3.074009656906128
    3. 's' → logprob: -4.324009895324707
    4. ' []' → logprob: -4.699009895324707
    5. '[s' → logprob: -6.824009895324707
    6. ' list' → logprob: -7.074009895324707
    7. '[' → logprob: -7.824009895324707
    8. '[list' → logprob: -8.074009895324707
    9. ' s' → logprob: -10.449009895324707
    10. '[]}' → logprob: -11.324009895324707

Token 12: 'answer' (ID: 17021)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06642480194568634
    2. 'f' → logprob: -2.81642484664917
    3. 'i' → logprob: -5.69142484664917
    4. ' for' → logprob: -7.81642484664917
    5. 'if' → logprob: -7.94142484664917
    6. 'fo' → logprob: -9.816424369812012
    7. '```' → logprob: -9.941424369812012
    8. 't' → logprob: -9.941424369812012
    9. '.' → logprob: -10.191424369812012
    10. '=' → logprob: -10.566424369812012

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42521318793296814
    2. '=' → logprob: -1.5502132177352905
    3. '.append' → logprob: -2.425213098526001
    4. '.' → logprob: -3.175213098526001
    5. '_' → logprob: -6.17521333694458
    6. ' +=' → logprob: -7.67521333694458
    7. 's' → logprob: -7.67521333694458
    8. '.=' → logprob: -8.050212860107422
    9. '.extend' → logprob: -8.550212860107422
    10. '[:]' → logprob: -9.300212860107422

Token 14: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5301477313041687
    2. ' ' → logprob: -1.6551477909088135
    3. '[]' → logprob: -2.1551477909088135
    4. ' []' → logprob: -2.4051477909088135
    5. '"' → logprob: -4.655147552490234
    6. '[' → logprob: -6.155147552490234
    7. ''' → logprob: -6.655147552490234
    8. '""' → logprob: -8.155147552490234
    9. ' "' → logprob: -8.780147552490234
    10. '[]
' → logprob: -9.155147552490234

Token 15: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25645866990089417
    2. '[]' → logprob: -2.0064587593078613
    3. '""' → logprob: -2.8814587593078613
    4. '''' → logprob: -3.7564587593078613
    5. '"' → logprob: -5.131458759307861
    6. '[' → logprob: -5.256458759307861
    7. ''' → logprob: -7.506458759307861
    8. '-' → logprob: -9.381458282470703
    9. ''s' → logprob: -9.631458282470703
    10. 'set' → logprob: -9.881458282470703

Token 16: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03263836354017258
    2. ' for' → logprob: -3.5326383113861084
    3. '
' → logprob: -6.5326385498046875
    4. '\n' → logprob: -7.7826385498046875
    5. ' ' → logprob: -7.9076385498046875
    6. '' → logprob: -8.032638549804688
    7. 'i' → logprob: -8.907638549804688
    8. 'f' → logprob: -9.782638549804688
    9. '\' → logprob: -9.907638549804688
    10. '```' → logprob: -11.032638549804688

Token 17: 'temp' (ID: 7340)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0013648776803165674
    2. ' for' → logprob: -6.751364707946777
    3. 'f' → logprob: -9.001364707946777
    4. 'i' → logprob: -10.376364707946777
    5. '=' → logprob: -11.126364707946777
    6. '```' → logprob: -11.376364707946777
    7. ' ' → logprob: -12.751364707946777
    8. '
' → logprob: -13.001364707946777
    9. '\n' → logprob: -13.501364707946777
    10. '' → logprob: -13.751364707946777

Token 18: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.26164817810058594
    2. ' =' → logprob: -1.636648178100586
    3. '=' → logprob: -3.511648178100586
    4. ' _' → logprob: -5.511648178100586
    5. '_val' → logprob: -8.011648178100586
    6. '_=' → logprob: -8.261648178100586
    7. ' ' → logprob: -8.761648178100586
    8. ')' → logprob: -8.886648178100586
    9. ' +=' → logprob: -9.011648178100586
    10. '_count' → logprob: -9.886648178100586

Token 19: ' ''
' (ID: 25366)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.039395663887262344
    2. ' ' → logprob: -4.039395809173584
    3. '1' → logprob: -4.914395809173584
    4. '""' → logprob: -5.289395809173584
    5. '[]' → logprob: -5.664395809173584
    6. '''' → logprob: -6.289395809173584
    7. 's' → logprob: -6.664395809173584
    8. ' []' → logprob: -7.164395809173584
    9. '"' → logprob: -8.039395332336426
    10. '[' → logprob: -8.539395332336426

Token 20: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003843659767881036
    2. ' for' → logprob: -5.878843784332275
    3. 'f' → logprob: -7.128843784332275
    4. 'i' → logprob: -8.503843307495117
    5. '\n' → logprob: -11.628843307495117
    6. ' ' → logprob: -11.878843307495117
    7. '
' → logprob: -12.253843307495117
    8. '```' → logprob: -12.878843307495117
    9. 'n' → logprob: -13.253843307495117
    10. ':' → logprob: -13.753843307495117

Token 21: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2558353841304779
    2. ' i' → logprob: -1.5058354139328003
    3. '  ' → logprob: -6.13083553314209
    4. 'i' → logprob: -6.63083553314209
    5. ' _' → logprob: -8.25583553314209
    6. ' ‌' → logprob: -9.63083553314209
    7. '_' → logprob: -9.88083553314209
    8. ' c' → logprob: -12.13083553314209
    9. ' ' → logprob: -12.75583553314209
    10. ' )' → logprob: -12.88083553314209

Token 22: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0388287790119648
    2. 'in' → logprob: -3.9138288497924805
    3. ' ' → logprob: -4.0388288497924805
    4. '  ' → logprob: -8.03882884979248
    5. ' n' → logprob: -9.66382884979248
    6. 'n' → logprob: -10.28882884979248
    7. '<|end|>' → logprob: -11.53882884979248
    8. '	in' → logprob: -11.66382884979248
    9. '_' → logprob: -11.91382884979248
    10. ',' → logprob: -12.28882884979248

Token 23: ' s' (ID: 265)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.02137155644595623
    2. 'range' → logprob: -4.146371364593506
    3. ' s' → logprob: -5.271371364593506
    4. 's' → logprob: -8.646371841430664
    5. ' ' → logprob: -12.021371841430664
    6. '(range' → logprob: -13.521371841430664
    7. ' ran' → logprob: -14.146371841430664
    8. ' ra' → logprob: -14.646371841430664
    9. '	range' → logprob: -15.021371841430664
    10. ' xrange' → logprob: -15.146371841430664

Token 24: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34514474868774414
    2. '[' → logprob: -1.4701447486877441
    3. '[i' → logprob: -3.595144748687744
    4. '[:' → logprob: -4.345144748687744
    5. '<|end|>' → logprob: -4.345144748687744
    6. 'in' → logprob: -6.470144748687744
    7. '<|end|>' → logprob: -7.095144748687744
    8. '[n' → logprob: -7.220144748687744
    9. ' in' → logprob: -7.220144748687744
    10. '+' → logprob: -7.220144748687744

Token 25: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16474764049053192
    2. 'if' → logprob: -2.914747714996338
    3. ' ' → logprob: -3.289747714996338
    4. ' i' → logprob: -3.289747714996338
    5. 'i' → logprob: -4.039747714996338
    6. '    ' → logprob: -6.164747714996338
    7. '   ' → logprob: -6.164747714996338
    8. '```' → logprob: -7.414747714996338
    9. ''' → logprob: -8.16474723815918
    10. '  ' → logprob: -9.16474723815918

Token 26: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06234990805387497
    2. 'if' (adapté à ' if') → logprob: -2.812349796295166
    3. '   ' → logprob: -8.687350273132324
    4. '    ' → logprob: -9.187350273132324
    5. ' i' → logprob: -10.437350273132324
    6. 'i' → logprob: -10.562350273132324
    7. ' ' → logprob: -10.562350273132324
    8. '```' → logprob: -10.937350273132324
    9. '<|end|>' → logprob: -13.562350273132324
    10. 'li' → logprob: -13.562350273132324

Token 27: ' temp' (ID: 5484)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5787885189056396
    2. ' i' → logprob: -0.8287885189056396
    3. ' ' → logprob: -6.203788757324219
    4. ''' → logprob: -8.703788757324219
    5. ' not' → logprob: -8.703788757324219
    6. '  ' → logprob: -9.078788757324219
    7. ' '' → logprob: -9.203788757324219
    8. '   ' → logprob: -9.328788757324219
    9. ''i' → logprob: -9.453788757324219
    10. 'not' → logprob: -10.453788757324219

Token 28: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.25528132915496826
    2. ' ==' → logprob: -1.6302813291549683
    3. '!=' → logprob: -4.255281448364258
    4. '+' → logprob: -5.255281448364258
    5. ' !=' → logprob: -5.380281448364258
    6. ' and' → logprob: -5.630281448364258
    7. 'and' → logprob: -6.630281448364258
    8. ' +' → logprob: -8.630281448364258
    9. '+=' → logprob: -9.380281448364258
    10. '=' → logprob: -9.630281448364258

Token 29: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8095589876174927
    2. '''' → logprob: -1.0595589876174927
    3. ''' → logprob: -2.059558868408203
    4. ''i' → logprob: -2.559558868408203
    5. ' i' → logprob: -6.934558868408203
    6. '""' → logprob: -7.184558868408203
    7. ' ''' → logprob: -7.309558868408203
    8. ' '' → logprob: -8.559558868408203
    9. ' ' → logprob: -9.059558868408203
    10. ''s' → logprob: -9.309558868408203

Token 30: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03592662140727043
    2. ' or' → logprob: -3.910926580429077
    3. ' ' → logprob: -4.660926818847656
    4. ' :' → logprob: -5.410926818847656
    5. '=' → logprob: -7.785926818847656
    6. ' and' → logprob: -7.910926818847656
    7. ':
' → logprob: -9.410926818847656
    8. '    ' → logprob: -9.785926818847656
    9. ''' → logprob: -10.035926818847656
    10. ' =' → logprob: -10.160926818847656

Token 31: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1996980756521225
    2. ' continue' → logprob: -1.9496980905532837
    3. 'continue' → logprob: -3.824697971343994
    4. '   ' → logprob: -4.949697971343994
    5. ':' → logprob: -5.449697971343994
    6. '	continue' → logprob: -6.074697971343994
    7. ' continues' → logprob: -7.574697971343994
    8. ' ' → logprob: -7.949697971343994
    9. ':
' → logprob: -8.074698448181152
    10. '_continue' → logprob: -8.449698448181152

Token 32: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.7281680703163147
    2. 'answer' → logprob: -0.8531680703163147
    3. 'temp' → logprob: -3.47816801071167
    4. ' continue' → logprob: -3.72816801071167
    5. ' answer' → logprob: -3.72816801071167
    6. 'li' → logprob: -5.35316801071167
    7. '   ' → logprob: -5.47816801071167
    8. ' temp' → logprob: -6.22816801071167
    9. '       ' → logprob: -8.478168487548828
    10. ' li' → logprob: -8.603168487548828

Token 33: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0059523796662688255
    2. '    
' → logprob: -5.25595235824585
    3. '
' → logprob: -7.50595235824585
    4. '   
' → logprob: -10.130952835083008
    5. '        
' → logprob: -10.130952835083008
    6. 'else' → logprob: -10.255952835083008
    7. '  
' → logprob: -11.505952835083008
    8. '   ' → logprob: -12.130952835083008
    9. 's' → logprob: -12.380952835083008
    10. '    
' → logprob: -12.505952835083008

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005153942853212357
    2. '    
' → logprob: -5.755154132843018
    3. 'else' → logprob: -6.505154132843018
    4. ' else' → logprob: -8.50515365600586
    5. '
' → logprob: -10.00515365600586
    6. '   
' → logprob: -10.13015365600586
    7. ' 
' → logprob: -10.50515365600586
    8. 's' → logprob: -10.63015365600586
    9. '        
' → logprob: -10.63015365600586
    10. 'elif' → logprob: -10.88015365600586

Token 35: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9035469889640808
    2. 'temp' → logprob: -1.5285470485687256
    3. 'else' (adapté à ' else') → logprob: -1.7785470485687256
    4. ' else' → logprob: -1.7785470485687256
    5. ' temp' → logprob: -3.9035470485687256
    6. '    
' → logprob: -5.1535468101501465
    7. ' ' → logprob: -5.4035468101501465
    8. 'elif' → logprob: -5.4035468101501465
    9. ' 
' → logprob: -6.9035468101501465
    10. '  ' → logprob: -7.1535468101501465

Token 36: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002120038407156244
    2. ':
' → logprob: -8.875211715698242
    3. ' :' → logprob: -9.625211715698242
    4. '   ' → logprob: -13.125211715698242
    5. '):' → logprob: -14.250211715698242
    6. '<|end|>' → logprob: -14.250211715698242
    7. '=' → logprob: -15.125211715698242
    8. '       ' → logprob: -15.125211715698242
    9. ' :
' → logprob: -15.125211715698242
    10. ':

' → logprob: -15.625211715698242

Token 37: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07791963964700699
    2. ' temp' → logprob: -2.7029197216033936
    3. '   ' → logprob: -5.0779194831848145
    4. 'temp' → logprob: -6.7029194831848145
    5. '```' → logprob: -8.202919960021973
    6. '    ' → logprob: -9.702919960021973
    7. ' ' → logprob: -10.702919960021973
    8. '	temp' → logprob: -10.702919960021973
    9. ' if' → logprob: -11.702919960021973
    10. ' ```' → logprob: -11.952919960021973

Token 38: ' temp' (ID: 5484)
  Prédit: ' temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.5191509127616882
    2. 'temp' (adapté à ' temp') → logprob: -1.019150972366333
    3. '       ' → logprob: -3.144150972366333
    4. '   ' → logprob: -7.144150733947754
    5. '```' → logprob: -9.894150733947754
    6. '	temp' → logprob: -10.144150733947754
    7. ' li' → logprob: -10.644150733947754
    8. 'li' → logprob: -10.894150733947754
    9. '$temp' → logprob: -11.644150733947754
    10. ' ' → logprob: -12.269150733947754

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132636249065399
    2. '=' → logprob: -1.3132636547088623
    3. ' +=' → logprob: -13.688263893127441
    4. '+=' → logprob: -15.438263893127441
    5. '＝' → logprob: -15.563263893127441
    6. ' ' → logprob: -15.688263893127441
    7. ' =
' → logprob: -16.563262939453125
    8. '=i' → logprob: -16.938262939453125
    9. '=
' → logprob: -17.188262939453125
    10. '=end' → logprob: -17.813262939453125

Token 40: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31326213479042053
    2. ' i' → logprob: -1.3132621049880981
    3. '	i' → logprob: -15.688261985778809
    4. ''i' → logprob: -15.938261985778809
    5. ' ' → logprob: -17.188262939453125
    6. '=i' → logprob: -17.688262939453125
    7. '_i' → logprob: -17.938262939453125
    8. ',i' → logprob: -18.063262939453125
    9. ')i' → logprob: -18.188262939453125
    10. '{i' → logprob: -18.313262939453125

Token 41: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02073083631694317
    2. '       ' → logprob: -4.270730972290039
    3. 'li' → logprob: -5.520730972290039
    4. '```' → logprob: -6.395730972290039
    5. ')' → logprob: -9.020730972290039
    6. '+' → logprob: -9.145730972290039
    7. '    
' → logprob: -9.270730972290039
    8. '<|end|>' → logprob: -9.395730972290039
    9. '  ' → logprob: -9.895730972290039
    10. ' li' → logprob: -9.895730972290039

Token 42: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08356841653585434
    2. 'li' → logprob: -2.7085683345794678
    3. '```' → logprob: -4.708568572998047
    4. '+' → logprob: -6.208568572998047
    5. '       ' → logprob: -6.833568572998047
    6. ' li' → logprob: -7.833568572998047
    7. '`' → logprob: -8.708568572998047
    8. '    
' → logprob: -9.208568572998047
    9. '``' → logprob: -9.208568572998047
    10. '    ' → logprob: -9.333568572998047

Token 43: ' answer' (ID: 6052)
  Prédit: 'li'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'li' → logprob: -0.0013545217225328088
    2. 'answer' (adapté à ' answer') → logprob: -6.751354694366455
    3. '   ' → logprob: -8.751354217529297
    4. ' li' → logprob: -11.001354217529297
    5. '```' → logprob: -12.251354217529297
    6. '       ' → logprob: -13.626354217529297
    7. '<li' → logprob: -13.876354217529297
    8. 'ans' → logprob: -15.001354217529297
    9. 'len' → logprob: -15.001354217529297
    10. ' answer' → logprob: -15.126354217529297

Token 44: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.004979593213647604
    2. '+=' → logprob: -5.629979610443115
    3. '+' → logprob: -6.629979610443115
    4. ' +' → logprob: -10.254979133605957
    5. ' ' → logprob: -11.254979133605957
    6. ' =' → logprob: -12.504979133605957
    7. '<|end|>' → logprob: -12.879979133605957
    8. '=' → logprob: -13.754979133605957
    9. '+='' → logprob: -13.754979133605957
    10. '++' → logprob: -14.629979133605957

Token 45: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007101670489646494
    2. ' ' → logprob: -7.2507100105285645
    3. '0' → logprob: -16.625709533691406
    4. '2' → logprob: -17.125709533691406
    5. 'li' → logprob: -17.125709533691406
    6. '   ' → logprob: -17.125709533691406
    7. 's' → logprob: -17.625709533691406
    8. '10' → logprob: -17.750709533691406
    9. '+' → logprob: -18.125709533691406
    10. '<li' → logprob: -18.750709533691406

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. 'li' → logprob: -12.375008583068848
    3. ' ' → logprob: -12.750008583068848
    4. '0' → logprob: -13.750008583068848
    5. '<li' → logprob: -15.125008583068848
    6. 'int' → logprob: -15.375008583068848
    7. '2' → logprob: -16.625009536743164
    8. 's' → logprob: -16.875009536743164
    9. 'n' → logprob: -17.250009536743164
    10. '-' → logprob: -17.250009536743164

Token 47: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 48: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.03816840425133705
    2. '(' → logprob: -3.288168430328369
    3. '(ans' → logprob: -9.413167953491211
    4. '(s' → logprob: -10.538167953491211
    5. '(a' → logprob: -12.163167953491211
    6. '()' → logprob: -12.538167953491211
    7. '('' → logprob: -13.038167953491211
    8. '((' → logprob: -13.288167953491211
    9. 'answer' → logprob: -13.788167953491211
    10. '(len' → logprob: -13.913167953491211

Token 50: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: 0.0
    2. ' )' → logprob: -17.25
    3. ')`' → logprob: -18.0
    4. ')
' → logprob: -19.125
    5. '')' → logprob: -19.5
    6. '))' → logprob: -19.5
    7. '`)' → logprob: -20.375
    8. '(' → logprob: -21.0
    9. '```' → logprob: -21.125
    10. '）' → logprob: -21.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 48
Tokens correctement prédits (1ère position, stricte): 15
Tokens correctement prédits (1ère position, avec adaptation): 16
Tokens correctement prédits (top 10): 35
Précision stricte (1ère position): 31.25%
Précision adaptée (1ère position): 33.33%
Précision (top 10): 72.92%
================================================================================
