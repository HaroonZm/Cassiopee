================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:15:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n, m = map(int, input().split())
hs = list(map(int, input().split()))

ans = []
for i in range(n):
    ans.append(1)

for i in range(m):
    a, b = map(int, input().split())
    a = a - 1
    b = b - 1
    if hs[a] < hs[b]:
        ans[a] = 0
    elif hs[a] == hs[b]:
        ans[a] = 0
        ans[b] = 0
    else:
        ans[b] = 0

result = 0
for num in ans:
    result = result + num
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' m' (ID: 284)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25391894578933716
    2. ' =' → logprob: -1.7539188861846924
    3. ',' → logprob: -3.0039188861846924
    4. ' ' → logprob: -7.1289191246032715
    5. ')' → logprob: -8.003918647766113
    6. ';' → logprob: -9.253918647766113
    7. ' ,' → logprob: -9.378918647766113
    8. '```' → logprob: -9.628918647766113
    9. '#' → logprob: -10.628918647766113
    10. '.' → logprob: -10.753918647766113

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16425979137420654
    2. ' map' → logprob: -2.789259910583496
    3. ' input' → logprob: -3.414259910583496
    4. '0' → logprob: -3.664259910583496
    5. 'input' → logprob: -4.289259910583496
    6. 'map' → logprob: -4.289259910583496
    7. ' n' → logprob: -6.164259910583496
    8. '10' → logprob: -7.414259910583496
    9. ' int' → logprob: -7.664259910583496
    10. 'int' → logprob: -7.789259910583496

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21281738579273224
    2. '(lambda' → logprob: -2.587817430496216
    3. '```' → logprob: -3.087817430496216
    4. '(int' → logprob: -3.962817430496216
    5. '<|end|>' → logprob: -4.337817192077637
    6. '(str' → logprob: -4.337817192077637
    7. '[int' → logprob: -5.837817192077637
    8. '_' → logprob: -6.087817192077637
    9. '[' → logprob: -6.337817192077637
    10. ')' → logprob: -6.337817192077637

Token 6: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38214996457099915
    2. '(' → logprob: -1.6321499347686768
    3. '(input' → logprob: -2.2571499347686768
    4. '```' → logprob: -6.007150173187256
    5. '<|end|>' → logprob: -6.382150173187256
    6. '(user' → logprob: -6.382150173187256
    7. '(token' → logprob: -6.507150173187256
    8. '`)' → logprob: -6.507150173187256
    9. '(n' → logprob: -6.632150173187256
    10. '`' → logprob: -7.007150173187256

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6931565999984741
    2. ' input' → logprob: -0.6931565999984741
    3. '(input' → logprob: -11.693156242370605
    4. ')' → logprob: -14.318156242370605
    5. ',input' → logprob: -14.943156242370605
    6. '=input' → logprob: -16.693157196044922
    7. '	input' → logprob: -17.318157196044922
    8. '<input' → logprob: -17.443157196044922
    9. ' )' → logprob: -17.818157196044922
    10. '```' → logprob: -18.318157196044922

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9338748455047607
    2. '('' → logprob: -1.1838748455047607
    3. '()' → logprob: -2.1838748455047607
    4. ')' → logprob: -2.6838748455047607
    5. '())' → logprob: -2.9338748455047607
    6. '```' → logprob: -4.18387508392334
    7. '(""))' → logprob: -4.80887508392334
    8. '`()' → logprob: -4.93387508392334
    9. '')' → logprob: -5.05887508392334
    10. '("")' → logprob: -5.05887508392334

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015252141747623682
    2. 'strip' → logprob: -6.501525402069092
    3. 'rstrip' → logprob: -11.251524925231934
    4. ')' → logprob: -12.376524925231934
    5. ' split' → logprob: -12.501524925231934
    6. 'read' → logprob: -13.376524925231934
    7. '(split' → logprob: -15.376524925231934
    8. 'spl' → logprob: -16.62652587890625
    9. '```' → logprob: -17.25152587890625
    10. '_split' → logprob: -17.37652587890625

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03453158587217331
    2. '))' → logprob: -3.784531593322754
    3. '())' → logprob: -4.534531593322754
    4. '()' → logprob: -8.534531593322754
    5. '`)' → logprob: -8.784531593322754
    6. '(' → logprob: -10.159531593322754
    7. '()))' → logprob: -10.409531593322754
    8. ')`' → logprob: -10.534531593322754
    9. ')))' → logprob: -11.659531593322754
    10. '')' → logprob: -12.159531593322754

Token 11: 'hs' (ID: 9467)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6447531580924988
    2. '\n' → logprob: -1.5197532176971436
    3. 'for' → logprob: -1.8947532176971436
    4. ' ' → logprob: -4.0197529792785645
    5. 'n' → logprob: -4.0197529792785645
    6. 'x' → logprob: -4.2697529792785645
    7. 'r' → logprob: -4.8947529792785645
    8. ',' → logprob: -5.1447529792785645
    9. 's' → logprob: -5.2697529792785645
    10. 'if' → logprob: -5.6447529792785645

Token 12: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0804794430732727
    2. '=' → logprob: -3.580479383468628
    3. ' =' → logprob: -3.580479383468628
    4. 's' → logprob: -4.830479621887207
    5. '[i' → logprob: -5.580479621887207
    6. '[]' → logprob: -5.830479621887207
    7. '_' → logprob: -7.330479621887207
    8. 'q' → logprob: -7.330479621887207
    9. 't' → logprob: -7.455479621887207
    10. ' ' → logprob: -7.580479621887207

Token 13: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.9172677993774414
    2. ' [' → logprob: -1.6672677993774414
    3. ' list' → logprob: -1.9172677993774414
    4. '[' → logprob: -2.0422677993774414
    5. '[]' → logprob: -2.6672677993774414
    6. ' []' → logprob: -3.2922677993774414
    7. '[list' → logprob: -3.7922677993774414
    8. '[input' → logprob: -6.042267799377441
    9. '[int' → logprob: -6.292267799377441
    10. '[h' → logprob: -7.167267799377441

Token 14: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0030428392346948385
    2. '(range' → logprob: -5.878042697906494
    3. '(

' → logprob: -9.503043174743652
    4. '(
' → logprob: -10.378043174743652
    5. '(int' → logprob: -11.253043174743652
    6. '(np' → logprob: -11.253043174743652
    7. '(ls' → logprob: -11.253043174743652
    8. '(s' → logprob: -11.878043174743652
    9. '```' → logprob: -12.003043174743652
    10. '(h' → logprob: -12.003043174743652

Token 15: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0018896145047619939
    2. '(' → logprob: -6.376889705657959
    3. '(str' → logprob: -9.0018892288208
    4. '(input' → logprob: -10.7518892288208
    5. '<int' → logprob: -11.2518892288208
    6. 'int' → logprob: -11.6268892288208
    7. '=int' → logprob: -11.6268892288208
    8. '[int' → logprob: -12.2518892288208
    9. '```' → logprob: -13.0018892288208
    10. ' (' → logprob: -13.8768892288208

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4655654728412628
    2. ',input' → logprob: -1.2155654430389404
    3. '(input' → logprob: -2.5905654430389404
    4. '(' → logprob: -7.4655656814575195
    5. ' ,' → logprob: -10.21556568145752
    6. 'input' → logprob: -10.84056568145752
    7. '),' → logprob: -11.09056568145752
    8. '=input' → logprob: -11.46556568145752
    9. '<input' → logprob: -11.59056568145752
    10. ')' → logprob: -11.59056568145752

Token 17: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12694500386714935
    2. ' input' → logprob: -2.1269450187683105
    3. '(input' → logprob: -11.126944541931152
    4. ',input' → logprob: -13.876944541931152
    5. '=input' → logprob: -14.501944541931152
    6. ')' → logprob: -15.251944541931152
    7. '<input' → logprob: -15.751944541931152
    8. '	input' → logprob: -15.876944541931152
    9. '_input' → logprob: -16.25194549560547
    10. '[input' → logprob: -16.37694549560547

Token 18: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0014145197346806526
    2. '()' → logprob: -7.2514142990112305
    3. '(' → logprob: -7.5014142990112305
    4. '())' → logprob: -10.00141429901123
    5. '(.' → logprob: -10.37641429901123
    6. '()))' → logprob: -10.75141429901123
    7. '().__' → logprob: -11.37641429901123
    8. ' ().' → logprob: -12.12641429901123
    9. '('').' → logprob: -12.62641429901123
    10. '()));' → logprob: -12.75141429901123

Token 19: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.2200749754119897e-06
    2. 'strip' → logprob: -13.250001907348633
    3. ' split' → logprob: -15.500001907348633
    4. '(split' → logprob: -16.250001907348633
    5. 'spl' → logprob: -17.000001907348633
    6. 'rstrip' → logprob: -17.125001907348633
    7. 'plit' → logprob: -21.000001907348633
    8. 'read' → logprob: -21.250001907348633
    9. 's' → logprob: -21.625001907348633
    10. '.split' → logprob: -21.875001907348633

Token 20: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.05763828009366989
    2. '))' → logprob: -3.682638168334961
    3. '())' → logprob: -3.682638168334961
    4. '()' → logprob: -5.432638168334961
    5. ')' → logprob: -6.932638168334961
    6. '(' → logprob: -8.182638168334961
    7. '()));' → logprob: -10.557638168334961
    8. '())))' → logprob: -11.557638168334961
    9. '()),' → logprob: -11.682638168334961
    10. '()))
' → logprob: -12.557638168334961

Token 21: 'ans' (ID: 616)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4646940529346466
    2. 'for' → logprob: -1.9646940231323242
    3. 'd' → logprob: -2.214694023132324
    4. 'h' → logprob: -2.714694023132324
    5. 'a' → logprob: -4.214694023132324
    6. 'c' → logprob: -4.589694023132324
    7. 'count' → logprob: -5.214694023132324
    8. 'k' → logprob: -5.339694023132324
    9. 'result' → logprob: -5.464694023132324
    10. 's' → logprob: -5.714694023132324

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20732976496219635
    2. '=' → logprob: -1.8323297500610352
    3. '_' → logprob: -3.832329750061035
    4. '[' → logprob: -5.707329750061035
    5. '.' → logprob: -7.332329750061035
    6. ' ' → logprob: -7.582329750061035
    7. '[:]' → logprob: -8.082329750061035
    8. '=[]' → logprob: -8.957329750061035
    9. ' +=' → logprob: -9.082329750061035
    10. '[]' → logprob: -9.207329750061035

Token 23: ' []
' (ID: 8911)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22716368734836578
    2. ' ' → logprob: -2.102163791656494
    3. 'max' → logprob: -3.477163791656494
    4. ' max' → logprob: -3.852163791656494
    5. '[' → logprob: -4.852163791656494
    6. ' [' → logprob: -5.602163791656494
    7. 'float' → logprob: -6.102163791656494
    8. '[max' → logprob: -6.102163791656494
    9. ' float' → logprob: -6.227163791656494
    10. 'sum' → logprob: -6.477163791656494

Token 24: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03049921616911888
    2. ' for' → logprob: -3.530499219894409
    3. ' ' → logprob: -7.90549898147583
    4. 'i' → logprob: -8.780499458312988
    5. 'f' → logprob: -9.155499458312988
    6. '_' → logprob: -11.280499458312988
    7. '```' → logprob: -11.280499458312988
    8. '(' → logprob: -11.405499458312988
    9. '=' → logprob: -11.905499458312988
    10. '' → logprob: -11.905499458312988

Token 25: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.18072795867919922
    2. ' ' → logprob: -1.8057279586791992
    3. ' _' → logprob: -7.930727958679199
    4. '_' → logprob: -7.930727958679199
    5. 'i' → logprob: -8.5557279586792
    6. '  ' → logprob: -10.0557279586792
    7. ' h' → logprob: -11.4307279586792
    8. ' ‌' → logprob: -11.6807279586792
    9. ' ' → logprob: -12.8057279586792
    10. ' x' → logprob: -13.8057279586792

Token 26: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05541475862264633
    2. 'in' → logprob: -3.0554146766662598
    3. ' ' → logprob: -5.05541467666626
    4. '  ' → logprob: -8.305415153503418
    5. 'n' → logprob: -9.430415153503418
    6. ' n' → logprob: -10.305415153503418
    7. 'range' → logprob: -11.055415153503418
    8. ',' → logprob: -11.555415153503418
    9. ' i' → logprob: -11.930415153503418
    10. ' range' → logprob: -12.305415153503418

Token 27: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06994465738534927
    2. 'range' → logprob: -2.6949446201324463
    3. ' ' → logprob: -12.569944381713867
    4. '	range' → logprob: -13.444944381713867
    5. ' ra' → logprob: -14.194944381713867
    6. '(range' → logprob: -14.944944381713867
    7. 'r' → logprob: -14.944944381713867
    8. ' r' → logprob: -15.069944381713867
    9. '  ' → logprob: -15.319944381713867
    10. ' ran' → logprob: -15.444944381713867

Token 28: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4980276823043823
    2. '(n' → logprob: -0.9980276823043823
    3. '(m' → logprob: -3.748027801513672
    4. ' (' → logprob: -9.623027801513672
    5. '(len' → logprob: -10.748027801513672
    6. '(s' → logprob: -12.373027801513672
    7. '(
' → logprob: -12.873027801513672
    8. '(i' → logprob: -12.873027801513672
    9. ' ' → logprob: -13.748027801513672
    10. '(range' → logprob: -14.498027801513672

Token 29: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0019588442519307137
    2. '-' → logprob: -6.626958847045898
    3. ')' → logprob: -8.376958847045898
    4. '):
' → logprob: -8.626958847045898
    5. ' ):' → logprob: -8.626958847045898
    6. ' -' → logprob: -10.876958847045898
    7. ':' → logprob: -11.001958847045898
    8. '+' → logprob: -12.501958847045898
    9. ')):' → logprob: -14.001958847045898
    10. '   ' → logprob: -14.001958847045898

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4146193861961365
    2. ' ' → logprob: -1.4146194458007812
    3. '    ' → logprob: -3.0396194458007812
    4. ' if' → logprob: -4.289619445800781
    5. ' ans' → logprob: -4.664619445800781
    6. '\' → logprob: -5.414619445800781
    7. ':' → logprob: -5.539619445800781
    8. '    
' → logprob: -6.539619445800781
    9. ' \' → logprob: -6.539619445800781
    10. '     
' → logprob: -6.664619445800781

Token 31: ' ans' (ID: 3345)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.3906646966934204
    2. ' if' → logprob: -1.7656646966934204
    3. ' ans' → logprob: -2.015664577484131
    4. ' for' → logprob: -2.390664577484131
    5. 'ans' (adapté à ' ans') → logprob: -2.390664577484131
    6. 'for' → logprob: -2.765664577484131
    7. '   ' → logprob: -2.890664577484131
    8. 'max' → logprob: -3.640664577484131
    9. ' ' → logprob: -4.140664577484131
    10. 'j' → logprob: -4.265664577484131

Token 32: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.048665035516023636
    2. '.' → logprob: -3.0486650466918945
    3. '.extend' → logprob: -10.048665046691895
    4. ' .' → logprob: -10.673665046691895
    5. '.add' → logprob: -13.048665046691895
    6. '.ap' → logprob: -13.048665046691895
    7. '.app' → logprob: -13.673665046691895
    8. ' +=' → logprob: -13.798665046691895
    9. 'append' → logprob: -13.923665046691895
    10. '.push' → logprob: -13.923665046691895

Token 33: '(' (ID: 7)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.10637211054563522
    2. '(max' → logprob: -2.981372117996216
    3. '(' → logprob: -3.231372117996216
    4. '(min' → logprob: -4.981371879577637
    5. 'max' → logprob: -6.856371879577637
    6. '(i' → logprob: -6.981371879577637
    7. '((' → logprob: -7.356371879577637
    8. 'hs' → logprob: -7.481371879577637
    9. '(m' → logprob: -9.106371879577637
    10. '(abs' → logprob: -9.356371879577637

Token 34: '1' (ID: 16)
  Prédit: 'hs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hs' → logprob: -0.11672467738389969
    2. '0' → logprob: -2.991724729537964
    3. 'max' → logprob: -3.366724729537964
    4. '1' → logprob: -4.366724491119385
    5. '(' → logprob: -5.616724491119385
    6. '-' → logprob: -6.491724491119385
    7. 'min' → logprob: -6.741724491119385
    8. 'abs' → logprob: -6.741724491119385
    9. 'i' → logprob: -6.866724491119385
    10. '(h' → logprob: -6.991724491119385

Token 35: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006647869013249874
    2. ' )' → logprob: -5.256648063659668
    3. '+' → logprob: -7.006648063659668
    4. ' if' → logprob: -8.756648063659668
    5. 'if' → logprob: -8.881648063659668
    6. '))' → logprob: -9.506648063659668
    7. ' ' → logprob: -10.006648063659668
    8. '*' → logprob: -10.131648063659668
    9. '+)' → logprob: -11.256648063659668
    10. '0' → logprob: -11.506648063659668

Token 36: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.396932989358902
    2. ' for' → logprob: -1.1469329595565796
    3. ' ' → logprob: -5.146933078765869
    4. '
' → logprob: -7.271933078765869
    5. ')' → logprob: -7.521933078765869
    6. '\n' → logprob: -7.646933078765869
    7. '   ' → logprob: -7.771933078765869
    8. '<|end|>' → logprob: -7.896933078765869
    9. ' if' → logprob: -8.021932601928711
    10. ' 
' → logprob: -8.146932601928711

Token 37: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6921120285987854
    2. ' j' → logprob: -0.9421120285987854
    3. ' range' → logprob: -2.9421119689941406
    4. ' m' → logprob: -3.5671119689941406
    5. ' i' → logprob: -4.317111968994141
    6. '_' → logprob: -5.067111968994141
    7. 'j' → logprob: -5.817111968994141
    8. ' _' → logprob: -6.567111968994141
    9. 'range' → logprob: -6.692111968994141
    10. ' ' → logprob: -6.817111968994141

Token 38: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04405215010046959
    2. 'in' → logprob: -3.1690521240234375
    3. ' ' → logprob: -6.9190521240234375
    4. '(' → logprob: -10.669052124023438
    5. '  ' → logprob: -11.669052124023438
    6. 'n' → logprob: -12.044052124023438
    7. '+' → logprob: -12.169052124023438
    8. ',' → logprob: -12.794052124023438
    9. '   ' → logprob: -13.169052124023438
    10. ' ,' → logprob: -13.294052124023438

Token 39: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.02325759083032608
    2. 'range' → logprob: -3.7732574939727783
    3. 'm' → logprob: -12.5232572555542
    4. ' ' → logprob: -12.7732572555542
    5. ' m' → logprob: -12.8982572555542
    6. '(range' → logprob: -13.8982572555542
    7. '	range' → logprob: -14.3982572555542
    8. ')' → logprob: -15.0232572555542
    9. ' xrange' → logprob: -15.0232572555542
    10. '  ' → logprob: -15.6482572555542

Token 40: '(m' (ID: 2145)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6335666179656982
    2. '(m' → logprob: -0.7585666179656982
    3. '(n' → logprob: -7.133566856384277
    4. ' (' → logprob: -9.633566856384277
    5. 'm' → logprob: -10.633566856384277
    6. '()' → logprob: -10.758566856384277
    7. '1' → logprob: -11.508566856384277
    8. '(s' → logprob: -11.883566856384277
    9. ')' → logprob: -12.008566856384277
    10. ' ' → logprob: -12.133566856384277

Token 41: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03898930549621582
    2. ' ):' → logprob: -3.288989305496216
    3. ')' → logprob: -7.788989067077637
    4. '-' → logprob: -8.288989067077637
    5. ',' → logprob: -9.413989067077637
    6. ':' → logprob: -9.413989067077637
    7. ' :' → logprob: -10.288989067077637
    8. '():' → logprob: -10.788989067077637
    9. ' ' → logprob: -11.163989067077637
    10. '):
' → logprob: -11.663989067077637

Token 42: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2335170954465866
    2. '   ' → logprob: -3.1085171699523926
    3. ' s' → logprob: -3.4835171699523926
    4. '```' → logprob: -4.233517169952393
    5. 'a' → logprob: -4.358517169952393
    6. ' a' → logprob: -4.483517169952393
    7. ',' → logprob: -4.483517169952393
    8. ' x' → logprob: -4.608517169952393
    9. ' if' → logprob: -4.858517169952393
    10. 's' → logprob: -5.108517169952393

Token 43: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.419487863779068
    2. 'l' → logprob: -1.1694878339767456
    3. ' a' → logprob: -4.169487953186035
    4. ' l' → logprob: -5.169487953186035
    5. 's' → logprob: -6.044487953186035
    6. '   ' → logprob: -6.419487953186035
    7. '```' → logprob: -6.544487953186035
    8. ' ' → logprob: -6.919487953186035
    9. 'L' → logprob: -7.044487953186035
    10. 'k' → logprob: -7.294487953186035

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10183535516262054
    2. ',b' → logprob: -2.976835250854492
    3. ' ,' → logprob: -3.101835250854492
    4. 'b' → logprob: -7.851835250854492
    5. 's' → logprob: -8.976835250854492
    6. ',a' → logprob: -9.476835250854492
    7. ',v' → logprob: -9.601835250854492
    8. ',s' → logprob: -9.726835250854492
    9. ',k' → logprob: -10.351835250854492
    10. ' ' → logprob: -10.476835250854492

Token 45: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004635303281247616
    2. ' b' → logprob: -5.379635334014893
    3. ' ' → logprob: -11.254634857177734
    4. 's' → logprob: -14.004634857177734
    5. 't' → logprob: -14.879634857177734
    6. 'd' → logprob: -15.629634857177734
    7. '  ' → logprob: -15.754634857177734
    8. 'k' → logprob: -16.004634857177734
    9. ',b' → logprob: -16.004634857177734
    10. ',' → logprob: -16.629634857177734

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17980358004570007
    2. '=' → logprob: -1.8048036098480225
    3. ',' → logprob: -9.804803848266602
    4. ' ' → logprob: -13.429803848266602
    5. ')' → logprob: -13.804803848266602
    6. '-' → logprob: -15.054803848266602
    7. ' =
' → logprob: -15.429803848266602
    8. ' ,' → logprob: -15.804803848266602
    9. '   ' → logprob: -15.804803848266602
    10. ' =)' → logprob: -16.5548038482666

Token 47: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.016039295122027397
    2. 'map' → logprob: -4.1410393714904785
    3. '	map' → logprob: -13.01603889465332
    4. ' ' → logprob: -13.14103889465332
    5. ' input' → logprob: -15.26603889465332
    6. ' list' → logprob: -15.39103889465332
    7. ' mapa' → logprob: -16.51603889465332
    8. ',map' → logprob: -16.64103889465332
    9. '1' → logprob: -17.39103889465332
    10. '  ' → logprob: -17.51603889465332

Token 48: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -2.117345684382599e-05
    2. '(' → logprob: -11.125020980834961
    3. '<int' → logprob: -12.625020980834961
    4. '[int' → logprob: -13.750020980834961
    5. '=int' → logprob: -14.000020980834961
    6. 'int' → logprob: -14.875020980834961
    7. ' (' → logprob: -15.125020980834961
    8. ',int' → logprob: -15.625020980834961
    9. '<|end|>' → logprob: -16.50002098083496
    10. '(lambda' → logprob: -16.87502098083496

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001041382784023881
    2. ',input' → logprob: -6.876041412353516
    3. ' ,' → logprob: -12.751041412353516
    4. '(' → logprob: -12.751041412353516
    5. 'input' → logprob: -13.876041412353516
    6. '(),' → logprob: -14.501041412353516
    7. ')' → logprob: -15.001041412353516
    8. '```' → logprob: -15.001041412353516
    9. '(input' → logprob: -15.251041412353516
    10. ',int' → logprob: -15.501041412353516

Token 50: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6931481957435608
    2. ' input' → logprob: -0.6931481957435608
    3. '(input' → logprob: -14.943148612976074
    4. '	input' → logprob: -15.318148612976074
    5. ' ' → logprob: -15.943148612976074
    6. ',input' → logprob: -16.193147659301758
    7. ')' → logprob: -16.693147659301758
    8. '=input' → logprob: -16.818147659301758
    9. '_input' → logprob: -16.818147659301758
    10. '   ' → logprob: -17.318147659301758

Token 51: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.3795937522663735e-05
    2. '()' → logprob: -10.75002384185791
    3. '.' → logprob: -13.75002384185791
    4. ' ().' → logprob: -14.00002384185791
    5. '.readline' → logprob: -16.125022888183594
    6. '(' → logprob: -16.250022888183594
    7. '().__' → logprob: -16.375022888183594
    8. ' .' → logprob: -17.250022888183594
    9. '()-' → logprob: -17.500022888183594
    10. '   ' → logprob: -17.625022888183594

Token 52: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.896309739408025e-07
    2. 'spl' → logprob: -14.750000953674316
    3. 's' → logprob: -16.0
    4. ' split' → logprob: -16.125
    5. '(split' → logprob: -16.875
    6. 'plit' → logprob: -17.25
    7. 'strip' → logprob: -17.375
    8. 'rstrip' → logprob: -17.5
    9. ')' → logprob: -17.625
    10. 'sp' → logprob: -18.625

Token 53: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023410622030496597
    2. '()' → logprob: -4.023410797119141
    3. '())' → logprob: -5.273410797119141
    4. '))' → logprob: -9.39841079711914
    5. '(' → logprob: -11.02341079711914
    6. ')
' → logprob: -11.89841079711914
    7. '`)' → logprob: -12.89841079711914
    8. '()
' → logprob: -13.02341079711914
    9. ' )' → logprob: -13.39841079711914
    10. ')")' → logprob: -13.77341079711914

Token 54: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2776983976364136
    2. '\n' → logprob: -1.9026983976364136
    3. '   ' → logprob: -1.9026983976364136
    4. '[' → logprob: -2.402698516845703
    5. ' ' → logprob: -2.777698516845703
    6. '  
' → logprob: -3.027698516845703
    7. '```' → logprob: -3.027698516845703
    8. ' 
' → logprob: -3.402698516845703
    9. '<|end|>' → logprob: -3.402698516845703
    10. '   
' → logprob: -3.902698516845703

Token 55: ' a' (ID: 261)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.46410876512527466
    2. 'if' → logprob: -1.0891087055206299
    3. ')' → logprob: -4.339108943939209
    4. ' ' → logprob: -4.839108943939209
    5. ' if' → logprob: -4.964108943939209
    6. '   ' → logprob: -5.714108943939209
    7. 'a' (adapté à ' a') → logprob: -6.589108943939209
    8. '[' → logprob: -7.839108943939209
    9. ',' → logprob: -7.964108943939209
    10. '  ' → logprob: -8.46410846710205

Token 56: ' =' (ID: 314)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10479716211557388
    2. ' -=' → logprob: -2.604797124862671
    3. ' -' → logprob: -3.979797124862671
    4. ' ' → logprob: -5.35479736328125
    5. '-=' → logprob: -6.47979736328125
    6. ',' → logprob: -7.85479736328125
    7. '--' → logprob: -9.97979736328125
    8. '[' → logprob: -10.22979736328125
    9. ']' → logprob: -10.72979736328125
    10. '=' → logprob: -10.97979736328125

Token 57: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.038826942443847656
    2. ' a' → logprob: -3.6638269424438477
    3. '0' → logprob: -4.788826942443848
    4. '-' → logprob: -6.038826942443848
    5. 'b' → logprob: -6.788826942443848
    6. ' ' → logprob: -7.913826942443848
    7. ' b' → logprob: -9.288826942443848
    8. '1' → logprob: -9.413826942443848
    9. ' -' → logprob: -10.163826942443848
    10. '   ' → logprob: -12.663826942443848

Token 58: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00771025475114584
    2. ' -' → logprob: -4.8827104568481445
    3. '1' → logprob: -9.507710456848145
    4. ' ' → logprob: -11.257710456848145
    5. '0' → logprob: -11.382710456848145
    6. '-
' → logprob: -13.507710456848145
    7. 'a' → logprob: -14.132710456848145
    8. '[' → logprob: -14.507710456848145
    9. '9' → logprob: -15.007710456848145
    10. 'minus' → logprob: -15.507710456848145

Token 59: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '１' → logprob: -18.625036239624023
    4. '   ' → logprob: -18.875036239624023
    5. '<|end|>' → logprob: -19.375036239624023
    6. '2' → logprob: -20.000036239624023
    7. '```' → logprob: -20.812536239624023
    8. '  ' → logprob: -21.000036239624023
    9. ' ' → logprob: -21.437536239624023
    10. '۱' → logprob: -21.500036239624023

Token 60: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '１' → logprob: -19.75
    4. '2' → logprob: -20.75
    5. '```' → logprob: -22.75
    6. '   ' → logprob: -23.0
    7. '[' → logprob: -23.625
    8. 'a' → logprob: -23.75
    9. '۱' → logprob: -23.75
    10. '<|end|>' → logprob: -23.75

Token 61: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: '   ' (ID: 271)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.006517360452562571
    2. '   ' → logprob: -5.25651741027832
    3. ' b' → logprob: -6.75651741027832
    4. '	b' → logprob: -9.88151741027832
    5. ' ' → logprob: -10.50651741027832
    6. '<|end|>' → logprob: -11.13151741027832
    7. '  ' → logprob: -12.50651741027832
    8. ' if' → logprob: -12.50651741027832
    9. ',b' → logprob: -12.63151741027832
    10. ',' → logprob: -12.88151741027832

Token 63: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.0007250601192936301
    2. ' b' → logprob: -7.250725269317627
    3. '	b' → logprob: -11.875724792480469
    4. '   ' → logprob: -11.875724792480469
    5. ' ' → logprob: -15.250724792480469
    6. '>b' → logprob: -15.625724792480469
    7. '_b' → logprob: -16.00072479248047
    8. '    ' → logprob: -16.25072479248047
    9. ',b' → logprob: -16.25072479248047
    10. ')b' → logprob: -16.62572479248047

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10657861083745956
    2. '=' → logprob: -2.3565785884857178
    3. ' -=' → logprob: -5.231578826904297
    4. '-' → logprob: -7.231578826904297
    5. ' ' → logprob: -8.856578826904297
    6. '-=' → logprob: -9.356578826904297
    7. ' -' → logprob: -11.356578826904297
    8. ')' → logprob: -11.606578826904297
    9. '_' → logprob: -11.856578826904297
    10. '   ' → logprob: -12.106578826904297

Token 65: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.4740926921367645
    2. 'b' → logprob: -0.9740927219390869
    3. ' ' → logprob: -11.349092483520508
    4. '1' → logprob: -13.974092483520508
    5. '  ' → logprob: -14.599092483520508
    6. '	b' → logprob: -14.599092483520508
    7. ' б' → logprob: -14.724092483520508
    8. ' -' → logprob: -14.849092483520508
    9. '   ' → logprob: -15.224092483520508
    10. '0' → logprob: -15.224092483520508

Token 66: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20146596431732178
    2. ' -' → logprob: -1.7014659643173218
    3. ' ' → logprob: -9.951465606689453
    4. '1' → logprob: -13.576465606689453
    5. '-
' → logprob: -14.076465606689453
    6. '   ' → logprob: -14.326465606689453
    7. ')' → logprob: -14.451465606689453
    8. '```' → logprob: -15.451465606689453
    9. ' -
' → logprob: -15.451465606689453
    10. '  ' → logprob: -15.576465606689453

Token 67: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002477677771821618
    2. ' ' → logprob: -6.002477645874023
    3. '<|end|>' → logprob: -13.752477645874023
    4. '2' → logprob: -14.627477645874023
    5. '   ' → logprob: -16.252477645874023
    6. '```' → logprob: -16.689977645874023
    7. '0' → logprob: -17.189977645874023
    8. '１' → logprob: -17.189977645874023
    9. '<|end|>' → logprob: -17.627477645874023
    10. '  ' → logprob: -17.814977645874023

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '2' → logprob: -17.1250057220459
    4. '<|end|>' → logprob: -17.1250057220459
    5. '```' → logprob: -17.6250057220459
    6. '１' → logprob: -17.7500057220459
    7. '0' → logprob: -18.8125057220459
    8. '   ' → logprob: -18.8750057220459
    9. '۱' → logprob: -19.6250057220459
    10. '  ' → logprob: -19.8125057220459

Token 69: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.028743742033839226
    2. '   ' → logprob: -3.6537437438964844
    3. ' if' → logprob: -6.528743743896484
    4. '
' → logprob: -8.028743743896484
    5. '<|end|>' → logprob: -8.153743743896484
    6. ' ' → logprob: -9.153743743896484
    7. '```' → logprob: -9.153743743896484
    8. ')' → logprob: -10.403743743896484
    9. '	if' → logprob: -10.653743743896484
    10. '  ' → logprob: -10.778743743896484

Token 70: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0825141668319702
    2. ' if' → logprob: -1.0825141668319702
    3. ' ' → logprob: -1.5825141668319702
    4. '   ' → logprob: -2.9575142860412598
    5. '
' → logprob: -3.4575142860412598
    6. '<|end|>' → logprob: -4.95751428604126
    7. ',' → logprob: -5.58251428604126
    8. '  ' → logprob: -5.58251428604126
    9. '```' → logprob: -5.58251428604126
    10. '    ' → logprob: -6.20751428604126

Token 71: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0005231272662058473
    2. 'i' → logprob: -7.875523090362549
    3. ' if' → logprob: -9.125523567199707
    4. ' ' → logprob: -11.625523567199707
    5. 's' → logprob: -12.125523567199707
    6. '   ' → logprob: -12.250523567199707
    7. ')' → logprob: -12.875523567199707
    8. '```' → logprob: -12.875523567199707
    9. 'hs' → logprob: -13.375523567199707
    10. ',' → logprob: -13.625523567199707

Token 72: ' hs' (ID: 59089)
  Prédit: 'hs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hs' → logprob: -0.07903486490249634
    2. ' hs' → logprob: -2.5790348052978516
    3. 'h' → logprob: -9.204034805297852
    4. ' ' → logprob: -11.454034805297852
    5. 'a' → logprob: -11.704034805297852
    6. ' h' → logprob: -11.954034805297852
    7. '   ' → logprob: -12.829034805297852
    8. 'n' → logprob: -12.829034805297852
    9. 's' → logprob: -13.079034805297852
    10. '(h' → logprob: -13.329034805297852

Token 73: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0009226576657965779
    2. '[' → logprob: -7.000922679901123
    3. '[b' → logprob: -12.375922203063965
    4. '[i' → logprob: -13.000922203063965
    5. 'a' → logprob: -13.375922203063965
    6. '[h' → logprob: -14.250922203063965
    7. '```' → logprob: -14.500922203063965
    8. ' [' → logprob: -14.875922203063965
    9. '\[' → logprob: -15.250922203063965
    10. ']' → logprob: -15.250922203063965

Token 74: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0009153862483799458
    2. '==' → logprob: -7.50091552734375
    3. '">' → logprob: -8.75091552734375
    4. '<=' → logprob: -9.25091552734375
    5. ' >' → logprob: -10.25091552734375
    6. '＞' → logprob: -10.75091552734375
    7. '```' → logprob: -11.62591552734375
    8. '>=' → logprob: -11.87591552734375
    9. '=' → logprob: -11.87591552734375
    10. ']>' → logprob: -12.37591552734375

Token 75: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.00016218038217630237
    2. '<' → logprob: -9.375162124633789
    3. '==' → logprob: -10.250162124633789
    4. ' >' → logprob: -11.125162124633789
    5. '<=' → logprob: -11.250162124633789
    6. '">' → logprob: -13.000162124633789
    7. '>
' → logprob: -13.000162124633789
    8. '>=' → logprob: -13.250162124633789
    9. '>

' → logprob: -13.375162124633789
    10. '＞' → logprob: -13.375162124633789

Token 76: ' hs' (ID: 59089)
  Prédit: 'hs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hs' → logprob: -0.0002978048287332058
    2. ' hs' → logprob: -8.125297546386719
    3. 'h' → logprob: -14.000297546386719
    4. ' ' → logprob: -14.375297546386719
    5. '  ' → logprob: -16.25029754638672
    6. '   ' → logprob: -16.37529754638672
    7. '```' → logprob: -17.00029754638672
    8. '=' → logprob: -17.50029754638672
    9. '.hs' → logprob: -18.00029754638672
    10. 'hm' → logprob: -18.12529754638672

Token 77: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -1.282920129597187e-05
    2. 'b' → logprob: -11.750012397766113
    3. '[' → logprob: -12.500012397766113
    4. 's' → logprob: -14.500012397766113
    5. '[a' → logprob: -14.500012397766113
    6. '[s' → logprob: -16.25001335144043
    7. '[h' → logprob: -17.75001335144043
    8. '[
' → logprob: -19.00001335144043
    9. '[i' → logprob: -19.25001335144043
    10. ' [' → logprob: -19.37501335144043

Token 78: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.04040185362100601
    2. '):' → logprob: -3.2904019355773926
    3. ']' → logprob: -6.790401935577393
    4. ':' → logprob: -7.165401935577393
    5. ']:
' → logprob: -8.790401458740234
    6. ']):' → logprob: -8.915401458740234
    7. ' ):' → logprob: -9.665401458740234
    8. '):
' → logprob: -9.915401458740234
    9. ')' → logprob: -10.790401458740234
    10. ',' → logprob: -11.915401458740234

Token 79: '       ' (ID: 309)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.11042741686105728
    2. ' ans' → logprob: -2.9854273796081543
    3. '   ' → logprob: -2.9854273796081543
    4. '	ans' → logprob: -6.485427379608154
    5. ':' → logprob: -7.985427379608154
    6. ' or' → logprob: -8.110427856445312
    7. 'or' → logprob: -8.110427856445312
    8. 'and' → logprob: -8.360427856445312
    9. ' ' → logprob: -8.485427856445312
    10. '(ans' → logprob: -8.985427856445312

Token 80: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -4.203409844194539e-05
    2. ' ans' → logprob: -10.125041961669922
    3. '	ans' → logprob: -13.500041961669922
    4. '   ' → logprob: -15.125041961669922
    5. '(ans' → logprob: -15.625041961669922
    6. '_ans' → logprob: -16.750041961669922
    7. 'a' → logprob: -17.500041961669922
    8. '```' → logprob: -18.375041961669922
    9. ' ' → logprob: -18.750041961669922
    10. '0' → logprob: -18.875041961669922

Token 81: '[a' (ID: 32035)
  Prédit: '[b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.0069177220575511456
    2. '[a' → logprob: -5.506917953491211
    3. '[' → logprob: -5.881917953491211
    4. '[B' → logprob: -11.256917953491211
    5. '[i' → logprob: -12.006917953491211
    6. 'b' → logprob: -12.131917953491211
    7. ' [' → logprob: -12.506917953491211
    8. '[c' → logprob: -12.881917953491211
    9. '[u' → logprob: -13.131917953491211
    10. ' ' → logprob: -13.256917953491211

Token 82: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1144585907459259
    2. ']=' → logprob: -2.2394585609436035
    3. '=' → logprob: -6.7394585609436035
    4. '[' → logprob: -7.9894585609436035
    5. '0' → logprob: -9.739459037780762
    6. ' ]' → logprob: -10.114459037780762
    7. ']+=' → logprob: -12.364459037780762
    8. ']==' → logprob: -13.239459037780762
    9. '']=' → logprob: -13.989459037780762
    10. '"]=' → logprob: -14.114459037780762

Token 83: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.747814349073451e-05
    2. '0' → logprob: -11.500017166137695
    3. '-=' → logprob: -12.375017166137695
    4. ' =' → logprob: -13.000017166137695
    5. '+=' → logprob: -15.125017166137695
    6. '*=' → logprob: -15.375017166137695
    7. '=}' → logprob: -16.500017166137695
    8. ']=' → logprob: -16.625017166137695
    9. ')=' → logprob: -16.875017166137695
    10. '}=' → logprob: -17.500017166137695

Token 84: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.992775888647884e-05
    2. ' ' → logprob: -9.625069618225098
    3. '-' → logprob: -13.625069618225098
    4. '2' → logprob: -14.125069618225098
    5. '   ' → logprob: -14.125069618225098
    6. '=' → logprob: -14.625069618225098
    7. '  ' → logprob: -15.562569618225098
    8. '    ' → logprob: -16.500070571899414
    9. ' -' → logprob: -16.625070571899414
    10. '```' → logprob: -16.875070571899414

Token 85: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.023293538717553e-05
    2. ' ' → logprob: -10.625030517578125
    3. '-' → logprob: -13.000030517578125
    4. '2' → logprob: -13.375030517578125
    5. '   ' → logprob: -14.125030517578125
    6. 'ans' → logprob: -14.812530517578125
    7. '1' → logprob: -15.625030517578125
    8. '=' → logprob: -16.187530517578125
    9. '  ' → logprob: -16.250030517578125
    10. '```' → logprob: -16.375030517578125

Token 86: '
' (ID: 198)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.0708339512348175
    2. ' elif' → logprob: -2.945833921432495
    3. '   ' → logprob: -4.820834159851074
    4. '<|end|>' → logprob: -5.070834159851074
    5. '	elif' → logprob: -7.445834159851074
    6. '
' → logprob: -8.820834159851074
    7. ' ' → logprob: -8.945834159851074
    8. '  ' → logprob: -9.070834159851074
    9. '    ' → logprob: -9.320834159851074
    10. 'if' → logprob: -9.570834159851074

Token 87: '   ' (ID: 271)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.00035155098885297775
    2. ' elif' → logprob: -8.125351905822754
    3. 'if' → logprob: -10.625351905822754
    4. '   ' → logprob: -11.000351905822754
    5. '	elif' → logprob: -11.625351905822754
    6. '<|end|>' → logprob: -12.750351905822754
    7. 'el' → logprob: -13.875351905822754
    8. '  ' → logprob: -15.000351905822754
    9. 'else' → logprob: -15.125351905822754
    10. '```' → logprob: -15.250351905822754

Token 88: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.025360357016324997
    2. '   ' → logprob: -4.275360584259033
    3. ' elif' → logprob: -4.525360584259033
    4. 'if' → logprob: -9.150360107421875
    5. 'el' → logprob: -9.650360107421875
    6. '	elif' → logprob: -9.775360107421875
    7. 'else' → logprob: -10.525360107421875
    8. ' ' → logprob: -10.900360107421875
    9. '>' → logprob: -11.525360107421875
    10. '```' → logprob: -12.150360107421875

Token 89: ' hs' (ID: 59089)
  Prédit: 'hs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hs' → logprob: -0.2814023792743683
    2. ' hs' → logprob: -1.406402349472046
    3. '   ' → logprob: -8.656402587890625
    4. ' ' → logprob: -10.281402587890625
    5. 'h' → logprob: -11.531402587890625
    6. ' h' → logprob: -11.531402587890625
    7. '  ' → logprob: -11.656402587890625
    8. '    ' → logprob: -11.781402587890625
    9. ' ' → logprob: -12.531402587890625
    10. '(h' → logprob: -14.656402587890625

Token 90: '[a' (ID: 32035)
  Prédit: '[b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.005294003989547491
    2. '[a' → logprob: -5.255293846130371
    3. 'b' → logprob: -9.880293846130371
    4. '[' → logprob: -12.130293846130371
    5. 'a' → logprob: -12.755293846130371
    6. '```' → logprob: -15.255293846130371
    7. ' b' → logprob: -16.255294799804688
    8. ' [' → logprob: -16.380294799804688
    9. '>b' → logprob: -16.505294799804688
    10. '	b' → logprob: -17.380294799804688

Token 91: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.014958284795284271
    2. ' >' → logprob: -4.264958381652832
    3. ']' → logprob: -7.264958381652832
    4. ' ' → logprob: -10.264958381652832
    5. ']>' → logprob: -10.639958381652832
    6. '==' → logprob: -11.514958381652832
    7. ')' → logprob: -11.764958381652832
    8. '">' → logprob: -13.014958381652832
    9. '=' → logprob: -13.139958381652832
    10. '[' → logprob: -13.264958381652832

Token 92: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.004279023502022028
    2. ' >' → logprob: -5.504279136657715
    3. '==' → logprob: -8.629279136657715
    4. ' ==' → logprob: -12.004279136657715
    5. '=' → logprob: -12.004279136657715
    6. ' ' → logprob: -12.754279136657715
    7. '<=' → logprob: -13.254279136657715
    8. '>`' → logprob: -13.754279136657715
    9. '">' → logprob: -14.629279136657715
    10. '>
' → logprob: -14.879279136657715

Token 93: ' hs' (ID: 59089)
  Prédit: 'hs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hs' → logprob: -0.014179266057908535
    2. ' hs' → logprob: -4.264179229736328
    3. ' ' → logprob: -11.264179229736328
    4. 'h' → logprob: -13.264179229736328
    5. '   ' → logprob: -14.764179229736328
    6. ' ' → logprob: -15.139179229736328
    7. '  ' → logprob: -15.139179229736328
    8. 's' → logprob: -16.139179229736328
    9. ' h' → logprob: -16.639179229736328
    10. 'hst' → logprob: -17.389179229736328

Token 94: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -3.91732100979425e-05
    2. '[' → logprob: -10.250039100646973
    3. 'b' → logprob: -12.625039100646973
    4. '[a' → logprob: -16.00004005432129
    5. '```' → logprob: -16.00004005432129
    6. '	b' → logprob: -16.75004005432129
    7. '[
' → logprob: -17.00004005432129
    8. ' [' → logprob: -17.37504005432129
    9. '[h' → logprob: -17.87504005432129
    10. '[c' → logprob: -18.75004005432129

Token 95: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2549414336681366
    2. ':' → logprob: -1.504941463470459
    3. ']:' → logprob: -6.254941463470459
    4. ')' → logprob: -7.254941463470459
    5. ' and' → logprob: -9.2549409866333
    6. '):
' → logprob: -9.5049409866333
    7. '':' → logprob: -10.0049409866333
    8. ' ):' → logprob: -10.2549409866333
    9. '   ' → logprob: -10.3799409866333
    10. '>:' → logprob: -11.0049409866333

Token 96: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034455690532922745
    2. '0' → logprob: -3.6594557762145996
    3. '```' → logprob: -5.9094557762146
    4. 'ans' → logprob: -6.5344557762146
    5. '       ' → logprob: -6.7844557762146
    6. ' ' → logprob: -7.4094557762146
    7. '1' → logprob: -7.5344557762146
    8. '  ' → logprob: -7.5344557762146
    9. ':' → logprob: -8.409455299377441
    10. '``' → logprob: -8.784455299377441

Token 97: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.02142838016152382
    2. '0' → logprob: -4.14642858505249
    3. '   ' → logprob: -5.52142858505249
    4. ' ans' → logprob: -7.02142858505249
    5. '	ans' → logprob: -7.77142858505249
    6. ' ' → logprob: -11.271428108215332
    7. '
' → logprob: -11.271428108215332
    8. '(ans' → logprob: -11.396428108215332
    9. '1' → logprob: -11.771428108215332
    10. '```' → logprob: -11.896428108215332

Token 98: '[a' (ID: 32035)
  Prédit: '[b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.018450869247317314
    2. '[a' → logprob: -4.018450736999512
    3. '[' → logprob: -8.143450736999512
    4. '[i' → logprob: -12.018450736999512
    5. ' [' → logprob: -13.518450736999512
    6. '[c' → logprob: -14.643450736999512
    7. '[
' → logprob: -14.768450736999512
    8. 'b' → logprob: -14.893450736999512
    9. '[B' → logprob: -15.018450736999512
    10. '[j' → logprob: -15.268450736999512

Token 99: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7530817985534668
    2. ']' → logprob: -1.2530817985534668
    3. ' =' → logprob: -1.6280817985534668
    4. ')' → logprob: -3.253081798553467
    5. ']=' → logprob: -5.003081798553467
    6. ')=' → logprob: -7.128081798553467
    7. ' ]' → logprob: -8.003082275390625
    8. '0' → logprob: -8.753082275390625
    9. '   ' → logprob: -9.128082275390625
    10. ',' → logprob: -9.503082275390625

Token 100: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197318062186241
    2. ' =' → logprob: -2.8119730949401855
    3. '＝' → logprob: -13.061973571777344
    4. '0' → logprob: -13.311973571777344
    5. '-=' → logprob: -14.686973571777344
    6. '=
' → logprob: -14.811973571777344
    7. '=

' → logprob: -15.061973571777344
    8. '═' → logprob: -15.936973571777344
    9. ' ' → logprob: -16.436973571777344
    10. '=int' → logprob: -16.561973571777344

Token 101: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003078142472077161
    2. ' ' → logprob: -8.1253080368042
    3. 'ans' → logprob: -12.1253080368042
    4. ' ans' → logprob: -12.7503080368042
    5. '1' → logprob: -13.8753080368042
    6. '   ' → logprob: -14.1253080368042
    7. '  ' → logprob: -14.3128080368042
    8. '(ans' → logprob: -15.3128080368042
    9. '۰' → logprob: -15.6878080368042
    10. '	ans' → logprob: -15.8753080368042

Token 102: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1756367712223437e-05
    2. ' ' → logprob: -11.625011444091797
    3. 'ans' → logprob: -13.125011444091797
    4. ' ans' → logprob: -15.125011444091797
    5. '1' → logprob: -15.875011444091797
    6. '(ans' → logprob: -16.000011444091797
    7. '   ' → logprob: -16.062511444091797
    8. '  ' → logprob: -16.937511444091797
    9. '۰' → logprob: -17.187511444091797
    10. '	ans' → logprob: -17.250011444091797

Token 103: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06869659572839737
    2. '       ' → logprob: -2.9436964988708496
    3. '<|end|>' → logprob: -5.19369649887085
    4. '
' → logprob: -6.44369649887085
    5. ' and' → logprob: -6.44369649887085
    6. 'and' → logprob: -6.94369649887085
    7. '    
' → logprob: -7.06869649887085
    8. '  
' → logprob: -7.56869649887085
    9. '    ' → logprob: -7.56869649887085
    10. '  ' → logprob: -7.81869649887085

Token 104: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06519544124603271
    2. '       ' → logprob: -3.5651955604553223
    3. '0' → logprob: -3.6901955604553223
    4. ' ' → logprob: -6.190195560455322
    5. '```' → logprob: -6.815195560455322
    6. '    ' → logprob: -7.065195560455322
    7. '<|end|>' → logprob: -7.065195560455322
    8. '  ' → logprob: -7.190195560455322
    9. ' 
' → logprob: -7.190195560455322
    10. '    
' → logprob: -7.690195560455322

Token 105: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0022052128333598375
    2. '   ' → logprob: -6.5022053718566895
    3. ' ans' → logprob: -7.3772053718566895
    4. '	ans' → logprob: -9.627204895019531
    5. '_ans' → logprob: -11.877204895019531
    6. '(ans' → logprob: -13.377204895019531
    7. 'Ans' → logprob: -13.752204895019531
    8. '       ' → logprob: -14.502204895019531
    9. 'answer' → logprob: -14.502204895019531
    10. '  ' → logprob: -15.502204895019531

Token 106: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -4.246537173457909e-06
    2. '[' → logprob: -13.000003814697266
    3. 'b' → logprob: -13.375003814697266
    4. '```' → logprob: -15.500003814697266
    5. ' [' → logprob: -17.375003814697266
    6. '\[' → logprob: -17.625003814697266
    7. '	b' → logprob: -17.750003814697266
    8. '   ' → logprob: -18.500003814697266
    9. '[
' → logprob: -19.375003814697266
    10. ' ' → logprob: -19.500003814697266

Token 107: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0027624370995908976
    2. ']=' → logprob: -6.502762317657471
    3. ' ]' → logprob: -7.377762317657471
    4. '=' → logprob: -7.377762317657471
    5. ' =' → logprob: -12.502762794494629
    6. ')' → logprob: -12.877762794494629
    7. '[' → logprob: -13.002762794494629
    8. ' ' → logprob: -15.252762794494629
    9. '`]' → logprob: -16.252761840820312
    10. ']==' → logprob: -16.502761840820312

Token 108: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001170225441455841
    2. ' =' → logprob: -6.7511701583862305
    3. ' ' → logprob: -17.001171112060547
    4. '＝' → logprob: -18.376171112060547
    5. '=

' → logprob: -18.876171112060547
    6. '0' → logprob: -19.001171112060547
    7. '=
' → logprob: -19.876171112060547
    8. ')' → logprob: -20.001171112060547
    9. ')=' → logprob: -20.751171112060547
    10. '=}' → logprob: -21.126171112060547

Token 109: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '۰' → logprob: -20.125001907348633
    4. '   ' → logprob: -20.500001907348633
    5. '1' → logprob: -21.125001907348633
    6. '```' → logprob: -21.250001907348633
    7. '０' → logprob: -21.625001907348633
    8. '  ' → logprob: -22.187501907348633
    9. '०' → logprob: -22.375001907348633
    10. '<|end|>' → logprob: -22.562501907348633

Token 110: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '۰' → logprob: -20.25
    4. '０' → logprob: -21.8125
    5. '<|end|>' → logprob: -21.875
    6. '1' → logprob: -22.3125
    7. '০' → logprob: -22.4375
    8. '०' → logprob: -22.75
    9. '   ' → logprob: -23.125
    10. '٠' → logprob: -23.25

Token 111: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.021844390779733658
    2. '\' → logprob: -5.021844387054443
    3. '```' → logprob: -5.771844387054443
    4. ')' → logprob: -5.896844387054443
    5. 'n' → logprob: -6.021844387054443
    6. '<|end|>' → logprob: -6.396844387054443
    7. 'print' → logprob: -6.771844387054443
    8. ' ' → logprob: -6.896844387054443
    9. '#' → logprob: -7.271844387054443
    10. 'newline' → logprob: -7.521844387054443

Token 112: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7516576647758484
    2. '\n' → logprob: -1.7516577243804932
    3. '_' → logprob: -1.8766577243804932
    4. '```' → logprob: -3.001657724380493
    5. ' ' → logprob: -3.251657724380493
    6. '\' → logprob: -3.501657724380493
    7. '#' → logprob: -4.001657485961914
    8. 'n' → logprob: -4.376657485961914
    9. 'print' → logprob: -4.876657485961914
    10. '<|end|>' → logprob: -5.001657485961914

Token 113: ' else' (ID: 1203)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.666531503200531
    2. ')' → logprob: -0.791531503200531
    3. '```' → logprob: -4.416531562805176
    4. ' ' → logprob: -5.791531562805176
    5. ']' → logprob: -5.791531562805176
    6. '<|end|>' → logprob: -6.041531562805176
    7. '_' → logprob: -6.166531562805176
    8. '0' → logprob: -6.291531562805176
    9. '#' → logprob: -6.541531562805176
    10. '\' → logprob: -6.666531562805176

Token 114: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.45452186465263367
    2. '   ' → logprob: -1.079521894454956
    3. '       ' → logprob: -3.704521894454956
    4. ' ' → logprob: -8.579522132873535
    5. ':
' → logprob: -8.579522132873535
    6. '  ' → logprob: -8.704522132873535
    7. '     ' → logprob: -9.954522132873535
    8. ' :' → logprob: -9.954522132873535
    9. '```' → logprob: -10.079522132873535
    10. '    ' → logprob: -10.204522132873535

Token 115: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12224024534225464
    2. 'ans' → logprob: -2.2472403049468994
    3. ' ans' → logprob: -4.87224006652832
    4. '	ans' → logprob: -6.99724006652832
    5. '       ' → logprob: -7.24724006652832
    6. ' ' → logprob: -9.99724006652832
    7. '  ' → logprob: -10.62224006652832
    8. '(ans' → logprob: -11.99724006652832
    9. '    ' → logprob: -12.37224006652832
    10. '     ' → logprob: -12.37224006652832

Token 116: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.00170041061937809
    2. ' ans' → logprob: -6.501700401306152
    3. '   ' → logprob: -8.626700401306152
    4. '	ans' → logprob: -11.001700401306152
    5. ' ' → logprob: -14.251700401306152
    6. '(ans' → logprob: -14.376700401306152
    7. '       ' → logprob: -14.751700401306152
    8. '0' → logprob: -15.501700401306152
    9. '  ' → logprob: -15.751700401306152
    10. '_ans' → logprob: -16.00170135498047

Token 117: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -9.686778503237292e-05
    2. '[' → logprob: -9.250097274780273
    3. 'b' → logprob: -14.625097274780273
    4. ' [' → logprob: -16.500097274780273
    5. '[a' → logprob: -17.000097274780273
    6. '```' → logprob: -17.625097274780273
    7. '[B' → logprob: -17.875097274780273
    8. ' ' → logprob: -18.375097274780273
    9. '[
' → logprob: -18.625097274780273
    10. '	b' → logprob: -19.375097274780273

Token 118: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005485133267939091
    2. '=' → logprob: -6.0054850578308105
    3. ']=' → logprob: -6.1304850578308105
    4. ' ]' → logprob: -7.2554850578308105
    5. ' =' → logprob: -9.130485534667969
    6. ')' → logprob: -11.255485534667969
    7. '[' → logprob: -13.880485534667969
    8. '   ' → logprob: -14.880485534667969
    9. ' ' → logprob: -15.380485534667969
    10. ')=' → logprob: -15.630485534667969

Token 119: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031777136027812958
    2. ' =' → logprob: -5.753177642822266
    3. '＝' → logprob: -18.378177642822266
    4. ' ' → logprob: -18.503177642822266
    5. '=
' → logprob: -19.253177642822266
    6. '=

' → logprob: -19.753177642822266
    7. ')' → logprob: -20.753177642822266
    8. '=}' → logprob: -21.378177642822266
    9. ')=' → logprob: -21.503177642822266
    10. '```' → logprob: -21.753177642822266

Token 120: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '۰' → logprob: -20.500001907348633
    4. '   ' → logprob: -21.625001907348633
    5. '<|end|>' → logprob: -22.750001907348633
    6. '  ' → logprob: -23.000001907348633
    7. '０' → logprob: -23.250001907348633
    8. '1' → logprob: -23.625001907348633
    9. '০' → logprob: -24.062501907348633
    10. '٠' → logprob: -24.250001907348633

Token 121: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '1' → logprob: -18.750001907348633
    4. '۰' → logprob: -19.125001907348633
    5. '   ' → logprob: -19.937501907348633
    6. '000' → logprob: -20.250001907348633
    7. '<|end|>' → logprob: -20.562501907348633
    8. '```' → logprob: -20.625001907348633
    9. '０' → logprob: -21.000001907348633
    10. '00' → logprob: -21.187501907348633

Token 122: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005468378076329827
    2. '
' → logprob: -7.625546932220459
    3. '\n' → logprob: -9.8755464553833
    4. '```' → logprob: -12.6255464553833
    5. '\' → logprob: -13.7505464553833
    6. '
' → logprob: -14.0005464553833
    7. ' print' → logprob: -14.6255464553833
    8. '  
' → logprob: -14.8755464553833
    9. 'for' → logprob: -15.3755464553833
    10. '0' → logprob: -15.3755464553833

Token 123: 'result' (ID: 2521)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.021805549040436745
    2. '\n' → logprob: -3.89680552482605
    3. ')' → logprob: -7.646805763244629
    4. '
' → logprob: -7.771805763244629
    5. '+' → logprob: -9.771805763244629
    6. 'sum' → logprob: -10.021805763244629
    7. '#print' → logprob: -10.396805763244629
    8. '```' → logprob: -10.396805763244629
    9. ' print' → logprob: -10.521805763244629
    10. '0' → logprob: -10.521805763244629

Token 124: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1880602240562439
    2. '[' → logprob: -2.1880602836608887
    3. '_' → logprob: -3.6880602836608887
    4. '.append' → logprob: -4.063060283660889
    5. ' =' → logprob: -5.063060283660889
    6. '=' → logprob: -5.063060283660889
    7. 's' → logprob: -6.563060283660889
    8. ' ' → logprob: -7.688060283660889
    9. '[]' → logprob: -7.938060283660889
    10. ')' → logprob: -8.31305980682373

Token 125: ' ' (ID: 220)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.06345655769109726
    2. 'ans' → logprob: -3.3134565353393555
    3. ' sum' → logprob: -3.8134565353393555
    4. ' ans' → logprob: -5.8134565353393555
    5. 'str' → logprob: -10.938456535339355
    6. '0' → logprob: -11.938456535339355
    7. '(ans' → logprob: -12.188456535339355
    8. 'print' → logprob: -13.813456535339355
    9. ' ' → logprob: -13.938456535339355
    10. '	ans' → logprob: -14.188456535339355

Token 126: '0' (ID: 15)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.001518907374702394
    2. 'ans' → logprob: -6.501518726348877
    3. ' sum' → logprob: -11.751519203186035
    4. 'str' → logprob: -12.251519203186035
    5. '0' → logprob: -12.626519203186035
    6. 'print' → logprob: -15.376519203186035
    7. '(sum' → logprob: -15.876519203186035
    8. ' ans' → logprob: -16.25151824951172
    9. '(ans' → logprob: -16.62651824951172
    10. 'max' → logprob: -17.12651824951172

Token 127: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002570664044469595
    2. '
' → logprob: -6.752570629119873
    3. ' for' → logprob: -6.752570629119873
    4. '\n' → logprob: -8.627571105957031
    5. '+' → logprob: -10.877571105957031
    6. '+
' → logprob: -10.877571105957031
    7. ' 
' → logprob: -11.877571105957031
    8. '\' → logprob: -13.252571105957031
    9. '```' → logprob: -13.377571105957031
    10. '' → logprob: -13.627571105957031

Token 128: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.512236498361744e-07
    2. ' for' → logprob: -14.625000953674316
    3. '```' → logprob: -21.0
    4. 'print' → logprob: -21.75
    5. '
' → logprob: -21.875
    6. 'result' → logprob: -22.25
    7. '	for' → logprob: -22.625
    8. 'For' → logprob: -23.375
    9. '<|end|>' → logprob: -23.625
    10. '   ' → logprob: -24.0

Token 129: ' num' (ID: 2269)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20151518285274506
    2. ' i' → logprob: -1.7015151977539062
    3. 'a' → logprob: -9.826515197753906
    4. 'v' → logprob: -11.576515197753906
    5. 'x' → logprob: -11.701515197753906
    6. 'ans' → logprob: -12.076515197753906
    7. 'val' → logprob: -12.326515197753906
    8. 'value' → logprob: -12.326515197753906
    9. ' a' → logprob: -12.701515197753906
    10. ' v' → logprob: -12.951515197753906

Token 130: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0793524906039238
    2. 'in' → logprob: -2.579352378845215
    3. ' ' → logprob: -7.704352378845215
    4. ' i' → logprob: -12.954352378845215
    5. '  ' → logprob: -13.204352378845215
    6. '	in' → logprob: -13.329352378845215
    7. 's' → logprob: -13.454352378845215
    8. 'i' → logprob: -13.454352378845215
    9. ' ' → logprob: -13.704352378845215
    10. ',' → logprob: -14.829352378845215

Token 131: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0007101670489646494
    2. ' ans' → logprob: -7.2507100105285645
    3. '(ans' → logprob: -15.875710487365723
    4. '	ans' → logprob: -16.875709533691406
    5. 'range' → logprob: -20.000709533691406
    6. 'answer' → logprob: -20.750709533691406
    7. '_ans' → logprob: -20.875709533691406
    8. 'Ans' → logprob: -22.875709533691406
    9. 'an' → logprob: -23.875709533691406
    10. ' ' → logprob: -24.000709533691406

Token 132: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.050578635185956955
    2. '==' → logprob: -3.9255785942077637
    3. '+=' → logprob: -4.050578594207764
    4. '+' → logprob: -5.675578594207764
    5. '+:' → logprob: -5.800578594207764
    6. 'if' → logprob: -5.925578594207764
    7. ' +=' → logprob: -6.675578594207764
    8. ':
' → logprob: -6.925578594207764
    9. ' ==' → logprob: -7.300578594207764
    10. '=' → logprob: -10.050579071044922

Token 133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00030185774085111916
    2. ' result' → logprob: -8.5003023147583
    3. 'result' → logprob: -9.2503023147583
    4. '	result' → logprob: -13.3753023147583
    5. ' if' → logprob: -14.8753023147583
    6. '       ' → logprob: -15.8753023147583
    7. '```' → logprob: -16.375301361083984
    8. '  ' → logprob: -17.000301361083984
    9. '    
' → logprob: -17.125301361083984
    10. 'if' → logprob: -17.625301361083984

Token 134: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.060843925923109055
    2. ' result' → logprob: -3.6858439445495605
    3. '   ' → logprob: -3.9358439445495605
    4. 'if' → logprob: -4.3108439445495605
    5. ' if' → logprob: -6.9358439445495605
    6. '```' → logprob: -10.935843467712402
    7. ' ' → logprob: -12.185843467712402
    8. '	result' → logprob: -13.060843467712402
    9. '  ' → logprob: -13.185843467712402
    10. '``' → logprob: -14.185843467712402

Token 135: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1817416399717331
    2. '+' → logprob: -2.181741714477539
    3. ' +=' → logprob: -2.931741714477539
    4. '=' → logprob: -10.806741714477539
    5. ' +' → logprob: -11.681741714477539
    6. '   ' → logprob: -13.181741714477539
    7. '+='' → logprob: -13.681741714477539
    8. '+="' → logprob: -14.181741714477539
    9. '+=(' → logprob: -14.556741714477539
    10. ']+=' → logprob: -14.806741714477539

Token 136: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.313396155834198
    2. ' result' → logprob: -1.3133962154388428
    3. '+' → logprob: -9.063396453857422
    4. '0' → logprob: -11.438396453857422
    5. '   ' → logprob: -12.938396453857422
    6. '+=' → logprob: -13.688396453857422
    7. '	result' → logprob: -13.688396453857422
    8. ' ' → logprob: -13.813396453857422
    9. '(result' → logprob: -14.563396453857422
    10. '1' → logprob: -14.688396453857422

Token 137: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.166338137816638e-05
    2. ' +' → logprob: -10.375031471252441
    3. '+
' → logprob: -16.125032424926758
    4. '+i' → logprob: -16.250032424926758
    5. '+r' → logprob: -16.500032424926758
    6. '+s' → logprob: -16.625032424926758
    7. '+n' → logprob: -17.125032424926758
    8. '+k' → logprob: -17.375032424926758
    9. '＋' → logprob: -17.750032424926758
    10. '+a' → logprob: -18.375032424926758

Token 138: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -3.547789674485102e-05
    2. ' num' → logprob: -10.250035285949707
    3. '1' → logprob: -17.875036239624023
    4. '(num' → logprob: -19.875036239624023
    5. '	num' → logprob: -20.125036239624023
    6. 'nu' → logprob: -20.875036239624023
    7. '[num' → logprob: -21.000036239624023
    8. ' ' → logprob: -21.125036239624023
    9. '   ' → logprob: -21.250036239624023
    10. 'n' → logprob: -21.625036239624023

Token 139: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006913218181580305
    2. '
' → logprob: -5.006913185119629
    3. '\n' → logprob: -8.881913185119629
    4. '```' → logprob: -9.881913185119629
    5. '\' → logprob: -13.006913185119629
    6. '
' → logprob: -13.381913185119629
    7. ' print' → logprob: -13.506913185119629
    8. '``' → logprob: -14.256913185119629
    9. ' 
' → logprob: -14.506913185119629
    10. '#print' → logprob: -14.881913185119629

Token 140: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. ' print' → logprob: -15.5
    3. '```' → logprob: -18.875
    4. '
' → logprob: -19.375
    5. '-print' → logprob: -20.625
    6. '#print' → logprob: -21.125
    7. '(print' → logprob: -22.375
    8. 'Print' → logprob: -22.625
    9. '.print' → logprob: -22.75
    10. 'pr' → logprob: -22.875

Token 141: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0014213069807738066
    2. '(result' → logprob: -6.6264214515686035
    3. '()' → logprob: -9.876420974731445
    4. '("("' → logprob: -11.126420974731445
    5. '('' → logprob: -11.501420974731445
    6. '(ans' → logprob: -12.001420974731445
    7. '(len' → logprob: -12.501420974731445
    8. '(
' → logprob: -12.876420974731445
    9. '(sum' → logprob: -13.001420974731445
    10. ' (' → logprob: -13.126420974731445

Token 142: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. ' )' → logprob: -13.00000286102295
    3. ')
' → logprob: -17.000001907348633
    4. ')`' → logprob: -17.000001907348633
    5. '))' → logprob: -17.375001907348633
    6. '`)' → logprob: -18.375001907348633
    7. '(' → logprob: -18.625001907348633
    8. '')' → logprob: -19.125001907348633
    9. '）' → logprob: -19.625001907348633
    10. '#' → logprob: -20.125001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 140
Tokens correctement prédits (1ère position, stricte): 43
Tokens correctement prédits (1ère position, avec adaptation): 52
Tokens correctement prédits (top 10): 117
Précision stricte (1ère position): 30.71%
Précision adaptée (1ère position): 37.14%
Précision (top 10): 83.57%
================================================================================
