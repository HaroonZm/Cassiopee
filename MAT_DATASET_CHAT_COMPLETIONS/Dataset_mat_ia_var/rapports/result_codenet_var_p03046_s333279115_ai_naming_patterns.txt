================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:18
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def process_sequence():
    input_m_value, input_k_value = map(int, input().split())
    sequence_limit = 1 << input_m_value
    if input_k_value >= sequence_limit:
        print(-1)
        return
    if input_m_value == 0:
        print('0 0')
        return
    if input_m_value == 1:
        if input_k_value == 0:
            print('0 0 1 1')
        else:
            print(-1)
        return
    result_sequence = [0] * (2 * sequence_limit)
    result_sequence[0] = input_k_value
    result_sequence[sequence_limit] = input_k_value
    for index_lower in range(input_k_value):
        result_sequence[index_lower + 1] = index_lower
        result_sequence[-index_lower - 1] = index_lower
    for index_upper in range(input_k_value + 1, sequence_limit):
        result_sequence[index_upper] = index_upper
        result_sequence[-index_upper] = index_upper
    print(' '.join(map(str, result_sequence)))
process_sequence()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' process' (ID: 2273)
  → Token d'amorce (pas de prédiction)

Token 2: '_sequence' (ID: 55606)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007034324109554291
    2. '_' → logprob: -5.0070343017578125
    3. '(process' → logprob: -8.882034301757812
    4. '```' → logprob: -10.132034301757812
    5. '(_:' → logprob: -11.007034301757812
    6. '(_' → logprob: -11.132034301757812
    7. '_sequence' → logprob: -11.382034301757812
    8. ' (' → logprob: -11.507034301757812
    9. '(def' → logprob: -11.757034301757812
    10. 'def' → logprob: -11.882034301757812

Token 4: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.33451586961746216
    2. '\' → logprob: -1.7095158100128174
    3. '   ' → logprob: -3.0845158100128174
    4. '```' → logprob: -3.3345158100128174
    5. '    
' → logprob: -5.4595160484313965
    6. ''\' → logprob: -5.5845160484313965
    7. ':' → logprob: -6.3345160484313965
    8. ' 
' → logprob: -6.4595160484313965
    9. '
' → logprob: -6.7095160484313965
    10. '' → logprob: -6.7095160484313965

Token 5: ' input' (ID: 3422)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.39382562041282654
    2. '   ' → logprob: -2.0188255310058594
    3. '\' → logprob: -2.8938255310058594
    4. 'n' → logprob: -3.6438255310058594
    5. 'pass' → logprob: -3.7688255310058594
    6. 'a' → logprob: -3.8938255310058594
    7. 'return' → logprob: -4.018825531005859
    8. '```' → logprob: -4.393825531005859
    9. '\r' → logprob: -5.143825531005859
    10. 'x' → logprob: -5.143825531005859

Token 6: '_m' (ID: 1285)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.44198691844940186
    2. '_' → logprob: -1.3169869184494019
    3. '()' → logprob: -3.3169870376586914
    4. '_data' → logprob: -3.6919870376586914
    5. '_text' → logprob: -5.191987037658691
    6. '('' → logprob: -5.316987037658691
    7. '_string' → logprob: -5.566987037658691
    8. '("' → logprob: -5.566987037658691
    9. '_sequence' → logprob: -6.441987037658691
    10. '_line' → logprob: -6.691987037658691

Token 7: '_value' (ID: 6734)
  Prédit: 'ethod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ethod' → logprob: -0.4804075360298157
    2. 'essage' → logprob: -1.230407476425171
    3. 'a' → logprob: -3.480407476425171
    4. 'e' → logprob: -3.480407476425171
    5. 'odel' → logprob: -3.980407476425171
    6. 'essages' → logprob: -6.10540771484375
    7. 'eth' → logprob: -6.48040771484375
    8. 'ean' → logprob: -7.23040771484375
    9. '```' → logprob: -7.48040771484375
    10. '_' → logprob: -7.73040771484375

Token 8: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7431904673576355
    2. 's' → logprob: -1.6181905269622803
    3. ' =' → logprob: -1.7431905269622803
    4. '[' → logprob: -2.6181905269622803
    5. '_' → logprob: -3.2431905269622803
    6. '(' → logprob: -4.118190288543701
    7. ')' → logprob: -4.868190288543701
    8. '.' → logprob: -5.118190288543701
    9. '[:]' → logprob: -5.243190288543701
    10. ',' → logprob: -6.868190288543701

Token 9: ' input' (ID: 3422)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -1.0752264261245728
    2. ' output' → logprob: -1.3252264261245728
    3. ' ' → logprob: -1.9502264261245728
    4. 'input' → logprob: -2.575226306915283
    5. ' input' → logprob: -2.825226306915283
    6. '_' → logprob: -3.950226306915283
    7. 'sequence' → logprob: -4.325226306915283
    8. '"' → logprob: -4.700226306915283
    9. ' sequence' → logprob: -4.700226306915283
    10. 'space' → logprob: -4.950226306915283

Token 10: '_k' (ID: 11637)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05407681688666344
    2. '_s' → logprob: -3.679076910018921
    3. 's' → logprob: -4.054076671600342
    4. '_m' → logprob: -5.054076671600342
    5. '_value' → logprob: -6.929076671600342
    6. '_a' → logprob: -7.554076671600342
    7. '_val' → logprob: -8.5540771484375
    8. '_data' → logprob: -8.6790771484375
    9. '_n' → logprob: -8.8040771484375
    10. '_sequence' → logprob: -9.0540771484375

Token 11: '_value' (ID: 6734)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7059995532035828
    2. '_' → logprob: -1.3309996128082275
    3. ' =' → logprob: -1.5809996128082275
    4. ',' → logprob: -3.4559996128082275
    5. '_value' → logprob: -7.080999374389648
    6. ')' → logprob: -7.080999374389648
    7. '_,' → logprob: -7.330999374389648
    8. '_space' → logprob: -7.830999374389648
    9. '_=' → logprob: -8.080999374389648
    10. ' _' → logprob: -8.205999374389648

Token 12: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3493473529815674
    2. '=' → logprob: -1.2243473529815674
    3. ',' → logprob: -7.099347114562988
    4. ' ' → logprob: -10.974347114562988
    5. '_' → logprob: -11.224347114562988
    6. ')' → logprob: -11.224347114562988
    7. '   ' → logprob: -11.724347114562988
    8. '<|end|>' → logprob: -12.099347114562988
    9. ' ,' → logprob: -12.349347114562988
    10. ' =
' → logprob: -12.474347114562988

Token 13: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.1543610692024231
    2. ' input' → logprob: -2.2793610095977783
    3. 'input' → logprob: -3.9043610095977783
    4. 'map' → logprob: -4.154361248016357
    5. ' ' → logprob: -6.404361248016357
    6. ' int' → logprob: -6.779361248016357
    7. ' [' → logprob: -8.0293607711792
    8. ' []' → logprob: -8.1543607711792
    9. ' user' → logprob: -8.5293607711792
    10. '[]' → logprob: -8.6543607711792

Token 14: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.23850736021995544
    2. '(str' → logprob: -2.2385072708129883
    3. '(' → logprob: -2.3635072708129883
    4. '(lambda' → logprob: -4.488507270812988
    5. '(list' → logprob: -9.738507270812988
    6. '(input' → logprob: -10.113507270812988
    7. 'int' → logprob: -10.113507270812988
    8. '(eval' → logprob: -10.738507270812988
    9. 'str' → logprob: -10.863507270812988
    10. '(float' → logprob: -11.863507270812988

Token 15: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6259036660194397
    2. '(input' → logprob: -1.125903606414795
    3. '(' → logprob: -2.125903606414795
    4. '<|end|>' → logprob: -4.250903606414795
    5. '<|end|>' → logprob: -6.500903606414795
    6. '('' → logprob: -6.750903606414795
    7. 'input' → logprob: -6.750903606414795
    8. '(user' → logprob: -7.125903606414795
    9. '(token' → logprob: -8.000904083251953
    10. '```' → logprob: -8.375904083251953

Token 16: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.18005602061748505
    2. ' input' → logprob: -1.8050559759140015
    3. ')' → logprob: -8.180055618286133
    4. '(input' → logprob: -10.930055618286133
    5. ' )' → logprob: -12.180055618286133
    6. ' ' → logprob: -13.430055618286133
    7. ',input' → logprob: -13.805055618286133
    8. '   ' → logprob: -14.055055618286133
    9. '```' → logprob: -14.055055618286133
    10. '<input' → logprob: -14.430055618286133

Token 17: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0037316649686545134
    2. '()' → logprob: -6.003731727600098
    3. '(' → logprob: -7.128731727600098
    4. '('' → logprob: -8.503731727600098
    5. '())' → logprob: -8.628731727600098
    6. '()))' → logprob: -10.628731727600098
    7. '("' → logprob: -10.753731727600098
    8. '('').' → logprob: -11.378731727600098
    9. '("").' → logprob: -12.003731727600098
    10. ')' → logprob: -13.378731727600098

Token 18: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009342094417661428
    2. 'strip' → logprob: -7.00093412399292
    3. 'rstrip' → logprob: -10.750934600830078
    4. 'read' → logprob: -14.250934600830078
    5. ' split' → logprob: -14.500934600830078
    6. '(split' → logprob: -16.125934600830078
    7. 'spl' → logprob: -16.250934600830078
    8. 'replace' → logprob: -17.000934600830078
    9. 'startswith' → logprob: -17.750934600830078
    10. ')' → logprob: -17.875934600830078

Token 19: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1986905336380005
    2. '())' → logprob: -1.9486905336380005
    3. '))' → logprob: -3.823690414428711
    4. '('' → logprob: -4.698690414428711
    5. '(' → logprob: -5.573690414428711
    6. '()' → logprob: -6.448690414428711
    7. '()))' → logprob: -7.448690414428711
    8. '(','' → logprob: -8.073690414428711
    9. '')' → logprob: -8.573690414428711
    10. '(
' → logprob: -10.198690414428711

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4224449396133423
    2. '
' → logprob: -1.7974449396133423
    3. '\n' → logprob: -1.9224449396133423
    4. ')' → logprob: -2.4224448204040527
    5. ',' → logprob: -2.4224448204040527
    6. ' ' → logprob: -3.0474448204040527
    7. '    
' → logprob: -3.0474448204040527
    8. ':' → logprob: -3.4224448204040527
    9. '\' → logprob: -3.5474448204040527
    10. '#' → logprob: -4.172444820404053

Token 21: ' sequence' (ID: 16281)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.8612157106399536
    2. ' i' → logprob: -2.111215591430664
    3. ' if' → logprob: -2.486215591430664
    4. 'i' → logprob: -2.611215591430664
    5. '   ' → logprob: -2.861215591430664
    6. ' 
' → logprob: -2.986215591430664
    7. ')' → logprob: -3.111215591430664
    8. 'n' → logprob: -3.236215591430664
    9. ',' → logprob: -3.486215591430664
    10. 'result' → logprob: -3.486215591430664

Token 22: '_limit' (ID: 34361)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5800096392631531
    2. '_' → logprob: -1.3300096988677979
    3. ' =' → logprob: -3.080009698867798
    4. '[:]' → logprob: -3.080009698867798
    5. '=' → logprob: -3.330009698867798
    6. '.' → logprob: -3.330009698867798
    7. 's' → logprob: -5.830009460449219
    8. '.append' → logprob: -6.330009460449219
    9. '_length' → logprob: -6.330009460449219
    10. ')' → logprob: -7.330009460449219

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9275574684143066
    2. ')' → logprob: -1.4275574684143066
    3. '_' → logprob: -1.6775574684143066
    4. '=' → logprob: -1.9275574684143066
    5. 's' → logprob: -4.552557468414307
    6. ',' → logprob: -5.302557468414307
    7. '[' → logprob: -5.552557468414307
    8. '_space' → logprob: -6.427557468414307
    9. '(' → logprob: -6.552557468414307
    10. ' _' → logprob: -6.677557468414307

Token 24: ' ' (ID: 220)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.2201198935508728
    2. 'input' → logprob: -2.2201199531555176
    3. ' ' → logprob: -2.7201199531555176
    4. '10' → logprob: -4.720119953155518
    5. '100' → logprob: -5.220119953155518
    6. ' int' → logprob: -5.595119953155518
    7. 'int' → logprob: -6.720119953155518
    8. ' max' → logprob: -7.095119953155518
    9. '1' → logprob: -7.595119953155518
    10. ' (' → logprob: -7.970119953155518

Token 25: '1' (ID: 16)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.09767628461122513
    2. ' input' → logprob: -2.8476762771606445
    3. '10' → logprob: -3.8476762771606445
    4. '2' → logprob: -5.4726762771606445
    5. '100' → logprob: -5.5976762771606445
    6. ' ' → logprob: -6.2226762771606445
    7. '1' → logprob: -6.9726762771606445
    8. 'int' → logprob: -7.4726762771606445
    9. 'max' → logprob: -7.5976762771606445
    10. 'm' → logprob: -8.222676277160645

Token 26: ' <<' (ID: 2256)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038801267510280013
    2. ' ' → logprob: -8.750388145446777
    3. '2' → logprob: -9.375388145446777
    4. ' <<' → logprob: -10.000388145446777
    5. '_' → logprob: -11.000388145446777
    6. '6' → logprob: -11.000388145446777
    7. '1' → logprob: -11.125388145446777
    8. '+' → logprob: -11.625388145446777
    9. '*' → logprob: -12.000388145446777
    10. '<<' → logprob: -12.125388145446777

Token 27: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04437776654958725
    2. ' input' → logprob: -3.2943778038024902
    3. '20' → logprob: -5.91937780380249
    4. '(input' → logprob: -6.54437780380249
    5. '30' → logprob: -7.54437780380249
    6. ' ' → logprob: -7.79437780380249
    7. '32' → logprob: -8.544377326965332
    8. '(' → logprob: -8.544377326965332
    9. ' (' → logprob: -8.794377326965332
    10. '16' → logprob: -8.919377326965332

Token 28: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.008037286810576916
    2. '_k' → logprob: -5.383037090301514
    3. '_' → logprob: -5.883037090301514
    4. ' _' → logprob: -9.133037567138672
    5. '_space' → logprob: -9.758037567138672
    6. '```' → logprob: -10.008037567138672
    7. '_value' → logprob: -10.258037567138672
    8. '_input' → logprob: -10.258037567138672
    9. '_s' → logprob: -10.383037567138672
    10. '_tab' → logprob: -10.508037567138672

Token 29: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.003406682051718235
    2. '_' → logprob: -6.628406524658203
    3. '6' → logprob: -7.378406524658203
    4. '_val' → logprob: -8.003406524658203
    5. '```' → logprob: -8.128406524658203
    6. '5' → logprob: -8.253406524658203
    7. '_m' → logprob: -8.378406524658203
    8. '_k' → logprob: -9.878406524658203
    9. 'value' → logprob: -10.253406524658203
    10. '_space' → logprob: -10.878406524658203

Token 30: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4971635639667511
    2. '<|end|>' → logprob: -1.2471635341644287
    3. '
' → logprob: -3.8721635341644287
    4. ')' → logprob: -4.247163772583008
    5. '    
' → logprob: -4.372163772583008
    6. ' ' → logprob: -4.372163772583008
    7. '<|end|>' → logprob: -4.872163772583008
    8. '[' → logprob: -4.997163772583008
    9. '  
' → logprob: -5.122163772583008
    10. '\n' → logprob: -5.622163772583008

Token 32: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 33: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.10204926133155823
    2. ' sequence' → logprob: -2.7270493507385254
    3. 'input' → logprob: -4.227049350738525
    4. ' ' → logprob: -4.852049350738525
    5. ' not' → logprob: -5.727049350738525
    6. ' (' → logprob: -5.977049350738525
    7. 'sequence' → logprob: -5.977049350738525
    8. ' len' → logprob: -7.977049350738525
    9. ' space' → logprob: -8.852048873901367
    10. '(' → logprob: -9.977048873901367

Token 34: '_k' (ID: 11637)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.2919563353061676
    2. '_' → logprob: -1.5419563055038452
    3. ' _' → logprob: -4.041956424713135
    4. '_k' → logprob: -4.041956424713135
    5. '_value' → logprob: -7.416956424713135
    6. ''_' → logprob: -8.166955947875977
    7. '._' → logprob: -8.291955947875977
    8. '_user' → logprob: -8.416955947875977
    9. '```' → logprob: -8.541955947875977
    10. '_s' → logprob: -8.541955947875977

Token 35: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0012516580754891038
    2. '_' → logprob: -6.876251697540283
    3. '_val' → logprob: -9.126251220703125
    4. ' _' → logprob: -9.626251220703125
    5. '>' → logprob: -11.251251220703125
    6. '_VALUE' → logprob: -12.376251220703125
    7. '_Value' → logprob: -12.626251220703125
    8. '_values' → logprob: -12.626251220703125
    9. '```' → logprob: -12.626251220703125
    10. '   ' → logprob: -13.126251220703125

Token 36: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.3668878972530365
    2. ' ' → logprob: -1.7418879270553589
    3. ' <' → logprob: -2.2418878078460693
    4. ' >' → logprob: -4.116888046264648
    5. ' ==' → logprob: -5.366888046264648
    6. '>=' → logprob: -5.991888046264648
    7. '>' → logprob: -7.616888046264648
    8. '<' → logprob: -7.866888046264648
    9. '  ' → logprob: -7.991888046264648
    10. '==' → logprob: -8.366888046264648

Token 37: ' sequence' (ID: 16281)
  Prédit: ' sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.02980881556868553
    2. 'sequence' → logprob: -3.529808759689331
    3. ' ' → logprob: -10.15480899810791
    4. '   ' → logprob: -11.52980899810791
    5. '(sequence' → logprob: -12.27980899810791
    6. ' ' → logprob: -13.52980899810791
    7. '    ' → logprob: -13.90480899810791
    8. '  ' → logprob: -14.02980899810791
    9. '0' → logprob: -14.52980899810791
    10. '1' → logprob: -14.77980899810791

Token 38: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.0004427051462698728
    2. '_' → logprob: -8.625442504882812
    3. '_lim' → logprob: -9.250442504882812
    4. ' _' → logprob: -9.375442504882812
    5. '_l' → logprob: -9.750442504882812
    6. '_limits' → logprob: -11.375442504882812
    7. '_space' → logprob: -13.000442504882812
    8. '_li' → logprob: -13.125442504882812
    9. '_length' → logprob: -13.500442504882812
    10. '```' → logprob: -14.000442504882812

Token 39: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000797715678345412
    2. ':
' → logprob: -8.000797271728516
    3. ':return' → logprob: -8.125797271728516
    4. ' :' → logprob: -8.875797271728516
    5. '   ' → logprob: -11.500797271728516
    6. ' or' → logprob: -12.375797271728516
    7. '    ' → logprob: -13.250797271728516
    8. '       ' → logprob: -13.250797271728516
    9. '.' → logprob: -13.500797271728516
    10. '):' → logprob: -13.625797271728516

Token 40: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028678758069872856
    2. ':' → logprob: -3.6536786556243896
    3. '   ' → logprob: -7.153678894042969
    4. ':
' → logprob: -7.153678894042969
    5. ':return' → logprob: -8.153678894042969
    6. ' return' → logprob: -8.278678894042969
    7. '\n' → logprob: -9.903678894042969
    8. '```' → logprob: -10.278678894042969
    9. ' :' → logprob: -10.528678894042969
    10. '.' → logprob: -10.778678894042969

Token 41: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34317854046821594
    2. ' return' → logprob: -1.5931785106658936
    3. '   ' → logprob: -2.7181785106658936
    4. 'return' → logprob: -4.218178749084473
    5. '    ' → logprob: -5.343178749084473
    6. ' print' → logprob: -7.468178749084473
    7. '           ' → logprob: -8.093178749084473
    8. ' raise' → logprob: -8.718178749084473
    9. 'print' (adapté à ' print') → logprob: -9.218178749084473
    10. ' ' → logprob: -9.468178749084473

Token 42: '(-' (ID: 8087)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019272904843091965
    2. '(-' → logprob: -4.769272804260254
    3. '()' → logprob: -5.394272804260254
    4. '(False' → logprob: -5.894272804260254
    5. '("' → logprob: -6.394272804260254
    6. '(None' → logprob: -6.894272804260254
    7. '('' → logprob: -7.769272804260254
    8. '(True' → logprob: -9.269272804260254
    9. ' (' → logprob: -10.644272804260254
    10. '0' → logprob: -10.894272804260254

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -12.125007629394531
    3. ')' → logprob: -13.250007629394531
    4. '2' → logprob: -14.625007629394531
    5. '`)' → logprob: -17.31250762939453
    6. '```' → logprob: -17.31250762939453
    7. ' )' → logprob: -17.56250762939453
    8. '   ' → logprob: -17.81250762939453
    9. '0' → logprob: -18.43750762939453
    10. 'sequence' → logprob: -18.75000762939453

Token 44: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029987553134560585
    2. ')
' → logprob: -3.5299875736236572
    3. '   ' → logprob: -8.529987335205078
    4. '       ' → logprob: -11.154987335205078
    5. ')
' → logprob: -11.404987335205078
    6. ' )' → logprob: -12.529987335205078
    7. ')return' → logprob: -12.529987335205078
    8. '`)' → logprob: -13.154987335205078
    9. '')' → logprob: -13.779987335205078
    10. '))' → logprob: -14.029987335205078

Token 45: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11638307571411133
    2. '       ' → logprob: -2.6163830757141113
    3. '
' → logprob: -4.366383075714111
    4. '\n' → logprob: -4.866383075714111
    5. '    
' → logprob: -5.366383075714111
    6. '```' → logprob: -5.991383075714111
    7. '<|end|>' → logprob: -6.741383075714111
    8. 'return' → logprob: -6.866383075714111
    9. ' ' → logprob: -6.866383075714111
    10. ' return' → logprob: -7.116383075714111

Token 46: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034129670821130276
    2. '   ' → logprob: -5.753413200378418
    3. 'return' (adapté à ' return') → logprob: -8.878413200378418
    4. ' return' → logprob: -10.003413200378418
    5. '           ' → logprob: -11.628413200378418
    6. '```' → logprob: -11.878413200378418
    7. '	return' → logprob: -12.003413200378418
    8. '
' → logprob: -12.253413200378418
    9. ' ' → logprob: -12.378413200378418
    10. '	' → logprob: -12.378413200378418

Token 47: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.40008094906806946
    2. '   ' → logprob: -2.275080919265747
    3. '
' → logprob: -2.775080919265747
    4. '    
' → logprob: -3.025080919265747
    5. '  
' → logprob: -3.775080919265747
    6. ' ' → logprob: -3.900080919265747
    7. '<|end|>' → logprob: -4.150081157684326
    8. '\' → logprob: -4.275081157684326
    9. '```' → logprob: -4.275081157684326
    10. ' 
' → logprob: -4.525081157684326

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6663598418235779
    2. '
' → logprob: -1.7913599014282227
    3. '    
' → logprob: -1.9163599014282227
    4. '\n' → logprob: -2.7913599014282227
    5. '<|end|>' → logprob: -3.4163599014282227
    6. '  
' → logprob: -3.6663599014282227
    7. ' 
' → logprob: -3.7913599014282227
    8. '```' → logprob: -4.791359901428223
    9. ' ' → logprob: -5.166359901428223
    10. '   
' → logprob: -5.291359901428223

Token 49: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5083367228507996
    2. 'n' → logprob: -1.8833367824554443
    3. '    
' → logprob: -2.6333367824554443
    4. '\n' → logprob: -2.8833367824554443
    5. '```' → logprob: -2.8833367824554443
    6. '
' → logprob: -3.8833367824554443
    7. 'result' → logprob: -4.383336544036865
    8. 'a' → logprob: -5.633336544036865
    9. '\' → logprob: -5.633336544036865
    10. '`' → logprob: -5.758336544036865

Token 50: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.009762817993760109
    2. 'input' → logprob: -4.759762763977051
    3. ' ' → logprob: -7.259762763977051
    4. ' sequence' → logprob: -8.38476276397705
    5. ' not' → logprob: -8.88476276397705
    6. ' (' → logprob: -10.88476276397705
    7. '(input' → logprob: -11.13476276397705
    8. 'sequence' → logprob: -11.38476276397705
    9. 'not' → logprob: -12.13476276397705
    10. '_input' → logprob: -12.13476276397705

Token 51: '_m' (ID: 1285)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.0005637573776766658
    2. '_m' → logprob: -7.500563621520996
    3. '_' → logprob: -12.500563621520996
    4. '```' → logprob: -13.500563621520996
    5. '_key' → logprob: -13.750563621520996
    6. '_value' → logprob: -13.750563621520996
    7. '\' → logprob: -14.875563621520996
    8. 'k' → logprob: -15.125563621520996
    9. '_j' → logprob: -15.375563621520996
    10. '_sequence' → logprob: -15.500563621520996

Token 52: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.0325924449716695e-05
    2. '_k' → logprob: -12.25001049041748
    3. '_' → logprob: -12.87501049041748
    4. '_val' → logprob: -14.12501049041748
    5. 'value' → logprob: -14.50001049041748
    6. '_key' → logprob: -14.75001049041748
    7. ' _' → logprob: -15.00001049041748
    8. '_VALUE' → logprob: -15.12501049041748
    9. '_values' → logprob: -15.62501049041748
    10. 'alue' → logprob: -16.500009536743164

Token 53: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.023287173360586166
    2. '==' → logprob: -4.523287296295166
    3. ' <' → logprob: -5.398287296295166
    4. ' <=' → logprob: -5.898287296295166
    5. ' >' → logprob: -6.273287296295166
    6. ' ' → logprob: -6.398287296295166
    7. ' >=' → logprob: -7.023287296295166
    8. ' %' → logprob: -8.398286819458008
    9. '%' → logprob: -9.523286819458008
    10. '>' → logprob: -10.273286819458008

Token 54: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05697783827781677
    2. '0' → logprob: -2.9319777488708496
    3. '1' → logprob: -6.18197774887085
    4. '2' → logprob: -10.806978225708008
    5. '3' → logprob: -13.994478225708008
    6. ' ' → logprob: -14.556978225708008
    7. 's' → logprob: -14.681978225708008
    8. '<' → logprob: -15.056978225708008
    9. ' n' → logprob: -15.056978225708008
    10. '_' → logprob: -15.056978225708008

Token 55: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10043969005346298
    2. '1' → logprob: -2.6004397869110107
    3. ' ' → logprob: -3.8504397869110107
    4. '   ' → logprob: -10.47544002532959
    5. '  ' → logprob: -13.16294002532959
    6. ' ' → logprob: -13.22544002532959
    7. '

' → logprob: -13.41294002532959
    8. '2' → logprob: -13.66294002532959
    9. '{' → logprob: -13.91294002532959
    10. ':' → logprob: -13.97544002532959

Token 56: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007690866477787495
    2. ':
' → logprob: -4.882690906524658
    3. ':return' → logprob: -9.6326904296875
    4. ' and' → logprob: -11.7576904296875
    5. ':

' → logprob: -12.7576904296875
    6. '<|end|>' → logprob: -13.0076904296875
    7. ' :' → logprob: -13.1326904296875
    8. ',' → logprob: -13.3826904296875
    9. ' or' → logprob: -14.3826904296875
    10. ':
' → logprob: -14.5076904296875

Token 57: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3727380037307739
    2. '
' → logprob: -1.497738003730774
    3. '<|end|>' → logprob: -3.4977378845214844
    4. ' 
' → logprob: -4.247737884521484
    5. '    
' → logprob: -4.497737884521484
    6. '   ' → logprob: -4.497737884521484
    7. ':' → logprob: -5.247737884521484
    8. '        
' → logprob: -5.372737884521484
    9. '  
' → logprob: -6.122737884521484
    10. ':
' → logprob: -6.247737884521484

Token 58: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.12362924963235855
    2. 'print' (adapté à ' print') → logprob: -2.498629331588745
    3. '   ' → logprob: -3.873629331588745
    4. ' ' → logprob: -5.248629093170166
    5. '    ' → logprob: -5.748629093170166
    6. '       ' → logprob: -5.873629093170166
    7. ' return' → logprob: -7.623629093170166
    8. ' if' → logprob: -7.998629093170166
    9. ' 
' → logprob: -7.998629093170166
    10. '    
' → logprob: -8.623629570007324

Token 59: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007210922427475452
    2. '(input' → logprob: -5.507210731506348
    3. '()' → logprob: -6.007210731506348
    4. '(sequence' → logprob: -8.507210731506348
    5. '(-' → logprob: -9.007210731506348
    6. '('' → logprob: -9.132210731506348
    7. '((' → logprob: -9.507210731506348
    8. '0' → logprob: -10.132210731506348
    9. ' (' → logprob: -10.257210731506348
    10. '("' → logprob: -11.007210731506348

Token 60: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017790684942156076
    2. '\n' → logprob: -7.126779079437256
    3. '')' → logprob: -7.251779079437256
    4. ' ' → logprob: -8.751778602600098
    5. '1' → logprob: -10.251778602600098
    6. ' ')' → logprob: -10.626778602600098
    7. ''' → logprob: -11.126778602600098
    8. ''\' → logprob: -11.501778602600098
    9. '2' → logprob: -12.501778602600098
    10. ')' → logprob: -12.751778602600098

Token 61: ' ' (ID: 220)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.12929794192314148
    2. '')
' → logprob: -2.129297971725464
    3. '')
' → logprob: -7.129297733306885
    4. ')' → logprob: -7.504297733306885
    5. ''' → logprob: -7.629297733306885
    6. '0' → logprob: -8.004298210144043
    7. '\n' → logprob: -9.629298210144043
    8. ')
' → logprob: -10.629298210144043
    9. ' ')' → logprob: -10.629298210144043
    10. ' ')
' → logprob: -11.129298210144043

Token 62: '0' (ID: 15)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.09978340566158295
    2. '0' → logprob: -2.474783420562744
    3. ' ')' → logprob: -5.974783420562744
    4. ''' → logprob: -6.224783420562744
    5. ' ' → logprob: -6.224783420562744
    6. '')
' → logprob: -6.224783420562744
    7. ')' → logprob: -6.349783420562744
    8. '1' → logprob: -8.724782943725586
    9. '<|end|>' → logprob: -9.224782943725586
    10. ' ')
' → logprob: -9.724782943725586

Token 63: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.027498237788677216
    2. '')
' → logprob: -3.652498245239258
    3. '\n' → logprob: -7.902498245239258
    4. ')' → logprob: -8.027498245239258
    5. '')
' → logprob: -8.277498245239258
    6. ''' → logprob: -9.402498245239258
    7. ' ')' → logprob: -9.402498245239258
    8. ' ')
' → logprob: -9.902498245239258
    9. '   ' → logprob: -11.652498245239258
    10. '")' → logprob: -12.527498245239258

Token 64: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3154250979423523
    2. '   ' → logprob: -1.315425157546997
    3. '<|end|>' → logprob: -6.565424919128418
    4. '    
' → logprob: -9.065424919128418
    5. '
' → logprob: -9.065424919128418
    6. ' ' → logprob: -9.315424919128418
    7. ',' → logprob: -9.815424919128418
    8. '           ' → logprob: -9.815424919128418
    9. '<|end|>' → logprob: -9.940424919128418
    10. '\n' → logprob: -10.065424919128418

Token 65: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015592250972986221
    2. '   ' → logprob: -4.265592098236084
    3. 'return' (adapté à ' return') → logprob: -7.390592098236084
    4. ' return' → logprob: -8.265592575073242
    5. '
' → logprob: -8.765592575073242
    6. ' ' → logprob: -8.890592575073242
    7. '	return' → logprob: -10.140592575073242
    8. '\n' → logprob: -10.265592575073242
    9. '    
' → logprob: -10.640592575073242
    10. '           ' → logprob: -10.765592575073242

Token 66: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1903236359357834
    2. '<|end|>' → logprob: -2.4403235912323
    3. '    
' → logprob: -3.4403235912323
    4. '
' → logprob: -3.8153235912323
    5. '\n' → logprob: -4.315323829650879
    6. '```' → logprob: -4.940323829650879
    7. '  
' → logprob: -5.565323829650879
    8. ' ' → logprob: -5.940323829650879
    9. ' 
' → logprob: -7.065323829650879
    10. '<|end|>' → logprob: -7.440323829650879

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06128812953829765
    2. '    
' → logprob: -3.8112881183624268
    3. '<|end|>' → logprob: -3.9362881183624268
    4. '\n' → logprob: -5.061288356781006
    5. ' ' → logprob: -5.811288356781006
    6. '```' → logprob: -6.436288356781006
    7. '  
' → logprob: -6.936288356781006
    8. '\' → logprob: -7.061288356781006
    9. ' 
' → logprob: -7.186288356781006
    10. '    ' → logprob: -7.311288356781006

Token 68: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8810027837753296
    2. 'n' → logprob: -2.131002902984619
    3. ' 
' → logprob: -2.506002902984619
    4. '    
' → logprob: -2.631002902984619
    5. ' ' → logprob: -2.881002902984619
    6. 'sequence' → logprob: -3.006002902984619
    7. '\n' → logprob: -3.256002902984619
    8. 'result' → logprob: -3.381002902984619
    9. ' sequence' → logprob: -4.131002902984619
    10. '```' → logprob: -4.256002902984619

Token 69: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.014596513472497463
    2. 'input' → logprob: -4.264596462249756
    3. ' sequence' → logprob: -8.139596939086914
    4. ' ' → logprob: -9.514596939086914
    5. ' not' → logprob: -10.514596939086914
    6. 'sequence' → logprob: -11.389596939086914
    7. '   ' → logprob: -12.139596939086914
    8. '(input' → logprob: -12.264596939086914
    9. 'not' → logprob: -12.639596939086914
    10. '_input' → logprob: -12.952096939086914

Token 70: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.00975868571549654
    2. '_k' → logprob: -4.634758472442627
    3. 'm' → logprob: -13.884758949279785
    4. '_value' → logprob: -14.259758949279785
    5. '_' → logprob: -14.384758949279785
    6. 's' → logprob: -16.00975799560547
    7. 'k' → logprob: -16.38475799560547
    8. '==' → logprob: -17.25975799560547
    9. '```' → logprob: -17.75975799560547
    10. '_b' → logprob: -17.75975799560547

Token 71: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.3663626305060461e-05
    2. 'value' → logprob: -11.50001335144043
    3. 'alue' → logprob: -12.87501335144043
    4. '_' → logprob: -14.50001335144043
    5. '_VALUE' → logprob: -15.25001335144043
    6. 'Value' → logprob: -16.62501335144043
    7. '_values' → logprob: -16.87501335144043
    8. '_Value' → logprob: -17.37501335144043
    9. '==' → logprob: -18.00001335144043
    10. '_val' → logprob: -18.25001335144043

Token 72: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0341586135327816
    2. '==' → logprob: -3.409158706665039
    3. ' ' → logprob: -8.409158706665039
    4. ' >' → logprob: -8.784158706665039
    5. ' <=' → logprob: -9.909158706665039
    6. '%' → logprob: -10.659158706665039
    7. ' %' → logprob: -11.034158706665039
    8. ' >=' → logprob: -11.159158706665039
    9. '>' → logprob: -11.284158706665039
    10. ' !=' → logprob: -11.534158706665039

Token 73: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14272062480449677
    2. '1' → logprob: -2.0177206993103027
    3. '2' → logprob: -10.392720222473145
    4. '  ' → logprob: -12.455220222473145
    5. '<|end|>' → logprob: -12.767720222473145
    6. '   ' → logprob: -13.642720222473145
    7. ' ' → logprob: -13.767720222473145
    8. '3' → logprob: -14.267720222473145
    9. '

' → logprob: -14.580220222473145
    10. '<|end|>' → logprob: -15.017720222473145

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006814946420490742
    2. ' ' → logprob: -5.006814956665039
    3. '2' → logprob: -9.256814956665039
    4. '   ' → logprob: -14.194314956665039
    5. '  ' → logprob: -14.444314956665039
    6. '3' → logprob: -14.506814956665039
    7. '<|end|>' → logprob: -14.506814956665039
    8. '0' → logprob: -14.569314956665039
    9. '-' → logprob: -15.444314956665039
    10. '

' → logprob: -15.569314956665039

Token 75: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.550411151489243e-05
    2. ':
' → logprob: -9.875055313110352
    3. ' :' → logprob: -13.750055313110352
    4. '):' → logprob: -13.750055313110352
    5. ',' → logprob: -14.625055313110352
    6. ' and' → logprob: -15.000055313110352
    7. '<|end|>' → logprob: -15.250055313110352
    8. ':

' → logprob: -15.625055313110352
    9. ':**' → logprob: -16.00005531311035
    10. '():' → logprob: -16.25005531311035

Token 76: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4944939613342285
    2. '       ' → logprob: -1.2444939613342285
    3. '   ' → logprob: -2.9944939613342285
    4. ':
' → logprob: -3.8694939613342285
    5. '    ' → logprob: -3.9944939613342285
    6. ' :' → logprob: -5.6194939613342285
    7. ' ' → logprob: -6.7444939613342285
    8. '
' → logprob: -6.7444939613342285
    9. '        ' → logprob: -6.8694939613342285
    10. '<|end|>' → logprob: -6.9944939613342285

Token 77: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18140223622322083
    2. 'print' → logprob: -2.4314022064208984
    3. ' print' → logprob: -3.0564022064208984
    4. ' if' → logprob: -3.8064022064208984
    5. '   ' → logprob: -5.556402206420898
    6. '    ' → logprob: -6.681402206420898
    7. 'if' (adapté à ' if') → logprob: -6.931402206420898
    8. '        ' → logprob: -7.306402206420898
    9. ' ' → logprob: -7.681402206420898
    10. '           ' → logprob: -8.181402206420898

Token 78: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.06201048195362091
    2. 'input' → logprob: -2.8120105266571045
    3. ' not' → logprob: -11.187010765075684
    4. ' ' → logprob: -12.062010765075684
    5. 'not' → logprob: -12.062010765075684
    6. '   ' → logprob: -12.437010765075684
    7. '0' → logprob: -13.062010765075684
    8. 'Input' → logprob: -13.312010765075684
    9. 'in' → logprob: -13.437010765075684
    10. ' sequence' → logprob: -13.562010765075684

Token 79: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -4.842555426876061e-06
    2. '_' → logprob: -12.500004768371582
    3. ' _' → logprob: -14.750004768371582
    4. '_j' → logprob: -16.1250057220459
    5. '_m' → logprob: -16.3750057220459
    6. '```' → logprob: -16.5000057220459
    7. '_value' → logprob: -16.8750057220459
    8. '_a' → logprob: -17.0000057220459
    9. '_key' → logprob: -17.0000057220459
    10. '<|end|>' → logprob: -17.5000057220459

Token 80: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -3.6312321753939614e-05
    2. '_' → logprob: -10.500036239624023
    3. '_val' → logprob: -12.500036239624023
    4. 'alue' → logprob: -13.250036239624023
    5. ' _' → logprob: -13.625036239624023
    6. '_VALUE' → logprob: -14.125036239624023
    7. '_values' → logprob: -15.125036239624023
    8. 'value' → logprob: -15.250036239624023
    9. '_Value' → logprob: -15.500036239624023
    10. '_token' → logprob: -16.250036239624023

Token 81: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.020899539813399315
    2. '==' → logprob: -4.520899772644043
    3. ' ' → logprob: -4.645899772644043
    4. ' =' → logprob: -9.895899772644043
    5. '0' → logprob: -10.395899772644043
    6. ':' → logprob: -10.770899772644043
    7. ' >' → logprob: -11.020899772644043
    8. ' ' → logprob: -11.520899772644043
    9. ' else' → logprob: -11.645899772644043
    10. '=' → logprob: -11.645899772644043

Token 82: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47452273964881897
    2. '0' → logprob: -0.9745227098464966
    3. '1' → logprob: -7.724522590637207
    4. '<|end|>' → logprob: -14.099522590637207
    5. ' ' → logprob: -14.349522590637207
    6. '=' → logprob: -15.162022590637207
    7. 's' → logprob: -15.287022590637207
    8. '[' → logprob: -16.099523544311523
    9. ' a' → logprob: -16.162023544311523
    10. ' `' → logprob: -16.162023544311523

Token 83: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00071695790393278
    2. ' ' → logprob: -7.8757171630859375
    3. '1' → logprob: -8.000717163085938
    4. '<|end|>' → logprob: -14.625717163085938
    5. '   ' → logprob: -15.500717163085938
    6. 's' → logprob: -15.688217163085938
    7. '۰' → logprob: -16.000717163085938
    8. '=' → logprob: -16.500717163085938
    9. '[' → logprob: -16.688217163085938
    10. '-' → logprob: -16.875717163085938

Token 84: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029810426756739616
    2. ':
' → logprob: -3.5298104286193848
    3. ' :' → logprob: -10.904809951782227
    4. '       ' → logprob: -11.279809951782227
    5. ':

' → logprob: -11.904809951782227
    6. ' :
' → logprob: -12.029809951782227
    7. ':
' → logprob: -12.404809951782227
    8. ':return' → logprob: -13.029809951782227
    9. '<|end|>' → logprob: -13.154809951782227
    10. ',' → logprob: -13.279809951782227

Token 85: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6377974152565002
    2. '           ' → logprob: -0.7627974152565002
    3. ':' → logprob: -7.0127973556518555
    4. '   ' → logprob: -7.5127973556518555
    5. '               ' → logprob: -7.5127973556518555
    6. '        
' → logprob: -7.5127973556518555
    7. '<|end|>' → logprob: -7.7627973556518555
    8. '        ' → logprob: -8.137797355651855
    9. '	       ' → logprob: -8.137797355651855
    10. ':
' → logprob: -8.137797355651855

Token 86: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.06536374241113663
    2. '           ' → logprob: -2.815363645553589
    3. ' print' → logprob: -6.190363883972168
    4. '       ' → logprob: -7.315363883972168
    5. '               ' → logprob: -7.815363883972168
    6. '   ' → logprob: -8.440363883972168
    7. '	print' → logprob: -10.815363883972168
    8. ' ' → logprob: -11.315363883972168
    9. '                   ' → logprob: -12.565363883972168
    10. 'pr' → logprob: -12.690363883972168

Token 87: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.014646675437688828
    2. '(' → logprob: -4.264646530151367
    3. '("' → logprob: -7.889646530151367
    4. ''' → logprob: -9.889646530151367
    5. '0' → logprob: -10.014646530151367
    6. '(-' → logprob: -13.014646530151367
    7. '1' → logprob: -13.889646530151367
    8. '2' → logprob: -13.889646530151367
    9. ' ('' → logprob: -14.139646530151367
    10. '"' → logprob: -14.139646530151367

Token 88: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008954782970249653
    2. ''' → logprob: -4.758955001831055
    3. '1' → logprob: -8.383955001831055
    4. ' ' → logprob: -9.883955001831055
    5. '"' → logprob: -10.508955001831055
    6. '01' → logprob: -11.383955001831055
    7. '00' → logprob: -12.758955001831055
    8. '-' → logprob: -12.883955001831055
    9. '`' → logprob: -13.008955001831055
    10. '2' → logprob: -13.071455001831055

Token 89: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.034197211265563965
    2. '0' → logprob: -3.4091973304748535
    3. '1' → logprob: -7.5341973304748535
    4. ''' → logprob: -12.534196853637695
    5. '2' → logprob: -13.221696853637695
    6. '```' → logprob: -14.159196853637695
    7. '  ' → logprob: -14.221696853637695
    8. ' '' → logprob: -14.221696853637695
    9. '   ' → logprob: -14.284196853637695
    10. ')' → logprob: -14.409196853637695

Token 90: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18006886541843414
    2. '1' → logprob: -1.805068850517273
    3. ' ' → logprob: -8.180068969726562
    4. '```' → logprob: -11.555068969726562
    5. ''' → logprob: -12.805068969726562
    6. '01' → logprob: -12.867568969726562
    7. '00' → logprob: -13.367568969726562
    8. '' → logprob: -13.367568969726562
    9. '2' → logprob: -13.805068969726562
    10. '-' → logprob: -13.992568969726562

Token 91: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8390344977378845
    2. ' ' → logprob: -1.0890345573425293
    3. '0' → logprob: -1.4640345573425293
    4. '2' → logprob: -11.714034080505371
    5. '')' → logprob: -12.214034080505371
    6. ''' → logprob: -13.151534080505371
    7. '   ' → logprob: -13.526534080505371
    8. '  ' → logprob: -13.651534080505371
    9. '4' → logprob: -13.714034080505371
    10. '3' → logprob: -13.776534080505371

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015127197839319706
    2. '0' → logprob: -6.50151252746582
    3. ' ' → logprob: -12.50151252746582
    4. '```' → logprob: -12.56401252746582
    5. '' → logprob: -15.06401252746582
    6. '01' → logprob: -15.87651252746582
    7. '11' → logprob: -15.93901252746582
    8. '2' → logprob: -16.12651252746582
    9. '-' → logprob: -16.18901252746582
    10. '१' → logprob: -16.31401252746582

Token 93: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01331422757357359
    2. '1' → logprob: -4.513314247131348
    3. '0' → logprob: -6.263314247131348
    4. '')' → logprob: -8.388314247131348
    5. ' ')' → logprob: -9.263314247131348
    6. ' ')
' → logprob: -11.263314247131348
    7. ' '' → logprob: -11.638314247131348
    8. ''' → logprob: -12.763314247131348
    9. '  ' → logprob: -12.763314247131348
    10. ' ')
' → logprob: -13.388314247131348

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014853173866868019
    2. ' ' → logprob: -4.264853000640869
    3. '0' → logprob: -7.389853000640869
    4. '')' → logprob: -9.639853477478027
    5. ' ')' → logprob: -12.639853477478027
    6. ' '' → logprob: -14.764853477478027
    7. ''' → logprob: -14.889853477478027
    8. '<|end|>' → logprob: -14.952353477478027
    9. '```' → logprob: -15.452353477478027
    10. '2' → logprob: -15.514853477478027

Token 95: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.362849622964859
    2. '')' → logprob: -1.2378495931625366
    3. ' ')
' → logprob: -4.362849712371826
    4. ' ')' → logprob: -7.112849712371826
    5. '')
' → logprob: -7.612849712371826
    6. '')

' → logprob: -9.862849235534668
    7. '   ' → logprob: -10.237849235534668
    8. '0' → logprob: -10.362849235534668
    9. ' ' → logprob: -10.612849235534668
    10. ' ')
' → logprob: -10.737849235534668

Token 96: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11475294083356857
    2. '           ' → logprob: -2.364753007888794
    3. 'else' → logprob: -4.864752769470215
    4. '
' → logprob: -5.989752769470215
    5. ' else' → logprob: -6.739752769470215
    6. '   ' → logprob: -6.739752769470215
    7. '\n' → logprob: -6.989752769470215
    8. '```' → logprob: -8.114752769470215
    9. '<|end|>' → logprob: -8.989752769470215
    10. '    
' → logprob: -9.239752769470215

Token 97: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09575807303190231
    2. 'else' (adapté à ' else') → logprob: -3.0957579612731934
    3. ' else' → logprob: -3.0957579612731934
    4. '   ' → logprob: -7.470757961273193
    5. 'elif' → logprob: -9.470758438110352
    6. '           ' → logprob: -9.595758438110352
    7. '	else' → logprob: -10.095758438110352
    8. '<|end|>' → logprob: -10.220758438110352
    9. ' elif' → logprob: -11.470758438110352
    10. '<|end|>' → logprob: -12.095758438110352

Token 98: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09273406863212585
    2. '           ' → logprob: -2.8427340984344482
    3. ':
' → logprob: -3.5927340984344482
    4. '       ' → logprob: -6.342733860015869
    5. ' :' → logprob: -7.592733860015869
    6. '   ' → logprob: -9.592734336853027
    7. '          ' → logprob: -9.717734336853027
    8. '        ' → logprob: -9.842734336853027
    9. '```' → logprob: -9.842734336853027
    10. '<|end|>' → logprob: -10.092734336853027

Token 99: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18404319882392883
    2. '       ' → logprob: -1.9340431690216064
    3. 'print' → logprob: -3.9340431690216064
    4. ' print' → logprob: -6.6840434074401855
    5. '   ' → logprob: -7.1840434074401855
    6. '```' → logprob: -7.4340434074401855
    7. '	       ' → logprob: -7.8090434074401855
    8. '        
' → logprob: -8.309042930603027
    9. '
' → logprob: -8.809042930603027
    10. '               ' → logprob: -9.059042930603027

Token 100: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.052961524575948715
    2. ' print' → logprob: -3.052961587905884
    3. '           ' → logprob: -6.177961349487305
    4. '       ' → logprob: -6.302961349487305
    5. '   ' → logprob: -8.052961349487305
    6. '	print' → logprob: -9.802961349487305
    7. ' ' → logprob: -10.177961349487305
    8. '```' → logprob: -11.052961349487305
    9. '    ' → logprob: -11.677961349487305
    10. '        ' → logprob: -12.052961349487305

Token 101: '(-' (ID: 8087)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.014175030402839184
    2. '(' → logprob: -4.264174938201904
    3. '(-' → logprob: -11.639175415039062
    4. '("' → logprob: -13.514175415039062
    5. '('(' → logprob: -14.639175415039062
    6. ' ('' → logprob: -15.014175415039062
    7. '()' → logprob: -15.264175415039062
    8. ' (' → logprob: -16.389175415039062
    9. '('-' → logprob: -16.514175415039062
    10. '(('' → logprob: -17.014175415039062

Token 102: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.282920129597187e-05
    2. ' ' → logprob: -11.375012397766113
    3. '   ' → logprob: -14.625012397766113
    4. '<|end|>' → logprob: -15.750012397766113
    5. ')' → logprob: -16.18751335144043
    6. '```' → logprob: -16.50001335144043
    7. '2' → logprob: -16.56251335144043
    8. '(' → logprob: -16.75001335144043
    9. '  ' → logprob: -17.18751335144043
    10. '`' → logprob: -17.18751335144043

Token 103: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014839126961305737
    2. ')
' → logprob: -6.626483917236328
    3. '       ' → logprob: -9.501483917236328
    4. '   ' → logprob: -9.751483917236328
    5. '')' → logprob: -10.751483917236328
    6. ')
' → logprob: -13.751483917236328
    7. ' )' → logprob: -14.126483917236328
    8. '`)' → logprob: -14.251483917236328
    9. '))' → logprob: -15.001483917236328
    10. '           ' → logprob: -15.626483917236328

Token 104: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10827285051345825
    2. '<|end|>' → logprob: -2.9832727909088135
    3. '\n' → logprob: -3.4832727909088135
    4. '
' → logprob: -5.108273029327393
    5. '       ' → logprob: -5.233273029327393
    6. '    
' → logprob: -5.358273029327393
    7. '```' → logprob: -6.358273029327393
    8. '\' → logprob: -6.983273029327393
    9. '<|end|>' → logprob: -7.233273029327393
    10. ')' → logprob: -7.483273029327393

Token 105: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11304420977830887
    2. '   ' → logprob: -2.238044261932373
    3. '
' → logprob: -9.863043785095215
    4. '           ' → logprob: -9.863043785095215
    5. '\n' → logprob: -10.238043785095215
    6. '<|end|>' → logprob: -10.488043785095215
    7. '	return' → logprob: -11.613043785095215
    8. 'return' (adapté à ' return') → logprob: -11.738043785095215
    9. ' return' → logprob: -11.863043785095215
    10. '     ' → logprob: -12.488043785095215

Token 106: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003849009284749627
    2. '<|end|>' → logprob: -6.003849029541016
    3. '    
' → logprob: -7.128849029541016
    4. '\n' → logprob: -8.503849029541016
    5. '
' → logprob: -9.253849029541016
    6. '       ' → logprob: -10.378849029541016
    7. ')' → logprob: -10.378849029541016
    8. '\' → logprob: -10.628849029541016
    9. '```' → logprob: -10.628849029541016
    10. '  
' → logprob: -10.878849029541016

Token 107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2622804045677185
    2. '
' → logprob: -2.1372804641723633
    3. '    
' → logprob: -2.2622804641723633
    4. ' 
' → logprob: -5.762280464172363
    5. '```' → logprob: -6.262280464172363
    6. '  
' → logprob: -6.637280464172363
    7. '        
' → logprob: -7.512280464172363
    8. '<|end|>' → logprob: -8.012280464172363
    9. ' if' → logprob: -8.262280464172363
    10. 'if' → logprob: -8.887280464172363

Token 108: ' result' (ID: 1534)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.336367666721344
    2. '
' → logprob: -1.8363676071166992
    3. '    
' → logprob: -3.211367607116699
    4. ' sequence' → logprob: -3.711367607116699
    5. 'sequence' → logprob: -3.961367607116699
    6. 'result' (adapté à ' result') → logprob: -4.461367607116699
    7. ' result' → logprob: -5.086367607116699
    8. ' 
' → logprob: -5.211367607116699
    9. 'n' → logprob: -6.086367607116699
    10. 'output' → logprob: -6.086367607116699

Token 109: '_sequence' (ID: 55606)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0019984657410532236
    2. '_' → logprob: -6.376998424530029
    3. '=' → logprob: -8.376998901367188
    4. ' _' → logprob: -10.376998901367188
    5. ' ' → logprob: -11.376998901367188
    6. '_sequence' → logprob: -12.126998901367188
    7. '_space' → logprob: -12.376998901367188
    8. '  ' → logprob: -12.751998901367188
    9. 's' → logprob: -13.251998901367188
    10. '[:]' → logprob: -13.626998901367188

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0013460656628012657
    2. '=' → logprob: -6.626346111297607
    3. '_' → logprob: -11.37634563446045
    4. ' ' → logprob: -13.37634563446045
    5. ' =[' → logprob: -13.50134563446045
    6. '   ' → logprob: -13.75134563446045
    7. '=[]' → logprob: -13.87634563446045
    8. '  ' → logprob: -14.00134563446045
    9. 's' → logprob: -14.50134563446045
    10. '[:]' → logprob: -14.62634563446045

Token 111: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.4746232032775879
    2. '[' → logprob: -1.349623203277588
    3. ' []' → logprob: -2.724623203277588
    4. '[]' → logprob: -2.974623203277588
    5. ' list' → logprob: -7.099623203277588
    6. 'list' → logprob: -7.599623203277588
    7. ' ' → logprob: -9.34962272644043
    8. '[list' → logprob: -9.59962272644043
    9. '['' → logprob: -10.22462272644043
    10. '[f' → logprob: -10.47462272644043

Token 112: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1049882173538208
    2. 'i' → logprob: -3.1049880981445312
    3. 'input' → logprob: -3.2299880981445312
    4. ' ' → logprob: -5.229988098144531
    5. ' i' → logprob: -5.604988098144531
    6. ' input' → logprob: -5.854988098144531
    7. '   ' → logprob: -6.854988098144531
    8. 'k' → logprob: -7.104988098144531
    9. ']' → logprob: -7.604988098144531
    10. ' (' → logprob: -8.604988098144531

Token 113: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43043798208236694
    2. ']' → logprob: -1.0554380416870117
    3. ' ]' → logprob: -6.680438041687012
    4. ',
' → logprob: -8.555438041687012
    5. ' ,' → logprob: -8.555438041687012
    6. ' ' → logprob: -10.805438041687012
    7. ' for' → logprob: -11.805438041687012
    8. ')' → logprob: -11.805438041687012
    9. '   ' → logprob: -11.930438041687012
    10. ']
' → logprob: -12.055438041687012

Token 114: ' *' (ID: 425)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2813076376914978
    2. ',' → logprob: -2.0313076972961426
    3. '
' → logprob: -3.1563076972961426
    4. ' for' → logprob: -3.6563076972961426
    5. ' _' → logprob: -4.406307697296143
    6. '```' → logprob: -4.781307697296143
    7. ' ,' → logprob: -5.156307697296143
    8. '_' → logprob: -5.281307697296143
    9. ' ' → logprob: -5.906307697296143
    10. 'for' → logprob: -6.281307697296143

Token 115: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7245430946350098
    2. '(sequence' → logprob: -0.8495430946350098
    3. '((' → logprob: -2.4745430946350098
    4. ' (' → logprob: -6.34954309463501
    5. 'sequence' → logprob: -6.97454309463501
    6. '(input' → logprob: -7.72454309463501
    7. ' ((' → logprob: -8.974542617797852
    8. '   ' → logprob: -9.224542617797852
    9. '(se' → logprob: -9.474542617797852
    10. ' sequence' → logprob: -9.724542617797852

Token 116: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2709382474422455
    2. '(sequence' → logprob: -1.6459382772445679
    3. 'sequence' → logprob: -3.5209381580352783
    4. ' (' → logprob: -5.145938396453857
    5. '   ' → logprob: -6.020938396453857
    6. '2' → logprob: -6.020938396453857
    7. '((' → logprob: -6.145938396453857
    8. '(input' → logprob: -6.895938396453857
    9. ' sequence' → logprob: -7.395938396453857
    10. 'input' → logprob: -8.6459379196167

Token 117: ' *' (ID: 425)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.030542448163032532
    2. ' **' → logprob: -4.155542373657227
    3. '*' → logprob: -4.405542373657227
    4. ' *' → logprob: -6.405542373657227
    5. ' ' → logprob: -7.905542373657227
    6. '   ' → logprob: -10.155542373657227
    7. '(input' → logprob: -10.280542373657227
    8. '*(' → logprob: -10.780542373657227
    9. '(' → logprob: -11.030542373657227
    10. '*object' → logprob: -11.155542373657227

Token 118: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.10509725660085678
    2. '(' → logprob: -2.6050972938537598
    3. '(sequence' → logprob: -4.73009729385376
    4. ' sequence' → logprob: -4.73009729385376
    5. 'input' → logprob: -5.35509729385376
    6. ' (' → logprob: -5.85509729385376
    7. '(input' → logprob: -8.605096817016602
    8. ' input' → logprob: -8.855096817016602
    9. ' ' → logprob: -9.730096817016602
    10. '((' → logprob: -9.730096817016602

Token 119: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.00020902375399600714
    2. 'limit' → logprob: -8.500208854675293
    3. 'Limit' → logprob: -12.500208854675293
    4. '_length' → logprob: -14.250208854675293
    5. '   ' → logprob: -15.250208854675293
    6. '```' → logprob: -15.750208854675293
    7. '_LIMIT' → logprob: -15.875208854675293
    8. ' limit' → logprob: -16.00020980834961
    9. '-limit' → logprob: -16.25020980834961
    10. '_' → logprob: -16.37520980834961

Token 120: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010514537803828716
    2. ' )' → logprob: -5.010514736175537
    3. ')
' → logprob: -5.635514736175537
    4. ' )
' → logprob: -9.760514259338379
    5. '*' → logprob: -9.885514259338379
    6. '+' → logprob: -10.510514259338379
    7. ')

' → logprob: -11.135514259338379
    8. ' +' → logprob: -11.135514259338379
    9. '   ' → logprob: -11.135514259338379
    10. ']' → logprob: -12.010514259338379

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7108092308044434
    2. ' ' → logprob: -1.5858092308044434
    3. '[' → logprob: -2.3358092308044434
    4. '<|end|>' → logprob: -2.4608092308044434
    5. 'result' → logprob: -2.9608092308044434
    6. ' result' → logprob: -3.7108092308044434
    7. '    ' → logprob: -4.460809230804443
    8. ' 
' → logprob: -4.835809230804443
    9. ')' → logprob: -5.710809230804443
    10. '[
' → logprob: -5.835809230804443

Token 122: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.5567708611488342
    2. '   ' → logprob: -1.8067708015441895
    3. ' for' → logprob: -2.4317708015441895
    4. 'for' → logprob: -2.8067708015441895
    5. ' result' → logprob: -3.0567708015441895
    6. 'i' → logprob: -3.9317708015441895
    7. 'sequence' → logprob: -3.9317708015441895
    8. ' i' → logprob: -4.8067708015441895
    9. '[' → logprob: -5.4317708015441895
    10. ' sequence' → logprob: -5.8067708015441895

Token 123: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.00012475410767365247
    2. '_' → logprob: -9.12512493133545
    3. '[' → logprob: -12.25012493133545
    4. '_sequences' → logprob: -12.50012493133545
    5. 'sequence' → logprob: -12.75012493133545
    6. '_SEQUENCE' → logprob: -13.25012493133545
    7. 'Sequence' → logprob: -13.75012493133545
    8. '_result' → logprob: -15.50012493133545
    9. ' sequence' → logprob: -15.50012493133545
    10. '_seq' → logprob: -16.000123977661133

Token 124: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004113542847335339
    2. '=' → logprob: -5.879113674163818
    3. ' =' → logprob: -7.004113674163818
    4. '[
' → logprob: -8.75411319732666
    5. '[:]' → logprob: -8.87911319732666
    6. '[:' → logprob: -10.62911319732666
    7. '<|end|>' → logprob: -10.62911319732666
    8. '[input' → logprob: -12.12911319732666
    9. '```' → logprob: -12.12911319732666
    10. '=[' → logprob: -12.25411319732666

Token 125: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0027497189585119486
    2. 'input' → logprob: -6.877749919891357
    3. ':' → logprob: -7.252749919891357
    4. 'sequence' → logprob: -7.377749919891357
    5. ' ' → logprob: -8.3777494430542
    6. '1' → logprob: -10.0027494430542
    7. '(' → logprob: -10.5027494430542
    8. '::' → logprob: -11.2527494430542
    9. '2' → logprob: -11.8777494430542
    10. '[' → logprob: -11.8777494430542

Token 126: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006284609902650118
    2. ' ]' → logprob: -5.381284713745117
    3. ']=' → logprob: -6.756284713745117
    4. '+' → logprob: -8.506284713745117
    5. '=' → logprob: -8.631284713745117
    6. ' =' → logprob: -10.131284713745117
    7. '[' → logprob: -11.131284713745117
    8. ')' → logprob: -11.256284713745117
    9. '   ' → logprob: -11.756284713745117
    10. ' ' → logprob: -11.756284713745117

Token 127: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869481086730957
    2. '=' → logprob: -1.1369481086730957
    3. ']' → logprob: -10.136947631835938
    4. ',' → logprob: -11.761947631835938
    5. '<|end|>' → logprob: -12.136947631835938
    6. ' =
' → logprob: -12.386947631835938
    7. ']=' → logprob: -12.386947631835938
    8. ' ' → logprob: -12.511947631835938
    9. '[' → logprob: -12.886947631835938
    10. ')' → logprob: -13.261947631835938

Token 128: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5279126763343811
    2. '0' → logprob: -0.9029126763343811
    3. ' input' → logprob: -6.402912616729736
    4. 'sequence' → logprob: -6.527912616729736
    5. ' ' → logprob: -6.652912616729736
    6. '1' → logprob: -8.402913093566895
    7. ' sequence' → logprob: -10.527913093566895
    8. 'inputs' → logprob: -10.777913093566895
    9. '   ' → logprob: -11.402913093566895
    10. 'int' → logprob: -11.590413093566895

Token 129: '_k' (ID: 11637)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.6345820426940918
    2. '_k' → logprob: -0.7595820426940918
    3. '_' → logprob: -6.259582042694092
    4. '_value' → logprob: -11.00958251953125
    5. '_sequence' → logprob: -11.00958251953125
    6. 'k' → logprob: -11.63458251953125
    7. 'm' → logprob: -11.75958251953125
    8. '```' → logprob: -12.75958251953125
    9. '_
' → logprob: -12.88458251953125
    10. '_user' → logprob: -13.75958251953125

Token 130: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0001398929744027555
    2. '_' → logprob: -9.125140190124512
    3. '_val' → logprob: -10.750140190124512
    4. ' _' → logprob: -12.875140190124512
    5. '_k' → logprob: -13.250140190124512
    6. 'value' → logprob: -13.625140190124512
    7. '_v' → logprob: -13.875140190124512
    8. '```' → logprob: -14.750140190124512
    9. '_sequence' → logprob: -14.750140190124512
    10. 'Value' → logprob: -14.875140190124512

Token 131: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.2356890439987183
    2. '
' → logprob: -1.3606890439987183
    3. '   ' → logprob: -1.3606890439987183
    4. '<|end|>' → logprob: -2.735689163208008
    5. ' 
' → logprob: -3.485689163208008
    6. '    
' → logprob: -3.860689163208008
    7. ' result' → logprob: -3.985689163208008
    8. ',' → logprob: -4.485689163208008
    9. '[' → logprob: -4.860689163208008
    10. '  
' → logprob: -5.235689163208008

Token 132: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8956829309463501
    2. '   ' → logprob: -1.27068293094635
    3. '[' → logprob: -2.0206828117370605
    4. '
' → logprob: -2.8956828117370605
    5. ' result' → logprob: -3.6456828117370605
    6. '<|end|>' → logprob: -3.6456828117370605
    7. ' 
' → logprob: -4.2706828117370605
    8. '0' → logprob: -4.6456828117370605
    9. ' for' → logprob: -4.8956828117370605
    10. '```' → logprob: -5.0206828117370605

Token 133: ' result' (ID: 1534)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7999744415283203
    2. 'result' (adapté à ' result') → logprob: -0.9249744415283203
    3. ' ' → logprob: -2.9249744415283203
    4. '1' → logprob: -3.4249744415283203
    5. ' result' → logprob: -4.17497444152832
    6. ' for' → logprob: -4.17497444152832
    7. 'for' → logprob: -4.17497444152832
    8. '[' → logprob: -5.04997444152832
    9. '   ' → logprob: -5.79997444152832
    10. '```' → logprob: -6.04997444152832

Token 134: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -2.7491250875755213e-05
    2. '_' → logprob: -10.750027656555176
    3. 'sequence' → logprob: -13.250027656555176
    4. 'Sequence' → logprob: -13.375027656555176
    5. '_sequences' → logprob: -13.875027656555176
    6. '[' → logprob: -14.125027656555176
    7. '_SEQUENCE' → logprob: -14.500027656555176
    8. '_s' → logprob: -16.50002670288086
    9. '_code' → logprob: -17.00002670288086
    10. '```' → logprob: -17.00002670288086

Token 135: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00263249222189188
    2. '=' → logprob: -6.5026326179504395
    3. ' =' → logprob: -7.5026326179504395
    4. '   ' → logprob: -8.502632141113281
    5. '+' → logprob: -8.752632141113281
    6. '```' → logprob: -10.002632141113281
    7. 'def' → logprob: -10.377632141113281
    8. ' [' → logprob: -10.502632141113281
    9. '[
' → logprob: -10.877632141113281
    10. 'import' → logprob: -11.377632141113281

Token 136: 'sequence' (ID: 47173)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06860911101102829
    2. 'sequence' → logprob: -2.9436089992523193
    3. '0' → logprob: -4.818609237670898
    4. '-' → logprob: -5.318609237670898
    5. 'len' → logprob: -8.818609237670898
    6. '(' → logprob: -8.818609237670898
    7. 'input' → logprob: -9.193609237670898
    8. '2' → logprob: -9.568609237670898
    9. ' sequence' → logprob: -9.568609237670898
    10. '(sequence' → logprob: -10.568609237670898

Token 137: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.0006660910439677536
    2. 'limit' → logprob: -7.37566614151001
    3. 'Limit' → logprob: -10.875665664672852
    4. '_limits' → logprob: -12.375665664672852
    5. '_length' → logprob: -13.000665664672852
    6. '_m' → logprob: -13.375665664672852
    7. '_LIMIT' → logprob: -13.375665664672852
    8. '1' → logprob: -13.500665664672852
    9. '   ' → logprob: -13.750665664672852
    10. '[' → logprob: -13.875665664672852

Token 138: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003476209531072527
    2. ' ]' → logprob: -8.750348091125488
    3. ']=' → logprob: -9.375348091125488
    4. '-' → logprob: -9.625348091125488
    5. ' -' → logprob: -10.375348091125488
    6. '   ' → logprob: -13.000348091125488
    7. '[' → logprob: -14.000348091125488
    8. '`]' → logprob: -14.125348091125488
    9. ']
' → logprob: -14.750348091125488
    10. '']' → logprob: -14.875348091125488

Token 139: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015093892579898238
    2. ' =' → logprob: -6.501509189605713
    3. '<|end|>' → logprob: -13.626509666442871
    4. '```' → logprob: -14.001509666442871
    5. '[' → logprob: -14.126509666442871
    6. '+=' → logprob: -14.251509666442871
    7. ']' → logprob: -14.501509666442871
    8. ']=' → logprob: -14.876509666442871
    9. '-' → logprob: -15.001509666442871
    10. ')' → logprob: -15.126509666442871

Token 140: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06998467445373535
    2. '0' → logprob: -2.6949846744537354
    3. ' input' → logprob: -10.819984436035156
    4. '<input' → logprob: -11.944984436035156
    5. ' ' → logprob: -12.194984436035156
    6. 'k' → logprob: -12.319984436035156
    7. '(input' → logprob: -13.194984436035156
    8. 'output' → logprob: -13.319984436035156
    9. '[input' → logprob: -13.319984436035156
    10. 'sequence' → logprob: -13.444984436035156

Token 141: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -1.0683535037969705e-05
    2. 'k' → logprob: -11.75001049041748
    3. '_m' → logprob: -13.00001049041748
    4. '```' → logprob: -15.62501049041748
    5. '_value' → logprob: -16.250011444091797
    6. 'K' → logprob: -16.875011444091797
    7. '_sequence' → logprob: -17.375011444091797
    8. '_' → logprob: -17.625011444091797
    9. '_key' → logprob: -17.750011444091797
    10. '\' → logprob: -18.625011444091797

Token 142: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0006006922340020537
    2. 'value' → logprob: -7.500600814819336
    3. '_val' → logprob: -10.125600814819336
    4. 'Value' → logprob: -12.375600814819336
    5. '_' → logprob: -13.625600814819336
    6. 'val' → logprob: -14.625600814819336
    7. 'alue' → logprob: -14.875600814819336
    8. '_Value' → logprob: -15.125600814819336
    9. '```' → logprob: -15.250600814819336
    10. '_VALUE' → logprob: -15.500600814819336

Token 143: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6887378096580505
    2. '<|end|>' → logprob: -1.1887378692626953
    3. ' for' → logprob: -2.1887378692626953
    4. '
' → logprob: -3.4387378692626953
    5. ')' → logprob: -4.438737869262695
    6. 'for' → logprob: -4.563737869262695
    7. '[' → logprob: -5.188737869262695
    8. '    
' → logprob: -5.313737869262695
    9. '\n' → logprob: -5.563737869262695
    10. ' ' → logprob: -6.063737869262695

Token 144: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048289693892002106
    2. ' for' → logprob: -3.5482897758483887
    3. 'for' → logprob: -5.673289775848389
    4. '<|end|>' → logprob: -5.798289775848389
    5. '
' → logprob: -6.048289775848389
    6. ' i' → logprob: -6.298289775848389
    7. '    
' → logprob: -6.298289775848389
    8. '	for' → logprob: -7.048289775848389
    9. ',' → logprob: -7.173289775848389
    10. ')' → logprob: -7.548289775848389

Token 145: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.206529438495636
    2. 'for' (adapté à ' for') → logprob: -1.9565293788909912
    3. '   ' → logprob: -3.831529378890991
    4. ' i' → logprob: -3.956529378890991
    5. 'i' → logprob: -5.70652961730957
    6. ' current' → logprob: -8.20652961730957
    7. 'idx' → logprob: -8.83152961730957
    8. ' idx' → logprob: -8.95652961730957
    9. 'current' → logprob: -9.20652961730957
    10. ' index' → logprob: -9.70652961730957

Token 146: ' index' (ID: 3472)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08974290639162064
    2. ' i' → logprob: -2.46474289894104
    3. 'index' → logprob: -7.589743137359619
    4. ' index' → logprob: -8.339742660522461
    5. 'idx' → logprob: -11.089742660522461
    6. 'x' → logprob: -11.589742660522461
    7. ' idx' → logprob: -11.964742660522461
    8. 'num' → logprob: -12.089742660522461
    9. 'j' → logprob: -12.964742660522461
    10. 'number' → logprob: -13.214742660522461

Token 147: '_lower' (ID: 72335)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006119451951235533
    2. 'in' → logprob: -5.131119251251221
    3. ' ' → logprob: -9.631119728088379
    4. '   ' → logprob: -10.256119728088379
    5. '_' → logprob: -10.381119728088379
    6. '_in' → logprob: -11.131119728088379
    7. '	in' → logprob: -11.256119728088379
    8. '    ' → logprob: -12.006119728088379
    9. '[' → logprob: -12.256119728088379
    10. '1' → logprob: -12.381119728088379

Token 148: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05048399418592453
    2. 'in' → logprob: -3.1754839420318604
    3. '+' → logprob: -5.4254841804504395
    4. '1' → logprob: -7.0504841804504395
    5. '_' → logprob: -7.3004841804504395
    6. '_in' → logprob: -7.4254841804504395
    7. ',' → logprob: -8.675483703613281
    8. ' +' → logprob: -9.175483703613281
    9. '   ' → logprob: -9.425483703613281
    10. '_lower' → logprob: -9.425483703613281

Token 149: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1426830142736435
    2. 'range' → logprob: -2.0176830291748047
    3. '	range' → logprob: -12.642683029174805
    4. '(range' → logprob: -13.392683029174805
    5. ' ' → logprob: -13.892683029174805
    6. '1' → logprob: -14.267683029174805
    7. ' in' → logprob: -14.517683029174805
    8. '   ' → logprob: -15.142683029174805
    9. '0' → logprob: -15.892683029174805
    10. ' xrange' → logprob: -16.017683029174805

Token 150: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.29955998063087463
    2. '1' → logprob: -1.6745599508285522
    3. '(sequence' → logprob: -2.674560070037842
    4. 'sequence' → logprob: -6.424560070037842
    5. '(input' → logprob: -7.174560070037842
    6. 'input' → logprob: -9.299559593200684
    7. ' ' → logprob: -10.799559593200684
    8. ' sequence' → logprob: -12.549559593200684
    9. '   ' → logprob: -12.549559593200684
    10. '2' → logprob: -12.549559593200684

Token 151: '_k' (ID: 11637)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.2522207498550415
    2. '_k' → logprob: -1.5022207498550415
    3. 'm' → logprob: -8.75222110748291
    4. 'k' → logprob: -10.12722110748291
    5. '_sequence' → logprob: -10.87722110748291
    6. '_lower' → logprob: -11.00222110748291
    7. 'sequence' → logprob: -11.50222110748291
    8. ')' → logprob: -11.62722110748291
    9. '_value' → logprob: -12.50222110748291
    10. '_' → logprob: -12.62722110748291

Token 152: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0005445729475468397
    2. '_lower' → logprob: -8.125544548034668
    3. '_m' → logprob: -8.750544548034668
    4. 'value' → logprob: -9.500544548034668
    5. 'lower' → logprob: -12.250544548034668
    6. '_val' → logprob: -13.000544548034668
    7. 'm' → logprob: -13.500544548034668
    8. '_' → logprob: -13.500544548034668
    9. '_values' → logprob: -13.750544548034668
    10. ')' → logprob: -14.000544548034668

Token 153: '):
' (ID: 1883)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.22692351043224335
    2. '+' → logprob: -1.6019234657287598
    3. ',' → logprob: -6.72692346572876
    4. '   ' → logprob: -8.726923942565918
    5. ' ,' → logprob: -9.601923942565918
    6. '):' → logprob: -10.226923942565918
    7. '):
' → logprob: -10.726923942565918
    8. ' -' → logprob: -12.351923942565918
    9. '    ' → logprob: -12.476923942565918
    10. ' ' → logprob: -12.601923942565918

Token 154: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6887862086296082
    2. '       ' → logprob: -1.063786268234253
    3. ':' → logprob: -2.188786268234253
    4. '[' → logprob: -4.188786029815674
    5. '    ' → logprob: -5.438786029815674
    6. ',' → logprob: -5.438786029815674
    7. ':
' → logprob: -5.563786029815674
    8. ')' → logprob: -6.438786029815674
    9. 'result' → logprob: -6.688786029815674
    10. ' for' → logprob: -6.813786029815674

Token 155: ' result' (ID: 1534)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8895188570022583
    2. 'result' (adapté à ' result') → logprob: -1.2645188570022583
    3. ' result' → logprob: -1.2645188570022583
    4. '   ' → logprob: -3.7645187377929688
    5. '[' → logprob: -8.264518737792969
    6. '	result' → logprob: -8.264518737792969
    7. '[result' → logprob: -9.389518737792969
    8. '<|end|>' → logprob: -9.389518737792969
    9. ' ' → logprob: -9.639518737792969
    10. ' for' → logprob: -9.764518737792969

Token 156: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -2.2007883671903983e-05
    2. '_lower' → logprob: -11.125021934509277
    3. '_sequences' → logprob: -12.750021934509277
    4. '[' → logprob: -13.375021934509277
    5. 'sequence' → logprob: -14.000021934509277
    6. '   ' → logprob: -14.875021934509277
    7. '_result' → logprob: -15.125021934509277
    8. '```' → logprob: -15.500021934509277
    9. '_' → logprob: -15.625021934509277
    10. '_s' → logprob: -15.750021934509277

Token 157: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.0003121056070085615
    2. '[' → logprob: -8.125311851501465
    3. 'index' → logprob: -11.625311851501465
    4. '[
' → logprob: -13.500311851501465
    5. '[input' → logprob: -13.750311851501465
    6. '```' → logprob: -14.000311851501465
    7. '[Index' → logprob: -14.500311851501465
    8. '=index' → logprob: -14.625311851501465
    9. '[result' → logprob: -14.625311851501465
    10. '[in' → logprob: -14.750311851501465

Token 158: '_lower' (ID: 72335)
  Prédit: '_lower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lower' → logprob: -0.0015268829884007573
    2. '+' → logprob: -6.876526832580566
    3. 'lower' → logprob: -7.751526832580566
    4. ']' → logprob: -11.376526832580566
    5. '```' → logprob: -11.376526832580566
    6. '_upper' → logprob: -11.626526832580566
    7. 'Lower' → logprob: -12.126526832580566
    8. '_]' → logprob: -12.376526832580566
    9. '_' → logprob: -13.001526832580566
    10. '.lower' → logprob: -13.126526832580566

Token 159: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.24758481979370117
    2. ' +' → logprob: -1.6225848197937012
    3. ']' → logprob: -3.872584819793701
    4. '=' → logprob: -7.997584819793701
    5. '   ' → logprob: -8.12258529663086
    6. ']=' → logprob: -8.37258529663086
    7. ' =' → logprob: -8.87258529663086
    8. '1' → logprob: -9.99758529663086
    9. ' ]' → logprob: -10.87258529663086
    10. ' ' → logprob: -10.99758529663086

Token 160: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20631958544254303
    2. 'sequence' → logprob: -2.206319570541382
    3. 'input' → logprob: -2.581319570541382
    4. '   ' → logprob: -8.831319808959961
    5. ' ' → logprob: -9.081319808959961
    6. ' sequence' → logprob: -9.206319808959961
    7. ' input' → logprob: -9.956319808959961
    8. 'len' → logprob: -10.081319808959961
    9. '(sequence' → logprob: -10.081319808959961
    10. '0' → logprob: -10.206319808959961

Token 161: '1' (ID: 16)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.19169333577156067
    2. '1' → logprob: -1.8166933059692383
    3. 'input' → logprob: -4.566693305969238
    4. ' sequence' → logprob: -6.816693305969238
    5. ' ' → logprob: -8.691693305969238
    6. '   ' → logprob: -8.816693305969238
    7. '(sequence' → logprob: -10.316693305969238
    8. ' input' → logprob: -10.941693305969238
    9. '(' → logprob: -12.191693305969238
    10. '  ' → logprob: -12.691693305969238

Token 162: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002449615392833948
    2. ']=' → logprob: -6.2524495124816895
    3. ' ]' → logprob: -8.127449989318848
    4. '=' → logprob: -8.627449989318848
    5. ' =' → logprob: -10.377449989318848
    6. ')' → logprob: -12.002449989318848
    7. '   ' → logprob: -12.502449989318848
    8. ',' → logprob: -13.252449989318848
    9. ']
' → logprob: -14.377449989318848
    10. '    ' → logprob: -14.627449989318848

Token 163: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.251995712518692
    2. ' =' → logprob: -1.5019956827163696
    3. ']' → logprob: -11.001996040344238
    4. ',' → logprob: -11.126996040344238
    5. ')' → logprob: -11.751996040344238
    6. '[' → logprob: -12.501996040344238
    7. '=

' → logprob: -12.501996040344238
    8. ' ' → logprob: -12.626996040344238
    9. '=
' → logprob: -12.751996040344238
    10. ']=' → logprob: -12.751996040344238

Token 164: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.0010879473993554711
    2. '0' → logprob: -7.5010881423950195
    3. ' index' → logprob: -7.7510881423950195
    4. 'input' → logprob: -9.62608814239502
    5. '(index' → logprob: -11.00108814239502
    6. 'sequence' → logprob: -11.87608814239502
    7. ' ' → logprob: -12.62608814239502
    8. '(' → logprob: -12.62608814239502
    9. '   ' → logprob: -13.37608814239502
    10. '	index' → logprob: -13.50108814239502

Token 165: '_lower' (ID: 72335)
  Prédit: '_lower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lower' → logprob: -3.5358694731257856e-05
    2. '_' → logprob: -10.750035285949707
    3. 'lower' → logprob: -11.500035285949707
    4. '_
' → logprob: -13.875035285949707
    5. '_l' → logprob: -14.375035285949707
    6. '```' → logprob: -14.750035285949707
    7. '_low' → logprob: -14.875035285949707
    8. 'Lower' → logprob: -15.125035285949707
    9. '_upper' → logprob: -15.375035285949707
    10. ' _' → logprob: -15.375035285949707

Token 166: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3130030035972595
    2. '
' → logprob: -2.1880030632019043
    3. '<|end|>' → logprob: -2.1880030632019043
    4. '       ' → logprob: -4.188003063201904
    5. ' for' → logprob: -4.438003063201904
    6. 'for' → logprob: -5.063003063201904
    7. '+' → logprob: -5.313003063201904
    8. '<|end|>' → logprob: -6.438003063201904
    9. '    
' → logprob: -7.063003063201904
    10. ' ' → logprob: -7.188003063201904

Token 167: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18835580348968506
    2. 'for' → logprob: -2.0633559226989746
    3. '   ' → logprob: -3.1883559226989746
    4. '```' → logprob: -6.063355922698975
    5. '<|end|>' → logprob: -7.688355922698975
    6. '[' → logprob: -8.813355445861816
    7. '       ' → logprob: -9.063355445861816
    8. ')' → logprob: -9.188355445861816
    9. ' ' → logprob: -9.688355445861816
    10. ',' → logprob: -10.188355445861816

Token 168: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.043043266981840134
    2. 'for' → logprob: -3.668043375015259
    3. ' result' → logprob: -4.79304313659668
    4. ' for' → logprob: -5.16804313659668
    5. '   ' → logprob: -6.79304313659668
    6. '       ' → logprob: -7.41804313659668
    7. 'sequence' → logprob: -7.41804313659668
    8. 'index' → logprob: -9.41804313659668
    9. '
' → logprob: -10.04304313659668
    10. '<|end|>' → logprob: -10.66804313659668

Token 169: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.02332758717238903
    2. '_lower' → logprob: -3.773327589035034
    3. '_upper' → logprob: -10.398327827453613
    4. 'Sequence' → logprob: -11.523327827453613
    5. '_sequences' → logprob: -11.773327827453613
    6. '_' → logprob: -12.148327827453613
    7. '```' → logprob: -12.523327827453613
    8. '_s' → logprob: -12.773327827453613
    9. 'lower' → logprob: -12.898327827453613
    10. '[_' → logprob: -13.023327827453613

Token 170: '[-' (ID: 17503)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.25455132126808167
    2. '[index' → logprob: -1.5045512914657593
    3. '[input' → logprob: -6.629551410675049
    4. '[in' → logprob: -7.629551410675049
    5. 'sequence' → logprob: -8.75455093383789
    6. 'index' → logprob: -9.25455093383789
    7. '[
' → logprob: -9.25455093383789
    8. '[len' → logprob: -9.50455093383789
    9. '```' → logprob: -10.00455093383789
    10. '[ind' → logprob: -10.00455093383789

Token 171: 'index' (ID: 2257)
  Prédit: '(index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(index' → logprob: -0.48575854301452637
    2. 'index' → logprob: -0.9857585430145264
    3. '(' → logprob: -5.2357587814331055
    4. '1' → logprob: -6.3607587814331055
    5. ' index' → logprob: -6.6107587814331055
    6. '(sequence' → logprob: -6.6107587814331055
    7. ' (' → logprob: -6.7357587814331055
    8. 'sequence' → logprob: -7.7357587814331055
    9. ':index' → logprob: -10.360758781433105
    10. '=index' → logprob: -10.610758781433105

Token 172: '_lower' (ID: 72335)
  Prédit: '_lower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lower' → logprob: -3.845798710244708e-05
    2. '_upper' → logprob: -11.375038146972656
    3. 'lower' → logprob: -11.375038146972656
    4. ']' → logprob: -12.000038146972656
    5. '-' → logprob: -12.375038146972656
    6. ' -' → logprob: -13.250038146972656
    7. 'Lower' → logprob: -14.250038146972656
    8. '```' → logprob: -14.250038146972656
    9. '_low' → logprob: -14.625038146972656
    10. '1' → logprob: -15.125038146972656

Token 173: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03823116421699524
    2. ' -' → logprob: -3.288231134414673
    3. ']' → logprob: -8.913230895996094
    4. '1' → logprob: -10.288230895996094
    5. '```' → logprob: -12.163230895996094
    6. '   ' → logprob: -12.538230895996094
    7. '+' → logprob: -13.163230895996094
    8. '2' → logprob: -13.288230895996094
    9. '*' → logprob: -13.288230895996094
    10. 's' → logprob: -13.413230895996094

Token 174: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3133948743343353
    2. '2' → logprob: -1.3133949041366577
    3. ' ' → logprob: -9.188394546508789
    4. '   ' → logprob: -11.188394546508789
    5. '```' → logprob: -12.188394546508789
    6. '-' → logprob: -12.813394546508789
    7. '       ' → logprob: -13.313394546508789
    8. '           ' → logprob: -13.563394546508789
    9. '
' → logprob: -13.938394546508789
    10. '  ' → logprob: -14.063394546508789

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014166799373924732
    2. '2' → logprob: -4.264166831970215
    3. '```' → logprob: -13.889166831970215
    4. ' ' → logprob: -14.014166831970215
    5. '-' → logprob: -14.139166831970215
    6. '   ' → logprob: -14.764166831970215
    7. '3' → logprob: -16.2641658782959
    8. '

' → logprob: -16.5141658782959
    9. '
' → logprob: -16.5766658782959
    10. '0' → logprob: -17.0766658782959

Token 176: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002238520188257098
    2. ' ]' → logprob: -6.377238750457764
    3. '=' → logprob: -8.002238273620605
    4. ']=' → logprob: -8.627238273620605
    5. ' =' → logprob: -10.877238273620605
    6. '-' → logprob: -13.752238273620605
    7. ')' → logprob: -14.502238273620605
    8. ' ' → logprob: -14.627238273620605
    9. '   ' → logprob: -14.877238273620605
    10. '`]' → logprob: -15.502238273620605

Token 177: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014164566993713379
    2. ' =' → logprob: -4.264164447784424
    3. '=

' → logprob: -14.889164924621582
    4. '=
' → logprob: -15.389164924621582
    5. ']=' → logprob: -16.389163970947266
    6. '=index' → logprob: -16.514163970947266
    7. ']' → logprob: -16.889163970947266
    8. '[' → logprob: -17.139163970947266
    9. '.=' → logprob: -17.389163970947266
    10. '```' → logprob: -17.514163970947266

Token 178: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.08894600719213486
    2. ' index' → logprob: -2.4639461040496826
    3. '       ' → logprob: -13.588946342468262
    4. '   ' → logprob: -13.963946342468262
    5. '#index' → logprob: -13.963946342468262
    6. '(index' → logprob: -14.213946342468262
    7. '	index' → logprob: -14.463946342468262
    8. '=index' → logprob: -14.713946342468262
    9. ' ' → logprob: -15.088946342468262
    10. '/index' → logprob: -15.338946342468262

Token 179: '_lower' (ID: 72335)
  Prédit: '_lower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lower' → logprob: -3.762356209335849e-05
    2. 'lower' → logprob: -10.50003719329834
    3. '_index' → logprob: -12.00003719329834
    4. 'Lower' → logprob: -12.87503719329834
    5. '_k' → logprob: -14.37503719329834
    6. 'index' → logprob: -15.00003719329834
    7. '_upper' → logprob: -15.37503719329834
    8. '```' → logprob: -16.250038146972656
    9. '_' → logprob: -17.375038146972656
    10. '_value' → logprob: -17.500038146972656

Token 180: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5889215469360352
    2. 'for' → logprob: -1.5889215469360352
    3. ' for' → logprob: -1.7139215469360352
    4. '<|end|>' → logprob: -3.838921546936035
    5. '[' → logprob: -4.088921546936035
    6. ')' → logprob: -4.713921546936035
    7. '```' → logprob: -5.213921546936035
    8. '
' → logprob: -6.713921546936035
    9. ',' → logprob: -6.838921546936035
    10. '#' → logprob: -7.213921546936035

Token 181: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14946158230304718
    2. ' for' → logprob: -2.524461507797241
    3. '   ' → logprob: -2.899461507797241
    4. '<|end|>' → logprob: -6.14946174621582
    5. '#' → logprob: -8.14946174621582
    6. 'return' → logprob: -8.39946174621582
    7. '	for' → logprob: -8.39946174621582
    8. '[' → logprob: -8.77446174621582
    9. '
' → logprob: -8.89946174621582
    10. '```' → logprob: -8.89946174621582

Token 182: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.028212975710630417
    2. ' for' → logprob: -4.028213024139404
    3. 'result' → logprob: -5.028213024139404
    4. 'return' → logprob: -7.028213024139404
    5. '[' → logprob: -7.153213024139404
    6. '   ' → logprob: -7.778213024139404
    7. '#' → logprob: -7.903213024139404
    8. 'index' → logprob: -8.278212547302246
    9. '<|end|>' → logprob: -8.278212547302246
    10. '0' → logprob: -8.903212547302246

Token 183: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.1578732281923294
    2. 'index' → logprob: -2.0328731536865234
    3. ' number' → logprob: -5.907873153686523
    4. ' i' → logprob: -5.907873153686523
    5. ' upper' → logprob: -6.907873153686523
    6. ' sequence' → logprob: -7.157873153686523
    7. ' value' → logprob: -7.407873153686523
    8. 'i' → logprob: -7.407873153686523
    9. ' higher' → logprob: -7.532873153686523
    10. ' input' → logprob: -7.595373153686523

Token 184: '_upper' (ID: 82658)
  Prédit: '_upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_upper' → logprob: -0.4694828689098358
    2. '_lower' → logprob: -1.0944828987121582
    3. ' in' → logprob: -3.844482898712158
    4. 'in' → logprob: -4.844482898712158
    5. '_h' → logprob: -4.969482898712158
    6. '_in' → logprob: -6.094482898712158
    7. '_' → logprob: -6.969482898712158
    8. '_range' → logprob: -8.844482421875
    9. '_middle' → logprob: -9.719482421875
    10. 'upper' → logprob: -9.844482421875

Token 185: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04301174357533455
    2. 'in' → logprob: -3.1680116653442383
    3. 'range' → logprob: -11.543011665344238
    4. ' ' → logprob: -13.918011665344238
    5. '   ' → logprob: -15.168011665344238
    6. ',' → logprob: -15.168011665344238
    7. ' range' → logprob: -15.293011665344238
    8. 'import' → logprob: -15.793011665344238
    9. 'from' → logprob: -16.293012619018555
    10. '+' → logprob: -16.418012619018555

Token 186: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931677460670471
    2. 'range' → logprob: -0.6931677460670471
    3. ' in' → logprob: -11.568167686462402
    4. ' input' → logprob: -12.943167686462402
    5. ' ' → logprob: -13.193167686462402
    6. 'in' → logprob: -13.193167686462402
    7. 'input' → logprob: -13.318167686462402
    8. '   ' → logprob: -13.568167686462402
    9. '(range' → logprob: -14.443167686462402
    10. '  ' → logprob: -14.818167686462402

Token 187: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.006726026069372892
    2. 'input' → logprob: -5.006725788116455
    3. '(sequence' → logprob: -12.631726264953613
    4. '(' → logprob: -13.131726264953613
    5. ',input' → logprob: -13.131726264953613
    6. '[input' → logprob: -13.631726264953613
    7. 'sequence' → logprob: -14.256726264953613
    8. '=input' → logprob: -14.256726264953613
    9. ' input' → logprob: -14.631726264953613
    10. '(in' → logprob: -16.131725311279297

Token 188: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -1.2664456789934775e-06
    2. '_m' → logprob: -13.750000953674316
    3. 'k' → logprob: -16.625001907348633
    4. 'K' → logprob: -17.875001907348633
    5. '_key' → logprob: -18.000001907348633
    6. '_user' → logprob: -19.250001907348633
    7. '_K' → logprob: -19.500001907348633
    8. '_value' → logprob: -19.875001907348633
    9. 'user' → logprob: -20.000001907348633
    10. '+k' → logprob: -20.625001907348633

Token 189: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.42893293499946594
    2. '_k' → logprob: -1.0539329051971436
    3. 'value' → logprob: -9.428933143615723
    4. '_key' → logprob: -9.553933143615723
    5. '_m' → logprob: -10.178933143615723
    6. '_val' → logprob: -10.803933143615723
    7. 'k' → logprob: -11.553933143615723
    8. 'K' → logprob: -12.803933143615723
    9. '_' → logprob: -13.303933143615723
    10. 'alue' → logprob: -13.678933143615723

Token 190: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24029366672039032
    2. '+' → logprob: -2.2402937412261963
    3. ' +' → logprob: -2.2402937412261963
    4. ' ,' → logprob: -7.865293502807617
    5. ',input' → logprob: -8.240293502807617
    6. '   ' → logprob: -9.990293502807617
    7. '+,' → logprob: -10.490293502807617
    8. 'input' → logprob: -12.115293502807617
    9. ' ' → logprob: -12.365293502807617
    10. ',+' → logprob: -12.740293502807617

Token 191: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0032901321537792683
    2. ' ' → logprob: -5.753290176391602
    3. ',' → logprob: -9.628290176391602
    4. 'input' → logprob: -10.628290176391602
    5. ' input' → logprob: -12.253290176391602
    6. '   ' → logprob: -12.253290176391602
    7. 'sequence' → logprob: -12.503290176391602
    8. 'range' → logprob: -13.253290176391602
    9. ' sequence' → logprob: -13.503290176391602
    10. '(' → logprob: -13.628290176391602

Token 192: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.034592388459714e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -15.125005722045898
    4. '
' → logprob: -16.0000057220459
    5. 'sequence' → logprob: -16.7500057220459
    6. 'input' → logprob: -17.2500057220459
    7. '0' → logprob: -17.3750057220459
    8. '+' → logprob: -17.3750057220459
    9. '```' → logprob: -17.7500057220459
    10. ',' → logprob: -17.7500057220459

Token 193: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016945181414484978
    2. ' ,' → logprob: -8.75016975402832
    3. ',input' → logprob: -11.62516975402832
    4. '+' → logprob: -14.00016975402832
    5. ',len' → logprob: -14.62516975402832
    6. ' +' → logprob: -15.37516975402832
    7. ',index' → logprob: -15.87516975402832
    8. '   ' → logprob: -16.12516975402832
    9. 'input' → logprob: -17.12516975402832
    10. ',n' → logprob: -17.12516975402832

Token 194: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -3.35706390615087e-05
    2. ' sequence' → logprob: -10.375033378601074
    3. 'input' → logprob: -13.375033378601074
    4. '   ' → logprob: -14.250033378601074
    5. '(sequence' → logprob: -16.75003433227539
    6. 'seq' → logprob: -17.50003433227539
    7. 'sequ' → logprob: -17.62503433227539
    8. '       ' → logprob: -19.00003433227539
    9. 'se' → logprob: -19.50003433227539
    10. 'sentence' → logprob: -20.12503433227539

Token 195: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -6.20603168499656e-05
    2. 'limit' → logprob: -10.000061988830566
    3. 'Limit' → logprob: -11.875061988830566
    4. '_lower' → logprob: -12.125061988830566
    5. '_upper' → logprob: -13.000061988830566
    6. '_length' → logprob: -14.375061988830566
    7. '```' → logprob: -15.125061988830566
    8. '_LIMIT' → logprob: -15.875061988830566
    9. '_value' → logprob: -16.000062942504883
    10. '_limits' → logprob: -16.250062942504883

Token 196: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1602778434753418
    2. '):' → logprob: -1.9102778434753418
    3. '   ' → logprob: -10.6602783203125
    4. ':' → logprob: -10.9102783203125
    5. ':
' → logprob: -12.0352783203125
    6. '):
' → logprob: -13.5352783203125
    7. ' ):
' → logprob: -13.5352783203125
    8. '():
' → logprob: -14.1602783203125
    9. '):

' → logprob: -14.2852783203125
    10. ')' → logprob: -14.4102783203125

Token 197: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.114600834436715e-05
    2. ':' → logprob: -10.375091552734375
    3. '   ' → logprob: -10.625091552734375
    4. '```' → logprob: -11.250091552734375
    5. '):
' → logprob: -12.125091552734375
    6. ':
' → logprob: -12.250091552734375
    7. '           ' → logprob: -12.625091552734375
    8. '        
' → logprob: -13.250091552734375
    9. '<|end|>' → logprob: -13.500091552734375
    10. 'result' → logprob: -13.500091552734375

Token 198: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.43012937903404236
    2. '       ' → logprob: -1.3051294088363647
    3. ' result' → logprob: -2.555129289627075
    4. '           ' → logprob: -8.555129051208496
    5. '```' → logprob: -8.680129051208496
    6. '[result' → logprob: -8.680129051208496
    7. '   ' → logprob: -9.430129051208496
    8. '[' → logprob: -9.680129051208496
    9. '	result' → logprob: -10.930129051208496
    10. ' ' → logprob: -12.055129051208496

Token 199: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -2.2200749754119897e-06
    2. 'Sequence' → logprob: -13.500001907348633
    3. '_upper' → logprob: -15.250001907348633
    4. 'sequence' → logprob: -15.500001907348633
    5. '_SEQUENCE' → logprob: -16.000001907348633
    6. '_sequences' → logprob: -16.750001907348633
    7. '[' → logprob: -16.875001907348633
    8. '```' → logprob: -18.250001907348633
    9. '_lower' → logprob: -18.625001907348633
    10. '[_' → logprob: -18.875001907348633

Token 200: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -3.4121114822482923e-06
    2. '[' → logprob: -13.500003814697266
    3. '[ind' → logprob: -14.250003814697266
    4. '[in' → logprob: -14.375003814697266
    5. '[Index' → logprob: -15.375003814697266
    6. '[int' → logprob: -15.750003814697266
    7. 'index' → logprob: -16.000003814697266
    8. '[idx' → logprob: -16.250003814697266
    9. '=index' → logprob: -16.500003814697266
    10. '[len' → logprob: -16.875003814697266

Token 201: '_upper' (ID: 82658)
  Prédit: '_upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_upper' → logprob: -8.721228368813172e-05
    2. '_lower' → logprob: -9.375086784362793
    3. 'Upper' → logprob: -14.375086784362793
    4. 'upper' → logprob: -14.375086784362793
    5. ']' → logprob: -14.750086784362793
    6. '[' → logprob: -15.125086784362793
    7. '_' → logprob: -15.750086784362793
    8. '_]' → logprob: -16.87508773803711
    9. ']_' → logprob: -16.87508773803711
    10. '   ' → logprob: -17.12508773803711

Token 202: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6619221568107605
    2. ']' → logprob: -0.7869221568107605
    3. ' =' → logprob: -3.9119222164154053
    4. ']=' → logprob: -4.786921977996826
    5. '=index' → logprob: -7.661921977996826
    6. ' ]' → logprob: -10.661922454833984
    7. '+' → logprob: -10.911922454833984
    8. ')' → logprob: -11.036922454833984
    9. '-' → logprob: -11.286922454833984
    10. '   ' → logprob: -12.286922454833984

Token 203: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006716674659401178
    2. ' =' → logprob: -5.006716728210449
    3. '=index' → logprob: -13.88171672821045
    4. '=

' → logprob: -15.63171672821045
    5. ')' → logprob: -16.506715774536133
    6. '=
' → logprob: -17.256715774536133
    7. '=}' → logprob: -17.631715774536133
    8. '=int' → logprob: -17.631715774536133
    9. ']=' → logprob: -17.881715774536133
    10. ']' → logprob: -18.006715774536133

Token 204: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -5.097437315271236e-05
    2. ' index' → logprob: -10.00005054473877
    3. '-' → logprob: -13.12505054473877
    4. 'sequence' → logprob: -14.00005054473877
    5. '(index' → logprob: -14.37505054473877
    6. '   ' → logprob: -14.87505054473877
    7. '[index' → logprob: -15.12505054473877
    8. '#index' → logprob: -15.37505054473877
    9. '0' → logprob: -15.50005054473877
    10. '=index' → logprob: -15.87505054473877

Token 205: '_upper' (ID: 82658)
  Prédit: '_upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_upper' → logprob: -4.008129963040119e-06
    2. '_lower' → logprob: -12.875003814697266
    3. 'upper' → logprob: -13.750003814697266
    4. 'Upper' → logprob: -15.125003814697266
    5. '```' → logprob: -16.750003814697266
    6. '_index' → logprob: -18.750003814697266
    7. '-upper' → logprob: -19.375003814697266
    8. '_up' → logprob: -19.500003814697266
    9. '.upper' → logprob: -19.500003814697266
    10. '[' → logprob: -19.500003814697266

Token 206: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02091483771800995
    2. '
' → logprob: -4.2709150314331055
    3. '   ' → logprob: -5.1459150314331055
    4. '<|end|>' → logprob: -7.6459150314331055
    5. 'result' → logprob: -8.020915031433105
    6. '           ' → logprob: -10.895915031433105
    7. '        
' → logprob: -11.020915031433105
    8. '```' → logprob: -11.270915031433105
    9. ' result' → logprob: -12.020915031433105
    10. ' ' → logprob: -12.145915031433105

Token 207: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.113895483314991
    2. '   ' → logprob: -2.2388954162597656
    3. 'result' → logprob: -7.238895416259766
    4. '
' → logprob: -8.488895416259766
    5. '           ' → logprob: -10.488895416259766
    6. '```' → logprob: -10.488895416259766
    7. '<|end|>' → logprob: -10.738895416259766
    8. ' result' → logprob: -10.988895416259766
    9. '        
' → logprob: -11.738895416259766
    10. '    ' → logprob: -11.988895416259766

Token 208: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -3.452426608419046e-05
    2. '   ' → logprob: -10.87503433227539
    3. '-result' → logprob: -11.75003433227539
    4. '       ' → logprob: -12.37503433227539
    5. '-' → logprob: -13.62503433227539
    6. ' result' → logprob: -14.00003433227539
    7. '
' → logprob: -14.62503433227539
    8. 'sequence' → logprob: -15.12503433227539
    9. '	result' → logprob: -15.50003433227539
    10. '     ' → logprob: -16.50003433227539

Token 209: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -9.088346359931165e-07
    2. '[-' → logprob: -15.375000953674316
    3. 'sequence' → logprob: -15.375000953674316
    4. '_upper' → logprob: -16.375
    5. '```' → logprob: -16.625
    6. '_sequences' → logprob: -16.875
    7. '_SEQUENCE' → logprob: -16.875
    8. 'Sequence' → logprob: -17.25
    9. '[_' → logprob: -17.5
    10. '_lower' → logprob: -17.5

Token 210: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -2.0219828002154827e-05
    2. '[' → logprob: -11.000020027160645
    3. '-' → logprob: -13.125020027160645
    4. '[index' → logprob: -14.875020027160645
    5. '
' → logprob: -15.250020027160645
    6. '```' → logprob: -15.500020027160645
    7. '-index' → logprob: -16.00002098083496
    8. ' [-' → logprob: -16.37502098083496
    9. '-[' → logprob: -16.37502098083496
    10. '[len' → logprob: -16.87502098083496

Token 211: 'index' (ID: 2257)
  Prédit: 'index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.00013250234769657254
    2. '(index' → logprob: -9.50013256072998
    3. ' index' → logprob: -9.87513256072998
    4. '(' → logprob: -12.50013256072998
    5. '1' → logprob: -13.37513256072998
    6. ' (' → logprob: -15.12513256072998
    7. '   ' → logprob: -15.87513256072998
    8. ' ' → logprob: -16.375131607055664
    9. '[index' → logprob: -16.375131607055664
    10. '#index' → logprob: -16.500131607055664

Token 212: '_upper' (ID: 82658)
  Prédit: '_upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_upper' → logprob: -5.919942486798391e-05
    2. 'upper' → logprob: -9.750059127807617
    3. 'Upper' → logprob: -14.500059127807617
    4. '_lower' → logprob: -15.625059127807617
    5. '```' → logprob: -16.250059127807617
    6. '<|end|>' → logprob: -17.000059127807617
    7. ' upper' → logprob: -17.500059127807617
    8. '_' → logprob: -18.500059127807617
    9. ' верх' → logprob: -18.750059127807617
    10. '_index' → logprob: -18.750059127807617

Token 213: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008427457883954048
    2. '=' → logprob: -5.508427619934082
    3. ']=' → logprob: -6.133427619934082
    4. ' ]' → logprob: -6.883427619934082
    5. '-' → logprob: -7.508427619934082
    6. ' -' → logprob: -7.633427619934082
    7. ' =' → logprob: -9.258427619934082
    8. '<|end|>' → logprob: -11.883427619934082
    9. ')' → logprob: -12.258427619934082
    10. ']=-' → logprob: -13.133427619934082

Token 214: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14502069354057312
    2. ' =' → logprob: -2.0200207233428955
    3. ']' → logprob: -6.645020484924316
    4. '-' → logprob: -7.770020484924316
    5. ']=' → logprob: -7.770020484924316
    6. ' -' → logprob: -8.895020484924316
    7. '=-' → logprob: -10.520020484924316
    8. '<|end|>' → logprob: -11.895020484924316
    9. ' ]' → logprob: -12.270020484924316
    10. ')' → logprob: -12.395020484924316

Token 215: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.0007102862582542002
    2. ' index' → logprob: -7.250710487365723
    3. '[index' → logprob: -16.375709533691406
    4. '#index' → logprob: -16.375709533691406
    5. '=index' → logprob: -17.000709533691406
    6. '(index' → logprob: -17.125709533691406
    7. '/index' → logprob: -17.875709533691406
    8. '	index' → logprob: -17.875709533691406
    9. '.index' → logprob: -18.250709533691406
    10. ':index' → logprob: -18.250709533691406

Token 216: '_upper' (ID: 82658)
  Prédit: '_upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_upper' → logprob: -2.6656825866666622e-05
    2. 'upper' → logprob: -11.25002670288086
    3. 'index' → logprob: -11.62502670288086
    4. '_lower' → logprob: -13.00002670288086
    5. '_index' → logprob: -13.87502670288086
    6. 'Upper' → logprob: -14.00002670288086
    7. '```' → logprob: -15.00002670288086
    8. '_up' → logprob: -15.25002670288086
    9. ' Upper' → logprob: -18.00002670288086
    10. '[index' → logprob: -18.12502670288086

Token 217: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013705735094845295
    2. '<|end|>' → logprob: -4.388705730438232
    3. 'print' → logprob: -7.638705730438232
    4. '
' → logprob: -8.13870620727539
    5. '```' → logprob: -8.76370620727539
    6. ')' → logprob: -9.63870620727539
    7. ' print' → logprob: -10.01370620727539
    8. '<|end|>' → logprob: -10.01370620727539
    9. '    
' → logprob: -10.26370620727539
    10. '       ' → logprob: -10.76370620727539

Token 218: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008180848672054708
    2. 'print' → logprob: -7.500818252563477
    3. '<|end|>' → logprob: -8.625818252563477
    4. ' print' → logprob: -9.625818252563477
    5. '```' → logprob: -11.500818252563477
    6. '       ' → logprob: -12.500818252563477
    7. ')' → logprob: -13.875818252563477
    8. 'return' → logprob: -13.875818252563477
    9. '
' → logprob: -14.000818252563477
    10. ' return' → logprob: -14.250818252563477

Token 219: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.023752475157380104
    2. '   ' → logprob: -3.773752450942993
    3. ' print' → logprob: -7.648752689361572
    4. 'return' → logprob: -11.273752212524414
    5. 'for' → logprob: -11.523752212524414
    6. '```' → logprob: -13.148752212524414
    7. '#print' → logprob: -13.523752212524414
    8. ')' → logprob: -13.648752212524414
    9. '	print' → logprob: -14.523752212524414
    10. '    
' → logprob: -14.648752212524414

Token 220: '('' (ID: 706)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.44115394353866577
    2. '(' → logprob: -1.1911540031433105
    3. '('' → logprob: -2.9411540031433105
    4. '("' → logprob: -11.441153526306152
    5. '(*)' → logprob: -11.941153526306152
    6. '(*(' → logprob: -12.191153526306152
    7. '(
' → logprob: -12.441153526306152
    8. ' (*' → logprob: -13.816153526306152
    9. '(result' → logprob: -13.941153526306152
    10. '(len' → logprob: -14.066153526306152

Token 221: ' '.' (ID: 12662)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0054071154445409775
    2. '*' → logprob: -5.255407333374023
    3. '"' → logprob: -8.755407333374023
    4. '(*' → logprob: -12.880407333374023
    5. '('' → logprob: -12.880407333374023
    6. ''end' → logprob: -13.005407333374023
    7. '0' → logprob: -13.380407333374023
    8. ''*' → logprob: -13.505407333374023
    9. ')' → logprob: -14.005407333374023
    10. ' '' → logprob: -14.630407333374023

Token 222: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.8624639324116288e-06
    2. 'jo' → logprob: -14.000001907348633
    3. ' join' → logprob: -14.500001907348633
    4. 'j' → logprob: -15.500001907348633
    5. 'print' → logprob: -16.375001907348633
    6. '```' → logprob: -16.500001907348633
    7. 'strip' → logprob: -17.875001907348633
    8. '.' → logprob: -18.125001907348633
    9. '.join' → logprob: -18.250001907348633
    10. ')' → logprob: -18.750001907348633

Token 223: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00019245444855187088
    2. 'map' → logprob: -9.250192642211914
    3. '(str' → logprob: -9.250192642211914
    4. ' map' → logprob: -15.250192642211914
    5. 'str' → logprob: -17.500192642211914
    6. '	map' → logprob: -18.250192642211914
    7. ',map' → logprob: -18.625192642211914
    8. '.map' → logprob: -19.000192642211914
    9. '(' → logprob: -19.250192642211914
    10. '_map' → logprob: -20.375192642211914

Token 224: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.00019209683523513377
    2. '(int' → logprob: -9.500191688537598
    3. 'str' → logprob: -9.750191688537598
    4. '(' → logprob: -10.250191688537598
    5. ' str' → logprob: -10.750191688537598
    6. '=str' → logprob: -13.875191688537598
    7. '(
' → logprob: -15.125191688537598
    8. '[str' → logprob: -15.250191688537598
    9. ',str' → logprob: -15.375191688537598
    10. ')' → logprob: -16.375192642211914

Token 225: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.813101053237915
    2. ',result' → logprob: -1.063101053237915
    3. '(result' → logprob: -1.563101053237915
    4. '(' → logprob: -6.813100814819336
    5. 'result' → logprob: -7.813100814819336
    6. ' ,' → logprob: -9.813100814819336
    7. ' (' → logprob: -10.063100814819336
    8. ',(' → logprob: -10.688100814819336
    9. '   ' → logprob: -11.688100814819336
    10. ' result' → logprob: -12.813100814819336

Token 226: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.048587486147880554
    2. ' result' → logprob: -3.0485875606536865
    3. '(result' → logprob: -16.298587799072266
    4. '   ' → logprob: -17.173587799072266
    5. '	result' → logprob: -18.673587799072266
    6. ',result' → logprob: -18.923587799072266
    7. '[result' → logprob: -19.798587799072266
    8. '=result' → logprob: -19.798587799072266
    9. '$result' → logprob: -20.673587799072266
    10. '_result' → logprob: -21.298587799072266

Token 227: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: 0.0
    2. 'sequence' → logprob: -17.375
    3. '_sequences' → logprob: -18.25
    4. '_SEQUENCE' → logprob: -20.25
    5. '_seq' → logprob: -21.0
    6. 'Sequence' → logprob: -21.375
    7. ' sequence' → logprob: -21.75
    8. '))' → logprob: -22.0
    9. ')' → logprob: -23.0
    10. '(sequence' → logprob: -23.25

Token 228: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.6934733390808105
    2. ')))' → logprob: -0.6934733390808105
    3. ')' → logprob: -8.068473815917969
    4. '))))' → logprob: -11.693473815917969
    5. ')))
' → logprob: -13.818473815917969
    6. '))
' → logprob: -13.818473815917969
    7. '[' → logprob: -14.318473815917969
    8. '   ' → logprob: -14.693473815917969
    9. ']))' → logprob: -14.693473815917969
    10. ' ' → logprob: -15.193473815917969

Token 229: 'process' (ID: 9139)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 230: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -1.1160349458805285e-05
    2. '_' → logprob: -11.500011444091797
    3. '_process' → logprob: -14.875011444091797
    4. '_sequences' → logprob: -15.250011444091797
    5. '_seq' → logprob: -15.375011444091797
    6. 'sequence' → logprob: -17.000011444091797
    7. '_SEQUENCE' → logprob: -17.625011444091797
    8. '_s' → logprob: -18.125011444091797
    9. 'Sequence' → logprob: -18.125011444091797
    10. ' sequence' → logprob: -18.250011444091797

Token 231: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.6087021473795176e-05
    2. '(' → logprob: -10.375045776367188
    3. '()
' → logprob: -13.000045776367188
    4. '()">' → logprob: -13.125045776367188
    5. '()]' → logprob: -13.375045776367188
    6. '()`' → logprob: -13.625045776367188
    7. '().' → logprob: -13.875045776367188
    8. '()>' → logprob: -13.875045776367188
    9. '();' → logprob: -14.125045776367188
    10. '()

' → logprob: -14.250045776367188


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 229
Tokens correctement prédits (1ère position, stricte): 115
Tokens correctement prédits (1ère position, avec adaptation): 123
Tokens correctement prédits (top 10): 210
Précision stricte (1ère position): 50.22%
Précision adaptée (1ère position): 53.71%
Précision (top 10): 91.70%
================================================================================
