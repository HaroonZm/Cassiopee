================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:04:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce

S = input()

def is_ATGC(ch):
    return ch in ['A', 'G', 'C', 'T']

result = 0
tmp = 0

for idx, ch in enumerate(S):
    if is_ATGC(ch):
        tmp += 1
    else:
        result = tmp if tmp > result else result
        tmp = 0
else:
    result = max(result, tmp)

print((lambda x: x)(result))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.21745960414409637
    2. 'partial' → logprob: -1.9674595594406128
    3. ' wraps' → logprob: -3.3424596786499023
    4. 'reduce' → logprob: -4.092459678649902
    5. ' partial' → logprob: -6.342459678649902
    6. 'l' → logprob: -6.717459678649902
    7. ' l' → logprob: -8.842459678649902
    8. '```' → logprob: -9.217459678649902
    9. 'cache' → logprob: -9.342459678649902
    10. 'cached' → logprob: -9.592459678649902

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010317044332623482
    2. '(lambda' → logprob: -4.760316848754883
    3. ' (' → logprob: -7.385316848754883
    4. ',' → logprob: -7.885316848754883
    5. 'def' → logprob: -8.135316848754883
    6. '.' → logprob: -8.635316848754883
    7. '```' → logprob: -10.135316848754883
    8. '(
' → logprob: -10.385316848754883
    9. 'lambda' → logprob: -10.635316848754883
    10. ' ' → logprob: -10.760316848754883

Token 5: 'S' (ID: 50)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011698059737682343
    2. '(lambda' → logprob: -4.761698246002197
    3. '.' → logprob: -6.886698246002197
    4. '```' → logprob: -7.261698246002197
    5. ',' → logprob: -7.886698246002197
    6. '(
' → logprob: -8.261697769165039
    7. '\' → logprob: -8.511697769165039
    8. 'def' → logprob: -8.636697769165039
    9. '\(' → logprob: -8.886697769165039
    10. ' (' → logprob: -10.011697769165039

Token 6: ' =' (ID: 314)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.8740198016166687
    2. 'e' → logprob: -1.3740198612213135
    3. 'Q' → logprob: -1.8740198612213135
    4. '=' → logprob: -2.3740198612213135
    5. ' =' → logprob: -3.8740198612213135
    6. 'u' → logprob: -5.124019622802734
    7. 'um' → logprob: -5.124019622802734
    8. 'et' → logprob: -5.249019622802734
    9. 'q' → logprob: -5.374019622802734
    10. ')' → logprob: -5.374019622802734

Token 7: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1826815605163574
    2. ' [' → logprob: -1.4326815605163574
    3. ' "' → logprob: -1.8076815605163574
    4. ' []' → logprob: -2.5576815605163574
    5. '"' → logprob: -3.0576815605163574
    6. ' '' → logprob: -3.0576815605163574
    7. '[' → logprob: -3.3076815605163574
    8. '0' → logprob: -4.182681560516357
    9. ''' → logprob: -4.307681560516357
    10. ' lambda' → logprob: -4.682681560516357

Token 8: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004166105354670435
    2. '```' → logprob: -9.50041675567627
    3. '('' → logprob: -9.62541675567627
    4. ')' → logprob: -10.00041675567627
    5. '("("' → logprob: -10.00041675567627
    6. '`' → logprob: -10.00041675567627
    7. '(
' → logprob: -10.25041675567627
    8. ''' → logprob: -10.37541675567627
    9. '()' → logprob: -11.12541675567627
    10. '("")' → logprob: -11.62541675567627

Token 9: 'def' (ID: 1314)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.11330949515104294
    2. '.' → logprob: -3.488309383392334
    3. 'count' → logprob: -4.238309383392334
    4. 'res' → logprob: -4.363309383392334
    5. 'words' → logprob: -4.363309383392334
    6. 'chars' → logprob: -5.363309383392334
    7. 's' → logprob: -5.363309383392334
    8. 'print' → logprob: -5.738309383392334
    9. 'r' → logprob: -5.988309383392334
    10. 'counts' → logprob: -5.988309383392334

Token 10: ' is' (ID: 382)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19391503930091858
    2. ' factorial' → logprob: -2.5689151287078857
    3. ' reduce' → logprob: -3.5689151287078857
    4. '_' → logprob: -4.068914890289307
    5. ' longest' → logprob: -5.193914890289307
    6. ' f' → logprob: -5.443914890289307
    7. ' add' → logprob: -5.693914890289307
    8. ' my' → logprob: -5.818914890289307
    9. ' string' → logprob: -5.943914890289307
    10. ' max' → logprob: -5.943914890289307

Token 11: '_AT' (ID: 18239)
  Prédit: '_pal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pal' → logprob: -0.31392407417297363
    2. '_' → logprob: -1.5639240741729736
    3. ' _' → logprob: -3.4389240741729736
    4. '_valid' → logprob: -4.8139238357543945
    5. '_prime' → logprob: -4.8139238357543945
    6. '_p' → logprob: -5.8139238357543945
    7. ' ' → logprob: -6.8139238357543945
    8. '_v' → logprob: -7.0639238357543945
    9. '_space' → logprob: -7.4389238357543945
    10. '_s' → logprob: -7.5639238357543945

Token 12: 'GC' (ID: 30190)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.0018831811612471938
    2. 'S' → logprob: -7.376883029937744
    3. 'C' → logprob: -7.751883029937744
    4. 'P' → logprob: -8.251883506774902
    5. 'GC' → logprob: -9.001883506774902
    6. 'R' → logprob: -9.376883506774902
    7. '(s' → logprob: -9.626883506774902
    8. '_G' → logprob: -9.751883506774902
    9. '(G' → logprob: -10.376883506774902
    10. '_content' → logprob: -10.501883506774902

Token 13: '(ch' (ID: 15574)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7798354625701904
    2. '(' → logprob: -1.4048354625701904
    3. '(char' → logprob: -2.4048354625701904
    4. '_char' → logprob: -3.2798354625701904
    5. 'char' → logprob: -4.1548357009887695
    6. 'N' → logprob: -4.1548357009887695
    7. ')' → logprob: -4.2798357009887695
    8. '(n' → logprob: -4.2798357009887695
    9. '_sequence' → logprob: -4.4048357009887695
    10. 'A' → logprob: -4.7798357009887695

Token 14: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05560388043522835
    2. ')' → logprob: -2.9306039810180664
    3. 'a' → logprob: -8.430603981018066
    4. '):
' → logprob: -8.555603981018066
    5. '=' → logprob: -9.305603981018066
    6. 'A' → logprob: -9.305603981018066
    7. 's' → logprob: -10.680603981018066
    8. ' ):' → logprob: -10.930603981018066
    9. ':' → logprob: -11.305603981018066
    10. '):

' → logprob: -11.680603981018066

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06579679995775223
    2. ' return' → logprob: -3.9407968521118164
    3. '(' → logprob: -4.315796852111816
    4. ':' → logprob: -4.815796852111816
    5. ' ' → logprob: -4.815796852111816
    6. 'return' → logprob: -4.940796852111816
    7. ':return' → logprob: -6.065796852111816
    8. ')' → logprob: -6.690796852111816
    9. ' (' → logprob: -7.065796852111816
    10. '(ch' → logprob: -7.190796852111816

Token 16: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.39345526695251465
    2. 'return' (adapté à ' return') → logprob: -1.1434552669525146
    3. '   ' → logprob: -5.893455505371094
    4. ' ch' → logprob: -5.893455505371094
    5. 'ch' → logprob: -7.018455505371094
    6. ' ' → logprob: -8.893455505371094
    7. '  ' → logprob: -12.893455505371094
    8. '	return' → logprob: -13.018455505371094
    9. 's' → logprob: -13.268455505371094
    10. '{return' → logprob: -13.268455505371094

Token 17: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.38687458634376526
    2. ' ch' → logprob: -1.1368745565414429
    3. '(ch' → logprob: -12.761874198913574
    4. '	ch' → logprob: -14.761874198913574
    5. ' ' → logprob: -15.761874198913574
    6. ' ' → logprob: -16.26187515258789
    7. 'c' → logprob: -17.13687515258789
    8. 'Ch' → logprob: -17.26187515258789
    9. '```' → logprob: -17.26187515258789
    10. 'True' → logprob: -17.38687515258789

Token 18: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020841402933001518
    2. 'in' → logprob: -3.895841360092163
    3. ' ' → logprob: -8.270841598510742
    4. '  ' → logprob: -11.645841598510742
    5. '.' → logprob: -12.145841598510742
    6. ')' → logprob: -12.270841598510742
    7. '   ' → logprob: -12.395841598510742
    8. ' i' → logprob: -12.520841598510742
    9. '==' → logprob: -12.770841598510742
    10. 'n' → logprob: -13.020841598510742

Token 19: ' ['' (ID: 5140)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.30917468667030334
    2. '"' → logprob: -2.0591747760772705
    3. '"AT' → logprob: -2.0591747760772705
    4. ' '' → logprob: -4.934174537658691
    5. ' "' → logprob: -5.934174537658691
    6. '{'' → logprob: -7.184174537658691
    7. ' {'' → logprob: -9.684174537658691
    8. '['' → logprob: -9.809174537658691
    9. ''A' → logprob: -10.184174537658691
    10. '('' → logprob: -10.809174537658691

Token 20: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.01612997241318226
    2. ''A' → logprob: -4.141129970550537
    3. ''' → logprob: -9.391130447387695
    4. '"A' → logprob: -12.016130447387695
    5. ' A' → logprob: -13.266130447387695
    6. 'AT' → logprob: -13.641130447387695
    7. '{'' → logprob: -14.016130447387695
    8. '’A' → logprob: -14.391130447387695
    9. '\'' → logprob: -15.141130447387695
    10. ''a' → logprob: -15.516130447387695

Token 21: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.5481774210929871
    2. 'T' → logprob: -1.0481774806976318
    3. '','' → logprob: -2.923177480697632
    4. ',' → logprob: -4.673177242279053
    5. ''T' → logprob: -5.548177242279053
    6. ''' → logprob: -5.673177242279053
    7. ',T' → logprob: -7.048177242279053
    8. ','' → logprob: -9.798177719116211
    9. ' T' → logprob: -10.798177719116211
    10. ' ',' → logprob: -10.923177719116211

Token 22: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8756966590881348
    2. ''T' → logprob: -1.3756966590881348
    3. ' '' → logprob: -1.3756966590881348
    4. 'T' → logprob: -3.1256966590881348
    5. ' T' → logprob: -3.5006966590881348
    6. ' ' → logprob: -5.875696659088135
    7. ''t' → logprob: -7.875696659088135
    8. '"T' → logprob: -8.250696182250977
    9. '"' → logprob: -8.625696182250977
    10. '   ' → logprob: -9.500696182250977

Token 23: 'G' (ID: 38)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -8.864272967912257e-05
    2. 'G' → logprob: -10.375088691711426
    3. ' T' → logprob: -11.000088691711426
    4. ''' → logprob: -11.125088691711426
    5. ''T' → logprob: -11.625088691711426
    6. 'C' → logprob: -12.250088691711426
    7. 'TG' → logprob: -13.187588691711426
    8. 'Т' → logprob: -13.312588691711426
    9. ' ' → logprob: -13.437588691711426
    10. '"T' → logprob: -14.062588691711426

Token 24: '',' (ID: 787)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.21784864366054535
    2. 'C' → logprob: -2.217848539352417
    3. '',' → logprob: -2.467848539352417
    4. ',' → logprob: -6.967848777770996
    5. '','' → logprob: -7.467848777770996
    6. ''' → logprob: -8.342848777770996
    7. ''T' → logprob: -8.967848777770996
    8. ''C' → logprob: -9.092848777770996
    9. ','' → logprob: -10.342848777770996
    10. ',T' → logprob: -10.717848777770996

Token 25: ' '' (ID: 461)
  Prédit: ''T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''T' → logprob: -0.6304885745048523
    2. ' '' → logprob: -0.8804885745048523
    3. ''C' → logprob: -3.505488634109497
    4. ''' → logprob: -3.880488634109497
    5. ' ' → logprob: -6.505488395690918
    6. 'T' → logprob: -7.880488395690918
    7. ' T' → logprob: -8.255488395690918
    8. '  ' → logprob: -9.255488395690918
    9. '   ' → logprob: -9.755488395690918
    10. ''t' → logprob: -10.130488395690918

Token 26: 'C' (ID: 34)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.002814505249261856
    2. 'C' → logprob: -5.877814292907715
    3. ' T' → logprob: -11.877814292907715
    4. ''T' → logprob: -14.127814292907715
    5. 'TC' → logprob: -14.252814292907715
    6. 'Т' → logprob: -14.752814292907715
    7. ''' → logprob: -14.752814292907715
    8. ''C' → logprob: -15.502814292907715
    9. '

' → logprob: -16.37781524658203
    10. 'G' → logprob: -16.50281524658203

Token 27: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.038950320333242416
    2. 'T' → logprob: -3.413950204849243
    3. ''T' → logprob: -5.913950443267822
    4. ',' → logprob: -6.663950443267822
    5. '','' → logprob: -7.288950443267822
    6. ''' → logprob: -7.538950443267822
    7. ','' → logprob: -9.913949966430664
    8. ',T' → logprob: -10.663949966430664
    9. ''',' → logprob: -11.163949966430664
    10. ' T' → logprob: -12.913949966430664

Token 28: ' '' (ID: 461)
  Prédit: ''T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''T' → logprob: -0.027726346626877785
    2. ' '' → logprob: -4.277726173400879
    3. 'T' → logprob: -4.652726173400879
    4. ''' → logprob: -6.652726173400879
    5. ' T' → logprob: -6.652726173400879
    6. ' ' → logprob: -7.152726173400879
    7. ''t' → logprob: -7.652726173400879
    8. '   ' → logprob: -10.152726173400879
    9. '  ' → logprob: -10.902726173400879
    10. '"T' → logprob: -11.402726173400879

Token 29: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -5.264322317088954e-05
    2. ''T' → logprob: -10.125052452087402
    3. ' T' → logprob: -12.125052452087402
    4. ''' → logprob: -12.250052452087402
    5. 'Т' → logprob: -14.000052452087402
    6. '"T' → logprob: -14.625052452087402
    7. '```' → logprob: -15.250052452087402
    8. '	T' → logprob: -16.00005340576172
    9. '
' → logprob: -16.68755340576172
    10. '']' → logprob: -16.75005340576172

Token 30: '']

' (ID: 36979)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -3.440506407059729e-05
    2. ']' → logprob: -10.37503433227539
    3. ''' → logprob: -13.50003433227539
    4. ''])' → logprob: -14.25003433227539
    5. '"]' → logprob: -14.75003433227539
    6. '')' → logprob: -15.25003433227539
    7. '']
' → logprob: -15.87503433227539
    8. ')' → logprob: -16.12503433227539
    9. '']

' → logprob: -16.25003433227539
    10. ' ']' → logprob: -16.25003433227539

Token 31: 'result' (ID: 2521)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11490490287542343
    2. '_' → logprob: -3.1149048805236816
    3. 'def' → logprob: -3.2399048805236816
    4. '.' → logprob: -4.489904880523682
    5. 'if' → logprob: -6.239904880523682
    6. ':
' → logprob: -6.364904880523682
    7. '\' → logprob: -6.864904880523682
    8. '```' → logprob: -6.989904880523682
    9. '[' → logprob: -7.114904880523682
    10. ')' → logprob: -7.114904880523682

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43143850564956665
    2. '=' → logprob: -1.0564384460449219
    3. '_' → logprob: -6.056438446044922
    4. '(' → logprob: -8.931438446044922
    5. 's' → logprob: -9.306438446044922
    6. '[' → logprob: -9.556438446044922
    7. '.' → logprob: -11.056438446044922
    8. ')' → logprob: -11.056438446044922
    9. ' ' → logprob: -11.556438446044922
    10. '[]' → logprob: -11.681438446044922

Token 33: ' ' (ID: 220)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.044806428253650665
    2. ' reduce' → logprob: -3.169806480407715
    3. 'list' → logprob: -7.419806480407715
    4. ' list' → logprob: -7.669806480407715
    5. ' ''.' → logprob: -8.419806480407715
    6. '''.' → logprob: -8.544806480407715
    7. 're' → logprob: -9.794806480407715
    8. '[' → logprob: -9.919806480407715
    9. '''' → logprob: -10.044806480407715
    10. '[]' → logprob: -10.544806480407715

Token 34: '0' (ID: 15)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.0013095251051709056
    2. 'list' → logprob: -7.126309394836426
    3. 'all' → logprob: -8.251309394836426
    4. ' reduce' → logprob: -8.876309394836426
    5. '''.' → logprob: -9.626309394836426
    6. 'filter' → logprob: -11.001309394836426
    7. '[' → logprob: -12.501309394836426
    8. 'len' → logprob: -12.751309394836426
    9. ' ''.' → logprob: -12.876309394836426
    10. 're' → logprob: -12.876309394836426

Token 35: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24514208734035492
    2. '
' → logprob: -2.2451419830322266
    3. '<|end|>' → logprob: -2.6201419830322266
    4. ' for' → logprob: -3.3701419830322266
    5. '\n' → logprob: -6.495141983032227
    6. '<|end|>' → logprob: -7.120141983032227
    7. '```' → logprob: -7.745141983032227
    8. '+' → logprob: -8.120141983032227
    9. '' → logprob: -8.370141983032227
    10. '\' → logprob: -8.370141983032227

Token 36: 'tmp' (ID: 11669)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06785651296377182
    2. ' for' → logprob: -2.942856550216675
    3. '\n' → logprob: -5.442856311798096
    4. '```' → logprob: -5.567856311798096
    5. '
' → logprob: -5.942856311798096
    6. 'i' → logprob: -7.192856311798096
    7. '+' → logprob: -8.317856788635254
    8. '\' → logprob: -8.442856788635254
    9. ':' → logprob: -8.817856788635254
    10. 'if' → logprob: -8.817856788635254

Token 37: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10116081684827805
    2. '=' → logprob: -3.226160764694214
    3. ' =' → logprob: -3.226160764694214
    4. ' _' → logprob: -4.851161003112793
    5. ' +=' → logprob: -5.351161003112793
    6. ' ' → logprob: -6.226161003112793
    7. '_=' → logprob: -6.976161003112793
    8. '+=' → logprob: -8.226161003112793
    9. '+' → logprob: -8.726161003112793
    10. '<|end|>' → logprob: -9.601161003112793

Token 38: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1338750720024109
    2. ' ' → logprob: -2.1338751316070557
    3. '1' → logprob: -5.758874893188477
    4. '""' → logprob: -6.758874893188477
    5. '''' → logprob: -6.883874893188477
    6. ' ''' → logprob: -7.258874893188477
    7. ' []' → logprob: -7.883874893188477
    8. ' ""' → logprob: -8.633874893188477
    9. '[]' → logprob: -9.008874893188477
    10. '"' → logprob: -9.258874893188477

Token 39: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1320963203907013
    2. '''' → logprob: -2.507096290588379
    3. '""' → logprob: -3.257096290588379
    4. '[]' → logprob: -5.757096290588379
    5. '1' → logprob: -8.382096290588379
    6. '"' → logprob: -8.632096290588379
    7. ' ' → logprob: -10.132096290588379
    8. ''' → logprob: -10.257096290588379
    9. '-' → logprob: -11.257096290588379
    10. '[' → logprob: -11.257096290588379

Token 40: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4493340253829956
    2. '\n' → logprob: -1.1993340253829956
    3. '
' → logprob: -2.949334144592285
    4. ' for' → logprob: -4.949334144592285
    5. '\' → logprob: -7.449334144592285
    6. '```' → logprob: -8.074334144592285
    7. '<|end|>' → logprob: -9.949334144592285
    8. 'newline' → logprob: -10.324334144592285
    9. '\r' → logprob: -10.574334144592285
    10. 'i' → logprob: -10.699334144592285

Token 41: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.44706009957008e-05
    2. ' for' → logprob: -9.50008487701416
    3. '```' → logprob: -12.12508487701416
    4. '
' → logprob: -13.12508487701416
    5. '\n' → logprob: -13.12508487701416
    6. '\' → logprob: -16.625083923339844
    7. '	for' → logprob: -17.375083923339844
    8. 'For' → logprob: -18.500083923339844
    9. 'i' → logprob: -18.750083923339844
    10. 'n' → logprob: -18.875083923339844

Token 42: ' idx' (ID: 14016)
  Prédit: ' ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.0754646360874176
    2. 'ch' → logprob: -2.7004647254943848
    3. ' i' → logprob: -5.700464725494385
    4. ' c' → logprob: -6.325464725494385
    5. 'c' → logprob: -8.700464248657227
    6. 'i' → logprob: -8.825464248657227
    7. ' s' → logprob: -10.575464248657227
    8. ' char' → logprob: -11.450464248657227
    9. 's' → logprob: -11.575464248657227
    10. ' ' → logprob: -11.700464248657227

Token 43: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0349261648952961
    2. 'in' → logprob: -3.534926176071167
    3. ' ' → logprob: -5.909925937652588
    4. ',' → logprob: -6.159925937652588
    5. ' ,' → logprob: -8.034926414489746
    6. '```' → logprob: -12.284926414489746
    7. ',in' → logprob: -13.159926414489746
    8. '  ' → logprob: -13.284926414489746
    9. '	in' → logprob: -14.284926414489746
    10. '+' → logprob: -14.409926414489746

Token 44: ' ch' (ID: 549)
  Prédit: ' ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.3869280219078064
    2. 'ch' → logprob: -1.1369280815124512
    3. ' c' → logprob: -10.511927604675293
    4. 'c' → logprob: -10.636927604675293
    5. ' char' → logprob: -13.011927604675293
    6. 'char' → logprob: -13.136927604675293
    7. '```' → logprob: -14.761927604675293
    8. ' s' → logprob: -15.136927604675293
    9. '	ch' → logprob: -15.136927604675293
    10. ' ' → logprob: -15.386927604675293

Token 45: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03365987911820412
    2. 'in' → logprob: -3.4086599349975586
    3. ' ' → logprob: -12.283659934997559
    4. ',' → logprob: -12.408659934997559
    5. '	in' → logprob: -13.408659934997559
    6. '<|end|>' → logprob: -14.033659934997559
    7. ')' → logprob: -14.408659934997559
    8. '```' → logprob: -14.533659934997559
    9. ' ,' → logprob: -15.221159934997559
    10. 'import' → logprob: -15.471159934997559

Token 46: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.06197473779320717
    2. ' enumerate' → logprob: -2.8119747638702393
    3. '```' → logprob: -12.68697452545166
    4. 'en' → logprob: -13.43697452545166
    5. '(en' → logprob: -13.56197452545166
    6. 'enum' → logprob: -14.18697452545166
    7. ' ' → logprob: -16.061975479125977
    8. 's' → logprob: -16.311975479125977
    9. 'em' → logprob: -16.936975479125977
    10. '.enumer' → logprob: -17.311975479125977

Token 47: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.05630546435713768
    2. '(' → logprob: -3.431305408477783
    3. ' (' → logprob: -3.806305408477783
    4. '(s' → logprob: -8.931305885314941
    5. ')' → logprob: -11.181305885314941
    6. ' S' → logprob: -11.431305885314941
    7. ' ' → logprob: -12.181305885314941
    8. 'S' → logprob: -12.556305885314941
    9. 's' → logprob: -13.181305885314941
    10. '(range' → logprob: -13.431305885314941

Token 48: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007493520388379693
    2. ' ):' → logprob: -7.875749588012695
    3. ':' → logprob: -8.500749588012695
    4. '):
' → logprob: -8.750749588012695
    5. '   ' → logprob: -13.000749588012695
    6. ')' → logprob: -13.000749588012695
    7. '):
' → logprob: -14.625749588012695
    8. ' :' → logprob: -14.750749588012695
    9. '():' → logprob: -14.750749588012695
    10. ',' → logprob: -14.875749588012695

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018609551712870598
    2. '```' → logprob: -5.018609523773193
    3. ':' → logprob: -5.268609523773193
    4. ' if' → logprob: -5.393609523773193
    5. '<|end|>' → logprob: -6.893609523773193
    6. ' ' → logprob: -7.393609523773193
    7. '    
' → logprob: -9.018610000610352
    8. ''s' → logprob: -9.268610000610352
    9. ',' → logprob: -9.768610000610352
    10. '<|end|>' → logprob: -9.893610000610352

Token 50: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7058412432670593
    2. ' if' → logprob: -0.7058412432670593
    3. 'if' (adapté à ' if') → logprob: -4.580841064453125
    4. '    ' → logprob: -7.205841064453125
    5. ' ' → logprob: -7.580841064453125
    6. '```' → logprob: -7.955841064453125
    7. '       ' → logprob: -8.080841064453125
    8. '    
' → logprob: -8.705841064453125
    9. '	if' → logprob: -9.080841064453125
    10. '<|end|>' → logprob: -9.205841064453125

Token 51: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.009809333831071854
    2. 'is' → logprob: -4.634809494018555
    3. ' ch' → logprob: -10.509809494018555
    4. 'ch' → logprob: -11.384809494018555
    5. ' not' → logprob: -11.384809494018555
    6. 'not' → logprob: -13.759809494018555
    7. ' ' → logprob: -14.134809494018555
    8. ' ' → logprob: -14.884809494018555
    9. '   ' → logprob: -14.884809494018555
    10. '(is' → logprob: -15.759809494018555

Token 52: '_AT' (ID: 18239)
  Prédit: '_AT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_AT' → logprob: -5.438573680294212e-06
    2. '_' → logprob: -12.375005722045898
    3. '_AG' → logprob: -15.000005722045898
    4. '_A' → logprob: -15.250005722045898
    5. '_OT' → logprob: -15.875005722045898
    6. ' _' → logprob: -16.0000057220459
    7. '_AN' → logprob: -16.5000057220459
    8. '_AV' → logprob: -16.6250057220459
    9. '_ATT' → logprob: -16.7500057220459
    10. '_T' → logprob: -17.6250057220459

Token 53: 'GC' (ID: 30190)
  Prédit: 'GC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'GC' → logprob: -0.000735177774913609
    2. 'G' → logprob: -7.250735282897949
    3. 'gc' → logprob: -11.25073528289795
    4. ' GC' → logprob: -12.37573528289795
    5. 'ch' → logprob: -13.12573528289795
    6. 'C' → logprob: -13.62573528289795
    7. ' ch' → logprob: -13.87573528289795
    8. 'Gc' → logprob: -14.00073528289795
    9. ''GC' → logprob: -14.12573528289795
    10. 'GP' → logprob: -14.37573528289795

Token 54: '(ch' (ID: 15574)
  Prédit: '(ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -9.567575034452602e-05
    2. '(' → logprob: -10.00009536743164
    3. ' (' → logprob: -10.12509536743164
    4. ')' → logprob: -12.37509536743164
    5. '(s' → logprob: -13.37509536743164
    6. 'ch' → logprob: -13.87509536743164
    7. ')(' → logprob: -14.12509536743164
    8. '(chr' → logprob: -14.25009536743164
    9. ' ' → logprob: -14.37509536743164
    10. '[ch' → logprob: -14.87509536743164

Token 55: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011961601674556732
    2. '):
' → logprob: -4.511961460113525
    3. ':' → logprob: -7.386961460113525
    4. ' ):' → logprob: -9.136961936950684
    5. '   ' → logprob: -9.261961936950684
    6. ')' → logprob: -9.511961936950684
    7. '():' → logprob: -12.761961936950684
    8. ' ' → logprob: -13.011961936950684
    9. '):
' → logprob: -13.136961936950684
    10. '):

' → logprob: -13.261961936950684

Token 56: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006677598226815462
    2. ':' → logprob: -5.131677627563477
    3. '   ' → logprob: -7.506677627563477
    4. '        
' → logprob: -10.256677627563477
    5. ' tmp' → logprob: -10.631677627563477
    6. '```' → logprob: -10.756677627563477
    7. '	' → logprob: -10.881677627563477
    8. 'tmp' → logprob: -11.131677627563477
    9. ':
' → logprob: -11.381677627563477
    10. '	tmp' → logprob: -11.881677627563477

Token 57: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.23240946233272552
    2. 'tmp' (adapté à ' tmp') → logprob: -1.6074094772338867
    3. '       ' → logprob: -5.107409477233887
    4. '   ' → logprob: -7.607409477233887
    5. '	tmp' → logprob: -8.232409477233887
    6. '/tmp' → logprob: -10.607409477233887
    7. '_tmp' → logprob: -10.607409477233887
    8. '           ' → logprob: -10.732409477233887
    9. '$tmp' → logprob: -10.732409477233887
    10. '[tmp' → logprob: -10.982409477233887

Token 58: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.07947581261396408
    2. '+=' → logprob: -2.5794758796691895
    3. ' =' → logprob: -8.079475402832031
    4. '=' → logprob: -8.204475402832031
    5. '+' → logprob: -13.204475402832031
    6. ']+=' → logprob: -14.954475402832031
    7. ' +' → logprob: -15.829475402832031
    8. ' ' → logprob: -15.829475402832031
    9. '+='' → logprob: -16.70447540283203
    10. ' ' → logprob: -17.20447540283203

Token 59: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '+' → logprob: -18.000015258789062
    4. '   ' → logprob: -18.312515258789062
    5. '```' → logprob: -19.062515258789062
    6. '<|end|>' → logprob: -19.062515258789062
    7. '１' → logprob: -19.312515258789062
    8. '2' → logprob: -19.375015258789062
    9. '  ' → logprob: -20.187515258789062
    10. '!' → logprob: -20.375015258789062

Token 60: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '+' → logprob: -17.187503814697266
    4. '   ' → logprob: -18.750003814697266
    5. '```' → logprob: -18.937503814697266
    6. '!' → logprob: -19.125003814697266
    7. '2' → logprob: -19.312503814697266
    8. '１' → logprob: -19.312503814697266
    9. '0' → logprob: -19.562503814697266
    10. 'tmp' → logprob: -19.750003814697266

Token 61: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024409317411482334
    2. ' else' → logprob: -6.127440929412842
    3. 'else' → logprob: -8.37744140625
    4. '
' → logprob: -11.50244140625
    5. '```' → logprob: -12.00244140625
    6. '	else' → logprob: -13.12744140625
    7. '<|end|>' → logprob: -13.12744140625
    8. '    
' → logprob: -13.25244140625
    9. '\n' → logprob: -14.12744140625
    10. ' elif' → logprob: -14.37744140625

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028773918747901917
    2. ' else' → logprob: -6.252877235412598
    3. 'else' → logprob: -7.002877235412598
    4. '```' → logprob: -10.252877235412598
    5. '	else' → logprob: -13.752877235412598
    6. '<|end|>' → logprob: -14.002877235412598
    7. 'elif' → logprob: -15.002877235412598
    8. ' elif' → logprob: -15.002877235412598
    9. '       ' → logprob: -15.127877235412598
    10. '``' → logprob: -15.877877235412598

Token 63: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.8694013953208923
    2. ' else' → logprob: -1.119401454925537
    3. '   ' → logprob: -1.369401454925537
    4. '	else' → logprob: -10.369400978088379
    5. '```' → logprob: -11.244400978088379
    6. 'elif' → logprob: -11.369400978088379
    7. ' elif' → logprob: -12.119400978088379
    8. '_else' → logprob: -14.619400978088379
    9. ' ' → logprob: -15.619400978088379
    10. ')' → logprob: -16.244401931762695

Token 64: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008073674980551004
    2. ':
' → logprob: -7.125807285308838
    3. '   ' → logprob: -13.750807762145996
    4. ':
' → logprob: -14.750807762145996
    5. ':

' → logprob: -15.375807762145996
    6. ',' → logprob: -15.500807762145996
    7. ' :' → logprob: -15.625807762145996
    8. '```' → logprob: -16.12580680847168
    9. '：' → logprob: -16.25080680847168
    10. '):' → logprob: -16.25080680847168

Token 65: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38027048110961914
    2. 'result' → logprob: -1.2552704811096191
    3. ' result' → logprob: -3.505270481109619
    4. '   ' → logprob: -7.380270481109619
    5. 'tmp' → logprob: -7.755270481109619
    6. ' tmp' → logprob: -9.630270004272461
    7. '```' → logprob: -9.755270004272461
    8. ' if' → logprob: -10.130270004272461
    9. ' ' → logprob: -10.380270004272461
    10. '	result' → logprob: -11.130270004272461

Token 66: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.003905046032741666
    2. ' result' → logprob: -5.628904819488525
    3. 'if' → logprob: -8.378905296325684
    4. '       ' → logprob: -10.253905296325684
    5. ' if' → logprob: -11.003905296325684
    6. '           ' → logprob: -11.378905296325684
    7. '   ' → logprob: -11.628905296325684
    8. '
' → logprob: -13.503905296325684
    9. '	result' → logprob: -13.753905296325684
    10. ' ' → logprob: -15.503905296325684

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012519778683781624
    2. '=' → logprob: -4.387519836425781
    3. ' +=' → logprob: -11.637519836425781
    4. '+=' → logprob: -14.262519836425781
    5. '=max' → logprob: -14.887519836425781
    6. ' ' → logprob: -15.512519836425781
    7. 'max' → logprob: -16.76251983642578
    8. ' |=' → logprob: -18.01251983642578
    9. '＝' → logprob: -18.26251983642578
    10. ' max' → logprob: -18.76251983642578

Token 68: ' tmp' (ID: 8919)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.6931529641151428
    2. 'max' → logprob: -0.6931529641151428
    3. '	max' → logprob: -13.193153381347656
    4. ' ' → logprob: -13.943153381347656
    5. '(max' → logprob: -13.943153381347656
    6. '=max' → logprob: -14.193153381347656
    7. 'tmp' → logprob: -14.693153381347656
    8. '[max' → logprob: -15.193153381347656
    9. '   ' → logprob: -15.693153381347656
    10. ' tmp' → logprob: -15.818153381347656

Token 69: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20289495587348938
    2. 'if' → logprob: -1.702894926071167
    3. 'max' → logprob: -7.077895164489746
    4. ' ' → logprob: -7.827895164489746
    5. '>' → logprob: -9.202895164489746
    6. '<|end|>' → logprob: -10.702895164489746
    7. '*' → logprob: -11.202895164489746
    8. ' max' → logprob: -11.702895164489746
    9. '+' → logprob: -11.702895164489746
    10. '  ' → logprob: -11.702895164489746

Token 70: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.4290947914123535
    2. 'tmp' → logprob: -1.0540947914123535
    3. ' result' → logprob: -8.179094314575195
    4. 'result' → logprob: -9.179094314575195
    5. '	tmp' → logprob: -12.679094314575195
    6. '(tmp' → logprob: -12.929094314575195
    7. '/tmp' → logprob: -13.429094314575195
    8. '   ' → logprob: -14.179094314575195
    9. '$tmp' → logprob: -14.304094314575195
    10. ' ' → logprob: -14.429094314575195

Token 71: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.007616560440510511
    2. ' >' → logprob: -4.8826165199279785
    3. '<|end|>' → logprob: -12.882616996765137
    4. '＞' → logprob: -13.007616996765137
    5. ' ' → logprob: -13.132616996765137
    6. '>end' → logprob: -13.882616996765137
    7. 'else' → logprob: -15.007616996765137
    8. '>`' → logprob: -15.132616996765137
    9. '<|end|>' → logprob: -15.507616996765137
    10. 'result' → logprob: -15.632616996765137

Token 72: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.011048054322600365
    2. ' result' → logprob: -4.511047840118408
    3. '	result' → logprob: -16.51104736328125
    4. ' ' → logprob: -16.88604736328125
    5. '   ' → logprob: -17.01104736328125
    6. '=result' → logprob: -17.01104736328125
    7. '(result' → logprob: -17.38604736328125
    8. '0' → logprob: -18.01104736328125
    9. '[result' → logprob: -18.13604736328125
    10. '_result' → logprob: -18.88604736328125

Token 73: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.0553266704082489
    2. 'else' → logprob: -2.9303267002105713
    3. '<|end|>' → logprob: -7.805326461791992
    4. ' ' → logprob: -11.180326461791992
    5. '<|end|>' → logprob: -11.305326461791992
    6. '	else' → logprob: -12.555326461791992
    7. '       ' → logprob: -13.555326461791992
    8. '```' → logprob: -13.805326461791992
    9. 'tmp' → logprob: -14.680326461791992
    10. ' ' → logprob: -14.930326461791992

Token 74: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -9.615255839889869e-05
    2. ' result' → logprob: -9.250096321105957
    3. '   ' → logprob: -18.62509536743164
    4. ' ' → logprob: -18.75009536743164
    5. '	result' → logprob: -19.50009536743164
    6. '(result' → logprob: -20.75009536743164
    7. '$result' → logprob: -21.00009536743164
    8. '
' → logprob: -21.25009536743164
    9. '_result' → logprob: -21.50009536743164
    10. '  ' → logprob: -21.50009536743164

Token 75: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43673408031463623
    2. 'tmp' → logprob: -1.0617340803146362
    3. ' tmp' → logprob: -5.436734199523926
    4. '/tmp' → logprob: -7.186734199523926
    5. '	tmp' → logprob: -7.561734199523926
    6. '        
' → logprob: -7.811734199523926
    7. '$tmp' → logprob: -7.936734199523926
    8. '[tmp' → logprob: -8.061734199523926
    9. '
' → logprob: -8.186734199523926
    10. ',tmp' → logprob: -8.436734199523926

Token 76: '       ' (ID: 309)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.3827003240585327
    2. '       ' → logprob: -1.2577003240585327
    3. ' tmp' → logprob: -3.5077004432678223
    4. '	tmp' → logprob: -6.132700443267822
    5. '/tmp' → logprob: -8.007699966430664
    6. '
' → logprob: -8.382699966430664
    7. '[tmp' → logprob: -8.507699966430664
    8. ',tmp' → logprob: -8.882699966430664
    9. '   ' → logprob: -9.132699966430664
    10. '$tmp' → logprob: -9.132699966430664

Token 77: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.0068108150735497475
    2. ' tmp' → logprob: -5.006810665130615
    3. '       ' → logprob: -9.631811141967773
    4. '   ' → logprob: -11.631811141967773
    5. '	tmp' → logprob: -11.631811141967773
    6. '/tmp' → logprob: -12.006811141967773
    7. '$tmp' → logprob: -12.881811141967773
    8. '_tmp' → logprob: -13.881811141967773
    9. '[tmp' → logprob: -14.006811141967773
    10. 'temp' → logprob: -14.756811141967773

Token 78: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -8.180258191714529e-06
    2. ' =' → logprob: -11.875008583068848
    3. '0' → logprob: -13.750008583068848
    4. '＝' → logprob: -18.75000762939453
    5. '=
' → logprob: -19.75000762939453
    6. '.=' → logprob: -20.50000762939453
    7. ' ' → logprob: -21.75000762939453
    8. '=

' → logprob: -21.87500762939453
    9. '_=' → logprob: -22.62500762939453
    10. '=}' → logprob: -22.62500762939453

Token 79: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '۰' → logprob: -21.000003814697266
    4. '000' → logprob: -21.250003814697266
    5. '00' → logprob: -21.875003814697266
    6. '   ' → logprob: -22.000003814697266
    7. '０' → logprob: -22.500003814697266
    8. '<|end|>' → logprob: -22.625003814697266
    9. '```' → logprob: -23.125003814697266
    10. '  ' → logprob: -23.250003814697266

Token 80: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '۰' → logprob: -18.875
    4. '000' → logprob: -20.125
    5. '０' → logprob: -20.25
    6. '०' → logprob: -21.25
    7. '00' → logprob: -21.375
    8. '٠' → logprob: -21.5
    9. '০' → logprob: -21.625
    10. '```' → logprob: -22.125

Token 81: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.014208877459168434
    2. 'print' → logprob: -4.264208793640137
    3. '#' → logprob: -11.389208793640137
    4. 'else' → logprob: -11.389208793640137
    5. '
' → logprob: -11.514208793640137
    6. 'if' → logprob: -12.389208793640137
    7. '```' → logprob: -12.639208793640137
    8. ' result' → logprob: -12.889208793640137
    9. '        
' → logprob: -14.389208793640137
    10. '    
' → logprob: -14.514208793640137

Token 82: 'else' (ID: 2807)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.001504982472397387
    2. 'print' → logprob: -7.126504898071289
    3. '
' → logprob: -7.501504898071289
    4. 'if' → logprob: -9.876504898071289
    5. '```' → logprob: -10.001504898071289
    6. '

' → logprob: -10.876504898071289
    7. 'else' → logprob: -11.876504898071289
    8. ' result' → logprob: -12.126504898071289
    9. '        
' → logprob: -12.376504898071289
    10. '    
' → logprob: -12.501504898071289

Token 83: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16024261713027954
    2. ':
' → logprob: -1.9102425575256348
    3. ' :' → logprob: -11.785243034362793
    4. '   ' → logprob: -12.535243034362793
    5. ' :
' → logprob: -12.660243034362793
    6. ':

' → logprob: -13.160243034362793
    7. ':
' → logprob: -14.035243034362793
    8. '{' → logprob: -14.910243034362793
    9. ',' → logprob: -15.035243034362793
    10. '{
' → logprob: -16.285242080688477

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10127802938222885
    2. 'result' → logprob: -2.351278066635132
    3. ' result' → logprob: -6.851277828216553
    4. '```' → logprob: -11.726278305053711
    5. '       ' → logprob: -12.726278305053711
    6. '	result' → logprob: -14.351278305053711
    7. ' ' → logprob: -15.351278305053711
    8. '  ' → logprob: -15.726278305053711
    9. '{
' → logprob: -15.976278305053711
    10. '    
' → logprob: -15.976278305053711

Token 85: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.0007607918814755976
    2. '   ' → logprob: -7.875760555267334
    3. ' result' → logprob: -7.875760555267334
    4. ' ' → logprob: -14.625761032104492
    5. 'print' → logprob: -16.250761032104492
    6. '	result' → logprob: -16.375761032104492
    7. '  ' → logprob: -16.625761032104492
    8. '       ' → logprob: -16.875761032104492
    9. '```' → logprob: -18.250761032104492
    10. 'if' → logprob: -18.625761032104492

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3136611878871918
    2. '=' → logprob: -1.3136612176895142
    3. '=result' → logprob: -8.313661575317383
    4. 'result' → logprob: -9.188661575317383
    5. 'print' → logprob: -10.688661575317383
    6. '=max' → logprob: -11.813661575317383
    7. ' result' → logprob: -12.313661575317383
    8. '   ' → logprob: -12.563661575317383
    9. '=
' → logprob: -12.688661575317383
    10. ' ' → logprob: -13.063661575317383

Token 87: ' max' (ID: 2999)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.1003405973315239
    2. ' tmp' → logprob: -2.3503406047821045
    3. 'max' → logprob: -9.225340843200684
    4. ' max' → logprob: -10.475340843200684
    5. ' ' → logprob: -13.225340843200684
    6. '[tmp' → logprob: -13.225340843200684
    7. '(tmp' → logprob: -13.475340843200684
    8. '   ' → logprob: -14.350340843200684
    9. 'result' → logprob: -14.600340843200684
    10. '/tmp' → logprob: -14.850340843200684

Token 88: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.6933776140213013
    2. '(tmp' → logprob: -0.6933776140213013
    3. '(' → logprob: -8.443377494812012
    4. 'result' → logprob: -11.443377494812012
    5. 'tmp' → logprob: -12.693377494812012
    6. '(temp' → logprob: -14.568377494812012
    7. '(t' → logprob: -15.443377494812012
    8. '(max' → logprob: -15.818377494812012
    9. ' (' → logprob: -16.318378448486328
    10. '((' → logprob: -16.568378448486328

Token 89: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004376244265586138
    2. ',tmp' → logprob: -5.504376411437988
    3. ' ,' → logprob: -8.129376411437988
    4. 'tmp' → logprob: -13.129376411437988
    5. ')' → logprob: -15.129376411437988
    6. '(tmp' → logprob: -15.504376411437988
    7. '/tmp' → logprob: -15.879376411437988
    8. ',
' → logprob: -16.129375457763672
    9. '[tmp' → logprob: -16.129375457763672
    10. ' tmp' → logprob: -16.254375457763672

Token 90: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.1269330382347107
    2. ' tmp' → logprob: -2.1269330978393555
    3. '/tmp' → logprob: -13.501933097839355
    4. '	tmp' → logprob: -13.751933097839355
    5. '(tmp' → logprob: -13.876933097839355
    6. '$tmp' → logprob: -14.376933097839355
    7. '[tmp' → logprob: -15.001933097839355
    8. '   ' → logprob: -15.501933097839355
    9. '_tmp' → logprob: -15.626933097839355
    10. ' ' → logprob: -15.751933097839355

Token 91: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1160349458805285e-05
    2. ')
' → logprob: -11.750011444091797
    3. ' )' → logprob: -12.750011444091797
    4. ')return' → logprob: -15.750011444091797
    5. ')

' → logprob: -16.125011444091797
    6. ')
' → logprob: -17.250011444091797
    7. '))' → logprob: -17.375011444091797
    8. ')`' → logprob: -17.625011444091797
    9. ')#' → logprob: -18.000011444091797
    10. '）' → logprob: -18.750011444091797

Token 92: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00015229015843942761
    2. '
' → logprob: -8.875152587890625
    3. ')
' → logprob: -12.875152587890625
    4. ')' → logprob: -12.875152587890625
    5. ' print' → logprob: -12.875152587890625
    6. '```' → logprob: -13.250152587890625
    7. '\n' → logprob: -13.500152587890625
    8. '  
' → logprob: -14.125152587890625
    9. '\' → logprob: -15.250152587890625
    10. ' 
' → logprob: -16.125152587890625

Token 93: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018827522173523903
    2. '(result' → logprob: -4.018827438354492
    3. '('' → logprob: -7.518827438354492
    4. '("("' → logprob: -9.268827438354492
    5. '()' → logprob: -11.393827438354492
    6. '(len' → logprob: -11.518827438354492
    7. '(max' → logprob: -11.518827438354492
    8. '(`' → logprob: -13.268827438354492
    9. '((' → logprob: -13.893827438354492
    10. '(S' → logprob: -14.018827438354492

Token 94: 'lambda' (ID: 35280)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.00011594036914175376
    2. ' result' → logprob: -9.250116348266602
    3. ')' → logprob: -11.000116348266602
    4. '(result' → logprob: -13.000116348266602
    5. '))' → logprob: -15.625116348266602
    6. '=result' → logprob: -16.1251163482666
    7. ',result' → logprob: -16.5001163482666
    8. '[result' → logprob: -16.7501163482666
    9. ' ' → logprob: -16.8751163482666
    10. '   ' → logprob: -17.1251163482666

Token 95: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.15085013210773468
    2. 'x' → logprob: -2.0258500576019287
    3. ' result' → logprob: -5.525850296020508
    4. ' n' → logprob: -6.400850296020508
    5. 'result' → logprob: -6.775850296020508
    6. ' s' → logprob: -7.650850296020508
    7. 'n' → logprob: -9.025850296020508
    8. ' max' → logprob: -9.150850296020508
    9. 's' → logprob: -9.275850296020508
    10. ' length' → logprob: -9.525850296020508

Token 96: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002140028402209282
    2. ':x' → logprob: -6.627140045166016
    3. ' :' → logprob: -7.127140045166016
    4. ':max' → logprob: -12.127140045166016
    5. 'x' → logprob: -13.877140045166016
    6. ':int' → logprob: -14.002140045166016
    7. ':str' → logprob: -14.502140045166016
    8. ',' → logprob: -14.752140045166016
    9. '=' → logprob: -14.877140045166016
    10. ':(' → logprob: -15.127140045166016

Token 97: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05176518112421036
    2. ' x' → logprob: -3.426765203475952
    3. 'max' → logprob: -5.676764965057373
    4. 'str' → logprob: -5.926764965057373
    5. 'result' → logprob: -6.301764965057373
    6. '0' → logprob: -6.426764965057373
    7. '"' → logprob: -6.676764965057373
    8. ''' → logprob: -6.676764965057373
    9. '"x' → logprob: -6.676764965057373
    10. ''x' → logprob: -6.801764965057373

Token 98: ')(' (ID: 4898)
  Prédit: ')('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')(' → logprob: -0.489918977022171
    2. ')' → logprob: -1.1149189472198486
    3. '))' → logprob: -3.3649189472198486
    4. '))(' → logprob: -4.114919185638428
    5. ')x' → logprob: -5.989919185638428
    6. '**' → logprob: -6.114919185638428
    7. '(x' → logprob: -7.114919185638428
    8. '*x' → logprob: -7.614919185638428
    9. ')))' → logprob: -7.989919185638428
    10. '*' → logprob: -7.989919185638428

Token 99: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -7.493430894101039e-05
    2. ' result' → logprob: -9.500075340270996
    3. '(result' → logprob: -18.62507438659668
    4. ')' → logprob: -20.00007438659668
    5. '$result' → logprob: -20.00007438659668
    6. '[result' → logprob: -20.37507438659668
    7. 'results' → logprob: -20.50007438659668
    8. '	result' → logprob: -20.62507438659668
    9. ' ' → logprob: -20.62507438659668
    10. '   ' → logprob: -20.75007438659668

Token 100: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02975245751440525
    2. '))' → logprob: -3.529752492904663
    3. ')))' → logprob: -13.529752731323242
    4. ')
' → logprob: -15.404752731323242
    5. ' )' → logprob: -15.404752731323242
    6. '})' → logprob: -16.904752731323242
    7. ')`' → logprob: -17.029752731323242
    8. ')}' → logprob: -17.404752731323242
    9. ')")' → logprob: -17.904752731323242
    10. '])' → logprob: -18.029752731323242


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 98
Tokens correctement prédits (1ère position, stricte): 38
Tokens correctement prédits (1ère position, avec adaptation): 42
Tokens correctement prédits (top 10): 81
Précision stricte (1ère position): 38.78%
Précision adaptée (1ère position): 42.86%
Précision (top 10): 82.65%
================================================================================
