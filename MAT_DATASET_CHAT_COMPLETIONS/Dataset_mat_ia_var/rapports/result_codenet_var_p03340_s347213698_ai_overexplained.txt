================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demande à l'utilisateur d'entrer un entier qui sera stocké dans la variable n.
# Cela représente généralement la taille d'une séquence ou d'un tableau.
n = int(input())

# Demande à l'utilisateur d'entrer une ligne de nombres séparés par des espaces.
# La fonction input() récupère la ligne sous forme de chaîne de caractères.
# split() divise cette chaîne en sous-chaînes pour chaque espace.
# map(int, ...) convertit chaque sous-chaîne en entier.
# Enfin, list(...) convertit l'objet map en une liste de ces entiers et l'assigne à la variable a.
a = list(map(int, input().split()))

# Initialise la variable ans avec la valeur de n.
# ans va probablement servir à compter ou mémoriser un résultat relié à la séquence de nombres.
ans = n

# Initialise s avec la première valeur du tableau a.
# Ici, s va servir à mémoriser une valeur lors des itérations, probablement comme un accumulateur.
s = a[0]

# Initialise r avec 0.
# r est généralement utilisé comme un indice de parcours ou pour représenter un pointeur sur la séquence.
r = 0

# Débute une boucle qui parcourt les indices l de 0 jusqu'à n-2 inclus (car range(n-1) s'arrête à n-2).
# l est l'indice de départ de la sous-séquence étudiée.
for l in range(n - 1):
    # Débute une boucle "while" qui continue tant que deux conditions sont vraies :
    # 1) r est strictement inférieur à n-1, c'est-à-dire qu'on reste dans les bornes du tableau.
    # 2) s & a[r+1] == 0, c'est-à-dire que le "et binaire" entre s et le prochain élément est nul.
    # Le & binaire s'assure qu'aucun bit n'est commun (aucun overlap à 1) entre s et a[r+1].
    while r < n - 1 and not (s & a[r + 1]):
        # Met à jour s en calculant le "ou exclusif" (XOR) binaire entre s et a[r+1], et stocke le résultat dans s.
        # Cela mélange les bits de s et du prochain élément de manière réversible.
        s ^= a[r + 1]
        # Incrémente r de 1. On étend donc notre fenêtre vers la droite.
        r += 1
    # Après la boucle while, ajoute à ans la différence r - l.
    # Cela compte le nombre de sous-tableaux valides qui commencent à l'indice l.
    ans += r - l
    # Met à jour s en retirant l'effet de a[l] avec l'opération XOR (puisque s ^= a[l] défait un XOR précédent).
    # Cela prépare s pour la prochaine itération de la boucle principale.
    s ^= a[l]

# Affiche la valeur finale de ans, le résultat du traitement effectué.
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ande' (ID: 4102)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7934136390686035
    2. ':' → logprob: -1.5434136390686035
    3. 's' → logprob: -1.6684136390686035
    4. ' de' → logprob: -2.7934136390686035
    5. ' ' → logprob: -3.1684136390686035
    6. '=' → logprob: -4.7934136390686035
    7. ' =' → logprob: -4.7934136390686035
    8. ' :' → logprob: -4.9184136390686035
    9. '.' → logprob: -5.2934136390686035
    10. ' d' → logprob: -5.7934136390686035

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.012096701189875603
    2. ' l' → logprob: -4.512096881866455
    3. '#' → logprob: -7.512096881866455
    4. 'user' → logprob: -9.012096405029297
    5. 'la' → logprob: -9.887096405029297
    6. '```' → logprob: -9.887096405029297
    7. 'util' → logprob: -10.137096405029297
    8. '`' → logprob: -10.512096405029297
    9. ' #' → logprob: -10.637096405029297
    10. 'un' → logprob: -10.762096405029297

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.04570658504962921
    2. 'util' → logprob: -4.170706748962402
    3. ''' → logprob: -4.795706748962402
    4. 'u' → logprob: -5.045706748962402
    5. '’utilisateur' → logprob: -5.045706748962402
    6. ' utilisateur' → logprob: -5.295706748962402
    7. 'a' → logprob: -6.295706748962402
    8. ''user' → logprob: -8.170706748962402
    9. ''util' → logprob: -8.670706748962402
    10. 'user' → logprob: -8.795706748962402

Token 6: ' d' (ID: 272)
  Prédit: 'nom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nom' → logprob: -0.17538928985595703
    2. 'name' → logprob: -2.675389289855957
    3. 'n' → logprob: -3.425389289855957
    4. 's' → logprob: -4.300389289855957
    5. ' nom' → logprob: -4.800389289855957
    6. 'user' → logprob: -4.925389289855957
    7. ' =' → logprob: -5.925389289855957
    8. 'prenom' → logprob: -6.050389289855957
    9. 'input' → logprob: -6.175389289855957
    10. 'print' → logprob: -6.300389289855957

Token 7: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.14220651984214783
    2. ''' → logprob: -2.1422064304351807
    3. ''entrée' → logprob: -5.76720666885376
    4. 'u' → logprob: -6.26720666885376
    5. '_' → logprob: -6.39220666885376
    6. 'a' → logprob: -6.39220666885376
    7. ''une' → logprob: -6.64220666885376
    8. 'é' → logprob: -7.14220666885376
    9. ''ent' → logprob: -7.39220666885376
    10. 'entrée' → logprob: -7.64220666885376

Token 8: 'entr' (ID: 12792)
  Prédit: 'entr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entr' → logprob: -0.4258287847042084
    2. 'entrée' → logprob: -1.5508288145065308
    3. 'ent' → logprob: -2.050828695297241
    4. 'input' → logprob: -6.42582893371582
    5. 's' → logprob: -6.55082893371582
    6. 'entre' → logprob: -7.30082893371582
    7. 'enter' → logprob: -8.17582893371582
    8. 'int' → logprob: -8.55082893371582
    9. 'é' → logprob: -8.55082893371582
    10. 'e' → logprob: -8.55082893371582

Token 9: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -8.840432565193623e-05
    2. 'éer' → logprob: -9.750088691711426
    3. 'rer' → logprob: -11.625088691711426
    4. 'erer' → logprob: -12.000088691711426
    5. 'érer' → logprob: -13.125088691711426
    6. 'trer' → logprob: -13.125088691711426
    7. 'é' → logprob: -13.125088691711426
    8. 'e' → logprob: -13.500088691711426
    9. 'ér' → logprob: -13.750088691711426
    10. ''er' → logprob: -13.750088691711426

Token 10: ' un' (ID: 537)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8789222240447998
    2. ' une' → logprob: -1.8789222240447998
    3. ' un' → logprob: -1.8789222240447998
    4. ' ' → logprob: -2.5039222240448
    5. ''un' → logprob: -3.0039222240448
    6. ''une' → logprob: -3.1289222240448
    7. 'u' → logprob: -4.128922462463379
    8. '_' → logprob: -4.378922462463379
    9. 'une' → logprob: -4.753922462463379
    10. 's' → logprob: -4.878922462463379

Token 11: ' entier' (ID: 80473)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18254415690898895
    2. ' espace' → logprob: -2.432544231414795
    3. 'e' → logprob: -2.807544231414795
    4. 'es' → logprob: -5.932544231414795
    5. ' nom' → logprob: -6.307544231414795
    6. 'a' → logprob: -6.307544231414795
    7. ' mot' → logprob: -6.682544231414795
    8. ' e' → logprob: -6.682544231414795
    9. '_' → logprob: -7.057544231414795
    10. ' )' → logprob: -7.307544231414795

Token 12: ' qui' (ID: 2780)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02282201685011387
    2. 'x' → logprob: -4.64782190322876
    3. 'e' → logprob: -5.27282190322876
    4. 'i' → logprob: -5.89782190322876
    5. 'ent' → logprob: -6.39782190322876
    6. 'nombre' → logprob: -7.02282190322876
    7. 'entr' → logprob: -8.022822380065918
    8. '\' → logprob: -8.147822380065918
    9. 'input' → logprob: -8.272822380065918
    10. 'u' → logprob: -8.397822380065918

Token 13: ' sera' (ID: 15511)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.30240458250045776
    2. ''' → logprob: -2.5524046421051025
    3. '_' → logprob: -2.8024046421051025
    4. 's' → logprob: -3.3024046421051025
    5. '`' → logprob: -4.427404403686523
    6. '```' → logprob: -4.802404403686523
    7. ' ' → logprob: -4.802404403686523
    8. ' n' → logprob: -5.052404403686523
    9. 'n' → logprob: -5.302404403686523
    10. ',' → logprob: -5.302404403686523

Token 14: ' stock' (ID: 6546)
  Prédit: ' utilisé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisé' → logprob: -0.40203985571861267
    2. ' multip' → logprob: -2.1520397663116455
    3. ' stock' → logprob: -2.4020397663116455
    4. ' ajouté' → logprob: -4.652040004730225
    5. ' convert' → logprob: -4.652040004730225
    6. 's' → logprob: -4.777040004730225
    7. ' multipl' → logprob: -4.777040004730225
    8. 'multip' → logprob: -4.777040004730225
    9. ' ' → logprob: -5.152040004730225
    10. ' multiplier' → logprob: -5.152040004730225

Token 15: 'é' (ID: 377)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.014868678525090218
    2. ' ' → logprob: -4.38986873626709
    3. 'e' → logprob: -6.63986873626709
    4. ',' → logprob: -8.01486873626709
    5. ' _' → logprob: -9.38986873626709
    6. '`' → logprob: -9.63986873626709
    7. '=' → logprob: -9.63986873626709
    8. 'a' → logprob: -10.13986873626709
    9. 'u' → logprob: -10.26486873626709
    10. ':' → logprob: -10.26486873626709

Token 16: ' dans' (ID: 2671)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9683990478515625
    2. '_' → logprob: -1.4683990478515625
    3. 'n' → logprob: -1.8433990478515625
    4. 'e' → logprob: -3.0933990478515625
    5. 'u' → logprob: -3.4683990478515625
    6. 'a' → logprob: -3.8433990478515625
    7. 'i' → logprob: -3.9683990478515625
    8. '.' → logprob: -4.0933990478515625
    9. ',' → logprob: -4.2183990478515625
    10. '`' → logprob: -4.4683990478515625

Token 17: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5584745407104492
    2. ' une' → logprob: -2.183474540710449
    3. 'n' → logprob: -2.933474540710449
    4. ' ' → logprob: -3.058474540710449
    5. 'la' → logprob: -3.183474540710449
    6. 'une' → logprob: -3.308474540710449
    7. ' a' → logprob: -3.558474540710449
    8. 'a' → logprob: -3.808474540710449
    9. ' variable' → logprob: -4.183474540710449
    10. 'variable' → logprob: -4.183474540710449

Token 18: ' variable' (ID: 11076)
  Prédit: 'variable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variable' → logprob: -0.09934119135141373
    2. ' variable' → logprob: -2.7243411540985107
    3. 'nombre' → logprob: -4.97434139251709
    4. 'var' → logprob: -4.97434139251709
    5. '`' → logprob: -6.22434139251709
    6. 'v' → logprob: -6.22434139251709
    7. ' ' → logprob: -6.34934139251709
    8. 'n' → logprob: -6.47434139251709
    9. 'x' → logprob: -6.72434139251709
    10. '```' → logprob: -6.84934139251709

Token 19: ' n' (ID: 297)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2448275238275528
    2. ' ' → logprob: -1.9948275089263916
    3. 'n' → logprob: -3.8698275089263916
    4. '`' → logprob: -4.494827747344971
    5. ' _' → logprob: -4.494827747344971
    6. 'x' → logprob: -5.369827747344971
    7. '```' → logprob: -5.369827747344971
    8. 'user' → logprob: -5.619827747344971
    9. 's' → logprob: -5.619827747344971
    10. 'a' → logprob: -5.744827747344971

Token 20: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.644463479053229e-05
    2. '#' → logprob: -11.625046730041504
    3. '```' → logprob: -11.625046730041504
    4. 'i' → logprob: -12.000046730041504
    5. '`' → logprob: -12.125046730041504
    6. ' ' → logprob: -12.250046730041504
    7. '_' → logprob: -12.875046730041504
    8. '\n' → logprob: -13.375046730041504
    9. '\' → logprob: -13.500046730041504
    10. ',' → logprob: -13.750046730041504

Token 21: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.941850526549388e-06
    2. '#' → logprob: -13.125007629394531
    3. '```' → logprob: -13.250007629394531
    4. '\n' → logprob: -13.375007629394531
    5. '\' → logprob: -14.000007629394531
    6. ' n' → logprob: -15.000007629394531
    7. 'print' → logprob: -15.375007629394531
    8. ' ' → logprob: -15.500007629394531
    9. '`' → logprob: -15.625007629394531
    10. 'x' → logprob: -15.750007629394531

Token 22: ' Cela' (ID: 44403)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0009159822366200387
    2. ' n' → logprob: -7.000916004180908
    3. '#' → logprob: -12.87591552734375
    4. ' ' → logprob: -14.12591552734375
    5. '```' → logprob: -15.00091552734375
    6. ' #' → logprob: -15.12591552734375
    7. ' ```' → logprob: -16.00091552734375
    8. 'print' → logprob: -16.37591552734375
    9. ' \' → logprob: -16.50091552734375
    10. ' ' → logprob: -17.00091552734375

Token 23: ' représente' (ID: 88912)
  Prédit: ' sera'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sera' → logprob: -0.7372995615005493
    2. ' n' → logprob: -1.9872995615005493
    3. ' va' → logprob: -2.6122994422912598
    4. 's' → logprob: -2.8622994422912598
    5. ' ' → logprob: -3.2372994422912598
    6. ' serv' → logprob: -3.3622994422912598
    7. 'sera' → logprob: -3.6122994422912598
    8. ' s' → logprob: -3.7372994422912598
    9. 'n' → logprob: -3.8622994422912598
    10. ' continue' → logprob: -4.61229944229126

Token 24: ' généralement' (ID: 67075)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.47862693667411804
    2. 'le' → logprob: -0.9786269664764404
    3. ' un' → logprob: -6.228626728057861
    4. ' la' → logprob: -7.103626728057861
    5. 'l' → logprob: -7.728626728057861
    6. 'la' → logprob: -7.978626728057861
    7. 'un' → logprob: -7.978626728057861
    8. ' une' → logprob: -8.35362720489502
    9. 'une' → logprob: -8.97862720489502
    10. '_le' → logprob: -9.35362720489502

Token 25: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5606563687324524
    2. ' le' → logprob: -1.6856563091278076
    3. ' une' → logprob: -2.6856563091278076
    4. 'le' → logprob: -2.8106563091278076
    5. ' un' → logprob: -3.0606563091278076
    6. 'une' → logprob: -3.3106563091278076
    7. 'la' → logprob: -3.9356563091278076
    8. 'un' → logprob: -5.435656547546387
    9. ' l' → logprob: -5.810656547546387
    10. 'l' → logprob: -6.060656547546387

Token 26: ' taille' (ID: 41644)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.21760672330856323
    2. 'nombre' → logprob: -2.342606782913208
    3. 'val' → logprob: -2.592606782913208
    4. 's' → logprob: -4.967606544494629
    5. 'base' → logprob: -5.842606544494629
    6. 'quant' → logprob: -5.967606544494629
    7. 'long' → logprob: -6.092606544494629
    8. '#' → logprob: -6.717606544494629
    9. 't' → logprob: -6.717606544494629
    10. 'lim' → logprob: -6.842606544494629

Token 27: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7565510869026184
    2. ' de' → logprob: -1.3815510272979736
    3. ' d' → logprob: -1.5065510272979736
    4. ' du' → logprob: -3.6315510272979736
    5. 'd' → logprob: -4.631551265716553
    6. '_' → logprob: -4.756551265716553
    7. ' maximale' → logprob: -6.006551265716553
    8. 'de' → logprob: -6.381551265716553
    9. 'n' → logprob: -6.506551265716553
    10. ')' → logprob: -6.881551265716553

Token 28: ''une' (ID: 13337)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.43563708662986755
    2. 'u' → logprob: -2.0606369972229004
    3. ''un' → logprob: -2.4356369972229004
    4. ''une' → logprob: -2.4356369972229004
    5. ''' → logprob: -3.3106369972229004
    6. 'a' → logprob: -5.0606369972229
    7. ''u' → logprob: -6.3106369972229
    8. '#' → logprob: -6.8106369972229
    9. ''e' → logprob: -6.8106369972229
    10. 'une' → logprob: -7.3106369972229

Token 29: ' sé' (ID: 7462)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.019869204610586166
    2. ' liste' → logprob: -4.519869327545166
    3. 'list' → logprob: -5.394869327545166
    4. 'structure' → logprob: -6.019869327545166
    5. '#' → logprob: -7.519869327545166
    6. 'sé' → logprob: -8.394868850708008
    7. '   ' → logprob: -8.894868850708008
    8. 'suite' → logprob: -8.894868850708008
    9. 'sequence' → logprob: -9.019868850708008
    10. 'la' → logprob: -9.269868850708008

Token 30: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.01846725307404995
    2. 'rie' → logprob: -4.018467426300049
    3. '#' → logprob: -8.76846694946289
    4. 'q' → logprob: -9.89346694946289
    5. 'QUENCE' → logprob: -10.64346694946289
    6. '   ' → logprob: -11.14346694946289
    7. 'ance' → logprob: -11.39346694946289
    8. 'qu' → logprob: -11.39346694946289
    9. '
' → logprob: -12.14346694946289
    10. 'lection' → logprob: -12.14346694946289

Token 31: ' ou' (ID: 2031)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00011725161311915144
    2. '.' → logprob: -9.750117301940918
    3. '#' → logprob: -10.250117301940918
    4. ',' → logprob: -11.250117301940918
    5. '\' → logprob: -13.000117301940918
    6. '\n' → logprob: -13.125117301940918
    7. ':' → logprob: -13.625117301940918
    8. '
' → logprob: -13.750117301940918
    9. '```' → logprob: -14.000117301940918
    10. '

' → logprob: -14.625117301940918

Token 32: ' d' (ID: 272)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2218739986419678
    2. 'd' → logprob: -1.2218739986419678
    3. 'la' → logprob: -1.8468739986419678
    4. ' d' → logprob: -2.4718739986419678
    5. 'le' → logprob: -2.4718739986419678
    6. ' la' → logprob: -3.2218739986419678
    7. 'une' → logprob: -4.096874237060547
    8. ' une' → logprob: -4.721874237060547
    9. 'un' → logprob: -5.471874237060547
    10. 'l' → logprob: -5.596874237060547

Token 33: ''un' (ID: 9788)
  Prédit: ''une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.5149363875389099
    2. ''un' → logprob: -1.8899364471435547
    3. 'u' → logprob: -2.0149364471435547
    4. 'une' → logprob: -2.3899364471435547
    5. 'un' → logprob: -4.514936447143555
    6. ''' → logprob: -4.764936447143555
    7. 'e' → logprob: -5.264936447143555
    8. '’une' → logprob: -7.889936447143555
    9. 'ans' → logprob: -8.264936447143555
    10. ' une' → logprob: -8.389936447143555

Token 34: ' tableau' (ID: 67053)
  Prédit: ' tableau'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tableau' → logprob: -0.24059154093265533
    2. 'é' → logprob: -2.865591526031494
    3. 'table' → logprob: -3.365591526031494
    4. 'liste' → logprob: -3.740591526031494
    5. 'e' → logprob: -3.865591526031494
    6. 'nombre' → logprob: -4.615591526031494
    7. 'a' → logprob: -4.865591526031494
    8. 'list' → logprob: -5.115591526031494
    9. ' liste' → logprob: -5.240591526031494
    10. 'élé' → logprob: -5.740591526031494

Token 35: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.696889623621246e-06
    2. '\n' → logprob: -13.00000286102295
    3. '```' → logprob: -15.50000286102295
    4. ' n' → logprob: -16.250001907348633
    5. '#' → logprob: -16.500001907348633
    6. '\' → logprob: -16.750001907348633
    7. 'x' → logprob: -18.125001907348633
    8. '

' → logprob: -18.625001907348633
    9. '
' → logprob: -18.625001907348633
    10. ',' → logprob: -18.875001907348633

Token 36: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.9153885558771435e-06
    2. '#' → logprob: -13.250005722045898
    3. '```' → logprob: -13.250005722045898
    4. '\n' → logprob: -14.000005722045898
    5. '\' → logprob: -14.625005722045898
    6. '

' → logprob: -14.750005722045898
    7. '
' → logprob: -14.875005722045898
    8. ',' → logprob: -15.875005722045898
    9. '`' → logprob: -16.3750057220459
    10. ' n' → logprob: -17.3750057220459

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003610163228586316
    2. '=' → logprob: -5.628610134124756
    3. ' ' → logprob: -11.878610610961914
    4. ' =
' → logprob: -14.503610610961914
    5. ' ' → logprob: -14.503610610961914
    6. ',' → logprob: -14.628610610961914
    7. '=int' → logprob: -14.628610610961914
    8. '=input' → logprob: -14.753610610961914
    9. 's' → logprob: -15.253610610961914
    10. 'space' → logprob: -15.503610610961914

Token 38: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.006758475210517645
    2. 'int' → logprob: -5.006758689880371
    3. ' input' → logprob: -10.381758689880371
    4. ' ' → logprob: -11.631758689880371
    5. ' ' → logprob: -13.631758689880371
    6. '=int' → logprob: -13.756758689880371
    7. 'input' → logprob: -14.381758689880371
    8. '	int' → logprob: -16.756757736206055
    9. '<int' → logprob: -16.881757736206055
    10. ' in' → logprob: -17.131757736206055

Token 39: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3868964612483978
    2. '(input' → logprob: -1.1368964910507202
    3. '(
' → logprob: -11.511896133422852
    4. 'input' → logprob: -11.761896133422852
    5. ' (' → logprob: -12.636896133422852
    6. '('' → logprob: -13.386896133422852
    7. '(user' → logprob: -14.386896133422852
    8. '()' → logprob: -14.511896133422852
    9. '(

' → logprob: -14.761896133422852
    10. '(int' → logprob: -15.011896133422852

Token 40: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04724515229463577
    2. '('' → logprob: -3.5472452640533447
    3. '("("' → logprob: -4.172245025634766
    4. '("' → logprob: -6.922245025634766
    5. '()' → logprob: -7.422245025634766
    6. '("")' → logprob: -9.047245025634766
    7. '(""))' → logprob: -9.547245025634766
    8. '(">' → logprob: -9.672245025634766
    9. '(
' → logprob: -11.172245025634766
    10. '())' → logprob: -11.297245025634766

Token 41: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49820008873939514
    2. ' ' → logprob: -1.6232000589370728
    3. 'n' → logprob: -3.2482001781463623
    4. '\n' → logprob: -3.2482001781463623
    5. '#' → logprob: -3.4982001781463623
    6. '\' → logprob: -3.7482001781463623
    7. 'for' → logprob: -4.748199939727783
    8. '<|end|>' → logprob: -4.873199939727783
    9. ' )' → logprob: -4.998199939727783
    10. '[' → logprob: -5.123199939727783

Token 42: ' Dem' (ID: 9458)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7228720188140869
    2. 'sequence' → logprob: -1.972872018814087
    3. 'data' → logprob: -2.972872018814087
    4. 'a' → logprob: -2.972872018814087
    5. 'lst' → logprob: -3.472872018814087
    6. ' ' → logprob: -3.472872018814087
    7. '#' → logprob: -3.722872018814087
    8. 'for' → logprob: -3.847872018814087
    9. ' sequence' → logprob: -3.972872018814087
    10. 't' → logprob: -4.097871780395508

Token 43: 'ande' (ID: 4102)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.440106600522995
    2. 'a' → logprob: -2.0651066303253174
    3. '_' → logprob: -2.8151066303253174
    4. 'andez' → logprob: -3.9401066303253174
    5. ')' → logprob: -4.065106391906738
    6. '#' → logprob: -4.315106391906738
    7. ' ' → logprob: -4.690106391906738
    8. 'e' → logprob: -4.815106391906738
    9. 'u' → logprob: -4.940106391906738
    10. '<|end|>' → logprob: -5.190106391906738

Token 44: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01802666485309601
    2. '()' → logprob: -4.643026828765869
    3. '("' → logprob: -5.393026828765869
    4. ')' → logprob: -6.768026828765869
    5. '('' → logprob: -6.893026828765869
    6. ' (' → logprob: -7.143026828765869
    7. '(n' → logprob: -9.268026351928711
    8. '("""' → logprob: -9.268026351928711
    9. '(
' → logprob: -9.643026351928711
    10. '#' → logprob: -9.768026351928711

Token 45: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5688880085945129
    2. ' l' → logprob: -0.9438880085945129
    3. 'user' → logprob: -4.943888187408447
    4. ' une' → logprob: -5.193888187408447
    5. ' la' → logprob: -5.443888187408447
    6. '()' → logprob: -5.443888187408447
    7. ' un' → logprob: -5.443888187408447
    8. '<|end|>' → logprob: -6.068888187408447
    9. 'une' → logprob: -6.193888187408447
    10. 'un' → logprob: -6.568888187408447

Token 46: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.013225293718278408
    2. '’utilisateur' → logprob: -5.638225078582764
    3. 'user' → logprob: -6.013225078582764
    4. ''' → logprob: -6.138225078582764
    5. ' user' → logprob: -6.763225078582764
    6. ' utilisateur' → logprob: -7.263225078582764
    7. ''user' → logprob: -7.513225078582764
    8. 'u' → logprob: -7.888225078582764
    9. '#' → logprob: -8.388225555419922
    10. 'e' → logprob: -8.763225555419922

Token 47: ' d' (ID: 272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11006440222263336
    2. '(' → logprob: -2.4850645065307617
    3. 'd' → logprob: -5.360064506530762
    4. '('' → logprob: -5.610064506530762
    5. ')' → logprob: -5.985064506530762
    6. ' d' → logprob: -6.360064506530762
    7. '("' → logprob: -6.485064506530762
    8. '())' → logprob: -6.485064506530762
    9. ' ()' → logprob: -6.860064506530762
    10. 's' → logprob: -6.985064506530762

Token 48: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0764315202832222
    2. ''entrée' → logprob: -3.8264315128326416
    3. '_' → logprob: -4.076431751251221
    4. 'e' → logprob: -4.576431751251221
    5. ''ent' → logprob: -5.201431751251221
    6. 'a' → logprob: -5.951431751251221
    7. ' ' → logprob: -6.201431751251221
    8. ''entre' → logprob: -6.701431751251221
    9. 'n' → logprob: -6.826431751251221
    10. '''' → logprob: -7.076431751251221

Token 49: 'entr' (ID: 12792)
  Prédit: 'entr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entr' → logprob: -0.006608791649341583
    2. ''' → logprob: -5.631608963012695
    3. 'entrée' → logprob: -6.756608963012695
    4. ' entrer' → logprob: -7.256608963012695
    5. ' entr' → logprob: -8.381608963012695
    6. 'enter' → logprob: -8.506608963012695
    7. 'ent' → logprob: -9.006608963012695
    8. ' saisir' → logprob: -9.631608963012695
    9. 'entrant' → logprob: -9.756608963012695
    10. ''entrée' → logprob: -10.131608963012695

Token 50: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.6165388226509094
    2. 't' → logprob: -1.4915387630462646
    3. 'ter' → logprob: -1.4915387630462646
    4. 'tre' → logprob: -5.991539001464844
    5. 'trer' → logprob: -6.241539001464844
    6. 'éer' → logprob: -6.866539001464844
    7. 'ant' → logprob: -7.241539001464844
    8. 'ée' → logprob: -7.616539001464844
    9. 'e' → logprob: -7.741539001464844
    10. '```' → logprob: -7.741539001464844

Token 51: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03506441414356232
    2. '(' → logprob: -3.660064458847046
    3. ' un' → logprob: -5.410064220428467
    4. '("' → logprob: -6.160064220428467
    5. '('' → logprob: -6.910064220428467
    6. ' ()' → logprob: -8.160064697265625
    7. ' une' → logprob: -8.910064697265625
    8. 'un' → logprob: -9.410064697265625
    9. '())' → logprob: -9.410064697265625
    10. '(n' → logprob: -9.910064697265625

Token 52: ' ligne' (ID: 19583)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.703650712966919
    2. 'sé' → logprob: -1.703650712966919
    3. 'chaine' → logprob: -2.328650712966919
    4. ' chaîne' → logprob: -2.703650712966919
    5. ' sé' → logprob: -3.078650712966919
    6. ' liste' → logprob: -3.453650712966919
    7. 'liste' → logprob: -4.45365047454834
    8. '_' → logprob: -4.70365047454834
    9. 'sequence' → logprob: -4.95365047454834
    10. ' phrase' → logprob: -5.07865047454834

Token 53: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011438826099038124
    2. 's' → logprob: -5.136438846588135
    3. '("")' → logprob: -7.261438846588135
    4. '().' → logprob: -7.386438846588135
    5. '<|end|>' → logprob: -7.511438846588135
    6. ')' → logprob: -7.511438846588135
    7. '())' → logprob: -7.636438846588135
    8. 'de' → logprob: -8.136438369750977
    9. 'a' → logprob: -8.261438369750977
    10. '#' → logprob: -8.511438369750977

Token 54: ' nombres' (ID: 76205)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.3619006872177124
    2. ' texte' → logprob: -2.111900806427002
    3. ' text' → logprob: -2.861900806427002
    4. 'texte' → logprob: -3.361900806427002
    5. ' data' → logprob: -4.361900806427002
    6. ' ' → logprob: -4.486900806427002
    7. ' données' → logprob: -4.861900806427002
    8. 'code' → logprob: -4.861900806427002
    9. ' input' → logprob: -4.986900806427002
    10. ' caractères' → logprob: -5.236900806427002

Token 55: ' sépar' (ID: 97160)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.054337549954652786
    2. ' ' → logprob: -3.929337501525879
    3. '<|end|>' → logprob: -4.054337501525879
    4. 'spl' → logprob: -5.804337501525879
    5. '()' → logprob: -5.929337501525879
    6. ' )' → logprob: -6.179337501525879
    7. ' ' → logprob: -7.429337501525879
    8. 'es' → logprob: -7.554337501525879
    9. 'numbers' → logprob: -7.554337501525879
    10. ' ,' → logprob: -7.741837501525879

Token 56: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.007609228603541851
    2. 'é' → logprob: -5.1326093673706055
    3. 'ée' → logprob: -6.6326093673706055
    4. 'es' → logprob: -8.507609367370605
    5. 'e' → logprob: -9.882609367370605
    6. 's' → logprob: -10.132609367370605
    7. 'ées' → logprob: -10.507609367370605
    8. 'par' → logprob: -11.257609367370605
    9. ' par' → logprob: -11.382609367370605
    10. 'ès' → logprob: -12.257609367370605

Token 57: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.1659029871225357
    2. 'es' → logprob: -2.540903091430664
    3. 'par' → logprob: -3.040903091430664
    4. 's' → logprob: -3.790903091430664
    5. '<|end|>' → logprob: -7.040903091430664
    6. ' ' → logprob: -7.290903091430664
    7. ' espaces' → logprob: -8.040903091430664
    8. 'e' → logprob: -8.040903091430664
    9. '```' → logprob: -8.665903091430664
    10. 'space' → logprob: -8.665903091430664

Token 58: ' des' (ID: 731)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.4610002338886261
    2. ' des' → logprob: -1.9610002040863037
    3. ' espace' → logprob: -2.3360002040863037
    4. ''espace' → logprob: -3.2110002040863037
    5. 'des' → logprob: -4.211000442504883
    6. 'un' → logprob: -4.461000442504883
    7. 'space' → logprob: -4.461000442504883
    8. 'es' → logprob: -4.586000442504883
    9. ' un' → logprob: -4.586000442504883
    10. 'spaces' → logprob: -4.711000442504883

Token 59: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.007937708869576454
    2. 'esp' → logprob: -5.882937908172607
    3. ' espace' → logprob: -6.132937908172607
    4. ''esp' → logprob: -7.132937908172607
    5. 'spaces' → logprob: -7.507937908172607
    6. 'space' → logprob: -7.882937908172607
    7. ''espace' → logprob: -7.882937908172607
    8. 'es' → logprob: -8.88293743133545
    9. ' espacios' → logprob: -9.00793743133545
    10. ' ' → logprob: -9.25793743133545

Token 60: '.
' (ID: 558)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.7195065021514893
    2. 's' → logprob: -1.0945065021514893
    3. ' numbers' → logprob: -2.4695065021514893
    4. 'n' → logprob: -4.09450626373291
    5. 'values' → logprob: -4.34450626373291
    6. ' nombres' → logprob: -4.46950626373291
    7. ' ' → logprob: -5.09450626373291
    8. 'nums' → logprob: -5.34450626373291
    9. 'a' → logprob: -5.46950626373291
    10. 'arr' → logprob: -5.71950626373291

Token 61: '#' (ID: 2)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.771664559841156
    2. 'numbers' → logprob: -1.0216646194458008
    3. ' numbers' → logprob: -2.646664619445801
    4. 'l' → logprob: -4.146664619445801
    5. 'arr' → logprob: -4.521664619445801
    6. 'a' → logprob: -4.771664619445801
    7. 't' → logprob: -4.771664619445801
    8. 'nums' → logprob: -4.896664619445801
    9. 'values' → logprob: -5.021664619445801
    10. 'n' → logprob: -5.271664619445801

Token 62: ' La' (ID: 3038)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.6875277757644653
    2. 'numbers' → logprob: -0.9375277757644653
    3. 'lst' → logprob: -3.562527656555176
    4. 'values' → logprob: -3.937527656555176
    5. 'l' → logprob: -4.812527656555176
    6. ' numbers' → logprob: -4.812527656555176
    7. 'nums' → logprob: -5.187527656555176
    8. 's' → logprob: -5.187527656555176
    9. 'line' → logprob: -5.187527656555176
    10. 'sequence' → logprob: -5.562527656555176

Token 63: ' fonction' (ID: 17610)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -1.589124083518982
    2. '#' → logprob: -1.714124083518982
    3. 'l' → logprob: -2.2141242027282715
    4. 'ligne' → logprob: -2.4641242027282715
    5. 's' → logprob: -2.8391242027282715
    6. ' numbers' → logprob: -2.9641242027282715
    7. 'lst' → logprob: -3.0891242027282715
    8. 'liste' → logprob: -3.4641242027282715
    9. 'arr' → logprob: -3.5891242027282715
    10. 'val' → logprob: -3.9641242027282715

Token 64: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20518088340759277
    2. ' input' → logprob: -1.8301808834075928
    3. 'numbers' → logprob: -4.455181121826172
    4. 'list' → logprob: -4.955181121826172
    5. 'values' → logprob: -5.830181121826172
    6. 's' → logprob: -6.830181121826172
    7. ' numbers' → logprob: -7.580181121826172
    8. 'data' → logprob: -7.955181121826172
    9. ' list' → logprob: -8.330181121826172
    10. ' values' → logprob: -8.455181121826172

Token 65: '()' (ID: 416)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.4287678003311157
    2. '()' → logprob: -1.0537678003311157
    3. '())' → logprob: -10.803768157958984
    4. '(' → logprob: -11.803768157958984
    5. '()).' → logprob: -11.928768157958984
    6. 's' → logprob: -12.178768157958984
    7. '()
' → logprob: -12.428768157958984
    8. '()

' → logprob: -12.553768157958984
    9. ')' → logprob: -12.678768157958984
    10. ' ()' → logprob: -13.053768157958984

Token 66: ' récup' (ID: 62856)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.18946272134780884
    2. '()' → logprob: -2.189462661743164
    3. '.split' → logprob: -3.689462661743164
    4. '.' → logprob: -3.939462661743164
    5. ')' → logprob: -5.439462661743164
    6. 'split' → logprob: -5.439462661743164
    7. 's' → logprob: -5.814462661743164
    8. 'spl' → logprob: -6.814462661743164
    9. ' .' → logprob: -7.064462661743164
    10. '.strip' → logprob: -7.439462661743164

Token 67: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.00048596507986076176
    2. 'ere' → logprob: -8.500486373901367
    3. '`' → logprob: -9.125486373901367
    4. 'è' → logprob: -9.375486373901367
    5. 'èr' → logprob: -10.625486373901367
    6. '\' → logprob: -10.875486373901367
    7. '[' → logprob: -11.250486373901367
    8. 'ére' → logprob: -12.500486373901367
    9. '```' → logprob: -12.625486373901367
    10. 'èrent' → logprob: -12.875486373901367

Token 68: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5387012958526611
    2. ' une' → logprob: -1.6637012958526611
    3. '()' → logprob: -2.163701295852661
    4. ' les' → logprob: -3.788701295852661
    5. 'une' → logprob: -3.913701295852661
    6. 'la' → logprob: -4.038701057434082
    7. ' l' → logprob: -4.413701057434082
    8. 'l' → logprob: -4.538701057434082
    9. 'les' → logprob: -5.038701057434082
    10. '().' → logprob: -5.413701057434082

Token 69: ' ligne' (ID: 19583)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.41472873091697693
    2. ' chaîne' → logprob: -1.6647287607192993
    3. 's' → logprob: -3.2897286415100098
    4. 'string' → logprob: -3.4147286415100098
    5. 'liste' → logprob: -3.7897286415100098
    6. 'input' → logprob: -4.03972864151001
    7. ' chaine' → logprob: -4.53972864151001
    8. 'entrée' → logprob: -5.03972864151001
    9. 'ligne' → logprob: -5.03972864151001
    10. 'cha' → logprob: -5.66472864151001

Token 70: ' sous' (ID: 14487)
  Prédit: ' suivante'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' suivante' → logprob: -0.2070966362953186
    2. ' complète' → logprob: -2.957096576690674
    3. 's' → logprob: -3.207096576690674
    4. ' ' → logprob: -3.957096576690674
    5. ' de' → logprob: -4.457096576690674
    6. ' s' → logprob: -4.582096576690674
    7. ' d' → logprob: -4.707096576690674
    8. ' ,' → logprob: -5.332096576690674
    9. ',' → logprob: -5.457096576690674
    10. ' )' → logprob: -5.832096576690674

Token 71: ' forme' (ID: 27450)
  Prédit: ' forme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forme' → logprob: -0.04594044387340546
    2. 'forme' → logprob: -3.170940399169922
    3. 'form' → logprob: -6.045940399169922
    4. 'chaine' → logprob: -8.420940399169922
    5. ' form' → logprob: -9.045940399169922
    6. 'forma' → logprob: -9.295940399169922
    7. 'la' → logprob: -9.420940399169922
    8. 'format' → logprob: -11.045940399169922
    9. ' la' → logprob: -11.045940399169922
    10. 'f' → logprob: -12.795940399169922

Token 72: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.08080540597438812
    2. 'd' → logprob: -2.8308053016662598
    3. ' de' → logprob: -4.20580530166626
    4. 'de' → logprob: -5.70580530166626
    5. ')' → logprob: -8.705805778503418
    6. '<|end|>' → logprob: -9.955805778503418
    7. '#' → logprob: -10.205805778503418
    8. ' =' → logprob: -10.955805778503418
    9. '=' → logprob: -11.205805778503418
    10. 's' → logprob: -11.205805778503418

Token 73: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.27477023005485535
    2. ' chaîne' → logprob: -2.0247702598571777
    3. 'cha' → logprob: -2.2747702598571777
    4. ' chaine' → logprob: -5.899770259857178
    5. 'string' → logprob: -6.774770259857178
    6. 'texte' → logprob: -7.024770259857178
    7. 'une' → logprob: -8.52476978302002
    8. 'str' → logprob: -8.52476978302002
    9. ' string' → logprob: -9.39976978302002
    10. ' chaînes' → logprob: -9.52476978302002

Token 74: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3385503888130188
    2. 'de' → logprob: -1.588550329208374
    3. 's' → logprob: -2.963550329208374
    4. ' ' → logprob: -5.088550567626953
    5. '.split' → logprob: -5.088550567626953
    6. ' s' → logprob: -5.838550567626953
    7. 'spl' → logprob: -5.963550567626953
    8. ')' → logprob: -6.088550567626953
    9. 'split' → logprob: -6.338550567626953
    10. ',' → logprob: -6.588550567626953

Token 75: ' caractères' (ID: 183106)
  Prédit: 'texte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'texte' → logprob: -0.5910019874572754
    2. 'car' → logprob: -1.3410019874572754
    3. 'chaine' → logprob: -2.0910019874572754
    4. ' caractères' → logprob: -2.9660019874572754
    5. 'cha' → logprob: -5.966001987457275
    6. ' texte' → logprob: -6.466001987457275
    7. ' chaîne' → logprob: -6.466001987457275
    8. 'string' → logprob: -7.216001987457275
    9. 'chain' → logprob: -7.341001987457275
    10. 'str' → logprob: -8.091001510620117

Token 76: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16438299417495728
    2. ')' → logprob: -2.9143829345703125
    3. 'n' → logprob: -3.1643829345703125
    4. ',' → logprob: -3.7893829345703125
    5. '.' → logprob: -5.2893829345703125
    6. 'tokens' → logprob: -5.6643829345703125
    7. ' )' → logprob: -5.9143829345703125
    8. '#' → logprob: -5.9143829345703125
    9. 'spl' → logprob: -6.0393829345703125
    10. 'numbers' → logprob: -6.2893829345703125

Token 77: '#' (ID: 2)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.5237683653831482
    2. 'l' → logprob: -1.898768424987793
    3. 'a' → logprob: -2.648768424987793
    4. 's' → logprob: -2.898768424987793
    5. 'arr' → logprob: -3.273768424987793
    6. 't' → logprob: -3.773768424987793
    7. 'n' → logprob: -3.773768424987793
    8. 'nums' → logprob: -4.273768424987793
    9. 'lst' → logprob: -5.023768424987793
    10. 'ent' → logprob: -5.148768424987793

Token 78: ' split' (ID: 12648)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.37158164381980896
    2. 'l' → logprob: -1.8715816736221313
    3. 'arr' → logprob: -3.121581554412842
    4. 'lst' → logprob: -4.121581554412842
    5. 'a' → logprob: -4.246581554412842
    6. 's' → logprob: -4.371581554412842
    7. 'values' → logprob: -4.371581554412842
    8. 't' → logprob: -4.621581554412842
    9. 'nums' → logprob: -4.746581554412842
    10. '#' → logprob: -4.871581554412842

Token 79: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03896889463067055
    2. '(' → logprob: -3.288968801498413
    3. '('' → logprob: -7.413969039916992
    4. '().' → logprob: -8.538969039916992
    5. '("' → logprob: -9.663969039916992
    6. ' ()' → logprob: -11.038969039916992
    7. '())' → logprob: -12.038969039916992
    8. '("("' → logprob: -12.163969039916992
    9. '(split' → logprob: -12.413969039916992
    10. '()`' → logprob: -12.663969039916992

Token 80: ' div' (ID: 4223)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.034554723650217056
    2. '(' → logprob: -3.4095547199249268
    3. ' ()' → logprob: -8.284554481506348
    4. '().' → logprob: -8.409554481506348
    5. ')' → logprob: -9.034554481506348
    6. '<|end|>' → logprob: -9.659554481506348
    7. '('' → logprob: -9.909554481506348
    8. 'split' → logprob: -10.534554481506348
    9. '())' → logprob: -10.534554481506348
    10. 's' → logprob: -11.409554481506348

Token 81: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.00033391619217582047
    2. 'ide' → logprob: -8.500333786010742
    3. 'i' → logprob: -9.875333786010742
    4. '```' → logprob: -11.500333786010742
    5. '   ' → logprob: -11.875333786010742
    6. '#' → logprob: -11.875333786010742
    7. '1' → logprob: -12.250333786010742
    8. 'ose' → logprob: -12.250333786010742
    9. ' ise' → logprob: -12.500333786010742
    10. 'erse' → logprob: -12.625333786010742

Token 82: ' cette' (ID: 7696)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.024714870378375053
    2. '('' → logprob: -4.149714946746826
    3. '(' → logprob: -5.524714946746826
    4. ' ()' → logprob: -6.399714946746826
    5. ' ' → logprob: -7.024714946746826
    6. '<|end|>' → logprob: -7.399714946746826
    7. ' la' → logprob: -7.649714946746826
    8. '("' → logprob: -8.149714469909668
    9. ')' → logprob: -9.149714469909668
    10. 's' → logprob: -9.399714469909668

Token 83: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.051105938851833344
    2. 'chaine' → logprob: -3.6761059761047363
    3. 'cha' → logprob: -4.051105976104736
    4. ' chaine' → logprob: -5.426105976104736
    5. ' ligne' → logprob: -6.676105976104736
    6. 'ligne' → logprob: -7.926105976104736
    7. ' cha' → logprob: -8.051105499267578
    8. ' ' → logprob: -8.551105499267578
    9. ' string' → logprob: -8.676105499267578
    10. 's' → logprob: -8.801105499267578

Token 84: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05682199448347092
    2. '(' → logprob: -3.4318220615386963
    3. '('' → logprob: -5.056821823120117
    4. '[' → logprob: -5.306821823120117
    5. '[]' → logprob: -6.056821823120117
    6. 's' → logprob: -6.306821823120117
    7. ')' → logprob: -6.306821823120117
    8. ' ' → logprob: -6.681821823120117
    9. ' ()' → logprob: -6.681821823120117
    10. ''' → logprob: -7.181821823120117

Token 85: ' sous' (ID: 14487)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.735680341720581
    2. ' des' → logprob: -0.860680341720581
    3. ' un' → logprob: -3.485680341720581
    4. 'des' → logprob: -3.610680341720581
    5. 'une' → logprob: -4.98568058013916
    6. ' espaces' → logprob: -5.11068058013916
    7. ' ' → logprob: -5.36068058013916
    8. ''une' → logprob: -5.73568058013916
    9. ' '' → logprob: -5.86068058013916
    10. '['' → logprob: -6.23568058013916

Token 86: '-cha' (ID: 163177)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.10069668292999268
    2. '-' → logprob: -3.350696563720703
    3. '-cha' → logprob: -4.100696563720703
    4. 'chain' → logprob: -4.350696563720703
    5. '-chain' → logprob: -4.725696563720703
    6. 'cha' → logprob: -5.475696563720703
    7. '_' → logprob: -5.850696563720703
    8. 'strings' → logprob: -5.975696563720703
    9. ' chain' → logprob: -6.225696563720703
    10. 's' → logprob: -6.600696563720703

Token 87: 'înes' (ID: 171517)
  Prédit: 'înes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'înes' → logprob: -0.1262212097644806
    2. 'nes' → logprob: -2.751221179962158
    3. 'î' → logprob: -3.001221179962158
    4. 'r' → logprob: -6.751221179962158
    5. 'ines' → logprob: -6.876221179962158
    6. ' nes' → logprob: -7.626221179962158
    7. '```' → logprob: -7.751221179962158
    8. 'Î' → logprob: -7.876221179962158
    9. 'ı' → logprob: -9.001221656799316
    10. '	' → logprob: -9.001221656799316

Token 88: ' pour' (ID: 1930)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.756263017654419
    2. '(' → logprob: -1.006263017654419
    3. '()' → logprob: -3.381263017654419
    4. 's' → logprob: -3.506263017654419
    5. ')' → logprob: -3.631263017654419
    6. ' (' → logprob: -4.00626277923584
    7. '[]' → logprob: -4.25626277923584
    8. ' ' → logprob: -4.38126277923584
    9. '['' → logprob: -5.13126277923584
    10. ''' → logprob: -5.13126277923584

Token 89: ' chaque' (ID: 21194)
  Prédit: ' créer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' créer' → logprob: -0.8188503384590149
    2. ' chaque' → logprob: -1.1938502788543701
    3. ' obtenir' → logprob: -1.9438502788543701
    4. ' form' → logprob: -3.56885027885437
    5. 'r' → logprob: -4.193850517272949
    6. 'former' → logprob: -5.068850517272949
    7. 'form' → logprob: -5.193850517272949
    8. ' en' → logprob: -5.443850517272949
    9. ' récupérer' → logprob: -5.443850517272949
    10. 's' → logprob: -5.568850517272949

Token 90: ' espace' (ID: 66004)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05236426740884781
    2. ' espace' → logprob: -3.4273643493652344
    3. 'élé' → logprob: -5.052364349365234
    4. 'es' → logprob: -5.427364349365234
    5. 's' → logprob: -6.427364349365234
    6. '  ' → logprob: -6.552364349365234
    7. ''espace' → logprob: -7.177364349365234
    8. ' espaces' → logprob: -7.427364349365234
    9. 'mot' → logprob: -7.427364349365234
    10. 'n' → logprob: -7.677364349365234

Token 91: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02597152441740036
    2. '.' → logprob: -4.650971412658691
    3. 's' → logprob: -5.400971412658691
    4. '#' → logprob: -5.650971412658691
    5. ' )' → logprob: -6.525971412658691
    6. '()' → logprob: -6.775971412658691
    7. ',' → logprob: -6.775971412658691
    8. ').' → logprob: -6.900971412658691
    9. '(' → logprob: -7.275971412658691
    10. '[' → logprob: -7.775971412658691

Token 92: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8471884727478027
    2. 'numbers' → logprob: -1.8471884727478027
    3. 't' → logprob: -2.0971884727478027
    4. 'l' → logprob: -2.0971884727478027
    5. 'a' → logprob: -2.2221884727478027
    6. 's' → logprob: -4.722188472747803
    7. 'v' → logprob: -4.972188472747803
    8. 'nums' → logprob: -5.222188472747803
    9. 'r' → logprob: -5.347188472747803
    10. 'e' → logprob: -5.472188472747803

Token 93: ' map' (ID: 4014)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9822067618370056
    2. 'l' → logprob: -1.2322068214416504
    3. 'n' → logprob: -1.6072068214416504
    4. 'numbers' → logprob: -2.6072068214416504
    5. 't' → logprob: -3.7322068214416504
    6. 'p' → logprob: -5.23220682144165
    7. 'lst' → logprob: -5.35720682144165
    8. 'arr' → logprob: -5.60720682144165
    9. 's' → logprob: -5.73220682144165
    10. '#' → logprob: -5.98220682144165

Token 94: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07793276757001877
    2. '(int' → logprob: -2.702932834625244
    3. '(lambda' → logprob: -4.952932834625244
    4. '(str' → logprob: -7.327932834625244
    5. '(
' → logprob: -8.702932357788086
    6. '(list' → logprob: -10.577932357788086
    7. '(f' → logprob: -11.577932357788086
    8. '(i' → logprob: -11.827932357788086
    9. '(float' → logprob: -11.952932357788086
    10. '(

' → logprob: -12.327932357788086

Token 95: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004318553023040295
    2. '(' → logprob: -6.129318714141846
    3. '(input' → logprob: -6.754318714141846
    4. ',' → logprob: -7.504318714141846
    5. '())' → logprob: -9.129318237304688
    6. '))' → logprob: -10.004318237304688
    7. '(n' → logprob: -10.129318237304688
    8. ',)' → logprob: -10.379318237304688
    9. ',input' → logprob: -10.504318237304688
    10. ' )' → logprob: -10.754318237304688

Token 96: ' ...)' (ID: 100545)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.595637321472168
    2. ' input' → logprob: -1.095637321472168
    3. ')' → logprob: -2.220637321472168
    4. ' )' → logprob: -5.595637321472168
    5. 'n' → logprob: -6.845637321472168
    6. ' n' → logprob: -7.845637321472168
    7. '(input' → logprob: -7.970637321472168
    8. '<|end|>' → logprob: -9.595637321472168
    9. '[input' → logprob: -9.720637321472168
    10. '=input' → logprob: -9.970637321472168

Token 97: ' convert' (ID: 8452)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024422090500593185
    2. '(' → logprob: -3.8994221687316895
    3. '(n' → logprob: -6.3994221687316895
    4. '(input' → logprob: -7.1494221687316895
    5. '(
' → logprob: -8.274421691894531
    6. '(s' → logprob: -8.524421691894531
    7. '(int' → logprob: -8.899421691894531
    8. '())' → logprob: -9.149421691894531
    9. '()' → logprob: -9.524421691894531
    10. ' )' → logprob: -9.524421691894531

Token 98: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.07171868532896042
    2. 'e' → logprob: -3.446718692779541
    3. 't' → logprob: -3.946718692779541
    4. 'i' → logprob: -5.446718692779541
    5. '(' → logprob: -5.571718692779541
    6. ')' → logprob: -6.071718692779541
    7. 'issez' → logprob: -6.821718692779541
    8. 'et' → logprob: -7.321718692779541
    9. 'ir' → logprob: -7.571718692779541
    10. '(map' → logprob: -7.696718692779541

Token 99: ' chaque' (ID: 21194)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012965269386768341
    2. ')' → logprob: -5.012965202331543
    3. ' chaque' → logprob: -6.512965202331543
    4. '(lambda' → logprob: -6.512965202331543
    5. '(str' → logprob: -7.262965202331543
    6. 'les' → logprob: -7.512965202331543
    7. 'each' → logprob: -8.137965202331543
    8. '(l' → logprob: -8.262965202331543
    9. '(
' → logprob: -9.012965202331543
    10. '(list' → logprob: -9.137965202331543

Token 100: ' sous' (ID: 14487)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.012950563803315163
    2. ' élément' → logprob: -4.512950420379639
    3. ' sous' → logprob: -7.137950420379639
    4. 's' → logprob: -7.762950420379639
    5. ' chaîne' → logprob: -9.012950897216797
    6. ' morceau' → logprob: -9.012950897216797
    7. 'element' → logprob: -9.512950897216797
    8. 'chaine' → logprob: -9.887950897216797
    9. ' ' → logprob: -9.887950897216797
    10. ')' → logprob: -9.887950897216797

Token 101: '-cha' (ID: 163177)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.2680560350418091
    2. ' chaîne' → logprob: -1.518056035041809
    3. ' chaine' → logprob: -5.0180559158325195
    4. 'cha' → logprob: -5.5180559158325195
    5. '-cha' → logprob: -6.0180559158325195
    6. ' chaînes' → logprob: -6.6430559158325195
    7. 'chain' → logprob: -7.2680559158325195
    8. 'string' → logprob: -7.7680559158325195
    9. '-' → logprob: -8.64305591583252
    10. 'élé' → logprob: -10.01805591583252

Token 102: 'îne' (ID: 55188)
  Prédit: 'îne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'îne' → logprob: -0.48007842898368835
    2. 'î' → logprob: -0.9800784587860107
    3. 'ne' → logprob: -6.855078220367432
    4. 'ïne' → logprob: -6.980078220367432
    5. 'înes' → logprob: -7.105078220367432
    6. 'ı' → logprob: -7.230078220367432
    7. 'ine' → logprob: -7.480078220367432
    8. 'Î' → logprob: -7.855078220367432
    9. 'i' → logprob: -8.10507869720459
    10. 'în' → logprob: -8.60507869720459

Token 103: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09951288998126984
    2. '(' → logprob: -2.849512815475464
    3. ' )' → logprob: -4.349513053894043
    4. '<|end|>' → logprob: -4.349513053894043
    5. ',' → logprob: -4.974513053894043
    6. ' ' → logprob: -6.599513053894043
    7. 's' → logprob: -7.849513053894043
    8. '(str' → logprob: -7.974513053894043
    9. '(lambda' → logprob: -7.974513053894043
    10. '(int' → logprob: -8.349513053894043

Token 104: ' entier' (ID: 80473)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.22102303802967072
    2. ' des' → logprob: -1.7210230827331543
    3. ' entier' → logprob: -4.596023082733154
    4. 'ent' → logprob: -5.221023082733154
    5. ' int' → logprob: -6.596023082733154
    6. 'un' → logprob: -6.971023082733154
    7. ' ent' → logprob: -7.221023082733154
    8. 'int' → logprob: -7.596023082733154
    9. 'des' → logprob: -8.846022605895996
    10. ' integer' → logprob: -9.221022605895996

Token 105: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11927046626806259
    2. '(' → logprob: -2.2442705631256104
    3. 's' → logprob: -6.744270324707031
    4. '(n' → logprob: -6.994270324707031
    5. 'n' → logprob: -7.119270324707031
    6. ' )' → logprob: -7.119270324707031
    7. '#' → logprob: -7.244270324707031
    8. '(
' → logprob: -7.494270324707031
    9. '()' → logprob: -7.869270324707031
    10. 'r' → logprob: -8.494270324707031

Token 106: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.578995943069458
    2. 'n' → logprob: -1.578995943069458
    3. ')' → logprob: -1.703995943069458
    4. 'arr' → logprob: -2.078995943069458
    5. 'numbers' → logprob: -2.203995943069458
    6. 's' → logprob: -3.453995943069458
    7. 't' → logprob: -3.703995943069458
    8. 'l' → logprob: -4.328995704650879
    9. 'r' → logprob: -4.328995704650879
    10. 'nums' → logprob: -4.453995704650879

Token 107: ' Enfin' (ID: 85274)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.3472036123275757
    2. 'numbers' → logprob: -1.5972036123275757
    3. 'lst' → logprob: -1.9722036123275757
    4. ' numbers' → logprob: -2.3472037315368652
    5. ' lst' → logprob: -2.5972037315368652
    6. 'l' → logprob: -2.8472037315368652
    7. 'a' → logprob: -3.2222037315368652
    8. ' arr' → logprob: -3.3472037315368652
    9. 'n' → logprob: -4.347203731536865
    10. ' l' → logprob: -4.347203731536865

Token 108: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25590184330940247
    2. ',' → logprob: -2.38090181350708
    3. ' n' → logprob: -2.50590181350708
    4. 'n' → logprob: -4.63090181350708
    5. ' )' → logprob: -5.13090181350708
    6. ' la' → logprob: -5.13090181350708
    7. '[' → logprob: -5.50590181350708
    8. ' list' → logprob: -5.75590181350708
    9. ' ,' → logprob: -5.88090181350708
    10. 's' → logprob: -6.00590181350708

Token 109: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3310234248638153
    2. ' list' → logprob: -1.3310234546661377
    3. ' l' → logprob: -4.581023216247559
    4. 'l' → logprob: -6.206023216247559
    5. ' n' → logprob: -6.331023216247559
    6. 'n' → logprob: -7.081023216247559
    7. 'li' → logprob: -7.706023216247559
    8. ' liste' → logprob: -7.831023216247559
    9. ' la' → logprob: -7.956023216247559
    10. ' li' → logprob: -8.331023216247559

Token 110: '(...)' (ID: 96375)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.034222088754177094
    2. '()' → logprob: -3.40922212600708
    3. 's' → logprob: -8.659221649169922
    4. '(...)' → logprob: -9.534221649169922
    5. '(s' → logprob: -9.784221649169922
    6. '(map' → logprob: -10.034221649169922
    7. '(
' → logprob: -10.159221649169922
    8. '(

' → logprob: -10.534221649169922
    9. ')' → logprob: -10.784221649169922
    10. '(range' → logprob: -11.034221649169922

Token 111: ' convert' (ID: 8452)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1196553036570549
    2. 's' → logprob: -2.9946553707122803
    3. ')' → logprob: -3.6196553707122803
    4. '=' → logprob: -4.244655132293701
    5. '()' → logprob: -4.869655132293701
    6. 'n' → logprob: -4.994655132293701
    7. ' =' → logprob: -5.869655132293701
    8. '(
' → logprob: -6.744655132293701
    9. 'r' → logprob: -8.24465560913086
    10. '(n' → logprob: -8.36965560913086

Token 112: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0004074354947078973
    2. 't' → logprob: -9.250407218933105
    3. 'ît' → logprob: -9.625407218933105
    4. 'issent' → logprob: -9.875407218933105
    5. 'i' → logprob: -10.000407218933105
    6. '(it' → logprob: -10.500407218933105
    7. '_it' → logprob: -11.125407218933105
    8. ' it' → logprob: -11.125407218933105
    9. 'iert' → logprob: -11.375407218933105
    10. 'issez' → logprob: -11.500407218933105

Token 113: ' l' (ID: 305)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.5644876956939697
    2. '(' → logprob: -1.4394876956939697
    3. ' la' → logprob: -2.3144876956939697
    4. 'map' → logprob: -3.1894876956939697
    5. 'la' → logprob: -3.8144876956939697
    6. 'l' → logprob: -4.439487457275391
    7. 'les' → logprob: -5.314487457275391
    8. 'le' → logprob: -5.814487457275391
    9. ' le' → logprob: -6.189487457275391
    10. ' map' → logprob: -6.564487457275391

Token 114: ''objet' (ID: 124566)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.6365854740142822
    2. 'e' → logprob: -1.0115854740142822
    3. 'a' → logprob: -2.2615854740142822
    4. ''ensemble' → logprob: -7.386585235595703
    5. '(map' → logprob: -8.261585235595703
    6. 'la' → logprob: -8.386585235595703
    7. '_' → logprob: -8.636585235595703
    8. ' la' → logprob: -8.636585235595703
    9. '   ' → logprob: -8.761585235595703
    10. ' les' → logprob: -9.386585235595703

Token 115: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.6173909902572632
    2. '(map' → logprob: -1.4923909902572632
    3. 'map' → logprob: -1.6173909902572632
    4. '<|end|>' → logprob: -3.8673911094665527
    5. '_map' → logprob: -5.367391109466553
    6. ' des' → logprob: -5.742391109466553
    7. ')' → logprob: -5.867391109466553
    8. 'm' → logprob: -6.992391109466553
    9. '	map' → logprob: -6.992391109466553
    10. ' ' → logprob: -7.617391109466553

Token 116: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0924474000930786
    2. '(' → logprob: -1.3424474000930786
    3. '()' → logprob: -1.5924474000930786
    4. 'en' → logprob: -2.342447280883789
    5. '[int' → logprob: -4.217447280883789
    6. '[]' → logprob: -4.467447280883789
    7. ' en' → logprob: -4.592447280883789
    8. '<|end|>' → logprob: -4.592447280883789
    9. 'into' → logprob: -4.967447280883789
    10. ' into' → logprob: -5.467447280883789

Token 117: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.0890038013458252
    2. ' liste' → logprob: -3.089003801345825
    3. 'une' → logprob: -4.339003562927246
    4. ' ' → logprob: -4.589003562927246
    5. ' un' → logprob: -4.839003562927246
    6. ' []' → logprob: -5.589003562927246
    7. ' la' → logprob: -7.089003562927246
    8. '[]' → logprob: -7.089003562927246
    9. ' a' → logprob: -7.089003562927246
    10. ' list' → logprob: -7.339003562927246

Token 118: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.1808236837387085
    2. 'liste' → logprob: -1.8058236837387085
    3. 'list' → logprob: -7.055823802947998
    4. ' list' → logprob: -8.93082332611084
    5. '<|end|>' → logprob: -10.80582332611084
    6. '```' → logprob: -11.18082332611084
    7. 's' → logprob: -11.30582332611084
    8. ' Liste' → logprob: -11.93082332611084
    9. 'Liste' → logprob: -11.93082332611084
    10. ' listes' → logprob: -12.05582332611084

Token 119: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0473913699388504
    2. 's' → logprob: -3.547391414642334
    3. '()' → logprob: -5.547391414642334
    4. '(
' → logprob: -5.672391414642334
    5. ')' → logprob: -5.922391414642334
    6. 'a' → logprob: -6.422391414642334
    7. 'n' → logprob: -6.422391414642334
    8. 't' → logprob: -7.172391414642334
    9. '(n' → logprob: -7.297391414642334
    10. '[' → logprob: -7.672391414642334

Token 120: ' ces' (ID: 10532)
  Prédit: ' ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.504917562007904
    2. 'ent' → logprob: -1.6299176216125488
    3. ' nombres' → logprob: -1.7549176216125488
    4. ' integers' → logprob: -5.004917621612549
    5. 'int' → logprob: -5.129917621612549
    6. 'n' → logprob: -5.254917621612549
    7. ' int' → logprob: -5.754917621612549
    8. 'inte' → logprob: -6.254917621612549
    9. ' n' → logprob: -6.629917621612549
    10. 's' → logprob: -6.879917621612549

Token 121: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.2317611426115036
    2. 'ent' → logprob: -1.60676109790802
    3. ' nombres' → logprob: -5.3567609786987305
    4. 'n' → logprob: -7.9817609786987305
    5. '_ent' → logprob: -7.9817609786987305
    6. 'inte' → logprob: -8.23176097869873
    7. ' entier' → logprob: -8.23176097869873
    8. ' integers' → logprob: -8.85676097869873
    9. ' éléments' → logprob: -10.10676097869873
    10. 'int' → logprob: -10.35676097869873

Token 122: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.03445695340633392
    2. 'i' → logprob: -3.409456968307495
    3. 'ières' → logprob: -7.659456729888916
    4. 'ier' → logprob: -8.159457206726074
    5. 'ière' → logprob: -11.409457206726074
    6. 'e' → logprob: -11.409457206726074
    7. '```' → logprob: -11.784457206726074
    8. 'ié' → logprob: -12.159457206726074
    9. 'ers' → logprob: -12.409457206726074
    10. 'ires' → logprob: -13.034457206726074

Token 123: ' et' (ID: 859)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.705633282661438
    2. ')' → logprob: -1.205633282661438
    3. 's' → logprob: -1.830633282661438
    4. '()' → logprob: -4.205633163452148
    5. 'n' → logprob: -4.705633163452148
    6. '(
' → logprob: -5.330633163452148
    7. '(n' → logprob: -5.455633163452148
    8. 'a' → logprob: -5.830633163452148
    9. ',' → logprob: -6.080633163452148
    10. '[' → logprob: -6.705633163452148

Token 124: ' l' (ID: 305)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.06572748720645905
    2. ' l' → logprob: -4.315727710723877
    3. ' la' → logprob: -4.315727710723877
    4. 'stock' → logprob: -4.565727710723877
    5. ' les' → logprob: -4.690727710723877
    6. 's' → logprob: -4.815727710723877
    7. ' stockage' → logprob: -6.440727710723877
    8. ' n' → logprob: -6.690727710723877
    9. '_stock' → logprob: -7.440727710723877
    10. '#' → logprob: -7.565727710723877

Token 125: ''ass' (ID: 43919)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1723197102546692
    2. ' =' → logprob: -1.9223196506500244
    3. ')' → logprob: -5.7973198890686035
    4. 's' → logprob: -6.6723198890686035
    5. '=[]' → logprob: -6.9223198890686035
    6. 'es' → logprob: -7.0473198890686035
    7. 'e' → logprob: -7.1723198890686035
    8. '#' → logprob: -7.1723198890686035
    9. 'a' → logprob: -7.2973198890686035
    10. '_' → logprob: -7.7973198890686035

Token 126: 'igne' (ID: 24120)
  Prédit: 'ign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ign' → logprob: -0.17425797879695892
    2. 'igne' → logprob: -1.9242579936981201
    3. '#' → logprob: -5.424257755279541
    4. 'ig' → logprob: -6.049257755279541
    5. 'i' → logprob: -6.174257755279541
    6. 'ignez' → logprob: -7.299257755279541
    7. 'igned' → logprob: -7.549257755279541
    8. 'e' → logprob: -7.549257755279541
    9. 'igner' → logprob: -8.0492582321167
    10. 'ignet' → logprob: -8.1742582321167

Token 127: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1248278021812439
    2. 's' → logprob: -2.9998278617858887
    3. ')' → logprob: -3.1248278617858887
    4. '_' → logprob: -5.124827861785889
    5. '[' → logprob: -5.749827861785889
    6. '(
' → logprob: -5.999827861785889
    7. ' )' → logprob: -5.999827861785889
    8. 'n' → logprob: -6.624827861785889
    9. ' ' → logprob: -6.624827861785889
    10. '()' → logprob: -6.749827861785889

Token 128: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.5424994230270386
    2. 'arr' → logprob: -1.6674994230270386
    3. 'numbers' → logprob: -1.7924994230270386
    4. ' numbers' → logprob: -1.9174994230270386
    5. ' a' → logprob: -2.917499542236328
    6. 't' → logprob: -3.167499542236328
    7. 'l' → logprob: -3.667499542236328
    8. ' arr' → logprob: -3.667499542236328
    9. ' t' → logprob: -3.792499542236328
    10. 'n' → logprob: -4.292499542236328

Token 129: ' variable' (ID: 11076)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1920084953308105
    2. ' ' → logprob: -2.0670084953308105
    3. 'n' → logprob: -2.3170084953308105
    4. 's' → logprob: -2.5670084953308105
    5. ' a' → logprob: -2.9420084953308105
    6. ' lst' → logprob: -2.9420084953308105
    7. 'l' → logprob: -3.0670084953308105
    8. ' array' → logprob: -3.4420084953308105
    9. ' t' → logprob: -3.9420084953308105
    10. 'lst' → logprob: -3.9420084953308105

Token 130: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0280195474624634
    2. 'numbers' → logprob: -1.9030195474624634
    3. ' a' → logprob: -2.028019428253174
    4. ' numbers' → logprob: -2.278019428253174
    5. 'arr' → logprob: -2.528019428253174
    6. ' lst' → logprob: -3.153019428253174
    7. 'lst' → logprob: -3.778019428253174
    8. 'l' → logprob: -3.903019428253174
    9. ' data' → logprob: -4.153019428253174
    10. 'data' → logprob: -4.278019428253174

Token 131: '.
' (ID: 558)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.39608967304229736
    2. ')' → logprob: -1.1460896730422974
    3. '[' → logprob: -5.271089553833008
    4. 's' → logprob: -6.771089553833008
    5. ' a' → logprob: -6.896089553833008
    6. '_a' → logprob: -7.771089553833008
    7. '(' → logprob: -8.021089553833008
    8. '[a' → logprob: -8.146089553833008
    9. ')a' → logprob: -9.021089553833008
    10. ']' → logprob: -9.146089553833008

Token 132: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.9266199160483666e-05
    2. ' a' → logprob: -10.875019073486328
    3. '_a' → logprob: -16.375019073486328
    4. '#a' → logprob: -17.125019073486328
    5. ' 
' → logprob: -17.375019073486328
    6. ''a' → logprob: -17.500019073486328
    7. '	a' → logprob: -17.500019073486328
    8. ',a' → logprob: -18.125019073486328
    9. '  
' → logprob: -18.500019073486328
    10. 's' → logprob: -18.625019073486328

Token 133: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029834488406777382
    2. '=' → logprob: -3.529834508895874
    3. '[' → logprob: -10.654834747314453
    4. '.' → logprob: -10.654834747314453
    5. 's' → logprob: -11.404834747314453
    6. ' ' → logprob: -11.654834747314453
    7. 'a' → logprob: -12.779834747314453
    8. ',' → logprob: -13.029834747314453
    9. ')' → logprob: -13.279834747314453
    10. ' =
' → logprob: -13.279834747314453

Token 134: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0019287518225610256
    2. ' list' → logprob: -6.251928806304932
    3. 'int' → logprob: -17.001928329467773
    4. '[list' → logprob: -17.251928329467773
    5. 'List' → logprob: -17.376928329467773
    6. 'li' → logprob: -17.876928329467773
    7. '=list' → logprob: -18.626928329467773
    8. '[' → logprob: -18.876928329467773
    9. 'lst' → logprob: -18.876928329467773
    10. 'l' → logprob: -19.126928329467773

Token 135: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5887959599494934
    2. '(map' → logprob: -0.8387959599494934
    3. '(input' → logprob: -4.838796138763428
    4. '(int' → logprob: -5.338796138763428
    5. '(
' → logprob: -11.33879566192627
    6. ' (' → logprob: -11.46379566192627
    7. '(m' → logprob: -11.71379566192627
    8. '(s' → logprob: -11.96379566192627
    9. '(split' → logprob: -11.96379566192627
    10. '(

' → logprob: -12.21379566192627

Token 136: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0622076541185379
    2. '(' → logprob: -2.8122076988220215
    3. '<int' → logprob: -9.062207221984863
    4. ' (' → logprob: -9.812207221984863
    5. '(
' → logprob: -10.437207221984863
    6. '[int' → logprob: -10.687207221984863
    7. 'int' → logprob: -12.562207221984863
    8. '<|end|>' → logprob: -13.062207221984863
    9. '=int' → logprob: -13.437207221984863
    10. '(input' → logprob: -13.562207221984863

Token 137: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.023300331085920334
    2. ',input' → logprob: -4.0233001708984375
    3. '(' → logprob: -5.5233001708984375
    4. ',' → logprob: -6.8983001708984375
    5. 'input' → logprob: -9.273300170898438
    6. ' (' → logprob: -10.773300170898438
    7. '=input' → logprob: -11.773300170898438
    8. ')' → logprob: -12.648300170898438
    9. ' ,' → logprob: -12.773300170898438
    10. '(
' → logprob: -12.898300170898438

Token 138: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.001041978714056313
    2. ' input' → logprob: -6.876041889190674
    3. '(input' → logprob: -11.626042366027832
    4. ' ' → logprob: -15.876042366027832
    5. ',input' → logprob: -17.126041412353516
    6. '	input' → logprob: -17.501041412353516
    7. '<input' → logprob: -17.876041412353516
    8. '=input' → logprob: -18.001041412353516
    9. '_input' → logprob: -18.251041412353516
    10. '[input' → logprob: -18.751041412353516

Token 139: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0007163656409829855
    2. '()' → logprob: -7.250716209411621
    3. '()))' → logprob: -12.250716209411621
    4. '())' → logprob: -14.000716209411621
    5. '())))' → logprob: -15.000716209411621
    6. '()));' → logprob: -15.250716209411621
    7. ' ().' → logprob: -15.875716209411621
    8. '(' → logprob: -16.875717163085938
    9. '()

' → logprob: -17.625717163085938
    10. ')' → logprob: -17.875717163085938

Token 140: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0024764856789261103
    2. 'strip' → logprob: -6.002476692199707
    3. 'rstrip' → logprob: -14.752476692199707
    4. ' split' → logprob: -15.002476692199707
    5. '(split' → logprob: -17.50247573852539
    6. '.split' → logprob: -19.12747573852539
    7. 'spl' → logprob: -19.25247573852539
    8. ')' → logprob: -19.37747573852539
    9. 'plit' → logprob: -20.37747573852539
    10. ' strip' → logprob: -20.87747573852539

Token 141: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.24226602911949158
    2. '()' → logprob: -1.742266058921814
    3. '())' → logprob: -3.2422659397125244
    4. '())))' → logprob: -7.9922661781311035
    5. '))' → logprob: -8.117265701293945
    6. '(' → logprob: -8.367265701293945
    7. ')' → logprob: -9.867265701293945
    8. '()));' → logprob: -11.117265701293945
    9. '())).' → logprob: -12.617265701293945
    10. '()))
' → logprob: -12.617265701293945

Token 142: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.38756799697875977
    2. 's' → logprob: -2.3875679969787598
    3. 'for' → logprob: -2.5125679969787598
    4. 'a' → logprob: -2.8875679969787598
    5. 'i' → logprob: -3.3875679969787598
    6. 'f' → logprob: -3.7625679969787598
    7. 'r' → logprob: -4.38756799697876
    8. 'n' → logprob: -5.63756799697876
    9. 'if' → logprob: -5.88756799697876
    10. '[' → logprob: -6.01256799697876

Token 143: ' Initialise' (ID: 179601)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.35430219769477844
    2. 'for' → logprob: -1.729302167892456
    3. 'a' → logprob: -3.354302167892456
    4. '#' → logprob: -3.729302167892456
    5. 'f' → logprob: -4.354302406311035
    6. 'i' → logprob: -4.354302406311035
    7. 'result' → logprob: -4.854302406311035
    8. 'm' → logprob: -5.354302406311035
    9. 'r' → logprob: -5.479302406311035
    10. 'if' → logprob: -5.479302406311035

Token 144: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6581034660339355
    2. ' result' → logprob: -2.6581034660339355
    3. 'b' → logprob: -2.7831034660339355
    4. ' s' → logprob: -2.9081034660339355
    5. 'result' → logprob: -3.1581034660339355
    6. ' a' → logprob: -3.6581034660339355
    7. 'sum' → logprob: -3.6581034660339355
    8. 'a' → logprob: -3.7831034660339355
    9. ' ' → logprob: -3.9081034660339355
    10. ' un' → logprob: -4.0331034660339355

Token 145: ' variable' (ID: 11076)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2538186311721802
    2. 'result' → logprob: -2.8788185119628906
    3. 'b' → logprob: -3.5038185119628906
    4. 'max' → logprob: -3.7538185119628906
    5. 'dp' → logprob: -3.7538185119628906
    6. 'c' → logprob: -4.003818511962891
    7. 'res' → logprob: -4.128818511962891
    8. 'r' → logprob: -4.378818511962891
    9. ' somme' → logprob: -5.003818511962891
    10. 'count' → logprob: -5.003818511962891

Token 146: ' ans' (ID: 3345)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.26253578066825867
    2. ' s' → logprob: -2.137535810470581
    3. 'sum' → logprob: -3.637535810470581
    4. 'result' → logprob: -4.137535572052002
    5. ' total' → logprob: -4.512535572052002
    6. ' result' → logprob: -4.512535572052002
    7. ' sum' → logprob: -4.512535572052002
    8. 'total' → logprob: -4.887535572052002
    9. 'max' → logprob: -5.637535572052002
    10. 'm' → logprob: -5.762535572052002

Token 147: ' avec' (ID: 3937)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011165018193423748
    2. '=' → logprob: -4.511165142059326
    3. ' ' → logprob: -9.261164665222168
    4. ',' → logprob: -12.136164665222168
    5. 's' → logprob: -12.261164665222168
    6. '0' → logprob: -12.636164665222168
    7. 'a' → logprob: -12.886164665222168
    8. '_' → logprob: -13.261164665222168
    9. ' a' → logprob: -13.261164665222168
    10. 'ans' → logprob: -14.636164665222168

Token 148: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013663081917911768
    2. ' ' → logprob: -6.876366138458252
    3. 'a' → logprob: -8.75136661529541
    4. 'n' → logprob: -9.50136661529541
    5. '-' → logprob: -10.25136661529541
    6. '[]' → logprob: -10.62636661529541
    7. 'float' → logprob: -11.37636661529541
    8. ' n' → logprob: -12.37636661529541
    9. ' a' → logprob: -12.37636661529541
    10. 'max' → logprob: -12.87636661529541

Token 149: ' valeur' (ID: 41664)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026034239679574966
    2. 'max' → logprob: -5.026034355163574
    3. 'a' → logprob: -5.401034355163574
    4. 'val' → logprob: -5.776034355163574
    5. 'n' → logprob: -6.526034355163574
    6. 'value' → logprob: -6.526034355163574
    7. 'prem' → logprob: -6.651034355163574
    8. 'maximum' → logprob: -6.776034355163574
    9. 'len' → logprob: -7.026034355163574
    10. '-' → logprob: -7.276034355163574

Token 150: ' de' (ID: 334)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004843884147703648
    2. ' ' → logprob: -5.754843711853027
    3. 'a' → logprob: -6.754843711853027
    4. 'n' → logprob: -8.504843711853027
    5. 'max' → logprob: -9.504843711853027
    6. ' a' → logprob: -9.879843711853027
    7. '1' → logprob: -10.004843711853027
    8. '-' → logprob: -10.129843711853027
    9. '=' → logprob: -10.379843711853027
    10. ' n' → logprob: -10.629843711853027

Token 151: ' n' (ID: 297)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10464514791965485
    2. 'a' → logprob: -3.104645252227783
    3. ' ' → logprob: -3.354645252227783
    4. 'n' → logprob: -5.229645252227783
    5. ' a' → logprob: -5.479645252227783
    6. ' n' → logprob: -5.604645252227783
    7. '-' → logprob: -5.729645252227783
    8. '1' → logprob: -6.479645252227783
    9. ' -' → logprob: -7.604645252227783
    10. ' max' → logprob: -7.979645252227783

Token 152: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 153: '#' (ID: 2)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -3.7697225252486533e-06
    2. 'a' → logprob: -12.625003814697266
    3. ' ans' → logprob: -15.625003814697266
    4. 'n' → logprob: -16.000003814697266
    5. '=' → logprob: -16.375003814697266
    6. '	ans' → logprob: -16.500003814697266
    7. '(ans' → logprob: -18.000003814697266
    8. '```' → logprob: -18.375003814697266
    9. '`' → logprob: -18.500003814697266
    10. '#' → logprob: -18.625003814697266

Token 154: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0002986392646562308
    2. ' ans' → logprob: -8.125298500061035
    3. '(ans' → logprob: -14.125298500061035
    4. '	ans' → logprob: -14.125298500061035
    5. 'a' → logprob: -15.000298500061035
    6. '_ans' → logprob: -15.625298500061035
    7. '
' → logprob: -15.750298500061035
    8. 'answer' → logprob: -16.12529945373535
    9. '```' → logprob: -16.62529945373535
    10. 'anst' → logprob: -16.75029945373535

Token 155: ' va' (ID: 3423)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4295886754989624
    2. ' =' → logprob: -1.0545886754989624
    3. ' ' → logprob: -8.679588317871094
    4. ')' → logprob: -9.179588317871094
    5. '*=' → logprob: -9.429588317871094
    6. ',' → logprob: -9.554588317871094
    7. ' *=' → logprob: -9.554588317871094
    8. '-' → logprob: -9.554588317871094
    9. '-=' → logprob: -9.679588317871094
    10. ' -=' → logprob: -9.804588317871094

Token 156: ' probablement' (ID: 87740)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10609061270952225
    2. '=' → logprob: -2.356090545654297
    3. ' ' → logprob: -5.231090545654297
    4. '_' → logprob: -9.106090545654297
    5. ' +=' → logprob: -9.231090545654297
    6. ' représ' → logprob: -9.731090545654297
    7. '  ' → logprob: -9.856090545654297
    8. ',' → logprob: -10.106090545654297
    9. ' servir' → logprob: -10.856090545654297
    10. ' -=' → logprob: -11.231090545654297

Token 157: ' servir' (ID: 42557)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5300729870796204
    2. ' servir' → logprob: -1.2800729274749756
    3. '=' → logprob: -2.6550729274749756
    4. ' être' → logprob: -4.030073165893555
    5. ' ' → logprob: -4.530073165893555
    6. ' stock' → logprob: -4.905073165893555
    7. ' représ' → logprob: -4.905073165893555
    8. 'être' → logprob: -5.030073165893555
    9. '_' → logprob: -6.280073165893555
    10. 'serv' → logprob: -6.530073165893555

Token 158: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.4131625890731812
    2. ' à' → logprob: -1.4131625890731812
    3. ' ' → logprob: -1.6631625890731812
    4. '=' → logprob: -2.2881627082824707
    5. ' a' → logprob: -2.2881627082824707
    6. ' to' → logprob: -2.4131627082824707
    7. ' as' → logprob: -4.038162708282471
    8. ',' → logprob: -6.038162708282471
    9. 'a' → logprob: -6.038162708282471
    10. '_' → logprob: -6.288162708282471

Token 159: ' compter' (ID: 81694)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.2134469598531723
    2. 'stock' → logprob: -1.7134469747543335
    3. ' conserver' → logprob: -5.338447093963623
    4. ' représ' → logprob: -6.713447093963623
    5. 'calcul' → logprob: -7.213447093963623
    6. 'con' → logprob: -7.338447093963623
    7. ' compter' → logprob: -7.588447093963623
    8. ' suivre' → logprob: -7.713447093963623
    9. ' garder' → logprob: -7.838447093963623
    10. 'store' → logprob: -7.838447093963623

Token 160: ' ou' (ID: 2031)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 161: ' mém' (ID: 136981)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.3355298936367035
    2. 'stock' → logprob: -2.0855298042297363
    3. ' représ' → logprob: -3.3355298042297363
    4. ' conserver' → logprob: -4.085529804229736
    5. '#' → logprob: -4.210529804229736
    6. ' déterminer' → logprob: -4.335529804229736
    7. ' comparer' → logprob: -4.835529804229736
    8. 'max' → logprob: -5.085529804229736
    9. 'être' → logprob: -5.210529804229736
    10. ' calcul' → logprob: -5.335529804229736

Token 162: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.016637513414025307
    2. 'orer' → logprob: -4.141637325286865
    3. ' or' → logprob: -8.516637802124023
    4. '[' → logprob: -9.141637802124023
    5. '|' → logprob: -9.391637802124023
    6. 'orrer' → logprob: -10.141637802124023
    7. 'o' → logprob: -10.266637802124023
    8. '#' → logprob: -10.516637802124023
    9. '_' → logprob: -10.891637802124023
    10. '=' → logprob: -11.641637802124023

Token 163: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.00015312091272789985
    2. 'er' → logprob: -8.875153541564941
    3. 'ser' → logprob: -12.000153541564941
    4. 'ise' → logprob: -12.625153541564941
    5. 'is' → logprob: -13.625153541564941
    6. 'iquer' → logprob: -14.375153541564941
    7. 'isation' → logprob: -14.500153541564941
    8. '#' → logprob: -14.875153541564941
    9. 'izer' → logprob: -15.625153541564941
    10. 'isé' → logprob: -15.750153541564941

Token 164: ' un' (ID: 537)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5506498217582703
    2. ' ' → logprob: -1.425649881362915
    3. '0' → logprob: -2.800649881362915
    4. 'n' → logprob: -3.175649881362915
    5. ' a' → logprob: -3.800649881362915
    6. 'a' → logprob: -4.550649642944336
    7. ' l' → logprob: -4.675649642944336
    8. '<|end|>' → logprob: -4.925649642944336
    9. '1' → logprob: -5.050649642944336
    10. '  ' → logprob: -5.300649642944336

Token 165: ' résultat' (ID: 62556)
  Prédit: ' espace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espace' → logprob: -1.3717167377471924
    2. ' ' → logprob: -1.7467167377471924
    3. 'max' → logprob: -2.4967167377471924
    4. '_' → logprob: -2.4967167377471924
    5. ' maximum' → logprob: -2.6217167377471924
    6. ' max' → logprob: -2.7467167377471924
    7. 'es' → logprob: -3.2467167377471924
    8. ' résultat' → logprob: -3.4967167377471924
    9. '=' → logprob: -3.7467167377471924
    10. ' =' → logprob: -3.8717167377471924

Token 166: ' reli' (ID: 10856)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6572222113609314
    2. '
' → logprob: -1.9072222709655762
    3. '=' → logprob: -2.407222270965576
    4. ' =' → logprob: -2.657222270965576
    5. ' 
' → logprob: -3.157222270965576
    6. '<|end|>' → logprob: -3.282222270965576
    7. 'n' → logprob: -3.657222270965576
    8. '#' → logprob: -3.782222270965576
    9. 'a' → logprob: -4.282222270965576
    10. ')' → logprob: -5.282222270965576

Token 167: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.008186519145965576
    2. 'e' → logprob: -5.883186340332031
    3. ' à' → logprob: -6.008186340332031
    4. 'à' → logprob: -6.508186340332031
    5. 'ié' → logprob: -7.758186340332031
    6. '=' → logprob: -8.508186340332031
    7. 'u' → logprob: -9.008186340332031
    8. 'è' → logprob: -9.133186340332031
    9. '#' → logprob: -9.258186340332031
    10. 'au' → logprob: -9.758186340332031

Token 168: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6298297643661499
    2. ' a' → logprob: -1.75482976436615
    3. ' ' → logprob: -1.87982976436615
    4. 'a' → logprob: -2.8798298835754395
    5. ' =' → logprob: -4.0048298835754395
    6. ' to' → logprob: -4.1298298835754395
    7. ' au' → logprob: -4.2548298835754395
    8. '_' → logprob: -4.5048298835754395
    9. 'à' → logprob: -4.8798298835754395
    10. 'au' → logprob: -5.0048298835754395

Token 169: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14273406565189362
    2. ' n' → logprob: -2.3927340507507324
    3. 'a' → logprob: -3.2677340507507324
    4. ' a' → logprob: -6.517734050750732
    5. 'l' → logprob: -6.642734050750732
    6. ' la' → logprob: -8.01773452758789
    7. 'la' → logprob: -8.51773452758789
    8. '0' → logprob: -9.51773452758789
    9. ' l' → logprob: -10.39273452758789
    10. ' ' → logprob: -10.64273452758789

Token 170: ' sé' (ID: 7462)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1220477968454361
    2. 'a' → logprob: -2.8720479011535645
    3. ' n' → logprob: -2.8720479011535645
    4. ' a' → logprob: -7.2470479011535645
    5. 's' → logprob: -7.8720479011535645
    6. 'nombre' → logprob: -9.247047424316406
    7. ' ' → logprob: -9.747047424316406
    8. ' sequence' → logprob: -9.872047424316406
    9. '1' → logprob: -9.997047424316406
    10. 'sequence' → logprob: -10.122047424316406

Token 171: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0030781254172325134
    2. 'q' → logprob: -6.753077983856201
    3. 'quences' → logprob: -6.878077983856201
    4. 'n' → logprob: -8.00307846069336
    5. 'a' → logprob: -8.75307846069336
    6. 'qu' → logprob: -8.75307846069336
    7. '#' → logprob: -9.62807846069336
    8. '   ' → logprob: -10.37807846069336
    9. 'QUENCE' → logprob: -10.37807846069336
    10. 'quent' → logprob: -11.12807846069336

Token 172: ' de' (ID: 334)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1830997467041016
    2. 'a' → logprob: -1.3080997467041016
    3. ' ' → logprob: -1.3080997467041016
    4. ')' → logprob: -3.6830997467041016
    5. '
' → logprob: -3.8080997467041016
    6. ' =' → logprob: -3.9330997467041016
    7. '=' → logprob: -4.058099746704102
    8. ' 
' → logprob: -4.058099746704102
    9. '<|end|>' → logprob: -4.433099746704102
    10. ',' → logprob: -4.808099746704102

Token 173: ' nombres' (ID: 76205)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07415309548377991
    2. 'n' → logprob: -2.824153184890747
    3. ' a' → logprob: -4.949152946472168
    4. ' n' → logprob: -5.699152946472168
    5. 'ré' → logprob: -7.574152946472168
    6. '1' → logprob: -8.824152946472168
    7. 'r' → logprob: -8.824152946472168
    8. 'l' → logprob: -9.199152946472168
    9. 'ans' → logprob: -9.449152946472168
    10. 'sé' → logprob: -9.449152946472168

Token 174: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8199748396873474
    2. 'a' → logprob: -1.6949748992919922
    3. '<|end|>' → logprob: -2.319974899291992
    4. ')' → logprob: -2.819974899291992
    5. 'n' → logprob: -3.069974899291992
    6. ' ' → logprob: -3.194974899291992
    7. '=' → logprob: -3.694974899291992
    8. '.' → logprob: -3.819974899291992
    9. ' 
' → logprob: -4.444974899291992
    10. '#' → logprob: -4.569974899291992

Token 175: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.011570573784410954
    2. 'a' → logprob: -4.511570453643799
    3. 'for' → logprob: -9.386570930480957
    4. 'i' → logprob: -9.511570930480957
    5. 'max' → logprob: -9.761570930480957
    6. '(ans' → logprob: -10.011570930480957
    7. ' ans' → logprob: -10.136570930480957
    8. 'count' → logprob: -10.636570930480957
    9. '	ans' → logprob: -10.886570930480957
    10. 'm' → logprob: -11.011570930480957

Token 176: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1427755057811737
    2. '=' → logprob: -2.017775535583496
    3. ' ' → logprob: -9.517775535583496
    4. '.' → logprob: -12.017775535583496
    5. ' =
' → logprob: -12.392775535583496
    6. ' +=' → logprob: -12.517775535583496
    7. ',' → logprob: -12.517775535583496
    8. ')' → logprob: -13.267775535583496
    9. '=int' → logprob: -13.642775535583496
    10. ' *=' → logprob: -14.017775535583496

Token 177: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5760128498077393
    2. ' n' → logprob: -0.8260128498077393
    3. '0' → logprob: -9.57601261138916
    4. ' ' → logprob: -13.45101261138916
    5. '	n' → logprob: -13.82601261138916
    6. ' ' → logprob: -14.45101261138916
    7. '1' → logprob: -15.70101261138916
    8. '_n' → logprob: -15.82601261138916
    9. '(n' → logprob: -16.076013565063477
    10. '10' → logprob: -16.451013565063477

Token 178: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5034139752388
    2. 'for' → logprob: -1.0034139156341553
    3. ' for' → logprob: -4.128414154052734
    4. '\n' → logprob: -5.503414154052734
    5. ' 
' → logprob: -6.253414154052734
    6. '-' → logprob: -6.253414154052734
    7. '' → logprob: -6.378414154052734
    8. '
' → logprob: -7.253414154052734
    9. 'a' → logprob: -7.878414154052734
    10. '#' → logprob: -8.128414154052734

Token 179: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.051202330738306046
    2. '
' → logprob: -3.5512022972106934
    3. ' for' → logprob: -4.676202297210693
    4. 'f' → logprob: -5.426202297210693
    5. 'a' → logprob: -5.801202297210693
    6. ' 
' → logprob: -6.676202297210693
    7. '#' → logprob: -7.426202297210693
    8. 'i' → logprob: -7.551202297210693
    9. '' → logprob: -7.551202297210693
    10. ' ' → logprob: -7.676202297210693

Token 180: ' Initialise' (ID: 179601)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004427032079547644
    2. 'a' → logprob: -6.129426956176758
    3. ' for' → logprob: -6.754426956176758
    4. 'i' → logprob: -7.004426956176758
    5. 'f' → logprob: -10.254426956176758
    6. '#' → logprob: -10.254426956176758
    7. 'b' → logprob: -10.629426956176758
    8. '_' → logprob: -11.379426956176758
    9. 'fo' → logprob: -11.504426956176758
    10. ')' → logprob: -11.629426956176758

Token 181: ' s' (ID: 265)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6277375817298889
    2. ' une' → logprob: -1.1277375221252441
    3. '_' → logprob: -3.252737522125244
    4. ' ' → logprob: -3.627737522125244
    5. 'a' → logprob: -3.627737522125244
    6. ' un' → logprob: -4.002737522125244
    7. ' i' → logprob: -4.252737522125244
    8. ' la' → logprob: -5.377737522125244
    9. ' l' → logprob: -6.002737522125244
    10. ' an' → logprob: -6.377737522125244

Token 182: ' avec' (ID: 3937)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.036328934133052826
    2. '=' → logprob: -3.5363290309906006
    3. 'um' → logprob: -5.1613287925720215
    4. ' ' → logprob: -8.91132926940918
    5. 'u' → logprob: -9.28632926940918
    6. 't' → logprob: -9.28632926940918
    7. 'a' → logprob: -9.66132926940918
    8. '=[]' → logprob: -9.91132926940918
    9. 'omme' → logprob: -10.03632926940918
    10. ',' → logprob: -10.16132926940918

Token 183: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00515192374587059
    2. ' ' → logprob: -5.505151748657227
    3. 'a' → logprob: -7.005151748657227
    4. '[]' → logprob: -9.630151748657227
    5. ' a' → logprob: -10.380151748657227
    6. '1' → logprob: -10.755151748657227
    7. 'n' → logprob: -11.130151748657227
    8. ' []' → logprob: -12.130151748657227
    9. '[' → logprob: -12.255151748657227
    10. '-' → logprob: -12.505151748657227

Token 184: ' première' (ID: 23423)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1190006285905838
    2. 'a' → logprob: -2.8690006732940674
    3. ' ' → logprob: -2.9940006732940674
    4. '1' → logprob: -6.119000434875488
    5. ' a' → logprob: -6.119000434875488
    6. '[' → logprob: -8.369000434875488
    7. 'n' → logprob: -8.869000434875488
    8. '[]' → logprob: -8.869000434875488
    9. '-' → logprob: -9.369000434875488
    10. ' -' → logprob: -9.619000434875488

Token 185: ' valeur' (ID: 41664)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2767770290374756
    2. ' a' → logprob: -1.5267770290374756
    3. ' ' → logprob: -2.1517770290374756
    4. '0' → logprob: -2.4017770290374756
    5. ' =' → logprob: -2.7767770290374756
    6. '_' → logprob: -3.1517770290374756
    7. '=' → logprob: -3.4017770290374756
    8. ' -' → logprob: -3.9017770290374756
    9. 'élé' → logprob: -4.026777267456055
    10. ' élément' → logprob: -4.026777267456055

Token 186: ' du' (ID: 1462)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1264791339635849
    2. ' =' → logprob: -2.376479148864746
    3. ' a' → logprob: -4.626479148864746
    4. '=' → logprob: -5.251479148864746
    5. '(a' → logprob: -5.501479148864746
    6. ' de' → logprob: -6.126479148864746
    7. '(' → logprob: -6.376479148864746
    8. 'de' → logprob: -7.376479148864746
    9. 's' → logprob: -7.751479148864746
    10. ',' → logprob: -8.126479148864746

Token 187: ' tableau' (ID: 67053)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0019353042589500546
    2. ' a' → logprob: -6.2519354820251465
    3. '`' → logprob: -13.751935005187988
    4. ' tableau' → logprob: -13.751935005187988
    5. '
' → logprob: -13.876935005187988
    6. ' code' → logprob: -14.376935005187988
    7. '```' → logprob: -14.501935005187988
    8. 'code' → logprob: -14.751935005187988
    9. 'liste' → logprob: -15.126935005187988
    10. 'list' → logprob: -15.439435005187988

Token 188: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04302842170000076
    2. ' a' → logprob: -3.1680283546447754
    3. 's' → logprob: -11.418028831481934
    4. ',' → logprob: -12.043028831481934
    5. ' =' → logprob: -12.668028831481934
    6. '(a' → logprob: -13.168028831481934
    7. '_a' → logprob: -13.293028831481934
    8. ' s' → logprob: -13.668028831481934
    9. ' (' → logprob: -14.168028831481934
    10. '[a' → logprob: -15.043028831481934

Token 189: '.
' (ID: 558)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.23309946060180664
    2. 's' → logprob: -2.2330994606018066
    3. 'a' → logprob: -2.4830994606018066
    4. ' =' → logprob: -4.608099460601807
    5. ' s' → logprob: -6.108099460601807
    6. '[a' → logprob: -6.608099460601807
    7. '[i' → logprob: -6.858099460601807
    8. '0' → logprob: -7.233099460601807
    9. '[s' → logprob: -7.358099460601807
    10. '=' → logprob: -7.733099460601807

Token 190: '#' (ID: 2)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0010685354936867952
    2. ' s' → logprob: -6.876068592071533
    3. ' 
' → logprob: -11.126068115234375
    4. 'a' → logprob: -11.376068115234375
    5. '
' → logprob: -12.751068115234375
    6. ' =' → logprob: -12.876068115234375
    7. '' → logprob: -13.876068115234375
    8. ' ' → logprob: -14.376068115234375
    9. ',' → logprob: -14.501068115234375
    10. '  
' → logprob: -14.626068115234375

Token 191: ' Ici' (ID: 145754)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.029756510630249977
    2. ' s' → logprob: -3.529756546020508
    3. ' ' → logprob: -13.029756546020508
    4. ' 
' → logprob: -13.279756546020508
    5. ' ' → logprob: -14.279756546020508
    6. 'a' → logprob: -15.404756546020508
    7. ',' → logprob: -15.529756546020508
    8. '
' → logprob: -15.654756546020508
    9. '' → logprob: -15.654756546020508
    10. '	s' → logprob: -16.279756546020508

Token 192: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08318082988262177
    2. ' s' → logprob: -2.9581809043884277
    3. ',' → logprob: -3.7081809043884277
    4. ' ' → logprob: -6.458180904388428
    5. ' ,' → logprob: -6.583180904388428
    6. 'a' → logprob: -8.58318042755127
    7. ' ' → logprob: -10.08318042755127
    8. ''s' → logprob: -10.08318042755127
    9. ' =' → logprob: -10.45818042755127
    10. '_s' → logprob: -11.08318042755127

Token 193: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.20159810781478882
    2. 's' → logprob: -1.7015981674194336
    3. 'a' → logprob: -9.326598167419434
    4. ' ' → logprob: -10.076598167419434
    5. ' a' → logprob: -11.076598167419434
    6. 'i' → logprob: -11.701598167419434
    7. ' ' → logprob: -12.326598167419434
    8. ' i' → logprob: -12.451598167419434
    9. '```' → logprob: -12.951598167419434
    10. ''s' → logprob: -13.451598167419434

Token 194: ' va' (ID: 3423)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22554810345172882
    2. '=' → logprob: -1.6005481481552124
    3. 's' → logprob: -10.350547790527344
    4. ',' → logprob: -10.350547790527344
    5. ' ' → logprob: -10.350547790527344
    6. ' +=' → logprob: -11.100547790527344
    7. 'a' → logprob: -12.225547790527344
    8. '=s' → logprob: -12.225547790527344
    9. '+=' → logprob: -12.725547790527344
    10. '=a' → logprob: -12.850547790527344

Token 195: ' servir' (ID: 42557)
  Prédit: ' servir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' servir' → logprob: -0.1805378943681717
    2. ' probablement' → logprob: -3.1805379390716553
    3. ' =' → logprob: -3.5555379390716553
    4. '=' → logprob: -3.6805379390716553
    5. 'serv' → logprob: -4.180537700653076
    6. ' ' → logprob: -4.555537700653076
    7. ' être' → logprob: -4.680537700653076
    8. ' représ' → logprob: -4.680537700653076
    9. 's' → logprob: -4.930537700653076
    10. 'être' → logprob: -5.680537700653076

Token 196: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.9716131091117859
    2. '=' → logprob: -1.0966131687164307
    3. ' =' → logprob: -2.0966131687164307
    4. ' a' → logprob: -2.4716131687164307
    5. ' to' → logprob: -3.8466131687164307
    6. ' ' → logprob: -3.8466131687164307
    7. ' as' → logprob: -4.096612930297852
    8. 's' → logprob: -5.346612930297852
    9. 'à' → logprob: -5.971612930297852
    10. ',' → logprob: -5.971612930297852

Token 197: ' mém' (ID: 136981)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.6318984031677246
    2. ' accum' → logprob: -1.8818984031677246
    3. ' stock' → logprob: -2.1318984031677246
    4. 'stock' → logprob: -3.0068984031677246
    5. ' suivre' → logprob: -3.7568984031677246
    6. 'su' → logprob: -3.8818984031677246
    7. 'calcul' → logprob: -3.8818984031677246
    8. ' accumulator' → logprob: -4.006898403167725
    9. ' cum' → logprob: -4.506898403167725
    10. 's' → logprob: -4.631898403167725

Token 198: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.009426671080291271
    2. 'orer' → logprob: -5.384426593780518
    3. 'o' → logprob: -5.509426593780518
    4. 'oriz' → logprob: -8.634427070617676
    5. 'oire' → logprob: -8.759427070617676
    6. 'oir' → logprob: -9.384427070617676
    7. 'orrer' → logprob: -9.634427070617676
    8. 'ory' → logprob: -9.759427070617676
    9. 'oris' → logprob: -10.009427070617676
    10. '#' → logprob: -10.634427070617676

Token 199: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -9.531813702778891e-05
    2. 'ise' → logprob: -10.12509536743164
    3. 'isé' → logprob: -11.00009536743164
    4. 'is' → logprob: -11.12509536743164
    5. 'er' → logprob: -11.87509536743164
    6. 'ising' → logprob: -13.25009536743164
    7. '#' → logprob: -13.25009536743164
    8. 'r' → logprob: -13.25009536743164
    9. 'i' → logprob: -13.37509536743164
    10. 'isation' → logprob: -13.62509536743164

Token 200: ' une' (ID: 2463)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.41404908895492554
    2. 'a' → logprob: -1.2890491485595703
    3. ' la' → logprob: -4.03904914855957
    4. ' the' → logprob: -4.53904914855957
    5. ' current' → logprob: -4.66404914855957
    6. ' ' → logprob: -5.03904914855957
    7. '<|end|>' → logprob: -5.16404914855957
    8. ' l' → logprob: -5.53904914855957
    9. ' un' → logprob: -5.91404914855957
    10. ' une' → logprob: -6.28904914855957

Token 201: ' valeur' (ID: 41664)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1323908418416977
    2. ' somme' → logprob: -3.1323907375335693
    3. 'val' → logprob: -3.3823907375335693
    4. 'som' → logprob: -3.8823907375335693
    5. 'sum' → logprob: -4.632390975952148
    6. 'variable' → logprob: -5.632390975952148
    7. 'c' → logprob: -5.882390975952148
    8. 'diff' → logprob: -6.257390975952148
    9. '_s' → logprob: -6.632390975952148
    10. ' valeur' → logprob: -7.257390975952148

Token 202: ' lors' (ID: 15456)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005579506512731314
    2. '=' → logprob: -5.630579471588135
    3. 's' → logprob: -7.005579471588135
    4. 'a' → logprob: -8.380579948425293
    5. 'current' → logprob: -8.880579948425293
    6. ' ' → logprob: -8.880579948425293
    7. ' actuelle' → logprob: -9.380579948425293
    8. ' a' → logprob: -9.505579948425293
    9. ' s' → logprob: -9.505579948425293
    10. '_' → logprob: -9.755579948425293

Token 203: ' des' (ID: 731)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.37948793172836304
    2. ' d' → logprob: -1.3794879913330078
    3. ' a' → logprob: -4.004487991333008
    4. ' du' → logprob: -4.004487991333008
    5. ' =' → logprob: -4.379487991333008
    6. 'a' → logprob: -5.254487991333008
    7. '=' → logprob: -5.629487991333008
    8. 'de' → logprob: -6.379487991333008
    9. 'd' → logprob: -7.129487991333008
    10. ' s' → logprob: -7.379487991333008

Token 204: ' it' (ID: 480)
  Prédit: 'compar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compar' → logprob: -0.47676724195480347
    2. ' parcours' → logprob: -1.6017673015594482
    3. 'par' → logprob: -2.9767673015594482
    4. ' it' → logprob: -3.6017673015594482
    5. 'it' → logprob: -3.7267673015594482
    6. ' comparaison' → logprob: -4.101767063140869
    7. ' compar' → logprob: -4.226767063140869
    8. ' comparisons' → logprob: -4.601767063140869
    9. 'iterations' → logprob: -5.726767063140869
    10. ' parcour' → logprob: -5.726767063140869

Token 205: 'érations' (ID: 152860)
  Prédit: 'ération'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.011047125793993473
    2. 'érations' → logprob: -4.76104736328125
    3. 'er' → logprob: -6.63604736328125
    4. 'ration' → logprob: -7.51104736328125
    5. 'ér' → logprob: -8.51104736328125
    6. 'ère' → logprob: -9.51104736328125
    7. 'r' → logprob: -9.63604736328125
    8. 'éré' → logprob: -10.01104736328125
    9. 'ation' → logprob: -10.13604736328125
    10. 'érateur' → logprob: -11.13604736328125

Token 206: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39220544695854187
    2. 's' → logprob: -1.6422054767608643
    3. '=' → logprob: -2.1422054767608643
    4. '_' → logprob: -5.017205238342285
    5. ' ' → logprob: -6.142205238342285
    6. 'a' → logprob: -6.642205238342285
    7. ',' → logprob: -6.892205238342285
    8. ' s' → logprob: -7.392205238342285
    9. '_s' → logprob: -7.892205238342285
    10. '=s' → logprob: -8.142205238342285

Token 207: ' probablement' (ID: 87740)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7386146783828735
    2. 'a' → logprob: -1.3636146783828735
    3. ' a' → logprob: -1.7386146783828735
    4. ' s' → logprob: -2.738614559173584
    5. 's' → logprob: -4.238614559173584
    6. ' =' → logprob: -4.988614559173584
    7. '=' → logprob: -6.863614559173584
    8. ',' → logprob: -7.238614559173584
    9. ' 
' → logprob: -7.363614559173584
    10. '0' → logprob: -7.488614559173584

Token 208: ' comme' (ID: 7971)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5070742964744568
    2. 'a' → logprob: -1.2570743560791016
    3. 's' → logprob: -3.0070743560791016
    4. ' s' → logprob: -3.1320743560791016
    5. '=' → logprob: -5.257074356079102
    6. ' ' → logprob: -5.382074356079102
    7. ' à' → logprob: -6.007074356079102
    8. ' =' → logprob: -6.257074356079102
    9. ',' → logprob: -6.632074356079102
    10. '_' → logprob: -7.132074356079102

Token 209: ' un' (ID: 537)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.13814778625965118
    2. 'une' → logprob: -3.1381478309631348
    3. 'acc' → logprob: -4.263147830963135
    4. 'un' → logprob: -4.388147830963135
    5. ' a' → logprob: -4.638147830963135
    6. 'pivot' → logprob: -4.638147830963135
    7. 'point' → logprob: -4.763147830963135
    8. 'current' → logprob: -4.888147830963135
    9. 'c' → logprob: -5.013147830963135
    10. 's' → logprob: -5.763147830963135

Token 210: ' accumulate' (ID: 74226)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -1.6666654348373413
    2. 'pivot' → logprob: -1.6666654348373413
    3. 'maximum' → logprob: -1.7916654348373413
    4. 'max' → logprob: -2.166665554046631
    5. 'minimum' → logprob: -2.791665554046631
    6. 'se' → logprob: -2.916665554046631
    7. 'point' → logprob: -2.916665554046631
    8. 'c' → logprob: -3.291665554046631
    9. 'compar' → logprob: -3.791665554046631
    10. 's' → logprob: -3.791665554046631

Token 211: 'ur' (ID: 330)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6585006713867188
    2. 'r' → logprob: -0.7835006713867188
    3. '   ' → logprob: -5.408500671386719
    4. 'ion' → logprob: -5.533500671386719
    5. 'eur' → logprob: -5.658500671386719
    6. ' ' → logprob: -6.033500671386719
    7. 'ur' → logprob: -6.158500671386719
    8. 'e' → logprob: -6.533500671386719
    9. ' s' → logprob: -6.658500671386719
    10. 'or' → logprob: -6.783500671386719

Token 212: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1887858361005783
    2. 's' → logprob: -2.3137857913970947
    3. '=' → logprob: -2.8137857913970947
    4. ' s' → logprob: -4.563786029815674
    5. ',' → logprob: -7.063786029815674
    6. 'a' → logprob: -7.313786029815674
    7. '=s' → logprob: -7.813786029815674
    8. ' ' → logprob: -8.188785552978516
    9. '_' → logprob: -9.188785552978516
    10. ' ,' → logprob: -9.313785552978516

Token 213: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.47495681833243e-05
    2. ' s' → logprob: -10.625024795532227
    3. 'a' → logprob: -15.625024795532227
    4. ' =' → logprob: -17.000024795532227
    5. '```' → logprob: -17.375024795532227
    6. '
' → logprob: -17.750024795532227
    7. '' → logprob: -17.875024795532227
    8. '=' → logprob: -18.250024795532227
    9. ' 
' → logprob: -18.375024795532227
    10. 'i' → logprob: -19.000024795532227

Token 214: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326615810394287
    2. ' =' → logprob: -1.3132661581039429
    3. '=s' → logprob: -12.938265800476074
    4. '=a' → logprob: -13.313265800476074
    5. 's' → logprob: -15.938265800476074
    6. ',' → logprob: -16.31326675415039
    7. '=int' → logprob: -16.68826675415039
    8. '=

' → logprob: -16.93826675415039
    9. ' ' → logprob: -17.43826675415039
    10. 'a' → logprob: -17.56326675415039

Token 215: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0001234428636962548
    2. ' a' → logprob: -9.000123023986816
    3. '0' → logprob: -17.750123977661133
    4. '	a' → logprob: -21.375123977661133
    5. '_a' → logprob: -22.125123977661133
    6. 'а' → logprob: -22.125123977661133
    7. ' ' → logprob: -22.875123977661133
    8. '#a' → logprob: -22.875123977661133
    9. ' ' → logprob: -24.125123977661133
    10. '(a' → logprob: -24.375123977661133

Token 216: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.03521392197581e-05
    2. ' [' → logprob: -11.250030517578125
    3. '0' → logprob: -11.375030517578125
    4. 's' → logprob: -12.250030517578125
    5. '[
' → logprob: -15.000030517578125
    6. '[s' → logprob: -16.125030517578125
    7. '\[' → logprob: -16.375030517578125
    8. '[-' → logprob: -16.750030517578125
    9. 'a' → logprob: -16.750030517578125
    10. '
' → logprob: -16.875030517578125

Token 217: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '1' → logprob: -16.375001907348633
    4. '۰' → logprob: -18.187501907348633
    5. '０' → logprob: -18.250001907348633
    6. '٠' → logprob: -19.125001907348633
    7. '```' → logprob: -19.187501907348633
    8. '00' → logprob: -19.250001907348633
    9. '
' → logprob: -19.375001907348633
    10. '#' → logprob: -19.562501907348633

Token 218: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000925157277379185
    2. '])' → logprob: -7.750925064086914
    3. ')' → logprob: -7.875925064086914
    4. ' ]' → logprob: -9.250925064086914
    5. ']
' → logprob: -11.750925064086914
    6. '#' → logprob: -13.000925064086914
    7. ']+' → logprob: -13.500925064086914
    8. '<|end|>' → logprob: -13.500925064086914
    9. '[' → logprob: -14.250925064086914
    10. ')]' → logprob: -14.375925064086914

Token 219: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.301935613155365
    2. ' for' → logprob: -2.3019356727600098
    3. '
' → logprob: -2.5519356727600098
    4. '\n' → logprob: -2.9269356727600098
    5. '+' → logprob: -4.05193567276001
    6. 'i' → logprob: -5.17693567276001
    7. '\' → logprob: -6.42693567276001
    8. ' 
' → logprob: -6.42693567276001
    9. '+
' → logprob: -7.55193567276001
    10. 'n' → logprob: -7.80193567276001

Token 220: ' Initialise' (ID: 179601)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005725711234845221
    2. 'i' → logprob: -7.500572681427002
    3. 'fo' → logprob: -12.125572204589844
    4. ' for' → logprob: -12.375572204589844
    5. '#' → logprob: -13.500572204589844
    6. 'prev' → logprob: -13.750572204589844
    7. 'f' → logprob: -13.750572204589844
    8. 'j' → logprob: -14.000572204589844
    9. 'b' → logprob: -14.250572204589844
    10. '```' → logprob: -14.250572204589844

Token 221: ' r' (ID: 428)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06500253826379776
    2. ' i' → logprob: -2.94000244140625
    3. 'p' → logprob: -6.44000244140625
    4. 'l' → logprob: -6.94000244140625
    5. 'b' → logprob: -6.94000244140625
    6. 'c' → logprob: -7.06500244140625
    7. 'j' → logprob: -7.06500244140625
    8. 'idx' → logprob: -7.19000244140625
    9. 'count' → logprob: -7.19000244140625
    10. 'cnt' → logprob: -7.44000244140625

Token 222: ' avec' (ID: 3937)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038057442754507065
    2. '=' → logprob: -3.288057327270508
    3. ' ' → logprob: -11.538057327270508
    4. 's' → logprob: -13.288057327270508
    5. ',' → logprob: -14.038057327270508
    6. 'ight' → logprob: -14.413057327270508
    7. 'r' → logprob: -15.038057327270508
    8. 'a' → logprob: -15.038057327270508
    9. 'ange' → logprob: -15.038057327270508
    10. 'e' → logprob: -15.163057327270508

Token 223: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09042660146951675
    2. '1' → logprob: -2.4654266834259033
    3. 'n' → logprob: -6.965426445007324
    4. 'a' → logprob: -8.590426445007324
    5. 'ans' → logprob: -9.090426445007324
    6. 's' → logprob: -9.340426445007324
    7. '-' → logprob: -9.465426445007324
    8. ' ' → logprob: -10.590426445007324
    9. '[' → logprob: -11.590426445007324
    10. '```' → logprob: -12.277926445007324

Token 224: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0117139657959342
    2. '1' → logprob: -4.511713981628418
    3. 'a' → logprob: -8.261713981628418
    4. 'n' → logprob: -8.386713981628418
    5. 's' → logprob: -9.386713981628418
    6. 'ans' → logprob: -10.011713981628418
    7. ' ' → logprob: -10.511713981628418
    8. '-' → logprob: -11.511713981628418
    9. '(' → logprob: -12.761713981628418
    10. '2' → logprob: -13.511713981628418

Token 225: '.
' (ID: 558)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -3.368984107510187e-05
    2. '
' → logprob: -10.750033378601074
    3. ' r' → logprob: -11.625033378601074
    4. '<|end|>' → logprob: -13.375033378601074
    5. ' ' → logprob: -14.500033378601074
    6. '.' → logprob: -14.625033378601074
    7. '#' → logprob: -16.00003433227539
    8. ',' → logprob: -16.25003433227539
    9. '0' → logprob: -16.25003433227539
    10. '_r' → logprob: -16.37503433227539

Token 226: '#' (ID: 2)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -7.107425062713446e-06
    2. ' r' → logprob: -11.875006675720215
    3. '```' → logprob: -16.75000762939453
    4. '
' → logprob: -17.62500762939453
    5. '0' → logprob: -19.37500762939453
    6. '_r' → logprob: -19.75000762939453
    7. '	r' → logprob: -19.75000762939453
    8. '#' → logprob: -21.00000762939453
    9. '   ' → logprob: -21.25000762939453
    10. 's' → logprob: -21.25000762939453

Token 227: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -6.659005157416686e-05
    2. ' r' → logprob: -9.625066757202148
    3. '
' → logprob: -15.125066757202148
    4. '```' → logprob: -16.37506675720215
    5. '#' → logprob: -16.75006675720215
    6. ' ' → logprob: -17.62506675720215
    7. '	r' → logprob: -17.75006675720215
    8. 's' → logprob: -18.25006675720215
    9. ' ' → logprob: -18.25006675720215
    10. 'for' → logprob: -18.37506675720215

Token 228: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4289349615573883
    2. '=' → logprob: -1.053934931755066
    3. ' ' → logprob: -8.428935050964355
    4. ',' → logprob: -12.303935050964355
    5. ' +=' → logprob: -12.553935050964355
    6. '+=' → logprob: -13.428935050964355
    7. 'r' → logprob: -13.803935050964355
    8. 's' → logprob: -14.178935050964355
    9. ')' → logprob: -14.178935050964355
    10. ' ' → logprob: -14.678935050964355

Token 229: ' généralement' (ID: 67075)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.033720970153808594
    2. ' ' → logprob: -4.033720970153809
    3. '1' → logprob: -4.408720970153809
    4. 'r' → logprob: -6.033720970153809
    5. '=' → logprob: -8.408720970153809
    6. '<|end|>' → logprob: -8.408720970153809
    7. '+' → logprob: -9.033720970153809
    8. ' r' → logprob: -9.158720970153809
    9. '2' → logprob: -9.783720970153809
    10. 's' → logprob: -10.408720970153809

Token 230: ' utilisé' (ID: 53138)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011130230501294136
    2. ' ' → logprob: -4.511130332946777
    3. 'r' → logprob: -9.886130332946777
    4. '1' → logprob: -11.261130332946777
    5. '=' → logprob: -12.386130332946777
    6. '<|end|>' → logprob: -12.636130332946777
    7. '+' → logprob: -12.886130332946777
    8. '#' → logprob: -13.011130332946777
    9. ')' → logprob: -13.886130332946777
    10. ' =' → logprob: -14.011130332946777

Token 231: ' comme' (ID: 7971)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 232: ' un' (ID: 537)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05809561163187027
    2. 'r' → logprob: -3.933095693588257
    3. 'l' → logprob: -4.058095455169678
    4. 'un' → logprob: -4.683095455169678
    5. '1' → logprob: -5.558095455169678
    6. ' un' → logprob: -5.933095455169678
    7. ' ' → logprob: -6.808095455169678
    8. ' l' → logprob: -6.933095455169678
    9. 'indice' → logprob: -7.933095455169678
    10. 'ré' → logprob: -8.183095932006836

Token 233: ' indice' (ID: 90848)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.4531136155128479
    2. 'indice' → logprob: -1.0781135559082031
    3. 'r' → logprob: -5.078113555908203
    4. 'p' → logprob: -5.203113555908203
    5. 'comp' → logprob: -5.453113555908203
    6. 'pointer' → logprob: -5.828113555908203
    7. ' index' → logprob: -6.578113555908203
    8. ' poin' → logprob: -7.203113555908203
    9. ' compteur' → logprob: -7.828113555908203
    10. 'counter' → logprob: -7.953113555908203

Token 234: ' de' (ID: 334)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5587118864059448
    2. '<|end|>' → logprob: -1.1837118864059448
    3. ' ' → logprob: -2.6837120056152344
    4. '0' → logprob: -4.683712005615234
    5. '=' → logprob: -4.808712005615234
    6. ',' → logprob: -4.933712005615234
    7. ' or' → logprob: -5.308712005615234
    8. ' r' → logprob: -5.433712005615234
    9. '+' → logprob: -5.683712005615234
    10. ')' → logprob: -5.808712005615234

Token 235: ' parcours' (ID: 62625)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.716373085975647
    2. ' ' → logprob: -1.966373085975647
    3. 'dé' → logprob: -2.2163729667663574
    4. ' déplacement' → logprob: -2.2163729667663574
    5. ' droite' → logprob: -2.4663729667663574
    6. ' l' → logprob: -2.8413729667663574
    7. ' compteur' → logprob: -3.0913729667663574
    8. ' range' → logprob: -3.4663729667663574
    9. ' début' → logprob: -3.5913729667663574
    10. 'd' → logprob: -3.5913729667663574

Token 236: ' ou' (ID: 2031)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.11661022156476974
    2. ' ' → logprob: -3.491610288619995
    3. '<|end|>' → logprob: -3.991610288619995
    4. ',' → logprob: -4.116610050201416
    5. ')' → logprob: -4.241610050201416
    6. ' or' → logprob: -4.866610050201416
    7. '=' → logprob: -5.241610050201416
    8. ' r' → logprob: -5.366610050201416
    9. '.' → logprob: -6.116610050201416
    10. ' =' → logprob: -6.241610050201416

Token 237: ' pour' (ID: 1930)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.213507890701294
    2. ' un' → logprob: -1.213507890701294
    3. '0' → logprob: -1.588507890701294
    4. '1' → logprob: -2.463507890701294
    5. 'un' → logprob: -3.213507890701294
    6. '#' → logprob: -3.838507890701294
    7. ' une' → logprob: -3.963507890701294
    8. ' ' → logprob: -4.213507652282715
    9. ' r' → logprob: -5.338507652282715
    10. ' l' → logprob: -5.838507652282715

Token 238: ' représ' (ID: 31534)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.936113178730011
    2. 'r' → logprob: -1.5611131191253662
    3. 'comp' → logprob: -1.8111131191253662
    4. ' range' → logprob: -3.061113119125366
    5. 'i' → logprob: -3.436113119125366
    6. ' compter' → logprob: -3.686113119125366
    7. 'l' → logprob: -4.186113357543945
    8. '0' → logprob: -4.436113357543945
    9. ' la' → logprob: -4.561113357543945
    10. ' pointer' → logprob: -4.936113357543945

Token 239: 'enter' (ID: 3547)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.248950719833374
    2. 'eur' → logprob: -1.373950719833374
    3. 'er' → logprob: -1.873950719833374
    4. 'ent' → logprob: -2.498950719833374
    5. 'i' → logprob: -2.623950719833374
    6. 'é' → logprob: -3.498950719833374
    7. 'iser' → logprob: -4.123950958251953
    8. 'es' → logprob: -4.248950958251953
    9. 'iquant' → logprob: -4.748950958251953
    10. '#' → logprob: -4.873950958251953

Token 240: ' un' (ID: 537)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8882912397384644
    2. '0' → logprob: -1.2632912397384644
    3. 'r' → logprob: -2.263291358947754
    4. ' la' → logprob: -3.013291358947754
    5. 'une' → logprob: -3.388291358947754
    6. '1' → logprob: -3.638291358947754
    7. 'la' → logprob: -4.013291358947754
    8. ' l' → logprob: -4.138291358947754
    9. ' une' → logprob: -4.138291358947754
    10. 'un' → logprob: -4.388291358947754

Token 241: ' poin' (ID: 37259)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.4532056748867035
    2. 'range' → logprob: -2.0782055854797363
    3. 'r' → logprob: -2.8282055854797363
    4. ' compteur' → logprob: -3.2032055854797363
    5. 'curse' → logprob: -3.4532055854797363
    6. ' poin' → logprob: -3.9532055854797363
    7. 'p' → logprob: -4.078205585479736
    8. 'point' → logprob: -4.328205585479736
    9. 'dé' → logprob: -4.328205585479736
    10. 'c' → logprob: -4.828205585479736

Token 242: 'teur' (ID: 45262)
  Prédit: 'teur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'teur' → logprob: -0.7135210633277893
    2. 'inter' → logprob: -0.9635210633277893
    3. 'ter' → logprob: -3.4635210037231445
    4. 't' → logprob: -3.9635210037231445
    5. 'iteur' → logprob: -4.0885210037231445
    6. 'n' → logprob: -4.2135210037231445
    7. 'iter' → logprob: -4.5885210037231445
    8. 'nte' → logprob: -5.4635210037231445
    9. 'i' → logprob: -5.4635210037231445
    10. 'inte' → logprob: -5.4635210037231445

Token 243: ' sur' (ID: 1512)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 244: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6465790867805481
    2. 'la' → logprob: -1.2715790271759033
    3. ' la' → logprob: -2.3965790271759033
    4. 'a' → logprob: -3.3965790271759033
    5. ' l' → logprob: -3.8965790271759033
    6. 'une' → logprob: -4.146579265594482
    7. '#' → logprob: -4.646579265594482
    8. ' une' → logprob: -4.771579265594482
    9. 'r' → logprob: -5.271579265594482
    10. 'un' → logprob: -6.021579265594482

Token 245: ' sé' (ID: 7462)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.2977654933929443
    2. 'a' → logprob: -1.4227654933929443
    3. 'r' → logprob: -2.7977654933929443
    4. '1' → logprob: -2.7977654933929443
    5. ' range' → logprob: -2.9227654933929443
    6. 's' → logprob: -3.1727654933929443
    7. 'table' → logprob: -3.5477654933929443
    8. '0' → logprob: -3.6727654933929443
    9. ' tableau' → logprob: -3.6727654933929443
    10. ' ' → logprob: -3.7977654933929443

Token 246: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0003501242317724973
    2. 'q' → logprob: -8.375349998474121
    3. 'quences' → logprob: -9.750349998474121
    4. 'QUENCE' → logprob: -10.625349998474121
    5. 'qu' → logprob: -11.500349998474121
    6. '#' → logprob: -11.625349998474121
    7. '
' → logprob: -12.625349998474121
    8. 'r' → logprob: -12.875349998474121
    9. '```' → logprob: -13.000349998474121
    10. '`' → logprob: -13.250349998474121

Token 247: '.
' (ID: 558)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6014005541801453
    2. '<|end|>' → logprob: -1.35140061378479
    3. ')' → logprob: -2.22640061378479
    4. '+' → logprob: -3.85140061378479
    5. '0' → logprob: -4.476400375366211
    6. '
' → logprob: -4.601400375366211
    7. 'n' → logprob: -4.601400375366211
    8. '.' → logprob: -4.726400375366211
    9. 's' → logprob: -5.601400375366211
    10. ' ' → logprob: -5.601400375366211

Token 248: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0015888927737250924
    2. '0' → logprob: -6.626588821411133
    3. ' r' → logprob: -8.251588821411133
    4. ' ' → logprob: -14.001588821411133
    5. '```' → logprob: -14.626588821411133
    6. '=' → logprob: -15.376588821411133
    7. '_r' → logprob: -16.251588821411133
    8. 's' → logprob: -16.501588821411133
    9. ' =' → logprob: -16.814088821411133
    10. '
' → logprob: -17.001588821411133

Token 249: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519320547580719
    2. '=' → logprob: -1.5019320249557495
    3. ' +=' → logprob: -13.751932144165039
    4. '+=' → logprob: -13.876932144165039
    5. ',' → logprob: -15.126932144165039
    6. ' ' → logprob: -16.00193214416504
    7. ')' → logprob: -16.12693214416504
    8. '0' → logprob: -16.25193214416504
    9. '+' → logprob: -16.37693214416504
    10. 's' → logprob: -16.37693214416504

Token 250: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020592445798683912
    2. '1' → logprob: -8.875205993652344
    3. ' ' → logprob: -9.625205993652344
    4. 'r' → logprob: -18.250205993652344
    5. 's' → logprob: -18.250205993652344
    6. '۰' → logprob: -18.625205993652344
    7. '```' → logprob: -19.312705993652344
    8. '   ' → logprob: -19.562705993652344
    9. '-' → logprob: -19.812705993652344
    10. '=' → logprob: -19.875205993652344

Token 251: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9146995327901095e-05
    2. '1' → logprob: -10.875019073486328
    3. ' ' → logprob: -15.750019073486328
    4. '۰' → logprob: -18.500019073486328
    5. '０' → logprob: -19.437519073486328
    6. 's' → logprob: -19.687519073486328
    7. 'r' → logprob: -20.250019073486328
    8. '-' → logprob: -20.562519073486328
    9. '=' → logprob: -20.750019073486328
    10. '00' → logprob: -21.000019073486328

Token 252: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 253: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04383082687854767
    2. 'f' → logprob: -3.5438308715820312
    3. ' for' → logprob: -5.543830871582031
    4. 'i' → logprob: -5.668830871582031
    5. '
' → logprob: -6.168830871582031
    6. '<|end|>' → logprob: -6.418830871582031
    7. '#' → logprob: -6.918830871582031
    8. ')' → logprob: -7.668830871582031
    9. '+' → logprob: -8.168830871582031
    10. 'r' → logprob: -8.418830871582031

Token 254: ' Dé' (ID: 27247)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.8961017202818766e-05
    2. 'f' → logprob: -10.750059127807617
    3. 'l' → logprob: -10.750059127807617
    4. 'i' → logprob: -11.875059127807617
    5. 'while' → logprob: -12.500059127807617
    6. 'fo' → logprob: -13.625059127807617
    7. 'from' → logprob: -13.750059127807617
    8. ' for' → logprob: -14.250059127807617
    9. 'import' → logprob: -14.375059127807617
    10. '#' → logprob: -14.500059127807617

Token 255: 'b' (ID: 65)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00998756755143404
    2. 'but' → logprob: -5.5099873542785645
    3. 'while' → logprob: -5.6349873542785645
    4. 'f' → logprob: -6.1349873542785645
    5. '#' → logprob: -9.509987831115723
    6. 'fin' → logprob: -9.884987831115723
    7. 'r' → logprob: -11.759987831115723
    8. 'i' → logprob: -12.009987831115723
    9. '
' → logprob: -12.634987831115723
    10. '```' → logprob: -12.634987831115723

Token 256: 'ute' (ID: 1331)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3898317515850067
    2. 'ut' → logprob: -1.264831781387329
    3. 'but' → logprob: -3.389831781387329
    4. '#' → logprob: -5.51483154296875
    5. 'while' → logprob: -7.13983154296875
    6. 'f' → logprob: -7.63983154296875
    7. 'i' → logprob: -8.13983154296875
    8. 'uts' → logprob: -8.38983154296875
    9. 'part' → logprob: -8.51483154296875
    10. 't' → logprob: -8.88983154296875

Token 257: ' une' (ID: 2463)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14479278028011322
    2. ' for' → logprob: -2.0197927951812744
    3. 'r' → logprob: -6.394792556762695
    4. 'i' → logprob: -9.019792556762695
    5. '_' → logprob: -9.519792556762695
    6. 'f' → logprob: -10.019792556762695
    7. 'or' → logprob: -10.019792556762695
    8. '
' → logprob: -10.269792556762695
    9. ' i' → logprob: -10.394792556762695
    10. 'n' → logprob: -10.394792556762695

Token 258: ' boucle' (ID: 174211)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.027210237458348274
    2. 'for' → logprob: -3.902210235595703
    3. ' while' → logprob: -5.027210235595703
    4. ' for' → logprob: -9.402210235595703
    5. 'wh' → logprob: -12.652210235595703
    6. 'bou' → logprob: -14.277210235595703
    7. '
' → logprob: -14.402210235595703
    8. 'import' → logprob: -15.027210235595703
    9. 'from' → logprob: -15.027210235595703
    10. 't' → logprob: -15.152210235595703

Token 259: ' qui' (ID: 2780)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04924963414669037
    2. 'while' → logprob: -3.0492496490478516
    3. ' for' → logprob: -7.924249649047852
    4. 'i' → logprob: -8.174249649047852
    5. ' while' → logprob: -11.174249649047852
    6. 'r' → logprob: -13.424249649047852
    7. '
' → logprob: -14.549249649047852
    8. ' i' → logprob: -15.049249649047852
    9. 'from' → logprob: -15.174249649047852
    10. ':' → logprob: -15.174249649047852

Token 260: ' parc' (ID: 22138)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005391464568674564
    2. ' for' → logprob: -5.755391597747803
    3. 'while' → logprob: -6.130391597747803
    4. ' while' → logprob: -10.630391120910645
    5. 'range' → logprob: -12.255391120910645
    6. 'i' → logprob: -12.880391120910645
    7. '_' → logprob: -13.005391120910645
    8. 'r' → logprob: -14.630391120910645
    9. ' range' → logprob: -15.005391120910645
    10. ' i' → logprob: -15.255391120910645

Token 261: 'ourt' (ID: 38600)
  Prédit: 'ourt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ourt' → logprob: -0.002187256934121251
    2. 'our' → logprob: -7.002187252044678
    3. 'oure' → logprob: -7.752187252044678
    4. 'ours' → logprob: -7.877187252044678
    5. 'orre' → logprob: -8.252187728881836
    6. 'or' → logprob: -9.877187728881836
    7. 'o' → logprob: -10.502187728881836
    8. 'court' → logprob: -10.752187728881836
    9. 'ute' → logprob: -11.127187728881836
    10. 'ourse' → logprob: -11.127187728881836

Token 262: ' les' (ID: 1341)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7884483337402344
    2. 'i' → logprob: -1.0384483337402344
    3. '_' → logprob: -2.6634483337402344
    4. 'l' → logprob: -3.2884483337402344
    5. ' range' → logprob: -3.4134483337402344
    6. 'r' → logprob: -3.9134483337402344
    7. ' i' → logprob: -3.9134483337402344
    8. 'for' → logprob: -5.038448333740234
    9. ' for' → logprob: -6.913448333740234
    10. '```' → logprob: -7.038448333740234

Token 263: ' indices' (ID: 30378)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.4135472774505615
    2. ' indices' → logprob: -1.6635472774505615
    3. 'range' → logprob: -1.6635472774505615
    4. ' range' → logprob: -2.1635472774505615
    5. ' i' → logprob: -2.2885472774505615
    6. 'indices' → logprob: -2.6635472774505615
    7. 'r' → logprob: -3.0385472774505615
    8. 'n' → logprob: -4.413547515869141
    9. 'a' → logprob: -5.163547515869141
    10. 'index' → logprob: -5.288547515869141

Token 264: ' l' (ID: 305)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23602454364299774
    2. ' for' → logprob: -2.3610246181488037
    3. 'range' → logprob: -2.3610246181488037
    4. ' range' → logprob: -4.736024379730225
    5. ' in' → logprob: -5.486024379730225
    6. 'i' → logprob: -5.861024379730225
    7. 'in' → logprob: -5.986024379730225
    8. 'de' → logprob: -6.986024379730225
    9. ' i' → logprob: -7.611024379730225
    10. ' de' → logprob: -7.861024379730225

Token 265: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20821279287338257
    2. 'in' → logprob: -1.9582128524780273
    3. ',' → logprob: -3.4582128524780273
    4. 'r' → logprob: -5.083212852478027
    5. 'for' → logprob: -6.333212852478027
    6. '=' → logprob: -6.708212852478027
    7. 'en' → logprob: -6.708212852478027
    8. 'n' → logprob: -7.208212852478027
    9. ' en' → logprob: -7.458212852478027
    10. ' =' → logprob: -7.583212852478027

Token 266: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0013408389640972018
    2. ' range' → logprob: -6.626340866088867
    3. 'la' → logprob: -11.751340866088867
    4. '0' → logprob: -12.251340866088867
    5. ' la' → logprob: -13.876340866088867
    6. '1' → logprob: -14.876340866088867
    7. 'ra' → logprob: -15.251340866088867
    8. '(range' → logprob: -15.251340866088867
    9. '```' → logprob: -15.626340866088867
    10. 'rang' → logprob: -15.876340866088867

Token 267: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.2723104848410003e-05
    2. ' range' → logprob: -10.750022888183594
    3. '0' → logprob: -13.875022888183594
    4. 'la' → logprob: -15.625022888183594
    5. 'ra' → logprob: -17.375022888183594
    6. 'rang' → logprob: -17.750022888183594
    7. '(range' → logprob: -18.000022888183594
    8. '```' → logprob: -18.125022888183594
    9. 'r' → logprob: -18.250022888183594
    10. '
' → logprob: -18.625022888183594

Token 268: ' jusqu' (ID: 21961)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.9237061738967896
    2. ' in' → logprob: -1.1737061738967896
    3. ' to' → logprob: -2.2987060546875
    4. 'in' → logprob: -2.9237060546875
    5. ' n' → logprob: -3.1737060546875
    6. ',' → logprob: -3.5487060546875
    7. ' jusqu' → logprob: -3.9237060546875
    8. 'to' → logprob: -4.6737060546875
    9. 'range' → logprob: -4.7987060546875
    10. 'n' → logprob: -4.9237060546875

Token 269: ''à' (ID: 33688)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.14825204014778137
    2. '(' → logprob: -2.648252010345459
    3. 'n' → logprob: -3.273252010345459
    4. 'a' → logprob: -4.773252010345459
    5. 'e' → logprob: -5.523252010345459
    6. ''à' → logprob: -5.523252010345459
    7. ' à' → logprob: -5.773252010345459
    8. ' (' → logprob: -6.148252010345459
    9. 'ans' → logprob: -6.148252010345459
    10. '(ans' → logprob: -6.648252010345459

Token 270: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002476016292348504
    2. ' n' → logprob: -6.002476215362549
    3. '(n' → logprob: -15.50247573852539
    4. '
' → logprob: -15.87747573852539
    5. '0' → logprob: -17.37747573852539
    6. '```' → logprob: -18.75247573852539
    7. 'len' → logprob: -18.87747573852539
    8. '	n' → logprob: -18.87747573852539
    9. 'ans' → logprob: -19.12747573852539
    10. '1' → logprob: -19.12747573852539

Token 271: '-' (ID: 12)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022714221850037575
    2. '):' → logprob: -4.147714138031006
    3. ')' → logprob: -6.397714138031006
    4. 'n' → logprob: -6.522714138031006
    5. ' :' → logprob: -6.772714138031006
    6. '(n' → logprob: -8.022714614868164
    7. '():' → logprob: -8.022714614868164
    8. '-' → logprob: -8.147714614868164
    9. ':n' → logprob: -8.147714614868164
    10. 'for' → logprob: -8.272714614868164

Token 272: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.248469718324486e-05
    2. 'n' → logprob: -11.375022888183594
    3. ' ' → logprob: -11.500022888183594
    4. '-' → logprob: -15.000022888183594
    5. '2' → logprob: -15.875022888183594
    6. '```' → logprob: -16.250022888183594
    7. ' n' → logprob: -16.875022888183594
    8. 'un' → logprob: -17.125022888183594
    9. 'l' → logprob: -17.375022888183594
    10. '0' → logprob: -17.500022888183594

Token 273: ' inclus' (ID: 11891)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1057930514216423
    2. ' for' → logprob: -2.355792999267578
    3. '
' → logprob: -5.355792999267578
    4. ':' → logprob: -8.355792999267578
    5. ':
' → logprob: -8.605792999267578
    6. ' in' → logprob: -9.605792999267578
    7. ',' → logprob: -9.855792999267578
    8. 'n' → logprob: -10.230792999267578
    9. 'range' → logprob: -10.230792999267578
    10. 'f' → logprob: -10.355792999267578

Token 274: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.017956886440515518
    2. ' for' → logprob: -4.267956733703613
    3. '
' → logprob: -5.642956733703613
    4. ':
' → logprob: -9.142956733703613
    5. ':' → logprob: -9.267956733703613
    6. 'in' → logprob: -11.642956733703613
    7. 'range' → logprob: -11.892956733703613
    8. 'n' → logprob: -11.892956733703613
    9. 'or' → logprob: -12.517956733703613
    10. ' in' → logprob: -13.142956733703613

Token 275: 'car' (ID: 6830)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -1.8112154006958008
    2. 'range' → logprob: -1.8112154006958008
    3. ' for' → logprob: -1.9362154006958008
    4. 'n' → logprob: -2.061215400695801
    5. 'for' → logprob: -2.186215400695801
    6. ' n' → logprob: -2.186215400695801
    7. ')' → logprob: -2.561215400695801
    8. ' in' → logprob: -3.811215400695801
    9. '
' → logprob: -4.061215400695801
    10. ',' → logprob: -4.311215400695801

Token 276: ' range' (ID: 3352)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.16373224556446075
    2. 'n' → logprob: -1.9137322902679443
    3. 'range' → logprob: -6.163732051849365
    4. ' range' → logprob: -6.663732051849365
    5. ' ans' → logprob: -9.538732528686523
    6. 'ans' → logprob: -10.913732528686523
    7. 'r' → logprob: -12.163732528686523
    8. ' ' → logprob: -12.163732528686523
    9. '	n' → logprob: -12.788732528686523
    10. ' for' → logprob: -13.038732528686523

Token 277: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0789400190114975
    2. '(' → logprob: -2.578939914703369
    3. '(
' → logprob: -9.953940391540527
    4. ')' → logprob: -14.328940391540527
    5. 'n' → logprob: -14.328940391540527
    6. ' (' → logprob: -14.703940391540527
    7. '(len' → logprob: -15.078940391540527
    8. '
' → logprob: -15.828940391540527
    9. '(

' → logprob: -15.953940391540527
    10. 's' → logprob: -16.45393943786621

Token 278: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.13889288902282715
    2. ' -' → logprob: -2.138892889022827
    3. ')' → logprob: -5.263893127441406
    4. '(' → logprob: -5.263893127441406
    5. '(n' → logprob: -7.263893127441406
    6. '()' → logprob: -7.763893127441406
    7. '()-' → logprob: -8.638893127441406
    8. ' ' → logprob: -10.263893127441406
    9. '```' → logprob: -10.638893127441406
    10. '-
' → logprob: -10.763893127441406

Token 279: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.372916686814278e-05
    2. '2' → logprob: -10.0000638961792
    3. ' ' → logprob: -11.1250638961792
    4. '```' → logprob: -13.2500638961792
    5. '-' → logprob: -14.5000638961792
    6. '
' → logprob: -14.6250638961792
    7. ')' → logprob: -15.1250638961792
    8. '   ' → logprob: -16.187562942504883
    9. 'n' → logprob: -17.062562942504883
    10. '(' → logprob: -17.125062942504883

Token 280: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05572262406349182
    2. ')' → logprob: -2.930722713470459
    3. ' ):' → logprob: -8.1807222366333
    4. ')):' → logprob: -9.0557222366333
    5. '):
' → logprob: -9.1807222366333
    6. '()' → logprob: -9.3057222366333
    7. '():' → logprob: -9.4307222366333
    8. '(' → logprob: -9.6807222366333
    9. '(n' → logprob: -10.6807222366333
    10. ',' → logprob: -10.9307222366333

Token 281: ' s' (ID: 265)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004848042037338018
    2. ':' → logprob: -5.879848003387451
    3. ')' → logprob: -6.504848003387451
    4. '):
' → logprob: -7.629848003387451
    5. ' ):' → logprob: -10.25484848022461
    6. '():' → logprob: -11.37984848022461
    7. 'for' → logprob: -12.37984848022461
    8. ',' → logprob: -13.50484848022461
    9. '+' → logprob: -13.75484848022461
    10. 'n' → logprob: -14.37984848022461

Token 282: ''arr' (ID: 49695)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0353184938430786
    2. '):' → logprob: -1.1603184938430786
    3. ':' → logprob: -1.6603184938430786
    4. ' =' → logprob: -3.285318374633789
    5. ' in' → logprob: -3.410318374633789
    6. ')' → logprob: -3.535318374633789
    7. 'range' → logprob: -4.660318374633789
    8. ',' → logprob: -5.160318374633789
    9. 'in' → logprob: -5.285318374633789
    10. ' :' → logprob: -5.785318374633789

Token 283: 'ête' (ID: 16808)
  Prédit: 'ur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.9253644943237305
    2. 'e' → logprob: -1.1753644943237305
    3. 'ont' → logprob: -2.6753644943237305
    4. 'ert' → logprob: -3.4253644943237305
    5. 'op' → logprob: -3.5503644943237305
    6. 'art' → logprob: -3.5503644943237305
    7. 'top' → logprob: -3.9253644943237305
    8. 'range' → logprob: -3.9253644943237305
    9. 'ange' → logprob: -4.0503644943237305
    10. 'oit' → logprob: -4.1753644943237305

Token 284: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.986058235168457
    2. ')' → logprob: -0.986058235168457
    3. '(n' → logprob: -1.486058235168457
    4. ',' → logprob: -5.111058235168457
    5. ' jusqu' → logprob: -5.236058235168457
    6. 'n' → logprob: -5.361058235168457
    7. ' at' → logprob: -6.111058235168457
    8. 'au' → logprob: -6.486058235168457
    9. ' à' → logprob: -6.611058235168457
    10. 'à' → logprob: -6.861058235168457

Token 285: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.42875173687934875
    2. 'n' → logprob: -1.0537517070770264
    3. ')n' → logprob: -11.053751945495605
    4. '1' → logprob: -11.553751945495605
    5. '(n' → logprob: -11.803751945495605
    6. ')' → logprob: -11.928751945495605
    7. '	n' → logprob: -12.178751945495605
    8. ' ' → logprob: -13.178751945495605
    9. '   ' → logprob: -14.428751945495605
    10. ' ' → logprob: -14.428751945495605

Token 286: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002828650176525116
    2. ' -' → logprob: -5.877828598022461
    3. ')' → logprob: -11.752828598022461
    4. '()-' → logprob: -11.877828598022461
    5. '1' → logprob: -12.002828598022461
    6. '(' → logprob: -13.377828598022461
    7. ')-' → logprob: -14.252828598022461
    8. '()' → logprob: -15.752828598022461
    9. '-
' → logprob: -15.877828598022461
    10. '(n' → logprob: -16.37782859802246

Token 287: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006724722217768431
    2. '2' → logprob: -5.006724834442139
    3. ' ' → logprob: -11.75672435760498
    4. '```' → logprob: -14.13172435760498
    5. '-' → logprob: -14.88172435760498
    6. ')' → logprob: -15.13172435760498
    7. '
' → logprob: -17.506725311279297
    8. '3' → logprob: -17.506725311279297
    9. '   ' → logprob: -17.631725311279297
    10. '  ' → logprob: -18.944225311279297

Token 288: ').
' (ID: 6294)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.690349817276001
    2. 'for' → logprob: -0.815349817276001
    3. ':' → logprob: -3.315349817276001
    4. '):
' → logprob: -4.440349578857422
    5. ' for' → logprob: -5.565349578857422
    6. ')' → logprob: -5.690349578857422
    7. ':
' → logprob: -7.815349578857422
    8. 'range' → logprob: -9.690349578857422
    9. '(n' → logprob: -9.815349578857422
    10. 'in' → logprob: -9.815349578857422

Token 289: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.7610454708337784e-05
    2. ' for' → logprob: -10.500027656555176
    3. '
' → logprob: -17.50002670288086
    4. '```' → logprob: -19.00002670288086
    5. 'fo' → logprob: -19.50002670288086
    6. 'n' → logprob: -20.25002670288086
    7. 'f' → logprob: -20.62502670288086
    8. ':' → logprob: -20.75002670288086
    9. '	for' → logprob: -20.75002670288086
    10. 'r' → logprob: -21.25002670288086

Token 290: ' l' (ID: 305)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.6240566083070007e-06
    2. ' for' → logprob: -13.375001907348633
    3. '
' → logprob: -20.500001907348633
    4. 'fo' → logprob: -21.000001907348633
    5. '```' → logprob: -21.000001907348633
    6. '	for' → logprob: -21.875001907348633
    7. 'f' → logprob: -22.000001907348633
    8. '#' → logprob: -22.125001907348633
    9. 'from' → logprob: -22.250001907348633
    10. 'n' → logprob: -22.625001907348633

Token 291: ' est' (ID: 893)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.21032139658927917
    2. 'in' → logprob: -1.8353214263916016
    3. 'n' → logprob: -4.460321426391602
    4. ',' → logprob: -4.960321426391602
    5. 'for' → logprob: -5.460321426391602
    6. ')' → logprob: -6.210321426391602
    7. ' ' → logprob: -6.210321426391602
    8. ' for' → logprob: -6.585321426391602
    9. '=' → logprob: -7.960321426391602
    10. ' =' → logprob: -8.085321426391602

Token 292: ' l' (ID: 305)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.430367350578308
    2. ' in' → logprob: -1.555367350578308
    3. 'n' → logprob: -1.680367350578308
    4. ' ' → logprob: -1.930367350578308
    5. ' n' → logprob: -2.3053674697875977
    6. ' range' → logprob: -3.5553674697875977
    7. ' l' → logprob: -3.8053674697875977
    8. 'range' → logprob: -4.055367469787598
    9. 'in' → logprob: -4.555367469787598
    10. 'r' → logprob: -4.555367469787598

Token 293: ''ind' (ID: 82245)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.26468372344970703
    2. ' range' → logprob: -2.764683723449707
    3. ' ' → logprob: -3.014683723449707
    4. 'n' → logprob: -3.389683723449707
    5. ' space' → logprob: -3.889683723449707
    6. ' i' → logprob: -3.889683723449707
    7. ' n' → logprob: -5.139683723449707
    8. ' espace' → logprob: -5.264683723449707
    9. ' variable' → logprob: -5.514683723449707
    10. ' l' → logprob: -5.764683723449707

Token 294: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.027882743626832962
    2. 'ice' → logprob: -4.0278825759887695
    3. 'e' → logprob: -4.6528825759887695
    4. 'ent' → logprob: -9.15288257598877
    5. 'é' → logprob: -11.27788257598877
    6. 'i' → logprob: -11.65288257598877
    7. 'exe' → logprob: -11.65288257598877
    8. 'ices' → logprob: -13.15288257598877
    9. 'exc' → logprob: -13.15288257598877
    10. 'et' → logprob: -13.40288257598877

Token 295: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04969834163784981
    2. 'in' → logprob: -3.0496983528137207
    3. ' ' → logprob: -7.299698352813721
    4. 'n' → logprob: -9.174697875976562
    5. ',' → logprob: -9.674697875976562
    6. ' for' → logprob: -9.924697875976562
    7. 'for' → logprob: -10.424697875976562
    8. ' i' → logprob: -10.549697875976562
    9. '	in' → logprob: -10.549697875976562
    10. ')' → logprob: -10.549697875976562

Token 296: ' départ' (ID: 32693)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05796040594577789
    2. ' range' → logprob: -2.9329605102539062
    3. 'n' → logprob: -6.807960510253906
    4. ' la' → logprob: -7.057960510253906
    5. 'la' → logprob: -7.182960510253906
    6. 'l' → logprob: -9.182960510253906
    7. '0' → logprob: -9.182960510253906
    8. ' n' → logprob: -9.432960510253906
    9. 'r' → logprob: -11.182960510253906
    10. 'a' → logprob: -11.557960510253906

Token 297: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.935895562171936
    2. ' for' → logprob: -0.935895562171936
    3. 'for' → logprob: -1.685895562171936
    4. 'in' → logprob: -3.5608954429626465
    5. ')' → logprob: -6.6858954429626465
    6. ',' → logprob: -8.310895919799805
    7. ' range' → logprob: -9.185895919799805
    8. 'range' → logprob: -9.435895919799805
    9. ' ' → logprob: -9.935895919799805
    10. ' en' → logprob: -10.685895919799805

Token 298: ' la' (ID: 557)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5867528915405273
    2. ' range' → logprob: -0.8367528915405273
    3. ' la' → logprob: -4.586752891540527
    4. 'la' → logprob: -8.711752891540527
    5. ')' → logprob: -9.086752891540527
    6. ' for' → logprob: -9.461752891540527
    7. 'n' → logprob: -9.586752891540527
    8. 'for' → logprob: -10.211752891540527
    9. ' n' → logprob: -10.711752891540527
    10. 'l' → logprob: -10.961752891540527

Token 299: ' sous' (ID: 14487)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6451361775398254
    2. 'range' → logprob: -0.7701361775398254
    3. ' for' → logprob: -5.02013635635376
    4. 'bou' → logprob: -5.89513635635376
    5. ' range' → logprob: -7.77013635635376
    6. 'pl' → logprob: -7.89513635635376
    7. 'b' → logprob: -7.89513635635376
    8. '```' → logprob: -8.020135879516602
    9. 'interval' → logprob: -8.145135879516602
    10. ' boucle' → logprob: -8.395135879516602

Token 300: '-s' (ID: 2011)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16780175268650055
    2. '-' → logprob: -2.542801856994629
    3. 'range' → logprob: -3.292801856994629
    4. '[' → logprob: -4.042801856994629
    5. '_range' → logprob: -5.542801856994629
    6. ' -' → logprob: -5.792801856994629
    7. 'sequence' → logprob: -6.417801856994629
    8. '[]' → logprob: -6.542801856994629
    9. ')' → logprob: -6.917801856994629
    10. 'r' → logprob: -7.042801856994629

Token 301: 'é' (ID: 377)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -1.5702862739562988
    2. 'é' → logprob: -1.6952862739562988
    3. 'range' → logprob: -1.6952862739562988
    4. 'quence' → logprob: -1.9452862739562988
    5. 'quences' → logprob: -3.320286273956299
    6. '-' → logprob: -3.445286273956299
    7. ' sequences' → logprob: -3.695286273956299
    8. ' sequence' → logprob: -3.945286273956299
    9. 'for' → logprob: -4.320286273956299
    10. 'ranges' → logprob: -4.445286273956299

Token 302: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.04468764364719391
    2. 'quences' → logprob: -3.1696877479553223
    3. 'q' → logprob: -6.794687747955322
    4. 'qu' → logprob: -8.544687271118164
    5. 'que' → logprob: -9.419687271118164
    6. '-' → logprob: -9.794687271118164
    7. 'quent' → logprob: -9.794687271118164
    8. 'r' → logprob: -9.919687271118164
    9. '#' → logprob: -10.794687271118164
    10. '```' → logprob: -10.794687271118164

Token 303: ' étudi' (ID: 52742)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6470548510551453
    2. ' in' → logprob: -1.52205491065979
    3. ' for' → logprob: -1.52205491065979
    4. 'in' → logprob: -3.39705491065979
    5. ')' → logprob: -5.397054672241211
    6. ':' → logprob: -7.397054672241211
    7. ',' → logprob: -7.772054672241211
    8. ' ' → logprob: -8.272054672241211
    9. 'range' → logprob: -8.397054672241211
    10. ' range' → logprob: -8.897054672241211

Token 304: 'ée' (ID: 2894)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8328114151954651
    2. 'for' → logprob: -2.2078113555908203
    3. ',' → logprob: -2.3328113555908203
    4. ' for' → logprob: -2.4578113555908203
    5. ')' → logprob: -2.7078113555908203
    6. ' ,' → logprob: -2.9578113555908203
    7. 'r' → logprob: -3.7078113555908203
    8. 'e' → logprob: -3.9578113555908203
    9. ' )' → logprob: -4.08281135559082
    10. ' ' → logprob: -4.20781135559082

Token 305: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004107492510229349
    2. ' for' → logprob: -5.504107475280762
    3. '
' → logprob: -10.879107475280762
    4. ')' → logprob: -12.254107475280762
    5. ':' → logprob: -12.629107475280762
    6. '.' → logprob: -14.379107475280762
    7. ':
' → logprob: -14.879107475280762
    8. ',' → logprob: -15.629107475280762
    9. 'fo' → logprob: -15.629107475280762
    10. 'or' → logprob: -16.004108428955078

Token 306: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.320199877838604e-07
    2. ' for' → logprob: -14.75
    3. '```' → logprob: -19.375
    4. '
' → logprob: -21.625
    5. '	for' → logprob: -23.0
    6. 'fo' → logprob: -23.125
    7. 'from' → logprob: -23.5
    8. ':' → logprob: -24.5
    9. 'pour' → logprob: -24.5
    10. 'r' → logprob: -24.5

Token 307: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.0014778443146497011
    2. 'l' → logprob: -7.0014777183532715
    3. ' ' → logprob: -7.5014777183532715
    4. '_' → logprob: -12.25147819519043
    5. ' ' → logprob: -12.25147819519043
    6. ' _' → logprob: -13.37647819519043
    7. ' i' → logprob: -13.50147819519043
    8. ' space' → logprob: -14.50147819519043
    9. '	l' → logprob: -14.62647819519043
    10. '_l' → logprob: -15.12647819519043

Token 308: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07892702519893646
    2. 'in' → logprob: -2.5789270401000977
    3. ' ' → logprob: -10.328927040100098
    4. ',' → logprob: -14.078927040100098
    5. '  ' → logprob: -14.578927040100098
    6. '	in' → logprob: -14.578927040100098
    7. ')' → logprob: -14.953927040100098
    8. ' i' → logprob: -14.953927040100098
    9. 'n' → logprob: -15.078927040100098
    10. 'import' → logprob: -15.453927040100098

Token 309: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4740835428237915
    2. ' range' → logprob: -0.9740835428237915
    3. '(range' → logprob: -12.22408390045166
    4. 'n' → logprob: -14.72408390045166
    5. ' ' → logprob: -14.84908390045166
    6. '0' → logprob: -15.09908390045166
    7. '	range' → logprob: -15.72408390045166
    8. ' n' → logprob: -16.349082946777344
    9. '   ' → logprob: -16.474082946777344
    10. '(' → logprob: -16.974082946777344

Token 310: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0032200184650719166
    2. '(' → logprob: -5.753220081329346
    3. ' (' → logprob: -10.503219604492188
    4. '(
' → logprob: -11.128219604492188
    5. '1' → logprob: -16.753219604492188
    6. '(l' → logprob: -17.128219604492188
    7. '(

' → logprob: -17.878219604492188
    8. 'n' → logprob: -18.128219604492188
    9. '((' → logprob: -18.378219604492188
    10. '(len' → logprob: -19.128219604492188

Token 311: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.026302389800548553
    2. ' -' → logprob: -3.6513023376464844
    3. '1' → logprob: -13.651302337646484
    4. '):' → logprob: -15.026302337646484
    5. ')' → logprob: -15.401302337646484
    6. '):
' → logprob: -15.401302337646484
    7. '   ' → logprob: -15.901302337646484
    8. ' ' → logprob: -17.276302337646484
    9. '()-' → logprob: -17.276302337646484
    10. '#' → logprob: -17.526302337646484

Token 312: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.506661833962426e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -16.625085830688477
    4. '```' → logprob: -18.000085830688477
    5. '۱' → logprob: -19.375085830688477
    6. '-' → logprob: -19.375085830688477
    7. '１' → logprob: -19.437585830688477
    8. ')' → logprob: -19.687585830688477
    9. '2' → logprob: -19.875085830688477
    10. '  ' → logprob: -20.000085830688477

Token 313: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -17.625001907348633
    4. '   ' → logprob: -18.500001907348633
    5. '۱' → logprob: -19.625001907348633
    6. '１' → logprob: -19.687501907348633
    7. '
' → logprob: -19.687501907348633
    8. '2' → logprob: -20.312501907348633
    9. '' → logprob: -20.625001907348633
    10. '১' → logprob: -20.875001907348633

Token 314: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005363515811040998
    2. ':' → logprob: -8.12553596496582
    3. ')' → logprob: -8.62553596496582
    4. ' ):' → logprob: -10.37553596496582
    5. '):
' → logprob: -10.50053596496582
    6. '+' → logprob: -14.62553596496582
    7. '):
' → logprob: -14.62553596496582
    8. ' :' → logprob: -14.87553596496582
    9. '():' → logprob: -15.50053596496582
    10. ',' → logprob: -16.37553596496582

Token 315: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.151863232254982
    2. ' while' → logprob: -2.2768633365631104
    3. 'while' → logprob: -3.5268633365631104
    4. '	while' → logprob: -4.901863098144531
    5. '<|end|>' → logprob: -7.401863098144531
    6. 'r' → logprob: -8.401863098144531
    7. '    
' → logprob: -8.526863098144531
    8. ' r' → logprob: -9.026863098144531
    9. '#' → logprob: -9.901863098144531
    10. ' if' → logprob: -10.151863098144531

Token 316: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.26992011070251465
    2. ' while' → logprob: -2.1449201107025146
    3. '   ' → logprob: -2.1449201107025146
    4. 'r' → logprob: -6.769920349121094
    5. 's' → logprob: -7.644920349121094
    6. '	while' → logprob: -8.269920349121094
    7. ' r' → logprob: -8.894920349121094
    8. '    
' → logprob: -9.644920349121094
    9. '<|end|>' → logprob: -9.769920349121094
    10. ' s' → logprob: -9.769920349121094

Token 317: ' Dé' (ID: 27247)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0009050302323885262
    2. 'r' → logprob: -7.6259050369262695
    3. 'for' → logprob: -8.37590503692627
    4. 's' → logprob: -8.75090503692627
    5. 'if' → logprob: -11.00090503692627
    6. '   ' → logprob: -12.37590503692627
    7. ' while' → logprob: -12.87590503692627
    8. 'wh' → logprob: -13.50090503692627
    9. 'ans' → logprob: -13.87590503692627
    10. 'w' → logprob: -14.37590503692627

Token 318: 'b' (ID: 65)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7784193158149719
    2. 'r' → logprob: -1.6534192562103271
    3. 'but' → logprob: -1.7784192562103271
    4. 'if' → logprob: -2.653419256210327
    5. 'c' → logprob: -4.278419494628906
    6. '#' → logprob: -4.278419494628906
    7. 'placer' → logprob: -4.278419494628906
    8. 'cr' → logprob: -4.403419494628906
    9. 'cal' → logprob: -4.528419494628906
    10. 'while' → logprob: -4.528419494628906

Token 319: 'ute' (ID: 1331)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.39522963762283325
    2. '   ' → logprob: -1.7702295780181885
    3. 'ute' → logprob: -2.7702295780181885
    4. 'r' → logprob: -3.7702295780181885
    5. 'if' → logprob: -4.020229816436768
    6. ' if' → logprob: -4.145229816436768
    7. 't' → logprob: -4.395229816436768
    8. 'uts' → logprob: -5.395229816436768
    9. 'utes' → logprob: -5.645229816436768
    10. 'ug' → logprob: -5.770229816436768

Token 320: ' une' (ID: 2463)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1948753446340561
    2. 'while' → logprob: -2.1948752403259277
    3. ' while' → logprob: -3.0698752403259277
    4. 'for' → logprob: -4.569875240325928
    5. ' for' → logprob: -5.819875240325928
    6. 'r' → logprob: -5.944875240325928
    7. ' r' → logprob: -6.444875240325928
    8. ' ' → logprob: -7.444875240325928
    9. '    ' → logprob: -8.069875717163086
    10. '  ' → logprob: -8.194875717163086

Token 321: ' boucle' (ID: 174211)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.03525950387120247
    2. ' while' → logprob: -3.410259485244751
    3. 'for' → logprob: -7.16025972366333
    4. '   ' → logprob: -7.28525972366333
    5. ' ' → logprob: -10.035259246826172
    6. 'wh' → logprob: -10.160259246826172
    7. 'if' → logprob: -10.910259246826172
    8. '```' → logprob: -10.910259246826172
    9. ' for' → logprob: -11.160259246826172
    10. '  ' → logprob: -12.535259246826172

Token 322: ' "' (ID: 392)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4365687668323517
    2. '   ' → logprob: -1.0615687370300293
    3. 'for' → logprob: -5.186568737030029
    4. '	for' → logprob: -6.561568737030029
    5. ' ' → logprob: -8.436569213867188
    6. ' inner' → logprob: -8.811569213867188
    7. 'r' → logprob: -9.186569213867188
    8. '    ' → logprob: -9.311569213867188
    9. ' r' → logprob: -9.561569213867188
    10. ' while' → logprob: -9.686569213867188

Token 323: 'while' (ID: 7032)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.49027782678604126
    2. '   ' → logprob: -1.7402777671813965
    3. ' for' → logprob: -1.7402777671813965
    4. 'while' → logprob: -3.4902777671813965
    5. ' while' → logprob: -5.1152777671813965
    6. '	for' → logprob: -10.490278244018555
    7. ' ' → logprob: -10.990278244018555
    8. 'range' → logprob: -11.240278244018555
    9. '  ' → logprob: -11.490278244018555
    10. ' range' → logprob: -11.615278244018555

Token 324: '"' (ID: 1)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.08164490759372711
    2. ' s' → logprob: -2.9566450119018555
    3. 'r' → logprob: -3.9566450119018555
    4. ' a' → logprob: -5.8316450119018555
    5. 's' → logprob: -6.7066450119018555
    6. ' ' → logprob: -7.0816450119018555
    7. ' True' → logprob: -7.5816450119018555
    8. '"' → logprob: -7.7066450119018555
    9. ' (' → logprob: -7.8316450119018555
    10. 'a' → logprob: -8.456645011901855

Token 325: ' qui' (ID: 2780)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.04661742225289345
    2. 'r' → logprob: -3.9216175079345703
    3. '   ' → logprob: -4.67161750793457
    4. ' s' → logprob: -5.04661750793457
    5. ' a' → logprob: -5.67161750793457
    6. ' l' → logprob: -6.17161750793457
    7. '    ' → logprob: -6.54661750793457
    8. ' ' → logprob: -6.92161750793457
    9. ' (' → logprob: -7.67161750793457
    10. 'a' → logprob: -8.04661750793457

Token 326: ' continue' (ID: 4901)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.38331499695777893
    2. 'r' → logprob: -1.2583149671554565
    3. ' s' → logprob: -3.758315086364746
    4. 's' → logprob: -5.258315086364746
    5. ' a' → logprob: -6.133315086364746
    6. 'a' → logprob: -6.633315086364746
    7. ' ' → logprob: -7.508315086364746
    8. ' l' → logprob: -7.633315086364746
    9. ' (' → logprob: -8.133315086364746
    10. '(r' → logprob: -8.633315086364746

Token 327: ' tant' (ID: 16235)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.117306649684906
    2. 'r' → logprob: -2.617306709289551
    3. ' s' → logprob: -3.867306709289551
    4. ' a' → logprob: -4.492306709289551
    5. 'a' → logprob: -6.242306709289551
    6. 's' → logprob: -6.742306709289551
    7. ' ans' → logprob: -6.992306709289551
    8. ' ' → logprob: -7.367306709289551
    9. '   ' → logprob: -7.742306709289551
    10. ' (' → logprob: -8.74230670928955

Token 328: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.0004061242798343301
    2. 'que' → logprob: -7.875406265258789
    3. ' ' → logprob: -11.500406265258789
    4. ' r' → logprob: -11.875406265258789
    5. 'r' → logprob: -12.750406265258789
    6. '   ' → logprob: -13.125406265258789
    7. ' qu' → logprob: -13.500406265258789
    8. 'Que' → logprob: -14.250406265258789
    9. '(r' → logprob: -14.875406265258789
    10. '  ' → logprob: -14.875406265258789

Token 329: ' deux' (ID: 10301)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0009982750052586198
    2. ' r' → logprob: -7.125998497009277
    3. 's' → logprob: -8.750998497009277
    4. '(r' → logprob: -10.750998497009277
    5. '   ' → logprob: -12.875998497009277
    6. '(s' → logprob: -12.875998497009277
    7. ' (' → logprob: -13.000998497009277
    8. ' s' → logprob: -13.125998497009277
    9. 'l' → logprob: -13.250998497009277
    10. ' ' → logprob: -13.500998497009277

Token 330: ' conditions' (ID: 6409)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.37126949429512024
    2. 'a' → logprob: -2.496269464492798
    3. ' a' → logprob: -2.996269464492798
    4. ' conditions' → logprob: -3.246269464492798
    5. ' r' → logprob: -3.371269464492798
    6. ' <' → logprob: -3.871269464492798
    7. ' s' → logprob: -3.996269464492798
    8. 's' → logprob: -4.246269702911377
    9. ' ' → logprob: -4.746269702911377
    10. 'l' → logprob: -5.121269702911377

Token 331: ' sont' (ID: 5242)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6721257567405701
    2. 'r' → logprob: -2.172125816345215
    3. ' l' → logprob: -2.172125816345215
    4. ' r' → logprob: -2.297125816345215
    5. ':' → logprob: -2.672125816345215
    6. 'and' → logprob: -3.547125816345215
    7. 'l' → logprob: -3.797125816345215
    8. ' are' → logprob: -4.297125816345215
    9. '   ' → logprob: -4.797125816345215
    10. 's' → logprob: -5.047125816345215

Token 332: ' vra' (ID: 16065)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.6980571746826172
    2. 'r' → logprob: -0.8230571746826172
    3. 'v' → logprob: -3.073057174682617
    4. 's' → logprob: -5.573057174682617
    5. 'l' → logprob: -5.573057174682617
    6. 'True' → logprob: -6.198057174682617
    7. ' l' → logprob: -6.448057174682617
    8. ' True' → logprob: -6.573057174682617
    9. '   ' → logprob: -7.073057174682617
    10. ' v' → logprob: -7.198057174682617

Token 333: 'ies' (ID: 566)
  Prédit: 'ies'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ies' → logprob: -0.04353402554988861
    2. 'is' → logprob: -4.043533802032471
    3. 'i' → logprob: -4.668533802032471
    4. 'illées' → logprob: -5.918533802032471
    5. 'es' → logprob: -6.043533802032471
    6. 's' → logprob: -6.293533802032471
    7. 'illes' → logprob: -6.293533802032471
    8. 'iles' → logprob: -6.918533802032471
    9. 'lies' → logprob: -7.043533802032471
    10. 'l' → logprob: -7.168533802032471

Token 334: ' ' (ID: 5310)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3833865523338318
    2. '   ' → logprob: -2.0083866119384766
    3. ':' → logprob: -2.5083866119384766
    4. ' (' → logprob: -3.7583866119384766
    5. '(r' → logprob: -3.7583866119384766
    6. 'and' → logprob: -3.8833866119384766
    7. ' r' → logprob: -4.258386611938477
    8. 'r' → logprob: -5.008386611938477
    9. ' l' → logprob: -6.008386611938477
    10. '    ' → logprob: -6.008386611938477

Token 335: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1817394495010376
    2. ' r' → logprob: -3.181739330291748
    3. ':' → logprob: -3.556739330291748
    4. '   ' → logprob: -3.556739330291748
    5. 'r' → logprob: -3.681739330291748
    6. 'and' → logprob: -4.431739330291748
    7. ' (' → logprob: -4.931739330291748
    8. '(r' → logprob: -4.931739330291748
    9. '    ' → logprob: -5.431739330291748
    10. ' l' → logprob: -5.806739330291748

Token 336: '   ' (ID: 271)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.23196233808994293
    2. 'r' → logprob: -1.6069623231887817
    3. ' a' → logprob: -6.481962203979492
    4. ' s' → logprob: -6.481962203979492
    5. 'a' → logprob: -6.981962203979492
    6. '   ' → logprob: -7.356962203979492
    7. 's' → logprob: -7.606962203979492
    8. ' l' → logprob: -7.981962203979492
    9. ' (' → logprob: -7.981962203979492
    10. '    ' → logprob: -8.106962203979492

Token 337: ' #' (ID: 1069)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.39322948455810547
    2. ' r' → logprob: -1.1432294845581055
    3. '   ' → logprob: -5.6432294845581055
    4. ' s' → logprob: -7.1432294845581055
    5. 's' → logprob: -7.2682294845581055
    6. 'a' → logprob: -7.8932294845581055
    7. '(r' → logprob: -8.018229484558105
    8. ' a' → logprob: -8.518229484558105
    9. ' (' → logprob: -9.143229484558105
    10. ' l' → logprob: -9.518229484558105

Token 338: ' ' (ID: 220)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.6343119740486145
    2. 'r' → logprob: -0.7593119740486145
    3. '   ' → logprob: -7.759312152862549
    4. ' s' → logprob: -8.13431167602539
    5. ' a' → logprob: -8.50931167602539
    6. 'a' → logprob: -8.50931167602539
    7. '(r' → logprob: -8.63431167602539
    8. 's' → logprob: -8.75931167602539
    9. ' (' → logprob: -9.13431167602539
    10. ' ' → logprob: -9.63431167602539

Token 339: '1' (ID: 16)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.002003580564633012
    2. ' r' → logprob: -7.0020036697387695
    3. 's' → logprob: -7.1270036697387695
    4. 'a' → logprob: -9.50200366973877
    5. 'l' → logprob: -9.50200366973877
    6. '(r' → logprob: -9.50200366973877
    7. '   ' → logprob: -10.00200366973877
    8. ' s' → logprob: -12.00200366973877
    9. '(s' → logprob: -12.62700366973877
    10. ' ' → logprob: -13.37700366973877

Token 340: ')' (ID: 8)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.07160139083862305
    2. '<' → logprob: -3.946601390838623
    3. ' <=' → logprob: -4.071601390838623
    4. ' r' → logprob: -4.821601390838623
    5. ' and' → logprob: -5.071601390838623
    6. 'r' → logprob: -5.571601390838623
    7. ' s' → logprob: -5.696601390838623
    8. ' ' → logprob: -6.321601390838623
    9. ' +' → logprob: -6.321601390838623
    10. '   ' → logprob: -6.571601390838623

Token 341: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.013312460854649544
    2. ' r' → logprob: -4.388312339782715
    3. 's' → logprob: -7.388312339782715
    4. 'a' → logprob: -9.513312339782715
    5. ' s' → logprob: -9.638312339782715
    6. '   ' → logprob: -11.263312339782715
    7. '(r' → logprob: -11.388312339782715
    8. ' a' → logprob: -12.013312339782715
    9. 'l' → logprob: -12.013312339782715
    10. ' ' → logprob: -13.013312339782715

Token 342: ' est' (ID: 893)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6999061107635498
    2. '+' → logprob: -1.1999061107635498
    3. ' <' → logprob: -1.8249061107635498
    4. '<' → logprob: -3.19990611076355
    5. '<n' → logprob: -9.074906349182129
    6. ' ' → logprob: -11.074906349182129
    7. '<len' → logprob: -11.699906349182129
    8. ' plus' → logprob: -13.199906349182129
    9. '   ' → logprob: -13.699906349182129
    10. '＋' → logprob: -14.949906349182129

Token 343: ' strict' (ID: 12035)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6625949144363403
    2. '<' → logprob: -1.2875949144363403
    3. ' <' → logprob: -1.9125949144363403
    4. ' +' → logprob: -2.912594795227051
    5. '<n' → logprob: -5.662594795227051
    6. ' plus' → logprob: -6.787594795227051
    7. ' moins' → logprob: -7.412594795227051
    8. ' less' → logprob: -7.787594795227051
    9. '<len' → logprob: -8.28759479522705
    10. 'n' → logprob: -8.41259479522705

Token 344: 'ement' (ID: 962)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4303009510040283
    2. ' <' → logprob: -1.0553009510040283
    3. '   ' → logprob: -7.180300712585449
    4. 'ly' → logprob: -7.805300712585449
    5. 'ement' → logprob: -8.43030071258545
    6. ' less' → logprob: -10.05530071258545
    7. '<len' → logprob: -10.30530071258545
    8. '+' → logprob: -10.93030071258545
    9. '    ' → logprob: -11.18030071258545
    10. '<
' → logprob: -11.30530071258545

Token 345: ' inférieur' (ID: 191498)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5961379408836365
    2. ' <' → logprob: -0.8461379408836365
    3. '+' → logprob: -3.9711380004882812
    4. ' +' → logprob: -6.971138000488281
    5. '<n' → logprob: -8.971138000488281
    6. ' plus' → logprob: -11.096138000488281
    7. '<len' → logprob: -11.346138000488281
    8. 'plus' → logprob: -11.596138000488281
    9. ' ' → logprob: -11.721138000488281
    10. ' less' → logprob: -12.221138000488281

Token 346: ' à' (ID: 1221)
  Prédit: '<n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<n' → logprob: -1.276413917541504
    2. ' to' → logprob: -1.901413917541504
    3. ' <' → logprob: -1.901413917541504
    4. 'n' → logprob: -2.151413917541504
    5. '+' → logprob: -2.276413917541504
    6. ' n' → logprob: -2.526413917541504
    7. ' +' → logprob: -3.151413917541504
    8. ' and' → logprob: -3.651413917541504
    9. ' à' → logprob: -3.901413917541504
    10. '<' → logprob: -4.401413917541504

Token 347: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0031794982496649027
    2. ' n' → logprob: -5.753179550170898
    3. '(n' → logprob: -13.378179550170898
    4. '   ' → logprob: -15.753179550170898
    5. '<n' → logprob: -17.0031795501709
    6. '	n' → logprob: -17.5031795501709
    7. '
' → logprob: -17.5031795501709
    8. ')n' → logprob: -17.5031795501709
    9. ' (' → logprob: -18.5031795501709
    10. 'len' → logprob: -19.1281795501709

Token 348: '-' (ID: 12)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.09809060394763947
    2. 'and' → logprob: -2.473090648651123
    3. '   ' → logprob: -4.723090648651123
    4. '    ' → logprob: -9.348090171813965
    5. ' ' → logprob: -9.473090171813965
    6. ' et' → logprob: -11.098090171813965
    7. '  ' → logprob: -11.348090171813965
    8. ')' → logprob: -11.598090171813965
    9. '<|end|>' → logprob: -12.098090171813965
    10. '	and' → logprob: -12.223090171813965

Token 349: '1' (ID: 16)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5394494533538818
    2. 'and' → logprob: -1.0394494533538818
    3. '-' → logprob: -3.414449453353882
    4. '   ' → logprob: -4.539449691772461
    5. ' -' → logprob: -4.539449691772461
    6. '1' → logprob: -5.039449691772461
    7. ' ' → logprob: -6.664449691772461
    8. '2' → logprob: -7.414449691772461
    9. '<|end|>' → logprob: -8.664449691772461
    10. '
' → logprob: -8.789449691772461

Token 350: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07727610319852829
    2. 'and' → logprob: -2.8272759914398193
    3. '   ' → logprob: -4.202276229858398
    4. ' et' → logprob: -9.577276229858398
    5. '    ' → logprob: -9.702276229858398
    6. ' ' → logprob: -10.077276229858398
    7. 'et' → logprob: -10.577276229858398
    8. '  ' → logprob: -11.327276229858398
    9. '	and' → logprob: -12.202276229858398
    10. ')' → logprob: -12.327276229858398

Token 351: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13249807059764862
    2. ' and' → logprob: -2.132498025894165
    3. 'and' → logprob: -5.882498264312744
    4. '    ' → logprob: -6.132498264312744
    5. ' ' → logprob: -8.132497787475586
    6. 'r' → logprob: -9.382497787475586
    7. '  ' → logprob: -9.382497787475586
    8. ' et' → logprob: -10.382497787475586
    9. '    
' → logprob: -11.132497787475586
    10. ' r' → logprob: -11.257497787475586

Token 352: ''est' (ID: 6616)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0653170645236969
    2. 'and' → logprob: -3.315317153930664
    3. ' et' → logprob: -3.815317153930664
    4. 'et' → logprob: -5.565317153930664
    5. '   ' → logprob: -7.190317153930664
    6. ')' → logprob: -8.690317153930664
    7. ' ' → logprob: -10.565317153930664
    8. '  ' → logprob: -10.690317153930664
    9. ' )' → logprob: -11.065317153930664
    10. '    ' → logprob: -11.190317153930664

Token 353: '-à' (ID: 56297)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.8524524569511414
    2. 'r' → logprob: -0.9774524569511414
    3. '   ' → logprob: -2.102452516555786
    4. ' and' → logprob: -3.602452516555786
    5. '    ' → logprob: -3.977452516555786
    6. ' #' → logprob: -4.977452278137207
    7. ' ' → logprob: -4.977452278137207
    8. '  ' → logprob: -5.602452278137207
    9. '-à' → logprob: -5.977452278137207
    10. ' a' → logprob: -6.352452278137207

Token 354: '-dire' (ID: 76064)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2462698072195053
    2. 'n' → logprob: -2.121269702911377
    3. ' r' → logprob: -3.246269702911377
    4. ' True' → logprob: -4.496269702911377
    5. 'True' → logprob: -4.746269702911377
    6. 'int' → logprob: -4.871269702911377
    7. '   ' → logprob: -4.996269702911377
    8. 'a' → logprob: -5.746269702911377
    9. ' n' → logprob: -5.871269702911377
    10. ' ' → logprob: -5.871269702911377

Token 355: ' qu' (ID: 474)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.06018988788127899
    2. 'r' → logprob: -2.935189962387085
    3. '   ' → logprob: -6.310189723968506
    4. ' a' → logprob: -6.560189723968506
    5. ' and' → logprob: -8.060190200805664
    6. ' (' → logprob: -8.185190200805664
    7. '(r' → logprob: -8.185190200805664
    8. ' l' → logprob: -8.310190200805664
    9. 'a' → logprob: -8.560190200805664
    10. ' s' → logprob: -8.810190200805664

Token 356: ''on' (ID: 25812)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.20974938571453094
    2. 'r' → logprob: -1.7097493410110474
    3. ' <' → logprob: -5.084749221801758
    4. ' ' → logprob: -7.209749221801758
    5. '<' → logprob: -7.959749221801758
    6. '   ' → logprob: -8.084749221801758
    7. ')' → logprob: -9.459749221801758
    8. '  ' → logprob: -9.709749221801758
    9. ' len' → logprob: -9.709749221801758
    10. '(r' → logprob: -9.834749221801758

Token 357: ' reste' (ID: 26769)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.14166657626628876
    2. '<' → logprob: -2.1416666507720947
    3. '+' → logprob: -4.766666412353516
    4. ' +' → logprob: -6.266666412353516
    5. ' r' → logprob: -6.391666412353516
    6. ' <=' → logprob: -7.641666412353516
    7. 'r' → logprob: -7.641666412353516
    8. '   ' → logprob: -8.016666412353516
    9. ' a' → logprob: -8.516666412353516
    10. '<len' → logprob: -8.516666412353516

Token 358: ' dans' (ID: 2671)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.051931679248809814
    2. '<' → logprob: -3.301931619644165
    3. '   ' → logprob: -4.801931858062744
    4. 'r' → logprob: -6.801931858062744
    5. ' dans' → logprob: -7.301931858062744
    6. ' ' → logprob: -7.926931858062744
    7. '<n' → logprob: -8.051931381225586
    8. ' strict' → logprob: -8.176931381225586
    9. ' plus' → logprob: -8.301931381225586
    10. ' à' → logprob: -8.301931381225586

Token 359: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.698162317276001
    2. ' range' → logprob: -1.323162317276001
    3. 'range' → logprob: -1.823162317276001
    4. ' n' → logprob: -3.948162317276001
    5. 'n' → logprob: -4.573162078857422
    6. ' l' → logprob: -4.823162078857422
    7. ' le' → logprob: -4.823162078857422
    8. 'la' → logprob: -5.198162078857422
    9. 'r' → logprob: -5.198162078857422
    10. ' les' → logprob: -5.198162078857422

Token 360: ' born' (ID: 12275)
  Prédit: ' limites'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' limites' → logprob: -0.5215368270874023
    2. 'lim' → logprob: -1.0215368270874023
    3. 'limits' → logprob: -4.021536827087402
    4. 'bounds' → logprob: -4.521536827087402
    5. 'range' → logprob: -5.646536827087402
    6. 'born' → logprob: -5.771536827087402
    7. ' limits' → logprob: -6.021536827087402
    8. 'borne' → logprob: -6.271536827087402
    9. ' born' → logprob: -6.396536827087402
    10. 'bound' → logprob: -6.896536827087402

Token 361: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.18297162652015686
    2. 'e' → logprob: -1.8079715967178345
    3. 's' → logprob: -6.432971477508545
    4. 'd' → logprob: -8.057971954345703
    5. '#' → logprob: -8.807971954345703
    6. 'nes' → logprob: -8.807971954345703
    7. 'iers' → logprob: -9.057971954345703
    8. 'des' → logprob: -9.557971954345703
    9. ' e' → logprob: -9.682971954345703
    10. 'de' → logprob: -9.807971954345703

Token 362: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4154405891895294
    2. ' and' → logprob: -1.290440559387207
    3. ' et' → logprob: -3.540440559387207
    4. 'and' → logprob: -3.665440559387207
    5. 'et' → logprob: -4.915440559387207
    6. '    ' → logprob: -7.040440559387207
    7. 'r' → logprob: -7.415440559387207
    8. ' ' → logprob: -8.290440559387207
    9. '  ' → logprob: -8.540440559387207
    10. ')' → logprob: -8.540440559387207

Token 363: ' tableau' (ID: 67053)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9391292333602905
    2. ' tableau' → logprob: -1.4391292333602905
    3. 'n' → logprob: -1.8141292333602905
    4. 'table' → logprob: -2.43912935256958
    5. ' a' → logprob: -3.43912935256958
    6. ' sequence' → logprob: -3.81412935256958
    7. 'r' → logprob: -3.93912935256958
    8. ' n' → logprob: -4.68912935256958
    9. ' array' → logprob: -4.81412935256958
    10. ' table' → logprob: -4.81412935256958

Token 364: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7469248175621033
    2. ' and' → logprob: -0.7469248175621033
    3. 'and' → logprob: -2.996924877166748
    4. ' et' → logprob: -6.621924877166748
    5. '    ' → logprob: -7.996924877166748
    6. ' ' → logprob: -8.12192440032959
    7. 'et' → logprob: -8.87192440032959
    8. '  ' → logprob: -8.87192440032959
    9. ')' → logprob: -9.87192440032959
    10. '       ' → logprob: -10.49692440032959

Token 365: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009812753647565842
    2. ' and' → logprob: -5.134812831878662
    3. '    ' → logprob: -6.009812831878662
    4. ' while' → logprob: -7.634812831878662
    5. '  ' → logprob: -8.759812355041504
    6. ' ' → logprob: -8.884812355041504
    7. 'and' → logprob: -9.009812355041504
    8. '       ' → logprob: -9.134812355041504
    9. ',' → logprob: -9.509812355041504
    10. ')' → logprob: -9.884812355041504

Token 366: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043207455426454544
    2. ' and' → logprob: -3.4182074069976807
    3. ' while' → logprob: -5.41820764541626
    4. 'and' → logprob: -5.66820764541626
    5. 'while' → logprob: -6.79320764541626
    6. '    ' → logprob: -8.543207168579102
    7. '       ' → logprob: -9.293207168579102
    8. '  ' → logprob: -9.418207168579102
    9. ' ' → logprob: -9.668207168579102
    10. '	while' → logprob: -10.918207168579102

Token 367: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3654337525367737
    2. ' while' → logprob: -1.240433692932129
    3. 'while' → logprob: -4.365433692932129
    4. '    ' → logprob: -6.115433692932129
    5. ' and' → logprob: -7.615433692932129
    6. ' ' → logprob: -7.615433692932129
    7. ' if' → logprob: -8.615433692932129
    8. '  ' → logprob: -8.740433692932129
    9. '       ' → logprob: -9.240433692932129
    10. ' ' → logprob: -9.365433692932129

Token 368: '2' (ID: 17)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -1.1345041990280151
    2. 'while' → logprob: -1.1345041990280151
    3. 'r' → logprob: -1.3845041990280151
    4. '   ' → logprob: -2.7595043182373047
    5. ' r' → logprob: -3.3845043182373047
    6. 'a' → logprob: -6.009504318237305
    7. 's' → logprob: -6.259504318237305
    8. ' s' → logprob: -6.634504318237305
    9. ' a' → logprob: -6.884504318237305
    10. ' ' → logprob: -7.259504318237305

Token 369: ')' (ID: 8)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.695380687713623
    2. ' a' → logprob: -1.195380687713623
    3. ' <' → logprob: -2.945380687713623
    4. 'a' → logprob: -3.195380687713623
    5. '   ' → logprob: -3.195380687713623
    6. 's' → logprob: -3.820380687713623
    7. ')' → logprob: -4.695380687713623
    8. ' (' → logprob: -5.070380687713623
    9. ' while' → logprob: -5.070380687713623
    10. ' r' → logprob: -5.320380687713623

Token 370: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5233529806137085
    2. 'a' → logprob: -1.5233529806137085
    3. ' s' → logprob: -1.8983529806137085
    4. ' a' → logprob: -3.273353099822998
    5. '(s' → logprob: -7.648353099822998
    6. 'r' → logprob: -7.773353099822998
    7. '   ' → logprob: -8.77335262298584
    8. '(a' → logprob: -8.77335262298584
    9. ' (' → logprob: -8.89835262298584
    10. 'abs' → logprob: -9.02335262298584

Token 371: ' &' (ID: 827)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.917693018913269
    2. ' +' → logprob: -0.917693018913269
    3. ' <=' → logprob: -3.1676931381225586
    4. '<=' → logprob: -3.2926931381225586
    5. '!=' → logprob: -3.5426931381225586
    6. ' !=' → logprob: -3.6676931381225586
    7. ' <' → logprob: -3.6676931381225586
    8. '<' → logprob: -3.6676931381225586
    9. '==' → logprob: -5.542693138122559
    10. ' ==' → logprob: -5.792693138122559

Token 372: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.24917584657669067
    2. ' a' → logprob: -1.624175786972046
    3. ' (' → logprob: -4.499176025390625
    4. '(a' → logprob: -4.624176025390625
    5. '1' → logprob: -7.374176025390625
    6. ' ' → logprob: -7.749176025390625
    7. '(' → logprob: -8.124176025390625
    8. '(s' → logprob: -8.249176025390625
    9. '&a' → logprob: -9.874176025390625
    10. '=' → logprob: -9.999176025390625

Token 373: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.013560047373175621
    2. '[l' → logprob: -4.888559818267822
    3. '[' → logprob: -5.388559818267822
    4. 'r' → logprob: -6.638559818267822
    5. ' [' → logprob: -11.13856029510498
    6. 'l' → logprob: -11.38856029510498
    7. '[
' → logprob: -12.13856029510498
    8. '[a' → logprob: -12.51356029510498
    9. '(r' → logprob: -12.63856029510498
    10. '   ' → logprob: -12.88856029510498

Token 374: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0429178886115551
    2. ']' → logprob: -3.6679179668426514
    3. ' +' → logprob: -4.667917728424072
    4. '[' → logprob: -6.042917728424072
    5. '[l' → logprob: -6.292917728424072
    6. '[r' → logprob: -6.917917728424072
    7. 'l' → logprob: -7.167917728424072
    8. '1' → logprob: -8.29291820526123
    9. '   ' → logprob: -8.66791820526123
    10. 'r' → logprob: -8.66791820526123

Token 375: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008693021372891963
    2. '+' → logprob: -7.375869274139404
    3. 'l' → logprob: -9.125869750976562
    4. ' ' → logprob: -9.500869750976562
    5. ']' → logprob: -10.375869750976562
    6. '   ' → logprob: -11.750869750976562
    7. 'r' → logprob: -12.375869750976562
    8. '+l' → logprob: -12.375869750976562
    9. '[l' → logprob: -12.875869750976562
    10. '```' → logprob: -13.125869750976562

Token 376: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3972155749797821
    2. ')' → logprob: -1.3972156047821045
    3. ']==' → logprob: -3.8972156047821045
    4. ')==' → logprob: -4.022215366363525
    5. ' ==' → logprob: -4.272215366363525
    6. '[' → logprob: -4.897215366363525
    7. ' ]' → logprob: -5.022215366363525
    8. ' )' → logprob: -5.522215366363525
    9. '==' → logprob: -5.897215366363525
    10. ':' → logprob: -6.522215366363525

Token 377: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12582111358642578
    2. '==' → logprob: -2.375821113586426
    3. ' !=' → logprob: -4.000821113586426
    4. '!=' → logprob: -6.125821113586426
    5. ':' → logprob: -6.500821113586426
    6. ')' → logprob: -7.000821113586426
    7. ' <' → logprob: -7.625821113586426
    8. ' ' → logprob: -7.875821113586426
    9. ' >' → logprob: -8.125821113586426
    10. ')==' → logprob: -8.250821113586426

Token 378: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008249913225881755
    2. ' ' → logprob: -7.125824928283691
    3. 's' → logprob: -10.875824928283691
    4. 'a' → logprob: -14.000824928283691
    5. ' s' → logprob: -14.875824928283691
    6. ' ' → logprob: -16.500825881958008
    7. '1' → logprob: -16.750825881958008
    8. '  ' → logprob: -16.875825881958008
    9. '   ' → logprob: -17.375825881958008
    10. '```' → logprob: -17.500825881958008

Token 379: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.875003814697266
    3. 's' → logprob: -13.750003814697266
    4. 'a' → logprob: -17.625003814697266
    5. '０' → logprob: -17.875003814697266
    6. '۰' → logprob: -18.375003814697266
    7. ' ' → logprob: -18.875003814697266
    8. '```' → logprob: -19.125003814697266
    9. '=' → logprob: -19.250003814697266
    10. '٠' → logprob: -19.625003814697266

Token 380: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.34362879395484924
    2. '   ' → logprob: -1.7186287641525269
    3. ':' → logprob: -2.4686288833618164
    4. 'and' → logprob: -4.093628883361816
    5. '       ' → logprob: -5.093628883361816
    6. ':
' → logprob: -6.843628883361816
    7. '):' → logprob: -7.093628883361816
    8. ' :' → logprob: -7.468628883361816
    9. '    ' → logprob: -7.468628883361816
    10. ')' → logprob: -8.343628883361816

Token 381: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06845995038747787
    2. ':' → logprob: -3.818459987640381
    3. ' :' → logprob: -4.193459987640381
    4. '       ' → logprob: -5.068459987640381
    5. '    ' → logprob: -5.068459987640381
    6. ' and' → logprob: -5.193459987640381
    7. ' ' → logprob: -5.818459987640381
    8. '    
' → logprob: -6.568459987640381
    9. ' r' → logprob: -6.568459987640381
    10. ' :
' → logprob: -6.568459987640381

Token 382: ''est' (ID: 6616)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6050629019737244
    2. ' :' → logprob: -1.6050629615783691
    3. '   ' → logprob: -2.230062961578369
    4. ' ' → logprob: -3.230062961578369
    5. ' and' → logprob: -3.730062961578369
    6. '    ' → logprob: -3.855062961578369
    7. ' ' → logprob: -4.730062961578369
    8. ':
' → logprob: -4.855062961578369
    9. '  ' → logprob: -4.855062961578369
    10. 'r' → logprob: -5.105062961578369

Token 383: '-à' (ID: 56297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4358108639717102
    2. ')' → logprob: -2.5608108043670654
    3. ' a' → logprob: -2.5608108043670654
    4. '  ' → logprob: -3.0608108043670654
    5. ':' → logprob: -3.5608108043670654
    6. ' not' → logprob: -4.0608110427856445
    7. ' )' → logprob: -4.0608110427856445
    8. '<|end|>' → logprob: -4.3108110427856445
    9. '    ' → logprob: -4.4358110427856445
    10. '   ' → logprob: -4.5608110427856445

Token 384: '-dire' (ID: 76064)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.4711909294128418
    2. '   ' → logprob: -1.8461909294128418
    3. '-à' → logprob: -1.8461909294128418
    4. 'False' → logprob: -2.596190929412842
    5. 'a' → logprob: -2.846190929412842
    6. 'r' → logprob: -2.971190929412842
    7. 'à' → logprob: -2.971190929412842
    8. '(r' → logprob: -3.096190929412842
    9. 'l' → logprob: -3.471190929412842
    10. 'que' → logprob: -4.346190929412842

Token 385: ' que' (ID: 661)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5151890516281128
    2. ' ' → logprob: -1.6401890516281128
    3. ' a' → logprob: -2.5151891708374023
    4. ' s' → logprob: -2.8901891708374023
    5. '   ' → logprob: -3.3901891708374023
    6. '  ' → logprob: -4.890189170837402
    7. ' r' → logprob: -4.890189170837402
    8. '    ' → logprob: -5.640189170837402
    9. 'a' → logprob: -5.765189170837402
    10. ' )' → logprob: -5.890189170837402

Token 386: ' le' (ID: 505)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.19269737601280212
    2. '(s' → logprob: -1.8176974058151245
    3. '(r' → logprob: -4.567697525024414
    4. 's' → logprob: -7.067697525024414
    5. '(' → logprob: -7.692697525024414
    6. ' s' → logprob: -7.942697525024414
    7. ' ' → logprob: -8.692697525024414
    8. 'r' → logprob: -8.942697525024414
    9. ' ((' → logprob: -9.192697525024414
    10. 'a' → logprob: -9.192697525024414

Token 387: ' "' (ID: 392)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.47841647267341614
    2. ' (' → logprob: -1.4784164428710938
    3. 's' → logprob: -2.2284164428710938
    4. ' s' → logprob: -3.6034164428710938
    5. '(r' → logprob: -5.353416442871094
    6. '&' → logprob: -6.103416442871094
    7. 'a' → logprob: -6.478416442871094
    8. '(' → logprob: -6.478416442871094
    9. ' &' → logprob: -6.478416442871094
    10. '&s' → logprob: -6.728416442871094

Token 388: 'et' (ID: 292)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2164141982793808
    2. '&' → logprob: -2.216414213180542
    3. ' s' → logprob: -3.591414213180542
    4. ' bit' → logprob: -4.591413974761963
    5. '&s' → logprob: -4.591413974761963
    6. ' &' → logprob: -4.841413974761963
    7. 'et' → logprob: -4.966413974761963
    8. 'bit' → logprob: -5.591413974761963
    9. 'a' → logprob: -5.716413974761963
    10. '&amp' → logprob: -5.841413974761963

Token 389: ' b' (ID: 287)
  Prédit: ' bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.5105306506156921
    2. 'b' → logprob: -1.760530710220337
    3. ' b' → logprob: -1.885530710220337
    4. ' logique' → logprob: -2.885530710220337
    5. 'bit' → logprob: -4.635530471801758
    6. '&' → logprob: -6.510530471801758
    7. ' ' → logprob: -6.760530471801758
    8. 's' → logprob: -6.885530471801758
    9. ' entre' → logprob: -6.885530471801758
    10. ' (' → logprob: -7.260530471801758

Token 390: 'inaire' (ID: 41465)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.7980895638465881
    2. ' bit' → logprob: -1.1730895042419434
    3. '<|end|>' → logprob: -2.2980895042419434
    4. ')' → logprob: -3.2980895042419434
    5. ' ' → logprob: -3.6730895042419434
    6. ' &' → logprob: -4.298089504241943
    7. '   ' → logprob: -4.673089504241943
    8. '&nbsp' → logprob: -4.798089504241943
    9. ' (' → logprob: -5.423089504241943
    10. 'bit' → logprob: -5.548089504241943

Token 391: '"' (ID: 1)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.15896695852279663
    2. '"' → logprob: -2.4089670181274414
    3. ' "&' → logprob: -4.033967018127441
    4. '   ' → logprob: -4.658967018127441
    5. ' ")' → logprob: -5.158967018127441
    6. '&' → logprob: -5.283967018127441
    7. '<|end|>' → logprob: -5.783967018127441
    8. ' ' → logprob: -6.033967018127441
    9. ' bit' → logprob: -6.408967018127441
    10. ')' → logprob: -6.408967018127441

Token 392: ' entre' (ID: 3853)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.021618127822876
    2. ' ' → logprob: -1.521618127822876
    3. ' &' → logprob: -1.771618127822876
    4. '&' → logprob: -2.396618127822876
    5. '<|end|>' → logprob: -2.396618127822876
    6. ' (' → logprob: -4.271617889404297
    7. '    ' → logprob: -4.646617889404297
    8. ')' → logprob: -4.771617889404297
    9. ' )' → logprob: -5.021617889404297
    10. '  ' → logprob: -5.146617889404297

Token 393: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.09005659818649292
    2. 's' → logprob: -2.4650566577911377
    3. ' ' → logprob: -7.590056419372559
    4. ' a' → logprob: -8.090056419372559
    5. 'a' → logprob: -8.340056419372559
    6. '(s' → logprob: -10.715056419372559
    7. ' the' → logprob: -11.715056419372559
    8. '  ' → logprob: -11.840056419372559
    9. '    ' → logprob: -12.215056419372559
    10. ')' → logprob: -12.590056419372559

Token 394: ' et' (ID: 859)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.9898158311843872
    2. ' &' → logprob: -0.9898158311843872
    3. ' et' → logprob: -2.1148157119750977
    4. '&' → logprob: -2.6148157119750977
    5. '   ' → logprob: -3.4898157119750977
    6. 'and' → logprob: -4.489815711975098
    7. 'et' → logprob: -4.739815711975098
    8. ' ' → logprob: -5.239815711975098
    9. ')' → logprob: -5.864815711975098
    10. 's' → logprob: -7.239815711975098

Token 395: ' le' (ID: 505)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.47410640120506287
    2. 'a' → logprob: -0.9741064310073853
    3. ' ' → logprob: -10.849106788635254
    4. ' ' → logprob: -12.349106788635254
    5. '(a' → logprob: -13.349106788635254
    6. '   ' → logprob: -14.349106788635254
    7. '	a' → logprob: -14.349106788635254
    8. ' the' → logprob: -14.724106788635254
    9. ' (' → logprob: -14.974106788635254
    10. '  ' → logprob: -14.974106788635254

Token 396: ' prochain' (ID: 52413)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00761136319488287
    2. ' a' → logprob: -4.882611274719238
    3. ' ' → logprob: -13.382611274719238
    4. ' ' → logprob: -14.132611274719238
    5. '   ' → logprob: -14.507611274719238
    6. ' 
' → logprob: -14.507611274719238
    7. ' next' → logprob: -15.257611274719238
    8. ' (' → logprob: -15.382611274719238
    9. '  ' → logprob: -15.507611274719238
    10. '[a' → logprob: -15.507611274719238

Token 397: ' élément' (ID: 99627)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5535120368003845
    2. 'a' → logprob: -0.9285120368003845
    3. ' ' → logprob: -4.053512096405029
    4. '   ' → logprob: -4.803512096405029
    5. 'r' → logprob: -6.178512096405029
    6. '[a' → logprob: -6.803512096405029
    7. '  ' → logprob: -8.428511619567871
    8. '[' → logprob: -8.928511619567871
    9. ' element' → logprob: -9.303511619567871
    10. ')' → logprob: -9.428511619567871

Token 398: ' est' (ID: 893)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.5832303166389465
    2. '   ' → logprob: -0.8332303166389465
    3. '[a' → logprob: -6.583230495452881
    4. 'a' → logprob: -6.833230495452881
    5. '(r' → logprob: -6.833230495452881
    6. '[' → logprob: -6.958230495452881
    7. 'r' → logprob: -7.333230495452881
    8. '       ' → logprob: -7.833230495452881
    9. '[next' → logprob: -8.083230018615723
    10. ' ' → logprob: -8.208230018615723

Token 399: ' nul' (ID: 64435)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4653366804122925
    2. '0' → logprob: -1.0903366804122925
    3. '   ' → logprob: -3.715336799621582
    4. '=' → logprob: -4.840336799621582
    5. '  ' → logprob: -6.340336799621582
    6. ' ==' → logprob: -7.465336799621582
    7. '    ' → logprob: -7.715336799621582
    8. ' =' → logprob: -7.965336799621582
    9. ' )' → logprob: -9.715336799621582
    10. 'égal' → logprob: -9.715336799621582

Token 400: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30573228001594543
    2. ' and' → logprob: -1.430732250213623
    3. '       ' → logprob: -4.180732250213623
    4. 'and' → logprob: -5.055732250213623
    5. ':' → logprob: -6.805732250213623
    6. '    ' → logprob: -7.430732250213623
    7. ')' → logprob: -7.930732250213623
    8. '  ' → logprob: -8.930732727050781
    9. ' ' → logprob: -9.055732727050781
    10. '	and' → logprob: -10.305732727050781

Token 401: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032730181701481342
    2. ' while' → logprob: -6.003273010253906
    3. 'while' → logprob: -7.503273010253906
    4. ':' → logprob: -8.878273010253906
    5. '	while' → logprob: -10.003273010253906
    6. '    
' → logprob: -11.378273010253906
    7. ')' → logprob: -11.503273010253906
    8. '       ' → logprob: -11.753273010253906
    9. ' :' → logprob: -12.128273010253906
    10. ' and' → logprob: -12.253273010253906

Token 402: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17583942413330078
    2. ' while' → logprob: -2.175839424133301
    3. 'while' → logprob: -3.050839424133301
    4. '	while' → logprob: -7.800839424133301
    5. '   ' → logprob: -13.1758394241333
    6. '    
' → logprob: -13.6758394241333
    7. '       ' → logprob: -14.4258394241333
    8. ' ' → logprob: -14.5508394241333
    9. '    ' → logprob: -14.5508394241333
    10. '  ' → logprob: -15.0508394241333

Token 403: ' Le' (ID: 2018)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15660063922405243
    2. ' while' → logprob: -2.2816007137298584
    3. 'while' → logprob: -3.1566007137298584
    4. '	while' → logprob: -8.406600952148438
    5. '    
' → logprob: -11.031600952148438
    6. '       ' → logprob: -11.531600952148438
    7. '
' → logprob: -12.156600952148438
    8. '   ' → logprob: -13.156600952148438
    9. '    ' → logprob: -13.281600952148438
    10. ' ' → logprob: -13.531600952148438

Token 404: ' &' (ID: 827)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.8477005362510681
    2. '   ' → logprob: -1.347700595855713
    3. 'while' → logprob: -1.472700595855713
    4. 'r' → logprob: -3.097700595855713
    5. ' r' → logprob: -3.847700595855713
    6. '    ' → logprob: -5.347700595855713
    7. ' if' → logprob: -5.472700595855713
    8. ' ' → logprob: -6.472700595855713
    9. 'if' → logprob: -6.597700595855713
    10. '  ' → logprob: -7.222700595855713

Token 405: ' b' (ID: 287)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.008752127178013325
    2. '  ' → logprob: -5.883752346038818
    3. '<|end|>' → logprob: -6.008752346038818
    4. ' r' → logprob: -6.758752346038818
    5. 'r' → logprob: -8.13375186920166
    6. '    ' → logprob: -8.25875186920166
    7. ' =' → logprob: -8.38375186920166
    8. ' &' → logprob: -8.38375186920166
    9. ' ' → logprob: -8.50875186920166
    10. ' )' → logprob: -8.63375186920166

Token 406: 'inaire' (ID: 41465)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.3609825074672699
    2. 'in' → logprob: -1.9859825372695923
    3. ' &' → logprob: -2.8609824180603027
    4. ')' → logprob: -3.4859824180603027
    5. 'inaire' → logprob: -3.9859824180603027
    6. '=' → logprob: -4.235982418060303
    7. ' ' → logprob: -4.985982418060303
    8. '&r' → logprob: -4.985982418060303
    9. 'it' → logprob: -5.610982418060303
    10. '   ' → logprob: -5.610982418060303

Token 407: ' s' (ID: 265)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01578916423022747
    2. '<|end|>' → logprob: -4.765789031982422
    3. ')' → logprob: -5.890789031982422
    4. ' )' → logprob: -6.265789031982422
    5. '  ' → logprob: -7.015789031982422
    6. '<|end|>' → logprob: -7.765789031982422
    7. ' is' → logprob: -8.640789031982422
    8. '    ' → logprob: -8.890789031982422
    9. ' =' → logprob: -9.140789031982422
    10. ' continues' → logprob: -9.390789031982422

Token 408: ''ass' (ID: 43919)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.021155420690774918
    2. ' &' → logprob: -4.52115535736084
    3. '=' → logprob: -5.27115535736084
    4. ' &=' → logprob: -5.39615535736084
    5. '&r' → logprob: -8.64615535736084
    6. ' ' → logprob: -9.64615535736084
    7. ' =' → logprob: -9.77115535736084
    8. '   ' → logprob: -11.02115535736084
    9. '+=' → logprob: -11.14615535736084
    10. '&
' → logprob: -11.64615535736084

Token 409: 'ure' (ID: 627)
  Prédit: 'ure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ure' → logprob: -0.5140346884727478
    2. 'ert' → logprob: -1.1390347480773926
    3. 'ère' → logprob: -3.6390347480773926
    4. 'et' → logprob: -4.514034748077393
    5. 'oit' → logprob: -4.639034748077393
    6. 'ur' → logprob: -5.014034748077393
    7. '#' → logprob: -5.764034748077393
    8. '&' → logprob: -5.764034748077393
    9. 'er' → logprob: -6.014034748077393
    10. 'ète' → logprob: -6.014034748077393

Token 410: ' qu' (ID: 474)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.8933058381080627
    2. '   ' → logprob: -1.018305778503418
    3. ' de' → logprob: -2.768305778503418
    4. '=' → logprob: -3.018305778503418
    5. ' que' → logprob: -3.393305778503418
    6. ' )' → logprob: -3.768305778503418
    7. ' ' → logprob: -4.393305778503418
    8. '_' → logprob: -4.518305778503418
    9. ')' → logprob: -4.768305778503418
    10. ' =' → logprob: -5.018305778503418

Token 411: ''' (ID: 6)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2866331934928894
    2. '(r' → logprob: -2.536633253097534
    3. ' s' → logprob: -3.536633253097534
    4. 'r' → logprob: -3.786633253097534
    5. ' r' → logprob: -3.911633253097534
    6. '(' → logprob: -3.911633253097534
    7. ' not' → logprob: -4.036633014678955
    8. ' there' → logprob: -4.286633014678955
    9. ' ' → logprob: -4.661633014678955
    10. 's' → logprob: -4.786633014678955

Token 412: 'auc' (ID: 11816)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.1571621149778366
    2. '(s' → logprob: -2.1571621894836426
    3. '(r' → logprob: -4.157162189483643
    4. '(' → logprob: -5.032162189483643
    5. ' not' → logprob: -6.157162189483643
    6. 's' → logprob: -6.282162189483643
    7. 'r' → logprob: -6.657162189483643
    8. ' s' → logprob: -7.032162189483643
    9. ' ' → logprob: -7.907162189483643
    10. 'a' → logprob: -8.282161712646484

Token 413: 'un' (ID: 373)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06439858675003052
    2. '&' → logprob: -3.8143985271453857
    3. 'un' → logprob: -4.689398765563965
    4. 'a' → logprob: -5.314398765563965
    5. 'une' → logprob: -5.314398765563965
    6. '       ' → logprob: -5.564398765563965
    7. '    ' → logprob: -5.814398765563965
    8. '=' → logprob: -5.939398765563965
    9. '#' → logprob: -6.314398765563965
    10. ' &' → logprob: -6.439398765563965

Token 414: ' bit' (ID: 3546)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8425816893577576
    2. ' bit' → logprob: -1.9675817489624023
    3. 'bit' → logprob: -2.4675817489624023
    4. '1' → logprob: -2.8425817489624023
    5. '   ' → logprob: -3.0925817489624023
    6. '&' → logprob: -3.0925817489624023
    7. ' espace' → logprob: -3.7175817489624023
    8. 'r' → logprob: -3.8425817489624023
    9. 'a' → logprob: -3.9675817489624023
    10. ')' → logprob: -4.092581748962402

Token 415: ' n' (ID: 297)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.5734682083129883
    2. ' ' → logprob: -1.9484682083129883
    3. '&' → logprob: -2.3234682083129883
    4. ')' → logprob: -3.1984682083129883
    5. '<|end|>' → logprob: -3.6984682083129883
    6. 'r' → logprob: -3.8234682083129883
    7. '&r' → logprob: -3.9484682083129883
    8. '_' → logprob: -4.323468208312988
    9. ' =' → logprob: -4.448468208312988
    10. '=' → logprob: -4.698468208312988

Token 416: ''est' (ID: 6616)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.9677569270133972
    2. ' set' → logprob: -1.842756986618042
    3. 'est' → logprob: -2.342756986618042
    4. ' est' → logprob: -2.842756986618042
    5. '   ' → logprob: -3.092756986618042
    6. 'n' → logprob: -3.092756986618042
    7. ')' → logprob: -3.717756986618042
    8. ' of' → logprob: -3.717756986618042
    9. ' de' → logprob: -3.967756986618042
    10. ' ne' → logprob: -4.217756748199463

Token 417: ' commun' (ID: 2797)
  Prédit: 'comm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comm' → logprob: -1.1165040731430054
    2. 'prés' → logprob: -1.2415040731430054
    3. '1' → logprob: -1.7415040731430054
    4. 'commun' → logprob: -2.491504192352295
    5. 'part' → logprob: -3.116504192352295
    6. ' commun' → logprob: -3.241504192352295
    7. 'à' → logprob: -4.616504192352295
    8. ' présent' → logprob: -5.366504192352295
    9. ' ' → logprob: -5.741504192352295
    10. 'common' → logprob: -5.741504192352295

Token 418: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27779141068458557
    2. ' entre' → logprob: -2.5277915000915527
    3. '&' → logprob: -2.6527915000915527
    4. ' avec' → logprob: -4.402791500091553
    5. ' &' → logprob: -4.527791500091553
    6. ' en' → logprob: -4.652791500091553
    7. ' between' → logprob: -4.777791500091553
    8. ' à' → logprob: -4.777791500091553
    9. ' de' → logprob: -5.027791500091553
    10. 'entre' → logprob: -5.152791500091553

Token 419: 'auc' (ID: 11816)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4619476795196533
    2. ')' → logprob: -1.8369476795196533
    3. ' entre' → logprob: -2.7119476795196533
    4. ' a' → logprob: -3.3369476795196533
    5. ' )' → logprob: -4.211947441101074
    6. '1' → logprob: -4.211947441101074
    7. ' à' → logprob: -4.586947441101074
    8. 'r' → logprob: -4.711947441101074
    9. ' s' → logprob: -4.836947441101074
    10. ' avec' → logprob: -4.961947441101074

Token 420: 'un' (ID: 373)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8313374519348145
    2. '   ' → logprob: -1.2063374519348145
    3. 'un' → logprob: -1.7063374519348145
    4. ''un' → logprob: -3.8313374519348145
    5. 'e' → logprob: -4.0813374519348145
    6. '       ' → logprob: -4.4563374519348145
    7. 'que' → logprob: -4.8313374519348145
    8. '')' → logprob: -5.2063374519348145
    9. '#' → logprob: -5.8313374519348145
    10. 'u' → logprob: -5.8313374519348145

Token 421: ' overlap' (ID: 56631)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4084591865539551
    2. ' ' → logprob: -2.658459186553955
    3. '&' → logprob: -2.783459186553955
    4. ' )' → logprob: -3.158459186553955
    5. '   ' → logprob: -3.533459186553955
    6. ' &' → logprob: -3.533459186553955
    7. 'a' → logprob: -4.158459186553955
    8. ' r' → logprob: -4.158459186553955
    9. ' a' → logprob: -4.408459186553955
    10. '=' → logprob: -4.408459186553955

Token 422: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3059174418449402
    2. '   ' → logprob: -1.805917501449585
    3. ' entre' → logprob: -3.055917501449585
    4. ' )' → logprob: -4.555917263031006
    5. ' between' → logprob: -4.680917263031006
    6. ' avec' → logprob: -4.805917263031006
    7. ' with' → logprob: -5.055917263031006
    8. ' de' → logprob: -5.805917263031006
    9. ' &' → logprob: -6.180917263031006
    10. '&' → logprob: -6.305917263031006

Token 423: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03317312151193619
    2. ' ' → logprob: -3.658173084259033
    3. 'l' → logprob: -6.783173084259033
    4. 'un' → logprob: -7.033173084259033
    5. '```' → logprob: -7.158173084259033
    6. 'set' → logprob: -7.408173084259033
    7. ' set' → logprob: -7.408173084259033
    8. '   ' → logprob: -7.783173084259033
    9. 'position' → logprob: -7.908173084259033
    10. ')' → logprob: -7.908173084259033

Token 424: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04630288481712341
    2. 'l' → logprob: -4.171302795410156
    3. 'un' → logprob: -4.171302795410156
    4. 'r' → logprob: -4.796302795410156
    5. '```' → logprob: -6.671302795410156
    6. 'set' → logprob: -6.921302795410156
    7. '0' → logprob: -6.921302795410156
    8. 'position' → logprob: -7.171302795410156
    9. 'la' → logprob: -7.921302795410156
    10. ' ' → logprob: -8.046302795410156

Token 425: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13523925840854645
    2. '   ' → logprob: -2.260239362716675
    3. ' )' → logprob: -4.510239124298096
    4. ' entre' → logprob: -5.635239124298096
    5. '):' → logprob: -6.260239124298096
    6. ' avec' → logprob: -7.135239124298096
    7. '):
' → logprob: -7.260239124298096
    8. '       ' → logprob: -7.385239124298096
    9. ' en' → logprob: -7.885239124298096
    10. ' ' → logprob: -8.010239601135254

Token 426: ' entre' (ID: 3853)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017411351203918457
    2. ' and' → logprob: -4.142411231994629
    3. ':' → logprob: -7.142411231994629
    4. 'and' → logprob: -8.517411231994629
    5. '       ' → logprob: -8.767411231994629
    6. ')' → logprob: -9.392411231994629
    7. ' :' → logprob: -10.392411231994629
    8. ':
' → logprob: -11.017411231994629
    9. '  ' → logprob: -11.267411231994629
    10. '    ' → logprob: -11.392411231994629

Token 427: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.07907242327928543
    2. 's' → logprob: -2.5790724754333496
    3. 'a' → logprob: -9.329071998596191
    4. ' a' → logprob: -9.704071998596191
    5. ' ' → logprob: -11.704071998596191
    6. ')' → logprob: -12.204071998596191
    7. '   ' → logprob: -12.329071998596191
    8. '(s' → logprob: -12.579071998596191
    9. ' ' → logprob: -13.079071998596191
    10. 'r' → logprob: -13.579071998596191

Token 428: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6110854148864746
    2. ' and' → logprob: -0.9860854148864746
    3. ')' → logprob: -3.1110854148864746
    4. ' et' → logprob: -4.486085414886475
    5. 'and' → logprob: -4.486085414886475
    6. ' &' → logprob: -5.111085414886475
    7. ' ' → logprob: -5.986085414886475
    8. ' )' → logprob: -6.111085414886475
    9. '       ' → logprob: -6.236085414886475
    10. '&' → logprob: -6.361085414886475

Token 429: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5760155320167542
    2. ' a' → logprob: -0.8260155320167542
    3. ' ' → logprob: -10.70101547241211
    4. ' ' → logprob: -11.07601547241211
    5. ' the' → logprob: -11.32601547241211
    6. '   ' → logprob: -11.95101547241211
    7. 'l' → logprob: -12.32601547241211
    8. '    ' → logprob: -12.82601547241211
    9. '	a' → logprob: -13.45101547241211
    10. 's' → logprob: -13.57601547241211

Token 430: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0017208768986165524
    2. '[' → logprob: -6.376720905303955
    3. ' [' → logprob: -11.376720428466797
    4. 'r' → logprob: -12.501720428466797
    5. '   ' → logprob: -13.376720428466797
    6. '[
' → logprob: -14.126720428466797
    7. '[R' → logprob: -15.251720428466797
    8. '[next' → logprob: -15.876720428466797
    9. '[a' → logprob: -16.126720428466797
    10. ']' → logprob: -16.126720428466797

Token 431: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004138003569096327
    2. ' +' → logprob: -5.504137992858887
    3. '   ' → logprob: -10.379137992858887
    4. ']' → logprob: -12.004137992858887
    5. '1' → logprob: -12.504137992858887
    6. '+
' → logprob: -12.504137992858887
    7. '+r' → logprob: -12.629137992858887
    8. ']+' → logprob: -12.754137992858887
    9. ' ' → logprob: -12.879137992858887
    10. '[' → logprob: -13.129137992858887

Token 432: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03824734687805176
    2. '+' → logprob: -3.2882473468780518
    3. ' ' → logprob: -8.913247108459473
    4. ' +' → logprob: -10.038247108459473
    5. '   ' → logprob: -10.913247108459473
    6. '+r' → logprob: -12.663247108459473
    7. '+
' → logprob: -12.788247108459473
    8. ']+' → logprob: -14.163247108459473
    9. ']' → logprob: -14.413247108459473
    10. '```' → logprob: -14.663247108459473

Token 433: '].
' (ID: 49887)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.082804799079895
    2. '   ' → logprob: -1.207804799079895
    3. '):' → logprob: -1.707804799079895
    4. '):
' → logprob: -2.3328046798706055
    5. '       ' → logprob: -2.8328046798706055
    6. ':' → logprob: -4.9578046798706055
    7. ' )' → logprob: -5.5828046798706055
    8. ']' → logprob: -5.7078046798706055
    9. ' ):' → logprob: -6.7078046798706055
    10. ' ):
' → logprob: -6.8328046798706055

Token 434: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007623080164194107
    2. ' while' → logprob: -5.132623195648193
    3. 'while' → logprob: -7.382623195648193
    4. '	while' → logprob: -8.632622718811035
    5. '    ' → logprob: -8.882622718811035
    6. '    
' → logprob: -9.007622718811035
    7. ')' → logprob: -9.257622718811035
    8. '       ' → logprob: -9.507622718811035
    9. ':' → logprob: -9.632622718811035
    10. ' :' → logprob: -9.757622718811035

Token 435: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004802245646715164
    2. ' while' → logprob: -5.754802227020264
    3. 'while' (adapté à ' while') → logprob: -7.504802227020264
    4. '       ' → logprob: -8.004802703857422
    5. '    
' → logprob: -8.129802703857422
    6. '	while' → logprob: -9.129802703857422
    7. ':' → logprob: -9.754802703857422
    8. ' 
' → logprob: -10.129802703857422
    9. '    ' → logprob: -10.379802703857422
    10. '	' → logprob: -10.379802703857422

Token 436: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.011119149625301361
    2. 'r' → logprob: -4.511119365692139
    3. ' (' → logprob: -10.01111888885498
    4. '(r' → logprob: -11.13611888885498
    5. ' ' → logprob: -12.13611888885498
    6. ' ' → logprob: -12.13611888885498
    7. '	r' → logprob: -14.76111888885498
    8. '(' → logprob: -15.26111888885498
    9. '_r' → logprob: -16.261119842529297
    10. ' s' → logprob: -16.323619842529297

Token 437: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6788510680198669
    2. '<' → logprob: -1.0538511276245117
    3. '+' → logprob: -2.1788511276245117
    4. ' +' → logprob: -3.5538511276245117
    5. '<n' → logprob: -6.053851127624512
    6. ' ' → logprob: -9.803851127624512
    7. '<len' → logprob: -12.053851127624512
    8. '[' → logprob: -12.678851127624512
    9. '<N' → logprob: -13.303851127624512
    10. '+n' → logprob: -14.053851127624512

Token 438: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.018185297027230263
    2. ' n' → logprob: -4.018185138702393
    3. '(n' → logprob: -10.26818561553955
    4. ' (' → logprob: -15.01818561553955
    5. '	n' → logprob: -15.89318561553955
    6. '[n' → logprob: -16.518184661865234
    7. '   ' → logprob: -16.643184661865234
    8. ' ' → logprob: -16.768184661865234
    9. '<n' → logprob: -16.768184661865234
    10. ')n' → logprob: -17.268184661865234

Token 439: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.14267897605895996
    2. '-' → logprob: -2.01767897605896
    3. '   ' → logprob: -13.142679214477539
    4. ' ' → logprob: -13.642679214477539
    5. '1' → logprob: -14.642679214477539
    6. '[' → logprob: -16.64267921447754
    7. '  ' → logprob: -16.76767921447754
    8. '−' → logprob: -17.01767921447754
    9. '<|end|>' → logprob: -17.64267921447754
    10. '()-' → logprob: -18.26767921447754

Token 440: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -16.375051498413086
    4. '  ' → logprob: -18.000051498413086
    5. '-' → logprob: -18.000051498413086
    6. '```' → logprob: -18.875051498413086
    7. '2' → logprob: -19.312551498413086
    8. '۱' → logprob: -19.437551498413086
    9. '<|end|>' → logprob: -19.625051498413086
    10. '
' → logprob: -19.937551498413086

Token 441: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. ' ' → logprob: -12.250004768371582
    3. '2' → logprob: -16.0000057220459
    4. '
' → logprob: -16.2500057220459
    5. '   ' → logprob: -16.6250057220459
    6. '  ' → logprob: -18.2500057220459
    7. '۱' → logprob: -18.2500057220459
    8. '11' → logprob: -18.4375057220459
    9. '```' → logprob: -18.7500057220459
    10. '-' → logprob: -19.3125057220459

Token 442: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.018471701070666313
    2. 'and' → logprob: -4.018471717834473
    3. '    ' → logprob: -8.643471717834473
    4. '   ' → logprob: -9.018471717834473
    5. ' ' → logprob: -11.393471717834473
    6. '        ' → logprob: -12.393471717834473
    7. '       ' → logprob: -13.018471717834473
    8. '  ' → logprob: -13.393471717834473
    9. '      ' → logprob: -13.768471717834473
    10. '	and' → logprob: -13.893471717834473

Token 443: ' not' (ID: 625)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3384002447128296
    2. '(s' → logprob: -1.9634002447128296
    3. ' s' → logprob: -1.9634002447128296
    4. 's' → logprob: -5.088400363922119
    5. '(' → logprob: -9.088399887084961
    6. ' ' → logprob: -10.838399887084961
    7. ' ' → logprob: -11.588399887084961
    8. '   ' → logprob: -12.088399887084961
    9. '((' → logprob: -13.088399887084961
    10. ' ((' → logprob: -13.463399887084961

Token 444: ' (' (ID: 350)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.2284054011106491
    2. ' (' → logprob: -1.6034053564071655
    3. '(' → logprob: -6.103405475616455
    4. 's' → logprob: -7.853405475616455
    5. ' s' → logprob: -8.228404998779297
    6. '((' → logprob: -9.478404998779297
    7. ' ((' → logprob: -11.853404998779297
    8. ' ' → logprob: -11.853404998779297
    9. '(r' → logprob: -13.228404998779297
    10. '(
' → logprob: -13.853404998779297

Token 445: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.018587317317724228
    2. ' s' → logprob: -4.393587112426758
    3. '(s' → logprob: -5.143587112426758
    4. ' (' → logprob: -8.518587112426758
    5. '(' → logprob: -12.018587112426758
    6. '   ' → logprob: -12.518587112426758
    7. ')' → logprob: -12.768587112426758
    8. ' ' → logprob: -12.768587112426758
    9. '{s' → logprob: -13.518587112426758
    10. '	s' → logprob: -13.893587112426758

Token 446: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.1280396282672882
    2. ' &' → logprob: -2.128039598464966
    3. '&a' → logprob: -7.503039836883545
    4. '&r' → logprob: -7.878039836883545
    5. '&s' → logprob: -9.503039360046387
    6. '&nbsp' → logprob: -10.253039360046387
    7. '&amp' → logprob: -10.878039360046387
    8. '&
' → logprob: -11.003039360046387
    9. ' ' → logprob: -11.753039360046387
    10. ' ' → logprob: -11.753039360046387

Token 447: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2254229038953781
    2. ' a' → logprob: -1.6004228591918945
    3. ' ' → logprob: -11.975422859191895
    4. '	a' → logprob: -13.475422859191895
    5. ' ' → logprob: -14.350422859191895
    6. ')' → logprob: -14.475422859191895
    7. '   ' → logprob: -15.100422859191895
    8. '(a' → logprob: -15.350422859191895
    9. '_a' → logprob: -15.475422859191895
    10. ')a' → logprob: -15.600422859191895

Token 448: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0003490514063742012
    2. '[' → logprob: -8.000349044799805
    3. 'r' → logprob: -11.750349044799805
    4. ' [' → logprob: -12.375349044799805
    5. '[
' → logprob: -13.875349044799805
    6. '   ' → logprob: -15.000349044799805
    7. '[[' → logprob: -17.125349044799805
    8. '(r' → logprob: -17.875349044799805
    9. '[(' → logprob: -18.000349044799805
    10. ' ' → logprob: -18.125349044799805

Token 449: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0004933410091325641
    2. ' +' → logprob: -7.75049352645874
    3. '+
' → logprob: -10.000493049621582
    4. '+r' → logprob: -12.000493049621582
    5. '   ' → logprob: -12.625493049621582
    6. '[' → logprob: -12.625493049621582
    7. '1' → logprob: -12.750493049621582
    8. ' ' → logprob: -15.000493049621582
    9. ' +
' → logprob: -15.250493049621582
    10. '[r' → logprob: -15.500493049621582

Token 450: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.591415437171236e-05
    2. ' ' → logprob: -9.750096321105957
    3. '+' → logprob: -10.875096321105957
    4. '   ' → logprob: -11.000096321105957
    5. '[' → logprob: -14.625096321105957
    6. '```' → logprob: -15.250096321105957
    7. '  ' → logprob: -15.312596321105957
    8. '`' → logprob: -16.06259536743164
    9. ' +' → logprob: -16.31259536743164
    10. '    ' → logprob: -16.37509536743164

Token 451: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -15.87500286102295
    4. '+' → logprob: -16.000003814697266
    5. '2' → logprob: -17.250003814697266
    6. '
' → logprob: -17.750003814697266
    7. '```' → logprob: -19.000003814697266
    8. '  ' → logprob: -19.062503814697266
    9. ']' → logprob: -19.437503814697266
    10. '

' → logprob: -19.875003814697266

Token 452: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.168410062789917
    2. ']):
' → logprob: -2.668410062789917
    3. ']' → logprob: -3.293410062789917
    4. '):' → logprob: -3.918410062789917
    5. ')' → logprob: -4.418410301208496
    6. '+' → logprob: -5.168410301208496
    7. '])' → logprob: -5.168410301208496
    8. ')]' → logprob: -6.793410301208496
    9. ' ]' → logprob: -7.168410301208496
    10. '):
' → logprob: -7.168410301208496

Token 453: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001276545925065875
    2. ':' → logprob: -7.50127649307251
    3. '   ' → logprob: -8.126276969909668
    4. '        
' → logprob: -9.626276969909668
    5. ' s' → logprob: -9.751276969909668
    6. '    ' → logprob: -10.001276969909668
    7. ' r' → logprob: -10.501276969909668
    8. ' :' → logprob: -10.501276969909668
    9. ':
' → logprob: -10.751276969909668
    10. 'r' → logprob: -10.751276969909668

Token 454: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7286356091499329
    2. 'r' → logprob: -1.478635549545288
    3. ' r' → logprob: -2.228635549545288
    4. '   ' → logprob: -2.353635549545288
    5. 's' → logprob: -2.978635549545288
    6. ' s' → logprob: -3.353635549545288
    7. '           ' → logprob: -7.728635787963867
    8. '    ' → logprob: -8.978635787963867
    9. ' ' → logprob: -9.603635787963867
    10. '        
' → logprob: -9.853635787963867

Token 455: ' Met' (ID: 7227)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0054268003441393375
    2. 's' → logprob: -5.63042688369751
    3. '   ' → logprob: -7.00542688369751
    4. '       ' → logprob: -7.13042688369751
    5. '           ' → logprob: -9.380426406860352
    6. ' r' → logprob: -10.505426406860352
    7. '```' → logprob: -13.380426406860352
    8. '    ' → logprob: -13.880426406860352
    9. '     ' → logprob: -14.880426406860352
    10. ' s' → logprob: -14.880426406860352

Token 456: ' à' (ID: 1221)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0964260995388031
    2. '       ' → logprob: -2.721426010131836
    3. '   ' → logprob: -4.971426010131836
    4. 's' → logprob: -4.971426010131836
    5. '           ' → logprob: -5.346426010131836
    6. ' à' → logprob: -5.846426010131836
    7. ' r' → logprob: -6.346426010131836
    8. '	r' → logprob: -7.596426010131836
    9. 'ra' → logprob: -7.971426010131836
    10. 'a' → logprob: -8.221426010131836

Token 457: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.0011766550596803427
    2. ' jour' → logprob: -6.876176834106445
    3. 'Jour' → logprob: -9.876176834106445
    4. 'jours' → logprob: -10.126176834106445
    5. 'jou' → logprob: -10.501176834106445
    6. '```' → logprob: -11.501176834106445
    7. 'r' → logprob: -12.126176834106445
    8. 'day' → logprob: -12.376176834106445
    9. 'j' → logprob: -12.876176834106445
    10. 's' → logprob: -14.501176834106445

Token 458: ' s' (ID: 265)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2884789705276489
    2. 's' → logprob: -1.413478970527649
    3. ' r' → logprob: -5.538478851318359
    4. ' s' → logprob: -6.038478851318359
    5. '   ' → logprob: -7.038478851318359
    6. '       ' → logprob: -9.91347885131836
    7. '    ' → logprob: -10.66347885131836
    8. ' ' → logprob: -11.91347885131836
    9. '           ' → logprob: -11.91347885131836
    10. '  ' → logprob: -12.28847885131836

Token 459: ' en' (ID: 469)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '|' → logprob: -0.11556919664144516
    2. ' |=' → logprob: -2.2405691146850586
    3. '=' → logprob: -6.115569114685059
    4. '   ' → logprob: -8.490569114685059
    5. '+=' → logprob: -8.615569114685059
    6. ' =' → logprob: -9.740569114685059
    7. '|=
' → logprob: -9.865569114685059
    8. ' ' → logprob: -11.365569114685059
    9. ' +=' → logprob: -12.115569114685059
    10. '	' → logprob: -12.615569114685059

Token 460: ' calcul' (ID: 7559)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11608751118183136
    2. ' s' → logprob: -2.4910874366760254
    3. '|' → logprob: -4.366087436676025
    4. 'or' → logprob: -4.616087436676025
    5. '   ' → logprob: -7.241087436676025
    6. ' ' → logprob: -7.241087436676025
    7. '```' → logprob: -7.491087436676025
    8. '(s' → logprob: -7.616087436676025
    9. 'adding' → logprob: -7.866087436676025
    10. ' |=' → logprob: -7.991087436676025

Token 461: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -1.771655115589965e-05
    2. 'tant' → logprob: -11.750018119812012
    3. 's' → logprob: -13.125018119812012
    4. '=' → logprob: -13.375018119812012
    5. 'ants' → logprob: -13.625018119812012
    6. 'ANT' → logprob: -14.000018119812012
    7. '|' → logprob: -14.125018119812012
    8. 'nant' → logprob: -14.500018119812012
    9. '   ' → logprob: -15.000018119812012
    10. '=s' → logprob: -15.125018119812012

Token 462: ' le' (ID: 505)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03400065377354622
    2. ' s' → logprob: -3.4090006351470947
    3. '   ' → logprob: -8.159000396728516
    4. '    ' → logprob: -10.784000396728516
    5. ' ' → logprob: -11.034000396728516
    6. '       ' → logprob: -11.409000396728516
    7. '  ' → logprob: -12.034000396728516
    8. '     ' → logprob: -12.284000396728516
    9. '(s' → logprob: -12.534000396728516
    10. '`s' → logprob: -13.659000396728516

Token 463: ' "' (ID: 392)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.005320447031408548
    2. ' s' → logprob: -5.2553205490112305
    3. '|' → logprob: -11.38032054901123
    4. ' ' → logprob: -11.50532054901123
    5. 'or' → logprob: -11.63032054901123
    6. 'ou' → logprob: -11.75532054901123
    7. '(s' → logprob: -11.88032054901123
    8. '```' → logprob: -11.88032054901123
    9. '`s' → logprob: -12.13032054901123
    10. ' ou' → logprob: -12.50532054901123

Token 464: 'ou' (ID: 283)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0005494566285051405
    2. 'or' → logprob: -8.37554931640625
    3. '|' → logprob: -8.75054931640625
    4. ' s' → logprob: -9.12554931640625
    5. 'ou' → logprob: -10.62554931640625
    6. 'OR' → logprob: -12.12554931640625
    7. ' |' → logprob: -12.37554931640625
    8. '```' → logprob: -12.37554931640625
    9. ' or' → logprob: -12.87554931640625
    10. ' ' → logprob: -12.87554931640625

Token 465: ' exclus' (ID: 9398)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '|' → logprob: -0.5345699191093445
    2. 's' → logprob: -1.1595699787139893
    3. '(s' → logprob: -3.0345699787139893
    4. ' |' → logprob: -4.28456974029541
    5. ' s' → logprob: -4.65956974029541
    6. ' |=' → logprob: -4.65956974029541
    7. '   ' → logprob: -5.03456974029541
    8. 'b' → logprob: -5.28456974029541
    9. ' bit' → logprob: -6.15956974029541
    10. ' ' → logprob: -6.15956974029541

Token 466: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -7.97024549683556e-05
    2. 'ive' → logprob: -10.125080108642578
    3. '   ' → logprob: -10.875080108642578
    4. 's' → logprob: -12.125080108642578
    5. '|' → logprob: -12.875080108642578
    6. '```' → logprob: -12.875080108642578
    7. '#' → logprob: -13.125080108642578
    8. 'c' → logprob: -13.500080108642578
    9. 'ifs' → logprob: -13.750080108642578
    10. 'iv' → logprob: -13.750080108642578

Token 467: '"' (ID: 1)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.3721551299095154
    2. '(s' → logprob: -2.37215518951416
    3. '"' → logprob: -2.62215518951416
    4. 's' → logprob: -2.74715518951416
    5. ' (' → logprob: -2.99715518951416
    6. '   ' → logprob: -4.49715518951416
    7. ' ^' → logprob: -5.62215518951416
    8. ' s' → logprob: -5.87215518951416
    9. '^(' → logprob: -5.87215518951416
    10. ')' → logprob: -6.49715518951416

Token 468: ' (' (ID: 350)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0368729829788208
    2. ' (' → logprob: -1.6618729829788208
    3. '^' → logprob: -1.9118729829788208
    4. ' s' → logprob: -2.0368728637695312
    5. ' ^=' → logprob: -2.2868728637695312
    6. '(s' → logprob: -3.6618728637695312
    7. '       ' → logprob: -3.7868728637695312
    8. '   ' → logprob: -4.911872863769531
    9. ' ^' → logprob: -5.661872863769531
    10. ')' → logprob: -5.661872863769531

Token 469: 'X' (ID: 55)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.26503095030784607
    2. '^' → logprob: -1.7650309801101685
    3. ' s' → logprob: -3.265030860900879
    4. '^)' → logprob: -4.015030860900879
    5. ' ^' → logprob: -5.765030860900879
    6. ')' → logprob: -6.640030860900879
    7. ' ^=' → logprob: -7.640030860900879
    8. '   ' → logprob: -8.890030860900879
    9. '(s' → logprob: -9.890030860900879
    10. 'ˆ' → logprob: -10.015030860900879

Token 470: 'OR' (ID: 1301)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.10034415870904922
    2. '^' → logprob: -2.350344181060791
    3. '^)' → logprob: -9.475343704223633
    4. 'OR' → logprob: -11.100343704223633
    5. '^^' → logprob: -11.725343704223633
    6. '|' → logprob: -11.850343704223633
    7. 'orl' → logprob: -12.100343704223633
    8. 'ored' → logprob: -12.475343704223633
    9. 'xor' → logprob: -12.725343704223633
    10. 'ˆ' → logprob: -12.975343704223633

Token 471: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1273762434720993
    2. 's' → logprob: -3.5023763179779053
    3. '^' → logprob: -3.7523763179779053
    4. ' s' → logprob: -3.8773763179779053
    5. '   ' → logprob: -4.752376079559326
    6. '       ' → logprob: -4.752376079559326
    7. '^)' → logprob: -5.002376079559326
    8. ')^' → logprob: -5.127376079559326
    9. '(s' → logprob: -5.252376079559326
    10. ' ^' → logprob: -5.877376079559326

Token 472: ' b' (ID: 287)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '^' → logprob: -1.1648731231689453
    2. ' ^=' → logprob: -1.2898731231689453
    3. 's' → logprob: -2.0398731231689453
    4. ' s' → logprob: -2.2898731231689453
    5. ' ^' → logprob: -2.6648731231689453
    6. ' =' → logprob: -3.1648731231689453
    7. '=' → logprob: -3.2898731231689453
    8. '       ' → logprob: -4.414873123168945
    9. '   ' → logprob: -5.039873123168945
    10. '(s' → logprob: -5.164873123168945

Token 473: 'inaire' (ID: 41465)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5289307236671448
    2. '^' → logprob: -0.9039307236671448
    3. '(s' → logprob: -6.4039306640625
    4. '=s' → logprob: -6.5289306640625
    5. 'or' → logprob: -7.1539306640625
    6. ' ^=' → logprob: -7.6539306640625
    7. ' =' → logprob: -7.7789306640625
    8. ' s' → logprob: -8.2789306640625
    9. ' ^' → logprob: -8.7789306640625
    10. 's' → logprob: -8.7789306640625

Token 474: ' entre' (ID: 3853)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '^' → logprob: -1.0702719688415527
    2. 's' → logprob: -1.4452719688415527
    3. ' ^=' → logprob: -1.8202719688415527
    4. ' s' → logprob: -2.1952719688415527
    5. '=' → logprob: -2.8202719688415527
    6. ' =' → logprob: -3.1952719688415527
    7. '       ' → logprob: -3.5702719688415527
    8. '   ' → logprob: -4.820271968841553
    9. '(s' → logprob: -5.945271968841553
    10. ' ^' → logprob: -6.070271968841553

Token 475: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.47407856583595276
    2. ' s' → logprob: -0.9740785360336304
    3. '(s' → logprob: -14.349078178405762
    4. '       ' → logprob: -15.349078178405762
    5. ' ' → logprob: -15.599078178405762
    6. '<|end|>' → logprob: -15.849078178405762
    7. ' ' → logprob: -16.099079132080078
    8. '	s' → logprob: -16.474079132080078
    9. '_s' → logprob: -16.599079132080078
    10. ' the' → logprob: -17.224079132080078

Token 476: ' et' (ID: 859)
  Prédit: ' ^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ^' → logprob: -0.8837406039237976
    2. '^' → logprob: -1.0087406635284424
    3. ' ^=' → logprob: -1.6337406635284424
    4. ' =' → logprob: -4.633740425109863
    5. ' and' → logprob: -5.258740425109863
    6. '=' → logprob: -5.258740425109863
    7. 's' → logprob: -5.633740425109863
    8. ' s' → logprob: -6.383740425109863
    9. '   ' → logprob: -7.758740425109863
    10. '(s' → logprob: -8.633740425109863

Token 477: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.47411173582077026
    2. 'a' → logprob: -0.9741117358207703
    3. '   ' → logprob: -11.849111557006836
    4. ''' → logprob: -12.224111557006836
    5. '"' → logprob: -12.474111557006836
    6. '	a' → logprob: -12.474111557006836
    7. '(a' → logprob: -12.724111557006836
    8. '`' → logprob: -13.224111557006836
    9. ' ' → logprob: -13.349111557006836
    10. ' the' → logprob: -13.474111557006836

Token 478: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0015587854431942105
    2. '[' → logprob: -6.626558780670166
    3. 'r' → logprob: -8.376559257507324
    4. '[a' → logprob: -14.251559257507324
    5. '(r' → logprob: -14.251559257507324
    6. '[
' → logprob: -14.501559257507324
    7. ' [' → logprob: -14.751559257507324
    8. ' r' → logprob: -15.751559257507324
    9. 'a' → logprob: -16.251558303833008
    10. '	r' → logprob: -17.251558303833008

Token 479: '+' (ID: 10)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.013490179553627968
    2. '[' → logprob: -4.763490200042725
    3. '+' → logprob: -5.388490200042725
    4. '   ' → logprob: -9.263489723205566
    5. '+r' → logprob: -9.763489723205566
    6. 'r' → logprob: -10.138489723205566
    7. ' +' → logprob: -10.388489723205566
    8. '[
' → logprob: -10.638489723205566
    9. ']' → logprob: -10.888489723205566
    10. '[++' → logprob: -11.513489723205566

Token 480: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11448962986469269
    2. '+' → logprob: -2.2394895553588867
    3. 'r' → logprob: -7.364489555358887
    4. ' ' → logprob: -8.239489555358887
    5. ' +' → logprob: -8.489489555358887
    6. ']' → logprob: -8.489489555358887
    7. '+r' → logprob: -8.614489555358887
    8. '[r' → logprob: -9.364489555358887
    9. '   ' → logprob: -10.364489555358887
    10. ']+' → logprob: -11.364489555358887

Token 481: '],' (ID: 2155)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021951450034976006
    2. '^' → logprob: -4.396951675415039
    3. ' ^' → logprob: -5.771951675415039
    4. '   ' → logprob: -6.021951675415039
    5. 's' → logprob: -6.646951675415039
    6. '       ' → logprob: -7.271951675415039
    7. '^)' → logprob: -7.521951675415039
    8. ')
' → logprob: -7.646951675415039
    9. ')^' → logprob: -8.146951675415039
    10. ' )' → logprob: -8.396951675415039

Token 482: ' et' (ID: 859)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06751170754432678
    2. 's' → logprob: -3.067511796951294
    3. ' s' → logprob: -4.692511558532715
    4. 'r' → logprob: -5.317511558532715
    5. '           ' → logprob: -6.067511558532715
    6. ' r' → logprob: -6.192511558532715
    7. '        ' → logprob: -8.942511558532715
    8. '   ' → logprob: -10.067511558532715
    9. '        
' → logprob: -10.317511558532715
    10. '      ' → logprob: -10.817511558532715

Token 483: ' stock' (ID: 6546)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.16665546596050262
    2. '       ' → logprob: -2.2916555404663086
    3. '   ' → logprob: -3.4166555404663086
    4. ' r' → logprob: -4.541655540466309
    5. '    ' → logprob: -6.166655540466309
    6. '+' → logprob: -6.166655540466309
    7. 's' → logprob: -6.666655540466309
    8. '     ' → logprob: -7.916655540466309
    9. '           ' → logprob: -8.041655540466309
    10. '      ' → logprob: -8.166655540466309

Token 484: 'e' (ID: 68)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.44838249683380127
    2. 'e' → logprob: -1.1983824968338013
    3. 'age' → logprob: -3.5733823776245117
    4. 'r' → logprob: -4.698382377624512
    5. '=' → logprob: -5.073382377624512
    6. '   ' → logprob: -5.073382377624512
    7. '=r' → logprob: -5.323382377624512
    8. 'a' → logprob: -6.323382377624512
    9. 'er' → logprob: -6.573382377624512
    10. '       ' → logprob: -8.198382377624512

Token 485: ' le' (ID: 505)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8210760354995728
    2. ' s' → logprob: -1.1960760354995728
    3. '       ' → logprob: -2.071075916290283
    4. 'r' → logprob: -3.071075916290283
    5. '   ' → logprob: -3.071075916290283
    6. 'a' → logprob: -4.446075916290283
    7. '(s' → logprob: -5.321075916290283
    8. ' a' → logprob: -5.446075916290283
    9. ' r' → logprob: -5.821075916290283
    10. '(r' → logprob: -5.946075916290283

Token 486: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.09288378059864044
    2. ' résultat' → logprob: -2.967883825302124
    3. 'rés' → logprob: -3.967883825302124
    4. ' result' → logprob: -4.092883586883545
    5. ' resultat' → logprob: -6.842883586883545
    6. 'r' → logprob: -7.842883586883545
    7. 'res' → logprob: -9.592884063720703
    8. 's' → logprob: -9.842884063720703
    9. ' ' → logprob: -10.717884063720703
    10. 'resultado' → logprob: -11.092884063720703

Token 487: ' dans' (ID: 2671)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5591793656349182
    2. ' =' → logprob: -1.1841793060302734
    3. 's' → logprob: -2.3091793060302734
    4. ')' → logprob: -5.059179306030273
    5. ' ^=' → logprob: -5.684179306030273
    6. '   ' → logprob: -6.059179306030273
    7. '.' → logprob: -6.309179306030273
    8. ' s' → logprob: -6.309179306030273
    9. '       ' → logprob: -6.559179306030273
    10. ' in' → logprob: -6.934179306030273

Token 488: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00014013137842994183
    2. ' s' → logprob: -8.875140190124512
    3. '`s' → logprob: -15.875140190124512
    4. 'r' → logprob: -16.000139236450195
    5. '_s' → logprob: -16.750139236450195
    6. 'a' → logprob: -17.500139236450195
    7. '(s' → logprob: -18.250139236450195
    8. '```' → logprob: -18.375139236450195
    9. '	s' → logprob: -18.625139236450195
    10. ''s' → logprob: -20.000139236450195

Token 489: '.
' (ID: 558)
  Prédit: ' ^='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ^=' → logprob: -0.10957200080156326
    2. '^' → logprob: -2.734571933746338
    3. ' =' → logprob: -3.859571933746338
    4. ' ^' → logprob: -4.359571933746338
    5. '=' → logprob: -5.859571933746338
    6. 's' → logprob: -6.609571933746338
    7. ' s' → logprob: -7.359571933746338
    8. '   ' → logprob: -9.359572410583496
    9. '=s' → logprob: -10.859572410583496
    10. ')' → logprob: -10.859572410583496

Token 490: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5805707573890686
    2. 's' → logprob: -1.4555706977844238
    3. ' s' → logprob: -1.5805706977844238
    4. '   ' → logprob: -6.705570697784424
    5. '           ' → logprob: -10.830571174621582
    6. ' ' → logprob: -11.205571174621582
    7. '	s' → logprob: -11.580571174621582
    8. ',' → logprob: -12.080571174621582
    9. '^' → logprob: -12.080571174621582
    10. '	' → logprob: -12.830571174621582

Token 491: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10035440325737
    2. ' s' → logprob: -3.1003544330596924
    3. '       ' → logprob: -3.1003544330596924
    4. '   ' → logprob: -5.225354194641113
    5. '           ' → logprob: -10.850354194641113
    6. ' ' → logprob: -11.600354194641113
    7. '	s' → logprob: -12.600354194641113
    8. '  ' → logprob: -13.350354194641113
    9. '    ' → logprob: -13.725354194641113
    10. '     ' → logprob: -14.100354194641113

Token 492: ' Cela' (ID: 44403)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.15077097713947296
    2. ' s' → logprob: -2.275770902633667
    3. '       ' → logprob: -3.650770902633667
    4. '   ' → logprob: -4.525771141052246
    5. 'r' → logprob: -8.275771141052246
    6. '           ' → logprob: -9.525771141052246
    7. ' r' → logprob: -9.775771141052246
    8. ' ' → logprob: -10.525771141052246
    9. '  ' → logprob: -11.650771141052246
    10. '    ' → logprob: -11.900771141052246

Token 493: ' mélange' (ID: 80391)
  Prédit: ' ^='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ^=' → logprob: -0.07463745027780533
    2. '^' → logprob: -2.9496374130249023
    3. '   ' → logprob: -4.949637413024902
    4. ' ^' → logprob: -5.074637413024902
    5. ' =' → logprob: -6.574637413024902
    6. '=' → logprob: -6.574637413024902
    7. 's' → logprob: -7.074637413024902
    8. ' ' → logprob: -7.199637413024902
    9. ')' → logprob: -7.324637413024902
    10. '       ' → logprob: -8.449637413024902

Token 494: ' les' (ID: 1341)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.12871746718883514
    2. 's' → logprob: -2.1287174224853516
    3. ' ' → logprob: -7.378717422485352
    4. ')' → logprob: -8.003717422485352
    5. '    ' → logprob: -8.628717422485352
    6. '   ' → logprob: -8.878717422485352
    7. ' )' → logprob: -9.253717422485352
    8. '	s' → logprob: -9.503717422485352
    9. '       ' → logprob: -9.878717422485352
    10. ' ^=' → logprob: -10.378717422485352

Token 495: ' bits' (ID: 18189)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2275935858488083
    2. ' s' → logprob: -1.6025935411453247
    3. '^' → logprob: -6.727593421936035
    4. ' ' → logprob: -7.477593421936035
    5. ' ^' → logprob: -8.727593421936035
    6. 'r' → logprob: -9.977593421936035
    7. 'a' → logprob: -10.227593421936035
    8. '   ' → logprob: -10.602593421936035
    9. ' ' → logprob: -10.727593421936035
    10. ' espaces' → logprob: -10.852593421936035

Token 496: ' de' (ID: 334)
  Prédit: ' ^='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ^=' → logprob: -0.3070755898952484
    2. ' ^' → logprob: -1.4320756196975708
    3. '^' → logprob: -3.8070755004882812
    4. ' =' → logprob: -6.682075500488281
    5. '   ' → logprob: -7.307075500488281
    6. ' ' → logprob: -7.307075500488281
    7. ' s' → logprob: -7.682075500488281
    8. 's' → logprob: -8.932075500488281
    9. '=' → logprob: -9.557075500488281
    10. ')' → logprob: -10.682075500488281

Token 497: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.16022595763206482
    2. 's' → logprob: -1.9102259874343872
    3. '(s' → logprob: -14.910225868225098
    4. 'r' → logprob: -15.035225868225098
    5. ' ' → logprob: -15.410225868225098
    6. 'a' → logprob: -15.410225868225098
    7. '	s' → logprob: -15.910225868225098
    8. '   ' → logprob: -16.035226821899414
    9. '       ' → logprob: -16.160226821899414
    10. '_s' → logprob: -16.285226821899414

Token 498: ' et' (ID: 859)
  Prédit: ' ^='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ^=' → logprob: -0.09593158960342407
    2. ' ^' → logprob: -2.9709315299987793
    3. '^' → logprob: -3.2209315299987793
    4. ' =' → logprob: -8.720932006835938
    5. '   ' → logprob: -9.845932006835938
    6. ' ' → logprob: -10.345932006835938
    7. '=' → logprob: -10.345932006835938
    8. 's' → logprob: -12.470932006835938
    9. ' xor' → logprob: -12.595932006835938
    10. ' s' → logprob: -12.720932006835938

Token 499: ' du' (ID: 1462)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3526884615421295
    2. ' a' → logprob: -1.2276884317398071
    3. 'r' → logprob: -6.102688312530518
    4. ' s' → logprob: -6.977688312530518
    5. ' r' → logprob: -7.727688312530518
    6. 's' → logprob: -8.227688789367676
    7. ' ' → logprob: -9.352688789367676
    8. ' ^' → logprob: -10.102688789367676
    9. ')' → logprob: -10.352688789367676
    10. 'l' → logprob: -10.477688789367676

Token 500: ' prochain' (ID: 52413)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.010351615026593208
    2. ' a' → logprob: -4.760351657867432
    3. 'r' → logprob: -6.385351657867432
    4. ' r' → logprob: -11.135351181030273
    5. 's' → logprob: -12.135351181030273
    6. '   ' → logprob: -12.385351181030273
    7. '```' → logprob: -12.760351181030273
    8. ' ' → logprob: -13.010351181030273
    9. ' next' → logprob: -13.135351181030273
    10. ' s' → logprob: -13.635351181030273

Token 501: ' élément' (ID: 99627)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3509215712547302
    2. ' a' → logprob: -1.600921630859375
    3. ' ^' → logprob: -3.100921630859375
    4. '^' → logprob: -3.725921630859375
    5. 'r' → logprob: -4.350921630859375
    6. ' ' → logprob: -5.225921630859375
    7. 's' → logprob: -6.100921630859375
    8. '   ' → logprob: -6.475921630859375
    9. ' s' → logprob: -6.725921630859375
    10. ' r' → logprob: -7.350921630859375

Token 502: ' de' (ID: 334)
  Prédit: ' ^='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ^=' → logprob: -0.6358004212379456
    2. 's' → logprob: -1.7608003616333008
    3. ' ^' → logprob: -2.510800361633301
    4. '^' → logprob: -2.635800361633301
    5. ' s' → logprob: -2.885800361633301
    6. '       ' → logprob: -3.010800361633301
    7. ' =' → logprob: -3.885800361633301
    8. '   ' → logprob: -4.385800361633301
    9. '=' → logprob: -5.260800361633301
    10. '           ' → logprob: -7.260800361633301

Token 503: ' manière' (ID: 35013)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005793932359665632
    2. ' a' → logprob: -5.380794048309326
    3. 'r' → logprob: -6.880794048309326
    4. '```' → logprob: -10.005793571472168
    5. '   ' → logprob: -10.880793571472168
    6. ' la' → logprob: -10.880793571472168
    7. 'l' → logprob: -11.005793571472168
    8. ' r' → logprob: -11.255793571472168
    9. 's' → logprob: -11.755793571472168
    10. ' ' → logprob: -12.255793571472168

Token 504: ' ré' (ID: 3146)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '^' → logprob: -0.7657747864723206
    2. ' exclusive' → logprob: -1.6407747268676758
    3. 'exclusive' → logprob: -2.390774726867676
    4. 's' → logprob: -2.640774726867676
    5. ' ^' → logprob: -3.140774726867676
    6. '   ' → logprob: -3.640774726867676
    7. ' s' → logprob: -3.640774726867676
    8. 'xor' → logprob: -3.640774726867676
    9. ' xor' → logprob: -4.140774726867676
    10. ' unique' → logprob: -5.015774726867676

Token 505: 'versible' (ID: 95305)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4856828451156616
    2. 'xor' → logprob: -0.9856828451156616
    3. 'exclusive' → logprob: -5.735682964324951
    4. 'ponse' → logprob: -6.485682964324951
    5. 't' → logprob: -6.985682964324951
    6. 'versible' → logprob: -7.360682964324951
    7. '^' → logprob: -7.485682964324951
    8. 'du' → logprob: -7.610682964324951
    9. 'v' → logprob: -7.610682964324951
    10. 'x' → logprob: -7.735682964324951

Token 506: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25583815574645996
    2. '^' → logprob: -2.50583815574646
    3. ' ^' → logprob: -2.88083815574646
    4. ' ^=' → logprob: -2.88083815574646
    5. ' s' → logprob: -4.255838394165039
    6. '   ' → logprob: -4.755838394165039
    7. '           ' → logprob: -6.005838394165039
    8. ' =' → logprob: -6.005838394165039
    9. 's' → logprob: -6.380838394165039
    10. ' ' → logprob: -7.630838394165039

Token 507: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16742663085460663
    2. '   ' → logprob: -2.292426586151123
    3. 's' → logprob: -3.167426586151123
    4. ' s' → logprob: -5.417426586151123
    5. '           ' → logprob: -5.917426586151123
    6. 'r' → logprob: -6.417426586151123
    7. '	' → logprob: -7.667426586151123
    8. '^' → logprob: -7.792426586151123
    9. ' r' → logprob: -8.667427062988281
    10. ' =' → logprob: -8.917427062988281

Token 508: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.4824015498161316
    2. '   ' → logprob: -1.7324016094207764
    3. '       ' → logprob: -1.8574016094207764
    4. 'r' → logprob: -3.3574016094207764
    5. ' s' → logprob: -4.357401371002197
    6. ' r' → logprob: -6.482401371002197
    7. '           ' → logprob: -7.607401371002197
    8. ' ' → logprob: -10.107401847839355
    9. '  ' → logprob: -11.107401847839355
    10. '    ' → logprob: -11.357401847839355

Token 509: ' ^=' (ID: 79665)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.7179139256477356
    2. ' ^=' → logprob: -0.7179139256477356
    3. '=' → logprob: -3.717913866043091
    4. ' =' → logprob: -8.967913627624512
    5. ' ^' → logprob: -10.217913627624512
    6. ' ' → logprob: -12.592913627624512
    7. ' ' → logprob: -13.217913627624512
    8. '	' → logprob: -13.342913627624512
    9. '^)' → logprob: -13.342913627624512
    10. ')^' → logprob: -13.717913627624512

Token 510: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00671584764495492
    2. ' a' → logprob: -5.006715774536133
    3. '   ' → logprob: -15.256715774536133
    4. '	a' → logprob: -16.131715774536133
    5. ' ' → logprob: -16.756715774536133
    6. '       ' → logprob: -17.131715774536133
    7. '    ' → logprob: -18.256715774536133
    8. '_a' → logprob: -18.381715774536133
    9. '```' → logprob: -18.506715774536133
    10. '  ' → logprob: -18.881715774536133

Token 511: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -5.967624019831419e-05
    2. '[' → logprob: -10.125060081481934
    3. 'r' → logprob: -10.875060081481934
    4. ' [' → logprob: -15.125060081481934
    5. '[
' → logprob: -15.250060081481934
    6. '(r' → logprob: -16.875059127807617
    7. '[++' → logprob: -17.000059127807617
    8. '   ' → logprob: -17.125059127807617
    9. ' r' → logprob: -18.250059127807617
    10. '	r' → logprob: -18.750059127807617

Token 512: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.020560573786497116
    2. ' +' → logprob: -3.8955605030059814
    3. '1' → logprob: -11.770560264587402
    4. '+
' → logprob: -11.895560264587402
    5. '+r' → logprob: -13.520560264587402
    6. '   ' → logprob: -14.270560264587402
    7. ''+' → logprob: -14.895560264587402
    8. '[' → logprob: -15.145560264587402
    9. '＋' → logprob: -15.270560264587402
    10. ' plus' → logprob: -15.520560264587402

Token 513: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.117345684382599e-05
    2. '+' → logprob: -11.500020980834961
    3. ' ' → logprob: -11.500020980834961
    4. '   ' → logprob: -14.625020980834961
    5. '<|end|>' → logprob: -15.375020980834961
    6. ' +' → logprob: -17.00002098083496
    7. '  ' → logprob: -17.37502098083496
    8. '```' → logprob: -17.50002098083496
    9. '[' → logprob: -18.06252098083496
    10. '       ' → logprob: -18.31252098083496

Token 514: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. '+' → logprob: -11.875007629394531
    3. ' ' → logprob: -13.875007629394531
    4. '   ' → logprob: -16.75000762939453
    5. ' +' → logprob: -18.62500762939453
    6. '<|end|>' → logprob: -18.87500762939453
    7. '```' → logprob: -19.25000762939453
    8. '
' → logprob: -19.37500762939453
    9. '[' → logprob: -19.81250762939453
    10. '  ' → logprob: -20.06250762939453

Token 515: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04323246330022812
    2. ']
' → logprob: -3.1682324409484863
    3. ')' → logprob: -8.918232917785645
    4. ' ]' → logprob: -10.293232917785645
    5. '   ' → logprob: -10.918232917785645
    6. ']

' → logprob: -11.293232917785645
    7. ']
' → logprob: -11.543232917785645
    8. ')
' → logprob: -11.668232917785645
    9. 'r' → logprob: -12.043232917785645
    10. ' ]
' → logprob: -13.168232917785645

Token 516: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002658655575942248
    2. 'r' → logprob: -8.750266075134277
    3. '<|end|>' → logprob: -10.500266075134277
    4. ' r' → logprob: -10.875266075134277
    5. '        
' → logprob: -10.875266075134277
    6. '	' → logprob: -11.000266075134277
    7. '   ' → logprob: -11.125266075134277
    8. ' ' → logprob: -12.875266075134277
    9. '	r' → logprob: -13.250266075134277
    10. '
' → logprob: -13.500266075134277

Token 517: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3148013949394226
    2. 'r' → logprob: -1.3148014545440674
    3. ' r' → logprob: -6.564801216125488
    4. '   ' → logprob: -9.314801216125488
    5. '	' → logprob: -11.189801216125488
    6. '	r' → logprob: -11.689801216125488
    7. '        
' → logprob: -12.314801216125488
    8. ' ' → logprob: -12.689801216125488
    9. '           ' → logprob: -12.939801216125488
    10. '      ' → logprob: -13.814801216125488

Token 518: ' In' (ID: 730)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00027301779482513666
    2. '       ' → logprob: -8.250272750854492
    3. '   ' → logprob: -11.625272750854492
    4. ' r' → logprob: -12.875272750854492
    5. '
' → logprob: -15.875272750854492
    6. '           ' → logprob: -16.500272750854492
    7. '     ' → logprob: -18.000272750854492
    8. '        
' → logprob: -18.000272750854492
    9. '++' → logprob: -18.375272750854492
    10. '      ' → logprob: -18.875272750854492

Token 519: 'cré' (ID: 125389)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1874416172504425
    2. '       ' → logprob: -1.8124415874481201
    3. '   ' → logprob: -5.312441825866699
    4. 'cr' → logprob: -7.312441825866699
    5. 'crement' → logprob: -7.812441825866699
    6. '+' → logprob: -7.937441825866699
    7. '
' → logprob: -8.5624418258667
    8. 'c' → logprob: -8.8124418258667
    9. 'd' → logprob: -8.9374418258667
    10. '++' → logprob: -9.0624418258667

Token 520: 'mente' (ID: 4186)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.05186626315116882
    2. 'cr' → logprob: -4.301866054534912
    3. '   ' → logprob: -4.426866054534912
    4. '       ' → logprob: -5.176866054534912
    5. 'crement' → logprob: -5.676866054534912
    6. 's' → logprob: -5.926866054534912
    7. 'cre' → logprob: -6.051866054534912
    8. 'cer' → logprob: -6.301866054534912
    9. 'd' → logprob: -6.426866054534912
    10. 'c' → logprob: -6.426866054534912

Token 521: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.2127087504486553e-05
    2. ' r' → logprob: -10.750021934509277
    3. '   ' → logprob: -14.375021934509277
    4. '	r' → logprob: -18.750022888183594
    5. '       ' → logprob: -19.750022888183594
    6. ' ' → logprob: -19.750022888183594
    7. '(r' → logprob: -19.875022888183594
    8. '_r' → logprob: -20.500022888183594
    9. '  ' → logprob: -20.625022888183594
    10. '    ' → logprob: -21.250022888183594

Token 522: ' de' (ID: 334)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5580345392227173
    2. '+=' → logprob: -1.8080345392227173
    3. 'r' → logprob: -2.5580344200134277
    4. '   ' → logprob: -3.0580344200134277
    5. '+r' → logprob: -3.3080344200134277
    6. '(r' → logprob: -3.4330344200134277
    7. '<|end|>' → logprob: -3.6830344200134277
    8. '[r' → logprob: -3.8080344200134277
    9. '       ' → logprob: -4.933034420013428
    10. '+' → logprob: -5.058034420013428

Token 523: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024756586644798517
    2. ' ' → logprob: -6.002475738525391
    3. '<|end|>' → logprob: -17.00247573852539
    4. '+' → logprob: -17.37747573852539
    5. ' ' → logprob: -18.87747573852539
    6. ' +' → logprob: -19.00247573852539
    7. '```' → logprob: -19.37747573852539
    8. '   ' → logprob: -19.87747573852539
    9. '  ' → logprob: -21.00247573852539
    10. '<|end|>' → logprob: -22.00247573852539

Token 524: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -17.625003814697266
    4. '<|end|>' → logprob: -18.500003814697266
    5. '+' → logprob: -18.625003814697266
    6. '   ' → logprob: -19.250003814697266
    7. '  ' → logprob: -20.625003814697266
    8. '۱' → logprob: -21.500003814697266
    9. '১' → logprob: -22.062503814697266
    10. ' +' → logprob: -22.312503814697266

Token 525: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8263475298881531
    2. '       ' → logprob: -1.3263475894927979
    3. 'r' → logprob: -1.7013475894927979
    4. '<|end|>' → logprob: -2.326347589492798
    5. ' r' → logprob: -5.951347351074219
    6. '\n' → logprob: -6.451347351074219
    7. ' ' → logprob: -6.576347351074219
    8. '    ' → logprob: -6.576347351074219
    9. '    
' → logprob: -6.826347351074219
    10. '	r' → logprob: -6.951347351074219

Token 526: ' On' (ID: 2160)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06715773791074753
    2. '   ' → logprob: -3.567157745361328
    3. 'r' → logprob: -4.192157745361328
    4. ' 
' → logprob: -5.067157745361328
    5. ' r' → logprob: -5.067157745361328
    6. '        
' → logprob: -5.442157745361328
    7. '  
' → logprob: -6.692157745361328
    8. '    
' → logprob: -6.817157745361328
    9. '<|end|>' → logprob: -7.067157745361328
    10. '           ' → logprob: -8.317157745361328

Token 527: ' ét' (ID: 4976)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.21870826184749603
    2. '+=' → logprob: -1.9687082767486572
    3. 'r' → logprob: -3.2187082767486572
    4. '   ' → logprob: -4.718708038330078
    5. ' r' → logprob: -5.218708038330078
    6. '       ' → logprob: -6.718708038330078
    7. '    ' → logprob: -7.343708038330078
    8. '+' → logprob: -8.843708038330078
    9. '=' → logprob: -9.218708038330078
    10. ' ' → logprob: -9.718708038330078

Token 528: 'end' (ID: 419)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8684498071670532
    2. 'inue' → logprob: -1.6184498071670532
    3. 'r' → logprob: -2.2434496879577637
    4. '++' → logprob: -2.4934496879577637
    5. '       ' → logprob: -3.6184496879577637
    6. '+' → logprob: -3.7434496879577637
    7. 'ime' → logprob: -3.9934496879577637
    8. ' +=' → logprob: -4.743449687957764
    9. 'increment' → logprob: -4.743449687957764
    10. 'ends' → logprob: -4.743449687957764

Token 529: ' donc' (ID: 14206)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2902328670024872
    2. ' r' → logprob: -1.6652328968048096
    3. ' l' → logprob: -3.4152328968048096
    4. ' le' → logprob: -4.9152326583862305
    5. '<|end|>' → logprob: -4.9152326583862305
    6. ' la' → logprob: -5.0402326583862305
    7. ' ' → logprob: -5.1652326583862305
    8. ' the' → logprob: -7.2902326583862305
    9. '       ' → logprob: -7.5402326583862305
    10. 'l' → logprob: -7.9152326583862305

Token 530: ' notre' (ID: 12092)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5831266641616821
    2. ' la' → logprob: -1.3331266641616821
    3. ' r' → logprob: -2.5831265449523926
    4. ' l' → logprob: -2.9581265449523926
    5. 'la' → logprob: -3.7081265449523926
    6. ' le' → logprob: -4.583126544952393
    7. 'l' → logprob: -5.083126544952393
    8. ' ' → logprob: -5.708126544952393
    9. 'le' → logprob: -6.083126544952393
    10. ' the' → logprob: -6.333126544952393

Token 531: ' fenêtre' (ID: 109648)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.15643803775310516
    2. ' r' → logprob: -2.031438112258911
    3. ' segment' → logprob: -5.781437873840332
    4. ' ' → logprob: -6.156437873840332
    5. ' window' → logprob: -6.281437873840332
    6. 's' → logprob: -6.656437873840332
    7. 'range' → logprob: -7.031437873840332
    8. ' interval' → logprob: -7.031437873840332
    9. 'window' → logprob: -7.781437873840332
    10. ' range' → logprob: -7.906437873840332

Token 532: ' vers' (ID: 3640)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6282060742378235
    2. '<|end|>' → logprob: -1.3782060146331787
    3. 'r' → logprob: -2.1282060146331787
    4. '   ' → logprob: -2.7532060146331787
    5. '<|end|>' → logprob: -4.503206253051758
    6. ' r' → logprob: -5.128206253051758
    7. '           ' → logprob: -5.503206253051758
    8. ')' → logprob: -6.503206253051758
    9. '    ' → logprob: -6.503206253051758
    10. ' ' → logprob: -7.128206253051758

Token 533: ' la' (ID: 557)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8934552669525146
    2. 'la' → logprob: -0.8934552669525146
    3. ' la' → logprob: -2.1434552669525146
    4. 'l' → logprob: -3.5184552669525146
    5. ' r' → logprob: -4.143455505371094
    6. '1' → logprob: -4.643455505371094
    7. 'right' → logprob: -6.268455505371094
    8. ' l' → logprob: -6.393455505371094
    9. ' ' → logprob: -6.893455505371094
    10. 'le' → logprob: -7.018455505371094

Token 534: ' droite' (ID: 61428)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.7864940762519836
    2. ' droite' → logprob: -1.4114940166473389
    3. 'right' → logprob: -1.7864940166473389
    4. ' ' → logprob: -2.786494016647339
    5. 'r' → logprob: -3.161494016647339
    6. ' right' → logprob: -4.286494255065918
    7. 'd' → logprob: -5.536494255065918
    8. ' droit' → logprob: -5.536494255065918
    9. '```' → logprob: -5.911494255065918
    10. '   ' → logprob: -6.411494255065918

Token 535: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12657859921455383
    2. '<|end|>' → logprob: -2.5015785694122314
    3. '
' → logprob: -3.8765785694122314
    4. '   ' → logprob: -4.5015788078308105
    5. '<|end|>' → logprob: -6.5015788078308105
    6. 'r' → logprob: -6.6265788078308105
    7. '        
' → logprob: -7.6265788078308105
    8. '  
' → logprob: -7.7515788078308105
    9. ' r' → logprob: -8.251578330993652
    10. '    
' → logprob: -8.626578330993652

Token 536: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02627231366932392
    2. '   ' → logprob: -4.276272296905518
    3. 'r' → logprob: -4.651272296905518
    4. ' r' → logprob: -7.026272296905518
    5. '	' → logprob: -7.276272296905518
    6. '        
' → logprob: -7.526272296905518
    7. '	r' → logprob: -8.776272773742676
    8. '    
' → logprob: -9.901272773742676
    9. ' 
' → logprob: -10.401272773742676
    10. '	   ' → logprob: -10.526272773742676

Token 537: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.014295374974608421
    2. ' r' → logprob: -4.26429557800293
    3. '   ' → logprob: -9.01429557800293
    4. '       ' → logprob: -11.51429557800293
    5. '	r' → logprob: -16.01429557800293
    6. ' ' → logprob: -17.13929557800293
    7. '    ' → logprob: -17.38929557800293
    8. '           ' → logprob: -17.51429557800293
    9. '```' → logprob: -17.63929557800293
    10. '  ' → logprob: -18.63929557800293

Token 538: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5762949585914612
    2. '+=' → logprob: -0.8262949585914612
    3. '+' → logprob: -8.451294898986816
    4. '=' → logprob: -8.951294898986816
    5. ' =' → logprob: -11.826294898986816
    6. ' +' → logprob: -13.701294898986816
    7. '+='' → logprob: -13.701294898986816
    8. ')' → logprob: -14.076294898986816
    9. ']+=' → logprob: -14.076294898986816
    10. '+="' → logprob: -14.201294898986816

Token 539: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -17.375085830688477
    4. '```' → logprob: -17.750085830688477
    5. '<|end|>' → logprob: -19.875085830688477
    6. '  ' → logprob: -20.000085830688477
    7. '۱' → logprob: -20.250085830688477
    8. '+' → logprob: -20.500085830688477
    9. '0' → logprob: -20.875085830688477
    10. '１' → logprob: -21.062585830688477

Token 540: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.375
    3. '```' → logprob: -22.0
    4. '   ' → logprob: -23.5
    5. '１' → logprob: -23.75
    6. '۱' → logprob: -24.0
    7. '১' → logprob: -24.25
    8. '+' → logprob: -24.25
    9. '0' → logprob: -24.375
    10. '१' → logprob: -24.75

Token 541: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003063838230445981
    2. '       ' → logprob: -8.500306129455566
    3. '#' → logprob: -9.875306129455566
    4. '    
' → logprob: -10.375306129455566
    5. 's' → logprob: -12.250306129455566
    6. '```' → logprob: -12.500306129455566
    7. ' #' → logprob: -13.125306129455566
    8. '        
' → logprob: -13.500306129455566
    9. 'while' → logprob: -13.500306129455566
    10. '  ' → logprob: -13.750306129455566

Token 542: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00193280098028481
    2. '#' → logprob: -7.001932621002197
    3. '       ' → logprob: -7.376932621002197
    4. 'ans' → logprob: -8.626933097839355
    5. ' #' → logprob: -9.001933097839355
    6. '```' → logprob: -9.626933097839355
    7. ' ans' → logprob: -11.501933097839355
    8. '  ' → logprob: -12.001933097839355
    9. ' ' → logprob: -13.001933097839355
    10. '    
' → logprob: -13.251933097839355

Token 543: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11345945298671722
    2. 'ans' → logprob: -2.238459348678589
    3. ' ans' → logprob: -7.863459587097168
    4. 'if' → logprob: -8.863459587097168
    5. '	ans' → logprob: -9.988459587097168
    6. '#' (adapté à ' #') → logprob: -10.238459587097168
    7. '```' → logprob: -11.488459587097168
    8. '(ans' → logprob: -11.988459587097168
    9. 'current' → logprob: -11.988459587097168
    10. ' if' → logprob: -13.363459587097168

Token 544: ' Après' (ID: 47562)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.133000910282135
    2. '   ' → logprob: -2.1330008506774902
    3. '#' → logprob: -5.25800085067749
    4. 'if' → logprob: -7.38300085067749
    5. ' ans' → logprob: -9.008001327514648
    6. '	ans' → logprob: -10.008001327514648
    7. 'current' → logprob: -11.508001327514648
    8. '       ' → logprob: -12.133001327514648
    9. '(ans' → logprob: -12.258001327514648
    10. 'from' → logprob: -12.258001327514648

Token 545: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.18941397964954376
    2. '   ' → logprob: -2.1894140243530273
    3. ' ans' → logprob: -3.0644140243530273
    4. '#' → logprob: -4.564414024353027
    5. 'if' → logprob: -6.314414024353027
    6. ' ' → logprob: -7.689414024353027
    7. '	ans' → logprob: -7.689414024353027
    8. ' #' → logprob: -8.564414024353027
    9. ' if' → logprob: -8.564414024353027
    10. '  ' → logprob: -9.314414024353027

Token 546: ' boucle' (ID: 174211)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.006493677385151386
    2. 'if' → logprob: -6.00649356842041
    3. '   ' → logprob: -6.38149356842041
    4. '#' → logprob: -6.63149356842041
    5. 'current' → logprob: -7.63149356842041
    6. 'max' → logprob: -8.75649356842041
    7. 'sub' → logprob: -9.50649356842041
    8. 'length' → logprob: -9.88149356842041
    9. ' ans' → logprob: -10.38149356842041
    10. 'window' → logprob: -10.50649356842041

Token 547: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032374341040849686
    2. 'ans' → logprob: -4.032374382019043
    3. ' ans' → logprob: -4.282374382019043
    4. ' ' → logprob: -9.532374382019043
    5. '#' → logprob: -9.782374382019043
    6. 'if' → logprob: -10.032374382019043
    7. '(ans' → logprob: -10.032374382019043
    8. '	ans' → logprob: -10.157374382019043
    9. ' if' → logprob: -10.532374382019043
    10. '  ' → logprob: -11.157374382019043

Token 548: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00010151672904612496
    2. ' ans' → logprob: -9.500101089477539
    3. 'ans' → logprob: -11.375101089477539
    4. ',' → logprob: -11.625101089477539
    5. '    
' → logprob: -12.625101089477539
    6. '	ans' → logprob: -14.375101089477539
    7. '#' → logprob: -14.500101089477539
    8. '   ' → logprob: -14.750101089477539
    9. '(ans' → logprob: -15.125101089477539
    10. '       ' → logprob: -15.500101089477539

Token 549: ' ajoute' (ID: 91611)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.1275273710489273
    2. '   ' → logprob: -2.1275274753570557
    3. 'if' → logprob: -8.377527236938477
    4. ' ans' → logprob: -8.502527236938477
    5. '#' → logprob: -9.502527236938477
    6. '	ans' → logprob: -9.877527236938477
    7. 'current' → logprob: -11.752527236938477
    8. '    
' → logprob: -12.502527236938477
    9. '(ans' → logprob: -12.627527236938477
    10. '  ' → logprob: -12.627527236938477

Token 550: ' à' (ID: 1221)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.522205650806427
    2. ' r' → logprob: -1.5222055912017822
    3. 'max' → logprob: -2.2722055912017822
    4. '   ' → logprob: -3.0222055912017822
    5. ' max' → logprob: -3.8972055912017822
    6. '(r' → logprob: -4.647205829620361
    7. '
' → logprob: -6.397205829620361
    8. ' (' → logprob: -6.772205829620361
    9. ' ans' → logprob: -7.397205829620361
    10. 'ans' → logprob: -7.522205829620361

Token 551: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.22592231631278992
    2. ' ans' → logprob: -1.6009223461151123
    3. '	ans' → logprob: -8.475922584533691
    4. '(ans' → logprob: -8.850922584533691
    5. '   ' → logprob: -9.225922584533691
    6. 'max' → logprob: -10.350922584533691
    7. 'r' → logprob: -11.600922584533691
    8. '_ans' → logprob: -12.850922584533691
    9. '```' → logprob: -13.100922584533691
    10. 's' → logprob: -13.100922584533691

Token 552: ' la' (ID: 557)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.29143404960632324
    2. 'max' → logprob: -1.6664340496063232
    3. ' le' → logprob: -3.4164340496063232
    4. ' la' → logprob: -4.791434288024902
    5. ' the' → logprob: -5.041434288024902
    6. ' r' → logprob: -5.166434288024902
    7. '   ' → logprob: -5.416434288024902
    8. 'r' → logprob: -5.666434288024902
    9. ',' → logprob: -6.541434288024902
    10. '(max' → logprob: -8.541434288024902

Token 553: ' différence' (ID: 79196)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0021317063365131617
    2. 'max' → logprob: -7.002131938934326
    3. ' r' → logprob: -7.002131938934326
    4. ' max' → logprob: -8.877131462097168
    5. '   ' → logprob: -9.377131462097168
    6. '#' → logprob: -10.627131462097168
    7. '(r' → logprob: -11.127131462097168
    8. ' ' → logprob: -12.252131462097168
    9. 'min' → logprob: -12.502131462097168
    10. ')' → logprob: -12.627131462097168

Token 554: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.11141359806060791
    2. '   ' → logprob: -2.4864134788513184
    3. ' r' → logprob: -3.8614134788513184
    4. '(r' → logprob: -6.986413478851318
    5. ' between' → logprob: -9.361413955688477
    6. ' (' → logprob: -10.486413955688477
    7. '    ' → logprob: -10.611413955688477
    8. ' ' → logprob: -10.611413955688477
    9. 'between' → logprob: -10.736413955688477
    10. '[r' → logprob: -10.861413955688477

Token 555: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5760119557380676
    2. '-' → logprob: -0.8260119557380676
    3. '   ' → logprob: -9.576011657714844
    4. '  ' → logprob: -13.201011657714844
    5. ' ' → logprob: -13.951011657714844
    6. '    ' → logprob: -15.576011657714844
    7. '    
' → logprob: -16.951011657714844
    8. '	' → logprob: -17.076011657714844
    9. '```' → logprob: -17.076011657714844
    10. '−' → logprob: -17.326011657714844

Token 556: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.001182012027129531
    2. ' l' → logprob: -6.7511820793151855
    3. '   ' → logprob: -11.501181602478027
    4. '	l' → logprob: -13.751181602478027
    5. ' ' → logprob: -14.751181602478027
    6. '  ' → logprob: -15.626181602478027
    7. '(l' → logprob: -16.751182556152344
    8. '    ' → logprob: -16.876182556152344
    9. ' ' → logprob: -17.501182556152344
    10. '_l' → logprob: -18.001182556152344

Token 557: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031729566399008036
    2. ' +' → logprob: -6.128172874450684
    3. '+' → logprob: -7.378172874450684
    4. '    
' → logprob: -9.003172874450684
    5. 'ans' → logprob: -9.253172874450684
    6. '
' → logprob: -10.628172874450684
    7. '+
' → logprob: -10.628172874450684
    8. ' ans' → logprob: -10.753172874450684
    9. '	ans' → logprob: -10.878172874450684
    10. '  ' → logprob: -11.503172874450684

Token 558: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031301841139793396
    2. 'ans' → logprob: -3.531301736831665
    3. ' ans' → logprob: -6.531301975250244
    4. '	ans' → logprob: -9.406301498413086
    5. '(ans' → logprob: -12.406301498413086
    6. '```' → logprob: -12.781301498413086
    7. '
' → logprob: -12.906301498413086
    8. '       ' → logprob: -14.406301498413086
    9. '    
' → logprob: -14.781301498413086
    10. '  ' → logprob: -16.281301498413086

Token 559: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15341994166374207
    2. 'ans' → logprob: -2.1534199714660645
    3. ' ans' → logprob: -3.6534199714660645
    4. '	ans' → logprob: -8.403419494628906
    5. '(ans' → logprob: -11.653419494628906
    6. '
' → logprob: -12.528419494628906
    7. '  ' → logprob: -13.778419494628906
    8. '    
' → logprob: -13.903419494628906
    9. '```' → logprob: -13.903419494628906
    10. ' ' → logprob: -14.153419494628906

Token 560: ' Cela' (ID: 44403)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.025094391778111458
    2. '   ' → logprob: -4.275094509124756
    3. ' ans' → logprob: -4.525094509124756
    4. '	ans' → logprob: -10.275094032287598
    5. '(ans' → logprob: -13.275094032287598
    6. '```' → logprob: -14.275094032287598
    7. 'anst' → logprob: -14.900094032287598
    8. ' ' → logprob: -15.275094032287598
    9. '  ' → logprob: -15.900094032287598
    10. '_ans' → logprob: -16.275094985961914

Token 561: ' compte' (ID: 19657)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029677940532565117
    2. ' +=' → logprob: -4.779677867889404
    3. ' continue' → logprob: -5.279677867889404
    4. 'ans' → logprob: -6.279677867889404
    5. ' permet' → logprob: -6.529677867889404
    6. '+=' → logprob: -6.529677867889404
    7. ' ans' → logprob: -6.654677867889404
    8. ' contribue' → logprob: -6.779677867889404
    9. ' #' → logprob: -7.154677867889404
    10. ' ajoute' → logprob: -7.404677867889404

Token 562: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7680739760398865
    2. ' le' → logprob: -1.2680740356445312
    3. ' l' → logprob: -2.5180740356445312
    4. ' les' → logprob: -2.8930740356445312
    5. '   ' → logprob: -3.1430740356445312
    6. ' ' → logprob: -3.8930740356445312
    7. ' combien' → logprob: -4.268074035644531
    8. 'r' → logprob: -4.768074035644531
    9. '  ' → logprob: -5.268074035644531
    10. 'le' → logprob: -5.393074035644531

Token 563: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.018442675471305847
    2. ' nombre' → logprob: -4.018442630767822
    3. 'number' → logprob: -8.39344310760498
    4. '#' → logprob: -10.76844310760498
    5. 'nb' → logprob: -10.76844310760498
    6. 'n' → logprob: -11.01844310760498
    7. 'Nombre' → logprob: -13.76844310760498
    8. ' number' → logprob: -13.89344310760498
    9. ' nombres' → logprob: -14.01844310760498
    10. 'nbr' → logprob: -14.01844310760498

Token 564: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.02711138315498829
    2. ' de' → logprob: -3.777111291885376
    3. ' d' → logprob: -6.527111530303955
    4. '   ' → logprob: -6.777111530303955
    5. '    ' → logprob: -7.402111530303955
    6. ' of' → logprob: -8.902111053466797
    7. 'des' → logprob: -9.027111053466797
    8. ' ' → logprob: -9.527111053466797
    9. '  ' → logprob: -9.902111053466797
    10. 'de' → logprob: -9.902111053466797

Token 565: ' sous' (ID: 14487)
  Prédit: ' sous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sous' → logprob: -0.08952125161886215
    2. 's' → logprob: -2.5895211696624756
    3. ' nouvelles' → logprob: -4.839521408081055
    4. 'sub' → logprob: -6.339521408081055
    5. ' nouveaux' → logprob: -8.089521408081055
    6. ' sub' → logprob: -8.589521408081055
    7. ' p' → logprob: -8.964521408081055
    8. 'p' → logprob: -9.964521408081055
    9. '```' → logprob: -10.089521408081055
    10. 'positions' → logprob: -10.714521408081055

Token 566: '-table' (ID: 35909)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.007388093508780003
    2. '_sequences' → logprob: -6.132388114929199
    3. '   ' → logprob: -6.382388114929199
    4. '_' → logprob: -6.882388114929199
    5. 'sé' → logprob: -6.882388114929199
    6. '-s' → logprob: -8.1323881149292
    7. 's' → logprob: -8.2573881149292
    8. ' sequences' → logprob: -8.6323881149292
    9. '-é' → logprob: -8.6323881149292
    10. '_s' → logprob: -9.6323881149292

Token 567: 'aux' (ID: 5454)
  Prédit: 'quences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'quences' → logprob: -0.041701722890138626
    2. 'ces' → logprob: -4.416701793670654
    3. 'ches' → logprob: -4.791701793670654
    4. 'cules' → logprob: -5.666701793670654
    5. 'n' → logprob: -5.791701793670654
    6. 'ques' → logprob: -6.166701793670654
    7. 'ances' → logprob: -6.166701793670654
    8. 'ences' → logprob: -6.416701793670654
    9. 'sses' → logprob: -6.416701793670654
    10. 'ttes' → logprob: -6.666701793670654

Token 568: ' val' (ID: 1459)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1438402533531189
    2. '[' → logprob: -3.7688403129577637
    3. ' possible' → logprob: -3.8938403129577637
    4. 's' → logprob: -3.8938403129577637
    5. ' +' → logprob: -4.393840312957764
    6. 'possible' → logprob: -4.893840312957764
    7. ' possibles' → logprob: -5.018840312957764
    8. '[r' → logprob: -5.893840312957764
    9. ' s' → logprob: -5.893840312957764
    10. ' (' → logprob: -5.893840312957764

Token 569: 'ides' (ID: 4105)
  Prédit: 'ides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ides' → logprob: -0.9387165307998657
    2. 'aires' → logprob: -1.3137165307998657
    3. 'us' → logprob: -2.563716411590576
    4. 'id' → logprob: -3.188716411590576
    5. 'eurs' → logprob: -3.188716411590576
    6. 'isés' → logprob: -3.313716411590576
    7. 'és' → logprob: -3.688716411590576
    8. 'ids' → logprob: -4.563716411590576
    9. 'a' → logprob: -4.938716411590576
    10. 'ay' → logprob: -4.938716411590576

Token 570: ' qui' (ID: 2780)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.546478935983032e-05
    2. ' ans' → logprob: -11.750025749206543
    3. ',' → logprob: -12.250025749206543
    4. '    
' → logprob: -12.875025749206543
    5. '	ans' → logprob: -13.000025749206543
    6. 'ans' → logprob: -13.125025749206543
    7. '       ' → logprob: -13.500025749206543
    8. '(ans' → logprob: -14.250025749206543
    9. '
' → logprob: -14.250025749206543
    10. ' +' → logprob: -14.375025749206543

Token 571: ' commencent' (ID: 184941)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5541698336601257
    2. ' commencent' → logprob: -2.5541698932647705
    3. '   ' → logprob: -3.0541698932647705
    4. ' peuvent' → logprob: -3.1791698932647705
    5. ')' → logprob: -3.3041698932647705
    6. ' couvr' → logprob: -3.5541698932647705
    7. ' se' → logprob: -3.6791698932647705
    8. ' s' → logprob: -3.8041698932647705
    9. '[' → logprob: -4.304169654846191
    10. '       ' → logprob: -4.429169654846191

Token 572: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.43798860907554626
    2. '   ' → logprob: -1.1879886388778687
    3. ' par' → logprob: -3.437988519668579
    4. 'à' → logprob: -5.437988758087158
    5. ' at' → logprob: -5.937988758087158
    6. '    ' → logprob: -6.062988758087158
    7. ' +=' → logprob: -6.687988758087158
    8. '+' → logprob: -7.187988758087158
    9. ' =' → logprob: -7.312988758087158
    10. ' ' → logprob: -7.312988758087158

Token 573: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0007249409682117403
    2. ' l' → logprob: -7.250724792480469
    3. 'index' → logprob: -12.875724792480469
    4. '```' → logprob: -12.875724792480469
    5. 'indice' → logprob: -13.125724792480469
    6. ' cette' → logprob: -13.250724792480469
    7. '`' → logprob: -13.875724792480469
    8. ' ' → logprob: -14.000724792480469
    9. '   ' → logprob: -14.375724792480469
    10. ' chaque' → logprob: -14.750724792480469

Token 574: ''ind' (ID: 82245)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06212744489312172
    2. '+' → logprob: -3.4371273517608643
    3. ' +' → logprob: -3.6871273517608643
    4. ' et' → logprob: -7.437127590179443
    5. '```' → logprob: -8.187127113342285
    6. ' +=' → logprob: -8.437127113342285
    7. '<|end|>' → logprob: -8.437127113342285
    8. '  ' → logprob: -8.937127113342285
    9. '    
' → logprob: -9.062127113342285
    10. 'ains' → logprob: -9.062127113342285

Token 575: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.4401039183139801
    2. 'ex' → logprob: -1.0651038885116577
    3. 'ce' → logprob: -4.565104007720947
    4. 'e' → logprob: -7.190104007720947
    5. 'ices' → logprob: -10.065103530883789
    6. 'x' → logprob: -10.065103530883789
    7. 'exe' → logprob: -10.315103530883789
    8. '   ' → logprob: -11.940103530883789
    9. 'f' → logprob: -12.190103530883789
    10. 'que' → logprob: -12.315103530883789

Token 576: ' l' (ID: 305)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3338068723678589
    2. 'l' → logprob: -2.2088069915771484
    3. '   ' → logprob: -2.7088069915771484
    4. '+l' → logprob: -3.0838069915771484
    5. ' l' → logprob: -3.7088069915771484
    6. ' +' → logprob: -3.7088069915771484
    7. '```' → logprob: -6.083806991577148
    8. 'r' → logprob: -6.083806991577148
    9. ' de' → logprob: -6.708806991577148
    10. '    ' → logprob: -6.833806991577148

Token 577: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.217951886355877e-05
    2. '
' → logprob: -10.125061988830566
    3. '    
' → logprob: -11.000061988830566
    4. 'ans' → logprob: -13.125061988830566
    5. '```' → logprob: -13.625061988830566
    6. '       ' → logprob: -14.375061988830566
    7. ',' → logprob: -15.000061988830566
    8. ' ans' → logprob: -15.500061988830566
    9. '	ans' → logprob: -15.500061988830566
    10. '   ' → logprob: -15.500061988830566

Token 578: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.316690593957901
    2. '   ' → logprob: -1.3166905641555786
    3. ' ans' → logprob: -5.941690444946289
    4. '
' → logprob: -8.191690444946289
    5. '	ans' → logprob: -8.191690444946289
    6. '```' → logprob: -8.816690444946289
    7. '(ans' → logprob: -9.691690444946289
    8. '``' → logprob: -11.441690444946289
    9. '    
' → logprob: -11.691690444946289
    10. ' ' → logprob: -13.066690444946289

Token 579: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3871992826461792
    2. 'ans' (adapté à ' ans') → logprob: -1.1371992826461792
    3. ' ans' → logprob: -8.137199401855469
    4. '	ans' → logprob: -10.387199401855469
    5. '(ans' → logprob: -12.762199401855469
    6. '```' → logprob: -14.387199401855469
    7. 'anst' → logprob: -14.887199401855469
    8. '  ' → logprob: -15.012199401855469
    9. '       ' → logprob: -15.137199401855469
    10. ' ' → logprob: -15.137199401855469

Token 580: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.596659243106842
    2. ' +=' → logprob: -0.846659243106842
    3. ' -=' → logprob: -3.9716591835021973
    4. '-=' → logprob: -6.471659183502197
    5. '=' → logprob: -9.971659660339355
    6. '-' → logprob: -10.471659660339355
    7. '+=(' → logprob: -11.096659660339355
    8. '+' → logprob: -11.221659660339355
    9. '	' → logprob: -11.971659660339355
    10. ' =' → logprob: -13.221659660339355

Token 581: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1005323976278305
    2. ' r' → logprob: -2.350532293319702
    3. '(r' → logprob: -8.100532531738281
    4. ' (' → logprob: -10.725532531738281
    5. '(' → logprob: -15.850532531738281
    6. ' ' → logprob: -15.975532531738281
    7. ' ' → logprob: -16.47553253173828
    8. '	r' → logprob: -17.22553253173828
    9. '   ' → logprob: -18.10053253173828
    10. '_r' → logprob: -18.47553253173828

Token 582: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06197362765669823
    2. '-' → logprob: -2.8119735717773438
    3. ' ' → logprob: -13.686973571777344
    4. ' ' → logprob: -14.061973571777344
    5. '<|end|>' → logprob: -14.186973571777344
    6. '   ' → logprob: -14.311973571777344
    7. '`' → logprob: -15.311973571777344
    8. ' -=' → logprob: -15.311973571777344
    9. ' -
' → logprob: -15.311973571777344
    10. '−' → logprob: -15.311973571777344

Token 583: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.6240566083070007e-06
    2. ' l' → logprob: -13.375001907348633
    3. '<|end|>' → logprob: -18.875001907348633
    4. '	l' → logprob: -19.750001907348633
    5. '_l' → logprob: -20.250001907348633
    6. '```' → logprob: -20.375001907348633
    7. '   ' → logprob: -21.250001907348633
    8. '$l' → logprob: -21.500001907348633
    9. '`' → logprob: -22.125001907348633
    10. '*l' → logprob: -22.750001907348633

Token 584: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009659165516495705
    2. '    
' → logprob: -4.884659290313721
    3. '
' → logprob: -7.134659290313721
    4. '   
' → logprob: -7.634659290313721
    5. 's' → logprob: -8.384658813476562
    6. '#' → logprob: -8.384658813476562
    7. ' 
' → logprob: -9.134658813476562
    8. '  
' → logprob: -9.259658813476562
    9. '\n' → logprob: -10.634658813476562
    10. '```' → logprob: -10.884658813476562

Token 585: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.4696856737136841
    2. ' ' → logprob: -1.469685673713684
    3. '   ' → logprob: -2.5946855545043945
    4. '    
' → logprob: -4.2196855545043945
    5. '  
' → logprob: -4.4696855545043945
    6. 's' → logprob: -4.4696855545043945
    7. '     
' → logprob: -4.4696855545043945
    8. '   
' → logprob: -5.2196855545043945
    9. '\' → logprob: -5.9696855545043945
    10. '<|end|>' → logprob: -6.0946855545043945

Token 586: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37156760692596436
    2. 's' → logprob: -1.3715676069259644
    3. '#' (adapté à ' #') → logprob: -2.871567726135254
    4. '```' → logprob: -11.496567726135254
    5. ' s' → logprob: -11.746567726135254
    6. '  ' → logprob: -12.746567726135254
    7. ' #' → logprob: -13.121567726135254
    8. '    
' → logprob: -13.996567726135254
    9. '   ' → logprob: -13.996567726135254
    10. '       ' → logprob: -14.121567726135254

Token 587: ' Met' (ID: 7227)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03510964661836624
    2. '#' → logprob: -3.410109758377075
    3. 'if' → logprob: -6.660109519958496
    4. '   ' → logprob: -8.660109519958496
    5. ' s' → logprob: -12.535109519958496
    6. '```' → logprob: -13.535109519958496
    7. 'S' → logprob: -14.660109519958496
    8. '       ' → logprob: -14.785109519958496
    9. '
' → logprob: -14.785109519958496
    10. ' #' → logprob: -14.910109519958496

Token 588: ' à' (ID: 1221)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03172864019870758
    2. ' à' → logprob: -4.531728744506836
    3. '   ' → logprob: -5.156728744506836
    4. 'à' → logprob: -5.281728744506836
    5. '#' → logprob: -5.781728744506836
    6. 'out' → logprob: -6.156728744506836
    7. ' s' → logprob: -6.656728744506836
    8. 'au' → logprob: -7.156728744506836
    9. 'if' → logprob: -7.656728744506836
    10. 'a' → logprob: -7.781728744506836

Token 589: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.5788306593894958
    2. 's' → logprob: -0.8288306593894958
    3. '```' → logprob: -6.203830718994141
    4. 'à' → logprob: -8.70383071899414
    5. 'a' → logprob: -8.70383071899414
    6. 'aj' → logprob: -8.82883071899414
    7. ' jour' → logprob: -9.07883071899414
    8. 'Jour' → logprob: -9.95383071899414
    9. '``' → logprob: -10.20383071899414
    10. '0' → logprob: -10.20383071899414

Token 590: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -7.266944157890975e-05
    2. ' s' → logprob: -10.250072479248047
    3. '   ' → logprob: -10.500072479248047
    4. '#' → logprob: -11.625072479248047
    5. '    ' → logprob: -15.625072479248047
    6. '       ' → logprob: -15.875072479248047
    7. '  ' → logprob: -16.000072479248047
    8. ' ' → logprob: -16.125072479248047
    9. '	s' → logprob: -16.625072479248047
    10. '```' → logprob: -16.625072479248047

Token 591: ' en' (ID: 469)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '^' → logprob: -0.20148546993732452
    2. ' ^=' → logprob: -1.701485514640808
    3. '=' → logprob: -9.951485633850098
    4. '&' → logprob: -11.451485633850098
    5. ' ^' → logprob: -11.951485633850098
    6. '   ' → logprob: -13.576485633850098
    7. '_^' → logprob: -13.826485633850098
    8. ' ' → logprob: -13.826485633850098
    9. ' &=' → logprob: -13.951485633850098
    10. '^

' → logprob: -14.451485633850098

Token 592: ' retir' (ID: 35638)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01839071325957775
    2. '^' → logprob: -4.268390655517578
    3. ' ^=' → logprob: -6.143390655517578
    4. ' s' → logprob: -6.268390655517578
    5. '(s' → logprob: -9.268390655517578
    6. '=s' → logprob: -10.268390655517578
    7. '=' → logprob: -10.893390655517578
    8. '^(' → logprob: -11.893390655517578
    9. '_^' → logprob: -12.768390655517578
    10. 'xor' → logprob: -12.768390655517578

Token 593: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.7715738415718079
    2. 'iant' → logprob: -1.771573781967163
    3. 'enant' → logprob: -2.146573781967163
    4. 'ait' → logprob: -2.521573781967163
    5. 'a' → logprob: -3.146573781967163
    6. 's' → logprob: -3.896573781967163
    7. '   ' → logprob: -4.146574020385742
    8. 'ra' → logprob: -4.396574020385742
    9. '=' → logprob: -4.896574020385742
    10. 'ais' → logprob: -5.146574020385742

Token 594: ' l' (ID: 305)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0019293478690087795
    2. ' a' → logprob: -6.25192928314209
    3. '   ' → logprob: -14.75192928314209
    4. '	a' → logprob: -16.501930236816406
    5. '```' → logprob: -16.501930236816406
    6. ' the' → logprob: -16.626930236816406
    7. 'l' → logprob: -17.001930236816406
    8. ' ' → logprob: -17.501930236816406
    9. '`' → logprob: -17.626930236816406
    10. '^' → logprob: -17.751930236816406

Token 595: ''effet' (ID: 197975)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10769618302583694
    2. ' a' → logprob: -2.357696294784546
    3. ' ^=' → logprob: -5.357696056365967
    4. '^' → logprob: -6.107696056365967
    5. ' ^' → logprob: -8.857696533203125
    6. 'e' → logprob: -9.482696533203125
    7. '`' → logprob: -9.482696533203125
    8. ' ' → logprob: -9.857696533203125
    9. ' ' → logprob: -10.482696533203125
    10. '=' → logprob: -10.607696533203125

Token 596: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1493227779865265
    2. '^' → logprob: -3.024322748184204
    3. 'a' → logprob: -3.149322748184204
    4. ' a' → logprob: -3.524322748184204
    5. 'de' → logprob: -5.024322986602783
    6. ' ^=' → logprob: -5.024322986602783
    7. ' du' → logprob: -6.524322986602783
    8. ' ^' → logprob: -7.274322986602783
    9. ' ' → logprob: -7.524322986602783
    10. '   ' → logprob: -7.774322986602783

Token 597: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.018151935189962387
    2. ' a' → logprob: -4.018151760101318
    3. ' ' → logprob: -13.893152236938477
    4. '   ' → logprob: -14.643152236938477
    5. '=a' → logprob: -16.018152236938477
    6. '	a' → logprob: -16.268152236938477
    7. '=' → logprob: -16.393152236938477
    8. '    ' → logprob: -16.768152236938477
    9. ' the' → logprob: -17.268152236938477
    10. 'l' → logprob: -17.518152236938477

Token 598: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -2.069664333248511e-05
    2. 'l' → logprob: -10.875020980834961
    3. '[' → logprob: -13.375020980834961
    4. '	l' → logprob: -16.50002098083496
    5. ' [' → logprob: -16.87502098083496
    6. '```' → logprob: -17.50002098083496
    7. ' l' → logprob: -18.00002098083496
    8. '[r' → logprob: -18.12502098083496
    9. '[a' → logprob: -18.12502098083496
    10. 'a' → logprob: -18.37502098083496

Token 599: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00209673005156219
    2. ']^' → logprob: -6.752096652984619
    3. '^' → logprob: -8.252097129821777
    4. '],' → logprob: -8.752097129821777
    5. '])' → logprob: -8.752097129821777
    6. ')' → logprob: -8.877097129821777
    7. '```' → logprob: -10.377097129821777
    8. ' ]' → logprob: -10.502097129821777
    9. '']' → logprob: -10.627097129821777
    10. ' ' → logprob: -11.127097129821777

Token 600: ' avec' (ID: 3937)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '^' → logprob: -0.1604565531015396
    2. ' ^=' → logprob: -1.9104565382003784
    3. '   ' → logprob: -8.785456657409668
    4. 's' → logprob: -10.160456657409668
    5. ' ^' → logprob: -10.660456657409668
    6. '=' → logprob: -11.910456657409668
    7. 'ˆ' → logprob: -13.535456657409668
    8. ''^' → logprob: -13.660456657409668
    9. '^(' → logprob: -13.785456657409668
    10. ' ' → logprob: -13.785456657409668

Token 601: ' l' (ID: 305)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.24994899332523346
    2. '^' → logprob: -1.9999489784240723
    3. 'a' → logprob: -2.6249489784240723
    4. ' ^=' → logprob: -4.749948978424072
    5. 'l' → logprob: -6.624948978424072
    6. 'xor' → logprob: -6.624948978424072
    7. ' s' → logprob: -6.999948978424072
    8. ''^' → logprob: -8.37494945526123
    9. '^{' → logprob: -8.49994945526123
    10. '^(' → logprob: -8.62494945526123

Token 602: ''op' (ID: 70747)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '^' → logprob: -0.10823529958724976
    2. 's' → logprob: -2.4832353591918945
    3. ' ^=' → logprob: -4.8582353591918945
    4. ''^' → logprob: -5.6082353591918945
    5. 'a' → logprob: -5.9832353591918945
    6. '_^' → logprob: -6.4832353591918945
    7. 'xor' → logprob: -7.3582353591918945
    8. 'e' → logprob: -7.4832353591918945
    9. '=' → logprob: -7.6082353591918945
    10. '`' → logprob: -8.108235359191895

Token 603: 'ération' (ID: 24977)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.038713641464710236
    2. '^' → logprob: -3.2887136936187744
    3. '```' → logprob: -8.163713455200195
    4. 'er' → logprob: -9.288713455200195
    5. 'r' → logprob: -9.413713455200195
    6. ' s' → logprob: -9.538713455200195
    7. '`s' → logprob: -9.913713455200195
    8. '=' → logprob: -11.288713455200195
    9. 'xor' → logprob: -11.913713455200195
    10. ''s' → logprob: -11.913713455200195

Token 604: ' XOR' (ID: 147209)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.3083791136741638
    2. ' ^=' → logprob: -2.0583791732788086
    3. 's' → logprob: -2.5583791732788086
    4. 'xor' → logprob: -2.9333791732788086
    5. '_^' → logprob: -5.558379173278809
    6. ' XOR' → logprob: -6.683379173278809
    7. '^(' → logprob: -8.183379173278809
    8. '^)' → logprob: -8.308379173278809
    9. '^^' → logprob: -8.308379173278809
    10. 'd' → logprob: -8.433379173278809

Token 605: ' (' (ID: 350)
  Prédit: ' ^='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ^=' → logprob: -0.10258568823337555
    2. '^' → logprob: -3.102585792541504
    3. '   ' → logprob: -3.727585792541504
    4. 's' → logprob: -3.727585792541504
    5. ' s' → logprob: -5.977585792541504
    6. ' ^' → logprob: -6.602585792541504
    7. '=' → logprob: -8.602585792541504
    8. ' =' → logprob: -9.352585792541504
    9. '       ' → logprob: -9.352585792541504
    10. ' ' → logprob: -9.602585792541504

Token 606: 'p' (ID: 79)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1879245787858963
    2. ' s' → logprob: -2.18792462348938
    3. '   ' → logprob: -2.93792462348938
    4. ')' → logprob: -5.437924385070801
    5. '       ' → logprob: -6.812924385070801
    6. ')
' → logprob: -8.3129243850708
    7. ' ' → logprob: -9.3129243850708
    8. '.' → logprob: -9.8129243850708
    9. '    ' → logprob: -10.0629243850708
    10. ',' → logprob: -10.1879243850708

Token 607: 'uis' (ID: 4560)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.32600799202919006
    2. '^' → logprob: -1.8260079622268677
    3. 's' → logprob: -2.5760080814361572
    4. ' ^=' → logprob: -3.7010080814361572
    5. ' s' → logprob: -5.326007843017578
    6. '^)' → logprob: -5.451007843017578
    7. ')' → logprob: -6.076007843017578
    8. '=s' → logprob: -6.326007843017578
    9. ' =' → logprob: -6.326007843017578
    10. '#' → logprob: -8.826007843017578

Token 608: 'que' (ID: 1126)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12973915040493011
    2. 's' → logprob: -2.1297390460968018
    3. ')' → logprob: -6.504739284515381
    4. '=s' → logprob: -7.754739284515381
    5. '   ' → logprob: -7.879739284515381
    6. ' s' → logprob: -8.754738807678223
    7. '==' → logprob: -10.129738807678223
    8. 'a' → logprob: -10.254738807678223
    9. '```' → logprob: -10.254738807678223
    10. '#' → logprob: -10.379738807678223

Token 609: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04988152161240578
    2. 'a' → logprob: -3.0498814582824707
    3. ' s' → logprob: -6.924881458282471
    4. '   ' → logprob: -9.424881935119629
    5. '^' → logprob: -9.674881935119629
    6. ' a' → logprob: -9.924881935119629
    7. ' ^=' → logprob: -10.424881935119629
    8. 'xor' → logprob: -10.674881935119629
    9. '=' → logprob: -10.799881935119629
    10. '```' → logprob: -11.799881935119629

Token 610: ' ^=' (ID: 79665)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.0380566380918026
    2. ' ^=' → logprob: -3.2880566120147705
    3. '=' → logprob: -12.038056373596191
    4. '^)' → logprob: -12.288056373596191
    5. '^^' → logprob: -13.038056373596191
    6. ')^' → logprob: -14.663056373596191
    7. 'ˆ' → logprob: -14.788056373596191
    8. ' ' → logprob: -15.663056373596191
    9. ' ^' → logprob: -15.663056373596191
    10. '```' → logprob: -15.788056373596191

Token 611: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.006715370807796717
    2. ' a' → logprob: -5.006715297698975
    3. '	a' → logprob: -17.256715774536133
    4. ' ' → logprob: -17.881715774536133
    5. ' ' → logprob: -18.381715774536133
    6. '```' → logprob: -19.131715774536133
    7. '
' → logprob: -19.256715774536133
    8. '=' → logprob: -19.881715774536133
    9. '=a' → logprob: -20.006715774536133
    10. ')' → logprob: -20.381715774536133

Token 612: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -4.36574100604048e-06
    2. 'l' → logprob: -12.500004768371582
    3. '[' → logprob: -14.750004768371582
    4. ' [' → logprob: -16.625003814697266
    5. '[
' → logprob: -16.625003814697266
    6. '```' → logprob: -16.875003814697266
    7. '	l' → logprob: -17.500003814697266
    8. '\[' → logprob: -18.375003814697266
    9. '[a' → logprob: -18.875003814697266
    10. ']' → logprob: -18.875003814697266

Token 613: ']' (ID: 60)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.22871994972229004
    2. '])' → logprob: -1.97871994972229
    3. ']' → logprob: -2.72871994972229
    4. 'l' → logprob: -7.853719711303711
    5. ')' → logprob: -8.353719711303711
    6. '(l' → logprob: -9.603719711303711
    7. '[' → logprob: -9.603719711303711
    8. '])
' → logprob: -10.978719711303711
    9. '],' → logprob: -11.228719711303711
    10. ']),' → logprob: -11.353719711303711

Token 614: ' déf' (ID: 23956)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006658526253886521
    2. ')
' → logprob: -8.000665664672852
    3. '   ' → logprob: -8.750665664672852
    4. '       ' → logprob: -9.625665664672852
    5. 's' → logprob: -10.125665664672852
    6. ' )' → logprob: -10.500665664672852
    7. ').' → logprob: -11.625665664672852
    8. '):' → logprob: -12.500665664672852
    9. '),' → logprob: -12.625665664672852
    10. ')**' → logprob: -12.875665664672852

Token 615: 'ait' (ID: 1271)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0523381307721138
    2. 'aut' → logprob: -4.052338123321533
    3. '=' → logprob: -4.552338123321533
    4. 'ini' → logprob: -4.927338123321533
    5. 'ined' → logprob: -6.052338123321533
    6. 's' → logprob: -6.177338123321533
    7. 'inite' → logprob: -6.302338123321533
    8. 'initely' → logprob: -6.302338123321533
    9. 'inition' → logprob: -6.427338123321533
    10. 'end' → logprob: -6.802338123321533

Token 616: ' un' (ID: 537)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9295194149017334
    2. 'l' → logprob: -1.1795194149017334
    3. 'a' → logprob: -1.6795194149017334
    4. ' l' → logprob: -2.8045194149017334
    5. ' s' → logprob: -4.0545196533203125
    6. 'le' → logprob: -4.1795196533203125
    7. ' le' → logprob: -5.0545196533203125
    8. ')' → logprob: -5.4295196533203125
    9. ' a' → logprob: -5.8045196533203125
    10. ' ' → logprob: -6.4295196533203125

Token 617: ' XOR' (ID: 147209)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.038891617208719254
    2. ' a' → logprob: -3.538891553878784
    3. 's' → logprob: -5.288891792297363
    4. ')' → logprob: -6.413891792297363
    5. '^' → logprob: -7.913891792297363
    6. ' ^=' → logprob: -7.913891792297363
    7. ' s' → logprob: -7.913891792297363
    8. 'xor' → logprob: -8.288891792297363
    9. ' XOR' → logprob: -8.663891792297363
    10. ' ' → logprob: -9.288891792297363

Token 618: ' précédent' (ID: 128462)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15771786868572235
    2. '   ' → logprob: -2.4077179431915283
    3. 'a' → logprob: -3.4077179431915283
    4. 's' → logprob: -4.532717704772949
    5. ' a' → logprob: -5.282717704772949
    6. ' s' → logprob: -5.782717704772949
    7. ').' → logprob: -7.532717704772949
    8. '    ' → logprob: -7.657717704772949
    9. ' ' → logprob: -7.907717704772949
    10. '       ' → logprob: -7.907717704772949

Token 619: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02626359835267067
    2. '   ' → logprob: -3.77626371383667
    3. ')
' → logprob: -6.65126371383667
    4. 's' → logprob: -6.77626371383667
    5. 'a' → logprob: -8.401263236999512
    6. ').' → logprob: -8.651263236999512
    7. '       ' → logprob: -9.776263236999512
    8. '    ' → logprob: -11.026263236999512
    9. ' )' → logprob: -11.026263236999512
    10. ' ' → logprob: -11.151263236999512

Token 620: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029872551560401917
    2. 's' → logprob: -3.5298726558685303
    3. ' s' → logprob: -9.02987289428711
    4. '```' → logprob: -13.40487289428711
    5. '	s' → logprob: -14.90487289428711
    6. '    
' → logprob: -15.90487289428711
    7. ' ' → logprob: -16.15487289428711
    8. '       ' → logprob: -16.40487289428711
    9. '``' → logprob: -16.77987289428711
    10. '`' → logprob: -17.52987289428711

Token 621: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03215538337826729
    2. '   ' → logprob: -3.5321552753448486
    3. ' s' → logprob: -6.032155513763428
    4. ' ' → logprob: -14.15715503692627
    5. '	s' → logprob: -14.40715503692627
    6. '```' → logprob: -14.90715503692627
    7. '  ' → logprob: -16.032155990600586
    8. '       ' → logprob: -17.282155990600586
    9. '    ' → logprob: -18.532155990600586
    10. '`s' → logprob: -18.657155990600586

Token 622: ' Cela' (ID: 44403)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.7318676710128784
    2. 's' → logprob: -1.2318676710128784
    3. '   ' → logprob: -1.4818676710128784
    4. ' ' → logprob: -11.356867790222168
    5. '	s' → logprob: -12.106867790222168
    6. '    
' → logprob: -12.981867790222168
    7. '    ' → logprob: -13.106867790222168
    8. '       ' → logprob: -13.231867790222168
    9. '  ' → logprob: -13.231867790222168
    10. ' 
' → logprob: -13.231867790222168

Token 623: ' prépare' (ID: 150142)
  Prédit: ' ^='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ^=' → logprob: -0.12955591082572937
    2. 's' → logprob: -2.8795559406280518
    3. ' s' → logprob: -2.8795559406280518
    4. '   ' → logprob: -5.004555702209473
    5. ' =' → logprob: -7.504555702209473
    6. '^' → logprob: -7.629555702209473
    7. '=' → logprob: -7.754555702209473
    8. ' ' → logprob: -8.129555702209473
    9. ' ^' → logprob: -8.754555702209473
    10. ' ' → logprob: -9.379555702209473

Token 624: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5785927176475525
    2. ' s' → logprob: -0.8285927176475525
    3. '   ' → logprob: -6.203592777252197
    4. ' ' → logprob: -7.828592777252197
    5. '    ' → logprob: -9.578592300415039
    6. '	s' → logprob: -10.578592300415039
    7. '```' → logprob: -10.953592300415039
    8. '  ' → logprob: -11.078592300415039
    9. ' la' → logprob: -11.203592300415039
    10. ' à' → logprob: -11.578592300415039

Token 625: ' pour' (ID: 1930)
  Prédit: ' ^='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ^=' → logprob: -0.011917420662939548
    2. '^' → logprob: -4.511917591094971
    3. '=' → logprob: -7.511917591094971
    4. ' ' → logprob: -9.136917114257812
    5. ' ^' → logprob: -9.761917114257812
    6. ' =' → logprob: -10.386917114257812
    7. ' ' → logprob: -10.511917114257812
    8. 's' → logprob: -10.761917114257812
    9. '   ' → logprob: -11.261917114257812
    10. ' for' → logprob: -11.636917114257812

Token 626: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.2692117393016815
    2. ' la' → logprob: -2.269211769104004
    3. 'le' → logprob: -2.644211769104004
    4. 'l' → logprob: -2.894211769104004
    5. ' le' → logprob: -5.394211769104004
    6. ' l' → logprob: -7.019211769104004
    7. '```' → logprob: -8.769211769104004
    8. 'the' → logprob: -8.894211769104004
    9. '#' → logprob: -9.519211769104004
    10. 'pro' → logprob: -9.769211769104004

Token 627: ' prochaine' (ID: 78876)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.7753089070320129
    2. ' prochaine' → logprob: -1.1503088474273682
    3. ' boucle' → logprob: -2.650308847427368
    4. 'bou' → logprob: -3.400308847427368
    5. 'next' → logprob: -3.400308847427368
    6. 'suite' → logprob: -3.525308847427368
    7. 'nou' → logprob: -3.650308847427368
    8. 'it' → logprob: -5.525309085845947
    9. 'iteration' → logprob: -5.775309085845947
    10. ' suite' → logprob: -6.025309085845947

Token 628: ' it' (ID: 480)
  Prédit: ' it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' it' → logprob: -0.20752614736557007
    2. 'it' → logprob: -2.082526206970215
    3. 'iteration' → logprob: -3.957526206970215
    4. ' ' → logprob: -4.082526206970215
    5. ' iteration' → logprob: -4.457526206970215
    6. ' boucle' → logprob: -4.582526206970215
    7. ' étape' → logprob: -6.332526206970215
    8. ' iter' → logprob: -7.457526206970215
    9. ' tour' → logprob: -7.707526206970215
    10. '   ' → logprob: -7.832526206970215

Token 629: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.002042486798018217
    2. 'er' → logprob: -6.627042293548584
    3. 'ér' → logprob: -8.002042770385742
    4. 'éra' → logprob: -8.627042770385742
    5. 'é' → logprob: -9.252042770385742
    6. 'érations' → logprob: -10.002042770385742
    7. '**' → logprob: -11.877042770385742
    8. 'ration' → logprob: -12.252042770385742
    9. 'étation' → logprob: -12.252042770385742
    10. '#' → logprob: -12.377042770385742

Token 630: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002254337538033724
    2. 's' → logprob: -6.127254486083984
    3. ' s' → logprob: -9.752254486083984
    4. '	s' → logprob: -13.002254486083984
    5. '       ' → logprob: -13.002254486083984
    6. '```' → logprob: -13.002254486083984
    7. '    
' → logprob: -13.752254486083984
    8. '(s' → logprob: -14.377254486083984
    9. '.' → logprob: -14.627254486083984
    10. ' ' → logprob: -15.002254486083984

Token 631: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2718690037727356
    2. 'la' → logprob: -2.146868944168091
    3. ' la' → logprob: -2.271868944168091
    4. ' l' → logprob: -4.14686918258667
    5. 'for' → logprob: -7.02186918258667
    6. '<|end|>' → logprob: -7.64686918258667
    7. '```' → logprob: -8.271868705749512
    8. 'the' → logprob: -8.646868705749512
    9. ' lâ' → logprob: -9.396868705749512
    10. ' boucle' → logprob: -9.896868705749512

Token 632: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03283149003982544
    2. 'bou' → logprob: -4.15783166885376
    3. ' for' → logprob: -4.65783166885376
    4. ' boucle' → logprob: -5.03283166885376
    5. 'loop' → logprob: -7.53283166885376
    6. 'b' → logprob: -10.032831192016602
    7. ' loop' → logprob: -10.407831192016602
    8. '```' → logprob: -11.282831192016602
    9. ' bou' → logprob: -11.282831192016602
    10. 'l' → logprob: -12.532831192016602

Token 633: ' principale' (ID: 68926)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35959967970848083
    2. 's' → logprob: -1.2345997095108032
    3. ' s' → logprob: -4.734599590301514
    4. '    
' → logprob: -7.109599590301514
    5. 'a' → logprob: -7.359599590301514
    6. ' ' → logprob: -8.234600067138672
    7. '```' → logprob: -8.609600067138672
    8. '    ' → logprob: -9.484600067138672
    9. '  ' → logprob: -10.234600067138672
    10. '.' → logprob: -10.359600067138672

Token 634: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018844136968255043
    2. 's' → logprob: -4.143844127655029
    3. ' s' → logprob: -6.643844127655029
    4. '    
' → logprob: -6.768844127655029
    5. '
' → logprob: -9.268844604492188
    6. '  
' → logprob: -9.393844604492188
    7. '```' → logprob: -9.643844604492188
    8. ' 
' → logprob: -10.143844604492188
    9. ' ' → logprob: -10.518844604492188
    10. '\n' → logprob: -11.643844604492188

Token 635: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12715120613574982
    2. 's' → logprob: -2.1271512508392334
    3. ' s' → logprob: -8.877151489257812
    4. '```' → logprob: -9.502151489257812
    5. '	s' → logprob: -12.752151489257812
    6. '    
' → logprob: -13.127151489257812
    7. '       ' → logprob: -13.127151489257812
    8. '``' → logprob: -14.002151489257812
    9. ' ' → logprob: -15.127151489257812
    10. '`' → logprob: -15.377151489257812

Token 636: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.06209283322095871
    2. '   ' → logprob: -3.0620927810668945
    3. ' s' → logprob: -4.3120927810668945
    4. '```' → logprob: -11.812092781066895
    5. ' ' → logprob: -14.187092781066895
    6. '	s' → logprob: -14.437092781066895
    7. '``' → logprob: -15.562092781066895
    8. '  ' → logprob: -15.562092781066895
    9. '       ' → logprob: -16.18709373474121
    10. '`s' → logprob: -17.18709373474121

Token 637: ' ^=' (ID: 79665)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.5759932994842529
    2. ' ^=' → logprob: -0.8259932994842529
    3. '=' → logprob: -10.450993537902832
    4. ' ^' → logprob: -11.075993537902832
    5. '^^' → logprob: -12.450993537902832
    6. ' ' → logprob: -13.575993537902832
    7. '_^' → logprob: -14.075993537902832
    8. ' ' → logprob: -14.200993537902832
    9. '   ' → logprob: -14.825993537902832
    10. '```' → logprob: -15.075993537902832

Token 638: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.5491004129871726e-05
    2. ' a' → logprob: -10.000045776367188
    3. '   ' → logprob: -19.875045776367188
    4. '	a' → logprob: -21.250045776367188
    5. '(a' → logprob: -23.000045776367188
    6. '[a' → logprob: -23.750045776367188
    7. ' ' → logprob: -24.125045776367188
    8. 'а' → logprob: -24.250045776367188
    9. '#a' → logprob: -24.500045776367188
    10. '```' → logprob: -24.500045776367188

Token 639: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -2.9875325708417222e-05
    2. '[' → logprob: -10.500029563903809
    3. '   ' → logprob: -13.875029563903809
    4. 'l' → logprob: -14.875029563903809
    5. ' [' → logprob: -14.875029563903809
    6. '```' → logprob: -15.250029563903809
    7. '[
' → logprob: -16.000030517578125
    8. '\[' → logprob: -16.375030517578125
    9. '[L' → logprob: -16.750030517578125
    10. '[left' → logprob: -17.500030517578125

Token 640: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00237885769456625
    2. ')' → logprob: -6.127378940582275
    3. ' ]' → logprob: -9.252378463745117
    4. '}' → logprob: -10.377378463745117
    5. '']' → logprob: -10.877378463745117
    6. '+' → logprob: -11.127378463745117
    7. '[' → logprob: -11.252378463745117
    8. '<|end|>' → logprob: -11.502378463745117
    9. '"]' → logprob: -13.377378463745117
    10. ']
' → logprob: -13.377378463745117

Token 641: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 642: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -18.5
    3. '#' → logprob: -20.75
    4. '#print' → logprob: -21.0
    5. '```' → logprob: -22.625
    6. 'prin' → logprob: -23.25
    7. 'prit' → logprob: -23.75
    8. 'pr' → logprob: -24.0
    9. 'Print' → logprob: -24.25
    10. '.print' → logprob: -25.125

Token 643: 'iche' (ID: 7509)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.26457494497299194
    2. 'ichage' → logprob: -2.5145750045776367
    3. 'iche' → logprob: -2.7645750045776367
    4. 'f' → logprob: -2.8895750045776367
    5. 'icher' → logprob: -4.264575004577637
    6. 'ich' → logprob: -4.514575004577637
    7. 'fic' → logprob: -5.889575004577637
    8. '```' → logprob: -5.889575004577637
    9. 'print' → logprob: -7.139575004577637
    10. 'ic' → logprob: -7.639575004577637

Token 644: ' la' (ID: 557)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00012582694762386382
    2. 'ans' → logprob: -9.000125885009766
    3. '(' → logprob: -13.000125885009766
    4. 'print' → logprob: -16.625125885009766
    5. '(
' → logprob: -17.250125885009766
    6. '(answer' → logprob: -17.500125885009766
    7. '()' → logprob: -19.125125885009766
    8. ' ans' → logprob: -19.375125885009766
    9. '	ans' → logprob: -19.500125885009766
    10. 's' → logprob: -19.750125885009766

Token 645: ' valeur' (ID: 41664)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.09356870502233505
    2. 'ans' → logprob: -2.593568801879883
    3. '(' → logprob: -4.468568801879883
    4. 's' → logprob: -6.218568801879883
    5. 'r' → logprob: -7.843568801879883
    6. 'result' → logprob: -8.093568801879883
    7. '(result' → logprob: -9.343568801879883
    8. '(
' → logprob: -9.843568801879883
    9. 'rés' → logprob: -10.093568801879883
    10. ' résultat' → logprob: -10.593568801879883

Token 646: ' finale' (ID: 37759)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.006612464785575867
    2. '(' → logprob: -5.256612300872803
    3. 'print' → logprob: -6.881612300872803
    4. 'ans' → logprob: -8.006612777709961
    5. '(print' → logprob: -11.256612777709961
    6. '(
' → logprob: -12.631612777709961
    7. '(answer' → logprob: -14.256612777709961
    8. '()' → logprob: -14.881612777709961
    9. '(`' → logprob: -15.381612777709961
    10. ')' → logprob: -16.38161277770996

Token 647: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.8921695047756657e-05
    2. '(print' → logprob: -10.750028610229492
    3. '(ans' → logprob: -12.375028610229492
    4. '(' → logprob: -13.125028610229492
    5. ' print' → logprob: -13.875028610229492
    6. 'ans' → logprob: -15.875028610229492
    7. '```' → logprob: -16.875028610229492
    8. ')' → logprob: -17.625028610229492
    9. '
' → logprob: -18.500028610229492
    10. '.print' → logprob: -18.625028610229492

Token 648: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.048705119639635086
    2. '(ans' → logprob: -3.0487051010131836
    3. ' ans' → logprob: -9.048705101013184
    4. '	ans' → logprob: -16.0487060546875
    5. '_ans' → logprob: -18.2987060546875
    6. 'answer' → logprob: -18.9237060546875
    7. 'ANS' → logprob: -19.1737060546875
    8. 'print' → logprob: -19.5487060546875
    9. '(' → logprob: -19.5487060546875
    10. 'a' → logprob: -19.6737060546875

Token 649: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1637164789135568e-05
    2. '
' → logprob: -12.000011444091797
    3. '```' → logprob: -12.250011444091797
    4. ' print' → logprob: -14.500011444091797
    5. ')
' → logprob: -16.750011444091797
    6. '``' → logprob: -16.875011444091797
    7. ')' → logprob: -19.500011444091797
    8. '
' → logprob: -19.625011444091797
    9. '  
' → logprob: -20.125011444091797
    10. '`
' → logprob: -20.125011444091797

Token 650: ' le' (ID: 505)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.7697225252486533e-06
    2. ' print' → logprob: -12.500003814697266
    3. '```' → logprob: -20.500003814697266
    4. '
' → logprob: -20.875003814697266
    5. ')' → logprob: -22.500003814697266
    6. '#print' → logprob: -23.000003814697266
    7. '#' → logprob: -23.500003814697266
    8. ' 
' → logprob: -24.500003814697266
    9. '``' → logprob: -24.875003814697266
    10. ')
' → logprob: -25.000003814697266

Token 651: ' résultat' (ID: 62556)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7973372340202332
    2. 'print' → logprob: -1.547337293624878
    3. '```' → logprob: -1.797337293624878
    4. ' résultat' → logprob: -3.672337293624878
    5. 'r' → logprob: -4.047337055206299
    6. '"' → logprob: -4.422337055206299
    7. 'ur' → logprob: -4.547337055206299
    8. 'result' → logprob: -4.672337055206299
    9. ' nombre' → logprob: -4.797337055206299
    10. '\' → logprob: -4.797337055206299

Token 652: ' du' (ID: 1462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0017035098280757666
    2. ')' → logprob: -6.87670373916626
    3. ')
' → logprob: -8.001703262329102
    4. ' print' → logprob: -8.751703262329102
    5. '
' → logprob: -9.751703262329102
    6. '(print' → logprob: -9.751703262329102
    7. '(' → logprob: -10.126703262329102
    8. '.print' → logprob: -12.251703262329102
    9. '```' → logprob: -12.751703262329102
    10. '(ans' → logprob: -13.001703262329102

Token 653: ' traitement' (ID: 42434)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5776873230934143
    2. 'calcul' → logprob: -1.2026872634887695
    3. 'programme' → logprob: -2.4526872634887695
    4. 'nombre' → logprob: -3.5776872634887695
    5. 'comp' → logprob: -4.7026872634887695
    6. 'program' → logprob: -4.9526872634887695
    7. 'code' → logprob: -6.2026872634887695
    8. '#' → logprob: -6.7026872634887695
    9. 'cal' → logprob: -7.2026872634887695
    10. 'rés' → logprob: -7.3276872634887695

Token 654: ' effectué' (ID: 131221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00033296257606707513
    2. ')
' → logprob: -8.875332832336426
    3. '
' → logprob: -9.000332832336426
    4. ')' → logprob: -9.875332832336426
    5. ' print' → logprob: -11.125332832336426
    6. '```' → logprob: -13.750332832336426
    7. '(print' → logprob: -13.875332832336426
    8. '(' → logprob: -14.625332832336426
    9. '  
' → logprob: -15.000332832336426
    10. '.print' → logprob: -15.500332832336426

Token 655: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00014931005716789514
    2. '
' → logprob: -9.375149726867676
    3. ' print' → logprob: -11.000149726867676
    4. ')
' → logprob: -11.000149726867676
    5. '(print' → logprob: -11.250149726867676
    6. ')' → logprob: -11.500149726867676
    7. '(ans' → logprob: -12.625149726867676
    8. '(' → logprob: -13.125149726867676
    9. '```' → logprob: -13.875149726867676
    10. 'ans' → logprob: -14.625149726867676

Token 656: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.2729995988775045e-06
    2. '```' → logprob: -12.250006675720215
    3. ' print' → logprob: -13.500006675720215
    4. '
' → logprob: -16.6250057220459
    5. '``' → logprob: -17.8750057220459
    6. '`' → logprob: -22.3750057220459
    7. 'pr' → logprob: -22.7500057220459
    8. '`
' → logprob: -22.8750057220459
    9. '\' → logprob: -23.2500057220459
    10. ' 
' → logprob: -23.2500057220459

Token 657: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.4740847051143646
    2. '(' → logprob: -0.974084734916687
    3. '()' → logprob: -12.849084854125977
    4. ' (' → logprob: -12.974084854125977
    5. '('' → logprob: -13.974084854125977
    6. '(
' → logprob: -14.099084854125977
    7. '(a' → logprob: -15.099084854125977
    8. '((' → logprob: -15.974084854125977
    9. '("("' → logprob: -15.974084854125977
    10. '(an' → logprob: -16.474084854125977

Token 658: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ' )' → logprob: -14.125001907348633
    3. '+' → logprob: -14.750001907348633
    4. ')`' → logprob: -15.500001907348633
    5. '))' → logprob: -16.375001907348633
    6. ')#' → logprob: -18.000001907348633
    7. ')
' → logprob: -18.250001907348633
    8. '+)' → logprob: -18.375001907348633
    9. '`)' → logprob: -18.750001907348633
    10. '')' → logprob: -19.000001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 656
Tokens correctement prédits (1ère position, stricte): 139
Tokens correctement prédits (1ère position, avec adaptation): 142
Tokens correctement prédits (top 10): 336
Précision stricte (1ère position): 21.19%
Précision adaptée (1ère position): 21.65%
Précision (top 10): 51.22%
================================================================================
