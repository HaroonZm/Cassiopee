================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:26:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
A = input().split()
flag = 0
for i in range(N):
    num = int(A[i])
    if num % 2 == 0:
        if num % 3 != 0 and num % 5 != 0:
            flag = 1
            break
if flag == 0:
    print('APPROVED')
else:
    print('DENIED')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00035786881926469505
    2. '('' → logprob: -8.750357627868652
    3. '(N' → logprob: -9.125357627868652
    4. ''' → logprob: -11.000357627868652
    5. '(input' → logprob: -11.125357627868652
    6. '(
' → logprob: -11.250357627868652
    7. '()' → logprob: -11.375357627868652
    8. '("("' → logprob: -11.375357627868652
    9. '```' → logprob: -12.125357627868652
    10. '(`' → logprob: -12.375357627868652

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2372170090675354
    2. ')' → logprob: -1.7372169494628906
    3. '()' → logprob: -3.4872169494628906
    4. '())' → logprob: -5.737216949462891
    5. '```' → logprob: -7.987216949462891
    6. '(
' → logprob: -8.23721694946289
    7. '`' → logprob: -9.61221694946289
    8. '(()' → logprob: -9.61221694946289
    9. '("("' → logprob: -9.61221694946289
    10. '")' → logprob: -9.73721694946289

Token 5: 'A' (ID: 32)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5894470810890198
    2. 'if' → logprob: -1.839447021484375
    3. 's' → logprob: -3.089447021484375
    4. 'a' → logprob: -3.214447021484375
    5. 'i' → logprob: -3.339447021484375
    6. '`' → logprob: -3.839447021484375
    7. 'x' → logprob: -3.964447021484375
    8. '[' → logprob: -3.964447021484375
    9. ''' → logprob: -4.214447021484375
    10. '\n' → logprob: -4.589447021484375

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0013097634073346853
    2. '.' → logprob: -7.876309871673584
    3. '[]' → logprob: -8.376309394836426
    4. '\[' → logprob: -8.501309394836426
    5. '+' → logprob: -9.251309394836426
    6. '=' → logprob: -9.501309394836426
    7. '[:]' → logprob: -9.501309394836426
    8. '[A' → logprob: -9.626309394836426
    9. '[i' → logprob: -9.876309394836426
    10. ')' → logprob: -11.001309394836426

Token 7: ' input' (ID: 3422)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6035434007644653
    2. 'list' → logprob: -1.4785434007644653
    3. ' []' → logprob: -2.103543281555176
    4. '[]' → logprob: -2.728543281555176
    5. ' [' → logprob: -3.478543281555176
    6. '[' → logprob: -5.478543281555176
    7. '[int' → logprob: -6.603543281555176
    8. '[input' → logprob: -7.228543281555176
    9. '[list' → logprob: -8.353543281555176
    10. 'input' → logprob: -8.603543281555176

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007470945129171014
    2. ''' → logprob: -8.375746726989746
    3. '()' → logprob: -9.125746726989746
    4. ')' → logprob: -9.250746726989746
    5. '('' → logprob: -9.250746726989746
    6. '(
' → logprob: -9.250746726989746
    7. '"' → logprob: -10.875746726989746
    8. '.' → logprob: -11.000746726989746
    9. '`' → logprob: -11.000746726989746
    10. ' (' → logprob: -11.250746726989746

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015216453466564417
    2. 'strip' → logprob: -6.501521587371826
    3. 'rstrip' → logprob: -11.376522064208984
    4. ' split' → logprob: -12.251522064208984
    5. 'replace' → logprob: -13.376522064208984
    6. 'rs' → logprob: -14.251522064208984
    7. 'spl' → logprob: -14.376522064208984
    8. 's' → logprob: -15.876522064208984
    9. '(split' → logprob: -17.126522064208984
    10. 'sp' → logprob: -18.001522064208984

Token 10: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05734092742204666
    2. '()' → logprob: -3.6823408603668213
    3. '('' → logprob: -3.6823408603668213
    4. '("("' → logprob: -5.3073410987854
    5. '(
' → logprob: -9.057340621948242
    6. '(`' → logprob: -9.182340621948242
    7. '(

' → logprob: -9.807340621948242
    8. '("' → logprob: -10.057340621948242
    9. '((' → logprob: -11.057340621948242
    10. '`' → logprob: -11.182340621948242

Token 11: 'flag' (ID: 17665)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4553567171096802
    2. 'A' → logprob: -1.0803567171096802
    3. 'result' → logprob: -4.830356597900391
    4. 'B' → logprob: -5.330356597900391
    5. 'a' → logprob: -5.455356597900391
    6. 'ans' → logprob: -5.955356597900391
    7. '[' → logprob: -6.580356597900391
    8. 's' → logprob: -7.205356597900391
    9. 'count' → logprob: -7.455356597900391
    10. ' for' → logprob: -7.705356597900391

Token 12: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.101354718208313
    2. '_' → logprob: -1.101354718208313
    3. ' =' → logprob: -1.101354718208313
    4. ' ' → logprob: -6.601354598999023
    5. '_=' → logprob: -7.101354598999023
    6. ' _' → logprob: -8.101354598999023
    7. '[' → logprob: -9.101354598999023
    8. 's' → logprob: -9.976354598999023
    9. '_space' → logprob: -10.476354598999023
    10. 'space' → logprob: -11.601354598999023

Token 13: ' ' (ID: 220)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.49953821301460266
    2. 'False' → logprob: -1.2495381832122803
    3. ' True' → logprob: -2.4995381832122803
    4. 'True' → logprob: -4.249538421630859
    5. '0' → logprob: -5.124538421630859
    6. ' ' → logprob: -5.499538421630859
    7. '1' → logprob: -9.74953842163086
    8. '"' → logprob: -11.87453842163086
    9. 'F' → logprob: -11.87453842163086
    10. '-' → logprob: -12.18703842163086

Token 14: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.26241347193717957
    2. 'True' → logprob: -1.512413501739502
    3. '0' → logprob: -4.637413501739502
    4. '1' → logprob: -7.387413501739502
    5. ' False' → logprob: -9.637413024902344
    6. ' True' → logprob: -10.387413024902344
    7. '-' → logprob: -11.512413024902344
    8. '[' → logprob: -12.387413024902344
    9. '-F' → logprob: -12.512413024902344
    10. 'F' → logprob: -12.637413024902344

Token 15: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5333220958709717
    2. ' for' → logprob: -0.9083220958709717
    3. '\n' → logprob: -5.033322334289551
    4. '
' → logprob: -6.033322334289551
    5. '```' → logprob: -7.533322334289551
    6. '' → logprob: -8.65832233428955
    7. '<|end|>' → logprob: -8.90832233428955
    8. ' 
' → logprob: -8.90832233428955
    9. '\' → logprob: -9.28332233428955
    10. ' ' → logprob: -9.90832233428955

Token 16: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0019819256849586964
    2. ' for' → logprob: -6.751981735229492
    3. '\n' → logprob: -7.626981735229492
    4. '```' → logprob: -8.126981735229492
    5. '
' → logprob: -10.751981735229492
    6. '`' → logprob: -13.501981735229492
    7. '``' → logprob: -13.501981735229492
    8. '' → logprob: -13.626981735229492
    9. '\' → logprob: -13.876981735229492
    10. 'i' → logprob: -14.376981735229492

Token 17: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1157974898815155
    2. ' i' → logprob: -2.240797519683838
    3. '  ' → logprob: -5.865797519683838
    4. 'i' → logprob: -9.99079704284668
    5. '_' → logprob: -10.74079704284668
    6. ' ‌' → logprob: -11.24079704284668
    7. ' _' → logprob: -11.74079704284668
    8. ' )' → logprob: -11.99079704284668
    9. ' N' → logprob: -11.99079704284668
    10. ' I' → logprob: -12.61579704284668

Token 18: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12157857418060303
    2. 'in' → logprob: -2.4965786933898926
    3. ' ' → logprob: -3.4965786933898926
    4. '  ' → logprob: -7.121578693389893
    5. '<|end|>' → logprob: -7.496578693389893
    6. '[' → logprob: -9.496578216552734
    7. ')' → logprob: -9.996578216552734
    8. '_' → logprob: -10.121578216552734
    9. ' i' → logprob: -10.121578216552734
    10. ' <' → logprob: -10.621578216552734

Token 19: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10040280222892761
    2. 'range' → logprob: -2.35040283203125
    3. ' A' → logprob: -8.72540283203125
    4. 'A' → logprob: -10.97540283203125
    5. '(range' → logprob: -12.22540283203125
    6. ' xrange' → logprob: -12.60040283203125
    7. ' ' → logprob: -12.72540283203125
    8. '	range' → logprob: -12.72540283203125
    9. ')' → logprob: -14.10040283203125
    10. '_range' → logprob: -14.22540283203125

Token 20: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03053043782711029
    2. '(N' → logprob: -3.5305304527282715
    3. ' (' → logprob: -7.9055304527282715
    4. '(len' → logprob: -8.030529975891113
    5. '(n' → logprob: -9.905529975891113
    6. '(
' → logprob: -10.655529975891113
    7. '(i' → logprob: -12.155529975891113
    8. '(A' → logprob: -13.905529975891113
    9. '(

' → logprob: -13.905529975891113
    10. ' ' → logprob: -14.030529975891113

Token 21: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5778328776359558
    2. '):' → logprob: -0.8278328776359558
    3. ' )' → logprob: -7.3278326988220215
    4. ' ):' → logprob: -7.4528326988220215
    5. '+' → logprob: -8.32783317565918
    6. ':' → logprob: -8.45283317565918
    7. '-' → logprob: -9.20283317565918
    8. '):
' → logprob: -10.32783317565918
    9. ' ' → logprob: -10.45283317565918
    10. ',' → logprob: -12.20283317565918

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.307625412940979
    2. ' ' → logprob: -2.0576252937316895
    3. '    ' → logprob: -2.8076252937316895
    4. ' if' → logprob: -3.0576252937316895
    5. '<|end|>' → logprob: -4.3076252937316895
    6. 'if' → logprob: -4.8076252937316895
    7. '    
' → logprob: -6.4326252937316895
    8. '```' → logprob: -6.5576252937316895
    9. ' 
' → logprob: -7.1826252937316895
    10. '[' → logprob: -7.1826252937316895

Token 23: ' num' (ID: 2269)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.42691943049430847
    2. '   ' → logprob: -1.6769194602966309
    3. 'if' → logprob: -2.676919460296631
    4. '    ' → logprob: -2.676919460296631
    5. ' ' → logprob: -4.301919460296631
    6. ' for' → logprob: -5.551919460296631
    7. ' ```' → logprob: -6.301919460296631
    8. '       ' → logprob: -7.176919460296631
    9. 'for' → logprob: -7.676919460296631
    10. '```' → logprob: -7.801919460296631

Token 24: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.15967829525470734
    2. 's' → logprob: -2.4096782207489014
    3. '[i' → logprob: -3.7846782207489014
    4. ' ' → logprob: -4.5346784591674805
    5. ' =' → logprob: -4.5346784591674805
    6. '   ' → logprob: -5.9096784591674805
    7. '  ' → logprob: -6.2846784591674805
    8. '[]' → logprob: -6.5346784591674805
    9. '    ' → logprob: -6.6596784591674805
    10. '=' → logprob: -6.9096784591674805

Token 25: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3133399486541748
    2. 'int' → logprob: -1.3133399486541748
    3. ' A' → logprob: -9.813340187072754
    4. 'A' → logprob: -11.438340187072754
    5. ' ' → logprob: -12.563340187072754
    6. '   ' → logprob: -12.813340187072754
    7. ' i' → logprob: -13.688340187072754
    8. '(int' → logprob: -13.813340187072754
    9. '[int' → logprob: -14.438340187072754
    10. ' float' → logprob: -14.688340187072754

Token 26: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.17979779839515686
    2. '(' → logprob: -1.8047977685928345
    3. '(
' → logprob: -10.679798126220703
    4. ' (' → logprob: -11.679798126220703
    5. '('' → logprob: -12.304798126220703
    6. 'A' → logprob: -12.554798126220703
    7. ')' → logprob: -13.054798126220703
    8. '(

' → logprob: -13.054798126220703
    9. '(a' → logprob: -13.554798126220703
    10. '(S' → logprob: -13.554798126220703

Token 27: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.05498123914003372
    2. '[' → logprob: -2.929981231689453
    3. ')' → logprob: -10.304981231689453
    4. '[I' → logprob: -10.679981231689453
    5. '[
' → logprob: -11.179981231689453
    6. ' [' → logprob: -11.429981231689453
    7. '[num' → logprob: -12.054981231689453
    8. '\[' → logprob: -13.054981231689453
    9. 'i' → logprob: -13.679981231689453
    10. '[j' → logprob: -13.679981231689453

Token 28: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0021512117236852646
    2. ')' → logprob: -6.377151012420654
    3. ']' → logprob: -8.002151489257812
    4. '])
' → logprob: -10.002151489257812
    5. ' ])' → logprob: -10.752151489257812
    6. '))' → logprob: -11.002151489257812
    7. ')])' → logprob: -11.627151489257812
    8. ']))' → logprob: -11.877151489257812
    9. ')]' → logprob: -12.252151489257812
    10. ''])' → logprob: -12.627151489257812

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1415208876132965
    2. ' ' → logprob: -3.0165209770202637
    3. '<|end|>' → logprob: -3.0165209770202637
    4. '    ' → logprob: -3.8915209770202637
    5. ' if' → logprob: -6.141520977020264
    6. '    
' → logprob: -6.266520977020264
    7. ')' → logprob: -6.266520977020264
    8. '  ' → logprob: -6.391520977020264
    9. '```' → logprob: -6.516520977020264
    10. ' 
' → logprob: -6.641520977020264

Token 30: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11896231770515442
    2. ' if' → logprob: -2.618962287902832
    3. 'if' (adapté à ' if') → logprob: -4.368962287902832
    4. '    ' → logprob: -4.743962287902832
    5. ' ' → logprob: -5.118962287902832
    6. '```' → logprob: -5.368962287902832
    7. '<|end|>' → logprob: -5.618962287902832
    8. '    
' → logprob: -7.243962287902832
    9. '  ' → logprob: -7.493962287902832
    10. '       ' → logprob: -7.868962287902832

Token 31: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.016937607899308205
    2. ' ' → logprob: -4.766937732696533
    3. ' flag' → logprob: -5.641937732696533
    4. 'num' → logprob: -5.766937732696533
    5. ' not' → logprob: -6.516937732696533
    6. 'flag' → logprob: -9.766937255859375
    7. '(num' → logprob: -11.141937255859375
    8. ' (' → logprob: -11.141937255859375
    9. ' ' → logprob: -11.891937255859375
    10. ' i' → logprob: -12.266937255859375

Token 32: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.9081792831420898
    2. ' ==' → logprob: -1.0331792831420898
    3. '%' → logprob: -2.03317928314209
    4. ' >' → logprob: -3.03317928314209
    5. '==' → logprob: -3.28317928314209
    6. ' ' → logprob: -4.40817928314209
    7. '>' → logprob: -5.28317928314209
    8. ' <' → logprob: -5.40817928314209
    9. ' >=' → logprob: -7.15817928314209
    10. ' <=' → logprob: -7.28317928314209

Token 33: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5776116847991943
    2. '2' → logprob: -0.8276116847991943
    3. '3' → logprob: -6.452611923217773
    4. '4' → logprob: -10.327611923217773
    5. '5' → logprob: -11.077611923217773
    6. '7' → logprob: -11.452611923217773
    7. '10' → logprob: -11.577611923217773
    8. '1' → logprob: -11.827611923217773
    9. '6' → logprob: -12.702611923217773
    10. '```' → logprob: -13.265111923217773

Token 34: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011484894901514053
    2. '3' → logprob: -4.8864850997924805
    3. ' ' → logprob: -5.8864850997924805
    4. '10' → logprob: -7.6364850997924805
    5. '5' → logprob: -8.76148509979248
    6. '7' → logprob: -8.88648509979248
    7. '19' → logprob: -9.01148509979248
    8. '4' → logprob: -9.51148509979248
    9. '6' → logprob: -10.76148509979248
    10. '13' → logprob: -11.63648509979248

Token 35: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10027157515287399
    2. '==' → logprob: -2.475271463394165
    3. ' !=' → logprob: -4.725271701812744
    4. ' ' → logprob: -6.600271701812744
    5. '!=' → logprob: -6.975271701812744
    6. '=' → logprob: -9.975271224975586
    7. ' =' → logprob: -10.975271224975586
    8. '0' → logprob: -11.600271224975586
    9. ':' → logprob: -11.600271224975586
    10. ')' → logprob: -12.350271224975586

Token 36: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.020582415163517
    2. '0' → logprob: -3.895582437515259
    3. '1' → logprob: -10.14558219909668
    4. '<|end|>' → logprob: -14.39558219909668
    5. '```' → logprob: -15.52058219909668
    6. ' ' → logprob: -15.95808219909668
    7. ')' → logprob: -16.52058219909668
    8. ' 

' → logprob: -17.08308219909668
    9. '2' → logprob: -17.27058219909668
    10. ' 
' → logprob: -17.33308219909668

Token 37: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.027764949947595596
    2. ' ' → logprob: -3.6527650356292725
    3. '1' → logprob: -6.527764797210693
    4. '2' → logprob: -14.277765274047852
    5. '```' → logprob: -14.715265274047852
    6. '3' → logprob: -17.40276527404785
    7. '=' → logprob: -17.84026527404785
    8. '  ' → logprob: -17.90276527404785
    9. ''s' → logprob: -17.96526527404785
    10. '==' → logprob: -18.02776527404785

Token 38: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001637300301808864
    2. ' :' → logprob: -9.500164031982422
    3. ' and' → logprob: -10.500164031982422
    4. ':
' → logprob: -10.625164031982422
    5. '       ' → logprob: -11.125164031982422
    6. '):' → logprob: -11.625164031982422
    7. '   ' → logprob: -11.875164031982422
    8. 'and' → logprob: -13.250164031982422
    9. ':**' → logprob: -13.750164031982422
    10. '    ' → logprob: -14.125164031982422

Token 39: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03582990542054176
    2. '   ' → logprob: -3.910830020904541
    3. ' ' → logprob: -4.785830020904541
    4. '    ' → logprob: -5.410830020904541
    5. ' flag' → logprob: -7.535830020904541
    6. '        ' → logprob: -8.160829544067383
    7. '     ' → logprob: -8.160829544067383
    8. 'flag' → logprob: -8.285829544067383
    9. '        
' → logprob: -8.660829544067383
    10. ' 
' → logprob: -9.160829544067383

Token 40: ' if' (ID: 538)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.9603224992752075
    2. ' flag' → logprob: -1.2103224992752075
    3. 'flag' → logprob: -1.2103224992752075
    4. '       ' → logprob: -5.335322380065918
    5. ' ' → logprob: -5.585322380065918
    6. '    
' → logprob: -6.335322380065918
    7. ' \' → logprob: -6.460322380065918
    8. '\n' → logprob: -6.710322380065918
    9. '        
' → logprob: -6.710322380065918
    10. '   ' → logprob: -6.835322380065918

Token 41: ' num' (ID: 2269)
  Prédit: ' flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.03229020535945892
    2. 'flag' → logprob: -3.78229022026062
    3. ' num' → logprob: -5.157289981842041
    4. ' ' → logprob: -6.407289981842041
    5. ' not' → logprob: -6.782289981842041
    6. '(flag' → logprob: -8.7822904586792
    7. '	flag' → logprob: -9.6572904586792
    8. 'num' → logprob: -9.6572904586792
    9. ' ' → logprob: -10.0322904586792
    10. ' A' → logprob: -10.4072904586792

Token 42: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.7403872013092041
    2. ' ==' → logprob: -1.240387201309204
    3. ' ' → logprob: -1.740387201309204
    4. ' >' → logprob: -3.490387201309204
    5. ' !=' → logprob: -4.490386962890625
    6. '%' → logprob: -4.740386962890625
    7. '==' → logprob: -5.365386962890625
    8. '>' → logprob: -6.865386962890625
    9. ' <' → logprob: -7.240386962890625
    10. ' >=' → logprob: -7.490386962890625

Token 43: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3157224655151367
    2. '3' → logprob: -2.1907224655151367
    3. '2' → logprob: -2.3157224655151367
    4. '4' → logprob: -2.8157224655151367
    5. '10' → logprob: -9.315722465515137
    6. '20' → logprob: -9.565722465515137
    7. '7' → logprob: -10.565722465515137
    8. '8' → logprob: -10.565722465515137
    9. '5' → logprob: -10.940722465515137
    10. '6' → logprob: -11.190722465515137

Token 44: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.011052886955440044
    2. '4' → logprob: -4.761053085327148
    3. ' ' → logprob: -7.011053085327148
    4. '5' → logprob: -7.511053085327148
    5. '2' → logprob: -8.136053085327148
    6. '6' → logprob: -8.261053085327148
    7. '10' → logprob: -8.511053085327148
    8. '7' → logprob: -10.261053085327148
    9. '   ' → logprob: -10.761053085327148
    10. '8' → logprob: -10.823553085327148

Token 45: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3245691955089569
    2. ' !=' → logprob: -1.3245692253112793
    3. '==' → logprob: -4.699569225311279
    4. '!=' → logprob: -6.574569225311279
    5. ' ' → logprob: -7.324569225311279
    6. ' !' → logprob: -11.324568748474121
    7. '=' → logprob: -11.574568748474121
    8. ' =' → logprob: -11.574568748474121
    9. ' ' → logprob: -11.574568748474121
    10. ' or' → logprob: -11.949568748474121

Token 46: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3133501708507538
    2. '0' → logprob: -1.3133502006530762
    3. '=' → logprob: -9.688349723815918
    4. ' ' → logprob: -11.563349723815918
    5. '1' → logprob: -12.063349723815918
    6. ' =' → logprob: -12.500849723815918
    7. '2' → logprob: -13.438349723815918
    8. '3' → logprob: -14.063349723815918
    9. '  ' → logprob: -14.500849723815918
    10. '<|end|>' → logprob: -14.688349723815918

Token 47: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.28120100498199463
    2. ' ' → logprob: -1.4062010049819946
    3. '1' → logprob: -10.781201362609863
    4. '```' → logprob: -12.156201362609863
    5. '2' → logprob: -12.281201362609863
    6. '=' → logprob: -12.843701362609863
    7. '3' → logprob: -12.968701362609863
    8. '  ' → logprob: -13.781201362609863
    9. '<|end|>' → logprob: -13.968701362609863
    10. ' ' → logprob: -14.218701362609863

Token 48: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012238960713148117
    2. ' and' → logprob: -5.3872389793396
    3. ' or' → logprob: -5.3872389793396
    4. '           ' → logprob: -6.3872389793396
    5. '       ' → logprob: -7.6372389793396
    6. ':
' → logprob: -7.7622389793396
    7. ' :' → logprob: -8.262238502502441
    8. 'and' → logprob: -9.762238502502441
    9. '):' → logprob: -10.387238502502441
    10. '        ' → logprob: -10.637238502502441

Token 49: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.04860837012529373
    2. 'num' → logprob: -3.0486083030700684
    3. ' ' → logprob: -12.048608779907227
    4. ' flag' → logprob: -12.173608779907227
    5. 'flag' → logprob: -12.673608779907227
    6. ' ' → logprob: -12.673608779907227
    7. '	num' → logprob: -13.548608779907227
    8. 'n' → logprob: -14.423608779907227
    9. '<num' → logprob: -14.798608779907227
    10. '(num' → logprob: -15.423608779907227

Token 50: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.016148388385772705
    2. '%' → logprob: -4.141148567199707
    3. ' ' → logprob: -9.391148567199707
    4. ' !=' → logprob: -10.641148567199707
    5. '!=' → logprob: -12.766148567199707
    6. ' ==' → logprob: -14.516148567199707
    7. ' ' → logprob: -14.766148567199707
    8. '  ' → logprob: -14.953648567199707
    9. ' %=' → logprob: -15.203648567199707
    10. '==' → logprob: -15.391148567199707

Token 51: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.16440646350383759
    2. ' ' → logprob: -1.914406418800354
    3. '7' → logprob: -6.1644062995910645
    4. '9' → logprob: -6.5394062995910645
    5. '2' → logprob: -7.6644062995910645
    6. '10' → logprob: -9.664406776428223
    7. '4' → logprob: -10.414406776428223
    8. '  ' → logprob: -11.039406776428223
    9. '<|end|>' → logprob: -11.539406776428223
    10. '59' → logprob: -11.664406776428223

Token 52: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0017729965038597584
    2. '4' → logprob: -6.751772880554199
    3. ' ' → logprob: -7.501772880554199
    4. '2' → logprob: -10.3767728805542
    5. '7' → logprob: -12.0017728805542
    6. '9' → logprob: -12.7517728805542
    7. '５' → logprob: -13.0017728805542
    8. '59' → logprob: -13.5017728805542
    9. '```' → logprob: -13.5017728805542
    10. '  ' → logprob: -13.8767728805542

Token 53: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.07020317763090134
    2. ' ==' → logprob: -2.9452030658721924
    3. '!=' → logprob: -4.4452033042907715
    4. '==' → logprob: -5.6952033042907715
    5. ' ' → logprob: -9.320202827453613
    6. '<|end|>' → logprob: -12.445202827453613
    7. '=' → logprob: -12.945202827453613
    8. ' !' → logprob: -13.070202827453613
    9. ')!=' → logprob: -13.320202827453613
    10. '0' → logprob: -13.320202827453613

Token 54: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6326030492782593
    2. '0' → logprob: -0.7576030492782593
    3. '=' → logprob: -13.75760269165039
    4. '  ' → logprob: -14.63260269165039
    5. '   ' → logprob: -15.07010269165039
    6. '```' → logprob: -15.13260269165039
    7. ' ' → logprob: -15.25760269165039
    8. '==' → logprob: -15.63260269165039
    9. '1' → logprob: -15.75760269165039
    10. '	' → logprob: -15.94510269165039

Token 55: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0232679583132267
    2. ' ' → logprob: -3.773267984390259
    3. '```' → logprob: -11.58576774597168
    4. '   ' → logprob: -12.77326774597168
    5. '  ' → logprob: -13.14826774597168
    6. '=' → logprob: -13.96076774597168
    7. '``' → logprob: -14.02326774597168
    8. ' ' → logprob: -15.14826774597168
    9. ')' → logprob: -15.21076774597168
    10. '    ' → logprob: -15.21076774597168

Token 56: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002922022540587932
    2. ':
' → logprob: -9.25029182434082
    3. '       ' → logprob: -9.62529182434082
    4. ' :' → logprob: -9.87529182434082
    5. ' and' → logprob: -10.25029182434082
    6. '           ' → logprob: -10.75029182434082
    7. '):' → logprob: -11.50029182434082
    8. ' or' → logprob: -12.25029182434082
    9. '   ' → logprob: -13.50029182434082
    10. ':return' → logprob: -14.00029182434082

Token 57: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021997399628162384
    2. '       ' → logprob: -3.8969974517822266
    3. ' flag' → logprob: -7.271997451782227
    4. 'flag' → logprob: -8.396997451782227
    5. '```' → logprob: -8.771997451782227
    6. '   ' → logprob: -9.521997451782227
    7. '	       ' → logprob: -9.646997451782227
    8. '          ' → logprob: -10.021997451782227
    9. '               ' → logprob: -10.521997451782227
    10. ' continue' → logprob: -11.021997451782227

Token 58: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' (adapté à ' flag') → logprob: -0.39767786860466003
    2. ' flag' → logprob: -1.1476778984069824
    3. '   ' → logprob: -5.397677898406982
    4. '           ' → logprob: -5.522677898406982
    5. '       ' → logprob: -6.647677898406982
    6. '	flag' → logprob: -7.397677898406982
    7. '               ' → logprob: -9.897677421569824
    8. '    ' → logprob: -9.897677421569824
    9. ' ' → logprob: -10.397677421569824
    10. '```' → logprob: -10.647677421569824

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39592787623405457
    2. '=' → logprob: -1.145927906036377
    3. ' +=' → logprob: -4.895927906036377
    4. '+=' → logprob: -6.520927906036377
    5. '+' → logprob: -9.770927429199219
    6. ' ' → logprob: -12.020927429199219
    7. ' |=' → logprob: -13.145927429199219
    8. ' +' → logprob: -14.520927429199219
    9. '＝' → logprob: -15.395927429199219
    10. ' =
' → logprob: -15.520927429199219

Token 60: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031797364354133606
    2. ' ' → logprob: -5.753179550170898
    3. '0' → logprob: -14.753179550170898
    4. ' True' → logprob: -14.878179550170898
    5. '   ' → logprob: -15.253179550170898
    6. '=' → logprob: -15.565679550170898
    7. 'True' → logprob: -15.628179550170898
    8. 'flag' → logprob: -15.628179550170898
    9. ' flag' → logprob: -16.6906795501709
    10. '+' → logprob: -16.7531795501709

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00019185843120794743
    2. '-' → logprob: -8.750191688537598
    3. ' ' → logprob: -11.000191688537598
    4. '0' → logprob: -12.000191688537598
    5. 'True' → logprob: -12.250191688537598
    6. 'flag' → logprob: -13.500191688537598
    7. ' -' → logprob: -14.187691688537598
    8. 'i' → logprob: -14.187691688537598
    9. '2' → logprob: -14.250191688537598
    10. 'num' → logprob: -14.562691688537598

Token 62: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8477479815483093
    2. '           ' → logprob: -1.722748041152954
    3. '   ' → logprob: -2.472748041152954
    4. '<|end|>' → logprob: -2.847748041152954
    5. '       ' → logprob: -3.222748041152954
    6. '    ' → logprob: -3.222748041152954
    7. ' 
' → logprob: -3.347748041152954
    8. '
' → logprob: -3.597748041152954
    9. '\n' → logprob: -3.972748041152954
    10. ' break' → logprob: -4.347747802734375

Token 63: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015131254680454731
    2. '       ' → logprob: -5.76513147354126
    3. '            
' → logprob: -5.89013147354126
    4. ' 
' → logprob: -6.26513147354126
    5. '            ' → logprob: -6.51513147354126
    6. 'print' → logprob: -6.76513147354126
    7. '               ' → logprob: -6.76513147354126
    8. '```' → logprob: -7.01513147354126
    9. ' ' → logprob: -7.51513147354126
    10. '<|end|>' → logprob: -7.89013147354126

Token 64: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.45287245512008667
    2. 'break' (adapté à ' break') → logprob: -1.3278725147247314
    3. '           ' → logprob: -2.7028725147247314
    4. '               ' → logprob: -4.202872276306152
    5. '            ' → logprob: -5.327872276306152
    6. '   ' → logprob: -5.452872276306152
    7. '	break' → logprob: -5.952872276306152
    8. '       ' → logprob: -6.202872276306152
    9. 'b' → logprob: -6.827872276306152
    10. '    ' → logprob: -7.202872276306152

Token 65: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6640685796737671
    2. 'if' → logprob: -2.4140686988830566
    3. ' 
' → logprob: -2.5390686988830566
    4. '
' → logprob: -2.7890686988830566
    5. '```' → logprob: -2.9140686988830566
    6. 'p' → logprob: -3.0390686988830566
    7. '\n' → logprob: -3.4140686988830566
    8. ' ' → logprob: -3.7890686988830566
    9. 'else' → logprob: -3.7890686988830566
    10. '#' → logprob: -4.789068698883057

Token 66: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5679752230644226
    2. 'if' → logprob: -1.9429752826690674
    3. '
' → logprob: -2.9429752826690674
    4. 'else' → logprob: -3.0679752826690674
    5. ' 
' → logprob: -3.0679752826690674
    6. 'p' → logprob: -3.6929752826690674
    7. '#' → logprob: -3.9429752826690674
    8. '0' → logprob: -4.067975044250488
    9. '```' → logprob: -4.317975044250488
    10. '\n' → logprob: -4.567975044250488

Token 67: ' flag' (ID: 9641)
  Prédit: ' flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.014296194538474083
    2. 'flag' → logprob: -4.264296054840088
    3. ' not' → logprob: -9.014296531677246
    4. '(flag' → logprob: -12.389296531677246
    5. 'not' → logprob: -12.889296531677246
    6. ' ' → logprob: -13.014296531677246
    7. '	flag' → logprob: -13.639296531677246
    8. ' ' → logprob: -14.514296531677246
    9. '.flag' → logprob: -16.63929557800293
    10. ' flagged' → logprob: -16.76429557800293

Token 68: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.020779985934495926
    2. '==' → logprob: -3.895780086517334
    3. ':' → logprob: -9.020779609680176
    4. ' !=' → logprob: -9.645779609680176
    5. ' :' → logprob: -10.895779609680176
    6. ' ' → logprob: -11.145779609680176
    7. ' =' → logprob: -12.020779609680176
    8. '=' → logprob: -12.270779609680176
    9. ' >' → logprob: -13.270779609680176
    10. '!=' → logprob: -13.395779609680176

Token 69: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4859572649002075
    2. ' ' → logprob: -1.2359572649002075
    3. '1' → logprob: -2.360957145690918
    4. ' 
' → logprob: -14.173457145690918
    5. '  ' → logprob: -14.235957145690918
    6. '۰' → logprob: -14.673457145690918
    7. ' ' → logprob: -14.798457145690918
    8. '```' → logprob: -14.860957145690918
    9. '"' → logprob: -15.048457145690918
    10. ''' → logprob: -15.298457145690918

Token 70: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5244223475456238
    2. '1' → logprob: -0.8994223475456238
    3. ' ' → logprob: -6.6494221687316895
    4. '```' → logprob: -14.211922645568848
    5. '   ' → logprob: -15.024422645568848
    6. '01' → logprob: -15.086922645568848
    7. '０' → logprob: -15.524422645568848
    8. '' → logprob: -15.524422645568848
    9. '`' → logprob: -15.836922645568848
    10. '۰' → logprob: -15.836922645568848

Token 71: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001035191467963159
    2. ':
' → logprob: -6.876035213470459
    3. 'print' → logprob: -14.2510347366333
    4. '   ' → logprob: -14.3760347366333
    5. ' :' → logprob: -14.6260347366333
    6. ' print' → logprob: -14.8760347366333
    7. ':return' → logprob: -16.376035690307617
    8. ' and' → logprob: -16.751035690307617
    9. ':

' → logprob: -16.876035690307617
    10. ':**' → logprob: -17.001035690307617

Token 72: '   ' (ID: 271)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.07958657294511795
    2. 'print' → logprob: -2.5795865058898926
    3. '   ' → logprob: -7.329586505889893
    4. ' 
' → logprob: -11.57958698272705
    5. '	print' → logprob: -11.70458698272705
    6. '    ' → logprob: -11.95458698272705
    7. '       ' → logprob: -12.20458698272705
    8. '
' → logprob: -12.32958698272705
    9. '\n' → logprob: -12.82958698272705
    10. '```' → logprob: -13.57958698272705

Token 73: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.002214965643361211
    2. ' print' → logprob: -6.1272149085998535
    3. '   ' → logprob: -11.002215385437012
    4. 'pr' → logprob: -11.627215385437012
    5. 'prin' → logprob: -13.252215385437012
    6. 'prit' → logprob: -14.002215385437012
    7. 'Print' → logprob: -14.752215385437012
    8. '```' → logprob: -15.002215385437012
    9. 'pri' → logprob: -15.752215385437012
    10. 'p' → logprob: -16.002214431762695

Token 74: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31639283895492554
    2. '("' → logprob: -1.3163928985595703
    3. '('' → logprob: -5.81639289855957
    4. ' (' → logprob: -10.19139289855957
    5. ' ("' → logprob: -10.19139289855957
    6. '()' → logprob: -10.44139289855957
    7. '"' → logprob: -11.81639289855957
    8. '(True' → logprob: -11.94139289855957
    9. '(-' → logprob: -12.31639289855957
    10. '(
' → logprob: -12.31639289855957

Token 75: 'APP' (ID: 13444)
  Prédit: 'APP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'APP' → logprob: -0.004837718792259693
    2. 'True' → logprob: -5.629837512969971
    3. 'Yes' → logprob: -8.254837989807129
    4. 'OK' → logprob: -8.379837989807129
    5. 'YES' → logprob: -8.629837989807129
    6. ''' → logprob: -9.129837989807129
    7. 'DEN' → logprob: -9.379837989807129
    8. 'true' → logprob: -9.629837989807129
    9. 'Good' → logprob: -10.379837989807129
    10. 'TRUE' → logprob: -10.504837989807129

Token 76: 'RO' (ID: 2013)
  Prédit: 'RO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RO' → logprob: -0.0008933556382544339
    2. 'END' → logprob: -7.375893592834473
    3. 'R' → logprob: -8.375893592834473
    4. 'RUN' → logprob: -11.125893592834473
    5. 'LES' → logprob: -12.500893592834473
    6. 'RE' → logprob: -12.500893592834473
    7. 'LET' → logprob: -13.000893592834473
    8. 'rove' → logprob: -13.375893592834473
    9. 'ASS' → logprob: -13.500893592834473
    10. 'ROB' → logprob: -13.625893592834473

Token 77: 'VED' (ID: 85770)
  Prédit: 'VED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'VED' → logprob: -0.00472666509449482
    2. 'VE' → logprob: -5.379726886749268
    3. 'V' → logprob: -9.25472640991211
    4. 'OVED' → logprob: -11.75472640991211
    5. 'VAL' → logprob: -13.75472640991211
    6. 'ved' → logprob: -14.50472640991211
    7. 'VES' → logprob: -14.50472640991211
    8. 'VER' → logprob: -16.12972640991211
    9. 'Ved' → logprob: -16.12972640991211
    10. 'VI' → logprob: -16.12972640991211

Token 78: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.011115494184195995
    2. ')' → logprob: -4.511115550994873
    3. '')
' → logprob: -9.886115074157715
    4. '")' → logprob: -11.386115074157715
    5. '('' → logprob: -13.386115074157715
    6. ''' → logprob: -13.386115074157715
    7. '()' → logprob: -14.386115074157715
    8. '')
' → logprob: -14.386115074157715
    9. ')
' → logprob: -14.761115074157715
    10. 'else' → logprob: -16.13611602783203

Token 79: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0006299942615441978
    2. ' else' → logprob: -7.375629901885986
    3. 'elif' → logprob: -14.000630378723145
    4. '```' → logprob: -14.000630378723145
    5. '
' → logprob: -14.875630378723145
    6. '   ' → logprob: -15.250630378723145
    7. '	else' → logprob: -15.625630378723145
    8. '#else' → logprob: -16.000629425048828
    9. '_else' → logprob: -16.000629425048828
    10. '    
' → logprob: -16.250629425048828

Token 80: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010149452136829495
    2. ':
' → logprob: -7.001014709472656
    3. ' :' → logprob: -9.251014709472656
    4. '   ' → logprob: -12.751014709472656
    5. ' :
' → logprob: -12.751014709472656
    6. 'print' → logprob: -15.126014709472656
    7. ':
' → logprob: -15.376014709472656
    8. '():' → logprob: -15.876014709472656
    9. ' print' → logprob: -15.876014709472656
    10. ':

' → logprob: -16.251014709472656

Token 81: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08494174480438232
    2. '   ' → logprob: -2.709941864013672
    3. ' print' → logprob: -4.209941864013672
    4. '```' → logprob: -10.959941864013672
    5. '	print' → logprob: -11.334941864013672
    6. ' ' → logprob: -12.334941864013672
    7. '  ' → logprob: -12.834941864013672
    8. '    ' → logprob: -12.959941864013672
    9. '(print' → logprob: -13.334941864013672
    10. ''' → logprob: -13.584941864013672

Token 82: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0001149867384810932
    2. ' print' → logprob: -9.875115394592285
    3. 'RE' → logprob: -10.000115394592285
    4. ''' → logprob: -11.875115394592285
    5. '   ' → logprob: -11.875115394592285
    6. 'PRINT' → logprob: -13.375115394592285
    7. ' ' → logprob: -14.500115394592285
    8. '```' → logprob: -14.875115394592285
    9. 're' → logprob: -15.250115394592285
    10. '	print' → logprob: -15.375115394592285

Token 83: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.5760798454284668
    2. '(' → logprob: -0.8260798454284668
    3. '("' → logprob: -9.701080322265625
    4. '('(' → logprob: -9.951080322265625
    5. '()' → logprob: -11.076080322265625
    6. ' (' → logprob: -11.826080322265625
    7. ' ('' → logprob: -13.076080322265625
    8. '(('' → logprob: -13.576080322265625
    9. '("("' → logprob: -13.826080322265625
    10. '(
' → logprob: -14.076080322265625

Token 84: 'DEN' (ID: 109767)
  Prédit: 'RE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RE' → logprob: -0.3878628611564636
    2. 'DEN' → logprob: -1.1378629207611084
    3. 'NOT' → logprob: -7.762862682342529
    4. 'DIS' → logprob: -8.387863159179688
    5. ''' → logprob: -8.637863159179688
    6. 'FAILED' → logprob: -9.887863159179688
    7. 'FAIL' → logprob: -10.387863159179688
    8. 'DECL' → logprob: -10.887863159179688
    9. 'C' → logprob: -11.387863159179688
    10. 'WARNING' → logprob: -11.762863159179688

Token 85: 'IED' (ID: 17589)
  Prédit: 'IED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IED' → logprob: -0.00017469677550252527
    2. 'I' → logprob: -8.750174522399902
    3. 'Y' → logprob: -11.625174522399902
    4. 'ied' → logprob: -12.000174522399902
    5. '```' → logprob: -15.375174522399902
    6. '``' → logprob: -15.875174522399902
    7. 'IAL' → logprob: -16.12517547607422
    8. 'IE' → logprob: -16.37517547607422
    9. 'IES' → logprob: -16.50017547607422
    10. 'IABLE' → logprob: -16.87517547607422

Token 86: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.003182348096743226
    2. ')' → logprob: -5.753182411193848
    3. '")' → logprob: -12.628182411193848
    4. ''' → logprob: -14.378182411193848
    5. '')
' → logprob: -14.503182411193848
    6. '`)' → logprob: -16.62818145751953
    7. '}')' → logprob: -16.62818145751953
    8. '#' → logprob: -17.37818145751953
    9. '```' → logprob: -17.62818145751953
    10. '('' → logprob: -17.87818145751953


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 84
Tokens correctement prédits (1ère position, stricte): 43
Tokens correctement prédits (1ère position, avec adaptation): 46
Tokens correctement prédits (top 10): 75
Précision stricte (1ère position): 51.19%
Précision adaptée (1ère position): 54.76%
Précision (top 10): 89.29%
================================================================================
