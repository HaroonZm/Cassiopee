================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:37:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def get_amount(rank):
    return {1:300000,2:200000,3:100000}.get(rank,0)

X, Y = (int(i) for i in input().split())

total = 0

for n, val in enumerate([X, Y]):
    if n == 0: total += get_amount(val)
    else:
        if val == 1: total += 300000
        elif val == 2: total += 200000
        elif val == 3: total += 100000

def bonus(a, b):
    return 400000 if a == b == 1 else 0

total += bonus(X, Y)

print(total)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' get' (ID: 717)
  → Token d'amorce (pas de prédiction)

Token 2: '_amount' (ID: 29145)
  → Token d'amorce (pas de prédiction)

Token 3: '(rank' (ID: 157799)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.049604758620262146
    2. '_' → logprob: -3.049604654312134
    3. '```' → logprob: -7.924604892730713
    4. '():' → logprob: -8.924604415893555
    5. '(_' → logprob: -9.049604415893555
    6. '(amount' → logprob: -9.799604415893555
    7. '(_:' → logprob: -10.049604415893555
    8. ':' → logprob: -10.174604415893555
    9. '_amount' → logprob: -10.424604415893555
    10. '(a' → logprob: -10.799604415893555

Token 4: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08793298900127411
    2. '_' → logprob: -3.08793306350708
    3. ')' → logprob: -3.46293306350708
    4. ',' → logprob: -5.58793306350708
    5. ')_' → logprob: -6.46293306350708
    6. ':' → logprob: -7.46293306350708
    7. 's' → logprob: -7.96293306350708
    8. '(' → logprob: -8.962932586669922
    9. '_:' → logprob: -8.962932586669922
    10. '[' → logprob: -8.962932586669922

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2647433876991272
    2. '```' → logprob: -1.5147433280944824
    3. '   ' → logprob: -4.764743328094482
    4. '``' → logprob: -5.764743328094482
    5. '`:' → logprob: -8.26474380493164
    6. '":' → logprob: -9.01474380493164
    7. ':
' → logprob: -9.13974380493164
    8. '():' → logprob: -9.26474380493164
    9. '`' → logprob: -9.51474380493164
    10. '\' → logprob: -9.63974380493164

Token 6: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5230869650840759
    2. '```' → logprob: -1.1480870246887207
    3. '    ' → logprob: -3.2730870246887207
    4. ''' → logprob: -4.148087024688721
    5. ' ' → logprob: -4.648087024688721
    6. '       ' → logprob: -5.148087024688721
    7. '`' → logprob: -5.398087024688721
    8. '``' → logprob: -5.648087024688721
    9. ':' → logprob: -5.773087024688721
    10. '\' → logprob: -5.898087024688721

Token 7: ' {' (ID: 354)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.033676475286483765
    2. ' rank' → logprob: -4.033676624298096
    3. 'rank' → logprob: -4.283676624298096
    4. '  ' → logprob: -7.158676624298096
    5. '"' → logprob: -8.283676147460938
    6. ' None' → logprob: -8.783676147460938
    7. ' "' → logprob: -9.283676147460938
    8. ''' → logprob: -9.533676147460938
    9. '(rank' → logprob: -9.658676147460938
    10. '0' → logprob: -10.158676147460938

Token 8: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5088697671890259
    2. '       ' → logprob: -1.1338697671890259
    3. '   ' → logprob: -3.2588696479797363
    4. ''r' → logprob: -4.133869647979736
    5. '"' → logprob: -4.883869647979736
    6. 'rank' → logprob: -4.883869647979736
    7. ''\' → logprob: -5.383869647979736
    8. '1' → logprob: -7.758869647979736
    9. '0' → logprob: -7.883869647979736
    10. '(rank' → logprob: -7.883869647979736

Token 9: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00015633940347470343
    2. ' :' → logprob: -9.00015640258789
    3. ':return' → logprob: -11.25015640258789
    4. ':,' → logprob: -12.37515640258789
    5. ',' → logprob: -13.12515640258789
    6. '   ' → logprob: -13.25015640258789
    7. '1' → logprob: -13.50015640258789
    8. '':' → logprob: -13.75015640258789
    9. '0' → logprob: -13.87515640258789
    10. '2' → logprob: -14.00015640258789

Token 10: '300' (ID: 4095)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05037608742713928
    2. '100' → logprob: -3.6753761768341064
    3. ''' → logprob: -4.175375938415527
    4. ' '' → logprob: -4.925375938415527
    5. '"' → logprob: -7.550375938415527
    6. ' "' → logprob: -8.675375938415527
    7. '1' → logprob: -9.175375938415527
    8. '500' → logprob: -9.550375938415527
    9. '10' → logprob: -9.800375938415527
    10. '   ' → logprob: -10.050375938415527

Token 11: '000' (ID: 1302)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009581510093994439
    2. '}' → logprob: -7.00095796585083
    3. ',
' → logprob: -10.875958442687988
    4. '   ' → logprob: -11.375958442687988
    5. ' ,' → logprob: -12.125958442687988
    6. ',

' → logprob: -12.625958442687988
    7. ' ' → logprob: -13.250958442687988
    8. '0' → logprob: -13.500958442687988
    9. ' }' → logprob: -13.875958442687988
    10. ',
' → logprob: -14.500958442687988

Token 12: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000443420372903347
    2. '}' → logprob: -7.875443458557129
    3. ',
' → logprob: -10.125443458557129
    4. '   ' → logprob: -11.625443458557129
    5. ' ,' → logprob: -11.875443458557129
    6. ',

' → logprob: -12.625443458557129
    7. ' ' → logprob: -13.500443458557129
    8. ',
' → logprob: -14.500443458557129
    9. ' }' → logprob: -14.625443458557129
    10. '       ' → logprob: -15.000443458557129

Token 13: '2' (ID: 17)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20144304633140564
    2. '2' → logprob: -1.701443076133728
    3. '    ' → logprob: -10.82644271850586
    4. ' ' → logprob: -12.70144271850586
    5. 'space' → logprob: -13.32644271850586
    6. '```' → logprob: -13.82644271850586
    7. '   ' → logprob: -13.95144271850586
    8. '        ' → logprob: -14.07644271850586
    9. '3' → logprob: -14.20144271850586
    10. '20' → logprob: -15.07644271850586

Token 14: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.339278580620885e-06
    2. ':return' → logprob: -14.125001907348633
    3. ' :' → logprob: -14.250001907348633
    4. '00' → logprob: -15.375001907348633
    5. '0' → logprob: -15.625001907348633
    6. '50' → logprob: -16.500001907348633
    7. '000' → logprob: -16.625001907348633
    8. '```' → logprob: -17.375001907348633
    9. ':**' → logprob: -17.500001907348633
    10. '}:' → logprob: -17.500001907348633

Token 15: '200' (ID: 1179)
  Prédit: '200'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.3171277940273285
    2. '150' → logprob: -1.8171278238296509
    3. '250' → logprob: -2.6921277046203613
    4. ' ' → logprob: -3.6921277046203613
    5. '100' → logprob: -4.942127704620361
    6. '180' → logprob: -6.442127704620361
    7. '175' → logprob: -6.567127704620361
    8. '240' → logprob: -7.067127704620361
    9. '220' → logprob: -7.192127704620361
    10. '225' → logprob: -7.192127704620361

Token 16: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.18075919151306152
    2. '00' → logprob: -1.8057591915130615
    3. '0' → logprob: -6.930759429931641
    4. ',' → logprob: -10.93075942993164
    5. ' ' → logprob: -11.80575942993164
    6. ':' → logprob: -12.93075942993164
    7. '50' → logprob: -13.18075942993164
    8. '}' → logprob: -13.80575942993164
    9. '   ' → logprob: -13.80575942993164
    10. '001' → logprob: -13.80575942993164

Token 17: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.9153885558771435e-06
    2. ' ,' → logprob: -12.875005722045898
    3. '3' → logprob: -13.625005722045898
    4. '}' → logprob: -13.625005722045898
    5. '   ' → logprob: -14.625005722045898
    6. ',
' → logprob: -16.0000057220459
    7. '```' → logprob: -16.0000057220459
    8. ',

' → logprob: -16.5000057220459
    9. '1' → logprob: -16.8750057220459
    10. ' ' → logprob: -17.1250057220459

Token 18: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.012511178851127625
    2. ' ' → logprob: -4.387511253356934
    3. '   ' → logprob: -14.012511253356934
    4. '300' → logprob: -15.512511253356934
    5. '4' → logprob: -15.637511253356934
    6. '1' → logprob: -15.762511253356934
    7. '  ' → logprob: -15.887511253356934
    8. '```' → logprob: -16.262510299682617
    9. '    ' → logprob: -16.762510299682617
    10. ' ' → logprob: -17.012510299682617

Token 19: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.246537173457909e-06
    2. ' :' → logprob: -12.875003814697266
    3. '000' → logprob: -14.375003814697266
    4. '0' → logprob: -15.625003814697266
    5. ':return' → logprob: -15.750003814697266
    6. '300' → logprob: -16.250003814697266
    7. '```' → logprob: -16.250003814697266
    8. ',' → logprob: -16.500003814697266
    9. ':**' → logprob: -16.750003814697266
    10. '}:' → logprob: -16.875003814697266

Token 20: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.29270055890083313
    2. '150' → logprob: -1.4177005290985107
    3. '120' → logprob: -5.29270076751709
    4. ' ' → logprob: -5.66770076751709
    5. '125' → logprob: -6.79270076751709
    6. '500' → logprob: -7.79270076751709
    7. '130' → logprob: -8.29270076751709
    8. '140' → logprob: -8.54270076751709
    9. '160' → logprob: -8.91770076751709
    10. '110' → logprob: -9.04270076751709

Token 21: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.00425754627212882
    2. '00' → logprob: -5.504257678985596
    3. '0' → logprob: -8.754257202148438
    4. ',' → logprob: -11.129257202148438
    5. '}' → logprob: -12.629257202148438
    6. '_' → logprob: -13.629257202148438
    7. '```' → logprob: -14.004257202148438
    8. '００' → logprob: -14.879257202148438
    9. '۰۰' → logprob: -15.254257202148438
    10. ' ' → logprob: -15.379257202148438

Token 22: '}.' (ID: 16255)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.682489275932312
    2. '}' → logprob: -0.932489275932312
    3. '}[' → logprob: -2.3074893951416016
    4. '}.' → logprob: -6.557489395141602
    5. '   ' → logprob: -9.432489395141602
    6. ' }' → logprob: -10.557489395141602
    7. '```' → logprob: -11.432489395141602
    8. '       ' → logprob: -12.432489395141602
    9. '},' → logprob: -12.557489395141602
    10. '4' → logprob: -13.057489395141602

Token 23: 'get' (ID: 522)
  Prédit: 'get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: 0.0
    2. '.get' → logprob: -17.375
    3. ' get' → logprob: -17.625
    4. '```' → logprob: -18.0
    5. 'getitem' → logprob: -20.75
    6. '`' → logprob: -22.625
    7. '|get' → logprob: -22.875
    8. '	get' → logprob: -22.875
    9. '_get' → logprob: -23.0
    10. 'gett' → logprob: -23.125

Token 24: '(rank' (ID: 157799)
  Prédit: '(rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rank' → logprob: -0.0006293982733041048
    2. '(' → logprob: -7.375629425048828
    3. 'rank' → logprob: -14.250629425048828
    4. ' (' → logprob: -15.000629425048828
    5. '((' → logprob: -15.250629425048828
    6. '(token' → logprob: -15.500629425048828
    7. '(get' → logprob: -15.500629425048828
    8. '(user' → logprob: -15.625629425048828
    9. '(r' → logprob: -15.750629425048828
    10. '(level' → logprob: -16.125629425048828

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47550681233406067
    2. ')' → logprob: -0.9755067825317383
    3. ',None' → logprob: -6.725506782531738
    4. '(rank' → logprob: -8.850506782531738
    5. 'None' → logprob: -10.225506782531738
    6. 'rank' → logprob: -11.350506782531738
    7. ',)' → logprob: -11.725506782531738
    8. '(None' → logprob: -12.350506782531738
    9. ' ,' → logprob: -12.475506782531738
    10. '))' → logprob: -12.725506782531738

Token 26: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0025783937890082598
    2. ' ' → logprob: -6.002578258514404
    3. '100' → logprob: -10.002578735351562
    4. '500' → logprob: -10.627578735351562
    5. ')' → logprob: -11.752578735351562
    6. '300' → logprob: -12.252578735351562
    7. '200' → logprob: -12.752578735351562
    8. '   ' → logprob: -13.127578735351562
    9. '250' → logprob: -13.127578735351562
    10. '  ' → logprob: -13.377578735351562

Token 27: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -15.500000953674316
    3. '}' → logprob: -16.375
    4. '`)' → logprob: -16.375
    5. ')return' → logprob: -17.0
    6. '))' → logprob: -17.25
    7. '})' → logprob: -17.375
    8. '')' → logprob: -17.5
    9. ')
' → logprob: -17.75
    10. ')}' → logprob: -17.875

Token 28: 'X' (ID: 55)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 29: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8162536025047302
    2. '=' → logprob: -1.316253662109375
    3. '_' → logprob: -2.066253662109375
    4. '(' → logprob: -2.816253662109375
    5. ',' → logprob: -3.066253662109375
    6. '.' → logprob: -3.816253662109375
    7. '[' → logprob: -4.191253662109375
    8. ')' → logprob: -4.691253662109375
    9. 'Y' → logprob: -6.066253662109375
    10. 'y' → logprob: -6.941253662109375

Token 30: ' Y' (ID: 865)
  Prédit: ' Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Y' → logprob: -0.4360198378562927
    2. 'Y' → logprob: -1.3110198974609375
    3. 'y' → logprob: -2.9360198974609375
    4. ' y' → logprob: -3.6860198974609375
    5. 'rank' → logprob: -6.3110198974609375
    6. ' rank' → logprob: -6.4360198974609375
    7. ' ' → logprob: -7.3110198974609375
    8. 'amount' → logprob: -7.8110198974609375
    9. ' amount' → logprob: -8.186019897460938
    10. ' =' → logprob: -8.561019897460938

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014665704220533371
    2. '=' → logprob: -4.389665603637695
    3. ',' → logprob: -7.014665603637695
    4. ')' → logprob: -7.514665603637695
    5. ' ' → logprob: -7.639665603637695
    6. '[' → logprob: -9.389665603637695
    7. '<|end|>' → logprob: -9.764665603637695
    8. '_' → logprob: -10.764665603637695
    9. ' ,' → logprob: -11.264665603637695
    10. '  ' → logprob: -11.389665603637695

Token 32: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9754512310028076
    2. '100' → logprob: -0.9754512310028076
    3. '10' → logprob: -2.4754512310028076
    4. 'map' → logprob: -2.9754512310028076
    5. '1' → logprob: -3.2254512310028076
    6. ' ' → logprob: -3.4754512310028076
    7. '5' → logprob: -4.100451469421387
    8. '50' → logprob: -5.475451469421387
    9. ' map' → logprob: -5.475451469421387
    10. 'get' → logprob: -5.600451469421387

Token 33: 'int' (ID: 491)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0144217014312744
    2. '10' → logprob: -1.3894217014312744
    3. '1' → logprob: -1.5144217014312744
    4. '100' → logprob: -2.1394217014312744
    5. '5' → logprob: -4.139421463012695
    6. ' ' → logprob: -4.264421463012695
    7. '3' → logprob: -4.889421463012695
    8. ')' → logprob: -5.639421463012695
    9. 'get' → logprob: -5.764421463012695
    10. 'int' → logprob: -6.389421463012695

Token 34: '(i' (ID: 3649)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.004796307533979416
    2. '(' → logprob: -5.629796504974365
    3. ')' → logprob: -7.504796504974365
    4. '()' → logprob: -8.504796028137207
    5. '(x' → logprob: -8.629796028137207
    6. 'input' → logprob: -8.879796028137207
    7. ' )' → logprob: -10.629796028137207
    8. '(i' → logprob: -10.879796028137207
    9. '())' → logprob: -11.129796028137207
    10. ' input' → logprob: -11.379796028137207

Token 35: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002932750794570893
    2. 'input' → logprob: -8.500293731689453
    3. '.strip' → logprob: -10.250293731689453
    4. ' )' → logprob: -11.125293731689453
    5. '(input' → logprob: -11.250293731689453
    6. '))' → logprob: -11.500293731689453
    7. '())' → logprob: -12.750293731689453
    8. '.split' → logprob: -13.250293731689453
    9. '_input' → logprob: -13.250293731689453
    10. ' ' → logprob: -13.875293731689453

Token 36: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2714443504810333
    2. 'input' → logprob: -1.646444320678711
    3. '(input' → logprob: -3.771444320678711
    4. ' input' → logprob: -4.771444320678711
    5. ' for' → logprob: -4.896444320678711
    6. 'for' → logprob: -6.021444320678711
    7. '=input' → logprob: -6.521444320678711
    8. ' )' → logprob: -7.771444320678711
    9. ',input' → logprob: -7.771444320678711
    10. '()' → logprob: -8.146444320678711

Token 37: ' i' (ID: 575)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.007705888245254755
    2. 'input' → logprob: -4.8827056884765625
    3. ' range' → logprob: -10.257705688476562
    4. ' ' → logprob: -10.757705688476562
    5. ' user' → logprob: -11.257705688476562
    6. '(input' → logprob: -11.507705688476562
    7. '=input' → logprob: -12.507705688476562
    8. '<|end|>' → logprob: -12.632705688476562
    9. ' raw' → logprob: -13.257705688476562
    10. ' )' → logprob: -13.507705688476562

Token 38: ' in' (ID: 306)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.05166137218475342
    2. 'input' → logprob: -3.051661491394043
    3. ' in' → logprob: -6.301661491394043
    4. ' ' → logprob: -6.801661491394043
    5. ' range' → logprob: -10.426661491394043
    6. '  ' → logprob: -10.551661491394043
    7. 'in' → logprob: -10.926661491394043
    8. '	input' → logprob: -11.426661491394043
    9. '(input' → logprob: -11.676661491394043
    10. '=input' → logprob: -12.051661491394043

Token 39: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6326075196266174
    2. 'input' → logprob: -0.7576075196266174
    3. ' ' → logprob: -12.882607460021973
    4. '(input' → logprob: -13.382607460021973
    5. 'range' → logprob: -13.882607460021973
    6. ' range' → logprob: -14.132607460021973
    7. '<input' → logprob: -15.132607460021973
    8. '[' → logprob: -15.132607460021973
    9. '[input' → logprob: -15.632607460021973
    10. ')' → logprob: -15.757607460021973

Token 40: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.35368648171424866
    2. '().' → logprob: -1.6036864519119263
    3. '())' → logprob: -2.353686571121216
    4. '(' → logprob: -6.978686332702637
    5. '()).' → logprob: -8.478686332702637
    6. '()>' → logprob: -8.603686332702637
    7. '());' → logprob: -9.603686332702637
    8. '()[' → logprob: -9.853686332702637
    9. '()),' → logprob: -9.978686332702637
    10. '()]' → logprob: -10.228686332702637

Token 41: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001194275333546102
    2. 'strip' → logprob: -6.876194477081299
    3. 'rstrip' → logprob: -9.12619400024414
    4. ' split' → logprob: -9.87619400024414
    5. 'spl' → logprob: -14.87619400024414
    6. ')' → logprob: -15.12619400024414
    7. 'replace' → logprob: -15.37619400024414
    8. '(split' → logprob: -15.87619400024414
    9. ' strip' → logprob: -16.37619400024414
    10. 'read' → logprob: -16.50119400024414

Token 42: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0019132846500724554
    2. '()' → logprob: -6.376913070678711
    3. ')' → logprob: -8.626913070678711
    4. '()))' → logprob: -10.751913070678711
    5. '('' → logprob: -12.501913070678711
    6. '(' → logprob: -12.751913070678711
    7. ' ())' → logprob: -13.501913070678711
    8. '())
' → logprob: -14.001913070678711
    9. '))' → logprob: -14.501913070678711
    10. '();)' → logprob: -14.876913070678711

Token 43: 'total' (ID: 9577)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5426495671272278
    2. 'amount' → logprob: -1.417649507522583
    3. 'if' → logprob: -1.792649507522583
    4. 'result' → logprob: -5.542649745941162
    5. 'for' → logprob: -6.167649745941162
    6. 'answer' → logprob: -7.667649745941162
    7. 'score' → logprob: -7.792649745941162
    8. ' if' → logprob: -7.917649745941162
    9. 'price' → logprob: -8.167649269104004
    10. '<|end|>' → logprob: -8.292649269104004

Token 44: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.21766607463359833
    2. '_amount' → logprob: -1.7176660299301147
    3. '=' → logprob: -4.967666149139404
    4. ' =' → logprob: -5.467666149139404
    5. '_points' → logprob: -5.967666149139404
    6. '_sum' → logprob: -7.217666149139404
    7. '_score' → logprob: -8.092665672302246
    8. '_money' → logprob: -8.467665672302246
    9. '_total' → logprob: -9.342665672302246
    10. '_value' → logprob: -9.467665672302246

Token 45: ' ' (ID: 220)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.3083309233188629
    2. ' get' → logprob: -1.9333308935165405
    3. 'X' → logprob: -2.43333101272583
    4. ' X' → logprob: -4.18333101272583
    5. '0' → logprob: -5.18333101272583
    6. ' sum' → logprob: -5.80833101272583
    7. '300' → logprob: -5.93333101272583
    8. 'sum' → logprob: -5.93333101272583
    9. 'max' → logprob: -6.93333101272583
    10. ' max' → logprob: -7.05833101272583

Token 46: '0' (ID: 15)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.488110214471817
    2. 'X' → logprob: -0.9881101846694946
    3. '0' → logprob: -5.488110065460205
    4. 'max' → logprob: -5.613110065460205
    5. 'sum' → logprob: -5.613110065460205
    6. '300' → logprob: -7.238110065460205
    7. '100' → logprob: -7.488110065460205
    8. ' get' → logprob: -7.863110065460205
    9. '(X' → logprob: -8.488110542297363
    10. '(get' → logprob: -8.488110542297363

Token 47: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12690143287181854
    2. '
' → logprob: -2.376901388168335
    3. ' for' → logprob: -4.376901626586914
    4. '<|end|>' → logprob: -4.376901626586914
    5. 'if' → logprob: -7.251901626586914
    6. '\n' → logprob: -8.626901626586914
    7. '<|end|>' → logprob: -9.501901626586914
    8. '
' → logprob: -9.751901626586914
    9. ' 
' → logprob: -9.751901626586914
    10. '```' → logprob: -10.751901626586914

Token 48: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00015538577281404287
    2. ' for' → logprob: -9.125155448913574
    3. 'if' → logprob: -11.000155448913574
    4. 'rank' → logprob: -11.375155448913574
    5. 'total' → logprob: -11.625155448913574
    6. 'range' → logprob: -12.250155448913574
    7. 'while' → logprob: -13.125155448913574
    8. '<|end|>' → logprob: -14.375155448913574
    9. '
' → logprob: -14.500155448913574
    10. '```' → logprob: -14.625155448913574

Token 49: ' n' (ID: 297)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6115283966064453
    2. ' _' → logprob: -0.9865283966064453
    3. '_' → logprob: -2.8615283966064453
    4. ' rank' → logprob: -3.7365283966064453
    5. 'i' → logprob: -6.486528396606445
    6. 'rank' → logprob: -7.111528396606445
    7. ' ' → logprob: -7.236528396606445
    8. ' r' → logprob: -7.986528396606445
    9. ' x' → logprob: -10.236528396606445
    10. '_i' → logprob: -10.236528396606445

Token 50: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011167613789439201
    2. 'in' → logprob: -4.511167526245117
    3. ' ' → logprob: -9.261167526245117
    4. 'range' → logprob: -11.636167526245117
    5. 'n' → logprob: -12.386167526245117
    6. '_' → logprob: -13.386167526245117
    7. ',' → logprob: -13.636167526245117
    8. '  ' → logprob: -13.761167526245117
    9. '	in' → logprob: -13.761167526245117
    10. ' i' → logprob: -13.886167526245117

Token 51: ' val' (ID: 1459)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.5796101689338684
    2. ' rank' → logprob: -1.2046101093292236
    3. 'r' → logprob: -3.2046101093292236
    4. ' r' → logprob: -3.8296101093292236
    5. 'y' → logprob: -5.142110347747803
    6. 'score' → logprob: -5.329610347747803
    7. 'amount' → logprob: -5.579610347747803
    8. ' y' → logprob: -5.579610347747803
    9. 'p' → logprob: -5.642110347747803
    10. '_' → logprob: -5.704610347747803

Token 52: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.24207916855812073
    2. 'ue' → logprob: -1.6170791387557983
    3. ',' → logprob: -4.242079257965088
    4. 'in' → logprob: -6.367079257965088
    5. 'uer' → logprob: -8.49207878112793
    6. 'uel' → logprob: -9.11707878112793
    7. ' ' → logprob: -10.11707878112793
    8. 'ues' → logprob: -10.24207878112793
    9. '   ' → logprob: -11.49207878112793
    10. ' ,' → logprob: -11.49207878112793

Token 53: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.002504674717783928
    2. ' [(' → logprob: -6.752504825592041
    3. 'enumer' → logprob: -6.877504825592041
    4. ' zip' → logprob: -8.627504348754883
    5. '[(' → logprob: -10.502504348754883
    6. ' ' → logprob: -10.627504348754883
    7. ' get' → logprob: -10.877504348754883
    8. ' ((' → logprob: -11.627504348754883
    9. ' {(' → logprob: -11.877504348754883
    10. ' [' → logprob: -12.127504348754883

Token 54: '([' (ID: 5194)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.11830464005470276
    2. '([' → logprob: -2.49330472946167
    3. '(Y' → logprob: -4.24330472946167
    4. '(X' → logprob: -4.99330472946167
    5. '(get' → logprob: -5.36830472946167
    6. '((' → logprob: -6.61830472946167
    7. '(sorted' → logprob: -7.61830472946167
    8. '(' → logprob: -7.74330472946167
    9. '(input' → logprob: -8.243304252624512
    10. '(list' → logprob: -8.743304252624512

Token 55: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.02657429687678814
    2. 'get' → logprob: -3.7765743732452393
    3. 'int' → logprob: -6.52657413482666
    4. 'Y' → logprob: -6.90157413482666
    5. '*' → logprob: -8.27657413482666
    6. '100' → logprob: -8.27657413482666
    7. ' X' → logprob: -9.15157413482666
    8. '1' → logprob: -10.15157413482666
    9. '10' → logprob: -10.40157413482666
    10. ' get' → logprob: -10.65157413482666

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.349437952041626
    2. ',Y' → logprob: -1.224437952041626
    3. ' ,' → logprob: -7.099437713623047
    4. 'Y' → logprob: -9.849437713623047
    5. ',y' → logprob: -10.599437713623047
    6. ',N' → logprob: -11.224437713623047
    7. ',X' → logprob: -11.224437713623047
    8. ',
' → logprob: -11.974437713623047
    9. ',n' → logprob: -12.224437713623047
    10. '+' → logprob: -12.349437713623047

Token 57: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.2812221646308899
    2. ' Y' → logprob: -1.4062221050262451
    3. ' ' → logprob: -10.031222343444824
    4. '   ' → logprob: -11.531222343444824
    5. '	Y' → logprob: -12.656222343444824
    6. ',' → logprob: -12.718722343444824
    7. '    ' → logprob: -13.156222343444824
    8. '  ' → logprob: -13.406222343444824
    9. ',Y' → logprob: -13.593722343444824
    10. '

' → logprob: -14.343722343444824

Token 58: ']):
' (ID: 51989)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.4330407381057739
    2. ']):' → logprob: -1.058040738105774
    3. ']:' → logprob: -6.183040618896484
    4. ']' → logprob: -6.433040618896484
    5. '])' → logprob: -8.058040618896484
    6. '):' → logprob: -8.933040618896484
    7. ']):
' → logprob: -9.558040618896484
    8. '),' → logprob: -9.808040618896484
    9. ' ],' → logprob: -11.058040618896484
    10. ':],' → logprob: -11.308040618896484

Token 59: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13204513490200043
    2. ',' → logprob: -3.382045030593872
    3. '   ' → logprob: -3.382045030593872
    4. ':
' → logprob: -4.132045269012451
    5. ' :' → logprob: -4.257045269012451
    6. ' if' → logprob: -4.632045269012451
    7. ' ' → logprob: -5.632045269012451
    8. '
' → logprob: -6.257045269012451
    9. ' :
' → logprob: -6.257045269012451
    10. ' 
' → logprob: -6.382045269012451

Token 60: ' if' (ID: 538)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.2697869539260864
    2. 'total' → logprob: -2.144786834716797
    3. ' if' → logprob: -2.519786834716797
    4. ' ' → logprob: -4.144786834716797
    5. '   ' → logprob: -5.019786834716797
    6. ' amount' → logprob: -5.644786834716797
    7. ' n' → logprob: -5.769786834716797
    8. ' 
' → logprob: -6.019786834716797
    9. 'amount' → logprob: -6.144786834716797
    10. 'if' (adapté à ' if') → logprob: -6.144786834716797

Token 61: ' n' (ID: 297)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.06840596348047256
    2. ' n' → logprob: -3.443405866622925
    3. 'val' → logprob: -3.443405866622925
    4. 'n' → logprob: -6.193406105041504
    5. ' get' → logprob: -9.818406105041504
    6. ' (' → logprob: -10.318406105041504
    7. ' ' → logprob: -10.568406105041504
    8. '(val' → logprob: -11.755906105041504
    9. 'get' → logprob: -11.818406105041504
    10. '	val' → logprob: -12.068406105041504

Token 62: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3015379011631012
    2. '==' → logprob: -1.9265378713607788
    3. '+' → logprob: -2.4265379905700684
    4. ' <' → logprob: -4.176537990570068
    5. ' +' → logprob: -5.176537990570068
    6. ' ' → logprob: -6.301537990570068
    7. '<' → logprob: -6.676537990570068
    8. ' <=' → logprob: -7.426537990570068
    9. ' in' → logprob: -7.926537990570068
    10. '0' → logprob: -8.55153751373291

Token 63: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22767989337444305
    2. ' ' → logprob: -1.6026798486709595
    3. '1' → logprob: -6.10267972946167
    4. ' val' → logprob: -11.477680206298828
    5. '2' → logprob: -12.790180206298828
    6. 'val' → logprob: -12.915180206298828
    7. '  ' → logprob: -13.477680206298828
    8. ' X' → logprob: -13.727680206298828
    9. ' n' → logprob: -13.852680206298828
    10. '3' → logprob: -14.040180206298828

Token 64: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.027237262576818466
    2. ' ' → logprob: -3.9022371768951416
    3. '1' → logprob: -5.277237415313721
    4. 'val' → logprob: -6.652237415313721
    5. ' val' → logprob: -8.652236938476562
    6. 'X' → logprob: -10.714736938476562
    7. 'n' → logprob: -11.152236938476562
    8. 'rank' → logprob: -11.527236938476562
    9. '2' → logprob: -11.714736938476562
    10. '3' → logprob: -12.089736938476562

Token 65: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5671976804733276
    2. ' and' → logprob: -1.1921976804733276
    3. ' or' → logprob: -2.442197799682617
    4. 'and' → logprob: -3.817197799682617
    5. ' :' → logprob: -4.067197799682617
    6. 'or' → logprob: -6.692197799682617
    7. ' ' → logprob: -6.692197799682617
    8. '   ' → logprob: -8.692197799682617
    9. ':
' → logprob: -9.192197799682617
    10. '==' → logprob: -9.317197799682617

Token 66: ' total' (ID: 3609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0735503435134888
    2. ' total' → logprob: -1.6985503435134888
    3. 'total' → logprob: -1.8235503435134888
    4. '       ' → logprob: -1.9485503435134888
    5. 'amount' → logprob: -2.448550224304199
    6. ' amount' → logprob: -2.573550224304199
    7. ' if' → logprob: -6.198550224304199
    8. ' continue' → logprob: -6.823550224304199
    9. 'if' → logprob: -7.198550224304199
    10. '
' → logprob: -7.323550224304199

Token 67: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.10151790082454681
    2. '+=' → logprob: -2.351517915725708
    3. ' =' → logprob: -7.226517677307129
    4. '=' → logprob: -7.851517677307129
    5. '+' → logprob: -8.726517677307129
    6. ' +' → logprob: -10.726517677307129
    7. ']+=' → logprob: -12.601517677307129
    8. '+=(' → logprob: -13.351517677307129
    9. ' ' → logprob: -13.726517677307129
    10. ' -=' → logprob: -13.726517677307129

Token 68: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.02150760218501091
    2. ' get' → logprob: -3.896507501602173
    3. 'val' → logprob: -7.646507740020752
    4. '300' → logprob: -7.771507740020752
    5. ' ' → logprob: -11.021507263183594
    6. ' val' → logprob: -11.021507263183594
    7. '100' → logprob: -11.896507263183594
    8. '   ' → logprob: -12.646507263183594
    9. '(get' → logprob: -12.646507263183594
    10. '3' → logprob: -12.771507263183594

Token 69: '_amount' (ID: 29145)
  Prédit: '_amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_amount' → logprob: -7.135819760151207e-05
    2. '_' → logprob: -10.37507152557373
    3. '_amt' → logprob: -10.62507152557373
    4. '_am' → logprob: -11.62507152557373
    5. '_a' → logprob: -12.50007152557373
    6. '_AMOUNT' → logprob: -15.00007152557373
    7. '_value' → logprob: -15.12507152557373
    8. '_answer' → logprob: -15.50007152557373
    9. '_total' → logprob: -15.50007152557373
    10. '_n' → logprob: -15.50007152557373

Token 70: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.00018458699923940003
    2. '(' → logprob: -8.750185012817383
    3. ' (' → logprob: -10.625185012817383
    4. '[val' → logprob: -14.500185012817383
    5. ' val' → logprob: -15.000185012817383
    6. 'val' → logprob: -15.125185012817383
    7. '(v' → logprob: -15.500185012817383
    8. '(valor' → logprob: -16.375185012817383
    9. '(vals' → logprob: -16.375185012817383
    10. '((' → logprob: -16.500185012817383

Token 71: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002123614540323615
    2. ')
' → logprob: -9.625212669372559
    3. '   ' → logprob: -9.750212669372559
    4. ' )' → logprob: -10.000212669372559
    5. '))' → logprob: -10.875212669372559
    6. '())' → logprob: -11.625212669372559
    7. ')*' → logprob: -12.750212669372559
    8. ')+' → logprob: -12.750212669372559
    9. ' ' → logprob: -13.500212669372559
    10. ')
' → logprob: -13.875212669372559

Token 72: '   ' (ID: 271)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.10959261655807495
    2. 'else' → logprob: -2.8595926761627197
    3. ' elif' → logprob: -3.2345926761627197
    4. 'elif' → logprob: -4.984592437744141
    5. '   ' → logprob: -8.48459243774414
    6. '<|end|>' → logprob: -10.73459243774414
    7. ' if' → logprob: -10.85959243774414
    8. ' ' → logprob: -11.73459243774414
    9. ' or' → logprob: -12.35959243774414
    10. '	elif' → logprob: -12.35959243774414

Token 73: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.2975018322467804
    2. 'else' (adapté à ' else') → logprob: -2.172501802444458
    3. ' elif' → logprob: -2.422501802444458
    4. 'elif' → logprob: -2.922501802444458
    5. ' if' → logprob: -7.547502040863037
    6. '   ' → logprob: -8.922501564025879
    7. 'if' → logprob: -9.297501564025879
    8. ' ' → logprob: -9.422501564025879
    9. ' or' → logprob: -11.172501564025879
    10. ';' → logprob: -11.860001564025879

Token 74: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3555428683757782
    2. ' total' → logprob: -1.3555428981781006
    3. 'total' → logprob: -3.7305428981781006
    4. ' ' → logprob: -5.1055426597595215
    5. '   ' → logprob: -5.1055426597595215
    6. ' :' → logprob: -5.9805426597595215
    7. '+' → logprob: -7.1055426597595215
    8. '    ' → logprob: -7.2305426597595215
    9. ' if' → logprob: -7.8555426597595215
    10. ' +' → logprob: -8.48054313659668

Token 75: '       ' (ID: 309)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.2846570909023285
    2. 'total' → logprob: -1.4096571207046509
    3. '   ' → logprob: -6.409657001495361
    4. ' if' → logprob: -7.284657001495361
    5. ' get' → logprob: -7.659657001495361
    6. 'if' → logprob: -8.15965747833252
    7. 'get' → logprob: -8.65965747833252
    8. ' ' → logprob: -9.03465747833252
    9. '    ' → logprob: -9.53465747833252
    10. '  ' → logprob: -10.65965747833252

Token 76: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5432144403457642
    2. 'total' → logprob: -1.5432144403457642
    3. ' if' → logprob: -1.9182144403457642
    4. ' total' → logprob: -2.9182143211364746
    5. '   ' → logprob: -5.668214321136475
    6. '       ' → logprob: -8.293214797973633
    7. 'amount' → logprob: -8.793214797973633
    8. ' ' → logprob: -9.230714797973633
    9. '    ' → logprob: -9.418214797973633
    10. 'for' → logprob: -9.418214797973633

Token 77: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.21526648104190826
    2. 'val' → logprob: -2.090266466140747
    3. ' X' → logprob: -3.090266466140747
    4. 'X' → logprob: -4.215266704559326
    5. ' get' → logprob: -5.340266704559326
    6. ' Y' → logprob: -6.465266704559326
    7. 'get' → logprob: -7.090266704559326
    8. ' not' → logprob: -7.590266704559326
    9. '(val' → logprob: -7.715266704559326
    10. ' abs' → logprob: -7.965266704559326

Token 78: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5714425444602966
    2. ' ==' → logprob: -1.0714426040649414
    3. '>' → logprob: -3.5714426040649414
    4. '!=' → logprob: -3.8214426040649414
    5. ' >' → logprob: -3.9464426040649414
    6. ' !=' → logprob: -4.196442604064941
    7. '>=' → logprob: -5.696442604064941
    8. ' in' → logprob: -5.946442604064941
    9. ' >=' → logprob: -6.696442604064941
    10. '<=' → logprob: -7.821442604064941

Token 79: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6525936722755432
    2. 'X' → logprob: -0.9025936722755432
    3. ' ' → logprob: -3.6525936126708984
    4. 'n' → logprob: -3.9025936126708984
    5. ' X' → logprob: -3.9025936126708984
    6. '0' → logprob: -6.277593612670898
    7. '4' → logprob: -6.777593612670898
    8. '3' → logprob: -7.027593612670898
    9. ' n' → logprob: -7.152593612670898
    10. '2' → logprob: -7.402593612670898

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2931082844734192
    2. 'X' → logprob: -1.4181082248687744
    3. 'n' → logprob: -4.9181084632873535
    4. '0' → logprob: -6.0431084632873535
    5. ' ' → logprob: -7.5431084632873535
    6. '3' → logprob: -7.7931084632873535
    7. ' X' → logprob: -8.418107986450195
    8. 'rank' → logprob: -8.668107986450195
    9. '2' → logprob: -8.793107986450195
    10. '4' → logprob: -8.918107986450195

Token 81: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6626380085945129
    2. ' or' → logprob: -0.7876380085945129
    3. ' and' → logprob: -4.162638187408447
    4. 'or' → logprob: -4.537638187408447
    5. 'and' → logprob: -6.037638187408447
    6. ' :' → logprob: -8.037637710571289
    7. ' ' → logprob: -8.662637710571289
    8. ')' → logprob: -8.787637710571289
    9. ':
' → logprob: -9.287637710571289
    10. '):' → logprob: -9.287637710571289

Token 82: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.4906112849712372
    2. ' total' → logprob: -0.9906113147735596
    3. '           ' → logprob: -4.3656110763549805
    4. '   ' → logprob: -6.4906110763549805
    5. ' ' → logprob: -6.6156110763549805
    6. '       ' → logprob: -8.99061107635498
    7. '  ' → logprob: -9.11561107635498
    8. ':' → logprob: -9.24061107635498
    9. '0' → logprob: -9.74061107635498
    10. 'get' → logprob: -9.86561107635498

Token 83: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.002931821858510375
    2. ' +=' → logprob: -6.252931594848633
    3. '*=' → logprob: -7.127931594848633
    4. '=' → logprob: -8.877931594848633
    5. '//=' → logprob: -10.502931594848633
    6. ' *=' → logprob: -11.627931594848633
    7. '-=' → logprob: -11.752931594848633
    8. '/=' → logprob: -12.377931594848633
    9. ' //' → logprob: -12.752931594848633
    10. '//' → logprob: -12.877931594848633

Token 84: ' ' (ID: 220)
  Prédit: '400'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '400' → logprob: -1.0776846408843994
    2. 'get' → logprob: -1.4526846408843994
    3. '300' → logprob: -1.5776846408843994
    4. '150' → logprob: -2.5776846408843994
    5. '500' → logprob: -2.8276846408843994
    6. '100' → logprob: -3.3276846408843994
    7. '200' → logprob: -3.7026846408843994
    8. '600' → logprob: -4.82768440246582
    9. '120' → logprob: -5.45268440246582
    10. ' ' → logprob: -5.82768440246582

Token 85: '300' (ID: 4095)
  Prédit: '400'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '400' → logprob: -0.19223733246326447
    2. '300' → logprob: -2.442237377166748
    3. '500' → logprob: -2.942237377166748
    4. '600' → logprob: -4.442237377166748
    5. '150' → logprob: -4.442237377166748
    6. '200' → logprob: -5.817237377166748
    7. '100' → logprob: -5.817237377166748
    8. '160' → logprob: -6.317237377166748
    9. 'get' → logprob: -7.067237377166748
    10. '120' → logprob: -7.192237377166748

Token 86: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.14282573759555817
    2. '00' → logprob: -2.0178258419036865
    3. '0' → logprob: -8.892826080322266
    4. '001' → logprob: -11.892826080322266
    5. '500' → logprob: -14.205326080322266
    6. '100' → logprob: -14.330326080322266
    7. '۰۰' → logprob: -14.392826080322266
    8. ' ' → logprob: -14.580326080322266
    9. '...' → logprob: -14.767826080322266
    10. '50' → logprob: -15.017826080322266

Token 87: '
' (ID: 198)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.015068537555634975
    2. ' elif' → logprob: -4.890068531036377
    3. '
' → logprob: -6.140068531036377
    4. '       ' → logprob: -6.265068531036377
    5. 'else' → logprob: -6.515068531036377
    6. '<|end|>' → logprob: -7.265068531036377
    7. '0' → logprob: -7.640068531036377
    8. '   ' → logprob: -8.140069007873535
    9. '300' → logprob: -9.765069007873535
    10. ' else' → logprob: -9.890069007873535

Token 88: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4662396013736725
    2. 'elif' → logprob: -1.59123957157135
    3. ' elif' → logprob: -2.9662396907806396
    4. '<|end|>' → logprob: -2.9662396907806396
    5. ' else' → logprob: -3.4662396907806396
    6. 'else' → logprob: -3.8412396907806396
    7. '   ' → logprob: -4.8412394523620605
    8. ' ' → logprob: -6.0912394523620605
    9. '<|end|>' → logprob: -6.8412394523620605
    10. '	elif' → logprob: -7.8412394523620605

Token 89: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.06253435462713242
    2. ' elif' → logprob: -2.8125343322753906
    3. 'else' → logprob: -7.937534332275391
    4. ' else' → logprob: -9.43753433227539
    5. '       ' → logprob: -10.43753433227539
    6. '	elif' → logprob: -10.43753433227539
    7. ' ' → logprob: -10.81253433227539
    8. '   ' → logprob: -11.06253433227539
    9. '<|end|>' → logprob: -11.18753433227539
    10. ' or' → logprob: -12.18753433227539

Token 90: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.5234971046447754
    2. 'val' → logprob: -0.8984971046447754
    3. '2' → logprob: -8.898496627807617
    4. '0' → logprob: -9.523496627807617
    5. '1' → logprob: -10.023496627807617
    6. ' ' → logprob: -10.023496627807617
    7. '(val' → logprob: -10.898496627807617
    8. '   ' → logprob: -11.148496627807617
    9. '3' → logprob: -12.148496627807617
    10. '[val' → logprob: -12.335996627807617

Token 91: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.17975836992263794
    2. '==' → logprob: -1.8047583103179932
    3. ' ' → logprob: -12.054758071899414
    4. ':' → logprob: -12.679758071899414
    5. '===' → logprob: -13.929758071899414
    6. 'elif' → logprob: -13.929758071899414
    7. '=' → logprob: -14.179758071899414
    8. '==
' → logprob: -15.054758071899414
    9. ' ===' → logprob: -15.179758071899414
    10. ' elif' → logprob: -15.554758071899414

Token 92: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.28360944986343384
    2. ' ' → logprob: -1.408609390258789
    3. '3' → logprob: -7.033609390258789
    4. '1' → logprob: -7.283609390258789
    5. '0' → logprob: -8.158609390258789
    6. '300' → logprob: -8.283609390258789
    7. '200' → logprob: -8.283609390258789
    8. '100' → logprob: -10.721109390258789
    9. '20' → logprob: -11.346109390258789
    10. '   ' → logprob: -11.408609390258789

Token 93: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0017095671501010656
    2. '3' → logprob: -6.751709461212158
    3. ' ' → logprob: -8.501709938049316
    4. '1' → logprob: -8.751709938049316
    5. '0' → logprob: -8.876709938049316
    6. '200' → logprob: -11.439209938049316
    7. '20' → logprob: -12.001709938049316
    8. '300' → logprob: -12.251709938049316
    9. '23' → logprob: -12.751709938049316
    10. '4' → logprob: -13.626709938049316

Token 94: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003266447747591883
    2. ' ' → logprob: -8.875327110290527
    3. ' and' → logprob: -9.250327110290527
    4. '*' → logprob: -10.625327110290527
    5. ':
' → logprob: -11.375327110290527
    6. ' or' → logprob: -11.500327110290527
    7. ' :' → logprob: -11.500327110290527
    8. '=' → logprob: -11.875327110290527
    9. ' ==' → logprob: -12.000327110290527
    10. '+' → logprob: -12.125327110290527

Token 95: ' total' (ID: 3609)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '200' → logprob: -0.08135063946247101
    2. '150' → logprob: -2.956350564956665
    3. ' ' → logprob: -3.831350564956665
    4. '250' → logprob: -6.831350803375244
    5. '100' → logprob: -6.831350803375244
    6. '       ' → logprob: -7.581350803375244
    7. '120' → logprob: -7.956350803375244
    8. '   ' → logprob: -8.206350326538086
    9. '175' → logprob: -8.581350326538086
    10. '400' → logprob: -8.956350326538086

Token 96: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.029644722118973732
    2. '+=' → logprob: -3.904644727706909
    3. ' +' → logprob: -5.02964448928833
    4. '+' → logprob: -6.02964448928833
    5. ' ' → logprob: -9.904644966125488
    6. ' ==' → logprob: -11.279644966125488
    7. '<|end|>' → logprob: -12.029644966125488
    8. ' >=' → logprob: -12.154644966125488
    9. ' ' → logprob: -12.279644966125488
    10. ' >' → logprob: -12.654644966125488

Token 97: ' ' (ID: 220)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.10899874567985535
    2. '150' → logprob: -2.8589987754821777
    3. ' ' → logprob: -3.2339987754821777
    4. '100' → logprob: -5.358998775482178
    5. '120' → logprob: -7.233998775482178
    6. '250' → logprob: -7.983998775482178
    7. '300' → logprob: -8.10899829864502
    8. '125' → logprob: -9.60899829864502
    9. '   ' → logprob: -9.67149829864502
    10. '175' → logprob: -9.85899829864502

Token 98: '200' (ID: 1179)
  Prédit: '200'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.003113068640232086
    2. '150' → logprob: -6.503113269805908
    3. '100' → logprob: -7.753113269805908
    4. ' ' → logprob: -8.00311279296875
    5. '250' → logprob: -8.12811279296875
    6. '120' → logprob: -8.87811279296875
    7. '175' → logprob: -8.87811279296875
    8. '300' → logprob: -9.12811279296875
    9. '400' → logprob: -10.44061279296875
    10. '500' → logprob: -10.56561279296875

Token 99: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.003197677666321397
    2. '00' → logprob: -5.75319766998291
    3. '0' → logprob: -10.87819766998291
    4. ' ' → logprob: -13.87819766998291
    5. '_' → logprob: -17.378198623657227
    6. '   ' → logprob: -17.503198623657227
    7. '۰۰' → logprob: -17.628198623657227
    8. '００' → logprob: -18.253198623657227
    9. '```' → logprob: -18.315698623657227
    10. '  ' → logprob: -18.503198623657227

Token 100: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04199472442269325
    2. 'elif' → logprob: -3.79199481010437
    3. '<|end|>' → logprob: -4.916994571685791
    4. 'else' → logprob: -5.541994571685791
    5. ' else' → logprob: -5.541994571685791
    6. ' elif' → logprob: -5.916994571685791
    7. '   ' → logprob: -8.41699504852295
    8. '	elif' → logprob: -8.66699504852295
    9. ' ' → logprob: -9.54199504852295
    10. '<|end|>' → logprob: -9.91699504852295

Token 101: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28670987486839294
    2. 'elif' → logprob: -1.7867099046707153
    3. ' elif' → logprob: -3.536709785461426
    4. ' else' → logprob: -3.536709785461426
    5. 'else' → logprob: -4.036709785461426
    6. '   ' → logprob: -5.536709785461426
    7. '	elif' → logprob: -7.286709785461426
    8. '<|end|>' → logprob: -7.661709785461426
    9. '	' → logprob: -8.286709785461426
    10. ' ' → logprob: -8.536709785461426

Token 102: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.4842124283313751
    2. ' else' → logprob: -2.1092123985290527
    3. ' elif' → logprob: -2.1092123985290527
    4. 'else' → logprob: -2.3592123985290527
    5. '       ' → logprob: -3.1092123985290527
    6. ' ' → logprob: -6.734212398529053
    7. '   ' → logprob: -7.859212398529053
    8. '	elif' → logprob: -8.734212875366211
    9. ' ' → logprob: -9.234212875366211
    10. '  ' → logprob: -10.359212875366211

Token 103: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.01293349638581276
    2. 'val' → logprob: -4.387933731079102
    3. ' ' → logprob: -8.012933731079102
    4. '3' → logprob: -9.512933731079102
    5. '300' → logprob: -12.012933731079102
    6. '1' → logprob: -12.887933731079102
    7. '(val' → logprob: -12.887933731079102
    8. '   ' → logprob: -13.387933731079102
    9. '[val' → logprob: -14.012933731079102
    10. '	val' → logprob: -14.012933731079102

Token 104: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.054973576217889786
    2. '==' → logprob: -2.929973602294922
    3. ':' → logprob: -10.429973602294922
    4. ' ' → logprob: -10.554973602294922
    5. ' val' → logprob: -11.054973602294922
    6. ' :' → logprob: -12.429973602294922
    7. 'val' → logprob: -12.679973602294922
    8. '=' → logprob: -13.054973602294922
    9. ')' → logprob: -13.179973602294922
    10. ' ' → logprob: -13.429973602294922

Token 105: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5233689546585083
    2. '100' → logprob: -0.8983689546585083
    3. '1' → logprob: -9.148368835449219
    4. '300' → logprob: -9.523368835449219
    5. '3' → logprob: -9.898368835449219
    6. '   ' → logprob: -12.523368835449219
    7. '10' → logprob: -12.648368835449219
    8. '  ' → logprob: -12.960868835449219
    9. '0' → logprob: -13.335868835449219
    10. '150' → logprob: -14.085868835449219

Token 106: '3' (ID: 18)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.01502979826182127
    2. '300' → logprob: -4.7650299072265625
    3. ' ' → logprob: -5.1400299072265625
    4. '3' → logprob: -7.7650299072265625
    5. '1' → logprob: -9.640029907226562
    6. '   ' → logprob: -11.015029907226562
    7. '150' → logprob: -12.015029907226562
    8. '500' → logprob: -12.452529907226562
    9. '  ' → logprob: -12.765029907226562
    10. '```' → logprob: -12.765029907226562

Token 107: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00015467056073248386
    2. ' :' → logprob: -8.875154495239258
    3. ' ' → logprob: -11.625154495239258
    4. ':
' → logprob: -13.500154495239258
    5. '):' → logprob: -13.500154495239258
    6. ')' → logprob: -14.375154495239258
    7. '       ' → logprob: -14.625154495239258
    8. '   ' → logprob: -14.875154495239258
    9. '           ' → logprob: -15.125154495239258
    10. '=' → logprob: -15.375154495239258

Token 108: ' total' (ID: 3609)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3140726387500763
    2. '100' → logprob: -1.314072608947754
    3. '   ' → logprob: -7.314072608947754
    4. ' total' → logprob: -9.439072608947754
    5. '       ' → logprob: -10.689072608947754
    6. 'total' → logprob: -11.439072608947754
    7. '           ' → logprob: -12.439072608947754
    8. '1' → logprob: -12.564072608947754
    9. '300' → logprob: -12.564072608947754
    10. '200' → logprob: -12.564072608947754

Token 109: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3219550848007202
    2. ' +' → logprob: -1.8219550848007202
    3. ' +=' → logprob: -2.8219552040100098
    4. '*' → logprob: -4.19695520401001
    5. '+=' → logprob: -4.32195520401001
    6. ' ' → logprob: -4.44695520401001
    7. ' *' → logprob: -5.07195520401001
    8. ' ' → logprob: -6.44695520401001
    9. ')' → logprob: -6.69695520401001
    10. ':' → logprob: -6.69695520401001

Token 110: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.02054632641375065
    2. ' ' → logprob: -3.8955464363098145
    3. '300' → logprob: -13.145545959472656
    4. '   ' → logprob: -14.333045959472656
    5. '1' → logprob: -14.458045959472656
    6. '10' → logprob: -15.458045959472656
    7. '  ' → logprob: -15.833045959472656
    8. '900' → logprob: -16.020545959472656
    9. '150' → logprob: -16.083045959472656
    10. '１００' → logprob: -16.145545959472656

Token 111: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0001468067930545658
    2. ' ' → logprob: -8.875146865844727
    3. '300' → logprob: -13.250146865844727
    4. '   ' → logprob: -13.250146865844727
    5. '150' → logprob: -14.000146865844727
    6. '1' → logprob: -14.125146865844727
    7. '  ' → logprob: -14.687646865844727
    8. '200' → logprob: -15.187646865844727
    9. '１００' → logprob: -15.812646865844727
    10. '10' → logprob: -15.937646865844727

Token 112: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.00164435722399503
    2. '0' → logprob: -6.501644134521484
    3. '00' → logprob: -8.876644134521484
    4. ' ' → logprob: -13.126644134521484
    5. '```' → logprob: -16.001644134521484
    6. '_' → logprob: -16.376644134521484
    7. '   ' → logprob: -16.626644134521484
    8. '۰۰' → logprob: -17.439144134521484
    9. '  ' → logprob: -17.501644134521484
    10. '*' → logprob: -18.251644134521484

Token 113: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7739894986152649
    2. '<|end|>' → logprob: -1.6489894390106201
    3. ' else' → logprob: -1.7739894390106201
    4. 'else' → logprob: -2.02398943901062
    5. '   ' → logprob: -4.273989677429199
    6. 'elif' → logprob: -5.023989677429199
    7. ' ' → logprob: -5.648989677429199
    8. '       ' → logprob: -5.773989677429199
    9. '<|end|>' → logprob: -6.023989677429199
    10. 'return' → logprob: -6.023989677429199

Token 114: 'def' (ID: 1314)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007199443876743317
    2. '
' → logprob: -5.257199287414551
    3. '\n' → logprob: -6.882199287414551
    4. ' print' → logprob: -8.25719928741455
    5. '<|end|>' → logprob: -8.38219928741455
    6. '#' → logprob: -9.00719928741455
    7. ')' → logprob: -9.75719928741455
    8. '```' → logprob: -9.88219928741455
    9. '+' → logprob: -10.00719928741455
    10. 'if' → logprob: -10.38219928741455

Token 115: ' bonus' (ID: 11181)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.9211421012878418
    2. ' main' → logprob: -1.0461421012878418
    3. ' calculate' → logprob: -1.5461421012878418
    4. '_' → logprob: -4.546142101287842
    5. ' _' → logprob: -4.796142101287842
    6. ' space' → logprob: -5.046142101287842
    7. ' ' → logprob: -6.296142101287842
    8. ' add' → logprob: -6.546142101287842
    9. ' check' → logprob: -6.671142101287842
    10. ' compare' → logprob: -7.171142101287842

Token 116: '(a' (ID: 6271)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.18148446083068848
    2. '(' → logprob: -1.9314844608306885
    3. '_amount' → logprob: -4.306484222412109
    4. '_rank' → logprob: -5.556484222412109
    5. '(rank' → logprob: -6.681484222412109
    6. '_:' → logprob: -7.181484222412109
    7. '_(' → logprob: -7.806484222412109
    8. '():' → logprob: -8.80648422241211
    9. '_factor' → logprob: -8.80648422241211
    10. ':' → logprob: -8.93148422241211

Token 117: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4814775884151459
    2. '_rank' → logprob: -1.1064776182174683
    3. 'rank' → logprob: -3.7314774990081787
    4. ')' → logprob: -3.9814774990081787
    5. ',' → logprob: -5.731477737426758
    6. '):
' → logprob: -6.106477737426758
    7. '(rank' → logprob: -6.606477737426758
    8. '_score' → logprob: -7.231477737426758
    9. '_r' → logprob: -8.981477737426758
    10. 'ank' → logprob: -9.231477737426758

Token 118: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0031144956592470407
    2. ' b' → logprob: -6.503114700317383
    3. '):' → logprob: -7.003114700317383
    4. 'n' → logprob: -8.503114700317383
    5. ')' → logprob: -8.878114700317383
    6. 'rank' → logprob: -9.003114700317383
    7. 'x' → logprob: -10.378114700317383
    8. 'a' → logprob: -10.378114700317383
    9. '):
' → logprob: -10.753114700317383
    10. '   ' → logprob: -11.003114700317383

Token 119: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -9.138441237155348e-05
    2. ')' → logprob: -9.500091552734375
    3. ':' → logprob: -11.500091552734375
    4. '):
' → logprob: -12.375091552734375
    5. ',' → logprob: -13.750091552734375
    6. '():' → logprob: -14.750091552734375
    7. ' ):' → logprob: -16.000091552734375
    8. '   ' → logprob: -16.500091552734375
    9. '}:' → logprob: -16.625091552734375
    10. '=' → logprob: -16.875091552734375

Token 120: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1573663353919983
    2. '   ' → logprob: -2.0323662757873535
    3. ':
' → logprob: -4.5323662757873535
    4. '<|end|>' → logprob: -6.7823662757873535
    5. ':return' → logprob: -7.0323662757873535
    6. ' return' → logprob: -7.6573662757873535
    7. ')' → logprob: -8.282366752624512
    8. '(' → logprob: -8.282366752624512
    9. ' 
' → logprob: -9.032366752624512
    10. '	return' → logprob: -9.032366752624512

Token 121: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.926556408405304
    2. 'if' → logprob: -1.1765563488006592
    3. ' if' → logprob: -2.051556348800659
    4. ' return' → logprob: -2.426556348800659
    5. '   ' → logprob: -2.551556348800659
    6. 'total' → logprob: -8.176556587219238
    7. ' ' → logprob: -9.176556587219238
    8. 'for' → logprob: -9.176556587219238
    9. 'amount' → logprob: -9.301556587219238
    10. ' total' → logprob: -9.551556587219238

Token 122: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.3059380054473877
    2. ' max' → logprob: -1.8059380054473877
    3. 'get' → logprob: -2.0559380054473877
    4. ' a' → logprob: -2.1809380054473877
    5. ' get' → logprob: -2.4309380054473877
    6. 'max' → logprob: -2.5559380054473877
    7. ' ' → logprob: -3.6809380054473877
    8. 'total' → logprob: -3.6809380054473877
    9. '300' → logprob: -3.8059380054473877
    10. ' total' → logprob: -4.180937767028809

Token 123: '400' (ID: 4812)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4988924264907837
    2. 'get' → logprob: -1.7488924264907837
    3. 'max' → logprob: -2.373892307281494
    4. 'total' → logprob: -2.873892307281494
    5. '(' → logprob: -3.998892307281494
    6. 'abs' → logprob: -4.123892307281494
    7. '100' → logprob: -4.498892307281494
    8. '300' → logprob: -4.623892307281494
    9. '(a' → logprob: -5.748892307281494
    10. '0' → logprob: -5.873892307281494

Token 124: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.09405332803726196
    2. '0' → logprob: -2.969053268432617
    3. '*' → logprob: -3.969053268432617
    4. '00' → logprob: -4.594053268432617
    5. '+' → logprob: -5.094053268432617
    6. '_' → logprob: -6.594053268432617
    7. '<|end|>' → logprob: -7.844053268432617
    8. ' *' → logprob: -7.969053268432617
    9. ',' → logprob: -8.094053268432617
    10. ')' → logprob: -8.719053268432617

Token 125: ' if' (ID: 538)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.32734623551368713
    2. '<|end|>' → logprob: -1.5773462057113647
    3. '
' → logprob: -3.5773463249206543
    4. ' if' → logprob: -4.202346324920654
    5. '*' → logprob: -4.702346324920654
    6. 'if' → logprob: -4.827346324920654
    7. ' +' → logprob: -4.952346324920654
    8. ' ' → logprob: -6.827346324920654
    9. '<|end|>' → logprob: -7.202346324920654
    10. 'def' → logprob: -7.202346324920654

Token 126: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.693708062171936
    2. ' a' → logprob: -0.693708062171936
    3. ' (' → logprob: -7.9437079429626465
    4. '(a' → logprob: -8.693708419799805
    5. '(' → logprob: -10.943708419799805
    6. ' ' → logprob: -11.443708419799805
    7. ' max' → logprob: -13.193708419799805
    8. ' abs' → logprob: -13.318708419799805
    9. ' b' → logprob: -13.818708419799805
    10. '{' → logprob: -13.943708419799805

Token 127: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.14388298988342285
    2. ' ==' → logprob: -2.018882989883423
    3. '>' → logprob: -8.018882751464844
    4. '+' → logprob: -8.518882751464844
    5. 'and' → logprob: -8.893882751464844
    6. '!=' → logprob: -8.893882751464844
    7. ' and' → logprob: -9.268882751464844
    8. '>=' → logprob: -9.643882751464844
    9. ' >' → logprob: -9.893882751464844
    10. ' +' → logprob: -10.268882751464844

Token 128: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04958456754684448
    2. ' b' → logprob: -3.4245846271514893
    3. '1' → logprob: -4.29958438873291
    4. ' ' → logprob: -6.17458438873291
    5. '3' → logprob: -9.29958438873291
    6. '2' → logprob: -10.92458438873291
    7. '100' → logprob: -11.04958438873291
    8. '4' → logprob: -11.54958438873291
    9. '6' → logprob: -12.54958438873291
    10. '0' → logprob: -12.67458438873291

Token 129: ' ==' (ID: 951)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.21788620948791504
    2. ' and' → logprob: -1.717886209487915
    3. 'else' → logprob: -4.467885971069336
    4. 'and' → logprob: -5.467885971069336
    5. ' ' → logprob: -7.967885971069336
    6. '==' → logprob: -8.342885971069336
    7. '>' → logprob: -10.967885971069336
    8. '   ' → logprob: -11.842885971069336
    9. ' ==' → logprob: -11.842885971069336
    10. ' or' → logprob: -12.092885971069336

Token 130: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006754444446414709
    2. ' ' → logprob: -5.006754398345947
    3. '3' → logprob: -10.506754875183105
    4. '0' → logprob: -12.506754875183105
    5. '2' → logprob: -12.819254875183105
    6. 'a' → logprob: -14.194254875183105
    7. 'X' → logprob: -14.319254875183105
    8. '4' → logprob: -14.381754875183105
    9. '"' → logprob: -14.819254875183105
    10. '[' → logprob: -15.131754875183105

Token 131: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00036561701563186944
    2. ' ' → logprob: -8.250365257263184
    3. '3' → logprob: -9.375365257263184
    4. '2' → logprob: -11.375365257263184
    5. '0' → logprob: -12.250365257263184
    6. 'X' → logprob: -15.000365257263184
    7. '  ' → logprob: -15.187865257263184
    8. '   ' → logprob: -15.312865257263184
    9. '4' → logprob: -15.437865257263184
    10. '"' → logprob: -15.625365257263184

Token 132: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.06206190586090088
    2. 'else' → logprob: -2.8120617866516113
    3. '<|end|>' → logprob: -10.31206226348877
    4. '
' → logprob: -10.81206226348877
    5. ' ' → logprob: -11.43706226348877
    6. '   ' → logprob: -12.43706226348877
    7. ' and' → logprob: -12.43706226348877
    8. ' ' → logprob: -12.56206226348877
    9. '400' → logprob: -12.68706226348877
    10. '	else' → logprob: -12.93706226348877

Token 133: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3510165810585022
    2. '200' → logprob: -2.2260165214538574
    3. '100' → logprob: -2.6010165214538574
    4. ' ' → logprob: -3.2260165214538574
    5. '300' → logprob: -3.2260165214538574
    6. '250' → logprob: -4.226016521453857
    7. '400' → logprob: -5.476016521453857
    8. '350' → logprob: -5.976016521453857
    9. '500' → logprob: -6.226016521453857
    10. '600' → logprob: -6.476016521453857

Token 134: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10691278427839279
    2. '100' → logprob: -2.606912851333618
    3. '200' → logprob: -4.606912612915039
    4. '500' → logprob: -5.981912612915039
    5. 'a' → logprob: -6.231912612915039
    6. 'get' → logprob: -6.356912612915039
    7. '300' → logprob: -6.356912612915039
    8. '250' → logprob: -6.731912612915039
    9. 'sum' → logprob: -6.731912612915039
    10. '600' → logprob: -6.981912612915039

Token 135: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29813048243522644
    2. '<|end|>' → logprob: -1.4231305122375488
    3. '\n' → logprob: -4.423130512237549
    4. '#' → logprob: -6.673130512237549
    5. '+' → logprob: -7.048130512237549
    6. '<|end|>' → logprob: -7.798130512237549
    7. ')' → logprob: -8.17313003540039
    8. '```' → logprob: -8.29813003540039
    9. 'newline' → logprob: -8.42313003540039
    10. '

' → logprob: -8.54813003540039

Token 136: 'total' (ID: 9577)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.14252516627311707
    2. 'total' → logprob: -2.8925251960754395
    3. 'result' → logprob: -3.1425251960754395
    4. 'bonus' → logprob: -4.3925251960754395
    5. 'if' → logprob: -4.8925251960754395
    6. '#' → logprob: -5.3925251960754395
    7. '<|end|>' → logprob: -5.5175251960754395
    8. 'amount' → logprob: -6.5175251960754395
    9. 'n' → logprob: -7.2675251960754395
    10. 'answer' → logprob: -7.5175251960754395

Token 137: ' +=' (ID: 2757)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 138: ' bonus' (ID: 11181)
  Prédit: 'bonus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bonus' → logprob: -0.011115968227386475
    2. ' bonus' → logprob: -4.511116027832031
    3. 'bon' → logprob: -9.636116027832031
    4. 'b' → logprob: -13.511116027832031
    5. 'Bonus' → logprob: -15.136116027832031
    6. ' ' → logprob: -15.386116027832031
    7. '_bonus' → logprob: -15.636116027832031
    8. '   ' → logprob: -16.13611602783203
    9. ' бонус' → logprob: -16.13611602783203
    10. '0' → logprob: -16.38611602783203

Token 139: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.000500370399095118
    2. '(' → logprob: -7.625500202178955
    3. '(x' → logprob: -12.375500679016113
    4. '(
' → logprob: -12.500500679016113
    5. ' (' → logprob: -13.125500679016113
    6. '(*' → logprob: -13.875500679016113
    7. 'X' → logprob: -14.375500679016113
    8. '((' → logprob: -15.250500679016113
    9. '(Y' → logprob: -15.250500679016113
    10. '(A' → logprob: -15.375500679016113

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002208781661465764
    2. ',Y' → logprob: -6.127208709716797
    3. ' ,' → logprob: -10.752208709716797
    4. ',
' → logprob: -14.252208709716797
    5. ',y' → logprob: -14.252208709716797
    6. ',X' → logprob: -14.627208709716797
    7. 'Y' → logprob: -15.377208709716797
    8. ')' → logprob: -16.502208709716797
    9. ',Z' → logprob: -17.377208709716797
    10. '   ' → logprob: -17.502208709716797

Token 141: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.00029601677670143545
    2. ' Y' → logprob: -8.125295639038086
    3. '	Y' → logprob: -18.000295639038086
    4. ')' → logprob: -19.500295639038086
    5. '<|end|>' → logprob: -20.500295639038086
    6. 'y' → logprob: -20.875295639038086
    7. ' ' → logprob: -21.000295639038086
    8. '   ' → logprob: -21.250295639038086
    9. ' ' → logprob: -21.875295639038086
    10. '(Y' → logprob: -22.250295639038086

Token 142: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ')
' → logprob: -13.875001907348633
    3. ')

' → logprob: -15.750001907348633
    4. ' )' → logprob: -15.750001907348633
    5. '))' → logprob: -16.000001907348633
    6. ')`' → logprob: -17.125001907348633
    7. ')return' → logprob: -17.750001907348633
    8. ')}' → logprob: -18.250001907348633
    9. ')#' → logprob: -18.625001907348633
    10. ')**' → logprob: -19.000001907348633

Token 143: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -17.5
    3. 'return' → logprob: -18.5
    4. 'if' → logprob: -18.5
    5. '```' → logprob: -18.75
    6. '
' → logprob: -19.75
    7. '#print' → logprob: -20.0
    8. 'total' → logprob: -20.25
    9. 'pr' → logprob: -20.75
    10. '#' → logprob: -21.125

Token 144: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.16028617322444916
    2. '(' → logprob: -1.9102861881256104
    3. 'total' → logprob: -9.910285949707031
    4. '()' → logprob: -11.910285949707031
    5. '('' → logprob: -12.910285949707031
    6. ' (' → logprob: -13.910285949707031
    7. '("("' → logprob: -14.035285949707031
    8. '(`' → logprob: -15.535285949707031
    9. '(T' → logprob: -15.660285949707031
    10. '((' → logprob: -15.785285949707031

Token 145: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ' )' → logprob: -14.125000953674316
    3. ')`' → logprob: -15.250000953674316
    4. '))' → logprob: -16.250001907348633
    5. ')
' → logprob: -17.875001907348633
    6. '')' → logprob: -18.250001907348633
    7. '`)' → logprob: -18.625001907348633
    8. ')**' → logprob: -18.750001907348633
    9. '(' → logprob: -19.000001907348633
    10. ')}' → logprob: -19.000001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 143
Tokens correctement prédits (1ère position, stricte): 59
Tokens correctement prédits (1ère position, avec adaptation): 63
Tokens correctement prédits (top 10): 117
Précision stricte (1ère position): 41.26%
Précision adaptée (1ère position): 44.06%
Précision (top 10): 81.82%
================================================================================
