================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:41:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import numpy as np

def get_stdin_buffer():
    return sys.stdin.buffer

def read_stdin(buffer):
    return buffer.read()

def readline_stdin(buffer):
    return buffer.readline()

def readlines_stdin(buffer):
    return buffer.readlines()

def parse_N_K(line):
    N, K = map(int, line.split())
    return N, K

def parse_array(line):
    return np.array(line.split(), np.int64)

def sort_array(arr, reverse=False):
    arr = np.sort(arr)
    if reverse:
        arr = arr[::-1]
    return arr

def read_input():
    buffer = get_stdin_buffer()
    n_k_line = readline_stdin(buffer)
    a_line = readline_stdin(buffer)
    f_line = readline_stdin(buffer)
    return n_k_line, a_line, f_line

def prepare_data(n_k_line, a_line, f_line):
    N, K = parse_N_K(n_k_line)
    A = parse_array(a_line)
    F = parse_array(f_line)
    A = sort_array(A)
    F = sort_array(F, reverse=True)
    return N, K, A, F

def compute_maximum_for_x(A, F, x):
    return np.maximum(0, A - x // F)

def compute_sum_maximum(A, F, x):
    arr = compute_maximum_for_x(A, F, x)
    return arr.sum()

def can_achieve_x(A, F, K, x):
    sum_max = compute_sum_maximum(A, F, x)
    return sum_max <= K

def binary_search(A, F, K, left, right):
    while left + 1 < right:
        mid = (left + right) // 2
        if can_achieve_x(A, F, K, mid):
            right = mid
        else:
            left = mid
    return right

def main():
    n_k_line, a_line, f_line = read_input()
    N, K, A, F = prepare_data(n_k_line, a_line, f_line)
    left = -1
    right = 10**13
    answer = binary_search(A, F, K, left, right)
    print(answer)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: ' numpy' (ID: 19529)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0007113590254448354
    2. 'os' → logprob: -7.250711441040039
    3. ' math' → logprob: -14.250711441040039
    4. ' re' → logprob: -15.125711441040039
    5. '"os' → logprob: -15.250711441040039
    6. ' json' → logprob: -16.37571144104004
    7. '_os' → logprob: -16.37571144104004
    8. '	os' → logprob: -17.25071144104004
    9. ' io' → logprob: -18.12571144104004
    10. ' ' → logprob: -18.62571144104004

Token 5: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.0329364575445652
    2. '<|end|>' → logprob: -3.6579365730285645
    3. '.' → logprob: -5.6579365730285645
    4. 'as' → logprob: -6.0329365730285645
    5. '<|end|>' → logprob: -8.282936096191406
    6. ' ' → logprob: -8.782936096191406
    7. ' .' → logprob: -8.782936096191406
    8. '.ndarray' → logprob: -9.907936096191406
    9. '.as' → logprob: -10.032936096191406
    10. '.pyplot' → logprob: -11.282936096191406

Token 6: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.0010811600368469954
    2. 'np' → logprob: -7.1260809898376465
    3. ' ' → logprob: -8.376081466674805
    4. ' ' → logprob: -10.001081466674805
    5. ' numpy' → logprob: -14.376081466674805
    6. '_np' → logprob: -16.501081466674805
    7. '=np' → logprob: -16.626081466674805
    8. '_' → logprob: -16.876081466674805
    9. ' as' → logprob: -17.126081466674805
    10. ' n' → logprob: -17.501081466674805

Token 7: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0954132080078125
    2. 'import' → logprob: -1.7204132080078125
    3. '<|end|>' → logprob: -1.7204132080078125
    4. '\n' → logprob: -2.0954132080078125
    5. '```' → logprob: -2.7204132080078125
    6. '\' → logprob: -3.7204132080078125
    7. '.' → logprob: -3.8454132080078125
    8. '[' → logprob: -4.0954132080078125
    9. 'newline' → logprob: -4.0954132080078125
    10. ' as' → logprob: -4.7204132080078125

Token 8: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.21115317940711975
    2. '```' → logprob: -2.711153268814087
    3. 'import' → logprob: -2.961153268814087
    4. '#' → logprob: -3.711153268814087
    5. '\' → logprob: -4.336153030395508
    6. '\n' → logprob: -4.461153030395508
    7. '[' → logprob: -4.961153030395508
    8. 'as' → logprob: -5.086153030395508
    9. ',' → logprob: -6.336153030395508
    10. '<|end|>' → logprob: -6.961153030395508

Token 9: ' get' (ID: 717)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0770101472735405
    2. ' space' → logprob: -4.077010154724121
    3. ' my' → logprob: -4.452010154724121
    4. '_' → logprob: -4.452010154724121
    5. ' process' → logprob: -4.702010154724121
    6. ' array' → logprob: -5.327010154724121
    7. ' calculate' → logprob: -5.577010154724121
    8. ' read' → logprob: -6.202010154724121
    9. ' predict' → logprob: -6.702010154724121
    10. ' ' → logprob: -6.827010154724121

Token 10: '_st' (ID: 2518)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1690586805343628
    2. '_data' → logprob: -2.9190587997436523
    3. '_array' → logprob: -3.2940587997436523
    4. ' _' → logprob: -3.5440587997436523
    5. '_max' → logprob: -4.544058799743652
    6. '_user' → logprob: -5.044058799743652
    7. '_random' → logprob: -6.294058799743652
    8. '_numpy' → logprob: -6.294058799743652
    9. '_matrix' → logprob: -6.544058799743652
    10. '_sum' → logprob: -6.919058799743652

Token 11: 'din' (ID: 28388)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.5540200471878052
    2. 'ate' → logprob: -1.6790200471878052
    3. 'at' → logprob: -1.6790200471878052
    4. 'ream' → logprob: -1.6790200471878052
    5. 'udent' → logprob: -2.5540199279785156
    6. 'ats' → logprob: -3.8040199279785156
    7. '_' → logprob: -3.8040199279785156
    8. 'ates' → logprob: -4.304019927978516
    9. 'udents' → logprob: -4.304019927978516
    10. 'ep' → logprob: -4.554019927978516

Token 12: '_buffer' (ID: 17892)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0289018377661705
    2. '(' → logprob: -4.028902053833008
    3. '()' → logprob: -5.528902053833008
    4. '_' → logprob: -6.278902053833008
    5. ' ():' → logprob: -6.278902053833008
    6. '_line' → logprob: -6.903902053833008
    7. '_data' → logprob: -7.403902053833008
    8. '_input' → logprob: -7.778902053833008
    9. '():
' → logprob: -7.903902053833008
    10. ' ()' → logprob: -9.403902053833008

Token 13: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0026195356622338295
    2. ' ():' → logprob: -6.002619743347168
    3. '(' → logprob: -9.127619743347168
    4. '()' → logprob: -10.752619743347168
    5. ':' → logprob: -12.877619743347168
    6. '().' → logprob: -12.877619743347168
    7. '_' → logprob: -13.002619743347168
    8. '():
' → logprob: -13.252619743347168
    9. ' ()' → logprob: -13.502619743347168
    10. '(:' → logprob: -14.377619743347168

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18264296650886536
    2. ' return' → logprob: -2.557642936706543
    3. '    ' → logprob: -2.682642936706543
    4. 'return' → logprob: -5.307642936706543
    5. '    
' → logprob: -5.557642936706543
    6. ' ' → logprob: -6.057642936706543
    7. ':' → logprob: -6.182642936706543
    8. '```' → logprob: -6.182642936706543
    9. ' 
' → logprob: -6.682642936706543
    10. '     
' → logprob: -7.432642936706543

Token 15: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.618791937828064
    2. '   ' → logprob: -0.868791937828064
    3. 'return' (adapté à ' return') → logprob: -3.6187920570373535
    4. ' try' → logprob: -5.2437920570373535
    5. '    ' → logprob: -5.4937920570373535
    6. ' ' → logprob: -6.1187920570373535
    7. 'try' → logprob: -7.3687920570373535
    8. 'r' → logprob: -7.6187920570373535
    9. '   ' → logprob: -7.6187920570373535
    10. ' ' → logprob: -7.9937920570373535

Token 16: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.16024930775165558
    2. 'sys' → logprob: -1.9102493524551392
    3. '(sys' → logprob: -11.285249710083008
    4. '	sys' → logprob: -12.285249710083008
    5. ' getattr' → logprob: -12.410249710083008
    6. '=sys' → logprob: -14.035249710083008
    7. ' ' → logprob: -14.285249710083008
    8. '```' → logprob: -14.785249710083008
    9. '   ' → logprob: -15.035249710083008
    10. ' np' → logprob: -15.160249710083008

Token 17: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.032368678599596024
    2. '.stdout' → logprob: -4.0323686599731445
    3. '.' → logprob: -4.2823686599731445
    4. '.std' → logprob: -8.907368659973145
    5. '.stderr' → logprob: -9.407368659973145
    6. ' .' → logprob: -9.782368659973145
    7. '.argv' → logprob: -11.032368659973145
    8. ' stdin' → logprob: -12.657368659973145
    9. 'stdin' → logprob: -12.907368659973145
    10. '.input' → logprob: -13.282368659973145

Token 18: '.buffer' (ID: 48964)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11941730976104736
    2. '.readline' → logprob: -2.994417190551758
    3. '.buffer' → logprob: -2.994417190551758
    4. '.read' → logprob: -4.494417190551758
    5. ' .' → logprob: -7.744417190551758
    6. 'buffer' → logprob: -8.744417190551758
    7. '<|end|>' → logprob: -8.994417190551758
    8. '
' → logprob: -9.369417190551758
    9. '```' → logprob: -9.744417190551758
    10. '_buffer' → logprob: -9.744417190551758

Token 19: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03900054469704628
    2. '.readline' → logprob: -3.9140005111694336
    3. '.read' → logprob: -4.789000511169434
    4. '<|end|>' → logprob: -5.039000511169434
    5. '\n' → logprob: -6.914000511169434
    6. '
' → logprob: -7.414000511169434
    7. '<|end|>' → logprob: -7.664000511169434
    8. 'def' → logprob: -8.164000511169434
    9. ' ' → logprob: -8.664000511169434
    10. '```' → logprob: -8.789000511169434

Token 20: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.004835345782339573
    2. 'def' → logprob: -6.12983512878418
    3. '<|end|>' → logprob: -7.00483512878418
    4. '
' → logprob: -7.62983512878418
    5. '\' → logprob: -7.75483512878418
    6. '```' → logprob: -8.50483512878418
    7. '\n' → logprob: -8.87983512878418
    8. '.
' → logprob: -9.37983512878418
    9. '#' → logprob: -9.50483512878418
    10. '.

' → logprob: -9.62983512878418

Token 21: ' read' (ID: 1729)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.2682356536388397
    2. ' read' → logprob: -2.018235683441162
    3. ' main' → logprob: -2.768235683441162
    4. 'get' → logprob: -4.268235683441162
    5. 'read' → logprob: -4.518235683441162
    6. ' write' → logprob: -5.018235683441162
    7. ' readline' → logprob: -5.893235683441162
    8. ' process' → logprob: -6.268235683441162
    9. 'main' → logprob: -7.518235683441162
    10. 'process' → logprob: -7.893235683441162

Token 22: '_st' (ID: 2518)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9269456267356873
    2. '_line' → logprob: -1.051945686340332
    3. '_' → logprob: -2.051945686340332
    4. '(' → logprob: -2.301945686340332
    5. '_byte' → logprob: -5.551945686340332
    6. '_exact' → logprob: -5.676945686340332
    7. '_buffer' → logprob: -5.926945686340332
    8. '_data' → logprob: -6.301945686340332
    9. '_bytes' → logprob: -6.426945686340332
    10. ' _' → logprob: -6.426945686340332

Token 23: 'din' (ID: 28388)
  Prédit: 'din'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'din' → logprob: -0.0049352278001606464
    2. 'd' → logprob: -5.379935264587402
    3. 'ream' → logprob: -8.379935264587402
    4. 'r' → logprob: -10.629935264587402
    5. 'in' → logprob: -11.129935264587402
    6. 'DIN' → logprob: -11.129935264587402
    7. 'di' → logprob: -11.504935264587402
    8. 'rin' → logprob: -12.129935264587402
    9. 'uf' → logprob: -13.004935264587402
    10. 'Din' → logprob: -13.254935264587402

Token 24: '(buffer' (ID: 26754)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.5626512169837952
    2. '_line' → logprob: -1.4376511573791504
    3. '_buffer' → logprob: -2.3126511573791504
    4. '()' → logprob: -2.6876511573791504
    5. '_bytes' → logprob: -4.31265115737915
    6. '_' → logprob: -5.43765115737915
    7. '(' → logprob: -6.43765115737915
    8. '_byte' → logprob: -6.43765115737915
    9. '():
' → logprob: -6.56265115737915
    10. '_raw' → logprob: -6.81265115737915

Token 25: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0020357032772153616
    2. ',' → logprob: -7.252035617828369
    3. '):
' → logprob: -7.377035617828369
    4. ')' → logprob: -7.377035617828369
    5. '   ' → logprob: -10.252036094665527
    6. ' ):' → logprob: -11.002036094665527
    7. '):
' → logprob: -12.127036094665527
    8. '():' → logprob: -12.502036094665527
    9. ':' → logprob: -12.877036094665527
    10. ' ' → logprob: -13.502036094665527

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011984437005594373
    2. 'data' → logprob: -7.6261982917785645
    3. ' data' → logprob: -8.126198768615723
    4. ' return' → logprob: -8.876198768615723
    5. ' readline' → logprob: -9.251198768615723
    6. ' line' → logprob: -10.126198768615723
    7. '.readline' → logprob: -10.251198768615723
    8. '    ' → logprob: -11.251198768615723
    9. 'return' → logprob: -11.251198768615723
    10. '       ' → logprob: -11.251198768615723

Token 27: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09708210825920105
    2. ' data' → logprob: -3.4720821380615234
    3. 'data' → logprob: -3.5970821380615234
    4. ' line' → logprob: -3.9720821380615234
    5. ' return' → logprob: -4.847082138061523
    6. 'line' → logprob: -5.847082138061523
    7. 'return' (adapté à ' return') → logprob: -6.097082138061523
    8. ' for' → logprob: -6.472082138061523
    9. 'for' → logprob: -7.972082138061523
    10. ' lines' → logprob: -8.972082138061523

Token 28: ' buffer' (ID: 8573)
  Prédit: ' buffer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' buffer' → logprob: -0.01104935072362423
    2. 'buffer' → logprob: -4.511049270629883
    3. '	buffer' → logprob: -14.511049270629883
    4. '(buffer' → logprob: -14.636049270629883
    5. ' bytes' → logprob: -15.011049270629883
    6. '.buffer' → logprob: -16.136049270629883
    7. '   ' → logprob: -16.886049270629883
    8. ' ' → logprob: -17.261049270629883
    9. '_buffer' → logprob: -17.386049270629883
    10. ' buffers' → logprob: -17.386049270629883

Token 29: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -0.006029284559190273
    2. '.readline' → logprob: -5.13102912902832
    3. '.' → logprob: -9.25602912902832
    4. '.readlines' → logprob: -13.00602912902832
    5. 'read' → logprob: -13.38102912902832
    6. '.raw' → logprob: -14.63102912902832
    7. '.peek' → logprob: -15.00602912902832
    8. '.Read' → logprob: -15.13102912902832
    9. '.decode' → logprob: -16.38102912902832
    10. '[:]' → logprob: -16.38102912902832

Token 30: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.016047976911067963
    2. '(' → logprob: -4.141047954559326
    3. '().' → logprob: -12.391048431396484
    4. '()(' → logprob: -13.766048431396484
    5. '()`' → logprob: -13.766048431396484
    6. ' ()' → logprob: -13.891048431396484
    7. '();' → logprob: -14.141048431396484
    8. '())' → logprob: -14.391048431396484
    9. '40' → logprob: -14.516048431396484
    10. '(),' → logprob: -15.141048431396484

Token 31: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3628844618797302
    2. '<|end|>' → logprob: -1.862884521484375
    3. '#' → logprob: -2.862884521484375
    4. '```' → logprob: -3.612884521484375
    5. '()' → logprob: -4.237884521484375
    6. '\n' → logprob: -4.362884521484375
    7. '\' → logprob: -4.612884521484375
    8. '<|end|>' → logprob: -4.737884521484375
    9. 'data' → logprob: -4.862884521484375
    10. 'if' → logprob: -5.737884521484375

Token 32: ' readline' (ID: 179561)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.12290114164352417
    2. ' decode' → logprob: -3.747901201248169
    3. ' get' → logprob: -3.997901201248169
    4. ' write' → logprob: -4.12290096282959
    5. ' parse' → logprob: -4.12290096282959
    6. ' process' → logprob: -4.37290096282959
    7. ' convert' → logprob: -5.12290096282959
    8. ' read' → logprob: -5.12290096282959
    9. 'decode' → logprob: -5.87290096282959
    10. ' bytes' → logprob: -6.87290096282959

Token 33: '_st' (ID: 2518)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08120995759963989
    2. '():' → logprob: -2.581209897994995
    3. '(' → logprob: -6.331210136413574
    4. '_line' → logprob: -8.331210136413574
    5. '():
' → logprob: -9.331210136413574
    6. '()(' → logprob: -9.956210136413574
    7. '(line' → logprob: -9.956210136413574
    8. ' ()' → logprob: -10.956210136413574
    9. '()`' → logprob: -11.081210136413574
    10. '_' → logprob: -11.456210136413574

Token 34: 'din' (ID: 28388)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.21982504427433014
    2. 'ring' → logprob: -2.844825029373169
    3. 'rip' → logprob: -3.219825029373169
    4. 'ub' → logprob: -3.469825029373169
    5. 'ep' → logprob: -4.469825267791748
    6. 'ream' → logprob: -4.469825267791748
    7. 'rin' → logprob: -4.594825267791748
    8. 'op' → logprob: -5.094825267791748
    9. 'ip' → logprob: -5.594825267791748
    10. 'art' → logprob: -5.594825267791748

Token 35: '(buffer' (ID: 26754)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7025842070579529
    2. '(' → logprob: -1.0775842666625977
    3. '(buffer' → logprob: -1.8275842666625977
    4. '_' → logprob: -7.452584266662598
    5. '_buffer' → logprob: -7.452584266662598
    6. '():' → logprob: -7.577584266662598
    7. '()(' → logprob: -7.827584266662598
    8. '(Buffer' → logprob: -7.952584266662598
    9. '(line' → logprob: -8.452584266662598
    10. ' ()' → logprob: -8.952584266662598

Token 36: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1430492401123047
    2. ')' → logprob: -2.0180492401123047
    3. '():' → logprob: -8.143049240112305
    4. '()' → logprob: -10.143049240112305
    5. '):
' → logprob: -10.518049240112305
    6. ' ):' → logprob: -11.893049240112305
    7. ':' → logprob: -13.268049240112305
    8. ' )' → logprob: -13.268049240112305
    9. '())' → logprob: -13.643049240112305
    10. '(' → logprob: -13.643049240112305

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008688205853104591
    2. '()' → logprob: -4.883687973022461
    3. '(' → logprob: -8.133687973022461
    4. ' ()' → logprob: -8.258687973022461
    5. '.readline' → logprob: -8.258687973022461
    6. ' return' → logprob: -9.758687973022461
    7. '    ' → logprob: -9.883687973022461
    8. '  ' → logprob: -10.383687973022461
    9. 'return' → logprob: -10.633687973022461
    10. ')' → logprob: -10.758687973022461

Token 38: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18164414167404175
    2. ' return' → logprob: -1.8066442012786865
    3. 'return' (adapté à ' return') → logprob: -6.306643962860107
    4. '    ' → logprob: -10.681644439697266
    5. '   ' → logprob: -11.431644439697266
    6. '	return' → logprob: -11.931644439697266
    7. ' def' → logprob: -12.556644439697266
    8. '    
' → logprob: -12.556644439697266
    9. ' ' → logprob: -12.681644439697266
    10. ' buffer' → logprob: -12.806644439697266

Token 39: ' buffer' (ID: 8573)
  Prédit: ' buffer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' buffer' → logprob: -0.0002619318547658622
    2. 'buffer' → logprob: -8.250262260437012
    3. '	buffer' → logprob: -15.500262260437012
    4. '(buffer' → logprob: -16.125261306762695
    5. ' ' → logprob: -16.250261306762695
    6. ' buff' → logprob: -17.250261306762695
    7. ' b' → logprob: -17.375261306762695
    8. ' buffers' → logprob: -17.375261306762695
    9. ' space' → logprob: -17.500261306762695
    10. ' ' → logprob: -17.875261306762695

Token 40: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00016182278341148049
    2. '.' → logprob: -8.750162124633789
    3. '.read' → logprob: -12.875162124633789
    4. ' readline' → logprob: -14.875162124633789
    5. '.readlines' → logprob: -15.375162124633789
    6. '.buffer' → logprob: -16.25016212463379
    7. '._' → logprob: -16.87516212463379
    8. '.__' → logprob: -17.00016212463379
    9. '.decode' → logprob: -17.50016212463379
    10. ' .' → logprob: -18.37516212463379

Token 41: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005968969315290451
    2. '(' → logprob: -5.130969047546387
    3. '()
' → logprob: -11.005969047546387
    4. '(
' → logprob: -12.005969047546387
    5. '()

' → logprob: -12.130969047546387
    6. '()`' → logprob: -12.630969047546387
    7. '()\' → logprob: -13.005969047546387
    8. '()(' → logprob: -13.630969047546387
    9. ' ()' → logprob: -14.005969047546387
    10. '()"' → logprob: -14.380969047546387

Token 42: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.43072041869163513
    2. 'def' → logprob: -1.1807204484939575
    3. '\' → logprob: -4.180720329284668
    4. 'd' → logprob: -4.305720329284668
    5. '```' → logprob: -5.555720329284668
    6. '<|end|>' → logprob: -5.555720329284668
    7. 'a' → logprob: -6.930720329284668
    8. 'b' → logprob: -7.055720329284668
    9. '[' → logprob: -7.055720329284668
    10. '\n' → logprob: -7.805720329284668

Token 43: ' read' (ID: 1729)
  Prédit: 'write'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'write' → logprob: -0.9986376762390137
    2. ' write' → logprob: -1.2486376762390137
    3. ' read' → logprob: -1.9986376762390137
    4. 'read' → logprob: -2.1236376762390137
    5. ' main' → logprob: -2.7486376762390137
    6. 'main' → logprob: -4.748637676239014
    7. ' process' → logprob: -4.998637676239014
    8. 'process' → logprob: -5.998637676239014
    9. ' parse' → logprob: -6.373637676239014
    10. ' get' → logprob: -6.498637676239014

Token 44: 'lines' (ID: 10105)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05863795429468155
    2. '_st' → logprob: -2.933637857437134
    3. '_s' → logprob: -6.058638095855713
    4. '_buffer' → logprob: -8.558637619018555
    5. 'line' → logprob: -8.683637619018555
    6. '_line' → logprob: -8.808637619018555
    7. ' _' → logprob: -8.808637619018555
    8. '(' → logprob: -8.808637619018555
    9. '_stdout' → logprob: -8.933637619018555
    10. '_from' → logprob: -9.558637619018555

Token 45: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -3.7697225252486533e-06
    2. '_stdout' → logprob: -13.625003814697266
    3. '_std' → logprob: -14.250003814697266
    4. '```' → logprob: -14.625003814697266
    5. '_' → logprob: -14.625003814697266
    6. '_s' → logprob: -15.000003814697266
    7. '_ST' → logprob: -15.750003814697266
    8. '_sn' → logprob: -16.250003814697266
    9. 'stdin' → logprob: -16.625003814697266
    10. '_stdio' → logprob: -16.750003814697266

Token 46: 'din' (ID: 28388)
  Prédit: 'din'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'din' → logprob: -0.0003488129877950996
    2. 'd' → logprob: -8.375349044799805
    3. 'in' → logprob: -9.125349044799805
    4. '_in' → logprob: -13.750349044799805
    5. 'df' → logprob: -13.875349044799805
    6. 'derr' → logprob: -13.875349044799805
    7. 'di' → logprob: -14.000349044799805
    8. 'stdin' → logprob: -14.250349044799805
    9. '_d' → logprob: -14.750349044799805
    10. 'def' → logprob: -14.875349044799805

Token 47: '(buffer' (ID: 26754)
  Prédit: '(buffer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(buffer' → logprob: -0.0015309321461245418
    2. '(' → logprob: -6.50153112411499
    3. '(buff' → logprob: -11.501530647277832
    4. ' (' → logprob: -11.876530647277832
    5. '(Buffer' → logprob: -12.126530647277832
    6. '_buffer' → logprob: -13.251530647277832
    7. '(buf' → logprob: -13.376530647277832
    8. '_' → logprob: -14.376530647277832
    9. '_(' → logprob: -14.501530647277832
    10. '```' → logprob: -14.876530647277832

Token 48: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002209973521530628
    2. ')' → logprob: -6.1272101402282715
    3. '):
' → logprob: -10.752209663391113
    4. ':' → logprob: -13.377209663391113
    5. ' ):' → logprob: -14.002209663391113
    6. '   ' → logprob: -14.252209663391113
    7. ')：' → logprob: -16.12721061706543
    8. '():' → logprob: -16.12721061706543
    9. ',' → logprob: -16.75221061706543
    10. '）：' → logprob: -17.50221061706543

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00010783452307805419
    2. ' return' → logprob: -9.375107765197754
    3. 'return' → logprob: -10.750107765197754
    4. '	return' → logprob: -14.625107765197754
    5. '  ' → logprob: -15.250107765197754
    6. '   ' → logprob: -15.250107765197754
    7. '    ' → logprob: -15.375107765197754
    8. '()' → logprob: -15.500107765197754
    9. '[]' → logprob: -16.87510871887207
    10. '(' → logprob: -17.25010871887207

Token 50: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20284384489059448
    2. 'return' (adapté à ' return') → logprob: -2.3278439044952393
    3. ' return' → logprob: -2.4528439044952393
    4. '	return' → logprob: -11.57784366607666
    5. ' ' → logprob: -12.07784366607666
    6. '  ' → logprob: -12.20284366607666
    7. ' for' → logprob: -12.32784366607666
    8. 'for' → logprob: -12.32784366607666
    9. '    ' → logprob: -12.82784366607666
    10. '```' → logprob: -13.45284366607666

Token 51: ' buffer' (ID: 8573)
  Prédit: ' buffer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' buffer' → logprob: -0.014168800786137581
    2. 'buffer' → logprob: -4.264168739318848
    3. '	buffer' → logprob: -13.389168739318848
    4. '(buffer' → logprob: -13.514168739318848
    5. '   ' → logprob: -13.639168739318848
    6. ' list' → logprob: -14.514168739318848
    7. ' ' → logprob: -14.889168739318848
    8. ' buffers' → logprob: -16.264169692993164
    9. '[]' → logprob: -16.639169692993164
    10. '[' → logprob: -16.639169692993164

Token 52: '.readlines' (ID: 92237)
  Prédit: '.readlines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readlines' → logprob: -0.005941832438111305
    2. '.readline' → logprob: -5.130941867828369
    3. '.' → logprob: -12.005941390991211
    4. '.read' → logprob: -12.380941390991211
    5. 'lines' → logprob: -14.005941390991211
    6. '```' → logprob: -14.505941390991211
    7. 's' → logprob: -14.630941390991211
    8. '.__' → logprob: -15.005941390991211
    9. '.lines' → logprob: -15.380941390991211
    10. '_lines' → logprob: -16.38094139099121

Token 53: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.4391956685576588e-05
    2. '()]' → logprob: -11.625024795532227
    3. '(' → logprob: -11.875024795532227
    4. '()`' → logprob: -13.375024795532227
    5. '()

' → logprob: -13.625024795532227
    6. '`()' → logprob: -13.750024795532227
    7. ' ()' → logprob: -13.875024795532227
    8. '()
' → logprob: -13.875024795532227
    9. '()(' → logprob: -14.875024795532227
    10. '())' → logprob: -14.875024795532227

Token 54: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11460677534341812
    2. '#' → logprob: -2.3646068572998047
    3. 'd' → logprob: -4.614606857299805
    4. '```' → logprob: -6.864606857299805
    5. '\' → logprob: -6.989606857299805
    6. 'import' → logprob: -7.489606857299805
    7. 'de' → logprob: -8.239606857299805
    8. 'class' → logprob: -8.364606857299805
    9. '
' → logprob: -8.614606857299805
    10. 'b' → logprob: -8.739606857299805

Token 55: ' parse' (ID: 8420)
  Prédit: ' write'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' write' → logprob: -0.025290854275226593
    2. ' get' → logprob: -5.0252909660339355
    3. '_write' → logprob: -5.1502909660339355
    4. ' main' → logprob: -5.7752909660339355
    5. ' stdin' → logprob: -6.4002909660339355
    6. '_' → logprob: -6.5252909660339355
    7. ' parse' → logprob: -6.5252909660339355
    8. ' _' → logprob: -7.1502909660339355
    9. ' convert' → logprob: -7.2752909660339355
    10. ' read' → logprob: -7.6502909660339355

Token 56: '_N' (ID: 3080)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0071740057319402695
    2. '(' → logprob: -6.007174015045166
    3. '_input' → logprob: -6.382174015045166
    4. '_line' → logprob: -6.882174015045166
    5. '_data' → logprob: -7.007174015045166
    6. '_token' → logprob: -8.007173538208008
    7. '_json' → logprob: -8.132173538208008
    8. '(_' → logprob: -10.507173538208008
    9. '_csv' → logprob: -10.507173538208008
    10. '_space' → logprob: -10.507173538208008

Token 57: '_K' (ID: 20555)
  Prédit: 'umber'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'umber' → logprob: -0.268684446811676
    2. 'um' → logprob: -1.8936843872070312
    3. '(' → logprob: -2.7686843872070312
    4. '_' → logprob: -4.893684387207031
    5. 'umbers' → logprob: -4.893684387207031
    6. '()' → logprob: -5.768684387207031
    7. 'ame' → logprob: -6.643684387207031
    8. 'ext' → logprob: -7.518684387207031
    9. '_um' → logprob: -7.768684387207031
    10. 'ames' → logprob: -8.393684387207031

Token 58: '(line' (ID: 18178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2549728453159332
    2. '():' → logprob: -1.5049728155136108
    3. '()' → logprob: -6.1299729347229
    4. '(N' → logprob: -8.629972457885742
    5. '()(' → logprob: -8.754972457885742
    6. '("("' → logprob: -8.879972457885742
    7. '_' → logprob: -9.504972457885742
    8. '(_' → logprob: -9.879972457885742
    9. '(line' → logprob: -10.379972457885742
    10. ' (' → logprob: -10.879972457885742

Token 59: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006701277103275061
    2. '):
' → logprob: -5.506701469421387
    3. ',' → logprob: -6.631701469421387
    4. ')' → logprob: -7.131701469421387
    5. 's' → logprob: -8.256701469421387
    6. ':' → logprob: -9.131701469421387
    7. '():' → logprob: -10.506701469421387
    8. '=' → logprob: -10.506701469421387
    9. '[' → logprob: -11.506701469421387
    10. ' ):' → logprob: -11.506701469421387

Token 60: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038478512316942215
    2. ' return' → logprob: -3.9134786128997803
    3. ' line' → logprob: -4.163478374481201
    4. 'return' → logprob: -7.163478374481201
    5. ' =' → logprob: -7.538478374481201
    6. 'line' → logprob: -8.41347885131836
    7. '    ' → logprob: -8.53847885131836
    8. '=' → logprob: -8.91347885131836
    9. '    
' → logprob: -9.41347885131836
    10. ' parts' → logprob: -9.78847885131836

Token 61: ' N' (ID: 478)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.6537728905677795
    2. ' return' → logprob: -1.0287728309631348
    3. '   ' → logprob: -2.4037728309631348
    4. 'return' → logprob: -4.278772830963135
    5. 'line' → logprob: -4.403772830963135
    6. ' parts' → logprob: -5.653772830963135
    7. ' tokens' → logprob: -6.403772830963135
    8. 'tokens' → logprob: -7.778772830963135
    9. ' map' → logprob: -8.278773307800293
    10. 'parts' → logprob: -10.153773307800293

Token 62: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003687009448185563
    2. ' ,' → logprob: -5.628686904907227
    3. ',K' → logprob: -10.503686904907227
    4. ',int' → logprob: -10.878686904907227
    5. ',N' → logprob: -11.753686904907227
    6. '_,' → logprob: -11.878686904907227
    7. '=' → logprob: -12.128686904907227
    8. ',k' → logprob: -12.378686904907227
    9. ',
' → logprob: -12.628686904907227
    10. ',_' → logprob: -12.878686904907227

Token 63: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.006735742092132568
    2. ' ' → logprob: -5.631735801696777
    3. 'K' → logprob: -5.881735801696777
    4. ' ' → logprob: -8.631735801696777
    5. '<|end|>' → logprob: -9.256735801696777
    6. '  ' → logprob: -11.131735801696777
    7. 'space' → logprob: -11.256735801696777
    8. ' ,' → logprob: -12.256735801696777
    9. ' space' → logprob: -12.506735801696777
    10. ' ' → logprob: -12.506735801696777

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17977261543273926
    2. '=' → logprob: -1.8047726154327393
    3. ',' → logprob: -10.67977237701416
    4. '=line' → logprob: -13.17977237701416
    5. ' ' → logprob: -14.42977237701416
    6. ' =
' → logprob: -14.80477237701416
    7. ')' → logprob: -14.92977237701416
    8. '=int' → logprob: -15.05477237701416
    9. '<|end|>' → logprob: -15.30477237701416
    10. ' ,' → logprob: -15.67977237701416

Token 65: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.06264454126358032
    2. ' line' → logprob: -2.8126444816589355
    3. 'map' → logprob: -7.4376444816589355
    4. 'line' → logprob: -9.562644958496094
    5. ' ' → logprob: -11.937644958496094
    6. ' ' → logprob: -11.937644958496094
    7. ' list' → logprob: -13.312644958496094
    8. ' [' → logprob: -13.687644958496094
    9. '	map' → logprob: -14.437644958496094
    10. '(map' → logprob: -15.187644958496094

Token 66: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4531785249710083
    2. '(int' → logprob: -1.0781785249710083
    3. '(lambda' → logprob: -4.203178405761719
    4. '(str' → logprob: -4.703178405761719
    5. '<|end|>' → logprob: -9.078178405761719
    6. '(
' → logprob: -11.078178405761719
    7. '(line' → logprob: -12.078178405761719
    8. '[int' → logprob: -12.078178405761719
    9. '(s' → logprob: -12.453178405761719
    10. '(eval' → logprob: -13.078178405761719

Token 67: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.01757955737411976
    2. '(' → logprob: -4.642579555511475
    3. ')' → logprob: -5.267579555511475
    4. ',line' → logprob: -6.392579555511475
    5. ',' → logprob: -7.517579555511475
    6. ' line' → logprob: -9.017580032348633
    7. 'line' → logprob: -9.017580032348633
    8. '[line' → logprob: -9.517580032348633
    9. '=line' → logprob: -9.767580032348633
    10. '	line' → logprob: -10.892580032348633

Token 68: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.0040799472481012344
    2. 'line' → logprob: -5.504079818725586
    3. '	line' → logprob: -14.129079818725586
    4. '(line' → logprob: -15.004079818725586
    5. '[line' → logprob: -15.629079818725586
    6. '=line' → logprob: -15.754079818725586
    7. ')' → logprob: -16.879079818725586
    8. ',line' → logprob: -17.379079818725586
    9. '#line' → logprob: -18.254079818725586
    10. ' ' → logprob: -19.004079818725586

Token 69: '.split' (ID: 10347)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.15080933272838593
    2. '.split' → logprob: -2.4008092880249023
    3. '.' → logprob: -3.4008092880249023
    4. '().' → logprob: -4.150809288024902
    5. '.decode' → logprob: -8.775809288024902
    6. '.rstrip' → logprob: -10.150809288024902
    7. ' .' → logprob: -10.650809288024902
    8. 'strip' → logprob: -11.275809288024902
    9. '.readline' → logprob: -12.025809288024902
    10. ').' → logprob: -12.525809288024902

Token 70: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07940434664487839
    2. '()' → logprob: -2.579404354095459
    3. '('' → logprob: -7.954404354095459
    4. '(' → logprob: -9.3294038772583
    5. '()]' → logprob: -10.5794038772583
    6. '()))' → logprob: -11.3294038772583
    7. '())
' → logprob: -11.8294038772583
    8. ')' → logprob: -12.3294038772583
    9. '())

' → logprob: -12.3294038772583
    10. '(),' → logprob: -12.4544038772583

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3444494605064392
    2. ' return' → logprob: -2.219449520111084
    3. '<|end|>' → logprob: -2.469449520111084
    4. 'return' → logprob: -3.094449520111084
    5. '	return' → logprob: -3.844449520111084
    6. ' ' → logprob: -4.719449520111084
    7. '    
' → logprob: -4.844449520111084
    8. ' 
' → logprob: -5.719449520111084
    9. '
' → logprob: -5.844449520111084
    10. ':return' → logprob: -6.594449520111084

Token 72: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.39841583371162415
    2. '   ' → logprob: -1.7734158039093018
    3. 'return' (adapté à ' return') → logprob: -1.8984158039093018
    4. '	return' → logprob: -5.648416042327881
    5. '<|end|>' → logprob: -5.898416042327881
    6. '    
' → logprob: -6.773416042327881
    7. ':return' → logprob: -7.523416042327881
    8. ' 
' → logprob: -8.148415565490723
    9. '
' → logprob: -8.523415565490723
    10. ' ' → logprob: -8.648415565490723

Token 73: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2877592444419861
    2. ' N' → logprob: -1.4127593040466309
    3. '(N' → logprob: -5.537759304046631
    4. ' (' → logprob: -6.037759304046631
    5. ' ' → logprob: -9.037758827209473
    6. '(' → logprob: -9.037758827209473
    7. '   ' → logprob: -11.537758827209473
    8. ' ' → logprob: -11.787758827209473
    9. '	N' → logprob: -12.287758827209473
    10. '[N' → logprob: -13.287758827209473

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012312202714383602
    2. ',K' → logprob: -4.512312412261963
    3. ',N' → logprob: -7.262312412261963
    4. ' ,' → logprob: -7.512312412261963
    5. '<|end|>' → logprob: -12.012311935424805
    6. ',k' → logprob: -13.012311935424805
    7. 'K' → logprob: -13.262311935424805
    8. ' ' → logprob: -13.512311935424805
    9. ',
' → logprob: -13.512311935424805
    10. ' K' → logprob: -14.012311935424805

Token 75: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.009346721693873405
    2. 'K' → logprob: -4.7593464851379395
    3. ' ' → logprob: -7.3843464851379395
    4. ' ' → logprob: -9.134346961975098
    5. '‌' → logprob: -14.509346961975098
    6. ' 
' → logprob: -14.509346961975098
    7. 'space' → logprob: -15.009346961975098
    8. '<|end|>' → logprob: -15.134346961975098
    9. '​' → logprob: -15.384346961975098
    10. ' ‌' → logprob: -15.634346961975098

Token 76: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07393480092287064
    2. '<|end|>' → logprob: -3.32393479347229
    3. 'def' → logprob: -4.198935031890869
    4. '

' → logprob: -4.823935031890869
    5. '\n' → logprob: -5.948935031890869
    6. '```' → logprob: -6.073935031890869
    7. '\' → logprob: -6.323935031890869
    8. '' → logprob: -6.323935031890869
    9. '
' → logprob: -6.698935031890869
    10. '<|end|>' → logprob: -7.448935031890869

Token 77: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.021573403850197792
    2. '
' → logprob: -4.146573543548584
    3. '```' → logprob: -5.771573543548584
    4. '<|end|>' → logprob: -6.771573543548584
    5. '\' → logprob: -7.521573543548584
    6. '#' → logprob: -8.396573066711426
    7. '

' → logprob: -8.396573066711426
    8. '\n' → logprob: -9.396573066711426
    9. '
' → logprob: -10.646573066711426
    10. '<|end|>' → logprob: -10.646573066711426

Token 78: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.5625845193862915
    2. ' main' → logprob: -0.9375845193862915
    3. 'parse' → logprob: -3.562584400177002
    4. 'main' → logprob: -5.312584400177002
    5. ' solve' → logprob: -5.812584400177002
    6. ' input' → logprob: -7.062584400177002
    7. ' read' → logprob: -7.437584400177002
    8. ' process' → logprob: -8.68758487701416
    9. ' get' → logprob: -8.81258487701416
    10. 'solve' → logprob: -9.06258487701416

Token 79: '_array' (ID: 8766)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.0820488929748535
    2. '_' → logprob: -1.4570488929748535
    3. '_line' → logprob: -1.5820488929748535
    4. '_array' → logprob: -1.7070488929748535
    5. '_input' → logprob: -4.9570488929748535
    6. '_arr' → logprob: -5.2070488929748535
    7. '_A' → logprob: -5.3320488929748535
    8. '_int' → logprob: -5.4570488929748535
    9. '_data' → logprob: -5.8320488929748535
    10. '_L' → logprob: -5.9570488929748535

Token 80: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.00046498890151269734
    2. '(' → logprob: -7.750464916229248
    3. '_line' → logprob: -10.750465393066406
    4. '(lines' → logprob: -12.250465393066406
    5. '_(' → logprob: -12.625465393066406
    6. '(Line' → logprob: -13.875465393066406
    7. ' (' → logprob: -14.000465393066406
    8. '[line' → logprob: -14.250465393066406
    9. '_' → logprob: -14.375465393066406
    10. '#line' → logprob: -14.500465393066406

Token 81: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009712525061331689
    2. '):
' → logprob: -7.00097131729126
    3. ')' → logprob: -10.625970840454102
    4. ' ):' → logprob: -11.000970840454102
    5. '():' → logprob: -12.000970840454102
    6. '):
' → logprob: -12.125970840454102
    7. '   ' → logprob: -13.000970840454102
    8. '[]):' → logprob: -13.125970840454102
    9. ',' → logprob: -14.250970840454102
    10. ':' → logprob: -14.375970840454102

Token 82: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023876098915934563
    2. ' return' → logprob: -4.398876190185547
    3. 'return' → logprob: -5.023876190185547
    4. ' list' → logprob: -6.523876190185547
    5. 'np' → logprob: -6.648876190185547
    6. ' np' → logprob: -6.773876190185547
    7. 'list' → logprob: -7.398876190185547
    8. 'map' → logprob: -9.648876190185547
    9. 'arr' → logprob: -10.148876190185547
    10. ' map' → logprob: -10.148876190185547

Token 83: ' return' (ID: 622)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.21212761104106903
    2. 'list' → logprob: -1.7121275663375854
    3. ' return' → logprob: -5.087127685546875
    4. 'return' (adapté à ' return') → logprob: -5.587127685546875
    5. ' np' → logprob: -7.962127685546875
    6. '   ' → logprob: -8.337127685546875
    7. 'np' → logprob: -8.962127685546875
    8. ' ' → logprob: -12.087127685546875
    9. 'map' → logprob: -12.337127685546875
    10. ' map' → logprob: -12.587127685546875

Token 84: ' np' (ID: 5374)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.08214015513658524
    2. 'list' → logprob: -2.5821402072906494
    3. ' np' → logprob: -5.83213996887207
    4. 'np' → logprob: -8.08213996887207
    5. '[list' → logprob: -13.33213996887207
    6. ' ' → logprob: -14.20713996887207
    7. '[' → logprob: -14.58213996887207
    8. '[np' → logprob: -14.83213996887207
    9. '	list' → logprob: -15.08213996887207
    10. ' [' → logprob: -15.20713996887207

Token 85: '.array' (ID: 14557)
  Prédit: '.from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.from' → logprob: -0.5817904472351074
    2. '.array' → logprob: -0.8317904472351074
    3. '.asarray' → logprob: -5.706790447235107
    4. '.' → logprob: -6.331790447235107
    5. ' .' → logprob: -7.956790447235107
    6. '.ndarray' → logprob: -8.081790924072266
    7. ' array' → logprob: -11.081790924072266
    8. '.strptime' → logprob: -11.206790924072266
    9. 'array' → logprob: -11.456790924072266
    10. '.arr' → logprob: -11.831790924072266

Token 86: '(line' (ID: 18178)
  Prédit: '(list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.474348247051239
    2. '(' → logprob: -0.974348247051239
    3. '([' → logprob: -9.099348068237305
    4. '(line' → logprob: -9.474348068237305
    5. '(tuple' → logprob: -10.224348068237305
    6. '(np' → logprob: -10.849348068237305
    7. '(map' → logprob: -11.349348068237305
    8. ' (' → logprob: -12.099348068237305
    9. '(

' → logprob: -12.724348068237305
    10. '(
' → logprob: -12.974348068237305

Token 87: '.split' (ID: 10347)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.29033607244491577
    2. '.' → logprob: -2.2903361320495605
    3. ' .' → logprob: -2.2903361320495605
    4. '.split' → logprob: -3.0403361320495605
    5. '().' → logprob: -6.4153361320495605
    6. '.trim' → logprob: -10.415335655212402
    7. '.rstrip' → logprob: -11.165335655212402
    8. '.decode' → logprob: -11.540335655212402
    9. '   ' → logprob: -11.915335655212402
    10. '.strptime' → logprob: -13.665335655212402

Token 88: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.0032397438772022724
    2. '(),'' → logprob: -6.378239631652832
    3. '())' → logprob: -7.003239631652832
    4. '()' → logprob: -8.128239631652832
    5. '(' → logprob: -8.878239631652832
    6. '(','' → logprob: -9.378239631652832
    7. ',' → logprob: -9.878239631652832
    8. ' (),' → logprob: -11.003239631652832
    9. '(),"' → logprob: -11.253239631652832
    10. '('' → logprob: -11.753239631652832

Token 89: ' np' (ID: 5374)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.057957250624895096
    2. ' dtype' → logprob: -3.307957172393799
    3. 'int' → logprob: -3.932957172393799
    4. ' int' → logprob: -9.182957649230957
    5. '   ' → logprob: -11.057957649230957
    6. '  ' → logprob: -11.932957649230957
    7. ' ' → logprob: -13.057957649230957
    8. 'np' → logprob: -13.432957649230957
    9. ',int' → logprob: -13.682957649230957
    10. 'd' → logprob: -14.057957649230957

Token 90: '.int' (ID: 21499)
  Prédit: '.int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.int' → logprob: -0.006302499677985907
    2. '.' → logprob: -5.256302356719971
    3. '.ndarray' → logprob: -7.256302356719971
    4. ' .' → logprob: -8.506302833557129
    5. '.integer' → logprob: -9.381302833557129
    6. '.uint' → logprob: -10.006302833557129
    7. '.dtype' → logprob: -11.756302833557129
    8. '.randint' → logprob: -12.006302833557129
    9. '.float' → logprob: -12.131302833557129
    10. '.astype' → logprob: -12.631302833557129

Token 91: '64' (ID: 2220)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -0.0184534452855587
    2. '64' → logprob: -4.018453598022461
    3. '_)' → logprob: -8.518453598022461
    4. '_' → logprob: -9.393453598022461
    5. ')' → logprob: -11.268453598022461
    6. 'c' → logprob: -12.893453598022461
    7. '_,' → logprob: -13.018453598022461
    8. 'p' → logprob: -14.018453598022461
    9. '_)
' → logprob: -14.393453598022461
    10. '8' → logprob: -14.643453598022461

Token 92: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2471589798224159e-05
    2. ' )' → logprob: -11.875012397766113
    3. '))' → logprob: -12.625012397766113
    4. '),' → logprob: -14.250012397766113
    5. ',' → logprob: -14.500012397766113
    6. '[' → logprob: -15.750012397766113
    7. ')`' → logprob: -15.875012397766113
    8. '())' → logprob: -16.00001335144043
    9. '')' → logprob: -16.12501335144043
    10. ')))' → logprob: -16.25001335144043

Token 93: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7031331062316895
    2. '
' → logprob: -1.3281331062316895
    3. '\' → logprob: -2.3281331062316895
    4. '<|end|>' → logprob: -2.8281331062316895
    5. 'def' → logprob: -3.0781331062316895
    6. '_' → logprob: -4.7031331062316895
    7. '```' → logprob: -4.9531331062316895
    8. 'newline' → logprob: -5.3281331062316895
    9. '#' → logprob: -5.8281331062316895
    10. '(' → logprob: -6.3281331062316895

Token 94: ' sort' (ID: 4506)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.15480934083461761
    2. ' parse' → logprob: -2.0298092365264893
    3. ' solve' → logprob: -5.279809474945068
    4. ' process' → logprob: -6.279809474945068
    5. ' ' → logprob: -6.904809474945068
    6. ' _' → logprob: -7.654809474945068
    7. ' read' → logprob: -7.779809474945068
    8. ' compute' → logprob: -7.779809474945068
    9. '_main' → logprob: -7.779809474945068
    10. ' find' → logprob: -7.904809474945068

Token 95: '_array' (ID: 8766)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.63958340883255
    2. '_array' → logprob: -1.2645833492279053
    3. '(' → logprob: -2.0145833492279053
    4. 'def' → logprob: -3.1395833492279053
    5. 'array' → logprob: -6.014583587646484
    6. '(array' → logprob: -6.389583587646484
    7. '_(' → logprob: -6.514583587646484
    8. 'ed' → logprob: -6.639583587646484
    9. '_arrays' → logprob: -6.639583587646484
    10. '(arr' → logprob: -6.764583587646484

Token 96: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.32989707589149475
    2. '(array' → logprob: -1.3298970460891724
    3. '(' → logprob: -4.204896926879883
    4. '(a' → logprob: -6.704896926879883
    5. '(line' → logprob: -8.454896926879883
    6. ' (' → logprob: -9.579896926879883
    7. '(np' → logprob: -10.454896926879883
    8. '(buffer' → logprob: -12.204896926879883
    9. '(ar' → logprob: -12.204896926879883
    10. '_array' → logprob: -12.454896926879883

Token 97: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01611049845814705
    2. ',' → logprob: -4.266110420227051
    3. '):
' → logprob: -6.641110420227051
    4. ')' → logprob: -7.516110420227051
    5. ' ):' → logprob: -10.01611042022705
    6. '):
' → logprob: -10.51611042022705
    7. '():' → logprob: -12.39111042022705
    8. '   ' → logprob: -12.76611042022705
    9. ')：' → logprob: -13.01611042022705
    10. '(' → logprob: -13.26611042022705

Token 98: ' reverse' (ID: 18199)
  Prédit: ' ascending'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ascending' → logprob: -0.9909920692443848
    2. ' descending' → logprob: -1.4909920692443848
    3. ' reverse' → logprob: -1.8659920692443848
    4. 'reverse' → logprob: -2.7409920692443848
    5. 'ascending' → logprob: -2.9909920692443848
    6. ')' → logprob: -3.1159920692443848
    7. 'descending' → logprob: -3.3659920692443848
    8. ' axis' → logprob: -4.115992069244385
    9. ' kind' → logprob: -4.240992069244385
    10. ' )' → logprob: -4.615992069244385

Token 99: '=False' (ID: 12148)
  Prédit: '=False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=False' → logprob: -0.057876817882061005
    2. '=' → logprob: -3.3078768253326416
    3. '=True' → logprob: -3.9328768253326416
    4. '):' → logprob: -10.682876586914062
    5. ')=' → logprob: -11.307876586914062
    6. ')' → logprob: -12.182876586914062
    7. '=
' → logprob: -12.432876586914062
    8. ' =' → logprob: -12.807876586914062
    9. '=None' → logprob: -13.432876586914062
    10. '=

' → logprob: -13.432876586914062

Token 100: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -5.2762428822461516e-05
    2. ')' → logprob: -10.125052452087402
    3. '):
' → logprob: -12.125052452087402
    4. ' ):' → logprob: -12.125052452087402
    5. ':' → logprob: -13.625052452087402
    6. '=' → logprob: -16.00005340576172
    7. ',' → logprob: -16.12505340576172
    8. '   ' → logprob: -16.25005340576172
    9. '):
' → logprob: -16.87505340576172
    10. ')：' → logprob: -17.62505340576172

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03414317965507507
    2. ' return' → logprob: -3.9091432094573975
    3. 'arr' → logprob: -5.034142971038818
    4. ' arr' → logprob: -5.159142971038818
    5. 'return' → logprob: -6.784142971038818
    6. '	arr' → logprob: -10.659143447875977
    7. '	return' → logprob: -10.784143447875977
    8. ' sorted' → logprob: -10.784143447875977
    9. ')' → logprob: -11.284143447875977
    10. ' np' → logprob: -11.909143447875977

Token 102: ' arr' (ID: 1724)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6186105608940125
    2. 'return' → logprob: -1.1186106204986572
    3. '   ' → logprob: -2.1186106204986572
    4. 'arr' (adapté à ' arr') → logprob: -5.118610382080078
    5. ' np' → logprob: -5.618610382080078
    6. ' arr' → logprob: -5.868610382080078
    7. 'np' → logprob: -6.493610382080078
    8. 'sorted' → logprob: -9.118610382080078
    9. ' sorted' → logprob: -9.243610382080078
    10. '    ' → logprob: -9.493610382080078

Token 103: ' =' (ID: 314)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.011203788220882416
    2. '.' → logprob: -4.511203765869141
    3. 'sort' → logprob: -9.88620376586914
    4. '=' → logprob: -10.13620376586914
    5. '.args' → logprob: -10.13620376586914
    6. '[::-' → logprob: -11.63620376586914
    7. '_sort' → logprob: -12.01120376586914
    8. ' =' → logprob: -13.38620376586914
    9. '_sorted' → logprob: -13.51120376586914
    10. '.s' → logprob: -13.51120376586914

Token 104: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.47447705268859863
    2. ' np' → logprob: -0.9744770526885986
    3. 'arr' → logprob: -7.9744768142700195
    4. ' arr' → logprob: -10.59947681427002
    5. ' ' → logprob: -11.09947681427002
    6. '   ' → logprob: -11.97447681427002
    7. 'sorted' → logprob: -13.22447681427002
    8. '=np' → logprob: -13.34947681427002
    9. '(np' → logprob: -13.34947681427002
    10. '[np' → logprob: -13.72447681427002

Token 105: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0004988207365386188
    2. '.' → logprob: -7.6254987716674805
    3. '.flip' → logprob: -12.50049877166748
    4. '.sorted' → logprob: -12.75049877166748
    5. '.concatenate' → logprob: -13.87549877166748
    6. '.ndarray' → logprob: -14.12549877166748
    7. '.array' → logprob: -14.62549877166748
    8. '.asarray' → logprob: -14.62549877166748
    9. 'sort' → logprob: -14.75049877166748
    10. '.s' → logprob: -15.00049877166748

Token 106: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.00033999193692579865
    2. '(' → logprob: -8.000340461730957
    3. 'arr' → logprob: -12.375340461730957
    4. ')' → logprob: -16.25033950805664
    5. '(
' → logprob: -16.37533950805664
    6. '[arr' → logprob: -16.37533950805664
    7. '	arr' → logprob: -16.75033950805664
    8. '<arr' → logprob: -17.37533950805664
    9. ')(' → logprob: -17.50033950805664
    10. ' arr' → logprob: -17.62533950805664

Token 107: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06769666075706482
    2. ')' → logprob: -2.8176965713500977
    3. ')[' → logprob: -5.692696571350098
    4. ' ,' → logprob: -7.442696571350098
    5. '[::-' → logprob: -7.442696571350098
    6. 'arr' → logprob: -7.692696571350098
    7. ' if' → logprob: -8.317696571350098
    8. '   ' → logprob: -9.442696571350098
    9. ' ' → logprob: -9.942696571350098
    10. ',
' → logprob: -10.192696571350098

Token 108: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.40957093238830566
    2. ' if' → logprob: -1.4095709323883057
    3. '   ' → logprob: -2.4095709323883057
    4. '[::-' → logprob: -7.034570693969727
    5. '[' → logprob: -7.909570693969727
    6. '	if' → logprob: -8.159570693969727
    7. 'return' → logprob: -8.534570693969727
    8. '<|end|>' → logprob: -9.909570693969727
    9. 'arr' → logprob: -10.159570693969727
    10. ' ' → logprob: -10.284570693969727

Token 109: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0031213874462991953
    2. '   ' → logprob: -6.003121376037598
    3. ' if' → logprob: -7.378121376037598
    4. 'return' → logprob: -10.878121376037598
    5. '	if' → logprob: -14.253121376037598
    6. '[' → logprob: -14.878121376037598
    7. 'arr' → logprob: -15.753121376037598
    8. '[::-' → logprob: -16.128122329711914
    9. 'If' → logprob: -16.253122329711914
    10. '    ' → logprob: -16.753122329711914

Token 110: ' reverse' (ID: 18199)
  Prédit: ' reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reverse' → logprob: -0.023246875032782555
    2. 'reverse' → logprob: -3.7732467651367188
    3. '(reverse' → logprob: -13.523246765136719
    4. ' ' → logprob: -17.39824676513672
    5. '   ' → logprob: -17.77324676513672
    6. ' not' → logprob: -17.89824676513672
    7. '.reverse' → logprob: -17.89824676513672
    8. '_reverse' → logprob: -18.02324676513672
    9. 'Reverse' → logprob: -19.52324676513672
    10. '    ' → logprob: -19.52324676513672

Token 111: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012497170828282833
    2. '=True' → logprob: -5.0124969482421875
    3. ':
' → logprob: -5.2624969482421875
    4. ' :' → logprob: -7.6374969482421875
    5. '=' → logprob: -11.262496948242188
    6. '<|end|>' → logprob: -11.262496948242188
    7. '):' → logprob: -11.637496948242188
    8. ',' → logprob: -11.637496948242188
    9. '   ' → logprob: -11.762496948242188
    10. ' :
' → logprob: -11.887496948242188

Token 112: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15247014164924622
    2. 'arr' → logprob: -2.777470111846924
    3. '[::-' → logprob: -2.777470111846924
    4. ' arr' → logprob: -4.277470111846924
    5. '[arr' → logprob: -7.027470111846924
    6. 'return' → logprob: -7.527470111846924
    7. '
' → logprob: -7.777470111846924
    8. '	arr' → logprob: -7.902470111846924
    9. ' return' → logprob: -8.527470588684082
    10. '(arr' → logprob: -8.652470588684082

Token 113: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.12843967974185944
    2. 'arr' (adapté à ' arr') → logprob: -2.1284396648406982
    3. '   ' → logprob: -7.253439903259277
    4. ' return' → logprob: -7.753439903259277
    5. '	arr' → logprob: -8.378439903259277
    6. 'return' → logprob: -10.003439903259277
    7. '(arr' → logprob: -10.753439903259277
    8. '    ' → logprob: -11.128439903259277
    9. '.arr' → logprob: -11.128439903259277
    10. '[arr' → logprob: -11.128439903259277

Token 114: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03892280161380768
    2. ' =' → logprob: -3.2889227867126465
    3. '=np' → logprob: -7.2889227867126465
    4. '[::-' → logprob: -8.913923263549805
    5. '[:]' → logprob: -10.413923263549805
    6. '=
' → logprob: -11.413923263549805
    7. '＝' → logprob: -12.163923263549805
    8. '=re' → logprob: -12.163923263549805
    9. ' ' → logprob: -12.913923263549805
    10. '=

' → logprob: -13.038923263549805

Token 115: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.25202396512031555
    2. 'arr' → logprob: -1.5020239353179932
    3. '	arr' → logprob: -10.127023696899414
    4. ' np' → logprob: -10.252023696899414
    5. 'np' → logprob: -11.627023696899414
    6. ' ' → logprob: -13.002023696899414
    7. '(arr' → logprob: -13.127023696899414
    8. '[::-' → logprob: -13.502023696899414
    9. '<arr' → logprob: -13.752023696899414
    10. '_arr' → logprob: -13.752023696899414

Token 116: '[::-' (ID: 159890)
  Prédit: '[::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -1.771655115589965e-05
    2. '[' → logprob: -11.000018119812012
    3. '[-' → logprob: -14.750018119812012
    4. '[
' → logprob: -16.000017166137695
    5. '[...,' → logprob: -16.125017166137695
    6. ' [' → logprob: -17.000017166137695
    7. '```' → logprob: -17.000017166137695
    8. '::-' → logprob: -17.125017166137695
    9. 's' → logprob: -17.500017166137695
    10. '[end' → logprob: -17.750017166137695

Token 117: '1' (ID: 16)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.004112119786441326
    2. '1' → logprob: -5.879112243652344
    3. 'ase' → logprob: -6.879112243652344
    4. 'e' → logprob: -8.879112243652344
    5. 's' → logprob: -9.504112243652344
    6. 'es' → logprob: -10.379112243652344
    7. 'sort' → logprob: -12.004112243652344
    8. 'al' → logprob: -12.254112243652344
    9. '```' → logprob: -12.629112243652344
    10. 'ce' → logprob: -12.754112243652344

Token 118: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.25329649448394775
    2. ']
' → logprob: -1.5032964944839478
    3. '   ' → logprob: -6.753296375274658
    4. ')' → logprob: -9.503296852111816
    5. ']
' → logprob: -9.628296852111816
    6. ')
' → logprob: -10.503296852111816
    7. ' ]' → logprob: -11.628296852111816
    8. ' ]
' → logprob: -11.878296852111816
    9. ']

' → logprob: -12.128296852111816
    10. ',' → logprob: -12.753296852111816

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03630296513438225
    2. 'return' → logprob: -3.5363030433654785
    3. ' return' → logprob: -5.0363030433654785
    4. '
' → logprob: -11.16130256652832
    5. '	return' → logprob: -11.41130256652832
    6. '    
' → logprob: -12.53630256652832
    7. ':return' → logprob: -13.28630256652832
    8. ',' → logprob: -14.41130256652832
    9. '       ' → logprob: -14.91130256652832
    10. ' 
' → logprob: -15.41130256652832

Token 120: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06306814402341843
    2. ' return' → logprob: -2.813068151473999
    3. '   ' → logprob: -6.81306791305542
    4. '	return' → logprob: -14.813068389892578
    5. ' ' → logprob: -16.438068389892578
    6. ':return' → logprob: -16.563068389892578
    7. '  ' → logprob: -18.063068389892578
    8. 'eturn' → logprob: -18.188068389892578
    9. '_return' → logprob: -18.688068389892578
    10. '{return' → logprob: -18.813068389892578

Token 121: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.04858805239200592
    2. ' arr' → logprob: -3.0485880374908447
    3. '	arr' → logprob: -14.798587799072266
    4. '(arr' → logprob: -14.923587799072266
    5. '_arr' → logprob: -18.173587799072266
    6. 'array' → logprob: -18.673587799072266
    7. '[arr' → logprob: -19.548587799072266
    8. '$arr' → logprob: -19.923587799072266
    9. ' ' → logprob: -19.923587799072266
    10. ' ' → logprob: -20.298587799072266

Token 122: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31137949228286743
    2. '
' → logprob: -2.0613794326782227
    3. '<|end|>' → logprob: -2.0613794326782227
    4. '

' → logprob: -4.686379432678223
    5. '```' → logprob: -6.436379432678223
    6. '\n' → logprob: -7.186379432678223
    7. '\' → logprob: -7.686379432678223
    8. '<|end|>' → logprob: -8.436379432678223
    9. '[' → logprob: -9.061379432678223
    10. ' def' → logprob: -9.061379432678223

Token 123: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006900905631482601
    2. '
' → logprob: -5.381900787353516
    3. '#' → logprob: -7.131900787353516
    4. 'd' → logprob: -8.381900787353516
    5. 'import' → logprob: -8.381900787353516
    6. '```' → logprob: -8.381900787353516
    7. '<|end|>' → logprob: -8.756900787353516
    8. '\' → logprob: -8.881900787353516
    9. '

' → logprob: -9.256900787353516
    10. '[' → logprob: -9.506900787353516

Token 124: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.06883926689624786
    2. 'main' → logprob: -3.3188393115997314
    3. ' binary' → logprob: -4.693839073181152
    4. ' sum' → logprob: -5.818839073181152
    5. ' max' → logprob: -5.943839073181152
    6. ' solve' → logprob: -6.193839073181152
    7. 'binary' → logprob: -6.193839073181152
    8. ' parse' → logprob: -6.443839073181152
    9. ' find' → logprob: -6.443839073181152
    10. ' process' → logprob: -7.318839073181152

Token 125: '_input' (ID: 12507)
  Prédit: '_st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.07871197164058685
    2. '_buffer' → logprob: -3.078711986541748
    3. '_line' → logprob: -4.203711986541748
    4. '_array' → logprob: -4.953711986541748
    5. 'line' → logprob: -5.953711986541748
    6. '_from' → logprob: -6.703711986541748
    7. '_' → logprob: -6.703711986541748
    8. '_input' → logprob: -7.578711986541748
    9. '_lines' → logprob: -7.828711986541748
    10. 'def' → logprob: -8.45371150970459

Token 126: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00122844276484102
    2. '():
' → logprob: -6.751228332519531
    3. '(buffer' → logprob: -10.626228332519531
    4. ' ():' → logprob: -10.751228332519531
    5. '_buffer' → logprob: -11.751228332519531
    6. '()' → logprob: -12.876228332519531
    7. '():

' → logprob: -14.251228332519531
    8. '(' → logprob: -14.626228332519531
    9. '_line' → logprob: -15.876228332519531
    10. '_' → logprob: -16.00122833251953

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004588314797729254
    2. 'buffer' → logprob: -5.6295881271362305
    3. ' buffer' → logprob: -7.0045881271362305
    4. '	buffer' → logprob: -10.25458812713623
    5. '_buffer' → logprob: -11.12958812713623
    6. '(buffer' → logprob: -11.37958812713623
    7. '   ' → logprob: -11.87958812713623
    8. '    
' → logprob: -12.00458812713623
    9. '
' → logprob: -13.50458812713623
    10. '```' → logprob: -13.62958812713623

Token 128: ' buffer' (ID: 8573)
  Prédit: 'buffer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buffer' (adapté à ' buffer') → logprob: -0.021799832582473755
    2. ' buffer' → logprob: -4.0218000411987305
    3. '   ' → logprob: -6.3968000411987305
    4. 'buf' → logprob: -6.3968000411987305
    5. 'stdin' → logprob: -9.02180004119873
    6. 'buff' → logprob: -9.27180004119873
    7. ' buf' → logprob: -10.02180004119873
    8. ' buff' → logprob: -11.77180004119873
    9. 'import' → logprob: -11.89680004119873
    10. 'input' → logprob: -12.14680004119873

Token 129: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759415626525879
    2. ' =' → logprob: -0.8259415626525879
    3. '   ' → logprob: -14.07594108581543
    4. '=sys' → logprob: -15.07594108581543
    5. '=get' → logprob: -15.20094108581543
    6. '_' → logprob: -15.57594108581543
    7. ' ' → logprob: -16.07594108581543
    8. '_=' → logprob: -16.32594108581543
    9. '=
' → logprob: -16.45094108581543
    10. '  ' → logprob: -16.82594108581543

Token 130: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.286785751581192
    2. 'get' → logprob: -1.7867857217788696
    3. ' sys' → logprob: -2.536785840988159
    4. 'sys' → logprob: -5.91178560256958
    5. '	get' → logprob: -14.286786079406738
    6. '(get' → logprob: -14.661786079406738
    7. ' ' → logprob: -15.161786079406738
    8. '_get' → logprob: -15.411786079406738
    9. '(sys' → logprob: -15.911786079406738
    10. '=sys' → logprob: -16.161785125732422

Token 131: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -9.13388703338569e-06
    2. 'stdin' → logprob: -11.750009536743164
    3. ' stdin' → logprob: -14.625009536743164
    4. '_' → logprob: -14.750009536743164
    5. '_stdout' → logprob: -16.000009536743164
    6. '_sys' → logprob: -16.750009536743164
    7. '_s' → logprob: -16.875009536743164
    8. ' St' → logprob: -17.000009536743164
    9. ' _' → logprob: -17.375009536743164
    10. '(stdin' → logprob: -17.375009536743164

Token 132: 'din' (ID: 28388)
  Prédit: 'din'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'din' → logprob: -0.021040206775069237
    2. 'in' → logprob: -3.896040201187134
    3. 'd' → logprob: -7.646040439605713
    4. 'DIN' → logprob: -12.021039962768555
    5. 'id' → logprob: -12.271039962768555
    6. '_in' → logprob: -13.521039962768555
    7. 'stdin' → logprob: -13.521039962768555
    8. 'Din' → logprob: -13.896039962768555
    9. 'rin' → logprob: -14.021039962768555
    10. 'di' → logprob: -14.146039962768555

Token 133: '_buffer' (ID: 17892)
  Prédit: '_buffer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_buffer' → logprob: -7.896309739408025e-07
    2. '_' → logprob: -15.625000953674316
    3. '_buf' → logprob: -15.750000953674316
    4. '_buff' → logprob: -15.875000953674316
    5. 'buffer' → logprob: -16.25
    6. '_buffers' → logprob: -16.875
    7. '_Buffer' → logprob: -17.125
    8. '_BUFFER' → logprob: -17.375
    9. 'Buffer' → logprob: -17.5
    10. '().' → logprob: -18.125

Token 134: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0019437457667663693
    2. '()
' → logprob: -6.251943588256836
    3. '()

' → logprob: -11.751943588256836
    4. '()
' → logprob: -11.876943588256836
    5. ')' → logprob: -16.376943588256836
    6. '()`' → logprob: -16.376943588256836
    7. '())' → logprob: -16.751943588256836
    8. '(' → logprob: -16.751943588256836
    9. '()

' → logprob: -17.001943588256836
    10. '().' → logprob: -17.501943588256836

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15752603113651276
    2. 'line' → logprob: -2.1575260162353516
    3. ' line' → logprob: -3.5325260162353516
    4. '	line' → logprob: -8.157526016235352
    5. ' lines' → logprob: -9.407526016235352
    6. ' readline' → logprob: -9.407526016235352
    7. '    
' → logprob: -9.782526016235352
    8. '
' → logprob: -9.907526016235352
    9. '#line' → logprob: -10.032526016235352
    10. 'lines' → logprob: -10.157526016235352

Token 136: ' n' (ID: 297)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.05375693365931511
    2. ' line' → logprob: -3.0537569522857666
    3. 'first' → logprob: -6.4287567138671875
    4. 'N' → logprob: -6.5537567138671875
    5. ' N' → logprob: -6.9287567138671875
    6. ' first' → logprob: -7.3037567138671875
    7. 'lines' → logprob: -9.178756713867188
    8. 'raw' → logprob: -9.428756713867188
    9. '   ' → logprob: -9.553756713867188
    10. 'n' (adapté à ' n') → logprob: -9.928756713867188

Token 137: '_k' (ID: 11637)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.15070515871047974
    2. '_bytes' → logprob: -2.525705099105835
    3. 'um' → logprob: -3.525705099105835
    4. 'line' → logprob: -5.025705337524414
    5. '_lines' → logprob: -5.150705337524414
    6. 'put' → logprob: -5.150705337524414
    7. 'ext' → logprob: -5.400705337524414
    8. 'umber' → logprob: -7.025705337524414
    9. 'ame' → logprob: -7.275705337524414
    10. 'o' → logprob: -7.275705337524414

Token 138: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.002430832479149103
    2. '_bytes' → logprob: -6.3774309158325195
    3. 'line' → logprob: -7.8774309158325195
    4. ' =' → logprob: -9.12743091583252
    5. '_data' → logprob: -9.12743091583252
    6. '=' → logprob: -9.50243091583252
    7. '_raw' → logprob: -11.50243091583252
    8. '_byte' → logprob: -11.62743091583252
    9. '=line' → logprob: -11.75243091583252
    10. '_buffer' → logprob: -12.37743091583252

Token 139: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931717991828918
    2. ' =' → logprob: -0.6931717991828918
    3. '   ' → logprob: -11.068171501159668
    4. ' ' → logprob: -12.943171501159668
    5. '=b' → logprob: -13.193171501159668
    6. ',' → logprob: -13.443171501159668
    7. '_' → logprob: -13.818171501159668
    8. 's' → logprob: -14.943171501159668
    9. '_bytes' → logprob: -14.943171501159668
    10. '=line' → logprob: -15.318171501159668

Token 140: ' readline' (ID: 179561)
  Prédit: ' readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' readline' → logprob: -0.2667645514011383
    2. 'read' → logprob: -2.2667646408081055
    3. 'buffer' → logprob: -2.6417646408081055
    4. ' buffer' → logprob: -2.8917646408081055
    5. ' read' → logprob: -5.6417646408081055
    6. '.readline' → logprob: -8.891764640808105
    7. '(buffer' → logprob: -11.516764640808105
    8. 'decode' → logprob: -11.516764640808105
    9. '	buffer' → logprob: -11.704264640808105
    10. '	read' → logprob: -11.891764640808105

Token 141: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -7.703443770878948e-06
    2. 'stdin' → logprob: -13.500007629394531
    3. '(stdin' → logprob: -13.500007629394531
    4. '_(' → logprob: -13.750007629394531
    5. '_stdout' → logprob: -13.750007629394531
    6. '```' → logprob: -14.625007629394531
    7. '(st' → logprob: -14.750007629394531
    8. '_' → logprob: -14.875007629394531
    9. '_std' → logprob: -14.875007629394531
    10. '(buffer' → logprob: -15.375007629394531

Token 142: 'din' (ID: 28388)
  Prédit: 'din'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'din' → logprob: -0.0013629741733893752
    2. 'd' → logprob: -6.7513628005981445
    3. 'in' → logprob: -8.626362800598145
    4. 'rin' → logprob: -11.876362800598145
    5. 'Din' → logprob: -14.251362800598145
    6. 'DIN' → logprob: -14.251362800598145
    7. 'di' → logprob: -14.376362800598145
    8. 'df' → logprob: -14.501362800598145
    9. '[' → logprob: -14.501362800598145
    10. '(' → logprob: -15.126362800598145

Token 143: '(buffer' (ID: 26754)
  Prédit: '(buffer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(buffer' → logprob: -2.1008713702030946e-06
    2. '(' → logprob: -13.125001907348633
    3. ' (' → logprob: -17.375001907348633
    4. 'buffer' → logprob: -17.500001907348633
    5. '(Buffer' → logprob: -17.500001907348633
    6. '(buff' → logprob: -19.250001907348633
    7. ' buffer' → logprob: -20.125001907348633
    8. '(buf' → logprob: -20.500001907348633
    9. '(
' → logprob: -21.500001907348633
    10. '	buffer' → logprob: -22.500001907348633

Token 144: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20209895074367523
    2. ').' → logprob: -1.7020989656448364
    3. ')
' → logprob: -7.952098846435547
    4. '())' → logprob: -8.702098846435547
    5. '()).' → logprob: -9.577098846435547
    6. '()' → logprob: -10.202098846435547
    7. ' )' → logprob: -10.577098846435547
    8. ')`' → logprob: -11.202098846435547
    9. ' ).' → logprob: -12.577098846435547
    10. ' ' → logprob: -13.077098846435547

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01233728602528572
    2. 'n' → logprob: -4.7623372077941895
    3. ' n' → logprob: -6.3873372077941895
    4. '
' → logprob: -6.7623372077941895
    5. '    
' → logprob: -8.137337684631348
    6. 'data' → logprob: -9.012337684631348
    7. 'return' → logprob: -9.512337684631348
    8. 'line' → logprob: -9.637337684631348
    9. 'N' → logprob: -10.137337684631348
    10. 'arr' → logprob: -10.637337684631348

Token 146: ' a' (ID: 261)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.25334709882736206
    2. ' N' → logprob: -1.7533471584320068
    3. 'n' → logprob: -3.253347158432007
    4. ' n' → logprob: -4.503346920013428
    5. '   ' → logprob: -8.753347396850586
    6. 'return' → logprob: -8.753347396850586
    7. 'decoded' → logprob: -8.753347396850586
    8. ' decoded' → logprob: -8.878347396850586
    9. ' return' → logprob: -9.003347396850586
    10. ' ' → logprob: -10.878347396850586

Token 147: '_line' (ID: 14418)
  Prédit: 'rray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rray' → logprob: -0.21974189579486847
    2. 'rr' → logprob: -1.969741940498352
    3. '_line' → logprob: -2.9697418212890625
    4. ' =' → logprob: -5.3447418212890625
    5. '_rr' → logprob: -7.3447418212890625
    6. '_n' → logprob: -8.219741821289062
    7. 'r' → logprob: -8.469741821289062
    8. '=' → logprob: -8.969741821289062
    9. '_array' → logprob: -9.219741821289062
    10. '_' → logprob: -9.344741821289062

Token 148: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.474087119102478
    2. ' =' → logprob: -0.974087119102478
    3. '   ' → logprob: -11.59908676147461
    4. ' ' → logprob: -14.59908676147461
    5. '=line' → logprob: -16.22408676147461
    6. ' ' → logprob: -16.34908676147461
    7. '    ' → logprob: -16.59908676147461
    8. '  ' → logprob: -16.72408676147461
    9. '=
' → logprob: -16.97408676147461
    10. '＝' → logprob: -17.47408676147461

Token 149: ' readline' (ID: 179561)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.31356319785118103
    2. ' readline' → logprob: -1.3135632276535034
    3. '.readline' → logprob: -8.188563346862793
    4. ' read' → logprob: -11.188563346862793
    5. 'line' → logprob: -12.688563346862793
    6. 'readonly' → logprob: -13.188563346862793
    7. 'newline' → logprob: -13.313563346862793
    8. ' ' → logprob: -13.938563346862793
    9. 'getline' → logprob: -14.063563346862793
    10. 'buffer' → logprob: -14.938563346862793

Token 150: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -5.796184723294573e-06
    2. 'stdin' → logprob: -12.250005722045898
    3. 'St' → logprob: -14.125005722045898
    4. '_s' → logprob: -16.7500057220459
    5. '_stdout' → logprob: -17.1250057220459
    6. '(stdin' → logprob: -17.5000057220459
    7. 'st' → logprob: -17.7500057220459
    8. '_' → logprob: -17.7500057220459
    9. '_std' → logprob: -18.0000057220459
    10. '_ST' → logprob: -18.1250057220459

Token 151: 'din' (ID: 28388)
  Prédit: 'din'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'din' → logprob: -0.009845215827226639
    2. 'in' → logprob: -4.63484525680542
    3. 'd' → logprob: -9.634844779968262
    4. 'DIN' → logprob: -11.759844779968262
    5. 'rin' → logprob: -12.259844779968262
    6. 'Din' → logprob: -12.884844779968262
    7. 'ind' → logprob: -13.384844779968262
    8. 'di' → logprob: -13.759844779968262
    9. 'stdin' → logprob: -14.009844779968262
    10. '[' → logprob: -14.259844779968262

Token 152: '(buffer' (ID: 26754)
  Prédit: '(buffer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(buffer' → logprob: -0.01843460276722908
    2. '_st' → logprob: -4.018434524536133
    3. '_buffer' → logprob: -8.768434524536133
    4. 'buffer' → logprob: -9.143434524536133
    5. '(' → logprob: -12.143434524536133
    6. '(stdin' → logprob: -12.268434524536133
    7. ' buffer' → logprob: -12.893434524536133
    8. '(st' → logprob: -13.268434524536133
    9. '```' → logprob: -13.393434524536133
    10. '(buff' → logprob: -14.018434524536133

Token 153: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010478160111233592
    2. ')
' → logprob: -6.876047611236572
    3. '())' → logprob: -12.25104808807373
    4. '()' → logprob: -12.37604808807373
    5. '   ' → logprob: -13.12604808807373
    6. ').' → logprob: -13.25104808807373
    7. ' )' → logprob: -14.00104808807373
    8. ')

' → logprob: -14.50104808807373
    9. ')
' → logprob: -15.12604808807373
    10. ')`' → logprob: -15.25104808807373

Token 154: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001298927003517747
    2. '
' → logprob: -7.251298904418945
    3. 'n' → logprob: -7.751298904418945
    4. '    
' → logprob: -9.376298904418945
    5. 'N' → logprob: -9.626298904418945
    6. 'return' → logprob: -13.876298904418945
    7. ' n' → logprob: -13.876298904418945
    8. '```' → logprob: -14.126298904418945
    9. '  
' → logprob: -14.251298904418945
    10. 'def' → logprob: -14.251298904418945

Token 155: ' f' (ID: 285)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.011217700317502022
    2. ' N' → logprob: -5.1362175941467285
    3. '   ' → logprob: -5.5112175941467285
    4. 'n' → logprob: -6.7612175941467285
    5. '
' → logprob: -10.386218070983887
    6. '    
' → logprob: -11.511218070983887
    7. '	N' → logprob: -12.011218070983887
    8. 'return' → logprob: -12.136218070983887
    9. ' n' → logprob: -12.261218070983887
    10. ' ' → logprob: -12.511218070983887

Token 156: '_line' (ID: 14418)
  Prédit: 'irst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'irst' → logprob: -1.1353038549423218
    2. '_array' → logprob: -1.1353038549423218
    3. '_a' → logprob: -1.3853038549423218
    4. 'a' → logprob: -3.5103039741516113
    5. 'rom' → logprob: -4.135303974151611
    6. '_arr' → logprob: -4.385303974151611
    7. '_buffer' → logprob: -4.635303974151611
    8. ' =' → logprob: -4.760303974151611
    9. 'requencies' → logprob: -4.885303974151611
    10. 'arr' → logprob: -5.010303974151611

Token 157: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14270398020744324
    2. '=' → logprob: -2.0177040100097656
    3. '   ' → logprob: -10.517704010009766
    4. ' ' → logprob: -14.642704010009766
    5. '    ' → logprob: -15.392704010009766
    6. '=line' → logprob: -15.517704010009766
    7. ' ' → logprob: -16.017704010009766
    8. '  ' → logprob: -16.142704010009766
    9. 'read' → logprob: -16.392704010009766
    10. '=get' → logprob: -16.517704010009766

Token 158: ' readline' (ID: 179561)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.0002787359117064625
    2. ' readline' → logprob: -8.37527847290039
    3. '.readline' → logprob: -10.00027847290039
    4. 'line' → logprob: -13.37527847290039
    5. ' read' → logprob: -14.12527847290039
    6. '(read' → logprob: -15.25027847290039
    7. 'readonly' → logprob: -16.37527847290039
    8. '_read' → logprob: -17.00027847290039
    9. '	read' → logprob: -17.00027847290039
    10. '   ' → logprob: -17.37527847290039

Token 159: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -1.1279553291387856e-05
    2. 'St' → logprob: -12.125011444091797
    3. 'stdin' → logprob: -12.125011444091797
    4. '_s' → logprob: -15.875011444091797
    5. 'buffer' → logprob: -16.250011444091797
    6. '_' → logprob: -17.500011444091797
    7. '_buffer' → logprob: -17.750011444091797
    8. '_stdio' → logprob: -18.000011444091797
    9. '_std' → logprob: -18.125011444091797
    10. '```' → logprob: -18.250011444091797

Token 160: 'din' (ID: 28388)
  Prédit: 'din'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'din' → logprob: -0.05033029988408089
    2. 'in' → logprob: -3.050330400466919
    3. 'd' → logprob: -6.42533016204834
    4. 'di' → logprob: -10.55033016204834
    5. 'DIN' → logprob: -10.55033016204834
    6. 'IN' → logprob: -10.67533016204834
    7. 'stdin' → logprob: -11.80033016204834
    8. 'inp' → logprob: -12.67533016204834
    9. '[in' → logprob: -12.67533016204834
    10. 'df' → logprob: -12.67533016204834

Token 161: '(buffer' (ID: 26754)
  Prédit: '(buffer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(buffer' → logprob: -0.049015264958143234
    2. '_st' → logprob: -3.0490152835845947
    3. '_buffer' → logprob: -8.924015045166016
    4. '(' → logprob: -9.424015045166016
    5. 'buffer' → logprob: -9.424015045166016
    6. '(stdin' → logprob: -9.799015045166016
    7. '```' → logprob: -11.424015045166016
    8. '_s' → logprob: -11.424015045166016
    9. 's' → logprob: -11.549015045166016
    10. '(buff' → logprob: -11.924015045166016

Token 162: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0789109393954277
    2. ')
' → logprob: -2.5789108276367188
    3. ')

' → logprob: -11.453910827636719
    4. ')
' → logprob: -12.578910827636719
    5. '   ' → logprob: -12.953910827636719
    6. ')`
' → logprob: -13.453910827636719
    7. '()' → logprob: -13.828910827636719
    8. ').' → logprob: -14.078910827636719
    9. ')`' → logprob: -14.953910827636719
    10. ' )' → logprob: -15.578910827636719

Token 163: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03566506877541542
    2. '
' → logprob: -3.7856650352478027
    3. '    
' → logprob: -4.535665035247803
    4. 'n' → logprob: -7.285665035247803
    5. ')' → logprob: -7.535665035247803
    6. 'def' → logprob: -9.410665512084961
    7. 'return' → logprob: -9.535665512084961
    8. ' 
' → logprob: -10.285665512084961
    9. ')
' → logprob: -10.410665512084961
    10. '  
' → logprob: -10.535665512084961

Token 164: ' return' (ID: 622)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5580806732177734
    2. '   ' → logprob: -1.4330806732177734
    3. 'n' → logprob: -1.8080806732177734
    4. '
' → logprob: -4.558080673217773
    5. ' N' → logprob: -4.558080673217773
    6. '    
' → logprob: -6.558080673217773
    7. ' n' → logprob: -6.808080673217773
    8. 'return' (adapté à ' return') → logprob: -7.683080673217773
    9. ' ' → logprob: -8.183080673217773
    10. 'def' → logprob: -8.183080673217773

Token 165: ' n' (ID: 297)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.23588500916957855
    2. ' parse' → logprob: -2.23588490486145
    3. '(parse' → logprob: -2.98588490486145
    4. 'n' → logprob: -3.11088490486145
    5. ' n' → logprob: -5.360885143280029
    6. '(n' → logprob: -6.610885143280029
    7. ' (' → logprob: -6.735885143280029
    8. 'np' → logprob: -8.235884666442871
    9. 'buffer' → logprob: -9.235884666442871
    10. '(' → logprob: -9.235884666442871

Token 166: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.004048717673867941
    2. '_K' → logprob: -6.129048824310303
    3. '_,' → logprob: -7.379048824310303
    4. ',' → logprob: -7.879048824310303
    5. '_' → logprob: -7.879048824310303
    6. ',_' → logprob: -8.379048347473145
    7. ',K' → logprob: -9.129048347473145
    8. ',k' → logprob: -9.254048347473145
    9. 'K' → logprob: -11.879048347473145
    10. '_n' → logprob: -12.129048347473145

Token 167: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -1.9385402993066236e-05
    2. '_' → logprob: -11.125019073486328
    3. 'line' → logprob: -13.250019073486328
    4. '_l' → logprob: -13.875019073486328
    5. '_LINE' → logprob: -15.125019073486328
    6. '_lin' → logprob: -15.375019073486328
    7. '_li' → logprob: -15.625019073486328
    8. '_,' → logprob: -15.750019073486328
    9. ',_' → logprob: -15.750019073486328
    10. '\' → logprob: -16.000019073486328

Token 168: ',' (ID: 11)
  Prédit: '.decode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.decode' → logprob: -0.7435649633407593
    2. '.strip' → logprob: -0.7435649633407593
    3. '.rstrip' → logprob: -3.493565082550049
    4. ',' → logprob: -4.993565082550049
    5. '.split' → logprob: -5.118565082550049
    6. '[:-' → logprob: -5.493565082550049
    7. '
' → logprob: -7.743565082550049
    8. 'decode' → logprob: -7.868565082550049
    9. 'rstrip' → logprob: -8.49356460571289
    10. '<|end|>' → logprob: -8.99356460571289

Token 169: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20141363143920898
    2. ' a' → logprob: -1.701413631439209
    3. '	a' → logprob: -15.451414108276367
    4. ' ' → logprob: -16.076414108276367
    5. '   ' → logprob: -17.076414108276367
    6. ' ' → logprob: -17.201414108276367
    7. '_a' → logprob: -17.951414108276367
    8. '(a' → logprob: -18.451414108276367
    9. ',a' → logprob: -18.451414108276367
    10. ''a' → logprob: -18.701414108276367

Token 170: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.005982712376862764
    2. '_' → logprob: -5.130982875823975
    3. '_l' → logprob: -10.505982398986816
    4. '_LINE' → logprob: -12.005982398986816
    5. '_lin' → logprob: -12.380982398986816
    6. '_Line' → logprob: -12.505982398986816
    7. '_lines' → logprob: -12.755982398986816
    8. 'line' → logprob: -13.505982398986816
    9. '_,' → logprob: -13.880982398986816
    10. '_ll' → logprob: -13.880982398986816

Token 171: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025797015987336636
    2. ' ,' → logprob: -6.627579689025879
    3. ',f' → logprob: -6.752579689025879
    4. ' f' → logprob: -10.002579689025879
    5. 'f' → logprob: -10.252579689025879
    6. ' ' → logprob: -13.752579689025879
    7. ',
' → logprob: -13.877579689025879
    8. ',b' → logprob: -14.127579689025879
    9. '   ' → logprob: -14.502579689025879
    10. '
' → logprob: -15.252579689025879

Token 172: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.47407880425453186
    2. 'f' → logprob: -0.9740787744522095
    3. ' ' → logprob: -13.724079132080078
    4. ' ' → logprob: -15.474079132080078
    5. '   ' → logprob: -15.849079132080078
    6. '	f' → logprob: -15.974079132080078
    7. '
' → logprob: -16.474079132080078
    8. '    ' → logprob: -16.724079132080078
    9. '  ' → logprob: -17.474079132080078
    10. '_f' → logprob: -17.599079132080078

Token 173: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.00041267683263868093
    2. '_' → logprob: -8.750412940979004
    3. '_l' → logprob: -9.250412940979004
    4. 'line' → logprob: -9.625412940979004
    5. '_lines' → logprob: -9.875412940979004
    6. '_lin' → logprob: -11.000412940979004
    7. '_buffer' → logprob: -11.500412940979004
    8. 'Line' → logprob: -13.250412940979004
    9. '_lineno' → logprob: -13.500412940979004
    10. '_LINE' → logprob: -13.500412940979004

Token 174: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 175: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0235319584608078
    2. '
' → logprob: -3.773531913757324
    3. '<|end|>' → logprob: -9.148531913757324
    4. 'import' → logprob: -9.773531913757324
    5. '```' → logprob: -10.273531913757324
    6. '  
' → logprob: -10.648531913757324
    7. '

' → logprob: -10.773531913757324
    8. '#' → logprob: -11.773531913757324
    9. '<|end|>' → logprob: -12.148531913757324
    10. '\n' → logprob: -12.148531913757324

Token 176: ' prepare' (ID: 13708)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.005013394169509411
    2. ' main' → logprob: -5.505013465881348
    3. 'process' → logprob: -7.380013465881348
    4. 'solve' → logprob: -8.880013465881348
    5. 'def' → logprob: -9.005013465881348
    6. 'min' → logprob: -10.755013465881348
    7. 'max' → logprob: -12.255013465881348
    8. 'maximize' → logprob: -12.380013465881348
    9. 'minimum' → logprob: -12.505013465881348
    10. 'parse' → logprob: -13.005013465881348

Token 177: '_data' (ID: 3537)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.22876745462417603
    2. '_data' → logprob: -2.4787673950195312
    3. '_arrays' → logprob: -2.6037673950195312
    4. '_inputs' → logprob: -4.103767395019531
    5. '_array' → logprob: -4.478767395019531
    6. '_' → logprob: -4.728767395019531
    7. '(' → logprob: -6.853767395019531
    8. '_buffer' → logprob: -6.978767395019531
    9. '(_' → logprob: -7.228767395019531
    10. '()' → logprob: -7.228767395019531

Token 178: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04708675667643547
    2. '():' → logprob: -3.297086715698242
    3. '(' → logprob: -5.047086715698242
    4. '(line' → logprob: -6.047086715698242
    5. '(buffer' → logprob: -9.672086715698242
    6. '(lines' → logprob: -9.922086715698242
    7. '(input' → logprob: -10.172086715698242
    8. '(*' → logprob: -11.297086715698242
    9. '(data' → logprob: -12.047086715698242
    10. '():
' → logprob: -12.172086715698242

Token 179: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.021123554557561874
    2. '_K' → logprob: -4.14612340927124
    3. '_,' → logprob: -6.14612340927124
    4. '_' → logprob: -6.77112340927124
    5. ',' → logprob: -6.89612340927124
    6. ',_' → logprob: -8.271123886108398
    7. '_line' → logprob: -8.771123886108398
    8. '_n' → logprob: -9.271123886108398
    9. ')_' → logprob: -10.271123886108398
    10. '_input' → logprob: -10.521123886108398

Token 180: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -6.8497312895488e-05
    2. '):' → logprob: -11.000068664550781
    3. '):
' → logprob: -11.250068664550781
    4. ',' → logprob: -11.500068664550781
    5. 'line' → logprob: -11.750068664550781
    6. '_' → logprob: -12.000068664550781
    7. '_,' → logprob: -13.000068664550781
    8. '_lines' → logprob: -13.000068664550781
    9. ',_' → logprob: -13.375068664550781
    10. ')_' → logprob: -13.500068664550781

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.049752455204725266
    2. '):' → logprob: -3.0497524738311768
    3. '):
' → logprob: -6.924752235412598
    4. ',a' → logprob: -9.174752235412598
    5. ',n' → logprob: -10.799752235412598
    6. ')' → logprob: -11.424752235412598
    7. ',
' → logprob: -11.424752235412598
    8. ' ,' → logprob: -11.674752235412598
    9. ',f' → logprob: -12.299752235412598
    10. ',line' → logprob: -12.674752235412598

Token 182: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005932236090302467
    2. ' a' → logprob: -5.130932331085205
    3. ' ' → logprob: -13.255931854248047
    4. '   ' → logprob: -14.130931854248047
    5. '	a' → logprob: -14.630931854248047
    6. '_a' → logprob: -16.005931854248047
    7. '
' → logprob: -16.505931854248047
    8. '  ' → logprob: -16.505931854248047
    9. ')' → logprob: -16.505931854248047
    10. '    ' → logprob: -17.130931854248047

Token 183: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0009331366163678467
    2. '_' → logprob: -7.1259331703186035
    3. 'line' → logprob: -9.375932693481445
    4. '_lines' → logprob: -10.750932693481445
    5. '_l' → logprob: -12.375932693481445
    6. '_LINE' → logprob: -12.750932693481445
    7. ')_' → logprob: -13.000932693481445
    8. '_lineno' → logprob: -13.125932693481445
    9. ')' → logprob: -13.250932693481445
    10. '_k' → logprob: -13.250932693481445

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006907515344209969
    2. ',f' → logprob: -7.375690937042236
    3. ' ,' → logprob: -10.125690460205078
    4. '):' → logprob: -11.000690460205078
    5. ',
' → logprob: -12.250690460205078
    6. 'f' → logprob: -14.125690460205078
    7. ',n' → logprob: -15.125690460205078
    8. '   ' → logprob: -15.375690460205078
    9. ' f' → logprob: -15.375690460205078
    10. ',line' → logprob: -15.375690460205078

Token 185: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0699387714266777
    2. ' f' → logprob: -2.6949386596679688
    3. ' ' → logprob: -13.444938659667969
    4. '   ' → logprob: -14.444938659667969
    5. '  ' → logprob: -15.819938659667969
    6. '	f' → logprob: -15.819938659667969
    7. '    ' → logprob: -16.19493865966797
    8. ')' → logprob: -16.56993865966797
    9. '
' → logprob: -17.50743865966797
    10. ' ' → logprob: -17.63243865966797

Token 186: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -7.064297824399546e-05
    2. 'line' → logprob: -9.875070571899414
    3. ')_' → logprob: -12.250070571899414
    4. '_' → logprob: -12.500070571899414
    5. '_LINE' → logprob: -12.500070571899414
    6. '_lines' → logprob: -13.125070571899414
    7. ')' → logprob: -13.375070571899414
    8. '```' → logprob: -14.500070571899414
    9. '_Line' → logprob: -15.125070571899414
    10. ' _' → logprob: -15.250070571899414

Token 187: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02057703770697117
    2. '):
' → logprob: -3.8955769538879395
    3. ')' → logprob: -10.645577430725098
    4. '):
' → logprob: -11.645577430725098
    5. ':' → logprob: -13.645577430725098
    6. '   ' → logprob: -14.395577430725098
    7. ' ):' → logprob: -14.520577430725098
    8. '):

' → logprob: -15.770577430725098
    9. ',' → logprob: -17.14557647705078
    10. ' ' → logprob: -17.64557647705078

Token 188: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011016374919563532
    2. 'n' → logprob: -6.876101493835449
    3. ' n' → logprob: -10.25110149383545
    4. 'N' → logprob: -10.62610149383545
    5. ' N' → logprob: -11.75110149383545
    6. '	n' → logprob: -15.12610149383545
    7. '
' → logprob: -15.50110149383545
    8. '```' → logprob: -15.50110149383545
    9. 'def' → logprob: -15.75110149383545
    10. '  ' → logprob: -16.251102447509766

Token 189: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.010601235553622246
    2. 'n' → logprob: -4.760601043701172
    3. '   ' → logprob: -6.510601043701172
    4. ' N' → logprob: -7.635601043701172
    5. ' n' → logprob: -12.010601043701172
    6. '
' → logprob: -13.510601043701172
    7. 'def' → logprob: -13.635601043701172
    8. ' ' → logprob: -13.760601043701172
    9. '#' → logprob: -13.885601043701172
    10. '```' → logprob: -14.260601043701172

Token 190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021165965590626
    2. ',K' → logprob: -6.252116680145264
    3. ' ,' → logprob: -8.627116203308105
    4. ',
' → logprob: -12.877116203308105
    5. ',N' → logprob: -13.127116203308105
    6. 'K' → logprob: -13.627116203308105
    7. '‌,' → logprob: -14.252116203308105
    8. ',\
' → logprob: -14.752116203308105
    9. '_,' → logprob: -15.127116203308105
    10. '   ' → logprob: -15.127116203308105

Token 191: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.2811570167541504
    2. ' K' → logprob: -1.4061570167541504
    3. ' ' → logprob: -12.906156539916992
    4. '<|end|>' → logprob: -14.031156539916992
    5. 'parse' → logprob: -14.656156539916992
    6. ' ' → logprob: -14.656156539916992
    7. '_K' → logprob: -14.656156539916992
    8. '
' → logprob: -14.781156539916992
    9. '	K' → logprob: -15.281156539916992
    10. '*K' → logprob: -15.281156539916992

Token 192: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25385627150535583
    2. '=' → logprob: -1.5038563013076782
    3. ',' → logprob: -6.253856182098389
    4. ' ' → logprob: -14.378856658935547
    5. ')' → logprob: -14.753856658935547
    6. '   ' → logprob: -15.128856658935547
    7. ' ,' → logprob: -15.128856658935547
    8. ' =
' → logprob: -15.628856658935547
    9. '=

' → logprob: -16.128856658935547
    10. ',N' → logprob: -16.378856658935547

Token 193: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.3868718445301056
    2. 'parse' → logprob: -1.1368718147277832
    3. '	parse' → logprob: -15.136872291564941
    4. '=parse' → logprob: -15.386872291564941
    5. '(parse' → logprob: -15.511872291564941
    6. '_parse' → logprob: -17.011871337890625
    7. '.parse' → logprob: -17.511871337890625
    8. '   ' → logprob: -18.011871337890625
    9. ' ' → logprob: -19.261871337890625
    10. 'par' → logprob: -20.636871337890625

Token 194: '_N' (ID: 3080)
  Prédit: '_N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_N' → logprob: -2.2200749754119897e-06
    2. '_n' → logprob: -14.000001907348633
    3. '_' → logprob: -14.500001907348633
    4. 'N' → logprob: -14.625001907348633
    5. '_K' → logprob: -15.625001907348633
    6. '(N' → logprob: -16.125001907348633
    7. 'int' → logprob: -18.375001907348633
    8. '[N' → logprob: -18.500001907348633
    9. '```' → logprob: -18.500001907348633
    10. 'n' → logprob: -18.625001907348633

Token 195: '_K' (ID: 20555)
  Prédit: '_K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_K' → logprob: -1.3856492842023727e-06
    2. '_k' → logprob: -13.875000953674316
    3. '_N' → logprob: -15.125000953674316
    4. '_' → logprob: -15.750000953674316
    5. 'K' → logprob: -17.500001907348633
    6. '_C' → logprob: -18.250001907348633
    7. ',K' → logprob: -19.750001907348633
    8. '_T' → logprob: -19.875001907348633
    9. '<K' → logprob: -20.125001907348633
    10. ' _' → logprob: -20.250001907348633

Token 196: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.2166411478538066e-05
    2. '(' → logprob: -9.875052452087402
    3. ' (' → logprob: -15.125052452087402
    4. '(N' → logprob: -16.125051498413086
    5. 'n' → logprob: -16.375051498413086
    6. '(np' → logprob: -16.500051498413086
    7. '(
' → logprob: -18.125051498413086
    8. '((' → logprob: -18.125051498413086
    9. '(s' → logprob: -19.875051498413086
    10. '(a' → logprob: -20.000051498413086

Token 197: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -4.60414821645827e-06
    2. 'k' → logprob: -12.500004768371582
    3. '_' → logprob: -14.000004768371582
    4. '_key' → logprob: -18.625003814697266
    5. '_K' → logprob: -19.500003814697266
    6. '_i' → logprob: -19.500003814697266
    7. '\' → logprob: -19.625003814697266
    8. 'K' → logprob: -19.625003814697266
    9. '```' → logprob: -19.875003814697266
    10. '_p' → logprob: -20.500003814697266

Token 198: '_line' (ID: 14418)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.07034429162740707
    2. '_line' → logprob: -2.6953442096710205
    3. 'k' → logprob: -7.9453444480896
    4. 'line' → logprob: -10.445343971252441
    5. '_' → logprob: -11.570343971252441
    6. ')' → logprob: -11.820343971252441
    7. '```' → logprob: -12.945343971252441
    8. '_key' → logprob: -13.445343971252441
    9. '(k' → logprob: -15.320343971252441
    10. '(line' → logprob: -15.320343971252441

Token 199: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023411782458424568
    2. ')
' → logprob: -3.773411750793457
    3. '.decode' → logprob: -9.273411750793457
    4. ')

' → logprob: -10.273411750793457
    5. '.strip' → logprob: -10.523411750793457
    6. ')
' → logprob: -12.523411750793457
    7. '.rstrip' → logprob: -12.648411750793457
    8. '),' → logprob: -13.273411750793457
    9. ' )' → logprob: -14.523411750793457
    10. ');' → logprob: -15.023411750793457

Token 200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22357559204101562
    2. 'a' → logprob: -1.8485755920410156
    3. '
' → logprob: -3.5985755920410156
    4. ' a' → logprob: -4.848575592041016
    5. 'A' → logprob: -5.723575592041016
    6. '    
' → logprob: -5.973575592041016
    7. ' ' → logprob: -7.098575592041016
    8. ' A' → logprob: -8.348575592041016
    9. ' 
' → logprob: -8.723575592041016
    10. ',a' → logprob: -8.973575592041016

Token 201: ' A' (ID: 355)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.011205445975065231
    2. 'A' (adapté à ' A') → logprob: -4.511205673217773
    3. ' a' → logprob: -9.386205673217773
    4. 'arr' → logprob: -9.761205673217773
    5. '   ' → logprob: -12.261205673217773
    6. ' A' → logprob: -13.011205673217773
    7. 'array' → logprob: -13.011205673217773
    8. 'import' → logprob: -13.136205673217773
    9. ' ' → logprob: -13.761205673217773
    10. 'def' → logprob: -14.386205673217773

Token 202: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07045619189739227
    2. '=' → logprob: -2.6954562664031982
    3. ',' → logprob: -7.570456027984619
    4. ' ' → logprob: -13.195456504821777
    5. ' ,' → logprob: -13.820456504821777
    6. '_arr' → logprob: -15.320456504821777
    7. '   ' → logprob: -15.445456504821777
    8. 'arr' → logprob: -15.570456504821777
    9. ')' → logprob: -16.19545555114746
    10. '_' → logprob: -16.19545555114746

Token 203: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.04864346235990524
    2. ' parse' → logprob: -3.0486433506011963
    3. 'np' → logprob: -10.673643112182617
    4. '(parse' → logprob: -10.673643112182617
    5. ' np' → logprob: -12.173643112182617
    6. '=parse' → logprob: -13.298643112182617
    7. '	parse' → logprob: -13.423643112182617
    8. ' ' → logprob: -14.923643112182617
    9. '.parse' → logprob: -15.798643112182617
    10. 'read' → logprob: -15.923643112182617

Token 204: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -1.2471589798224159e-05
    2. 'array' → logprob: -11.500012397766113
    3. '_a' → logprob: -13.250012397766113
    4. '_' → logprob: -15.125012397766113
    5. 'a' → logprob: -15.250012397766113
    6. 'Array' → logprob: -16.62501335144043
    7. '_arrays' → logprob: -17.25001335144043
    8. '_arr' → logprob: -18.12501335144043
    9. '_ARRAY' → logprob: -18.75001335144043
    10. '_string' → logprob: -19.00001335144043

Token 205: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -4.723352049040841e-06
    2. '(' → logprob: -12.500004768371582
    3. 'a' → logprob: -14.750004768371582
    4. '((' → logprob: -15.500004768371582
    5. '(A' → logprob: -15.750004768371582
    6. ' (' → logprob: -16.750003814697266
    7. '(np' → logprob: -17.875003814697266
    8. '(n' → logprob: -18.500003814697266
    9. '(
' → logprob: -18.750003814697266
    10. '(ai' → logprob: -19.000003814697266

Token 206: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -2.4987974029500037e-05
    2. 'line' → logprob: -10.625024795532227
    3. '_LINE' → logprob: -15.375024795532227
    4. '_lin' → logprob: -16.375024795532227
    5. '_lines' → logprob: -16.500024795532227
    6. '(line' → logprob: -17.000024795532227
    7. '_l' → logprob: -17.125024795532227
    8. 'Line' → logprob: -17.125024795532227
    9. 'l' → logprob: -17.625024795532227
    10. '_' → logprob: -17.625024795532227

Token 207: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05538972467184067
    2. ')
' → logprob: -2.930389642715454
    3. ').' → logprob: -8.180389404296875
    4. ' )' → logprob: -9.555389404296875
    5. ')
' → logprob: -10.055389404296875
    6. ')

' → logprob: -10.555389404296875
    7. '.strip' → logprob: -10.805389404296875
    8. ' )
' → logprob: -11.305389404296875
    9. '   ' → logprob: -12.180389404296875
    10. '.rstrip' → logprob: -12.180389404296875

Token 208: '   ' (ID: 271)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.18335852026939392
    2. '   ' → logprob: -1.9333585500717163
    3. ' F' → logprob: -3.8083584308624268
    4. '
' → logprob: -7.808358669281006
    5. ' ' → logprob: -9.558358192443848
    6. '    
' → logprob: -9.683358192443848
    7. 'f' → logprob: -9.933358192443848
    8. '	F' → logprob: -10.433358192443848
    9. '  ' → logprob: -11.183358192443848
    10. '
' → logprob: -11.183358192443848

Token 209: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' (adapté à ' F') → logprob: -0.0024926606565713882
    2. ' F' → logprob: -6.002492427825928
    3. '   ' → logprob: -11.377492904663086
    4. 'f' → logprob: -12.252492904663086
    5. ' ' → logprob: -15.377492904663086
    6. '    
' → logprob: -15.752492904663086
    7. '	F' → logprob: -16.064992904663086
    8. '
' → logprob: -16.252492904663086
    9. '  ' → logprob: -17.189992904663086
    10. '```' → logprob: -17.439992904663086

Token 210: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519329786300659
    2. '=' → logprob: -1.501932978630066
    3. ' ' → logprob: -12.876933097839355
    4. '   ' → logprob: -15.001933097839355
    5. '  ' → logprob: -15.251933097839355
    6. '	' → logprob: -15.626933097839355
    7. '＝' → logprob: -16.12693214416504
    8. ',' → logprob: -16.37693214416504
    9. '=
' → logprob: -16.75193214416504
    10. '.' → logprob: -16.87693214416504

Token 211: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.00021045419271104038
    2. ' parse' → logprob: -8.500210762023926
    3. '(parse' → logprob: -12.625210762023926
    4. '	parse' → logprob: -13.125210762023926
    5. '=parse' → logprob: -13.625210762023926
    6. '.parse' → logprob: -15.000210762023926
    7. 'np' → logprob: -16.75020980834961
    8. '_parse' → logprob: -17.62520980834961
    9. ' ' → logprob: -18.87520980834961
    10. 'p' → logprob: -19.25020980834961

Token 212: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.00015920029545668513
    2. 'array' → logprob: -8.75015926361084
    3. 'Array' → logprob: -14.37515926361084
    4. '_ARRAY' → logprob: -17.000158309936523
    5. '-array' → logprob: -17.625158309936523
    6. ' array' → logprob: -18.000158309936523
    7. 'rray' → logprob: -18.125158309936523
    8. 'a' → logprob: -19.000158309936523
    9. '_line' → logprob: -19.000158309936523
    10. '_arr' → logprob: -19.875158309936523

Token 213: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -7.465036105713807e-06
    2. '(' → logprob: -11.875007629394531
    3. 'f' → logprob: -14.750007629394531
    4. ' (' → logprob: -17.75000762939453
    5. '﻿' → logprob: -19.00000762939453
    6. '```' → logprob: -19.50000762939453
    7. '(fi' → logprob: -19.75000762939453
    8. ' f' → logprob: -20.25000762939453
    9. '(F' → logprob: -20.25000762939453
    10. '	f' → logprob: -20.50000762939453

Token 214: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.007801569066941738
    2. 'line' → logprob: -6.257801532745361
    3. ')' → logprob: -6.382801532745361
    4. '(f' → logprob: -6.507801532745361
    5. 'l' → logprob: -6.757801532745361
    6. 'f' → logprob: -7.382801532745361
    7. '_' → logprob: -8.63280200958252
    8. '(' → logprob: -8.88280200958252
    9. '(line' → logprob: -9.50780200958252
    10. 'Line' → logprob: -9.75780200958252

Token 215: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013310716021806002
    2. ')
' → logprob: -6.626330852508545
    3. ' )' → logprob: -12.876331329345703
    4. ')

' → logprob: -13.751331329345703
    5. '   ' → logprob: -14.626331329345703
    6. ')return' → logprob: -15.126331329345703
    7. ').' → logprob: -15.251331329345703
    8. ')
' → logprob: -15.251331329345703
    9. ')#' → logprob: -16.126331329345703
    10. '),' → logprob: -16.751331329345703

Token 216: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007512806914746761
    2. '
' → logprob: -5.13251256942749
    3. ' return' → logprob: -7.25751256942749
    4. '    
' → logprob: -7.38251256942749
    5. 'return' → logprob: -8.382513046264648
    6. '  
' → logprob: -12.132513046264648
    7. '	return' → logprob: -12.382513046264648
    8. ',' → logprob: -12.507513046264648
    9. '<|end|>' → logprob: -12.757513046264648
    10. ' 
' → logprob: -12.882513046264648

Token 217: ' A' (ID: 355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2949217557907104
    2. 'A' (adapté à ' A') → logprob: -1.4199217557907104
    3. 'return' → logprob: -1.5449217557907104
    4. 'F' → logprob: -2.169921875
    5. ' return' → logprob: -2.294921875
    6. '
' → logprob: -3.669921875
    7. ' A' → logprob: -4.044921875
    8. ' F' → logprob: -5.169921875
    9. ' ' → logprob: -6.169921875
    10. '#' → logprob: -6.544921875

Token 218: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1472770720720291
    2. '.sort' → logprob: -2.7722771167755127
    3. '=' → logprob: -3.0222771167755127
    4. ' =' → logprob: -4.147276878356934
    5. 'sorted' → logprob: -6.022276878356934
    6. '_sorted' → logprob: -6.147276878356934
    7. 'sort' → logprob: -6.397276878356934
    8. ',F' → logprob: -7.147276878356934
    9. ',A' → logprob: -7.522276878356934
    10. ',K' → logprob: -7.647276878356934

Token 219: ' sort' (ID: 4506)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.15489839017391205
    2. ' sort' → logprob: -2.0298984050750732
    3. 'np' → logprob: -4.904898166656494
    4. ' np' → logprob: -5.404898166656494
    5. 'A' → logprob: -9.154898643493652
    6. 'arr' → logprob: -10.029898643493652
    7. ' A' → logprob: -10.154898643493652
    8. ' ' → logprob: -11.279898643493652
    9. 'sorted' → logprob: -11.279898643493652
    10. '	sort' → logprob: -11.529898643493652

Token 220: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.0005069229518994689
    2. '(A' → logprob: -7.62550687789917
    3. 'array' → logprob: -11.875507354736328
    4. 'Array' → logprob: -12.500507354736328
    5. '_(' → logprob: -13.250507354736328
    6. 'A' → logprob: -13.375507354736328
    7. '_A' → logprob: -13.375507354736328
    8. '_arr' → logprob: -13.875507354736328
    9. '_' → logprob: -14.000507354736328
    10. 'a' → logprob: -14.875507354736328

Token 221: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -1.2113979209971149e-05
    2. '(' → logprob: -11.375012397766113
    3. '(arr' → logprob: -15.250012397766113
    4. 'A' → logprob: -16.500011444091797
    5. '(F' → logprob: -16.625011444091797
    6. ' (' → logprob: -16.875011444091797
    7. '(
' → logprob: -17.125011444091797
    8. '((' → logprob: -17.625011444091797
    9. '(a' → logprob: -18.375011444091797
    10. '(array' → logprob: -18.750011444091797

Token 222: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3950541317462921
    2. ',' → logprob: -1.1450541019439697
    3. ')
' → logprob: -6.145054340362549
    4. '(),' → logprob: -6.395054340362549
    5. '())' → logprob: -6.520054340362549
    6. '(True' → logprob: -7.020054340362549
    7. '(False' → logprob: -7.645054340362549
    8. ',)' → logprob: -8.14505386352539
    9. ' ,' → logprob: -8.27005386352539
    10. '(reverse' → logprob: -8.52005386352539

Token 223: '   ' (ID: 271)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.15693175792694092
    2. '   ' → logprob: -2.4069318771362305
    3. ' F' → logprob: -2.9069318771362305
    4. ',' → logprob: -8.28193187713623
    5. ' ' → logprob: -9.28193187713623
    6. ',F' → logprob: -9.53193187713623
    7. '
' → logprob: -10.28193187713623
    8. '	F' → logprob: -11.40693187713623
    9. '  ' → logprob: -11.53193187713623
    10. ',
' → logprob: -12.15693187713623

Token 224: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' (adapté à ' F') → logprob: -6.630610641877865e-06
    2. ' F' → logprob: -12.000006675720215
    3. '   ' → logprob: -15.625006675720215
    4. '
' → logprob: -16.3750057220459
    5. 'f' → logprob: -16.5000057220459
    6. 'def' → logprob: -17.8750057220459
    7. '#' → logprob: -18.2500057220459
    8. ' ' → logprob: -18.7500057220459
    9. '```' → logprob: -19.1250057220459
    10. '_F' → logprob: -19.2500057220459

Token 225: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575952410697937
    2. ' =' → logprob: -0.825952410697937
    3. ',' → logprob: -12.325952529907227
    4. 'sort' → logprob: -12.575952529907227
    5. 'sorted' → logprob: -13.450952529907227
    6. '_sorted' → logprob: -13.950952529907227
    7. '.sort' → logprob: -14.075952529907227
    8. '<|end|>' → logprob: -15.075952529907227
    9. '<|end|>' → logprob: -15.200952529907227
    10. ' sort' → logprob: -15.325952529907227

Token 226: ' sort' (ID: 4506)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.038049064576625824
    2. ' sort' → logprob: -3.2880489826202393
    3. '(sort' → logprob: -12.41304874420166
    4. '	sort' → logprob: -13.41304874420166
    5. 'reverse' → logprob: -13.66304874420166
    6. '.sort' → logprob: -14.91304874420166
    7. 'sorted' → logprob: -15.66304874420166
    8. 'np' → logprob: -15.78804874420166
    9. ' reverse' → logprob: -16.663049697875977
    10. ' ' → logprob: -16.663049697875977

Token 227: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -6.392202976712724e-06
    2. '(F' → logprob: -12.250006675720215
    3. 'Array' → logprob: -13.625006675720215
    4. '_Array' → logprob: -16.2500057220459
    5. '_arr' → logprob: -16.6250057220459
    6. '_ARRAY' → logprob: -16.7500057220459
    7. 'array' → logprob: -16.7500057220459
    8. '_arrays' → logprob: -17.5000057220459
    9. '(f' → logprob: -18.1250057220459
    10. '_F' → logprob: -19.1250057220459

Token 228: '(F' (ID: 12044)
  Prédit: '(F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -1.9862216504407115e-05
    2. '(' → logprob: -10.875020027160645
    3. 'F' → logprob: -14.625020027160645
    4. '(f' → logprob: -15.250020027160645
    5. ' (' → logprob: -16.125019073486328
    6. '(
' → logprob: -16.750019073486328
    7. ',F' → logprob: -18.625019073486328
    8. ',' → logprob: -18.625019073486328
    9. '(A' → logprob: -19.000019073486328
    10. '```' → logprob: -19.000019073486328

Token 229: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012570773833431304
    2. ' ,' → logprob: -9.250125885009766
    3. 'reverse' → logprob: -11.000125885009766
    4. ',re' → logprob: -12.125125885009766
    5. ')' → logprob: -12.625125885009766
    6. ',true' → logprob: -13.875125885009766
    7. '[::-' → logprob: -13.875125885009766
    8. ',
' → logprob: -14.750125885009766
    9. '(reverse' → logprob: -14.750125885009766
    10. ' reverse' → logprob: -15.375125885009766

Token 230: ' reverse' (ID: 18199)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.0530596561729908
    2. ' reverse' → logprob: -3.0530595779418945
    3. 'True' → logprob: -5.4280595779418945
    4. ' True' → logprob: -9.678059577941895
    5. '=True' → logprob: -12.553059577941895
    6. '   ' → logprob: -13.053059577941895
    7. '(reverse' → logprob: -13.678059577941895
    8. 'Reverse' → logprob: -14.553059577941895
    9. '
' → logprob: -15.178059577941895
    10. '.reverse' → logprob: -16.05306053161621

Token 231: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.00038336371653713286
    2. '=' → logprob: -7.875383377075195
    3. ')' → logprob: -13.125383377075195
    4. '(True' → logprob: -14.000383377075195
    5. 'True' → logprob: -15.875383377075195
    6. '=False' → logprob: -16.125383377075195
    7. ')=' → logprob: -16.750383377075195
    8. '=
' → logprob: -16.750383377075195
    9. '(' → logprob: -17.625383377075195
    10. '```' → logprob: -18.500383377075195

Token 232: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07889562100172043
    2. ')
' → logprob: -2.5788955688476562
    3. ')
' → logprob: -12.953895568847656
    4. ')

' → logprob: -13.453895568847656
    5. '   ' → logprob: -13.828895568847656
    6. ')return' → logprob: -14.328895568847656
    7. ' )' → logprob: -15.453895568847656
    8. ' )
' → logprob: -16.453895568847656
    9. ')`
' → logprob: -17.078895568847656
    10. ')`' → logprob: -17.203895568847656

Token 233: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044572848826646805
    2. '
' → logprob: -3.2945728302001953
    3. '    
' → logprob: -5.169572830200195
    4. ' return' → logprob: -8.169572830200195
    5. '<|end|>' → logprob: -8.794572830200195
    6. '	return' → logprob: -8.919572830200195
    7. 'return' → logprob: -9.419572830200195
    8. '  
' → logprob: -9.669572830200195
    9. ' 
' → logprob: -9.919572830200195
    10. '   
' → logprob: -11.669572830200195

Token 234: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4159594774246216
    2. ' return' → logprob: -1.1659594774246216
    3. '   ' → logprob: -4.040959358215332
    4. 'diff' → logprob: -5.665959358215332
    5. 'K' → logprob: -7.165959358215332
    6. 'total' → logprob: -7.165959358215332
    7. 'sum' → logprob: -7.290959358215332
    8. 'dif' → logprob: -7.540959358215332
    9. 'min' → logprob: -7.915959358215332
    10. ' total' → logprob: -8.165959358215332

Token 235: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0009686299599707127
    2. ' N' → logprob: -7.0009684562683105
    3. '(N' → logprob: -9.875968933105469
    4. ' (' → logprob: -12.500968933105469
    5. 'A' → logprob: -14.000968933105469
    6. '(' → logprob: -14.375968933105469
    7. ' ' → logprob: -15.500968933105469
    8. '   ' → logprob: -15.875968933105469
    9. '	N' → logprob: -16.12596893310547
    10. '(A' → logprob: -17.50096893310547

Token 236: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007580502424389124
    2. ',K' → logprob: -7.250758171081543
    3. ' ,' → logprob: -10.000758171081543
    4. 'K' → logprob: -13.375758171081543
    5. ',
' → logprob: -14.250758171081543
    6. ' K' → logprob: -15.500758171081543
    7. ',N' → logprob: -15.625758171081543
    8. '‌,' → logprob: -16.500757217407227
    9. ',A' → logprob: -16.500757217407227
    10. 'A' → logprob: -18.375757217407227

Token 237: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.06999178975820541
    2. ' K' → logprob: -2.6949918270111084
    3. 'A' → logprob: -9.944992065429688
    4. ' A' → logprob: -11.944992065429688
    5. ' ' → logprob: -14.444992065429688
    6. '
' → logprob: -15.569992065429688
    7. '<|end|>' → logprob: -16.194992065429688
    8. '	K' → logprob: -16.882492065429688
    9. ',' → logprob: -16.944992065429688
    10. ',K' → logprob: -16.944992065429688

Token 238: ',' (ID: 11)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.034291669726371765
    2. ',' → logprob: -3.7842917442321777
    3. ' A' → logprob: -4.534291744232178
    4. ',A' → logprob: -8.40929126739502
    5. ' ,' → logprob: -10.53429126739502
    6. 'K' → logprob: -14.15929126739502
    7. ' ' → logprob: -15.15929126739502
    8. '   ' → logprob: -15.40929126739502
    9. '	A' → logprob: -16.034292221069336
    10. '
' → logprob: -16.284292221069336

Token 239: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.005234002135694027
    2. ' A' → logprob: -5.2552337646484375
    3. ' ' → logprob: -16.505233764648438
    4. '   ' → logprob: -17.755233764648438
    5. 'a' → logprob: -18.380233764648438
    6. '	A' → logprob: -18.505233764648438
    7. '
' → logprob: -19.255233764648438
    8. ',A' → logprob: -19.755233764648438
    9. 'arr' → logprob: -19.880233764648438
    10. '  ' → logprob: -20.130233764648438

Token 240: ',' (ID: 11)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.0001093841710826382
    2. ',' → logprob: -9.250109672546387
    3. ' F' → logprob: -11.375109672546387
    4. ',F' → logprob: -13.250109672546387
    5. ' ,' → logprob: -19.12510871887207
    6. '   ' → logprob: -20.75010871887207
    7. 'f' → logprob: -20.87510871887207
    8. '```' → logprob: -21.37510871887207
    9. 'import' → logprob: -21.75010871887207
    10. ',
' → logprob: -22.00010871887207

Token 241: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.0013259568950161338
    2. ' F' → logprob: -6.626326084136963
    3. ' ' → logprob: -17.876325607299805
    4. 'f' → logprob: -18.626325607299805
    5. '
' → logprob: -18.876325607299805
    6. '   ' → logprob: -20.126325607299805
    7. '	F' → logprob: -20.126325607299805
    8. '<|end|>' → logprob: -20.126325607299805
    9. ' ' → logprob: -20.501325607299805
    10. '  ' → logprob: -21.251325607299805

Token 242: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11902062594890594
    2. '<|end|>' → logprob: -2.244020700454712
    3. '
' → logprob: -5.119020462036133
    4. '```' → logprob: -9.369020462036133
    5. '<|end|>' → logprob: -10.369020462036133
    6. ' def' → logprob: -10.494020462036133
    7. '#' → logprob: -11.119020462036133
    8. 'import' → logprob: -11.744020462036133
    9. 'K' → logprob: -11.869020462036133
    10. '

' → logprob: -12.244020462036133

Token 243: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.27099974633893e-05
    2. '<|end|>' → logprob: -11.875012397766113
    3. '```' → logprob: -12.625012397766113
    4. ' def' → logprob: -14.125012397766113
    5. 'import' → logprob: -14.250012397766113
    6. '
' → logprob: -15.000012397766113
    7. '#' → logprob: -15.125012397766113
    8. '<|end|>' → logprob: -16.87501335144043
    9. 'K' → logprob: -17.00001335144043
    10. 'ndef' → logprob: -17.50001335144043

Token 244: ' compute' (ID: 23864)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.21130333840847015
    2. ' main' → logprob: -2.086303234100342
    3. 'min' → logprob: -3.336303234100342
    4. ' minimize' → logprob: -3.711303234100342
    5. 'solve' → logprob: -5.961303234100342
    6. 'minimum' → logprob: -7.586303234100342
    7. 'def' → logprob: -7.711303234100342
    8. 'minimal' → logprob: -7.711303234100342
    9. 'can' → logprob: -7.836303234100342
    10. 'reduce' → logprob: -7.836303234100342

Token 245: '_max' (ID: 13731)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.5799020528793335
    2. '_result' → logprob: -2.329902172088623
    3. '_max' → logprob: -2.579902172088623
    4. '_pen' → logprob: -3.079902172088623
    5. '(N' → logprob: -3.829902172088623
    6. '_de' → logprob: -3.954902172088623
    7. '_cost' → logprob: -3.954902172088623
    8. '_diff' → logprob: -3.954902172088623
    9. '_' → logprob: -4.454902172088623
    10. '_array' → logprob: -4.579902172088623

Token 246: 'imum' (ID: 4556)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.43997588753700256
    2. '_value' → logprob: -2.1899759769439697
    3. '_product' → logprob: -2.5649759769439697
    4. 'imum' → logprob: -3.1899759769439697
    5. '_pen' → logprob: -3.6899759769439697
    6. '_' → logprob: -3.9399759769439697
    7. 'imized' → logprob: -4.314975738525391
    8. '_abs' → logprob: -4.439975738525391
    9. '_un' → logprob: -5.064975738525391
    10. 'imin' → logprob: -5.314975738525391

Token 247: '_for' (ID: 11903)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.6961851119995117
    2. '_value' → logprob: -1.6961851119995117
    3. '_time' → logprob: -2.5711851119995117
    4. '_pen' → logprob: -2.8211851119995117
    5. '_product' → logprob: -3.1961851119995117
    6. '_un' → logprob: -4.321185111999512
    7. '_m' → logprob: -4.446185111999512
    8. '_' → logprob: -4.446185111999512
    9. '_difference' → logprob: -4.446185111999512
    10. '(A' → logprob: -4.696185111999512

Token 248: '_x' (ID: 7054)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_min' → logprob: -2.199805974960327
    2. '_K' → logprob: -2.199805974960327
    3. '_k' → logprob: -2.449805974960327
    4. 'min' → logprob: -2.699805974960327
    5. '_all' → logprob: -2.824805974960327
    6. '_re' → logprob: -2.949805974960327
    7. '_array' → logprob: -3.074805974960327
    8. 'K' → logprob: -3.199805974960327
    9. 'all' → logprob: -3.199805974960327
    10. '_pair' → logprob: -3.449805974960327

Token 249: '(A' (ID: 10706)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.08009032160043716
    2. '(K' → logprob: -2.705090284347534
    3. '(X' → logprob: -5.455090522766113
    4. '(N' → logprob: -6.080090522766113
    5. '(' → logprob: -6.080090522766113
    6. '(A' → logprob: -7.580090522766113
    7. '(max' → logprob: -9.080090522766113
    8. '(M' → logprob: -9.580090522766113
    9. '(mid' → logprob: -9.705090522766113
    10. '(L' → logprob: -9.705090522766113

Token 250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002096197713399306
    2. ' ,' → logprob: -9.25020980834961
    3. ',K' → logprob: -9.25020980834961
    4. ',
' → logprob: -12.62520980834961
    5. '<|end|>' → logprob: -13.25020980834961
    6. ',F' → logprob: -13.37520980834961
    7. ',x' → logprob: -13.87520980834961
    8. '_,' → logprob: -14.12520980834961
    9. ',A' → logprob: -14.18770980834961
    10. ',N' → logprob: -14.25020980834961

Token 251: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.07096477597951889
    2. 'x' → logprob: -3.070964813232422
    3. ' F' → logprob: -4.695964813232422
    4. 'K' → logprob: -4.695964813232422
    5. ' x' → logprob: -5.820964813232422
    6. 'X' → logprob: -7.820964813232422
    7. ' K' → logprob: -8.320964813232422
    8. ' ' → logprob: -9.445964813232422
    9. '   ' → logprob: -10.570964813232422
    10. 'mid' → logprob: -10.945964813232422

Token 252: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021915239631198347
    2. ' ,' → logprob: -8.500219345092773
    3. ',x' → logprob: -11.625219345092773
    4. ',
' → logprob: -13.125219345092773
    5. '‌,' → logprob: -14.250219345092773
    6. '):' → logprob: -14.250219345092773
    7. 'x' → logprob: -15.125219345092773
    8. ')' → logprob: -15.125219345092773
    9. '),' → logprob: -15.375219345092773
    10. 'def' → logprob: -15.500219345092773

Token 253: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02276654727756977
    2. 'K' → logprob: -4.397766590118408
    3. ' x' → logprob: -4.647766590118408
    4. 'max' → logprob: -8.52276611328125
    5. ' K' → logprob: -8.64776611328125
    6. 'X' → logprob: -9.52276611328125
    7. 'mid' → logprob: -10.14776611328125
    8. '
' → logprob: -10.52276611328125
    9. ' ' → logprob: -10.64776611328125
    10. '   ' → logprob: -11.27276611328125

Token 254: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020401736721396446
    2. ',' → logprob: -4.145401954650879
    3. '):
' → logprob: -5.520401954650879
    4. ')' → logprob: -8.645401954650879
    5. ':' → logprob: -9.520401954650879
    6. ' ):' → logprob: -10.020401954650879
    7. '):
' → logprob: -10.020401954650879
    8. ' ,' → logprob: -12.770401954650879
    9. '):

' → logprob: -13.270401954650879
    10. '   ' → logprob: -13.457901954650879

Token 255: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7610486149787903
    2. '   ' → logprob: -0.7610486149787903
    3. '    
' → logprob: -2.8860485553741455
    4. '   
' → logprob: -6.511048793792725
    5. 'total' → logprob: -6.886048793792725
    6. 'max' → logprob: -6.886048793792725
    7. ' K' → logprob: -7.511048793792725
    8. 'count' → logprob: -7.511048793792725
    9. 'sum' → logprob: -7.761048793792725
    10. '  
' → logprob: -7.886048793792725

Token 256: ' return' (ID: 622)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.5896490216255188
    2. 'max' → logprob: -1.839648962020874
    3. 'total' → logprob: -2.214648962020874
    4. 'low' → logprob: -2.214648962020874
    5. ' left' → logprob: -4.214649200439453
    6. ' lo' → logprob: -4.714649200439453
    7. 'np' → logprob: -5.089649200439453
    8. 'res' → logprob: -5.214649200439453
    9. '0' → logprob: -5.339649200439453
    10. ' low' → logprob: -5.714649200439453

Token 257: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.06380153447389603
    2. '(np' → logprob: -3.3138015270233154
    3. ' np' → logprob: -3.9388015270233154
    4. 'int' → logprob: -5.4388017654418945
    5. 'max' → logprob: -6.6888017654418945
    6. '(int' → logprob: -9.438801765441895
    7. ' (' → logprob: -9.563801765441895
    8. '(' → logprob: -9.938801765441895
    9. '0' → logprob: -10.313801765441895
    10. '(x' → logprob: -10.688801765441895

Token 258: '.maximum' (ID: 128678)
  Prédit: '.maximum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.maximum' → logprob: -0.08214784413576126
    2. '.sum' → logprob: -3.3321478366851807
    3. '.clip' → logprob: -3.8321478366851807
    4. 'maximum' → logprob: -4.70714807510376
    5. '.dot' → logprob: -5.45714807510376
    6. '.ceil' → logprob: -5.70714807510376
    7. '.minimum' → logprob: -5.83214807510376
    8. 'sum' → logprob: -7.70714807510376
    9. '
' → logprob: -8.207147598266602
    10. 'clip' → logprob: -8.457147598266602

Token 259: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6240664720535278
    2. '(A' → logprob: -0.8740664720535278
    3. '(F' → logprob: -3.1240663528442383
    4. '(np' → logprob: -6.749066352844238
    5. '0' → logprob: -6.874066352844238
    6. '((' → logprob: -7.249066352844238
    7. '(x' → logprob: -10.499066352844238
    8. '([' → logprob: -11.499066352844238
    9. 'A' → logprob: -11.624066352844238
    10. '(a' → logprob: -11.874066352844238

Token 260: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.410150945186615
    2. 'A' → logprob: -1.5351510047912598
    3. 'F' → logprob: -2.1601510047912598
    4. 'np' → logprob: -6.03515100479126
    5. '(' → logprob: -6.41015100479126
    6. '(A' → logprob: -7.41015100479126
    7. ' ' → logprob: -8.035150527954102
    8. '(F' → logprob: -8.410150527954102
    9. ' A' → logprob: -8.410150527954102
    10. '(np' → logprob: -9.410150527954102

Token 261: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.035041965544223785
    2. ',A' → logprob: -3.4100420475006104
    3. ' ,' → logprob: -6.785041809082031
    4. ',(' → logprob: -9.160041809082031
    5. ',F' → logprob: -9.660041809082031
    6. 'A' → logprob: -10.410041809082031
    7. ',
' → logprob: -10.660041809082031
    8. ',np' → logprob: -12.035041809082031
    9. ' A' → logprob: -12.160041809082031
    10. '(A' → logprob: -12.410041809082031

Token 262: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.8284702897071838
    2. ' A' → logprob: -0.8284702897071838
    3. 'F' → logprob: -3.203470230102539
    4. ' (' → logprob: -3.703470230102539
    5. ' F' → logprob: -4.078470230102539
    6. '(A' → logprob: -4.078470230102539
    7. ' np' → logprob: -4.703470230102539
    8. 'np' → logprob: -5.078470230102539
    9. 'x' → logprob: -5.703470230102539
    10. ' ' → logprob: -5.953470230102539

Token 263: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08969299495220184
    2. '-' → logprob: -2.464693069458008
    3. '-x' → logprob: -7.214693069458008
    4. '-cost' → logprob: -12.964693069458008
    5. ' ' → logprob: -13.214693069458008
    6. '-k' → logprob: -13.464693069458008
    7. ')' → logprob: -13.964693069458008
    8. '-min' → logprob: -13.964693069458008
    9. '-n' → logprob: -14.089693069458008
    10. ' ' → logprob: -14.839693069458008

Token 264: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0023032240569591522
    2. ' x' → logprob: -6.752303123474121
    3. '(x' → logprob: -7.377303123474121
    4. '(' → logprob: -8.377303123474121
    5. '(np' → logprob: -8.877303123474121
    6. 'np' → logprob: -9.502303123474121
    7. ' (' → logprob: -9.877303123474121
    8. ' ' → logprob: -12.252303123474121
    9. ' np' → logprob: -13.377303123474121
    10. '   ' → logprob: -13.377303123474121

Token 265: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006910260301083326
    2. '//' → logprob: -6.13191032409668
    3. ' *' → logprob: -6.88191032409668
    4. ').' → logprob: -6.88191032409668
    5. '*' → logprob: -7.00691032409668
    6. ' )' → logprob: -7.38191032409668
    7. '*np' → logprob: -8.00691032409668
    8. ')//' → logprob: -8.25691032409668
    9. '/F' → logprob: -8.63191032409668
    10. '*f' → logprob: -9.50691032409668

Token 266: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.0010341187007725239
    2. ' F' → logprob: -6.876034259796143
    3. ' ' → logprob: -14.001033782958984
    4. 'np' → logprob: -15.751033782958984
    5. '2' → logprob: -16.376033782958984
    6. '   ' → logprob: -16.501033782958984
    7. '  ' → logprob: -16.876033782958984
    8. '	F' → logprob: -17.126033782958984
    9. 'f' → logprob: -17.376033782958984
    10. '1' → logprob: -18.251033782958984

Token 267: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007836606819182634
    2. ' )' → logprob: -7.250783443450928
    3. ').' → logprob: -10.125783920288086
    4. ')
' → logprob: -11.500783920288086
    5. '))' → logprob: -12.500783920288086
    6. ')#' → logprob: -12.875783920288086
    7. '[' → logprob: -13.000783920288086
    8. ')**' → logprob: -13.000783920288086
    9. ')`' → logprob: -13.250783920288086
    10. ')

' → logprob: -13.625783920288086

Token 268: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 269: ' compute' (ID: 23864)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.8782058954238892
    2. ' minimize' → logprob: -1.5032058954238892
    3. 'main' → logprob: -2.2532057762145996
    4. ' find' → logprob: -2.7532057762145996
    5. ' binary' → logprob: -3.2532057762145996
    6. 'binary' → logprob: -3.3782057762145996
    7. 'min' → logprob: -3.5032057762145996
    8. ' can' → logprob: -3.6282057762145996
    9. 'can' → logprob: -4.2532057762146
    10. ' min' → logprob: -4.5032057762146

Token 270: '_sum' (ID: 29859)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.3693309426307678
    2. '_min' → logprob: -1.494330883026123
    3. '_total' → logprob: -3.369330883026123
    4. '_required' → logprob: -3.994330883026123
    5. '_sum' → logprob: -5.119330883026123
    6. '_re' → logprob: -5.494330883026123
    7. '_cost' → logprob: -5.619330883026123
    8. '_needed' → logprob: -5.869330883026123
    9. '_x' → logprob: -5.994330883026123
    10. '_possible' → logprob: -6.119330883026123

Token 271: '_max' (ID: 13731)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.31704533100128174
    2. '(' → logprob: -1.8170453310012817
    3. '_for' → logprob: -2.817045211791992
    4. '_' → logprob: -3.817045211791992
    5. 'def' → logprob: -4.692045211791992
    6. '(np' → logprob: -5.192045211791992
    7. 'for' → logprob: -5.692045211791992
    8. ' (' → logprob: -6.192045211791992
    9. '_(' → logprob: -6.442045211791992
    10. '_s' → logprob: -6.942045211791992

Token 272: 'imum' (ID: 4556)
  Prédit: 'imum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imum' → logprob: -0.00012094692647224292
    2. 'for' → logprob: -10.000121116638184
    3. '_for' → logprob: -10.750121116638184
    4. '(' → logprob: -11.375121116638184
    5. 'im' → logprob: -11.500121116638184
    6. 'IMUM' → logprob: -11.625121116638184
    7. 'ium' → logprob: -12.250121116638184
    8. 'imize' → logprob: -12.625121116638184
    9. 'def' → logprob: -12.750121116638184
    10. 'um' → logprob: -12.750121116638184

Token 273: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7309684753417969
    2. '(A' → logprob: -1.4809684753417969
    3. '_for' → logprob: -1.7309684753417969
    4. 's' → logprob: -2.730968475341797
    5. 'for' → logprob: -3.605968475341797
    6. 'def' → logprob: -4.480968475341797
    7. 'For' → logprob: -6.105968475341797
    8. ' (' → logprob: -6.480968475341797
    9. '_' → logprob: -6.605968475341797
    10. '<|end|>' → logprob: -6.855968475341797

Token 274: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00048167374916374683
    2. ',F' → logprob: -7.750481605529785
    3. ' ,' → logprob: -10.500481605529785
    4. ',
' → logprob: -11.625481605529785
    5. ',f' → logprob: -11.750481605529785
    6. ')' → logprob: -14.000481605529785
    7. ',A' → logprob: -14.125481605529785
    8. ',

' → logprob: -14.500481605529785
    9. 's' → logprob: -15.000481605529785
    10. ',max' → logprob: -15.000481605529785

Token 275: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.061971161514520645
    2. ' F' → logprob: -2.8119711875915527
    3. ' ' → logprob: -13.311970710754395
    4. 'f' → logprob: -14.311970710754395
    5. '<|end|>' → logprob: -14.561970710754395
    6. ')' → logprob: -14.811970710754395
    7. '   ' → logprob: -16.18697166442871
    8. 'def' → logprob: -16.31197166442871
    9. ',F' → logprob: -16.93697166442871
    10. '	F' → logprob: -16.99947166442871

Token 276: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003673940955195576
    2. ' ,' → logprob: -8.625367164611816
    3. ',x' → logprob: -8.750367164611816
    4. '):' → logprob: -11.125367164611816
    5. ',
' → logprob: -11.875367164611816
    6. '):
' → logprob: -14.125367164611816
    7. '   ' → logprob: -14.250367164611816
    8. ',n' → logprob: -14.375367164611816
    9. ')' → logprob: -14.625367164611816
    10. 'x' → logprob: -14.625367164611816

Token 277: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.44821012020111084
    2. 'x' → logprob: -1.0732101202011108
    3. '0' → logprob: -4.0732102394104
    4. ' ' → logprob: -6.3232102394104
    5. ')' → logprob: -8.823209762573242
    6. '100' → logprob: -9.323209762573242
    7. '1' → logprob: -9.448209762573242
    8. ' np' → logprob: -9.573209762573242
    9. 'np' → logprob: -11.323209762573242
    10. ')x' → logprob: -11.323209762573242

Token 278: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004739603027701378
    2. '):
' → logprob: -5.379739761352539
    3. ' ):' → logprob: -9.629739761352539
    4. '):
' → logprob: -10.254739761352539
    5. ')' → logprob: -11.129739761352539
    6. '   ' → logprob: -13.504739761352539
    7. ':' → logprob: -14.754739761352539
    8. ',' → logprob: -14.754739761352539
    9. ' ' → logprob: -15.004739761352539
    10. ' ):
' → logprob: -15.379739761352539

Token 279: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43470364809036255
    2. 'return' → logprob: -2.3097035884857178
    3. 'max' → logprob: -2.8097035884857178
    4. ' return' → logprob: -2.9347035884857178
    5. '
' → logprob: -3.1847035884857178
    6. 'np' → logprob: -3.9347035884857178
    7. 'sum' → logprob: -4.559703826904297
    8. 'maximum' → logprob: -4.559703826904297
    9. ' max' → logprob: -4.809703826904297
    10. '=' → logprob: -5.059703826904297

Token 280: ' arr' (ID: 1724)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.2421892136335373
    2. 'return' → logprob: -1.6171891689300537
    3. '(np' → logprob: -5.492189407348633
    4. 'def' → logprob: -5.617189407348633
    5. 'compute' → logprob: -6.242189407348633
    6. ' np' → logprob: -6.367189407348633
    7. 'sum' → logprob: -6.367189407348633
    8. '   ' → logprob: -6.867189407348633
    9. 'max' → logprob: -6.867189407348633
    10. ' return' → logprob: -7.242189407348633

Token 281: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10360193997621536
    2. '=' → logprob: -2.3536019325256348
    3. 'ay' → logprob: -6.728601932525635
    4. '_max' → logprob: -7.228601932525635
    5. '=np' → logprob: -7.603601932525635
    6. '   ' → logprob: -7.728601932525635
    7. 'ays' → logprob: -8.603602409362793
    8. 'max' → logprob: -8.728602409362793
    9. '_' → logprob: -9.603602409362793
    10. '=max' → logprob: -10.228602409362793

Token 282: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.0325806699693203
    2. ' compute' → logprob: -3.532580614089966
    3. 'np' → logprob: -6.032580852508545
    4. ' np' → logprob: -7.782580852508545
    5. ' ' → logprob: -12.907580375671387
    6. 'max' → logprob: -13.657580375671387
    7. '
' → logprob: -13.657580375671387
    8. 'com' → logprob: -14.157580375671387
    9. 'computer' → logprob: -14.282580375671387
    10. '.compute' → logprob: -14.407580375671387

Token 283: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0006279678200371563
    2. 'maximum' → logprob: -7.5006279945373535
    3. 'max' → logprob: -9.500627517700195
    4. ' maximum' → logprob: -15.750627517700195
    5. 'maximize' → logprob: -17.375627517700195
    6. 'Maximum' → logprob: -17.750627517700195
    7. 'amax' → logprob: -18.625627517700195
    8. '_' → logprob: -18.875627517700195
    9. ' максим' → logprob: -19.250627517700195
    10. '.maximum' → logprob: -19.625627517700195

Token 284: 'imum' (ID: 4556)
  Prédit: 'imum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imum' → logprob: -0.3875720500946045
    2. 'um' → logprob: -1.1375720500946045
    3. 'maximum' → logprob: -8.262572288513184
    4. 'mum' → logprob: -8.887572288513184
    5. 'ium' → logprob: -9.512572288513184
    6. 'x' → logprob: -10.637572288513184
    7. 'sum' → logprob: -10.762572288513184
    8. '_for' → logprob: -11.137572288513184
    9. '   ' → logprob: -11.137572288513184
    10. '
' → logprob: -11.262572288513184

Token 285: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -2.7968066206085496e-05
    2. 'for' → logprob: -11.250027656555176
    3. '(A' → logprob: -11.625027656555176
    4. 'For' → logprob: -12.125027656555176
    5. '```' → logprob: -15.375027656555176
    6. '_FOR' → logprob: -16.625028610229492
    7. ' for' → logprob: -17.250028610229492
    8. '(' → logprob: -17.375028610229492
    9. '
' → logprob: -17.625028610229492
    10. '_array' → logprob: -17.750028610229492

Token 286: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.20183682441711426
    2. 'x' → logprob: -1.7018368244171143
    3. '(A' → logprob: -7.826836585998535
    4. 'X' → logprob: -12.201836585998535
    5. '_' → logprob: -12.326836585998535
    6. ' x' → logprob: -12.451836585998535
    7. 'A' → logprob: -12.451836585998535
    8. '```' → logprob: -13.201836585998535
    9. 'max' → logprob: -14.201836585998535
    10. '(' → logprob: -14.201836585998535

Token 287: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -2.4987974029500037e-05
    2. '(' → logprob: -10.625024795532227
    3. ' (' → logprob: -15.500024795532227
    4. 'A' → logprob: -15.875024795532227
    5. '(
' → logprob: -15.875024795532227
    6. '(arr' → logprob: -16.625024795532227
    7. ' ' → logprob: -18.250024795532227
    8. '(a' → logprob: -18.500024795532227
    9. '```' → logprob: -18.500024795532227
    10. '
' → logprob: -18.875024795532227

Token 288: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008521550917066634
    2. ',F' → logprob: -7.125852108001709
    3. ' ,' → logprob: -10.000852584838867
    4. ',
' → logprob: -14.125852584838867
    5. 'F' → logprob: -14.625852584838867
    6. ',f' → logprob: -14.625852584838867
    7. ')' → logprob: -15.125852584838867
    8. '[' → logprob: -16.500852584838867
    9. '‌,' → logprob: -16.750852584838867
    10. '<|end|>' → logprob: -17.000852584838867

Token 289: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.0040785204619169235
    2. ' F' → logprob: -5.504078388214111
    3. ' ' → logprob: -17.629077911376953
    4. '   ' → logprob: -17.879077911376953
    5. '	F' → logprob: -18.629077911376953
    6. ' ' → logprob: -19.379077911376953
    7. '
' → logprob: -19.629077911376953
    8. 'f' → logprob: -19.629077911376953
    9. ')' → logprob: -19.754077911376953
    10. ',F' → logprob: -19.754077911376953

Token 290: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22565805912017822
    2. ')' → logprob: -1.6006580591201782
    3. ',x' → logprob: -8.975658416748047
    4. ')
' → logprob: -9.975658416748047
    5. ' ,' → logprob: -10.725658416748047
    6. ',)' → logprob: -10.850658416748047
    7. ' )' → logprob: -11.850658416748047
    8. ',
' → logprob: -12.225658416748047
    9. '),' → logprob: -12.225658416748047
    10. ')x' → logprob: -13.350658416748047

Token 291: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.318681188422488e-05
    2. ' x' → logprob: -11.25001335144043
    3. ')' → logprob: -16.12501335144043
    4. ')x' → logprob: -19.25001335144043
    5. 'arr' → logprob: -19.37501335144043
    6. '
' → logprob: -19.62501335144043
    7. ')
' → logprob: -19.75001335144043
    8. 'np' → logprob: -20.62501335144043
    9. '(x' → logprob: -20.75001335144043
    10. ' ' → logprob: -20.87501335144043

Token 292: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.12711666524410248
    2. ')' → logprob: -2.1271166801452637
    3. ')
' → logprob: -8.877116203308105
    4. ').' → logprob: -10.752116203308105
    5. ')

' → logprob: -11.002116203308105
    6. ' )
' → logprob: -11.752116203308105
    7. '   ' → logprob: -13.377116203308105
    8. ' )' → logprob: -14.502116203308105
    9. ')return' → logprob: -15.377116203308105
    10. ' ' → logprob: -15.877116203308105

Token 293: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27480557560920715
    2. 'return' → logprob: -1.7748055458068848
    3. '.sum' → logprob: -2.8998055458068848
    4. '
' → logprob: -4.524805545806885
    5. ' return' → logprob: -5.774805545806885
    6. '	return' → logprob: -7.649805545806885
    7. 'def' → logprob: -7.899805545806885
    8. 'sum' → logprob: -8.024806022644043
    9. '    
' → logprob: -8.524806022644043
    10. ')' → logprob: -9.399806022644043

Token 294: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03889723867177963
    2. ' return' → logprob: -3.2888972759246826
    3. '   ' → logprob: -7.2888970375061035
    4. 'sum' → logprob: -9.288897514343262
    5. 's' → logprob: -9.913897514343262
    6. '
' → logprob: -11.913897514343262
    7. '	return' → logprob: -12.288897514343262
    8. 'arr' → logprob: -12.538897514343262
    9. ' ' → logprob: -12.663897514343262
    10. 'total' → logprob: -12.788897514343262

Token 295: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.6050097346305847
    2. 'np' → logprob: -1.7300097942352295
    3. ' arr' → logprob: -1.9800097942352295
    4. ' np' → logprob: -1.9800097942352295
    5. 'int' → logprob: -7.98000955581665
    6. ' int' → logprob: -8.730010032653809
    7. '(np' → logprob: -13.480010032653809
    8. '(arr' → logprob: -13.605010032653809
    9. '```' → logprob: -13.605010032653809
    10. '	arr' → logprob: -13.730010032653809

Token 296: '.sum' (ID: 35381)
  Prédit: '.sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sum' → logprob: -2.7372048862162046e-05
    2. '.' → logprob: -11.250027656555176
    3. 'sum' → logprob: -11.750027656555176
    4. ' .' → logprob: -12.125027656555176
    5. '.astype' → logprob: -14.625027656555176
    6. '.tolist' → logprob: -15.750027656555176
    7. '
' → logprob: -16.00002670288086
    8. '.s' → logprob: -16.12502670288086
    9. '.dot' → logprob: -16.75002670288086
    10. '.max' → logprob: -17.62502670288086

Token 297: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.664371848164592e-05
    2. '(' → logprob: -12.000016212463379
    3. '()+' → logprob: -13.000016212463379
    4. '()>' → logprob: -13.250016212463379
    5. ' ()' → logprob: -13.375016212463379
    6. '()<' → logprob: -13.375016212463379
    7. '()
' → logprob: -14.250016212463379
    8. '()

' → logprob: -14.750016212463379
    9. '()]' → logprob: -15.250016212463379
    10. '()`' → logprob: -15.375016212463379

Token 298: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6552057266235352
    2. '
' → logprob: -0.7802057266235352
    3. '

' → logprob: -4.155205726623535
    4. '<|end|>' → logprob: -5.030205726623535
    5. ' def' → logprob: -10.030205726623535
    6. '<|end|>' → logprob: -10.780205726623535
    7. '
' → logprob: -11.530205726623535
    8. '  
' → logprob: -11.655205726623535
    9. '(' → logprob: -12.030205726623535
    10. '```' → logprob: -12.280205726623535

Token 299: ' can' (ID: 665)
  Prédit: 'binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'binary' → logprob: -0.8566253781318665
    2. ' binary' → logprob: -0.9816253781318665
    3. ' find' → logprob: -1.8566253185272217
    4. 'find' → logprob: -3.9816253185272217
    5. ' main' → logprob: -4.856625556945801
    6. ' minimize' → logprob: -5.481625556945801
    7. 'main' → logprob: -5.981625556945801
    8. 'b' → logprob: -6.231625556945801
    9. 'bin' → logprob: -6.231625556945801
    10. ' solve' → logprob: -6.606625556945801

Token 300: '_' (ID: 62)
  Prédit: '_apply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_apply' → logprob: -1.3084388971328735
    2. '_accept' → logprob: -1.6834388971328735
    3. '_continue' → logprob: -2.183438777923584
    4. '_reduce' → logprob: -2.183438777923584
    5. '_use' → logprob: -2.308438777923584
    6. '_' → logprob: -3.058438777923584
    7. '_allocate' → logprob: -3.058438777923584
    8. '_ac' → logprob: -3.933438777923584
    9. '_complete' → logprob: -4.558438777923584
    10. '_pro' → logprob: -4.683438777923584

Token 301: 'ach' (ID: 678)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.138811856508255
    2. 'ach' → logprob: -3.0138118267059326
    3. 'make' → logprob: -3.0138118267059326
    4. 'de' → logprob: -3.8888118267059326
    5. 'min' → logprob: -5.388812065124512
    6. 'use' → logprob: -5.888812065124512
    7. 'ac' → logprob: -8.013812065124512
    8. 'allocate' → logprob: -8.263812065124512
    9. 'apply' → logprob: -8.513812065124512
    10. 'maximize' → logprob: -8.513812065124512

Token 302: 'ieve' (ID: 3703)
  Prédit: 'ieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieve' → logprob: -0.003342759795486927
    2. 'ive' → logprob: -5.878342628479004
    3. 'eve' → logprob: -8.503342628479004
    4. 'iev' → logprob: -9.003342628479004
    5. 'e' → logprob: -9.503342628479004
    6. 'eat' → logprob: -9.753342628479004
    7. 'ievable' → logprob: -10.878342628479004
    8. 'ieved' → logprob: -11.003342628479004
    9. 'at' → logprob: -11.503342628479004
    10. 'ief' → logprob: -11.753342628479004

Token 303: '_x' (ID: 7054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5865718722343445
    2. '(A' → logprob: -1.4615719318389893
    3. '(buffer' → logprob: -2.4615719318389893
    4. '_' → logprob: -2.5865719318389893
    5. '(K' → logprob: -4.08657169342041
    6. ' (' → logprob: -4.58657169342041
    7. '_(' → logprob: -4.71157169342041
    8. '_x' → logprob: -5.46157169342041
    9. '(x' → logprob: -6.33657169342041
    10. '```' → logprob: -6.46157169342041

Token 304: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19463880360126495
    2. '(x' → logprob: -1.9446388483047485
    3. '(A' → logprob: -3.444638729095459
    4. '(buffer' → logprob: -6.319638729095459
    5. '(
' → logprob: -10.319639205932617
    6. '(B' → logprob: -10.819639205932617
    7. ' (' → logprob: -11.069639205932617
    8. '(X' → logprob: -11.319639205932617
    9. '(a' → logprob: -11.819639205932617
    10. '(b' → logprob: -12.944639205932617

Token 305: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001005630983854644
    2. ',F' → logprob: -9.500100135803223
    3. ' ,' → logprob: -10.875100135803223
    4. ',
' → logprob: -12.250100135803223
    5. 'F' → logprob: -14.000100135803223
    6. '‌,' → logprob: -15.250100135803223
    7. ',K' → logprob: -15.500100135803223
    8. ')' → logprob: -16.25010108947754
    9. ',
' → logprob: -16.25010108947754
    10. ',

' → logprob: -16.50010108947754

Token 306: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.2014264017343521
    2. ' F' → logprob: -1.701426386833191
    3. ',' → logprob: -12.32642650604248
    4. '   ' → logprob: -12.57642650604248
    5. ' ' → logprob: -12.95142650604248
    6. ',F' → logprob: -14.45142650604248
    7. '  ' → logprob: -14.95142650604248
    8. ')' → logprob: -14.95142650604248
    9. 'f' → logprob: -15.07642650604248
    10. '    ' → logprob: -15.38892650604248

Token 307: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.3458322731312364e-06
    2. ' ,' → logprob: -12.000007629394531
    3. ',K' → logprob: -14.500007629394531
    4. ',
' → logprob: -15.250007629394531
    5. ',x' → logprob: -15.250007629394531
    6. ',int' → logprob: -17.37500762939453
    7. ',A' → logprob: -17.62500762939453
    8. '   ' → logprob: -17.75000762939453
    9. '‌,' → logprob: -17.75000762939453
    10. ',n' → logprob: -18.00000762939453

Token 308: ' K' (ID: 658)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6951209306716919
    2. ' x' → logprob: -1.195120930671692
    3. 'K' → logprob: -2.1951208114624023
    4. ' K' → logprob: -2.4451208114624023
    5. '   ' → logprob: -8.820120811462402
    6. ' ' → logprob: -9.945120811462402
    7. ',' → logprob: -10.195120811462402
    8. '    ' → logprob: -11.695120811462402
    9. ')' → logprob: -12.820120811462402
    10. ',K' → logprob: -12.820120811462402

Token 309: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.096126576769166e-05
    2. ' ,' → logprob: -10.125041007995605
    3. ',x' → logprob: -14.125041007995605
    4. ',
' → logprob: -17.50004005432129
    5. '_,' → logprob: -17.50004005432129
    6. '   ' → logprob: -17.75004005432129
    7. 'x' → logprob: -18.75004005432129
    8. '‌,' → logprob: -18.75004005432129
    9. ',int' → logprob: -19.62504005432129
    10. ' x' → logprob: -20.37504005432129

Token 310: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6326263546943665
    2. ' x' → logprob: -0.7576263546943665
    3. '   ' → logprob: -10.7576265335083
    4. ' ' → logprob: -13.5076265335083
    5. '    ' → logprob: -13.8826265335083
    6. ')' → logprob: -13.8826265335083
    7. '	x' → logprob: -14.0076265335083
    8. ')x' → logprob: -14.2576265335083
    9. '       ' → logprob: -15.0076265335083
    10. '  ' → logprob: -15.1326265335083

Token 311: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0038329751696437597
    2. '):
' → logprob: -5.628832817077637
    3. ',' → logprob: -8.503832817077637
    4. ')' → logprob: -11.253832817077637
    5. '   ' → logprob: -11.753832817077637
    6. ' ):' → logprob: -12.503832817077637
    7. '):
' → logprob: -12.628832817077637
    8. ':' → logprob: -13.378832817077637
    9. '):

' → logprob: -15.503832817077637
    10. 'def' → logprob: -16.628833770751953

Token 312: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04123749956488609
    2. '
' → logprob: -3.4162375926971436
    3. '    
' → logprob: -5.0412373542785645
    4. ' return' → logprob: -7.9162373542785645
    5. '	return' → logprob: -8.041237831115723
    6. 'return' → logprob: -9.166237831115723
    7. '  
' → logprob: -9.666237831115723
    8. '   
' → logprob: -10.041237831115723
    9. ' 
' → logprob: -10.166237831115723
    10. '\t' → logprob: -10.416237831115723

Token 313: ' sum' (ID: 4215)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2058803290128708
    2. 'return' → logprob: -1.9558802843093872
    3. ' sum' → logprob: -3.9558804035186768
    4. 'sum' (adapté à ' sum') → logprob: -4.205880165100098
    5. '   ' → logprob: -5.205880165100098
    6. ' total' → logprob: -6.080880165100098
    7. 'total' → logprob: -7.080880165100098
    8. '
' → logprob: -7.830880165100098
    9. ' current' → logprob: -8.330880165100098
    10. ' s' → logprob: -8.455880165100098

Token 314: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.48850902915000916
    2. ' =' → logprob: -1.7385090589523315
    3. '_' → logprob: -1.8635090589523315
    4. '=' → logprob: -3.113508939743042
    5. 'max' → logprob: -5.738509178161621
    6. '_=' → logprob: -5.863509178161621
    7. '_val' → logprob: -6.113509178161621
    8. '=max' → logprob: -6.863509178161621
    9. '_required' → logprob: -7.738509178161621
    10. '_x' → logprob: -7.988509178161621

Token 315: ' =' (ID: 314)
  Prédit: 'imum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imum' → logprob: -0.0055442932061851025
    2. 'um' → logprob: -5.380544185638428
    3. '_max' → logprob: -7.880544185638428
    4. ' =' → logprob: -8.880544662475586
    5. '=' → logprob: -9.005544662475586
    6. 'ium' → logprob: -9.255544662475586
    7. '_' → logprob: -9.630544662475586
    8. 'im' → logprob: -10.130544662475586
    9. '_=' → logprob: -11.005544662475586
    10. '_x' → logprob: -11.255544662475586

Token 316: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.0067156096920371056
    2. ' compute' → logprob: -5.006715774536133
    3. '   ' → logprob: -16.256715774536133
    4. 'np' → logprob: -16.256715774536133
    5. 'calculate' → logprob: -18.006715774536133
    6. '.compute' → logprob: -18.631715774536133
    7. 'computed' → logprob: -19.006715774536133
    8. ' np' → logprob: -19.256715774536133
    9. 'comput' → logprob: -19.381715774536133
    10. ' ' → logprob: -19.381715774536133

Token 317: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0002694416616577655
    2. '_max' → logprob: -8.250269889831543
    3. 'sum' → logprob: -11.750269889831543
    4. 'max' → logprob: -15.625269889831543
    5. '_' → logprob: -17.375268936157227
    6. 's' → logprob: -17.875268936157227
    7. '\' → logprob: -18.250268936157227
    8. 'maximum' → logprob: -18.375268936157227
    9. '(sum' → logprob: -19.125268936157227
    10. '_s' → logprob: -19.250268936157227

Token 318: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.00012523093027994037
    2. 'max' → logprob: -9.12512493133545
    3. 'maximum' → logprob: -11.25012493133545
    4. 'Maximum' → logprob: -13.87512493133545
    5. '```' → logprob: -14.12512493133545
    6. '(max' → logprob: -14.37512493133545
    7. '_for' → logprob: -15.62512493133545
    8. '_sum' → logprob: -15.75012493133545
    9. ' maximum' → logprob: -16.000125885009766
    10. 'Max' → logprob: -16.250125885009766

Token 319: 'imum' (ID: 4556)
  Prédit: 'imum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imum' → logprob: -0.19388529658317566
    2. 'um' → logprob: -1.818885326385498
    3. 'ax' → logprob: -4.318885326385498
    4. 'ium' → logprob: -7.693885326385498
    5. 'mum' → logprob: -8.69388484954834
    6. 'maximum' → logprob: -10.56888484954834
    7. 'x' → logprob: -11.19388484954834
    8. 'ount' → logprob: -11.19388484954834
    9. 'un' → logprob: -11.56888484954834
    10. 'im' → logprob: -11.69388484954834

Token 320: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.000000953674316
    3. '```' → logprob: -17.250001907348633
    4. ' (' → logprob: -17.625001907348633
    5. '(
' → logprob: -17.875001907348633
    6. ' ' → logprob: -18.875001907348633
    7. 'A' → logprob: -19.125001907348633
    8. '   ' → logprob: -19.125001907348633
    9. '
' → logprob: -20.125001907348633
    10. ',' → logprob: -20.375001907348633

Token 321: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015002528380136937
    2. ',F' → logprob: -8.875149726867676
    3. ' ,' → logprob: -12.250149726867676
    4. ',A' → logprob: -12.375149726867676
    5. ',
' → logprob: -14.125149726867676
    6. '<|end|>' → logprob: -16.000150680541992
    7. 'F' → logprob: -16.500150680541992
    8. '‌,' → logprob: -17.125150680541992
    9. ',K' → logprob: -17.125150680541992
    10. ')' → logprob: -17.375150680541992

Token 322: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.005931520834565163
    2. ' F' → logprob: -5.130931377410889
    3. '   ' → logprob: -13.755931854248047
    4. ' ' → logprob: -13.755931854248047
    5. ',F' → logprob: -15.380931854248047
    6. '	F' → logprob: -15.880931854248047
    7. ',' → logprob: -16.005931854248047
    8. '
' → logprob: -16.505931854248047
    9. '  ' → logprob: -16.630931854248047
    10. '```' → logprob: -16.755931854248047

Token 323: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1398757123970427e-05
    2. ' ,' → logprob: -12.375011444091797
    3. ',K' → logprob: -12.500011444091797
    4. ',
' → logprob: -13.000011444091797
    5. '   ' → logprob: -14.500011444091797
    6. ')' → logprob: -15.250011444091797
    7. '‌,' → logprob: -16.500011444091797
    8. ',x' → logprob: -16.625011444091797
    9. ',
' → logprob: -16.875011444091797
    10. ',

' → logprob: -17.375011444091797

Token 324: ' x' (ID: 1215)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0019647935405373573
    2. ' K' → logprob: -6.376964569091797
    3. 'x' → logprob: -8.251964569091797
    4. ' x' → logprob: -14.126964569091797
    5. ' ' → logprob: -14.501964569091797
    6. '   ' → logprob: -15.126964569091797
    7. ')' → logprob: -15.501964569091797
    8. '
' → logprob: -17.376964569091797
    9. '	K' → logprob: -17.501964569091797
    10. ',K' → logprob: -18.251964569091797

Token 325: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008852104656398296
    2. ')
' → logprob: -4.758852005004883
    3. '   ' → logprob: -9.133852005004883
    4. ')<=' → logprob: -9.633852005004883
    5. ' )' → logprob: -10.258852005004883
    6. ')
' → logprob: -10.883852005004883
    7. '<=' → logprob: -12.883852005004883
    8. ' )
' → logprob: -13.258852005004883
    9. ')<' → logprob: -13.633852005004883
    10. ')

' → logprob: -13.633852005004883

Token 326: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005326724611222744
    2. '<=' → logprob: -5.880326747894287
    3. ' <=' → logprob: -6.005326747894287
    4. '	return' → logprob: -11.255326271057129
    5. ' return' → logprob: -11.505326271057129
    6. '  ' → logprob: -11.630326271057129
    7. '    ' → logprob: -12.505326271057129
    8. '	' → logprob: -12.630326271057129
    9. 'return' → logprob: -12.630326271057129
    10. '
' → logprob: -12.755326271057129

Token 327: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7321065068244934
    2. ' return' → logprob: -1.2321064472198486
    3. 'return' (adapté à ' return') → logprob: -1.7321064472198486
    4. '<=' → logprob: -3.3571064472198486
    5. ' <=' → logprob: -4.232106685638428
    6. '	return' → logprob: -7.107106685638428
    7. '
' → logprob: -8.35710620880127
    8. '  ' → logprob: -10.23210620880127
    9. '    ' → logprob: -10.73210620880127
    10. ' ' → logprob: -11.35710620880127

Token 328: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.003178901970386505
    2. 'sum' → logprob: -5.75317907333374
    3. '(sum' → logprob: -13.628178596496582
    4. '	sum' → logprob: -16.7531795501709
    5. ' (' → logprob: -18.0031795501709
    6. ' ' → logprob: -18.2531795501709
    7. ' ' → logprob: -19.0031795501709
    8. '(' → logprob: -20.2531795501709
    9. '.sum' → logprob: -20.3781795501709
    10. ' K' → logprob: -20.3781795501709

Token 329: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -5.598092684522271e-05
    2. 'max' → logprob: -9.875056266784668
    3. '_' → logprob: -12.625056266784668
    4. '_sum' → logprob: -13.750056266784668
    5. '<=' → logprob: -15.750056266784668
    6. '_MAX' → logprob: -17.50005531311035
    7. 'Max' → logprob: -17.87505531311035
    8. '_min' → logprob: -17.87505531311035
    9. '(max' → logprob: -18.62505531311035
    10. '_=' → logprob: -18.87505531311035

Token 330: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.31326231360435486
    2. ' <=' → logprob: -1.3132623434066772
    3. ')<=' → logprob: -14.938261985778809
    4. ' ' → logprob: -16.938262939453125
    5. ']<=' → logprob: -16.938262939453125
    6. ' ' → logprob: -17.563262939453125
    7. '[' → logprob: -17.938262939453125
    8. '   ' → logprob: -18.438262939453125
    9. '≤' → logprob: -18.938262939453125
    10. '	' → logprob: -18.938262939453125

Token 331: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.023245712742209435
    2. ' K' → logprob: -3.7732458114624023
    3. '	K' → logprob: -15.148245811462402
    4. '   ' → logprob: -18.648244857788086
    5. ' ' → logprob: -19.523244857788086
    6. '
' → logprob: -19.773244857788086
    7. ' ' → logprob: -20.273244857788086
    8. ',K' → logprob: -20.273244857788086
    9. 'Ｋ' → logprob: -20.523244857788086
    10. '_K' → logprob: -21.023244857788086

Token 332: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.201742023229599
    2. '
' → logprob: -1.7017420530319214
    3. '

' → logprob: -8.076742172241211
    4. '
' → logprob: -11.826742172241211
    5. ' def' → logprob: -12.451742172241211
    6. '<|end|>' → logprob: -12.701742172241211
    7. '  
' → logprob: -13.076742172241211
    8. ' 
' → logprob: -14.701742172241211
    9. '```' → logprob: -15.201742172241211
    10. '    
' → logprob: -15.201742172241211

Token 333: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012626893818378448
    2. '
' → logprob: -4.387627124786377
    3. '\' → logprob: -9.637626647949219
    4. '

' → logprob: -11.137626647949219
    5. ' def' → logprob: -11.512626647949219
    6. '  
' → logprob: -12.262626647949219
    7. 'd' → logprob: -12.512626647949219
    8. '0' → logprob: -12.762626647949219
    9. '\n' → logprob: -12.762626647949219
    10. ' 
' → logprob: -12.762626647949219

Token 334: ' binary' (ID: 15600)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.5673794746398926
    2. 'binary' → logprob: -1.0673794746398926
    3. ' main' → logprob: -2.5673794746398926
    4. ' binary' → logprob: -4.567379474639893
    5. 'bis' → logprob: -7.442379474639893
    6. 'b' → logprob: -7.567379474639893
    7. 'def' → logprob: -7.817379474639893
    8. 'find' → logprob: -8.567378997802734
    9. ' find' → logprob: -8.817378997802734
    10. 'solve' → logprob: -10.317378997802734

Token 335: '_search' (ID: 23642)
  Prédit: '_search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_search' → logprob: -0.08014622330665588
    2. '_' → logprob: -2.580146312713623
    3. '_space' → logprob: -6.830146312713623
    4. ' _' → logprob: -9.330145835876465
    5. '_find' → logprob: -10.830145835876465
    6. 'search' → logprob: -11.080145835876465
    7. ' search' → logprob: -12.330145835876465
    8. '_split' → logprob: -12.705145835876465
    9. '_target' → logprob: -12.830145835876465
    10. '_s' → logprob: -13.080145835876465

Token 336: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.6386982798576355
    2. '(' → logprob: -0.7636982798576355
    3. '_(' → logprob: -6.638698101043701
    4. 'def' → logprob: -7.263698101043701
    5. '(lambda' → logprob: -7.388698101043701
    6. '_' → logprob: -7.513698101043701
    7. '(range' → logprob: -7.638698101043701
    8. '(def' → logprob: -7.888698101043701
    9. '(_' → logprob: -8.13869857788086
    10. '(low' → logprob: -8.63869857788086

Token 337: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2233183042553719e-05
    2. ' ,' → logprob: -11.875012397766113
    3. ',F' → logprob: -12.375012397766113
    4. ',
' → logprob: -14.500012397766113
    5. ',K' → logprob: -15.125012397766113
    6. 'def' → logprob: -16.500011444091797
    7. '_,' → logprob: -17.375011444091797
    8. ',f' → logprob: -17.625011444091797
    9. '   ' → logprob: -18.000011444091797
    10. 'F' → logprob: -18.125011444091797

Token 338: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.1602318435907364
    2. ' F' → logprob: -1.9102318286895752
    3. ' ' → logprob: -12.660231590270996
    4. '<|end|>' → logprob: -13.285231590270996
    5. '   ' → logprob: -13.910231590270996
    6. '  ' → logprob: -14.285231590270996
    7. 'f' → logprob: -14.660231590270996
    8. ')' → logprob: -15.785231590270996
    9. '	F' → logprob: -15.910231590270996
    10. '    ' → logprob: -16.285232543945312

Token 339: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5048530030981055e-06
    2. ' ,' → logprob: -13.750001907348633
    3. ',K' → logprob: -15.500001907348633
    4. ',
' → logprob: -17.250001907348633
    5. '‌,' → logprob: -18.000001907348633
    6. '   ' → logprob: -18.250001907348633
    7. ',k' → logprob: -19.125001907348633
    8. 'def' → logprob: -19.625001907348633
    9. '‍,' → logprob: -19.750001907348633
    10. '_,' → logprob: -20.000001907348633

Token 340: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0017107593594118953
    2. ' K' → logprob: -6.376710891723633
    3. '   ' → logprob: -11.876710891723633
    4. ' ' → logprob: -14.126710891723633
    5. '  ' → logprob: -15.251710891723633
    6. '    ' → logprob: -16.126710891723633
    7. ',' → logprob: -16.251710891723633
    8. '	K' → logprob: -16.251710891723633
    9. ')' → logprob: -16.501710891723633
    10. ',K' → logprob: -16.751710891723633

Token 341: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.088346359931165e-07
    2. ' ,' → logprob: -14.500000953674316
    3. ',
' → logprob: -15.750000953674316
    4. ',x' → logprob: -16.25
    5. '   ' → logprob: -18.125
    6. '‌,' → logprob: -18.25
    7. '_,' → logprob: -18.75
    8. '):' → logprob: -19.0
    9. '):
' → logprob: -19.125
    10. ',

' → logprob: -19.75

Token 342: ' left' (ID: 3561)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.167636439204216
    2. 'left' → logprob: -1.9176363945007324
    3. ' low' → logprob: -5.292636394500732
    4. 'lo' → logprob: -6.792636394500732
    5. ' left' → logprob: -7.667636394500732
    6. 'x' → logprob: -7.667636394500732
    7. ' lo' → logprob: -9.16763687133789
    8. ')' → logprob: -9.91763687133789
    9. 'lower' → logprob: -10.16763687133789
    10. 'start' → logprob: -10.41763687133789

Token 343: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003741887048818171
    2. '=' → logprob: -8.375373840332031
    3. ' ,' → logprob: -8.875373840332031
    4. ',
' → logprob: -13.000373840332031
    5. ',right' → logprob: -14.875373840332031
    6. '   ' → logprob: -15.000373840332031
    7. ':' → logprob: -15.125373840332031
    8. '0' → logprob: -15.750373840332031
    9. ',left' → logprob: -16.25037384033203
    10. ')' → logprob: -16.37537384033203

Token 344: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.3868778347969055
    2. ' right' → logprob: -1.1368777751922607
    3. '   ' → logprob: -12.38687801361084
    4. ',right' → logprob: -13.63687801361084
    5. '	right' → logprob: -14.38687801361084
    6. ' ' → logprob: -14.88687801361084
    7. 'Right' → logprob: -16.136877059936523
    8. '100' → logprob: -16.886877059936523
    9. '_right' → logprob: -17.011877059936523
    10. '    ' → logprob: -17.011877059936523

Token 345: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005867527215741575
    2. '):
' → logprob: -7.500586986541748
    3. ':' → logprob: -11.00058650970459
    4. '   ' → logprob: -12.25058650970459
    5. ')' → logprob: -12.37558650970459
    6. ',' → logprob: -12.87558650970459
    7. ' ):' → logprob: -13.00058650970459
    8. '):
' → logprob: -13.12558650970459
    9. '=' → logprob: -14.62558650970459
    10. '():' → logprob: -15.37558650970459

Token 346: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019128361716866493
    2. ' while' → logprob: -4.019128322601318
    3. 'while' → logprob: -7.019128322601318
    4. '	while' → logprob: -10.644128799438477
    5. '```' → logprob: -10.894128799438477
    6. '    ' → logprob: -11.144128799438477
    7. '    
' → logprob: -11.269128799438477
    8. ' mid' → logprob: -12.019128799438477
    9. '
' → logprob: -13.019128799438477
    10. 'mid' → logprob: -13.269128799438477

Token 347: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.10665073990821838
    2. ' while' → logprob: -2.3566508293151855
    3. 'mid' → logprob: -5.4816508293151855
    4. '   ' → logprob: -6.3566508293151855
    5. ' mid' → logprob: -7.6066508293151855
    6. '
' → logprob: -11.356650352478027
    7. '```' → logprob: -11.856650352478027
    8. 'if' → logprob: -12.106650352478027
    9. '	while' → logprob: -13.356650352478027
    10. ' if' → logprob: -13.856650352478027

Token 348: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.16023093461990356
    2. ' left' → logprob: -1.9102308750152588
    3. 'right' → logprob: -12.03523063659668
    4. ' right' → logprob: -14.28523063659668
    5. '	left' → logprob: -15.53523063659668
    6. '(left' → logprob: -16.28523063659668
    7. ' lef' → logprob: -17.91023063659668
    8. ' ' → logprob: -18.28523063659668
    9. '[left' → logprob: -18.53523063659668
    10. '_left' → logprob: -18.91023063659668

Token 349: ' +' (ID: 659)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.7273595333099365
    2. ' <' → logprob: -0.8523595333099365
    3. ' <=' → logprob: -3.1023595333099365
    4. '<=' → logprob: -3.1023595333099365
    5. '+' → logprob: -9.102359771728516
    6. '<int' → logprob: -9.227359771728516
    7. ' ' → logprob: -9.477359771728516
    8. '<n' → logprob: -9.852359771728516
    9. '<len' → logprob: -10.227359771728516
    10. '<th' → logprob: -10.852359771728516

Token 350: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -16.50002098083496
    4. '=' → logprob: -18.62502098083496
    5. '```' → logprob: -18.62502098083496
    6. '
' → logprob: -19.93752098083496
    7. '>' → logprob: -20.12502098083496
    8. '<' → logprob: -20.43752098083496
    9. '  ' → logprob: -20.43752098083496
    10. '+' → logprob: -20.62502098083496

Token 351: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -18.875001907348633
    4. 'right' → logprob: -19.000001907348633
    5. '```' → logprob: -20.000001907348633
    6. '0' → logprob: -20.500001907348633
    7. '100' → logprob: -21.000001907348633
    8. '  ' → logprob: -21.375001907348633
    9. '=' → logprob: -21.500001907348633
    10. '
' → logprob: -21.500001907348633

Token 352: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5231721997261047
    2. ' <' → logprob: -0.8981721997261047
    3. '<int' → logprob: -10.773172378540039
    4. '<n' → logprob: -11.898172378540039
    5. '<len' → logprob: -12.398172378540039
    6. ' ' → logprob: -12.648172378540039
    7. '<size' → logprob: -13.148172378540039
    8. '<class' → logprob: -13.398172378540039
    9. '<th' → logprob: -13.398172378540039
    10. '<T' → logprob: -14.148172378540039

Token 353: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.000553151941858232
    2. ' right' → logprob: -7.500553131103516
    3. '	right' → logprob: -17.250553131103516
    4. ' ' → logprob: -17.375553131103516
    5. '   ' → logprob: -17.875553131103516
    6. '=' → logprob: -18.625553131103516
    7. '[right' → logprob: -19.250553131103516
    8. 'Right' → logprob: -20.125553131103516
    9. '(right' → logprob: -20.125553131103516
    10. '_right' → logprob: -20.500553131103516

Token 354: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023325489833950996
    2. ':
' → logprob: -3.7733254432678223
    3. '   ' → logprob: -10.14832592010498
    4. '       ' → logprob: -10.52332592010498
    5. ' :' → logprob: -12.39832592010498
    6. '):
' → logprob: -13.14832592010498
    7. ' and' → logprob: -13.52332592010498
    8. ',' → logprob: -13.64832592010498
    9. ':
' → logprob: -13.77332592010498
    10. '):' → logprob: -14.02332592010498

Token 355: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.702706515789032
    2. 'mid' → logprob: -0.702706515789032
    3. ' mid' → logprob: -4.827706336975098
    4. '       ' → logprob: -6.702706336975098
    5. 'middle' → logprob: -9.452706336975098
    6. 'm' → logprob: -9.452706336975098
    7. '	m' → logprob: -10.077706336975098
    8. '```' → logprob: -10.577706336975098
    9. '_mid' → logprob: -10.702706336975098
    10. '[mid' → logprob: -11.327706336975098

Token 356: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' (adapté à ' mid') → logprob: -0.00033999193692579865
    2. ' mid' → logprob: -8.000340461730957
    3. 'middle' → logprob: -12.500340461730957
    4. '   ' → logprob: -14.375340461730957
    5. 'm' → logprob: -15.375340461730957
    6. '       ' → logprob: -17.50033950805664
    7. '[mid' → logprob: -18.75033950805664
    8. '_mid' → logprob: -19.00033950805664
    9. '(mid' → logprob: -20.00033950805664
    10. '
' → logprob: -20.62533950805664

Token 357: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889121770858765
    2. '=' → logprob: -2.5788912773132324
    3. ')' → logprob: -14.328890800476074
    4. '=int' → logprob: -14.828890800476074
    5. ' ' → logprob: -15.703890800476074
    6. ' =(' → logprob: -15.953890800476074
    7. ',' → logprob: -16.07889175415039
    8. '=(' → logprob: -16.45389175415039
    9. ' =
' → logprob: -17.07889175415039
    10. '<|end|>' → logprob: -18.07889175415039

Token 358: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.16023418307304382
    2. '(left' → logprob: -1.9102342128753662
    3. '   ' → logprob: -12.660234451293945
    4. ' ' → logprob: -13.285234451293945
    5. '(right' → logprob: -13.785234451293945
    6. ' left' → logprob: -13.785234451293945
    7. '(lhs' → logprob: -14.035234451293945
    8. 'left' → logprob: -14.160234451293945
    9. '[left' → logprob: -14.410234451293945
    10. '(line' → logprob: -15.660234451293945

Token 359: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.1398757123970427e-05
    2. ' left' → logprob: -11.500011444091797
    3. 'right' → logprob: -13.625011444091797
    4. 'lef' → logprob: -17.125011444091797
    5. '	left' → logprob: -18.000011444091797
    6. '[left' → logprob: -18.375011444091797
    7. ' lef' → logprob: -18.625011444091797
    8. '(left' → logprob: -19.000011444091797
    9. ' ' → logprob: -20.000011444091797
    10. '.left' → logprob: -20.250011444091797

Token 360: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4740775227546692
    2. '+' → logprob: -0.9740775227546692
    3. ' ' → logprob: -15.349077224731445
    4. ' ' → logprob: -15.974077224731445
    5. ' +
' → logprob: -16.849077224731445
    6. '+
' → logprob: -16.974077224731445
    7. '```' → logprob: -17.224077224731445
    8. '	' → logprob: -18.349077224731445
    9. '   ' → logprob: -18.474077224731445
    10. ' plus' → logprob: -18.724077224731445

Token 361: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.06197384372353554
    2. ' right' → logprob: -2.811973810195923
    3. ' ' → logprob: -12.936973571777344
    4. '   ' → logprob: -13.061973571777344
    5. '	right' → logprob: -13.811973571777344
    6. '(right' → logprob: -15.811973571777344
    7. '  ' → logprob: -15.811973571777344
    8. '[right' → logprob: -16.186973571777344
    9. '1' → logprob: -16.311973571777344
    10. '.right' → logprob: -17.436973571777344

Token 362: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012928384239785373
    2. ')//' → logprob: -9.000129699707031
    3. ' )' → logprob: -12.750129699707031
    4. ')>>' → logprob: -12.750129699707031
    5. '   ' → logprob: -17.87512969970703
    6. ')
' → logprob: -18.25012969970703
    7. '//' → logprob: -19.00012969970703
    8. '0' → logprob: -19.25012969970703
    9. '')' → logprob: -19.50012969970703
    10. '）' → logprob: -19.50012969970703

Token 363: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4923015534877777
    2. ' //' → logprob: -0.9923015832901001
    3. '//' → logprob: -4.3673014640808105
    4. '>>' → logprob: -5.7423014640808105
    5. ')//' → logprob: -6.8673014640808105
    6. ' >>' → logprob: -7.3673014640808105
    7. ')>>' → logprob: -8.367301940917969
    8. ' )' → logprob: -8.867301940917969
    9. '```' → logprob: -10.117301940917969
    10. '2' → logprob: -11.117301940917969

Token 364: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -19.000139236450195
    4. '２' → logprob: -19.750139236450195
    5. '۲' → logprob: -19.750139236450195
    6. '  ' → logprob: -19.875139236450195
    7. '```' → logprob: -20.875139236450195
    8. '२' → logprob: -22.062639236450195
    9. '٢' → logprob: -22.375139236450195
    10. '২' → logprob: -22.500139236450195

Token 365: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -19.500019073486328
    4. '  ' → logprob: -20.500019073486328
    5. '２' → logprob: -21.250019073486328
    6. '```' → logprob: -21.375019073486328
    7. '۲' → logprob: -21.625019073486328
    8. '256' → logprob: -22.562519073486328
    9. '=' → logprob: -22.687519073486328
    10. '২' → logprob: -23.250019073486328

Token 366: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003500407561659813
    2. '
' → logprob: -6.128500461578369
    3. '<|end|>' → logprob: -7.628500461578369
    4. ' if' → logprob: -8.003499984741211
    5. '	' → logprob: -8.878499984741211
    6. 'if' → logprob: -9.128499984741211
    7. '   ' → logprob: -9.378499984741211
    8. '        
' → logprob: -10.003499984741211
    9. '  
' → logprob: -10.628499984741211
    10. ',' → logprob: -10.878499984741211

Token 367: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012443976011127234
    2. ' if' → logprob: -7.25124454498291
    3. 'if' → logprob: -8.12624454498291
    4. '	' → logprob: -8.62624454498291
    5. '   ' → logprob: -10.12624454498291
    6. '<|end|>' → logprob: -11.75124454498291
    7. '	if' → logprob: -13.12624454498291
    8. '           ' → logprob: -13.50124454498291
    9. '      ' → logprob: -13.62624454498291
    10. '        
' → logprob: -13.75124454498291

Token 368: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4770115911960602
    2. '       ' → logprob: -1.6020115613937378
    3. ' if' → logprob: -1.7270115613937378
    4. '	if' → logprob: -10.352011680603027
    5. '   ' → logprob: -11.102011680603027
    6. 'If' → logprob: -11.977011680603027
    7. '	' → logprob: -12.727011680603027
    8. '```' → logprob: -14.227011680603027
    9. ' ' → logprob: -14.602011680603027
    10. '           ' → logprob: -15.102011680603027

Token 369: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.018150178715586662
    2. ' can' → logprob: -4.018150329589844
    3. '	can' → logprob: -15.643150329589844
    4. '   ' → logprob: -17.143150329589844
    5. '(can' → logprob: -18.143150329589844
    6. ' ' → logprob: -18.143150329589844
    7. '_can' → logprob: -19.268150329589844
    8. '.can' → logprob: -19.268150329589844
    9. '  ' → logprob: -19.768150329589844
    10. 'Can' → logprob: -20.518150329589844

Token 370: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00011069540778407827
    2. 'ach' → logprob: -9.125110626220703
    3. '_can' → logprob: -13.500110626220703
    4. 'can' → logprob: -16.125110626220703
    5. ' achieve' → logprob: -16.125110626220703
    6. '\' → logprob: -16.750110626220703
    7. '_have' → logprob: -17.250110626220703
    8. 'Ach' → logprob: -17.375110626220703
    9. ' _' → logprob: -18.375110626220703
    10. '_continue' → logprob: -18.625110626220703

Token 371: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -6.034592388459714e-06
    2. '_' → logprob: -12.625005722045898
    3. ' achieve' → logprob: -13.750005722045898
    4. 'can' → logprob: -13.875005722045898
    5. 'achi' → logprob: -14.875005722045898
    6. '
' → logprob: -16.3750057220459
    7. '-ach' → logprob: -16.8750057220459
    8. 'ache' → logprob: -17.0000057220459
    9. 'achievement' → logprob: -17.5000057220459
    10. 'Ach' → logprob: -17.7500057220459

Token 372: 'ieve' (ID: 3703)
  Prédit: 'ieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieve' → logprob: -0.00026741522015072405
    2. 'eve' → logprob: -9.250267028808594
    3. 'ach' → logprob: -9.625267028808594
    4. 'iev' → logprob: -9.750267028808594
    5. 'e' → logprob: -10.375267028808594
    6. 'ive' → logprob: -12.250267028808594
    7. 'ave' → logprob: -13.125267028808594
    8. 'eat' → logprob: -13.750267028808594
    9. 'IEVE' → logprob: -13.750267028808594
    10. '_' → logprob: -14.000267028808594

Token 373: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -3.666993507067673e-05
    2. 'x' → logprob: -10.250036239624023
    3. '_' → logprob: -15.000036239624023
    4. '(A' → logprob: -16.000036239624023
    5. '
' → logprob: -16.125036239624023
    6. '```' → logprob: -16.125036239624023
    7. ' _' → logprob: -16.500036239624023
    8. '[' → logprob: -16.625036239624023
    9. '_a' → logprob: -16.750036239624023
    10. 'A' → logprob: -16.750036239624023

Token 374: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -6.802049756515771e-05
    2. '(' → logprob: -9.625067710876465
    3. ' (' → logprob: -14.000067710876465
    4. '(
' → logprob: -14.125067710876465
    5. '```' → logprob: -16.00006866455078
    6. ')' → logprob: -16.37506866455078
    7. '(arr' → logprob: -16.50006866455078
    8. '(E' → logprob: -17.87506866455078
    9. '[A' → logprob: -18.12506866455078
    10. '   ' → logprob: -18.12506866455078

Token 375: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001537169300718233
    2. ',F' → logprob: -8.875153541564941
    3. ' ,' → logprob: -11.250153541564941
    4. ',
' → logprob: -15.375153541564941
    5. 'F' → logprob: -15.500153541564941
    6. ',f' → logprob: -16.375154495239258
    7. '   ' → logprob: -16.875154495239258
    8. '       ' → logprob: -17.250154495239258
    9. ' F' → logprob: -17.250154495239258
    10. ')' → logprob: -17.375154495239258

Token 376: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.02054912969470024
    2. ' F' → logprob: -3.8955490589141846
    3. ' ' → logprob: -12.895548820495605
    4. '   ' → logprob: -13.020548820495605
    5. ',' → logprob: -14.395548820495605
    6. 'f' → logprob: -14.520548820495605
    7. ',F' → logprob: -14.770548820495605
    8. '    ' → logprob: -15.645548820495605
    9. ')' → logprob: -15.770548820495605
    10. '  ' → logprob: -15.770548820495605

Token 377: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.0590548703912646e-05
    2. ' ,' → logprob: -10.875030517578125
    3. ',K' → logprob: -11.500030517578125
    4. ',
' → logprob: -14.625030517578125
    5. '   ' → logprob: -15.125030517578125
    6. 'K' → logprob: -15.250030517578125
    7. ')' → logprob: -15.875030517578125
    8. '       ' → logprob: -16.375030517578125
    9. ',x' → logprob: -17.125030517578125
    10. ' K' → logprob: -17.250030517578125

Token 378: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.00015860427811276168
    2. ' K' → logprob: -8.750158309936523
    3. 'mid' → logprob: -16.625158309936523
    4. ' ' → logprob: -17.375158309936523
    5. '   ' → logprob: -17.375158309936523
    6. ')' → logprob: -18.000158309936523
    7. '
' → logprob: -18.125158309936523
    8. '	K' → logprob: -18.125158309936523
    9. '       ' → logprob: -18.875158309936523
    10. ',' → logprob: -19.000158309936523

Token 379: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.319370302458992e-06
    2. ' ,' → logprob: -12.500005722045898
    3. '),' → logprob: -14.375005722045898
    4. ',
' → logprob: -14.750005722045898
    5. ')' → logprob: -15.250005722045898
    6. '[mid' → logprob: -16.0000057220459
    7. 'mid' → logprob: -16.6250057220459
    8. ',m' → logprob: -17.2500057220459
    9. '(mid' → logprob: -17.3750057220459
    10. ',)' → logprob: -17.5000057220459

Token 380: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.0006280870293267071
    2. ' mid' → logprob: -7.3756279945373535
    3. '(mid' → logprob: -14.375628471374512
    4. '[mid' → logprob: -14.625628471374512
    5. ')' → logprob: -15.000628471374512
    6. '
' → logprob: -16.250627517700195
    7. '   ' → logprob: -16.750627517700195
    8. ' ' → logprob: -18.125627517700195
    9. '```' → logprob: -18.375627517700195
    10. '    ' → logprob: -19.000627517700195

Token 381: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.014470689930021763
    2. '):' → logprob: -4.26447057723999
    3. ':' → logprob: -9.014471054077148
    4. ':
' → logprob: -9.389471054077148
    5. '       ' → logprob: -9.389471054077148
    6. '):
' → logprob: -11.264471054077148
    7. '           ' → logprob: -13.264471054077148
    8. ')' → logprob: -13.389471054077148
    9. '():
' → logprob: -14.389471054077148
    10. ' ):
' → logprob: -14.389471054077148

Token 382: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010164475068449974
    2. '
' → logprob: -5.260164260864258
    3. 'right' → logprob: -5.385164260864258
    4. ' right' → logprob: -9.010164260864258
    5. '       ' → logprob: -9.260164260864258
    6. 'left' → logprob: -9.635164260864258
    7. '            
' → logprob: -11.260164260864258
    8. '		' → logprob: -12.260164260864258
    9. ':
' → logprob: -12.260164260864258
    10. ' left' → logprob: -12.260164260864258

Token 383: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -8.65707261255011e-06
    2. ' right' → logprob: -11.750008583068848
    3. '	right' → logprob: -14.500008583068848
    4. '
' → logprob: -16.000009536743164
    5. '   ' → logprob: -16.375009536743164
    6. '           ' → logprob: -17.000009536743164
    7. 'left' → logprob: -17.625009536743164
    8. '_right' → logprob: -17.875009536743164
    9. 'r' → logprob: -18.000009536743164
    10. '[right' → logprob: -18.500009536743164

Token 384: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192907452583313
    2. ' =' → logprob: -1.5019290447235107
    3. '＝' → logprob: -19.626928329467773
    4. '=
' → logprob: -20.126928329467773
    5. ' =
' → logprob: -20.626928329467773
    6. ',' → logprob: -20.751928329467773
    7. ')' → logprob: -20.751928329467773
    8. '.=' → logprob: -21.126928329467773
    9. '=

' → logprob: -21.126928329467773
    10. '=}' → logprob: -21.376928329467773

Token 385: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.2519293427467346
    2. 'mid' → logprob: -1.5019292831420898
    3. '[mid' → logprob: -15.50192928314209
    4. ' midpoint' → logprob: -16.626930236816406
    5. '(mid' → logprob: -17.251930236816406
    6. '_mid' → logprob: -18.001930236816406
    7. ' ' → logprob: -18.251930236816406
    8. ' middle' → logprob: -18.376930236816406
    9. ' midd' → logprob: -18.626930236816406
    10. '
' → logprob: -19.001930236816406

Token 386: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0064450036734342575
    2. 'else' → logprob: -5.256444931030273
    3. ' else' → logprob: -6.756444931030273
    4. '	' → logprob: -10.381444931030273
    5. '	else' → logprob: -11.381444931030273
    6. '<|end|>' → logprob: -13.506444931030273
    7. '```' → logprob: -14.131444931030273
    8. '
' → logprob: -14.381444931030273
    9. '      ' → logprob: -14.506444931030273
    10. '   ' → logprob: -14.631444931030273

Token 387: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03814292699098587
    2. 'else' → logprob: -3.5381429195404053
    3. ' else' → logprob: -4.788143157958984
    4. '	' → logprob: -10.788143157958984
    5. '	else' → logprob: -11.788143157958984
    6. '   ' → logprob: -14.038143157958984
    7. '```' → logprob: -15.538143157958984
    8. '           ' → logprob: -16.663143157958984
    9. '      ' → logprob: -17.913143157958984
    10. '	   ' → logprob: -18.038143157958984

Token 388: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3716390132904053
    2. 'else' (adapté à ' else') → logprob: -1.3716390132904053
    3. ' else' → logprob: -2.8716390132904053
    4. '   ' → logprob: -9.871639251708984
    5. '	else' → logprob: -10.121639251708984
    6. '	' → logprob: -12.121639251708984
    7. '```' → logprob: -13.621639251708984
    8. '      ' → logprob: -14.996639251708984
    9. '    ' → logprob: -15.246639251708984
    10. '
' → logprob: -15.496639251708984

Token 389: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003722049528732896
    2. ':' → logprob: -6.253722190856934
    3. ':
' → logprob: -6.378722190856934
    4. '       ' → logprob: -11.003722190856934
    5. 'left' → logprob: -11.003722190856934
    6. ':left' → logprob: -11.628722190856934
    7. '	       ' → logprob: -11.753722190856934
    8. '		' → logprob: -11.878722190856934
    9. '```' → logprob: -11.878722190856934
    10. ',' → logprob: -12.003722190856934

Token 390: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2533150911331177
    2. 'left' → logprob: -1.5033150911331177
    3. ' left' → logprob: -7.378314971923828
    4. '	left' → logprob: -7.878314971923828
    5. '       ' → logprob: -8.878314971923828
    6. '   ' → logprob: -9.003314971923828
    7. '		' → logprob: -9.753314971923828
    8. '	       ' → logprob: -10.878314971923828
    9. '[left' → logprob: -10.878314971923828
    10. ',left' → logprob: -11.378314971923828

Token 391: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.001115808030590415
    2. ' left' → logprob: -7.001115798950195
    3. '	left' → logprob: -9.251115798950195
    4. '           ' → logprob: -9.376115798950195
    5. '   ' → logprob: -11.251115798950195
    6. '       ' → logprob: -12.501115798950195
    7. '[left' → logprob: -12.501115798950195
    8. ',left' → logprob: -14.001115798950195
    9. '.left' → logprob: -14.126115798950195
    10. ':left' → logprob: -14.501115798950195

Token 392: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019286326132714748
    2. ' =' → logprob: -6.251928806304932
    3. '=
' → logprob: -19.501928329467773
    4. '＝' → logprob: -21.251928329467773
    5. '=

' → logprob: -22.626928329467773
    6. ' =
' → logprob: -23.501928329467773
    7. '.=' → logprob: -23.626928329467773
    8. '=int' → logprob: -24.001928329467773
    9. '=}' → logprob: -24.001928329467773
    10. '=line' → logprob: -24.001928329467773

Token 393: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.004078401252627373
    2. ' mid' → logprob: -5.504078388214111
    3. '[mid' → logprob: -17.754077911376953
    4. '(mid' → logprob: -18.379077911376953
    5. '           ' → logprob: -19.129077911376953
    6. 'middle' → logprob: -19.754077911376953
    7. '_mid' → logprob: -20.004077911376953
    8. '   ' → logprob: -20.254077911376953
    9. ' ' → logprob: -20.504077911376953
    10. '.mid' → logprob: -21.504077911376953

Token 394: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38421422243118286
    2. '   ' → logprob: -1.259214162826538
    3. '<|end|>' → logprob: -4.384214401245117
    4. ' return' → logprob: -5.134214401245117
    5. '
' → logprob: -5.259214401245117
    6. 'return' → logprob: -5.884214401245117
    7. '    
' → logprob: -6.384214401245117
    8. ' ' → logprob: -6.759214401245117
    9. '           ' → logprob: -6.759214401245117
    10. '        
' → logprob: -7.134214401245117

Token 395: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004186909645795822
    2. 'return' → logprob: -5.754187107086182
    3. '	return' → logprob: -7.004187107086182
    4. ' return' → logprob: -9.379186630249023
    5. '       ' → logprob: -12.129186630249023
    6. '
' → logprob: -12.254186630249023
    7. '```' → logprob: -13.754186630249023
    8. '  ' → logprob: -14.129186630249023
    9. '    
' → logprob: -14.254186630249023
    10. '   ' → logprob: -14.254186630249023

Token 396: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00032366468803957105
    2. '   ' → logprob: -8.625323295593262
    3. ' return' → logprob: -9.375323295593262
    4. 'right' → logprob: -10.125323295593262
    5. 'left' → logprob: -11.125323295593262
    6. '	return' → logprob: -13.125323295593262
    7. '
' → logprob: -14.125323295593262
    8. '```' → logprob: -14.750323295593262
    9. 'ret' → logprob: -15.250323295593262
    10. 'eturn' → logprob: -15.500323295593262

Token 397: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -7.941850526549388e-06
    2. ' right' → logprob: -11.750007629394531
    3. 'left' → logprob: -19.50000762939453
    4. '	right' → logprob: -22.25000762939453
    5. 'Right' → logprob: -25.12500762939453
    6. '[right' → logprob: -25.12500762939453
    7. '_right' → logprob: -25.25000762939453
    8. '右' → logprob: -25.37500762939453
    9. '   ' → logprob: -25.75000762939453
    10. '.right' → logprob: -25.87500762939453

Token 398: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1855766624212265
    2. '<|end|>' → logprob: -2.0605766773223877
    3. '
' → logprob: -3.5605766773223877
    4. 'if' → logprob: -5.185576438903809
    5. 'x' → logprob: -5.810576438903809
    6. '#' → logprob: -6.310576438903809
    7. 'max' → logprob: -6.435576438903809
    8. '<|end|>' → logprob: -7.685576438903809
    9. '```' → logprob: -7.935576438903809
    10. ')' → logprob: -8.810576438903809

Token 399: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005954633932560682
    2. 'if' → logprob: -5.380954742431641
    3. '#' → logprob: -7.005954742431641
    4. '```' → logprob: -8.88095474243164
    5. '0' → logprob: -9.00595474243164
    6. '
' → logprob: -9.13095474243164
    7. '<|end|>' → logprob: -11.00595474243164
    8. 'import' → logprob: -11.00595474243164
    9. ' def' → logprob: -12.38095474243164
    10. 'x' → logprob: -12.38095474243164

Token 400: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.04859475791454315
    2. ' main' → logprob: -3.0485947132110596
    3. 'solve' → logprob: -12.04859447479248
    4. ' solve' → logprob: -14.42359447479248
    5. '	main' → logprob: -14.54859447479248
    6. '_main' → logprob: -15.92359447479248
    7. 'process' → logprob: -16.673595428466797
    8. 'run' → logprob: -16.673595428466797
    9. 'solution' → logprob: -16.923595428466797
    10. 'def' → logprob: -17.048595428466797

Token 401: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00033713103039190173
    2. '():
' → logprob: -8.000337600708008
    3. ' ():' → logprob: -13.875337600708008
    4. '():
' → logprob: -14.375337600708008
    5. '()' → logprob: -15.875337600708008
    6. '():

' → logprob: -19.500337600708008
    7. '_' → logprob: -21.125337600708008
    8. '().' → logprob: -21.250337600708008
    9. '(' → logprob: -21.375337600708008
    10. '()>' → logprob: -22.375337600708008

Token 402: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46492257714271545
    2. 'n' → logprob: -1.089922547340393
    3. ' n' → logprob: -3.3399226665496826
    4. 'import' → logprob: -9.589922904968262
    5. '	n' → logprob: -10.339922904968262
    6. ' ' → logprob: -11.589922904968262
    7. '   ' → logprob: -12.339922904968262
    8. '_n' → logprob: -12.464922904968262
    9. '```' → logprob: -12.589922904968262
    10. ',n' → logprob: -13.089922904968262

Token 403: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0003136552404612303
    2. '   ' → logprob: -8.500313758850098
    3. ' n' → logprob: -9.125313758850098
    4. 'import' → logprob: -13.875313758850098
    5. '	n' → logprob: -15.500313758850098
    6. '```' → logprob: -16.87531280517578
    7. '_n' → logprob: -17.25031280517578
    8. ' ' → logprob: -17.75031280517578
    9. '
' → logprob: -18.25031280517578
    10. '(n' → logprob: -18.50031280517578

Token 404: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.0028071331325918436
    2. '_' → logprob: -5.877807140350342
    3. '_K' → logprob: -14.127806663513184
    4. ',_' → logprob: -15.002806663513184
    5. '_i' → logprob: -15.377806663513184
    6. ',' → logprob: -15.502806663513184
    7. '_n' → logprob: -15.627806663513184
    8. '_,' → logprob: -15.627806663513184
    9. '_j' → logprob: -15.752806663513184
    10. ' _' → logprob: -16.0028076171875

Token 405: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.500000953674316
    3. '_l' → logprob: -15.250000953674316
    4. 'line' → logprob: -16.500001907348633
    5. '_lin' → logprob: -17.125001907348633
    6. '_LINE' → logprob: -17.375001907348633
    7. '_lines' → logprob: -18.250001907348633
    8. '_li' → logprob: -18.375001907348633
    9. ' _' → logprob: -18.500001907348633
    10. '=_' → logprob: -18.875001907348633

Token 406: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10559774935245514
    2. '=' → logprob: -2.355597734451294
    3. ' =' → logprob: -5.230597972869873
    4. ' ,' → logprob: -11.355597496032715
    5. ',n' → logprob: -11.730597496032715
    6. ',b' → logprob: -12.730597496032715
    7. '   ' → logprob: -13.980597496032715
    8. '=sys' → logprob: -15.105597496032715
    9. '=n' → logprob: -15.480597496032715
    10. ')' → logprob: -15.605597496032715

Token 407: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.31326475739479065
    2. 'a' → logprob: -1.3132647275924683
    3. '	a' → logprob: -13.938264846801758
    4. '_a' → logprob: -14.188264846801758
    5. ',a' → logprob: -14.563264846801758
    6. ' ' → logprob: -14.688264846801758
    7. '    ' → logprob: -15.313264846801758
    8. '   ' → logprob: -15.688264846801758
    9. '  ' → logprob: -16.438264846801758
    10. 'A' → logprob: -17.063264846801758

Token 408: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -1.9146995327901095e-05
    2. '_' → logprob: -11.000019073486328
    3. '_LINE' → logprob: -14.500019073486328
    4. 'line' → logprob: -14.875019073486328
    5. '_lines' → logprob: -15.000019073486328
    6. ' _' → logprob: -15.000019073486328
    7. '_l' → logprob: -15.125019073486328
    8. '_lin' → logprob: -15.625019073486328
    9. '_lineno' → logprob: -16.000019073486328
    10. '_Line' → logprob: -16.375019073486328

Token 409: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013415542198345065
    2. '=' → logprob: -6.626341342926025
    3. ' ,' → logprob: -11.626341819763184
    4. ' =' → logprob: -12.126341819763184
    5. ',f' → logprob: -13.751341819763184
    6. '   ' → logprob: -16.126340866088867
    7. '_,' → logprob: -16.751340866088867
    8. 'f' → logprob: -17.501340866088867
    9. ',b' → logprob: -18.001340866088867
    10. 'n' → logprob: -18.126340866088867

Token 410: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.006718809716403484
    2. ' f' → logprob: -5.006718635559082
    3. '   ' → logprob: -12.881718635559082
    4. ' ' → logprob: -14.506718635559082
    5. '    ' → logprob: -15.506718635559082
    6. '  ' → logprob: -16.1317195892334
    7. '	f' → logprob: -16.7567195892334
    8. '       ' → logprob: -17.1317195892334
    9. '     ' → logprob: -17.5067195892334
    10. '_f' → logprob: -17.7567195892334

Token 411: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -7.100059156073257e-05
    2. '_' → logprob: -10.250070571899414
    3. 'line' → logprob: -10.625070571899414
    4. '=' → logprob: -12.750070571899414
    5. ' =' → logprob: -12.875070571899414
    6. '_LINE' → logprob: -13.125070571899414
    7. ' _' → logprob: -13.625070571899414
    8. '=_' → logprob: -14.250070571899414
    9. '   ' → logprob: -15.000070571899414
    10. '=line' → logprob: -15.125070571899414

Token 412: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04872192069888115
    2. ' =' → logprob: -3.0487220287323
    3. '   ' → logprob: -8.923722267150879
    4. '	' → logprob: -14.048722267150879
    5. '    ' → logprob: -15.798722267150879
    6. ',' → logprob: -15.923722267150879
    7. '=get' → logprob: -16.548721313476562
    8. ' ' → logprob: -16.798721313476562
    9. '=line' → logprob: -17.298721313476562
    10. '＝' → logprob: -17.548721313476562

Token 413: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.011048408225178719
    2. ' read' → logprob: -4.511048316955566
    3. '   ' → logprob: -14.386048316955566
    4. '	read' → logprob: -17.636049270629883
    5. '(read' → logprob: -19.636049270629883
    6. ' ' → logprob: -20.261049270629883
    7. '  ' → logprob: -20.886049270629883
    8. '_read' → logprob: -22.511049270629883
    9. 'Read' → logprob: -22.761049270629883
    10. '.read' → logprob: -22.761049270629883

Token 414: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -2.9160102712921798e-05
    2. 'input' → logprob: -10.750029563903809
    3. '_st' → logprob: -12.125029563903809
    4. '_' → logprob: -14.625029563903809
    5. '
' → logprob: -14.750029563903809
    6. '```' → logprob: -14.875029563903809
    7. 'stdin' → logprob: -15.250029563903809
    8. '_main' → logprob: -15.375029563903809
    9. '_line' → logprob: -16.125028610229492
    10. 'Input' → logprob: -16.250028610229492

Token 415: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.029758475720882416
    2. '()
' → logprob: -3.5297584533691406
    3. '   ' → logprob: -12.27975845336914
    4. '()
' → logprob: -13.15475845336914
    5. '()

' → logprob: -14.27975845336914
    6. '()\' → logprob: -14.90475845336914
    7. '()`' → logprob: -15.40475845336914
    8. '();' → logprob: -16.65475845336914
    9. ' ()' → logprob: -16.65475845336914
    10. '(),' → logprob: -17.27975845336914

Token 416: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07008270919322968
    2. 'N' → logprob: -2.695082664489746
    3. ' N' → logprob: -9.070082664489746
    4. 'n' → logprob: -11.195082664489746
    5. '	N' → logprob: -11.820082664489746
    6. '    
' → logprob: -12.820082664489746
    7. '   ' → logprob: -12.945082664489746
    8. ' ' → logprob: -13.695082664489746
    9. '  ' → logprob: -13.945082664489746
    10. '
' → logprob: -13.945082664489746

Token 417: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -5.512236498361744e-07
    2. '   ' → logprob: -15.125000953674316
    3. ' N' → logprob: -15.750000953674316
    4. 'n' → logprob: -18.125
    5. '    
' → logprob: -18.5
    6. '	N' → logprob: -19.125
    7. '
' → logprob: -19.75
    8. '```' → logprob: -20.125
    9. '#' → logprob: -21.25
    10. '_N' → logprob: -21.75

Token 418: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.615255839889869e-05
    2. ',K' → logprob: -9.375096321105957
    3. ' ,' → logprob: -11.500096321105957
    4. ',
' → logprob: -14.875096321105957
    5. '‌,' → logprob: -15.125096321105957
    6. '<|end|>' → logprob: -15.625096321105957
    7. '   ' → logprob: -16.00009536743164
    8. 'K' → logprob: -16.12509536743164
    9. ' K' → logprob: -16.87509536743164
    10. '=' → logprob: -17.00009536743164

Token 419: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.07890355587005615
    2. 'K' → logprob: -2.5789036750793457
    3. ' ' → logprob: -11.703903198242188
    4. '<|end|>' → logprob: -12.203903198242188
    5. ' ' → logprob: -15.828903198242188
    6. ' 
' → logprob: -15.953903198242188
    7. ',K' → logprob: -16.328903198242188
    8. ',' → logprob: -16.578903198242188
    9. '	K' → logprob: -17.453903198242188
    10. '  
' → logprob: -17.578903198242188

Token 420: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019197762594558299
    2. '=' → logprob: -8.625191688537598
    3. ' ,' → logprob: -12.250191688537598
    4. ' =' → logprob: -13.000191688537598
    5. ',N' → logprob: -13.375191688537598
    6. ',K' → logprob: -14.000191688537598
    7. ',
' → logprob: -14.125191688537598
    8. '<|end|>' → logprob: -14.125191688537598
    9. '‌,' → logprob: -14.375191688537598
    10. ',...' → logprob: -16.500192642211914

Token 421: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.04302169010043144
    2. ' A' → logprob: -3.1680216789245605
    3. ' ' → logprob: -11.043022155761719
    4. '<|end|>' → logprob: -13.543022155761719
    5. '  ' → logprob: -13.793022155761719
    6. 'a' → logprob: -14.168022155761719
    7. '	A' → logprob: -14.168022155761719
    8. '   ' → logprob: -14.293022155761719
    9. ',A' → logprob: -15.168022155761719
    10. ' =' → logprob: -15.293022155761719

Token 422: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.5252596464706585e-05
    2. ',F' → logprob: -10.125044822692871
    3. ' ,' → logprob: -12.500044822692871
    4. '=' → logprob: -13.875044822692871
    5. ',K' → logprob: -15.625044822692871
    6. ',
' → logprob: -15.750044822692871
    7. ',f' → logprob: -16.875045776367188
    8. '‌,' → logprob: -17.250045776367188
    9. ',
' → logprob: -17.500045776367188
    10. '   ' → logprob: -17.500045776367188

Token 423: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.02324605919420719
    2. ' F' → logprob: -3.7732460498809814
    3. '   ' → logprob: -15.773245811462402
    4. ' ' → logprob: -16.14824676513672
    5. '	F' → logprob: -16.64824676513672
    6. 'f' → logprob: -16.64824676513672
    7. '<|end|>' → logprob: -16.89824676513672
    8. '
' → logprob: -17.89824676513672
    9. '_F' → logprob: -18.64824676513672
    10. '    ' → logprob: -18.77324676513672

Token 424: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006717267446219921
    2. ' =' → logprob: -5.006717205047607
    3. ',' → logprob: -13.256717681884766
    4. '   ' → logprob: -16.506717681884766
    5. '=
' → logprob: -16.756717681884766
    6. '=

' → logprob: -18.131717681884766
    7. ')' → logprob: -18.756717681884766
    8. ' ' → logprob: -19.131717681884766
    9. ')=' → logprob: -19.631717681884766
    10. '  ' → logprob: -19.631717681884766

Token 425: ' prepare' (ID: 13708)
  Prédit: 'prepare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prepare' → logprob: -0.4740777611732483
    2. ' prepare' → logprob: -0.9740777611732483
    3. 'parse' → logprob: -15.224078178405762
    4. '_prepare' → logprob: -15.349078178405762
    5. '.prepare' → logprob: -15.724078178405762
    6. '   ' → logprob: -16.224077224731445
    7. ' parse' → logprob: -16.849077224731445
    8. ' ' → logprob: -18.849077224731445
    9. 'Prepare' → logprob: -19.349077224731445
    10. ' preparation' → logprob: -19.724077224731445

Token 426: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.0005541055579669774
    2. 'data' → logprob: -7.500554084777832
    3. 'Data' → logprob: -15.125554084777832
    4. 'n' → logprob: -15.375554084777832
    5. '(n' → logprob: -15.625554084777832
    6. '_DATA' → logprob: -16.12555503845215
    7. '_Data' → logprob: -16.25055503845215
    8. '```' → logprob: -17.00055503845215
    9. ' data' → logprob: -17.25055503845215
    10. '   ' → logprob: -17.25055503845215

Token 427: '(n' (ID: 2406)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4009537696838379
    2. '   ' → logprob: -1.900953769683838
    3. '(' → logprob: -2.025953769683838
    4. '(N' → logprob: -3.650953769683838
    5. '(K' → logprob: -4.400953769683838
    6. '
' → logprob: -6.150953769683838
    7. ',' → logprob: -6.400953769683838
    8. '    
' → logprob: -6.900953769683838
    9. ' (' → logprob: -7.025953769683838
    10. '  ' → logprob: -7.275953769683838

Token 428: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -8.77627644513268e-06
    2. 'k' → logprob: -12.500008583068848
    3. '_' → logprob: -13.125008583068848
    4. ',' → logprob: -13.750008583068848
    5. ',k' → logprob: -14.375008583068848
    6. 'K' → logprob: -15.375008583068848
    7. '_K' → logprob: -15.625008583068848
    8. ',_' → logprob: -16.250009536743164
    9. '```' → logprob: -16.375009536743164
    10. '_,' → logprob: -16.500009536743164

Token 429: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.06514474004507065
    2. 'line' → logprob: -3.0651447772979736
    3. 'ine' → logprob: -4.1901445388793945
    4. 'ne' → logprob: -7.9401445388793945
    5. '   ' → logprob: -8.190144538879395
    6. '_LINE' → logprob: -8.815144538879395
    7. 'Line' → logprob: -9.565144538879395
    8. 'e' → logprob: -10.065144538879395
    9. 'LINE' → logprob: -10.065144538879395
    10. 'L' → logprob: -10.065144538879395

Token 430: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1041145626222715e-05
    2. ' ,' → logprob: -11.750011444091797
    3. ',K' → logprob: -13.625011444091797
    4. '   ' → logprob: -14.000011444091797
    5. ',
' → logprob: -14.375011444091797
    6. ')' → logprob: -15.500011444091797
    7. ',A' → logprob: -16.000011444091797
    8. '‌,' → logprob: -16.375011444091797
    9. '<|end|>' → logprob: -17.125011444091797
    10. ',N' → logprob: -18.250011444091797

Token 431: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005475532729178667
    2. ' a' → logprob: -5.2554755210876465
    3. 'f' → logprob: -8.380475997924805
    4. ' f' → logprob: -11.380475997924805
    5. '	a' → logprob: -14.755475997924805
    6. ' ' → logprob: -14.880475997924805
    7. '   ' → logprob: -16.130475997924805
    8. 'A' → logprob: -16.130475997924805
    9. '```' → logprob: -17.630475997924805
    10. '  ' → logprob: -18.255475997924805

Token 432: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.004532181192189455
    2. ',' → logprob: -6.254532337188721
    3. 'line' → logprob: -6.504532337188721
    4. '_LINE' → logprob: -8.129531860351562
    5. 'Line' → logprob: -8.379531860351562
    6. 'F' → logprob: -8.629531860351562
    7. 'A' → logprob: -9.254531860351562
    8. '   ' → logprob: -10.254531860351562
    9. ',line' → logprob: -10.254531860351562
    10. '-line' → logprob: -10.379531860351562

Token 433: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.383526149671525e-05
    2. ' ,' → logprob: -10.375053405761719
    3. ',f' → logprob: -11.000053405761719
    4. '   ' → logprob: -13.250053405761719
    5. 'f' → logprob: -13.625053405761719
    6. ')' → logprob: -13.875053405761719
    7. ',
' → logprob: -14.375053405761719
    8. '),' → logprob: -14.750053405761719
    9. ',F' → logprob: -15.375053405761719
    10. '```' → logprob: -15.500053405761719

Token 434: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.05489605292677879
    2. ' f' → logprob: -2.929896116256714
    3. '   ' → logprob: -11.929896354675293
    4. ' ' → logprob: -12.429896354675293
    5. '  ' → logprob: -13.554896354675293
    6. '    ' → logprob: -14.429896354675293
    7. '	f' → logprob: -14.554896354675293
    8. '       ' → logprob: -15.429896354675293
    9. '     ' → logprob: -16.054895401000977
    10. '           ' → logprob: -16.429895401000977

Token 435: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.02646215818822384
    2. ')' → logprob: -4.901462078094482
    3. '_LINE' → logprob: -5.151462078094482
    4. 'F' → logprob: -5.401462078094482
    5. 'Line' → logprob: -5.526462078094482
    6. 'line' → logprob: -6.276462078094482
    7. 'L' → logprob: -6.651462078094482
    8. ')
' → logprob: -7.901462078094482
    9. '-line' → logprob: -8.15146255493164
    10. '_Line' → logprob: -8.65146255493164

Token 436: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.20196959376335144
    2. ')' → logprob: -1.7019696235656738
    3. '   ' → logprob: -7.576969623565674
    4. ')
' → logprob: -10.076969146728516
    5. ' ' → logprob: -14.076969146728516
    6. ')

' → logprob: -14.701969146728516
    7. ' )
' → logprob: -15.201969146728516
    8. '
' → logprob: -15.701969146728516
    9. '  ' → logprob: -15.826969146728516
    10. ')`
' → logprob: -16.201969146728516

Token 437: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009733537212014198
    2. ' left' → logprob: -5.1347336769104
    3. 'left' → logprob: -5.7597336769104
    4. 'result' → logprob: -8.009733200073242
    5. ' result' → logprob: -8.634733200073242
    6. '```' → logprob: -10.009733200073242
    7. 'max' → logprob: -11.384733200073242
    8. 'min' → logprob: -11.509733200073242
    9. 'x' → logprob: -11.634733200073242
    10. ' max' → logprob: -11.759733200073242

Token 438: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.1776188313961029
    2. 'result' → logprob: -1.9276188611984253
    3. 'answer' → logprob: -4.177618980407715
    4. 'res' → logprob: -7.052618980407715
    5. 'ans' → logprob: -7.677618980407715
    6. 'max' → logprob: -7.802618980407715
    7. '
' → logprob: -9.677618980407715
    8. 'right' → logprob: -10.427618980407715
    9. 'low' → logprob: -10.552618980407715
    10. 'l' → logprob: -11.552618980407715

Token 439: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5777282118797302
    2. ' =' → logprob: -0.8277282118797302
    3. ',' → logprob: -6.327728271484375
    4. ' ,' → logprob: -14.452728271484375
    5. '0' → logprob: -16.077728271484375
    6. '=
' → logprob: -16.577728271484375
    7. ' =
' → logprob: -16.702728271484375
    8. ' ' → logprob: -16.702728271484375
    9. '=int' → logprob: -16.952728271484375
    10. '=-' → logprob: -16.952728271484375

Token 440: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.026364631950855255
    2. '0' → logprob: -3.65136456489563
    3. ' -' → logprob: -9.90136432647705
    4. 'np' → logprob: -11.40136432647705
    5. 'max' → logprob: -14.27636432647705
    6. 'min' → logprob: -15.02636432647705
    7. '-n' → logprob: -15.15136432647705
    8. '-min' → logprob: -15.27636432647705
    9. '-A' → logprob: -15.40136432647705
    10. '-(' → logprob: -15.77636432647705

Token 441: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.375001907348633
    3. '-' → logprob: -15.000001907348633
    4. '10' → logprob: -15.125001907348633
    5. 'np' → logprob: -17.000001907348633
    6. 'int' → logprob: -17.875001907348633
    7. '１' → logprob: -18.250001907348633
    8. '100' → logprob: -18.750001907348633
    9. '
' → logprob: -19.125001907348633
    10. '2' → logprob: -19.250001907348633

Token 442: '
' (ID: 198)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.5433601140975952
    2. '
' → logprob: -0.9183601140975952
    3. ' right' → logprob: -4.793360233306885
    4. '   ' → logprob: -5.043360233306885
    5. ' 
' → logprob: -5.918360233306885
    6. '    
' → logprob: -6.918360233306885
    7. ',' → logprob: -6.918360233306885
    8. ',right' → logprob: -8.293359756469727
    9. '  
' → logprob: -9.293359756469727
    10. ',
' → logprob: -9.543359756469727

Token 443: '   ' (ID: 271)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.03214522823691368
    2. ' right' → logprob: -3.9071452617645264
    3. '   ' → logprob: -5.282145023345947
    4. '
' → logprob: -5.907145023345947
    5. 'max' → logprob: -6.157145023345947
    6. '    
' → logprob: -7.657145023345947
    7. '10' → logprob: -8.407145500183105
    8. 'F' → logprob: -8.532145500183105
    9. '100' → logprob: -8.657145500183105
    10. '```' → logprob: -8.782145500183105

Token 444: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.2012828290462494
    2. '10' → logprob: -1.8262828588485718
    3. 'max' → logprob: -3.9512827396392822
    4. '100' → logprob: -7.201282978057861
    5. ' right' → logprob: -7.201282978057861
    6. 'F' → logprob: -8.826282501220703
    7. 'left' → logprob: -8.826282501220703
    8. 'int' → logprob: -9.201282501220703
    9. ' ' → logprob: -9.826282501220703
    10. ' max' → logprob: -10.201282501220703

Token 445: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868728280067444
    2. '=' → logprob: -1.1368727684020996
    3. '=int' → logprob: -13.761873245239258
    4. ' ' → logprob: -15.261873245239258
    5. '100' → logprob: -15.511873245239258
    6. '=max' → logprob: -15.761873245239258
    7. ',' → logprob: -17.136873245239258
    8. '=np' → logprob: -17.261873245239258
    9. '   ' → logprob: -17.761873245239258
    10. '10' → logprob: -17.761873245239258

Token 446: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.029863880947232246
    2. 'int' → logprob: -4.5298638343811035
    3. 'max' → logprob: -4.5298638343811035
    4. '(' → logprob: -5.1548638343811035
    5. '(max' → logprob: -7.2798638343811035
    6. 'np' → logprob: -7.5298638343811035
    7. '(A' → logprob: -7.9048638343811035
    8. '(int' → logprob: -8.654864311218262
    9. 'A' → logprob: -8.904864311218262
    10. '(np' → logprob: -9.529864311218262

Token 447: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.03841404244303703
    2. 'max' → logprob: -4.038414001464844
    3. 'int' → logprob: -4.288414001464844
    4. '(' → logprob: -5.288414001464844
    5. 'np' → logprob: -7.538414001464844
    6. 'A' → logprob: -8.288414001464844
    7. '(max' → logprob: -8.663414001464844
    8. '(A' → logprob: -8.913414001464844
    9. '(int' → logprob: -9.788414001464844
    10. '1' → logprob: -10.038414001464844

Token 448: '**' (ID: 410)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '15' → logprob: -0.15209607779979706
    2. '12' → logprob: -2.7770960330963135
    3. '16' → logprob: -3.2770960330963135
    4. '13' → logprob: -3.9020960330963135
    5. '14' → logprob: -4.652096271514893
    6. '18' → logprob: -5.402096271514893
    7. '11' → logprob: -5.527096271514893
    8. '10' → logprob: -5.902096271514893
    9. '17' → logprob: -8.902095794677734
    10. '19' → logprob: -10.902095794677734

Token 449: '13' (ID: 1311)
  Prédit: '12'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.6734926700592041
    2. '13' → logprob: -1.048492670059204
    3. '15' → logprob: -2.673492670059204
    4. '18' → logprob: -2.798492670059204
    5. '14' → logprob: -5.048492431640625
    6. '16' → logprob: -6.048492431640625
    7. '17' → logprob: -7.923492431640625
    8. '19' → logprob: -7.923492431640625
    9. '20' → logprob: -9.298492431640625
    10. '11' → logprob: -9.548492431640625

Token 450: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6909824013710022
    2. '   ' → logprob: -0.8159824013710022
    3. '    
' → logprob: -2.9409823417663574
    4. '  
' → logprob: -5.940982341766357
    5. '
' → logprob: -8.065982818603516
    6. '   
' → logprob: -8.190982818603516
    7. ' 
' → logprob: -8.565982818603516
    8. '<|end|>' → logprob: -8.815982818603516
    9. '	
' → logprob: -9.440982818603516
    10. ' while' → logprob: -9.565982818603516

Token 451: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09279567748308182
    2. 'result' → logprob: -2.4677956104278564
    3. ' result' → logprob: -6.3427958488464355
    4. 'res' → logprob: -6.7177958488464355
    5. 'answer' → logprob: -7.5927958488464355
    6. '
' → logprob: -8.717795372009277
    7. '    
' → logprob: -10.092795372009277
    8. 'ans' → logprob: -10.217795372009277
    9. 'x' → logprob: -10.342795372009277
    10. ' res' → logprob: -10.967795372009277

Token 452: ' answer' (ID: 6052)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.25808191299438477
    2. '   ' → logprob: -2.5080819129943848
    3. 'res' → logprob: -3.0080819129943848
    4. 'answer' (adapté à ' answer') → logprob: -3.0080819129943848
    5. 'ans' → logprob: -3.1330819129943848
    6. 'x' → logprob: -6.258081912994385
    7. 'print' → logprob: -6.633081912994385
    8. ' result' → logprob: -8.508081436157227
    9. ' ans' → logprob: -9.258081436157227
    10. ' res' → logprob: -10.133081436157227

Token 453: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012511413544416428
    2. '=' → logprob: -4.387511253356934
    3. ' ' → logprob: -13.637511253356934
    4. ',' → logprob: -16.01251220703125
    5. ' ' → logprob: -16.01251220703125
    6. '   ' → logprob: -16.51251220703125
    7. ' =
' → logprob: -16.51251220703125
    8. '	' → logprob: -16.51251220703125
    9. '  ' → logprob: -17.26251220703125
    10. ' =)' → logprob: -17.51251220703125

Token 454: ' binary' (ID: 15600)
  Prédit: ' binary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' binary' → logprob: -0.3132619559764862
    2. 'binary' → logprob: -1.3132619857788086
    3. '   ' → logprob: -16.438261032104492
    4. '(binary' → logprob: -16.438261032104492
    5. 'b' → logprob: -18.688261032104492
    6. '.binary' → logprob: -19.188261032104492
    7. 'Binary' → logprob: -19.938261032104492
    8. '_binary' → logprob: -20.063261032104492
    9. '  ' → logprob: -20.938261032104492
    10. ' ' → logprob: -21.188261032104492

Token 455: '_search' (ID: 23642)
  Prédit: '_search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_search' → logprob: -2.696889623621246e-06
    2. 'search' → logprob: -12.87500286102295
    3. '_se' → logprob: -18.750001907348633
    4. '_' → logprob: -19.125001907348633
    5. '_SEARCH' → logprob: -19.375001907348633
    6. 'Search' → logprob: -19.625001907348633
    7. '
' → logprob: -19.750001907348633
    8. '_s' → logprob: -20.000001907348633
    9. '_ser' → logprob: -20.000001907348633
    10. '_Search' → logprob: -20.000001907348633

Token 456: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -2.129266067640856e-05
    2. '(' → logprob: -10.875020980834961
    3. ' (' → logprob: -13.250020980834961
    4. '```' → logprob: -15.500020980834961
    5. '(
' → logprob: -15.625020980834961
    6. '   ' → logprob: -17.25002098083496
    7. '(N' → logprob: -17.62502098083496
    8. 'A' → logprob: -17.62502098083496
    9. '`' → logprob: -18.50002098083496
    10. '(E' → logprob: -18.50002098083496

Token 457: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.7530574849806726e-05
    2. ',F' → logprob: -10.000057220458984
    3. ' ,' → logprob: -11.625057220458984
    4. ',
' → logprob: -13.125057220458984
    5. 'F' → logprob: -14.000057220458984
    6. ')' → logprob: -16.625057220458984
    7. '[' → logprob: -17.500057220458984
    8. '   ' → logprob: -17.500057220458984
    9. '
' → logprob: -17.625057220458984
    10. ' F' → logprob: -17.750057220458984

Token 458: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.018150178715586662
    2. ' F' → logprob: -4.018150329589844
    3. '   ' → logprob: -16.268150329589844
    4. ' ' → logprob: -16.268150329589844
    5. ')' → logprob: -17.268150329589844
    6. '
' → logprob: -17.393150329589844
    7. ',' → logprob: -18.143150329589844
    8. ',F' → logprob: -18.268150329589844
    9. '```' → logprob: -18.518150329589844
    10. '	F' → logprob: -19.393150329589844

Token 459: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9862216504407115e-05
    2. ',K' → logprob: -11.375020027160645
    3. ' ,' → logprob: -11.750020027160645
    4. '   ' → logprob: -15.000020027160645
    5. ',
' → logprob: -16.500019073486328
    6. 'K' → logprob: -16.625019073486328
    7. '```' → logprob: -19.750019073486328
    8. '‌,' → logprob: -20.000019073486328
    9. ' ' → logprob: -20.125019073486328
    10. ' K' → logprob: -20.375019073486328

Token 460: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -4.5491004129871726e-05
    2. ' K' → logprob: -10.000045776367188
    3. '   ' → logprob: -19.000045776367188
    4. '	K' → logprob: -20.000045776367188
    5. ' ' → logprob: -20.250045776367188
    6. ')' → logprob: -20.875045776367188
    7. '
' → logprob: -21.000045776367188
    8. ',K' → logprob: -21.375045776367188
    9. '>K' → logprob: -22.500045776367188
    10. ',' → logprob: -23.375045776367188

Token 461: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.511406809295295e-06
    2. ' ,' → logprob: -12.750006675720215
    3. ',right' → logprob: -12.750006675720215
    4. ',
' → logprob: -14.625006675720215
    5. ')' → logprob: -16.0000057220459
    6. ',left' → logprob: -17.0000057220459
    7. '   ' → logprob: -17.5000057220459
    8. 'right' → logprob: -18.0000057220459
    9. '```' → logprob: -18.2500057220459
    10. '‌,' → logprob: -18.5000057220459

Token 462: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0004309076175559312
    2. ' left' → logprob: -7.750431060791016
    3. '   ' → logprob: -15.250431060791016
    4. '	left' → logprob: -18.250431060791016
    5. ' ' → logprob: -20.875431060791016
    6. '[left' → logprob: -21.500431060791016
    7. 'right' → logprob: -21.625431060791016
    8. '  ' → logprob: -21.750431060791016
    9. '_left' → logprob: -21.875431060791016
    10. ',left' → logprob: -22.125431060791016

Token 463: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7729658540920354e-05
    2. ' ,' → logprob: -11.000027656555176
    3. ',right' → logprob: -11.625027656555176
    4. '   ' → logprob: -13.750027656555176
    5. ',
' → logprob: -14.000027656555176
    6. '+' → logprob: -15.625027656555176
    7. '+,' → logprob: -18.000028610229492
    8. '```' → logprob: -18.125028610229492
    9. 'right' → logprob: -18.625028610229492
    10. ' +' → logprob: -18.750028610229492

Token 464: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.01814994215965271
    2. ' right' → logprob: -4.0181498527526855
    3. '   ' → logprob: -17.518150329589844
    4. '	right' → logprob: -18.518150329589844
    5. ' ' → logprob: -21.018150329589844
    6. '[right' → logprob: -22.143150329589844
    7. '_right' → logprob: -22.518150329589844
    8. 'r' → logprob: -22.768150329589844
    9. 'Right' → logprob: -22.768150329589844
    10. '(right' → logprob: -22.768150329589844

Token 465: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2014288455247879
    2. ')
' → logprob: -1.7014288902282715
    3. '   ' → logprob: -11.451428413391113
    4. ')
' → logprob: -12.326428413391113
    5. ' )
' → logprob: -16.07642936706543
    6. ')

' → logprob: -16.07642936706543
    7. ' )' → logprob: -16.07642936706543
    8. ')`
' → logprob: -16.45142936706543
    9. ')`' → logprob: -17.57642936706543
    10. ')\
' → logprob: -17.70142936706543

Token 466: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048730891197919846
    2. 'print' → logprob: -3.0487308502197266
    3. '
' → logprob: -9.423730850219727
    4. ' print' → logprob: -10.423730850219727
    5. '```' → logprob: -10.673730850219727
    6. '    
' → logprob: -11.673730850219727
    7. '	print' → logprob: -13.923730850219727
    8. '
' → logprob: -15.423730850219727
    9. '#print' → logprob: -17.048730850219727
    10. '<|end|>' → logprob: -17.298730850219727

Token 467: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00249551422894001
    2. '   ' → logprob: -6.002495288848877
    3. ' print' → logprob: -11.252495765686035
    4. '```' → logprob: -12.377495765686035
    5. '
' → logprob: -12.877495765686035
    6. '	print' → logprob: -17.50249481201172
    7. '
' → logprob: -17.87749481201172
    8. '    
' → logprob: -18.00249481201172
    9. '``' → logprob: -18.50249481201172
    10. 'import' → logprob: -18.75249481201172

Token 468: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -6.704273118884885e-07
    2. 'answer' → logprob: -14.375000953674316
    3. '(' → logprob: -17.625
    4. '(ans' → logprob: -17.75
    5. ' (' → logprob: -19.125
    6. '(question' → logprob: -19.625
    7. '	answer' → logprob: -20.375
    8. '((' → logprob: -21.75
    9. '(
' → logprob: -21.875
    10. '(int' → logprob: -21.875

Token 469: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -15.25
    3. ' )' → logprob: -17.0
    4. ')`' → logprob: -19.25
    5. '')' → logprob: -19.5
    6. '`)' → logprob: -19.625
    7. '")' → logprob: -20.75
    8. '()' → logprob: -20.875
    9. '))' → logprob: -21.0
    10. '}' → logprob: -21.125

Token 470: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00047821682528592646
    2. '
' → logprob: -7.750478267669678
    3. '<|end|>' → logprob: -10.75047779083252
    4. ' if' → logprob: -11.00047779083252
    5. '```' → logprob: -11.75047779083252
    6. '

' → logprob: -13.87547779083252
    7. '\n' → logprob: -16.125478744506836
    8. '  
' → logprob: -16.375478744506836
    9. '    
' → logprob: -16.625478744506836
    10. '\' → logprob: -16.750478744506836

Token 471: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 469
Tokens correctement prédits (1ère position, stricte): 218
Tokens correctement prédits (1ère position, avec adaptation): 237
Tokens correctement prédits (top 10): 421
Précision stricte (1ère position): 46.48%
Précision adaptée (1ère position): 50.53%
Précision (top 10): 89.77%
================================================================================
