================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:51:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def s0():
    """
    Reads a single line of input as a string.

    Returns:
        str: The input string.
    """
    return input()


def s1():
    """
    Reads a line of input and splits it into a list of strings.

    Returns:
        list[str]: The split input line as a list of strings.
    """
    return input().split()


def s2(n):
    """
    Reads 'n' lines of input, each as a string.

    Args:
        n (int): Number of input lines to read.

    Returns:
        list[str]: List containing 'n' input strings.
    """
    return [input() for _ in range(n)]


def s3(n):
    """
    Reads 'n' lines of input, splitting each line into a list of strings.

    Args:
        n (int): Number of input lines to read.

    Returns:
        list[list[str]]: List containing 'n' lists of split strings.
    """
    return [input().split() for _ in range(n)]


def s4(n):
    """
    Reads 'n' lines of input and converts each line to a list of characters.

    Args:
        n (int): Number of input lines to read.

    Returns:
        list[list[str]]: List of 'n' lists, where each inner list contains characters from each input string.
    """
    return [[x for x in s] for s in s2(n)]


def n0():
    """
    Reads a single integer value from input.

    Returns:
        int: The input integer.
    """
    return int(input())


def n1():
    """
    Reads a line of input, splits it by spaces, and converts each element to an integer.

    Returns:
        list[int]: List of integers parsed from the input line.
    """
    return [int(x) for x in input().split()]


def n2(n):
    """
    Reads 'n' integer values from input, one per line.

    Args:
        n (int): Number of integers to read.

    Returns:
        list[int]: List of 'n' integers.
    """
    return [int(input()) for _ in range(n)]


def n3(n):
    """
    Reads 'n' lines of input, each line containing space-separated integers, and returns them as a list of lists.

    Args:
        n (int): Number of input lines to read.

    Returns:
        list[list[int]]: List of 'n' lists of integers.
    """
    return [[int(x) for x in input().split()] for _ in range(n)]


def t3(n):
    """
    Reads 'n' lines of input, each line containing space-separated integers, and returns them as a list of integer tuples.

    Args:
        n (int): Number of input lines to read.

    Returns:
        list[tuple[int]]: List of 'n' tuples of integers.
    """
    return [tuple(int(x) for x in input().split()) for _ in range(n)]


def p0(b, yes="Yes", no="No"):
    """
    Prints 'yes' string if the condition is True, otherwise prints 'no' string.

    Args:
        b (bool): Condition to evaluate.
        yes (str, optional): String to print if condition is True. Defaults to "Yes".
        no (str, optional): String to print if condition is False. Defaults to "No".
    """
    print(yes if b else no)


# Example utility imports (useful for typical competitive programming tasks)
# Uncomment as needed.
# from sys import setrecursionlimit
# setrecursionlimit(1000000)
# from collections import Counter, deque, defaultdict
# import itertools
# import math
# import networkx
# from bisect import bisect_left, bisect_right
# from heapq import heapify, heappush, heappop


# Main script logic with detailed comments:

# Read the number of elements in the list.
n = n0()

# Read 'n' integers, one per line, and store them in the list 'a'.
a = n2(n)

# Create a sorted copy of list 'a' in ascending order.
b = sorted(a)

# The largest value in the list.
m1 = b[-1]

# The second largest value in the list.
m2 = b[-2]

# For each element in the original list, print m2 if it is equal to the largest value,
# otherwise print m1. This can be used, for example, to answer "what's the largest value
# except i-th element?" in some problem settings.
for i in a:
    p0(i == m1, m2, m1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' s' (ID: 265)
  → Token d'amorce (pas de prédiction)

Token 2: '0' (ID: 15)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.036872658878564835
    2. '_' → logprob: -4.286872863769531
    3. '(a' → logprob: -4.786872863769531
    4. '(:' → logprob: -4.786872863769531
    5. 'a' → logprob: -6.536872863769531
    6. '():' → logprob: -7.036872863769531
    7. 's' → logprob: -7.536872863769531
    8. '(_:' → logprob: -7.661872863769531
    9. '[' → logprob: -8.036872863769531
    10. 'u' → logprob: -8.036872863769531

Token 4: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.048057716339826584
    2. '\' → logprob: -3.673057794570923
    3. ':' → logprob: -5.173057556152344
    4. '   ' → logprob: -5.548057556152344
    5. '```' → logprob: -5.798057556152344
    6. ''\' → logprob: -6.048057556152344
    7. '
' → logprob: -6.548057556152344
    8. '    
' → logprob: -6.923057556152344
    9. '(' → logprob: -7.048057556152344
    10. ''' → logprob: -7.798057556152344

Token 5: ' """
' (ID: 7037)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.1317991018295288
    2. 'return' → logprob: -3.3817992210388184
    3. '\' → logprob: -3.5067992210388184
    4. '   ' → logprob: -3.7567992210388184
    5. 'a' → logprob: -4.631799221038818
    6. '\r' → logprob: -5.131799221038818
    7. 'pass' → logprob: -5.256799221038818
    8. '    ' → logprob: -5.881799221038818
    9. '```' → logprob: -6.756799221038818
    10. '    
' → logprob: -6.881799221038818

Token 6: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.14187318086624146
    2. 'T' → logprob: -3.3918731212615967
    3. 'This' → logprob: -4.266873359680176
    4. 'A' → logprob: -4.391873359680176
    5. 'Returns' → logprob: -4.641873359680176
    6. '   ' → logprob: -4.766873359680176
    7. '\n' → logprob: -5.016873359680176
    8. 'Return' → logprob: -5.266873359680176
    9. 'r' → logprob: -5.516873359680176
    10. 'C' → logprob: -5.516873359680176

Token 7: ' Reads' (ID: 88839)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -1.200688362121582
    2. 'T' → logprob: -2.325688362121582
    3. 'Return' → logprob: -2.325688362121582
    4. 'Calculate' → logprob: -2.325688362121582
    5. 'Returns' → logprob: -2.575688362121582
    6. 'This' → logprob: -3.075688362121582
    7. 'return' → logprob: -3.825688362121582
    8. 'A' → logprob: -4.075688362121582
    9. 'Hello' → logprob: -4.075688362121582
    10. 'r' → logprob: -4.200688362121582

Token 8: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.9694404006004333
    2. '   ' → logprob: -1.8444404602050781
    3. ' ' → logprob: -1.9694404602050781
    4. ' )' → logprob: -1.9694404602050781
    5. ' the' → logprob: -2.594440460205078
    6. ')' → logprob: -3.844440460205078
    7. '(' → logprob: -4.344440460205078
    8. 'a' → logprob: -4.469440460205078
    9. '()' → logprob: -4.469440460205078
    10. '    ' → logprob: -4.844440460205078

Token 9: ' single' (ID: 4590)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8892546892166138
    2. ' file' → logprob: -1.1392546892166138
    3. ' string' → logprob: -2.264254570007324
    4. ' line' → logprob: -3.139254570007324
    5. ' ' → logprob: -3.639254570007324
    6. ' n' → logprob: -3.889254570007324
    7. ' character' → logprob: -4.389254570007324
    8. ' text' → logprob: -4.764254570007324
    9. ' input' → logprob: -5.014254570007324
    10. ' single' → logprob: -5.264254570007324

Token 10: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.6888231635093689
    2. ' token' → logprob: -1.0638232231140137
    3. ' character' → logprob: -2.0638232231140137
    4. ' ' → logprob: -4.188823223114014
    5. ' space' → logprob: -6.188823223114014
    6. 'token' → logprob: -6.313823223114014
    7. 'character' → logprob: -6.688823223114014
    8. '   ' → logprob: -6.813823223114014
    9. ' word' → logprob: -6.813823223114014
    10. 'line' → logprob: -7.313823223114014

Token 11: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2131020724773407
    2. ' from' → logprob: -2.213102102279663
    3. '\n' → logprob: -2.963102102279663
    4. '"""' → logprob: -4.588101863861084
    5. '```' → logprob: -5.088101863861084
    6. ')' → logprob: -6.213101863861084
    7. '    ' → logprob: -6.213101863861084
    8. '.' → logprob: -6.588101863861084
    9. ' and' → logprob: -6.713101863861084
    10. 'from' → logprob: -6.963101863861084

Token 12: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.09868699312210083
    2. 'input' → logprob: -3.098686933517456
    3. ' code' → logprob: -3.223686933517456
    4. ' text' → logprob: -5.098687171936035
    5. ' user' → logprob: -6.723687171936035
    6. 'code' → logprob: -7.223687171936035
    7. 'text' → logprob: -7.348687171936035
    8. ' the' → logprob: -9.348687171936035
    9. ' source' → logprob: -9.348687171936035
    10. ' Python' → logprob: -9.848687171936035

Token 13: ' as' (ID: 472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2427191287279129
    2. '```' → logprob: -2.1177191734313965
    3. '\n' → logprob: -2.9927191734313965
    4. ')' → logprob: -3.8677191734313965
    5. '.' → logprob: -5.3677191734313965
    6. '`' → logprob: -5.4927191734313965
    7. '"""' → logprob: -6.1177191734313965
    8. '"""
' → logprob: -6.2427191734313965
    9. '\' → logprob: -6.4927191734313965
    10. '    ' → logprob: -6.7427191734313965

Token 14: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3907180428504944
    2. 'a' → logprob: -1.3907179832458496
    3. ' text' → logprob: -3.7657179832458496
    4. 'str' → logprob: -4.14071798324585
    5. ' str' → logprob: -4.64071798324585
    6. 's' → logprob: -4.89071798324585
    7. ' string' → logprob: -5.14071798324585
    8. ' an' → logprob: -5.89071798324585
    9. ' code' → logprob: -6.26571798324585
    10. ' s' → logprob: -6.64071798324585

Token 15: ' string' (ID: 1621)
  Prédit: ' string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' string' → logprob: -0.05197525396943092
    2. 'string' → logprob: -3.0519752502441406
    3. ' str' → logprob: -6.676975250244141
    4. 'n' → logprob: -7.051975250244141
    5. 'str' → logprob: -7.301975250244141
    6. 's' → logprob: -8.05197525024414
    7. ' n' → logprob: -9.80197525024414
    8. ' list' → logprob: -9.92697525024414
    9. ' single' → logprob: -9.92697525024414
    10. ' token' → logprob: -10.05197525024414

Token 16: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17153725028038025
    2. '```' → logprob: -2.171537160873413
    3. '\n' → logprob: -4.046537399291992
    4. '"""' → logprob: -4.796537399291992
    5. '    
' → logprob: -5.171537399291992
    6. '"""
' → logprob: -5.171537399291992
    7. '`' → logprob: -6.171537399291992
    8. '``' → logprob: -6.671537399291992
    9. ')' → logprob: -7.296537399291992
    10. '
' → logprob: -7.921537399291992

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05043379217386246
    2. '"""' → logprob: -3.300433874130249
    3. ')' → logprob: -5.30043363571167
    4. ' """' → logprob: -6.42543363571167
    5. '\n' → logprob: -6.92543363571167
    6. '    ' → logprob: -7.05043363571167
    7. ' ' → logprob: -7.05043363571167
    8. ' return' → logprob: -7.42543363571167
    9. '```' → logprob: -7.67543363571167
    10. 'return' → logprob: -7.92543363571167

Token 18: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031456876546144485
    2. '"""' → logprob: -3.78145694732666
    3. '    ' → logprob: -6.03145694732666
    4. ')' → logprob: -6.78145694732666
    5. '```' → logprob: -6.78145694732666
    6. ' """' → logprob: -6.78145694732666
    7. 'return' → logprob: -7.40645694732666
    8. '\n' → logprob: -8.03145694732666
    9. '""' → logprob: -8.03145694732666
    10. ' ' → logprob: -8.53145694732666

Token 19: ':
' (ID: 734)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.8648271560668945
    2. ':' → logprob: -1.7398271560668945
    3. ' ' → logprob: -1.9898271560668945
    4. ' the' → logprob: -2.4898271560668945
    5. ' :' → logprob: -2.7398271560668945
    6. ' str' → logprob: -3.3648271560668945
    7. '    ' → logprob: -3.6148271560668945
    8. '   ' → logprob: -4.1148271560668945
    9. ' The' → logprob: -4.7398271560668945
    10. '.' → logprob: -5.4898271560668945

Token 20: '       ' (ID: 309)
  Prédit: ' str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.06413666903972626
    2. '   ' → logprob: -2.9391367435455322
    3. 'str' → logprob: -5.689136505126953
    4. '    ' → logprob: -5.939136505126953
    5. ' a' → logprob: -6.689136505126953
    6. '```' → logprob: -7.689136505126953
    7. ' The' → logprob: -8.439136505126953
    8. ' `' → logprob: -8.564136505126953
    9. ' the' → logprob: -8.689136505126953
    10. '       ' → logprob: -8.814136505126953

Token 21: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' (adapté à ' str') → logprob: -0.03386363759636879
    2. ' str' → logprob: -3.4088635444641113
    3. '   ' → logprob: -8.90886402130127
    4. 'string' → logprob: -10.03386402130127
    5. 'The' → logprob: -11.78386402130127
    6. '`' → logprob: -12.28386402130127
    7. '(str' → logprob: -12.53386402130127
    8. '```' → logprob: -12.78386402130127
    9. 'int' → logprob: -13.03386402130127
    10. 's' → logprob: -13.03386402130127

Token 22: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38389405608177185
    2. '"""' → logprob: -1.7588940858840942
    3. '"""
' → logprob: -3.2588939666748047
    4. ')' → logprob: -3.6338939666748047
    5. '
' → logprob: -3.6338939666748047
    6. '```' → logprob: -4.133893966674805
    7. '\n' → logprob: -4.383893966674805
    8. '`' → logprob: -4.758893966674805
    9. ':' → logprob: -5.633893966674805
    10. '""' → logprob: -5.758893966674805

Token 23: ' The' (ID: 623)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2637706995010376
    2. ' input' → logprob: -1.8887706995010376
    3. ' The' → logprob: -2.138770580291748
    4. '   ' → logprob: -2.263770580291748
    5. ' the' → logprob: -2.513770580291748
    6. '    ' → logprob: -2.763770580291748
    7. ' a' → logprob: -2.888770580291748
    8. ' """' → logprob: -3.138770580291748
    9. '<|end|>' → logprob: -4.263770580291748
    10. 'input' → logprob: -4.638770580291748

Token 24: ' input' (ID: 3422)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.27115824818611145
    2. ' input' → logprob: -1.771158218383789
    3. ' user' → logprob: -3.771158218383789
    4. ' user's' → logprob: -4.021158218383789
    5. ' line' → logprob: -4.771158218383789
    6. ' ' → logprob: -5.521158218383789
    7. ' first' → logprob: -5.771158218383789
    8. ' current' → logprob: -5.896158218383789
    9. ' result' → logprob: -6.271158218383789
    10. ' string' → logprob: -6.646158218383789

Token 25: ' string' (ID: 1621)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9215869903564453
    2. '   ' → logprob: -1.0465869903564453
    3. ' line' → logprob: -2.4215869903564453
    4. ' string' → logprob: -2.7965869903564453
    5. '()
' → logprob: -4.046586990356445
    6. 'string' → logprob: -4.046586990356445
    7. '().' → logprob: -4.421586990356445
    8. '"""' → logprob: -4.421586990356445
    9. ' ' → logprob: -4.546586990356445
    10. '.' → logprob: -5.046586990356445

Token 26: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029688235372304916
    2. '\n' → logprob: -3.9046881198883057
    3. '"\' → logprob: -5.654688358306885
    4. '"""' → logprob: -6.154688358306885
    5. ')' → logprob: -6.529688358306885
    6. '"""
' → logprob: -7.154688358306885
    7. '    
' → logprob: -7.654688358306885
    8. '""' → logprob: -8.779687881469727
    9. '\' → logprob: -9.154687881469727
    10. '"' → logprob: -9.279687881469727

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2510990500450134
    2. '"""' → logprob: -1.7510991096496582
    3. '"""
' → logprob: -3.376099109649658
    4. '\n' → logprob: -5.126099109649658
    5. '"\' → logprob: -5.751099109649658
    6. '"' → logprob: -6.626099109649658
    7. '```' → logprob: -6.626099109649658
    8. '""' → logprob: -6.751099109649658
    9. '\' → logprob: -8.0010986328125
    10. ')' → logprob: -8.1260986328125

Token 28: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10672272741794586
    2. '"""' → logprob: -2.356722831726074
    3. ')' → logprob: -5.981722831726074
    4. '"""
' (adapté à ' """
') → logprob: -6.231722831726074
    5. '\n' → logprob: -6.981722831726074
    6. '""' → logprob: -7.481722831726074
    7. '"' → logprob: -8.856722831726074
    8. '"\' → logprob: -9.106722831726074
    9. '```' → logprob: -9.981722831726074
    10. '    
' → logprob: -10.106722831726074

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010846133809536695
    2. 'return' → logprob: -7.126084804534912
    3. ' return' → logprob: -8.501084327697754
    4. 'input' → logprob: -10.251084327697754
    5. '```' → logprob: -11.126084327697754
    6. '    
' → logprob: -11.376084327697754
    7. '    ' → logprob: -12.376084327697754
    8. ' input' → logprob: -12.876084327697754
    9. '\n' → logprob: -13.126084327697754
    10. 'n' → logprob: -13.626084327697754

Token 30: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1191776692867279
    2. '   ' → logprob: -2.2441775798797607
    3. 's' → logprob: -6.24417781829834
    4. ' return' → logprob: -6.36917781829834
    5. 'input' → logprob: -6.61917781829834
    6. 'r' → logprob: -7.74417781829834
    7. 'line' → logprob: -8.24417781829834
    8. 'user' → logprob: -8.61917781829834
    9. '```' → logprob: -9.74417781829834
    10. 'n' → logprob: -9.86917781829834

Token 31: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.004080420359969139
    2. 'input' → logprob: -5.504080295562744
    3. ' ' → logprob: -13.129080772399902
    4. '(input' → logprob: -17.379079818725586
    5. '   ' → logprob: -18.379079818725586
    6. '=input' → logprob: -18.504079818725586
    7. ' str' → logprob: -18.629079818725586
    8. ' raw' → logprob: -18.879079818725586
    9. ' ' → logprob: -18.879079818725586
    10. ' int' → logprob: -19.129079818725586

Token 32: '()


' (ID: 29771)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5771166086196899
    2. '(' → logprob: -0.8271166086196899
    3. '("("' → logprob: -7.7021164894104
    4. '('' → logprob: -7.9521164894104
    5. '("' → logprob: -9.077116966247559
    6. '"' → logprob: -9.202116966247559
    7. '`()' → logprob: -10.202116966247559
    8. ' ' → logprob: -10.827116966247559
    9. '(
' → logprob: -11.202116966247559
    10. '().' → logprob: -11.202116966247559

Token 33: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0430319607257843
    2. '()' → logprob: -3.918031930923462
    3. '(' → logprob: -4.918032169342041
    4. '()

' → logprob: -5.543032169342041
    5. '(
' → logprob: -5.918032169342041
    6. '()
' → logprob: -6.168032169342041
    7. 's' → logprob: -6.168032169342041
    8. '
' → logprob: -6.918032169342041
    9. '(

' → logprob: -7.418032169342041
    10. '\n' → logprob: -7.793032169342041

Token 34: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.007622364908456802
    2. 's' → logprob: -4.882622241973877
    3. '_' → logprob: -11.757622718811035
    4. '_s' → logprob: -12.257622718811035
    5. ' ' → logprob: -13.507622718811035
    6. ' ' → logprob: -14.007622718811035
    7. ' space' → logprob: -15.382622718811035
    8. ' _' → logprob: -15.632622718811035
    9. ' def' → logprob: -15.632622718811035
    10. 'space' → logprob: -15.757622718811035

Token 35: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009838729165494442
    2. '0' → logprob: -4.634838581085205
    3. 'plit' → logprob: -10.009839057922363
    4. '2' → logprob: -11.384839057922363
    5. 't' → logprob: -11.759839057922363
    6. '```' → logprob: -12.759839057922363
    7. 'tr' → logprob: -13.259839057922363
    8. '3' → logprob: -13.384839057922363
    9. 'l' → logprob: -13.509839057922363
    10. '4' → logprob: -13.509839057922363

Token 36: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.228324294090271
    2. '():' → logprob: -1.728324294090271
    3. '(' → logprob: -4.2283244132995605
    4. ' ()' → logprob: -4.7283244132995605
    5. ' (' → logprob: -7.2283244132995605
    6. '_' → logprob: -7.9783244132995605
    7. ':' → logprob: -7.9783244132995605
    8. ' ():' → logprob: -8.228323936462402
    9. 's' → logprob: -8.853323936462402
    10. '('' → logprob: -9.228323936462402

Token 37: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7706280946731567
    2. '()' → logprob: -1.0206280946731567
    3. '   ' → logprob: -1.7706280946731567
    4. '    ' → logprob: -6.520627975463867
    5. '('' → logprob: -7.270627975463867
    6. ' ()' → logprob: -7.520627975463867
    7. ' ' → logprob: -7.645627975463867
    8. '():' → logprob: -7.770627975463867
    9. ':' → logprob: -8.020627975463867
    10. '[' → logprob: -8.020627975463867

Token 38: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004286742303520441
    2. ' return' → logprob: -5.629286766052246
    3. 'return' → logprob: -8.254286766052246
    4. '    ' → logprob: -8.879286766052246
    5. ' input' → logprob: -9.379286766052246
    6. 'input' → logprob: -10.379286766052246
    7. '    
' → logprob: -10.379286766052246
    8. 's' → logprob: -10.379286766052246
    9. ' ' → logprob: -11.629286766052246
    10. '  ' → logprob: -11.754286766052246

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006923011387698352
    2. ' Reads' → logprob: -8.375692367553711
    3. '    ' → logprob: -8.750692367553711
    4. 'Reads' → logprob: -9.625692367553711
    5. 'def' → logprob: -10.000692367553711
    6. 's' → logprob: -10.500692367553711
    7. ' ' → logprob: -11.125692367553711
    8. '  ' → logprob: -11.125692367553711
    9. '"""' → logprob: -11.250692367553711
    10. ' return' → logprob: -11.250692367553711

Token 40: ' Reads' (ID: 88839)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24068397283554077
    2. 'def' → logprob: -1.9906840324401855
    3. 's' → logprob: -4.2406840324401855
    4. 'Reads' (adapté à ' Reads') → logprob: -4.3656840324401855
    5. ' Reads' → logprob: -4.6156840324401855
    6. 'return' → logprob: -4.9906840324401855
    7. ' def' → logprob: -5.2406840324401855
    8. ' return' → logprob: -5.7406840324401855
    9. 'line' → logprob: -5.8656840324401855
    10. ' ' → logprob: -5.8656840324401855

Token 41: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.014858096837997437
    2. 'a' → logprob: -4.639858245849609
    3. '()' → logprob: -5.514858245849609
    4. ' ()' → logprob: -7.889858245849609
    5. ' one' → logprob: -8.51485824584961
    6. ' ' → logprob: -9.26485824584961
    7. '_' → logprob: -9.63985824584961
    8. ' an' → logprob: -9.63985824584961
    9. 'n' → logprob: -9.88985824584961
    10. '1' → logprob: -9.88985824584961

Token 42: ' line' (ID: 2543)
  Prédit: ' single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' single' → logprob: -0.6287092566490173
    2. 'n' → logprob: -1.503709316253662
    3. ' ' → logprob: -1.628709316253662
    4. ' n' → logprob: -4.128709316253662
    5. ' line' → logprob: -4.378709316253662
    6. ' space' → logprob: -4.753709316253662
    7. ' a' → logprob: -5.503709316253662
    8. '()' → logprob: -6.378709316253662
    9. 'single' → logprob: -6.628709316253662
    10. ' ()' → logprob: -6.753709316253662

Token 43: ' of' (ID: 328)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08102672547101974
    2. ' of' → logprob: -2.706026792526245
    3. '   ' → logprob: -5.206026554107666
    4. '(' → logprob: -5.956026554107666
    5. 'of' → logprob: -6.456026554107666
    6. ' ()' → logprob: -6.956026554107666
    7. '()
' → logprob: -9.456027030944824
    8. '_' → logprob: -9.831027030944824
    9. '_of' → logprob: -9.831027030944824
    10. ')' → logprob: -10.206027030944824

Token 44: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.006087815389037132
    2. 'input' → logprob: -5.256087779998779
    3. ' code' → logprob: -7.381087779998779
    4. '()' → logprob: -8.756088256835938
    5. ' text' → logprob: -10.006088256835938
    6. ')' → logprob: -12.006088256835938
    7. ' a' → logprob: -12.381088256835938
    8. '```' → logprob: -12.881088256835938
    9. 'text' → logprob: -13.131088256835938
    10. 'code' → logprob: -13.381088256835938

Token 45: ' and' (ID: 326)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5873337388038635
    2. ' as' → logprob: -0.8373337388038635
    3. '   ' → logprob: -5.212333679199219
    4. ')' → logprob: -6.337333679199219
    5. 'as' → logprob: -6.962333679199219
    6. ' ()' → logprob: -7.337333679199219
    7. '().' → logprob: -7.462333679199219
    8. '()
' → logprob: -7.837333679199219
    9. ' of' → logprob: -7.962333679199219
    10. '```' → logprob: -8.087333679199219

Token 46: ' splits' (ID: 76848)
  Prédit: ' returns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' returns' → logprob: -0.8796525001525879
    2. ' strips' → logprob: -1.379652500152588
    3. ' splits' → logprob: -1.379652500152588
    4. ' converts' → logprob: -3.379652500152588
    5. '   ' → logprob: -3.629652500152588
    6. ' return' → logprob: -5.379652500152588
    7. 'returns' → logprob: -5.879652500152588
    8. 's' → logprob: -6.129652500152588
    9. ' strip' → logprob: -6.254652500152588
    10. ' parses' → logprob: -6.254652500152588

Token 47: ' it' (ID: 480)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005777930840849876
    2. ' ()' → logprob: -5.255777835845947
    3. '   ' → logprob: -8.380778312683105
    4. ' into' → logprob: -9.005778312683105
    5. '('' → logprob: -9.255778312683105
    6. '(' → logprob: -10.630778312683105
    7. '().' → logprob: -11.130778312683105
    8. '    ' → logprob: -11.255778312683105
    9. '```' → logprob: -11.505778312683105
    10. '()[' → logprob: -12.130778312683105

Token 48: ' into' (ID: 1511)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.44514772295951843
    2. ' into' → logprob: -1.0701477527618408
    3. '   ' → logprob: -4.695147514343262
    4. ' ()' → logprob: -5.570147514343262
    5. '().' → logprob: -6.695147514343262
    6. '    ' → logprob: -7.070147514343262
    7. '()[' → logprob: -7.695147514343262
    8. ' by' → logprob: -8.695147514343262
    9. 'into' → logprob: -8.695147514343262
    10. '()
' → logprob: -9.320147514343262

Token 49: ' a' (ID: 261)
  Prédit: ' tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tokens' → logprob: -0.15328259766101837
    2. ' a' → logprob: -2.028282642364502
    3. 'tokens' → logprob: -5.403282642364502
    4. ' strings' → logprob: -5.528282642364502
    5. ' components' → logprob: -8.028282165527344
    6. 'a' → logprob: -8.278282165527344
    7. '()' → logprob: -8.278282165527344
    8. ' integers' → logprob: -8.528282165527344
    9. ' parts' → logprob: -8.653282165527344
    10. ' an' → logprob: -8.778282165527344

Token 50: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.004251962061971426
    2. 'list' → logprob: -5.629251956939697
    3. 'n' → logprob: -7.754251956939697
    4. ' string' → logprob: -9.004252433776855
    5. 'string' → logprob: -11.129252433776855
    6. 'tokens' → logprob: -11.254252433776855
    7. ' tokens' → logprob: -11.379252433776855
    8. ' n' → logprob: -11.629252433776855
    9. 'str' → logprob: -11.879252433776855
    10. ' str' → logprob: -12.004252433776855

Token 51: ' of' (ID: 328)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0039055191446095705
    2. '   ' → logprob: -6.003905296325684
    3. '(' → logprob: -7.378905296325684
    4. ' ()' → logprob: -8.003905296325684
    5. '().' → logprob: -9.128905296325684
    6. '('' → logprob: -9.503905296325684
    7. '()[' → logprob: -9.753905296325684
    8. ' of' → logprob: -10.128905296325684
    9. '```' → logprob: -10.253905296325684
    10. '    ' → logprob: -10.628905296325684

Token 52: ' strings' (ID: 18279)
  Prédit: ' strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' strings' → logprob: -0.010206952691078186
    2. ' tokens' → logprob: -5.010207176208496
    3. ' str' → logprob: -6.385207176208496
    4. ' integers' → logprob: -6.885207176208496
    5. ' strs' → logprob: -8.260207176208496
    6. 'str' → logprob: -8.385207176208496
    7. 'strings' → logprob: -9.010207176208496
    8. 's' → logprob: -9.760207176208496
    9. ' s' → logprob: -10.135207176208496
    10. 'tokens' → logprob: -10.760207176208496

Token 53: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22645103931427002
    2. '()' → logprob: -1.72645103931427
    3. '().' → logprob: -4.2264509201049805
    4. '()
' → logprob: -5.6014509201049805
    5. '.' → logprob: -6.3514509201049805
    6. '```' → logprob: -6.8514509201049805
    7. '(' → logprob: -7.4764509201049805
    8. '[]' → logprob: -7.4764509201049805
    9. ' ()' → logprob: -7.4764509201049805
    10. '[' → logprob: -7.7264509201049805

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.9146995327901095e-05
    2. '    
' → logprob: -11.500019073486328
    3. ' return' → logprob: -12.875019073486328
    4. 'return' → logprob: -13.000019073486328
    5. '```' → logprob: -13.125019073486328
    6. ')' → logprob: -14.375019073486328
    7. '[]' → logprob: -14.875019073486328
    8. '()' → logprob: -15.250019073486328
    9. '       ' → logprob: -15.500019073486328
    10. '    ' → logprob: -15.875019073486328

Token 55: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11702218651771545
    2. 'return' → logprob: -2.4920222759246826
    3. ' return' → logprob: -3.6170222759246826
    4. '```' → logprob: -7.7420220375061035
    5. '
' → logprob: -8.367022514343262
    6. '    
' → logprob: -9.367022514343262
    7. '`' → logprob: -11.617022514343262
    8. 'def' → logprob: -11.742022514343262
    9. ' 
' → logprob: -11.867022514343262
    10. ' ' → logprob: -11.867022514343262

Token 56: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12119605392217636
    2. '   ' → logprob: -2.2461960315704346
    3. '       ' → logprob: -6.246196269989014
    4. ':
' → logprob: -6.246196269989014
    5. '[]' → logprob: -6.371196269989014
    6. ' :' → logprob: -6.871196269989014
    7. '    ' → logprob: -7.246196269989014
    8. '[' → logprob: -8.246195793151855
    9. '```' → logprob: -8.371195793151855
    10. '[:]' → logprob: -8.621195793151855

Token 57: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007108182646334171
    2. ' list' → logprob: -5.757108211517334
    3. '   ' → logprob: -5.882108211517334
    4. 'list' → logprob: -7.632108211517334
    5. 'List' → logprob: -7.882108211517334
    6. ' List' → logprob: -8.382107734680176
    7. '```' → logprob: -11.257107734680176
    8. '    ' → logprob: -11.632107734680176
    9. '        ' → logprob: -12.757107734680176
    10. ' str' → logprob: -12.882107734680176

Token 58: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6515096426010132
    2. 'list' (adapté à ' list') → logprob: -0.7765096426010132
    3. 'List' → logprob: -4.151509761810303
    4. ' List' → logprob: -6.401509761810303
    5. '   ' → logprob: -6.651509761810303
    6. '```' → logprob: -11.276509284973145
    7. '       ' → logprob: -11.651509284973145
    8. '[list' → logprob: -12.401509284973145
    9. '    ' → logprob: -12.526509284973145
    10. 'str' → logprob: -13.026509284973145

Token 59: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.000867752474732697
    2. ' of' → logprob: -7.62586784362793
    3. '[int' → logprob: -9.12586784362793
    4. ':' → logprob: -9.12586784362793
    5. '(str' → logprob: -10.00086784362793
    6. '[' → logprob: -10.37586784362793
    7. '   ' → logprob: -10.62586784362793
    8. '<|end|>' → logprob: -10.62586784362793
    9. 'str' → logprob: -11.50086784362793
    10. '```' → logprob: -11.62586784362793

Token 60: ']:' (ID: 12433)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008822444826364517
    2. ']:' → logprob: -4.758822441101074
    3. '[str' → logprob: -8.883822441101074
    4. '()]' → logprob: -10.133822441101074
    5. ' ]' → logprob: -11.633822441101074
    6. '[' → logprob: -12.383822441101074
    7. ']()' → logprob: -12.383822441101074
    8. '[int' → logprob: -12.883822441101074
    9. ']]' → logprob: -13.383822441101074
    10. ']string' → logprob: -13.508822441101074

Token 61: ' The' (ID: 623)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.016209853813052177
    2. 'input' → logprob: -5.016210079193115
    3. ' s' → logprob: -5.641210079193115
    4. ' The' → logprob: -6.016210079193115
    5. '   ' → logprob: -6.391210079193115
    6. 's' → logprob: -7.266210079193115
    7. '    ' → logprob: -8.391209602355957
    8. ' str' → logprob: -8.516209602355957
    9. 'The' → logprob: -8.766209602355957
    10. ' ' → logprob: -9.391209602355957

Token 62: ' split' (ID: 12648)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.2725142538547516
    2. ' split' → logprob: -2.5225143432617188
    3. ' list' → logprob: -3.0225143432617188
    4. ' strings' → logprob: -3.1475143432617188
    5. ' tokens' → logprob: -3.6475143432617188
    6. ' splitted' → logprob: -3.7725143432617188
    7. ' next' → logprob: -4.772514343261719
    8. ' result' → logprob: -5.647514343261719
    9. 'split' → logprob: -6.272514343261719
    10. 'input' → logprob: -7.022514343261719

Token 63: ' input' (ID: 3422)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16311804950237274
    2. ' strings' → logprob: -2.1631181240081787
    3. ' tokens' → logprob: -4.0381178855896
    4. ' input' → logprob: -4.6631178855896
    5. 'tokens' → logprob: -5.5381178855896
    6. 'strings' → logprob: -6.6631178855896
    7. 'input' → logprob: -7.6631178855896
    8. 's' → logprob: -7.6631178855896
    9. '[str' → logprob: -8.038118362426758
    10. ' string' → logprob: -8.163118362426758

Token 64: ' line' (ID: 2543)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6332200765609741
    2. ' strings' → logprob: -1.0082200765609741
    3. ' tokens' → logprob: -3.0082201957702637
    4. '   ' → logprob: -3.8832201957702637
    5. '().' → logprob: -4.508220195770264
    6. 'tokens' → logprob: -4.883220195770264
    7. '```' → logprob: -5.758220195770264
    8. 'strings' → logprob: -5.758220195770264
    9. ' string' → logprob: -6.258220195770264
    10. '()
' → logprob: -6.508220195770264

Token 65: ' as' (ID: 472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5908198952674866
    2. '()' → logprob: -1.0908198356628418
    3. '().' → logprob: -2.965819835662842
    4. ')' → logprob: -3.590819835662842
    5. '.' → logprob: -4.215819835662842
    6. '.split' → logprob: -4.715819835662842
    7. ',' → logprob: -5.965819835662842
    8. ' .' → logprob: -6.465819835662842
    9. '()
' → logprob: -7.715819835662842
    10. ']' → logprob: -7.840819835662842

Token 66: ' a' (ID: 261)
  Prédit: ' strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' strings' → logprob: -0.03775179013609886
    2. ' a' → logprob: -4.0377516746521
    3. ' tokens' → logprob: -4.1627516746521
    4. 'strings' → logprob: -5.6627516746521
    5. 'tokens' → logprob: -8.287752151489258
    6. 'a' → logprob: -9.912752151489258
    7. ' separate' → logprob: -10.537752151489258
    8. ' input' → logprob: -11.662752151489258
    9. ' ' → logprob: -11.787752151489258
    10. ' string' → logprob: -12.037752151489258

Token 67: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.02037229761481285
    2. ' strings' → logprob: -4.39537239074707
    3. 'list' → logprob: -5.14537239074707
    4. 'strings' → logprob: -6.89537239074707
    5. ' tokens' → logprob: -7.52037239074707
    6. 'tokens' → logprob: -8.52037239074707
    7. ' string' → logprob: -8.89537239074707
    8. 'string' → logprob: -10.14537239074707
    9. '   ' → logprob: -10.89537239074707
    10. ' ' → logprob: -11.52037239074707

Token 68: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.4945640563964844
    2. '   ' → logprob: -0.9945640563964844
    3. '[str' → logprob: -4.619564056396484
    4. '```' → logprob: -5.369564056396484
    5. '()' → logprob: -5.869564056396484
    6. 'of' → logprob: -6.744564056396484
    7. '[]' → logprob: -7.994564056396484
    8. ')' → logprob: -7.994564056396484
    9. '  ' → logprob: -8.619564056396484
    10. '`' → logprob: -9.244564056396484

Token 69: ' strings' (ID: 18279)
  Prédit: ' strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' strings' → logprob: -0.011274164542555809
    2. 'strings' → logprob: -4.511274337768555
    3. ' tokens' → logprob: -8.886274337768555
    4. 'str' → logprob: -9.511274337768555
    5. 'tokens' → logprob: -12.011274337768555
    6. ' str' → logprob: -12.761274337768555
    7. ' strs' → logprob: -13.011274337768555
    8. 's' → logprob: -14.386274337768555
    9. ' substr' → logprob: -14.386274337768555
    10. ' string' → logprob: -14.636274337768555

Token 70: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2446974515914917
    2. '()' → logprob: -1.6196974515914917
    3. ')' → logprob: -4.994697570800781
    4. ']' → logprob: -5.119697570800781
    5. '.' → logprob: -6.119697570800781
    6. '[]' → logprob: -7.119697570800781
    7. '()
' → logprob: -7.369697570800781
    8. '().' → logprob: -7.494697570800781
    9. '<|end|>' → logprob: -7.619697570800781
    10. 'def' → logprob: -8.369697570800781

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009236076730303466
    2. '    
' → logprob: -7.6259236335754395
    3. '
' → logprob: -8.250923156738281
    4. '```' → logprob: -9.500923156738281
    5. '"""
' → logprob: -10.625923156738281
    6. '\n' → logprob: -11.500923156738281
    7. '"""' → logprob: -11.750923156738281
    8. '   
' → logprob: -11.875923156738281
    9. '  
' → logprob: -11.875923156738281
    10. 'def' → logprob: -12.000923156738281

Token 72: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03312065452337265
    2. '
' → logprob: -4.533120632171631
    3. '    
' → logprob: -5.033120632171631
    4. '"""
' (adapté à ' """
') → logprob: -5.158120632171631
    5. '```' → logprob: -5.658120632171631
    6. '\n' → logprob: -6.158120632171631
    7. '"""' → logprob: -6.783120632171631
    8. '()
' → logprob: -7.033120632171631
    9. '()' → logprob: -7.908120632171631
    10. 'return' → logprob: -8.283121109008789

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008036578074097633
    2. 'return' → logprob: -4.8830366134643555
    3. ' return' → logprob: -7.7580366134643555
    4. '```' → logprob: -13.258036613464355
    5. 'def' → logprob: -14.633036613464355
    6. '   ' → logprob: -15.133036613464355
    7. '	return' → logprob: -15.258036613464355
    8. '    
' → logprob: -16.50803565979004
    9. '       ' → logprob: -16.75803565979004
    10. '  ' → logprob: -17.13303565979004

Token 74: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0008189192740246654
    2. ' return' → logprob: -7.250818729400635
    3. '   ' → logprob: -9.125819206237793
    4. 's' → logprob: -16.750818252563477
    5. 'line' → logprob: -17.125818252563477
    6. '```' → logprob: -17.125818252563477
    7. '	return' → logprob: -17.375818252563477
    8. ' ' → logprob: -19.125818252563477
    9. 'input' → logprob: -19.250818252563477
    10. '    
' → logprob: -19.375818252563477

Token 75: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10028894245624542
    2. ' input' → logprob: -2.3502888679504395
    3. 's' → logprob: -9.725289344787598
    4. '   ' → logprob: -10.975289344787598
    5. ' s' → logprob: -12.475289344787598
    6. ' ' → logprob: -14.350289344787598
    7. '(input' → logprob: -14.475289344787598
    8. 'list' → logprob: -15.850289344787598
    9. '[input' → logprob: -16.35028839111328
    10. '  ' → logprob: -16.72528839111328

Token 76: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0002680112374946475
    2. '()' → logprob: -8.25026798248291
    3. '(' → logprob: -12.12526798248291
    4. ' ().' → logprob: -13.62526798248291
    5. ' ()' → logprob: -18.000268936157227
    6. '.split' → logprob: -19.500268936157227
    7. '.' → logprob: -20.250268936157227
    8. '("").' → logprob: -20.875268936157227
    9. '（）' → logprob: -21.000268936157227
    10. '(.' → logprob: -21.500268936157227

Token 77: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00043138445471413434
    2. 'strip' → logprob: -7.750431537628174
    3. ' split' → logprob: -14.250431060791016
    4. 'spl' → logprob: -16.750431060791016
    5. 'rstrip' → logprob: -16.875431060791016
    6. '(split' → logprob: -18.500431060791016
    7. 's' → logprob: -21.250431060791016
    8. '.split' → logprob: -21.375431060791016
    9. 'plit' → logprob: -21.750431060791016
    10. '```' → logprob: -22.250431060791016

Token 78: '()


' (ID: 29771)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02325025200843811
    2. '(' → logprob: -3.7732503414154053
    3. '('' → logprob: -13.148250579833984
    4. '(
' → logprob: -14.898250579833984
    5. ' ()' → logprob: -14.898250579833984
    6. '(

' → logprob: -15.023250579833984
    7. '();' → logprob: -15.523250579833984
    8. '().' → logprob: -15.648250579833984
    9. '()`' → logprob: -15.898250579833984
    10. '("("' → logprob: -16.023250579833984

Token 79: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003585840167943388
    2. 'd' → logprob: -8.375358581542969
    3. '```' → logprob: -9.875358581542969
    4. '\' → logprob: -10.250358581542969
    5. '
' → logprob: -10.500358581542969
    6. '#' → logprob: -12.750358581542969
    7. '_' → logprob: -12.875358581542969
    8. 'de' → logprob: -13.000358581542969
    9. '[' → logprob: -13.250358581542969
    10. '

' → logprob: -14.250358581542969

Token 80: ' s' (ID: 265)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2812589704990387
    2. 's' → logprob: -1.5312589406967163
    3. ' i' → logprob: -4.031259059906006
    4. ' s' → logprob: -4.906259059906006
    5. 'n' → logprob: -6.031259059906006
    6. ' ' → logprob: -8.156258583068848
    7. 'int' → logprob: -8.281258583068848
    8. ' n' → logprob: -8.781258583068848
    9. '2' → logprob: -9.656258583068848
    10. '_i' → logprob: -9.656258583068848

Token 81: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010866360971704125
    2. 'n' → logprob: -7.751086711883545
    3. 'p' → logprob: -8.376086235046387
    4. 'i' → logprob: -8.626086235046387
    5. 'a' → logprob: -9.126086235046387
    6. 'int' → logprob: -10.126086235046387
    7. 'l' → logprob: -10.251086235046387
    8. 'plit' → logprob: -11.376086235046387
    9. '1' → logprob: -11.751086235046387
    10. '0' → logprob: -11.751086235046387

Token 82: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.053842782974243164
    2. '()' → logprob: -3.303842782974243
    3. '():
' → logprob: -4.178842544555664
    4. 'def' → logprob: -9.178842544555664
    5. '()[' → logprob: -9.178842544555664
    6. ' ():' → logprob: -10.303842544555664
    7. '(' → logprob: -11.053842544555664
    8. 'split' → logprob: -11.303842544555664
    9. '(n' → logprob: -11.553842544555664
    10. '():

' → logprob: -11.678842544555664

Token 83: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017925129504874349
    2. ')' → logprob: -7.3767924308776855
    3. '=' → logprob: -7.5017924308776855
    4. ',' → logprob: -8.251792907714844
    5. '):
' → logprob: -8.751792907714844
    6. ':' → logprob: -9.001792907714844
    7. ' ):' → logprob: -10.001792907714844
    8. '():' → logprob: -11.876792907714844
    9. '=None' → logprob: -12.376792907714844
    10. '   ' → logprob: -12.626792907714844

Token 84: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.10443200916051865
    2. '(' → logprob: -3.3544321060180664
    3. ':' → logprob: -4.229432106018066
    4. '():' → logprob: -4.354432106018066
    5. '   ' → logprob: -4.854432106018066
    6. 'def' → logprob: -4.979432106018066
    7. '(i' → logprob: -5.604432106018066
    8. ' :' → logprob: -5.854432106018066
    9. '(size' → logprob: -5.854432106018066
    10. '(lines' → logprob: -6.354432106018066

Token 85: ' """
' (ID: 7037)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.5428683757781982
    2. 'return' → logprob: -1.6678683757781982
    3. 'def' → logprob: -2.0428683757781982
    4. '(' → logprob: -2.2928683757781982
    5. ' return' → logprob: -2.2928683757781982
    6. '   ' → logprob: -2.6678683757781982
    7. ':' → logprob: -3.1678683757781982
    8. ':
' → logprob: -3.5428683757781982
    9. 'for' → logprob: -3.6678683757781982
    10. '(
' → logprob: -3.9178683757781982

Token 86: '   ' (ID: 271)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.08568849414587021
    2. '   ' → logprob: -2.835688591003418
    3. '"""' → logprob: -4.585688591003418
    4. 'Reads' → logprob: -4.710688591003418
    5. ' """
' → logprob: -6.085688591003418
    6. ' Reads' → logprob: -7.585688591003418
    7. 'Returns' → logprob: -8.210688591003418
    8. '""' → logprob: -8.335688591003418
    9. '"
' → logprob: -8.335688591003418
    10. 'def' → logprob: -8.710688591003418

Token 87: ' Reads' (ID: 88839)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.04848755523562431
    2. 'def' → logprob: -3.548487663269043
    3. ' """
' → logprob: -4.923487663269043
    4. 'Reads' (adapté à ' Reads') → logprob: -5.798487663269043
    5. '"""' → logprob: -5.923487663269043
    6. '   ' → logprob: -6.048487663269043
    7. 'return' → logprob: -7.173487663269043
    8. 'Returns' → logprob: -7.923487663269043
    9. '""' → logprob: -8.048487663269043
    10. 's' → logprob: -8.298487663269043

Token 88: ' '' (ID: 461)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.02010711096227169
    2. ' a' → logprob: -4.645107269287109
    3. ' ' → logprob: -5.520107269287109
    4. 'n' → logprob: -5.645107269287109
    5. '(n' → logprob: -6.145107269287109
    6. ' multiple' → logprob: -8.14510726928711
    7. 'a' → logprob: -9.14510726928711
    8. ' an' → logprob: -10.14510726928711
    9. ' [' → logprob: -10.27010726928711
    10. '[n' → logprob: -10.39510726928711

Token 89: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.25251564383506775
    2. ' n' → logprob: -1.5025156736373901
    3. ' ' → logprob: -8.62751579284668
    4. '
' → logprob: -9.25251579284668
    5. ')' → logprob: -9.25251579284668
    6. ' lines' → logprob: -9.87751579284668
    7. 'lines' → logprob: -10.37751579284668
    8. '   ' → logprob: -10.62751579284668
    9. ' multiple' → logprob: -11.50251579284668
    10. '  ' → logprob: -11.62751579284668

Token 90: ''' (ID: 6)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.03660111501812935
    2. ')' → logprob: -4.2866010665893555
    3. '()' → logprob: -5.0366010665893555
    4. ' strings' → logprob: -5.1616010665893555
    5. ' ' → logprob: -5.2866010665893555
    6. ' )' → logprob: -5.5366010665893555
    7. 'lines' → logprob: -8.661601066589355
    8. ' ()' → logprob: -8.911601066589355
    9. ' input' → logprob: -9.286601066589355
    10. ' line' → logprob: -9.661601066589355

Token 91: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.0045823766849935055
    2. ' ' → logprob: -5.754582405090332
    3. ' strings' → logprob: -6.629582405090332
    4. ' times' → logprob: -10.629582405090332
    5. 'lines' → logprob: -10.879582405090332
    6. ' line' → logprob: -11.504582405090332
    7. ' input' → logprob: -12.129582405090332
    8. ' )' → logprob: -13.004582405090332
    9. '()' → logprob: -13.129582405090332
    10. ')' → logprob: -13.254582405090332

Token 92: ' of' (ID: 328)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7462285161018372
    2. ' of' → logprob: -1.1212284564971924
    3. '(' → logprob: -2.1212284564971924
    4. 'of' → logprob: -3.1212284564971924
    5. '_of' → logprob: -4.1212286949157715
    6. '_' → logprob: -5.1212286949157715
    7. '(n' → logprob: -5.2462286949157715
    8. '   ' → logprob: -5.4962286949157715
    9. ' ' → logprob: -7.1212286949157715
    10. '```' → logprob: -7.3712286949157715

Token 93: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.022430775687098503
    2. 'input' → logprob: -4.397430896759033
    3. ' strings' → logprob: -4.647430896759033
    4. ' string' → logprob: -9.522430419921875
    5. ' inputs' → logprob: -9.897430419921875
    6. ' s' → logprob: -10.272430419921875
    7. ' code' → logprob: -10.772430419921875
    8. 's' → logprob: -10.897430419921875
    9. '()' → logprob: -11.147430419921875
    10. 'strings' → logprob: -11.272430419921875

Token 94: ',' (ID: 11)
  Prédit: ' as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.5758490562438965
    2. ' and' → logprob: -1.0758490562438965
    3. '()' → logprob: -2.7008490562438965
    4. '   ' → logprob: -4.7008490562438965
    5. ',' → logprob: -4.9508490562438965
    6. ' ()' → logprob: -5.5758490562438965
    7. 'as' → logprob: -5.8258490562438965
    8. 'and' → logprob: -6.2008490562438965
    9. ')' → logprob: -7.2008490562438965
    10. ' ' → logprob: -7.7008490562438965

Token 95: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.12274932116270065
    2. ' returning' → logprob: -2.8727493286132812
    3. ' and' → logprob: -3.7477493286132812
    4. ' collecting' → logprob: -4.372749328613281
    5. ' storing' → logprob: -4.747749328613281
    6. 'each' → logprob: -5.247749328613281
    7. ' returns' → logprob: -5.622749328613281
    8. '   ' → logprob: -6.372749328613281
    9. ' accumulating' → logprob: -7.247749328613281
    10. ' collects' → logprob: -7.372749328613281

Token 96: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.8027960062026978
    2. '   ' → logprob: -1.5527960062026978
    3. '()' → logprob: -2.177795886993408
    4. '=' → logprob: -2.927795886993408
    5. ' =' → logprob: -3.177795886993408
    6. ' with' → logprob: -3.427795886993408
    7. ' lines' → logprob: -4.052795886993408
    8. ' and' → logprob: -4.552795886993408
    9. ' a' → logprob: -4.802795886993408
    10. ' of' → logprob: -5.052795886993408

Token 97: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.023684948682785034
    2. ' strings' → logprob: -4.148684978485107
    3. 'a' → logprob: -4.898684978485107
    4. 's' → logprob: -9.89868450164795
    5. ' string' → logprob: -10.27368450164795
    6. ' input' → logprob: -10.27368450164795
    7. 'strings' → logprob: -10.52368450164795
    8. ' str' → logprob: -12.27368450164795
    9. ' s' → logprob: -12.64868450164795
    10. 'str' → logprob: -12.77368450164795

Token 98: ' string' (ID: 1621)
  Prédit: ' string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' string' → logprob: -0.4456135630607605
    2. ' list' → logprob: -1.0706136226654053
    3. 'string' → logprob: -5.195613384246826
    4. ' single' → logprob: -5.445613384246826
    5. ' str' → logprob: -5.445613384246826
    6. 'list' → logprob: -7.320613384246826
    7. ' line' → logprob: -8.070613861083984
    8. 's' → logprob: -8.320613861083984
    9. 'str' → logprob: -8.570613861083984
    10. ' separate' → logprob: -8.570613861083984

Token 99: '.

' (ID: 364)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.039124708622694016
    2. '   ' → logprob: -3.5391247272491455
    3. ' ()' → logprob: -5.039124488830566
    4. '()
' → logprob: -7.414124488830566
    5. '.' → logprob: -8.039124488830566
    6. 'def' → logprob: -8.039124488830566
    7. ')' → logprob: -8.039124488830566
    8. '(n' → logprob: -8.539124488830566
    9. '(' → logprob: -8.789124488830566
    10. '    ' → logprob: -9.039124488830566

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.886803359724581e-05
    2. '
' → logprob: -10.250079154968262
    3. ' return' → logprob: -11.375079154968262
    4. '    
' → logprob: -11.375079154968262
    5. ' ' → logprob: -11.750079154968262
    6. '```' → logprob: -13.125079154968262
    7. '    ' → logprob: -13.375079154968262
    8. '  
' → logprob: -13.750079154968262
    9. '[
' → logprob: -13.875079154968262
    10. '  ' → logprob: -14.000079154968262

Token 101: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045069798827171326
    2. '
' → logprob: -4.545069694519043
    3. ' return' → logprob: -4.670069694519043
    4. '```' → logprob: -5.420069694519043
    5. ' ' → logprob: -5.795069694519043
    6. ' 
' → logprob: -6.170069694519043
    7. ' lines' → logprob: -6.170069694519043
    8. '    
' → logprob: -6.295069694519043
    9. '"""
' → logprob: -6.420069694519043
    10. 'return' → logprob: -6.420069694519043

Token 102: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.843334436416626
    2. '(n' → logprob: -0.968334436416626
    3. '):' → logprob: -2.343334436416626
    4. '   ' → logprob: -2.593334436416626
    5. ')' → logprob: -5.468334197998047
    6. '):
' → logprob: -5.593334197998047
    7. '=' → logprob: -5.843334197998047
    8. ',' → logprob: -6.093334197998047
    9. ' (' → logprob: -6.593334197998047
    10. '[n' → logprob: -6.968334197998047

Token 103: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029566023498773575
    2. 'n' → logprob: -4.029565811157227
    3. ' n' → logprob: -4.529565811157227
    4. '       ' → logprob: -8.029565811157227
    5. '	n' → logprob: -9.154565811157227
    6. '(n' → logprob: -9.529565811157227
    7. '    
' → logprob: -10.654565811157227
    8. '  ' → logprob: -11.529565811157227
    9. '    ' → logprob: -11.779565811157227
    10. ' ' → logprob: -12.279565811157227

Token 104: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.057124216109514236
    2. ' n' → logprob: -2.932124137878418
    3. '   ' → logprob: -6.432124137878418
    4. 'int' → logprob: -7.432124137878418
    5. ' int' → logprob: -10.807124137878418
    6. '       ' → logprob: -11.932124137878418
    7. '
' → logprob: -12.557124137878418
    8. '	n' → logprob: -13.307124137878418
    9. ' ' → logprob: -13.432124137878418
    10. 'self' → logprob: -14.057124137878418

Token 105: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2837381660938263
    2. '):' → logprob: -1.408738136291504
    3. ':int' → logprob: -6.158738136291504
    4. ')' → logprob: -8.533738136291504
    5. 'int' → logprob: -9.783738136291504
    6. '>:' → logprob: -10.283738136291504
    7. ' ):' → logprob: -10.533738136291504
    8. '):
' → logprob: -10.658738136291504
    9. '<|end|>' → logprob: -10.783738136291504
    10. '=' → logprob: -10.908738136291504

Token 106: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.8961017202818766e-05
    2. ' int' → logprob: -9.750059127807617
    3. '   ' → logprob: -14.500059127807617
    4. ':int' → logprob: -16.625059127807617
    5. '):' → logprob: -17.375059127807617
    6. ')' → logprob: -17.750059127807617
    7. '```' → logprob: -18.125059127807617
    8. 'in' → logprob: -18.500059127807617
    9. '       ' → logprob: -19.125059127807617
    10. '):
' → logprob: -19.375059127807617

Token 107: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0062924339435994625
    2. '):
' → logprob: -5.131292343139648
    3. ')' → logprob: -8.256292343139648
    4. ':' → logprob: -10.381292343139648
    5. ' ):' → logprob: -10.506292343139648
    6. '   ' → logprob: -10.881292343139648
    7. '<|end|>' → logprob: -11.881292343139648
    8. '):

' → logprob: -12.256292343139648
    9. '
' → logprob: -12.256292343139648
    10. ' ' → logprob: -13.006292343139648

Token 108: ' Number' (ID: 9184)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.6199074387550354
    2. ' Number' → logprob: -1.6199073791503906
    3. ' The' → logprob: -1.7449073791503906
    4. 'Number' → logprob: -3.3699073791503906
    5. ' int' → logprob: -3.7449073791503906
    6. ')' → logprob: -4.744907379150391
    7. 'The' → logprob: -4.869907379150391
    8. '<|end|>' → logprob: -5.369907379150391
    9. ' ' → logprob: -5.494907379150391
    10. ' the' → logprob: -5.744907379150391

Token 109: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.0567697249352932
    2. '<|end|>' → logprob: -3.306769609451294
    3. ')' → logprob: -4.556769847869873
    4. ' ' → logprob: -5.681769847869873
    5. 'of' → logprob: -6.306769847869873
    6. '<|end|>' → logprob: -6.931769847869873
    7. '   ' → logprob: -7.431769847869873
    8. '  ' → logprob: -7.681769847869873
    9. ':' → logprob: -8.306769371032715
    10. '_of' → logprob: -9.681769371032715

Token 110: ' input' (ID: 3422)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.005287242121994495
    2. 'lines' → logprob: -5.255287170410156
    3. '<|end|>' → logprob: -10.880287170410156
    4. ')' → logprob: -11.505287170410156
    5. ' input' → logprob: -11.880287170410156
    6. '	lines' → logprob: -12.005287170410156
    7. ' times' → logprob: -12.880287170410156
    8. '(lines' → logprob: -13.005287170410156
    9. ' strings' → logprob: -13.380287170410156
    10. '_lines' → logprob: -13.505287170410156

Token 111: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.0017715697176754475
    2. 'lines' → logprob: -7.126771450042725
    3. '   ' → logprob: -8.126771926879883
    4. '(lines' → logprob: -8.501771926879883
    5. '_lines' → logprob: -8.626771926879883
    6. ')' → logprob: -9.126771926879883
    7. 's' → logprob: -10.001771926879883
    8. ' strings' → logprob: -10.376771926879883
    9. '	lines' → logprob: -10.501771926879883
    10. '()' → logprob: -10.876771926879883

Token 112: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1909758299589157
    2. ' to' → logprob: -2.6909759044647217
    3. ')' → logprob: -3.1909759044647217
    4. '):
' → logprob: -3.3159759044647217
    5. '):' → logprob: -4.190975666046143
    6. '
' → logprob: -4.565975666046143
    7. 'to' → logprob: -6.065975666046143
    8. 'def' → logprob: -8.6909761428833
    9. '```' → logprob: -9.0659761428833
    10. '):

' → logprob: -9.5659761428833

Token 113: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.007197550963610411
    2. 'read' → logprob: -5.132197380065918
    3. ' reads' → logprob: -7.257197380065918
    4. ' ' → logprob: -8.132197380065918
    5. ' return' → logprob: -9.382197380065918
    6. '   ' → logprob: -9.757197380065918
    7. '
' → logprob: -10.382197380065918
    8. '  ' → logprob: -11.007197380065918
    9. ' be' → logprob: -11.507197380065918
    10. '	read' → logprob: -11.507197380065918

Token 114: '.

' (ID: 364)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3082159161567688
    2. '):
' → logprob: -1.933215856552124
    3. '   ' → logprob: -2.308215856552124
    4. '):' → logprob: -3.933215856552124
    5. '
' → logprob: -6.808216094970703
    6. ')
' → logprob: -8.433216094970703
    7. '):

' → logprob: -9.183216094970703
    8. '```' → logprob: -10.933216094970703
    9. '):
' → logprob: -11.058216094970703
    10. ' ' → logprob: -11.183216094970703

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002770286286249757
    2. '
' → logprob: -6.50277042388916
    3. '    
' → logprob: -6.75277042388916
    4. '```' → logprob: -10.12777042388916
    5. 'Returns' → logprob: -11.37777042388916
    6. ')' → logprob: -11.87777042388916
    7. '  
' → logprob: -12.00277042388916
    8. ' 
' → logprob: -12.00277042388916
    9. 'return' → logprob: -12.25277042388916
    10. '    ' → logprob: -12.25277042388916

Token 116: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016474414616823196
    2. 'Returns' (adapté à ' Returns') → logprob: -4.89147424697876
    3. ' lines' → logprob: -6.26647424697876
    4. 'lines' → logprob: -6.39147424697876
    5. 'return' → logprob: -6.39147424697876
    6. ' return' → logprob: -6.64147424697876
    7. '"""
' → logprob: -7.64147424697876
    8. ' Returns' → logprob: -7.64147424697876
    9. 'Lines' → logprob: -8.141474723815918
    10. ' """
' → logprob: -8.516474723815918

Token 117: ':
' (ID: 734)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.4361502528190613
    2. '   ' → logprob: -1.686150312423706
    3. '[' → logprob: -2.686150312423706
    4. ' [
' → logprob: -2.686150312423706
    5. '[
' → logprob: -4.436150074005127
    6. '[List' → logprob: -4.436150074005127
    7. '[n' → logprob: -6.061150074005127
    8. '[list' → logprob: -6.186150074005127
    9. '    ' → logprob: -6.561150074005127
    10. '[str' → logprob: -7.686150074005127

Token 118: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12685565650463104
    2. ' [' → logprob: -2.3768556118011475
    3. '[' → logprob: -4.126855850219727
    4. ' [
' → logprob: -4.751855850219727
    5. '[
' → logprob: -7.001855850219727
    6. ' ['' → logprob: -8.876855850219727
    7. '[n' → logprob: -9.126855850219727
    8. '[str' → logprob: -9.251855850219727
    9. '[list' → logprob: -9.876855850219727
    10. '    ' → logprob: -9.876855850219727

Token 119: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.695927083492279
    2. 'list' (adapté à ' list') → logprob: -0.695927083492279
    3. '   ' → logprob: -6.320927143096924
    4. '[list' → logprob: -7.445927143096924
    5. 'List' → logprob: -8.070926666259766
    6. ' [' → logprob: -10.320926666259766
    7. '[List' → logprob: -11.070926666259766
    8. ' List' → logprob: -11.070926666259766
    9. '[' → logprob: -11.695926666259766
    10. '[str' → logprob: -13.195926666259766

Token 120: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -9.088346359931165e-07
    2. 'str' → logprob: -14.250000953674316
    3. '[
' → logprob: -16.5
    4. ' [' → logprob: -16.75
    5. '```' → logprob: -16.75
    6. '[' → logprob: -17.25
    7. '   ' → logprob: -17.625
    8. '[s' → logprob: -18.0
    9. '  ' → logprob: -19.0
    10. ' of' → logprob: -19.25

Token 121: ']:' (ID: 12433)
  Prédit: ']:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0008408344583585858
    2. ']' → logprob: -7.250840663909912
    3. '):' → logprob: -9.12584114074707
    4. ']:
' → logprob: -11.50084114074707
    5. '']:' → logprob: -12.37584114074707
    6. '"]:' → logprob: -12.50084114074707
    7. ']):' → logprob: -13.75084114074707
    8. '[' → logprob: -14.62584114074707
    9. ' ]' → logprob: -14.75084114074707
    10. ']:
' → logprob: -14.87584114074707

Token 122: ' List' (ID: 2655)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.23134446144104004
    2. '[input' → logprob: -1.85634446144104
    3. '[str' → logprob: -3.85634446144104
    4. '[' → logprob: -3.98134446144104
    5. '[n' → logprob: -5.356344223022461
    6. '[int' → logprob: -6.106344223022461
    7. '[line' → logprob: -6.606344223022461
    8. '[s' → logprob: -7.356344223022461
    9. '[List' → logprob: -7.981344223022461
    10. '[
' → logprob: -8.731344223022461

Token 123: ' containing' (ID: 15683)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.017294546589255333
    2. ' of' → logprob: -4.142294406890869
    3. '[' → logprob: -7.892294406890869
    4. '<|end|>' → logprob: -8.017294883728027
    5. '[
' → logprob: -8.267294883728027
    6. '   ' → logprob: -8.642294883728027
    7. '[int' → logprob: -10.017294883728027
    8. '```' → logprob: -11.517294883728027
    9. '[n' → logprob: -11.892294883728027
    10. 'of' → logprob: -11.892294883728027

Token 124: ' '' (ID: 461)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2049838751554489
    2. 'n' → logprob: -2.454983949661255
    3. ' the' → logprob: -2.954983949661255
    4. ' each' → logprob: -3.704983949661255
    5. ' input' → logprob: -4.329983711242676
    6. 's' → logprob: -5.829983711242676
    7. 'input' → logprob: -5.954983711242676
    8. 'each' → logprob: -6.829983711242676
    9. ' [' → logprob: -7.329983711242676
    10. 'the' → logprob: -7.454983711242676

Token 125: 'n' (ID: 77)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.807092547416687
    2. ' input' → logprob: -1.182092547416687
    3. ' n' → logprob: -2.4320926666259766
    4. 'n' → logprob: -2.6820926666259766
    5. ' each' → logprob: -3.5570926666259766
    6. ' the' → logprob: -3.9320926666259766
    7. 's' → logprob: -3.9320926666259766
    8. ' strings' → logprob: -5.182092666625977
    9. 'each' → logprob: -5.432092666625977
    10. 'the' → logprob: -5.557092666625977

Token 126: ''' (ID: 6)
  Prédit: ' strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' strings' → logprob: -0.37690433859825134
    2. ''' → logprob: -1.5019043684005737
    3. ' input' → logprob: -2.501904249191284
    4. ' lines' → logprob: -4.876904487609863
    5. 'input' → logprob: -7.751904487609863
    6. ')' → logprob: -8.126904487609863
    7. ' '' → logprob: -8.251904487609863
    8. '')' → logprob: -8.501904487609863
    9. ' string' → logprob: -9.001904487609863
    10. 'strings' → logprob: -9.501904487609863

Token 127: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.29446274042129517
    2. ' strings' → logprob: -1.5444626808166504
    3. 'input' → logprob: -3.6694626808166504
    4. ' lines' → logprob: -4.16946268081665
    5. 'strings' → logprob: -7.79446268081665
    6. '<|end|>' → logprob: -9.419463157653809
    7. 'lines' → logprob: -10.544463157653809
    8. 's' → logprob: -10.544463157653809
    9. ' ' → logprob: -10.919463157653809
    10. '_input' → logprob: -10.919463157653809

Token 128: ' strings' (ID: 18279)
  Prédit: ' strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' strings' → logprob: -0.4741862118244171
    2. ' lines' → logprob: -0.9741861820220947
    3. 'lines' → logprob: -10.224185943603516
    4. 'strings' → logprob: -10.474185943603516
    5. 's' → logprob: -11.224185943603516
    6. '_strings' → logprob: -11.724185943603516
    7. '_lines' → logprob: -11.849185943603516
    8. ' ' → logprob: -12.099185943603516
    9. '(strings' → logprob: -12.849185943603516
    10. ' s' → logprob: -13.599185943603516

Token 129: '.
' (ID: 558)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7871883511543274
    2. '   ' → logprob: -1.2871882915496826
    3. '
' → logprob: -2.0371882915496826
    4. ')' → logprob: -3.2871882915496826
    5. ' =' → logprob: -3.6621882915496826
    6. '()' → logprob: -3.6621882915496826
    7. '=' → logprob: -4.537188529968262
    8. '()
' → logprob: -4.912188529968262
    9. 'def' → logprob: -5.537188529968262
    10. '(n' → logprob: -5.537188529968262

Token 130: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00010187433508690447
    2. '    
' → logprob: -9.625102043151855
    3. '
' → logprob: -10.500102043151855
    4. ')' → logprob: -12.625102043151855
    5. ']' → logprob: -14.250102043151855
    6. '    ' → logprob: -14.625102043151855
    7. '   
' → logprob: -14.625102043151855
    8. '  
' → logprob: -14.625102043151855
    9. ')
' → logprob: -14.750102043151855
    10. '```' → logprob: -14.750102043151855

Token 131: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00041506090201437473
    2. '
' → logprob: -8.625414848327637
    3. ' return' → logprob: -9.000414848327637
    4. '    
' → logprob: -10.000414848327637
    5. '"""
' (adapté à ' """
') → logprob: -11.125414848327637
    6. 'return' → logprob: -11.250414848327637
    7. '```' → logprob: -11.875414848327637
    8. '[]
' → logprob: -12.000414848327637
    9. '    ' → logprob: -12.500414848327637
    10. ')' → logprob: -12.750414848327637

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010524559766054153
    2. ' return' → logprob: -5.135524749755859
    3. 'return' → logprob: -5.385524749755859
    4. '	return' → logprob: -13.76052474975586
    5. ' ' → logprob: -14.51052474975586
    6. '```' → logprob: -14.88552474975586
    7. '  ' → logprob: -15.51052474975586
    8. '[' → logprob: -15.76052474975586
    9. 'result' → logprob: -15.88552474975586
    10. '
' → logprob: -16.26052474975586

Token 133: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5034390687942505
    2. '   ' → logprob: -1.5034390687942505
    3. ' return' → logprob: -1.7534390687942505
    4. 'result' → logprob: -11.878438949584961
    5. '	return' → logprob: -14.253438949584961
    6. ' result' → logprob: -14.378438949584961
    7. ' ' → logprob: -14.628438949584961
    8. '```' → logprob: -15.253438949584961
    9. '  ' → logprob: -15.378438949584961
    10. '    ' → logprob: -15.503438949584961

Token 134: ' [' (ID: 723)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.0026332074776291847
    2. ' [' → logprob: -6.502633094787598
    3. '[' → logprob: -7.002633094787598
    4. '[s' → logprob: -8.877633094787598
    5. '[int' → logprob: -10.002633094787598
    6. '[str' → logprob: -11.502633094787598
    7. '[line' → logprob: -12.127633094787598
    8. '[item' → logprob: -12.502633094787598
    9. '[in' → logprob: -13.002633094787598
    10. '[i' → logprob: -13.127633094787598

Token 135: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0018291724845767021
    2. 's' → logprob: -6.376829147338867
    3. ' input' → logprob: -9.001829147338867
    4. '(input' → logprob: -13.251829147338867
    5. '   ' → logprob: -14.501829147338867
    6. '_input' → logprob: -15.126829147338867
    7. '<input' → logprob: -15.501829147338867
    8. '	input' → logprob: -15.501829147338867
    9. ' s' → logprob: -15.626829147338867
    10. '
' → logprob: -16.126829147338867

Token 136: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.4121114822482923e-06
    2. '().' → logprob: -13.125003814697266
    3. ' ()' → logprob: -14.250003814697266
    4. '()]' → logprob: -15.000003814697266
    5. '()
' → logprob: -15.125003814697266
    6. '（）' → logprob: -16.750003814697266
    7. '(' → logprob: -17.125003814697266
    8. '()

' → logprob: -19.250003814697266
    9. '()`' → logprob: -19.625003814697266
    10. 'for' → logprob: -19.625003814697266

Token 137: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0004481885116547346
    2. 'for' → logprob: -8.000448226928711
    3. ' for' → logprob: -9.125448226928711
    4. ' ()' → logprob: -12.750448226928711
    5. '().' → logprob: -15.375448226928711
    6. ' ' → logprob: -15.500448226928711
    7. '()
' → logprob: -15.625448226928711
    8. ')' → logprob: -15.875448226928711
    9. '(' → logprob: -16.12544822692871
    10. '   ' → logprob: -16.87544822692871

Token 138: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.11201998591423035
    2. '_' → logprob: -2.9870200157165527
    3. ' range' → logprob: -2.9870200157165527
    4. ' ' → logprob: -5.362020015716553
    5. 'range' → logprob: -7.987020015716553
    6. '_range' → logprob: -10.237019538879395
    7. ' in' → logprob: -11.612019538879395
    8. ' i' → logprob: -11.737019538879395
    9. ' n' → logprob: -11.987019538879395
    10. ' xrange' → logprob: -12.737019538879395

Token 139: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0010894970037043095
    2. 'in' → logprob: -7.126089572906494
    3. ' range' → logprob: -9.001089096069336
    4. ' ' → logprob: -9.376089096069336
    5. 'range' → logprob: -9.501089096069336
    6. ' _' → logprob: -14.001089096069336
    7. ' n' → logprob: -14.126089096069336
    8. 'n' → logprob: -15.251089096069336
    9. '  ' → logprob: -15.626089096069336
    10. ' i' → logprob: -17.001089096069336

Token 140: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931570768356323
    2. 'range' → logprob: -0.6931570768356323
    3. ' ' → logprob: -12.443157196044922
    4. '	range' → logprob: -12.943157196044922
    5. '(range' → logprob: -13.943157196044922
    6. ' ran' → logprob: -14.068157196044922
    7. 'rang' → logprob: -15.193157196044922
    8. '   ' → logprob: -15.193157196044922
    9. ' xrange' → logprob: -15.318157196044922
    10. 'ran' → logprob: -15.568157196044922

Token 141: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0015093892579898238
    2. '(' → logprob: -6.501509189605713
    3. ' (' → logprob: -12.501509666442871
    4. '(
' → logprob: -12.751509666442871
    5. ' n' → logprob: -15.501509666442871
    6. 'n' → logprob: -15.626509666442871
    7. '(

' → logprob: -18.751508712768555
    8. ')n' → logprob: -18.876508712768555
    9. ')' → logprob: -19.376508712768555
    10. ']' → logprob: -19.626508712768555

Token 142: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.47757811343763e-05
    2. ' )' → logprob: -10.500044822692871
    3. ')' → logprob: -11.500044822692871
    4. ')]
' → logprob: -12.875044822692871
    5. ']' → logprob: -13.125044822692871
    6. '()' → logprob: -14.000044822692871
    7. '())' → logprob: -14.625044822692871
    8. ' ' → logprob: -15.125044822692871
    9. '(' → logprob: -15.125044822692871
    10. '()]' → logprob: -15.125044822692871

Token 143: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7861730456352234
    2. '<|end|>' → logprob: -0.7861730456352234
    3. 'def' → logprob: -3.536173105239868
    4. '()' → logprob: -3.661173105239868
    5. '

' → logprob: -4.411172866821289
    6. '(
' → logprob: -4.911172866821289
    7. '(' → logprob: -5.286172866821289
    8. '()
' → logprob: -5.536172866821289
    9. '


' → logprob: -6.411172866821289
    10. '```' → logprob: -6.536172866821289

Token 144: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.13388703338569e-06
    2. 'd' → logprob: -12.375009536743164
    3. '```' → logprob: -12.875009536743164
    4. '
' → logprob: -13.875009536743164
    5. ' def' → logprob: -15.000009536743164
    6. 'ndef' → logprob: -15.500009536743164
    7. '(' → logprob: -15.750009536743164
    8. '(def' → logprob: -16.000009536743164
    9. '0' → logprob: -16.375009536743164
    10. '#' → logprob: -16.750009536743164

Token 145: ' s' (ID: 265)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12008841335773468
    2. 's' → logprob: -2.2450883388519287
    3. ' i' → logprob: -5.370088577270508
    4. 'n' → logprob: -7.370088577270508
    5. ' s' → logprob: -7.370088577270508
    6. 'l' → logprob: -7.620088577270508
    7. 'int' → logprob: -9.120088577270508
    8. 'si' → logprob: -9.245088577270508
    9. 'ints' → logprob: -9.370088577270508
    10. 'in' → logprob: -9.370088577270508

Token 146: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5072870850563049
    2. '1' → logprob: -1.3822870254516602
    3. 'l' → logprob: -2.50728702545166
    4. 'n' → logprob: -3.75728702545166
    5. 'a' → logprob: -4.13228702545166
    6. 's' → logprob: -4.63228702545166
    7. 'v' → logprob: -5.50728702545166
    8. '_list' → logprob: -6.25728702545166
    9. '2' → logprob: -6.50728702545166
    10. 'm' → logprob: -6.75728702545166

Token 147: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3982388973236084
    2. '():
' → logprob: -1.7732388973236084
    3. '(n' → logprob: -1.8982388973236084
    4. '()' → logprob: -4.7732391357421875
    5. 'n' → logprob: -9.273239135742188
    6. '(s' → logprob: -10.148239135742188
    7. '(k' → logprob: -10.273239135742188
    8. ' ():' → logprob: -10.398239135742188
    9. '():
' → logprob: -10.648239135742188
    10. '(m' → logprob: -10.773239135742188

Token 148: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0032181181013584137
    2. '):
' → logprob: -5.753218173980713
    3. ')' → logprob: -10.878217697143555
    4. '(n' → logprob: -12.003217697143555
    5. '():' → logprob: -12.128217697143555
    6. ' ):' → logprob: -12.378217697143555
    7. ':' → logprob: -12.753217697143555
    8. ']:' → logprob: -14.003217697143555
    9. '):
' → logprob: -14.753217697143555
    10. '=' → logprob: -15.253217697143555

Token 149: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0005558936391025782
    2. '   ' → logprob: -8.250555992126465
    3. '(' → logprob: -8.750555992126465
    4. ':' → logprob: -10.125555992126465
    5. 'n' → logprob: -10.250555992126465
    6. '(
' → logprob: -10.875555992126465
    7. ' (' → logprob: -11.375555992126465
    8. ':
' → logprob: -11.750555992126465
    9. 'def' → logprob: -12.000555992126465
    10. '():
' → logprob: -12.000555992126465

Token 150: ' """
' (ID: 7037)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3598773181438446
    2. '   ' → logprob: -1.734877347946167
    3. '"""
' (adapté à ' """
') → logprob: -2.484877347946167
    4. 'n' → logprob: -3.859877347946167
    5. 'def' → logprob: -4.109877109527588
    6. '"""' → logprob: -6.859877109527588
    7. '(
' → logprob: -7.109877109527588
    8. '(' → logprob: -7.734877109527588
    9. '
' → logprob: -7.984877109527588
    10. ' ' → logprob: -8.109877586364746

Token 151: '   ' (ID: 271)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.006743674166500568
    2. '   ' → logprob: -5.131743907928467
    3. 'Reads' → logprob: -7.756743907928467
    4. '"""' → logprob: -8.506743431091309
    5. ' """
' → logprob: -9.131743431091309
    6. '"
' → logprob: -9.881743431091309
    7. '"' → logprob: -11.881743431091309
    8. ' ' → logprob: -12.756743431091309
    9. '"""
' → logprob: -12.756743431091309
    10. '""' → logprob: -13.131743431091309

Token 152: ' Reads' (ID: 88839)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.8324008584022522
    2. 'Reads' (adapté à ' Reads') → logprob: -0.9574008584022522
    3. 'def' → logprob: -2.0824007987976074
    4. '   ' → logprob: -3.8324007987976074
    5. 'Returns' → logprob: -4.082400798797607
    6. 'return' → logprob: -4.332400798797607
    7. ' Reads' → logprob: -6.582400798797607
    8. '
' → logprob: -7.207400798797607
    9. '"""' → logprob: -7.707400798797607
    10. 'Read' → logprob: -7.832400798797607

Token 153: ' '' (ID: 461)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.31341418623924255
    2. '(n' → logprob: -1.438414216041565
    3. ' n' → logprob: -4.688414096832275
    4. ''' → logprob: -5.063414096832275
    5. ''n' → logprob: -5.188414096832275
    6. 'a' → logprob: -5.563414096832275
    7. 's' → logprob: -5.813414096832275
    8. 'list' → logprob: -6.813414096832275
    9. '[n' → logprob: -8.063414573669434
    10. '_' → logprob: -8.188414573669434

Token 154: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004159245174378157
    2. ' n' → logprob: -5.504159450531006
    3. '(n' → logprob: -11.004158973693848
    4. 's' → logprob: -11.754158973693848
    5. 'line' → logprob: -11.754158973693848
    6. ''' → logprob: -12.129158973693848
    7. ''n' → logprob: -12.254158973693848
    8. '_n' → logprob: -12.504158973693848
    9. 'input' → logprob: -12.504158973693848
    10. '3' → logprob: -12.504158973693848

Token 155: ''' (ID: 6)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2226564884185791
    2. ' lines' → logprob: -1.972656488418579
    3. '(n' → logprob: -3.847656488418579
    4. ' ()' → logprob: -4.09765625
    5. '_lines' → logprob: -4.72265625
    6. ' (' → logprob: -6.09765625
    7. '(' → logprob: -6.34765625
    8. ' ' → logprob: -6.47265625
    9. 'lines' → logprob: -6.59765625
    10. ' line' → logprob: -6.59765625

Token 156: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.003232256043702364
    2. 'lines' → logprob: -5.753232479095459
    3. ' ' → logprob: -11.0032320022583
    4. ' strings' → logprob: -11.2532320022583
    5. ' line' → logprob: -11.6282320022583
    6. '_lines' → logprob: -12.1282320022583
    7. ' spaces' → logprob: -13.2532320022583
    8. '	lines' → logprob: -13.5032320022583
    9. ' space' → logprob: -13.6282320022583
    10. 'line' → logprob: -14.1282320022583

Token 157: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.00631647789850831
    2. 'of' → logprob: -5.631316661834717
    3. '   ' → logprob: -6.256316661834717
    4. 'def' → logprob: -7.506316661834717
    5. ',' → logprob: -10.006316184997559
    6. '()' → logprob: -10.256316184997559
    7. '	of' → logprob: -10.631316184997559
    8. ' ' → logprob: -10.881316184997559
    9. '[]' → logprob: -11.006316184997559
    10. '
' → logprob: -11.256316184997559

Token 158: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.16143225133419037
    2. 'input' → logprob: -1.9114322662353516
    3. 's' → logprob: -7.661432266235352
    4. 'def' → logprob: -8.286432266235352
    5. ' code' → logprob: -8.661432266235352
    6. 'a' → logprob: -9.411432266235352
    7. ' strings' → logprob: -9.536432266235352
    8. ' a' → logprob: -10.411432266235352
    9. 'strings' → logprob: -11.161432266235352
    10. 'str' → logprob: -11.411432266235352

Token 159: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09233349561691284
    2. ' and' → logprob: -2.8423335552215576
    3. ' as' → logprob: -4.2173333168029785
    4. 'and' → logprob: -4.3423333168029785
    5. 'as' → logprob: -7.3423333168029785
    6. ' each' → logprob: -7.7173333168029785
    7. '   ' → logprob: -8.092333793640137
    8. 'each' → logprob: -9.092333793640137
    9. ' ,' → logprob: -9.342333793640137
    10. 'Each' → logprob: -9.467333793640137

Token 160: ' splitting' (ID: 87130)
  Prédit: ' each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.26027777791023254
    2. 'each' → logprob: -1.5102777481079102
    3. ' splitting' → logprob: -5.76027774810791
    4. '   ' → logprob: -6.26027774810791
    5. 'spl' → logprob: -6.51027774810791
    6. ' splits' → logprob: -6.88527774810791
    7. 's' → logprob: -8.26027774810791
    8. ' and' → logprob: -9.01027774810791
    9. 'split' → logprob: -9.01027774810791
    10. 'Each' → logprob: -9.88527774810791

Token 161: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.22587096691131592
    2. 'each' → logprob: -1.600870966911316
    3. 'Each' → logprob: -8.725871086120605
    4. ' them' → logprob: -9.600871086120605
    5. '   ' → logprob: -9.850871086120605
    6. '(each' → logprob: -10.100871086120605
    7. ' ' → logprob: -10.975871086120605
    8. '=' → logprob: -11.225871086120605
    9. '_each' → logprob: -11.225871086120605
    10. ' into' → logprob: -11.225871086120605

Token 162: ' line' (ID: 2543)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3232491612434387
    2. ' into' → logprob: -1.448249101638794
    3. ' line' → logprob: -5.073249340057373
    4. ' ()' → logprob: -5.198249340057373
    5. ' each' → logprob: -5.198249340057373
    6. 'line' → logprob: -5.323249340057373
    7. 'each' → logprob: -5.948249340057373
    8. ')' → logprob: -6.073249340057373
    9. 'into' → logprob: -6.073249340057373
    10. '   ' → logprob: -6.073249340057373

Token 163: ' into' (ID: 1511)
  Prédit: ' into'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' into' → logprob: -0.06611085683107376
    2. 'into' → logprob: -3.066110849380493
    3. '()' → logprob: -4.441111087799072
    4. '   ' → logprob: -6.316111087799072
    5. 'def' → logprob: -7.191111087799072
    6. ' ' → logprob: -7.941111087799072
    7. '=lambda' → logprob: -7.941111087799072
    8. ')' → logprob: -8.066110610961914
    9. '()
' → logprob: -8.566110610961914
    10. '=' → logprob: -8.566110610961914

Token 164: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.0328199528157711
    2. ' lists' → logprob: -4.157819747924805
    3. 'a' → logprob: -4.407819747924805
    4. ' strings' → logprob: -6.157819747924805
    5. ' list' → logprob: -6.782819747924805
    6. 'list' → logprob: -7.157819747924805
    7. ' tokens' → logprob: -8.657819747924805
    8. 'lists' → logprob: -8.907819747924805
    9. 'strings' → logprob: -9.657819747924805
    10. 'tokens' → logprob: -10.657819747924805

Token 165: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.2812037169933319
    2. 'list' → logprob: -1.4062037467956543
    3. 's' → logprob: -11.156203269958496
    4. '   ' → logprob: -11.781203269958496
    5. ' lists' → logprob: -12.156203269958496
    6. 'lists' → logprob: -12.656203269958496
    7. '```' → logprob: -12.781203269958496
    8. ')' → logprob: -12.781203269958496
    9. 'string' → logprob: -12.906203269958496
    10. ' ' → logprob: -12.906203269958496

Token 166: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28491657972335815
    2. ' of' → logprob: -1.784916639328003
    3. '[str' → logprob: -3.284916639328003
    4. '[' → logprob: -3.659916639328003
    5. 'of' → logprob: -4.534916400909424
    6. '[]' → logprob: -5.659916400909424
    7. '    ' → logprob: -7.409916400909424
    8. '```' → logprob: -7.409916400909424
    9. 'def' → logprob: -7.909916400909424
    10. '    
' → logprob: -8.284916877746582

Token 167: ' strings' (ID: 18279)
  Prédit: ' strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' strings' → logprob: -0.253946989774704
    2. 'strings' → logprob: -1.5039470195770264
    3. 'str' → logprob: -6.378946781158447
    4. 's' → logprob: -9.003947257995605
    5. '[str' → logprob: -9.128947257995605
    6. 'tokens' → logprob: -10.128947257995605
    7. 'string' → logprob: -10.753947257995605
    8. '(strings' → logprob: -11.753947257995605
    9. ' tokens' → logprob: -12.378947257995605
    10. ' str' → logprob: -12.503947257995605

Token 168: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014176084659993649
    2. 'def' → logprob: -4.639175891876221
    3. ',' → logprob: -6.514175891876221
    4. '.' → logprob: -6.764175891876221
    5. '.
' → logprob: -7.389175891876221
    6. ',
' → logprob: -7.889175891876221
    7. '(n' → logprob: -8.014176368713379
    8. '
' → logprob: -8.889176368713379
    9. '(
' → logprob: -9.639176368713379
    10. '(' → logprob: -10.139176368713379

Token 169: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07714688032865524
    2. 'def' → logprob: -3.4521467685699463
    3. '
' → logprob: -3.7021467685699463
    4. '<|end|>' → logprob: -4.577147006988525
    5. '    
' → logprob: -5.577147006988525
    6. '<|end|>' → logprob: -6.952147006988525
    7. ' def' → logprob: -7.327147006988525
    8. '(n' → logprob: -7.952147006988525
    9. '(' → logprob: -7.952147006988525
    10. ')' → logprob: -8.202146530151367

Token 170: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6994727253913879
    2. 'Args' (adapté à ' Args') → logprob: -0.6994727253913879
    3. ' Args' → logprob: -5.824472904205322
    4. 'Returns' → logprob: -6.324472904205322
    5. '
' → logprob: -7.574472904205322
    6. '    
' → logprob: -7.824472904205322
    7. 'args' → logprob: -7.949472904205322
    8. 'def' → logprob: -9.449472427368164
    9. '```' → logprob: -10.074472427368164
    10. '"""
' → logprob: -10.324472427368164

Token 171: ':
' (ID: 734)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.09798285365104675
    2. '   ' → logprob: -3.597982883453369
    3. '):
' → logprob: -3.972982883453369
    4. ':' → logprob: -4.097982883453369
    5. '(' → logprob: -4.722982883453369
    6. '       ' → logprob: -5.097982883453369
    7. '):' → logprob: -5.222982883453369
    8. ' (' → logprob: -5.847982883453369
    9. '(
' → logprob: -5.972982883453369
    10. '```' → logprob: -6.847982883453369

Token 172: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5768901109695435
    2. '   ' → logprob: -0.8268901109695435
    3. 'n' → logprob: -7.201889991760254
    4. '    ' → logprob: -9.951889991760254
    5. '     ' → logprob: -9.951889991760254
    6. 'def' → logprob: -10.451889991760254
    7. ' n' → logprob: -10.451889991760254
    8. '      ' → logprob: -10.951889991760254
    9. '
' → logprob: -11.951889991760254
    10. '  ' → logprob: -12.076889991760254

Token 173: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.03714882582426071
    2. ' n' → logprob: -3.5371487140655518
    3. '   ' → logprob: -4.912148952484131
    4. '       ' → logprob: -11.537148475646973
    5. '	n' → logprob: -13.287148475646973
    6. ' ' → logprob: -13.662148475646973
    7. '
' → logprob: -14.162148475646973
    8. '  ' → logprob: -14.787148475646973
    9. '    ' → logprob: -15.037148475646973
    10. '_n' → logprob: -16.53714942932129

Token 174: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.00041637211688794196
    2. ')' → logprob: -8.62541675567627
    3. '(int' → logprob: -9.00041675567627
    4. '<|end|>' → logprob: -9.37541675567627
    5. ':' → logprob: -11.37541675567627
    6. '<|end|>' → logprob: -12.25041675567627
    7. '=int' → logprob: -12.75041675567627
    8. ' ' → logprob: -13.00041675567627
    9. ':int' → logprob: -14.00041675567627
    10. '[int' → logprob: -14.12541675567627

Token 175: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: 0.0
    2. ')' → logprob: -17.375
    3. ' int' → logprob: -18.5
    4. '[int' → logprob: -18.625
    5. '(int' → logprob: -19.0
    6. '
' → logprob: -20.0
    7. '   ' → logprob: -20.125
    8. '=int' → logprob: -21.375
    9. '```' → logprob: -21.375
    10. 'def' → logprob: -22.125

Token 176: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013325021136552095
    2. ':' → logprob: -7.0013322830200195
    3. '):
' → logprob: -8.25133228302002
    4. ')' → logprob: -9.75133228302002
    5. '   ' → logprob: -10.00133228302002
    6. ':int' → logprob: -10.62633228302002
    7. '```' → logprob: -12.00133228302002
    8. '(int' → logprob: -12.25133228302002
    9. '[int' → logprob: -12.25133228302002
    10. ' ):' → logprob: -12.75133228302002

Token 177: ' Number' (ID: 9184)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4745848774909973
    2. 'int' → logprob: -0.9745848774909973
    3. '   ' → logprob: -8.349584579467773
    4. '(int' → logprob: -9.349584579467773
    5. 'Number' → logprob: -9.724584579467773
    6. ' ' → logprob: -9.974584579467773
    7. ' Number' → logprob: -11.474584579467773
    8. '       ' → logprob: -11.599584579467773
    9. ' number' → logprob: -11.599584579467773
    10. '    ' → logprob: -11.599584579467773

Token 178: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5521118640899658
    2. '):
' → logprob: -1.8021118640899658
    3. '   ' → logprob: -2.302111864089966
    4. ':' → logprob: -2.552111864089966
    5. '):' → logprob: -3.177111864089966
    6. '=' → logprob: -4.802111625671387
    7. '=int' → logprob: -5.302111625671387
    8. ' (' → logprob: -5.427111625671387
    9. ' of' → logprob: -5.802111625671387
    10. '(n' → logprob: -5.927111625671387

Token 179: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.04460511729121208
    2. ' lines' → logprob: -3.794605016708374
    3. 'input' → logprob: -3.919605016708374
    4. '<|end|>' → logprob: -7.294605255126953
    5. 'lines' → logprob: -8.294605255126953
    6. ' tokens' → logprob: -9.419605255126953
    7. 's' → logprob: -10.294605255126953
    8. ' inputs' → logprob: -10.419605255126953
    9. '<|end|>' → logprob: -10.419605255126953
    10. '=input' → logprob: -10.794605255126953

Token 180: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.008790534920990467
    2. 'lines' → logprob: -4.758790493011475
    3. '_lines' → logprob: -8.883790969848633
    4. '	lines' → logprob: -11.258790969848633
    5. '(lines' → logprob: -11.508790969848633
    6. ' ' → logprob: -12.133790969848633
    7. '   ' → logprob: -12.883790969848633
    8. ')' → logprob: -13.508790969848633
    9. '
' → logprob: -13.758790969848633
    10. 's' → logprob: -14.133790969848633

Token 181: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.02774732932448387
    2. '   ' → logprob: -4.40274715423584
    3. 'to' → logprob: -4.90274715423584
    4. ')' → logprob: -5.15274715423584
    5. '):
' → logprob: -7.02774715423584
    6. '):' → logprob: -7.52774715423584
    7. 'def' → logprob: -8.15274715423584
    8. ':' → logprob: -9.77774715423584
    9. '<|end|>' → logprob: -10.02774715423584
    10. ',' → logprob: -10.90274715423584

Token 182: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.252154141664505
    2. 'read' → logprob: -1.5021541118621826
    3. ' range' → logprob: -9.127154350280762
    4. ' ' → logprob: -9.377154350280762
    5. '   ' → logprob: -11.127154350280762
    6. '  ' → logprob: -12.127154350280762
    7. 'range' → logprob: -12.627154350280762
    8. '_read' → logprob: -13.002154350280762
    9. ')' → logprob: -13.627154350280762
    10. ' reads' → logprob: -13.877154350280762

Token 183: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5033732056617737
    2. '
' → logprob: -2.003373146057129
    3. '):
' → logprob: -2.003373146057129
    4. '):' → logprob: -3.003373146057129
    5. ')' → logprob: -3.128373146057129
    6. '

' → logprob: -5.003373146057129
    7. '):

' → logprob: -5.128373146057129
    8. 'def' → logprob: -5.253373146057129
    9. '.' → logprob: -5.378373146057129
    10. '.
' → logprob: -5.628373146057129

Token 184: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10413267463445663
    2. '
' → logprob: -2.354132652282715
    3. 'Returns' → logprob: -5.729132652282715
    4. '    
' → logprob: -7.604132652282715
    5. '```' → logprob: -9.604132652282715
    6. '"""
' → logprob: -10.479132652282715
    7. ' Returns' → logprob: -11.354132652282715
    8. 'Return' → logprob: -11.479132652282715
    9. 'def' → logprob: -11.729132652282715
    10. '``' → logprob: -11.854132652282715

Token 185: ' Returns' (ID: 9609)
  Prédit: 'Returns'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Returns' (adapté à ' Returns') → logprob: -0.1660349816083908
    2. '
' → logprob: -1.9160349369049072
    3. '   ' → logprob: -5.416035175323486
    4. ' Returns' → logprob: -6.666035175323486
    5. ' ' → logprob: -10.291034698486328
    6. '
' → logprob: -11.541034698486328
    7. '    
' → logprob: -11.916034698486328
    8. 'returns' → logprob: -12.041034698486328
    9. '```' → logprob: -12.041034698486328
    10. '"""
' → logprob: -12.666034698486328

Token 186: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28981801867485046
    2. '[' → logprob: -2.414818048477173
    3. '[
' → logprob: -2.789818048477173
    4. '[list' → logprob: -3.539818048477173
    5. '       ' → logprob: -3.664818048477173
    6. ' [' → logprob: -4.164817810058594
    7. ' [
' → logprob: -4.664817810058594
    8. ':' → logprob: -5.414817810058594
    9. ':
' → logprob: -5.539817810058594
    10. '[List' → logprob: -5.664817810058594

Token 187: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005330282263457775
    2. ' list' → logprob: -5.6303300857543945
    3. '   ' → logprob: -7.0053300857543945
    4. 'list' → logprob: -7.3803300857543945
    5. '[list' → logprob: -8.630330085754395
    6. '[' → logprob: -12.130330085754395
    7. '
' → logprob: -12.630330085754395
    8. '	list' → logprob: -13.130330085754395
    9. '           ' → logprob: -13.380330085754395
    10. ':list' → logprob: -13.505330085754395

Token 188: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.07896535843610764
    2. ' list' → logprob: -2.578965425491333
    3. '   ' → logprob: -9.578965187072754
    4. '       ' → logprob: -13.203965187072754
    5. '[list' → logprob: -13.328965187072754
    6. 'List' → logprob: -13.453965187072754
    7. '```' → logprob: -14.078965187072754
    8. '
' → logprob: -14.828965187072754
    9. '	list' → logprob: -15.953965187072754
    10. ' ' → logprob: -16.95396614074707

Token 189: '[list' (ID: 141696)
  Prédit: '[list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -8.947715832618997e-05
    2. '[List' → logprob: -9.375089645385742
    3. '[str' → logprob: -13.250089645385742
    4. 'list' → logprob: -13.625089645385742
    5. '[' → logprob: -14.125089645385742
    6. '[
' → logprob: -15.250089645385742
    7. '```' → logprob: -15.375089645385742
    8. '   ' → logprob: -16.000089645385742
    9. '
' → logprob: -16.125089645385742
    10. '[[' → logprob: -16.750089645385742

Token 190: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -5.512236498361744e-07
    2. 'str' → logprob: -14.750000953674316
    3. '[' → logprob: -16.5
    4. '   ' → logprob: -18.125
    5. '[
' → logprob: -18.375
    6. '[int' → logprob: -19.375
    7. '```' → logprob: -19.75
    8. '	str' → logprob: -19.75
    9. ']' → logprob: -19.875
    10. '[list' → logprob: -20.0

Token 191: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.0006527475197799504
    2. ']]:
' → logprob: -7.62565279006958
    3. ']' → logprob: -9.500652313232422
    4. ']:' → logprob: -9.625652313232422
    5. ']]]' → logprob: -11.875652313232422
    6. ']):' → logprob: -12.250652313232422
    7. '[' → logprob: -12.750652313232422
    8. ']],' → logprob: -13.625652313232422
    9. ']]

' → logprob: -13.625652313232422
    10. ']>' → logprob: -13.750652313232422

Token 192: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11409620195627213
    2. '   ' → logprob: -3.114096164703369
    3. ']:' → logprob: -3.239096164703369
    4. ']' → logprob: -4.364096164703369
    5. ':
' → logprob: -4.739096164703369
    6. ']:
' → logprob: -6.864096164703369
    7. '):' → logprob: -7.114096164703369
    8. '```' → logprob: -8.739096641540527
    9. '[' → logprob: -9.239096641540527
    10. '):
' → logprob: -9.489096641540527

Token 193: ' List' (ID: 2655)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.0681486427783966
    2. '[' → logprob: -3.818148612976074
    3. '[line' → logprob: -4.068148612976074
    4. '[list' → logprob: -4.568148612976074
    5. '[List' → logprob: -5.068148612976074
    6. '[input' → logprob: -5.693148612976074
    7. '   ' → logprob: -5.943148612976074
    8. '[str' → logprob: -6.443148612976074
    9. '[
' → logprob: -7.693148612976074
    10. '[s' → logprob: -7.943148612976074

Token 194: ' containing' (ID: 15683)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.3829721212387085
    2. '[' → logprob: -1.8829721212387085
    3. '[List' → logprob: -2.632972240447998
    4. '[
' → logprob: -3.132972240447998
    5. ' of' → logprob: -3.507972240447998
    6. '[list' → logprob: -4.382972240447998
    7. '   ' → logprob: -6.132972240447998
    8. '[int' → logprob: -6.757972240447998
    9. '[line' → logprob: -6.882972240447998
    10. 'of' → logprob: -7.132972240447998

Token 195: ' '' (ID: 461)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.20579008758068085
    2. '[n' → logprob: -2.4557900428771973
    3. ' n' → logprob: -3.3307900428771973
    4. '   ' → logprob: -3.7057900428771973
    5. ' the' → logprob: -4.080790042877197
    6. ' lists' → logprob: -5.455790042877197
    7. 'n' → logprob: -5.705790042877197
    8. ' each' → logprob: -6.455790042877197
    9. ' '' → logprob: -6.580790042877197
    10. '[' → logprob: -6.580790042877197

Token 196: 'n' (ID: 77)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.6359230279922485
    2. 'n' → logprob: -1.2609230279922485
    3. 'list' → logprob: -1.8859230279922485
    4. '[list' → logprob: -4.260922908782959
    5. '[s' → logprob: -5.385922908782959
    6. '['' → logprob: -5.635922908782959
    7. '[input' → logprob: -5.760922908782959
    8. 's' → logprob: -6.010922908782959
    9. '[line' → logprob: -6.760922908782959
    10. 'input' → logprob: -6.885922908782959

Token 197: ''' (ID: 6)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.11950627714395523
    2. '[str' → logprob: -3.494506359100342
    3. '[List' → logprob: -3.494506359100342
    4. '[input' → logprob: -3.994506359100342
    5. '[line' → logprob: -4.494506359100342
    6. ']' → logprob: -4.869506359100342
    7. '[' → logprob: -5.244506359100342
    8. '[
' → logprob: -5.869506359100342
    9. ' lists' → logprob: -6.369506359100342
    10. ' of' → logprob: -6.869506359100342

Token 198: ' lists' (ID: 19471)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6228999495506287
    2. ' lists' → logprob: -1.3729000091552734
    3. '[input' → logprob: -2.2479000091552734
    4. ' [' → logprob: -2.9979000091552734
    5. 'input' → logprob: -3.8729000091552734
    6. ' split' → logprob: -4.747900009155273
    7. '[' → logprob: -5.122900009155273
    8. 's' → logprob: -5.247900009155273
    9. ' lines' → logprob: -5.997900009155273
    10. 'split' → logprob: -5.997900009155273

Token 199: ' of' (ID: 328)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.05066736415028572
    2. ' of' → logprob: -3.1756672859191895
    3. 'of' → logprob: -5.8006672859191895
    4. '   ' → logprob: -5.8006672859191895
    5. '[' → logprob: -6.8006672859191895
    6. '[
' → logprob: -8.925667762756348
    7. '[list' → logprob: -8.925667762756348
    8. '[List' → logprob: -9.925667762756348
    9. 'Of' → logprob: -10.425667762756348
    10. '[int' → logprob: -10.800667762756348

Token 200: ' split' (ID: 12648)
  Prédit: ' strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' strings' → logprob: -0.10146784037351608
    2. '[str' → logprob: -3.1014678478240967
    3. 'str' → logprob: -3.7264678478240967
    4. ' str' → logprob: -4.101467609405518
    5. 'strings' → logprob: -4.601467609405518
    6. 's' → logprob: -8.476468086242676
    7. ' strs' → logprob: -8.476468086242676
    8. ' lists' → logprob: -8.976468086242676
    9. ' input' → logprob: -9.476468086242676
    10. '(str' → logprob: -10.226468086242676

Token 201: ' strings' (ID: 18279)
  Prédit: ' strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' strings' → logprob: -0.07215487211942673
    2. ' input' → logprob: -3.5721547603607178
    3. 'strings' → logprob: -4.072154998779297
    4. '[str' → logprob: -4.322154998779297
    5. 'input' → logprob: -5.197154998779297
    6. 's' → logprob: -6.447154998779297
    7. '(strings' → logprob: -6.697154998779297
    8. '[input' → logprob: -6.822154998779297
    9. '(input' → logprob: -7.072154998779297
    10. '   ' → logprob: -8.572154998779297

Token 202: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11841678619384766
    2. ']' → logprob: -2.7434167861938477
    3. '.' → logprob: -3.3684167861938477
    4. '.
' → logprob: -5.118416786193848
    5. ']
' → logprob: -5.243416786193848
    6. '.]' → logprob: -8.118416786193848
    7. ' for' → logprob: -8.493416786193848
    8. '(n' → logprob: -8.868416786193848
    9. '()]' → logprob: -8.993416786193848
    10. ',' → logprob: -9.118416786193848

Token 203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.114600834436715e-05
    2. '```' → logprob: -9.625091552734375
    3. '"""
' → logprob: -11.375091552734375
    4. '"""' → logprob: -12.000091552734375
    5. '
' → logprob: -12.125091552734375
    6. ')' → logprob: -14.625091552734375
    7. ']' → logprob: -15.000091552734375
    8. '``' → logprob: -15.000091552734375
    9. ')
' → logprob: -15.125091552734375
    10. 'def' → logprob: -15.375091552734375

Token 204: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.6934557505883276e-05
    2. '"""' → logprob: -11.000057220458984
    3. '```' → logprob: -11.125057220458984
    4. ']' → logprob: -11.625057220458984
    5. '"""
' (adapté à ' """
') → logprob: -11.625057220458984
    6. '
' → logprob: -12.625057220458984
    7. ')' → logprob: -13.000057220458984
    8. 'def' → logprob: -14.375057220458984
    9. ']
' → logprob: -14.750057220458984
    10. ')
' → logprob: -15.125057220458984

Token 205: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014257407747209072
    2. 'return' → logprob: -4.264257431030273
    3. ' return' → logprob: -9.389257431030273
    4. 'def' → logprob: -11.764257431030273
    5. '```' → logprob: -13.014257431030273
    6. '
' → logprob: -15.639257431030273
    7. '	return' → logprob: -15.764257431030273
    8. '    
' → logprob: -18.389257431030273
    9. 'result' → logprob: -18.764257431030273
    10. ' ' → logprob: -19.014257431030273

Token 206: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00044556602369993925
    2. ' return' → logprob: -7.750445365905762
    3. '   ' → logprob: -11.125445365905762
    4. 'result' → logprob: -15.750445365905762
    5. '```' → logprob: -17.625446319580078
    6. 'def' → logprob: -17.750446319580078
    7. '
' → logprob: -17.875446319580078
    8. ')' → logprob: -18.875446319580078
    9. 'ret' → logprob: -19.250446319580078
    10. ' ' → logprob: -19.625446319580078

Token 207: ' [' (ID: 723)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.01139568816870451
    2. ' [' → logprob: -4.511395454406738
    3. '[' → logprob: -8.011395454406738
    4. '[s' → logprob: -11.886395454406738
    5. '[[' → logprob: -12.886395454406738
    6. '[int' → logprob: -13.136395454406738
    7. '[line' → logprob: -13.636395454406738
    8. '[item' → logprob: -14.261395454406738
    9. '[array' → logprob: -14.261395454406738
    10. '[list' → logprob: -14.261395454406738

Token 208: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.3306015716807451e-05
    2. 's' → logprob: -11.37501335144043
    3. ' input' → logprob: -13.25001335144043
    4. '<input' → logprob: -16.87501335144043
    5. '(input' → logprob: -16.87501335144043
    6. '
' → logprob: -18.62501335144043
    7. '[input' → logprob: -18.62501335144043
    8. 'in' → logprob: -18.75001335144043
    9. '_input' → logprob: -19.12501335144043
    10. '   ' → logprob: -19.12501335144043

Token 209: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.318681188422488e-05
    2. '()' → logprob: -11.25001335144043
    3. '()
' → logprob: -16.37501335144043
    4. ' ().' → logprob: -17.75001335144043
    5. '(' → logprob: -19.00001335144043
    6. '.' → logprob: -19.62501335144043
    7. '()].' → logprob: -20.00001335144043
    8. '().
' → logprob: -21.25001335144043
    9. '.split' → logprob: -21.37501335144043
    10. '()

' → logprob: -21.50001335144043

Token 210: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.128163257315464e-07
    2. 'strip' → logprob: -15.75
    3. ' split' → logprob: -15.875
    4. 'spl' → logprob: -18.5
    5. '(split' → logprob: -19.25
    6. 'plit' → logprob: -20.0
    7. 's' → logprob: -21.0
    8. '.split' → logprob: -21.25
    9. 'rstrip' → logprob: -21.25
    10. '```' → logprob: -21.625

Token 211: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.558399319241289e-05
    2. '()]' → logprob: -10.750025749206543
    3. '())' → logprob: -13.375025749206543
    4. ' ()' → logprob: -13.500025749206543
    5. '()
' → logprob: -14.000025749206543
    6. '(' → logprob: -15.500025749206543
    7. ')' → logprob: -16.875024795532227
    8. 'for' → logprob: -17.500024795532227
    9. '()`' → logprob: -17.875024795532227
    10. '（）' → logprob: -18.125024795532227

Token 212: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10772829502820969
    2. '()' → logprob: -2.8577282428741455
    3. ' for' → logprob: -3.1077282428741455
    4. '(n' → logprob: -11.482728004455566
    5. ')' → logprob: -11.857728004455566
    6. '   ' → logprob: -12.607728004455566
    7. ']' → logprob: -12.982728004455566
    8. ' ()' → logprob: -13.232728004455566
    9. ' ' → logprob: -14.107728004455566
    10. '	for' → logprob: -14.232728004455566

Token 213: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03046891838312149
    2. ' _' → logprob: -3.5304689407348633
    3. ' range' → logprob: -7.280468940734863
    4. 'range' → logprob: -10.530468940734863
    5. '_range' → logprob: -13.405468940734863
    6. ' ' → logprob: -14.280468940734863
    7. ' in' → logprob: -15.405468940734863
    8. ' _
' → logprob: -15.655468940734863
    9. ' ' → logprob: -16.280467987060547
    10. '_
' → logprob: -16.780467987060547

Token 214: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018158255144953728
    2. ' range' → logprob: -4.018158435821533
    3. ' in' → logprob: -11.768157958984375
    4. 'in' → logprob: -14.643157958984375
    5. '(range' → logprob: -16.018157958984375
    6. ' ' → logprob: -17.518157958984375
    7. '	range' → logprob: -18.393157958984375
    8. '   ' → logprob: -18.643157958984375
    9. 'ran' → logprob: -18.893157958984375
    10. '  ' → logprob: -19.018157958984375

Token 215: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004078639671206474
    2. ' range' → logprob: -5.5040788650512695
    3. '(range' → logprob: -16.254077911376953
    4. ' ' → logprob: -17.504077911376953
    5. '	range' → logprob: -18.254077911376953
    6. '   ' → logprob: -18.629077911376953
    7. '
' → logprob: -18.629077911376953
    8. 'n' → logprob: -18.879077911376953
    9. 'rang' → logprob: -19.004077911376953
    10. 'r' → logprob: -19.504077911376953

Token 216: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.742448022123426e-05
    2. 'n' → logprob: -9.750067710876465
    3. '(' → logprob: -11.625067710876465
    4. ' n' → logprob: -16.00006675720215
    5. ' (' → logprob: -16.62506675720215
    6. '(
' → logprob: -18.50006675720215
    7. '	n' → logprob: -21.00006675720215
    8. '   ' → logprob: -21.87506675720215
    9. '_n' → logprob: -22.12506675720215
    10. ')n' → logprob: -22.75006675720215

Token 217: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -9.253090865968261e-06
    2. ']' → logprob: -12.625009536743164
    3. ')]
' → logprob: -12.875009536743164
    4. '()]' → logprob: -13.000009536743164
    5. '(n' → logprob: -15.125009536743164
    6. '()' → logprob: -15.125009536743164
    7. ')' → logprob: -16.000009536743164
    8. 'n' → logprob: -16.125009536743164
    9. '())' → logprob: -16.500009536743164
    10. '')]' → logprob: -16.750009536743164

Token 218: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13938133418560028
    2. '

' → logprob: -2.7643814086914062
    3. 'def' → logprob: -3.3893814086914062
    4. '<|end|>' → logprob: -3.5143814086914062
    5. '


' → logprob: -6.014381408691406
    6. '```' → logprob: -7.889381408691406
    7. '#' → logprob: -8.889381408691406
    8. '()' → logprob: -9.264381408691406
    9. '(' → logprob: -9.264381408691406
    10. '<|end|>' → logprob: -9.264381408691406

Token 219: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.666993507067673e-05
    2. 'd' → logprob: -10.250036239624023
    3. '
' → logprob: -13.750036239624023
    4. '```' → logprob: -15.875036239624023
    5. '#' → logprob: -18.000036239624023
    6. 'de' → logprob: -18.375036239624023
    7. ' def' → logprob: -18.625036239624023
    8. '    
' → logprob: -19.750036239624023
    9. '

' → logprob: -19.875036239624023
    10. '  
' → logprob: -20.250036239624023

Token 220: ' s' (ID: 265)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0929640680551529
    2. 's' → logprob: -2.4679641723632812
    3. 'n' → logprob: -6.217964172363281
    4. ' i' → logprob: -6.717964172363281
    5. ' s' → logprob: -8.217964172363281
    6. 'int' → logprob: -8.842964172363281
    7. 'd' → logprob: -9.467964172363281
    8. 'v' → logprob: -9.592964172363281
    9. 'l' → logprob: -9.967964172363281
    10. '_i' → logprob: -10.092964172363281

Token 221: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0011792739387601614
    2. 'n' → logprob: -7.001179218292236
    3. 'i' → logprob: -9.251179695129395
    4. '```' → logprob: -10.376179695129395
    5. 'int' → logprob: -10.376179695129395
    6. 'def' → logprob: -10.501179695129395
    7. '0' → logprob: -10.876179695129395
    8. '(n' → logprob: -11.501179695129395
    9. 's' → logprob: -11.751179695129395
    10. 'I' → logprob: -12.126179695129395

Token 222: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.052243102341890335
    2. '():' → logprob: -3.3022429943084717
    3. '():
' → logprob: -4.427243232727051
    4. '()' → logprob: -6.552243232727051
    5. '(s' → logprob: -8.67724323272705
    6. '(line' → logprob: -8.67724323272705
    7. '(size' → logprob: -10.17724323272705
    8. '(separator' → logprob: -10.30224323272705
    9. '(m' → logprob: -10.42724323272705
    10. 'n' → logprob: -10.55224323272705

Token 223: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38712021708488464
    2. '):
' → logprob: -1.137120246887207
    3. ',' → logprob: -9.512120246887207
    4. '(n' → logprob: -9.887120246887207
    5. ' ):' → logprob: -9.887120246887207
    6. ')' → logprob: -10.262120246887207
    7. '):
' → logprob: -11.012120246887207
    8. ':' → logprob: -12.137120246887207
    9. ' ):
' → logprob: -12.637120246887207
    10. ',n' → logprob: -12.887120246887207

Token 224: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013228937052190304
    2. '"""
' → logprob: -5.138228893280029
    3. 'def' → logprob: -5.263228893280029
    4. '(n' → logprob: -7.263228893280029
    5. '
' → logprob: -7.513228893280029
    6. '"""' → logprob: -8.013229370117188
    7. ':
' → logprob: -9.138229370117188
    8. '#' → logprob: -9.388229370117188
    9. ':' → logprob: -9.638229370117188
    10. '():
' → logprob: -10.138229370117188

Token 225: ' """
' (ID: 7037)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' (adapté à ' """
') → logprob: -0.0013146435376256704
    2. '   ' → logprob: -7.501314640045166
    3. '"""' → logprob: -7.751314640045166
    4. 'def' → logprob: -8.251315116882324
    5. ' """
' → logprob: -10.501315116882324
    6. '
' → logprob: -11.626315116882324
    7. '"
' → logprob: -11.876315116882324
    8. '"' → logprob: -12.001315116882324
    9. '"""

' → logprob: -12.376315116882324
    10. '"""
' → logprob: -12.626315116882324

Token 226: '   ' (ID: 271)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.03064119443297386
    2. '   ' → logprob: -3.5306410789489746
    3. 'Reads' → logprob: -7.530641078948975
    4. '"""' → logprob: -8.030641555786133
    5. ' """
' → logprob: -11.030641555786133
    6. '
' → logprob: -12.780641555786133
    7. '"""
' → logprob: -13.030641555786133
    8. '"""

' → logprob: -13.655641555786133
    9. ''''
' → logprob: -13.655641555786133
    10. '"
' → logprob: -13.780641555786133

Token 227: ' Reads' (ID: 88839)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.26113519072532654
    2. '"""
' → logprob: -2.0111351013183594
    3. 'Reads' (adapté à ' Reads') → logprob: -2.8861351013183594
    4. 'return' → logprob: -3.3861351013183594
    5. 'Returns' → logprob: -5.636135101318359
    6. '
' → logprob: -6.886135101318359
    7. '"""' → logprob: -7.511135101318359
    8. 'from' → logprob: -8.26113510131836
    9. 's' → logprob: -8.63613510131836
    10. '   ' → logprob: -9.01113510131836

Token 228: ' '' (ID: 461)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5439611673355103
    2. ''n' → logprob: -1.2939611673355103
    3. ' n' → logprob: -2.2939610481262207
    4. ''' → logprob: -3.6689610481262207
    5. ' '' → logprob: -4.543961048126221
    6. '(n' → logprob: -5.293961048126221
    7. 's' → logprob: -7.043961048126221
    8. ''s' → logprob: -8.043961524963379
    9. ''''
' → logprob: -8.293961524963379
    10. ' s' → logprob: -8.668961524963379

Token 229: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00011212585377506912
    2. ' n' → logprob: -9.125112533569336
    3. 'def' → logprob: -13.500112533569336
    4. '4' → logprob: -14.500112533569336
    5. '(n' → logprob: -15.250112533569336
    6. 'int' → logprob: -15.375112533569336
    7. '[n' → logprob: -15.500112533569336
    8. 's' → logprob: -15.625112533569336
    9. '
' → logprob: -15.750112533569336
    10. 'input' → logprob: -16.625112533569336

Token 230: ''' (ID: 6)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.4451780319213867
    2. '(n' → logprob: -1.1951780319213867
    3. '_lines' → logprob: -3.8201780319213867
    4. ')' → logprob: -4.070178031921387
    5. '()' → logprob: -5.695178031921387
    6. 'lines' → logprob: -5.945178031921387
    7. ' (' → logprob: -6.195178031921387
    8. '(lines' → logprob: -6.820178031921387
    9. ' ' → logprob: -7.320178031921387
    10. ' integers' → logprob: -7.320178031921387

Token 231: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.23690271377563477
    2. 'lines' → logprob: -1.6119027137756348
    3. '_lines' → logprob: -4.736902713775635
    4. '()' → logprob: -6.611902713775635
    5. 'n' → logprob: -8.486902236938477
    6. '(n' → logprob: -8.736902236938477
    7. 's' → logprob: -8.986902236938477
    8. 'def' → logprob: -9.111902236938477
    9. 'tokens' → logprob: -9.111902236938477
    10. ' lists' → logprob: -9.361902236938477

Token 232: ' of' (ID: 328)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.43764224648475647
    2. 'of' → logprob: -1.687642216682434
    3. ' of' → logprob: -2.1876423358917236
    4. 'def' → logprob: -2.9376423358917236
    5. ',' → logprob: -7.0626420974731445
    6. '```' → logprob: -7.3126420974731445
    7. '   ' → logprob: -7.6876420974731445
    8. '
' → logprob: -8.062642097473145
    9. '()' → logprob: -8.187642097473145
    10. 's' → logprob: -8.312642097473145

Token 233: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20161381363868713
    2. ' input' → logprob: -1.7016137838363647
    3. 'n' → logprob: -9.201613426208496
    4. 's' → logprob: -10.201613426208496
    5. 'a' → logprob: -10.826613426208496
    6. ' a' → logprob: -12.076613426208496
    7. 'int' → logprob: -12.326613426208496
    8. ' n' → logprob: -12.701613426208496
    9. 'def' → logprob: -12.701613426208496
    10. 'strings' → logprob: -12.701613426208496

Token 234: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004840677138417959
    2. 'def' → logprob: -6.004840850830078
    3. 'and' → logprob: -7.129840850830078
    4. '   ' → logprob: -7.629840850830078
    5. ',
' → logprob: -8.254840850830078
    6. '(n' → logprob: -8.504840850830078
    7. ',n' → logprob: -9.004840850830078
    8. ' and' → logprob: -9.004840850830078
    9. 'with' → logprob: -9.504840850830078
    10. 'as' → logprob: -9.754840850830078

Token 235: ' converts' (ID: 64809)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5035379528999329
    2. '   ' → logprob: -1.753537893295288
    3. ' return' → logprob: -2.753537893295288
    4. '
' → logprob: -2.878537893295288
    5. 'def' → logprob: -3.003537893295288
    6. 'split' → logprob: -3.628537893295288
    7. 's' → logprob: -5.003538131713867
    8. '"""
' → logprob: -5.753538131713867
    9. ' returns' → logprob: -5.878538131713867
    10. 'spl' → logprob: -5.878538131713867

Token 236: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.7124043107032776
    2. 'each' → logprob: -0.7124043107032776
    3. ' them' → logprob: -4.087404251098633
    4. 'them' → logprob: -6.337404251098633
    5. ' input' → logprob: -8.087404251098633
    6. 'input' → logprob: -9.837404251098633
    7. ' the' → logprob: -10.087404251098633
    8. 'the' → logprob: -10.337404251098633
    9. '(each' → logprob: -10.837404251098633
    10. '```' → logprob: -11.212404251098633

Token 237: ' line' (ID: 2543)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5965325236320496
    2. ' into' → logprob: -1.9715325832366943
    3. 'to' → logprob: -2.2215325832366943
    4. '```' → logprob: -3.4715325832366943
    5. 'each' → logprob: -3.4715325832366943
    6. '   ' → logprob: -3.8465325832366943
    7. 'def' → logprob: -3.8465325832366943
    8. 'input' → logprob: -4.221532344818115
    9. 'line' → logprob: -4.221532344818115
    10. ' each' → logprob: -4.471532344818115

Token 238: ' to' (ID: 316)
  Prédit: 'into'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'into' → logprob: -0.498545378446579
    2. ' into' → logprob: -1.3735454082489014
    3. 'to' → logprob: -2.8735454082489014
    4. '()' → logprob: -2.9985454082489014
    5. ' to' → logprob: -4.248545169830322
    6. '   ' → logprob: -4.248545169830322
    7. 'def' → logprob: -6.748545169830322
    8. '
' → logprob: -7.123545169830322
    9. 'int' → logprob: -7.123545169830322
    10. '```' → logprob: -8.24854564666748

Token 239: ' a' (ID: 261)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.7072438597679138
    2. 'int' → logprob: -1.2072439193725586
    3. '[int' → logprob: -2.0822439193725586
    4. ' list' → logprob: -3.0822439193725586
    5. 'a' → logprob: -3.8322439193725586
    6. ' int' → logprob: -5.207243919372559
    7. ' a' → logprob: -5.332243919372559
    8. 'ints' → logprob: -7.332243919372559
    9. '[list' → logprob: -7.332243919372559
    10. '[str' → logprob: -7.457243919372559

Token 240: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5970180630683899
    2. ' list' → logprob: -0.8470180630683899
    3. 'int' → logprob: -4.597018241882324
    4. '[int' → logprob: -4.597018241882324
    5. '   ' → logprob: -8.597018241882324
    6. '[list' → logprob: -8.847018241882324
    7. '[' → logprob: -9.472018241882324
    8. '[n' → logprob: -9.472018241882324
    9. 'string' → logprob: -10.472018241882324
    10. 'List' → logprob: -10.972018241882324

Token 241: ' of' (ID: 328)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.8508206009864807
    2. '   ' → logprob: -1.100820541381836
    3. ' of' → logprob: -1.850820541381836
    4. 'of' → logprob: -3.225820541381836
    5. '()' → logprob: -4.100820541381836
    6. '[' → logprob: -4.975820541381836
    7. '
' → logprob: -5.225820541381836
    8. '[]' → logprob: -5.600820541381836
    9. '```' → logprob: -5.975820541381836
    10. '[str' → logprob: -6.475820541381836

Token 242: ' characters' (ID: 9862)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.09886863827705383
    2. 'ints' → logprob: -2.7238686084747314
    3. 'list' → logprob: -4.3488688468933105
    4. 'str' → logprob: -4.7238688468933105
    5. ' int' → logprob: -6.2238688468933105
    6. '[int' → logprob: -6.7238688468933105
    7. 'strings' → logprob: -6.8488688468933105
    8. 'inte' → logprob: -7.0988688468933105
    9. ' ints' → logprob: -7.3488688468933105
    10. ' list' → logprob: -7.3488688468933105

Token 243: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07620101422071457
    2. '(n' → logprob: -2.9512009620666504
    3. 'def' → logprob: -4.32620096206665
    4. 'for' → logprob: -5.82620096206665
    5. '(' → logprob: -6.57620096206665
    6. ' for' → logprob: -6.82620096206665
    7. ',' → logprob: -6.95120096206665
    8. '.' → logprob: -7.45120096206665
    9. '(
' → logprob: -8.701201438903809
    10. '.
' → logprob: -9.076201438903809

Token 244: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005101414280943573
    2. '
' → logprob: -8.250510215759277
    3. '    
' → logprob: -9.125510215759277
    4. 'def' → logprob: -9.625510215759277
    5. '```' → logprob: -10.375510215759277
    6. '<|end|>' → logprob: -10.500510215759277
    7. '  
' → logprob: -12.000510215759277
    8. '  ' → logprob: -13.625510215759277
    9. ')' → logprob: -13.625510215759277
    10. '"""
' → logprob: -13.750510215759277

Token 245: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.933173426659778e-05
    2. 'def' → logprob: -9.875069618225098
    3. 'return' → logprob: -11.250069618225098
    4. '```' → logprob: -13.125069618225098
    5. '
' → logprob: -13.375069618225098
    6. ' return' → logprob: -14.375069618225098
    7. '"""
' → logprob: -15.250069618225098
    8. '  ' → logprob: -15.625069618225098
    9. ' ' → logprob: -16.62506866455078
    10. '"""' → logprob: -17.50006866455078

Token 246: ':
' (ID: 734)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.15539132058620453
    2. '   ' → logprob: -2.155391216278076
    3. 'def' → logprob: -4.155391216278076
    4. '       ' → logprob: -5.030391216278076
    5. '```' → logprob: -6.530391216278076
    6. ' (' → logprob: -6.655391216278076
    7. '):
' → logprob: -7.155391216278076
    8. '(
' → logprob: -7.155391216278076
    9. '(' → logprob: -7.405391216278076
    10. ':
' → logprob: -8.530391693115234

Token 247: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015314750373363495
    2. '   ' → logprob: -4.76531457901001
    3. 'n' → logprob: -5.01531457901001
    4. ' n' → logprob: -10.390315055847168
    5. '(n' → logprob: -11.890315055847168
    6. '     ' → logprob: -13.265315055847168
    7. '    ' → logprob: -14.265315055847168
    8. 'def' → logprob: -14.765315055847168
    9. '	n' → logprob: -14.890315055847168
    10. '      ' → logprob: -15.140315055847168

Token 248: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.014170442707836628
    2. ' n' → logprob: -4.2641706466674805
    3. '   ' → logprob: -11.88917064666748
    4. '
' → logprob: -17.764169692993164
    5. '_n' → logprob: -18.764169692993164
    6. '	n' → logprob: -19.264169692993164
    7. 'def' → logprob: -19.764169692993164
    8. '    ' → logprob: -20.264169692993164
    9. '       ' → logprob: -20.514169692993164
    10. 's' → logprob: -20.889169692993164

Token 249: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -3.833878508885391e-05
    2. '(int' → logprob: -10.625038146972656
    3. ')' → logprob: -11.875038146972656
    4. '<|end|>' → logprob: -12.500038146972656
    5. ':' → logprob: -13.250038146972656
    6. '```' → logprob: -14.500038146972656
    7. '   ' → logprob: -15.500038146972656
    8. '
' → logprob: -15.875038146972656
    9. '(' → logprob: -16.125038146972656
    10. '<|end|>' → logprob: -16.250038146972656

Token 250: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.9361264946837764e-07
    2. ' int' → logprob: -16.625
    3. '[int' → logprob: -19.625
    4. '(int' → logprob: -20.875
    5. '=int' → logprob: -21.25
    6. ':int' → logprob: -22.125
    7. '   ' → logprob: -22.125
    8. ')' → logprob: -22.125
    9. '
' → logprob: -22.625
    10. '<int' → logprob: -23.0

Token 251: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01524467021226883
    2. ':' → logprob: -4.390244483947754
    3. '):
' → logprob: -6.015244483947754
    4. '   ' → logprob: -8.515244483947754
    5. ':int' → logprob: -10.390244483947754
    6. '):

' → logprob: -11.515244483947754
    7. ')' → logprob: -11.765244483947754
    8. '**' → logprob: -11.890244483947754
    9. 'def' → logprob: -12.015244483947754
    10. 'int' → logprob: -12.265244483947754

Token 252: ' Number' (ID: 9184)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3717072308063507
    2. ' int' → logprob: -1.6217072010040283
    3. '   ' → logprob: -2.3717072010040283
    4. '       ' → logprob: -4.121707439422607
    5. ' n' → logprob: -7.121707439422607
    6. 'n' → logprob: -7.371707439422607
    7. 'Number' → logprob: -7.496707439422607
    8. ' ' → logprob: -7.621707439422607
    9. '    ' → logprob: -7.996707439422607
    10. 'def' → logprob: -9.24670696258545

Token 253: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.6527712941169739
    2. '   ' → logprob: -1.152771234512329
    3. 'of' → logprob: -2.277771234512329
    4. ')' → logprob: -4.027771472930908
    5. ':' → logprob: -4.277771472930908
    6. '(n' → logprob: -5.152771472930908
    7. '_of' → logprob: -5.652771472930908
    8. '       ' → logprob: -5.652771472930908
    9. 'Of' → logprob: -5.652771472930908
    10. '=' → logprob: -6.027771472930908

Token 254: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.007457899395376444
    2. ' lines' → logprob: -5.382457733154297
    3. 'input' → logprob: -5.882457733154297
    4. 'lines' → logprob: -10.632457733154297
    5. '<|end|>' → logprob: -11.632457733154297
    6. 'Input' → logprob: -13.257457733154297
    7. ' ' → logprob: -13.382457733154297
    8. ' rows' → logprob: -13.632457733154297
    9. '=input' → logprob: -13.632457733154297
    10. 'n' → logprob: -13.882457733154297

Token 255: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.5366716384887695
    2. 'lines' → logprob: -0.9116716384887695
    3. '_lines' → logprob: -5.2866716384887695
    4. '   ' → logprob: -5.4116716384887695
    5. ')' → logprob: -6.1616716384887695
    6. '(lines' → logprob: -6.7866716384887695
    7. '	lines' → logprob: -7.5366716384887695
    8. 'Lines' → logprob: -10.28667163848877
    9. '-lines' → logprob: -11.03667163848877
    10. '  ' → logprob: -11.03667163848877

Token 256: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2146269530057907
    2. ' to' → logprob: -2.3396270275115967
    3. 'to' → logprob: -3.3396270275115967
    4. 'def' → logprob: -3.7146270275115967
    5. ')' → logprob: -4.089626789093018
    6. '):
' → logprob: -4.214626789093018
    7. '):' → logprob: -5.964626789093018
    8. '  ' → logprob: -7.089626789093018
    9. '
' → logprob: -7.214626789093018
    10. 'To' → logprob: -8.214627265930176

Token 257: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.126930832862854
    2. 'read' → logprob: -2.1269307136535645
    3. '_read' → logprob: -13.626931190490723
    4. ' range' → logprob: -14.001931190490723
    5. ' ' → logprob: -15.751931190490723
    6. '
' → logprob: -16.001930236816406
    7. ' reads' → logprob: -16.376930236816406
    8. ' reading' → logprob: -16.501930236816406
    9. 'range' → logprob: -16.751930236816406
    10. ' input' → logprob: -16.876930236816406

Token 258: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02723969705402851
    2. '
' → logprob: -4.152239799499512
    3. '):
' → logprob: -5.027239799499512
    4. 'def' → logprob: -6.402239799499512
    5. ')' → logprob: -6.777239799499512
    6. ')
' → logprob: -7.402239799499512
    7. '):

' → logprob: -8.152239799499512
    8. '.
' → logprob: -8.402239799499512
    9. '):' → logprob: -8.777239799499512
    10. '    
' → logprob: -8.902239799499512

Token 259: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.963691804325208e-05
    2. 'Returns' → logprob: -11.375029563903809
    3. '
' → logprob: -11.500029563903809
    4. 'def' → logprob: -12.500029563903809
    5. '```' → logprob: -12.875029563903809
    6. 'return' → logprob: -14.250029563903809
    7. '"""
' → logprob: -14.500029563903809
    8. '    
' → logprob: -15.250029563903809
    9. 'Return' → logprob: -15.875029563903809
    10. '       ' → logprob: -16.250030517578125

Token 260: ' Returns' (ID: 9609)
  Prédit: 'Returns'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Returns' (adapté à ' Returns') → logprob: -0.07906384021043777
    2. '   ' → logprob: -2.579063892364502
    3. '
' → logprob: -9.079063415527344
    4. ' Returns' → logprob: -10.704063415527344
    5. 'returns' → logprob: -11.329063415527344
    6. 'Return' → logprob: -11.579063415527344
    7. '"""
' → logprob: -11.704063415527344
    8. ' ' → logprob: -12.829063415527344
    9. '```' → logprob: -13.204063415527344
    10. 'return' → logprob: -13.454063415527344

Token 261: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5186238884925842
    2. '   ' → logprob: -1.0186238288879395
    3. ':' → logprob: -3.1436238288879395
    4. '):
' → logprob: -9.018624305725098
    5. '=' → logprob: -9.268624305725098
    6. '       ' → logprob: -9.893624305725098
    7. ':list' → logprob: -9.893624305725098
    8. '[' → logprob: -10.643624305725098
    9. '[
' → logprob: -11.018624305725098
    10. '=list' → logprob: -11.268624305725098

Token 262: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02087409608066082
    2. '       ' → logprob: -4.0208740234375
    3. ' list' → logprob: -6.3958740234375
    4. 'list' → logprob: -7.0208740234375
    5. '[list' → logprob: -9.3958740234375
    6. '
' → logprob: -10.1458740234375
    7. '    ' → logprob: -11.5208740234375
    8. 'List' → logprob: -12.1458740234375
    9. '```' → logprob: -12.1458740234375
    10. '[' → logprob: -12.5208740234375

Token 263: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -7.52919222577475e-05
    2. ' list' → logprob: -9.500075340270996
    3. '   ' → logprob: -15.125075340270996
    4. '[list' → logprob: -16.25007438659668
    5. 'List' → logprob: -17.75007438659668
    6. '```' → logprob: -20.12507438659668
    7. '       ' → logprob: -21.12507438659668
    8. '	list' → logprob: -22.12507438659668
    9. '
' → logprob: -22.62507438659668
    10. '`' → logprob: -22.75007438659668

Token 264: '[list' (ID: 141696)
  Prédit: '[list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -3.2617008400848135e-05
    2. '[List' → logprob: -10.500032424926758
    3. '[str' → logprob: -12.250032424926758
    4. '[' → logprob: -15.875032424926758
    5. '[[' → logprob: -16.375032424926758
    6. 'list' → logprob: -17.000032424926758
    7. '[
' → logprob: -17.750032424926758
    8. '```' → logprob: -17.875032424926758
    9. '(list' → logprob: -18.000032424926758
    10. '
' → logprob: -19.000032424926758

Token 265: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -4.320199877838604e-07
    2. '[list' → logprob: -15.875
    3. '[int' → logprob: -16.0
    4. 'str' → logprob: -16.0
    5. '[' → logprob: -18.0
    6. '[List' → logprob: -18.75
    7. '[ch' → logprob: -19.375
    8. '(str' → logprob: -20.25
    9. '[
' → logprob: -20.625
    10. '```' → logprob: -20.75

Token 266: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.0007188651943579316
    2. ']]:
' → logprob: -7.37571907043457
    3. ']:' → logprob: -10.25071907043457
    4. '[str' → logprob: -11.12571907043457
    5. ']' → logprob: -11.25071907043457
    6. '[' → logprob: -11.37571907043457
    7. ']]]' → logprob: -11.75071907043457
    8. ']>' → logprob: -12.87571907043457
    9. '>' → logprob: -13.50071907043457
    10. '[int' → logprob: -13.62571907043457

Token 267: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5807994604110718
    2. '   ' → logprob: -0.8307994604110718
    3. ':
' → logprob: -5.455799579620361
    4. '[' → logprob: -8.580799102783203
    5. 'def' → logprob: -8.705799102783203
    6. '```' → logprob: -10.705799102783203
    7. '[n' → logprob: -10.830799102783203
    8. '):
' → logprob: -10.830799102783203
    9. '):' → logprob: -10.955799102783203
    10. '[]' → logprob: -10.955799102783203

Token 268: ' List' (ID: 2655)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007426840020343661
    2. ' return' → logprob: -7.3757429122924805
    3. 'return' → logprob: -10.00074291229248
    4. ' list' → logprob: -10.62574291229248
    5. '[' → logprob: -11.25074291229248
    6. '    ' → logprob: -11.62574291229248
    7. '[]' → logprob: -11.87574291229248
    8. ' [' → logprob: -12.25074291229248
    9. '[
' → logprob: -12.37574291229248
    10. 'List' → logprob: -13.50074291229248

Token 269: ' of' (ID: 328)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.06569980084896088
    2. '[List' → logprob: -3.065699815750122
    3. '[list' → logprob: -4.315699577331543
    4. '[' → logprob: -6.815699577331543
    5. ' of' → logprob: -7.190699577331543
    6. '[int' → logprob: -7.690699577331543
    7. 'of' → logprob: -8.065699577331543
    8. '[line' → logprob: -8.315699577331543
    9. '[[' → logprob: -8.440699577331543
    10. '   ' → logprob: -8.690699577331543

Token 270: ' '' (ID: 461)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.10952135175466537
    2. 'list' → logprob: -3.7345213890075684
    3. '[input' → logprob: -3.7345213890075684
    4. '[n' → logprob: -3.9845213890075684
    5. 'str' → logprob: -4.609521389007568
    6. ' lists' → logprob: -4.734521389007568
    7. 'input' → logprob: -5.359521389007568
    8. '[list' → logprob: -5.609521389007568
    9. ' list' → logprob: -5.734521389007568
    10. ' input' → logprob: -5.859521389007568

Token 271: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14738582074642181
    2. 'str' → logprob: -2.522385835647583
    3. 'list' → logprob: -3.522385835647583
    4. '[str' → logprob: -3.772385835647583
    5. '[n' → logprob: -6.272385597229004
    6. ' n' → logprob: -7.022385597229004
    7. 'input' → logprob: -8.147385597229004
    8. ' str' → logprob: -8.397385597229004
    9. 's' → logprob: -8.522385597229004
    10. 'lists' → logprob: -8.647385597229004

Token 272: ''' (ID: 6)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.03234744444489479
    2. ' lists' → logprob: -4.407347679138184
    3. ']' → logprob: -5.157347679138184
    4. '[
' → logprob: -6.032347679138184
    5. ' of' → logprob: -6.282347679138184
    6. '[' → logprob: -6.282347679138184
    7. '[list' → logprob: -6.532347679138184
    8. '[List' → logprob: -6.907347679138184
    9. ' characters' → logprob: -7.032347679138184
    10. ' lines' → logprob: -7.157347679138184

Token 273: ' lists' (ID: 19471)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.0234804917126894
    2. '[str' → logprob: -3.8984804153442383
    3. '[
' → logprob: -6.523480415344238
    4. '[' → logprob: -7.648480415344238
    5. '[list' → logprob: -8.273480415344238
    6. '[line' → logprob: -8.648480415344238
    7. 'input' → logprob: -8.898480415344238
    8. '[List' → logprob: -9.523480415344238
    9. '[int' → logprob: -10.023480415344238
    10. '   ' → logprob: -10.023480415344238

Token 274: ',' (ID: 11)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.07920921593904495
    2. '   ' → logprob: -3.454209327697754
    3. '[list' → logprob: -3.454209327697754
    4. 'of' → logprob: -5.079209327697754
    5. ' of' → logprob: -5.454209327697754
    6. '[List' → logprob: -7.204209327697754
    7. '[' → logprob: -7.829209327697754
    8. '[input' → logprob: -8.079209327697754
    9. '[[' → logprob: -8.704209327697754
    10. '[int' → logprob: -9.079209327697754

Token 275: ' where' (ID: 1919)
  Prédit: ' each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.7849327921867371
    2. 'each' → logprob: -0.9099327921867371
    3. ' where' → logprob: -2.284932851791382
    4. '   ' → logprob: -3.534932851791382
    5. ' with' → logprob: -5.284932613372803
    6. 'where' → logprob: -6.784932613372803
    7. '       ' → logprob: -7.034932613372803
    8. 'def' → logprob: -7.034932613372803
    9. 'with' → logprob: -7.284932613372803
    10. '
' → logprob: -7.534932613372803

Token 276: ' each' (ID: 2454)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.8566941022872925
    2. ' input' → logprob: -1.2316941022872925
    3. 'input' → logprob: -1.9816941022872925
    4. ' each' → logprob: -2.606694221496582
    5. '   ' → logprob: -3.356694221496582
    6. 'each' → logprob: -3.856694221496582
    7. '[line' → logprob: -4.856694221496582
    8. '       ' → logprob: -5.981694221496582
    9. '[str' → logprob: -6.356694221496582
    10. '[]' → logprob: -7.356694221496582

Token 277: ' inner' (ID: 12694)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.4038298726081848
    2. 'input' → logprob: -1.27882981300354
    3. ' line' → logprob: -3.27882981300354
    4. 'list' → logprob: -4.653830051422119
    5. '(input' → logprob: -6.403830051422119
    6. '[input' → logprob: -6.653830051422119
    7. '[line' → logprob: -6.653830051422119
    8. '(line' → logprob: -7.028830051422119
    9. ' input' → logprob: -7.028830051422119
    10. '=input' → logprob: -8.403829574584961

Token 278: ' list' (ID: 1562)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.6212274432182312
    2. 'input' → logprob: -1.371227502822876
    3. '(input' → logprob: -2.246227502822876
    4. '(line' → logprob: -3.371227502822876
    5. 'list' → logprob: -3.621227502822876
    6. '[input' → logprob: -4.246227264404297
    7. ' line' → logprob: -4.746227264404297
    8. '[line' → logprob: -5.121227264404297
    9. '(list' → logprob: -5.496227264404297
    10. ']' → logprob: -5.621227264404297

Token 279: ' contains' (ID: 8895)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6716532707214355
    2. ' of' → logprob: -1.7966532707214355
    3. 'of' → logprob: -2.9216532707214355
    4. '=' → logprob: -2.9216532707214355
    5. '   ' → logprob: -3.1716532707214355
    6. 'is' → logprob: -3.6716532707214355
    7. '[str' → logprob: -3.6716532707214355
    8. ' contains' → logprob: -3.7966532707214355
    9. '(str' → logprob: -3.9216532707214355
    10. ' =' → logprob: -3.9216532707214355

Token 280: ' characters' (ID: 9862)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.13386432826519012
    2. ' list' → logprob: -2.508864402770996
    3. 'input' → logprob: -3.258864402770996
    4. ' input' → logprob: -5.633864402770996
    5. '[input' → logprob: -6.758864402770996
    6. '   ' → logprob: -8.508864402770996
    7. 'characters' → logprob: -8.508864402770996
    8. ' the' → logprob: -9.258864402770996
    9. ' characters' → logprob: -9.633864402770996
    10. 'each' → logprob: -9.883864402770996

Token 281: ' from' (ID: 591)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6329708695411682
    2. '(line' → logprob: -1.8829708099365234
    3. '   ' → logprob: -2.0079708099365234
    4. '()' → logprob: -2.1329708099365234
    5. '(' → logprob: -3.8829708099365234
    6. '=' → logprob: -4.007970809936523
    7. '=input' → logprob: -4.882970809936523
    8. 'input' → logprob: -5.882970809936523
    9. '(i' → logprob: -6.007970809936523
    10. '(n' → logprob: -6.757970809936523

Token 282: ' each' (ID: 2454)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2520061731338501
    2. ' input' → logprob: -1.50200617313385
    3. '(input' → logprob: -10.377006530761719
    4. '   ' → logprob: -10.877006530761719
    5. 'list' → logprob: -11.002006530761719
    6. ' the' → logprob: -12.377006530761719
    7. 'the' → logprob: -13.002006530761719
    8. ' list' → logprob: -13.002006530761719
    9. '=input' → logprob: -14.502006530761719
    10. ' ' → logprob: -15.502006530761719

Token 283: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3741324543952942
    2. ' input' → logprob: -1.9991323947906494
    3. 'line' → logprob: -2.1241323947906494
    4. ' line' → logprob: -2.8741323947906494
    5. '   ' → logprob: -7.4991326332092285
    6. '(input' → logprob: -9.74913215637207
    7. ')' → logprob: -11.24913215637207
    8. '=input' → logprob: -11.87413215637207
    9. '(line' → logprob: -12.37413215637207
    10. ']' → logprob: -12.49913215637207

Token 284: ' string' (ID: 1621)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.5185521245002747
    2. '()' → logprob: -1.6435520648956299
    3. 'line' → logprob: -1.7685520648956299
    4. '   ' → logprob: -3.26855206489563
    5. ' string' → logprob: -6.643552303314209
    6. 'string' → logprob: -7.143552303314209
    7. '()
' → logprob: -8.64355182647705
    8. ' ' → logprob: -8.76855182647705
    9. '_line' → logprob: -9.01855182647705
    10. ')' → logprob: -10.89355182647705

Token 285: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12352211028337479
    2. ']' → logprob: -2.7485220432281494
    3. '(n' → logprob: -3.3735220432281494
    4. '()]' → logprob: -4.4985222816467285
    5. '()' → logprob: -5.3735222816467285
    6. ']
' → logprob: -7.2485222816467285
    7. '()]
' → logprob: -7.9985222816467285
    8. '.' → logprob: -8.49852180480957
    9. '()
' → logprob: -8.74852180480957
    10. 'def' → logprob: -8.87352180480957

Token 286: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00020210994989611208
    2. '```' → logprob: -8.875202178955078
    3. '"""
' → logprob: -11.125202178955078
    4. '
' → logprob: -11.250202178955078
    5. ')' → logprob: -11.250202178955078
    6. ')
' → logprob: -12.125202178955078
    7. ']' → logprob: -12.375202178955078
    8. '"""' → logprob: -12.500202178955078
    9. 'def' → logprob: -12.625202178955078
    10. '    
' → logprob: -12.875202178955078

Token 287: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007885080762207508
    2. '
' → logprob: -4.882884979248047
    3. '```' → logprob: -9.007884979248047
    4. 'return' → logprob: -10.132884979248047
    5. '"""
' (adapté à ' """
') → logprob: -10.257884979248047
    6. 'def' → logprob: -10.382884979248047
    7. '    
' → logprob: -10.507884979248047
    8. ')
' → logprob: -11.257884979248047
    9. ')' → logprob: -12.382884979248047
    10. '"""' → logprob: -13.507884979248047

Token 288: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018198523670434952
    2. 'return' → logprob: -4.018198490142822
    3. ' return' → logprob: -10.01819896697998
    4. '	return' → logprob: -13.01819896697998
    5. '
' → logprob: -14.14319896697998
    6. '```' → logprob: -14.26819896697998
    7. '    
' → logprob: -15.64319896697998
    8. ' ' → logprob: -16.143198013305664
    9. '  ' → logprob: -16.893198013305664
    10. 'def' → logprob: -17.268198013305664

Token 289: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0020368914119899273
    2. '   ' → logprob: -6.627037048339844
    3. ' return' → logprob: -7.252037048339844
    4. '
' → logprob: -13.877037048339844
    5. 'def' → logprob: -14.377037048339844
    6. '```' → logprob: -16.127037048339844
    7. ' ' → logprob: -16.502037048339844
    8. 'result' → logprob: -17.127037048339844
    9. 'ret' → logprob: -17.752037048339844
    10. '    
' → logprob: -18.002037048339844

Token 290: ' [[' (ID: 9237)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.019658708944916725
    2. ' [' → logprob: -4.26965856552124
    3. '[list' → logprob: -5.51965856552124
    4. '[s' → logprob: -7.01965856552124
    5. '[' → logprob: -8.019659042358398
    6. '[line' → logprob: -9.019659042358398
    7. '[int' → logprob: -10.269659042358398
    8. '[array' → logprob: -10.894659042358398
    9. '[i' → logprob: -11.144659042358398
    10. '[item' → logprob: -11.269659042358398

Token 291: 'x' (ID: 87)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.39693236351013184
    2. 'char' → logprob: -1.1469323635101318
    3. 'ch' → logprob: -4.646932601928711
    4. '*' → logprob: -7.896932601928711
    5. '*c' → logprob: -10.021932601928711
    6. '
' → logprob: -13.396932601928711
    7. 'chr' → logprob: -14.271932601928711
    8. 'str' → logprob: -14.771932601928711
    9. 'x' → logprob: -14.896932601928711
    10. '```' → logprob: -15.521932601928711

Token 292: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2817288339138031
    2. ' for' → logprob: -1.4067288637161255
    3. 'char' → logprob: -7.906728744506836
    4. 'c' → logprob: -9.531728744506836
    5. ' in' → logprob: -10.531728744506836
    6. 'in' → logprob: -10.656728744506836
    7. '()' → logprob: -11.031728744506836
    8. ']' → logprob: -11.031728744506836
    9. ')' → logprob: -11.281728744506836
    10. '
' → logprob: -11.656728744506836

Token 293: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0076079354621469975
    2. ' x' → logprob: -4.882607936859131
    3. ' ' → logprob: -14.257607460021973
    4. '_' → logprob: -14.507607460021973
    5. '_x' → logprob: -15.257607460021973
    6. ' in' → logprob: -16.00760841369629
    7. '	x' → logprob: -16.13260841369629
    8. ' _' → logprob: -16.13260841369629
    9. 'in' → logprob: -16.25760841369629
    10. 'input' → logprob: -18.50760841369629

Token 294: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.22556151449680328
    2. ' in' → logprob: -1.600561499595642
    3. 'x' → logprob: -8.975561141967773
    4. 'input' → logprob: -11.225561141967773
    5. ' ' → logprob: -12.975561141967773
    6. 'inp' → logprob: -13.350561141967773
    7. 'i' → logprob: -13.850561141967773
    8. 's' → logprob: -14.225561141967773
    9. ' x' → logprob: -14.350561141967773
    10. 'n' → logprob: -14.600561141967773

Token 295: ' s' (ID: 265)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.001985852373763919
    2. ' input' → logprob: -6.251986026763916
    3. 'range' → logprob: -10.876985549926758
    4. 'line' → logprob: -11.001985549926758
    5. 's' → logprob: -11.501985549926758
    6. 'in' → logprob: -12.251985549926758
    7. 'list' → logprob: -13.126985549926758
    8. '_input' → logprob: -13.376985549926758
    9. '(input' → logprob: -13.751985549926758
    10. '_' → logprob: -14.126985549926758

Token 296: ']' (ID: 60)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6466052532196045
    2. 'input' → logprob: -1.2716052532196045
    3. '(input' → logprob: -1.6466052532196045
    4. '2' → logprob: -6.271605491638184
    5. 'range' → logprob: -8.021605491638184
    6. '4' → logprob: -8.521605491638184
    7. ' input' → logprob: -8.521605491638184
    8. '1' → logprob: -9.021605491638184
    9. 'in' → logprob: -9.646605491638184
    10. '=input' → logprob: -9.771605491638184

Token 297: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.509817898273468
    2. 'in' → logprob: -1.2598178386688232
    3. ' in' → logprob: -2.7598178386688232
    4. ' for' → logprob: -3.7598178386688232
    5. '(input' → logprob: -3.8848178386688232
    6. '()' → logprob: -5.009818077087402
    7. 'input' → logprob: -6.884818077087402
    8. 's' → logprob: -8.634818077087402
    9. '(in' → logprob: -9.009818077087402
    10. '(n' → logprob: -9.259818077087402

Token 298: ' s' (ID: 265)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7643290758132935
    2. 's' → logprob: -0.8893290758132935
    3. ' s' → logprob: -2.264328956604004
    4. ' _' → logprob: -4.014328956604004
    5. '_s' → logprob: -7.014328956604004
    6. 'x' → logprob: -8.139328956604004
    7. ' x' → logprob: -9.389328956604004
    8. ' ' → logprob: -9.514328956604004
    9. ' in' → logprob: -10.139328956604004
    10. '__' → logprob: -11.389328956604004

Token 299: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11782689392566681
    2. 'in' → logprob: -2.2428269386291504
    3. 's' → logprob: -5.36782693862915
    4. 'range' → logprob: -9.242826461791992
    5. '()' → logprob: -9.367826461791992
    6. '_' → logprob: -10.242826461791992
    7. '(range' → logprob: -10.367826461791992
    8. '(' → logprob: -11.117826461791992
    9. ' range' → logprob: -11.367826461791992
    10. '(s' → logprob: -11.492826461791992

Token 300: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4752047657966614
    2. ' s' → logprob: -1.6002047061920166
    3. 'range' → logprob: -2.2252047061920166
    4. ' range' → logprob: -2.7252047061920166
    5. ' [' → logprob: -6.975204944610596
    6. '(s' → logprob: -7.475204944610596
    7. '[s' → logprob: -7.475204944610596
    8. '[' → logprob: -8.350204467773438
    9. '(range' → logprob: -8.350204467773438
    10. ' ' → logprob: -9.350204467773438

Token 301: '2' (ID: 17)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.5094070477061905e-05
    2. '2' → logprob: -11.875015258789062
    3. '3' → logprob: -12.375015258789062
    4. '(n' → logprob: -12.875015258789062
    5. '0' → logprob: -13.750015258789062
    6. '(' → logprob: -15.750015258789062
    7. 'n' → logprob: -17.250015258789062
    8. ' ' → logprob: -17.250015258789062
    9. '_' → logprob: -17.875015258789062
    10. '5' → logprob: -18.500015258789062

Token 302: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.20734242349863e-05
    2. '(' → logprob: -9.625072479248047
    3. ' (' → logprob: -12.125072479248047
    4. 'n' → logprob: -15.000072479248047
    5. '](' → logprob: -17.000072479248047
    6. '(
' → logprob: -17.250072479248047
    7. ']' → logprob: -17.500072479248047
    8. ')' → logprob: -18.000072479248047
    9. ')(' → logprob: -18.375072479248047
    10. '((' → logprob: -19.500072479248047

Token 303: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0001439459010725841
    2. '(n' → logprob: -9.125144004821777
    3. '(' → logprob: -11.375144004821777
    4. ' )' → logprob: -11.500144004821777
    5. ')' → logprob: -12.125144004821777
    6. ']' → logprob: -13.000144004821777
    7. '())' → logprob: -13.375144004821777
    8. '()]' → logprob: -13.500144004821777
    9. ')]
' → logprob: -13.875144004821777
    10. '   ' → logprob: -14.375144004821777

Token 304: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 305: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03676556795835495
    2. '
' → logprob: -3.7867655754089355
    3. '<|end|>' → logprob: -4.5367655754089355
    4. '```' → logprob: -6.5367655754089355
    5. '#' → logprob: -7.7867655754089355
    6. 'd' → logprob: -7.9117655754089355
    7. '\' → logprob: -8.161765098571777
    8. '

' → logprob: -9.536765098571777
    9. '[' → logprob: -10.286765098571777
    10. ' def' → logprob: -10.911765098571777

Token 306: ' n' (ID: 297)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02275419607758522
    2. 's' → logprob: -4.147754192352295
    3. 'n' → logprob: -5.522754192352295
    4. 'int' → logprob: -6.897754192352295
    5. 'd' → logprob: -7.147754192352295
    6. ' i' → logprob: -8.647754669189453
    7. 'main' → logprob: -8.772754669189453
    8. 'si' → logprob: -9.522754669189453
    9. 'b' → logprob: -9.897754669189453
    10. 'in' → logprob: -10.022754669189453

Token 307: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.210164412856102
    2. '()' → logprob: -2.0851643085479736
    3. '():' → logprob: -2.9601643085479736
    4. '1' → logprob: -4.960164546966553
    5. '():
' → logprob: -5.210164546966553
    6. 's' → logprob: -7.585164546966553
    7. '_' → logprob: -9.585164070129395
    8. '4' → logprob: -9.960164070129395
    9. 'int' → logprob: -10.085164070129395
    10. 'def' → logprob: -10.085164070129395

Token 308: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0007749661453999579
    2. '():
' → logprob: -7.25077486038208
    3. '()' → logprob: -10.000775337219238
    4. ' ():' → logprob: -10.875775337219238
    5. '():
' → logprob: -15.125775337219238
    6. 'def' → logprob: -15.750775337219238
    7. ' ()' → logprob: -15.750775337219238
    8. '():

' → logprob: -15.875775337219238
    9. '()>' → logprob: -17.375774383544922
    10. '(' → logprob: -18.625774383544922

Token 309: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3896166682243347
    2. '():
' → logprob: -1.1396167278289795
    3. '()' → logprob: -6.0146164894104
    4. '   ' → logprob: -8.764616966247559
    5. ' ():' → logprob: -9.264616966247559
    6. 'def' → logprob: -10.764616966247559
    7. '():
' → logprob: -11.389616966247559
    8. '):' → logprob: -12.264616966247559
    9. '):
' → logprob: -12.389616966247559
    10. '():

' → logprob: -13.264616966247559

Token 310: ' """
' (ID: 7037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5150966048240662
    2. 'int' → logprob: -1.390096664428711
    3. 'def' → logprob: -2.015096664428711
    4. '"""
' (adapté à ' """
') → logprob: -4.765096664428711
    5. '   ' → logprob: -5.265096664428711
    6. '()' → logprob: -5.765096664428711
    7. '"""' → logprob: -6.640096664428711
    8. ' return' → logprob: -7.265096664428711
    9. 'n' → logprob: -8.140096664428711
    10. ')' → logprob: -8.515096664428711

Token 311: '   ' (ID: 271)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.03002607822418213
    2. '   ' → logprob: -3.5300259590148926
    3. '"""' → logprob: -9.03002643585205
    4. 'Reads' → logprob: -9.53002643585205
    5. ' """
' → logprob: -9.90502643585205
    6. '"
' → logprob: -11.40502643585205
    7. '"' → logprob: -12.28002643585205
    8. ''''
' → logprob: -12.40502643585205
    9. 'Returns' → logprob: -12.40502643585205
    10. '"""
' → logprob: -12.78002643585205

Token 312: ' Reads' (ID: 88839)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05134139955043793
    2. 'def' → logprob: -3.5513412952423096
    3. 'return' → logprob: -4.426341533660889
    4. '"""
' → logprob: -4.801341533660889
    5. '"""' → logprob: -7.676341533660889
    6. '
' → logprob: -8.55134105682373
    7. ' return' → logprob: -8.55134105682373
    8. 'Reads' (adapté à ' Reads') → logprob: -9.80134105682373
    9. 'Returns' → logprob: -10.17634105682373
    10. '  ' → logprob: -10.42634105682373

Token 313: ' a' (ID: 261)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3640833795070648
    2. 'int' → logprob: -1.7390834093093872
    3. 'a' → logprob: -2.7390832901000977
    4. 'def' → logprob: -3.2390832901000977
    5. '   ' → logprob: -4.739083290100098
    6. '()
' → logprob: -4.739083290100098
    7. '"""' → logprob: -6.239083290100098
    8. 'n' → logprob: -6.489083290100098
    9. '0' → logprob: -7.364083290100098
    10. 'line' → logprob: -7.614083290100098

Token 314: ' single' (ID: 4590)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.21445217728614807
    2. 'single' → logprob: -2.5894522666931152
    3. 'n' → logprob: -2.7144522666931152
    4. ' single' → logprob: -3.2144522666931152
    5. '()' → logprob: -5.464452266693115
    6. 'line' → logprob: -6.339452266693115
    7. ' line' → logprob: -6.589452266693115
    8. ' int' → logprob: -6.839452266693115
    9. 'number' → logprob: -7.214452266693115
    10. 'input' → logprob: -7.464452266693115

Token 315: ' integer' (ID: 16336)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03423372283577919
    2. 'line' → logprob: -3.659233808517456
    3. '()' → logprob: -5.909233570098877
    4. ' int' → logprob: -6.034233570098877
    5. ' line' → logprob: -6.534233570098877
    6. '()
' → logprob: -7.534233570098877
    7. 'n' → logprob: -8.659234046936035
    8. '=int' → logprob: -9.034234046936035
    9. ' integer' → logprob: -9.034234046936035
    10. 'integer' → logprob: -9.159234046936035

Token 316: ' value' (ID: 1432)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0048712813295423985
    2. '()
' → logprob: -5.379871368408203
    3. '   ' → logprob: -8.879871368408203
    4. '().' → logprob: -10.379871368408203
    5. ' ()' → logprob: -10.504871368408203
    6. 'input' → logprob: -11.004871368408203
    7. '():
' → logprob: -11.504871368408203
    8. '.' → logprob: -12.004871368408203
    9. '()<' → logprob: -12.379871368408203
    10. '().
' → logprob: -12.629871368408203

Token 317: ' from' (ID: 591)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06704850494861603
    2. '   ' → logprob: -2.8170485496520996
    3. '()
' → logprob: -5.5670485496521
    4. '.' → logprob: -7.1920485496521
    5. '().' → logprob: -7.9420485496521
    6. ')' → logprob: -10.317048072814941
    7. ' ()' → logprob: -10.567048072814941
    8. '.
' → logprob: -11.192048072814941
    9. '():
' → logprob: -11.192048072814941
    10. 'def' → logprob: -11.317048072814941

Token 318: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.22557570040225983
    2. ' input' → logprob: -1.6005756855010986
    3. ' the' → logprob: -9.97557544708252
    4. '   ' → logprob: -10.10057544708252
    5. ')' → logprob: -10.22557544708252
    6. ' a' → logprob: -11.35057544708252
    7. 'int' → logprob: -11.85057544708252
    8. 'a' → logprob: -12.22557544708252
    9. 'the' → logprob: -12.35057544708252
    10. '=input' → logprob: -12.85057544708252

Token 319: '.

' (ID: 364)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00755350524559617
    2. '():' → logprob: -5.382553577423096
    3. '().' → logprob: -6.132553577423096
    4. '   ' → logprob: -8.007553100585938
    5. '()
' → logprob: -8.257553100585938
    6. '():
' → logprob: -9.257553100585938
    7. ' ()' → logprob: -10.757553100585938
    8. '.' → logprob: -10.757553100585938
    9. '().
' → logprob: -11.632553100585938
    10. '()`' → logprob: -12.132553100585938

Token 320: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.280175097752362e-05
    2. '
' → logprob: -10.500082969665527
    3. '    
' → logprob: -10.750082969665527
    4. 'return' → logprob: -11.500082969665527
    5. 'def' → logprob: -12.125082969665527
    6. ')' → logprob: -12.625082969665527
    7. ' return' → logprob: -12.875082969665527
    8. '"""
' → logprob: -12.875082969665527
    9. ')
' → logprob: -13.125082969665527
    10. '  
' → logprob: -13.500082969665527

Token 321: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025013023987412453
    2. 'return' → logprob: -4.150012969970703
    3. '"""
' → logprob: -4.900012969970703
    4. '"""' → logprob: -6.900012969970703
    5. 'def' → logprob: -8.525012969970703
    6. ' return' → logprob: -8.775012969970703
    7. '
' → logprob: -9.650012969970703
    8. '```' → logprob: -10.400012969970703
    9. '""' → logprob: -11.150012969970703
    10. '    
' → logprob: -11.775012969970703

Token 322: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4747684597969055
    2. ' int' → logprob: -1.0997684001922607
    3. '    ' → logprob: -3.9747684001922607
    4. 'int' → logprob: -4.59976863861084
    5. ' input' → logprob: -4.59976863861084
    6. '  ' → logprob: -6.34976863861084
    7. ' =' → logprob: -6.34976863861084
    8. ' ' → logprob: -6.97476863861084
    9. ':' → logprob: -7.84976863861084
    10. ':int' → logprob: -8.59976863861084

Token 323: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21579144895076752
    2. ' int' → logprob: -2.2157914638519287
    3. 'int' → logprob: -2.4657914638519287
    4. '       ' → logprob: -9.965791702270508
    5. '    ' → logprob: -10.215791702270508
    6. '  ' → logprob: -13.590791702270508
    7. '    
' → logprob: -14.340791702270508
    8. '
' → logprob: -14.840791702270508
    9. '(int' → logprob: -15.215791702270508
    10. ':int' → logprob: -15.340791702270508

Token 324: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -4.620622712536715e-05
    2. ' int' → logprob: -10.000045776367188
    3. '   ' → logprob: -14.125045776367188
    4. '
' → logprob: -17.750045776367188
    5. '[int' → logprob: -19.375045776367188
    6. '  ' → logprob: -19.625045776367188
    7. '```' → logprob: -19.750045776367188
    8. '(int' → logprob: -20.375045776367188
    9. '    ' → logprob: -20.750045776367188
    10. ' ' → logprob: -20.875045776367188

Token 325: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007921740412712097
    2. '():' → logprob: -5.8829216957092285
    3. '   ' → logprob: -6.0079216957092285
    4. ':return' → logprob: -6.7579216957092285
    5. '):' → logprob: -7.6329216957092285
    6. '()' → logprob: -8.132922172546387
    7. ')' → logprob: -8.632922172546387
    8. ':
' → logprob: -8.882922172546387
    9. '```' → logprob: -9.007922172546387
    10. ' :' → logprob: -9.007922172546387

Token 326: ' The' (ID: 623)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.03804263845086098
    2. 'int' → logprob: -3.2880425453186035
    3. '   ' → logprob: -14.288043022155762
    4. ' n' → logprob: -15.788043022155762
    5. '(int' → logprob: -16.163042068481445
    6. '=int' → logprob: -16.413042068481445
    7. '    ' → logprob: -16.538042068481445
    8. ' input' → logprob: -17.288042068481445
    9. ' ' → logprob: -17.913042068481445
    10. ' 
' → logprob: -18.413042068481445

Token 327: ' input' (ID: 3422)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.12716631591320038
    2. 'int' → logprob: -2.127166271209717
    3. ' input' → logprob: -8.627166748046875
    4. ' integer' → logprob: -10.252166748046875
    5. 'input' → logprob: -11.002166748046875
    6. '   ' → logprob: -13.377166748046875
    7. '=int' → logprob: -13.502166748046875
    8. '(int' → logprob: -14.002166748046875
    9. 'integer' → logprob: -14.127166748046875
    10. ' n' → logprob: -14.502166748046875

Token 328: ' integer' (ID: 16336)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004233443643897772
    2. ' integer' → logprob: -6.004233360290527
    3. ' value' → logprob: -7.504233360290527
    4. '().' → logprob: -7.879233360290527
    5. '   ' → logprob: -8.254233360290527
    6. ' ()' → logprob: -8.754233360290527
    7. 'int' → logprob: -8.879233360290527
    8. '()
' → logprob: -9.004233360290527
    9. ' number' → logprob: -10.754233360290527
    10. ' int' → logprob: -10.754233360290527

Token 329: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.023994125425815582
    2. '()
' → logprob: -3.773994207382202
    3. '().' → logprob: -7.523993968963623
    4. '   ' → logprob: -8.773994445800781
    5. '().
' → logprob: -10.773994445800781
    6. '.' → logprob: -10.898994445800781
    7. ' ()' → logprob: -12.148994445800781
    8. '()`' → logprob: -12.148994445800781
    9. '.
' → logprob: -14.023994445800781
    10. ')' → logprob: -14.773994445800781

Token 330: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00866798684000969
    2. '()
' → logprob: -5.758667945861816
    3. '"""
' → logprob: -6.008667945861816
    4. '
' → logprob: -6.508667945861816
    5. 'return' → logprob: -7.383667945861816
    6. '    
' → logprob: -8.008667945861816
    7. '()' → logprob: -8.633667945861816
    8. '```' → logprob: -9.008667945861816
    9. ' return' → logprob: -9.508667945861816
    10. '   
' → logprob: -10.508667945861816

Token 331: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020951840560883284
    2. 'return' → logprob: -6.8770952224731445
    3. '"""
' (adapté à ' """
') → logprob: -7.1270952224731445
    4. '
' → logprob: -9.377095222473145
    5. '"""' → logprob: -9.377095222473145
    6. ' return' → logprob: -9.627095222473145
    7. '```' → logprob: -11.502095222473145
    8. '    
' → logprob: -12.252095222473145
    9. '  ' → logprob: -12.752095222473145
    10. '""' → logprob: -13.752095222473145

Token 332: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04890720546245575
    2. '   ' → logprob: -3.0489072799682617
    3. ' return' → logprob: -8.048907279968262
    4. '```' → logprob: -15.548907279968262
    5. '	return' → logprob: -16.298906326293945
    6. 'int' → logprob: -16.923906326293945
    7. '  ' → logprob: -17.048906326293945
    8. '
' → logprob: -17.673906326293945
    9. ' ' → logprob: -17.798906326293945
    10. '    ' → logprob: -18.548906326293945

Token 333: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -6.2729995988775045e-06
    2. ' return' → logprob: -12.250006675720215
    3. '   ' → logprob: -13.500006675720215
    4. 'int' → logprob: -16.7500057220459
    5. '```' → logprob: -19.0000057220459
    6. '
' → logprob: -20.3750057220459
    7. 'ret' → logprob: -20.6250057220459
    8. '	return' → logprob: -20.8750057220459
    9. '`' → logprob: -22.2500057220459
    10. 'Return' → logprob: -22.3750057220459

Token 334: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12692810595035553
    2. ' int' → logprob: -2.1269280910491943
    3. '(int' → logprob: -16.501928329467773
    4. 'n' → logprob: -18.501928329467773
    5. ' ' → logprob: -19.126928329467773
    6. '	int' → logprob: -19.376928329467773
    7. '   ' → logprob: -19.376928329467773
    8. '[int' → logprob: -19.876928329467773
    9. '=int' → logprob: -20.001928329467773
    10. ' n' → logprob: -20.001928329467773

Token 335: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.07962048053741455
    2. '(' → logprob: -2.579620361328125
    3. 'input' → logprob: -7.954620361328125
    4. '()' → logprob: -7.954620361328125
    5. ' (' → logprob: -11.079620361328125
    6. '(
' → logprob: -12.079620361328125
    7. ' input' → logprob: -12.829620361328125
    8. '(

' → logprob: -13.454620361328125
    9. '(s' → logprob: -13.704620361328125
    10. '=input' → logprob: -14.579620361328125

Token 336: '())


' (ID: 131583)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00016110755677800626
    2. '()' → logprob: -8.750161170959473
    3. ' ())' → logprob: -14.000161170959473
    4. '())
' → logprob: -14.500161170959473
    5. '().' → logprob: -14.500161170959473
    6. ')' → logprob: -14.750161170959473
    7. '()))' → logprob: -15.250161170959473
    8. '(' → logprob: -16.750160217285156
    9. '();)' → logprob: -17.375160217285156
    10. '()]' → logprob: -17.750160217285156

Token 337: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.860340752406046e-05
    2. 'n' → logprob: -10.3750581741333
    3. '<|end|>' → logprob: -11.3750581741333
    4. '```' → logprob: -12.2500581741333
    5. '0' → logprob: -12.6250581741333
    6. '
' → logprob: -12.7500581741333
    7. 'ndef' → logprob: -13.3750581741333
    8. ' def' → logprob: -13.7500581741333
    9. '#' → logprob: -14.5000581741333
    10. 's' → logprob: -15.1250581741333

Token 338: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -8.363617962459102e-05
    2. 'i' → logprob: -10.000083923339844
    3. 'ni' → logprob: -10.875083923339844
    4. 's' → logprob: -11.875083923339844
    5. ' n' → logprob: -13.250083923339844
    6. 'm' → logprob: -13.375083923339844
    7. 'l' → logprob: -13.375083923339844
    8. 'ns' → logprob: -13.750083923339844
    9. 'nn' → logprob: -14.125083923339844
    10. 'list' → logprob: -14.375083923339844

Token 339: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008084330474957824
    2. '0' → logprob: -7.125808238983154
    3. '(' → logprob: -14.000808715820312
    4. '()' → logprob: -14.500808715820312
    5. '2' → logprob: -14.875808715820312
    6. '```' → logprob: -14.875808715820312
    7. 'def' → logprob: -15.000808715820312
    8. '()
' → logprob: -15.250808715820312
    9. '():
' → logprob: -15.625808715820312
    10. '4' → logprob: -15.750808715820312

Token 340: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.10026879608631134
    2. '():
' → logprob: -2.350268840789795
    3. ' ():' → logprob: -10.475268363952637
    4. '()' → logprob: -10.725268363952637
    5. '(n' → logprob: -12.100268363952637
    6. '():

' → logprob: -12.225268363952637
    7. '():
' → logprob: -14.100268363952637
    8. '(s' → logprob: -16.225269317626953
    9. '(' → logprob: -16.350269317626953
    10. '();' → logprob: -16.475269317626953

Token 341: '   ' (ID: 271)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.5793702006340027
    2. '():' → logprob: -0.8293702006340027
    3. '()' → logprob: -5.704370021820068
    4. 'def' → logprob: -10.454370498657227
    5. '():

' → logprob: -10.704370498657227
    6. ' ():' → logprob: -11.579370498657227
    7. '():
' → logprob: -11.829370498657227
    8. 'return' → logprob: -12.454370498657227
    9. '(n' → logprob: -12.704370498657227
    10. '()
' → logprob: -12.954370498657227

Token 342: ' """
' (ID: 7037)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5047423243522644
    2. 'return' → logprob: -1.0047423839569092
    3. '"""
' (adapté à ' """
') → logprob: -4.50474214553833
    4. 'int' → logprob: -4.87974214553833
    5. '   ' → logprob: -6.12974214553833
    6. '()' → logprob: -6.25474214553833
    7. ')' → logprob: -6.37974214553833
    8. '()
' → logprob: -6.50474214553833
    9. ' return' → logprob: -7.37974214553833
    10. 's' → logprob: -7.37974214553833

Token 343: '   ' (ID: 271)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.020819218829274178
    2. '():' → logprob: -4.145819187164307
    3. '):
' → logprob: -6.145819187164307
    4. 'def' → logprob: -7.020819187164307
    5. '()' → logprob: -7.145819187164307
    6. 'return' → logprob: -7.270819187164307
    7. 'n' → logprob: -9.645819664001465
    8. 's' → logprob: -10.270819664001465
    9. '):' → logprob: -10.270819664001465
    10. '0' → logprob: -10.520819664001465

Token 344: ' Reads' (ID: 88839)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.060806453227996826
    2. 'def' → logprob: -2.9358065128326416
    3. '"""
' → logprob: -5.5608062744140625
    4. ' return' → logprob: -6.5608062744140625
    5. '   ' → logprob: -8.560806274414062
    6. '()
' → logprob: -8.935806274414062
    7. '():
' → logprob: -9.685806274414062
    8. 'n' → logprob: -9.810806274414062
    9. '()' → logprob: -10.060806274414062
    10. 'int' → logprob: -10.185806274414062

Token 345: ' a' (ID: 261)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09887436032295227
    2. '().' → logprob: -2.84887433052063
    3. 's' → logprob: -4.348874568939209
    4. 'list' → logprob: -4.598874568939209
    5. 'a' → logprob: -5.348874568939209
    6. 'def' → logprob: -6.223874568939209
    7. 'n' → logprob: -6.348874568939209
    8. 'line' → logprob: -6.598874568939209
    9. '()
' → logprob: -6.973874568939209
    10. '   ' → logprob: -7.348874568939209

Token 346: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.21621379256248474
    2. '()' → logprob: -1.9662138223648071
    3. 'single' → logprob: -3.2162137031555176
    4. 'int' → logprob: -4.841213703155518
    5. ' line' → logprob: -5.341213703155518
    6. ' single' → logprob: -7.591213703155518
    7. '()
' → logprob: -7.841213703155518
    8. 'input' → logprob: -7.966213703155518
    9. 'list' → logprob: -8.716214179992676
    10. 'split' → logprob: -10.091214179992676

Token 347: ' of' (ID: 328)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07281611859798431
    2. '().' → logprob: -2.6978161334991455
    3. 'of' → logprob: -6.697815895080566
    4. ' of' → logprob: -6.697815895080566
    5. '()
' → logprob: -8.572815895080566
    6. '():' → logprob: -9.947815895080566
    7. 'def' → logprob: -10.197815895080566
    8. ' ()' → logprob: -10.197815895080566
    9. '():
' → logprob: -10.322815895080566
    10. '   ' → logprob: -10.447815895080566

Token 348: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1002098023891449
    2. ' input' → logprob: -2.3502097129821777
    3. 'int' → logprob: -13.475210189819336
    4. ')' → logprob: -14.975210189819336
    5. 'code' → logprob: -15.225210189819336
    6. '()' → logprob: -15.600210189819336
    7. 'def' → logprob: -15.725210189819336
    8. ' code' → logprob: -16.100210189819336
    9. '0' → logprob: -16.225210189819336
    10. 'inputs' → logprob: -16.225210189819336

Token 349: ',' (ID: 11)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0315825529396534
    2. '():
' → logprob: -3.9065825939178467
    3. '()' → logprob: -5.031582355499268
    4. '   ' → logprob: -6.156582355499268
    5. '():' → logprob: -7.406582355499268
    6. ' and' → logprob: -7.656582355499268
    7. '.' → logprob: -7.656582355499268
    8. '()
' → logprob: -8.531582832336426
    9. ')' → logprob: -9.281582832336426
    10. ').' → logprob: -9.406582832336426

Token 350: ' splits' (ID: 76848)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.9033951163291931
    2. 'spl' → logprob: -0.9033951163291931
    3. ' splits' → logprob: -1.778395175933838
    4. '   ' → logprob: -5.028395175933838
    5. ' and' → logprob: -5.528395175933838
    6. 'def' → logprob: -5.903395175933838
    7. ' split' → logprob: -6.278395175933838
    8. 'and' → logprob: -6.778395175933838
    9. ' returns' → logprob: -6.778395175933838
    10. 'return' → logprob: -6.778395175933838

Token 351: ' it' (ID: 480)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0048851617611944675
    2. '(),' → logprob: -5.504885196685791
    3. '().' → logprob: -7.879885196685791
    4. '()
' → logprob: -8.004884719848633
    5. '   ' → logprob: -9.879884719848633
    6. ' ()' → logprob: -11.129884719848633
    7. '())' → logprob: -11.754884719848633
    8. ',' → logprob: -11.879884719848633
    9. '():' → logprob: -12.879884719848633
    10. '()[' → logprob: -13.004884719848633

Token 352: ' by' (ID: 656)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.29476672410964966
    2. '(),' → logprob: -2.544766664505005
    3. 'into' → logprob: -2.669766664505005
    4. '().' → logprob: -2.794766664505005
    5. '()' → logprob: -3.544766664505005
    6. ')' → logprob: -4.794766902923584
    7. ' into' → logprob: -5.294766902923584
    8. 'and' → logprob: -6.169766902923584
    9. '   ' → logprob: -7.419766902923584
    10. '),' → logprob: -7.669766902923584

Token 353: ' spaces' (ID: 18608)
  Prédit: 'spaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spaces' → logprob: -0.24093881249427795
    2. 'space' → logprob: -1.8659387826919556
    3. ' spaces' → logprob: -2.990938901901245
    4. '()' → logprob: -4.865938663482666
    5. 'input' → logprob: -8.115939140319824
    6. ' space' → logprob: -8.240939140319824
    7. ''' → logprob: -8.365939140319824
    8. '```' → logprob: -8.740939140319824
    9. ' whitespace' → logprob: -8.990939140319824
    10. 'default' → logprob: -9.115939140319824

Token 354: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21156935393810272
    2. '(),' → logprob: -1.9615693092346191
    3. '()' → logprob: -3.711569309234619
    4. '().' → logprob: -3.836569309234619
    5. '   ' → logprob: -6.211569309234619
    6. 'and' → logprob: -6.586569309234619
    7. ' and' → logprob: -8.461569786071777
    8. '()
' → logprob: -8.586569786071777
    9. '.' → logprob: -9.211569786071777
    10. ')' → logprob: -9.586569786071777

Token 355: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4498941898345947
    2. 'and' → logprob: -1.0748941898345947
    3. '   ' → logprob: -4.074893951416016
    4. ' then' → logprob: -6.699893951416016
    5. 'then' → logprob: -7.074893951416016
    6. ',' → logprob: -7.449893951416016
    7. ' converts' → logprob: -8.074893951416016
    8. 'map' → logprob: -8.574893951416016
    9. ' maps' → logprob: -8.699893951416016
    10. 'int' → logprob: -8.699893951416016

Token 356: ' converts' (ID: 64809)
  Prédit: 'returns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'returns' → logprob: -0.8116694092750549
    2. 'maps' → logprob: -1.0616693496704102
    3. 'con' → logprob: -2.06166934967041
    4. 'map' → logprob: -3.56166934967041
    5. ' returns' → logprob: -3.68666934967041
    6. ' maps' → logprob: -4.06166934967041
    7. ' converts' → logprob: -4.56166934967041
    8. 'return' → logprob: -6.81166934967041
    9. '   ' → logprob: -8.31166934967041
    10. 'def' → logprob: -9.43666934967041

Token 357: ' each' (ID: 2454)
  Prédit: ' it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' it' → logprob: -0.3726462125778198
    2. 'each' → logprob: -1.9976462125778198
    3. 'it' → logprob: -2.1226463317871094
    4. ' each' → logprob: -3.8726463317871094
    5. 'the' → logprob: -3.8726463317871094
    6. 'all' → logprob: -4.997646331787109
    7. '   ' → logprob: -5.622646331787109
    8. ' the' → logprob: -6.872646331787109
    9. 'list' → logprob: -7.372646331787109
    10. '()' → logprob: -7.997646331787109

Token 358: ' element' (ID: 3577)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.13342806696891785
    2. ' token' → logprob: -3.0084280967712402
    3. 'item' → logprob: -3.3834280967712402
    4. 'element' → logprob: -4.00842809677124
    5. 'part' → logprob: -5.25842809677124
    6. 'x' → logprob: -5.38342809677124
    7. ' element' → logprob: -5.50842809677124
    8. ' part' → logprob: -5.50842809677124
    9. 'to' → logprob: -6.13342809677124
    10. 'word' → logprob: -6.63342809677124

Token 359: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.313726007938385
    2. ' to' → logprob: -1.3137259483337402
    3. ' into' → logprob: -8.313726425170898
    4. 'into' → logprob: -8.438726425170898
    5. '_to' → logprob: -14.188726425170898
    6. '   ' → logprob: -14.438726425170898
    7. '	to' → logprob: -14.938726425170898
    8. ')' → logprob: -15.063726425170898
    9. 'To' → logprob: -15.313726425170898
    10. 't' → logprob: -15.938726425170898

Token 360: ' an' (ID: 448)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00026181264547631145
    2. ' int' → logprob: -8.250262260437012
    3. ' an' → logprob: -15.000262260437012
    4. 'an' → logprob: -16.375261306762695
    5. '(int' → logprob: -16.875261306762695
    6. '[int' → logprob: -17.625261306762695
    7. '=int' → logprob: -17.875261306762695
    8. 'ints' → logprob: -18.125261306762695
    9. '```' → logprob: -18.875261306762695
    10. 'inte' → logprob: -18.875261306762695

Token 361: ' integer' (ID: 16336)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.217951886355877e-05
    2. ' int' → logprob: -9.750061988830566
    3. 'integer' → logprob: -13.250061988830566
    4. '[int' → logprob: -13.375061988830566
    5. '=int' → logprob: -14.750061988830566
    6. ' integer' → logprob: -17.250062942504883
    7. '<int' → logprob: -17.750062942504883
    8. 'ints' → logprob: -18.000062942504883
    9. '(int' → logprob: -18.125062942504883
    10. ']int' → logprob: -18.375062942504883

Token 362: '.

' (ID: 364)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0023389006964862347
    2. '().' → logprob: -6.377338886260986
    3. '()
' → logprob: -7.502338886260986
    4. '.' → logprob: -10.502339363098145
    5. ' ()' → logprob: -10.502339363098145
    6. ')' → logprob: -11.502339363098145
    7. '   ' → logprob: -11.877339363098145
    8. '()]' → logprob: -12.877339363098145
    9. '().
' → logprob: -13.627339363098145
    10. '(' → logprob: -13.752339363098145

Token 363: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005829381989315152
    2. 'def' → logprob: -7.750583171844482
    3. '"""
' → logprob: -9.500582695007324
    4. '```' → logprob: -10.125582695007324
    5. 'return' → logprob: -10.500582695007324
    6. '    
' → logprob: -12.375582695007324
    7. ')' → logprob: -14.000582695007324
    8. ' return' → logprob: -14.125582695007324
    9. '``' → logprob: -14.250582695007324
    10. '
' → logprob: -14.500582695007324

Token 364: ' Returns' (ID: 9609)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.01019102893769741
    2. 'def' → logprob: -4.760190963745117
    3. ' return' → logprob: -6.510190963745117
    4. '   ' → logprob: -9.385190963745117
    5. ' ' → logprob: -13.260190963745117
    6. '"""
' → logprob: -14.510190963745117
    7. ' def' → logprob: -14.885190963745117
    8. '	return' → logprob: -15.510190963745117
    9. '```' → logprob: -16.135190963745117
    10. '
' → logprob: -16.385190963745117

Token 365: ':
' (ID: 734)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5213942527770996
    2. '():
' → logprob: -1.5213942527770996
    3. '   ' → logprob: -2.2713942527770996
    4. '():' → logprob: -2.5213942527770996
    5. '()[' → logprob: -6.3963942527771
    6. '()
' → logprob: -6.8963942527771
    7. '[]' → logprob: -7.2713942527771
    8. ' ()' → logprob: -7.6463942527771
    9. '():
' → logprob: -9.396394729614258
    10. ' (' → logprob: -9.521394729614258

Token 366: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00018041854491457343
    2. 'list' → logprob: -8.8751802444458
    3. ' list' → logprob: -10.5001802444458
    4. '[' → logprob: -12.6251802444458
    5. '    
' → logprob: -12.7501802444458
    6. '
' → logprob: -13.2501802444458
    7. 'List' → logprob: -13.7501802444458
    8. 'int' → logprob: -13.8751802444458
    9. '       ' → logprob: -14.1251802444458
    10. '```' → logprob: -14.5001802444458

Token 367: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -4.320199877838604e-07
    2. ' list' → logprob: -15.0
    3. 'List' → logprob: -17.875
    4. '   ' → logprob: -18.375
    5. '[list' → logprob: -18.625
    6. 'int' → logprob: -20.875
    7. '```' → logprob: -22.25
    8. '`' → logprob: -22.375
    9. 'lis' → logprob: -22.375
    10. '	list' → logprob: -23.0

Token 368: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -9.088346359931165e-07
    2. '<int' → logprob: -14.625000953674316
    3. 'int' → logprob: -15.375000953674316
    4. '[' → logprob: -16.875
    5. '(int' → logprob: -17.0
    6. '[Int' → logprob: -18.0
    7. '```' → logprob: -18.75
    8. '[
' → logprob: -18.75
    9. ']int' → logprob: -19.625
    10. '[i' → logprob: -19.875

Token 369: ']:' (ID: 12433)
  Prédit: ']:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0432296060025692
    2. ']' → logprob: -3.168229579925537
    3. '()]' → logprob: -9.418230056762695
    4. '():' → logprob: -10.043230056762695
    5. ']()' → logprob: -10.418230056762695
    6. '()' → logprob: -11.168230056762695
    7. ']int' → logprob: -11.168230056762695
    8. '"]:' → logprob: -11.418230056762695
    9. '[int' → logprob: -11.668230056762695
    10. '):' → logprob: -11.793230056762695

Token 370: ' List' (ID: 2655)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.018764693289995193
    2. 'list' → logprob: -4.018764495849609
    3. '[list' → logprob: -8.26876449584961
    4. '[int' → logprob: -8.51876449584961
    5. ' [' → logprob: -8.89376449584961
    6. '   ' → logprob: -11.01876449584961
    7. '[' → logprob: -13.26876449584961
    8. 'List' → logprob: -13.76876449584961
    9. '[List' → logprob: -13.89376449584961
    10. ' map' → logprob: -14.26876449584961

Token 371: ' of' (ID: 328)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0186893492937088
    2. ' of' → logprob: -4.018689155578613
    3. '(int' → logprob: -8.643689155578613
    4. 'of' → logprob: -8.893689155578613
    5. '<int' → logprob: -9.268689155578613
    6. '[' → logprob: -9.768689155578613
    7. '   ' → logprob: -11.268689155578613
    8. '(map' → logprob: -11.393689155578613
    9. '[
' → logprob: -11.643689155578613
    10. ']int' → logprob: -11.768689155578613

Token 372: ' integers' (ID: 54912)
  Prédit: ' integers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.8821988105773926
    2. 'int' → logprob: -1.1321988105773926
    3. ' int' → logprob: -1.6321988105773926
    4. '[int' → logprob: -3.5071988105773926
    5. ' ints' → logprob: -3.8821988105773926
    6. 'inte' → logprob: -4.757198810577393
    7. 'ints' → logprob: -4.757198810577393
    8. '(int' → logprob: -8.007198333740234
    9. '<int' → logprob: -8.632198333740234
    10. ' integer' → logprob: -12.132198333740234

Token 373: ' parsed' (ID: 31111)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0023855185136198997
    2. '()
' → logprob: -6.75238561630249
    3. '   ' → logprob: -7.00238561630249
    4. '=' → logprob: -8.877385139465332
    5. ' =' → logprob: -9.252385139465332
    6. '().' → logprob: -11.002385139465332
    7. ')' → logprob: -11.627385139465332
    8. '.' → logprob: -11.752385139465332
    9. ' ()' → logprob: -12.127385139465332
    10. '()]' → logprob: -12.502385139465332

Token 374: ' from' (ID: 591)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06363833695650101
    2. 'from' → logprob: -2.81363844871521
    3. ' from' → logprob: -6.563638210296631
    4. '   ' → logprob: -9.188638687133789
    5. '[int' → logprob: -9.438638687133789
    6. '()
' → logprob: -10.563638687133789
    7. '().' → logprob: -11.563638687133789
    8. '()[' → logprob: -11.938638687133789
    9. ' ()' → logprob: -12.063638687133789
    10. '()]' → logprob: -12.063638687133789

Token 375: ' the' (ID: 290)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6931524872779846
    2. ' input' → logprob: -0.6931524872779846
    3. ' the' → logprob: -12.94315242767334
    4. 'the' → logprob: -13.94315242767334
    5. '   ' → logprob: -14.44315242767334
    6. '(input' → logprob: -14.69315242767334
    7. 'map' → logprob: -14.81815242767334
    8. ' map' → logprob: -15.44315242767334
    9. ' ' → logprob: -15.69315242767334
    10. 'int' → logprob: -16.568153381347656

Token 376: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5760220289230347
    2. ' input' → logprob: -0.8260220289230347
    3. 'line' → logprob: -9.951022148132324
    4. 's' → logprob: -10.701022148132324
    5. ' line' → logprob: -11.701022148132324
    6. '(input' → logprob: -14.076022148132324
    7. ' s' → logprob: -14.451022148132324
    8. 'space' → logprob: -14.701022148132324
    9. '1' → logprob: -14.951022148132324
    10. '0' → logprob: -15.201022148132324

Token 377: ' line' (ID: 2543)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.029909120872616768
    2. '()
' → logprob: -3.529909133911133
    3. '().' → logprob: -9.654909133911133
    4. '   ' → logprob: -9.654909133911133
    5. ' ()' → logprob: -11.279909133911133
    6. '()]' → logprob: -12.029909133911133
    7. ')' → logprob: -13.154909133911133
    8. '()`' → logprob: -13.154909133911133
    9. '.' → logprob: -13.279909133911133
    10. '(' → logprob: -13.779909133911133

Token 378: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02493639662861824
    2. '   ' → logprob: -4.399936199188232
    3. '()
' → logprob: -4.524936199188232
    4. ')' → logprob: -7.024936199188232
    5. '().' → logprob: -8.02493667602539
    6. '.' → logprob: -8.64993667602539
    7. '():
' → logprob: -10.77493667602539
    8. ']' → logprob: -11.14993667602539
    9. '[]' → logprob: -11.52493667602539
    10. '()`' → logprob: -11.64993667602539

Token 379: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00036382899270392954
    2. 'return' → logprob: -9.250364303588867
    3. '[]' → logprob: -9.500364303588867
    4. '[]
' → logprob: -9.875364303588867
    5. ' return' → logprob: -10.125364303588867
    6. '()' → logprob: -10.500364303588867
    7. ')' → logprob: -10.875364303588867
    8. '```' → logprob: -11.125364303588867
    9. '()
' → logprob: -11.250364303588867
    10. '"""
' → logprob: -11.875364303588867

Token 380: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011145558208227158
    2. 'return' → logprob: -4.63614559173584
    3. ' return' → logprob: -7.13614559173584
    4. '"""
' (adapté à ' """
') → logprob: -8.63614559173584
    5. '[]
' → logprob: -8.76114559173584
    6. '
' → logprob: -9.63614559173584
    7. '```' → logprob: -9.63614559173584
    8. 'def' → logprob: -10.38614559173584
    9. '()
' → logprob: -11.01114559173584
    10. '[]' → logprob: -11.13614559173584

Token 381: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00524454889819026
    2. '   ' → logprob: -5.505244731903076
    3. ' return' → logprob: -6.755244731903076
    4. '	return' → logprob: -14.880244255065918
    5. 'def' → logprob: -15.755244255065918
    6. ' ' → logprob: -17.380245208740234
    7. '```' → logprob: -17.380245208740234
    8. '
' → logprob: -17.505245208740234
    9. '  ' → logprob: -18.005245208740234
    10. 'list' → logprob: -18.630245208740234

Token 382: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0001005630983854644
    2. ' return' → logprob: -9.250100135803223
    3. '   ' → logprob: -12.375100135803223
    4. 'list' → logprob: -16.00010108947754
    5. 'def' → logprob: -17.62510108947754
    6. '
' → logprob: -19.12510108947754
    7. '	return' → logprob: -19.62510108947754
    8. '{return' → logprob: -19.62510108947754
    9. '[int' → logprob: -19.87510108947754
    10. ' ' → logprob: -19.87510108947754

Token 383: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.011474648490548134
    2. ' list' → logprob: -4.511474609375
    3. '[list' → logprob: -7.761474609375
    4. '[' → logprob: -14.761474609375
    5. 'map' → logprob: -14.761474609375
    6. '[int' → logprob: -16.261474609375
    7. '[List' → logprob: -18.011474609375
    8. ' [' → logprob: -18.136474609375
    9. '(list' → logprob: -18.511474609375
    10. 'List' → logprob: -18.636474609375

Token 384: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: 0.0
    2. ' int' → logprob: -18.75
    3. '   ' → logprob: -22.5
    4. '(int' → logprob: -23.375
    5. '
' → logprob: -24.0
    6. '	int' → logprob: -24.25
    7. '  ' → logprob: -24.625
    8. '[int' → logprob: -24.625
    9. '```' → logprob: -24.75
    10. 'map' → logprob: -25.25

Token 385: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.000839642365463078
    2. '(i' → logprob: -7.125839710235596
    3. 'x' → logprob: -11.000839233398438
    4. '(s' → logprob: -11.375839233398438
    5. '(' → logprob: -12.375839233398438
    6. '(token' → logprob: -13.500839233398438
    7. ']' → logprob: -14.625839233398438
    8. '(e' → logprob: -15.000839233398438
    9. 'i' → logprob: -15.750839233398438
    10. '(_)' → logprob: -15.875839233398438

Token 386: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001217813478433527
    2. '()' → logprob: -9.1251220703125
    3. ' )' → logprob: -11.6251220703125
    4. 'for' → logprob: -13.7501220703125
    5. 'in' → logprob: -14.0001220703125
    6. '(x' → logprob: -14.2501220703125
    7. '())' → logprob: -14.5001220703125
    8. ')
' → logprob: -15.2501220703125
    9. ' for' → logprob: -16.1251220703125
    10. '   ' → logprob: -16.6251220703125

Token 387: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33567705750465393
    2. ' for' → logprob: -1.8356770277023315
    3. '()' → logprob: -2.085677146911621
    4. ')' → logprob: -6.835677146911621
    5. 'in' → logprob: -8.460677146911621
    6. ' in' → logprob: -9.710677146911621
    7. '(x' → logprob: -9.960677146911621
    8. '   ' → logprob: -11.960677146911621
    9. 'x' → logprob: -12.085677146911621
    10. ' ' → logprob: -12.835677146911621

Token 388: ' x' (ID: 1215)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8551895022392273
    2. ' input' → logprob: -1.105189561843872
    3. 'x' → logprob: -2.105189561843872
    4. ' x' → logprob: -2.105189561843872
    5. ' in' → logprob: -13.605189323425293
    6. 'in' → logprob: -13.855189323425293
    7. '=input' → logprob: -14.480189323425293
    8. '(input' → logprob: -14.730189323425293
    9. ' ' → logprob: -14.855189323425293
    10. '(x' → logprob: -14.980189323425293

Token 389: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2255147099494934
    2. 'in' → logprob: -1.6005146503448486
    3. 'input' → logprob: -9.60051441192627
    4. '()' → logprob: -11.10051441192627
    5. 'import' → logprob: -11.60051441192627
    6. '   ' → logprob: -13.22551441192627
    7. 's' → logprob: -13.35051441192627
    8. '(input' → logprob: -13.47551441192627
    9. '	in' → logprob: -13.85051441192627
    10. ' input' → logprob: -14.10051441192627

Token 390: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0024758970830589533
    2. ' input' → logprob: -6.002475738525391
    3. 's' → logprob: -16.12747573852539
    4. '(input' → logprob: -16.12747573852539
    5. '
' → logprob: -18.00247573852539
    6. ' ' → logprob: -18.50247573852539
    7. '<input' → logprob: -18.75247573852539
    8. '   ' → logprob: -19.00247573852539
    9. '=input' → logprob: -19.25247573852539
    10. '	input' → logprob: -19.75247573852539

Token 391: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.8624639324116288e-06
    2. '()' → logprob: -13.250001907348633
    3. ' ().' → logprob: -19.500001907348633
    4. '()
' → logprob: -22.375001907348633
    5. '()].' → logprob: -22.375001907348633
    6. '(' → logprob: -22.625001907348633
    7. '.' → logprob: -23.875001907348633
    8. '().__' → logprob: -24.625001907348633
    9. '.split' → logprob: -24.750001907348633
    10. '().
' → logprob: -24.875001907348633

Token 392: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.8889261304575484e-06
    2. 'strip' → logprob: -12.750003814697266
    3. ' split' → logprob: -13.875003814697266
    4. '(split' → logprob: -18.500003814697266
    5. '.split' → logprob: -19.250003814697266
    6. 'spl' → logprob: -19.500003814697266
    7. 'rstrip' → logprob: -19.500003814697266
    8. '().' → logprob: -21.125003814697266
    9. 's' → logprob: -21.875003814697266
    10. 'plit' → logprob: -22.000003814697266

Token 393: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -2.2007883671903983e-05
    2. '()' → logprob: -10.750021934509277
    3. '())' → logprob: -15.000021934509277
    4. '()]
' → logprob: -16.000022888183594
    5. ']' → logprob: -17.750022888183594
    6. '()}' → logprob: -18.875022888183594
    7. ')]' → logprob: -19.000022888183594
    8. '(' → logprob: -19.000022888183594
    9. '()],' → logprob: -19.750022888183594
    10. '()].' → logprob: -19.875022888183594

Token 394: ']


' (ID: 52447)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -5.080963092041202e-06
    2. ']' → logprob: -12.250004768371582
    3. '()' → logprob: -15.625004768371582
    4. '()]
' → logprob: -16.8750057220459
    5. ']()' → logprob: -17.6250057220459
    6. ')]' → logprob: -18.8750057220459
    7. '(' → logprob: -19.8750057220459
    8. '())' → logprob: -20.3750057220459
    9. '()],' → logprob: -21.6250057220459
    10. ' ]' → logprob: -21.8750057220459

Token 395: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1472419600977446e-06
    2. '```' → logprob: -14.250000953674316
    3. '
' → logprob: -15.000000953674316
    4. ' def' → logprob: -15.625000953674316
    5. '#' → logprob: -17.625001907348633
    6. '[]' → logprob: -18.000001907348633
    7. 'n' → logprob: -18.250001907348633
    8. 'from' → logprob: -18.750001907348633
    9. '``' → logprob: -18.750001907348633
    10. 'ndef' → logprob: -19.000001907348633

Token 396: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0008006958523765206
    2. 'ni' → logprob: -8.375801086425781
    3. 'nn' → logprob: -8.750801086425781
    4. 'nl' → logprob: -9.375801086425781
    5. 'm' → logprob: -9.625801086425781
    6. 'nm' → logprob: -9.625801086425781
    7. 'def' → logprob: -9.750801086425781
    8. 'ns' → logprob: -10.625801086425781
    9. 's' → logprob: -11.125801086425781
    10. ' n' → logprob: -11.125801086425781

Token 397: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.8802491215174086e-05
    2. '0' → logprob: -11.250028610229492
    3. '4' → logprob: -11.875028610229492
    4. '1' → logprob: -12.125028610229492
    5. '3' → logprob: -13.250028610229492
    6. '5' → logprob: -14.625028610229492
    7. 'n' → logprob: -15.250028610229492
    8. '```' → logprob: -15.500028610229492
    9. '
' → logprob: -16.000028610229492
    10. ' ' → logprob: -16.125028610229492

Token 398: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.650518920039758e-06
    2. '(' → logprob: -13.250003814697266
    3. '(k' → logprob: -14.125003814697266
    4. ' (' → logprob: -14.875003814697266
    5. '(m' → logprob: -15.000003814697266
    6. '(p' → logprob: -15.875003814697266
    7. 'def' → logprob: -16.125003814697266
    8. '(l' → logprob: -17.375003814697266
    9. '(N' → logprob: -17.750003814697266
    10. '(s' → logprob: -17.750003814697266

Token 399: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00614433828741312
    2. '):
' → logprob: -5.3811445236206055
    3. '(n' → logprob: -6.5061445236206055
    4. 'n' → logprob: -11.131144523620605
    5. ' ):' → logprob: -12.006144523620605
    6. '):
' → logprob: -12.381144523620605
    7. ')' → logprob: -13.006144523620605
    8. ':' → logprob: -14.506144523620605
    9. '):

' → logprob: -15.006144523620605
    10. ']:' → logprob: -16.00614356994629

Token 400: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0008997925906442106
    2. 'n' → logprob: -7.625899791717529
    3. '   ' → logprob: -8.000900268554688
    4. 'def' → logprob: -9.875900268554688
    5. '(' → logprob: -11.125900268554688
    6. '(
' → logprob: -12.500900268554688
    7. ':' → logprob: -13.125900268554688
    8. ' n' → logprob: -13.750900268554688
    9. '	n' → logprob: -14.125900268554688
    10. ' (' → logprob: -14.875900268554688

Token 401: ' """
' (ID: 7037)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01713612861931324
    2. '   ' → logprob: -4.767136096954346
    3. 'n' → logprob: -5.767136096954346
    4. '(n' → logprob: -5.892136096954346
    5. '```' → logprob: -7.142136096954346
    6. '[n' → logprob: -7.392136096954346
    7. ' def' → logprob: -7.642136096954346
    8. '"""
' (adapté à ' """
') → logprob: -7.892136096954346
    9. 'return' → logprob: -8.517136573791504
    10. '"""' → logprob: -10.517136573791504

Token 402: '   ' (ID: 271)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.016229433938860893
    2. '   ' → logprob: -4.516229629516602
    3. 'def' → logprob: -5.516229629516602
    4. '"""' → logprob: -7.266229629516602
    5. 'Reads' → logprob: -7.766229629516602
    6. '"""
' → logprob: -12.391229629516602
    7. '"
' → logprob: -12.516229629516602
    8. ''''
' → logprob: -12.891229629516602
    9. '
' → logprob: -13.016229629516602
    10. ' """
' → logprob: -13.141229629516602

Token 403: ' Reads' (ID: 88839)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10924277454614639
    2. '"""
' → logprob: -2.6092426776885986
    3. 'Reads' (adapté à ' Reads') → logprob: -3.8592426776885986
    4. 'return' → logprob: -5.734242916107178
    5. '   ' → logprob: -5.734242916107178
    6. '"""' → logprob: -6.859242916107178
    7. 'Returns' → logprob: -7.109242916107178
    8. '```' → logprob: -8.98424243927002
    9. '[
' → logprob: -9.60924243927002
    10. '
' → logprob: -9.73424243927002

Token 404: ' '' (ID: 461)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.031667668372392654
    2. '(n' → logprob: -3.531667709350586
    3. ' n' → logprob: -6.406667709350586
    4. 'def' → logprob: -8.406667709350586
    5. '`' → logprob: -11.281667709350586
    6. '   ' → logprob: -12.031667709350586
    7. '```' → logprob: -12.031667709350586
    8. ''n' → logprob: -12.281667709350586
    9. ''' → logprob: -13.031667709350586
    10. 'lines' → logprob: -13.156667709350586

Token 405: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.696889623621246e-06
    2. ' n' → logprob: -13.00000286102295
    3. 'int' → logprob: -16.375001907348633
    4. '
' → logprob: -16.625001907348633
    5. '(n' → logprob: -16.750001907348633
    6. 'lines' → logprob: -17.625001907348633
    7. 'def' → logprob: -18.000001907348633
    8. '```' → logprob: -18.375001907348633
    9. ''n' → logprob: -19.125001907348633
    10. 'nn' → logprob: -19.125001907348633

Token 406: ''' (ID: 6)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.41712483763694763
    2. ' lines' → logprob: -1.29212486743927
    3. ' (' → logprob: -3.7921247482299805
    4. '(lines' → logprob: -4.1671247482299805
    5. '_lines' → logprob: -4.4171247482299805
    6. ')' → logprob: -4.6671247482299805
    7. '(' → logprob: -6.2921247482299805
    8. 'lines' → logprob: -6.2921247482299805
    9. '(int' → logprob: -7.5421247482299805
    10. 'Lines' → logprob: -7.7921247482299805

Token 407: ' integer' (ID: 16336)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.5763399600982666
    2. ' lines' → logprob: -0.8263399600982666
    3. '_lines' → logprob: -8.326339721679688
    4. '
' → logprob: -9.701339721679688
    5. 'ints' → logprob: -10.826339721679688
    6. ' integers' → logprob: -10.826339721679688
    7. 'int' → logprob: -11.076339721679688
    8. '	lines' → logprob: -11.576339721679688
    9. 'Lines' → logprob: -12.076339721679688
    10. ' ' → logprob: -12.201339721679688

Token 408: ' values' (ID: 4824)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.25567641854286194
    2. 'lines' → logprob: -2.130676507949829
    3. ' lines' → logprob: -2.755676507949829
    4. '()' → logprob: -3.630676507949829
    5. 'values' → logprob: -4.88067626953125
    6. ' values' → logprob: -5.63067626953125
    7. '_lines' → logprob: -5.75567626953125
    8. ' s' → logprob: -6.25567626953125
    9. '_values' → logprob: -8.25567626953125
    10. 'line' → logprob: -10.25567626953125

Token 409: ' from' (ID: 591)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -1.2287378311157227
    2. '()' → logprob: -1.3537378311157227
    3. '():
' → logprob: -1.3537378311157227
    4. '(n' → logprob: -2.6037378311157227
    5. '   ' → logprob: -2.7287378311157227
    6. 'def' → logprob: -3.6037378311157227
    7. 'from' → logprob: -4.478737831115723
    8. ',' → logprob: -6.103737831115723
    9. 'for' → logprob: -6.853737831115723
    10. '):' → logprob: -6.853737831115723

Token 410: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5359224677085876
    2. 'input' → logprob: -0.9109224677085876
    3. '[input' → logprob: -5.910922527313232
    4. 'range' → logprob: -6.035922527313232
    5. ' the' → logprob: -6.285922527313232
    6. '[int' → logprob: -6.535922527313232
    7. ' range' → logprob: -6.785922527313232
    8. 'int' → logprob: -7.535922527313232
    9. '[' → logprob: -7.535922527313232
    10. 'n' → logprob: -7.660922527313232

Token 411: ',' (ID: 11)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.9190008640289307
    2. '()' → logprob: -1.1690008640289307
    3. '   ' → logprob: -1.5440008640289307
    4. '():' → logprob: -2.7940008640289307
    5. 'def' → logprob: -5.294000625610352
    6. '(n' → logprob: -5.794000625610352
    7. ' for' → logprob: -6.544000625610352
    8. ',' → logprob: -6.544000625610352
    9. 'for' → logprob: -6.669000625610352
    10. '()
' → logprob: -6.794000625610352

Token 412: ' one' (ID: 1001)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4492315649986267
    2. 'def' → logprob: -1.0742316246032715
    3. '
' → logprob: -5.4492316246032715
    4. ' def' → logprob: -5.6992316246032715
    5. '[' → logprob: -5.8242316246032715
    6. 'return' → logprob: -5.8242316246032715
    7. ' each' → logprob: -6.0742316246032715
    8. 'each' → logprob: -6.3242316246032715
    9. '    ' → logprob: -7.5742316246032715
    10. '    
' → logprob: -7.8242316246032715

Token 413: ' per' (ID: 777)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -1.4529813528060913
    2. '()' → logprob: -1.5779813528060913
    3. 'at' → logprob: -1.8279813528060913
    4. 'for' → logprob: -1.8279813528060913
    5. ' for' → logprob: -2.452981472015381
    6. 'per' → logprob: -2.952981472015381
    7. 'each' → logprob: -3.702981472015381
    8. ' per' → logprob: -3.827981472015381
    9. 'def' → logprob: -3.952981472015381
    10. '   ' → logprob: -3.952981472015381

Token 414: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.07898001372814178
    2. ' line' → logprob: -2.578979969024658
    3. '_line' → logprob: -10.453980445861816
    4. 'input' → logprob: -10.828980445861816
    5. ' ' → logprob: -11.453980445861816
    6. 'n' → logprob: -11.453980445861816
    7. ' input' → logprob: -12.328980445861816
    8. '	line' → logprob: -12.828980445861816
    9. '
' → logprob: -12.953980445861816
    10. 'range' → logprob: -13.078980445861816

Token 415: '.

' (ID: 364)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.34009402990341187
    2. '   ' → logprob: -1.7150940895080566
    3. 'def' → logprob: -2.7150940895080566
    4. ':' → logprob: -4.090094089508057
    5. ',' → logprob: -4.715094089508057
    6. '.
' → logprob: -4.965094089508057
    7. ':
' → logprob: -5.465094089508057
    8. '(n' → logprob: -5.965094089508057
    9. 'for' → logprob: -7.465094089508057
    10. ')' → logprob: -7.465094089508057

Token 416: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00020497082732617855
    2. 'return' → logprob: -8.625205039978027
    3. ' return' → logprob: -11.625205039978027
    4. '```' → logprob: -11.750205039978027
    5. 'def' → logprob: -12.000205039978027
    6. '[
' → logprob: -14.000205039978027
    7. '[' → logprob: -14.250205039978027
    8. '	return' → logprob: -15.250205039978027
    9. '`' → logprob: -15.750205039978027
    10. '``' → logprob: -15.875205039978027

Token 417: ' Args' (ID: 39185)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0022401853930205107
    2. '   ' → logprob: -6.502240180969238
    3. ' return' → logprob: -7.252240180969238
    4. 'def' → logprob: -10.502240180969238
    5. '```' → logprob: -14.252240180969238
    6. '
' → logprob: -15.502240180969238
    7. '	return' → logprob: -15.877240180969238
    8. '"""
' → logprob: -16.002241134643555
    9. '`' → logprob: -16.127241134643555
    10. '[
' → logprob: -16.377241134643555

Token 418: ':
' (ID: 734)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.10674448311328888
    2. '   ' → logprob: -2.3567445278167725
    3. 'def' → logprob: -6.106744289398193
    4. ':' → logprob: -6.356744289398193
    5. ':
' → logprob: -7.106744289398193
    6. '       ' → logprob: -8.106744766235352
    7. 'n' → logprob: -8.106744766235352
    8. '(' → logprob: -8.106744766235352
    9. '):
' → logprob: -8.231744766235352
    10. ' (' → logprob: -8.481744766235352

Token 419: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20200036466121674
    2. '   ' → logprob: -1.952000379562378
    3. 'n' → logprob: -3.202000379562378
    4. ' n' → logprob: -8.452000617980957
    5. '     ' → logprob: -11.577000617980957
    6. '	n' → logprob: -12.827000617980957
    7. '    ' → logprob: -13.077000617980957
    8. '(n' → logprob: -13.077000617980957
    9. '      ' → logprob: -13.327000617980957
    10. ' ' → logprob: -13.452000617980957

Token 420: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -2.2603901015827432e-05
    2. ' n' → logprob: -10.750022888183594
    3. 'def' → logprob: -14.625022888183594
    4. '   ' → logprob: -15.375022888183594
    5. '<|end|>' → logprob: -15.375022888183594
    6. '```' → logprob: -17.000022888183594
    7. 'ndef' → logprob: -17.125022888183594
    8. 'int' → logprob: -17.625022888183594
    9. '	n' → logprob: -17.750022888183594
    10. '(n' → logprob: -17.875022888183594

Token 421: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0003037650021724403
    2. '(int' → logprob: -8.125304222106934
    3. ':' → logprob: -12.125304222106934
    4. ':int' → logprob: -13.500304222106934
    5. '```' → logprob: -15.500304222106934
    6. '=int' → logprob: -16.000303268432617
    7. ')' → logprob: -16.500303268432617
    8. ' (
' → logprob: -16.625303268432617
    9. '   ' → logprob: -16.625303268432617
    10. '
' → logprob: -16.875303268432617

Token 422: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: 0.0
    2. ' int' → logprob: -19.0
    3. '[int' → logprob: -20.625
    4. ':int' → logprob: -22.0
    5. '=int' → logprob: -22.375
    6. '(int' → logprob: -22.75
    7. '   ' → logprob: -23.375
    8. '<int' → logprob: -24.0
    9. '
' → logprob: -24.0
    10. ')' → logprob: -24.125

Token 423: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06252819299697876
    2. ':' → logprob: -2.812528133392334
    3. '):
' → logprob: -7.687528133392334
    4. ':int' → logprob: -10.812528610229492
    5. '):

' → logprob: -11.312528610229492
    6. ' ):' → logprob: -11.562528610229492
    7. '<|end|>' → logprob: -11.687528610229492
    8. ')' → logprob: -11.812528610229492
    9. '```' → logprob: -11.812528610229492
    10. 'int' → logprob: -11.937528610229492

Token 424: ' Number' (ID: 9184)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5766013264656067
    2. 'int' → logprob: -0.8266013264656067
    3. ' number' → logprob: -8.576601028442383
    4. ' n' → logprob: -8.826601028442383
    5. 'Number' → logprob: -9.201601028442383
    6. 'number' → logprob: -10.201601028442383
    7. 'n' → logprob: -10.201601028442383
    8. '   ' → logprob: -10.201601028442383
    9. '(int' → logprob: -10.201601028442383
    10. 'The' → logprob: -10.951601028442383

Token 425: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8249897956848145
    2. '(n' → logprob: -1.4499897956848145
    3. ':' → logprob: -2.0749897956848145
    4. '   ' → logprob: -2.9499897956848145
    5. '):
' → logprob: -2.9499897956848145
    6. 'n' → logprob: -3.6999897956848145
    7. '):' → logprob: -4.0749897956848145
    8. '<|end|>' → logprob: -4.0749897956848145
    9. '=' → logprob: -4.1999897956848145
    10. ':
' → logprob: -4.8249897956848145

Token 426: ' integers' (ID: 54912)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.23556989431381226
    2. 'lines' → logprob: -1.610569953918457
    3. 'input' → logprob: -5.235569953918457
    4. ' input' → logprob: -6.360569953918457
    5. ')' → logprob: -7.360569953918457
    6. '_lines' → logprob: -7.610569953918457
    7. '<|end|>' → logprob: -7.860569953918457
    8. 'int' → logprob: -7.985569953918457
    9. 'n' → logprob: -8.485569953918457
    10. 'tokens' → logprob: -8.610569953918457

Token 427: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6514434218406677
    2. 'to' → logprob: -0.7764434218406677
    3. '   ' → logprob: -4.6514434814453125
    4. '):' → logprob: -5.4014434814453125
    5. ')' → logprob: -5.7764434814453125
    6. '):
' → logprob: -6.7764434814453125
    7. '
' → logprob: -9.401443481445312
    8. ':' → logprob: -9.776443481445312
    9. 'def' → logprob: -9.901443481445312
    10. '=' → logprob: -10.401443481445312

Token 428: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.002485765377059579
    2. ' read' → logprob: -6.002485752105713
    3. '
' → logprob: -12.002486228942871
    4. 'int' → logprob: -13.377486228942871
    5. '_read' → logprob: -14.127486228942871
    6. 'input' → logprob: -14.377486228942871
    7. 'return' → logprob: -14.752486228942871
    8. 'Read' → logprob: -15.627486228942871
    9. '.read' → logprob: -16.002485275268555
    10. 'n' → logprob: -16.252485275268555

Token 429: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4262741208076477
    2. '):
' → logprob: -1.426274061203003
    3. '):' → logprob: -2.301274061203003
    4. ')' → logprob: -5.426274299621582
    5. '
' → logprob: -7.051274299621582
    6. '(n' → logprob: -7.926274299621582
    7. 'def' → logprob: -8.176274299621582
    8. 'n' → logprob: -8.676274299621582
    9. '):

' → logprob: -8.926274299621582
    10. '):
' → logprob: -9.051274299621582

Token 430: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0509624108672142
    2. 'return' → logprob: -3.050962448120117
    3. '"""
' → logprob: -7.050962448120117
    4. '
' → logprob: -7.050962448120117
    5. ' return' → logprob: -8.300962448120117
    6. '```' → logprob: -8.300962448120117
    7. ')' → logprob: -10.300962448120117
    8. '``' → logprob: -10.925962448120117
    9. 'def' → logprob: -11.050962448120117
    10. '    ' → logprob: -11.175962448120117

Token 431: ' Returns' (ID: 9609)
  Prédit: 'Returns'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Returns' (adapté à ' Returns') → logprob: -0.6857119798660278
    2. '   ' → logprob: -0.9357119798660278
    3. '"""
' → logprob: -2.4357118606567383
    4. 'return' → logprob: -4.310711860656738
    5. '"""' → logprob: -6.435711860656738
    6. '
' → logprob: -7.310711860656738
    7. 'Return' → logprob: -8.685711860656738
    8. 'returns' → logprob: -8.935711860656738
    9. 'Reads' → logprob: -8.935711860656738
    10. '```' → logprob: -9.435711860656738

Token 432: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008126569911837578
    2. ':' → logprob: -5.758126735687256
    3. '=' → logprob: -6.883126735687256
    4. ')' → logprob: -7.133126735687256
    5. '):
' → logprob: -7.133126735687256
    6. ':
' → logprob: -7.133126735687256
    7. '(n' → logprob: -7.758126735687256
    8. 'n' → logprob: -7.758126735687256
    9. '(' → logprob: -9.258126258850098
    10. '):' → logprob: -9.383126258850098

Token 433: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.054102566093206406
    2. '[int' → logprob: -3.179102659225464
    3. ' [' → logprob: -5.054102420806885
    4. '[' → logprob: -6.054102420806885
    5. '[list' → logprob: -7.054102420806885
    6. '[n' → logprob: -7.304102420806885
    7. ' list' → logprob: -7.679102420806885
    8. 'list' → logprob: -9.054102897644043
    9. '    ' → logprob: -9.429102897644043
    10. 'int' → logprob: -10.929102897644043

Token 434: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.002692055655643344
    2. '[list' → logprob: -6.002692222595215
    3. ' list' → logprob: -8.502692222595215
    4. 'List' → logprob: -11.752692222595215
    5. '[int' → logprob: -12.377692222595215
    6. '[List' → logprob: -13.877692222595215
    7. '   ' → logprob: -15.377692222595215
    8. 'int' → logprob: -16.6276912689209
    9. '[
' → logprob: -17.6276912689209
    10. '[' → logprob: -17.6276912689209

Token 435: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.7432603272027336e-06
    2. '<int' → logprob: -13.750001907348633
    3. 'int' → logprob: -14.375001907348633
    4. '=int' → logprob: -18.250001907348633
    5. '[
' → logprob: -18.625001907348633
    6. '[' → logprob: -18.750001907348633
    7. '(int' → logprob: -19.250001907348633
    8. '[Int' → logprob: -19.500001907348633
    9. '[in' → logprob: -19.750001907348633
    10. '[i' → logprob: -20.375001907348633

Token 436: ']:' (ID: 12433)
  Prédit: ']:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0015671150758862495
    2. '[int' → logprob: -6.7515668869018555
    3. ']:
' → logprob: -8.126566886901855
    4. '):' → logprob: -10.501566886901855
    5. ']' → logprob: -10.626566886901855
    6. ':' → logprob: -10.751566886901855
    7. '']:' → logprob: -11.876566886901855
    8. ']:
' → logprob: -12.001566886901855
    9. '"]:' → logprob: -12.376566886901855
    10. ']int' → logprob: -13.001566886901855

Token 437: ' List' (ID: 2655)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -5.5027299822540954e-05
    2. ' [' → logprob: -10.250055313110352
    3. '[Int' → logprob: -10.875055313110352
    4. '[' → logprob: -15.125055313110352
    5. '   ' → logprob: -15.625055313110352
    6. '[n' → logprob: -16.00005531311035
    7. '[ind' → logprob: -18.12505531311035
    8. '[List' → logprob: -19.12505531311035
    9. '[
' → logprob: -19.12505531311035
    10. '[input' → logprob: -19.25005531311035

Token 438: ' of' (ID: 328)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0001745775662129745
    2. ' of' → logprob: -8.875174522399902
    3. '<int' → logprob: -11.000174522399902
    4. '=int' → logprob: -12.125174522399902
    5. '[Int' → logprob: -12.125174522399902
    6. '(int' → logprob: -12.500174522399902
    7. '   ' → logprob: -13.500174522399902
    8. '[
' → logprob: -14.250174522399902
    9. '[' → logprob: -15.000174522399902
    10. 'of' → logprob: -15.500174522399902

Token 439: ' '' (ID: 461)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.31568509340286255
    2. 'int' → logprob: -1.3156850337982178
    3. 'ints' → logprob: -6.565685272216797
    4. 'inte' → logprob: -7.190685272216797
    5. ' int' → logprob: -9.065685272216797
    6. ' integers' → logprob: -9.565685272216797
    7. '(int' → logprob: -10.690685272216797
    8. 'n' → logprob: -10.815685272216797
    9. ' ints' → logprob: -11.190685272216797
    10. '<int' → logprob: -11.440685272216797

Token 440: 'n' (ID: 77)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0033111541997641325
    2. '[int' → logprob: -5.7533111572265625
    3. 'ints' → logprob: -9.003311157226562
    4. 'inte' → logprob: -12.378311157226562
    5. ' int' → logprob: -12.878311157226562
    6. '(int' → logprob: -13.253311157226562
    7. '<int' → logprob: -14.128311157226562
    8. 'n' → logprob: -14.253311157226562
    9. ']int' → logprob: -16.503311157226562
    10. '```' → logprob: -16.628311157226562

Token 441: ''' (ID: 6)
  Prédit: ' integers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.2371494024991989
    2. '[int' → logprob: -1.7371493577957153
    3. 'int' → logprob: -3.862149477005005
    4. ' int' → logprob: -4.862149238586426
    5. 'inte' → logprob: -6.237149238586426
    6. 'ints' → logprob: -6.362149238586426
    7. ' ints' → logprob: -6.362149238586426
    8. '<int' → logprob: -7.487149238586426
    9. '=int' → logprob: -8.987149238586426
    10. ' integer' → logprob: -9.362149238586426

Token 442: ' integers' (ID: 54912)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.08243320137262344
    2. 'int' → logprob: -2.5824332237243652
    3. 'ints' → logprob: -5.957433223724365
    4. ' integers' → logprob: -7.832433223724365
    5. 'inte' → logprob: -8.082432746887207
    6. ' int' → logprob: -9.207432746887207
    7. '(int' → logprob: -9.707432746887207
    8. ' ints' → logprob: -9.832432746887207
    9. '<int' → logprob: -10.832432746887207
    10. '=int' → logprob: -12.457432746887207

Token 443: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4813441038131714
    2. '[int' → logprob: -1.2313441038131714
    3. ']' → logprob: -2.856344223022461
    4. '(int' → logprob: -4.356344223022461
    5. 'int' → logprob: -4.981344223022461
    6. '=int' → logprob: -5.481344223022461
    7. ' =' → logprob: -6.356344223022461
    8. ':
' → logprob: -6.606344223022461
    9. ']
' → logprob: -6.856344223022461
    10. '=' → logprob: -7.106344223022461

Token 444: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009217040496878326
    2. 'return' → logprob: -7.000921726226807
    3. ' return' → logprob: -12.000921249389648
    4. '```' → logprob: -12.875921249389648
    5. '"""
' → logprob: -14.250921249389648
    6. '[
' → logprob: -15.500921249389648
    7. '"""' → logprob: -15.750921249389648
    8. '[]' → logprob: -16.37592124938965
    9. '
' → logprob: -16.50092124938965
    10. 'def' → logprob: -16.62592124938965

Token 445: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07997643202543259
    2. 'return' → logprob: -2.5799763202667236
    3. ' return' → logprob: -6.829976558685303
    4. '```' → logprob: -13.704976081848145
    5. '"""
' (adapté à ' """
') → logprob: -13.829976081848145
    6. '
' → logprob: -14.079976081848145
    7. '	return' → logprob: -14.829976081848145
    8. '[
' → logprob: -14.954976081848145
    9. '"""' → logprob: -15.079976081848145
    10. '  ' → logprob: -15.079976081848145

Token 446: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20186761021614075
    2. '   ' → logprob: -1.7018675804138184
    3. ' return' → logprob: -7.701867580413818
    4. '
' → logprob: -13.826868057250977
    5. '```' → logprob: -14.451868057250977
    6. 'def' → logprob: -14.576868057250977
    7. '	return' → logprob: -16.201868057250977
    8. '{return' → logprob: -16.701868057250977
    9. '[' → logprob: -16.951868057250977
    10. '`' → logprob: -17.951868057250977

Token 447: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00031985383247956634
    2. '   ' → logprob: -8.250319480895996
    3. ' return' → logprob: -9.750319480895996
    4. '[int' → logprob: -16.000320434570312
    5. '
' → logprob: -16.625320434570312
    6. '{return' → logprob: -17.250320434570312
    7. '[' → logprob: -17.750320434570312
    8. '```' → logprob: -17.875320434570312
    9. '	return' → logprob: -18.000320434570312
    10. 'def' → logprob: -19.625320434570312

Token 448: ' [' (ID: 723)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.981667537620524e-06
    2. ' [' → logprob: -13.500001907348633
    3. '[Int' → logprob: -14.750001907348633
    4. '[n' → logprob: -16.750001907348633
    5. '[' → logprob: -17.500001907348633
    6. '[i' → logprob: -20.375001907348633
    7. 'int' → logprob: -20.375001907348633
    8. '   ' → logprob: -20.875001907348633
    9. ' ' → logprob: -21.875001907348633
    10. '[ind' → logprob: -22.250001907348633

Token 449: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: 0.0
    2. ' int' → logprob: -17.25
    3. 'n' → logprob: -18.0
    4. '[int' → logprob: -19.25
    5. '(int' → logprob: -19.875
    6. '<int' → logprob: -20.625
    7. 'ints' → logprob: -21.125
    8. '```' → logprob: -21.25
    9. '=int' → logprob: -21.75
    10. '	int' → logprob: -22.125

Token 450: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -5.860340752406046e-05
    2. 'input' → logprob: -9.7500581741333
    3. '(x' → logprob: -15.8750581741333
    4. '(' → logprob: -16.375059127807617
    5. '(
' → logprob: -18.500059127807617
    6. '=input' → logprob: -19.250059127807617
    7. ' input' → logprob: -19.375059127807617
    8. '[input' → logprob: -20.125059127807617
    9. '<input' → logprob: -20.375059127807617
    10. ' (' → logprob: -20.500059127807617

Token 451: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -1.5690089639974758e-05
    2. '().' → logprob: -11.250015258789062
    3. '()' → logprob: -13.500015258789062
    4. '())
' → logprob: -14.000015258789062
    5. ' ())' → logprob: -15.000015258789062
    6. '()
' → logprob: -17.125015258789062
    7. '(' → logprob: -17.500015258789062
    8. ')' → logprob: -18.375015258789062
    9. '()]' → logprob: -18.500015258789062
    10. '()))' → logprob: -19.250015258789062

Token 452: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.226628895296017e-06
    2. 'for' → logprob: -11.875007629394531
    3. ' for' → logprob: -15.250007629394531
    4. ')' → logprob: -18.87500762939453
    5. '   ' → logprob: -18.87500762939453
    6. '()
' → logprob: -18.87500762939453
    7. ' ()' → logprob: -19.62500762939453
    8. '().' → logprob: -20.25000762939453
    9. '(' → logprob: -20.75000762939453
    10. '()]' → logprob: -21.00000762939453

Token 453: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.006748289801180363
    2. ' _' → logprob: -5.006748199462891
    3. ' range' → logprob: -10.63174819946289
    4. ' in' → logprob: -11.75674819946289
    5. '_range' → logprob: -14.13174819946289
    6. 'range' → logprob: -15.63174819946289
    7. '_in' → logprob: -17.38174819946289
    8. ' ' → logprob: -19.25674819946289
    9. '_
' → logprob: -19.25674819946289
    10. ' _
' → logprob: -19.63174819946289

Token 454: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.39334744215011597
    2. ' in' → logprob: -1.3933475017547607
    3. ' range' → logprob: -2.6433475017547607
    4. 'in' → logprob: -5.143347263336182
    5. '(range' → logprob: -14.26834774017334
    6. ' ' → logprob: -14.39334774017334
    7. '_range' → logprob: -15.64334774017334
    8. 'n' → logprob: -15.64334774017334
    9. '_' → logprob: -16.518346786499023
    10. ' n' → logprob: -16.768346786499023

Token 455: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00033546582562848926
    2. ' range' → logprob: -8.000335693359375
    3. '(range' → logprob: -19.625335693359375
    4. '_range' → logprob: -20.125335693359375
    5. '	range' → logprob: -21.750335693359375
    6. 'rang' → logprob: -22.125335693359375
    7. ' ' → logprob: -23.625335693359375
    8. '   ' → logprob: -24.000335693359375
    9. '_' → logprob: -24.375335693359375
    10. '
' → logprob: -25.000335693359375

Token 456: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.632542913896032e-05
    2. 'n' → logprob: -10.000046730041504
    3. '(' → logprob: -14.000046730041504
    4. ' n' → logprob: -19.875045776367188
    5. '(
' → logprob: -20.000045776367188
    6. ' (' → logprob: -21.625045776367188
    7. '	n' → logprob: -23.125045776367188
    8. '_n' → logprob: -23.875045776367188
    9. ')n' → logprob: -23.875045776367188
    10. '[n' → logprob: -24.000045776367188

Token 457: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.700132997939363e-05
    2. '(n' → logprob: -12.000017166137695
    3. 'n' → logprob: -12.125017166137695
    4. ')]
' → logprob: -13.375017166137695
    5. '()]' → logprob: -13.625017166137695
    6. '()' → logprob: -13.875017166137695
    7. ']' → logprob: -14.125017166137695
    8. '())' → logprob: -14.625017166137695
    9. ' )' → logprob: -15.500017166137695
    10. ')' → logprob: -16.250017166137695

Token 458: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 459: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014437427744269371
    2. '
' → logprob: -4.389437198638916
    3. '<|end|>' → logprob: -6.389437198638916
    4. '

' → logprob: -8.639437675476074
    5. '<|end|>' → logprob: -10.764437675476074
    6. '


' → logprob: -10.889437675476074
    7. '[' → logprob: -11.764437675476074
    8. '```' → logprob: -12.014437675476074
    9. '[]' → logprob: -12.514437675476074
    10. ' def' → logprob: -12.889437675476074

Token 460: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.306760805164231e-05
    2. ' n' → logprob: -12.25001335144043
    3. 's' → logprob: -12.87501335144043
    4. 'i' → logprob: -13.00001335144043
    5. '
' → logprob: -14.37501335144043
    6. 'ni' → logprob: -14.62501335144043
    7. 'm' → logprob: -15.25001335144043
    8. 'a' → logprob: -15.50001335144043
    9. '```' → logprob: -15.50001335144043
    10. 'l' → logprob: -15.75001335144043

Token 461: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0009862465085461736
    2. '1' → logprob: -7.250986099243164
    3. '2' → logprob: -8.250986099243164
    4. '4' → logprob: -11.500986099243164
    5. '0' → logprob: -13.250986099243164
    6. '(n' → logprob: -13.375986099243164
    7. '```' → logprob: -14.125986099243164
    8. '(' → logprob: -15.375986099243164
    9. '``' → logprob: -15.750986099243164
    10. 'def' → logprob: -15.750986099243164

Token 462: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -13.500001907348633
    3. 'def' → logprob: -15.125001907348633
    4. ' (' → logprob: -15.875001907348633
    5. 'n' → logprob: -18.125001907348633
    6. '(p' → logprob: -18.375001907348633
    7. '(m' → logprob: -19.000001907348633
    8. '()' → logprob: -19.125001907348633
    9. '():
' → logprob: -19.125001907348633
    10. '(
' → logprob: -19.375001907348633

Token 463: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23219823837280273
    2. '(n' → logprob: -1.8571982383728027
    3. '):
' → logprob: -2.9821982383728027
    4. 'n' → logprob: -8.607198715209961
    5. ')' → logprob: -8.857198715209961
    6. '):
' → logprob: -9.857198715209961
    7. '(m' → logprob: -11.857198715209961
    8. ':' → logprob: -12.357198715209961
    9. '(' → logprob: -12.482198715209961
    10. ' ):' → logprob: -12.607198715209961

Token 464: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.038912370800971985
    2. 'def' → logprob: -3.288912296295166
    3. '   ' → logprob: -7.413912296295166
    4. 'n' → logprob: -8.663912773132324
    5. ' def' → logprob: -9.538912773132324
    6. '```' → logprob: -11.038912773132324
    7. '(
' → logprob: -13.288912773132324
    8. '(def' → logprob: -14.038912773132324
    9. '"""
' → logprob: -14.288912773132324
    10. ' n' → logprob: -14.288912773132324

Token 465: ' """
' (ID: 7037)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' (adapté à ' """
') → logprob: -0.06079164892435074
    2. 'def' → logprob: -3.3107917308807373
    3. '   ' → logprob: -3.8107917308807373
    4. '"""' → logprob: -8.185791969299316
    5. '```' → logprob: -9.935791969299316
    6. '``' → logprob: -11.560791969299316
    7. '(n' → logprob: -12.060791969299316
    8. ''''
' → logprob: -12.060791969299316
    9. '"""
' → logprob: -12.185791969299316
    10. ' def' → logprob: -12.560791969299316

Token 466: '   ' (ID: 271)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.16320978105068207
    2. '   ' → logprob: -1.9132097959518433
    3. 'def' → logprob: -5.913209915161133
    4. '"""' → logprob: -9.038209915161133
    5. 'Reads' → logprob: -9.038209915161133
    6. '"""
' → logprob: -10.913209915161133
    7. '```' → logprob: -11.913209915161133
    8. ' """
' → logprob: -12.913209915161133
    9. ''''
' → logprob: -13.163209915161133
    10. '"' → logprob: -13.288209915161133

Token 467: ' Reads' (ID: 88839)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.016424234956502914
    2. 'def' → logprob: -4.766424179077148
    3. '   ' → logprob: -5.016424179077148
    4. 'Reads' (adapté à ' Reads') → logprob: -7.391424179077148
    5. 'Returns' → logprob: -8.391424179077148
    6. 'return' → logprob: -8.641424179077148
    7. '"""' → logprob: -9.266424179077148
    8. 'Return' → logprob: -11.516424179077148
    9. '
' → logprob: -11.641424179077148
    10. ''''
' → logprob: -11.891424179077148

Token 468: ' '' (ID: 461)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.012581583112478256
    2. ''n' → logprob: -4.6375813484191895
    3. '(n' → logprob: -6.6375813484191895
    4. ' n' → logprob: -6.8875813484191895
    5. '`' → logprob: -8.887581825256348
    6. '```' → logprob: -9.262581825256348
    7. '[n' → logprob: -9.512581825256348
    8. '"' → logprob: -9.762581825256348
    9. '
' → logprob: -10.637581825256348
    10. '_n' → logprob: -10.762581825256348

Token 469: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.383526149671525e-05
    2. ''n' → logprob: -10.000053405761719
    3. ' n' → logprob: -12.125053405761719
    4. 'int' → logprob: -14.000053405761719
    5. '(n' → logprob: -14.375053405761719
    6. '
' → logprob: -14.750053405761719
    7. '`' → logprob: -15.000053405761719
    8. 'def' → logprob: -15.875053405761719
    9. 'n't' → logprob: -15.875053405761719
    10. ''' → logprob: -16.12505340576172

Token 470: ''' (ID: 6)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.251701682806015
    2. ''' → logprob: -1.6267017126083374
    3. ' lines' → logprob: -4.626701831817627
    4. ' (' → logprob: -5.001701831817627
    5. 'lines' → logprob: -6.501701831817627
    6. ''(' → logprob: -6.626701831817627
    7. '_lines' → logprob: -7.001701831817627
    8. ''_' → logprob: -7.126701831817627
    9. '(lines' → logprob: -7.251701831817627
    10. ' line' → logprob: -7.626701831817627

Token 471: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.5844971537590027
    2. ' lines' → logprob: -1.2094972133636475
    3. '(n' → logprob: -3.2094972133636475
    4. 'line' → logprob: -3.3344972133636475
    5. ' integers' → logprob: -3.7094972133636475
    6. 'int' → logprob: -4.459496974945068
    7. 'inte' → logprob: -4.459496974945068
    8. '1' → logprob: -5.209496974945068
    9. 'ints' → logprob: -5.334496974945068
    10. 'n' → logprob: -5.459496974945068

Token 472: ' of' (ID: 328)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.09982160478830338
    2. 'def' → logprob: -3.0998215675354004
    3. ' of' → logprob: -3.3498215675354004
    4. '   ' → logprob: -4.5998215675354
    5. 'of' → logprob: -5.8498215675354
    6. '(' → logprob: -7.2248215675354
    7. '```' → logprob: -7.9748215675354
    8. ' def' → logprob: -8.349822044372559
    9. '()' → logprob: -9.224822044372559
    10. '
' → logprob: -9.224822044372559

Token 473: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.018196064978837967
    2. ' input' → logprob: -4.018196105957031
    3. 'list' → logprob: -10.268196105957031
    4. 'int' → logprob: -11.893196105957031
    5. 'ints' → logprob: -13.893196105957031
    6. 'inputs' → logprob: -13.893196105957031
    7. 'n' → logprob: -14.143196105957031
    8. 's' → logprob: -14.393196105957031
    9. 'inte' → logprob: -14.643196105957031
    10. '
' → logprob: -15.143196105957031

Token 474: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16841016709804535
    2. '(n' → logprob: -1.9184101819992065
    3. '):' → logprob: -5.543410301208496
    4. '   ' → logprob: -6.793410301208496
    5. '):
' → logprob: -6.918410301208496
    6. 'def' → logprob: -7.293410301208496
    7. ',n' → logprob: -7.793410301208496
    8. ')' → logprob: -8.043410301208496
    9. '():' → logprob: -8.543410301208496
    10. '),' → logprob: -9.043410301208496

Token 475: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.037544794380664825
    2. ' each' → logprob: -4.0375447273254395
    3. 'spl' → logprob: -4.4125447273254395
    4. '   ' → logprob: -5.9125447273254395
    5. 'def' → logprob: -6.1625447273254395
    6. ' splitting' → logprob: -6.5375447273254395
    7. 'Each' → logprob: -7.7875447273254395
    8. 'split' → logprob: -8.912545204162598
    9. 's' → logprob: -9.162545204162598
    10. '...' → logprob: -10.287545204162598

Token 476: ' line' (ID: 2543)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.939318835735321
    2. '():' → logprob: -1.1893188953399658
    3. '   ' → logprob: -2.314318895339966
    4. '():
' → logprob: -2.689318895339966
    5. 'def' → logprob: -3.189318895339966
    6. '):' → logprob: -3.814318895339966
    7. '().' → logprob: -3.939318895339966
    8. '):
' → logprob: -4.439318656921387
    9. ')' → logprob: -4.439318656921387
    10. '(n' → logprob: -5.439318656921387

Token 477: ' containing' (ID: 15683)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7258042097091675
    2. '()' → logprob: -1.1008042097091675
    3. 'def' → logprob: -2.600804328918457
    4. ')' → logprob: -3.225804328918457
    5. '=' → logprob: -3.725804328918457
    6. '```' → logprob: -4.225804328918457
    7. '().' → logprob: -4.600804328918457
    8. ' splitting' → logprob: -5.350804328918457
    9. '.split' → logprob: -5.850804328918457
    10. 'split' → logprob: -6.225804328918457

Token 478: ' space' (ID: 4918)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6025735139846802
    2. 'list' → logprob: -1.9775735139846802
    3. 'int' → logprob: -2.7275733947753906
    4. 'ints' → logprob: -2.8525733947753906
    5. ' integers' → logprob: -3.1025733947753906
    6. 'inte' → logprob: -3.1025733947753906
    7. 'n' → logprob: -3.4775733947753906
    8. 's' → logprob: -3.6025733947753906
    9. ' a' → logprob: -3.7275733947753906
    10. ' n' → logprob: -5.477573394775391

Token 479: '-separated' (ID: 189658)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8727678060531616
    2. 's' → logprob: -1.2477678060531616
    3. '-separated' → logprob: -1.6227678060531616
    4. 'se' → logprob: -3.122767925262451
    5. '.split' → logprob: -4.497767925262451
    6. '    
' → logprob: -4.997767925262451
    7. '```' → logprob: -4.997767925262451
    8. 'split' → logprob: -5.622767925262451
    9. 'del' → logprob: -5.747767925262451
    10. '=' → logprob: -5.872767925262451

Token 480: ' integers' (ID: 54912)
  Prédit: 'ints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ints' → logprob: -0.7388752102851868
    2. 'inte' → logprob: -1.238875150680542
    3. ' integers' → logprob: -1.988875150680542
    4. 'int' → logprob: -2.488875150680542
    5. 'def' → logprob: -4.613875389099121
    6. 'strings' → logprob: -6.988875389099121
    7. ' ints' → logprob: -7.863875389099121
    8. '[int' → logprob: -7.988875389099121
    9. 's' → logprob: -8.113875389099121
    10. '   ' → logprob: -8.488875389099121

Token 481: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029236819595098495
    2. 'def' → logprob: -4.029236793518066
    3. ',' → logprob: -5.279236793518066
    4. '):' → logprob: -5.529236793518066
    5. '):
' → logprob: -6.904236793518066
    6. ')' → logprob: -7.904236793518066
    7. ':' → logprob: -9.029236793518066
    8. '():
' → logprob: -9.779236793518066
    9. '.' → logprob: -9.904236793518066
    10. '()' → logprob: -10.029236793518066

Token 482: ' and' (ID: 326)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11497493088245392
    2. '   ' → logprob: -2.2399749755859375
    3. ' def' → logprob: -6.4899749755859375
    4. 'and' → logprob: -9.364974975585938
    5. '    
' → logprob: -9.614974975585938
    6. ')' → logprob: -9.614974975585938
    7. 'n' → logprob: -9.864974975585938
    8. 'return' → logprob: -9.864974975585938
    9. '```' → logprob: -9.864974975585938
    10. ' and' → logprob: -10.114974975585938

Token 483: ' returns' (ID: 7377)
  Prédit: 'returns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'returns' → logprob: -0.6875467896461487
    2. 'def' → logprob: -1.187546730041504
    3. ' returns' → logprob: -1.687546730041504
    4. '   ' → logprob: -5.812546730041504
    5. ' def' → logprob: -5.937546730041504
    6. 'return' → logprob: -6.562546730041504
    7. 'Returns' → logprob: -8.937546730041504
    8. '
' → logprob: -11.062546730041504
    9. ' ' → logprob: -11.437546730041504
    10. ' return' → logprob: -11.687546730041504

Token 484: ' them' (ID: 1373)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.3025663495063782
    2. ' [' → logprob: -2.3025662899017334
    3. '[list' → logprob: -2.3025662899017334
    4. '[' → logprob: -3.8025662899017334
    5. '[[' → logprob: -4.0525665283203125
    6. '[int' → logprob: -4.5525665283203125
    7. '[List' → logprob: -5.0525665283203125
    8. '[
' → logprob: -5.6775665283203125
    9. '   ' → logprob: -8.302566528320312
    10. '[np' → logprob: -8.802566528320312

Token 485: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.15046602487564087
    2. 'as' → logprob: -2.525465965270996
    3. '   ' → logprob: -3.400465965270996
    4. '[n' → logprob: -4.400465965270996
    5. 'def' → logprob: -4.650465965270996
    6. '[' → logprob: -5.900465965270996
    7. '[[' → logprob: -8.150465965270996
    8. '[
' → logprob: -8.150465965270996
    9. ' for' → logprob: -8.275465965270996
    10. ' [' → logprob: -8.775465965270996

Token 486: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5890012383460999
    2. '[list' → logprob: -1.089001178741455
    3. 'a' → logprob: -3.339001178741455
    4. '[n' → logprob: -3.589001178741455
    5. ' list' → logprob: -4.339001178741455
    6. 'list' → logprob: -4.589001178741455
    7. ' [' → logprob: -4.714001178741455
    8. '[List' → logprob: -5.214001178741455
    9. '[' → logprob: -5.589001178741455
    10. '[
' → logprob: -6.589001178741455

Token 487: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.059142015874385834
    2. ' list' → logprob: -3.0591421127319336
    3. '[list' → logprob: -4.559142112731934
    4. '[
' → logprob: -11.184142112731934
    5. '[List' → logprob: -12.059142112731934
    6. '[[' → logprob: -12.309142112731934
    7. '[' → logprob: -13.559142112731934
    8. '[n' → logprob: -14.309142112731934
    9. '   ' → logprob: -14.309142112731934
    10. ' [' → logprob: -14.809142112731934

Token 488: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8757345080375671
    2. 'of' → logprob: -1.625734567642212
    3. '[list' → logprob: -1.875734567642212
    4. ' of' → logprob: -2.125734567642212
    5. '[List' → logprob: -2.375734567642212
    6. '[' → logprob: -4.250734329223633
    7. '[
' → logprob: -6.375734329223633
    8. '_of' → logprob: -6.500734329223633
    9. '```' → logprob: -6.500734329223633
    10. '
' → logprob: -7.750734329223633

Token 489: ' lists' (ID: 19471)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.004105827305465937
    2. 'lists' → logprob: -5.504106044769287
    3. '[list' → logprob: -10.754105567932129
    4. ' lists' → logprob: -12.504105567932129
    5. ' list' → logprob: -13.004105567932129
    6. '   ' → logprob: -17.379106521606445
    7. '```' → logprob: -19.004106521606445
    8. 'List' → logprob: -20.004106521606445
    9. '[
' → logprob: -20.129106521606445
    10. '
' → logprob: -20.379106521606445

Token 490: '.

' (ID: 364)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.13585209846496582
    2. '   ' → logprob: -2.135852098464966
    3. '[List' → logprob: -5.510851860046387
    4. '[list' → logprob: -5.760851860046387
    5. 'of' → logprob: -7.135851860046387
    6. '```' → logprob: -7.760851860046387
    7. ' of' → logprob: -8.010851860046387
    8. '[[' → logprob: -10.385851860046387
    9. '[' → logprob: -10.385851860046387
    10. '[
' → logprob: -10.635851860046387

Token 491: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008619774132966995
    2. 'def' → logprob: -4.758619785308838
    3. ' def' → logprob: -12.75861930847168
    4. '```' → logprob: -13.13361930847168
    5. '(def' → logprob: -16.63361930847168
    6. '(' → logprob: -17.00861930847168
    7. '
' → logprob: -17.25861930847168
    8. '[
' → logprob: -17.38361930847168
    9. 'return' → logprob: -17.75861930847168
    10. ')' → logprob: -17.75861930847168

Token 492: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26612114906311035
    2. 'def' → logprob: -1.5161211490631104
    3. 'return' → logprob: -4.266120910644531
    4. '```' → logprob: -10.141120910644531
    5. ' return' → logprob: -11.391120910644531
    6. ' def' → logprob: -12.391120910644531
    7. '``' → logprob: -15.141120910644531
    8. '
' → logprob: -15.266120910644531
    9. '	return' → logprob: -16.64112091064453
    10. '[
' → logprob: -16.64112091064453

Token 493: ':
' (ID: 734)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6678076982498169
    2. 'def' → logprob: -0.7928076982498169
    3. '   ' → logprob: -3.5428075790405273
    4. ' def' → logprob: -6.167807579040527
    5. '```' → logprob: -6.292807579040527
    6. 'n' → logprob: -7.542807579040527
    7. '(
' → logprob: -7.542807579040527
    8. '):
' → logprob: -9.042807579040527
    9. '       ' → logprob: -9.167807579040527
    10. '
' → logprob: -9.292807579040527

Token 494: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.284797340631485
    2. '   ' → logprob: -1.4097973108291626
    3. 'n' → logprob: -5.909797191619873
    4. 'def' → logprob: -7.034797191619873
    5. '```' → logprob: -10.534797668457031
    6. ' n' → logprob: -11.659797668457031
    7. '     ' → logprob: -12.284797668457031
    8. '(n' → logprob: -12.784797668457031
    9. '    
' → logprob: -14.534797668457031
    10. '    ' → logprob: -14.784797668457031

Token 495: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.00024287392443511635
    2. '   ' → logprob: -8.875243186950684
    3. ' n' → logprob: -9.500243186950684
    4. 'def' → logprob: -10.500243186950684
    5. '```' → logprob: -15.125243186950684
    6. '       ' → logprob: -15.625243186950684
    7. '	n' → logprob: -16.250242233276367
    8. 'ndef' → logprob: -17.125242233276367
    9. 'int' → logprob: -17.625242233276367
    10. '(n' → logprob: -18.000242233276367

Token 496: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.03521254286170006
    2. '(int' → logprob: -4.035212516784668
    3. '(n' → logprob: -4.535212516784668
    4. '   ' → logprob: -5.660212516784668
    5. 'def' → logprob: -6.285212516784668
    6. ':' → logprob: -7.535212516784668
    7. '```' → logprob: -9.285212516784668
    8. ' def' → logprob: -9.410212516784668
    9. '(' → logprob: -10.410212516784668
    10. ':int' → logprob: -10.910212516784668

Token 497: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -8.77627644513268e-06
    2. ' int' → logprob: -11.750008583068848
    3. '   ' → logprob: -14.000008583068848
    4. '(int' → logprob: -19.000009536743164
    5. '[int' → logprob: -19.375009536743164
    6. ':int' → logprob: -19.500009536743164
    7. ')' → logprob: -20.500009536743164
    8. '
' → logprob: -21.000009536743164
    9. 'n' → logprob: -21.375009536743164
    10. '=int' → logprob: -21.375009536743164

Token 498: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04109896346926689
    2. '):
' → logprob: -4.2910990715026855
    3. ':' → logprob: -4.4160990715026855
    4. '   ' → logprob: -4.4160990715026855
    5. ')' → logprob: -6.9160990715026855
    6. 'def' → logprob: -7.1660990715026855
    7. '(n' → logprob: -8.791098594665527
    8. '(int' → logprob: -8.791098594665527
    9. '```' → logprob: -9.291098594665527
    10. '[int' → logprob: -10.166098594665527

Token 499: ' Number' (ID: 9184)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0306661669164896
    2. ' int' → logprob: -4.030666351318359
    3. '   ' → logprob: -4.405666351318359
    4. '       ' → logprob: -8.90566635131836
    5. 'def' → logprob: -10.40566635131836
    6. '[int' → logprob: -10.90566635131836
    7. ' ' → logprob: -11.28066635131836
    8. '(int' → logprob: -11.90566635131836
    9. 'Number' → logprob: -12.15566635131836
    10. '  ' → logprob: -12.28066635131836

Token 500: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2704704999923706
    2. 'def' → logprob: -1.3954704999923706
    3. '(n' → logprob: -2.14547061920166
    4. ':' → logprob: -2.27047061920166
    5. ' of' → logprob: -2.27047061920166
    6. 'of' → logprob: -2.64547061920166
    7. '```' → logprob: -3.64547061920166
    8. '<|end|>' → logprob: -4.64547061920166
    9. ')' → logprob: -4.77047061920166
    10. '       ' → logprob: -5.52047061920166

Token 501: ' input' (ID: 3422)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.1848846673965454
    2. 'lines' → logprob: -2.184884548187256
    3. ' input' → logprob: -3.309884548187256
    4. 'input' → logprob: -4.059884548187256
    5. '_lines' → logprob: -7.309884548187256
    6. 'int' → logprob: -7.559884548187256
    7. ' inputs' → logprob: -8.059885025024414
    8. ' integers' → logprob: -8.184885025024414
    9. 'inputs' → logprob: -9.059885025024414
    10. 'n' → logprob: -9.059885025024414

Token 502: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.501505970954895
    2. 'lines' → logprob: -1.501505970954895
    3. '(n' → logprob: -2.6265058517456055
    4. '   ' → logprob: -3.2515058517456055
    5. '_lines' → logprob: -4.2515058517456055
    6. 'def' → logprob: -4.3765058517456055
    7. '):
' → logprob: -4.6265058517456055
    8. ')' → logprob: -5.0015058517456055
    9. '(lines' → logprob: -5.0015058517456055
    10. 's' → logprob: -5.5015058517456055

Token 503: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.3039569854736328
    2. 'to' → logprob: -1.4289569854736328
    3. 'def' → logprob: -1.4289569854736328
    4. '   ' → logprob: -2.178956985473633
    5. '):
' → logprob: -2.178956985473633
    6. '):' → logprob: -4.303956985473633
    7. ')' → logprob: -5.428956985473633
    8. '```' → logprob: -6.553956985473633
    9. 'To' → logprob: -6.928956985473633
    10. '<|end|>' → logprob: -7.678956985473633

Token 504: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.006715967319905758
    2. ' read' → logprob: -5.006715774536133
    3. '
' → logprob: -15.006715774536133
    4. ' ' → logprob: -16.131715774536133
    5. '   ' → logprob: -17.131715774536133
    6. '_read' → logprob: -17.381715774536133
    7. 'Read' → logprob: -17.756715774536133
    8. 'n' → logprob: -18.006715774536133
    9. '  ' → logprob: -18.131715774536133
    10. 'return' → logprob: -18.756715774536133

Token 505: '.

' (ID: 364)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5913149118423462
    2. '   ' → logprob: -1.2163149118423462
    3. '):' → logprob: -1.9663149118423462
    4. ')' → logprob: -4.966314792633057
    5. 'def' → logprob: -6.216314792633057
    6. '(n' → logprob: -7.841314792633057
    7. '
' → logprob: -8.216315269470215
    8. 'n' → logprob: -8.841315269470215
    9. '):
' → logprob: -8.966315269470215
    10. '):

' → logprob: -9.466315269470215

Token 506: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006827848497778177
    2. 'def' → logprob: -5.0068278312683105
    3. '```' → logprob: -10.006828308105469
    4. '
' → logprob: -10.631828308105469
    5. '"""
' → logprob: -11.006828308105469
    6. ' def' → logprob: -11.631828308105469
    7. 'Returns' → logprob: -12.506828308105469
    8. ' ' → logprob: -12.756828308105469
    9. '  ' → logprob: -12.756828308105469
    10. '    ' → logprob: -13.131828308105469

Token 507: ' Returns' (ID: 9609)
  Prédit: 'Returns'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Returns' (adapté à ' Returns') → logprob: -0.08251991122961044
    2. '   ' → logprob: -2.582520008087158
    3. '"""
' → logprob: -6.957520008087158
    4. 'return' → logprob: -7.332520008087158
    5. 'returns' → logprob: -7.332520008087158
    6. '```' → logprob: -7.332520008087158
    7. 'Return' → logprob: -8.08251953125
    8. '
' → logprob: -8.70751953125
    9. 'def' → logprob: -8.95751953125
    10. ' Returns' → logprob: -10.08251953125

Token 508: ':
' (ID: 734)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5202186107635498
    2. '   ' → logprob: -1.0202186107635498
    3. '(
' → logprob: -4.020218849182129
    4. 'def' → logprob: -4.520218849182129
    5. '[n' → logprob: -5.145218849182129
    6. ' (' → logprob: -5.770218849182129
    7. '[
' → logprob: -6.145218849182129
    8. '
' → logprob: -6.520218849182129
    9. '```' → logprob: -7.020218849182129
    10. '(' → logprob: -7.520218849182129

Token 509: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005632251035422087
    2. 'list' → logprob: -5.255632400512695
    3. ' list' → logprob: -7.880632400512695
    4. '[list' → logprob: -11.505632400512695
    5. 'def' → logprob: -12.380632400512695
    6. '
' → logprob: -13.130632400512695
    7. '    ' → logprob: -14.380632400512695
    8. '  ' → logprob: -14.380632400512695
    9. 'List' → logprob: -14.505632400512695
    10. 'n' → logprob: -14.630632400512695

Token 510: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -5.319370302458992e-06
    2. ' list' → logprob: -12.250005722045898
    3. 'List' → logprob: -14.875005722045898
    4. '   ' → logprob: -16.6250057220459
    5. '[list' → logprob: -16.8750057220459
    6. '       ' → logprob: -21.2500057220459
    7. '
' → logprob: -21.6250057220459
    8. '(list' → logprob: -22.7500057220459
    9. '```' → logprob: -22.8750057220459
    10. ':list' → logprob: -22.8750057220459

Token 511: '[list' (ID: 141696)
  Prédit: '[list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -7.584239938296378e-06
    2. 'list' → logprob: -12.000007629394531
    3. '[List' → logprob: -13.750007629394531
    4. '```' → logprob: -15.500007629394531
    5. '[[' → logprob: -16.87500762939453
    6. 'of' → logprob: -17.75000762939453
    7. '[
' → logprob: -18.62500762939453
    8. '(list' → logprob: -18.75000762939453
    9. '[' → logprob: -19.62500762939453
    10. '
' → logprob: -19.62500762939453

Token 512: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -3.128163257315464e-07
    2. 'int' → logprob: -15.125
    3. '<int' → logprob: -17.875
    4. ']int' → logprob: -19.75
    5. '[
' → logprob: -20.25
    6. '[' → logprob: -20.5
    7. '[list' → logprob: -21.0
    8. '[List' → logprob: -21.125
    9. '[i' → logprob: -21.625
    10. '[in' → logprob: -21.75

Token 513: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.049481332302093506
    2. ']:' → logprob: -3.0494813919067383
    3. '[int' → logprob: -7.549481391906738
    4. ']' → logprob: -8.549481391906738
    5. ']]:
' → logprob: -8.799481391906738
    6. ' ]' → logprob: -12.424481391906738
    7. ']>' → logprob: -12.549481391906738
    8. ']]]' → logprob: -12.674481391906738
    9. '[' → logprob: -13.049481391906738
    10. ']):' → logprob: -13.174481391906738

Token 514: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3121374547481537
    2. ':' → logprob: -1.562137484550476
    3. ':
' → logprob: -4.187137603759766
    4. '(n' → logprob: -4.312137603759766
    5. '):' → logprob: -4.562137603759766
    6. ']:' → logprob: -4.937137603759766
    7. ']' → logprob: -5.812137603759766
    8. '[n' → logprob: -5.937137603759766
    9. '):
' → logprob: -6.062137603759766
    10. ']:
' → logprob: -6.937137603759766

Token 515: ' List' (ID: 2655)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.06160391867160797
    2. ' [' → logprob: -3.9366040229797363
    3. '   ' → logprob: -4.311604022979736
    4. '[' → logprob: -4.811604022979736
    5. '[list' → logprob: -4.936604022979736
    6. '[
' → logprob: -5.811604022979736
    7. '[[' → logprob: -5.936604022979736
    8. '[List' → logprob: -6.061604022979736
    9. '[Int' → logprob: -6.436604022979736
    10. 'return' → logprob: -6.811604022979736

Token 516: ' of' (ID: 328)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.3526504635810852
    2. '[list' → logprob: -1.6026504039764404
    3. '[List' → logprob: -2.3526504039764404
    4. '   ' → logprob: -7.6026506423950195
    5. '[[' → logprob: -9.35265064239502
    6. '[' → logprob: -9.97765064239502
    7. 'of' → logprob: -10.35265064239502
    8. '[
' → logprob: -11.35265064239502
    9. '```' → logprob: -11.97765064239502
    10. '
' → logprob: -12.47765064239502

Token 517: ' '' (ID: 461)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.11500436812639236
    2. '[list' → logprob: -2.615004301071167
    3. '[int' → logprob: -3.365004301071167
    4. 'lists' → logprob: -7.240004539489746
    5. ' list' → logprob: -9.615004539489746
    6. 'int' → logprob: -9.865004539489746
    7. '[List' → logprob: -9.990004539489746
    8. ' lists' → logprob: -11.990004539489746
    9. '[
' → logprob: -12.240004539489746
    10. '[' → logprob: -12.365004539489746

Token 518: 'n' (ID: 77)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0010137568460777402
    2. '[list' → logprob: -7.25101375579834
    3. '[int' → logprob: -8.50101375579834
    4. 'int' → logprob: -9.25101375579834
    5. 'lists' → logprob: -12.75101375579834
    6. ' list' → logprob: -14.25101375579834
    7. 'List' → logprob: -15.25101375579834
    8. '[List' → logprob: -15.50101375579834
    9. 'lst' → logprob: -15.87601375579834
    10. '[n' → logprob: -16.251014709472656

Token 519: ''' (ID: 6)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.12085099518299103
    2. '[int' → logprob: -2.8708510398864746
    3. '[List' → logprob: -2.8708510398864746
    4. '[' → logprob: -8.120850563049316
    5. 'list' → logprob: -9.120850563049316
    6. ' lists' → logprob: -9.870850563049316
    7. 'lists' → logprob: -9.995850563049316
    8. '[
' → logprob: -11.370850563049316
    9. '[[' → logprob: -12.870850563049316
    10. '(list' → logprob: -13.370850563049316

Token 520: ' lists' (ID: 19471)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.36798301339149475
    2. '[int' → logprob: -1.3679829835891724
    3. '[List' → logprob: -3.117983102798462
    4. 'list' → logprob: -5.117982864379883
    5. 'lists' → logprob: -5.992982864379883
    6. ' lists' → logprob: -8.242982864379883
    7. '[' → logprob: -8.742982864379883
    8. 'Lists' → logprob: -9.867982864379883
    9. '[input' → logprob: -11.742982864379883
    10. '(list' → logprob: -12.117982864379883

Token 521: ' of' (ID: 328)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0070595345459878445
    2. '[List' → logprob: -5.507059574127197
    3. '[list' → logprob: -5.882059574127197
    4. '[[' → logprob: -9.382059097290039
    5. '   ' → logprob: -9.507059097290039
    6. 'of' → logprob: -11.632059097290039
    7. '[' → logprob: -11.632059097290039
    8. ' of' → logprob: -12.632059097290039
    9. '[Int' → logprob: -13.007059097290039
    10. '```' → logprob: -13.507059097290039

Token 522: ' integers' (ID: 54912)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4817521870136261
    2. '[int' → logprob: -0.9817521572113037
    3. 'ints' → logprob: -5.231752395629883
    4. 'inte' → logprob: -6.106752395629883
    5. 'list' → logprob: -10.356752395629883
    6. ' int' → logprob: -10.856752395629883
    7. ' integers' → logprob: -10.981752395629883
    8. '<int' → logprob: -13.231752395629883
    9. ' ints' → logprob: -13.356752395629883
    10. 'lists' → logprob: -14.481752395629883

Token 523: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18335922062397003
    2. ']' → logprob: -1.8083592653274536
    3. ']
' → logprob: -6.933359146118164
    4. 'def' → logprob: -7.433359146118164
    5. '(n' → logprob: -7.808359146118164
    6. ' =' → logprob: -7.933359146118164
    7. '[int' → logprob: -8.183359146118164
    8. '[n' → logprob: -8.808359146118164
    9. ']:
' → logprob: -9.308359146118164
    10. '=' → logprob: -9.308359146118164

Token 524: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00020425561524461955
    2. '```' → logprob: -8.750204086303711
    3. 'def' → logprob: -11.250204086303711
    4. ')' → logprob: -11.375204086303711
    5. '"""
' → logprob: -11.500204086303711
    6. 'return' → logprob: -12.625204086303711
    7. ']' → logprob: -13.000204086303711
    8. ')
' → logprob: -13.750204086303711
    9. '"""' → logprob: -14.250204086303711
    10. '``' → logprob: -14.250204086303711

Token 525: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.815280696377158e-05
    2. '```' → logprob: -10.125078201293945
    3. 'return' → logprob: -11.000078201293945
    4. '"""
' (adapté à ' """
') → logprob: -11.625078201293945
    5. ']' → logprob: -12.000078201293945
    6. ')' → logprob: -13.125078201293945
    7. ' return' → logprob: -13.250078201293945
    8. 'def' → logprob: -14.375078201293945
    9. ']
' → logprob: -14.625078201293945
    10. '  ' → logprob: -14.625078201293945

Token 526: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014181245118379593
    2. 'return' → logprob: -4.264181137084961
    3. '```' → logprob: -11.514181137084961
    4. ' return' → logprob: -11.889181137084961
    5. 'def' → logprob: -14.139181137084961
    6. '	return' → logprob: -15.889181137084961
    7. '``' → logprob: -17.26418113708496
    8. '   ' → logprob: -17.63918113708496
    9. '`' → logprob: -17.76418113708496
    10. '{return' → logprob: -18.38918113708496

Token 527: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.004142861347645521
    2. '   ' → logprob: -5.504142761230469
    3. ' return' → logprob: -9.754142761230469
    4. 'def' → logprob: -12.004142761230469
    5. '	return' → logprob: -15.879142761230469
    6. '
' → logprob: -16.25414276123047
    7. '```' → logprob: -18.87914276123047
    8. '[
' → logprob: -20.12914276123047
    9. '{return' → logprob: -20.37914276123047
    10. '  ' → logprob: -20.87914276123047

Token 528: ' [[' (ID: 9237)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0182265043258667
    2. '[[' → logprob: -4.018226623535156
    3. '[' → logprob: -9.768226623535156
    4. '[Int' → logprob: -11.268226623535156
    5. ' [' → logprob: -12.643226623535156
    6. '[input' → logprob: -13.643226623535156
    7. '[np' → logprob: -13.768226623535156
    8. ' [[' → logprob: -14.768226623535156
    9. '[list' → logprob: -15.268226623535156
    10. '[n' → logprob: -15.268226623535156

Token 529: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: 0.0
    2. ' int' → logprob: -19.125
    3. '[int' → logprob: -21.875
    4. '(int' → logprob: -23.375
    5. '
' → logprob: -23.5
    6. '   ' → logprob: -24.125
    7. ']int' → logprob: -24.625
    8. '```' → logprob: -24.625
    9. '<int' → logprob: -25.0
    10. '	int' → logprob: -25.25

Token 530: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.014166681095957756
    2. 'x' → logprob: -4.264166831970215
    3. '(y' → logprob: -13.764166831970215
    4. '(i' → logprob: -14.514166831970215
    5. 'token' → logprob: -14.639166831970215
    6. 'y' → logprob: -14.764166831970215
    7. 'j' → logprob: -15.639166831970215
    8. '(' → logprob: -15.764166831970215
    9. '(token' → logprob: -15.764166831970215
    10. 'num' → logprob: -16.6391658782959

Token 531: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20256878435611725
    2. 'for' → logprob: -1.702568769454956
    3. ' for' → logprob: -7.202569007873535
    4. '()' → logprob: -8.077569007873535
    5. '(x' → logprob: -9.702569007873535
    6. 'x' → logprob: -10.952569007873535
    7. ']' → logprob: -12.077569007873535
    8. ' )' → logprob: -12.327569007873535
    9. 'in' → logprob: -12.327569007873535
    10. '}' → logprob: -12.952569007873535

Token 532: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0025106200482696295
    2. ' for' → logprob: -6.0025105476379395
    3. ')' → logprob: -10.627511024475098
    4. 'in' → logprob: -12.502511024475098
    5. '(x' → logprob: -12.502511024475098
    6. '()' → logprob: -13.252511024475098
    7. 'x' → logprob: -14.377511024475098
    8. '	for' → logprob: -15.502511024475098
    9. ' in' → logprob: -16.12751007080078
    10. 'or' → logprob: -16.12751007080078

Token 533: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03804229199886322
    2. ' x' → logprob: -3.2880423069000244
    3. 'input' → logprob: -14.538042068481445
    4. ' in' → logprob: -15.913042068481445
    5. 'in' → logprob: -16.038042068481445
    6. '(x' → logprob: -16.538042068481445
    7. ' input' → logprob: -18.038042068481445
    8. ' ' → logprob: -18.288042068481445
    9. '	x' → logprob: -18.538042068481445
    10. 's' → logprob: -19.413042068481445

Token 534: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3869125545024872
    2. 'in' → logprob: -1.1369125843048096
    3. 'x' → logprob: -10.51191234588623
    4. 'input' → logprob: -11.38691234588623
    5. 's' → logprob: -14.13691234588623
    6. ' ' → logprob: -14.63691234588623
    7. ' x' → logprob: -14.88691234588623
    8. 'inp' → logprob: -15.13691234588623
    9. 'In' → logprob: -15.26191234588623
    10. 'import' → logprob: -15.63691234588623

Token 535: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.018150178715586662
    2. ' input' → logprob: -4.018150329589844
    3. 'x' → logprob: -15.643150329589844
    4. 's' → logprob: -17.018150329589844
    5. '(input' → logprob: -17.143150329589844
    6. ' ' → logprob: -17.518150329589844
    7. 'in' → logprob: -17.643150329589844
    8. 'line' → logprob: -18.143150329589844
    9. '<input' → logprob: -18.143150329589844
    10. ' x' → logprob: -18.393150329589844

Token 536: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.896309739408025e-07
    2. '()' → logprob: -14.125000953674316
    3. ' ().' → logprob: -17.75
    4. '.' → logprob: -18.75
    5. '(' → logprob: -19.375
    6. '()].' → logprob: -19.625
    7. '.split' → logprob: -20.625
    8. '()
' → logprob: -21.5
    9. '].' → logprob: -21.625
    10. '()]' → logprob: -22.875

Token 537: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.981667537620524e-06
    2. 'strip' → logprob: -13.250001907348633
    3. ' split' → logprob: -16.000001907348633
    4. '.split' → logprob: -19.375001907348633
    5. 'rstrip' → logprob: -19.625001907348633
    6. '(split' → logprob: -19.750001907348633
    7. 's' → logprob: -20.375001907348633
    8. 'spl' → logprob: -20.625001907348633
    9. 'plit' → logprob: -20.750001907348633
    10. '().' → logprob: -20.875001907348633

Token 538: '()]' (ID: 59063)
  Prédit: '()]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -1.0802738870552275e-05
    2. '()' → logprob: -11.50001049041748
    3. '()]
' → logprob: -14.75001049041748
    4. ']' → logprob: -15.62501049041748
    5. '(' → logprob: -18.000011444091797
    6. '())' → logprob: -18.125011444091797
    7. ' ()' → logprob: -19.500011444091797
    8. '()}' → logprob: -19.625011444091797
    9. '()][' → logprob: -20.250011444091797
    10. '()[' → logprob: -21.000011444091797

Token 539: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3454928398132324
    2. 'for' → logprob: -1.3454928398132324
    3. '()' → logprob: -3.4704928398132324
    4. '   ' → logprob: -7.470492839813232
    5. ' ()' → logprob: -11.59549331665039
    6. ' in' → logprob: -11.84549331665039
    7. 'n' → logprob: -11.97049331665039
    8. '	for' → logprob: -12.22049331665039
    9. '(n' → logprob: -12.47049331665039
    10. ']' → logprob: -12.72049331665039

Token 540: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.027377275750041008
    2. ' _' → logprob: -3.7773773670196533
    3. ' range' → logprob: -5.527377128601074
    4. 'range' → logprob: -8.902377128601074
    5. '_range' → logprob: -11.527377128601074
    6. ' in' → logprob: -14.277377128601074
    7. ' ' → logprob: -16.40237808227539
    8. ' ' → logprob: -16.65237808227539
    9. '_
' → logprob: -18.40237808227539
    10. '_in' → logprob: -18.40237808227539

Token 541: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005413046106696129
    2. 'in' → logprob: -5.255413055419922
    3. 'range' → logprob: -8.630413055419922
    4. ' range' → logprob: -14.755413055419922
    5. ' ' → logprob: -15.630413055419922
    6. 'import' → logprob: -15.880413055419922
    7. '  ' → logprob: -17.505413055419922
    8. 'n' → logprob: -18.005413055419922
    9. 'i' → logprob: -18.630413055419922
    10. '   ' → logprob: -18.880413055419922

Token 542: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004078401252627373
    2. ' range' → logprob: -5.504078388214111
    3. '(range' → logprob: -19.754077911376953
    4. '	range' → logprob: -21.004077911376953
    5. '_range' → logprob: -21.754077911376953
    6. 'rang' → logprob: -23.004077911376953
    7. 'in' → logprob: -23.879077911376953
    8. '   ' → logprob: -24.129077911376953
    9. 'r' → logprob: -24.129077911376953
    10. 'n' → logprob: -24.129077911376953

Token 543: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.20143350958824158
    2. 'n' → logprob: -1.701433539390564
    3. '(' → logprob: -11.451433181762695
    4. ' n' → logprob: -11.576433181762695
    5. ' (' → logprob: -15.826433181762695
    6. '(
' → logprob: -17.951433181762695
    7. '	n' → logprob: -18.326433181762695
    8. '_n' → logprob: -18.701433181762695
    9. ')n' → logprob: -19.326433181762695
    10. 'range' → logprob: -19.826433181762695

Token 544: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0009732789476402104
    2. ']' → logprob: -7.000973224639893
    3. '(n' → logprob: -10.12597370147705
    4. '()]' → logprob: -10.87597370147705
    5. 'n' → logprob: -13.62597370147705
    6. ')]
' → logprob: -14.37597370147705
    7. ')' → logprob: -14.37597370147705
    8. '}]' → logprob: -15.37597370147705
    9. '()' → logprob: -16.375972747802734
    10. ' ]' → logprob: -16.750972747802734

Token 545: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 546: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0016122236847877502
    2. '
' → logprob: -6.751612186431885
    3. '<|end|>' → logprob: -7.876612186431885
    4. '```' → logprob: -10.001612663269043
    5. '

' → logprob: -12.251612663269043
    6. '#' → logprob: -12.626612663269043
    7. '[' → logprob: -13.001612663269043
    8. 'n' → logprob: -13.126612663269043
    9. '<|end|>' → logprob: -13.251612663269043
    10. 'ndef' → logprob: -14.376612663269043

Token 547: ' t' (ID: 260)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.4436415731906891
    2. 'n' → logprob: -1.0686415433883667
    3. 'nf' → logprob: -5.318641662597656
    4. 'b' → logprob: -5.568641662597656
    5. 'main' → logprob: -6.943641662597656
    6. 'float' → logprob: -7.193641662597656
    7. 's' → logprob: -7.193641662597656
    8. 'm' → logprob: -7.443641662597656
    9. 'fn' → logprob: -7.943641662597656
    10. 'a' → logprob: -7.943641662597656

Token 548: '3' (ID: 18)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08449959754943848
    2. 'o' → logprob: -3.0844995975494385
    3. '1' → logprob: -4.959499359130859
    4. 'est' → logprob: -5.334499359130859
    5. 'r' → logprob: -5.709499359130859
    6. '4' → logprob: -5.709499359130859
    7. '(n' → logprob: -5.834499359130859
    8. '():
' → logprob: -5.959499359130859
    9. 's' → logprob: -6.459499359130859
    10. '()' → logprob: -6.709499359130859

Token 549: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.01153816282749176
    2. '():' → logprob: -5.011538028717041
    3. '():
' → logprob: -5.511538028717041
    4. '()' → logprob: -7.511538028717041
    5. 'def' → logprob: -9.3865385055542
    6. '3' → logprob: -9.6365385055542
    7. '(' → logprob: -10.7615385055542
    8. '(s' → logprob: -10.7615385055542
    9. '4' → logprob: -11.7615385055542
    10. 'n' → logprob: -12.6365385055542

Token 550: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05425523966550827
    2. '):
' → logprob: -3.429255247116089
    3. '(n' → logprob: -3.929255247116089
    4. ')' → logprob: -7.55425500869751
    5. 'n' → logprob: -8.679255485534668
    6. '):

' → logprob: -11.429255485534668
    7. '):
' → logprob: -11.679255485534668
    8. '=' → logprob: -11.929255485534668
    9. ',n' → logprob: -12.804255485534668
    10. ',' → logprob: -13.054255485534668

Token 551: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.36401867866516113
    2. '(n' → logprob: -1.4890186786651611
    3. '   ' → logprob: -3.739018678665161
    4. 'n' → logprob: -4.114018440246582
    5. 's' → logprob: -4.864018440246582
    6. '[n' → logprob: -4.864018440246582
    7. '[' → logprob: -5.114018440246582
    8. '(s' → logprob: -5.614018440246582
    9. ' def' → logprob: -5.989018440246582
    10. ':' → logprob: -6.114018440246582

Token 552: ' """
' (ID: 7037)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.061659399420022964
    2. '(n' → logprob: -3.061659336090088
    3. 'n' → logprob: -4.561659336090088
    4. '[n' → logprob: -7.311659336090088
    5. 's' → logprob: -7.436659336090088
    6. ' def' → logprob: -7.936659336090088
    7. '[' → logprob: -8.686659812927246
    8. '   ' → logprob: -8.936659812927246
    9. '"""
' (adapté à ' """
') → logprob: -9.186659812927246
    10. 'import' → logprob: -9.686659812927246

Token 553: '   ' (ID: 271)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.023421799764037132
    2. '   ' → logprob: -3.7734217643737793
    3. 'def' → logprob: -9.273422241210938
    4. '"""' → logprob: -10.023422241210938
    5. ' """
' → logprob: -10.773422241210938
    6. '"
' → logprob: -12.148422241210938
    7. 'Reads' → logprob: -12.773422241210938
    8. '"""
' → logprob: -12.898422241210938
    9. '"""

' → logprob: -13.148422241210938
    10. '""' → logprob: -13.898422241210938

Token 554: ' Reads' (ID: 88839)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4753030836582184
    2. '"""
' → logprob: -0.975303053855896
    3. 'Reads' (adapté à ' Reads') → logprob: -7.6003031730651855
    4. '   ' → logprob: -8.225302696228027
    5. '(n' → logprob: -8.975302696228027
    6. 'n' → logprob: -9.850302696228027
    7. '
' → logprob: -9.975302696228027
    8. '"""' → logprob: -10.100302696228027
    9. ' def' → logprob: -10.225302696228027
    10. 'import' → logprob: -10.475302696228027

Token 555: ' '' (ID: 461)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.051823828369379044
    2. '(n' → logprob: -3.176823854446411
    3. ' n' → logprob: -5.676823616027832
    4. '[n' → logprob: -6.301823616027832
    5. ''n' → logprob: -6.426823616027832
    6. 'def' → logprob: -6.676823616027832
    7. ''' → logprob: -8.426823616027832
    8. '3' → logprob: -9.051823616027832
    9. 't' → logprob: -9.676823616027832
    10. ''''' → logprob: -9.926823616027832

Token 556: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001341792638413608
    2. '3' → logprob: -6.751341819763184
    3. 'int' → logprob: -9.501341819763184
    4. '(n' → logprob: -9.501341819763184
    5. ' n' → logprob: -11.251341819763184
    6. 'def' → logprob: -13.001341819763184
    7. '[n' → logprob: -13.626341819763184
    8. 't' → logprob: -13.876341819763184
    9. '```' → logprob: -14.126341819763184
    10. '(int' → logprob: -14.376341819763184

Token 557: ''' (ID: 6)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.012127915397286415
    2. ' lines' → logprob: -4.762127876281738
    3. '_lines' → logprob: -7.262127876281738
    4. 'lines' → logprob: -7.387127876281738
    5. ')' → logprob: -7.762127876281738
    6. ''' → logprob: -7.887127876281738
    7. '(lines' → logprob: -8.137127876281738
    8. ' (' → logprob: -8.262127876281738
    9. '')' → logprob: -8.512127876281738
    10. '3' → logprob: -8.512127876281738

Token 558: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.012051119469106197
    2. ' lines' → logprob: -4.512051105499268
    3. 'tokens' → logprob: -9.137051582336426
    4. 'def' → logprob: -9.262051582336426
    5. 'lists' → logprob: -9.387051582336426
    6. 'times' → logprob: -9.512051582336426
    7. 'ints' → logprob: -9.512051582336426
    8. 'list' → logprob: -9.637051582336426
    9. '
' → logprob: -9.637051582336426
    10. 'line' → logprob: -9.887051582336426

Token 559: ' of' (ID: 328)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0129971569404006
    2. 'def' → logprob: -4.887997150421143
    3. ' of' → logprob: -6.012997150421143
    4. 'of' → logprob: -6.387997150421143
    5. '   ' → logprob: -7.637997150421143
    6. '(' → logprob: -8.5129976272583
    7. ' (' → logprob: -8.5129976272583
    8. ',' → logprob: -8.8879976272583
    9. '):' → logprob: -9.7629976272583
    10. ':' → logprob: -10.1379976272583

Token 560: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.039053160697221756
    2. ' input' → logprob: -3.289053201675415
    3. 't' → logprob: -8.164052963256836
    4. 'int' → logprob: -8.289052963256836
    5. 'def' → logprob: -9.289052963256836
    6. 'list' → logprob: -9.414052963256836
    7. 'code' → logprob: -9.789052963256836
    8. ' code' → logprob: -9.914052963256836
    9. '...' → logprob: -10.664052963256836
    10. 'space' → logprob: -11.039052963256836

Token 561: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1333180069923401
    2. '   ' → logprob: -2.7583179473876953
    3. 'def' → logprob: -3.3833179473876953
    4. '():' → logprob: -5.383317947387695
    5. '()' → logprob: -5.508317947387695
    6. '(),' → logprob: -5.633317947387695
    7. ')' → logprob: -5.633317947387695
    8. '(n' → logprob: -5.883317947387695
    9. 'and' → logprob: -5.883317947387695
    10. '):' → logprob: -6.008317947387695

Token 562: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.07739956676959991
    2. ' each' → logprob: -3.077399492263794
    3. 'spl' → logprob: -3.952399492263794
    4. '   ' → logprob: -5.452399730682373
    5. ' splitting' → logprob: -6.327399730682373
    6. 'def' → logprob: -6.452399730682373
    7. 't' → logprob: -8.452399253845215
    8. 'split' → logprob: -8.577399253845215
    9. 'return' → logprob: -8.702399253845215
    10. '...' → logprob: -8.702399253845215

Token 563: ' line' (ID: 2543)
  Prédit: 'cont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cont' → logprob: -0.924731433391571
    2. ' containing' → logprob: -0.924731433391571
    3. 'def' → logprob: -2.174731492996216
    4. 'line' → logprob: -3.174731492996216
    5. ' line' → logprob: -3.174731492996216
    6. ' as' → logprob: -5.674731254577637
    7. '   ' → logprob: -6.549731254577637
    8. ' consisting' → logprob: -6.674731254577637
    9. 'cons' → logprob: -7.174731254577637
    10. 'as' → logprob: -7.424731254577637

Token 564: ' containing' (ID: 15683)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24608471989631653
    2. ' containing' → logprob: -2.371084690093994
    3. '   ' → logprob: -2.621084690093994
    4. '```' → logprob: -4.371084690093994
    5. 'cont' → logprob: -4.746084690093994
    6. ')' → logprob: -4.996084690093994
    7. ',' → logprob: -4.996084690093994
    8. ' of' → logprob: -5.621084690093994
    9. 'and' → logprob: -5.746084690093994
    10. '()' → logprob: -6.371084690093994

Token 565: ' space' (ID: 4918)
  Prédit: 'three'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'three' → logprob: -0.7700921893119812
    2. 'space' → logprob: -1.270092248916626
    3. 'a' → logprob: -2.520092248916626
    4. 'n' → logprob: -2.770092248916626
    5. ' three' → logprob: -3.520092248916626
    6. 't' → logprob: -3.895092248916626
    7. 'tab' → logprob: -4.645092010498047
    8. ' n' → logprob: -4.770092010498047
    9. ' space' → logprob: -4.895092010498047
    10. '3' → logprob: -4.895092010498047

Token 566: '-separated' (ID: 189658)
  Prédit: '-separated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-separated' → logprob: -0.0019770495127886534
    2. '   ' → logprob: -6.75197696685791
    3. '...' → logprob: -8.75197696685791
    4. '[-' → logprob: -8.87697696685791
    5. '-' → logprob: -9.50197696685791
    6. 'def' → logprob: -9.50197696685791
    7. '()-' → logprob: -10.12697696685791
    8. '=' → logprob: -10.12697696685791
    9. '[' → logprob: -10.25197696685791
    10. '[]' → logprob: -10.25197696685791

Token 567: ' integers' (ID: 54912)
  Prédit: 'ints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ints' → logprob: -0.6558161377906799
    2. 'inte' → logprob: -1.5308160781860352
    3. 'tokens' → logprob: -1.5308160781860352
    4. 'int' → logprob: -3.780816078186035
    5. ' integers' → logprob: -4.655816078186035
    6. 'strings' → logprob: -4.780816078186035
    7. '[int' → logprob: -5.655816078186035
    8. 'def' → logprob: -5.905816078186035
    9. ' tokens' → logprob: -7.655816078186035
    10. 'values' → logprob: -7.905816078186035

Token 568: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17039978504180908
    2. '   ' → logprob: -2.5453996658325195
    3. 'def' → logprob: -3.2953996658325195
    4. ')' → logprob: -4.0453996658325195
    5. 'and' → logprob: -4.0453996658325195
    6. ' and' → logprob: -5.7953996658325195
    7. '),' → logprob: -6.1703996658325195
    8. '.' → logprob: -8.42039966583252
    9. '()' → logprob: -9.04539966583252
    10. '...' → logprob: -9.42039966583252

Token 569: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6248823404312134
    2. 'and' → logprob: -0.8748823404312134
    3. ' and' → logprob: -3.749882221221924
    4. 'def' → logprob: -3.999882221221924
    5. '#' → logprob: -5.374882221221924
    6. 'returns' → logprob: -8.124882698059082
    7. '    ' → logprob: -8.624882698059082
    8. ' def' → logprob: -8.749882698059082
    9. '...' → logprob: -9.374882698059082
    10. '       ' → logprob: -9.499882698059082

Token 570: ' returns' (ID: 7377)
  Prédit: 'returns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'returns' → logprob: -0.1803140491247177
    2. ' returns' → logprob: -1.805314064025879
    3. 'return' → logprob: -8.680314064025879
    4. '
' → logprob: -9.305314064025879
    5. 'def' → logprob: -9.430314064025879
    6. '   ' → logprob: -9.805314064025879
    7. 'trans' → logprob: -9.805314064025879
    8. 'aggreg' → logprob: -10.930314064025879
    9. 'Returns' → logprob: -11.430314064025879
    10. 's' → logprob: -11.555314064025879

Token 571: ' them' (ID: 1373)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.7705363035202026
    2. '[[' → logprob: -1.1455363035202026
    3. '   ' → logprob: -2.645536422729492
    4. '[n' → logprob: -2.770536422729492
    5. '[t' → logprob: -3.395536422729492
    6. ' a' → logprob: -4.520536422729492
    7. ' [' → logprob: -4.645536422729492
    8. '[' → logprob: -4.770536422729492
    9. '[int' → logprob: -4.770536422729492
    10. '[List' → logprob: -5.770536422729492

Token 572: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.1269323080778122
    2. 'as' → logprob: -2.126932382583618
    3. 'def' → logprob: -12.876932144165039
    4. '```' → logprob: -14.251932144165039
    5. '_as' → logprob: -15.126932144165039
    6. '   ' → logprob: -15.251932144165039
    7. '	as' → logprob: -15.751932144165039
    8. '[]' → logprob: -16.37693214416504
    9. 'As' → logprob: -16.37693214416504
    10. ')' → logprob: -17.25193214416504

Token 573: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4837208092212677
    2. 'a' → logprob: -0.9837207794189453
    3. 'list' → logprob: -4.983720779418945
    4. ' list' → logprob: -6.233720779418945
    5. '[list' → logprob: -7.233720779418945
    6. 'def' → logprob: -10.733720779418945
    7. '[a' → logprob: -11.358720779418945
    8. '[[' → logprob: -11.483720779418945
    9. '[' → logprob: -12.608720779418945
    10. 'A' → logprob: -12.608720779418945

Token 574: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0009124171338044107
    2. ' list' → logprob: -7.000912189483643
    3. '[list' → logprob: -13.8759126663208
    4. 'def' → logprob: -18.000911712646484
    5. 'List' → logprob: -18.125911712646484
    6. '
' → logprob: -18.125911712646484
    7. '   ' → logprob: -18.250911712646484
    8. '```' → logprob: -19.000911712646484
    9. '_list' → logprob: -19.250911712646484
    10. '[
' → logprob: -19.375911712646484

Token 575: ' of' (ID: 328)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.004051209893077612
    2. 'of' → logprob: -5.629051208496094
    3. '[List' → logprob: -8.004051208496094
    4. ' of' → logprob: -10.129051208496094
    5. '[int' → logprob: -10.629051208496094
    6. '[[' → logprob: -11.004051208496094
    7. '[' → logprob: -11.504051208496094
    8. 'list' → logprob: -12.004051208496094
    9. 'def' → logprob: -12.254051208496094
    10. '```' → logprob: -12.629051208496094

Token 576: ' integer' (ID: 16336)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.1704242080450058
    2. 'lists' → logprob: -1.920424222946167
    3. ' lists' → logprob: -4.670423984527588
    4. ' list' → logprob: -7.545423984527588
    5. '[list' → logprob: -8.670424461364746
    6. 'tuple' → logprob: -10.170424461364746
    7. 'tu' → logprob: -11.920424461364746
    8. '   ' → logprob: -11.920424461364746
    9. '[int' → logprob: -12.170424461364746
    10. '
' → logprob: -12.295424461364746

Token 577: ' tuples' (ID: 112464)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8469637036323547
    2. ' lists' → logprob: -1.59696364402771
    3. 'lists' → logprob: -1.59696364402771
    4. '<|end|>' → logprob: -2.84696364402771
    5. '[]' → logprob: -3.47196364402771
    6. '[][]' → logprob: -3.72196364402771
    7. '[int' → logprob: -4.346963882446289
    8. '[List' → logprob: -4.721963882446289
    9. '_lists' → logprob: -4.846963882446289
    10. '[list' → logprob: -5.221963882446289

Token 578: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1506892740726471
    2. 'def' → logprob: -2.2756893634796143
    3. '(n' → logprob: -3.6506893634796143
    4. '.' → logprob: -5.650689125061035
    5. '[(' → logprob: -5.650689125061035
    6. '[n' → logprob: -6.525689125061035
    7. '.
' → logprob: -7.025689125061035
    8. '```' → logprob: -8.025689125061035
    9. ')' → logprob: -8.400689125061035
    10. '
' → logprob: -8.650689125061035

Token 579: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005780545179732144
    2. 'def' → logprob: -7.875577926635742
    3. 'return' → logprob: -8.750577926635742
    4. ' return' → logprob: -11.000577926635742
    5. '[
' → logprob: -11.875577926635742
    6. '[]' → logprob: -12.375577926635742
    7. '```' → logprob: -12.875577926635742
    8. ')' → logprob: -13.125577926635742
    9. ']' → logprob: -13.125577926635742
    10. '[' → logprob: -14.000577926635742

Token 580: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003765636123716831
    2. 'def' → logprob: -5.75376558303833
    3. 'return' → logprob: -7.50376558303833
    4. '```' → logprob: -10.378766059875488
    5. ' return' → logprob: -12.378766059875488
    6. '"""
' → logprob: -15.003766059875488
    7. '[
' → logprob: -15.753766059875488
    8. ' def' → logprob: -15.753766059875488
    9. '``' → logprob: -15.878766059875488
    10. ')' → logprob: -15.878766059875488

Token 581: ':
' (ID: 734)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1736338883638382
    2. 'def' → logprob: -1.9236339330673218
    3. '   ' → logprob: -4.798634052276611
    4. ':
' → logprob: -6.173634052276611
    5. '(
' → logprob: -6.548634052276611
    6. '```' → logprob: -7.423634052276611
    7. '(' → logprob: -8.048633575439453
    8. ':' → logprob: -8.548633575439453
    9. '):
' → logprob: -9.548633575439453
    10. ' (' → logprob: -9.673633575439453

Token 582: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01608680747449398
    2. '       ' → logprob: -4.141086578369141
    3. 'def' → logprob: -10.14108657836914
    4. 'n' → logprob: -11.64108657836914
    5. '{
' → logprob: -13.26608657836914
    6. '```' → logprob: -13.64108657836914
    7. '     ' → logprob: -14.39108657836914
    8. '    ' → logprob: -15.64108657836914
    9. '
' → logprob: -16.01608657836914
    10. '(n' → logprob: -16.14108657836914

Token 583: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.013580854050815105
    2. 'list' → logprob: -4.513580799102783
    3. '[n' → logprob: -6.513580799102783
    4. '   ' → logprob: -7.263580799102783
    5. 'def' → logprob: -9.138581275939941
    6. 'int' → logprob: -9.513581275939941
    7. '[int' → logprob: -9.888581275939941
    8. 'List' → logprob: -10.513581275939941
    9. '(n' → logprob: -10.638581275939941
    10. 't' → logprob: -10.888581275939941

Token 584: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9822189211845398
    2. ':' → logprob: -1.4822189807891846
    3. '):' → logprob: -1.8572189807891846
    4. '   ' → logprob: -2.1072189807891846
    5. '(int' → logprob: -2.9822189807891846
    6. ':int' → logprob: -3.4822189807891846
    7. '):
' → logprob: -3.7322189807891846
    8. ')' → logprob: -4.3572187423706055
    9. '```' → logprob: -7.6072187423706055
    10. '[int' → logprob: -7.6072187423706055

Token 585: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.9361264946837764e-07
    2. ' int' → logprob: -15.75
    3. '[int' → logprob: -18.0
    4. '(int' → logprob: -19.125
    5. ':int' → logprob: -19.625
    6. '=int' → logprob: -21.0
    7. '<int' → logprob: -21.875
    8. '   ' → logprob: -22.0
    9. ')' → logprob: -22.25
    10. 'def' → logprob: -22.375

Token 586: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008294934406876564
    2. ':' → logprob: -4.883295059204102
    3. '):
' → logprob: -7.633295059204102
    4. ')' → logprob: -9.508295059204102
    5. 'def' → logprob: -10.008295059204102
    6. ':int' → logprob: -10.383295059204102
    7. '   ' → logprob: -10.883295059204102
    8. 'int' → logprob: -12.008295059204102
    9. '(n' → logprob: -12.008295059204102
    10. '):

' → logprob: -12.133295059204102

Token 587: ' Number' (ID: 9184)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0502561554312706
    2. 'def' → logprob: -3.1752562522888184
    3. 'int' → logprob: -5.050256252288818
    4. '       ' → logprob: -8.42525577545166
    5. ' def' → logprob: -8.80025577545166
    6. '```' → logprob: -8.92525577545166
    7. '  ' → logprob: -9.67525577545166
    8. '
' → logprob: -9.80025577545166
    9. ' ' → logprob: -9.92525577545166
    10. '(int' → logprob: -10.80025577545166

Token 588: ' of' (ID: 328)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08270145207643509
    2. '   ' → logprob: -3.0827014446258545
    3. ':
' → logprob: -5.082701683044434
    4. '=' → logprob: -5.082701683044434
    5. 'def' → logprob: -5.332701683044434
    6. '=int' → logprob: -5.957701683044434
    7. ')' → logprob: -6.082701683044434
    8. '(n' → logprob: -6.207701683044434
    9. '):' → logprob: -6.457701683044434
    10. ':int' → logprob: -6.582701683044434

Token 589: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5288106203079224
    2. 'input' → logprob: -0.9038106203079224
    3. ' tuples' → logprob: -5.278810501098633
    4. ' lines' → logprob: -8.403810501098633
    5. 'lines' → logprob: -9.403810501098633
    6. 'tokens' → logprob: -9.528810501098633
    7. ' tokens' → logprob: -10.278810501098633
    8. 'tu' → logprob: -10.653810501098633
    9. '(input' → logprob: -11.028810501098633
    10. '<|end|>' → logprob: -11.153810501098633

Token 590: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.06040323153138161
    2. '_lines' → logprob: -3.185403347015381
    3. 'lines' → logprob: -4.685403347015381
    4. '(lines' → logprob: -5.185403347015381
    5. ')' → logprob: -6.435403347015381
    6. '	lines' → logprob: -8.810402870178223
    7. '):' → logprob: -9.310402870178223
    8. '(n' → logprob: -9.560402870178223
    9. ' tuples' → logprob: -9.685402870178223
    10. '):
' → logprob: -9.685402870178223

Token 591: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3452485203742981
    2. 'def' → logprob: -1.5952484607696533
    3. 'to' → logprob: -3.0952484607696533
    4. ' to' → logprob: -3.5952484607696533
    5. ')' → logprob: -5.220248699188232
    6. '):' → logprob: -5.345248699188232
    7. '):
' → logprob: -5.470248699188232
    8. '
' → logprob: -6.720248699188232
    9. '  ' → logprob: -8.095248222351074
    10. ' def' → logprob: -9.345248222351074

Token 592: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.005234713666141033
    2. ' read' → logprob: -5.255234718322754
    3. 'return' → logprob: -15.255234718322754
    4. '_read' → logprob: -15.630234718322754
    5. '
' → logprob: -15.755234718322754
    6. 'Read' → logprob: -16.880233764648438
    7. 'n' → logprob: -17.005233764648438
    8. '.read' → logprob: -17.505233764648438
    9. '```' → logprob: -17.505233764648438
    10. 'reads' → logprob: -18.255233764648438

Token 593: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012574638240039349
    2. '):
' → logprob: -5.137574672698975
    3. '):' → logprob: -5.512574672698975
    4. '
' → logprob: -6.762574672698975
    5. 'def' → logprob: -7.262574672698975
    6. ')' → logprob: -7.387574672698975
    7. ' ' → logprob: -10.512574195861816
    8. '```' → logprob: -10.637574195861816
    9. '  ' → logprob: -10.762574195861816
    10. '       ' → logprob: -11.387574195861816

Token 594: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002851729223039001
    2. '```' → logprob: -9.000285148620605
    3. '"""
' → logprob: -9.125285148620605
    4. 'return' → logprob: -10.500285148620605
    5. '
' → logprob: -11.750285148620605
    6. '``' → logprob: -12.125285148620605
    7. '"""' → logprob: -12.500285148620605
    8. 'def' → logprob: -12.875285148620605
    9. ')' → logprob: -13.375285148620605
    10. '  ' → logprob: -13.625285148620605

Token 595: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025743518490344286
    2. 'def' → logprob: -6.252574443817139
    3. 'return' → logprob: -8.12757396697998
    4. '"""
' → logprob: -8.75257396697998
    5. '```' → logprob: -9.00257396697998
    6. 'Returns' (adapté à ' Returns') → logprob: -10.75257396697998
    7. '
' → logprob: -11.12757396697998
    8. '``' → logprob: -11.12757396697998
    9. '  ' → logprob: -12.00257396697998
    10. '"""' → logprob: -12.62757396697998

Token 596: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5514739751815796
    2. '):
' → logprob: -1.3014739751815796
    3. ':' → logprob: -2.801474094390869
    4. ':
' → logprob: -3.176474094390869
    5. 'def' → logprob: -3.426474094390869
    6. '):' → logprob: -5.176474094390869
    7. ')' → logprob: -5.426474094390869
    8. '(n' → logprob: -5.676474094390869
    9. '():
' → logprob: -6.801474094390869
    10. '(
' → logprob: -7.426474094390869

Token 597: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005550591740757227
    2. 'n' → logprob: -7.875555038452148
    3. 'int' → logprob: -9.875555038452148
    4. 't' → logprob: -10.375555038452148
    5. '(n' → logprob: -10.375555038452148
    6. '
' → logprob: -11.000555038452148
    7. 'def' → logprob: -11.125555038452148
    8. ')' → logprob: -11.500555038452148
    9. ' n' → logprob: -12.250555038452148
    10. '  ' → logprob: -12.625555038452148

Token 598: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -5.512236498361744e-07
    2. ' list' → logprob: -15.250000953674316
    3. '[list' → logprob: -15.500000953674316
    4. 'List' → logprob: -18.75
    5. '   ' → logprob: -19.75
    6. 'tuple' → logprob: -20.125
    7. '```' → logprob: -21.875
    8. '	list' → logprob: -22.0
    9. '
' → logprob: -22.875
    10. 'lis' → logprob: -23.125

Token 599: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.650518920039758e-06
    2. '[
' → logprob: -13.125003814697266
    3. '[(' → logprob: -13.500003814697266
    4. '```' → logprob: -17.000003814697266
    5. '(tuple' → logprob: -17.625003814697266
    6. ' ' → logprob: -17.625003814697266
    7. '[list' → logprob: -18.125003814697266
    8. ' of' → logprob: -18.250003814697266
    9. '
' → logprob: -18.500003814697266
    10. '[type' → logprob: -18.625003814697266

Token 600: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.10031439363956451
    2. '[' → logprob: -2.3503143787384033
    3. '(tuple' → logprob: -9.600314140319824
    4. ' tuple' → logprob: -10.600314140319824
    5. '[t' → logprob: -12.225314140319824
    6. '[int' → logprob: -12.350314140319824
    7. '[
' → logprob: -13.725314140319824
    8. '
' → logprob: -13.725314140319824
    9. '```' → logprob: -13.850314140319824
    10. 'tu' → logprob: -13.975314140319824

Token 601: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.75
    3. '<int' → logprob: -16.25
    4. '[
' → logprob: -16.25
    5. ']int' → logprob: -16.625
    6. 'int' → logprob: -17.25
    7. '(int' → logprob: -18.25
    8. ']' → logprob: -19.25
    9. '[Int' → logprob: -20.0
    10. '[in' → logprob: -20.5

Token 602: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.47469764947891235
    2. '[int' → logprob: -0.9746976494789124
    3. ']' → logprob: -7.724697589874268
    4. ']]:
' → logprob: -9.724698066711426
    5. ']]]' → logprob: -10.474698066711426
    6. ']int' → logprob: -10.599698066711426
    7. '[' → logprob: -10.724698066711426
    8. ']:' → logprob: -11.349698066711426
    9. '[str' → logprob: -11.599698066711426
    10. 'int' → logprob: -12.599698066711426

Token 603: ':' (ID: 25)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.6925995349884033
    2. '   ' → logprob: -0.8175995349884033
    3. ':' → logprob: -3.0675995349884033
    4. '):' → logprob: -4.817599296569824
    5. ']:
' → logprob: -6.442599296569824
    6. ']' → logprob: -7.067599296569824
    7. '[int' → logprob: -7.067599296569824
    8. '):
' → logprob: -9.567599296569824
    9. ':
' → logprob: -9.942599296569824
    10. '[' → logprob: -10.317599296569824

Token 604: ' List' (ID: 2655)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018495459109544754
    2. 'return' → logprob: -4.268495559692383
    3. ' return' → logprob: -5.518495559692383
    4. '[' → logprob: -9.643495559692383
    5. '
' → logprob: -9.768495559692383
    6. '[t' → logprob: -9.893495559692383
    7. '[
' → logprob: -10.018495559692383
    8. ' [' → logprob: -10.268495559692383
    9. '[(' → logprob: -10.393495559692383
    10. '  ' → logprob: -12.143495559692383

Token 605: ' of' (ID: 328)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.591557502746582
    2. '[' → logprob: -0.841557502746582
    3. '(tuple' → logprob: -4.966557502746582
    4. '[
' → logprob: -5.341557502746582
    5. '[(' → logprob: -6.591557502746582
    6. ' of' → logprob: -6.716557502746582
    7. ']' → logprob: -7.466557502746582
    8. '(
' → logprob: -9.091557502746582
    9. '(int' → logprob: -9.216557502746582
    10. '   ' → logprob: -9.341557502746582

Token 606: ' '' (ID: 461)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.0011598621495068073
    2. '[int' → logprob: -7.75115966796875
    3. ' tuple' → logprob: -8.00115966796875
    4. '(tuple' → logprob: -8.50115966796875
    5. 'int' → logprob: -9.00115966796875
    6. 'tu' → logprob: -10.00115966796875
    7. '(int' → logprob: -11.00115966796875
    8. '
' → logprob: -13.00115966796875
    9. ' tuples' → logprob: -14.00115966796875
    10. '```' → logprob: -14.25115966796875

Token 607: 'n' (ID: 77)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.014064891263842583
    2. 'int' → logprob: -4.389064788818359
    3. '[int' → logprob: -7.264064788818359
    4. ' tuple' → logprob: -7.764064788818359
    5. 'tu' → logprob: -8.63906478881836
    6. '(tuple' → logprob: -8.76406478881836
    7. '(int' → logprob: -9.76406478881836
    8. 't' → logprob: -11.01406478881836
    9. 'n' → logprob: -11.38906478881836
    10. ' tuples' → logprob: -13.26406478881836

Token 608: ''' (ID: 6)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.18399332463741302
    2. '[' → logprob: -3.058993339538574
    3. '(tuple' → logprob: -3.058993339538574
    4. ' tuples' → logprob: -3.558993339538574
    5. '(int' → logprob: -3.808993339538574
    6. '(
' → logprob: -4.808993339538574
    7. ']' → logprob: -5.433993339538574
    8. ')' → logprob: -5.683993339538574
    9. '(' → logprob: -5.808993339538574
    10. '[
' → logprob: -6.683993339538574

Token 609: ' tuples' (ID: 112464)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.4035916328430176
    2. ' tuples' → logprob: -1.5285916328430176
    3. '(tuple' → logprob: -3.1535916328430176
    4. '[int' → logprob: -3.2785916328430176
    5. ' tuple' → logprob: -4.028591632843018
    6. 'tu' → logprob: -4.153591632843018
    7. '(int' → logprob: -7.278591632843018
    8. 'int' → logprob: -8.40359115600586
    9. '[' → logprob: -8.90359115600586
    10. '
' → logprob: -9.65359115600586

Token 610: ' of' (ID: 328)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0036772750318050385
    2. '(int' → logprob: -5.6286773681640625
    3. '[(' → logprob: -10.503677368164062
    4. '   ' → logprob: -11.378677368164062
    5. '(tuple' → logprob: -11.878677368164062
    6. '[' → logprob: -12.128677368164062
    7. ']' → logprob: -12.253677368164062
    8. '[input' → logprob: -12.378677368164062
    9. '```' → logprob: -12.628677368164062
    10. '(map' → logprob: -12.628677368164062

Token 611: ' integers' (ID: 54912)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.058524299412965775
    2. 'ints' → logprob: -3.8085243701934814
    3. '[int' → logprob: -4.183524131774902
    4. '(int' → logprob: -4.183524131774902
    5. 'inte' → logprob: -5.808524131774902
    6. ' int' → logprob: -7.433524131774902
    7. ' integers' → logprob: -7.683524131774902
    8. ' ints' → logprob: -9.433524131774902
    9. '   ' → logprob: -11.558524131774902
    10. 'map' → logprob: -11.808524131774902

Token 612: '.
' (ID: 558)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.19623881578445435
    2. '   ' → logprob: -1.8212387561798096
    3. ')' → logprob: -5.071238994598389
    4. '(n' → logprob: -6.196238994598389
    5. '()' → logprob: -6.321238994598389
    6. '[int' → logprob: -6.446238994598389
    7. '()]' → logprob: -6.571238994598389
    8. ']
' → logprob: -6.571238994598389
    9. 'for' → logprob: -8.69623851776123
    10. '[n' → logprob: -8.82123851776123

Token 613: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005382588133215904
    2. ']' → logprob: -7.875538349151611
    3. 'return' → logprob: -9.375537872314453
    4. 'def' → logprob: -10.000537872314453
    5. ')' → logprob: -11.625537872314453
    6. '"""
' → logprob: -11.750537872314453
    7. ']
' → logprob: -12.250537872314453
    8. '"""' → logprob: -13.250537872314453
    9. '```' → logprob: -13.625537872314453
    10. '()' → logprob: -14.375537872314453

Token 614: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016670577228069305
    2. 'return' → logprob: -4.3916707038879395
    3. 'def' → logprob: -6.0166707038879395
    4. ']' → logprob: -6.7666707038879395
    5. ']
' → logprob: -8.516670227050781
    6. '"""
' (adapté à ' """
') → logprob: -8.516670227050781
    7. ' return' → logprob: -9.016670227050781
    8. ')' → logprob: -11.266670227050781
    9. '```' → logprob: -12.141670227050781
    10. '"""' → logprob: -12.391670227050781

Token 615: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003907418809831142
    2. 'return' → logprob: -5.628907203674316
    3. ' return' → logprob: -8.128907203674316
    4. 'def' → logprob: -11.628907203674316
    5. '
' → logprob: -13.128907203674316
    6. '```' → logprob: -14.753907203674316
    7. '	return' → logprob: -15.253907203674316
    8. '[' → logprob: -15.753907203674316
    9. '  ' → logprob: -15.878907203674316
    10. '`' → logprob: -16.253908157348633

Token 616: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -9.221884101862088e-05
    2. ' return' → logprob: -10.000092506408691
    3. '   ' → logprob: -10.000092506408691
    4. 'def' → logprob: -14.000092506408691
    5. '
' → logprob: -14.500092506408691
    6. '```' → logprob: -17.250091552734375
    7. '	return' → logprob: -17.875091552734375
    8. '{return' → logprob: -18.625091552734375
    9. ' ' → logprob: -18.875091552734375
    10. ')return' → logprob: -19.250091552734375

Token 617: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0027459117118269205
    2. '[list' → logprob: -6.252746105194092
    3. ' [' → logprob: -7.252746105194092
    4. '[t' → logprob: -10.377745628356934
    5. '[int' → logprob: -10.502745628356934
    6. 'tuple' → logprob: -10.627745628356934
    7. '[(' → logprob: -11.627745628356934
    8. '[List' → logprob: -11.627745628356934
    9. '[type' → logprob: -12.627745628356934
    10. '[to' → logprob: -13.502745628356934

Token 618: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -8.2994620242971e-06
    2. ' tuple' → logprob: -11.750008583068848
    3. '(tuple' → logprob: -15.000008583068848
    4. 'tu' → logprob: -19.87500762939453
    5. 't' → logprob: -22.00000762939453
    6. '   ' → logprob: -22.00000762939453
    7. '

' → logprob: -23.75000762939453
    8. '
' → logprob: -23.75000762939453
    9. ' ' → logprob: -24.12500762939453
    10. '_tuple' → logprob: -24.12500762939453

Token 619: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0065351310186088085
    2. '[int' → logprob: -5.256535053253174
    3. 'int' → logprob: -6.756535053253174
    4. '(map' → logprob: -9.131535530090332
    5. 'map' → logprob: -11.131535530090332
    6. '<int' → logprob: -12.006535530090332
    7. '(' → logprob: -12.256535530090332
    8. '([' → logprob: -13.256535530090332
    9. '[' → logprob: -14.256535530090332
    10. ' int' → logprob: -15.006535530090332

Token 620: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -4.961759259458631e-06
    2. 'x' → logprob: -12.750004768371582
    3. '(' → logprob: -13.250004768371582
    4. '(int' → logprob: -16.3750057220459
    5. '(i' → logprob: -16.6250057220459
    6. ' (' → logprob: -16.8750057220459
    7. '(s' → logprob: -17.7500057220459
    8. '(
' → logprob: -18.0000057220459
    9. ' x' → logprob: -18.7500057220459
    10. '
' → logprob: -20.0000057220459

Token 621: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5723460912704468
    2. 'for' → logprob: -1.5723460912704468
    3. '()' → logprob: -2.0723462104797363
    4. '(x' → logprob: -2.3223462104797363
    5. 'x' → logprob: -5.822346210479736
    6. ' for' → logprob: -7.197346210479736
    7. 'input' → logprob: -8.822345733642578
    8. 'in' → logprob: -9.322345733642578
    9. '   ' → logprob: -9.322345733642578
    10. '}' → logprob: -9.447345733642578

Token 622: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00676463358104229
    2. ' for' → logprob: -5.0067644119262695
    3. ')' → logprob: -10.63176441192627
    4. '()' → logprob: -11.00676441192627
    5. '(x' → logprob: -11.75676441192627
    6. 'x' → logprob: -15.38176441192627
    7. ' ' → logprob: -15.88176441192627
    8. '	for' → logprob: -16.131765365600586
    9. '
' → logprob: -16.256765365600586
    10. '   ' → logprob: -17.006765365600586

Token 623: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06197508051991463
    2. ' x' → logprob: -2.8119750022888184
    3. 'input' → logprob: -12.811975479125977
    4. ' in' → logprob: -13.311975479125977
    5. ' ' → logprob: -13.561975479125977
    6. 'in' → logprob: -13.686975479125977
    7. '<|end|>' → logprob: -15.061975479125977
    8. ' input' → logprob: -15.561975479125977
    9. '(x' → logprob: -16.936975479125977
    10. '	x' → logprob: -17.061975479125977

Token 624: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1463894248008728
    2. 'in' → logprob: -2.0213894844055176
    3. 'input' → logprob: -5.771389484405518
    4. ' input' → logprob: -8.02138900756836
    5. 'x' → logprob: -8.64638900756836
    6. ' ' → logprob: -9.89638900756836
    7. ' x' → logprob: -10.52138900756836
    8. 's' → logprob: -12.52138900756836
    9. 'inp' → logprob: -13.39638900756836
    10. '  ' → logprob: -13.89638900756836

Token 625: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0021876145619899035
    2. ' input' → logprob: -6.127187728881836
    3. '(input' → logprob: -13.502187728881836
    4. 'in' → logprob: -15.252187728881836
    5. ' ' → logprob: -15.377187728881836
    6. '_input' → logprob: -16.002187728881836
    7. '<input' → logprob: -16.127187728881836
    8. '=input' → logprob: -16.502187728881836
    9. 'output' → logprob: -16.627187728881836
    10. '.input' → logprob: -16.877187728881836

Token 626: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.512236498361744e-07
    2. '()' → logprob: -14.750000953674316
    3. ' ().' → logprob: -16.625
    4. '.' → logprob: -19.0
    5. '()
' → logprob: -20.5
    6. '(' → logprob: -21.0
    7. '.split' → logprob: -23.375
    8. ' .' → logprob: -23.375
    9. '()).' → logprob: -23.375
    10. '().__' → logprob: -23.5

Token 627: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.6240566083070007e-06
    2. 'strip' → logprob: -13.500001907348633
    3. ' split' → logprob: -16.125001907348633
    4. 'plit' → logprob: -17.250001907348633
    5. '.split' → logprob: -17.875001907348633
    6. 's' → logprob: -18.875001907348633
    7. '(split' → logprob: -19.000001907348633
    8. 'spl' → logprob: -19.500001907348633
    9. 'rstrip' → logprob: -19.500001907348633
    10. '
' → logprob: -19.750001907348633

Token 628: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0001295222609769553
    2. '()]' → logprob: -9.250129699707031
    3. '()' → logprob: -10.375129699707031
    4. '()))' → logprob: -14.125129699707031
    5. ' ())' → logprob: -14.875129699707031
    6. ')]' → logprob: -14.875129699707031
    7. '())
' → logprob: -15.000129699707031
    8. '(' → logprob: -15.000129699707031
    9. ')' → logprob: -16.87512969970703
    10. '()
' → logprob: -18.00012969970703

Token 629: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6346816420555115
    2. ']' → logprob: -1.5096817016601562
    3. '()' → logprob: -2.5096817016601562
    4. 'for' → logprob: -2.5096817016601562
    5. ' for' → logprob: -2.6346817016601562
    6. '   ' → logprob: -4.634681701660156
    7. ')]' → logprob: -6.009681701660156
    8. '()]' → logprob: -6.884681701660156
    9. ' ]' → logprob: -7.384681701660156
    10. ' ' → logprob: -8.009681701660156

Token 630: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0024801772087812424
    2. ' _' → logprob: -6.0024800300598145
    3. ' range' → logprob: -12.627480506896973
    4. '_range' → logprob: -13.627480506896973
    5. ' in' → logprob: -17.002479553222656
    6. 'range' → logprob: -17.127479553222656
    7. ' ' → logprob: -17.502479553222656
    8. ' ' → logprob: -17.627479553222656
    9. ' n' → logprob: -18.627479553222656
    10. '_n' → logprob: -19.627479553222656

Token 631: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6954972743988037
    2. 'range' → logprob: -0.6954972743988037
    3. '_range' → logprob: -6.695497512817383
    4. ' in' → logprob: -7.195497512817383
    5. '_' → logprob: -8.195497512817383
    6. ' _' → logprob: -9.445497512817383
    7. 'in' → logprob: -12.570497512817383
    8. ' ' → logprob: -14.320497512817383
    9. '(range' → logprob: -14.570497512817383
    10. '_in' → logprob: -14.695497512817383

Token 632: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01815064437687397
    2. ' range' → logprob: -4.018150806427002
    3. '_range' → logprob: -14.518150329589844
    4. '(range' → logprob: -16.393150329589844
    5. '_' → logprob: -16.768150329589844
    6. 'n' → logprob: -17.643150329589844
    7. '	range' → logprob: -17.643150329589844
    8. ' ' → logprob: -18.518150329589844
    9. 'r' → logprob: -18.893150329589844
    10. 'rang' → logprob: -19.518150329589844

Token 633: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0009132515988312662
    2. 'n' → logprob: -7.000913143157959
    3. '(' → logprob: -13.500913619995117
    4. ' n' → logprob: -15.000913619995117
    5. '(
' → logprob: -17.875913619995117
    6. ' (' → logprob: -19.500913619995117
    7. ')n' → logprob: -20.500913619995117
    8. '	n' → logprob: -20.750913619995117
    9. ',n' → logprob: -21.500913619995117
    10. '_n' → logprob: -21.750913619995117

Token 634: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0004107732092961669
    2. ']' → logprob: -7.875410556793213
    3. '(n' → logprob: -11.250411033630371
    4. ')' → logprob: -11.375411033630371
    5. '()]' → logprob: -12.250411033630371
    6. ')]
' → logprob: -14.375411033630371
    7. '   ' → logprob: -15.500411033630371
    8. ' )' → logprob: -16.250410079956055
    9. '()' → logprob: -16.375410079956055
    10. ' ]' → logprob: -16.500410079956055

Token 635: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 636: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000890259922016412
    2. '<|end|>' → logprob: -7.375890254974365
    3. '
' → logprob: -9.250890731811523
    4. '#' → logprob: -9.250890731811523
    5. '```' → logprob: -10.000890731811523
    6. '[]' → logprob: -11.750890731811523
    7. '[' → logprob: -12.125890731811523
    8. '<|end|>' → logprob: -13.250890731811523
    9. 'ndef' → logprob: -13.375890731811523
    10. 'n' → logprob: -13.625890731811523

Token 637: ' p' (ID: 275)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.018017306923866272
    2. 'main' → logprob: -4.768017292022705
    3. 'n' → logprob: -5.018017292022705
    4. 's' → logprob: -6.393017292022705
    5. 'a' → logprob: -8.393017768859863
    6. 'tuple' → logprob: -9.143017768859863
    7. 'l' → logprob: -9.268017768859863
    8. ' t' → logprob: -9.268017768859863
    9. 'm' → logprob: -9.893017768859863
    10. 'i' → logprob: -9.893017768859863

Token 638: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08279374986886978
    2. 'r' → logprob: -2.957793712615967
    3. '4' → logprob: -4.957793712615967
    4. '1' → logprob: -5.082793712615967
    5. '3' → logprob: -5.582793712615967
    6. 'erm' → logprob: -6.082793712615967
    7. '()' → logprob: -6.082793712615967
    8. 'e' → logprob: -6.957793712615967
    9. 'y' → logprob: -7.457793712615967
    10. '2' → logprob: -7.707793712615967

Token 639: '(b' (ID: 3229)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0037462865002453327
    2. '():
' → logprob: -5.628746509552002
    3. ' ():' → logprob: -9.253746032714844
    4. '()' → logprob: -10.878746032714844
    5. 'def' → logprob: -11.003746032714844
    6. '(s' → logprob: -11.878746032714844
    7. '(n' → logprob: -12.878746032714844
    8. '0' → logprob: -13.253746032714844
    9. '():

' → logprob: -14.128746032714844
    10. '():
' → logprob: -14.253746032714844

Token 640: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6593096852302551
    2. 'y' → logprob: -1.2843096256256104
    3. '):
' → logprob: -1.7843096256256104
    4. 'r' → logprob: -4.2843098640441895
    5. '0' → logprob: -4.9093098640441895
    6. 'b' → logprob: -5.2843098640441895
    7. 'in' → logprob: -6.1593098640441895
    8. '(b' → logprob: -6.5343098640441895
    9. '=' → logprob: -7.0343098640441895
    10. 'w' → logprob: -7.1593098640441895

Token 641: ' yes' (ID: 14531)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5448006987571716
    2. 's' → logprob: -1.9198007583618164
    3. 'e' → logprob: -2.2948007583618164
    4. 'l' → logprob: -2.9198007583618164
    5. 'x' → logprob: -3.2948007583618164
    6. 'a' → logprob: -3.6698007583618164
    7. 'p' → logprob: -4.419800758361816
    8. 'm' → logprob: -4.669800758361816
    9. 'c' → logprob: -5.044800758361816
    10. 't' → logprob: -5.419800758361816

Token 642: '="' (ID: 580)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5330916047096252
    2. '):
' → logprob: -1.2830915451049805
    3. 'no' → logprob: -2.5330915451049805
    4. '_no' → logprob: -4.5330915451049805
    5. '=True' → logprob: -4.6580915451049805
    6. 'orno' → logprob: -4.6580915451049805
    7. 'es' → logprob: -4.9080915451049805
    8. '=' → logprob: -4.9080915451049805
    9. '=None' → logprob: -5.6580915451049805
    10. '_or' → logprob: -6.1580915451049805

Token 643: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.3076077103614807
    2. '")' → logprob: -2.807607650756836
    3. 'YES' → logprob: -2.807607650756836
    4. 'Y' → logprob: -3.307607650756836
    5. 'yes' → logprob: -3.557607650756836
    6. 'y' → logprob: -4.057607650756836
    7. 'o' → logprob: -4.807607650756836
    8. '"' → logprob: -5.182607650756836
    9. 's' → logprob: -5.307607650756836
    10. '",' → logprob: -5.307607650756836

Token 644: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.0002319071936653927
    2. '"):
' → logprob: -8.625231742858887
    3. '"):' → logprob: -10.750231742858887
    4. '"' → logprob: -11.125231742858887
    5. ' ",' → logprob: -12.000231742858887
    6. '",
' → logprob: -12.750231742858887
    7. ',' → logprob: -12.875231742858887
    8. '")' → logprob: -14.000231742858887
    9. '"):
' → logprob: -14.125231742858887
    10. '   ' → logprob: -14.375231742858887

Token 645: ' no' (ID: 860)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.009959128685295582
    2. ' no' → logprob: -4.6349592208862305
    3. '   ' → logprob: -8.63495922088623
    4. ' ' → logprob: -11.13495922088623
    5. '	no' → logprob: -12.25995922088623
    6. '  ' → logprob: -13.25995922088623
    7. '    ' → logprob: -14.00995922088623
    8. '
' → logprob: -14.13495922088623
    9. '       ' → logprob: -14.63495922088623
    10. '     ' → logprob: -14.88495922088623

Token 646: '="' (ID: 580)
  Prédit: '="'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '="' → logprob: -3.1186566047836095e-05
    2. '=' → logprob: -10.625031471252441
    3. '=None' → logprob: -12.250031471252441
    4. '"' → logprob: -14.000031471252441
    5. '=("' → logprob: -14.500031471252441
    6. ')="' → logprob: -15.750031471252441
    7. '="""' → logprob: -15.750031471252441
    8. '=True' → logprob: -16.000030517578125
    9. '="_' → logprob: -16.500030517578125
    10. '=""' → logprob: -16.625030517578125

Token 647: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0002031827752944082
    2. ' No' → logprob: -8.750203132629395
    3. '"No' → logprob: -10.625203132629395
    4. ' ' → logprob: -11.750203132629395
    5. 'NO' → logprob: -12.500203132629395
    6. '"' → logprob: -12.875203132629395
    7. '")' → logprob: -13.500203132629395
    8. '\n' → logprob: -14.000203132629395
    9. '   ' → logprob: -14.000203132629395
    10. '  ' → logprob: -14.875203132629395

Token 648: '"):
' (ID: 33645)
  Prédit: '"):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"):
' → logprob: -0.25435906648635864
    2. '"):' → logprob: -1.5043590068817139
    3. '):
' → logprob: -6.879359245300293
    4. '")' → logprob: -7.129359245300293
    5. ')' → logprob: -8.129359245300293
    6. '):' → logprob: -8.879359245300293
    7. '"):
' → logprob: -8.879359245300293
    8. '"' → logprob: -11.629359245300293
    9. 'def' → logprob: -12.129359245300293
    10. '",' → logprob: -12.629359245300293

Token 649: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0845700353384018
    2. ':' → logprob: -2.5845699310302734
    3. ':
' → logprob: -5.584569931030273
    4. '():
' → logprob: -7.709569931030273
    5. ':return' → logprob: -7.709569931030273
    6. '():' → logprob: -8.209569931030273
    7. 'def' → logprob: -8.334569931030273
    8. '<|end|>' → logprob: -8.459569931030273
    9. '```' → logprob: -9.584569931030273
    10. '):
' → logprob: -9.709569931030273

Token 650: ' """
' (ID: 7037)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.32341739535331726
    2. '   ' → logprob: -1.3234174251556396
    3. 'return' → logprob: -4.9484171867370605
    4. 'def' → logprob: -6.5734171867370605
    5. ' if' → logprob: -6.8234171867370605
    6. '"""
' (adapté à ' """
') → logprob: -8.198417663574219
    7. '"""' → logprob: -8.823417663574219
    8. 'answer' → logprob: -10.573417663574219
    9. '```' → logprob: -10.823417663574219
    10. 'result' → logprob: -11.323417663574219

Token 651: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47857341170310974
    2. '"""
' → logprob: -0.9785734415054321
    3. '"""' → logprob: -5.478573322296143
    4. ' """
' → logprob: -8.4785737991333
    5. 'if' → logprob: -9.7285737991333
    6. 'def' → logprob: -11.6035737991333
    7. '""' → logprob: -11.7285737991333
    8. ' if' → logprob: -12.1035737991333
    9. ''''
' → logprob: -12.1035737991333
    10. '```' → logprob: -12.1035737991333

Token 652: ' Prints' (ID: 92195)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01561079639941454
    2. '"""
' → logprob: -5.015610694885254
    3. 'def' → logprob: -5.015610694885254
    4. '"""' → logprob: -6.765610694885254
    5. 'if' → logprob: -7.015610694885254
    6. '
' → logprob: -9.640610694885254
    7. ' if' → logprob: -10.140610694885254
    8. ' """
' → logprob: -11.015610694885254
    9. 'return' → logprob: -11.140610694885254
    10. '```' → logprob: -11.640610694885254

Token 653: ' '' (ID: 461)
  Prédit: 'yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yes' → logprob: -0.4643891155719757
    2. ' yes' → logprob: -1.4643890857696533
    3. '(' → logprob: -1.9643890857696533
    4. 'Yes' → logprob: -12.589388847351074
    5. 'ye' → logprob: -12.714388847351074
    6. 'f' → logprob: -12.714388847351074
    7. ' (' → logprob: -12.714388847351074
    8. '()' → logprob: -13.589388847351074
    9. '(f' → logprob: -13.964388847351074
    10. '_yes' → logprob: -14.089388847351074

Token 654: 'yes' (ID: 6763)
  Prédit: 'yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yes' → logprob: -2.248469718324486e-05
    2. ' yes' → logprob: -10.875022888183594
    3. 'ye' → logprob: -13.375022888183594
    4. 'Yes' → logprob: -13.500022888183594
    5. '(' → logprob: -15.125022888183594
    6. '"' → logprob: -16.375022888183594
    7. 'y' → logprob: -16.750022888183594
    8. '{' → logprob: -17.250022888183594
    9. ''' → logprob: -17.250022888183594
    10. '_yes' → logprob: -17.625022888183594

Token 655: ''' (ID: 6)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.010266422294080257
    2. ''' → logprob: -5.010266304016113
    3. ' if' → logprob: -6.010266304016113
    4. 'if' → logprob: -7.010266304016113
    5. '`' → logprob: -9.635266304016113
    6. '
' → logprob: -10.635266304016113
    7. '```' → logprob: -10.635266304016113
    8. '")' → logprob: -11.135266304016113
    9. 'i' → logprob: -11.385266304016113
    10. ' "' → logprob: -11.635266304016113

Token 656: ' string' (ID: 1621)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.030490083619952202
    2. ' if' → logprob: -3.5304901599884033
    3. '()' → logprob: -7.780489921569824
    4. '(' → logprob: -8.405489921569824
    5. 'yes' → logprob: -10.155489921569824
    6. '("' → logprob: -10.405489921569824
    7. '(if' → logprob: -11.280489921569824
    8. '```' → logprob: -12.155489921569824
    9. '"' → logprob: -12.405489921569824
    10. '
' → logprob: -13.530489921569824

Token 657: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.48546162247657776
    2. ' if' → logprob: -0.9854615926742554
    3. '("' → logprob: -4.985461711883545
    4. '()' → logprob: -5.985461711883545
    5. '(' → logprob: -6.985461711883545
    6. '   ' → logprob: -7.235461711883545
    7. '('' → logprob: -8.860461235046387
    8. '"' → logprob: -9.235461235046387
    9. '(if' → logprob: -10.360461235046387
    10. '
' → logprob: -11.485461235046387

Token 658: ' the' (ID: 290)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.023245595395565033
    2. ' b' → logprob: -3.7732455730438232
    3. '   ' → logprob: -16.148244857788086
    4. 'not' → logprob: -18.273244857788086
    5. ' ' → logprob: -18.773244857788086
    6. 'bool' → logprob: -18.773244857788086
    7. ' not' → logprob: -19.023244857788086
    8. '(b' → logprob: -19.648244857788086
    9. '
' → logprob: -19.773244857788086
    10. '	b' → logprob: -20.023244857788086

Token 659: ' condition' (ID: 7060)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.5597102396423e-05
    2. ' b' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.125036239624023
    4. ' ' → logprob: -17.750036239624023
    5. 'bool' → logprob: -19.000036239624023
    6. '	b' → logprob: -19.500036239624023
    7. '  ' → logprob: -20.375036239624023
    8. '
' → logprob: -20.500036239624023
    9. ')' → logprob: -20.875036239624023
    10. '    ' → logprob: -21.250036239624023

Token 660: ' is' (ID: 382)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.25349801778793335
    2. 'b' → logprob: -1.5034980773925781
    3. '(b' → logprob: -7.003498077392578
    4. ' if' → logprob: -8.128498077392578
    5. '   ' → logprob: -8.128498077392578
    6. 'if' → logprob: -10.503498077392578
    7. ' is' → logprob: -10.753498077392578
    8. '	b' → logprob: -12.503498077392578
    9. ' ' → logprob: -12.628498077392578
    10. ' (' → logprob: -13.128498077392578

Token 661: ' True' (ID: 6432)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.007605204824358225
    2. 'True' → logprob: -5.007605075836182
    3. ' True' → logprob: -7.882605075836182
    4. ' b' → logprob: -8.00760555267334
    5. 'true' → logprob: -8.75760555267334
    6. ' true' → logprob: -11.25760555267334
    7. '_true' → logprob: -12.88260555267334
    8. '   ' → logprob: -13.00760555267334
    9. ' met' → logprob: -13.13260555267334
    10. 'truth' → logprob: -14.38260555267334

Token 662: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6715260148048401
    2. ',' → logprob: -0.9215260148048401
    3. ' else' → logprob: -2.5465259552001953
    4. '(b' → logprob: -5.046525955200195
    5. 'else' → logprob: -5.921525955200195
    6. 'b' → logprob: -6.796525955200195
    7. ',
' → logprob: -7.421525955200195
    8. ' if' → logprob: -7.546525955200195
    9. ' b' → logprob: -7.796525955200195
    10. ' and' → logprob: -8.421525955200195

Token 663: ' otherwise' (ID: 10275)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10657914727926254
    2. 'else' → logprob: -3.356579065322876
    3. ' otherwise' → logprob: -3.731579065322876
    4. 'otherwise' → logprob: -3.981579065322876
    5. ' else' → logprob: -4.231579303741455
    6. ',' → logprob: -5.106579303741455
    7. '
' → logprob: -6.606579303741455
    8. '    ' → logprob: -7.356579303741455
    9. 'b' → logprob: -7.481579303741455
    10. '    
' → logprob: -8.481578826904297

Token 664: ' prints' (ID: 33767)
  Prédit: ' prints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prints' → logprob: -0.03420388698577881
    2. ' no' → logprob: -3.5342040061950684
    3. 'no' → logprob: -5.909204006195068
    4. 'prints' → logprob: -6.534204006195068
    5. 'print' → logprob: -8.28420352935791
    6. '   ' → logprob: -11.65920352935791
    7. ' print' → logprob: -11.78420352935791
    8. 'pr' → logprob: -12.90920352935791
    9. ' pr' → logprob: -13.78420352935791
    10. ' the' → logprob: -14.15920352935791

Token 665: ' '' (ID: 461)
  Prédit: ' yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' yes' → logprob: -0.14085954427719116
    2. 'yes' → logprob: -2.640859603881836
    3. ' no' → logprob: -2.890859603881836
    4. 'no' → logprob: -5.390859603881836
    5. '(no' → logprob: -13.765859603881836
    6. ' (' → logprob: -14.640859603881836
    7. '(' → logprob: -15.140859603881836
    8. ' ' → logprob: -17.140859603881836
    9. ' either' → logprob: -17.140859603881836
    10. ' ' → logprob: -17.140859603881836

Token 666: 'no' (ID: 1750)
  Prédit: 'no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.0005533903022296727
    2. ' no' → logprob: -7.500553607940674
    3. 'n' → logprob: -15.125553131103516
    4. ''' → logprob: -16.625553131103516
    5. '	no' → logprob: -17.250553131103516
    6. '   ' → logprob: -18.500553131103516
    7. ' ' → logprob: -18.625553131103516
    8. 'No' → logprob: -19.250553131103516
    9. '(no' → logprob: -19.250553131103516
    10. 'yes' → logprob: -19.750553131103516

Token 667: ''' (ID: 6)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.03641067445278168
    2. '"' → logprob: -3.9114105701446533
    3. ')' → logprob: -5.036410808563232
    4. '")
' → logprob: -5.161410808563232
    5. '')' → logprob: -6.536410808563232
    6. ')"' → logprob: -7.411410808563232
    7. '".' → logprob: -8.036410331726074
    8. ')")' → logprob: -8.411410331726074
    9. '.' → logprob: -8.786410331726074
    10. '')"' → logprob: -9.036410331726074

Token 668: ' string' (ID: 1621)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.531306803226471
    2. '   ' → logprob: -0.906306803226471
    3. '.
' → logprob: -5.531306743621826
    4. '.' → logprob: -6.531306743621826
    5. 'def' → logprob: -6.656306743621826
    6. '
' → logprob: -8.031307220458984
    7. '(' → logprob: -8.281307220458984
    8. ':' → logprob: -8.906307220458984
    9. ':
' → logprob: -8.906307220458984
    10. '):
' → logprob: -9.281307220458984

Token 669: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09235687553882599
    2. '(b' → logprob: -2.4673569202423096
    3. '.
' → logprob: -6.9673566818237305
    4. '.' → logprob: -7.0923566818237305
    5. 'def' → logprob: -7.5923566818237305
    6. '(' → logprob: -7.9673566818237305
    7. ',' → logprob: -8.71735668182373
    8. ':
' → logprob: -8.71735668182373
    9. ':' → logprob: -9.09235668182373
    10. '
' → logprob: -9.46735668182373

Token 670: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.351697033504024e-05
    2. '```' → logprob: -10.000083923339844
    3. 'def' → logprob: -11.000083923339844
    4. '    
' → logprob: -11.750083923339844
    5. '
' → logprob: -11.875083923339844
    6. '):
' → logprob: -12.750083923339844
    7. ')
' → logprob: -14.000083923339844
    8. ')' → logprob: -14.625083923339844
    9. '"""
' → logprob: -14.750083923339844
    10. '``' → logprob: -15.000083923339844

Token 671: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004256357904523611
    2. 'def' → logprob: -5.504256248474121
    3. '```' → logprob: -9.504256248474121
    4. '
' → logprob: -9.754256248474121
    5. 'if' → logprob: -10.629256248474121
    6. ' if' → logprob: -11.879256248474121
    7. '    
' → logprob: -12.004256248474121
    8. '"""
' → logprob: -12.879256248474121
    9. '``' → logprob: -13.379256248474121
    10. ' def' → logprob: -13.504256248474121

Token 672: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021451245993375778
    2. '(b' → logprob: -4.646451473236084
    3. '):
' → logprob: -5.146451473236084
    4. '):' → logprob: -5.896451473236084
    5. ',' → logprob: -6.271451473236084
    6. ')' → logprob: -7.521451473236084
    7. '       ' → logprob: -8.521450996398926
    8. ',b' → logprob: -9.396450996398926
    9. '```' → logprob: -9.646450996398926
    10. ':' → logprob: -9.896450996398926

Token 673: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0053652566857635975
    2. 'b' → logprob: -5.630365371704102
    3. '       ' → logprob: -6.380365371704102
    4. ' b' → logprob: -9.755365371704102
    5. '    ' → logprob: -12.130365371704102
    6. '	b' → logprob: -13.005365371704102
    7. '    
' → logprob: -14.005365371704102
    8. '
' → logprob: -14.130365371704102
    9. '     ' → logprob: -14.255365371704102
    10. '	   ' → logprob: -15.380365371704102

Token 674: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.0017292065313085914
    2. '   ' → logprob: -6.3767290115356445
    3. ' b' → logprob: -10.876729011535645
    4. 'condition' → logprob: -12.501729011535645
    5. '	b' → logprob: -13.001729011535645
    6. '       ' → logprob: -14.251729011535645
    7. '```' → logprob: -14.251729011535645
    8. '    
' → logprob: -15.376729011535645
    9. ')b' → logprob: -15.626729011535645
    10. '  ' → logprob: -15.751729011535645

Token 675: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6329620480537415
    2. '):' → logprob: -0.8829620480537415
    3. ':' → logprob: -3.3829619884490967
    4. '   ' → logprob: -4.257962226867676
    5. ' ,' → logprob: -5.507962226867676
    6. ' :' → logprob: -6.507962226867676
    7. ' ):' → logprob: -6.882962226867676
    8. '):
' → logprob: -8.257962226867676
    9. ')' → logprob: -8.882962226867676
    10. ' ' → logprob: -9.382962226867676

Token 676: 'bool' (ID: 9037)
  Prédit: 'bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -6.813969957875088e-05
    2. '   ' → logprob: -9.875067710876465
    3. ' bool' → logprob: -11.500067710876465
    4. 'b' → logprob: -13.250067710876465
    5. ')' → logprob: -13.875067710876465
    6. '):' → logprob: -13.875067710876465
    7. 'condition' → logprob: -14.250067710876465
    8. '       ' → logprob: -14.375067710876465
    9. '):
' → logprob: -14.500067710876465
    10. '(bool' → logprob: -14.625067710876465

Token 677: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009254944510757923
    2. ',' → logprob: -5.2592549324035645
    3. '):
' → logprob: -5.6342549324035645
    4. ')' → logprob: -8.134255409240723
    5. '   ' → logprob: -9.134255409240723
    6. ' ):' → logprob: -11.009255409240723
    7. ':' → logprob: -11.759255409240723
    8. ',
' → logprob: -12.884255409240723
    9. '):

' → logprob: -12.884255409240723
    10. '  ' → logprob: -13.009255409240723

Token 678: ' Condition' (ID: 30255)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18925130367279053
    2. '<|end|>' → logprob: -2.43925142288208
    3. '       ' → logprob: -2.81425142288208
    4. 'If' → logprob: -4.93925142288208
    5. '    ' → logprob: -5.43925142288208
    6. ')' → logprob: -5.93925142288208
    7. 'True' → logprob: -6.06425142288208
    8. '    
' → logprob: -6.68925142288208
    9. '  ' → logprob: -6.93925142288208
    10. ' if' → logprob: -7.06425142288208

Token 679: ' to' (ID: 316)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5084866285324097
    2. '):
' → logprob: -1.2584866285324097
    3. '   ' → logprob: -2.258486747741699
    4. ',' → logprob: -4.883486747741699
    5. ')' → logprob: -6.133486747741699
    6. ',
' → logprob: -9.8834867477417
    7. '<|end|>' → logprob: -10.0084867477417
    8. '):
' → logprob: -10.1334867477417
    9. '    
' → logprob: -10.7584867477417
    10. '       ' → logprob: -10.8834867477417

Token 680: ' evaluate' (ID: 21646)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.06631748378276825
    2. 'print' → logprob: -2.816317558288574
    3. ' check' → logprob: -6.191317558288574
    4. 'evaluate' → logprob: -6.441317558288574
    5. '   ' → logprob: -7.566317558288574
    6. 'test' → logprob: -10.566317558288574
    7. '```' → logprob: -10.566317558288574
    8. ' print' → logprob: -10.566317558288574
    9. 'True' → logprob: -10.816317558288574
    10. 'be' → logprob: -11.066317558288574

Token 681: '.
' (ID: 558)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.35203462839126587
    2. '):' → logprob: -1.852034568786621
    3. '   ' → logprob: -2.102034568786621
    4. ')' → logprob: -4.102034568786621
    5. ',' → logprob: -7.102034568786621
    6. ',
' → logprob: -9.352034568786621
    7. ')
' → logprob: -9.727034568786621
    8. '    
' → logprob: -10.602034568786621
    9. '):
' → logprob: -10.977034568786621
    10. '):

' → logprob: -11.102034568786621

Token 682: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01816597953438759
    2. '
' → logprob: -4.1431660652160645
    3. '    
' → logprob: -6.2681660652160645
    4. '       ' → logprob: -9.643165588378906
    5. '):
' → logprob: -9.893165588378906
    6. ')
' → logprob: -10.268165588378906
    7. '```' → logprob: -10.518165588378906
    8. '  
' → logprob: -11.643165588378906
    9. 'if' → logprob: -11.768165588378906
    10. ')' → logprob: -11.768165588378906

Token 683: ' yes' (ID: 14531)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05858151242136955
    2. 'if' → logprob: -3.558581590652466
    3. '
' → logprob: -4.308581352233887
    4. '       ' → logprob: -5.058581352233887
    5. '    
' → logprob: -5.433581352233887
    6. ' if' → logprob: -6.558581352233887
    7. 'If' → logprob: -7.433581352233887
    8. '```' → logprob: -7.933581352233887
    9. 'print' → logprob: -8.433581352233887
    10. ')' → logprob: -8.433581352233887

Token 684: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02753628045320511
    2. ':' → logprob: -4.152536392211914
    3. '):' → logprob: -4.527536392211914
    4. ',' → logprob: -9.027536392211914
    5. '="' → logprob: -9.027536392211914
    6. '=None' → logprob: -9.152536392211914
    7. ' =' → logprob: -9.277536392211914
    8. '):
' → logprob: -9.402536392211914
    9. ')' → logprob: -10.152536392211914
    10. '   ' → logprob: -10.777536392211914

Token 685: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -1.676292231422849e-05
    2. ')' → logprob: -11.875017166137695
    3. ' str' → logprob: -11.875017166137695
    4. '   ' → logprob: -13.500017166137695
    5. '):' → logprob: -13.875017166137695
    6. 's' → logprob: -16.000017166137695
    7. 'stri' → logprob: -16.500017166137695
    8. '):
' → logprob: -17.000017166137695
    9. '  ' → logprob: -17.125017166137695
    10. 'string' → logprob: -17.125017166137695

Token 686: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18196068704128265
    2. '=' → logprob: -1.8069607019424438
    3. '="' → logprob: -7.056960582733154
    4. ')' → logprob: -7.306960582733154
    5. '):
' → logprob: -8.181961059570312
    6. ' =' → logprob: -8.806961059570312
    7. '=None' → logprob: -9.056961059570312
    8. '   ' → logprob: -10.181961059570312
    9. '='' → logprob: -10.431961059570312
    10. '="""' → logprob: -10.556961059570312

Token 687: ' optional' (ID: 18297)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.35083410143852234
    2. ' no' → logprob: -2.2258341312408447
    3. '   ' → logprob: -2.4758341312408447
    4. 'default' → logprob: -2.7258341312408447
    5. '    ' → logprob: -4.975833892822266
    6. 'optional' → logprob: -4.975833892822266
    7. '       ' → logprob: -5.100833892822266
    8. ')' → logprob: -5.225833892822266
    9. ' default' → logprob: -5.475833892822266
    10. ' optional' → logprob: -5.725833892822266

Token 688: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016280924901366234
    2. '=' → logprob: -4.6412811279296875
    3. '="' → logprob: -6.1412811279296875
    4. '   ' → logprob: -6.1412811279296875
    5. ')' → logprob: -7.0162811279296875
    6. '):
' → logprob: -7.6412811279296875
    7. '=None' → logprob: -7.8912811279296875
    8. '"):' → logprob: -8.141281127929688
    9. '="""' → logprob: -10.141281127929688
    10. '=True' → logprob: -10.391281127929688

Token 689: ' String' (ID: 1189)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1909680366516113
    2. ' The' → logprob: -1.5659680366516113
    3. ' str' → logprob: -1.6909680366516113
    4. ' Defaults' → logprob: -2.3159680366516113
    5. 'The' → logprob: -2.5659680366516113
    6. 'Default' → logprob: -2.8159680366516113
    7. ' default' → logprob: -3.5659680366516113
    8. ' Default' → logprob: -4.690968036651611
    9. 'str' → logprob: -5.065968036651611
    10. ')' → logprob: -5.065968036651611

Token 690: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009468480944633484
    2. '):' → logprob: -5.1344685554504395
    3. ')' → logprob: -6.6344685554504395
    4. ' =' → logprob: -6.7594685554504395
    5. '=None' → logprob: -7.5094685554504395
    6. '   ' → logprob: -8.509468078613281
    7. '):
' → logprob: -8.759468078613281
    8. ':' → logprob: -10.384468078613281
    9. '="' → logprob: -10.384468078613281
    10. ' to' → logprob: -11.259468078613281

Token 691: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.694766489090398e-05
    2. ' print' → logprob: -9.875066757202148
    3. 'pr' → logprob: -12.250066757202148
    4. 'output' → logprob: -12.500066757202148
    5. 'use' → logprob: -13.000066757202148
    6. '_print' → logprob: -13.250066757202148
    7. '   ' → logprob: -14.000066757202148
    8. 'return' → logprob: -14.250066757202148
    9. '
' → logprob: -14.375066757202148
    10. ')' → logprob: -15.125066757202148

Token 692: ' if' (ID: 538)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0035456628538668156
    2. ' =' → logprob: -6.628545761108398
    3. '="' → logprob: -6.878545761108398
    4. ' if' → logprob: -7.878545761108398
    5. 'if' → logprob: -8.128545761108398
    6. ')' → logprob: -8.378545761108398
    7. '   ' → logprob: -8.503545761108398
    8. '=None' → logprob: -10.503545761108398
    9. '):' → logprob: -10.628545761108398
    10. '):
' → logprob: -11.878545761108398

Token 693: ' condition' (ID: 7060)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005484183318912983
    2. ' b' → logprob: -5.505484104156494
    3. 'True' → logprob: -6.630484104156494
    4. ' True' → logprob: -9.630484580993652
    5. ' the' → logprob: -11.880484580993652
    6. 'the' → logprob: -12.130484580993652
    7. 'condition' → logprob: -12.255484580993652
    8. '   ' → logprob: -13.880484580993652
    9. ' condition' → logprob: -14.255484580993652
    10. 'true' → logprob: -14.630484580993652

Token 694: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.0734938383102417
    2. ')' → logprob: -1.4484938383102417
    3. '):' → logprob: -1.8234938383102417
    4. ' else' → logprob: -2.1984939575195312
    5. '):
' → logprob: -2.4484939575195312
    6. '=True' → logprob: -3.5734939575195312
    7. 'else' → logprob: -4.073493957519531
    8. '   ' → logprob: -4.948493957519531
    9. ':' → logprob: -5.698493957519531
    10. ' )' → logprob: -5.823493957519531

Token 695: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.005237548612058163
    2. ' True' → logprob: -5.255237579345703
    3. 'true' → logprob: -12.630237579345703
    4. '_true' → logprob: -15.005237579345703
    5. ' true' → logprob: -15.630237579345703
    6. '
' → logprob: -17.880237579345703
    7. '=True' → logprob: -18.255237579345703
    8. '   ' → logprob: -18.630237579345703
    9. '(True' → logprob: -19.130237579345703
    10. '```' → logprob: -19.380237579345703

Token 696: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8606014251708984
    2. '):' → logprob: -0.9856014251708984
    3. ')' → logprob: -2.2356014251708984
    4. '):
' → logprob: -2.8606014251708984
    5. ').' → logprob: -3.6106014251708984
    6. ',' → logprob: -4.985601425170898
    7. '.' → logprob: -5.610601425170898
    8. 'else' → logprob: -7.235601425170898
    9. '=' → logprob: -7.485601425170898
    10. '```' → logprob: -8.485601425170898

Token 697: ' Defaults' (ID: 82433)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004538704175502062
    2. '
' → logprob: -6.129538536071777
    3. '    
' → logprob: -6.754538536071777
    4. ')' → logprob: -7.754538536071777
    5. '       ' → logprob: -8.379538536071777
    6. ')
' → logprob: -8.504538536071777
    7. '):
' → logprob: -9.004538536071777
    8. '```' → logprob: -9.504538536071777
    9. '  ' → logprob: -10.754538536071777
    10. '    ' → logprob: -10.879538536071777

Token 698: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17490071058273315
    2. '="' → logprob: -1.924900770187378
    3. ' to' → logprob: -5.549900531768799
    4. '=True' → logprob: -5.549900531768799
    5. 'to' → logprob: -5.549900531768799
    6. '   ' → logprob: -6.674900531768799
    7. '=None' → logprob: -7.049900531768799
    8. ')' → logprob: -7.549900531768799
    9. ' =' → logprob: -9.174901008605957
    10. '"' → logprob: -10.549901008605957

Token 699: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0008995542302727699
    2. ''' → logprob: -7.625899791717529
    3. ' "' → logprob: -7.875899791717529
    4. 'Yes' → logprob: -11.500899314880371
    5. '   ' → logprob: -11.625899314880371
    6. '"No' → logprob: -12.375899314880371
    7. '"You' → logprob: -12.375899314880371
    8. '“Yes' → logprob: -13.625899314880371
    9. ' '' → logprob: -13.750899314880371
    10. ' ' → logprob: -14.250899314880371

Token 700: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -3.531315314830863e-06
    2. '"' → logprob: -12.625003814697266
    3. ' Yes' → logprob: -16.500003814697266
    4. ''' → logprob: -17.000003814697266
    5. 'No' → logprob: -17.375003814697266
    6. 'Ye' → logprob: -17.625003814697266
    7. 'YES' → logprob: -18.375003814697266
    8. 'True' → logprob: -18.375003814697266
    9. 'Y' → logprob: -19.250003814697266
    10. '   ' → logprob: -19.500003814697266

Token 701: '".
' (ID: 26880)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.009950626641511917
    2. '").' → logprob: -5.509950637817383
    3. ')' → logprob: -5.634950637817383
    4. '")
' → logprob: -7.009950637817383
    5. '"):
' → logprob: -7.384950637817383
    6. '"' → logprob: -7.509950637817383
    7. ')"' → logprob: -9.009950637817383
    8. '"):' → logprob: -9.884950637817383
    9. ')")' → logprob: -11.759950637817383
    10. ').' → logprob: -12.134950637817383

Token 702: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001147483242675662
    2. 'no' → logprob: -6.876147270202637
    3. '	no' → logprob: -10.001147270202637
    4. ' no' → logprob: -10.251147270202637
    5. '       ' → logprob: -10.876147270202637
    6. '    
' → logprob: -11.876147270202637
    7. '    ' → logprob: -13.126147270202637
    8. '
' → logprob: -13.126147270202637
    9. '```' → logprob: -13.376147270202637
    10. '  ' → logprob: -14.126147270202637

Token 703: ' no' (ID: 860)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' (adapté à ' no') → logprob: -0.05499252676963806
    2. ' no' → logprob: -3.054992437362671
    3. '   ' → logprob: -5.05499267578125
    4. '	no' → logprob: -12.17999267578125
    5. ' ' → logprob: -13.92999267578125
    6. '       ' → logprob: -14.67999267578125
    7. '  ' → logprob: -14.92999267578125
    8. '    ' → logprob: -15.42999267578125
    9. 'No' → logprob: -16.80499267578125
    10. '    
' → logprob: -16.92999267578125

Token 704: ' (' (ID: 350)
  Prédit: '="'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '="' → logprob: -0.0770760253071785
    2. '=' → logprob: -2.827075958251953
    3. '=str' → logprob: -5.577075958251953
    4. ')' → logprob: -5.702075958251953
    5. '=None' → logprob: -6.327075958251953
    6. ' =' → logprob: -6.327075958251953
    7. '<|end|>' → logprob: -6.577075958251953
    8. ' (' → logprob: -6.952075958251953
    9. '"' → logprob: -7.577075958251953
    10. '=("' → logprob: -8.077075958251953

Token 705: 'str' (ID: 689)
  Prédit: 'No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.12175886332988739
    2. '"No' → logprob: -2.2467589378356934
    3. '")' → logprob: -5.371758937835693
    4. '"' → logprob: -5.621758937835693
    5. ' No' → logprob: -8.371758460998535
    6. ')' → logprob: -8.871758460998535
    7. '   ' → logprob: -9.746758460998535
    8. ' "' → logprob: -10.246758460998535
    9. ' ")' → logprob: -10.496758460998535
    10. ' ' → logprob: -10.746758460998535

Token 706: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15669207274913788
    2. '="' → logprob: -2.5316920280456543
    3. '):' → logprob: -3.0316920280456543
    4. ')' → logprob: -4.781692028045654
    5. '"' → logprob: -6.156692028045654
    6. '):
' → logprob: -6.156692028045654
    7. '=str' → logprob: -6.531692028045654
    8. '   ' → logprob: -7.531692028045654
    9. '=None' → logprob: -7.531692028045654
    10. ' =' → logprob: -7.656692028045654

Token 707: ' optional' (ID: 18297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1208487749099731
    2. 'no' → logprob: -1.6208487749099731
    3. ' no' → logprob: -1.9958487749099731
    4. 'optional' → logprob: -1.9958487749099731
    5. ' optional' → logprob: -2.8708486557006836
    6. ' ' → logprob: -2.9958486557006836
    7. 'No' → logprob: -3.6208486557006836
    8. '"' → logprob: -3.8708486557006836
    9. '  ' → logprob: -4.620848655700684
    10. 'None' → logprob: -4.620848655700684

Token 708: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10237061977386475
    2. '"):' → logprob: -2.3523707389831543
    3. ')' → logprob: -7.227370738983154
    4. '=' → logprob: -7.352370738983154
    5. '="' → logprob: -8.227370262145996
    6. '):
' → logprob: -8.352370262145996
    7. '")' → logprob: -9.102370262145996
    8. '=None' → logprob: -9.852370262145996
    9. '"):
' → logprob: -9.852370262145996
    10. '":' → logprob: -11.102370262145996

Token 709: ' String' (ID: 1189)
  Prédit: ' str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.21343675255775452
    2. ' No' → logprob: -2.2134368419647217
    3. 'No' → logprob: -2.8384368419647217
    4. '"' → logprob: -4.463436603546143
    5. 'str' → logprob: -5.713436603546143
    6. '   ' → logprob: -5.963436603546143
    7. ' ' → logprob: -6.088436603546143
    8. ' None' → logprob: -7.088436603546143
    9. '"No' → logprob: -7.213436603546143
    10. ' String' → logprob: -7.338436603546143

Token 710: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3234684467315674
    2. '):' → logprob: -1.6984684467315674
    3. ' to' → logprob: -3.6984684467315674
    4. 'to' → logprob: -3.8234684467315674
    5. '="' → logprob: -4.323468208312988
    6. ':' → logprob: -4.448468208312988
    7. ' =' → logprob: -4.573468208312988
    8. ')' → logprob: -5.448468208312988
    9. '):
' → logprob: -6.073468208312988
    10. '=None' → logprob: -6.698468208312988

Token 711: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0657777264714241
    2. ' print' → logprob: -2.9407777786254883
    3. '"' → logprob: -4.565777778625488
    4. 'No' → logprob: -8.690777778625488
    5. '"No' → logprob: -8.940777778625488
    6. ' ' → logprob: -10.190777778625488
    7. ' No' → logprob: -10.315777778625488
    8. '   ' → logprob: -10.690777778625488
    9. ' "' → logprob: -10.690777778625488
    10. 'Print' → logprob: -12.440777778625488

Token 712: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6429663896560669
    2. '=' → logprob: -0.8929663896560669
    3. 'if' → logprob: -3.0179662704467773
    4. '   ' → logprob: -4.767966270446777
    5. 'If' → logprob: -5.642966270446777
    6. ' =' → logprob: -6.392966270446777
    7. ')' → logprob: -7.517966270446777
    8. '):' → logprob: -7.767966270446777
    9. '="' → logprob: -7.892966270446777
    10. '=None' → logprob: -8.017966270446777

Token 713: ' condition' (ID: 7060)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.07161592692136765
    2. 'condition' → logprob: -3.3216159343719482
    3. ' condition' → logprob: -4.571615695953369
    4. 'b' → logprob: -4.821615695953369
    5. 'No' → logprob: -4.946615695953369
    6. ' False' → logprob: -5.196615695953369
    7. '"' → logprob: -7.196615695953369
    8. '=False' → logprob: -7.696615695953369
    9. '   ' → logprob: -8.696616172790527
    10. ')' → logprob: -8.946616172790527

Token 714: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6781342029571533
    2. ' is' → logprob: -1.8031342029571533
    3. 'is' → logprob: -1.9281342029571533
    4. ')' → logprob: -2.9281342029571533
    5. '):' → logprob: -3.5531342029571533
    6. '   ' → logprob: -3.5531342029571533
    7. 'if' → logprob: -3.9281342029571533
    8. '="' → logprob: -4.053133964538574
    9. '"' → logprob: -5.053133964538574
    10. ' ' → logprob: -5.053133964538574

Token 715: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.10709873586893082
    2. '"' → logprob: -2.9820988178253174
    3. '"No' → logprob: -3.6070988178253174
    4. ' False' → logprob: -4.232098579406738
    5. 'No' → logprob: -4.732098579406738
    6. ' "' → logprob: -7.982098579406738
    7. ' No' → logprob: -9.732098579406738
    8. ''' → logprob: -12.482098579406738
    9. ' ' → logprob: -12.732098579406738
    10. '   ' → logprob: -12.982098579406738

Token 716: '.' (ID: 13)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08065750449895859
    2. '):
' → logprob: -2.830657482147217
    3. '   ' → logprob: -4.455657482147217
    4. '"):' → logprob: -5.080657482147217
    5. '"):
' → logprob: -7.830657482147217
    6. ')' → logprob: -8.455657958984375
    7. '):
' → logprob: -10.580657958984375
    8. '":' → logprob: -11.580657958984375
    9. ' ' → logprob: -11.580657958984375
    10. '):

' → logprob: -11.705657958984375

Token 717: ' Defaults' (ID: 82433)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003749486757442355
    2. '"""
' → logprob: -5.628749370574951
    3. '):
' → logprob: -9.75374984741211
    4. ')' → logprob: -9.75374984741211
    5. ')
' → logprob: -11.00374984741211
    6. '```' → logprob: -12.37874984741211
    7. '"""' → logprob: -12.37874984741211
    8. ' """
' → logprob: -13.50374984741211
    9. '")' → logprob: -13.62874984741211
    10. '``' → logprob: -13.75374984741211

Token 718: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6203450560569763
    2. 'to' → logprob: -1.120345115661621
    3. ' to' → logprob: -1.995345115661621
    4. ' =' → logprob: -9.620345115661621
    5. '="' → logprob: -11.120345115661621
    6. ')' → logprob: -11.995345115661621
    7. '=True' → logprob: -12.370345115661621
    8. '=None' → logprob: -12.370345115661621
    9. '<|end|>' → logprob: -13.120345115661621
    10. 'To' → logprob: -13.745345115661621

Token 719: ' "' (ID: 392)
  Prédit: '"No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"No' → logprob: -0.0014157117111608386
    2. '"' → logprob: -6.876415729522705
    3. ' "' → logprob: -7.876415729522705
    4. ''' → logprob: -12.751415252685547
    5. '   ' → logprob: -17.001415252685547
    6. ' ' → logprob: -17.001415252685547
    7. 'No' → logprob: -17.251415252685547
    8. ' No' → logprob: -17.251415252685547
    9. '("' → logprob: -17.251415252685547
    10. '“No' → logprob: -17.626415252685547

Token 720: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.00869718473404646
    2. '"No' → logprob: -4.758697032928467
    3. '"' → logprob: -9.508697509765625
    4. ''' → logprob: -11.758697509765625
    5. ' No' → logprob: -14.758697509765625
    6. 'Yes' → logprob: -15.883697509765625
    7. '“No' → logprob: -16.758697509765625
    8. '"N' → logprob: -17.508697509765625
    9. '")' → logprob: -17.633697509765625
    10. '>No' → logprob: -17.633697509765625

Token 721: '".
' (ID: 26880)
  Prédit: '"):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"):
' → logprob: -0.5254888534545898
    2. '"):' → logprob: -1.0254888534545898
    3. '")' → logprob: -3.02548885345459
    4. ')' → logprob: -7.02548885345459
    5. '"):
' → logprob: -8.52548885345459
    6. '):
' → logprob: -8.65048885345459
    7. '):' → logprob: -9.02548885345459
    8. '"' → logprob: -9.40048885345459
    9. '")
' → logprob: -10.02548885345459
    10. '"""
' → logprob: -10.65048885345459

Token 722: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011079480173066258
    2. '):
' → logprob: -6.876108169555664
    3. '):' → logprob: -10.251108169555664
    4. ')' → logprob: -10.376108169555664
    5. '    
' → logprob: -13.251108169555664
    6. '```' → logprob: -13.251108169555664
    7. ')
' → logprob: -13.501108169555664
    8. 'def' → logprob: -14.001108169555664
    9. 'if' → logprob: -14.001108169555664
    10. '"""
' → logprob: -14.251108169555664

Token 723: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3544423381972592e-05
    2. ')' → logprob: -11.87501335144043
    3. '```' → logprob: -12.87501335144043
    4. '"""
' (adapté à ' """
') → logprob: -13.12501335144043
    5. '):
' → logprob: -14.12501335144043
    6. ')
' → logprob: -14.12501335144043
    7. '"""' → logprob: -15.12501335144043
    8. 'def' → logprob: -16.62501335144043
    9. '):' → logprob: -16.87501335144043
    10. '   ' → logprob: -17.25001335144043

Token 724: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.081124447286129
    2. 'if' → logprob: -2.8311245441436768
    3. 'print' → logprob: -4.081124305725098
    4. ' if' → logprob: -6.206124305725098
    5. 'def' → logprob: -10.206124305725098
    6. ' print' → logprob: -10.581124305725098
    7. '```' → logprob: -12.706124305725098
    8. '	if' → logprob: -13.206124305725098
    9. '	print' → logprob: -14.956124305725098
    10. '_print' → logprob: -15.206124305725098

Token 725: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0013015457661822438
    2. 'if' → logprob: -7.0013017654418945
    3. '   ' → logprob: -8.001301765441895
    4. ' print' → logprob: -9.876301765441895
    5. ' if' → logprob: -12.626301765441895
    6. 'prin' → logprob: -16.126300811767578
    7. 'pr' → logprob: -16.251300811767578
    8. '	print' → logprob: -17.626300811767578
    9. '
' → logprob: -17.876300811767578
    10. '```' → logprob: -18.001300811767578

Token 726: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.511406809295295e-06
    2. '((' → logprob: -12.250006675720215
    3. '(f' → logprob: -13.875006675720215
    4. '("' → logprob: -15.125006675720215
    5. '()' → logprob: -15.625006675720215
    6. '('' → logprob: -16.0000057220459
    7. ' (' → logprob: -16.6250057220459
    8. 'yes' → logprob: -16.7500057220459
    9. '(
' → logprob: -16.8750057220459
    10. '(y' → logprob: -17.0000057220459

Token 727: 'yes' (ID: 6763)
  Prédit: 'yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yes' → logprob: -2.1008713702030946e-06
    2. ' yes' → logprob: -13.125001907348633
    3. 'ye' → logprob: -17.375001907348633
    4. '(' → logprob: -17.875001907348633
    5. 'Yes' → logprob: -19.125001907348633
    6. '_yes' → logprob: -19.125001907348633
    7. 'y' → logprob: -20.250001907348633
    8. '=yes' → logprob: -20.750001907348633
    9. 'YES' → logprob: -20.875001907348633
    10. 'yeah' → logprob: -22.125001907348633

Token 728: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16029734909534454
    2. ' if' → logprob: -1.9102973937988281
    3. ')' → logprob: -9.535297393798828
    4. '()' → logprob: -14.035297393798828
    5. '"' → logprob: -16.910297393798828
    6. '	if' → logprob: -17.660297393798828
    7. 'i' → logprob: -17.910297393798828
    8. 'If' → logprob: -18.035297393798828
    9. ' ' → logprob: -18.410297393798828
    10. '```' → logprob: -18.910297393798828

Token 729: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10020667314529419
    2. ' b' → logprob: -2.3502066135406494
    3. '	b' → logprob: -20.35020637512207
    4. ')b' → logprob: -20.60020637512207
    5. '(b' → logprob: -20.72520637512207
    6. ' ' → logprob: -20.97520637512207
    7. ' ' → logprob: -21.10020637512207
    8. '_b' → logprob: -21.97520637512207
    9. '>b' → logprob: -22.35020637512207
    10. ' б' → logprob: -22.85020637512207

Token 730: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5759403109550476
    2. 'else' → logprob: -0.8259403109550476
    3. '	else' → logprob: -14.700940132141113
    4. '_else' → logprob: -15.700940132141113
    5. 'elses' → logprob: -16.70094108581543
    6. ' els' → logprob: -16.70094108581543
    7. ')' → logprob: -16.82594108581543
    8. ' ' → logprob: -17.32594108581543
    9. '```' → logprob: -17.45094108581543
    10. 'els' → logprob: -17.57594108581543

Token 731: ' no' (ID: 860)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.011047814972698689
    2. ' no' → logprob: -4.511047840118408
    3. '	no' → logprob: -18.88604736328125
    4. 'n' → logprob: -20.51104736328125
    5. ' ' → logprob: -20.76104736328125
    6. '(no' → logprob: -21.13604736328125
    7. 'No' → logprob: -22.38604736328125
    8. '_no' → logprob: -22.51104736328125
    9. '   ' → logprob: -23.26104736328125
    10. '
' → logprob: -23.88604736328125

Token 732: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -15.750000953674316
    3. '())' → logprob: -16.5
    4. ' )' → logprob: -16.625
    5. ')`' → logprob: -17.0
    6. '))' → logprob: -17.5
    7. '()' → logprob: -18.375
    8. ')}' → logprob: -19.125
    9. '),' → logprob: -19.625
    10. '")' → logprob: -19.75

Token 733: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0011450991732999682
    2. '#' → logprob: -7.376144886016846
    3. '<|end|>' → logprob: -7.876144886016846
    4. 'if' → logprob: -9.626145362854004
    5. '```' → logprob: -10.001145362854004
    6. '[' → logprob: -12.376145362854004
    7. 'ndef' → logprob: -12.501145362854004
    8. '
' → logprob: -12.626145362854004
    9. 'b' → logprob: -12.751145362854004
    10. 'a' → logprob: -13.751145362854004

Token 734: ' Example' (ID: 24855)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08921251446008682
    2. '#' → logprob: -2.714212417602539
    3. '<|end|>' → logprob: -4.214212417602539
    4. '```' → logprob: -5.714212417602539
    5. 's' → logprob: -8.339212417602539
    6. '[' → logprob: -8.339212417602539
    7. '<|end|>' → logprob: -9.714212417602539
    8. 'import' → logprob: -9.839212417602539
    9. 'n' → logprob: -10.089212417602539
    10. '...' → logprob: -10.089212417602539

Token 735: ' utility' (ID: 24779)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.017880311235785484
    2. '()' → logprob: -4.642880439758301
    3. 's' → logprob: -5.267880439758301
    4. '(' → logprob: -7.142880439758301
    5. '(
' → logprob: -7.892880439758301
    6. 'd' → logprob: -8.1428804397583
    7. '```' → logprob: -8.1428804397583
    8. '[' → logprob: -8.2678804397583
    9. '#' → logprob: -8.2678804397583
    10. ':' → logprob: -8.3928804397583

Token 736: ' imports' (ID: 32048)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009875434450805187
    2. '<|end|>' → logprob: -5.134875297546387
    3. '
' → logprob: -6.259875297546387
    4. '#' → logprob: -7.634875297546387
    5. 'functions' → logprob: -7.634875297546387
    6. '```' → logprob: -8.134875297546387
    7. 's' → logprob: -9.259875297546387
    8. 'function' → logprob: -9.384875297546387
    9. '<|end|>' → logprob: -9.634875297546387
    10. '_functions' → logprob: -9.884875297546387

Token 737: ' (' (ID: 350)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.014183718711137772
    2. 'from' → logprob: -4.264183521270752
    3. '```' → logprob: -12.01418399810791
    4. '
' → logprob: -12.26418399810791
    5. ' import' → logprob: -12.38918399810791
    6. ' from' → logprob: -13.63918399810791
    7. 'for' → logprob: -13.88918399810791
    8. '<|end|>' → logprob: -13.88918399810791
    9. '(import' → logprob: -14.76418399810791
    10. '#' → logprob: -14.88918399810791

Token 738: 'use' (ID: 1821)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.40782490372657776
    2. 'from' → logprob: -1.1578248739242554
    3. ')' → logprob: -4.157824993133545
    4. ' from' → logprob: -6.282824993133545
    5. 'math' → logprob: -6.657824993133545
    6. 'collections' → logprob: -7.782824993133545
    7. ' import' → logprob: -8.032824516296387
    8. ' math' → logprob: -8.032824516296387
    9. 'json' → logprob: -8.157824516296387
    10. '```' → logprob: -8.657824516296387

Token 739: 'ful' (ID: 1500)
  Prédit: 'ful'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ful' → logprob: -0.20122189819812775
    2. 'from' → logprob: -1.8262219429016113
    3. 'import' → logprob: -4.826221942901611
    4. 'full' → logprob: -5.701221942901611
    5. ' typing' → logprob: -5.826221942901611
    6. ' from' → logprob: -6.576221942901611
    7. 'typing' → logprob: -6.701221942901611
    8. ' itertools' → logprob: -7.201221942901611
    9. 'math' → logprob: -7.951221942901611
    10. 'for' → logprob: -8.201221466064453

Token 740: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01683773659169674
    2. 'in' → logprob: -4.6418375968933105
    3. ' for' → logprob: -5.3918375968933105
    4. ')' → logprob: -6.6418375968933105
    5. 'import' → logprob: -8.016838073730469
    6. 'as' → logprob: -8.266838073730469
    7. 'if' → logprob: -8.641838073730469
    8. ' in' → logprob: -8.641838073730469
    9. 'from' → logprob: -9.141838073730469
    10. ':' → logprob: -9.766838073730469

Token 741: ' typical' (ID: 19271)
  Prédit: 'competitive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'competitive' → logprob: -1.1807258129119873
    2. 'collections' → logprob: -1.4307258129119873
    3. 'math' → logprob: -1.5557258129119873
    4. 'sys' → logprob: -2.6807258129119873
    5. 'var' → logprob: -2.9307258129119873
    6. 'common' → logprob: -4.305726051330566
    7. 'import' → logprob: -4.680726051330566
    8. 'alg' → logprob: -4.680726051330566
    9. 'typ' → logprob: -4.680726051330566
    10. 'typing' → logprob: -4.680726051330566

Token 742: ' competitive' (ID: 18602)
  Prédit: 'competitive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'competitive' → logprob: -0.5149673223495483
    2. 'coding' → logprob: -2.139967441558838
    3. 'import' → logprob: -2.764967441558838
    4. 'alg' → logprob: -3.264967441558838
    5. 'python' → logprob: -3.264967441558838
    6. 'pro' → logprob: -3.389967441558838
    7. 'contest' → logprob: -3.639967441558838
    8. 'algorithm' → logprob: -3.764967441558838
    9. 'Python' → logprob: -3.889967441558838
    10. 'problem' → logprob: -4.389967441558838

Token 743: ' programming' (ID: 23238)
  Prédit: 'program'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'program' → logprob: -0.00335534755140543
    2. ' programming' → logprob: -5.753355503082275
    3. 'import' → logprob: -9.753355026245117
    4. 'python' → logprob: -9.878355026245117
    5. '```' → logprob: -10.628355026245117
    6. 'Programming' → logprob: -11.128355026245117
    7. '_program' → logprob: -11.253355026245117
    8. 'programm' → logprob: -12.003355026245117
    9. '-program' → logprob: -12.503355026245117
    10. '
' → logprob: -13.378355026245117

Token 744: ' tasks' (ID: 13638)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3939969837665558
    2. ')' → logprob: -1.2689969539642334
    3. ')
' → logprob: -3.1439969539642334
    4. 'imports' → logprob: -7.6439971923828125
    5. 'from' → logprob: -8.018997192382812
    6. ')

' → logprob: -8.518997192382812
    7. '```' → logprob: -8.893997192382812
    8. '_import' → logprob: -9.643997192382812
    9. ' import' → logprob: -9.893997192382812
    10. ' imports' → logprob: -10.143997192382812

Token 745: ')
' (ID: 446)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.1532605141401291
    2. ')' → logprob: -2.1532604694366455
    3. ')
' → logprob: -3.7782604694366455
    4. 'from' → logprob: -5.778260707855225
    5. ')

' → logprob: -11.028260231018066
    6. '```' → logprob: -12.528260231018066
    7. '
' → logprob: -12.778260231018066
    8. 'imports' → logprob: -13.528260231018066
    9. ' import' → logprob: -13.778260231018066
    10. '):
' → logprob: -13.903260231018066

Token 746: '#' (ID: 2)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.38687190413475037
    2. 'from' → logprob: -1.1368719339370728
    3. '```' → logprob: -14.636872291564941
    4. ' from' → logprob: -14.886872291564941
    5. ' import' → logprob: -15.636872291564941
    6. '
' → logprob: -17.886871337890625
    7. 'collections' → logprob: -19.761871337890625
    8. ''import' → logprob: -19.886871337890625
    9. 'fro' → logprob: -21.386871337890625
    10. '	from' → logprob: -21.511871337890625

Token 747: ' Uncomment' (ID: 168644)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.575939953327179
    2. 'from' → logprob: -0.825939953327179
    3. ' from' → logprob: -15.575940132141113
    4. ' import' → logprob: -15.825940132141113
    5. '```' → logprob: -15.825940132141113
    6. 'collections' → logprob: -19.825939178466797
    7. '
' → logprob: -19.950939178466797
    8. 'fro' → logprob: -20.825939178466797
    9. ''import' → logprob: -21.575939178466797
    10. '	from' → logprob: -21.825939178466797

Token 748: ' as' (ID: 472)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.452149897813797
    2. 'import' → logprob: -1.2021498680114746
    3. '#' → logprob: -3.7021498680114746
    4. '#import' → logprob: -3.9521498680114746
    5. '#from' → logprob: -3.9521498680114746
    6. '```' → logprob: -9.452150344848633
    7. ''''
' → logprob: -11.452150344848633
    8. ' from' → logprob: -13.327150344848633
    9. '"""
' → logprob: -13.452150344848633
    10. '
' → logprob: -13.952150344848633

Token 749: ' needed' (ID: 6118)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.01261372584849596
    2. 'from' → logprob: -5.262613773345947
    3. 'needed' → logprob: -5.262613773345947
    4. ' needed' → logprob: -6.262613773345947
    5. '
' → logprob: -9.137613296508789
    6. '#from' → logprob: -10.137613296508789
    7. '#import' → logprob: -10.387613296508789
    8. 'import' → logprob: -10.387613296508789
    9. '"""
' → logprob: -11.012613296508789
    10. '#
' → logprob: -11.262613296508789

Token 750: '.
' (ID: 558)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.9583425521850586
    2. '#from' → logprob: -1.2083425521850586
    3. '#import' → logprob: -1.9583425521850586
    4. '#' → logprob: -2.2083425521850586
    5. 'import' → logprob: -2.7083425521850586
    6. ''''
' → logprob: -9.583342552185059
    7. '"""
' → logprob: -10.333342552185059
    8. '#
' → logprob: -10.708342552185059
    9. '```' → logprob: -11.208342552185059
    10. '
' → logprob: -11.833342552185059

Token 751: '#' (ID: 2)
  Prédit: '#import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#import' → logprob: -0.7819628119468689
    2. '#' → logprob: -1.5319628715515137
    3. '#from' → logprob: -1.5319628715515137
    4. 'import' → logprob: -2.7819628715515137
    5. 'from' → logprob: -3.0319628715515137
    6. '```' → logprob: -9.781962394714355
    7. ''''
' → logprob: -10.031962394714355
    8. '"""
' → logprob: -11.031962394714355
    9. '#
' → logprob: -12.406962394714355
    10. '﻿#' → logprob: -13.281962394714355

Token 752: ' from' (ID: 591)
  Prédit: '#from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#from' → logprob: -0.6798036694526672
    2. 'from' → logprob: -1.6798036098480225
    3. '#import' → logprob: -1.6798036098480225
    4. '#' → logprob: -2.4298036098480225
    5. 'import' → logprob: -3.4298036098480225
    6. ''''
' → logprob: -12.429803848266602
    7. '"""
' → logprob: -12.679803848266602
    8. '##' → logprob: -13.804803848266602
    9. '```' → logprob: -13.804803848266602
    10. '#include' → logprob: -14.054803848266602

Token 753: ' sys' (ID: 12228)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.07411302626132965
    2. 'math' → logprob: -2.824113130569458
    3. 'typing' → logprob: -4.824112892150879
    4. 'sys' → logprob: -5.699112892150879
    5. ' collections' → logprob: -8.824112892150879
    6. 'bis' → logprob: -8.824112892150879
    7. 'it' → logprob: -8.949112892150879
    8. ' typing' → logprob: -9.699112892150879
    9. 'heap' → logprob: -9.824112892150879
    10. 'import' → logprob: -9.824112892150879

Token 754: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.5760483145713806
    2. 'import' → logprob: -0.8260483145713806
    3. '	import' → logprob: -9.201047897338867
    4. ' ' → logprob: -13.201047897338867
    5. '<|end|>' → logprob: -13.326047897338867
    6. '_import' → logprob: -13.701047897338867
    7. ' imports' → logprob: -14.076047897338867
    8. '#import' → logprob: -14.201047897338867
    9. 'imports' → logprob: -15.326047897338867
    10. '   ' → logprob: -15.576047897338867

Token 755: ' set' (ID: 920)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.003354162909090519
    2. 'import' → logprob: -6.128354072570801
    3. ' stdin' → logprob: -7.003354072570801
    4. 'stdlib' → logprob: -8.7533540725708
    5. 'stdout' → logprob: -10.7533540725708
    6. ' import' → logprob: -10.7533540725708
    7. '.stdin' → logprob: -11.1283540725708
    8. 'std' → logprob: -11.1283540725708
    9. 'stderr' → logprob: -11.6283540725708
    10. 'stdio' → logprob: -11.8783540725708

Token 756: 'rec' (ID: 9285)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.0007902132347226143
    2. ' stdin' → logprob: -8.2507905960083
    3. 'input' → logprob: -8.6257905960083
    4. 'import' → logprob: -9.0007905960083
    5. 'rec' → logprob: -9.3757905960083
    6. 'stdout' → logprob: -9.7507905960083
    7. '.stdin' → logprob: -10.2507905960083
    8. 'std' → logprob: -10.5007905960083
    9. 'exit' → logprob: -11.5007905960083
    10. 'stdlib' → logprob: -12.3757905960083

Token 757: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -9.088346359931165e-07
    2. 'urs' → logprob: -15.125000953674316
    3. 'ursive' → logprob: -15.250000953674316
    4. 'usion' → logprob: -15.875000953674316
    5. 'ursor' → logprob: -16.375
    6. '[' → logprob: -17.125
    7. 'limit' → logprob: -17.25
    8. 'ur' → logprob: -17.625
    9. '#' → logprob: -18.375
    10. 'ision' → logprob: -18.875

Token 758: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -6.074907287256792e-05
    2. '_limit' → logprob: -9.75006103515625
    3. ' limit' → logprob: -13.50006103515625
    4. 'lim' → logprob: -14.87506103515625
    5. 'ursion' → logprob: -15.25006103515625
    6. 'limits' → logprob: -15.75006103515625
    7. 'Limit' → logprob: -16.25006103515625
    8. 'import' → logprob: -16.75006103515625
    9. 'depth' → logprob: -17.37506103515625
    10. '(limit' → logprob: -18.12506103515625

Token 759: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08324696868658066
    2. 'import' → logprob: -3.333246946334839
    3. '<|end|>' → logprob: -3.958246946334839
    4. ',' → logprob: -4.333247184753418
    5. '
' → logprob: -5.083247184753418
    6. 'from' → logprob: -5.833247184753418
    7. ' #' → logprob: -6.833247184753418
    8. '#import' → logprob: -7.958247184753418
    9. '<|end|>' → logprob: -7.958247184753418
    10. '#
' → logprob: -7.958247184753418

Token 760: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0017706160433590412
    2. '#from' → logprob: -7.501770496368408
    3. 'from' → logprob: -7.626770496368408
    4. '#import' → logprob: -8.001770973205566
    5. 'import' → logprob: -8.126770973205566
    6. '<|end|>' → logprob: -9.751770973205566
    7. '```' → logprob: -11.626770973205566
    8. '﻿#' → logprob: -12.001770973205566
    9. '#
' → logprob: -12.376770973205566
    10. '#set' → logprob: -12.626770973205566

Token 761: ' set' (ID: 920)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7333086133003235
    2. '#' → logprob: -0.9833086133003235
    3. '#from' → logprob: -2.2333085536956787
    4. 'import' → logprob: -3.7333085536956787
    5. '#import' → logprob: -4.233308792114258
    6. 'sys' → logprob: -11.983308792114258
    7. ' from' → logprob: -12.608308792114258
    8. '#set' → logprob: -13.108308792114258
    9. '#print' → logprob: -13.233308792114258
    10. '#if' → logprob: -13.483308792114258

Token 762: 'rec' (ID: 9285)
  Prédit: '_rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rec' → logprob: -0.47587376832962036
    2. 'rec' → logprob: -0.9758737683296204
    3. '_' → logprob: -6.350873947143555
    4. '(rec' → logprob: -11.725873947143555
    5. '_tab' → logprob: -11.850873947143555
    6. '_recursive' → logprob: -12.100873947143555
    7. '_re' → logprob: -12.225873947143555
    8. '_token' → logprob: -12.850873947143555
    9. '_depth' → logprob: -13.600873947143555
    10. '_code' → logprob: -13.600873947143555

Token 763: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -7.922563963802531e-05
    2. 'urs' → logprob: -9.500079154968262
    3. 'ursive' → logprob: -13.250079154968262
    4. 'c' → logprob: -13.875079154968262
    5. 'ursor' → logprob: -14.250079154968262
    6. 'ur' → logprob: -14.375079154968262
    7. 'rec' → logprob: -16.125080108642578
    8. 'rs' → logprob: -16.250080108642578
    9. '(' → logprob: -16.625080108642578
    10. 'usion' → logprob: -17.000080108642578

Token 764: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.018152866512537003
    2. '_limit' → logprob: -4.018152713775635
    3. '(limit' → logprob: -13.018153190612793
    4. 'imit' → logprob: -15.268153190612793
    5. 'lim' → logprob: -15.643153190612793
    6. ' limit' → logprob: -16.393152236938477
    7. '_LIMIT' → logprob: -16.643152236938477
    8. 'limits' → logprob: -16.768152236938477
    9. 'Limit' → logprob: -17.143152236938477
    10. '_' → logprob: -17.268152236938477

Token 765: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000264315924141556
    2. '()' → logprob: -8.500264167785645
    3. '(int' → logprob: -9.875264167785645
    4. '((' → logprob: -12.375264167785645
    5. '10' → logprob: -13.625264167785645
    6. '(
' → logprob: -13.750264167785645
    7. '100' → logprob: -14.000264167785645
    8. '   ' → logprob: -15.625264167785645
    9. '999' → logprob: -15.625264167785645
    10. 'int' → logprob: -15.750264167785645

Token 766: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.5107177862082608e-05
    2. '100' → logprob: -10.625024795532227
    3. 'int' → logprob: -15.375024795532227
    4. '(' → logprob: -15.375024795532227
    5. 'pow' → logprob: -15.875024795532227
    6. '1' → logprob: -16.250024795532227
    7. ' ' → logprob: -17.625024795532227
    8. '200' → logprob: -18.375024795532227
    9. '１０' → logprob: -18.625024795532227
    10. '500' → logprob: -18.750024795532227

Token 767: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.04901096224784851
    2. '00' → logprob: -3.049010992050171
    3. '_' → logprob: -8.17401123046875
    4. '0' → logprob: -8.92401123046875
    5. ')' → logprob: -12.29901123046875
    6. '   ' → logprob: -13.29901123046875
    7. '**' → logprob: -14.04901123046875
    8. '*' → logprob: -15.17401123046875
    9. '__' → logprob: -15.79901123046875
    10. '  ' → logprob: -16.04901123046875

Token 768: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05656043440103531
    2. ')' → logprob: -2.931560516357422
    3. '000' → logprob: -6.431560516357422
    4. '00' → logprob: -9.931560516357422
    5. ')
' → logprob: -11.056560516357422
    6. '_' → logprob: -14.681560516357422
    7. '#' → logprob: -14.806560516357422
    8. '```' → logprob: -14.931560516357422
    9. '+' → logprob: -15.181560516357422
    10. '))' → logprob: -15.931560516357422

Token 769: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005350403371267021
    2. '#' → logprob: -8.125535011291504
    3. ')
' → logprob: -8.500535011291504
    4. ')#' → logprob: -11.000535011291504
    5. '<|end|>' → logprob: -11.750535011291504
    6. '
' → logprob: -12.125535011291504
    7. 'import' → logprob: -13.500535011291504
    8. '')' → logprob: -14.125535011291504
    9. '())' → logprob: -14.250535011291504
    10. ')

' → logprob: -14.500535011291504

Token 770: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.20816302299499512
    2. '#' → logprob: -2.333163022994995
    3. 'import' → logprob: -3.083163022994995
    4. '<|end|>' → logprob: -3.833163022994995
    5. 'def' → logprob: -3.958163022994995
    6. '```' → logprob: -5.583163261413574
    7. ' from' → logprob: -8.583163261413574
    8. '<|end|>' → logprob: -9.208163261413574
    9. '
' → logprob: -9.333163261413574
    10. '#import' → logprob: -10.458163261413574

Token 771: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.06299696117639542
    2. 'import' → logprob: -2.8129968643188477
    3. '#' → logprob: -6.937996864318848
    4. '#import' → logprob: -10.437996864318848
    5. ' from' → logprob: -11.312996864318848
    6. '#from' → logprob: -11.437996864318848
    7. '<|end|>' → logprob: -12.937996864318848
    8. '```' → logprob: -13.562996864318848
    9. 'pass' → logprob: -14.562996864318848
    10. '#include' → logprob: -14.687996864318848

Token 772: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.007539079058915377
    2. 'math' → logprob: -5.00753927230835
    3. ' collections' → logprob: -8.132538795471191
    4. 'typing' → logprob: -8.507538795471191
    5. 'sys' → logprob: -8.882538795471191
    6. 'bis' → logprob: -9.007538795471191
    7. 'heap' → logprob: -10.507538795471191
    8. 'it' → logprob: -11.007538795471191
    9. ' itertools' → logprob: -11.632538795471191
    10. 'operator' → logprob: -12.382538795471191

Token 773: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0013982143718749285
    2. ' import' → logprob: -6.626398086547852
    3. '_import' → logprob: -10.126398086547852
    4. 'from' → logprob: -11.126398086547852
    5. 'imports' → logprob: -12.001398086547852
    6. '.import' → logprob: -12.251398086547852
    7. '.' → logprob: -13.251398086547852
    8. '#import' → logprob: -13.376398086547852
    9. '	import' → logprob: -14.376398086547852
    10. '-import' → logprob: -14.501398086547852

Token 774: ' Counter' (ID: 32251)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0007738933200016618
    2. ' deque' → logprob: -7.250773906707764
    3. 'default' → logprob: -10.500773429870605
    4. ' defaultdict' → logprob: -11.000773429870605
    5. 'collections' → logprob: -11.250773429870605
    6. 'de' → logprob: -12.250773429870605
    7. 'Counter' → logprob: -13.500773429870605
    8. 'counter' → logprob: -15.625773429870605
    9. 'import' → logprob: -15.625773429870605
    10. '.de' → logprob: -16.500774383544922

Token 775: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.16140243411064148
    2. 'from' → logprob: -1.9114024639129639
    3. '#from' → logprob: -7.536402225494385
    4. 'import' → logprob: -8.161402702331543
    5. '<|end|>' → logprob: -8.411402702331543
    6. '#import' → logprob: -9.786402702331543
    7. '```' → logprob: -10.036402702331543
    8. ' from' → logprob: -11.536402702331543
    9. ',' → logprob: -12.036402702331543
    10. '
' → logprob: -12.286402702331543

Token 776: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.3135981261730194
    2. 'default' → logprob: -1.3135981559753418
    3. ' defaultdict' → logprob: -8.063597679138184
    4. ' deque' → logprob: -10.813597679138184
    5. 'de' → logprob: -14.438597679138184
    6. 'Deque' → logprob: -14.813597679138184
    7. 'named' → logprob: -15.563597679138184
    8. 'Default' → logprob: -16.1885986328125
    9. 'collections' → logprob: -16.4385986328125
    10. 'heap' → logprob: -16.4385986328125

Token 777: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.03655985742807388
    2. 'from' → logprob: -3.536559820175171
    3. '<|end|>' → logprob: -5.16156005859375
    4. '#from' → logprob: -7.91156005859375
    5. 'import' → logprob: -8.28656005859375
    6. ',' → logprob: -8.53656005859375
    7. '```' → logprob: -9.78656005859375
    8. '#import' → logprob: -9.78656005859375
    9. '
' → logprob: -10.16156005859375
    10. '#index' → logprob: -10.91156005859375

Token 778: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.0006857485859654844
    2. 'heap' → logprob: -8.000685691833496
    3. ' defaultdict' → logprob: -8.125685691833496
    4. 'it' → logprob: -10.375685691833496
    5. 'named' → logprob: -10.875685691833496
    6. 'deque' → logprob: -13.375685691833496
    7. 'bis' → logprob: -13.625685691833496
    8. 'Ordered' → logprob: -14.000685691833496
    9. '.default' → logprob: -15.875685691833496
    10. 'Counter' → logprob: -15.875685691833496

Token 779: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.04043985903263092
    2. 'from' → logprob: -3.2904398441314697
    3. '<|end|>' → logprob: -6.540440082550049
    4. '#from' → logprob: -7.540440082550049
    5. 'import' → logprob: -8.66543960571289
    6. ',' → logprob: -9.41543960571289
    7. '#import' → logprob: -9.54043960571289
    8. '```' → logprob: -10.79043960571289
    9. '#index' → logprob: -11.04043960571289
    10. ' from' → logprob: -11.29043960571289

Token 780: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.822021484375
    2. 'from' → logprob: -1.072021484375
    3. '<|end|>' → logprob: -1.572021484375
    4. 'import' → logprob: -4.822021484375
    5. '```' → logprob: -6.447021484375
    6. '<|end|>' → logprob: -8.447021484375
    7. '#from' → logprob: -8.947021484375
    8. '#import' → logprob: -9.197021484375
    9. ' from' → logprob: -9.197021484375
    10. ')' → logprob: -9.197021484375

Token 781: ' import' (ID: 1588)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.04496495798230171
    2. 'import' → logprob: -3.5449650287628174
    3. '#' → logprob: -4.294964790344238
    4. '#from' → logprob: -7.169964790344238
    5. '#import' → logprob: -8.169964790344238
    6. '<|end|>' → logprob: -8.544964790344238
    7. 'pass' → logprob: -9.419964790344238
    8. ' from' → logprob: -9.419964790344238
    9. '```' → logprob: -11.544964790344238
    10. 'Counter' → logprob: -12.169964790344238

Token 782: ' itertools' (ID: 103178)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.18488824367523193
    2. 'bis' → logprob: -2.6848883628845215
    3. 'math' → logprob: -2.6848883628845215
    4. 'heap' → logprob: -3.4348883628845215
    5. 're' → logprob: -10.059887886047363
    6. ' sys' → logprob: -10.184887886047363
    7. 'collections' → logprob: -11.434887886047363
    8. 'it' → logprob: -11.684887886047363
    9. ' heap' → logprob: -12.184887886047363
    10. ' itertools' → logprob: -12.559887886047363

Token 783: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 784: '#' (ID: 2)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5953841805458069
    2. '<|end|>' → logprob: -1.470384120941162
    3. 'from' → logprob: -2.095384120941162
    4. '#' → logprob: -2.845384120941162
    5. '```' → logprob: -3.845384120941162
    6. 'def' → logprob: -4.345384120941162
    7. 'pass' → logprob: -6.720384120941162
    8. '<|end|>' → logprob: -6.970384120941162
    9. '...' → logprob: -8.09538459777832
    10. ' from' → logprob: -8.97038459777832

Token 785: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.14916998147964478
    2. 'from' → logprob: -2.399169921875
    3. '<|end|>' → logprob: -3.274169921875
    4. '```' → logprob: -5.399169921875
    5. 'def' → logprob: -6.024169921875
    6. '#' → logprob: -6.024169921875
    7. '
' → logprob: -9.149169921875
    8. 'pass' → logprob: -9.399169921875
    9. '#import' → logprob: -9.774169921875
    10. '<|end|>' → logprob: -9.774169921875

Token 786: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.01908322051167488
    2. 'bis' → logprob: -4.519083023071289
    3. 'sys' → logprob: -5.019083023071289
    4. 'heap' → logprob: -6.769083023071289
    5. ' math' → logprob: -8.769083023071289
    6. 'operator' → logprob: -9.644083023071289
    7. 'collections' → logprob: -11.394083023071289
    8. 'fun' → logprob: -12.394083023071289
    9. ' bis' → logprob: -12.519083023071289
    10. ' sys' → logprob: -13.644083023071289

Token 787: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 788: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.85826176404953
    2. '<|end|>' → logprob: -0.85826176404953
    3. '#' → logprob: -2.233261823654175
    4. '```' → logprob: -3.858261823654175
    5. 'import' → logprob: -4.108261585235596
    6. '
' → logprob: -5.608261585235596
    7. '<|end|>' → logprob: -6.608261585235596
    8. 'from' → logprob: -6.733261585235596
    9. '[' → logprob: -8.858262062072754
    10. '\n' → logprob: -8.858262062072754

Token 789: ' import' (ID: 1588)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 790: ' network' (ID: 5402)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.4257473051548004
    2. 'sys' → logprob: -1.175747275352478
    3. 'heap' → logprob: -3.9257473945617676
    4. 'operator' → logprob: -4.175747394561768
    5. 'collections' → logprob: -6.425747394561768
    6. 'fra' → logprob: -7.425747394561768
    7. 'statistics' → logprob: -8.42574691772461
    8. 're' → logprob: -8.80074691772461
    9. ' bis' → logprob: -8.92574691772461
    10. 'os' → logprob: -9.42574691772461

Token 791: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.9361264946837764e-07
    2. 'it' → logprob: -16.625
    3. 'import' → logprob: -19.25
    4. '
' → logprob: -20.25
    5. 'from' → logprob: -20.875
    6. '```' → logprob: -22.75
    7. 's' → logprob: -23.375
    8. 'X' → logprob: -23.625
    9. 'a' → logprob: -23.625
    10. '2' → logprob: -24.0

Token 792: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 793: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 794: ' from' (ID: 591)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 795: ' bis' (ID: 7204)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.342410683631897
    2. 'collections' → logprob: -1.342410683631897
    3. 'sys' → logprob: -4.717410564422607
    4. 'typing' → logprob: -4.842410564422607
    5. ' heap' → logprob: -5.217410564422607
    6. 'bis' → logprob: -5.467410564422607
    7. ' collections' → logprob: -6.717410564422607
    8. ' typing' → logprob: -7.842410564422607
    9. 'dat' → logprob: -8.592411041259766
    10. 'operator' → logprob: -9.092411041259766

Token 796: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -4.320199877838604e-07
    2. 'ec' → logprob: -15.625
    3. 'ected' → logprob: -16.625
    4. 'e' → logprob: -17.0
    5. '
' → logprob: -17.125
    6. 'ector' → logprob: -17.25
    7. 'import' → logprob: -18.5
    8. 'ectl' → logprob: -18.5
    9. 'ection' → logprob: -18.75
    10. '```' → logprob: -19.25

Token 797: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.17982828617095947
    2. ' import' → logprob: -1.8048282861709595
    3. ' ' → logprob: -9.929828643798828
    4. '	import' → logprob: -11.179828643798828
    5. '<|end|>' → logprob: -11.429828643798828
    6. '_import' → logprob: -12.679828643798828
    7. 'from' → logprob: -12.804828643798828
    8. 'module' → logprob: -14.429828643798828
    9. '```' → logprob: -14.804828643798828
    10. '#import' → logprob: -14.804828643798828

Token 798: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.04199586808681488
    2. ' bis' → logprob: -3.2919957637786865
    3. 'ins' → logprob: -5.541996002197266
    4. 'import' → logprob: -10.666996002197266
    5. ' ins' → logprob: -12.541996002197266
    6. 'b' → logprob: -14.291996002197266
    7. 'binary' → logprob: -16.541996002197266
    8. 'in' → logprob: -16.916996002197266
    9. '```' → logprob: -17.041996002197266
    10. '	b' → logprob: -17.166996002197266

Token 799: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -7.3458322731312364e-06
    2. 'e' → logprob: -12.000007629394531
    3. 'ec' → logprob: -14.500007629394531
    4. '
' → logprob: -14.750007629394531
    5. 't' → logprob: -15.750007629394531
    6. 'earch' → logprob: -17.75000762939453
    7. 'ected' → logprob: -18.37500762939453
    8. 'ectl' → logprob: -18.50000762939453
    9. '```' → logprob: -18.87500762939453
    10. 'ort' → logprob: -19.00000762939453

Token 800: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.3409586548805237
    2. '_right' → logprob: -1.340958595275879
    3. 'import' → logprob: -3.840958595275879
    4. '<|end|>' → logprob: -5.715958595275879
    5. '_' → logprob: -6.965958595275879
    6. 'left' → logprob: -7.715958595275879
    7. '#' → logprob: -7.965958595275879
    8. 'right' → logprob: -8.340958595275879
    9. 'from' → logprob: -8.965958595275879
    10. ',' → logprob: -9.215958595275879

Token 801: ',' (ID: 11)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.08401099592447281
    2. ',' → logprob: -3.0840110778808594
    3. '<|end|>' → logprob: -3.5840110778808594
    4. ')' → logprob: -5.959011077880859
    5. '#' → logprob: -6.209011077880859
    6. 'import' → logprob: -7.209011077880859
    7. '```' → logprob: -7.209011077880859
    8. ' from' → logprob: -8.33401107788086
    9. '<|end|>' → logprob: -8.33401107788086
    10. ',
' → logprob: -8.95901107788086

Token 802: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -7.004696090007201e-05
    2. ' bis' → logprob: -9.625069618225098
    3. 'ins' → logprob: -12.500069618225098
    4. 'b' → logprob: -16.625070571899414
    5. '	b' → logprob: -18.250070571899414
    6. 'import' → logprob: -18.250070571899414
    7. '```' → logprob: -18.375070571899414
    8. '
' → logprob: -18.750070571899414
    9. 'binary' → logprob: -19.000070571899414
    10. ' ins' → logprob: -19.750070571899414

Token 803: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.016353869810700417
    2. 'ct' → logprob: -4.141354084014893
    3. 'sect' → logprob: -8.141353607177734
    4. '```' → logprob: -11.141353607177734
    5. 's' → logprob: -13.016353607177734
    6. 't' → logprob: -13.016353607177734
    7. 'e' → logprob: -13.016353607177734
    8. '
' → logprob: -13.766353607177734
    9. '`' → logprob: -13.891353607177734
    10. 'n' → logprob: -14.016353607177734

Token 804: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.07901956140995026
    2. 'right' → logprob: -2.579019546508789
    3. 'ight' → logprob: -9.204019546508789
    4. 'Right' → logprob: -10.954019546508789
    5. '_' → logprob: -12.954019546508789
    6. 'import' → logprob: -13.329019546508789
    7. ',right' → logprob: -13.829019546508789
    8. '_RIGHT' → logprob: -13.954019546508789
    9. '```' → logprob: -13.954019546508789
    10. '_left' → logprob: -14.204019546508789

Token 805: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 806: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 807: ' from' (ID: 591)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 808: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.018425241112709045
    2. 'collections' → logprob: -4.268425464630127
    3. 'math' → logprob: -5.518425464630127
    4. ' heap' → logprob: -9.143424987792969
    5. 'bis' → logprob: -9.268424987792969
    6. 'operator' → logprob: -10.643424987792969
    7. 'typing' → logprob: -12.018424987792969
    8. 'copy' → logprob: -12.893424987792969
    9. 'sys' → logprob: -13.143424987792969
    10. 'array' → logprob: -13.268424987792969

Token 809: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.650518920039758e-06
    2. 'import' → logprob: -12.750003814697266
    3. '_' → logprob: -14.750003814697266
    4. 'queue' → logprob: -16.000003814697266
    5. 'ify' → logprob: -16.625003814697266
    6. 'dict' → logprob: -18.375003814697266
    7. 'heap' → logprob: -18.625003814697266
    8. '_queue' → logprob: -19.000003814697266
    9. 'from' → logprob: -19.125003814697266
    10. 'lib' → logprob: -19.125003814697266

Token 810: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.4846901297569275
    2. 'import' → logprob: -0.9846901297569275
    3. '<|end|>' → logprob: -4.609690189361572
    4. ' ' → logprob: -7.984690189361572
    5. '_import' → logprob: -9.109689712524414
    6. '_' → logprob: -9.234689712524414
    7. '	import' → logprob: -11.359689712524414
    8. '<|end|>' → logprob: -11.859689712524414
    9. ',' → logprob: -12.234689712524414
    10. ' _' → logprob: -12.484689712524414

Token 811: ' heap' (ID: 37237)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.027845997363328934
    2. 'heap' → logprob: -4.027845859527588
    3. ' he' → logprob: -4.652845859527588
    4. 'import' → logprob: -9.277846336364746
    5. ' heap' → logprob: -11.277846336364746
    6. '.he' → logprob: -12.402846336364746
    7. '(heap' → logprob: -13.652846336364746
    8. ' ' → logprob: -14.277846336364746
    9. '.heap' → logprob: -14.277846336364746
    10. 'hq' → logprob: -14.902846336364746

Token 812: 'ify' (ID: 1985)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00044532763422466815
    2. 'ify' → logprob: -8.000445365905762
    3. '_' → logprob: -10.000445365905762
    4. 'import' → logprob: -11.000445365905762
    5. '_push' → logprob: -11.250445365905762
    6. 'replace' → logprob: -11.750445365905762
    7. '_queue' → logprob: -12.250445365905762
    8. 'queue' → logprob: -12.375445365905762
    9. 'push' → logprob: -12.500445365905762
    10. '<|end|>' → logprob: -12.500445365905762

Token 813: ',' (ID: 11)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8192946910858154
    2. ',' → logprob: -1.1942946910858154
    3. '<|end|>' → logprob: -1.8192946910858154
    4. 'import' → logprob: -2.6942946910858154
    5. 'def' → logprob: -4.6942949295043945
    6. '#' → logprob: -4.9442949295043945
    7. ')' → logprob: -5.4442949295043945
    8. 'heap' → logprob: -6.3192949295043945
    9. '```' → logprob: -6.5692949295043945
    10. '()' → logprob: -7.6942949295043945

Token 814: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -4.9424725148128346e-05
    2. 'heap' → logprob: -10.250049591064453
    3. ' he' → logprob: -11.250049591064453
    4. '.he' → logprob: -13.875049591064453
    5. '_he' → logprob: -16.875049591064453
    6. '```' → logprob: -18.625049591064453
    7. 'h' → logprob: -19.625049591064453
    8. '
' → logprob: -19.750049591064453
    9. 'merge' → logprob: -20.250049591064453
    10. 'hq' → logprob: -20.375049591064453

Token 815: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0007191036129370332
    2. 'ap' → logprob: -7.25071907043457
    3. 'a' → logprob: -12.12571907043457
    4. 'aq' → logprob: -13.87571907043457
    5. 'q' → logprob: -14.00071907043457
    6. '```' → logprob: -14.12571907043457
    7. 'n' → logprob: -15.12571907043457
    8. 'pp' → logprob: -15.25071907043457
    9. '[' → logprob: -15.37571907043457
    10. '
' → logprob: -15.87571907043457

Token 816: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.03805927932262421
    2. 'op' → logprob: -3.2880592346191406
    3. 'push' → logprob: -11.91305923461914
    4. 'p' → logprob: -12.16305923461914
    5. '
' → logprob: -13.28805923461914
    6. '```' → logprob: -13.78805923461914
    7. 'pop' → logprob: -14.41305923461914
    8. '[' → logprob: -14.78805923461914
    9. 'app' → logprob: -14.91305923461914
    10. 'replace' → logprob: -15.41305923461914

Token 817: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019805284217000008
    2. 'from' → logprob: -4.144805431365967
    3. '#' → logprob: -5.644805431365967
    4. 'he' → logprob: -8.769804954528809
    5. '#,' → logprob: -11.019804954528809
    6. ',#' → logprob: -11.644804954528809
    7. '```' → logprob: -11.769804954528809
    8. 'import' → logprob: -11.894804954528809
    9. ' from' → logprob: -12.144804954528809
    10. '<|end|>' → logprob: -12.144804954528809

Token 818: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -9.710618905955926e-05
    2. ' he' → logprob: -9.250097274780273
    3. 'heap' → logprob: -13.875097274780273
    4. '.he' → logprob: -17.500097274780273
    5. '_he' → logprob: -19.875097274780273
    6. '
' → logprob: -20.125097274780273
    7. '   ' → logprob: -20.125097274780273
    8. 'h' → logprob: -20.625097274780273
    9. 'hev' → logprob: -20.625097274780273
    10. '```' → logprob: -20.750097274780273

Token 819: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.00033546582562848926
    2. 'ap' → logprob: -8.000335693359375
    3. 'pp' → logprob: -17.375335693359375
    4. 'a' → logprob: -19.250335693359375
    5. 'appen' → logprob: -19.250335693359375
    6. 'appt' → logprob: -19.875335693359375
    7. 'q' → logprob: -20.375335693359375
    8. 'p' → logprob: -20.375335693359375
    9. '
' → logprob: -20.500335693359375
    10. 'ап' → logprob: -21.125335693359375

Token 820: 'op' (ID: 467)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.003181040519848466
    2. 'op' → logprob: -5.753180980682373
    3. 'push' → logprob: -13.378181457519531
    4. 'app' → logprob: -13.753181457519531
    5. 'p' → logprob: -15.503181457519531
    6. '```' → logprob: -16.00318145751953
    7. 'us' → logprob: -16.12818145751953
    8. 'sh' → logprob: -16.37818145751953
    9. '   ' → logprob: -16.62818145751953
    10. 'ap' → logprob: -17.00318145751953

Token 821: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 822: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0009171743295155466
    2. '#' → logprob: -7.375916957855225
    3. 'from' → logprob: -8.750917434692383
    4. 'import' → logprob: -9.625917434692383
    5. '<|end|>' → logprob: -10.250917434692383
    6. 'class' → logprob: -11.625917434692383
    7. '```' → logprob: -11.625917434692383
    8. 'pass' → logprob: -12.500917434692383
    9. 'de' → logprob: -13.500917434692383
    10. '
' → logprob: -13.625917434692383

Token 823: ' Main' (ID: 7956)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005533146671950817
    2. '#' → logprob: -5.380533218383789
    3. '<|end|>' → logprob: -7.880533218383789
    4. 'import' → logprob: -8.130533218383789
    5. '```' → logprob: -9.380533218383789
    6. 'from' → logprob: -9.505533218383789
    7. '
' → logprob: -10.380533218383789
    8. '<|end|>' → logprob: -11.630533218383789
    9. 'de' → logprob: -11.880533218383789
    10. 'class' → logprob: -12.005533218383789

Token 824: ' script' (ID: 11713)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006459209602326155
    2. '()' → logprob: -5.3814592361450195
    3. 'if' → logprob: -7.0064592361450195
    4. '_' → logprob: -8.00645923614502
    5. 'de' → logprob: -8.13145923614502
    6. '#' → logprob: -9.63145923614502
    7. '```' → logprob: -9.75645923614502
    8. 'd' → logprob: -9.88145923614502
    9. '(' → logprob: -10.25645923614502
    10. '<|end|>' → logprob: -11.00645923614502

Token 825: ' logic' (ID: 18485)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12982572615146637
    2. 'def' → logprob: -2.1298258304595947
    3. 'n' → logprob: -6.129825592041016
    4. 'i' → logprob: -8.379825592041016
    5. 'for' → logprob: -9.004825592041016
    6. '#' → logprob: -9.129825592041016
    7. ' if' → logprob: -9.504825592041016
    8. '```' → logprob: -9.879825592041016
    9. '<|end|>' → logprob: -10.254825592041016
    10. 'import' → logprob: -10.379825592041016

Token 826: ' with' (ID: 483)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.23400533199310303
    2. 'def' → logprob: -1.609005331993103
    3. 'n' → logprob: -5.609005451202393
    4. '#' → logprob: -6.234005451202393
    5. '```' → logprob: -6.984005451202393
    6. '<|end|>' → logprob: -7.109005451202393
    7. 'for' → logprob: -8.109004974365234
    8. 'i' → logprob: -8.234004974365234
    9. ' if' → logprob: -8.609004974365234
    10. 'import' → logprob: -8.984004974365234

Token 827: ' detailed' (ID: 14633)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02507927641272545
    2. '__' → logprob: -3.9000792503356934
    3. ' if' → logprob: -5.650079250335693
    4. ' __' → logprob: -7.400079250335693
    5. 'def' → logprob: -8.275079727172852
    6. 'input' → logprob: -9.275079727172852
    7. 's' → logprob: -11.400079727172852
    8. 'import' → logprob: -11.525079727172852
    9. ' input' → logprob: -11.900079727172852
    10. '```' → logprob: -12.525079727172852

Token 828: ' comments' (ID: 7887)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14634813368320465
    2. 'if' → logprob: -2.146348237991333
    3. 'input' → logprob: -4.396347999572754
    4. 'import' → logprob: -6.021347999572754
    5. '```' → logprob: -6.646347999572754
    6. '#' → logprob: -6.771347999572754
    7. ' if' → logprob: -7.521347999572754
    8. '_input' → logprob: -7.771347999572754
    9. 's' → logprob: -8.521347999572754
    10. 'example' → logprob: -9.021347999572754

Token 829: ':

' (ID: 1402)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4529271721839905
    2. 'if' → logprob: -1.2029271125793457
    3. 'n' → logprob: -2.8279271125793457
    4. 'for' → logprob: -6.577927112579346
    5. 'import' → logprob: -7.327927112579346
    6. '
' → logprob: -7.577927112579346
    7. 'i' → logprob: -7.577927112579346
    8. '#' → logprob: -7.702927112579346
    9. '```' → logprob: -8.452927589416504
    10. ' if' → logprob: -8.577927589416504

Token 830: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0405268631875515
    2. 'if' → logprob: -3.540526866912842
    3. 'n' → logprob: -4.540526866912842
    4. '#' → logprob: -10.665526390075684
    5. 'import' → logprob: -11.290526390075684
    6. 'd' → logprob: -12.165526390075684
    7. 'N' → logprob: -12.665526390075684
    8. 'from' → logprob: -13.415526390075684
    9. 'ndef' → logprob: -13.540526390075684
    10. ' if' → logprob: -13.915526390075684

Token 831: ' Read' (ID: 5405)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08528224378824234
    2. 'if' → logprob: -3.085282325744629
    3. 'n' → logprob: -3.335282325744629
    4. '#' → logprob: -8.460282325744629
    5. 'from' → logprob: -9.460282325744629
    6. 'import' → logprob: -9.585282325744629
    7. 'd' → logprob: -9.960282325744629
    8. 'N' → logprob: -12.335282325744629
    9. 'ndef' → logprob: -12.835282325744629
    10. ' if' → logprob: -12.960282325744629

Token 832: ' the' (ID: 290)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002101606223732233
    2. 'a' → logprob: -7.377101421356201
    3. 't' → logprob: -7.627101421356201
    4. 'N' → logprob: -8.50210189819336
    5. ' n' → logprob: -8.50210189819336
    6. 's' → logprob: -8.62710189819336
    7. 'w' → logprob: -9.62710189819336
    8. 'b' → logprob: -9.62710189819336
    9. 'l' → logprob: -10.12710189819336
    10. 'x' → logprob: -10.25210189819336

Token 833: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.48479393124580383
    2. 'n' → logprob: -0.9847939014434814
    3. 'def' → logprob: -5.2347941398620605
    4. ' number' → logprob: -5.8597941398620605
    5. '#' → logprob: -6.7347941398620605
    6. 'int' → logprob: -7.4847941398620605
    7. 't' → logprob: -8.109793663024902
    8. 'num' → logprob: -8.734793663024902
    9. 'integer' → logprob: -9.859793663024902
    10. 'input' → logprob: -10.359793663024902

Token 834: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.8779394626617432
    2. 'n' → logprob: -1.2529394626617432
    3. '_of' → logprob: -2.002939462661743
    4. ' =' → logprob: -2.502939462661743
    5. '=' → logprob: -2.877939462661743
    6. '=int' → logprob: -4.752939224243164
    7. 's' → logprob: -5.627939224243164
    8. 't' → logprob: -6.377939224243164
    9. '_lines' → logprob: -6.377939224243164
    10. 'line' → logprob: -6.377939224243164

Token 835: ' elements' (ID: 8632)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'test' → logprob: -0.6529331207275391
    2. 'rows' → logprob: -2.277933120727539
    3. 'cases' → logprob: -2.652933120727539
    4. 'lines' → logprob: -2.777933120727539
    5. 't' → logprob: -3.652933120727539
    6. ' test' → logprob: -3.777933120727539
    7. 's' → logprob: -4.027933120727539
    8. 'points' → logprob: -4.027933120727539
    9. 'vertices' → logprob: -4.027933120727539
    10. 'tests' → logprob: -4.152933120727539

Token 836: ' in' (ID: 306)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.018923906609416008
    2. '=' → logprob: -4.143923759460449
    3. ' =' → logprob: -6.018923759460449
    4. '=n' → logprob: -8.39392375946045
    5. '(n' → logprob: -8.76892375946045
    6. '=
' → logprob: -10.64392375946045
    7. 'num' → logprob: -11.76892375946045
    8. '()' → logprob: -11.76892375946045
    9. ' n' → logprob: -11.89392375946045
    10. '_n' → logprob: -12.26892375946045

Token 837: ' the' (ID: 290)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7785578966140747
    2. 'the' → logprob: -1.6535578966140747
    3. 's' → logprob: -1.7785578966140747
    4. 'arr' → logprob: -2.528557777404785
    5. 'a' → logprob: -2.778557777404785
    6. 'array' → logprob: -3.403557777404785
    7. 'lst' → logprob: -6.403557777404785
    8. 't' → logprob: -6.528557777404785
    9. 'an' → logprob: -6.903557777404785
    10. ' the' → logprob: -8.153557777404785

Token 838: ' list' (ID: 1562)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.21317508816719055
    2. 'list' → logprob: -1.8381750583648682
    3. 'input' → logprob: -3.963175058364868
    4. 'sequence' → logprob: -4.463175296783447
    5. ' array' → logprob: -6.588175296783447
    6. ' list' → logprob: -7.838175296783447
    7. 'arr' → logprob: -9.088174819946289
    8. 'lst' → logprob: -9.213174819946289
    9. 's' → logprob: -9.338174819946289
    10. 'data' → logprob: -9.338174819946289

Token 839: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.000672639871481806
    2. 'N' → logprob: -7.875672817230225
    3. '
' → logprob: -8.375672340393066
    4. ' =' → logprob: -10.375672340393066
    5. '=' → logprob: -11.375672340393066
    6. 'num' → logprob: -11.750672340393066
    7. ' n' → logprob: -13.375672340393066
    8. ',' → logprob: -13.500672340393066
    9. '(n' → logprob: -13.500672340393066
    10. '#' → logprob: -13.750672340393066

Token 840: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00039170795935206115
    2. 'N' → logprob: -7.875391483306885
    3. 'num' → logprob: -11.750391960144043
    4. '   ' → logprob: -13.125391960144043
    5. ' n' → logprob: -14.500391960144043
    6. '```' → logprob: -14.625391960144043
    7. '
' → logprob: -15.125391960144043
    8. '_n' → logprob: -15.125391960144043
    9. 'def' → logprob: -16.375391006469727
    10. '#' → logprob: -16.750391006469727

Token 841: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014397531747818
    2. ' =' → logprob: -1.7014397382736206
    3. '=n' → logprob: -11.57643985748291
    4. '=int' → logprob: -11.57643985748291
    5. ',' → logprob: -11.82643985748291
    6. '=input' → logprob: -15.95143985748291
    7. ',n' → logprob: -16.576438903808594
    8. ')' → logprob: -16.701438903808594
    9. '=

' → logprob: -17.451438903808594
    10. 'n' → logprob: -17.701438903808594

Token 842: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.008655699901282787
    2. 'int' → logprob: -4.883655548095703
    3. ' n' → logprob: -6.883655548095703
    4. ' int' → logprob: -10.633655548095703
    5. 's' → logprob: -15.258655548095703
    6. ' ' → logprob: -16.008655548095703
    7. '	n' → logprob: -16.508655548095703
    8. 'i' → logprob: -17.258655548095703
    9. '10' → logprob: -17.383655548095703
    10. '   ' → logprob: -17.758655548095703

Token 843: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019291093340143561
    2. '1' → logprob: -6.25192928314209
    3. '3' → logprob: -14.50192928314209
    4. ' ' → logprob: -17.376928329467773
    5. '()' → logprob: -17.626928329467773
    6. '2' → logprob: -18.126928329467773
    7. '(' → logprob: -18.376928329467773
    8. 'int' → logprob: -18.876928329467773
    9. 'n' → logprob: -19.251928329467773
    10. '```' → logprob: -19.501928329467773

Token 844: '()

' (ID: 5874)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.48541757464408875
    2. 'a' → logprob: -1.6104176044464111
    3. '()' → logprob: -2.610417604446411
    4. '#' → logprob: -3.735417604446411
    5. 'arr' → logprob: -4.110417366027832
    6. ')' → logprob: -4.110417366027832
    7. 's' → logprob: -4.235417366027832
    8. 'list' → logprob: -4.735417366027832
    9. 'l' → logprob: -4.985417366027832
    10. 'x' → logprob: -5.235417366027832

Token 845: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5068762898445129
    2. 'lst' → logprob: -1.5068762302398682
    3. 'arr' → logprob: -1.7568762302398682
    4. '#' → logprob: -6.756876468658447
    5. 'A' → logprob: -6.881876468658447
    6. 'data' → logprob: -7.381876468658447
    7. 'l' → logprob: -7.631876468658447
    8. 'ls' → logprob: -9.631875991821289
    9. 'nums' → logprob: -10.256875991821289
    10. 'numbers' → logprob: -11.131875991821289

Token 846: ' Read' (ID: 5405)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6993465423583984
    2. 'arr' → logprob: -1.1993465423583984
    3. 'lst' → logprob: -1.6993465423583984
    4. 'A' → logprob: -4.824346542358398
    5. '#' → logprob: -5.449346542358398
    6. 'data' → logprob: -6.199346542358398
    7. 'nums' → logprob: -6.324346542358398
    8. 'numbers' → logprob: -6.574346542358398
    9. 'l' → logprob: -7.324346542358398
    10. 'ls' → logprob: -8.324346542358398

Token 847: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5628061294555664
    2. 'lst' → logprob: -1.3128061294555664
    3. 'the' → logprob: -2.4378061294555664
    4. 'arr' → logprob: -2.6878061294555664
    5. 'l' → logprob: -5.687806129455566
    6. 'n' → logprob: -6.437806129455566
    7. 'data' → logprob: -8.937806129455566
    8. 'numbers' → logprob: -8.937806129455566
    9. 's' → logprob: -9.187806129455566
    10. 'L' → logprob: -9.437806129455566

Token 848: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.000889067945536226
    2. 't' → logprob: -7.875889301300049
    3. 'the' → logprob: -8.87588882446289
    4. 's' → logprob: -9.37588882446289
    5. 'a' → logprob: -9.50088882446289
    6. '1' → logprob: -10.37588882446289
    7. '(n' → logprob: -10.62588882446289
    8. 'list' → logprob: -10.87588882446289
    9. '
' → logprob: -10.87588882446289
    10. '```' → logprob: -10.87588882446289

Token 849: ''' (ID: 6)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.2792235612869263
    2. '_list' → logprob: -1.6542235612869263
    3. 'values' → logprob: -2.4042234420776367
    4. 's' → logprob: -2.5292234420776367
    5. 'elements' → logprob: -2.6542234420776367
    6. 'lst' → logprob: -2.6542234420776367
    7. '_values' → logprob: -3.1542234420776367
    8. 'numbers' → logprob: -3.1542234420776367
    9. 'list' → logprob: -3.7792234420776367
    10. '_elements' → logprob: -3.9042234420776367

Token 850: ' integers' (ID: 54912)
  Prédit: 'inte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inte' → logprob: -0.3725503385066986
    2. ' integers' → logprob: -2.2475502490997314
    3. 'numbers' → logprob: -2.7475502490997314
    4. 'elements' → logprob: -2.8725502490997314
    5. 'ints' → logprob: -3.7475502490997314
    6. '()' → logprob: -3.8725502490997314
    7. 'values' → logprob: -4.3725504875183105
    8. 's' → logprob: -5.3725504875183105
    9. 'lines' → logprob: -5.4975504875183105
    10. 'integer' → logprob: -5.7475504875183105

Token 851: ',' (ID: 11)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.34885552525520325
    2. 'a' → logprob: -2.348855495452881
    3. 'list' → logprob: -2.973855495452881
    4. 'arr' → logprob: -3.223855495452881
    5. 'l' → logprob: -3.223855495452881
    6. 's' → logprob: -3.848855495452881
    7. '()' → logprob: -3.973855495452881
    8. ' =' → logprob: -5.223855495452881
    9. '_list' → logprob: -5.348855495452881
    10. 'n' → logprob: -5.348855495452881

Token 852: ' one' (ID: 1001)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.978251576423645
    2. 'lst' → logprob: -0.978251576423645
    3. 'arr' → logprob: -1.478251576423645
    4. 'data' → logprob: -4.7282514572143555
    5. 'A' → logprob: -5.6032514572143555
    6. 'numbers' → logprob: -5.8532514572143555
    7. 'nums' → logprob: -5.9782514572143555
    8. 'l' → logprob: -6.4782514572143555
    9. 'ls' → logprob: -8.228251457214355
    10. 'values' → logprob: -9.603251457214355

Token 853: ' per' (ID: 777)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.32976195216178894
    2. '=' → logprob: -1.4547619819641113
    3. 'for' → logprob: -4.079761981964111
    4. '_per' → logprob: -4.204761981964111
    5. 'at' → logprob: -5.204761981964111
    6. '_list' → logprob: -5.829761981964111
    7. 'each' → logprob: -6.454761981964111
    8. ' =' → logprob: -6.829761981964111
    9. '=n' → logprob: -6.954761981964111
    10. ' per' → logprob: -7.079761981964111

Token 854: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.0280383548888494e-06
    2. ' line' → logprob: -14.125000953674316
    3. 'n' → logprob: -16.375001907348633
    4. 'input' → logprob: -16.375001907348633
    5. '_line' → logprob: -17.500001907348633
    6. '
' → logprob: -17.875001907348633
    7. 'lin' → logprob: -18.375001907348633
    8. '	line' → logprob: -18.500001907348633
    9. '#line' → logprob: -18.750001907348633
    10. 'lines' → logprob: -19.750001907348633

Token 855: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5878585577011108
    2. 'lst' → logprob: -1.0878585577011108
    3. 'numbers' → logprob: -3.0878586769104004
    4. 'arr' → logprob: -3.3378586769104004
    5. 'nums' → logprob: -4.5878586769104
    6. 'data' → logprob: -5.2128586769104
    7. 'values' → logprob: -5.2128586769104
    8. 'l' → logprob: -5.7128586769104
    9. 'A' → logprob: -6.8378586769104
    10. 'li' → logprob: -8.837858200073242

Token 856: ' and' (ID: 326)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.3005824089050293
    2. 'a' → logprob: -2.3005824089050293
    3. 'arr' → logprob: -2.3005824089050293
    4. 'numbers' → logprob: -3.5505824089050293
    5. 'nums' → logprob: -4.050582408905029
    6. 'data' → logprob: -4.425582408905029
    7. 'values' → logprob: -7.800582408905029
    8. 'l' → logprob: -7.925582408905029
    9. 'ls' → logprob: -9.175582885742188
    10. 'A' → logprob: -9.300582885742188

Token 857: ' store' (ID: 4897)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.26521021127700806
    2. 'arr' → logprob: -1.8902101516723633
    3. 'a' → logprob: -3.2652101516723633
    4. 'nums' → logprob: -3.5152101516723633
    5. 'numbers' → logprob: -5.015210151672363
    6. 'l' → logprob: -5.765210151672363
    7. 'data' → logprob: -5.890210151672363
    8. 'values' → logprob: -8.015210151672363
    9. 'ls' → logprob: -8.265210151672363
    10. 'L' → logprob: -8.390210151672363

Token 858: ' them' (ID: 1373)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5106958746910095
    2. 'lst' → logprob: -1.2606959342956543
    3. 'them' → logprob: -3.3856959342956543
    4. 'in' → logprob: -3.5106959342956543
    5. 'arr' → logprob: -3.5106959342956543
    6. 'the' → logprob: -4.760695934295654
    7. 'nums' → logprob: -5.010695934295654
    8. 'A' → logprob: -6.135695934295654
    9. 'numbers' → logprob: -6.135695934295654
    10. 'data' → logprob: -7.010695934295654

Token 859: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.013387739658355713
    2. 'a' → logprob: -5.763387680053711
    3. 'numbers' → logprob: -5.888387680053711
    4. 'lst' → logprob: -6.013387680053711
    5. 'arr' → logprob: -6.138387680053711
    6. 'nums' → logprob: -7.013387680053711
    7. 'as' → logprob: -7.388387680053711
    8. ' in' → logprob: -7.388387680053711
    9. 'values' → logprob: -8.763387680053711
    10. 's' → logprob: -9.013387680053711

Token 860: ' the' (ID: 290)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8734455108642578
    2. 'lst' → logprob: -1.1234455108642578
    3. 'arr' → logprob: -1.3734455108642578
    4. 'nums' → logprob: -5.873445510864258
    5. 'numbers' → logprob: -7.123445510864258
    6. 'l' → logprob: -8.623445510864258
    7. 'data' → logprob: -8.998445510864258
    8. 'ls' → logprob: -9.373445510864258
    9. 'A' → logprob: -9.623445510864258
    10. 'vals' → logprob: -11.873445510864258

Token 861: ' list' (ID: 1562)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.17660555243492126
    2. 'arr' → logprob: -2.176605463027954
    3. 'nums' → logprob: -3.676605463027954
    4. 'a' → logprob: -4.426605701446533
    5. 'numbers' → logprob: -4.551605701446533
    6. 'data' → logprob: -8.426605224609375
    7. 'list' → logprob: -8.426605224609375
    8. 'array' → logprob: -9.801605224609375
    9. 'l' → logprob: -9.801605224609375
    10. 'ls' → logprob: -10.051605224609375

Token 862: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.13301436603069305
    2. 'lst' → logprob: -2.508014440536499
    3. 'numbers' → logprob: -4.00801420211792
    4. 'arr' → logprob: -4.13301420211792
    5. 'nums' → logprob: -5.63301420211792
    6. 'data' → logprob: -5.75801420211792
    7. 'A' → logprob: -6.75801420211792
    8. 'values' → logprob: -7.25801420211792
    9. 'l' → logprob: -9.008014678955078
    10. 'li' → logprob: -10.258014678955078

Token 863: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5259197950363159
    2. 'lst' → logprob: -1.275919795036316
    3. 'arr' → logprob: -2.4009199142456055
    4. 'nums' → logprob: -4.2759199142456055
    5. 'numbers' → logprob: -4.2759199142456055
    6. 'data' → logprob: -4.9009199142456055
    7. 'A' → logprob: -6.1509199142456055
    8. 'l' → logprob: -7.4009199142456055
    9. 'ls' → logprob: -7.9009199142456055
    10. 'values' → logprob: -8.150919914245605

Token 864: ''.
' (ID: 49980)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6035255789756775
    2. '=' → logprob: -0.8535255789756775
    3. 'a' → logprob: -4.353525638580322
    4. ')' → logprob: -4.478525638580322
    5. '=a' → logprob: -7.353525638580322
    6. 'n' → logprob: -7.603525638580322
    7. ']' → logprob: -7.853525638580322
    8. '=n' → logprob: -7.978525638580322
    9. '()' → logprob: -8.353525161743164
    10. 's' → logprob: -8.603525161743164

Token 865: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: 0.0
    2. ' a' → logprob: -23.5
    3. '	a' → logprob: -25.125
    4. 'а' → logprob: -26.0
    5. '_a' → logprob: -27.625
    6. '#a' → logprob: -27.875
    7. 'arr' → logprob: -27.875
    8. '#' → logprob: -28.0
    9. '   ' → logprob: -28.0
    10. '```' → logprob: -28.0

Token 866: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804183006286621
    2. ' =' → logprob: -3.288041830062866
    3. '=a' → logprob: -15.538042068481445
    4. '=
' → logprob: -16.288042068481445
    5. '=n' → logprob: -16.788042068481445
    6. ' =
' → logprob: -18.163042068481445
    7. '＝' → logprob: -18.163042068481445
    8. '=

' → logprob: -18.538042068481445
    9. ',' → logprob: -19.413042068481445
    10. '=[]' → logprob: -19.538042068481445

Token 867: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1472419600977446e-06
    2. ' n' → logprob: -13.750000953674316
    3. '	n' → logprob: -18.375001907348633
    4. '[n' → logprob: -19.000001907348633
    5. '[' → logprob: -20.875001907348633
    6. '   ' → logprob: -21.000001907348633
    7. '```' → logprob: -21.000001907348633
    8. '(n' → logprob: -22.000001907348633
    9. 'n't' → logprob: -22.000001907348633
    10. 's' → logprob: -22.250001907348633

Token 868: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5074366927146912
    2. '(n' → logprob: -1.007436752319336
    3. '3' → logprob: -3.507436752319336
    4. 'n' → logprob: -5.882436752319336
    5. '(' → logprob: -10.007436752319336
    6. ' (' → logprob: -14.257436752319336
    7. '```' → logprob: -14.257436752319336
    8. 'd' → logprob: -14.882436752319336
    9. '1' → logprob: -15.507436752319336
    10. 'a' → logprob: -15.757436752319336

Token 869: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.36574100604048e-06
    2. '(' → logprob: -12.375004768371582
    3. 'n' → logprob: -16.500003814697266
    4. '(
' → logprob: -17.000003814697266
    5. ' (' → logprob: -18.250003814697266
    6. 'a' → logprob: -20.000003814697266
    7. '(a' → logprob: -21.000003814697266
    8. ')n' → logprob: -21.125003814697266
    9. '((' → logprob: -21.375003814697266
    10. ' n' → logprob: -21.500003814697266

Token 870: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03867177665233612
    2. '())' → logprob: -3.4136717319488525
    3. '()' → logprob: -5.538671970367432
    4. '(n' → logprob: -6.913671970367432
    5. '(' → logprob: -9.913671493530273
    6. ')n' → logprob: -11.163671493530273
    7. ')
' → logprob: -11.788671493530273
    8. ')`' → logprob: -12.663671493530273
    9. 'n' → logprob: -13.038671493530273
    10. '#' → logprob: -13.288671493530273

Token 871: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6480412483215332
    2. 'a' → logprob: -1.2730412483215332
    3. 's' → logprob: -2.898041248321533
    4. 'total' → logprob: -3.648041248321533
    5. 'sum' → logprob: -4.148041248321533
    6. 'from' → logprob: -4.148041248321533
    7. 'count' → logprob: -4.273041248321533
    8. 'cnt' → logprob: -4.273041248321533
    9. 'm' → logprob: -4.398041248321533
    10. 'b' → logprob: -5.023041248321533

Token 872: ' Create' (ID: 6585)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5746977925300598
    2. '#' → logprob: -1.699697732925415
    3. 's' → logprob: -2.574697732925415
    4. 'total' → logprob: -3.074697732925415
    5. 'from' → logprob: -3.324697732925415
    6. 'print' → logprob: -3.949697732925415
    7. 'count' → logprob: -3.949697732925415
    8. 'cnt' → logprob: -4.074697971343994
    9. 'ans' → logprob: -5.199697971343994
    10. 'sum' → logprob: -5.324697971343994

Token 873: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1749071180820465
    2. 'b' → logprob: -2.1749072074890137
    3. 's' → logprob: -3.7999072074890137
    4. 'ans' → logprob: -4.299907207489014
    5. 'c' → logprob: -5.549907207489014
    6. 'sorted' → logprob: -6.424907207489014
    7. 'counter' → logprob: -6.799907207489014
    8. 'dp' → logprob: -6.924907207489014
    9. 'cnt' → logprob: -7.299907207489014
    10. 'freq' → logprob: -7.424907207489014

Token 874: ' sorted' (ID: 20099)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counter' → logprob: -1.4296519756317139
    2. 'from' → logprob: -1.6796519756317139
    3. 'b' → logprob: -1.9296519756317139
    4. 'Counter' → logprob: -2.054651975631714
    5. 'set' → logprob: -2.679651975631714
    6. 'sorted' → logprob: -2.679651975631714
    7. 'dp' → logprob: -3.304651975631714
    8. 's' → logprob: -3.804651975631714
    9. 'freq' → logprob: -3.929651975631714
    10. 'c' → logprob: -4.304652214050293

Token 875: ' copy' (ID: 5150)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.3170498311519623
    2. 'a' → logprob: -1.3170498609542847
    3. 'list' → logprob: -6.692049980163574
    4. 'copy' → logprob: -7.192049980163574
    5. '_list' → logprob: -7.317049980163574
    6. 'version' → logprob: -7.442049980163574
    7. 'A' → logprob: -8.817049980163574
    8. '_version' → logprob: -9.442049980163574
    9. '_' → logprob: -9.692049980163574
    10. '_copy' → logprob: -9.942049980163574

Token 876: ' of' (ID: 328)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3144949674606323
    2. '_a' → logprob: -1.3144949674606323
    3. ' =' → logprob: -7.814495086669922
    4. 'of' → logprob: -8.064495086669922
    5. '=' → logprob: -8.189495086669922
    6. '(a' → logprob: -9.814495086669922
    7. '_' → logprob: -10.064495086669922
    8. ' of' → logprob: -10.189495086669922
    9. 's' → logprob: -10.564495086669922
    10. '(' → logprob: -11.064495086669922

Token 877: ' list' (ID: 1562)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.016249725595116615
    2. 'the' → logprob: -4.141249656677246
    3. '(a' → logprob: -8.891249656677246
    4. ' the' → logprob: -9.766249656677246
    5. ' a' → logprob: -10.891249656677246
    6. '```' → logprob: -14.391249656677246
    7. '`' → logprob: -14.516249656677246
    8. '(' → logprob: -15.016249656677246
    9. '	a' → logprob: -16.516250610351562
    10. ''a' → logprob: -16.766250610351562

Token 878: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.011632206849753857
    2. '_a' → logprob: -4.511632442474365
    3. '(a' → logprob: -7.511632442474365
    4. 'of' → logprob: -10.886631965637207
    5. ' a' → logprob: -12.511631965637207
    6. '=' → logprob: -12.511631965637207
    7. '```' → logprob: -13.011631965637207
    8. '(' → logprob: -13.011631965637207
    9. ' =' → logprob: -13.261631965637207
    10. '=a' → logprob: -13.636631965637207

Token 879: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.534558552724775e-05
    2. ' a' → logprob: -10.625025749206543
    3. '(a' → logprob: -14.125025749206543
    4. '_a' → logprob: -16.500024795532227
    5. '   ' → logprob: -16.875024795532227
    6. ''a' → logprob: -17.125024795532227
    7. '	a' → logprob: -17.625024795532227
    8. '`' → logprob: -17.750024795532227
    9. 'а' → logprob: -17.750024795532227
    10. 'the' → logprob: -18.000024795532227

Token 880: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.172493577003479
    2. ' =' → logprob: -2.1724934577941895
    3. '=' → logprob: -4.0474934577941895
    4. '_a' → logprob: -5.0474934577941895
    5. '(a' → logprob: -5.0474934577941895
    6. '()' → logprob: -5.2974934577941895
    7. 'sorted' → logprob: -6.1724934577941895
    8. '()
' → logprob: -6.2974934577941895
    9. '=a' → logprob: -6.4224934577941895
    10. ')' → logprob: -6.5474934577941895

Token 881: ' in' (ID: 306)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.32932141423225403
    2. '=' → logprob: -1.3293213844299316
    3. ' =' → logprob: -4.579321384429932
    4. '_a' → logprob: -5.579321384429932
    5. 'sorted' → logprob: -6.954321384429932
    6. 's' → logprob: -7.829321384429932
    7. '=a' → logprob: -7.954321384429932
    8. '_sorted' → logprob: -10.07932186126709
    9. 'b' → logprob: -10.20432186126709
    10. '(sorted' → logprob: -10.32932186126709

Token 882: ' ascending' (ID: 75564)
  Prédit: 'descending'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'descending' → logprob: -0.030160725116729736
    2. 'reverse' → logprob: -3.780160665512085
    3. 'a' → logprob: -5.655160903930664
    4. 'ascending' → logprob: -5.780160903930664
    5. 'sorted' → logprob: -8.530160903930664
    6. 're' → logprob: -10.155160903930664
    7. 'desc' → logprob: -10.280160903930664
    8. ' descending' → logprob: -11.155160903930664
    9. 'de' → logprob: -11.905160903930664
    10. 'asc' → logprob: -12.530160903930664

Token 883: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.0162336565554142
    2. 'a' → logprob: -4.266233444213867
    3. ' order' → logprob: -6.516233444213867
    4. '_a' → logprob: -7.891233444213867
    5. '_order' → logprob: -8.516233444213867
    6. '()' → logprob: -11.766233444213867
    7. '(a' → logprob: -13.016233444213867
    8. '(order' → logprob: -13.891233444213867
    9. ' a' → logprob: -14.016233444213867
    10. '_' → logprob: -14.266233444213867

Token 884: '.
' (ID: 558)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.007837054319679737
    2. '=' → logprob: -6.007836818695068
    3. 'sorted' → logprob: -6.257836818695068
    4. '_a' → logprob: -6.507836818695068
    5. ' =' → logprob: -7.007836818695068
    6. 's' → logprob: -7.507836818695068
    7. 'b' → logprob: -8.007837295532227
    8. '=a' → logprob: -10.382837295532227
    9. '(sorted' → logprob: -10.382837295532227
    10. ',' → logprob: -11.132837295532227

Token 885: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5094029903411865
    2. 'sorted' → logprob: -1.1344029903411865
    3. 'a' → logprob: -3.1344029903411865
    4. 's' → logprob: -3.8844029903411865
    5. 'asc' → logprob: -5.259403228759766
    6. 'sa' → logprob: -5.884403228759766
    7. 'as' → logprob: -6.384403228759766
    8. 'aa' → logprob: -7.259403228759766
    9. 't' → logprob: -7.759403228759766
    10. 'c' → logprob: -8.009403228759766

Token 886: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193750858306885
    2. ' =' → logprob: -1.5019375085830688
    3. '=b' → logprob: -11.751937866210938
    4. '=a' → logprob: -14.876937866210938
    5. '＝' → logprob: -16.501937866210938
    6. 'b' → logprob: -16.751937866210938
    7. '=
' → logprob: -17.251937866210938
    8. 'a' → logprob: -17.376937866210938
    9. ' ' → logprob: -17.751937866210938
    10. ',' → logprob: -18.251937866210938

Token 887: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -9.849109119386412e-06
    2. ' sorted' → logprob: -11.750009536743164
    3. 'a' → logprob: -13.250009536743164
    4. 's' → logprob: -16.375009536743164
    5. '(sorted' → logprob: -17.750009536743164
    6. 'sort' → logprob: -18.250009536743164
    7. '   ' → logprob: -19.875009536743164
    8. '
' → logprob: -20.000009536743164
    9. '.sorted' → logprob: -20.500009536743164
    10. 'Sorted' → logprob: -21.375009536743164

Token 888: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.8624639324116288e-06
    2. 'a' → logprob: -13.250001907348633
    3. '(' → logprob: -18.250001907348633
    4. '(
' → logprob: -21.500001907348633
    5. '(b' → logprob: -22.875001907348633
    6. '[a' → logprob: -23.750001907348633
    7. '((' → logprob: -24.125001907348633
    8. '(A' → logprob: -24.250001907348633
    9. '(x' → logprob: -24.500001907348633
    10. '(list' → logprob: -24.750001907348633

Token 889: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008171311928890646
    2. '())' → logprob: -7.12581729888916
    3. '()' → logprob: -12.00081729888916
    4. '))' → logprob: -13.00081729888916
    5. ' )' → logprob: -13.62581729888916
    6. ')`' → logprob: -14.00081729888916
    7. '(' → logprob: -14.37581729888916
    8. ')
' → logprob: -14.37581729888916
    9. ')a' → logprob: -14.75081729888916
    10. 'a' → logprob: -15.75081729888916

Token 890: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6022566556930542
    2. 'c' → logprob: -1.7272566556930542
    3. 'm' → logprob: -2.4772567749023438
    4. 'for' → logprob: -2.7272567749023438
    5. 'median' → logprob: -4.102256774902344
    6. 'idx' → logprob: -4.227256774902344
    7. 'max' → logprob: -4.352256774902344
    8. 'k' → logprob: -4.477256774902344
    9. 'cnt' → logprob: -4.602256774902344
    10. 'diff' → logprob: -5.102256774902344

Token 891: ' The' (ID: 623)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.417590618133545
    2. 'c' → logprob: -1.792590618133545
    3. 'mid' → logprob: -2.167590618133545
    4. 'median' → logprob: -2.167590618133545
    5. '#' → logprob: -2.417590618133545
    6. 'for' → logprob: -2.792590618133545
    7. 'max' → logprob: -3.042590618133545
    8. 'if' → logprob: -3.542590618133545
    9. 'med' → logprob: -3.667590618133545
    10. 'ans' → logprob: -3.917590618133545

Token 892: ' largest' (ID: 10574)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.37253114581108093
    2. 'm' → logprob: -2.6225311756134033
    3. 'c' → logprob: -2.7475311756134033
    4. 'max' → logprob: -3.4975311756134033
    5. 'median' → logprob: -3.8725311756134033
    6. 'idx' → logprob: -4.122530937194824
    7. 'mid' → logprob: -4.247530937194824
    8. 'k' → logprob: -4.622530937194824
    9. 'ans' → logprob: -4.622530937194824
    10. 'index' → logprob: -5.122530937194824

Token 893: ' value' (ID: 1432)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.5402991771697998
    2. 'value' → logprob: -1.6652991771697998
    3. '=' → logprob: -2.4152991771698
    4. 'number' → logprob: -2.6652991771698
    5. '_' → logprob: -3.9152991771698
    6. ' element' → logprob: -4.040299415588379
    7. ' =' → logprob: -4.790299415588379
    8. '_value' → logprob: -5.290299415588379
    9. '_element' → logprob: -5.540299415588379
    10. ' value' → logprob: -5.790299415588379

Token 894: ' in' (ID: 306)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0949331670999527
    2. ' =' → logprob: -2.469933271408081
    3. 'in' → logprob: -6.344933032989502
    4. 'b' → logprob: -6.594933032989502
    5. '=max' → logprob: -7.094933032989502
    6. '#' → logprob: -7.344933032989502
    7. 'is' → logprob: -7.469933032989502
    8. 'max' → logprob: -8.46993350982666
    9. 'of' → logprob: -8.71993350982666
    10. 'a' → logprob: -9.21993350982666

Token 895: ' the' (ID: 290)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01841377094388008
    2. 'a' → logprob: -4.268413543701172
    3. 'the' → logprob: -5.518413543701172
    4. ' b' → logprob: -8.893413543701172
    5. ' the' → logprob: -9.518413543701172
    6. 'list' → logprob: -11.768413543701172
    7. ' a' → logprob: -12.518413543701172
    8. '`' → logprob: -13.268413543701172
    9. '#' → logprob: -13.393413543701172
    10. ''b' → logprob: -13.893413543701172

Token 896: ' list' (ID: 1562)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06269559264183044
    2. 'a' → logprob: -2.8126955032348633
    3. ' b' → logprob: -7.937695503234863
    4. 'list' → logprob: -8.312695503234863
    5. ' a' → logprob: -9.562695503234863
    6. ' list' → logprob: -10.687695503234863
    7. 'sorted' → logprob: -10.687695503234863
    8. ' sorted' → logprob: -12.812695503234863
    9. 'array' → logprob: -13.187695503234863
    10. 'original' → logprob: -14.062695503234863

Token 897: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6807165741920471
    2. 'b' → logprob: -1.6807165145874023
    3. '=' → logprob: -2.3057165145874023
    4. '#' → logprob: -2.3057165145874023
    5. ' is' → logprob: -3.0557165145874023
    6. 'is' → logprob: -3.0557165145874023
    7. 'a' → logprob: -4.805716514587402
    8. 'max' → logprob: -6.305716514587402
    9. ',' → logprob: -6.555716514587402
    10. 'c' → logprob: -7.430716514587402

Token 898: 'm' (ID: 76)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.10065130889415741
    2. 'mx' → logprob: -3.100651264190674
    3. 'ma' → logprob: -3.350651264190674
    4. 'largest' → logprob: -4.475651264190674
    5. 'm' → logprob: -6.600651264190674
    6. 'x' → logprob: -7.350651264190674
    7. 'big' → logprob: -7.850651264190674
    8. 'top' → logprob: -7.850651264190674
    9. 'maximum' → logprob: -7.975651264190674
    10. 'v' → logprob: -8.725651741027832

Token 899: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759717226028442
    2. ' =' → logprob: -0.8259717226028442
    3. 'ax' → logprob: -11.325971603393555
    4. 'a' → logprob: -11.700971603393555
    5. '=max' → logprob: -12.575971603393555
    6. '_' → logprob: -12.825971603393555
    7. '=a' → logprob: -13.075971603393555
    8. ',' → logprob: -14.200971603393555
    9. '=m' → logprob: -14.325971603393555
    10. '=ax' → logprob: -15.075971603393555

Token 900: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759429931640625
    2. ' =' → logprob: -0.8259429931640625
    3. ',' → logprob: -13.325942993164062
    4. '=max' → logprob: -14.450942993164062
    5. '_' → logprob: -14.575942993164062
    6. '=m' → logprob: -15.075942993164062
    7. '＝' → logprob: -16.450942993164062
    8. '=int' → logprob: -16.700942993164062
    9. ' ' → logprob: -16.950942993164062
    10. ')' → logprob: -16.950942993164062

Token 901: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0010329303331673145
    2. ' b' → logprob: -6.876032829284668
    3. '   ' → logprob: -16.126033782958984
    4. 'max' → logprob: -16.876033782958984
    5. 'a' → logprob: -17.126033782958984
    6. '	b' → logprob: -17.876033782958984
    7. ' ' → logprob: -18.876033782958984
    8. ' ' → logprob: -19.126033782958984
    9. ' max' → logprob: -19.376033782958984
    10. '
' → logprob: -19.876033782958984

Token 902: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.3856492842023727e-06
    2. '[n' → logprob: -14.000000953674316
    3. '-' → logprob: -15.125000953674316
    4. '   ' → logprob: -16.125001907348633
    5. '[' → logprob: -16.875001907348633
    6. 'n' → logprob: -17.500001907348633
    7. '[len' → logprob: -17.875001907348633
    8. '
' → logprob: -19.500001907348633
    9. ' [-' → logprob: -19.875001907348633
    10. '[:-' → logprob: -20.125001907348633

Token 903: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013260759878903627
    2. '2' → logprob: -6.626326084136963
    3. '3' → logprob: -17.001325607299805
    4. ' ' → logprob: -17.126325607299805
    5. '１' → logprob: -17.626325607299805
    6. '0' → logprob: -18.001325607299805
    7. '```' → logprob: -18.063825607299805
    8. '   ' → logprob: -18.126325607299805
    9. '-' → logprob: -19.126325607299805
    10. '`' → logprob: -19.813825607299805

Token 904: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00011248346709180623
    2. ']
' → logprob: -9.250112533569336
    3. ']

' → logprob: -11.375112533569336
    4. ' ]' → logprob: -12.750112533569336
    5. ')' → logprob: -13.375112533569336
    6. ']
' → logprob: -16.500112533569336
    7. ')]' → logprob: -17.625112533569336
    8. '#' → logprob: -17.625112533569336
    9. '}' → logprob: -17.750112533569336
    10. ']


' → logprob: -17.875112533569336

Token 905: '#' (ID: 2)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0032006469555199146
    2. '#' → logprob: -5.753200531005859
    3. '
' → logprob: -11.50320053100586
    4. 'if' → logprob: -12.50320053100586
    5. '#m' → logprob: -12.75320053100586
    6. '#
' → logprob: -13.25320053100586
    7. ' m' → logprob: -13.87820053100586
    8. 's' → logprob: -14.00320053100586
    9. '
' → logprob: -14.62820053100586
    10. '  
' → logprob: -15.00320053100586

Token 906: ' The' (ID: 623)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.03941170871257782
    2. '#' → logprob: -3.289411783218384
    3. 'if' → logprob: -7.164411544799805
    4. 'try' → logprob: -7.539411544799805
    5. '#m' → logprob: -10.039411544799805
    6. 'second' → logprob: -11.789411544799805
    7. 'b' → logprob: -12.164411544799805
    8. 'c' → logprob: -13.914411544799805
    9. 'filtered' → logprob: -14.289411544799805
    10. 'for' → logprob: -14.289411544799805

Token 907: ' second' (ID: 3099)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.005578198470175266
    2. 'second' → logprob: -5.88057804107666
    3. '#' → logprob: -6.00557804107666
    4. 's' → logprob: -8.38057804107666
    5. 'sec' → logprob: -10.75557804107666
    6. '#m' → logprob: -10.88057804107666
    7. ' m' → logprob: -11.25557804107666
    8. ' second' → logprob: -11.88057804107666
    9. '2' → logprob: -12.50557804107666
    10. 'se' → logprob: -13.13057804107666

Token 908: ' largest' (ID: 10574)
  Prédit: 'largest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'largest' → logprob: -0.03741125017404556
    2. 'm' → logprob: -3.4124112129211426
    3. ' largest' → logprob: -6.037411212921143
    4. '-' → logprob: -7.912411212921143
    5. 'max' → logprob: -8.2874116897583
    6. '-largest' → logprob: -8.2874116897583
    7. 'to' → logprob: -9.0374116897583
    8. 'last' → logprob: -9.5374116897583
    9. ' ' → logprob: -9.6624116897583
    10. ' m' → logprob: -9.7874116897583

Token 909: ' value' (ID: 1432)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.46232736110687256
    2. '<|end|>' → logprob: -1.7123273611068726
    3. 'value' → logprob: -2.337327480316162
    4. ' =' → logprob: -2.712327480316162
    5. '=' → logprob: -4.087327480316162
    6. ' value' → logprob: -5.837327480316162
    7. ' m' → logprob: -5.837327480316162
    8. '_' → logprob: -7.212327480316162
    9. 'token' → logprob: -7.462327480316162
    10. '<|end|>' → logprob: -7.837327480316162

Token 910: ' in' (ID: 306)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15870670974254608
    2. ' =' → logprob: -2.0337066650390625
    3. 'm' → logprob: -4.1587066650390625
    4. '=m' → logprob: -9.033706665039062
    5. '=
' → logprob: -10.158706665039062
    6. '.' → logprob: -10.158706665039062
    7. 's' → logprob: -10.658706665039062
    8. ' m' → logprob: -11.283706665039062
    9. '
' → logprob: -11.408706665039062
    10. ',' → logprob: -12.033706665039062

Token 911: ' the' (ID: 290)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0022180574014782906
    2. ' b' → logprob: -6.127218246459961
    3. '
' → logprob: -11.627218246459961
    4. '-' → logprob: -11.877218246459961
    5. 'the' → logprob: -12.377218246459961
    6. '`' → logprob: -12.627218246459961
    7. 'm' → logprob: -12.877218246459961
    8. '```' → logprob: -13.502218246459961
    9. '[-' → logprob: -13.752218246459961
    10. ' the' → logprob: -13.877218246459961

Token 912: ' list' (ID: 1562)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0005418312503024936
    2. '[-' → logprob: -8.250541687011719
    3. '-' → logprob: -9.250541687011719
    4. 'sorted' → logprob: -9.250541687011719
    5. '-b' → logprob: -10.000541687011719
    6. ' b' → logprob: -10.250541687011719
    7. 'list' → logprob: -13.125541687011719
    8. '
' → logprob: -13.750541687011719
    9. '[:-' → logprob: -13.750541687011719
    10. '[' → logprob: -14.375541687011719

Token 913: '.
' (ID: 558)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0011075903894379735
    2. ' =' → logprob: -7.376107692718506
    3. 'if' → logprob: -8.751107215881348
    4. '=' → logprob: -8.751107215881348
    5. '
' → logprob: -8.876107215881348
    6. ' if' → logprob: -11.876107215881348
    7. '.
' → logprob: -12.626107215881348
    8. ' m' → logprob: -12.876107215881348
    9. '=m' → logprob: -12.876107215881348
    10. ':' → logprob: -13.126107215881348

Token 914: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: 0.0
    2. '
' → logprob: -18.875
    3. ' m' → logprob: -18.875
    4. 'if' → logprob: -19.125
    5. '#' → logprob: -19.75
    6. '```' → logprob: -20.875
    7. '	m' → logprob: -21.625
    8. 'b' → logprob: -21.75
    9. '   ' → logprob: -21.75
    10. '[m' → logprob: -21.75

Token 915: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004013561410829425
    2. '_' → logprob: -8.125401496887207
    3. '=' → logprob: -9.500401496887207
    4. '1' → logprob: -11.125401496887207
    5. ' =' → logprob: -12.000401496887207
    6. '-' → logprob: -12.750401496887207
    7. '
' → logprob: -13.125401496887207
    8. 'x' → logprob: -13.375401496887207
    9. 'ex' → logprob: -14.250401496887207
    10. 'm' → logprob: -15.125401496887207

Token 916: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519296407699585
    2. '=' → logprob: -1.5019296407699585
    3. '=b' → logprob: -14.62692928314209
    4. ',' → logprob: -17.126930236816406
    5. ' ' → logprob: -17.501930236816406
    6. ' =
' → logprob: -18.751930236816406
    7. '=m' → logprob: -18.751930236816406
    8. '＝' → logprob: -18.876930236816406
    9. '=
' → logprob: -19.376930236816406
    10. '=

' → logprob: -20.251930236816406

Token 917: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0019289902411401272
    2. ' b' → logprob: -6.251928806304932
    3. 'next' → logprob: -16.251928329467773
    4. '   ' → logprob: -16.501928329467773
    5. ' next' → logprob: -16.876928329467773
    6. '[b' → logprob: -17.626928329467773
    7. '	b' → logprob: -17.751928329467773
    8. '
' → logprob: -18.126928329467773
    9. ' ' → logprob: -19.001928329467773
    10. 'max' → logprob: -20.001928329467773

Token 918: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -2.7014437364414334e-05
    2. '-' → logprob: -10.62502670288086
    3. '   ' → logprob: -13.75002670288086
    4. '
' → logprob: -14.12502670288086
    5. '[:-' → logprob: -14.62502670288086
    6. '```' → logprob: -15.62502670288086
    7. '[' → logprob: -16.50002670288086
    8. '[len' → logprob: -17.00002670288086
    9. ' [-' → logprob: -17.62502670288086
    10. '	' → logprob: -17.75002670288086

Token 919: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. '1' → logprob: -13.750000953674316
    3. '-' → logprob: -16.500001907348633
    4. '```' → logprob: -17.000001907348633
    5. '3' → logprob: -18.625001907348633
    6. '２' → logprob: -19.625001907348633
    7. '``' → logprob: -19.875001907348633
    8. 'len' → logprob: -20.062501907348633
    9. '0' → logprob: -20.375001907348633
    10. ' ' → logprob: -20.437501907348633

Token 920: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001444045570679009
    2. ']' → logprob: -7.126443862915039
    3. 'if' → logprob: -7.626443862915039
    4. ' if' → logprob: -9.626443862915039
    5. '<|end|>' → logprob: -10.626443862915039
    6. '#' → logprob: -11.126443862915039
    7. '```' → logprob: -11.626443862915039
    8. ')

' → logprob: -11.626443862915039
    9. '
' → logprob: -12.001443862915039
    10. '()' → logprob: -12.126443862915039

Token 921: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00030412263004109263
    2. 'import' → logprob: -10.000304222106934
    3. 'ans' → logprob: -10.250304222106934
    4. 'c' → logprob: -10.375304222106934
    5. 'max' → logprob: -10.500304222106934
    6. 'm' → logprob: -10.750304222106934
    7. 'from' → logprob: -10.875304222106934
    8. 'count' → logprob: -11.125304222106934
    9. 'a' → logprob: -11.250304222106934
    10. 'index' → logprob: -11.625304222106934

Token 922: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00046141279744915664
    2. '#' → logprob: -9.00046157836914
    3. 'from' → logprob: -9.37546157836914
    4. 'max' → logprob: -9.62546157836914
    5. 'count' → logprob: -9.87546157836914
    6. 'import' → logprob: -11.12546157836914
    7. 'cnt' → logprob: -11.25046157836914
    8. 'ans' → logprob: -11.37546157836914
    9. 'c' → logprob: -11.37546157836914
    10. 'm' → logprob: -11.62546157836914

Token 923: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5953148603439331
    2. 'x' → logprob: -1.470314860343933
    3. 'ai' → logprob: -1.595314860343933
    4. 'value' → logprob: -5.220314979553223
    5. 'v' → logprob: -5.345314979553223
    6. 'num' → logprob: -5.470314979553223
    7. 'val' → logprob: -7.095314979553223
    8. 'a' → logprob: -7.595314979553223
    9. '_ai' → logprob: -9.845314979553223
    10. '_' → logprob: -9.970314979553223

Token 924: ' element' (ID: 3577)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2535080015659332
    2. 'ai' → logprob: -2.0035080909729004
    3. 'i' → logprob: -3.2535080909729004
    4. 'value' → logprob: -3.7535080909729004
    5. 'v' → logprob: -4.6285080909729
    6. ' x' → logprob: -4.7535080909729
    7. 'a' → logprob: -5.6285080909729
    8. 'val' → logprob: -6.6285080909729
    9. ' ai' → logprob: -6.6285080909729
    10. ' i' → logprob: -7.1285080909729

Token 925: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6934199333190918
    2. ' in' → logprob: -0.6934199333190918
    3. 'i' → logprob: -8.69342041015625
    4. 'a' → logprob: -9.56842041015625
    5. ' i' → logprob: -11.44342041015625
    6. ' a' → logprob: -11.94342041015625
    7. 'for' → logprob: -12.19342041015625
    8. 'ai' → logprob: -12.56842041015625
    9. 'x' → logprob: -12.94342041015625
    10. ',' → logprob: -13.56842041015625

Token 926: ' the' (ID: 290)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.128163257315464e-07
    2. ' a' → logprob: -15.375
    3. 'range' → logprob: -17.75
    4. '   ' → logprob: -20.75
    5. '	a' → logprob: -21.5
    6. '(a' → logprob: -22.0
    7. 'а' → logprob: -22.0
    8. '
' → logprob: -22.125
    9. 'the' → logprob: -22.375
    10. '_a' → logprob: -22.375

Token 927: ' original' (ID: 4756)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.9361264946837764e-07
    2. ' a' → logprob: -16.25
    3. '   ' → logprob: -20.625
    4. 'а' → logprob: -21.625
    5. '
' → logprob: -21.75
    6. '`' → logprob: -22.375
    7. '	a' → logprob: -23.0
    8. 'range' → logprob: -23.25
    9. '_a' → logprob: -23.625
    10. '[a' → logprob: -23.625

Token 928: ' list' (ID: 1562)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0280383548888494e-06
    2. ' a' → logprob: -13.875000953674316
    3. 'range' → logprob: -21.125001907348633
    4. '   ' → logprob: -21.500001907348633
    5. '	a' → logprob: -22.625001907348633
    6. '
' → logprob: -22.625001907348633
    7. '_a' → logprob: -22.750001907348633
    8. 'for' → logprob: -23.250001907348633
    9. '`' → logprob: -23.250001907348633
    10. 'а' → logprob: -23.375001907348633

Token 929: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0722079947590828
    2. ':
' → logprob: -2.9472079277038574
    3. ':' → logprob: -4.072207927703857
    4. ' a' → logprob: -10.572208404541016
    5. 'in' → logprob: -10.572208404541016
    6. '(a' → logprob: -10.822208404541016
    7. 'for' → logprob: -10.822208404541016
    8. ',' → logprob: -11.072208404541016
    9. ':a' → logprob: -11.072208404541016
    10. '   ' → logprob: -11.822208404541016

Token 930: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.546478935983032e-05
    2. ' for' → logprob: -10.625025749206543
    3. 'print' → logprob: -13.875025749206543
    4. '   ' → logprob: -17.000024795532227
    5. 'if' → logprob: -17.625024795532227
    6. '```' → logprob: -18.000024795532227
    7. '	for' → logprob: -19.500024795532227
    8. '
' → logprob: -19.875024795532227
    9. 'import' → logprob: -20.000024795532227
    10. '[' → logprob: -20.875024795532227

Token 931: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.003500884398818016
    2. '(m' → logprob: -5.878500938415527
    3. 'p' → logprob: -8.378500938415527
    4. ' m' → logprob: -8.503500938415527
    5. 'f' → logprob: -9.628500938415527
    6. '   ' → logprob: -9.628500938415527
    7. '
' → logprob: -10.003500938415527
    8. '(
' → logprob: -11.128500938415527
    9. '(' → logprob: -11.378500938415527
    10. '(p' → logprob: -11.378500938415527

Token 932: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02989616058766842
    2. '2' → logprob: -3.5298962593078613
    3. 'ax' → logprob: -8.904895782470703
    4. 'x' → logprob: -11.904895782470703
    5. 'm' → logprob: -13.154895782470703
    6. '```' → logprob: -15.779895782470703
    7. 'r' → logprob: -15.904895782470703
    8. 'a' → logprob: -15.904895782470703
    9. '
' → logprob: -16.154895782470703
    10. '"' → logprob: -16.592395782470703

Token 933: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.225497767329216
    2. ' if' → logprob: -1.6004977226257324
    3. '   ' → logprob: -11.22549819946289
    4. '()' → logprob: -11.47549819946289
    5. '	if' → logprob: -11.72549819946289
    6. '1' → logprob: -11.85049819946289
    7. '  ' → logprob: -11.97549819946289
    8. '
' → logprob: -12.22549819946289
    9. ' ' → logprob: -12.35049819946289
    10. ',' → logprob: -12.47549819946289

Token 934: ' it' (ID: 480)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.390309602022171
    2. 'a' → logprob: -1.2653095722198486
    3. '_' → logprob: -3.2653095722198486
    4. 'm' → logprob: -6.515309810638428
    5. 'ai' → logprob: -7.015309810638428
    6. '_a' → logprob: -8.76530933380127
    7. 'el' → logprob: -9.64030933380127
    8. ' x' → logprob: -10.39030933380127
    9. '_=' → logprob: -10.64030933380127
    10. '_x' → logprob: -10.76530933380127

Token 935: ' is' (ID: 382)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2286985069513321
    2. ' ==' → logprob: -1.603698492050171
    3. 'x' → logprob: -6.97869873046875
    4. '!=' → logprob: -7.10369873046875
    5. ' !=' → logprob: -7.60369873046875
    6. ' is' → logprob: -7.60369873046875
    7. '=' → logprob: -8.60369873046875
    8. '<x' → logprob: -9.22869873046875
    9. ' x' → logprob: -9.72869873046875
    10. 'is' → logprob: -9.85369873046875

Token 936: ' equal' (ID: 12629)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'equal' → logprob: -0.323940247297287
    2. 'm' → logprob: -1.3239402770996094
    3. ' equal' → logprob: -4.573940277099609
    4. ' m' → logprob: -8.32394027709961
    5. '==' → logprob: -10.82394027709961
    6. 'the' → logprob: -11.44894027709961
    7. 'exact' → logprob: -11.69894027709961
    8. '_equal' → logprob: -12.07394027709961
    9. '   ' → logprob: -12.44894027709961
    10. '<m' → logprob: -12.69894027709961

Token 937: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.00471930718049407
    2. ' to' → logprob: -5.379719257354736
    3. '=' → logprob: -10.129719734191895
    4. '==' → logprob: -11.254719734191895
    5. '   ' → logprob: -11.254719734191895
    6. '_to' → logprob: -11.629719734191895
    7. '<|end|>' → logprob: -12.129719734191895
    8. 'a' → logprob: -12.254719734191895
    9. 'm' → logprob: -12.254719734191895
    10. ' ' → logprob: -12.629719734191895

Token 938: ' the' (ID: 290)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.0683535037969705e-05
    2. ' m' → logprob: -11.50001049041748
    3. 'the' → logprob: -14.62501049041748
    4. ' the' → logprob: -19.250011444091797
    5. '`' → logprob: -19.500011444091797
    6. '```' → logprob: -19.750011444091797
    7. '   ' → logprob: -19.875011444091797
    8. ' ' → logprob: -20.375011444091797
    9. '	m' → logprob: -20.875011444091797
    10. 'that' → logprob: -21.375011444091797

Token 939: ' largest' (ID: 10574)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.9361264946837764e-07
    2. ' m' → logprob: -16.25
    3. 'largest' → logprob: -21.0
    4. 'max' → logprob: -22.5
    5. 'м' → logprob: -22.625
    6. '	m' → logprob: -22.75
    7. '   ' → logprob: -22.875
    8. '`' → logprob: -23.0
    9. '=' → logprob: -23.0
    10. '
' → logprob: -23.375

Token 940: ' value' (ID: 1432)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6846659779548645
    2. ' or' → logprob: -1.8096659183502197
    3. 'or' → logprob: -2.3096659183502197
    4. 'm' → logprob: -2.4346659183502197
    5. 'value' → logprob: -2.8096659183502197
    6. 'a' → logprob: -3.4346659183502197
    7. 'else' → logprob: -3.9346659183502197
    8. ' ==' → logprob: -4.184666156768799
    9. '=' → logprob: -5.684666156768799
    10. ' else' → logprob: -6.184666156768799

Token 941: ',
' (ID: 412)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.20280073583126068
    2. ' else' → logprob: -1.7028007507324219
    3. '   ' → logprob: -8.202800750732422
    4. 'm' → logprob: -8.577800750732422
    5. 's' → logprob: -8.577800750732422
    6. '#' → logprob: -8.827800750732422
    7. ' ' → logprob: -8.827800750732422
    8. 'if' → logprob: -9.202800750732422
    9. 'a' → logprob: -9.327800750732422
    10. ',' → logprob: -9.702800750732422

Token 942: '#' (ID: 2)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.037351883947849274
    2. ' else' → logprob: -3.4123518466949463
    3. '#' → logprob: -5.662352085113525
    4. '   ' → logprob: -9.787351608276367
    5. '
' → logprob: -10.037351608276367
    6. 'otherwise' → logprob: -10.162351608276367
    7. 'for' → logprob: -11.037351608276367
    8. '    
' → logprob: -11.162351608276367
    9. '```' → logprob: -11.287351608276367
    10. ' ' → logprob: -12.162351608276367

Token 943: ' otherwise' (ID: 10275)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.07891060411930084
    2. ' else' → logprob: -2.5789105892181396
    3. '#' → logprob: -12.078910827636719
    4. '
' → logprob: -12.328910827636719
    5. '    
' → logprob: -12.703910827636719
    6. 'otherwise' → logprob: -13.203910827636719
    7. 'm' → logprob: -14.078910827636719
    8. ' 
' → logprob: -14.078910827636719
    9. '   ' → logprob: -14.078910827636719
    10. 'for' → logprob: -14.203910827636719

Token 944: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.14608623087406158
    2. ' print' → logprob: -2.3960862159729004
    3. '   ' → logprob: -3.1460862159729004
    4. ',' → logprob: -6.8960862159729
    5. '
' → logprob: -8.521086692810059
    6. '    ' → logprob: -8.771086692810059
    7. '	print' → logprob: -9.146086692810059
    8. '  ' → logprob: -9.896086692810059
    9. '    
' → logprob: -9.896086692810059
    10. ' ' → logprob: -10.021086692810059

Token 945: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0001234428636962548
    2. ' m' → logprob: -9.000123023986816
    3. 'the' → logprob: -19.500123977661133
    4. '   ' → logprob: -19.625123977661133
    5. '	m' → logprob: -20.125123977661133
    6. ' ' → logprob: -21.125123977661133
    7. ' the' → logprob: -22.125123977661133
    8. '    ' → logprob: -22.750123977661133
    9. '  ' → logprob: -23.125123977661133
    10. '
' → logprob: -23.375123977661133

Token 946: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0016073435544967651
    2. 'element' → logprob: -7.251607418060303
    3. '[element' → logprob: -8.126606941223145
    4. '   ' → logprob: -9.001606941223145
    5. 'elem' → logprob: -9.251606941223145
    6. ' element' → logprob: -9.751606941223145
    7. '<|end|>' → logprob: -9.751606941223145
    8. '  ' → logprob: -10.376606941223145
    9. 's' → logprob: -10.501606941223145
    10. 'x' → logprob: -10.626606941223145

Token 947: '.' (ID: 13)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0015531904064118862
    2. '
' → logprob: -6.626553058624268
    3. ' for' → logprob: -8.501553535461426
    4. 'print' → logprob: -11.126553535461426
    5. '   ' → logprob: -12.376553535461426
    6. ':
' → logprob: -13.876553535461426
    7. '```' → logprob: -14.001553535461426
    8. '    
' → logprob: -14.376553535461426
    9. 'if' → logprob: -14.501553535461426
    10. '\n' → logprob: -14.626553535461426

Token 948: ' This' (ID: 1328)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00408647395670414
    2. '
' → logprob: -5.504086494445801
    3. '```' → logprob: -12.2540864944458
    4. ' for' → logprob: -13.0040864944458
    5. '    
' → logprob: -15.0040864944458
    6. '\n' → logprob: -15.7540864944458
    7. '
' → logprob: -15.7540864944458
    8. '  
' → logprob: -15.7540864944458
    9. '``' → logprob: -16.004085540771484
    10. 'print' → logprob: -16.629085540771484

Token 949: ' can' (ID: 665)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12310785055160522
    2. ' for' → logprob: -3.87310791015625
    3. ':' → logprob: -3.99810791015625
    4. '
' → logprob: -3.99810791015625
    5. 'print' → logprob: -3.99810791015625
    6. ' is' → logprob: -4.49810791015625
    7. '=' → logprob: -4.99810791015625
    8. ' =' → logprob: -5.12310791015625
    9. ')' → logprob: -5.62310791015625
    10. ' continues' → logprob: -6.49810791015625

Token 950: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.8216116428375244
    2. 'for' → logprob: -1.1966116428375244
    3. 'print' → logprob: -1.9466116428375244
    4. ' for' → logprob: -2.5716116428375244
    5. ' print' → logprob: -3.9466116428375244
    6. '```' → logprob: -4.696611404418945
    7. '
' → logprob: -6.071611404418945
    8. ' =' → logprob: -6.696611404418945
    9. 'continue' → logprob: -7.571611404418945
    10. ' continue' → logprob: -7.571611404418945

Token 951: ' used' (ID: 2061)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.2379506826400757
    2. 'for' → logprob: -1.3629506826400757
    3. 'print' → logprob: -1.4879506826400757
    4. ' done' → logprob: -1.9879506826400757
    5. 'done' → logprob: -3.6129508018493652
    6. ' for' → logprob: -3.8629508018493652
    7. ' written' → logprob: -4.612950801849365
    8. '
' → logprob: -4.737950801849365
    9. 'written' → logprob: -4.862950801849365
    10. '[' → logprob: -5.237950801849365

Token 952: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03164353221654892
    2. ' for' → logprob: -3.6566436290740967
    3. '(
' → logprob: -5.531643390655518
    4. '(' → logprob: -7.281643390655518
    5. '   ' → logprob: -8.531643867492676
    6. 'print' → logprob: -9.156643867492676
    7. ' to' → logprob: -9.281643867492676
    8. ' in' → logprob: -9.906643867492676
    9. 'in' → logprob: -10.156643867492676
    10. '
' → logprob: -10.156643867492676

Token 953: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001897225040011108
    2. '#' → logprob: -6.62689733505249
    3. ' for' → logprob: -8.001896858215332
    4. '   ' → logprob: -8.876896858215332
    5. '
' → logprob: -9.626896858215332
    6. '```' → logprob: -10.876896858215332
    7. 'end' → logprob: -12.626896858215332
    8. '``' → logprob: -13.251896858215332
    9. 'with' → logprob: -13.501896858215332
    10. '    
' → logprob: -13.626896858215332

Token 954: ' example' (ID: 4994)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.000559108448214829
    2. '_' → logprob: -8.375558853149414
    3. ' x' → logprob: -8.750558853149414
    4. 'i' → logprob: -9.625558853149414
    5. 'value' → logprob: -10.875558853149414
    6. '_x' → logprob: -11.000558853149414
    7. 'a' → logprob: -11.000558853149414
    8. 'num' → logprob: -11.125558853149414
    9. 'val' → logprob: -11.750558853149414
    10. '```' → logprob: -11.750558853149414

Token 955: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6556099057197571
    2. ' for' → logprob: -1.5306098461151123
    3. ' to' → logprob: -2.1556098461151123
    4. ' in' → logprob: -2.4056098461151123
    5. 'in' → logprob: -3.6556098461151123
    6. 'to' → logprob: -3.9056098461151123
    7. '   ' → logprob: -4.405610084533691
    8. ',' → logprob: -9.280610084533691
    9. '```' → logprob: -10.530610084533691
    10. '
' → logprob: -10.780610084533691

Token 956: ' to' (ID: 316)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2686522901058197
    2. 'for' → logprob: -1.518652319908142
    3. ' to' → logprob: -4.143652439117432
    4. '   ' → logprob: -7.643652439117432
    5. ' in' → logprob: -8.893651962280273
    6. 'to' → logprob: -10.143651962280273
    7. ' as' → logprob: -10.268651962280273
    8. ' with' → logprob: -11.768651962280273
    9. 'in' → logprob: -11.893651962280273
    10. 'with' → logprob: -13.143651962280273

Token 957: ' answer' (ID: 6052)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.36553525924682617
    2. 'for' → logprob: -1.2405352592468262
    3. ' for' → logprob: -5.115535259246826
    4. ' print' → logprob: -5.490535259246826
    5. 'replace' → logprob: -5.740535259246826
    6. 'find' → logprob: -6.990535259246826
    7. 'solve' → logprob: -7.365535259246826
    8. 'calculate' → logprob: -7.865535259246826
    9. '[' → logprob: -8.615535736083984
    10. 'max' → logprob: -8.740535736083984

Token 958: ' "' (ID: 392)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8953677415847778
    2. 'm' → logprob: -1.1453677415847778
    3. 'max' → logprob: -2.1453676223754883
    4. 'a' → logprob: -3.3953676223754883
    5. 'i' → logprob: -3.8953676223754883
    6. 'elem' → logprob: -4.270367622375488
    7. '(i' → logprob: -4.520367622375488
    8. '
' → logprob: -4.645367622375488
    9. 'each' → logprob: -4.770367622375488
    10. '(m' → logprob: -5.020367622375488

Token 959: 'what' (ID: 13347)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.3180251121520996
    2. '"' → logprob: -2.3180251121520996
    3. 'max' → logprob: -2.4430251121520996
    4. 'for' → logprob: -2.9430251121520996
    5. 'a' → logprob: -4.1930251121521
    6. 'the' → logprob: -5.4430251121521
    7. ''' → logprob: -6.0680251121521
    8. ' for' → logprob: -6.5680251121521
    9. 'largest' → logprob: -6.5680251121521
    10. 'n' → logprob: -6.6930251121521

Token 960: ''s' (ID: 885)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.09234610944986343
    2. ' value' → logprob: -3.09234619140625
    3. ' to' → logprob: -4.59234619140625
    4. 'is' → logprob: -4.59234619140625
    5. ' for' → logprob: -5.71734619140625
    6. ' element' → logprob: -5.71734619140625
    7. 'value' → logprob: -5.96734619140625
    8. ' number' → logprob: -5.96734619140625
    9. ' would' → logprob: -6.09234619140625
    10. ' if' → logprob: -6.09234619140625

Token 961: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.09000909328460693
    2. 'the' → logprob: -2.9650092124938965
    3. 'max' → logprob: -3.7150092124938965
    4. 'm' → logprob: -5.0900092124938965
    5. ' max' → logprob: -6.5900092124938965
    6. '   ' → logprob: -6.9650092124938965
    7. ' m' → logprob: -7.0900092124938965
    8. ' ' → logprob: -8.465008735656738
    9. 'print' → logprob: -9.090008735656738
    10. '(max' → logprob: -9.090008735656738

Token 962: ' largest' (ID: 10574)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.3095967173576355
    2. 'largest' → logprob: -1.6845967769622803
    3. 'maximum' → logprob: -3.1845967769622803
    4. 'next' → logprob: -3.9345967769622803
    5. 'max' → logprob: -4.434596538543701
    6. ' second' → logprob: -5.184596538543701
    7. ' largest' → logprob: -7.059596538543701
    8. ' next' → logprob: -7.309596538543701
    9. 'highest' → logprob: -8.18459701538086
    10. ' maximum' → logprob: -8.93459701538086

Token 963: ' value' (ID: 1432)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -1.266078233718872
    2. ' value' → logprob: -1.641078233718872
    3. 'number' → logprob: -1.641078233718872
    4. 'value' → logprob: -2.016078233718872
    5. ' element' → logprob: -2.391078233718872
    6. 'element' → logprob: -2.891078233718872
    7. 'possible' → logprob: -4.141077995300293
    8. ' possible' → logprob: -4.266077995300293
    9. ' ' → logprob: -4.641077995300293
    10. '```' → logprob: -5.516077995300293

Token 964: '
' (ID: 198)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.448888897895813
    2. 'for' → logprob: -2.3238887786865234
    3. 'except' → logprob: -2.8238887786865234
    4. 'if' → logprob: -3.0738887786865234
    5. ' for' → logprob: -3.0738887786865234
    6. 'in' → logprob: -3.6988887786865234
    7. ' if' → logprob: -3.9488887786865234
    8. '"' → logprob: -3.9488887786865234
    9. ' except' → logprob: -4.573888778686523
    10. '   ' → logprob: -5.198888778686523

Token 965: '#' (ID: 2)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.47165966033935547
    2. 'in' → logprob: -1.5966596603393555
    3. 'for' → logprob: -2.7216596603393555
    4. ' for' → logprob: -3.0966596603393555
    5. 'if' → logprob: -3.7216596603393555
    6. ' if' → logprob: -3.9716596603393555
    7. '#' → logprob: -4.5966596603393555
    8. '   ' → logprob: -6.2216596603393555
    9. ' i' → logprob: -6.5966596603393555
    10. '[i' → logprob: -6.5966596603393555

Token 966: ' except' (ID: 6384)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6825728416442871
    2. 'except' → logprob: -1.432572841644287
    3. 'in' → logprob: -2.307572841644287
    4. 'other' → logprob: -3.307572841644287
    5. ' if' → logprob: -3.432572841644287
    6. ' in' → logprob: -3.682572841644287
    7. 'that' → logprob: -4.307572841644287
    8. 'for' → logprob: -4.432572841644287
    9. ' except' → logprob: -5.057572841644287
    10. 'each' → logprob: -5.307572841644287

Token 967: ' i' (ID: 575)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6037048697471619
    2. 'for' → logprob: -1.2287049293518066
    3. 'the' → logprob: -2.9787049293518066
    4. ' the' → logprob: -3.7287049293518066
    5. 'if' → logprob: -4.228704929351807
    6. ' if' → logprob: -4.603704929351807
    7. '"' → logprob: -4.728704929351807
    8. 'currently' → logprob: -4.853704929351807
    9. ' equal' → logprob: -5.228704929351807
    10. ' in' → logprob: -5.353704929351807

Token 968: '-th' (ID: 14928)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3340851962566376
    2. 'n' → logprob: -2.20908522605896
    3. 'tem' → logprob: -2.58408522605896
    4. 'nd' → logprob: -3.33408522605896
    5. 'for' → logprob: -3.95908522605896
    6. ' for' → logprob: -4.084084987640381
    7. '"' → logprob: -5.209084987640381
    8. 'th' → logprob: -5.334084987640381
    9. 'm' → logprob: -5.334084987640381
    10. 't' → logprob: -6.084084987640381

Token 969: ' element' (ID: 3577)
  Prédit: ' element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' element' → logprob: -1.7112388610839844
    2. ')' → logprob: -1.9612388610839844
    3. '"' → logprob: -2.0862388610839844
    4. ' in' → logprob: -2.2112388610839844
    5. 'a' → logprob: -2.4612388610839844
    6. 'element' → logprob: -2.9612388610839844
    7. ')"' → logprob: -3.0862388610839844
    8. 'index' → logprob: -3.2112388610839844
    9. ' for' → logprob: -3.2112388610839844
    10. '```' → logprob: -3.5862388610839844

Token 970: '?"' (ID: 16842)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009514793055132031
    2. '
' → logprob: -7.125951290130615
    3. ' for' → logprob: -8.875951766967773
    4. '```' → logprob: -12.500951766967773
    5. '

' → logprob: -14.750951766967773
    6. ':' → logprob: -14.875951766967773
    7. '``' → logprob: -15.000951766967773
    8. '    
' → logprob: -15.250951766967773
    9. '
' → logprob: -15.250951766967773
    10. '(' → logprob: -15.250951766967773

Token 971: ' in' (ID: 306)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05519300699234009
    2. '
' → logprob: -2.9301929473876953
    3. ' for' → logprob: -8.180192947387695
    4. '
' → logprob: -12.180192947387695
    5. '    
' → logprob: -12.680192947387695
    6. 'print' → logprob: -12.805192947387695
    7. '```' → logprob: -12.930192947387695
    8. '

' → logprob: -13.055192947387695
    9. '\n' → logprob: -13.180192947387695
    10. '<|end|>' → logprob: -13.305192947387695

Token 972: ' some' (ID: 1236)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06620223075151443
    2. 'for' → logprob: -3.566202163696289
    3. ' a' → logprob: -4.066202163696289
    4. 'range' → logprob: -4.691202163696289
    5. ' for' → logprob: -6.191202163696289
    6. ' range' → logprob: -6.691202163696289
    7. 'b' → logprob: -6.691202163696289
    8. 'the' → logprob: -6.816202163696289
    9. '   ' → logprob: -7.441202163696289
    10. ' the' → logprob: -7.566202163696289

Token 973: ' problem' (ID: 4792)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6774107217788696
    2. ' for' → logprob: -1.3024107217788696
    3. 'n' → logprob: -2.17741060256958
    4. ' problem' → logprob: -4.17741060256958
    5. ' line' → logprob: -4.80241060256958
    6. 'a' → logprob: -4.92741060256958
    7. ' in' → logprob: -5.05241060256958
    8. '\n' → logprob: -5.05241060256958
    9. ' loop' → logprob: -5.05241060256958
    10. ' range' → logprob: -5.17741060256958

Token 974: ' settings' (ID: 8743)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11186213046312332
    2. '
' → logprob: -2.4868621826171875
    3. ':
' → logprob: -3.9868621826171875
    4. ' for' → logprob: -5.8618621826171875
    5. ':' → logprob: -7.1118621826171875
    6. '.
' → logprob: -8.861862182617188
    7. '\n' → logprob: -9.611862182617188
    8. 'if' → logprob: -10.236862182617188
    9. '```' → logprob: -10.611862182617188
    10. '   ' → logprob: -10.611862182617188

Token 975: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3135177195072174
    2. '
' → logprob: -1.313517689704895
    3. ' for' → logprob: -8.563517570495605
    4. '

' → logprob: -10.938517570495605
    5. '
' → logprob: -11.563517570495605
    6. '```' → logprob: -11.688517570495605
    7. 'print' → logprob: -11.938517570495605
    8. '    
' → logprob: -12.188517570495605
    9. '\n' → logprob: -12.313517570495605
    10. '  
' → logprob: -12.438517570495605

Token 976: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.842555426876061e-06
    2. '```' → logprob: -12.750004768371582
    3. '
' → logprob: -13.250004768371582
    4. '``' → logprob: -17.1250057220459
    5. 'print' → logprob: -17.7500057220459
    6. ' for' → logprob: -17.7500057220459
    7. '    
' → logprob: -20.3750057220459
    8. '  
' → logprob: -21.3750057220459
    9. '`
' → logprob: -21.6250057220459
    10. '	for' → logprob: -22.0000057220459

Token 977: ' i' (ID: 575)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.13637864589691162
    2. 'ai' → logprob: -2.761378765106201
    3. 'i' → logprob: -3.386378765106201
    4. 'v' → logprob: -3.636378765106201
    5. 'aa' → logprob: -6.136378765106201
    6. 'a' → logprob: -6.886378765106201
    7. 'num' → logprob: -8.011378288269043
    8. 'val' → logprob: -9.011378288269043
    9. 'e' → logprob: -9.011378288269043
    10. 'value' → logprob: -9.261378288269043

Token 978: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2520207166671753
    2. 'in' → logprob: -1.5020207166671753
    3. ',' → logprob: -10.127020835876465
    4. 's' → logprob: -11.377020835876465
    5. ' ' → logprob: -11.627020835876465
    6. '_in' → logprob: -12.127020835876465
    7. 'a' → logprob: -12.252020835876465
    8. 'import' → logprob: -12.877020835876465
    9. '	in' → logprob: -12.877020835876465
    10. '   ' → logprob: -12.877020835876465

Token 979: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03370748460292816
    2. 'range' → logprob: -3.4087073802948
    3. ' range' → logprob: -10.033707618713379
    4. ' a' → logprob: -11.033707618713379
    5. '(a' → logprob: -14.783707618713379
    6. '   ' → logprob: -14.908707618713379
    7. '	a' → logprob: -15.908707618713379
    8. 'Range' → logprob: -16.096206665039062
    9. '(range' → logprob: -16.221206665039062
    10. '[a' → logprob: -16.408706665039062

Token 980: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023257825523614883
    2. ':
' → logprob: -3.7732577323913574
    3. ' :' → logprob: -12.398258209228516
    4. '=' → logprob: -12.398258209228516
    5. '):' → logprob: -14.148258209228516
    6. ':
' → logprob: -14.273258209228516
    7. '():
' → logprob: -14.523258209228516
    8. '():' → logprob: -14.648258209228516
    9. ' :
' → logprob: -14.773258209228516
    10. '):
' → logprob: -15.148258209228516

Token 981: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09392235428094864
    2. '   ' → logprob: -2.5939223766326904
    3. ' print' → logprob: -4.593922138214111
    4. 'p' → logprob: -5.593922138214111
    5. ' p' → logprob: -7.218922138214111
    6. 'if' → logprob: -8.84392261505127
    7. 'm' → logprob: -8.96892261505127
    8. ' if' → logprob: -9.59392261505127
    9. ' m' → logprob: -11.59392261505127
    10. '```' → logprob: -13.71892261505127

Token 982: ' p' (ID: 275)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05598438158631325
    2. 'p' (adapté à ' p') → logprob: -3.5559844970703125
    3. ' print' → logprob: -4.1809844970703125
    4. ' p' → logprob: -4.8059844970703125
    5. '   ' → logprob: -6.0559844970703125
    6. 'if' → logprob: -10.180984497070312
    7. ' if' → logprob: -10.305984497070312
    8. 'm' → logprob: -11.680984497070312
    9. 'pr' → logprob: -13.555984497070312
    10. ' m' → logprob: -13.805984497070312

Token 983: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. 'r' → logprob: -13.375001907348633
    3. '(r' → logprob: -19.375001907348633
    4. 'o' → logprob: -19.750001907348633
    5. '(' → logprob: -20.250001907348633
    6. 'm' → logprob: -21.125001907348633
    7. '```' → logprob: -21.750001907348633
    8. 'b' → logprob: -21.750001907348633
    9. 'l' → logprob: -22.125001907348633
    10. ' ' → logprob: -22.250001907348633

Token 984: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0004994167247787118
    2. 'i' → logprob: -8.250499725341797
    3. '(m' → logprob: -8.375499725341797
    4. '(' → logprob: -12.375499725341797
    5. '(b' → logprob: -13.750499725341797
    6. 'm' → logprob: -14.000499725341797
    7. '(True' → logprob: -14.250499725341797
    8. '((' → logprob: -15.375499725341797
    9. 'b' → logprob: -15.750499725341797
    10. '   ' → logprob: -15.875499725341797

Token 985: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00866976473480463
    2. ' ==' → logprob: -4.758669853210449
    3. '=' → logprob: -10.13366985321045
    4. '==
' → logprob: -11.63366985321045
    5. '!=' → logprob: -12.50866985321045
    6. ' ' → logprob: -13.25866985321045
    7. 'm' → logprob: -15.00866985321045
    8. ' =' → logprob: -15.50866985321045
    9. '=i' → logprob: -15.63366985321045
    10. ' !=' → logprob: -15.88366985321045

Token 986: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -4.320199877838604e-07
    2. ' m' → logprob: -15.0
    3. '   ' → logprob: -19.625
    4. ' ' → logprob: -21.25
    5. '	m' → logprob: -22.125
    6. '```' → logprob: -22.25
    7. '`' → logprob: -22.625
    8. ')m' → logprob: -23.75
    9. '  ' → logprob: -23.875
    10. 'м' → logprob: -24.125

Token 987: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. 'ax' → logprob: -17.375
    3. ' ' → logprob: -18.625
    4. '۱' → logprob: -19.125
    5. '１' → logprob: -19.25
    6. '```' → logprob: -19.375
    7. '१' → logprob: -19.5
    8. '   ' → logprob: -19.75
    9. '১' → logprob: -19.75
    10. 'l' → logprob: -19.875

Token 988: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04359075054526329
    2. ',m' → logprob: -3.168590784072876
    3. ')' → logprob: -7.668590545654297
    4. 'm' → logprob: -9.168590545654297
    5. ' ,' → logprob: -11.543590545654297
    6. ',i' → logprob: -12.793590545654297
    7. ',)' → logprob: -13.418590545654297
    8. '(m' → logprob: -13.418590545654297
    9. ',p' → logprob: -14.043590545654297
    10. ')m' → logprob: -14.043590545654297

Token 989: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.01700674742460251
    2. 'no' → logprob: -5.017006874084473
    3. 'yes' → logprob: -5.017006874084473
    4. 'str' → logprob: -5.642006874084473
    5. 'b' → logprob: -10.267006874084473
    6. ' m' → logprob: -10.892006874084473
    7. ' yes' → logprob: -12.767006874084473
    8. '   ' → logprob: -13.392006874084473
    9. 'f' → logprob: -13.517006874084473
    10. ' no' → logprob: -13.767006874084473

Token 990: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004556983185466379
    2. '1' → logprob: -8.750455856323242
    3. 'm' → logprob: -8.750455856323242
    4. 'str' → logprob: -9.125455856323242
    5. 's' → logprob: -12.000455856323242
    6. 'r' → logprob: -12.125455856323242
    7. 'o' → logprob: -12.250455856323242
    8. 'no' → logprob: -12.750455856323242
    9. '
' → logprob: -13.375455856323242
    10. 'y' → logprob: -14.187955856323242

Token 991: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35862866044044495
    2. ')' → logprob: -1.2336286306381226
    3. ',m' → logprob: -4.608628749847412
    4. ')m' → logprob: -9.983628273010254
    5. ' ,' → logprob: -10.358628273010254
    6. ' )' → logprob: -10.733628273010254
    7. ',)' → logprob: -10.858628273010254
    8. 'm' → logprob: -11.358628273010254
    9. ')
' → logprob: -11.358628273010254
    10. '   ' → logprob: -11.858628273010254

Token 992: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -4.320199877838604e-07
    2. ' m' → logprob: -14.75
    3. '   ' → logprob: -19.125
    4. ')' → logprob: -23.125
    5. '	m' → logprob: -23.125
    6. ')m' → logprob: -23.25
    7. '  ' → logprob: -23.5
    8. ' ' → logprob: -23.625
    9. '    ' → logprob: -23.75
    10. 'i' → logprob: -24.5

Token 993: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '۱' → logprob: -20.875
    3. '```' → logprob: -21.25
    4. '_' → logprob: -21.5
    5. ')' → logprob: -21.5
    6. '１' → logprob: -21.875
    7. '<|end|>' → logprob: -22.375
    8. ' ' → logprob: -22.5
    9. '১' → logprob: -23.0
    10. '१' → logprob: -23.25

Token 994: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.47495681833243e-05
    2. ')
' → logprob: -10.625024795532227
    3. ' )' → logprob: -14.750024795532227
    4. '   ' → logprob: -17.625024795532227
    5. '))' → logprob: -17.625024795532227
    6. ')`' → logprob: -18.500024795532227
    7. ')
' → logprob: -19.000024795532227
    8. ')

' → logprob: -19.125024795532227
    9. '())' → logprob: -19.500024795532227
    10. ')i' → logprob: -20.000024795532227


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 992
Tokens correctement prédits (1ère position, stricte): 308
Tokens correctement prédits (1ère position, avec adaptation): 341
Tokens correctement prédits (top 10): 704
Précision stricte (1ère position): 31.05%
Précision adaptée (1ère position): 34.38%
Précision (top 10): 70.97%
================================================================================
