================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:39:31
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import itemgetter

def main():
    N = int(input())
    A = list(map(int, input().split()))
    B = list(map(int, input().split()))

    # Générer toutes les permutations inutiles de listes, les ranger en tuples (pour "élégance"), puis extraire comme set pour une vérif inutilement complexe
    A2 = sorted(A)
    B2 = sorted(B)

    # Utilise zip + enumerate + all combinées à une fonction lambda inline pour imposer la condition de la première boucle
    f = lambda: all(x <= y for x, y in zip(A2, B2))
    if not f():
        print('No')
        return

    # Introduit reduce pour évaluer la deuxième condition via un accumulateur
    cond2 = any(map(lambda t: t[0] <= t[1], zip(A2[1:], B2[:-1])))
    if cond2:
        print('Yes')
        return

    # Construction volontairement absconse: multi-nestage/sort/filter/map/lambda pour générer B3 et C
    # La permutation des index de B est exécutée de façon confuse
    B_idx = list(enumerate(B))
    B_map = list(map(lambda t: (t[1], t[0]), B_idx))
    B_map_sorted = sorted(B_map)
    enumerate_B = list(enumerate(B_map_sorted))
    B3 = sorted(map(lambda z: (z[1][0], z[0]), enumerate_B), key=lambda k: (k[0], k[1]))
    # Pour la liste C, on mixe zippage, map, lambda, et itemgetter pour trier
    C = list(map(itemgetter(1), sorted(zip(A, B3), key=lambda x: (x[0], x[1][0], x[1][1]))))

    # Un while qui "tourne sur place" pour simuler la boucle
    p = 0
    i = 0
    status = False
    while i < N-1:
        p = C[p]
        if p == 0:
            print('Yes')
            return
        i += 1

    print('No')

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.25372281670570374
    2. 'partial' → logprob: -1.7537227869033813
    3. 'reduce' → logprob: -3.503722906112671
    4. ' wraps' → logprob: -4.003722667694092
    5. 'l' → logprob: -6.753722667694092
    6. ' partial' → logprob: -7.378722667694092
    7. 'cache' → logprob: -8.37872314453125
    8. '```' → logprob: -8.62872314453125
    9. 'cached' → logprob: -9.00372314453125
    10. 'cmp' → logprob: -9.25372314453125

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018257521092891693
    2. '(lambda' → logprob: -4.5182576179504395
    3. '.' → logprob: -5.0182576179504395
    4. ',' → logprob: -8.893257141113281
    5. ' (' → logprob: -8.893257141113281
    6. '```' → logprob: -9.643257141113281
    7. '\' → logprob: -10.143257141113281
    8. '\(' → logprob: -10.268257141113281
    9. '(
' → logprob: -10.393257141113281
    10. 'def' → logprob: -11.268257141113281

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007019410841166973
    2. '\' → logprob: -5.882019519805908
    3. 'def' → logprob: -7.257019519805908
    4. '```' → logprob: -7.257019519805908
    5. '\(' → logprob: -7.507019519805908
    6. ' ' → logprob: -7.882019519805908
    7. '(
' → logprob: -7.882019519805908
    8. ' (' → logprob: -8.63201904296875
    9. '(lambda' → logprob: -8.75701904296875
    10. ',' → logprob: -8.75701904296875

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.26421603560447693
    2. ' math' → logprob: -2.0142159461975098
    3. ' itertools' → logprob: -2.7642159461975098
    4. ' collections' → logprob: -3.3892159461975098
    5. 'operator' → logprob: -6.51421594619751
    6. ' os' → logprob: -8.764216423034668
    7. 'math' → logprob: -9.014216423034668
    8. ' ' → logprob: -9.639216423034668
    9. ' typing' → logprob: -9.639216423034668
    10. 'collections' → logprob: -9.764216423034668

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.022899029776453972
    2. 'import' → logprob: -3.8978989124298096
    3. ' ' → logprob: -6.397899150848389
    4. '.' → logprob: -7.522899150848389
    5. ' .' → logprob: -9.14789867401123
    6. '.import' → logprob: -10.64789867401123
    7. '	import' → logprob: -11.77289867401123
    8. '<|end|>' → logprob: -13.02289867401123
    9. '_import' → logprob: -13.39789867401123
    10. ' ' → logprob: -13.52289867401123

Token 8: ' item' (ID: 2169)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.2034524381160736
    2. ' import' → logprob: -2.5784523487091064
    3. ' ' → logprob: -2.7034523487091064
    4. ' mul' → logprob: -3.3284523487091064
    5. 'add' → logprob: -5.8284525871276855
    6. ' item' → logprob: -6.9534525871276855
    7. 'import' → logprob: -7.9534525871276855
    8. ' ad' → logprob: -8.203452110290527
    9. ' icon' → logprob: -8.453452110290527
    10. 'mul' → logprob: -8.578452110290527

Token 9: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.005335385911166668
    2. 'get' → logprob: -5.255335330963135
    3. 'getitem' → logprob: -9.255335807800293
    4. 'gett' → logprob: -12.255335807800293
    5. 'g' → logprob: -15.255335807800293
    6. 'item' → logprob: -15.380335807800293
    7. 'gets' → logprob: -16.130334854125977
    8. '_get' → logprob: -16.255334854125977
    9. 'ge' → logprob: -16.255334854125977
    10. 'gt' → logprob: -16.630334854125977

Token 10: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8124717473983765
    2. ',' → logprob: -1.6874717473983765
    3. '\n' → logprob: -1.6874717473983765
    4. '\' → logprob: -2.437471866607666
    5. '(
' → logprob: -3.187471866607666
    6. '.' → logprob: -4.062471866607666
    7. ',
' → logprob: -4.562471866607666
    8. '()' → logprob: -5.312471866607666
    9. '```' → logprob: -5.312471866607666
    10. '`' → logprob: -5.437471866607666

Token 11: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1672021448612213
    2. ',' → logprob: -2.1672022342681885
    3. '.' → logprob: -4.042201995849609
    4. '(
' → logprob: -4.917201995849609
    5. '#' → logprob: -5.667201995849609
    6. '\' → logprob: -6.042201995849609
    7. '```' → logprob: -6.542201995849609
    8. '=' → logprob: -6.667201995849609
    9. '\n' → logprob: -6.917201995849609
    10. ',
' → logprob: -7.042201995849609

Token 12: ' main' (ID: 2758)
  Prédit: ' reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reduce' → logprob: -0.29740995168685913
    2. ' ' → logprob: -1.797410011291504
    3. ' map' → logprob: -3.547410011291504
    4. 'reduce' → logprob: -4.297410011291504
    5. '_reduce' → logprob: -4.297410011291504
    6. ' process' → logprob: -5.172410011291504
    7. ' filter' → logprob: -5.422410011291504
    8. ' calculate' → logprob: -5.922410011291504
    9. ' sum' → logprob: -5.922410011291504
    10. ' space' → logprob: -6.047410011291504

Token 13: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007352970424108207
    2. '():' → logprob: -8.12573528289795
    3. ':' → logprob: -8.37573528289795
    4. ' (' → logprob: -9.50073528289795
    5. '(:' → logprob: -10.37573528289795
    6. '(
' → logprob: -10.37573528289795
    7. '```' → logprob: -11.62573528289795
    8. ')' → logprob: -11.75073528289795
    9. '):' → logprob: -12.00073528289795
    10. '<|end|>' → logprob: -12.12573528289795

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29378893971443176
    2. '    ' → logprob: -2.6687889099121094
    3. '[' → logprob: -3.0437889099121094
    4. ' ' → logprob: -3.1687889099121094
    5. 'data' → logprob: -3.9187889099121094
    6. 'n' → logprob: -4.168788909912109
    7. 'a' → logprob: -4.293788909912109
    8. 'r' → logprob: -4.543788909912109
    9. ' data' → logprob: -5.043788909912109
    10. ' items' → logprob: -5.668788909912109

Token 15: ' N' (ID: 478)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.4418540596961975
    2. ' data' → logprob: -2.0668540000915527
    3. 'items' → logprob: -2.5668540000915527
    4. ' items' → logprob: -3.0668540000915527
    5. 'numbers' → logprob: -3.0668540000915527
    6. ' numbers' → logprob: -3.6918540000915527
    7. '   ' → logprob: -4.941854000091553
    8. 'result' → logprob: -5.441854000091553
    9. 'nums' → logprob: -5.441854000091553
    10. 'lst' → logprob: -6.191854000091553

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.025340717285871506
    2. '=' → logprob: -3.7753407955169678
    3. ' ' → logprob: -6.400340557098389
    4. ',' → logprob: -8.025341033935547
    5. '=int' → logprob: -10.400341033935547
    6. ' ,' → logprob: -10.525341033935547
    7. '  ' → logprob: -11.150341033935547
    8. '   ' → logprob: -11.275341033935547
    9. '    ' → logprob: -11.900341033935547
    10. ')' → logprob: -12.150341033935547

Token 17: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.035813797265291214
    2. 'int' → logprob: -3.410813808441162
    3. ' ' → logprob: -6.285813808441162
    4. '10' → logprob: -8.410813331604004
    5. '20' → logprob: -11.035813331604004
    6. '5' → logprob: -11.285813331604004
    7. ' input' → logprob: -11.535813331604004
    8. '100' → logprob: -11.660813331604004
    9. '50' → logprob: -12.160813331604004
    10. '  ' → logprob: -12.785813331604004

Token 18: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011190356686711311
    2. '(input' → logprob: -4.511190414428711
    3. '('' → logprob: -9.011190414428711
    4. '()' → logprob: -11.886190414428711
    5. ' (' → logprob: -12.386190414428711
    6. '("' → logprob: -12.761190414428711
    7. '(
' → logprob: -13.011190414428711
    8. 'input' → logprob: -13.261190414428711
    9. '(

' → logprob: -14.761190414428711
    10. '(`' → logprob: -15.636190414428711

Token 19: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.966535747051239
    2. '(' → logprob: -1.0915358066558838
    3. '())' → logprob: -2.216535806655884
    4. ')' → logprob: -2.341535806655884
    5. '('' → logprob: -2.591535806655884
    6. '("("' → logprob: -6.841535568237305
    7. '("' → logprob: -7.591535568237305
    8. '(
' → logprob: -7.716535568237305
    9. '(""))' → logprob: -8.091535568237305
    10. '')' → logprob: -8.341535568237305

Token 20: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9257303476333618
    2. '   ' → logprob: -1.1757303476333618
    3. '    
' → logprob: -2.4257302284240723
    4. ' ' → logprob: -2.5507302284240723
    5. '
' → logprob: -3.5507302284240723
    6. ' 
' → logprob: -3.9257302284240723
    7. 'data' → logprob: -4.050730228424072
    8. '    ' → logprob: -4.300730228424072
    9. '<|end|>' → logprob: -5.175730228424072
    10. '  
' → logprob: -5.425730228424072

Token 21: ' A' (ID: 355)
  Prédit: ' data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.33520108461380005
    2. 'data' → logprob: -2.0852010250091553
    3. ' array' → logprob: -3.7102010250091553
    4. ' items' → logprob: -3.7102010250091553
    5. ' numbers' → logprob: -3.8352010250091553
    6. ' arr' → logprob: -3.8352010250091553
    7. ' lst' → logprob: -4.210201263427734
    8. 'arr' → logprob: -4.585201263427734
    9. ' A' → logprob: -4.710201263427734
    10. ' a' → logprob: -4.835201263427734

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013453966937959194
    2. '=' → logprob: -4.638453960418701
    3. '[' → logprob: -5.888453960418701
    4. '.' → logprob: -7.888453960418701
    5. ',' → logprob: -8.63845443725586
    6. ' ' → logprob: -9.26345443725586
    7. '[]' → logprob: -9.88845443725586
    8. '   ' → logprob: -10.13845443725586
    9. '[:]' → logprob: -10.13845443725586
    10. '_' → logprob: -10.51345443725586

Token 23: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.09465211629867554
    2. 'list' → logprob: -2.7196521759033203
    3. ' [' → logprob: -3.8446521759033203
    4. '[list' → logprob: -6.71965217590332
    5. ' []' → logprob: -6.96965217590332
    6. '[' → logprob: -7.59465217590332
    7. '[input' → logprob: -8.96965217590332
    8. ' ' → logprob: -9.46965217590332
    9. '[]' → logprob: -9.59465217590332
    10. ' input' → logprob: -9.96965217590332

Token 24: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.526141345500946
    2. '(' → logprob: -0.901141345500946
    3. '(input' → logprob: -6.151141166687012
    4. '(int' → logprob: -7.651141166687012
    5. '(range' → logprob: -8.151141166687012
    6. '()' → logprob: -10.026141166687012
    7. '(filter' → logprob: -10.651141166687012
    8. '(eval' → logprob: -11.276141166687012
    9. 'map' → logprob: -11.776141166687012
    10. '(
' → logprob: -12.651141166687012

Token 25: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00041458409396000206
    2. '(' → logprob: -7.8754143714904785
    3. 'int' → logprob: -10.375414848327637
    4. '(lambda' → logprob: -13.250414848327637
    5. '<int' → logprob: -15.000414848327637
    6. ' int' → logprob: -15.000414848327637
    7. '(str' → logprob: -15.250414848327637
    8. '(
' → logprob: -15.750414848327637
    9. ')' → logprob: -16.12541389465332
    10. '=int' → logprob: -16.25041389465332

Token 26: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.41828837990760803
    2. ',input' → logprob: -1.1682883501052856
    3. ',' → logprob: -3.918288469314575
    4. '(' → logprob: -4.793288230895996
    5. 'input' → logprob: -6.043288230895996
    6. ' ,' → logprob: -9.168288230895996
    7. ')' → logprob: -9.543288230895996
    8. '=input' → logprob: -9.793288230895996
    9. ' input' → logprob: -9.918288230895996
    10. '))' → logprob: -10.043288230895996

Token 27: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.006717974785715342
    2. ' input' → logprob: -5.006718158721924
    3. '(input' → logprob: -13.631717681884766
    4. ' ' → logprob: -14.506717681884766
    5. ',input' → logprob: -14.506717681884766
    6. ')' → logprob: -16.006717681884766
    7. '	input' → logprob: -16.131717681884766
    8. '=input' → logprob: -16.256717681884766
    9. '   ' → logprob: -16.506717681884766
    10. '<input' → logprob: -17.131717681884766

Token 28: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.9862216504407115e-05
    2. '()))' → logprob: -12.000020027160645
    3. '()' → logprob: -12.375020027160645
    4. '(' → logprob: -12.625020027160645
    5. '))' → logprob: -12.750020027160645
    6. ')' → logprob: -13.375020027160645
    7. ' ().' → logprob: -14.375020027160645
    8. '())' → logprob: -14.500020027160645
    9. 'split' → logprob: -15.750020027160645
    10. '()));' → logprob: -16.500019073486328

Token 29: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001773192489054054
    2. 'strip' → logprob: -8.750177383422852
    3. ' split' → logprob: -11.750177383422852
    4. '(split' → logprob: -12.125177383422852
    5. 'rstrip' → logprob: -12.250177383422852
    6. 'spl' → logprob: -14.250177383422852
    7. 's' → logprob: -16.37517738342285
    8. ')' → logprob: -16.75017738342285
    9. 'sp' → logprob: -18.50017738342285
    10. 'replace' → logprob: -19.12517738342285

Token 30: '()))
' (ID: 24521)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8175233602523804
    2. '))' → logprob: -0.8175233602523804
    3. '()))' → logprob: -2.69252347946167
    4. '())' → logprob: -3.19252347946167
    5. '(' → logprob: -5.06752347946167
    6. '()' → logprob: -6.81752347946167
    7. ')))' → logprob: -7.81752347946167
    8. '),' → logprob: -9.192523002624512
    9. ''))' → logprob: -9.692523002624512
    10. '('' → logprob: -9.817523002624512

Token 31: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7697314023971558
    2. '   ' → logprob: -1.5197314023971558
    3. '
' → logprob: -1.8947314023971558
    4. '    
' → logprob: -2.5197315216064453
    5. ')
' → logprob: -4.394731521606445
    6. ' ' → logprob: -4.519731521606445
    7. '  
' → logprob: -4.894731521606445
    8. '```' → logprob: -5.019731521606445
    9. '\' → logprob: -5.144731521606445
    10. ',' → logprob: -5.144731521606445

Token 32: ' B' (ID: 418)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.1782710552215576
    2. 'max' → logprob: -2.1782710552215576
    3. ' max' → logprob: -2.5532710552215576
    4. 'result' → logprob: -2.6782710552215576
    5. 'count' → logprob: -2.9282710552215576
    6. ' result' → logprob: -2.9282710552215576
    7. ')' → logprob: -3.1782710552215576
    8. '    
' → logprob: -3.1782710552215576
    9. 's' → logprob: -3.3032710552215576
    10. '```' → logprob: -3.4282710552215576

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22553402185440063
    2. '=' → logprob: -1.6005339622497559
    3. '   ' → logprob: -9.975534439086914
    4. '_' → logprob: -10.350534439086914
    5. ' ' → logprob: -11.350534439086914
    6. ',' → logprob: -11.475534439086914
    7. '[' → logprob: -12.225534439086914
    8. '    ' → logprob: -12.600534439086914
    9. ')' → logprob: -12.725534439086914
    10. '  ' → logprob: -13.225534439086914

Token 34: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.28286561369895935
    2. 'list' → logprob: -1.4078656435012817
    3. ' sorted' → logprob: -7.407865524291992
    4. 'sorted' → logprob: -7.407865524291992
    5. ' A' → logprob: -8.532865524291992
    6. 'A' → logprob: -9.157865524291992
    7. ' [' → logprob: -9.407865524291992
    8. '[' → logprob: -10.032865524291992
    9. ' map' → logprob: -10.907865524291992
    10. 'map' → logprob: -11.407865524291992

Token 35: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.01816340535879135
    2. '(' → logprob: -4.018163204193115
    3. ' (' → logprob: -12.518163681030273
    4. '(
' → logprob: -13.393163681030273
    5. '(range' → logprob: -13.518163681030273
    6. '(filter' → logprob: -13.518163681030273
    7. 'map' → logprob: -13.643163681030273
    8. '(int' → logprob: -14.268163681030273
    9. ',map' → logprob: -14.393163681030273
    10. '.map' → logprob: -14.643163681030273

Token 36: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.11287810653448105
    2. '(' → logprob: -2.2378780841827393
    3. 'int' → logprob: -10.98787784576416
    4. ' (' → logprob: -11.61287784576416
    5. '(
' → logprob: -11.86287784576416
    6. ')' → logprob: -11.86287784576416
    7. '<int' → logprob: -12.73787784576416
    8. '=int' → logprob: -12.86287784576416
    9. ')(' → logprob: -12.98787784576416
    10. ',int' → logprob: -13.98787784576416

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021122854202985764
    2. '(int' → logprob: -4.021122932434082
    3. ',int' → logprob: -6.396122932434082
    4. '(' → logprob: -6.771122932434082
    5. 'int' → logprob: -9.271122932434082
    6. ' ,' → logprob: -10.271122932434082
    7. '```' → logprob: -12.396122932434082
    8. ',input' → logprob: -12.521122932434082
    9. '),' → logprob: -12.771122932434082
    10. '   ' → logprob: -12.896122932434082

Token 38: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.308569997549057
    2. 'input' → logprob: -2.18356990814209
    3. ' input' → logprob: -2.30856990814209
    4. ' int' → logprob: -2.93356990814209
    5. '(int' → logprob: -8.43356990814209
    6. '(input' → logprob: -11.68356990814209
    7. '[int' → logprob: -11.80856990814209
    8. '<int' → logprob: -12.18356990814209
    9. ',int' → logprob: -12.55856990814209
    10. ' ' → logprob: -13.05856990814209

Token 39: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.13388703338569e-06
    2. '()' → logprob: -12.125009536743164
    3. '(' → logprob: -13.875009536743164
    4. '(),' → logprob: -14.000009536743164
    5. '.' → logprob: -14.375009536743164
    6. '.split' → logprob: -14.375009536743164
    7. '()))' → logprob: -15.500009536743164
    8. ',' → logprob: -15.875009536743164
    9. '```' → logprob: -16.000009536743164
    10. ' ().' → logprob: -16.125009536743164

Token 40: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.292907877039397e-06
    2. ')' → logprob: -13.50000286102295
    3. 'strip' → logprob: -14.00000286102295
    4. '().' → logprob: -14.75000286102295
    5. '.split' → logprob: -15.25000286102295
    6. '))' → logprob: -16.125003814697266
    7. '(split' → logprob: -16.375003814697266
    8. ' split' → logprob: -16.750003814697266
    9. 'plit' → logprob: -17.500003814697266
    10. '())' → logprob: -17.625003814697266

Token 41: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.3124985098838806
    2. '))' → logprob: -2.0624985694885254
    3. '())' → logprob: -2.5624985694885254
    4. ')' → logprob: -3.0624985694885254
    5. '()' → logprob: -4.062498569488525
    6. '(' → logprob: -9.812498092651367
    7. '()))
' → logprob: -9.812498092651367
    8. '()));' → logprob: -10.937498092651367
    9. '())
' → logprob: -11.812498092651367
    10. '()),' → logprob: -12.187498092651367

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20606349408626556
    2. '
' → logprob: -2.3310635089874268
    3. '    
' → logprob: -2.4560635089874268
    4. ')' → logprob: -6.831063270568848
    5. 'result' → logprob: -6.956063270568848
    6. '```' → logprob: -8.081063270568848
    7. 'sorted' → logprob: -9.081063270568848
    8. ')
' → logprob: -9.206063270568848
    9. '    
    
' → logprob: -9.456063270568848
    10. 'def' → logprob: -9.581063270568848

Token 43: ' #' (ID: 1069)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.32662948966026306
    2. 'C' → logprob: -2.826629400253296
    3. 'result' → logprob: -3.326629400253296
    4. 'sorted' → logprob: -3.951629400253296
    5. 'combined' → logprob: -3.951629400253296
    6. 'pair' → logprob: -4.576629638671875
    7. 'dp' → logprob: -4.576629638671875
    8. 'ans' → logprob: -4.576629638671875
    9. 'paired' → logprob: -4.701629638671875
    10. 'idx' → logprob: -4.826629638671875

Token 44: ' Gén' (ID: 71828)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -1.706270694732666
    2. ' sorted' → logprob: -1.831270694732666
    3. ' pairs' → logprob: -1.956270694732666
    4. ' res' → logprob: -2.081270694732666
    5. ' max' → logprob: -2.956270694732666
    6. ' answer' → logprob: -3.081270694732666
    7. ' ans' → logprob: -3.081270694732666
    8. ' min' → logprob: -3.206270694732666
    9. ' best' → logprob: -3.456270694732666
    10. ' diff' → logprob: -4.081270694732666

Token 45: 'érer' (ID: 29097)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.6381250023841858
    2. 'érer' → logprob: -0.7631250023841858
    3. 'éral' → logprob: -6.138124942779541
    4. 'ération' → logprob: -6.638124942779541
    5. 'érateur' → logprob: -7.638124942779541
    6. 'érale' → logprob: -8.1381254196167
    7. 'ère' → logprob: -8.5131254196167
    8. '   ' → logprob: -8.5131254196167
    9. 'ér' → logprob: -8.7631254196167
    10. 'éralement' → logprob: -9.2631254196167

Token 46: ' toutes' (ID: 17502)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.09072776883840561
    2. 'all' → logprob: -2.8407278060913086
    3. ' permutations' → logprob: -4.090727806091309
    4. ' pairs' → logprob: -5.090727806091309
    5. ' toutes' → logprob: -5.840727806091309
    6. ' combinations' → logprob: -6.965727806091309
    7. 'pairs' → logprob: -7.465727806091309
    8. ' a' → logprob: -8.840727806091309
    9. ' la' → logprob: -8.965727806091309
    10. ' tuples' → logprob: -9.465727806091309

Token 47: ' les' (ID: 1341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0317520834505558
    2. ' permutations' → logprob: -4.656752109527588
    3. '()' → logprob: -5.031752109527588
    4. '(com' → logprob: -5.406752109527588
    5. ' combinations' → logprob: -5.531752109527588
    6. '(range' → logprob: -6.781752109527588
    7. '(len' → logprob: -6.906752109527588
    8. '([' → logprob: -7.031752109527588
    9. 'com' → logprob: -7.156752109527588
    10. '('' → logprob: -7.281752109527588

Token 48: ' permutations' (ID: 174595)
  Prédit: ' permutations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.47842562198638916
    2. 'per' → logprob: -1.2284256219863892
    3. 'p' → logprob: -2.9784255027770996
    4. ' p' → logprob: -4.3534255027771
    5. 'com' → logprob: -5.2284255027771
    6. 'poss' → logprob: -5.4784255027771
    7. 'comb' → logprob: -5.6034255027771
    8. 'perm' → logprob: -5.9784255027771
    9. ' comb' → logprob: -5.9784255027771
    10. 'indices' → logprob: -6.2284255027771

Token 49: ' inutil' (ID: 154055)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1245136708021164
    2. 'from' → logprob: -2.499513626098633
    3. 'import' → logprob: -3.624513626098633
    4. ' from' → logprob: -5.999513626098633
    5. ',' → logprob: -6.624513626098633
    6. '   ' → logprob: -6.874513626098633
    7. 'A' → logprob: -7.249513626098633
    8. ' (' → logprob: -7.624513626098633
    9. 'for' → logprob: -8.124513626098633
    10. ':' → logprob: -8.499513626098633

Token 50: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.021594174206256866
    2. 'is' → logprob: -4.646594047546387
    3. 'isées' → logprob: -5.521594047546387
    4. 'aires' → logprob: -6.146594047546387
    5. 't' → logprob: -6.271594047546387
    6. 's' → logprob: -7.396594047546387
    7. 'ales' → logprob: -7.771594047546387
    8. 'e' → logprob: -7.771594047546387
    9. 'ess' → logprob: -7.896594047546387
    10. 'itaires' → logprob: -8.021594047546387

Token 51: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5469667911529541
    2. ',' → logprob: -1.796966791152954
    3. 'for' → logprob: -2.171966791152954
    4. 'import' → logprob: -2.421966791152954
    5. 'from' → logprob: -4.296966552734375
    6. ' for' → logprob: -4.796966552734375
    7. ':' → logprob: -5.046966552734375
    8. '#' → logprob: -5.421966552734375
    9. ')' → logprob: -5.671966552734375
    10. 'def' → logprob: -5.796966552734375

Token 52: ' listes' (ID: 179198)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.46769121289253235
    2. 'A' → logprob: -1.84269118309021
    3. 'range' → logprob: -2.09269118309021
    4. ' range' → logprob: -2.46769118309021
    5. '(range' → logprob: -5.592691421508789
    6. 'l' → logprob: -7.342691421508789
    7. ' B' → logprob: -7.467691421508789
    8. 's' → logprob: -7.967691421508789
    9. 'B' → logprob: -8.092691421508789
    10. ' la' → logprob: -8.467691421508789

Token 53: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09611114859580994
    2. 'import' → logprob: -3.4711110591888428
    3. 'def' → logprob: -4.221111297607422
    4. ',' → logprob: -4.346111297607422
    5. 'from' → logprob: -4.721111297607422
    6. 's' → logprob: -4.846111297607422
    7. 'A' → logprob: -5.596111297607422
    8. '(
' → logprob: -5.721111297607422
    9. ')' → logprob: -6.221111297607422
    10. 'for' → logprob: -6.846111297607422

Token 54: ' les' (ID: 1341)
  Prédit: ' permutations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.7912258505821228
    2. '<|end|>' → logprob: -2.0412259101867676
    3. ' ' → logprob: -2.6662259101867676
    4. '    ' → logprob: -3.0412259101867676
    5. ' #' → logprob: -3.0412259101867676
    6. '   ' → logprob: -3.1662259101867676
    7. ' but' → logprob: -3.4162259101867676
    8. '#' → logprob: -3.4162259101867676
    9. 'from' → logprob: -4.041225910186768
    10. ' mais' → logprob: -4.166225910186768

Token 55: ' ranger' (ID: 121208)
  Prédit: ' permutations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -1.1074254512786865
    2. ' zip' → logprob: -2.1074254512786865
    3. ' indices' → logprob: -2.3574254512786865
    4. 'zip' → logprob: -2.7324254512786865
    5. ' perm' → logprob: -2.9824254512786865
    6. ' comb' → logprob: -3.1074254512786865
    7. 'quel' → logprob: -3.6074254512786865
    8. ' z' → logprob: -3.6074254512786865
    9. 'indices' → logprob: -3.8574254512786865
    10. 'qu' → logprob: -3.8574254512786865

Token 56: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07601585984230042
    2. ',' → logprob: -3.5760159492492676
    3. 's' → logprob: -3.9510159492492676
    4. '(
' → logprob: -4.826015949249268
    5. 'A' → logprob: -5.451015949249268
    6. '_' → logprob: -5.826015949249268
    7. '('' → logprob: -6.826015949249268
    8. '(sorted' → logprob: -6.826015949249268
    9. 'es' → logprob: -7.076015949249268
    10. 'import' → logprob: -7.201015949249268

Token 57: ' tuples' (ID: 112464)
  Prédit: ' tuples'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuples' → logprob: -0.630476176738739
    2. ' a' → logprob: -2.380476236343384
    3. 'list' → logprob: -3.005476236343384
    4. 'tu' → logprob: -3.630476236343384
    5. ' sorted' → logprob: -3.755476236343384
    6. 'a' → logprob: -3.755476236343384
    7. '[]' → logprob: -3.880476236343384
    8. ' list' → logprob: -4.255475997924805
    9. 'sorted' → logprob: -4.380475997924805
    10. 'liste' → logprob: -4.380475997924805

Token 58: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6406082510948181
    2. '(' → logprob: -1.390608310699463
    3. 'import' → logprob: -2.515608310699463
    4. '   ' → logprob: -3.015608310699463
    5. ')' → logprob: -3.140608310699463
    6. ' ' → logprob: -4.265608310699463
    7. 's' → logprob: -5.015608310699463
    8. 'from' → logprob: -5.640608310699463
    9. 'def' → logprob: -5.890608310699463
    10. ' (' → logprob: -6.015608310699463

Token 59: 'pour' (ID: 52723)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34037286043167114
    2. ',' → logprob: -1.3403728008270264
    3. ',)' → logprob: -4.5903730392456055
    4. '   ' → logprob: -5.2153730392456055
    5. 'import' → logprob: -6.2153730392456055
    6. '(' → logprob: -6.2153730392456055
    7. 'A' → logprob: -6.3403730392456055
    8. ' )' → logprob: -6.8403730392456055
    9. '),' → logprob: -7.3403730392456055
    10. ' ,' → logprob: -7.4653730392456055

Token 60: ' "' (ID: 392)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.890019416809082
    2. 'être' → logprob: -1.765019416809082
    3. 'hash' → logprob: -2.515019416809082
    4. ')' → logprob: -2.640019416809082
    5. ' pouvoir' → logprob: -2.765019416809082
    6. 'les' → logprob: -3.265019416809082
    7. 'util' → logprob: -3.515019416809082
    8. 'le' → logprob: -3.890019416809082
    9. 'la' → logprob: -4.515019416809082
    10. 'leur' → logprob: -4.515019416809082

Token 61: 'él' (ID: 6778)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.6349482536315918
    2. 'util' → logprob: -1.8849482536315918
    3. 'être' → logprob: -2.509948253631592
    4. 'p' → logprob: -2.884948253631592
    5. 'set' → logprob: -3.634948253631592
    6. 're' → logprob: -3.634948253631592
    7. ' pouvoir' → logprob: -3.759948253631592
    8. ' hash' → logprob: -3.884948253631592
    9. ' être' → logprob: -4.384948253631592
    10. ')' → logprob: -4.884948253631592

Token 62: 'ég' (ID: 6634)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.4046024084091187
    2. 'ev' → logprob: -1.7796024084091187
    3. 'ever' → logprob: -2.654602527618408
    4. 'em' → logprob: -2.779602527618408
    5. 'v' → logprob: -3.029602527618408
    6. 'er' → logprob: -3.529602527618408
    7. 'ève' → logprob: -3.529602527618408
    8. 'ver' → logprob: -3.654602527618408
    9. 'ement' → logprob: -3.654602527618408
    10. 'ément' → logprob: -3.904602527618408

Token 63: 'ance' (ID: 766)
  Prédit: 'ance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.02460460551083088
    2. 'g' → logprob: -4.399604797363281
    3. 'quence' → logprob: -5.774604797363281
    4. 'gence' → logprob: -5.899604797363281
    5. 'nance' → logprob: -7.149604797363281
    6. 'ence' → logprob: -7.399604797363281
    7. 'l' → logprob: -8.024604797363281
    8. 'rance' → logprob: -8.337104797363281
    9. 'gn' → logprob: -8.524604797363281
    10. '```' → logprob: -8.587104797363281

Token 64: '"),' (ID: 7645)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3293622136116028
    2. '")' → logprob: -1.454362154006958
    3. ',' → logprob: -3.579362154006958
    4. ' )' → logprob: -5.079362392425537
    5. '",' → logprob: -5.329362392425537
    6. ')")' → logprob: -5.454362392425537
    7. 'et' → logprob: -6.829362392425537
    8. '"' → logprob: -7.329362392425537
    9. '()' → logprob: -8.079361915588379
    10. ' et' → logprob: -8.204361915588379

Token 65: ' puis' (ID: 18766)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.9580681920051575
    2. '   ' → logprob: -1.4580681324005127
    3. ' permutations' → logprob: -2.8330681324005127
    4. ' ' → logprob: -2.9580681324005127
    5. ' and' → logprob: -3.2080681324005127
    6. ')' → logprob: -3.2080681324005127
    7. ' sorted' → logprob: -3.7080681324005127
    8. ' )' → logprob: -3.7080681324005127
    9. ' ,' → logprob: -3.8330681324005127
    10. ' et' → logprob: -4.208068370819092

Token 66: ' extra' (ID: 5018)
  Prédit: ' sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.3249227702617645
    2. 'sorted' → logprob: -1.824922800064087
    3. ' tr' → logprob: -3.949922800064087
    4. ' les' → logprob: -4.199922561645508
    5. '   ' → logprob: -4.324922561645508
    6. ' filter' → logprob: -4.449922561645508
    7. 'sort' → logprob: -4.574922561645508
    8. ' sort' → logprob: -4.699922561645508
    9. 'filter' → logprob: -5.574922561645508
    10. ' reduce' → logprob: -5.699922561645508

Token 67: 'ire' (ID: 594)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.020003708079457283
    2. 'ire' → logprob: -4.520003795623779
    3. 'm' → logprob: -6.645003795623779
    4. 'cter' → logprob: -7.020003795623779
    5. '```' → logprob: -7.145003795623779
    6. 'cts' → logprob: -7.145003795623779
    7. 'c' → logprob: -7.270003795623779
    8. 'it' → logprob: -7.520003795623779
    9. 'ctor' → logprob: -7.832503795623779
    10. 'cut' → logprob: -7.895003795623779

Token 68: ' comme' (ID: 7971)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8971066474914551
    2. 'max' → logprob: -1.647106647491455
    3. 'all' → logprob: -2.022106647491455
    4. ')' → logprob: -2.897106647491455
    5. '()' → logprob: -3.272106647491455
    6. 'les' → logprob: -3.897106647491455
    7. ' (' → logprob: -4.272106647491455
    8. ' les' → logprob: -4.647106647491455
    9. 'le' → logprob: -4.647106647491455
    10. '(max' → logprob: -4.897106647491455

Token 69: ' set' (ID: 920)
  Prédit: ' tuples'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tuples' → logprob: -1.7138924598693848
    2. ' sets' → logprob: -2.3388924598693848
    3. 'des' → logprob: -2.4638924598693848
    4. 'min' → logprob: -2.4638924598693848
    5. ' permutations' → logprob: -2.5888924598693848
    6. ' des' → logprob: -2.7138924598693848
    7. 'tu' → logprob: -3.2138924598693848
    8. ' keys' → logprob: -3.5888924598693848
    9. 'key' → logprob: -3.5888924598693848
    10. ' key' → logprob: -3.7138924598693848

Token 70: ' pour' (ID: 1930)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005936859175562859
    2. '(
' → logprob: -5.380936622619629
    3. 's' → logprob: -7.630936622619629
    4. '()' → logprob: -8.380936622619629
    5. '(set' → logprob: -8.880936622619629
    6. ')' → logprob: -9.255936622619629
    7. ',' → logprob: -9.505936622619629
    8. '(A' → logprob: -10.255936622619629
    9. 'A' → logprob: -10.505936622619629
    10. 'per' → logprob: -10.630936622619629

Token 71: ' une' (ID: 2463)
  Prédit: ' élim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' élim' → logprob: -0.19563819468021393
    2. ' supprimer' → logprob: -2.4456381797790527
    3. ' enlever' → logprob: -2.9456381797790527
    4. ' éviter' → logprob: -4.320638179779053
    5. 'é' → logprob: -5.445638179779053
    6. ' retirer' → logprob: -6.070638179779053
    7. ' eliminar' → logprob: -6.070638179779053
    8. 'el' → logprob: -6.070638179779053
    9. ' obtenir' → logprob: -6.195638179779053
    10. ' elim' → logprob: -6.320638179779053

Token 72: ' vér' (ID: 42524)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: 'if' (ID: 366)
  Prédit: 'ification'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ification' → logprob: -0.05121885612607002
    2. 'ifier' → logprob: -3.5512187480926514
    3. 'if' → logprob: -4.5512189865112305
    4. 'ifie' → logprob: -5.5512189865112305
    5. 'acité' → logprob: -6.0512189865112305
    6. 'ité' → logprob: -6.9262189865112305
    7. 'i' → logprob: -7.4262189865112305
    8. 'ifi' → logprob: -7.4262189865112305
    9. 'ifié' → logprob: -8.17621898651123
    10. 'ication' → logprob: -8.42621898651123

Token 74: ' inutile' (ID: 157748)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5566626787185669
    2. 'e' → logprob: -1.056662678718567
    3. 'es' → logprob: -3.1816625595092773
    4. 'i' → logprob: -4.556662559509277
    5. 'ion' → logprob: -5.681662559509277
    6. ' e' → logprob: -5.806662559509277
    7. ' ' → logprob: -5.931662559509277
    8. 'if' → logprob: -6.181662559509277
    9. 'cation' → logprob: -6.431662559509277
    10. ')' → logprob: -6.556662559509277

Token 75: 'ment' (ID: 508)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9678804874420166
    2. ' ' → logprob: -1.7178804874420166
    3. ',' → logprob: -2.0928804874420166
    4. ')' → logprob: -2.0928804874420166
    5. 'A' → logprob: -3.3428804874420166
    6. '   ' → logprob: -3.7178804874420166
    7. 's' → logprob: -4.0928802490234375
    8. ':' → logprob: -4.2178802490234375
    9. ' (' → logprob: -4.3428802490234375
    10. 'import' → logprob: -4.8428802490234375

Token 76: ' complexe' (ID: 78615)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1481804996728897
    2. ')' → logprob: -3.0231804847717285
    3. 's' → logprob: -3.3981804847717285
    4. ',' → logprob: -4.0231804847717285
    5. '(
' → logprob: -4.3981804847717285
    6. '_' → logprob: -4.5231804847717285
    7. '()' → logprob: -6.5231804847717285
    8. 'per' → logprob: -6.6481804847717285
    9. 'def' → logprob: -7.0231804847717285
    10. ' permutations' → logprob: -7.0231804847717285

Token 77: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7070393562316895
    2. ',' → logprob: -1.4570393562316895
    3. ' ' → logprob: -2.7070393562316895
    4. '(' → logprob: -3.0820393562316895
    5. 'import' → logprob: -3.7070393562316895
    6. ' 
' → logprob: -4.2070393562316895
    7. ' permutations' → logprob: -4.4570393562316895
    8. 'per' → logprob: -4.5820393562316895
    9. '   ' → logprob: -4.5820393562316895
    10. ':' → logprob: -4.5820393562316895

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7103865146636963
    2. 'import' → logprob: -1.8353865146636963
    3. ')' → logprob: -2.2103865146636963
    4. ',' → logprob: -3.3353865146636963
    5. ' permutations' → logprob: -3.4603865146636963
    6. '
' → logprob: -3.5853865146636963
    7. 'from' → logprob: -3.5853865146636963
    8. 'per' → logprob: -3.7103865146636963
    9. ' ' → logprob: -3.8353865146636963
    10. '(' → logprob: -4.460386276245117

Token 79: ' A' (ID: 355)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.712555468082428
    2. ' permutations' → logprob: -1.4625554084777832
    3. ' perms' → logprob: -2.337555408477783
    4. '   ' → logprob: -3.087555408477783
    5. 'import' → logprob: -3.087555408477783
    6. ' from' → logprob: -3.587555408477783
    7. 'from' → logprob: -3.712555408477783
    8. ' perm' → logprob: -4.462555408477783
    9. 'all' → logprob: -5.337555408477783
    10. ' all' → logprob: -5.712555408477783

Token 80: '2' (ID: 17)
  Prédit: '_per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.028021853417158127
    2. ' =' → logprob: -4.778021812438965
    3. 'per' → logprob: -5.528021812438965
    4. '_' → logprob: -5.528021812438965
    5. ' permutations' → logprob: -5.528021812438965
    6. '_perm' → logprob: -5.903021812438965
    7. '=' → logprob: -6.528021812438965
    8. '_s' → logprob: -7.028021812438965
    9. 's' → logprob: -7.528021812438965
    10. '_sorted' → logprob: -7.903021812438965

Token 81: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16814802587032318
    2. '_per' → logprob: -2.1681480407714844
    3. '=' → logprob: -3.5431480407714844
    4. ' permutations' → logprob: -5.293148040771484
    5. '_' → logprob: -5.918148040771484
    6. 'per' → logprob: -6.418148040771484
    7. 's' → logprob: -7.043148040771484
    8. '_perm' → logprob: -8.043148040771484
    9. ',' → logprob: -8.543148040771484
    10. ' ' → logprob: -8.668148040771484

Token 82: ' sorted' (ID: 20099)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.2068420946598053
    2. 'set' → logprob: -1.706842064857483
    3. ' list' → logprob: -6.206841945648193
    4. '{' → logprob: -6.706841945648193
    5. ' {' → logprob: -6.956841945648193
    6. ' tuple' → logprob: -7.956841945648193
    7. 'list' → logprob: -8.206842422485352
    8. ' sorted' → logprob: -8.706842422485352
    9. 'sorted' → logprob: -8.831842422485352
    10. 'tuple' → logprob: -8.956842422485352

Token 83: '(A' (ID: 10706)
  Prédit: '(set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(set' → logprob: -0.1078953668475151
    2. '(tuple' → logprob: -3.1078953742980957
    3. '({' → logprob: -3.7328953742980957
    4. '(' → logprob: -4.357895374298096
    5. '(list' → logprob: -4.732895374298096
    6. '(per' → logprob: -5.232895374298096
    7. '([' → logprob: -5.482895374298096
    8. '((' → logprob: -6.982895374298096
    9. 'set' → logprob: -7.357895374298096
    10. '(sorted' → logprob: -8.232894897460938

Token 84: ')
' (ID: 446)
  Prédit: ' permutations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.8833060264587402
    2. ')' → logprob: -1.0083060264587402
    3. '))' → logprob: -2.0083060264587402
    4. ',' → logprob: -2.6333060264587402
    5. '),' → logprob: -5.50830602645874
    6. ')))' → logprob: -6.13330602645874
    7. ',)' → logprob: -6.50830602645874
    8. 'per' → logprob: -7.13330602645874
    9. ' permutation' → logprob: -7.13330602645874
    10. 'Permutation' → logprob: -7.25830602645874

Token 85: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: ' B' (ID: 418)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.188625454902649
    2. 'A' → logprob: -2.0636253356933594
    3. ' permutations' → logprob: -2.0636253356933594
    4. 'B' (adapté à ' B') → logprob: -2.4386253356933594
    5. '
' → logprob: -2.4386253356933594
    6. ')' → logprob: -2.5636253356933594
    7. '<|end|>' → logprob: -3.0636253356933594
    8. '   ' → logprob: -3.8136253356933594
    9. ',
' → logprob: -4.313625335693359
    10. '2' → logprob: -4.438625335693359

Token 87: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008975276723504066
    2. ' =' → logprob: -7.750897407531738
    3. '_sorted' → logprob: -8.250897407531738
    4. '=' → logprob: -9.000897407531738
    5. 'sorted' → logprob: -10.375897407531738
    6. '_' → logprob: -10.375897407531738
    7. '.sort' → logprob: -11.500897407531738
    8. 'sort' → logprob: -13.250897407531738
    9. 's' → logprob: -13.375897407531738
    10. '_s' → logprob: -14.313397407531738

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740796387195587
    2. '=' → logprob: -0.9740796089172363
    3. 'sorted' → logprob: -13.974080085754395
    4. '＝' → logprob: -14.974080085754395
    5. ')' → logprob: -15.099080085754395
    6. '_sorted' → logprob: -15.724080085754395
    7. ' ' → logprob: -15.724080085754395
    8. ',' → logprob: -15.974080085754395
    9. '.sort' → logprob: -15.974080085754395
    10. '.=' → logprob: -16.099079132080078

Token 89: ' sorted' (ID: 20099)
  Prédit: ' sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.31337404251098633
    2. 'sorted' → logprob: -1.3133740425109863
    3. ' tuple' → logprob: -10.938373565673828
    4. ' list' → logprob: -11.188373565673828
    5. '(sorted' → logprob: -11.188373565673828
    6. '   ' → logprob: -11.313373565673828
    7. ' ' → logprob: -11.563373565673828
    8. 'set' → logprob: -11.688373565673828
    9. ' set' → logprob: -11.688373565673828
    10. 'tuple' → logprob: -12.063373565673828

Token 90: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.0036061247810721397
    2. '(' → logprob: -5.62860631942749
    3. '(A' → logprob: -13.253605842590332
    4. 'B' → logprob: -13.878605842590332
    5. '(
' → logprob: -13.878605842590332
    6. '(b' → logprob: -14.253605842590332
    7. ')' → logprob: -14.378605842590332
    8. '((' → logprob: -14.503605842590332
    9. ' (' → logprob: -16.00360679626465
    10. '(

' → logprob: -16.12860679626465

Token 91: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011129142512800172
    2. ' )' → logprob: -9.87511157989502
    3. '))' → logprob: -10.25011157989502
    4. ')
' → logprob: -10.87511157989502
    5. ')

' → logprob: -13.37511157989502
    6. ')))' → logprob: -14.25011157989502
    7. ',' → logprob: -14.25011157989502
    8. '())' → logprob: -14.87511157989502
    9. ')}' → logprob: -15.37511157989502
    10. '()' → logprob: -15.37511157989502

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23874709010124207
    2. '
' → logprob: -2.2387471199035645
    3. ')' → logprob: -3.4887471199035645
    4. '    
' → logprob: -3.9887471199035645
    5. 'for' → logprob: -4.2387471199035645
    6. 'def' → logprob: -4.6137471199035645
    7. 'if' → logprob: -4.8637471199035645
    8. '<|end|>' → logprob: -5.4887471199035645
    9. ')
' → logprob: -5.7387471199035645
    10. ',' → logprob: -5.9887471199035645

Token 93: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.244664430618286
    2. 'pairs' → logprob: -2.244664430618286
    3. 'best' → logprob: -2.369664430618286
    4. 'all' → logprob: -2.494664430618286
    5. 'min' → logprob: -2.744664430618286
    6. 'for' → logprob: -2.869664430618286
    7. 's' → logprob: -2.994664430618286
    8. 'A' → logprob: -3.119664430618286
    9. 'per' → logprob: -3.119664430618286
    10. 'res' → logprob: -3.494664430618286

Token 94: ' Util' (ID: 13564)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.797730565071106
    2. 'if' → logprob: -2.5477304458618164
    3. ' for' → logprob: -2.7977304458618164
    4. 'pairs' → logprob: -2.7977304458618164
    5. ' if' → logprob: -2.9227304458618164
    6. ' res' → logprob: -3.0477304458618164
    7. 'min' → logprob: -3.1727304458618164
    8. '#' → logprob: -3.4227304458618164
    9. ' permutations' → logprob: -3.4227304458618164
    10. ' pairs' → logprob: -3.4227304458618164

Token 95: 'ise' (ID: 1096)
  Prédit: 'iser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.3602093756198883
    2. 'er' → logprob: -1.985209345817566
    3. 'isateur' → logprob: -2.3602094650268555
    4. 'érer' → logprob: -3.4852094650268555
    5. '```' → logprob: -4.3602094650268555
    6. 'isez' → logprob: -4.7352094650268555
    7. 'isation' → logprob: -5.7352094650268555
    8. 'isé' → logprob: -5.8602094650268555
    9. '#' → logprob: -5.8602094650268555
    10. 'izer' → logprob: -6.7352094650268555

Token 96: ' zip' (ID: 16216)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01117219403386116
    2. ' ' → logprob: -5.386172294616699
    3. '   ' → logprob: -6.386172294616699
    4. '(' → logprob: -6.511172294616699
    5. ' r' → logprob: -6.886172294616699
    6. 's' → logprob: -7.386172294616699
    7. 'er' → logprob: -7.761172294616699
    8. ' (' → logprob: -8.6361722946167
    9. ':' → logprob: -9.1361722946167
    10. '  ' → logprob: -9.2611722946167

Token 97: ' +' (ID: 659)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06511133909225464
    2. '(A' → logprob: -2.8151113986968994
    3. '(
' → logprob: -5.94011116027832
    4. '(B' → logprob: -8.44011116027832
    5. '   ' → logprob: -8.81511116027832
    6. ')' → logprob: -10.06511116027832
    7. '(sorted' → logprob: -10.94011116027832
    8. '((' → logprob: -11.44011116027832
    9. '(

' → logprob: -11.56511116027832
    10. 'for' → logprob: -11.69011116027832

Token 98: ' enumerate' (ID: 29671)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.4548490047454834
    2. 'reduce' → logprob: -1.8298490047454834
    3. 'sorted' → logprob: -2.7048490047454834
    4. ' map' → logprob: -3.2048490047454834
    5. 'sum' → logprob: -3.5798490047454834
    6. 'filter' → logprob: -3.9548490047454834
    7. 'item' → logprob: -4.4548492431640625
    8. 'min' → logprob: -4.5798492431640625
    9. 'max' → logprob: -4.5798492431640625
    10. 'enumer' → logprob: -5.4548492431640625

Token 99: ' +' (ID: 659)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007678792346268892
    2. '(
' → logprob: -5.132678985595703
    3. '(A' → logprob: -6.757678985595703
    4. 'for' → logprob: -8.257678985595703
    5. '   ' → logprob: -9.257678985595703
    6. '()' → logprob: -9.757678985595703
    7. '(zip' → logprob: -10.257678985595703
    8. ' for' → logprob: -10.507678985595703
    9. '(range' → logprob: -11.132678985595703
    10. '((' → logprob: -11.257678985595703

Token 100: ' all' (ID: 722)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -1.2455790042877197
    2. 'filter' → logprob: -1.9955790042877197
    3. 'list' → logprob: -2.1205790042877197
    4. 'sum' → logprob: -2.3705790042877197
    5. 'map' → logprob: -2.6205790042877197
    6. ' list' → logprob: -2.6205790042877197
    7. 'sorted' → logprob: -2.9955790042877197
    8. ' map' → logprob: -2.9955790042877197
    9. 'min' → logprob: -3.6205790042877197
    10. ' filter' → logprob: -3.6205790042877197

Token 101: ' combin' (ID: 25307)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023369282484054565
    2. '(
' → logprob: -3.898369312286377
    3. '   ' → logprob: -6.398369312286377
    4. '(A' → logprob: -7.398369312286377
    5. 'for' → logprob: -9.148368835449219
    6. '((' → logprob: -9.648368835449219
    7. ',' → logprob: -10.148368835449219
    8. ' for' → logprob: -10.398368835449219
    9. '(range' → logprob: -10.398368835449219
    10. '([' → logprob: -10.523368835449219

Token 102: 'ées' (ID: 5161)
  Prédit: 'ations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.037470731884241104
    2. 'e' → logprob: -3.787470817565918
    3. '```' → logprob: -4.662470817565918
    4. 'a' → logprob: -6.412470817565918
    5. 'ais' → logprob: -7.662470817565918
    6. '   ' → logprob: -8.162470817565918
    7. 'ed' → logprob: -8.287470817565918
    8. 'ation' → logprob: -8.537470817565918
    9. 'at' → logprob: -8.537470817565918
    10. 'er' → logprob: -8.787470817565918

Token 103: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.025872787460684776
    2. '(
' → logprob: -4.025872707366943
    3. '   ' → logprob: -5.400872707366943
    4. ',' → logprob: -6.900872707366943
    5. 'for' → logprob: -7.150872707366943
    6. ' for' → logprob: -8.275873184204102
    7. '(A' → logprob: -8.400873184204102
    8. ':' → logprob: -8.775873184204102
    9. ' (' → logprob: -9.025873184204102
    10. '.' → logprob: -9.400873184204102

Token 104: ' une' (ID: 2463)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.1101192906498909
    2. ' lambda' → logprob: -2.610119342803955
    3. 'map' → logprob: -4.235119342803955
    4. 'filter' → logprob: -6.110119342803955
    5. 'list' → logprob: -6.235119342803955
    6. 'zip' → logprob: -6.360119342803955
    7. 'la' → logprob: -6.610119342803955
    8. 'len' → logprob: -6.610119342803955
    9. 'l' → logprob: -6.985119342803955
    10. '(lambda' → logprob: -7.110119342803955

Token 105: ' fonction' (ID: 17610)
  Prédit: ' comprehension'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' comprehension' → logprob: -0.8515763282775879
    2. ')' → logprob: -1.726576328277588
    3. 'com' → logprob: -2.351576328277588
    4. ' combinaison' → logprob: -2.851576328277588
    5. ' compréhension' → logprob: -3.476576328277588
    6. '(' → logprob: -3.726576328277588
    7. 'generator' → logprob: -3.851576328277588
    8. '(
' → logprob: -4.101576328277588
    9. ' generator' → logprob: -4.351576328277588
    10. 'lambda' → logprob: -4.351576328277588

Token 106: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -1.546946406364441
    2. 'def' → logprob: -1.796946406364441
    3. ' lambda' → logprob: -1.921946406364441
    4. 'filter' → logprob: -2.2969465255737305
    5. 'min' → logprob: -2.7969465255737305
    6. ')' → logprob: -3.4219465255737305
    7. '(lambda' → logprob: -3.4219465255737305
    8. ' filter' → logprob: -3.7969465255737305
    9. 'max' → logprob: -3.9219465255737305
    10. ' with' → logprob: -3.9219465255737305

Token 107: ' inline' (ID: 15905)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21560543775558472
    2. '(lambda' → logprob: -1.9656054973602295
    3. '(
' → logprob: -3.3406054973602295
    4. '   ' → logprob: -4.21560525894165
    5. 'lambda' → logprob: -7.46560525894165
    6. ',' → logprob: -7.71560525894165
    7. ')' → logprob: -7.84060525894165
    8. ':' → logprob: -7.96560525894165
    9. ' for' → logprob: -8.340605735778809
    10. '(A' → logprob: -8.590605735778809

Token 108: ' pour' (ID: 1930)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6377087235450745
    2. '   ' → logprob: -1.0127086639404297
    3. '(lambda' → logprob: -3.0127086639404297
    4. ':' → logprob: -4.01270866394043
    5. '(
' → logprob: -4.26270866394043
    6. ',' → logprob: -4.88770866394043
    7. ' for' → logprob: -5.63770866394043
    8. '(zip' → logprob: -5.88770866394043
    9. '((' → logprob: -6.26270866394043
    10. '(A' → logprob: -6.63770866394043

Token 109: ' impos' (ID: 12130)
  Prédit: ' vérifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vérifier' → logprob: -0.20644450187683105
    2. 'v' → logprob: -2.831444501876831
    3. 'tr' → logprob: -3.831444501876831
    4. 'val' → logprob: -4.45644474029541
    5. ' comparer' → logprob: -4.45644474029541
    6. ' val' → logprob: -4.58144474029541
    7. 'max' → logprob: -5.20644474029541
    8. ' tr' → logprob: -5.20644474029541
    9. ' tester' → logprob: -5.83144474029541
    10. ' all' → logprob: -5.95644474029541

Token 110: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00037371189682744443
    2. 'rer' → logprob: -8.875373840332031
    3. 'e' → logprob: -9.500373840332031
    4. 'érer' → logprob: -10.125373840332031
    5. 'r' → logprob: -10.250373840332031
    6. 'ler' → logprob: -10.625373840332031
    7. 'ser' → logprob: -10.750373840332031
    8. 're' → logprob: -11.750373840332031
    9. 'erce' → logprob: -12.125373840332031
    10. '```' → logprob: -12.750373840332031

Token 111: ' la' (ID: 557)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.9936776757240295
    2. 'all' → logprob: -1.6186776161193848
    3. ' lambda' → logprob: -1.7436776161193848
    4. ' all' → logprob: -1.8686776161193848
    5. '   ' → logprob: -4.118677616119385
    6. 'not' → logprob: -4.118677616119385
    7. '(lambda' → logprob: -4.243677616119385
    8. ' la' → logprob: -4.368677616119385
    9. ' not' → logprob: -4.993677616119385
    10. 'len' → logprob: -5.118677616119385

Token 112: ' condition' (ID: 7060)
  Prédit: 'condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'condition' → logprob: -1.2063227891921997
    2. ' condition' → logprob: -1.4563227891921997
    3. 'égalité' → logprob: -2.83132266998291
    4. 'strict' → logprob: -3.20632266998291
    5. 'sym' → logprob: -3.45632266998291
    6. ' même' → logprob: -3.45632266998291
    7. 'co' → logprob: -3.95632266998291
    8. ' sens' → logprob: -4.20632266998291
    9. 'contr' → logprob: -4.20632266998291
    10. 'all' → logprob: -4.33132266998291

Token 113: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3443891406059265
    2. ':' → logprob: -2.0943892002105713
    3. '(' → logprob: -3.2193892002105713
    4. ' all' → logprob: -3.8443892002105713
    5. 'all' → logprob: -4.094388961791992
    6. ' (' → logprob: -4.344388961791992
    7. '(lambda' → logprob: -4.344388961791992
    8. '(
' → logprob: -5.219388961791992
    9. '```' → logprob: -5.219388961791992
    10. ',' → logprob: -5.344388961791992

Token 114: ' la' (ID: 557)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.0607004165649414
    2. 't' → logprob: -2.0607004165649414
    3. ' all' → logprob: -2.1857004165649414
    4. 'strict' → logprob: -3.1857004165649414
    5. 'max' → logprob: -3.1857004165649414
    6. 'len' → logprob: -3.4357004165649414
    7. 's' → logprob: -3.6857004165649414
    8. 'l' → logprob: -3.6857004165649414
    9. 'not' → logprob: -3.8107004165649414
    10. 'a' → logprob: -4.185700416564941

Token 115: ' première' (ID: 23423)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.4482141733169556
    2. 'égalité' → logprob: -2.323214054107666
    3. 'per' → logprob: -2.448214054107666
    4. 'all' → logprob: -2.698214054107666
    5. 'long' → logprob: -2.823214054107666
    6. 'val' → logprob: -2.948214054107666
    7. 'max' → logprob: -3.448214054107666
    8. 'non' → logprob: -3.573214054107666
    9. 'compar' → logprob: -3.573214054107666
    10. 'sum' → logprob: -3.823214054107666

Token 116: ' boucle' (ID: 174211)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -1.9777567386627197
    2. 'all' → logprob: -2.2277567386627197
    3. '(' → logprob: -2.3527567386627197
    4. 'condition' → logprob: -2.4777567386627197
    5. ')' → logprob: -2.7277567386627197
    6. ' condition' → logprob: -2.8527567386627197
    7. 'position' → logprob: -3.2277567386627197
    8. ' all' → logprob: -3.3527567386627197
    9. 'min' → logprob: -3.8527567386627197
    10. 'for' → logprob: -3.8527567386627197

Token 117: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.46916821599006653
    2. ':' → logprob: -1.0941681861877441
    3. ')' → logprob: -4.469168186187744
    4. ',' → logprob: -4.844168186187744
    5. '(
' → logprob: -4.969168186187744
    6. '(lambda' → logprob: -5.844168186187744
    7. '   ' → logprob: -5.969168186187744
    8. '):' → logprob: -6.094168186187744
    9. ' :' → logprob: -6.344168186187744
    10. '(:' → logprob: -7.469168186187744

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0786224901676178
    2. ':' → logprob: -2.953622579574585
    3. '(' → logprob: -5.078622341156006
    4. ',' → logprob: -5.578622341156006
    5. ' :' → logprob: -5.953622341156006
    6. '):' → logprob: -5.953622341156006
    7. ')' → logprob: -6.078622341156006
    8. '(
' → logprob: -6.828622341156006
    9. ':
' → logprob: -6.953622341156006
    10. '    
' → logprob: -7.078622341156006

Token 119: ' f' (ID: 285)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3625754415988922
    2. ' result' → logprob: -2.7375755310058594
    3. 'for' → logprob: -2.9875755310058594
    4. 'result' → logprob: -3.1125755310058594
    5. ' return' → logprob: -3.3625755310058594
    6. '   ' → logprob: -3.6125755310058594
    7. ' if' → logprob: -3.7375755310058594
    8. ' all' → logprob: -4.487575531005859
    9. ' res' → logprob: -5.112575531005859
    10. 'all' → logprob: -5.362575531005859

Token 120: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6032373309135437
    2. 'or' → logprob: -1.4782373905181885
    3. 'ilter' → logprob: -1.7282373905181885
    4. '=' → logprob: -3.6032373905181885
    5. 'unc' → logprob: -4.853237152099609
    6. '=lambda' → logprob: -5.228237152099609
    7. 'inal' → logprob: -7.353237152099609
    8. '_' → logprob: -7.478237152099609
    9. 'ilt' → logprob: -7.603237152099609
    10. 'i' → logprob: -7.728237152099609

Token 121: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.1286451369524002
    2. ' lambda' → logprob: -2.128645181655884
    3. '(lambda' → logprob: -7.003644943237305
    4. 'all' → logprob: -7.753644943237305
    5. ' all' → logprob: -8.503644943237305
    6. '   ' → logprob: -8.878644943237305
    7. '=lambda' → logprob: -11.628644943237305
    8. 'l' → logprob: -11.753644943237305
    9. ' lamb' → logprob: -12.503644943237305
    10. 'λ' → logprob: -12.753644943237305

Token 122: ':' (ID: 25)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5686278343200684
    2. ' x' → logprob: -1.0686278343200684
    3. 'x' → logprob: -3.8186278343200684
    4. 'i' → logprob: -4.068627834320068
    5. ' idx' → logprob: -4.193627834320068
    6. ' a' → logprob: -4.318627834320068
    7. '(i' → logprob: -5.318627834320068
    8. ' lambda' → logprob: -5.943627834320068
    9. 'a' → logprob: -6.068627834320068
    10. ' t' → logprob: -6.193627834320068

Token 123: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.018278121948242188
    2. ' all' → logprob: -4.018278121948242
    3. '   ' → logprob: -9.768278121948242
    4. 'reduce' → logprob: -11.018278121948242
    5. ' ' → logprob: -11.393278121948242
    6. 'not' → logprob: -11.518278121948242
    7. 'any' → logprob: -12.018278121948242
    8. '(all' → logprob: -12.143278121948242
    9. '  ' → logprob: -12.518278121948242
    10. 'len' → logprob: -12.518278121948242

Token 124: '(x' (ID: 4061)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.03742387890815735
    2. '(x' → logprob: -4.037424087524414
    3. '(' → logprob: -4.412424087524414
    4. '(i' → logprob: -5.912424087524414
    5. '(((' → logprob: -5.912424087524414
    6. '(a' → logprob: -7.787424087524414
    7. '(abs' → logprob: -8.037424087524414
    8. '(A' → logprob: -8.537424087524414
    9. '(
' → logprob: -8.912424087524414
    10. '(zip' → logprob: -9.037424087524414

Token 125: ' <=' (ID: 5017)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9728822708129883
    2. '[i' → logprob: -1.3478822708129883
    3. '==' → logprob: -2.0978822708129883
    4. ' ==' → logprob: -2.3478822708129883
    5. ' <=' → logprob: -3.5978822708129883
    6. '<=' → logprob: -3.5978822708129883
    7. ' <' → logprob: -4.222882270812988
    8. ',' → logprob: -4.472882270812988
    9. 'a' → logprob: -4.847882270812988
    10. 'y' → logprob: -5.347882270812988

Token 126: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.006766886916011572
    2. ' y' → logprob: -5.0067667961120605
    3. 'b' → logprob: -10.256767272949219
    4. '	y' → logprob: -12.631767272949219
    5. ' ' → logprob: -12.881767272949219
    6. 'B' → logprob: -13.631767272949219
    7. 'x' → logprob: -13.819267272949219
    8. ''y' → logprob: -14.256767272949219
    9. '   ' → logprob: -14.381767272949219
    10. ' b' → logprob: -14.631767272949219

Token 127: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3485369086265564
    2. 'for' → logprob: -1.2235369682312012
    3. '   ' → logprob: -10.223536491394043
    4. ' ' → logprob: -10.598536491394043
    5. ')' → logprob: -11.348536491394043
    6. '	for' → logprob: -12.348536491394043
    7. '  ' → logprob: -12.598536491394043
    8. ' or' → logprob: -13.098536491394043
    9. '(x' → logprob: -13.223536491394043
    10. '    ' → logprob: -13.473536491394043

Token 128: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.055168747901916504
    2. ' x' → logprob: -2.930168628692627
    3. '(x' → logprob: -8.930169105529785
    4. ',' → logprob: -9.180169105529785
    5. ' (' → logprob: -11.055169105529785
    6. ',x' → logprob: -11.680169105529785
    7. '(' → logprob: -12.055169105529785
    8. '	x' → logprob: -12.430169105529785
    9. 'y' → logprob: -12.555169105529785
    10. ' ' → logprob: -12.805169105529785

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08954772353172302
    2. ',y' → logprob: -2.464547634124756
    3. ' ,' → logprob: -8.089548110961914
    4. ',x' → logprob: -8.214548110961914
    5. ',
' → logprob: -11.839548110961914
    6. 'in' → logprob: -12.089548110961914
    7. 'y' → logprob: -12.714548110961914
    8. ' in' → logprob: -12.964548110961914
    9. ',n' → logprob: -13.464548110961914
    10. ',s' → logprob: -13.714548110961914

Token 130: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.8134133219718933
    2. ' zip' → logprob: -1.313413381576538
    3. 'y' → logprob: -1.563413381576538
    4. ' z' → logprob: -3.438413381576538
    5. 'z' → logprob: -3.813413381576538
    6. 'zip' → logprob: -4.313413143157959
    7. 'x' → logprob: -6.313413143157959
    8. '_' → logprob: -6.313413143157959
    9. ' in' → logprob: -6.563413143157959
    10. ' x' → logprob: -6.813413143157959

Token 131: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03890136629343033
    2. 'in' → logprob: -3.2889013290405273
    3. ')' → logprob: -7.913901329040527
    4. '<|end|>' → logprob: -8.038901329040527
    5. ',' → logprob: -9.663901329040527
    6. ' ' → logprob: -10.038901329040527
    7. ' )' → logprob: -11.288901329040527
    8. '<|end|>' → logprob: -12.038901329040527
    9. '
' → logprob: -12.101401329040527
    10. 's' → logprob: -12.226401329040527

Token 132: ' zip' (ID: 16216)
  Prédit: ' zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zip' → logprob: -0.4741516411304474
    2. 'zip' → logprob: -0.974151611328125
    3. '(zip' → logprob: -10.349151611328125
    4. '.zip' → logprob: -11.349151611328125
    5. 'enumer' → logprob: -11.599151611328125
    6. ' ' → logprob: -12.474151611328125
    7. '
' → logprob: -12.599151611328125
    8. ')' → logprob: -12.849151611328125
    9. '_zip' → logprob: -13.099151611328125
    10. ' enumerate' → logprob: -13.099151611328125

Token 133: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.004652149509638548
    2. '(sorted' → logprob: -5.50465202331543
    3. '(' → logprob: -7.62965202331543
    4. '(B' → logprob: -10.50465202331543
    5. 'sorted' → logprob: -11.25465202331543
    6. '(
' → logprob: -11.25465202331543
    7. '(s' → logprob: -11.50465202331543
    8. '(N' → logprob: -12.37965202331543
    9. '((' → logprob: -12.37965202331543
    10. 'A' → logprob: -12.75465202331543

Token 134: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002652944065630436
    2. ',' → logprob: -6.002653121948242
    3. ' ,' → logprob: -8.877653121948242
    4. ')' → logprob: -12.002653121948242
    5. ',_' → logprob: -12.127653121948242
    6. '),' → logprob: -12.565153121948242
    7. '   ' → logprob: -12.815153121948242
    8. ',
' → logprob: -13.065153121948242
    9. '_sorted' → logprob: -13.440153121948242
    10. '_' → logprob: -13.502653121948242

Token 135: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03464512526988983
    2. ' ,' → logprob: -3.9096450805664062
    3. ',B' → logprob: -4.284645080566406
    4. ',b' → logprob: -9.284645080566406
    5. '   ' → logprob: -10.409645080566406
    6. 'B' → logprob: -10.409645080566406
    7. ' B' → logprob: -10.909645080566406
    8. '[' → logprob: -11.409645080566406
    9. 'sorted' → logprob: -11.534645080566406
    10. ',A' → logprob: -12.284645080566406

Token 136: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.4287138283252716
    2. ' B' → logprob: -1.0537137985229492
    3. '   ' → logprob: -11.92871379852295
    4. ' ' → logprob: -12.80371379852295
    5. '    ' → logprob: -14.05371379852295
    6. ')' → logprob: -14.30371379852295
    7. '	B' → logprob: -14.42871379852295
    8. 'b' → logprob: -14.55371379852295
    9. '  ' → logprob: -15.61621379852295
    10. ' ' → logprob: -15.86621379852295

Token 137: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.9153885558771435e-06
    2. '))' → logprob: -12.375005722045898
    3. ')' → logprob: -14.375005722045898
    4. ' ' → logprob: -15.062505722045898
    5. ')))' → logprob: -16.2500057220459
    6. 's' → logprob: -16.3750057220459
    7. '۲' → logprob: -16.3750057220459
    8. '
' → logprob: -16.7500057220459
    9. '[' → logprob: -16.8125057220459
    10. 'a' → logprob: -17.3125057220459

Token 138: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0003305784775875509
    2. ' ))' → logprob: -8.750330924987793
    3. ')' → logprob: -9.625330924987793
    4. ')))' → logprob: -10.000330924987793
    5. '))
' → logprob: -10.250330924987793
    6. '   ' → logprob: -11.625330924987793
    7. '));' → logprob: -12.125330924987793
    8. ' ' → logprob: -13.000330924987793
    9. '))

' → logprob: -13.125330924987793
    10. '()))' → logprob: -13.375330924987793

Token 139: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5825977325439453
    2. '   ' → logprob: -1.4575977325439453
    3. '()' → logprob: -2.4575977325439453
    4. '
' → logprob: -2.7075977325439453
    5. ':' → logprob: -4.457597732543945
    6. '<|end|>' → logprob: -4.457597732543945
    7. '(' → logprob: -4.707597732543945
    8. '()
' → logprob: -5.582597732543945
    9. '(
' → logprob: -5.582597732543945
    10. '    
' → logprob: -5.832597732543945

Token 140: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4165301024913788
    2. '()' → logprob: -1.7915301322937012
    3. '   ' → logprob: -2.791530132293701
    4. '(' → logprob: -2.916530132293701
    5. ':' → logprob: -3.916530132293701
    6. '
' → logprob: -4.291530132293701
    7. ' ' → logprob: -5.041530132293701
    8. '<|end|>' → logprob: -5.541530132293701
    9. '(
' → logprob: -6.166530132293701
    10. '()
' → logprob: -6.291530132293701

Token 141: ' not' (ID: 625)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.05751786008477211
    2. ' not' → logprob: -3.1825177669525146
    3. 'f' → logprob: -4.307518005371094
    4. 'not' → logprob: -7.307518005371094
    5. ' ' → logprob: -9.182518005371094
    6. '(f' → logprob: -9.432518005371094
    7. ' (' → logprob: -10.807518005371094
    8. ' N' → logprob: -10.932518005371094
    9. ' len' → logprob: -11.182518005371094
    10. '(' → logprob: -11.557518005371094

Token 142: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.012520836666226387
    2. 'f' → logprob: -4.387520790100098
    3. ' ' → logprob: -12.012520790100098
    4. ' ' → logprob: -12.512520790100098
    5. '(f' → logprob: -13.887520790100098
    6. '(' → logprob: -16.012521743774414
    7. '	f' → logprob: -16.137521743774414
    8. ' (' → logprob: -16.387521743774414
    9. ' all' → logprob: -16.637521743774414
    10. '_f' → logprob: -17.512521743774414

Token 143: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00022403974435292184
    2. ' ():' → logprob: -9.000224113464355
    3. '()' → logprob: -9.375224113464355
    4. '():
' → logprob: -11.250224113464355
    5. ':' → logprob: -13.250224113464355
    6. '(' → logprob: -14.750224113464355
    7. ' ()' → logprob: -14.750224113464355
    8. '():
' → logprob: -16.25022315979004
    9. ' :' → logprob: -17.62522315979004
    10. '()>' → logprob: -17.75022315979004

Token 144: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3333547115325928
    2. ':' → logprob: -1.3333547115325928
    3. ':
' → logprob: -3.9583547115325928
    4. '   ' → logprob: -8.208354949951172
    5. ':return' → logprob: -8.208354949951172
    6. ' return' → logprob: -8.708354949951172
    7. 'return' → logprob: -10.083354949951172
    8. ' :' → logprob: -11.708354949951172
    9. ' :
' → logprob: -12.208354949951172
    10. '
' → logprob: -12.208354949951172

Token 145: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.19808758795261383
    2. 'return' → logprob: -1.9480875730514526
    3. '   ' → logprob: -3.698087692260742
    4. ' print' → logprob: -4.698087692260742
    5. ' return' → logprob: -6.323087692260742
    6. '
' → logprob: -6.573087692260742
    7. '       ' → logprob: -10.823087692260742
    8. '    
' → logprob: -10.823087692260742
    9. '    ' → logprob: -11.573087692260742
    10. '```' → logprob: -12.198087692260742

Token 146: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6218643188476562
    2. '("' → logprob: -1.1218643188476562
    3. '(-' → logprob: -1.9968643188476562
    4. '('' → logprob: -6.746864318847656
    5. '()' → logprob: -8.871864318847656
    6. '("-' → logprob: -9.121864318847656
    7. '(False' → logprob: -9.621864318847656
    8. '(
' → logprob: -9.621864318847656
    9. '("")' → logprob: -10.371864318847656
    10. '(":' → logprob: -11.496864318847656

Token 147: 'No' (ID: 3160)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5332285165786743
    2. 'No' → logprob: -1.2832285165786743
    3. 'NO' → logprob: -2.4082283973693848
    4. 'im' → logprob: -4.033228397369385
    5. '0' → logprob: -4.908228397369385
    6. 'Impossible' → logprob: -5.408228397369385
    7. ':' → logprob: -5.658228397369385
    8. 'IMP' → logprob: -5.783228397369385
    9. ':(' → logprob: -6.283228397369385
    10. 'in' → logprob: -6.783228397369385

Token 148: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.023804157972335815
    2. ')' → logprob: -4.398804187774658
    3. '")' → logprob: -5.148804187774658
    4. 't' → logprob: -6.648804187774658
    5. 'pe' → logprob: -6.648804187774658
    6. 'ne' → logprob: -6.898804187774658
    7. '<|end|>' → logprob: -7.898804187774658
    8. ' solution' → logprob: -8.0238037109375
    9. ''' → logprob: -8.6488037109375
    10. 'n' → logprob: -8.7738037109375

Token 149: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04861336573958397
    2. '   ' → logprob: -3.0486133098602295
    3. ' else' → logprob: -11.923613548278809
    4. '<|end|>' → logprob: -12.673613548278809
    5. 'else' → logprob: -12.798613548278809
    6. '    
' → logprob: -12.798613548278809
    7. ',' → logprob: -13.173613548278809
    8. '           ' → logprob: -13.423613548278809
    9. '
' → logprob: -13.548613548278809
    10. ' ' → logprob: -13.673613548278809

Token 150: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13499660789966583
    2. '   ' → logprob: -3.0099966526031494
    3. 'return' (adapté à ' return') → logprob: -3.0099966526031494
    4. ' return' → logprob: -3.6349966526031494
    5. '	return' → logprob: -7.50999641418457
    6. '
' → logprob: -8.00999641418457
    7. ' ' → logprob: -8.38499641418457
    8. 'else' → logprob: -9.13499641418457
    9. ' else' → logprob: -10.63499641418457
    10. '    
' → logprob: -11.25999641418457

Token 151: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1755029261112213
    2. '    
' → logprob: -2.0505030155181885
    3. 'print' → logprob: -4.175502777099609
    4. '
' → logprob: -4.925502777099609
    5. 'for' → logprob: -6.425502777099609
    6. '    ' → logprob: -6.800502777099609
    7. ' print' → logprob: -6.925502777099609
    8. '  
' → logprob: -7.050502777099609
    9. ' 
' → logprob: -7.300502777099609
    10. 'if' → logprob: -7.425502777099609

Token 152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22432199120521545
    2. '    
' → logprob: -1.974321961402893
    3. '
' → logprob: -4.2243218421936035
    4. 'for' → logprob: -4.3493218421936035
    5. ' for' → logprob: -4.7243218421936035
    6. '  
' → logprob: -5.5993218421936035
    7. 'result' → logprob: -5.7243218421936035
    8. 'print' → logprob: -6.2243218421936035
    9. ' 
' → logprob: -6.3493218421936035
    10. 'indices' → logprob: -6.3493218421936035

Token 153: ' #' (ID: 1069)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -1.754791259765625
    2. 'C' → logprob: -2.004791259765625
    3. 'for' → logprob: -2.379791259765625
    4. 'from' → logprob: -2.629791259765625
    5. '#' (adapté à ' #') → logprob: -2.629791259765625
    6. 'res' → logprob: -2.754791259765625
    7. 'result' → logprob: -3.129791259765625
    8. 'dp' → logprob: -3.254791259765625
    9. 'per' → logprob: -3.254791259765625
    10. 'indices' → logprob: -3.379791259765625

Token 154: ' Introdu' (ID: 63470)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -1.1321884393692017
    2. '#' → logprob: -2.132188320159912
    3. 'C' → logprob: -2.382188320159912
    4. 'from' → logprob: -2.632188320159912
    5. 'indices' → logprob: -3.007188320159912
    6. 'for' → logprob: -3.007188320159912
    7. 'idx' → logprob: -3.382188320159912
    8. 'per' → logprob: -3.632188320159912
    9. 'perm' → logprob: -3.632188320159912
    10. 'res' → logprob: -3.882188320159912

Token 155: 'it' (ID: 278)
  Prédit: 'ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ce' → logprob: -0.04213359206914902
    2. 'ire' → logprob: -3.7921335697174072
    3. 'cing' → logprob: -5.167133808135986
    4. 'cer' → logprob: -5.417133808135986
    5. 'c' → logprob: -5.792133808135986
    6. 're' → logprob: -5.917133808135986
    7. 'ction' → logprob: -6.667133808135986
    8. 'ct' → logprob: -7.792133808135986
    9. 'ced' → logprob: -8.917133331298828
    10. 'cir' → logprob: -8.917133331298828

Token 156: ' reduce' (ID: 10389)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.5595189929008484
    2. ' un' → logprob: -1.8095190525054932
    3. ' la' → logprob: -2.684519052505493
    4. ' result' → logprob: -3.934519052505493
    5. ' a' → logprob: -4.184518814086914
    6. '#' → logprob: -4.184518814086914
    7. ' for' → logprob: -4.309518814086914
    8. 'une' → logprob: -4.434518814086914
    9. ' les' → logprob: -4.934518814086914
    10. ' from' → logprob: -4.934518814086914

Token 157: ' pour' (ID: 1930)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.6191211342811584
    2. '(' → logprob: -0.8691211342811584
    3. '(
' → logprob: -4.244121074676514
    4. 'result' → logprob: -4.869121074676514
    5. ',' → logprob: -5.244121074676514
    6. 'def' → logprob: -5.619121074676514
    7. '   ' → logprob: -5.744121074676514
    8. '_result' → logprob: -5.744121074676514
    9. 'lambda' → logprob: -7.119121074676514
    10. ' (' → logprob: -7.619121074676514

Token 158: ' é' (ID: 1212)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.935560405254364
    2. 'lambda' → logprob: -2.185560464859009
    3. ' calcul' → logprob: -2.685560464859009
    4. ' combine' → logprob: -2.685560464859009
    5. 'combine' → logprob: -3.060560464859009
    6. ' min' → logprob: -3.435560464859009
    7. 'min' → logprob: -3.435560464859009
    8. ' comb' → logprob: -3.685560464859009
    9. ' accumulate' → logprob: -4.06056022644043
    10. ' la' → logprob: -4.06056022644043

Token 159: 'valuer' (ID: 141145)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5781502723693848
    2. 'lim' → logprob: -1.2031502723693848
    3. 'valuer' → logprob: -2.3281502723693848
    4. 'ffect' → logprob: -4.078150272369385
    5. 'x' → logprob: -4.578150272369385
    6. 'crire' → logprob: -5.703150272369385
    7. 'labor' → logprob: -6.078150272369385
    8. 'lag' → logprob: -6.578150272369385
    9. 'm' → logprob: -6.953150272369385
    10. 'st' → logprob: -7.203150272369385

Token 160: ' la' (ID: 557)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.4058654308319092
    2. 'lambda' → logprob: -1.2808654308319092
    3. ' lambda' → logprob: -3.030865430831909
    4. 'all' → logprob: -6.405865669250488
    5. ' all' → logprob: -6.405865669250488
    6. '(' → logprob: -6.905865669250488
    7. '   ' → logprob: -7.155865669250488
    8. 'sum' → logprob: -7.655865669250488
    9. 'min' → logprob: -7.905865669250488
    10. 'max' → logprob: -8.030865669250488

Token 161: ' deuxième' (ID: 51664)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -1.2419716119766235
    2. 'max' → logprob: -1.6169716119766235
    3. ' max' → logprob: -1.7419716119766235
    4. 'sum' → logprob: -1.8669716119766235
    5. 'min' → logprob: -2.366971492767334
    6. ' min' → logprob: -3.241971492767334
    7. ' maximum' → logprob: -4.991971492767334
    8. ' product' → logprob: -5.116971492767334
    9. ' minimum' → logprob: -5.241971492767334
    10. 'minimum' → logprob: -5.241971492767334

Token 162: ' condition' (ID: 7060)
  Prédit: ' condition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' condition' → logprob: -0.511259913444519
    2. 'condition' → logprob: -1.761259913444519
    3. ' partie' → logprob: -3.5112600326538086
    4. 'sum' → logprob: -3.6362600326538086
    5. 'part' → logprob: -3.8862600326538086
    6. 'lambda' → logprob: -4.136260032653809
    7. 'def' → logprob: -4.511260032653809
    8. ' boucle' → logprob: -4.636260032653809
    9. ' somme' → logprob: -4.636260032653809
    10. 'criterion' → logprob: -4.761260032653809

Token 163: ' via' (ID: 4493)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.368114173412323
    2. '(' → logprob: -1.8681142330169678
    3. ',' → logprob: -2.7431142330169678
    4. '
' → logprob: -3.1181142330169678
    5. '(
' → logprob: -4.243113994598389
    6. '    
' → logprob: -4.618113994598389
    7. ':' → logprob: -5.743113994598389
    8. ' (' → logprob: -5.868113994598389
    9. 'result' → logprob: -5.868113994598389
    10. '_' → logprob: -6.743113994598389

Token 164: ' un' (ID: 537)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.6938478946685791
    2. ' lambda' → logprob: -2.068847894668579
    3. 'reduce' → logprob: -2.318847894668579
    4. 'all' → logprob: -2.443847894668579
    5. ' all' → logprob: -3.068847894668579
    6. 'sum' → logprob: -3.318847894668579
    7. 'zip' → logprob: -3.443847894668579
    8. ' zip' → logprob: -3.568847894668579
    9. 'max' → logprob: -4.06884765625
    10. ' sum' → logprob: -4.94384765625

Token 165: ' accumulate' (ID: 74226)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.5359487533569336
    2. 'max' → logprob: -1.7859487533569336
    3. ' lambda' → logprob: -2.7859487533569336
    4. 'all' → logprob: -3.6609487533569336
    5. 'def' → logprob: -3.6609487533569336
    6. 'sum' → logprob: -3.7859487533569336
    7. 'min' → logprob: -4.035948753356934
    8. 'product' → logprob: -4.285948753356934
    9. 'reduce' → logprob: -4.285948753356934
    10. 'any' → logprob: -4.785948753356934

Token 166: 'ur' (ID: 330)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03027951344847679
    2. 'd' → logprob: -3.7802793979644775
    3. 'tor' → logprob: -5.405279636383057
    4. 'operator' → logprob: -7.530279636383057
    5. 'te' → logprob: -7.905279636383057
    6. 'lambda' → logprob: -8.155279159545898
    7. '(lambda' → logprob: -8.780279159545898
    8. 'from' → logprob: -8.780279159545898
    9. 'reduce' → logprob: -8.780279159545898
    10. 'or' → logprob: -8.905279159545898

Token 167: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7316964268684387
    2. '   ' → logprob: -1.356696367263794
    3. '(lambda' → logprob: -2.356696367263794
    4. '(
' → logprob: -2.481696367263794
    5. ',' → logprob: -3.731696367263794
    6. ' (' → logprob: -4.106696605682373
    7. 'result' → logprob: -4.356696605682373
    8. ' result' → logprob: -4.731696605682373
    9. 'lambda' → logprob: -5.231696605682373
    10. ' lambda' → logprob: -5.606696605682373

Token 168: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013315865769982338
    2. ' acc' → logprob: -5.263315677642822
    3. 'acc' → logprob: -6.013315677642822
    4. ',' → logprob: -6.763315677642822
    5. '(acc' → logprob: -7.763315677642822
    6. ' accum' → logprob: -8.51331615447998
    7. 'cum' → logprob: -8.51331615447998
    8. ' result' → logprob: -8.51331615447998
    9. ' accumulator' → logprob: -8.51331615447998
    10. ' cum' → logprob: -8.63831615447998

Token 169: ' cond' (ID: 4664)
  Prédit: ' acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' acc' → logprob: -1.2513102293014526
    2. 'acc' → logprob: -1.3763102293014526
    3. 'c' → logprob: -2.376310348510742
    4. ' res' → logprob: -2.751310348510742
    5. 's' → logprob: -3.126310348510742
    6. 'res' → logprob: -3.626310348510742
    7. ' s' → logprob: -3.751310348510742
    8. 'cum' → logprob: -3.751310348510742
    9. 'result' → logprob: -3.876310348510742
    10. 'prefix' → logprob: -4.001310348510742

Token 170: '2' (ID: 17)
  Prédit: 'ition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ition' → logprob: -0.7473206520080566
    2. ' =' → logprob: -0.8723206520080566
    3. '=' → logprob: -2.7473206520080566
    4. 'er' → logprob: -3.2473206520080566
    5. '   ' → logprob: -5.747320652008057
    6. '_condition' → logprob: -7.122320652008057
    7. 'tion' → logprob: -7.872320652008057
    8. ',' → logprob: -8.122320175170898
    9. 'ation' → logprob: -9.247320175170898
    10. '=True' → logprob: -9.247320175170898

Token 171: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02002953551709652
    2. '=' → logprob: -4.020029544830322
    3. '2' → logprob: -6.395029544830322
    4. '_' → logprob: -8.770029067993164
    5. 'er' → logprob: -10.895029067993164
    6. ',' → logprob: -11.270029067993164
    7. 'ion' → logprob: -12.395029067993164
    8. 'tion' → logprob: -12.520029067993164
    9. ' ' → logprob: -13.020029067993164
    10. '   ' → logprob: -13.020029067993164

Token 172: ' any' (ID: 1062)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.0582970455288887
    2. ' reduce' → logprob: -3.0582971572875977
    3. 'all' → logprob: -5.308297157287598
    4. 'lambda' → logprob: -6.183297157287598
    5. ' all' → logprob: -6.558297157287598
    6. '   ' → logprob: -7.558297157287598
    7. ' lambda' → logprob: -7.808297157287598
    8. ' ' → logprob: -9.433297157287598
    9. 're' → logprob: -10.433297157287598
    10. '  ' → logprob: -10.433297157287598

Token 173: '(map' (ID: 16946)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.8281273245811462
    2. '(lambda' → logprob: -0.9531273245811462
    3. '(A' → logprob: -2.953127384185791
    4. '(' → logprob: -2.953127384185791
    5. '(
' → logprob: -3.828127384185791
    6. '(i' → logprob: -4.203127384185791
    7. '(sum' → logprob: -4.328127384185791
    8. '(x' → logprob: -4.578127384185791
    9. '(((' → logprob: -5.328127384185791
    10. '(a' → logprob: -6.203127384185791

Token 174: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -6.337155355140567e-05
    2. '(' → logprob: -10.500062942504883
    3. 'lambda' → logprob: -11.000062942504883
    4. '(int' → logprob: -11.625062942504883
    5. '(operator' → logprob: -12.750062942504883
    6. '(sum' → logprob: -13.125062942504883
    7. '(
' → logprob: -13.250062942504883
    8. '(l' → logprob: -13.875062942504883
    9. '(str' → logprob: -14.500062942504883
    10. ' (' → logprob: -15.125062942504883

Token 175: ' t' (ID: 260)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.8963675498962402
    2. ' lambda' → logprob: -1.0213675498962402
    3. 'lambda' → logprob: -1.7713675498962402
    4. '   ' → logprob: -4.39636754989624
    5. ' (' → logprob: -4.52136754989624
    6. '=lambda' → logprob: -5.02136754989624
    7. ' x' → logprob: -5.02136754989624
    8. ' i' → logprob: -5.14636754989624
    9. '(' → logprob: -5.77136754989624
    10. ' ' → logprob: -6.52136754989624

Token 176: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006718452088534832
    2. ',' → logprob: -5.631718635559082
    3. ' :' → logprob: -6.006718635559082
    4. ':
' → logprob: -8.006718635559082
    5. 't' → logprob: -9.506718635559082
    6. '=lambda' → logprob: -10.506718635559082
    7. 's' → logprob: -10.631718635559082
    8. ':(' → logprob: -10.756718635559082
    9. 'lambda' → logprob: -10.756718635559082
    10. 'a' → logprob: -11.256718635559082

Token 177: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.284666508436203
    2. ' t' → logprob: -2.0346665382385254
    3. 'sum' → logprob: -2.6596665382385254
    4. 'reduce' → logprob: -3.9096665382385254
    5. ' sum' → logprob: -4.284666538238525
    6. ' reduce' → logprob: -5.659666538238525
    7. ' all' → logprob: -5.909666538238525
    8. 'all' → logprob: -6.409666538238525
    9. '(t' → logprob: -6.534666538238525
    10. '   ' → logprob: -6.659666538238525

Token 178: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00924195721745491
    2. ':' → logprob: -5.009242057800293
    3. ':=' → logprob: -7.259242057800293
    4. 'sum' → logprob: -7.509242057800293
    5. ' :=' → logprob: -8.509242057800293
    6. '>' → logprob: -9.134242057800293
    7. '>=' → logprob: -9.446742057800293
    8. ':[' → logprob: -9.446742057800293
    9. '(' → logprob: -9.759242057800293
    10. 'um' → logprob: -9.821742057800293

Token 179: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01324387826025486
    2. '1' → logprob: -4.388243675231934
    3. '2' → logprob: -7.513243675231934
    4. ' ' → logprob: -10.013243675231934
    5. 'sum' → logprob: -10.138243675231934
    6. 't' → logprob: -10.263243675231934
    7. 'i' → logprob: -11.513243675231934
    8. 'A' → logprob: -11.700743675231934
    9. '(' → logprob: -11.888243675231934
    10. '[' → logprob: -12.013243675231934

Token 180: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.43952563405036926
    2. '>=' → logprob: -2.189525604248047
    3. ' >' → logprob: -2.689525604248047
    4. '<=' → logprob: -2.939525604248047
    5. '[' → logprob: -3.439525604248047
    6. '<' → logprob: -3.439525604248047
    7. '+' → logprob: -3.689525604248047
    8. ' >=' → logprob: -4.189525604248047
    9. ' <=' → logprob: -5.189525604248047
    10. ' <' → logprob: -5.439525604248047

Token 181: ' <=' (ID: 5017)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -1.2161580324172974
    2. '>=' → logprob: -1.4661580324172974
    3. ' <=' → logprob: -1.7161580324172974
    4. '<=' → logprob: -1.9661580324172974
    5. '+' → logprob: -3.466157913208008
    6. ' +' → logprob: -3.716157913208008
    7. '>' → logprob: -3.716157913208008
    8. ' >' → logprob: -3.966157913208008
    9. ',' → logprob: -5.091157913208008
    10. '==' → logprob: -5.216157913208008

Token 182: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.006726383697241545
    2. ' t' → logprob: -5.006726264953613
    3. ' ' → logprob: -13.006726264953613
    4. '0' → logprob: -13.069226264953613
    5. '   ' → logprob: -13.756726264953613
    6. '2' → logprob: -13.944226264953613
    7. '
' → logprob: -14.006726264953613
    8. '	t' → logprob: -14.631726264953613
    9. '1' → logprob: -14.694226264953613
    10. '(t' → logprob: -15.131726264953613

Token 183: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.28160738945007324
    2. '1' → logprob: -1.4066073894500732
    3. '0' → logprob: -8.531607627868652
    4. '2' → logprob: -9.781607627868652
    5. ' ' → logprob: -10.031607627868652
    6. ',' → logprob: -10.031607627868652
    7. 't' → logprob: -10.906607627868652
    8. '   ' → logprob: -11.281607627868652
    9. '][' → logprob: -11.281607627868652
    10. ' [' → logprob: -11.594107627868652

Token 184: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004473540757317096
    2. ' ' → logprob: -8.000447273254395
    3. '[' → logprob: -10.062947273254395
    4. 't' → logprob: -10.875447273254395
    5. '   ' → logprob: -11.250447273254395
    6. '...' → logprob: -12.625447273254395
    7. '0' → logprob: -12.750447273254395
    8. ']' → logprob: -12.750447273254395
    9. '
' → logprob: -13.312947273254395
    10. '  ' → logprob: -13.375447273254395

Token 185: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03072083741426468
    2. ' ,' → logprob: -3.9057209491729736
    3. '),' → logprob: -6.2807207107543945
    4. ' and' → logprob: -6.2807207107543945
    5. ' +' → logprob: -6.5307207107543945
    6. ',
' → logprob: -6.7807207107543945
    7. '   ' → logprob: -7.0307207107543945
    8. 'and' → logprob: -7.2807207107543945
    9. '+' → logprob: -7.7807207107543945
    10. 't' → logprob: -8.280720710754395

Token 186: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.1464279443025589
    2. ' zip' → logprob: -2.021427869796753
    3. '   ' → logprob: -6.021428108215332
    4. 'enumer' → logprob: -7.271428108215332
    5. '(zip' → logprob: -8.396428108215332
    6. ' enumerate' → logprob: -8.896428108215332
    7. ' ' → logprob: -9.646428108215332
    8. '  ' → logprob: -9.896428108215332
    9. '    ' → logprob: -10.646428108215332
    10. 'A' → logprob: -10.896428108215332

Token 187: '(A' (ID: 10706)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.25615793466567993
    2. 'acc' → logprob: -2.756157875061035
    3. '(A' → logprob: -3.006157875061035
    4. '(acc' → logprob: -3.506157875061035
    5. 'reduce' → logprob: -3.631157875061035
    6. '   ' → logprob: -4.006157875061035
    7. '(re' → logprob: -4.381157875061035
    8. 'B' → logprob: -4.756157875061035
    9. 're' → logprob: -5.756157875061035
    10. ' accumulate' → logprob: -5.881157875061035

Token 188: '2' (ID: 17)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7040609121322632
    2. '2' → logprob: -0.7040609121322632
    3. ' ,' → logprob: -5.204061031341553
    4. ',B' → logprob: -5.704061031341553
    5. 'B' → logprob: -7.329061031341553
    6. ',A' → logprob: -7.954061031341553
    7. 'A' → logprob: -8.079060554504395
    8. '[' → logprob: -8.829060554504395
    9. ' ' → logprob: -9.454060554504395
    10. '),' → logprob: -9.766560554504395

Token 189: '[' (ID: 58)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01849452592432499
    2. ',B' → logprob: -4.518494606018066
    3. ' ,' → logprob: -5.268494606018066
    4. ',A' → logprob: -7.143494606018066
    5. '2' → logprob: -7.768494606018066
    6. '   ' → logprob: -8.018494606018066
    7. '[::-' → logprob: -8.768494606018066
    8. 'B' → logprob: -9.018494606018066
    9. '[' → logprob: -9.268494606018066
    10. 'sorted' → logprob: -9.643494606018066

Token 190: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4525432586669922
    2. 'i' → logprob: -1.5775432586669922
    3. ':],' → logprob: -1.7025432586669922
    4. ':' → logprob: -2.202543258666992
    5. ':-' → logprob: -2.827543258666992
    6. '],' → logprob: -2.952543258666992
    7. ',' → logprob: -3.327543258666992
    8. '::-' → logprob: -3.452543258666992
    9. 'range' → logprob: -3.577543258666992
    10. ':,' → logprob: -3.952543258666992

Token 191: ':],' (ID: 117284)
  Prédit: ':],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':],' → logprob: -0.04923691973090172
    2. ':]' → logprob: -3.049237012863159
    3. ':' → logprob: -7.42423677444458
    4. ']:' → logprob: -11.049237251281738
    5. ':].' → logprob: -11.049237251281738
    6. '],' → logprob: -11.299237251281738
    7. ']' → logprob: -13.174237251281738
    8. ':-' → logprob: -13.549237251281738
    9. ':]

' → logprob: -13.549237251281738
    10. '-' → logprob: -13.549237251281738

Token 192: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.25868934392929077
    2. ' B' → logprob: -1.6336894035339355
    3. 'A' → logprob: -3.6336894035339355
    4. ' A' → logprob: -5.1336894035339355
    5. '   ' → logprob: -8.633688926696777
    6. ' ' → logprob: -8.883688926696777
    7. '[' → logprob: -10.508688926696777
    8. '  ' → logprob: -11.633688926696777
    9. '    ' → logprob: -11.883688926696777
    10. 'a' → logprob: -11.946188926696777

Token 193: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00013369438238441944
    2. '[' → logprob: -9.125133514404297
    3. ' ' → logprob: -12.250133514404297
    4. ')' → logprob: -13.375133514404297
    5. '_' → logprob: -13.437633514404297
    6. '۲' → logprob: -13.937633514404297
    7. '```' → logprob: -14.125133514404297
    8. '
' → logprob: -14.187633514404297
    9. '   ' → logprob: -14.250133514404297
    10. '(' → logprob: -14.312633514404297

Token 194: '[:-' (ID: 63556)
  Prédit: '[:-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:-' → logprob: -0.03632503002882004
    2. '[' → logprob: -4.036324977874756
    3. ')))' → logprob: -4.161324977874756
    4. '))' → logprob: -6.911324977874756
    5. '[:' → logprob: -7.161324977874756
    6. ')' → logprob: -8.411325454711914
    7. '))))' → logprob: -9.161325454711914
    8. '   ' → logprob: -9.411325454711914
    9. ')));' → logprob: -9.911325454711914
    10. '1' → logprob: -10.161325454711914

Token 195: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005153826787136495
    2. '-' → logprob: -8.37551498413086
    3. '2' → logprob: -8.62551498413086
    4. '])' → logprob: -10.12551498413086
    5. ']))' → logprob: -10.62551498413086
    6. ' ' → logprob: -11.12551498413086
    7. '   ' → logprob: -12.25051498413086
    8. 'len' → logprob: -12.62551498413086
    9. ' -' → logprob: -12.62551498413086
    10. ']' → logprob: -12.75051498413086

Token 196: '])))
' (ID: 146875)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.0024202491622418165
    2. ')' → logprob: -6.877420425415039
    3. '))' → logprob: -7.252420425415039
    4. ')))
' → logprob: -7.752420425415039
    5. '))))' → logprob: -9.002420425415039
    6. ')));' → logprob: -10.127420425415039
    7. ' ' → logprob: -10.252420425415039
    8. '   ' → logprob: -11.127420425415039
    9. ')))

' → logprob: -11.752420425415039
    10. '))).' → logprob: -12.627420425415039

Token 197: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16402681171894073
    2. ')' → logprob: -2.1640267372131348
    3. '
' → logprob: -3.4140267372131348
    4. '    
' → logprob: -6.664026737213135
    5. '<|end|>' → logprob: -6.664026737213135
    6. ')
' → logprob: -8.289027214050293
    7. '  
' → logprob: -8.664027214050293
    8. ':' → logprob: -9.414027214050293
    9. ' if' → logprob: -9.664027214050293
    10. ' 
' → logprob: -9.789027214050293

Token 198: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037926722317934036
    2. '
' → logprob: -3.41292667388916
    3. ')' → logprob: -6.16292667388916
    4. '<|end|>' → logprob: -6.91292667388916
    5. '    
' → logprob: -7.66292667388916
    6. ' if' → logprob: -8.16292667388916
    7. 'if' (adapté à ' if') → logprob: -8.28792667388916
    8. ')
' → logprob: -9.91292667388916
    9. '  
' → logprob: -10.91292667388916
    10. ',' → logprob: -11.03792667388916

Token 199: ' cond' (ID: 4664)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.008869354613125324
    2. ' cond' → logprob: -5.133869171142578
    3. 'not' → logprob: -5.883869171142578
    4. 'cond' → logprob: -9.133869171142578
    5. ' ' → logprob: -10.508869171142578
    6. ' ' → logprob: -11.883869171142578
    7. '	not' → logprob: -12.383869171142578
    8. '(cond' → logprob: -13.446369171142578
    9. ' len' → logprob: -14.071369171142578
    10. '   ' → logprob: -14.321369171142578

Token 200: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0832606852054596
    2. ' not' → logprob: -2.9582607746124268
    3. 'not' → logprob: -3.5832607746124268
    4. '_not' → logprob: -10.083260536193848
    5. 'cond' → logprob: -10.083260536193848
    6. ' cond' → logprob: -10.208260536193848
    7. '   ' → logprob: -10.458260536193848
    8. ' ' → logprob: -10.833260536193848
    9. '(cond' → logprob: -11.583260536193848
    10. '(not' → logprob: -12.458260536193848

Token 201: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01829369366168976
    2. ':
' → logprob: -4.018293857574463
    3. '==' → logprob: -9.518293380737305
    4. '   ' → logprob: -10.393293380737305
    5. ' ==' → logprob: -11.018293380737305
    6. ' :' → logprob: -11.643293380737305
    7. '       ' → logprob: -11.893293380737305
    8. '):' → logprob: -12.768293380737305
    9. ':
' → logprob: -13.518293380737305
    10. '):
' → logprob: -14.268293380737305

Token 202: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006122402846813202
    2. 'print' → logprob: -8.125612258911133
    3. ' print' → logprob: -8.250612258911133
    4. '   ' → logprob: -10.500612258911133
    5. '
' → logprob: -12.250612258911133
    6. '        
' → logprob: -12.250612258911133
    7. ':
' → logprob: -12.375612258911133
    8. ',' → logprob: -12.500612258911133
    9. '      ' → logprob: -13.250612258911133
    10. ':' → logprob: -13.375612258911133

Token 203: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.007140382658690214
    2. ' print' → logprob: -5.632140159606934
    3. '   ' → logprob: -5.757140159606934
    4. '       ' → logprob: -8.507140159606934
    5. '
' → logprob: -8.757140159606934
    6. '	print' → logprob: -12.382140159606934
    7. ' ' → logprob: -12.632140159606934
    8. '  ' → logprob: -13.007140159606934
    9. '```' → logprob: -13.382140159606934
    10. '    
' → logprob: -13.507140159606934

Token 204: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0019521836657077074
    2. '(' → logprob: -6.626952171325684
    3. '("' → logprob: -7.376952171325684
    4. ' ('' → logprob: -15.251952171325684
    5. '(
' → logprob: -15.626952171325684
    6. '(('' → logprob: -16.376953125
    7. '()' → logprob: -17.001953125
    8. ''' → logprob: -17.626953125
    9. '(

' → logprob: -17.751953125
    10. '   ' → logprob: -18.126953125

Token 205: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.0001860174525063485
    2. 'No' → logprob: -8.7501859664917
    3. ''' → logprob: -10.7501859664917
    4. 'YES' → logprob: -13.1251859664917
    5. '"' → logprob: -13.2501859664917
    6. ' Yes' → logprob: -13.2501859664917
    7. 'yes' → logprob: -15.7501859664917
    8. 'Oui' → logprob: -16.625186920166016
    9. 'Possible' → logprob: -17.125186920166016
    10. 'Ok' → logprob: -17.125186920166016

Token 206: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.3869365453720093
    2. '')' → logprob: -1.1369365453720093
    3. '   ' → logprob: -10.76193618774414
    4. '')
' → logprob: -11.13693618774414
    5. ')' → logprob: -11.26193618774414
    6. ')
' → logprob: -11.51193618774414
    7. ')')
' → logprob: -13.38693618774414
    8. '")
' → logprob: -13.51193618774414
    9. '!')
' → logprob: -13.76193618774414
    10. '")' → logprob: -14.26193618774414

Token 207: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037623094394803047
    2. '       ' → logprob: -6.003762245178223
    3. 'else' → logprob: -6.753762245178223
    4. ' else' → logprob: -9.128762245178223
    5. '	else' → logprob: -11.878762245178223
    6. '<|end|>' → logprob: -12.878762245178223
    7. ' ' → logprob: -15.128762245178223
    8. ')' → logprob: -15.628762245178223
    9. '```' → logprob: -15.628762245178223
    10. 'elif' → logprob: -16.00376319885254

Token 208: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6375882625579834
    2. '   ' → logprob: -0.7625882625579834
    3. 'else' → logprob: -5.6375885009765625
    4. ' else' → logprob: -7.0125885009765625
    5. 'return' (adapté à ' return') → logprob: -8.012588500976562
    6. ' return' → logprob: -9.137588500976562
    7. ' ' → logprob: -9.887588500976562
    8. '           ' → logprob: -11.512588500976562
    9. '  ' → logprob: -12.387588500976562
    10. '     ' → logprob: -13.387588500976562

Token 209: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010621525347232819
    2. '    
' → logprob: -5.260621547698975
    3. '
' → logprob: -5.885621547698975
    4. '<|end|>' → logprob: -6.010621547698975
    5. 'print' → logprob: -10.385621070861816
    6. '#' → logprob: -10.885621070861816
    7. '        
' → logprob: -10.885621070861816
    8. '  
' → logprob: -11.135621070861816
    9. ')' → logprob: -11.885621070861816
    10. '    ' → logprob: -12.010621070861816

Token 210: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1761031597852707
    2. '#' → logprob: -2.551103115081787
    3. 'for' → logprob: -3.051103115081787
    4. 'print' → logprob: -4.176103115081787
    5. 'A' → logprob: -5.926103115081787
    6. 'if' → logprob: -6.176103115081787
    7. '    
' → logprob: -6.301103115081787
    8. 'i' → logprob: -6.426103115081787
    9. 'diff' → logprob: -6.426103115081787
    10. 'acc' → logprob: -6.551103115081787

Token 211: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.34387192130088806
    2. 'for' → logprob: -2.218871831893921
    3. '#' (adapté à ' #') → logprob: -2.843871831893921
    4. 'if' → logprob: -2.843871831893921
    5. 'diff' → logprob: -3.968871831893921
    6. 'A' → logprob: -5.0938720703125
    7. 's' → logprob: -5.7188720703125
    8. 'cond' → logprob: -5.8438720703125
    9. 'from' → logprob: -6.0938720703125
    10. 'C' → logprob: -6.0938720703125

Token 212: ' Construction' (ID: 31452)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.42601215839385986
    2. 'if' → logprob: -2.0510120391845703
    3. '#' → logprob: -2.3010120391845703
    4. 'diff' → logprob: -3.1760120391845703
    5. 'for' → logprob: -3.9260120391845703
    6. 'count' → logprob: -5.05101203918457
    7. 'cond' → logprob: -5.17601203918457
    8. 'counts' → logprob: -5.30101203918457
    9. 'A' → logprob: -5.80101203918457
    10. 'else' → logprob: -6.05101203918457

Token 213: ' volontaire' (ID: 170473)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6300341486930847
    2. ' d' → logprob: -1.6300342082977295
    3. ' of' → logprob: -2.1300342082977295
    4. ' de' → logprob: -2.6300342082977295
    5. 'de' → logprob: -3.6300342082977295
    6. 'd' → logprob: -4.00503396987915
    7. ' des' → logprob: -4.50503396987915
    8. ' du' → logprob: -5.13003396987915
    9. ' for' → logprob: -5.88003396987915
    10. 'du' → logprob: -6.13003396987915

Token 214: 'ment' (ID: 508)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.9476684331893921
    2. 'd' → logprob: -1.447668433189392
    3. 'for' → logprob: -1.822668433189392
    4. '   ' → logprob: -2.5726685523986816
    5. ' for' → logprob: -2.5726685523986816
    6. 'de' → logprob: -4.322668552398682
    7. '#' → logprob: -4.822668552398682
    8. ' de' → logprob: -5.197668552398682
    9. 'du' → logprob: -5.197668552398682
    10. ' of' → logprob: -5.697668552398682

Token 215: ' abs' (ID: 8443)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.8730377554893494
    2. 'd' → logprob: -1.4980378150939941
    3. 'abs' → logprob: -2.123037815093994
    4. 'contr' → logprob: -3.498037815093994
    5. 'complex' → logprob: -3.873037815093994
    6. ' abs' → logprob: -3.998037815093994
    7. 'del' → logprob: -4.123037815093994
    8. ' d' → logprob: -4.123037815093994
    9. 'des' → logprob: -4.498037815093994
    10. 'du' → logprob: -4.498037815093994

Token 216: 'con' (ID: 542)
  Prédit: 'urde'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'urde' → logprob: -0.029283132404088974
    2. 'tr' → logprob: -4.029283046722412
    3. '#' → logprob: -6.154283046722412
    4. 'urd' → logprob: -7.029283046722412
    5. 'ur' → logprob: -7.154283046722412
    6. 'tract' → logprob: -7.279283046722412
    7. 'ente' → logprob: -7.279283046722412
    8. '_' → logprob: -7.529283046722412
    9. 'tre' → logprob: -7.529283046722412
    10. 'tra' → logprob: -7.654283046722412

Token 217: 'se' (ID: 344)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.8128946423530579
    2. 'de' → logprob: -1.312894582748413
    3. 'd' → logprob: -2.062894582748413
    4. 'e' → logprob: -2.437894582748413
    5. 'te' → logprob: -3.312894582748413
    6. 'du' → logprob: -4.437894821166992
    7. 't' → logprob: -4.687894821166992
    8. 'be' → logprob: -4.812894821166992
    9. 'u' → logprob: -5.937894821166992
    10. 'due' → logprob: -6.937894821166992

Token 218: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7203906774520874
    2. ' for' → logprob: -1.3453906774520874
    3. 'for' → logprob: -1.9703906774520874
    4. 'result' → logprob: -4.095390796661377
    5. ' result' → logprob: -4.845390796661377
    6. '
' → logprob: -4.845390796661377
    7. 'idx' → logprob: -4.845390796661377
    8. ':' → logprob: -5.095390796661377
    9. ' acc' → logprob: -5.220390796661377
    10. 'acc' → logprob: -5.220390796661377

Token 219: ' multi' (ID: 12151)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.6459338665008545
    2. 'acc' → logprob: -2.0209338665008545
    3. 'diff' → logprob: -2.3959338665008545
    4. 'pairs' → logprob: -2.3959338665008545
    5. 's' → logprob: -2.7709338665008545
    6. 'c' → logprob: -2.7709338665008545
    7. ' for' → logprob: -3.3959338665008545
    8. ' acc' → logprob: -3.5209338665008545
    9. 'prefix' → logprob: -3.6459338665008545
    10. 'dp' → logprob: -3.7709338665008545

Token 220: '-n' (ID: 5219)
  Prédit: 'ple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ple' → logprob: -0.32781216502189636
    2. 'line' → logprob: -1.3278121948242188
    3. 'step' → logprob: -6.202812194824219
    4. 'for' → logprob: -6.452812194824219
    5. 'plic' → logprob: -6.452812194824219
    6. ' line' → logprob: -6.702812194824219
    7. '   ' → logprob: -7.077812194824219
    8. 'l' → logprob: -7.077812194824219
    9. 'p' → logprob: -7.202812194824219
    10. 'plier' → logprob: -7.327812194824219

Token 221: 'est' (ID: 376)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4776878356933594
    2. 'iveau' → logprob: -2.1026878356933594
    3. 'line' → logprob: -2.1026878356933594
    4. 'ested' → logprob: -2.8526878356933594
    5. 'b' → logprob: -2.9776878356933594
    6. 'ext' → logprob: -3.2276878356933594
    7. 'ive' → logprob: -3.3526878356933594
    8. 'ary' → logprob: -3.4776878356933594
    9. 'one' → logprob: -3.8526878356933594
    10. 'uple' → logprob: -3.8526878356933594

Token 222: 'age' (ID: 477)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.00371599942445755
    2. 'for' → logprob: -6.253715991973877
    3. 'def' → logprob: -6.503715991973877
    4. 'e' → logprob: -9.128716468811035
    5. ' for' → logprob: -9.378716468811035
    6. 'if' → logprob: -10.128716468811035
    7. 'ing' → logprob: -10.628716468811035
    8. 'd' → logprob: -12.378716468811035
    9. '   ' → logprob: -12.628716468811035
    10. ' ed' → logprob: -12.753716468811035

Token 223: '/s' (ID: 5031)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.925377368927002
    2. 'for' → logprob: -1.800377368927002
    3. '   ' → logprob: -2.175377368927002
    4. ' result' → logprob: -3.050377368927002
    5. ' A' → logprob: -3.550377368927002
    6. 'acc' → logprob: -3.800377368927002
    7. 'A' → logprob: -4.050377368927002
    8. ' res' → logprob: -4.050377368927002
    9. ' def' → logprob: -4.175377368927002
    10. ' acc' → logprob: -4.175377368927002

Token 224: 'ort' (ID: 390)
  Prédit: 'tep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tep' → logprob: -0.841721773147583
    2. 'tage' → logprob: -1.341721773147583
    3. 't' → logprob: -2.216721773147583
    4. 'et' → logprob: -2.466721773147583
    5. 'plit' → logprob: -2.716721773147583
    6. 'te' → logprob: -4.966721534729004
    7. 'té' → logprob: -5.091721534729004
    8. 'table' → logprob: -5.466721534729004
    9. 'orted' → logprob: -5.966721534729004
    10. 'step' → logprob: -5.966721534729004

Token 225: '/filter' (ID: 151200)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2410500049591064
    2. ' A' → logprob: -1.8660500049591064
    3. 's' → logprob: -1.9910500049591064
    4. 'A' → logprob: -1.9910500049591064
    5. ' permutations' → logprob: -2.8660500049591064
    6. ' s' → logprob: -3.4910500049591064
    7. 'ed' → logprob: -3.6160500049591064
    8. ' for' → logprob: -3.7410500049591064
    9. 'def' → logprob: -4.241049766540527
    10. 'for' → logprob: -4.491049766540527

Token 226: '/map' (ID: 89146)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -2.4453680515289307
    2. ' res' → logprob: -2.4453680515289307
    3. 'res' → logprob: -2.4453680515289307
    4. 'for' → logprob: -2.4453680515289307
    5. 'pairs' → logprob: -2.5703680515289307
    6. '   ' → logprob: -2.8203680515289307
    7. 'C' → logprob: -2.8203680515289307
    8. 'result' → logprob: -3.3203680515289307
    9. 's' → logprob: -3.3203680515289307
    10. 'tmp' → logprob: -3.4453680515289307

Token 227: '/l' (ID: 16347)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.7880752086639404
    2. 'pairs' → logprob: -2.1630752086639404
    3. ' res' → logprob: -2.2880752086639404
    4. 'result' → logprob: -2.7880752086639404
    5. '   ' → logprob: -2.7880752086639404
    6. 'C' → logprob: -3.2880752086639404
    7. 'tmp' → logprob: -3.2880752086639404
    8. 'def' → logprob: -3.9130752086639404
    9. 'acc' → logprob: -4.0380754470825195
    10. 'A' → logprob: -4.0380754470825195

Token 228: 'ambda' (ID: 12104)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.29397284984588623
    2. 'ambda' → logprob: -1.4189728498458862
    3. 'en' → logprob: -4.793972969055176
    4. 'amb' → logprob: -6.793972969055176
    5. 'st' → logprob: -7.793972969055176
    6. 'isted' → logprob: -7.918972969055176
    7. 'sorted' → logprob: -7.918972969055176
    8. 'am' → logprob: -8.043972969055176
    9. 'a' → logprob: -8.793972969055176
    10. 'is' → logprob: -8.918972969055176

Token 229: ' pour' (ID: 1930)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.9470443725585938
    2. ' res' → logprob: -2.1970443725585938
    3. 'result' → logprob: -2.3220443725585938
    4. 'pairs' → logprob: -2.5720443725585938
    5. '   ' → logprob: -3.1970443725585938
    6. 'print' → logprob: -3.4470443725585938
    7. 's' → logprob: -3.6970443725585938
    8. 'C' → logprob: -3.6970443725585938
    9. 'for' → logprob: -3.8220443725585938
    10. 'idx' → logprob: -3.8220443725585938

Token 230: ' génér' (ID: 18939)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0038971067406237125
    2. ' print' → logprob: -6.003897190093994
    3. 'any' → logprob: -8.128896713256836
    4. 'A' → logprob: -8.378896713256836
    5. '_' → logprob: -9.378896713256836
    6. 'sorted' → logprob: -9.628896713256836
    7. 'reduce' → logprob: -9.753896713256836
    8. 't' → logprob: -9.753896713256836
    9. 'return' → logprob: -10.003896713256836
    10. 'all' → logprob: -10.128896713256836

Token 231: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0011978477705270052
    2. 'érer' → logprob: -7.126197814941406
    3. 'e' → logprob: -8.126197814941406
    4. 'rer' → logprob: -9.876197814941406
    5. 'é' → logprob: -11.001197814941406
    6. 'erer' → logprob: -11.626197814941406
    7. 'iter' → logprob: -12.501197814941406
    8. 'ate' → logprob: -12.626197814941406
    9. 'def' → logprob: -13.251197814941406
    10. '#' → logprob: -13.751197814941406

Token 232: ' B' (ID: 418)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -1.2451910972595215
    2. 'sum' → logprob: -1.9951910972595215
    3. 'a' → logprob: -2.3701910972595215
    4. ''' → logprob: -2.7451910972595215
    5. 'list' → logprob: -2.8701910972595215
    6. ' any' → logprob: -3.1201910972595215
    7. ' a' → logprob: -3.3701910972595215
    8. 'False' → logprob: -3.4951910972595215
    9. 'print' → logprob: -3.6201910972595215
    10. 'all' → logprob: -3.6201910972595215

Token 233: '3' (ID: 18)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.4377219676971436
    2. '   ' → logprob: -1.4377219676971436
    3. 'C' → logprob: -1.9377219676971436
    4. 'A' → logprob: -2.4377219676971436
    5. ' B' → logprob: -3.1877219676971436
    6. ' =' → logprob: -3.6877219676971436
    7. 'for' → logprob: -3.9377219676971436
    8. 'result' → logprob: -3.9377219676971436
    9. ' A' → logprob: -4.187722206115723
    10. '_' → logprob: -4.312722206115723

Token 234: ' et' (ID: 859)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.8149293065071106
    2. '   ' → logprob: -0.9399293065071106
    3. '
' → logprob: -2.689929246902466
    4. ' =' → logprob: -3.064929246902466
    5. ' B' → logprob: -3.439929246902466
    6. ',' → logprob: -4.939929485321045
    7. '=' → logprob: -5.564929485321045
    8. 'def' → logprob: -7.064929485321045
    9. '=
' → logprob: -7.064929485321045
    10. '    
' → logprob: -7.189929485321045

Token 235: ' C' (ID: 363)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.05837653949856758
    2. ' A' → logprob: -3.4333765506744385
    3. 'B' → logprob: -4.308376312255859
    4. 'print' → logprob: -6.058376312255859
    5. 'C' → logprob: -6.183376312255859
    6. 'return' → logprob: -6.433376312255859
    7. ' B' → logprob: -6.933376312255859
    8. 'sorted' → logprob: -7.433376312255859
    9. ' return' → logprob: -8.05837631225586
    10. '#' → logprob: -8.18337631225586

Token 236: '
' (ID: 198)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.5603110790252686
    2. ' =' → logprob: -1.6853110790252686
    3. ' B' → logprob: -2.1853110790252686
    4. '=' → logprob: -3.1853110790252686
    5. '   ' → logprob: -3.6853110790252686
    6. 'A' → logprob: -3.9353110790252686
    7. '3' → logprob: -4.185311317443848
    8. ',' → logprob: -4.935311317443848
    9. ' A' → logprob: -5.810311317443848
    10. '#' → logprob: -5.810311317443848

Token 237: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27629804611206055
    2. 'B' → logprob: -1.9012980461120605
    3. ' B' → logprob: -2.4012980461120605
    4. '```' → logprob: -7.9012980461120605
    5. 'A' → logprob: -8.151298522949219
    6. '
' → logprob: -9.026298522949219
    7. '    ' → logprob: -9.401298522949219
    8. ' A' → logprob: -9.651298522949219
    9. 'C' → logprob: -10.026298522949219
    10. ' ' → logprob: -10.026298522949219

Token 238: ' #' (ID: 1069)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.03329777345061302
    2. ' B' → logprob: -3.5332977771759033
    3. 'A' → logprob: -6.158297538757324
    4. '   ' → logprob: -7.033297538757324
    5. ' A' → logprob: -9.158297538757324
    6. 'indices' → logprob: -9.283297538757324
    7. 'C' → logprob: -9.658297538757324
    8. 'from' → logprob: -10.658297538757324
    9. 'idx' → logprob: -10.783297538757324
    10. ' indices' → logprob: -10.783297538757324

Token 239: ' La' (ID: 3038)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.056380849331617355
    2. ' B' → logprob: -3.4313807487487793
    3. 'A' → logprob: -4.056380748748779
    4. '   ' → logprob: -6.681380748748779
    5. 'indices' → logprob: -6.806380748748779
    6. ' A' → logprob: -7.056380748748779
    7. 'C' → logprob: -8.181381225585938
    8. 'from' → logprob: -8.431381225585938
    9. 'pairs' → logprob: -8.556381225585938
    10. 'idx' → logprob: -8.556381225585938

Token 240: ' permutation' (ID: 135200)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7562764286994934
    2. 'B' → logprob: -1.3812763690948486
    3. ' A' → logprob: -2.1312763690948486
    4. ' B' → logprob: -2.6312763690948486
    5. 'C' → logprob: -3.0062763690948486
    6. ' C' → logprob: -4.631276607513428
    7. '#' → logprob: -5.131276607513428
    8. 'from' → logprob: -5.381276607513428
    9. 'for' → logprob: -6.256276607513428
    10. ' from' → logprob: -6.443776607513428

Token 241: ' des' (ID: 731)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.012492352165281773
    2. 'B' → logprob: -5.5124921798706055
    3. 'import' → logprob: -6.0124921798706055
    4. 'A' → logprob: -6.5124921798706055
    5. 'from' → logprob: -7.1374921798706055
    6. 'def' → logprob: -7.7624921798706055
    7. ' =' → logprob: -8.012492179870605
    8. ' de' → logprob: -8.262492179870605
    9. '_candidates' → logprob: -8.262492179870605
    10. 'de' → logprob: -8.387492179870605

Token 242: ' index' (ID: 3472)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5050890445709229
    2. 'indices' → logprob: -2.255089044570923
    3. 'list' → logprob: -2.630089044570923
    4. 'B' → logprob: -2.630089044570923
    5. 'range' → logprob: -3.755089044570923
    6. ' A' → logprob: -3.880089044570923
    7. ' indices' → logprob: -4.505088806152344
    8. 'items' → logprob: -4.505088806152344
    9. 'elements' → logprob: -4.505088806152344
    10. 'enumer' → logprob: -5.130088806152344

Token 243: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.4190188646316528
    2. 's' → logprob: -1.6690188646316528
    3. '_' → logprob: -1.9190188646316528
    4. 'indices' → logprob: -1.9190188646316528
    5. '_indices' → logprob: -2.1690187454223633
    6. ',' → logprob: -2.9190187454223633
    7. '=' → logprob: -3.2940187454223633
    8. ' indices' → logprob: -3.7940187454223633
    9. 'import' → logprob: -4.669018745422363
    10. '_indexes' → logprob: -5.419018745422363

Token 244: ' B' (ID: 418)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4323960542678833
    2. 'A' → logprob: -1.1823960542678833
    3. 'B' → logprob: -3.9323959350585938
    4. ' range' → logprob: -4.307395935058594
    5. ' A' → logprob: -5.432395935058594
    6. 'list' → logprob: -5.557395935058594
    7. ' B' → logprob: -7.557395935058594
    8. '(range' → logprob: -7.807395935058594
    9. 'set' → logprob: -8.057395935058594
    10. '[' → logprob: -8.307395935058594

Token 245: ' est' (ID: 893)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.1822734922170639
    2. '_indices' → logprob: -2.6822733879089355
    3. 'indices' → logprob: -3.1822733879089355
    4. ' =' → logprob: -3.6822733879089355
    5. '_' → logprob: -5.1822733879089355
    6. '_indexes' → logprob: -5.3072733879089355
    7. 's' → logprob: -5.5572733879089355
    8. '=' → logprob: -6.0572733879089355
    9. '2' → logprob: -6.1822733879089355
    10. 'indexes' → logprob: -6.3072733879089355

Token 246: ' exécut' (ID: 165350)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.37702128291130066
    2. 'sorted' → logprob: -1.877021312713623
    3. 'range' → logprob: -2.252021312713623
    4. ' list' → logprob: -3.627021312713623
    5. ' sorted' → logprob: -5.127021312713623
    6. 'per' → logprob: -5.252021312713623
    7. 'lambda' → logprob: -5.377021312713623
    8. ' range' → logprob: -5.627021312713623
    9. 'reduce' → logprob: -6.127021312713623
    10. 'perm' → logprob: -6.752021312713623

Token 247: 'ée' (ID: 2894)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0363699197769165
    2. 'e' → logprob: -1.4113699197769165
    3. ')' → logprob: -2.536369800567627
    4. ' à' → logprob: -3.661369800567627
    5. 'ée' → logprob: -3.786369800567627
    6. ' ' → logprob: -4.161369800567627
    7. 'ed' → logprob: -4.161369800567627
    8. 'sorted' → logprob: -4.161369800567627
    9. 'urée' → logprob: -4.411369800567627
    10. ' list' → logprob: -4.411369800567627

Token 248: ' de' (ID: 334)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -1.0169579982757568
    2. ',' → logprob: -1.1419579982757568
    3. 'import' → logprob: -3.016957998275757
    4. '(
' → logprob: -3.141957998275757
    5. ' =' → logprob: -3.266957998275757
    6. '(' → logprob: -3.391957998275757
    7. ' indices' → logprob: -3.766957998275757
    8. '   ' → logprob: -4.016958236694336
    9. 'B' → logprob: -4.141958236694336
    10. '=' → logprob: -4.266958236694336

Token 249: ' façon' (ID: 33381)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4788736402988434
    2. 'list' → logprob: -1.603873610496521
    3. 'sorted' → logprob: -2.1038737297058105
    4. 'filter' → logprob: -4.3538737297058105
    5. 'per' → logprob: -4.3538737297058105
    6. 'lambda' → logprob: -4.7288737297058105
    7. 'it' → logprob: -4.8538737297058105
    8. 'A' → logprob: -6.1038737297058105
    9. 'enumer' → logprob: -6.1038737297058105
    10. 'tuple' → logprob: -6.2288737297058105

Token 250: ' confuse' (ID: 108715)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.7315780520439148
    2. 'sorted' → logprob: -1.3565781116485596
    3. 'list' → logprob: -2.1065781116485596
    4. 'random' → logprob: -3.2315781116485596
    5. ' lambda' → logprob: -3.7315781116485596
    6. 'man' → logprob: -4.3565778732299805
    7. '   ' → logprob: -4.4815778732299805
    8. 'range' → logprob: -5.6065778732299805
    9. 'l' → logprob: -5.6065778732299805
    10. '       ' → logprob: -5.7315778732299805

Token 251: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4253398180007935
    2. ' indices' → logprob: -1.5503398180007935
    3. 'indices' → logprob: -1.8003398180007935
    4. '   ' → logprob: -2.550339698791504
    5. ' B' → logprob: -2.800339698791504
    6. 'B' → logprob: -3.300339698791504
    7. '[' → logprob: -3.800339698791504
    8. ' ,' → logprob: -4.050339698791504
    9. ' ' → logprob: -4.300339698791504
    10. ',
' → logprob: -4.425339698791504

Token 252: '   ' (ID: 271)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.9739468097686768
    2. 'B' → logprob: -1.5989468097686768
    3. ' indices' → logprob: -1.7239468097686768
    4. '   ' → logprob: -2.3489468097686768
    5. ' idx' → logprob: -2.9739468097686768
    6. 'indices' → logprob: -3.3489468097686768
    7. ' for' → logprob: -4.348946571350098
    8. 'idx' → logprob: -4.598946571350098
    9. ' permutations' → logprob: -4.848946571350098
    10. ' ind' → logprob: -5.848946571350098

Token 253: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.7326843738555908
    2. 'indices' → logprob: -1.9826843738555908
    3. 'idx' → logprob: -2.232684373855591
    4. ' indices' → logprob: -2.482684373855591
    5. ' B' → logprob: -2.482684373855591
    6. ' idx' → logprob: -2.732684373855591
    7. 'indexes' → logprob: -4.732684135437012
    8. '   ' → logprob: -4.857684135437012
    9. 'index' → logprob: -5.482684135437012
    10. 'from' → logprob: -5.482684135437012

Token 254: '_idx' (ID: 15257)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.4482423961162567
    2. '_indices' → logprob: -1.323242425918579
    3. '_' → logprob: -2.823242425918579
    4. '_per' → logprob: -4.3232421875
    5. '_indexes' → logprob: -5.1982421875
    6. '_sorted' → logprob: -5.4482421875
    7. '2' → logprob: -5.6982421875
    8. 'indices' → logprob: -5.6982421875
    9. '_idx' → logprob: -6.0732421875
    10. '_idxs' → logprob: -6.9482421875

Token 255: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31353792548179626
    2. ' =' → logprob: -1.3135379552841187
    3. ',' → logprob: -8.81353759765625
    4. 's' → logprob: -9.43853759765625
    5. ')' → logprob: -10.56353759765625
    6. '_' → logprob: -12.31353759765625
    7. ' ' → logprob: -12.43853759765625
    8. '=[]' → logprob: -13.43853759765625
    9. '=list' → logprob: -13.68853759765625
    10. ' ,' → logprob: -13.68853759765625

Token 256: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5861132144927979
    2. 'sorted' → logprob: -0.8361132144927979
    3. ' list' → logprob: -5.336112976074219
    4. ' sorted' → logprob: -6.211112976074219
    5. 'range' → logprob: -6.211112976074219
    6. 'tuple' → logprob: -7.211112976074219
    7. '[' → logprob: -8.461112976074219
    8. 'set' → logprob: -8.586112976074219
    9. 'reduce' → logprob: -10.211112976074219
    10. '{' → logprob: -10.711112976074219

Token 257: '(en' (ID: 36375)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.0007996229105629027
    2. '(sorted' → logprob: -7.375799655914307
    3. '(map' → logprob: -9.000799179077148
    4. 'range' → logprob: -10.625799179077148
    5. '(' → logprob: -10.875799179077148
    6. '(en' → logprob: -13.125799179077148
    7. '(filter' → logprob: -13.375799179077148
    8. '(per' → logprob: -13.625799179077148
    9. 'sorted' → logprob: -14.375799179077148
    10. '(re' → logprob: -14.500799179077148

Token 258: 'umer' (ID: 3986)
  Prédit: 'umer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umer' → logprob: -9.031157969729975e-05
    2. 'range' → logprob: -10.000090599060059
    3. 'um' → logprob: -10.125090599060059
    4. '(range' → logprob: -13.000090599060059
    5. 'umeric' → logprob: -14.500090599060059
    6. 'u' → logprob: -14.750090599060059
    7. '(' → logprob: -14.875090599060059
    8. 'ume' → logprob: -15.000090599060059
    9. '```' → logprob: -15.500090599060059
    10. 'umber' → logprob: -15.500090599060059

Token 259: 'ate' (ID: 379)
  Prédit: 'ate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -5.512236498361744e-07
    2. 't' → logprob: -15.125000953674316
    3. 'e' → logprob: -15.375000953674316
    4. 'rate' → logprob: -18.125
    5. 'te' → logprob: -18.125
    6. 'range' → logprob: -18.75
    7. 'um' → logprob: -18.875
    8. 'a' → logprob: -19.0
    9. 'able' → logprob: -19.0
    10. 'ATE' → logprob: -19.0

Token 260: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -5.931863051955588e-05
    2. 'B' → logprob: -10.000059127807617
    3. '(' → logprob: -11.750059127807617
    4. '(A' → logprob: -13.125059127807617
    5. ')' → logprob: -13.875059127807617
    6. ',B' → logprob: -14.250059127807617
    7. ' B' → logprob: -14.375059127807617
    8. ')(' → logprob: -14.750059127807617
    9. ',' → logprob: -15.000059127807617
    10. '(
' → logprob: -15.000059127807617

Token 261: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.02987545169889927
    2. '))
' → logprob: -3.5298755168914795
    3. '))

' → logprob: -10.654875755310059
    4. ' ))' → logprob: -10.654875755310059
    5. '   ' → logprob: -11.029875755310059
    6. ',' → logprob: -11.029875755310059
    7. ')' → logprob: -11.654875755310059
    8. ' ' → logprob: -11.904875755310059
    9. '))
' → logprob: -12.029875755310059
    10. ')))' → logprob: -12.154875755310059

Token 262: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3714625835418701
    2. ')' → logprob: -1.6214625835418701
    3. '
' → logprob: -2.62146258354187
    4. ')
' → logprob: -4.496462821960449
    5. 'B' → logprob: -4.621462821960449
    6. 'sorted' → logprob: -4.871462821960449
    7. '<|end|>' → logprob: -6.121462821960449
    8. ' B' → logprob: -6.496462821960449
    9. '    
' → logprob: -6.746462821960449
    10. '.sort' → logprob: -6.871462821960449

Token 263: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.11505899578332901
    2. ' B' → logprob: -2.9900588989257812
    3. '   ' → logprob: -3.4900588989257812
    4. ')' → logprob: -4.240058898925781
    5. 'sorted' → logprob: -4.990058898925781
    6. ',' → logprob: -6.240058898925781
    7. '
' → logprob: -6.615058898925781
    8. ')
' → logprob: -7.365058898925781
    9. ' sorted' → logprob: -7.365058898925781
    10. '    
' → logprob: -8.365058898925781

Token 264: '_map' (ID: 11824)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.009069492109119892
    2. '_sorted' → logprob: -5.009069442749023
    3. '2' → logprob: -6.259069442749023
    4. 'idx' → logprob: -9.259069442749023
    5. '_idxs' → logprob: -9.509069442749023
    6. '=' → logprob: -9.759069442749023
    7. '_indices' → logprob: -9.759069442749023
    8. '.sort' → logprob: -10.509069442749023
    9. 'sorted' → logprob: -10.634069442749023
    10. '_' → logprob: -10.759069442749023

Token 265: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2836189866065979
    2. ' =' → logprob: -1.4086189270019531
    3. 'sorted' → logprob: -6.533618927001953
    4. '_sorted' → logprob: -8.158618927001953
    5. ')' → logprob: -8.408618927001953
    6. '=lambda' → logprob: -8.908618927001953
    7. '(sorted' → logprob: -9.158618927001953
    8. '   ' → logprob: -9.783618927001953
    9. '.sort' → logprob: -10.033618927001953
    10. 's' → logprob: -10.408618927001953

Token 266: ' list' (ID: 1562)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.09672083705663681
    2. 'dict' → logprob: -2.7217209339141846
    3. 'list' → logprob: -4.4717206954956055
    4. ' sorted' → logprob: -4.5967206954956055
    5. ' dict' → logprob: -5.7217206954956055
    6. '{' → logprob: -6.7217206954956055
    7. ' list' → logprob: -8.846720695495605
    8. 'map' → logprob: -9.846720695495605
    9. 'lambda' → logprob: -9.846720695495605
    10. '   ' → logprob: -9.846720695495605

Token 267: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.34486404061317444
    2. '(sorted' → logprob: -1.344864010810852
    3. '(filter' → logprob: -3.5948641300201416
    4. '(' → logprob: -5.9698638916015625
    5. 'sorted' → logprob: -7.8448638916015625
    6. '(
' → logprob: -7.8448638916015625
    7. '(sort' → logprob: -9.094863891601562
    8. 'map' → logprob: -9.094863891601562
    9. '(re' → logprob: -10.094863891601562
    10. '(zip' → logprob: -10.844863891601562

Token 268: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0004160145472269505
    2. '(' → logprob: -8.500415802001953
    3. '(item' → logprob: -9.000415802001953
    4. 'lambda' → logprob: -10.000415802001953
    5. '(sorted' → logprob: -11.000415802001953
    6. '(operator' → logprob: -11.625415802001953
    7. '   ' → logprob: -12.000415802001953
    8. 'item' → logprob: -12.500415802001953
    9. '(
' → logprob: -12.750415802001953
    10. '(s' → logprob: -13.625415802001953

Token 269: ' t' (ID: 260)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.29268136620521545
    2. 'x' → logprob: -1.792681336402893
    3. ' lambda' → logprob: -2.6676814556121826
    4. ' x' → logprob: -4.4176812171936035
    5. '(lambda' → logprob: -5.4176812171936035
    6. 't' → logprob: -7.5426812171936035
    7. 'idx' → logprob: -8.292681694030762
    8. '   ' → logprob: -8.792681694030762
    9. ' t' → logprob: -10.042681694030762
    10. 'b' → logprob: -10.042681694030762

Token 270: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0026267850771546364
    2. ' :' → logprob: -6.252626895904541
    3. ':t' → logprob: -8.627626419067383
    4. ' t' → logprob: -8.752626419067383
    5. ':B' → logprob: -9.002626419067383
    6. 't' → logprob: -9.127626419067383
    7. 'B' → logprob: -9.877626419067383
    8. ':
' → logprob: -11.377626419067383
    9. ':list' → logprob: -11.502626419067383
    10. ' B' → logprob: -12.002626419067383

Token 271: ' (' (ID: 350)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.15549317002296448
    2. '(t' → logprob: -2.2804932594299316
    3. 'B' → logprob: -3.6554932594299316
    4. ' t' → logprob: -4.655493259429932
    5. '(B' → logprob: -6.280493259429932
    6. 'A' → logprob: -6.780493259429932
    7. ' (' → logprob: -7.280493259429932
    8. '(' → logprob: -7.405493259429932
    9. '(A' → logprob: -7.405493259429932
    10. ' B' → logprob: -7.655493259429932

Token 272: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0012672555167227983
    2. ' t' → logprob: -7.001267433166504
    3. 'B' → logprob: -8.501267433166504
    4. '(t' → logprob: -9.376267433166504
    5. 'sorted' → logprob: -10.501267433166504
    6. ')t' → logprob: -12.001267433166504
    7. 'A' → logprob: -12.126267433166504
    8. '   ' → logprob: -12.251267433166504
    9. '(' → logprob: -12.626267433166504
    10. 'item' → logprob: -12.876267433166504

Token 273: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008622493594884872
    2. '0' → logprob: -5.008622646331787
    3. 't' → logprob: -7.008622646331787
    4. '1' → logprob: -7.883622646331787
    5. ':' → logprob: -8.758622169494629
    6. ')' → logprob: -9.508622169494629
    7. '
' → logprob: -9.758622169494629
    8. ' ' → logprob: -9.758622169494629
    9. ' t' → logprob: -9.883622169494629
    10. 'B' → logprob: -10.008622169494629

Token 274: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10022284835577011
    2. '0' → logprob: -2.3502228260040283
    3. '
' → logprob: -11.72522258758545
    4. ' ' → logprob: -12.85022258758545
    5. '[' → logprob: -14.47522258758545
    6. '```' → logprob: -14.85022258758545
    7. '' → logprob: -14.91272258758545
    8. '   ' → logprob: -14.91272258758545
    9. 'i' → logprob: -14.91272258758545
    10. '

' → logprob: -15.10022258758545

Token 275: '],' (ID: 2155)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5984810590744019
    2. ',' → logprob: -0.8484810590744019
    3. '],' → logprob: -4.348481178283691
    4. ',t' → logprob: -4.973481178283691
    5. ' ,' → logprob: -7.223481178283691
    6. '),' → logprob: -7.473481178283691
    7. '][' → logprob: -8.223481178283691
    8. '],[' → logprob: -8.473481178283691
    9. 't' → logprob: -8.973481178283691
    10. ',[' → logprob: -9.598481178283691

Token 276: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.012543906457722187
    2. ' t' → logprob: -4.387543678283691
    3. ')t' → logprob: -11.262543678283691
    4. 'B' → logprob: -11.637543678283691
    5. ')' → logprob: -11.887543678283691
    6. '0' → logprob: -13.762543678283691
    7. ' B' → logprob: -14.262543678283691
    8. '	t' → logprob: -14.262543678283691
    9. ' ' → logprob: -14.387543678283691
    10. '   ' → logprob: -14.637543678283691

Token 277: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002158146962756291
    2. '0' → logprob: -8.500215530395508
    3. '),' → logprob: -12.750215530395508
    4. ')' → logprob: -13.250215530395508
    5. 't' → logprob: -13.625215530395508
    6. ',' → logprob: -13.750215530395508
    7. '
' → logprob: -14.000215530395508
    8. ' ' → logprob: -14.250215530395508
    9. '1' → logprob: -14.500215530395508
    10. '(' → logprob: -14.875215530395508

Token 278: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002510974183678627
    2. 't' → logprob: -6.002511024475098
    3. '1' → logprob: -10.377511024475098
    4. '[' → logprob: -13.127511024475098
    5. ' t' → logprob: -14.002511024475098
    6. ' ' → logprob: -14.252511024475098
    7. '
' → logprob: -16.25251007080078
    8. '   ' → logprob: -16.25251007080078
    9. '۰' → logprob: -16.62751007080078
    10. ')' → logprob: -17.00251007080078

Token 279: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -7.076218025758862e-05
    2. ')' → logprob: -10.125070571899414
    3. ' ),' → logprob: -10.875070571899414
    4. '   ' → logprob: -11.875070571899414
    5. '),
' → logprob: -13.000070571899414
    6. ' ' → logprob: -14.625070571899414
    7. ',' → logprob: -14.875070571899414
    8. ')),' → logprob: -15.500070571899414
    9. '),

' → logprob: -15.500070571899414
    10. ')))' → logprob: -15.625070571899414

Token 280: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.07109057903289795
    2. ' B' → logprob: -2.6960906982421875
    3. 'sorted' → logprob: -7.1960906982421875
    4. ' sorted' → logprob: -8.696090698242188
    5. ' reversed' → logprob: -9.196090698242188
    6. '   ' → logprob: -9.446090698242188
    7. 're' → logprob: -11.071090698242188
    8. 'enumer' → logprob: -11.571090698242188
    9. 'reverse' → logprob: -11.696090698242188
    10. ' ' → logprob: -12.196090698242188

Token 281: '_idx' (ID: 15257)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1288960576057434
    2. '_idx' → logprob: -2.1288959980010986
    3. '   ' → logprob: -7.378896236419678
    4. ')' → logprob: -8.00389575958252
    5. 'idx' → logprob: -8.12889575958252
    6. ')))' → logprob: -8.25389575958252
    7. ' ))' → logprob: -8.87889575958252
    8. '_IDX' → logprob: -9.75389575958252
    9. ' ' → logprob: -10.37889575958252
    10. '  ' → logprob: -10.62889575958252

Token 282: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -1.8550976164988242e-05
    2. '))
' → logprob: -11.625018119812012
    3. ' ))' → logprob: -11.875018119812012
    4. ')' → logprob: -13.625018119812012
    5. ')))' → logprob: -14.375018119812012
    6. '   ' → logprob: -14.625018119812012
    7. '));' → logprob: -15.500018119812012
    8. ' ' → logprob: -16.875019073486328
    9. '()))' → logprob: -17.125019073486328
    10. '))

' → logprob: -17.375019073486328

Token 283: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3292939364910126
    2. '   ' → logprob: -1.329293966293335
    3. '<|end|>' → logprob: -4.954293727874756
    4. '.sort' → logprob: -6.329293727874756
    5. 'B' → logprob: -6.454293727874756
    6. 'sorted' → logprob: -6.829293727874756
    7. ')
' → logprob: -6.829293727874756
    8. '
' → logprob: -7.454293727874756
    9. '[::-' → logprob: -7.579293727874756
    10. 'sort' → logprob: -7.829293727874756

Token 284: ' B' (ID: 418)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2654532194137573
    2. 'B' (adapté à ' B') → logprob: -2.265453338623047
    3. 'sorted' → logprob: -3.140453338623047
    4. '   ' → logprob: -3.390453338623047
    5. ' B' → logprob: -3.890453338623047
    6. ' sorted' → logprob: -4.765453338623047
    7. '.sort' → logprob: -4.765453338623047
    8. ')
' → logprob: -5.140453338623047
    9. '#' → logprob: -6.015453338623047
    10. 'sort' → logprob: -6.265453338623047

Token 285: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.038051363080739975
    2. '_sorted' → logprob: -3.4130513668060303
    3. '_sort' → logprob: -5.913051128387451
    4. '_idx' → logprob: -7.288051128387451
    5. '2' → logprob: -8.03805160522461
    6. 'sorted' → logprob: -8.16305160522461
    7. '3' → logprob: -8.41305160522461
    8. 'map' → logprob: -9.66305160522461
    9. 'sort' → logprob: -9.66305160522461
    10. 'idx' → logprob: -11.53805160522461

Token 286: '_sorted' (ID: 104993)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.006691680755466223
    2. ')' → logprob: -5.6316914558410645
    3. ' =' → logprob: -6.7566914558410645
    4. '=' → logprob: -7.6316914558410645
    5. '<|end|>' → logprob: -7.6316914558410645
    6. '_sorted' → logprob: -7.7566914558410645
    7. ').' → logprob: -8.256691932678223
    8. 'sorted' → logprob: -9.631691932678223
    9. '.sorted' → logprob: -10.006691932678223
    10. '[::-' → logprob: -10.131691932678223

Token 287: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741118848323822
    2. ' =' → logprob: -0.9741119146347046
    3. ')' → logprob: -10.849111557006836
    4. '=B' → logprob: -12.099111557006836
    5. 'sorted' → logprob: -12.974111557006836
    6. '(sorted' → logprob: -13.099111557006836
    7. '(' → logprob: -13.849111557006836
    8. '.sort' → logprob: -14.099111557006836
    9. ')=' → logprob: -14.224111557006836
    10. ',' → logprob: -14.474111557006836

Token 288: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.008615042082965374
    2. ' sorted' → logprob: -4.758615016937256
    3. 'list' → logprob: -15.133615493774414
    4. '   ' → logprob: -15.633615493774414
    5. '(sorted' → logprob: -15.883615493774414
    6. 's' → logprob: -18.508615493774414
    7. 'sort' → logprob: -19.008615493774414
    8. '.sorted' → logprob: -19.008615493774414
    9. 'Sorted' → logprob: -19.633615493774414
    10. ' ' → logprob: -19.883615493774414

Token 289: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -5.080963092041202e-06
    2. '(' → logprob: -12.250004768371582
    3. 'B' → logprob: -15.750004768371582
    4. '(lambda' → logprob: -16.1250057220459
    5. '(
' → logprob: -18.1250057220459
    6. '(b' → logprob: -18.7500057220459
    7. '((' → logprob: -18.7500057220459
    8. '(C' → logprob: -19.6250057220459
    9. ' (' → logprob: -20.8750057220459
    10. '(A' → logprob: -21.2500057220459

Token 290: '_map' (ID: 11824)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.11677496880292892
    2. ',' → logprob: -2.3667750358581543
    3. ',key' → logprob: -5.491775035858154
    4. '_map' → logprob: -5.741775035858154
    5. 'key' → logprob: -5.866775035858154
    6. '(B' → logprob: -5.991775035858154
    7. ')' → logprob: -6.491775035858154
    8. ' B' → logprob: -7.616775035858154
    9. ',B' → logprob: -7.991775035858154
    10. '(key' → logprob: -7.991775035858154

Token 291: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2701321244239807
    2. ')' → logprob: -1.645132064819336
    3. ',key' → logprob: -3.145132064819336
    4. 'key' → logprob: -7.645132064819336
    5. ' ,' → logprob: -9.395132064819336
    6. ' key' → logprob: -10.395132064819336
    7. ')
' → logprob: -10.645132064819336
    8. '(key' → logprob: -10.770132064819336
    9. '))' → logprob: -11.770132064819336
    10. ',
' → logprob: -12.395132064819336

Token 292: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11165233701467514
    2. ')' → logprob: -2.361652374267578
    3. '<|end|>' → logprob: -5.486652374267578
    4. 'B' → logprob: -6.111652374267578
    5. '
' → logprob: -6.361652374267578
    6. '    
' → logprob: -6.736652374267578
    7. ' B' → logprob: -7.486652374267578
    8. '[' → logprob: -7.736652374267578
    9. ',' → logprob: -8.611652374267578
    10. ')
' → logprob: -9.111652374267578

Token 293: ' enumerate' (ID: 29671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0402992963790894
    2. 'B' → logprob: -1.2902992963790894
    3. ' B' → logprob: -1.5402992963790894
    4. ')' → logprob: -2.040299415588379
    5. 'C' → logprob: -4.790299415588379
    6. ' C' → logprob: -5.165299415588379
    7. '[' → logprob: -6.040299415588379
    8. '#' → logprob: -6.290299415588379
    9. ',' → logprob: -6.915299415588379
    10. '    
' → logprob: -7.040299415588379

Token 294: '_B' (ID: 3201)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.05974026024341583
    2. '(' → logprob: -3.0597403049468994
    3. '(lambda' → logprob: -4.80974006652832
    4. '(
' → logprob: -6.30974006652832
    5. '<|end|>' → logprob: -7.68474006652832
    6. 'B' → logprob: -8.05974006652832
    7. '_list' → logprob: -9.18474006652832
    8. 'ed' → logprob: -9.93474006652832
    9. '(list' → logprob: -10.55974006652832
    10. ' =' → logprob: -11.30974006652832

Token 295: ' =' (ID: 314)
  Prédit: '_sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.5595815777778625
    2. 'd' → logprob: -1.3095815181732178
    3. ' =' → logprob: -2.0595815181732178
    4. '=' → logprob: -4.309581756591797
    5. '_' → logprob: -5.059581756591797
    6. 'sorted' → logprob: -5.809581756591797
    7. '(sorted' → logprob: -6.434581756591797
    8. '(' → logprob: -6.684581756591797
    9. '(B' → logprob: -6.934581756591797
    10. '_idx' → logprob: -7.809581756591797

Token 296: ' list' (ID: 1562)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.46090054512023926
    2. 'list' → logprob: -1.2109005451202393
    3. ' enumerate' → logprob: -2.9609005451202393
    4. ' list' → logprob: -3.9609005451202393
    5. '(en' → logprob: -8.21090030670166
    6. 'lambda' → logprob: -9.08590030670166
    7. '(list' → logprob: -9.83590030670166
    8. 'sorted' → logprob: -10.71090030670166
    9. 'en' → logprob: -10.83590030670166
    10. '   ' → logprob: -11.58590030670166

Token 297: '(en' (ID: 36375)
  Prédit: '(en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(en' → logprob: -0.0019814528059214354
    2. '(map' → logprob: -6.251981258392334
    3. '(' → logprob: -10.251981735229492
    4. '(zip' → logprob: -11.751981735229492
    5. '(filter' → logprob: -12.501981735229492
    6. 'enumer' → logprob: -12.626981735229492
    7. '(
' → logprob: -13.626981735229492
    8. '(enum' → logprob: -14.376981735229492
    9. '(sorted' → logprob: -15.001981735229492
    10. '((' → logprob: -15.251981735229492

Token 298: 'umer' (ID: 3986)
  Prédit: 'umer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umer' → logprob: -0.0016673270147293806
    2. 'mer' → logprob: -7.126667499542236
    3. 'er' → logprob: -8.251667022705078
    4. 'enumer' → logprob: -8.251667022705078
    5. 'um' → logprob: -9.126667022705078
    6. 'ume' → logprob: -9.626667022705078
    7. 'numer' → logprob: -9.751667022705078
    8. '(' → logprob: -10.876667022705078
    9. '(en' → logprob: -11.376667022705078
    10. 'ate' → logprob: -11.751667022705078

Token 299: 'ate' (ID: 379)
  Prédit: 'ate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -7.147740689106286e-05
    2. 'te' → logprob: -9.75007152557373
    3. 'rate' → logprob: -11.50007152557373
    4. 'e' → logprob: -14.00007152557373
    5. 't' → logprob: -14.25007152557373
    6. '(B' → logprob: -14.37507152557373
    7. 'n' → logprob: -15.62507152557373
    8. 'brate' → logprob: -15.62507152557373
    9. '```' → logprob: -15.87507152557373
    10. '(' → logprob: -15.87507152557373

Token 300: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.00018780550453811884
    2. 'B' → logprob: -9.125187873840332
    3. '(' → logprob: -10.125187873840332
    4. ')' → logprob: -11.125187873840332
    5. ' (' → logprob: -12.000187873840332
    6. '(b' → logprob: -12.375187873840332
    7. ' B' → logprob: -12.750187873840332
    8. ')(' → logprob: -12.750187873840332
    9. '(
' → logprob: -13.375187873840332
    10. '(sorted' → logprob: -13.875187873840332

Token 301: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.004259919282048941
    2. '_sorted' → logprob: -5.754260063171387
    3. '))' → logprob: -8.004260063171387
    4. 'sorted' → logprob: -8.254260063171387
    5. 'map' → logprob: -8.629260063171387
    6. '_idx' → logprob: -8.879260063171387
    7. '(sorted' → logprob: -9.879260063171387
    8. ')))' → logprob: -10.379260063171387
    9. 'idx' → logprob: -10.879260063171387
    10. ')' → logprob: -11.004260063171387

Token 302: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.0595368817448616
    2. '))' → logprob: -2.934536933898926
    3. 'sorted' → logprob: -5.434536933898926
    4. '(sorted' → logprob: -9.934536933898926
    5. '()))' → logprob: -10.184536933898926
    6. ')' → logprob: -10.309536933898926
    7. '))
' → logprob: -10.434536933898926
    8. '   ' → logprob: -10.684536933898926
    9. ')))' → logprob: -10.809536933898926
    10. 'Sorted' → logprob: -11.059536933898926

Token 303: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5304755568504333
    2. ')' → logprob: -0.9054755568504333
    3. '())' → logprob: -5.155475616455078
    4. '()))' → logprob: -6.780475616455078
    5. '()' → logprob: -8.780475616455078
    6. ')))' → logprob: -9.405475616455078
    7. ')]' → logprob: -9.405475616455078
    8. ')}' → logprob: -10.405475616455078
    9. '))
' → logprob: -10.780475616455078
    10. ',' → logprob: -11.405475616455078

Token 304: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13051311671733856
    2. ')' → logprob: -2.7555131912231445
    3. '<|end|>' → logprob: -3.1305131912231445
    4. '[' → logprob: -5.3805131912231445
    5. ',' → logprob: -6.2555131912231445
    6. '    
' → logprob: -6.7555131912231445
    7. '
' → logprob: -6.7555131912231445
    8. ':' → logprob: -6.8805131912231445
    9. '<|end|>' → logprob: -7.3805131912231445
    10. '```' → logprob: -7.5055131912231445

Token 305: ' B' (ID: 418)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8606985807418823
    2. 'B' (adapté à ' B') → logprob: -1.6106985807418823
    3. ')' → logprob: -1.7356985807418823
    4. 'C' → logprob: -2.985698699951172
    5. '[' → logprob: -3.360698699951172
    6. '[]' → logprob: -3.860698699951172
    7. 'lambda' → logprob: -4.235698699951172
    8. '#' → logprob: -4.985698699951172
    9. 'list' → logprob: -5.110698699951172
    10. 'map' → logprob: -5.110698699951172

Token 306: '3' (ID: 18)
  Prédit: '_map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.23431064188480377
    2. '_idx' → logprob: -1.6093106269836426
    3. 'map' → logprob: -6.484310626983643
    4. '3' → logprob: -6.609310626983643
    5. 'idx' → logprob: -6.609310626983643
    6. '_' → logprob: -6.734310626983643
    7. '_indices' → logprob: -7.109310626983643
    8. '_index' → logprob: -7.109310626983643
    9. '2' → logprob: -7.609310626983643
    10. '_sorted' → logprob: -8.4843111038208

Token 307: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932072639465332
    2. ' =' → logprob: -0.6932072639465332
    3. '_sorted' → logprob: -10.693206787109375
    4. ',' → logprob: -11.568206787109375
    5. '_' → logprob: -12.193206787109375
    6. '[' → logprob: -12.318206787109375
    7. '   ' → logprob: -12.818206787109375
    8. 'sorted' → logprob: -13.068206787109375
    9. ' =[' → logprob: -13.193206787109375
    10. ')' → logprob: -13.193206787109375

Token 308: ' sorted' (ID: 20099)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.04953012987971306
    2. ' list' → logprob: -3.299530029296875
    3. '[list' → logprob: -5.174530029296875
    4. '[' → logprob: -5.549530029296875
    5. ' [' → logprob: -7.049530029296875
    6. 'sorted' → logprob: -7.299530029296875
    7. 'map' → logprob: -9.299530029296875
    8. '[(' → logprob: -9.299530029296875
    9. '(list' → logprob: -10.924530029296875
    10. ' sorted' → logprob: -11.049530029296875

Token 309: '(map' (ID: 16946)
  Prédit: '(en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(en' → logprob: -0.038842882961034775
    2. '(B' → logprob: -3.4138429164886475
    3. '((' → logprob: -6.663842678070068
    4. '([(' → logprob: -6.663842678070068
    5. '([' → logprob: -6.788842678070068
    6. '(list' → logprob: -7.288842678070068
    7. '(' → logprob: -9.038843154907227
    8. '(A' → logprob: -9.038843154907227
    9. '(lambda' → logprob: -9.413843154907227
    10. '(key' → logprob: -9.413843154907227

Token 310: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0063938298262655735
    2. '(item' → logprob: -5.881393909454346
    3. 'item' → logprob: -6.381393909454346
    4. 'lambda' → logprob: -6.631393909454346
    5. '(' → logprob: -8.131393432617188
    6. '(operator' → logprob: -8.381393432617188
    7. '(
' → logprob: -11.256393432617188
    8. '```' → logprob: -11.381393432617188
    9. '   ' → logprob: -11.631393432617188
    10. 'operator' → logprob: -11.881393432617188

Token 311: ' z' (ID: 579)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.27355995774269104
    2. 't' → logprob: -2.148560047149658
    3. 'x' → logprob: -2.398560047149658
    4. ' lambda' → logprob: -3.773560047149658
    5. '(lambda' → logprob: -5.648560047149658
    6. '   ' → logprob: -6.148560047149658
    7. ' t' → logprob: -6.398560047149658
    8. ' x' → logprob: -7.648560047149658
    9. 'e' → logprob: -8.0235595703125
    10. 'l' → logprob: -9.5235595703125

Token 312: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3344959020614624
    2. 'lambda' → logprob: -1.5844959020614624
    3. ' lambda' → logprob: -3.459496021270752
    4. '(lambda' → logprob: -3.584496021270752
    5. ' :' → logprob: -4.209496021270752
    6. '   ' → logprob: -6.334496021270752
    7. 'z' → logprob: -6.709496021270752
    8. 't' → logprob: -7.709496021270752
    9. ' z' → logprob: -7.959496021270752
    10. '(' → logprob: -8.209495544433594

Token 313: ' (' (ID: 350)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.06550811976194382
    2. ' z' → logprob: -2.8155081272125244
    3. 'lambda' → logprob: -6.190507888793945
    4. 'item' → logprob: -6.940507888793945
    5. ' lambda' → logprob: -8.315507888793945
    6. ' item' → logprob: -9.565507888793945
    7. '(z' → logprob: -9.690507888793945
    8. '(lambda' → logprob: -9.690507888793945
    9. '   ' → logprob: -9.940507888793945
    10. ' (' → logprob: -11.815507888793945

Token 314: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0012655939208343625
    2. ' z' → logprob: -6.751265525817871
    3. '(z' → logprob: -9.626265525817871
    4. '   ' → logprob: -11.251265525817871
    5. 'lambda' → logprob: -11.626265525817871
    6. '	z' → logprob: -13.376265525817871
    7. '    ' → logprob: -13.876265525817871
    8. '(' → logprob: -13.876265525817871
    9. '  ' → logprob: -14.001265525817871
    10. ' (' → logprob: -14.251265525817871

Token 315: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02894826978445053
    2. '1' → logprob: -3.7789483070373535
    3. '0' → logprob: -5.2789483070373535
    4. '(' → logprob: -8.653947830200195
    5. ' ' → logprob: -9.153947830200195
    6. ' [' → logprob: -9.528947830200195
    7. ')' → logprob: -9.903947830200195
    8. 'lambda' → logprob: -10.278947830200195
    9. '()[' → logprob: -10.403947830200195
    10. '   ' → logprob: -10.403947830200195

Token 316: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04302031546831131
    2. '0' → logprob: -3.168020248413086
    3. ' ' → logprob: -11.043020248413086
    4. '   ' → logprob: -13.793020248413086
    5. '
' → logprob: -14.168020248413086
    6. '[' → logprob: -14.480520248413086
    7. '-' → logprob: -14.918020248413086
    8. '```' → logprob: -15.043020248413086
    9. 'idx' → logprob: -15.793020248413086
    10. '' → logprob: -15.793020248413086

Token 317: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3532208502292633
    2. '][' → logprob: -1.853220820426941
    3. ')[' → logprob: -1.978220820426941
    4. '),' → logprob: -7.4782209396362305
    5. '()[' → logprob: -7.9782209396362305
    6. '
' → logprob: -8.60322093963623
    7. '>[' → logprob: -8.85322093963623
    8. ')' → logprob: -9.04072093963623
    9. '   ' → logprob: -9.10322093963623
    10. ' )[' → logprob: -9.16572093963623

Token 318: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06202829256653786
    2. '1' → logprob: -2.812028408050537
    3. ' ' → logprob: -10.437027931213379
    4. '
' → logprob: -11.187027931213379
    5. '   ' → logprob: -12.437027931213379
    6. '[' → logprob: -12.749527931213379
    7. '    
' → logprob: -12.937027931213379
    8. '```' → logprob: -14.187027931213379
    9. '
' → logprob: -14.249527931213379
    10. ':' → logprob: -14.499527931213379

Token 319: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07499261945486069
    2. '[' → logprob: -3.3249926567077637
    3. ' ,' → logprob: -4.199992656707764
    4. '),' → logprob: -4.449992656707764
    5. '],' → logprob: -5.824992656707764
    6. ',z' → logprob: -5.824992656707764
    7. '+' → logprob: -6.949992656707764
    8. '   ' → logprob: -7.699992656707764
    9. '-' → logprob: -7.699992656707764
    10. ' ),' → logprob: -7.824992656707764

Token 320: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.01606358028948307
    2. ' z' → logprob: -4.141063690185547
    3. ')' → logprob: -11.766063690185547
    4. 'B' → logprob: -11.766063690185547
    5. '0' → logprob: -12.391063690185547
    6. '	z' → logprob: -13.141063690185547
    7. 'lambda' → logprob: -13.641063690185547
    8. '1' → logprob: -14.141063690185547
    9. '[' → logprob: -14.266063690185547
    10. ' ' → logprob: -14.578563690185547

Token 321: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004988843575119972
    2. '][' → logprob: -5.629988670349121
    3. '1' → logprob: -6.629988670349121
    4. ')[' → logprob: -10.754988670349121
    5. ']' → logprob: -11.004988670349121
    6. ' [' → logprob: -11.879988670349121
    7. ')' → logprob: -12.129988670349121
    8. '
' → logprob: -12.754988670349121
    9. '])' → logprob: -13.379988670349121
    10. ' ' → logprob: -13.504988670349121

Token 322: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012362991692498326
    2. '0' → logprob: -6.751236438751221
    3. 'z' → logprob: -9.876235961914062
    4. '[' → logprob: -12.126235961914062
    5. ' ' → logprob: -12.876235961914062
    6. '][' → logprob: -13.813735961914062
    7. ']' → logprob: -13.876235961914062
    8. '-' → logprob: -13.876235961914062
    9. '   ' → logprob: -14.438735961914062
    10. '' → logprob: -15.063735961914062

Token 323: ']),' (ID: 19560)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7440832853317261
    2. '),' → logprob: -0.9940832853317261
    3. ']),' → logprob: -1.994083285331726
    4. ')),' → logprob: -4.869083404541016
    5. ')[' → logprob: -5.869083404541016
    6. '][' → logprob: -5.994083404541016
    7. ')' → logprob: -6.494083404541016
    8. ')],' → logprob: -6.619083404541016
    9. '],' → logprob: -6.744083404541016
    10. ' ),' → logprob: -7.994083404541016

Token 324: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.10559023916721344
    2. ' enumerate' → logprob: -2.605590343475342
    3. 'B' → logprob: -3.730590343475342
    4. ' B' → logprob: -6.105590343475342
    5. ')' → logprob: -10.355589866638184
    6. '   ' → logprob: -11.168089866638184
    7. ' ' → logprob: -11.293089866638184
    8. 'enum' → logprob: -11.605589866638184
    9. 'filter' → logprob: -11.730589866638184
    10. 'reverse' → logprob: -11.793089866638184

Token 325: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -0.0037288223393261433
    2. 'B' → logprob: -5.753728866577148
    3. '(B' → logprob: -8.378728866577148
    4. 'enumer' → logprob: -8.878728866577148
    5. '(en' → logprob: -9.003728866577148
    6. '(' → logprob: -11.128728866577148
    7. ')' → logprob: -11.378728866577148
    8. '))' → logprob: -11.753728866577148
    9. '```' → logprob: -12.253728866577148
    10. '_b' → logprob: -12.503728866577148

Token 326: '),' (ID: 936)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -7.40998875699006e-05
    2. ')' → logprob: -10.00007438659668
    3. ' ))' → logprob: -11.50007438659668
    4. '))
' → logprob: -11.87507438659668
    5. '   ' → logprob: -12.12507438659668
    6. '),' → logprob: -12.50007438659668
    7. ')))' → logprob: -13.25007438659668
    8. '));' → logprob: -15.62507438659668
    9. ' ' → logprob: -15.62507438659668
    10. '()))' → logprob: -16.50007438659668

Token 327: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.7465728521347046
    2. ' key' → logprob: -0.7465728521347046
    3. 'reverse' → logprob: -3.371572971343994
    4. ' reverse' → logprob: -4.246572971343994
    5. ')' → logprob: -5.746572971343994
    6. '   ' → logprob: -8.871572494506836
    7. '))' → logprob: -10.996572494506836
    8. '(key' → logprob: -12.246572494506836
    9. ' ' → logprob: -12.246572494506836
    10. '  ' → logprob: -12.746572494506836

Token 328: '=lambda' (ID: 64865)
  Prédit: '=item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=item' → logprob: -0.03895227238535881
    2. '=lambda' → logprob: -3.288952350616455
    3. 'item' → logprob: -7.538952350616455
    4. '=' → logprob: -7.913952350616455
    5. 'lambda' → logprob: -11.288951873779297
    6. ' =' → logprob: -15.788951873779297
    7. 'operator' → logprob: -16.413951873779297
    8. 'Item' → logprob: -17.913951873779297
    9. '=
' → logprob: -18.038951873779297
    10. ' item' → logprob: -18.038951873779297

Token 329: ' k' (ID: 372)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.000553151941858232
    2. ' lambda' → logprob: -8.250553131103516
    3. 'item' → logprob: -8.375553131103516
    4. 'operator' → logprob: -10.625553131103516
    5. '=lambda' → logprob: -10.750553131103516
    6. '(lambda' → logprob: -11.750553131103516
    7. 'x' → logprob: -11.875553131103516
    8. '   ' → logprob: -15.375553131103516
    9. 'ambda' → logprob: -15.750553131103516
    10. 'λ' → logprob: -15.875553131103516

Token 330: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03830839321017265
    2. ':k' → logprob: -3.5383083820343018
    3. '=k' → logprob: -5.288308620452881
    4. 'k' → logprob: -6.663308620452881
    5. '=lambda' → logprob: -6.913308620452881
    6. '=' → logprob: -7.038308620452881
    7. ' :' → logprob: -8.413308143615723
    8. 'lambda' → logprob: -10.038308143615723
    9. ' k' → logprob: -10.663308143615723
    10. '	k' → logprob: -11.788308143615723

Token 331: ' (' (ID: 350)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -9.984787902794778e-05
    2. ' k' → logprob: -9.875100135803223
    3. 'lambda' → logprob: -10.000100135803223
    4. 'item' → logprob: -13.250100135803223
    5. '(k' → logprob: -14.500100135803223
    6. ' lambda' → logprob: -15.750100135803223
    7. '(lambda' → logprob: -15.750100135803223
    8. '(' → logprob: -16.125099182128906
    9. '-k' → logprob: -16.125099182128906
    10. 'operator' → logprob: -16.500099182128906

Token 332: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00011951648048125207
    2. '-k' → logprob: -9.12511920928955
    3. '-' → logprob: -12.12511920928955
    4. ' k' → logprob: -12.37511920928955
    5. ' -' → logprob: -15.37511920928955
    6. 'A' → logprob: -15.75011920928955
    7. '   ' → logprob: -15.87511920928955
    8. 'B' → logprob: -16.375120162963867
    9. '+k' → logprob: -16.625120162963867
    10. '-A' → logprob: -16.875120162963867

Token 333: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.037835580878891e-05
    2. ':' → logprob: -10.12505054473877
    3. ')[' → logprob: -13.25005054473877
    4. '[
' → logprob: -13.37505054473877
    5. '0' → logprob: -13.50005054473877
    6. '][' → logprob: -13.87505054473877
    7. ',' → logprob: -14.00005054473877
    8. '1' → logprob: -14.37505054473877
    9. ' [' → logprob: -14.50005054473877
    10. '.' → logprob: -15.00005054473877

Token 334: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.038063179701566696
    2. '0' → logprob: -3.2880632877349854
    3. '-' → logprob: -12.038063049316406
    4. '[' → logprob: -12.163063049316406
    5. '
' → logprob: -12.413063049316406
    6. ' ' → logprob: -13.288063049316406
    7. '2' → logprob: -14.163063049316406
    8. '```' → logprob: -14.225563049316406
    9. '   ' → logprob: -15.038063049316406
    10. '01' → logprob: -15.663063049316406

Token 335: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032838289625942707
    2. '[' → logprob: -6.003283977508545
    3. ',k' → logprob: -7.753283977508545
    4. ' ,' → logprob: -8.253283500671387
    5. '))' → logprob: -9.753283500671387
    6. ']))' → logprob: -11.003283500671387
    7. 'k' → logprob: -11.253283500671387
    8. ',B' → logprob: -12.253283500671387
    9. ')))' → logprob: -12.503283500671387
    10. ')' → logprob: -12.753283500671387

Token 336: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0015085549093782902
    2. ' k' → logprob: -6.501508712768555
    3. '-' → logprob: -12.376508712768555
    4. '-k' → logprob: -13.626508712768555
    5. 'B' → logprob: -15.376508712768555
    6. ' -' → logprob: -15.626508712768555
    7. '1' → logprob: -16.251508712768555
    8. ' ' → logprob: -16.876508712768555
    9. '   ' → logprob: -16.876508712768555
    10. '[' → logprob: -17.501508712768555

Token 337: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00046856500557623804
    2. '][' → logprob: -8.250468254089355
    3. '1' → logprob: -8.750468254089355
    4. ')[' → logprob: -10.625468254089355
    5. '])' → logprob: -12.375468254089355
    6. ' [' → logprob: -12.625468254089355
    7. ']' → logprob: -12.625468254089355
    8. '[
' → logprob: -12.875468254089355
    9. ')' → logprob: -13.375468254089355
    10. ':' → logprob: -13.625468254089355

Token 338: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. '
' → logprob: -14.250000953674316
    3. '0' → logprob: -14.875000953674316
    4. ' ' → logprob: -16.250001907348633
    5. '-' → logprob: -17.500001907348633
    6. '```' → logprob: -17.625001907348633
    7. '[' → logprob: -17.875001907348633
    8. '   ' → logprob: -18.125001907348633
    9. '

' → logprob: -19.375001907348633
    10. '    
' → logprob: -19.625001907348633

Token 339: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.003342997981235385
    2. ')' → logprob: -5.753343105316162
    3. ')))' → logprob: -9.878342628479004
    4. '),' → logprob: -10.378342628479004
    5. '[' → logprob: -10.378342628479004
    6. ' ))' → logprob: -10.753342628479004
    7. '   ' → logprob: -11.878342628479004
    8. '))
' → logprob: -11.878342628479004
    9. ')[' → logprob: -12.753342628479004
    10. ')}' → logprob: -13.503342628479004

Token 340: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5277566313743591
    2. ')' → logprob: -1.027756690979004
    3. '<|end|>' → logprob: -3.527756690979004
    4. '#' → logprob: -4.777756690979004
    5. '
' → logprob: -5.277756690979004
    6. '[' → logprob: -5.527756690979004
    7. '[:]' → logprob: -6.527756690979004
    8. ':' → logprob: -7.027756690979004
    9. 'def' → logprob: -7.402756690979004
    10. '    
' → logprob: -7.902756690979004

Token 341: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8725779056549072
    2. '   ' → logprob: -0.8725779056549072
    3. ')' → logprob: -2.7475779056549072
    4. 'for' → logprob: -3.8725779056549072
    5. '    
' → logprob: -4.247577667236328
    6. '#' (adapté à ' #') → logprob: -4.247577667236328
    7. ' for' → logprob: -4.872577667236328
    8. '<|end|>' → logprob: -4.997577667236328
    9. ')
' → logprob: -5.247577667236328
    10. '  
' → logprob: -5.747577667236328

Token 342: ' Pour' (ID: 13931)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.9249324798583984
    2. '   ' → logprob: -1.6749324798583984
    3. 'for' → logprob: -2.5499324798583984
    4. 'print' → logprob: -2.6749324798583984
    5. ' for' → logprob: -2.7999324798583984
    6. ' C' → logprob: -3.1749324798583984
    7. 'if' → logprob: -3.4249324798583984
    8. ')' → logprob: -3.4249324798583984
    9. ' if' → logprob: -3.7999324798583984
    10. 'i' → logprob: -4.674932479858398

Token 343: ' la' (ID: 557)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3565847873687744
    2. 'i' → logprob: -1.9815847873687744
    3. 'B' → logprob: -3.8565847873687744
    4. ' idx' → logprob: -3.8565847873687744
    5. ' B' → logprob: -3.9815847873687744
    6. ' _' → logprob: -3.9815847873687744
    7. ' k' → logprob: -4.106584548950195
    8. 'A' → logprob: -4.231584548950195
    9. ' A' → logprob: -4.606584548950195
    10. ' t' → logprob: -4.731584548950195

Token 344: ' liste' (ID: 31719)
  Prédit: 'suite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'suite' → logprob: -0.8220694661140442
    2. ' suite' → logprob: -1.4470694065093994
    3. '#' → logprob: -2.5720694065093994
    4. 'B' → logprob: -3.1970694065093994
    5. 'lambda' → logprob: -3.6970694065093994
    6. 'len' → logprob: -3.9470694065093994
    7. 'next' → logprob: -4.3220696449279785
    8. 'C' → logprob: -4.4470696449279785
    9. 'def' → logprob: -4.4470696449279785
    10. 'for' → logprob: -4.6970696449279785

Token 345: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.9097404479980469
    2. 'B' → logprob: -1.6597404479980469
    3. 'A' → logprob: -2.034740447998047
    4. ' de' → logprob: -2.909740447998047
    5. 'D' → logprob: -3.284740447998047
    6. ' des' → logprob: -3.659740447998047
    7. 'de' → logprob: -4.159740447998047
    8. ' C' → logprob: -4.159740447998047
    9. ' B' → logprob: -4.409740447998047
    10. '#' → logprob: -4.534740447998047

Token 346: ',' (ID: 11)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.3187299370765686
    2. ' =' → logprob: -1.4437298774719238
    3. '=' → logprob: -3.943729877471924
    4. '   ' → logprob: -4.693729877471924
    5. ' C' → logprob: -4.818729877471924
    6. ',' → logprob: -9.193730354309082
    7. '=C' → logprob: -10.068730354309082
    8. 'idx' → logprob: -10.568730354309082
    9. 'indices' → logprob: -10.818730354309082
    10. '=[]' → logprob: -11.443730354309082

Token 347: ' on' (ID: 402)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.017009325325489044
    2. ' C' → logprob: -4.142009258270264
    3. '   ' → logprob: -7.392009258270264
    4. 'idx' → logprob: -9.267009735107422
    5. 'indices' → logprob: -9.767009735107422
    6. 'index' → logprob: -10.517009735107422
    7. 'def' → logprob: -10.767009735107422
    8. 'c' → logprob: -10.892009735107422
    9. 'A' → logprob: -11.142009735107422
    10. ' idx' → logprob: -11.392009735107422

Token 348: ' mix' (ID: 9762)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.38359081745147705
    2. ' continue' → logprob: -1.383590817451477
    3. '#' → logprob: -4.5085906982421875
    4. 'append' → logprob: -5.0085906982421875
    5. ' C' → logprob: -5.2585906982421875
    6. 'continu' → logprob: -5.2585906982421875
    7. 'util' → logprob: -5.7585906982421875
    8. 'C' → logprob: -6.0085906982421875
    9. 'contin' → logprob: -6.0085906982421875
    10. 'c' → logprob: -6.2585906982421875

Token 349: 'e' (ID: 68)
  Prédit: 'te'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.21931834518909454
    2. 't' → logprob: -2.469318389892578
    3. 'e' → logprob: -3.344318389892578
    4. 'ted' → logprob: -3.719318389892578
    5. 'C' → logprob: -4.844318389892578
    6. 'B' → logprob: -4.969318389892578
    7. '#' → logprob: -5.094318389892578
    8. 'le' → logprob: -5.219318389892578
    9. ' B' → logprob: -5.344318389892578
    10. 'p' → logprob: -5.969318389892578

Token 350: ' z' (ID: 579)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.8589150309562683
    2. 'B' → logprob: -2.233915090560913
    3. 'lambda' → logprob: -2.483915090560913
    4. ' C' → logprob: -2.608915090560913
    5. 'zip' → logprob: -3.108915090560913
    6. 'list' → logprob: -3.233915090560913
    7. 'map' → logprob: -3.358915090560913
    8. ' B' → logprob: -3.608915090560913
    9. 'range' → logprob: -3.608915090560913
    10. ' lambda' → logprob: -3.858915090560913

Token 351: 'ippage' (ID: 198962)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4570915699005127
    2. 'lambda' → logprob: -2.0820915699005127
    3. 'en' → logprob: -2.5820915699005127
    4. 'ambda' → logprob: -2.5820915699005127
    5. ':' → logprob: -2.9570915699005127
    6. 's' → logprob: -3.0820915699005127
    7. '=lambda' → logprob: -3.0820915699005127
    8. '3' → logprob: -3.0820915699005127
    9. ' =' → logprob: -3.4570915699005127
    10. ' in' → logprob: -3.5820915699005127

Token 352: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6052544116973877
    2. ' =' → logprob: -1.3552544116973877
    3. '=' → logprob: -2.3552544116973877
    4. 'with' → logprob: -3.2302544116973877
    5. '(' → logprob: -4.480254173278809
    6. 'C' → logprob: -4.605254173278809
    7. ' with' → logprob: -4.855254173278809
    8. ',' → logprob: -5.230254173278809
    9. ')' → logprob: -5.355254173278809
    10. '<|end|>' → logprob: -5.730254173278809

Token 353: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.9536681175231934
    2. 'filter' → logprob: -1.2036681175231934
    3. 'zip' → logprob: -2.2036681175231934
    4. 'enumer' → logprob: -2.3286681175231934
    5. 'B' → logprob: -3.5786681175231934
    6. 'list' → logprob: -3.8286681175231934
    7. 'sorted' → logprob: -3.8286681175231934
    8. 'A' → logprob: -4.328668117523193
    9. 'reduce' → logprob: -5.328668117523193
    10. ' map' → logprob: -5.578668117523193

Token 354: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7578614950180054
    2. '=' → logprob: -1.3828614950180054
    3. ' =' → logprob: -1.7578614950180054
    4. '   ' → logprob: -2.882861614227295
    5. 'C' → logprob: -4.132861614227295
    6. '(lambda' → logprob: -4.757861614227295
    7. '=lambda' → logprob: -4.882861614227295
    8. ' ,' → logprob: -4.882861614227295
    9. '(' → logprob: -6.132861614227295
    10. ' C' → logprob: -6.882861614227295

Token 355: ' lambda' (ID: 27871)
  Prédit: 'filter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'filter' → logprob: -0.11477227509021759
    2. ' filter' → logprob: -2.864772319793701
    3. 'lambda' → logprob: -3.864772319793701
    4. ' lambda' → logprob: -4.239772319793701
    5. 'zip' → logprob: -4.489772319793701
    6. ' zip' → logprob: -6.489772319793701
    7. 'reduce' → logprob: -6.614772319793701
    8. 'sorted' → logprob: -7.364772319793701
    9. '   ' → logprob: -7.739772319793701
    10. 'enumer' → logprob: -8.739771842956543

Token 356: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08329743146896362
    2. 'C' → logprob: -2.5832974910736084
    3. '
' → logprob: -6.333297252655029
    4. ' C' → logprob: -6.458297252655029
    5. ',' → logprob: -7.208297252655029
    6. '    
' → logprob: -8.458297729492188
    7. '```' → logprob: -10.708297729492188
    8. ',
' → logprob: -11.458297729492188
    9. ')' → logprob: -11.583297729492188
    10. ':' → logprob: -11.958297729492188

Token 357: ' et' (ID: 859)
  Prédit: 'filter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'filter' → logprob: -0.4213402271270752
    2. 'zip' → logprob: -1.5463402271270752
    3. 'lambda' → logprob: -2.796340227127075
    4. ' filter' → logprob: -3.921340227127075
    5. 'map' → logprob: -4.421339988708496
    6. 'reduce' → logprob: -4.671339988708496
    7. ' lambda' → logprob: -4.796339988708496
    8. 'B' → logprob: -5.046339988708496
    9. ' zip' → logprob: -5.796339988708496
    10. 'sorted' → logprob: -5.921339988708496

Token 358: ' item' (ID: 2169)
  Prédit: 'filter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'filter' → logprob: -0.04308871179819107
    2. ' filter' → logprob: -3.918088674545288
    3. 'sorted' → logprob: -4.668088912963867
    4. 'zip' → logprob: -5.168088912963867
    5. 'reduce' → logprob: -5.168088912963867
    6. 'lambda' → logprob: -7.918088912963867
    7. ' zip' → logprob: -8.418088912963867
    8. 'list' → logprob: -8.543088912963867
    9. ' sorted' → logprob: -8.668088912963867
    10. ' reduce' → logprob: -8.793088912963867

Token 359: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -5.796184723294573e-06
    2. 'get' → logprob: -12.125005722045898
    3. 'getitem' → logprob: -16.7500057220459
    4. 'g' → logprob: -16.8750057220459
    5. 'setter' → logprob: -18.8750057220459
    6. 'gett' → logprob: -19.0000057220459
    7. 's' → logprob: -19.5000057220459
    8. '_get' → logprob: -19.6250057220459
    9. '=' → logprob: -20.0000057220459
    10. 'Getter' → logprob: -20.1250057220459

Token 360: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3482232987880707
    2. 'C' → logprob: -1.473223328590393
    3. ' C' → logprob: -2.8482232093811035
    4. ',' → logprob: -5.4732232093811035
    5. '(' → logprob: -7.3482232093811035
    6. ':' → logprob: -8.098223686218262
    7. '
' → logprob: -8.473223686218262
    8. '(
' → logprob: -8.598223686218262
    9. '    
' → logprob: -8.723223686218262
    10. '```' → logprob: -8.723223686218262

Token 361: ' tr' (ID: 498)
  Prédit: ' extra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' extra' → logprob: -1.3327698707580566
    2. 'extract' → logprob: -1.8327698707580566
    3. 'extra' → logprob: -2.0827698707580566
    4. 'item' → logprob: -2.2077698707580566
    5. ' item' → logprob: -2.4577698707580566
    6. 'zip' → logprob: -2.7077698707580566
    7. ' obtenir' → logprob: -3.3327698707580566
    8. 'lambda' → logprob: -3.5827698707580566
    9. ' lambda' → logprob: -4.207769870758057
    10. 'operator' → logprob: -4.707769870758057

Token 362: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.7442619800567627
    2. 'ait' → logprob: -1.3692619800567627
    3. 'a' → logprob: -1.7442619800567627
    4. 'anch' → logprob: -3.9942619800567627
    5. 'aites' → logprob: -4.119261741638184
    6. 'ans' → logprob: -4.369261741638184
    7. 'ouver' → logprob: -4.994261741638184
    8. 'i' → logprob: -5.244261741638184
    9. 'adu' → logprob: -5.369261741638184
    10. 'iter' → logprob: -5.869261741638184

Token 363: '
' (ID: 198)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.43442294001579285
    2. '   ' → logprob: -1.3094229698181152
    3. ' C' → logprob: -3.0594229698181152
    4. ',' → logprob: -3.9344229698181152
    5. '(C' → logprob: -5.559422969818115
    6. 'import' → logprob: -6.184422969818115
    7. 'zip' → logprob: -6.559422969818115
    8. ' =' → logprob: -6.684422969818115
    9. '(
' → logprob: -7.184422969818115
    10. ' ,' → logprob: -7.309422969818115

Token 364: '   ' (ID: 271)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.3731369376182556
    2. '   ' → logprob: -1.2481369972229004
    3. ' C' → logprob: -3.7481369972229004
    4. ',' → logprob: -8.123136520385742
    5. '
' → logprob: -8.623136520385742
    6. '```' → logprob: -8.873136520385742
    7. '    
' → logprob: -9.623136520385742
    8. '``' → logprob: -10.998136520385742
    9. ')' → logprob: -11.123136520385742
    10. '#' → logprob: -11.248136520385742

Token 365: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.0308501236140728
    2. ' C' → logprob: -3.7808501720428467
    3. '   ' → logprob: -4.905849933624268
    4. 'zip' → logprob: -10.155850410461426
    5. 'import' → logprob: -10.530850410461426
    6. 'from' → logprob: -10.655850410461426
    7. '
' → logprob: -10.780850410461426
    8. 'z' → logprob: -11.530850410461426
    9. 'idx' → logprob: -11.655850410461426
    10. 'indices' → logprob: -12.155850410461426

Token 366: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407862544059753
    2. '=' → logprob: -0.9740786552429199
    3. '=list' → logprob: -14.099078178405762
    4. ',' → logprob: -14.849078178405762
    5. ' ' → logprob: -15.724078178405762
    6. '   ' → logprob: -16.099079132080078
    7. '＝' → logprob: -16.224079132080078
    8. ' ' → logprob: -16.599079132080078
    9. '=[]' → logprob: -17.099079132080078
    10. ')' → logprob: -17.474079132080078

Token 367: ' list' (ID: 1562)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.5886756777763367
    2. ' sorted' → logprob: -1.7136757373809814
    3. 'list' → logprob: -1.9636757373809814
    4. ' list' → logprob: -2.0886757373809814
    5. '   ' → logprob: -7.713675498962402
    6. 'tuple' → logprob: -10.713675498962402
    7. '(sorted' → logprob: -10.838675498962402
    8. '[' → logprob: -11.338675498962402
    9. ' [' → logprob: -11.713675498962402
    10. ' ' → logprob: -12.026175498962402

Token 368: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.025523412972688675
    2. '(zip' → logprob: -3.7755234241485596
    3. '(sorted' → logprob: -6.5255231857299805
    4. '(' → logprob: -7.7755231857299805
    5. 'map' → logprob: -8.02552318572998
    6. '(
' → logprob: -10.65052318572998
    7. '(filter' → logprob: -10.77552318572998
    8. 'zip' → logprob: -11.52552318572998
    9. 'sorted' → logprob: -12.27552318572998
    10. '(sort' → logprob: -14.15052318572998

Token 369: '(item' (ID: 10016)
  Prédit: '(item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(item' → logprob: -0.0510113462805748
    2. '(lambda' → logprob: -3.051011323928833
    3. 'item' → logprob: -6.301011562347412
    4. '(' → logprob: -8.551011085510254
    5. 'lambda' → logprob: -9.051011085510254
    6. '(operator' → logprob: -9.176011085510254
    7. '(int' → logprob: -9.801011085510254
    8. '(list' → logprob: -9.926011085510254
    9. '(tuple' → logprob: -10.176011085510254
    10. '(
' → logprob: -11.426011085510254

Token 370: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -3.650518920039758e-06
    2. 'get' → logprob: -12.625003814697266
    3. '(' → logprob: -15.375003814697266
    4. 'getitem' → logprob: -17.375003814697266
    5. 'item' → logprob: -17.750003814697266
    6. '0' → logprob: -18.500003814697266
    7. ' ' → logprob: -18.500003814697266
    8. 'g' → logprob: -18.750003814697266
    9. 'setter' → logprob: -18.875003814697266
    10. 'giver' → logprob: -19.125003814697266

Token 371: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.39093124866485596
    2. '1' → logprob: -1.140931248664856
    3. '(' → logprob: -5.515931129455566
    4. ' ' → logprob: -11.140931129455566
    5. '
' → logprob: -11.515931129455566
    6. ' (' → logprob: -12.890931129455566
    7. '[' → logprob: -14.265931129455566
    8. '```' → logprob: -14.390931129455566
    9. '   ' → logprob: -14.640931129455566
    10. '2' → logprob: -15.390931129455566

Token 372: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1269545704126358
    2. '1' → logprob: -2.1269545555114746
    3. ' ' → logprob: -10.876955032348633
    4. '
' → logprob: -12.501955032348633
    5. '   ' → logprob: -13.626955032348633
    6. '[' → logprob: -14.126955032348633
    7. '(' → logprob: -14.501955032348633
    8. '

' → logprob: -14.751955032348633
    9. '    
' → logprob: -15.501955032348633
    10. ''' → logprob: -15.626955032348633

Token 373: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014722208492457867
    2. ',B' → logprob: -4.6397223472595215
    3. '),' → logprob: -5.3897223472595215
    4. ' ,' → logprob: -8.514721870422363
    5. ',C' → logprob: -9.264721870422363
    6. ')))' → logprob: -10.639721870422363
    7. ',
' → logprob: -11.139721870422363
    8. '   ' → logprob: -11.389721870422363
    9. ',b' → logprob: -12.139721870422363
    10. 'B' → logprob: -12.264721870422363

Token 374: ' sorted' (ID: 20099)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.07918983697891235
    2. 'sorted' → logprob: -3.0791897773742676
    3. 'zip' → logprob: -4.079189777374268
    4. 'enumer' → logprob: -4.579189777374268
    5. ' B' → logprob: -6.579189777374268
    6. 'filter' → logprob: -6.954189777374268
    7. '   ' → logprob: -8.204190254211426
    8. ' zip' → logprob: -9.704190254211426
    9. ' sorted' → logprob: -9.954190254211426
    10. ' enumerate' → logprob: -10.204190254211426

Token 375: '(zip' (ID: 87520)
  Prédit: '(zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(zip' → logprob: -0.010423700325191021
    2. '(en' → logprob: -5.01042366027832
    3. '(B' → logprob: -5.76042366027832
    4. '(' → logprob: -8.63542366027832
    5. 'zip' → logprob: -8.88542366027832
    6. '((' → logprob: -9.76042366027832
    7. '(map' → logprob: -10.01042366027832
    8. '(list' → logprob: -10.38542366027832
    9. '(
' → logprob: -10.38542366027832
    10. '([(' → logprob: -10.88542366027832

Token 376: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.1372285783290863
    2. '(B' → logprob: -2.137228488922119
    3. 'A' → logprob: -4.762228488922119
    4. 'B' → logprob: -6.512228488922119
    5. '(' → logprob: -9.512228965759277
    6. '(N' → logprob: -10.012228965759277
    7. '(range' → logprob: -10.387228965759277
    8. '(
' → logprob: -11.762228965759277
    9. ' A' → logprob: -11.887228965759277
    10. 'N' → logprob: -12.012228965759277

Token 377: ',' (ID: 11)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1771305352449417
    2. ',' → logprob: -2.0521304607391357
    3. ',B' → logprob: -4.427130699157715
    4. ',A' → logprob: -4.927130699157715
    5. 'A' → logprob: -5.427130699157715
    6. '3' → logprob: -5.927130699157715
    7. '),' → logprob: -6.052130699157715
    8. 'B' → logprob: -6.177130699157715
    9. ' ,' → logprob: -7.177130699157715
    10. '(A' → logprob: -7.302130699157715

Token 378: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.008675076998770237
    2. ' B' → logprob: -4.7586750984191895
    3. 'range' → logprob: -10.883674621582031
    4. 'A' → logprob: -11.383674621582031
    5. '   ' → logprob: -11.633674621582031
    6. 'C' → logprob: -12.258674621582031
    7. ' range' → logprob: -12.383674621582031
    8. 'enumer' → logprob: -12.383674621582031
    9. '    ' → logprob: -13.633674621582031
    10. ' ' → logprob: -13.758674621582031

Token 379: '3' (ID: 18)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.006867402233183384
    2. ')))' → logprob: -6.006867408752441
    3. ')' → logprob: -6.381867408752441
    4. '))))' → logprob: -7.006867408752441
    5. ',' → logprob: -7.256867408752441
    6. '3' → logprob: -7.506867408752441
    7. '2' → logprob: -8.131867408752441
    8. '))' → logprob: -9.881867408752441
    9. ' ),' → logprob: -9.881867408752441
    10. '),
' → logprob: -10.006867408752441

Token 380: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.010891714133322239
    2. ')))' → logprob: -5.135891914367676
    3. '))))' → logprob: -5.510891914367676
    4. ',' → logprob: -8.135891914367676
    5. '[' → logprob: -8.635891914367676
    6. '))' → logprob: -9.260891914367676
    7. ')' → logprob: -9.385891914367676
    8. '   ' → logprob: -9.635891914367676
    9. ' ),' → logprob: -10.135891914367676
    10. '))))
' → logprob: -10.385891914367676

Token 381: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.005235648714005947
    2. ' key' → logprob: -5.25523567199707
    3. 'lambda' → logprob: -13.88023567199707
    4. '   ' → logprob: -14.63023567199707
    5. 'reverse' → logprob: -15.13023567199707
    6. '  ' → logprob: -16.75523567199707
    7. '(key' → logprob: -16.88023567199707
    8. '	key' → logprob: -16.88023567199707
    9. ' ' → logprob: -17.63023567199707
    10. '
' → logprob: -17.75523567199707

Token 382: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.3899630904197693
    2. '=item' → logprob: -1.139963150024414
    3. 'item' → logprob: -6.264963150024414
    4. 'lambda' → logprob: -6.764963150024414
    5. '=' → logprob: -10.389963150024414
    6. '(lambda' → logprob: -15.139963150024414
    7. ' lambda' → logprob: -15.264963150024414
    8. ' =' → logprob: -15.764963150024414
    9. ' item' → logprob: -15.889963150024414
    10. 'a' → logprob: -16.639963150024414

Token 383: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.01433379016816616
    2. ' lambda' → logprob: -4.514333724975586
    3. '=lambda' → logprob: -5.889333724975586
    4. 'x' → logprob: -7.639333724975586
    5. 'k' → logprob: -11.764333724975586
    6. 'item' → logprob: -11.889333724975586
    7. 'l' → logprob: -12.764333724975586
    8. 't' → logprob: -13.014333724975586
    9. ':' → logprob: -13.139333724975586
    10. ' x' → logprob: -13.139333724975586

Token 384: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02982511930167675
    2. ':x' → logprob: -3.529825210571289
    3. ' :' → logprob: -9.654825210571289
    4. '=lambda' → logprob: -12.154825210571289
    5. 'x' → logprob: -13.404825210571289
    6. ':
' → logprob: -13.654825210571289
    7. ':(' → logprob: -14.154825210571289
    8. '=x' → logprob: -14.404825210571289
    9. '(x' → logprob: -14.904825210571289
    10. '=' → logprob: -15.154825210571289

Token 385: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.010437269695103168
    2. ' x' → logprob: -4.635437488555908
    3. 'lambda' → logprob: -7.885437488555908
    4. 'item' → logprob: -9.13543701171875
    5. '(x' → logprob: -9.38543701171875
    6. ' lambda' → logprob: -9.51043701171875
    7. ' item' → logprob: -11.51043701171875
    8. '(lambda' → logprob: -11.63543701171875
    9. ' (' → logprob: -11.88543701171875
    10. ' -' → logprob: -12.63543701171875

Token 386: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.511406809295295e-06
    2. ' x' → logprob: -12.375006675720215
    3. '-' → logprob: -14.000006675720215
    4. 'A' → logprob: -15.000006675720215
    5. '-x' → logprob: -15.125006675720215
    6. 'lambda' → logprob: -15.250006675720215
    7. '(x' → logprob: -15.375006675720215
    8. ')x' → logprob: -16.0000057220459
    9. ' -' → logprob: -16.1250057220459
    10. 'item' → logprob: -16.7500057220459

Token 387: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8670179997570813e-05
    2. '0' → logprob: -11.125019073486328
    3. 'x' → logprob: -13.250019073486328
    4. ':' → logprob: -14.500019073486328
    5. '
' → logprob: -14.625019073486328
    6. '[
' → logprob: -15.375019073486328
    7. '1' → logprob: -15.500019073486328
    8. 'A' → logprob: -16.125019073486328
    9. '))' → logprob: -16.250019073486328
    10. '   ' → logprob: -16.500019073486328

Token 388: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018661346985027194
    2. '1' → logprob: -8.750186920166016
    3. '[' → logprob: -10.875186920166016
    4. 'x' → logprob: -12.750186920166016
    5. '01' → logprob: -13.000186920166016
    6. ' ' → logprob: -13.625186920166016
    7. '00' → logprob: -13.750186920166016
    8. '
' → logprob: -14.687686920166016
    9. 'A' → logprob: -15.625186920166016
    10. '-' → logprob: -16.000186920166016

Token 389: '],' (ID: 2155)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0400119349360466
    2. ',' → logprob: -3.2900118827819824
    3. ')))' → logprob: -6.540011882781982
    4. '))))' → logprob: -8.54001235961914
    5. ' ,' → logprob: -8.91501235961914
    6. '   ' → logprob: -9.79001235961914
    7. '])))' → logprob: -10.41501235961914
    8. ')),' → logprob: -11.04001235961914
    9. '),' → logprob: -11.54001235961914
    10. ' ' → logprob: -11.54001235961914

Token 390: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0007525705732405186
    2. ' x' → logprob: -7.2507524490356445
    3. '-' → logprob: -10.500752449035645
    4. '-x' → logprob: -11.625752449035645
    5. ' -' → logprob: -12.250752449035645
    6. 'item' → logprob: -15.250752449035645
    7. '   ' → logprob: -15.375752449035645
    8. ')x' → logprob: -15.750752449035645
    9. 'B' → logprob: -16.00075340270996
    10. '1' → logprob: -16.00075340270996

Token 391: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010349531657993793
    2. '1' → logprob: -6.876034736633301
    3. '-' → logprob: -13.8760347366333
    4. '(' → logprob: -15.5010347366333
    5. '0' → logprob: -16.001035690307617
    6. '))' → logprob: -16.251035690307617
    7. ' [' → logprob: -16.251035690307617
    8. '.' → logprob: -16.376035690307617
    9. '][' → logprob: -16.376035690307617
    10. ')' → logprob: -16.501035690307617

Token 392: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7385154428193346e-05
    2. '0' → logprob: -10.50003719329834
    3. '[' → logprob: -12.25003719329834
    4. ' ' → logprob: -13.37503719329834
    5. '-' → logprob: -13.62503719329834
    6. '
' → logprob: -13.75003719329834
    7. '```' → logprob: -15.12503719329834
    8. '   ' → logprob: -15.31253719329834
    9. '2' → logprob: -16.250038146972656
    10. '۱' → logprob: -16.812538146972656

Token 393: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0035229793284088373
    2. '])))' → logprob: -6.253522872924805
    3. ']))' → logprob: -7.378522872924805
    4. '][' → logprob: -7.503522872924805
    5. '))))' → logprob: -8.628522872924805
    6. '1' → logprob: -9.378522872924805
    7. ']' → logprob: -9.753522872924805
    8. ')))' → logprob: -9.878522872924805
    9. '])))
' → logprob: -10.628522872924805
    10. ' [' → logprob: -12.753522872924805

Token 394: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.100216805934906
    2. '0' → logprob: -2.350216865539551
    3. '
' → logprob: -12.47521686553955
    4. ' ' → logprob: -12.60021686553955
    5. ']))' → logprob: -14.47521686553955
    6. ')' → logprob: -14.66271686553955
    7. ')))' → logprob: -14.72521686553955
    8. '[' → logprob: -14.85021686553955
    9. '   ' → logprob: -15.16271686553955
    10. '))' → logprob: -15.41271686553955

Token 395: '],' (ID: 2155)
  Prédit: '))))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))))' → logprob: -0.032679665833711624
    2. ')))' → logprob: -3.782679557800293
    3. '))' → logprob: -4.782679557800293
    4. '))))
' → logprob: -7.782679557800293
    5. '),' → logprob: -8.282679557800293
    6. ')' → logprob: -9.157679557800293
    7. ')))))
' → logprob: -9.157679557800293
    8. '])))' → logprob: -10.407679557800293
    9. ' ))' → logprob: -10.532679557800293
    10. '))))

' → logprob: -10.907679557800293

Token 396: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0036018555983901024
    2. ' x' → logprob: -5.628602027893066
    3. '1' → logprob: -13.753602027893066
    4. '0' → logprob: -14.753602027893066
    5. ')x' → logprob: -15.878602027893066
    6. '   ' → logprob: -16.00360107421875
    7. '(x' → logprob: -17.00360107421875
    8. '	x' → logprob: -17.12860107421875
    9. ' ' → logprob: -17.37860107421875
    10. ')' → logprob: -17.50360107421875

Token 397: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05513851344585419
    2. '1' → logprob: -2.93013858795166
    3. ']))' → logprob: -8.55513858795166
    4. ']' → logprob: -10.68013858795166
    5. '][' → logprob: -11.55513858795166
    6. ')))' → logprob: -11.55513858795166
    7. ' [' → logprob: -12.43013858795166
    8. '[
' → logprob: -12.68013858795166
    9. ' ' → logprob: -12.80513858795166
    10. '])))' → logprob: -13.05513858795166

Token 398: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.500001907348633
    3. '[' → logprob: -15.500001907348633
    4. '0' → logprob: -15.750001907348633
    5. '```' → logprob: -16.125001907348633
    6. '   ' → logprob: -16.937501907348633
    7. '
' → logprob: -16.937501907348633
    8. '-' → logprob: -17.187501907348633
    9. '۱' → logprob: -17.437501907348633
    10. '১' → logprob: -18.812501907348633

Token 399: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3518724739551544
    2. '1' → logprob: -1.226872444152832
    3. ']))' → logprob: -6.476872444152832
    4. '])))' → logprob: -6.601872444152832
    5. ']' → logprob: -8.101872444152832
    6. '][' → logprob: -9.351872444152832
    7. '])))
' → logprob: -10.476872444152832
    8. '))))' → logprob: -10.726872444152832
    9. ')]' → logprob: -10.976872444152832
    10. '[
' → logprob: -11.351872444152832

Token 400: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. '0' → logprob: -13.37500286102295
    3. ' ' → logprob: -15.00000286102295
    4. '
' → logprob: -15.12500286102295
    5. '```' → logprob: -15.12500286102295
    6. ')' → logprob: -16.500003814697266
    7. '[' → logprob: -17.375003814697266
    8. '])' → logprob: -17.375003814697266
    9. '   ' → logprob: -17.625003814697266
    10. '-' → logprob: -17.687503814697266

Token 401: ']))' (ID: 20259)
  Prédit: '))))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))))' → logprob: -0.05081308260560036
    2. ')))' → logprob: -3.3008131980895996
    3. '))' → logprob: -4.4258131980896
    4. '))))
' → logprob: -7.8008131980896
    5. ')' → logprob: -8.675812721252441
    6. ')))))
' → logprob: -9.425812721252441
    7. '),' → logprob: -11.050812721252441
    8. '))))

' → logprob: -11.175812721252441
    9. ')))),' → logprob: -11.550812721252441
    10. '])))' → logprob: -11.675812721252441

Token 402: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0054272739216685295
    2. ')))' → logprob: -5.255427360534668
    3. ')' → logprob: -8.630427360534668
    4. '))
' → logprob: -11.755427360534668
    5. '   ' → logprob: -12.380427360534668
    6. ' ))' → logprob: -13.380427360534668
    7. '))))' → logprob: -14.255427360534668
    8. ' ' → logprob: -15.755427360534668
    9. '  ' → logprob: -16.13042640686035
    10. '()))' → logprob: -16.63042640686035

Token 403: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07990863919258118
    2. ')' → logprob: -2.704908609390259
    3. '<|end|>' → logprob: -5.079908847808838
    4. '[]' → logprob: -7.454908847808838
    5. '
' → logprob: -7.579908847808838
    6. 'if' → logprob: -7.579908847808838
    7. '[' → logprob: -8.07990837097168
    8. '()' → logprob: -8.07990837097168
    9. '#' → logprob: -8.07990837097168
    10. '    
' → logprob: -8.20490837097168

Token 404: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.553220808506012
    2. 'for' → logprob: -1.6782207489013672
    3. 'if' → logprob: -1.9282207489013672
    4. '   ' → logprob: -2.928220748901367
    5. ')' → logprob: -4.303220748901367
    6. ' for' → logprob: -5.428220748901367
    7. 'B' → logprob: -5.553220748901367
    8. ')
' → logprob: -5.678220748901367
    9. '):
' → logprob: -6.178220748901367
    10. '
' → logprob: -6.303220748901367

Token 405: ' Un' (ID: 1367)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9873322248458862
    2. 'if' → logprob: -1.3623322248458862
    3. 'acc' → logprob: -2.987332344055176
    4. 'inv' → logprob: -3.487332344055176
    5. 'count' → logprob: -3.487332344055176
    6. 'print' → logprob: -3.487332344055176
    7. 'diff' → logprob: -3.487332344055176
    8. '#' → logprob: -3.612332344055176
    9. 's' → logprob: -3.862332344055176
    10. 'in' → logprob: -3.862332344055176

Token 406: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8047753572463989
    2. 'print' → logprob: -1.804775357246399
    3. 'if' → logprob: -2.1797752380371094
    4. 'def' → logprob: -3.0547752380371094
    5. 'sorted' → logprob: -3.1797752380371094
    6. 'ique' → logprob: -3.4297752380371094
    7. ' for' → logprob: -3.5547752380371094
    8. 'B' → logprob: -3.8047752380371094
    9. '#' → logprob: -4.179775238037109
    10. 'idx' → logprob: -4.804775238037109

Token 407: ' qui' (ID: 2780)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.021231630817055702
    2. 'True' → logprob: -4.521231651306152
    3. ' i' → logprob: -5.771231651306152
    4. ' not' → logprob: -6.021231651306152
    5. ' len' → logprob: -6.771231651306152
    6. ' B' → logprob: -7.646231651306152
    7. ' C' → logprob: -8.021231651306152
    8. '(True' → logprob: -8.021231651306152
    9. ' condition' → logprob: -8.271231651306152
    10. '_' → logprob: -8.521231651306152

Token 408: ' "' (ID: 392)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.7366966009140015
    2. ' i' → logprob: -1.7366966009140015
    3. 'True' → logprob: -2.611696720123291
    4. ' not' → logprob: -2.611696720123291
    5. ' len' → logprob: -2.736696720123291
    6. 'i' → logprob: -2.861696720123291
    7. 'len' → logprob: -2.986696720123291
    8. 'not' → logprob: -4.986696720123291
    9. ' C' → logprob: -5.861696720123291
    10. 'C' → logprob: -6.111696720123291

Token 409: 'tour' (ID: 90790)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.5258792042732239
    2. 'True' → logprob: -1.400879144668579
    3. ' not' → logprob: -2.900879144668579
    4. ' i' → logprob: -3.650879144668579
    5. 'len' → logprob: -3.900879144668579
    6. 'i' → logprob: -4.025879383087158
    7. 'not' → logprob: -4.275879383087158
    8. ' len' → logprob: -4.400879383087158
    9. 'B' → logprob: -6.025879383087158
    10. 'A' → logprob: -6.025879383087158

Token 410: 'ne' (ID: 611)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.04272943735122681
    2. 'es' → logprob: -3.917729377746582
    3. 'ne' → logprob: -4.042729377746582
    4. 'r' → logprob: -6.417729377746582
    5. '   ' → logprob: -7.667729377746582
    6. 'p' → logprob: -7.792729377746582
    7. 'er' → logprob: -8.542729377746582
    8. 's' → logprob: -8.542729377746582
    9. '(e' → logprob: -8.667729377746582
    10. ' while' → logprob: -9.292729377746582

Token 411: ' sur' (ID: 1512)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.23296186327934265
    2. ' not' → logprob: -2.232961893081665
    3. '(' → logprob: -3.357961893081665
    4. ' (' → logprob: -3.857961893081665
    5. ' ' → logprob: -4.732961654663086
    6. ' while' → logprob: -4.982961654663086
    7. 'True' → logprob: -5.482961654663086
    8. ' len' → logprob: -5.607961654663086
    9. ':' → logprob: -5.607961654663086
    10. 's' → logprob: -5.732961654663086

Token 412: ' place' (ID: 2475)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6986055970191956
    2. ' True' → logprob: -2.073605537414551
    3. 'True' → logprob: -2.198605537414551
    4. 'i' → logprob: -3.323605537414551
    5. ' len' → logprob: -3.323605537414551
    6. 'range' → logprob: -3.448605537414551
    7. '0' → logprob: -3.698605537414551
    8. ' range' → logprob: -4.073605537414551
    9. 'B' → logprob: -4.198605537414551
    10. 'C' → logprob: -4.198605537414551

Token 413: '"' (ID: 1)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.06724023073911667
    2. 'True' → logprob: -3.6922402381896973
    3. '(' → logprob: -4.692240238189697
    4. ':' → logprob: -4.942240238189697
    5. '(True' → logprob: -4.942240238189697
    6. ' while' → logprob: -5.442240238189697
    7. ' not' → logprob: -5.817240238189697
    8. '   ' → logprob: -5.942240238189697
    9. ' (' → logprob: -5.942240238189697
    10. ' :' → logprob: -6.817240238189697

Token 414: ' pour' (ID: 1930)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.0137780904769897
    2. '   ' → logprob: -1.5137780904769897
    3. ' while' → logprob: -2.0137782096862793
    4. ' i' → logprob: -2.7637782096862793
    5. ' True' → logprob: -2.7637782096862793
    6. 'i' → logprob: -3.0137782096862793
    7. 'True' → logprob: -3.5137782096862793
    8. '
' → logprob: -3.7637782096862793
    9. ':' → logprob: -4.013778209686279
    10. '(' → logprob: -4.513778209686279

Token 415: ' sim' (ID: 1845)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.8377137780189514
    2. ' False' → logprob: -1.7127137184143066
    3. 'True' → logprob: -1.9627137184143066
    4. ' True' → logprob: -2.2127137184143066
    5. 'i' → logprob: -3.4627137184143066
    6. 'len' → logprob: -3.7127137184143066
    7. ' i' → logprob: -3.9627137184143066
    8. 'N' → logprob: -4.462713718414307
    9. '0' → logprob: -4.587713718414307
    10. ' not' → logprob: -5.087713718414307

Token 416: 'uler' (ID: 11802)
  Prédit: 'ple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ple' → logprob: -0.3248158097267151
    2. 'ulate' → logprob: -1.8248157501220703
    3. 'ule' → logprob: -2.9498157501220703
    4. 'uler' → logprob: -3.4498157501220703
    5. 'pler' → logprob: -4.82481575012207
    6. 'pl' → logprob: -5.07481575012207
    7. 'u' → logprob: -6.07481575012207
    8. 'plement' → logprob: -6.07481575012207
    9. '#' → logprob: -6.32481575012207
    10. 'p' → logprob: -6.44981575012207

Token 417: ' la' (ID: 557)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.5597927570343018
    2. 'True' → logprob: -1.0597927570343018
    3. 'len' → logprob: -3.9347927570343018
    4. 'False' → logprob: -4.184792518615723
    5. ' False' → logprob: -4.684792518615723
    6. 'i' → logprob: -5.059792518615723
    7. ' i' → logprob: -5.184792518615723
    8. ' len' → logprob: -5.184792518615723
    9. ' not' → logprob: -5.184792518615723
    10. 'N' → logprob: -5.434792518615723

Token 418: ' boucle' (ID: 174211)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6247408986091614
    2. 'True' → logprob: -1.4997408390045166
    3. 'i' → logprob: -2.4997408390045166
    4. ' True' → logprob: -2.6247408390045166
    5. 'N' → logprob: -3.7497408390045166
    6. 'False' → logprob: -3.9997408390045166
    7. ' len' → logprob: -4.874741077423096
    8. ' i' → logprob: -4.999741077423096
    9. '1' → logprob: -5.249741077423096
    10. 'C' → logprob: -5.874741077423096

Token 419: '
' (ID: 198)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.43649619817733765
    2. 'i' → logprob: -2.1864962577819824
    3. 'True' → logprob: -2.1864962577819824
    4. ' i' → logprob: -2.4364962577819824
    5. 'while' → logprob: -4.186496257781982
    6. ' while' → logprob: -4.686496257781982
    7. '   ' → logprob: -5.311496257781982
    8. '(True' → logprob: -5.686496257781982
    9. ' not' → logprob: -6.436496257781982
    10. 'not' → logprob: -7.186496257781982

Token 420: '   ' (ID: 271)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5886588096618652
    2. 'i' → logprob: -1.2136588096618652
    3. ' while' → logprob: -2.9636588096618652
    4. 'while' → logprob: -3.0886588096618652
    5. '   ' → logprob: -3.4636588096618652
    6. ' True' → logprob: -4.338658809661865
    7. 'True' → logprob: -5.963658809661865
    8. '0' → logprob: -7.588658809661865
    9. ' for' → logprob: -7.838658809661865
    10. 'n' → logprob: -8.463659286499023

Token 421: ' p' (ID: 275)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03187090530991554
    2. ' i' → logprob: -3.5318708419799805
    3. 'while' → logprob: -6.7818708419799805
    4. 'idx' → logprob: -8.40687084197998
    5. '   ' → logprob: -8.53187084197998
    6. ' while' → logprob: -8.65687084197998
    7. '
' → logprob: -9.90687084197998
    8. 'l' → logprob: -10.15687084197998
    9. 'left' → logprob: -10.28187084197998
    10. 'j' → logprob: -10.53187084197998

Token 422: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6532155275344849
    2. 'os' → logprob: -1.2782155275344849
    3. '=' → logprob: -1.7782155275344849
    4. 'r' → logprob: -3.9032154083251953
    5. 'i' → logprob: -5.278215408325195
    6. '1' → logprob: -6.278215408325195
    7. '   ' → logprob: -7.028215408325195
    8. 'ointer' → logprob: -7.528215408325195
    9. 'tr' → logprob: -7.653215408325195
    10. '0' → logprob: -7.903215408325195

Token 423: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006532243569381535
    2. '[' → logprob: -8.500653266906738
    3. '1' → logprob: -9.125653266906738
    4. 'len' → logprob: -9.250653266906738
    5. ' ' → logprob: -9.500653266906738
    6. '-' → logprob: -10.125653266906738
    7. '[]
' → logprob: -10.625653266906738
    8. '[]' → logprob: -11.000653266906738
    9. 'list' → logprob: -11.125653266906738
    10. 'N' → logprob: -11.375653266906738

Token 424: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017900168895721436
    2. '1' → logprob: -7.0017900466918945
    3. '-' → logprob: -8.001790046691895
    4. '[' → logprob: -8.626790046691895
    5. 'len' → logprob: -9.001790046691895
    6. '[]' → logprob: -10.126790046691895
    7. 'list' → logprob: -10.126790046691895
    8. '2' → logprob: -10.376790046691895
    9. 'N' → logprob: -10.626790046691895
    10. '[]
' → logprob: -10.876790046691895

Token 425: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 426: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3137586712837219
    2. ' while' → logprob: -1.5637586116790771
    3. '
' → logprob: -2.938758611679077
    4. '<|end|>' → logprob: -6.563758850097656
    5. ',' → logprob: -6.688758850097656
    6. '   ' → logprob: -7.063758850097656
    7. ' ' → logprob: -7.313758850097656
    8. 'p' → logprob: -7.563758850097656
    9. '	while' → logprob: -7.563758850097656
    10. ' p' → logprob: -8.188758850097656

Token 427: ' i' (ID: 575)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.02988343872129917
    2. 'p' → logprob: -4.15488338470459
    3. ' while' → logprob: -4.40488338470459
    4. 'N' → logprob: -6.90488338470459
    5. 'n' → logprob: -8.27988338470459
    6. '   ' → logprob: -9.40488338470459
    7. 'len' → logprob: -9.52988338470459
    8. ' p' → logprob: -9.77988338470459
    9. '
' → logprob: -10.77988338470459
    10. ' N' → logprob: -11.90488338470459

Token 428: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31586676836013794
    2. ' =' → logprob: -1.4408667087554932
    3. 'n' → logprob: -3.565866708755493
    4. 'nt' → logprob: -6.440866947174072
    5. ' +=' → logprob: -6.940866947174072
    6. 'f' → logprob: -6.940866947174072
    7. ' ' → logprob: -7.440866947174072
    8. '+=' → logprob: -7.690866947174072
    9. '+' → logprob: -7.940866947174072
    10. 'nd' → logprob: -8.065866470336914

Token 429: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5125567317008972
    2. '1' → logprob: -1.262556791305542
    3. ' ' → logprob: -2.137556791305542
    4. ' p' → logprob: -9.387557029724121
    5. 'p' → logprob: -9.762557029724121
    6. '   ' → logprob: -12.137557029724121
    7. 'N' → logprob: -12.762557029724121
    8. ' N' → logprob: -12.950057029724121
    9. '[' → logprob: -13.512557029724121
    10. '2' → logprob: -13.512557029724121

Token 430: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4288768172264099
    2. '1' → logprob: -1.0538768768310547
    3. 'p' → logprob: -9.303876876831055
    4. '-' → logprob: -10.553876876831055
    5. 'len' → logprob: -10.553876876831055
    6. 'N' → logprob: -11.303876876831055
    7. ' ' → logprob: -11.428876876831055
    8. '2' → logprob: -12.303876876831055
    9. '   ' → logprob: -14.428876876831055
    10. 'n' → logprob: -14.678876876831055

Token 431: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.032472312450408936
    2. ' while' → logprob: -4.907472133636475
    3. '<|end|>' → logprob: -4.907472133636475
    4. 'while' → logprob: -5.032472133636475
    5. ' 
' → logprob: -5.407472133636475
    6. '   ' → logprob: -5.782472133636475
    7. '  
' → logprob: -6.782472133636475
    8. '    
' → logprob: -7.407472133636475
    9. '	while' → logprob: -7.782472133636475
    10. ' ' → logprob: -8.157472610473633

Token 432: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.019223902374505997
    2. 'while' → logprob: -4.769223690032959
    3. ' while' → logprob: -5.394223690032959
    4. ' 
' → logprob: -5.894223690032959
    5. '   ' → logprob: -6.644223690032959
    6. '    
' → logprob: -7.269223690032959
    7. '  
' → logprob: -7.394223690032959
    8. '<|end|>' → logprob: -8.269224166870117
    9. '	while' → logprob: -9.769224166870117
    10. '   
' → logprob: -9.769224166870117

Token 433: ' status' (ID: 4495)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.08945803344249725
    2. ' while' → logprob: -2.4644579887390137
    3. '
' → logprob: -8.839458465576172
    4. '   ' → logprob: -9.339458465576172
    5. 'p' → logprob: -9.589458465576172
    6. 'i' → logprob: -9.839458465576172
    7. ' p' → logprob: -10.464458465576172
    8. '	while' → logprob: -10.589458465576172
    9. ' 
' → logprob: -10.839458465576172
    10. ' ' → logprob: -10.839458465576172

Token 434: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4342590868473053
    2. '=' → logprob: -1.059259057044983
    3. '_' → logprob: -5.434258937835693
    4. 's' → logprob: -7.559258937835693
    5. ' ' → logprob: -8.309259414672852
    6. ',' → logprob: -8.559259414672852
    7. 'e' → logprob: -9.684259414672852
    8. 'es' → logprob: -9.809259414672852
    9. ')' → logprob: -10.934259414672852
    10. 'x' → logprob: -11.059259414672852

Token 435: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.31635209918022156
    2. 'True' → logprob: -1.691352128982544
    3. ''' → logprob: -3.316352128982544
    4. ' False' → logprob: -3.691352128982544
    5. ' True' → logprob: -4.566351890563965
    6. '0' → logprob: -4.566351890563965
    7. '"' → logprob: -5.941351890563965
    8. ' '' → logprob: -7.816351890563965
    9. 'None' → logprob: -7.816351890563965
    10. ' ' → logprob: -7.816351890563965

Token 436: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.023863643407821655
    2. ' 
' → logprob: -4.398863792419434
    3. '  
' → logprob: -5.898863792419434
    4. ' while' → logprob: -6.148863792419434
    5. 'while' → logprob: -6.523863792419434
    6. '   ' → logprob: -6.523863792419434
    7. '<|end|>' → logprob: -6.773863792419434
    8. '    
' → logprob: -6.898863792419434
    9. '	
' → logprob: -7.398863792419434
    10. '	while' → logprob: -8.273863792419434

Token 437: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15974842011928558
    2. 'while' → logprob: -3.1597483158111572
    3. ' while' → logprob: -3.1597483158111572
    4. '   ' → logprob: -3.5347483158111572
    5. ' 
' → logprob: -4.159748554229736
    6. '  
' → logprob: -4.659748554229736
    7. '    
' → logprob: -5.784748554229736
    8. '<|end|>' → logprob: -6.534748554229736
    9. '	while' → logprob: -7.034748554229736
    10. ':
' → logprob: -7.409748554229736

Token 438: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.2906215488910675
    2. ' while' → logprob: -1.4156215190887451
    3. '   ' → logprob: -4.915621757507324
    4. '
' → logprob: -6.915621757507324
    5. ' 
' → logprob: -7.415621757507324
    6. '	while' → logprob: -8.290621757507324
    7. '    
' → logprob: -9.040621757507324
    8. '```' → logprob: -10.540621757507324
    9. '  
' → logprob: -10.915621757507324
    10. 'w' → logprob: -10.915621757507324

Token 439: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.05858027935028076
    2. 'i' → logprob: -3.3085803985595703
    3. ' p' → logprob: -4.18358039855957
    4. ' not' → logprob: -5.68358039855957
    5. 'p' → logprob: -6.68358039855957
    6. 'not' → logprob: -8.43358039855957
    7. ' True' → logprob: -10.30858039855957
    8. 'True' → logprob: -10.43358039855957
    9. ' status' → logprob: -10.43358039855957
    10. '(i' → logprob: -10.43358039855957

Token 440: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.03332163766026497
    2. '<' → logprob: -3.5333216190338135
    3. ' <=' → logprob: -5.783321857452393
    4. '<=' → logprob: -8.533321380615234
    5. '<p' → logprob: -9.283321380615234
    6. ' ' → logprob: -9.533321380615234
    7. '<len' → logprob: -9.783321380615234
    8. '<n' → logprob: -10.783321380615234
    9. '<size' → logprob: -11.283321380615234
    10. ' ==' → logprob: -12.158321380615234

Token 441: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0057575455866754055
    2. 'len' → logprob: -5.2557573318481445
    3. ' N' → logprob: -7.6307573318481445
    4. ' len' → logprob: -10.755757331848145
    5. '   ' → logprob: -11.630757331848145
    6. ' ' → logprob: -12.505757331848145
    7. 'n' → logprob: -13.130757331848145
    8. '  ' → logprob: -14.630757331848145
    9. '2' → logprob: -14.880757331848145
    10. '(' → logprob: -15.255757331848145

Token 442: '-' (ID: 12)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5312148332595825
    2. ':' → logprob: -0.9062148332595825
    3. ' and' → logprob: -5.281214714050293
    4. '   ' → logprob: -5.906214714050293
    5. 'and' → logprob: -8.906214714050293
    6. ' :
' → logprob: -9.781214714050293
    7. '):
' → logprob: -10.531214714050293
    8. ' :' → logprob: -11.281214714050293
    9. '       ' → logprob: -12.531214714050293
    10. ':

' → logprob: -12.781214714050293

Token 443: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.7159857786027715e-05
    2. ' ' → logprob: -10.375046730041504
    3. '2' → logprob: -11.250046730041504
    4. '   ' → logprob: -13.500046730041504
    5. '```' → logprob: -14.625046730041504
    6. '0' → logprob: -14.750046730041504
    7. '
' → logprob: -15.500046730041504
    8. '  ' → logprob: -16.81254768371582
    9. ':' → logprob: -17.06254768371582
    10. '-' → logprob: -17.18754768371582

Token 444: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.668931782245636
    2. ':
' → logprob: -0.793931782245636
    3. ' and' → logprob: -3.793931722640991
    4. '   ' → logprob: -4.41893196105957
    5. ' :
' → logprob: -7.79393196105957
    6. 'and' → logprob: -7.91893196105957
    7. '       ' → logprob: -8.79393196105957
    8. ' :' → logprob: -9.29393196105957
    9. ':

' → logprob: -10.79393196105957
    10. '):
' → logprob: -10.79393196105957

Token 445: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03851407393813133
    2. ' if' → logprob: -3.5385141372680664
    3. '   ' → logprob: -5.538514137268066
    4. '
' → logprob: -6.538514137268066
    5. 'if' → logprob: -6.913514137268066
    6. '        
' → logprob: -7.038514137268066
    7. '<|end|>' → logprob: -8.163514137268066
    8. '    
' → logprob: -8.413514137268066
    9. ' x' → logprob: -8.663514137268066
    10. ' 
' → logprob: -8.913514137268066

Token 446: ' p' (ID: 275)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3111324608325958
    2. '       ' → logprob: -1.6861324310302734
    3. 'if' → logprob: -2.5611324310302734
    4. '   ' → logprob: -5.811132431030273
    5. '	if' → logprob: -7.311132431030273
    6. '
' → logprob: -7.811132431030273
    7. '<|end|>' → logprob: -8.186132431030273
    8. ' ' → logprob: -9.436132431030273
    9. '        
' → logprob: -9.686132431030273
    10. '    ' → logprob: -9.686132431030273

Token 447: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.30285459756851196
    2. '=' → logprob: -1.4278545379638672
    3. ' +=' → logprob: -4.302854537963867
    4. ' =' → logprob: -5.427854537963867
    5. ',' → logprob: -5.802854537963867
    6. '<' → logprob: -9.427854537963867
    7. '+' → logprob: -9.552854537963867
    8. '|' → logprob: -9.802854537963867
    9. '<=' → logprob: -9.927854537963867
    10. 'if' → logprob: -10.677854537963867

Token 448: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.20946499705314636
    2. 'i' → logprob: -2.2094650268554688
    3. 'p' → logprob: -3.7094650268554688
    4. 'max' → logprob: -3.9594650268554688
    5. 'B' → logprob: -4.209465026855469
    6. 'A' → logprob: -4.709465026855469
    7. '(i' → logprob: -5.459465026855469
    8. '(C' → logprob: -5.709465026855469
    9. 'min' → logprob: -6.834465026855469
    10. '(' → logprob: -7.084465026855469

Token 449: '[p' (ID: 23234)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.08560171723365784
    2. '[p' → logprob: -2.960601806640625
    3. 'i' → logprob: -3.960601806640625
    4. 'p' → logprob: -4.710601806640625
    5. '[' → logprob: -6.460601806640625
    6. ' i' → logprob: -8.335601806640625
    7. ' p' → logprob: -9.210601806640625
    8. '   ' → logprob: -9.335601806640625
    9. ' [' → logprob: -9.960601806640625
    10. '       ' → logprob: -10.210601806640625

Token 450: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12182324379682541
    2. '[' → logprob: -2.746823310852051
    3. '+' → logprob: -3.246823310852051
    4. ']+' → logprob: -5.746823310852051
    5. ']
' → logprob: -5.996823310852051
    6. '1' → logprob: -5.996823310852051
    7. '][' → logprob: -7.121823310852051
    8. ')]' → logprob: -7.371823310852051
    9. ' ]' → logprob: -7.371823310852051
    10. ' +' → logprob: -7.621823310852051

Token 451: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1450438499450684
    2. '
' → logprob: -1.5200438499450684
    3. '+' → logprob: -1.7700438499450684
    4. 'i' → logprob: -2.5200438499450684
    5. 'if' → logprob: -2.7700438499450684
    6. ' if' → logprob: -3.1450438499450684
    7. 'p' → logprob: -3.1450438499450684
    8. ' +' → logprob: -3.7700438499450684
    9. ' i' → logprob: -4.645043849945068
    10. ' 
' → logprob: -4.770043849945068

Token 452: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.05299273133277893
    2. 'i' → logprob: -3.052992820739746
    3. '       ' → logprob: -5.677992820739746
    4. ' if' → logprob: -7.052992820739746
    5. '   ' → logprob: -9.927992820739746
    6. ' i' → logprob: -10.052992820739746
    7. 'p' → logprob: -11.802992820739746
    8. '
' → logprob: -12.552992820739746
    9. '           ' → logprob: -13.302992820739746
    10. '        
' → logprob: -13.552992820739746

Token 453: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.06658128648996353
    2. 'C' → logprob: -3.0665812492370605
    3. ' p' → logprob: -4.4415812492370605
    4. 'A' → logprob: -5.6915812492370605
    5. ' C' → logprob: -6.9415812492370605
    6. 'i' → logprob: -6.9415812492370605
    7. 'B' → logprob: -7.4415812492370605
    8. ' A' → logprob: -9.691581726074219
    9. ' i' → logprob: -10.066581726074219
    10. '   ' → logprob: -11.566581726074219

Token 454: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.553337037563324
    2. '==' → logprob: -0.928337037563324
    3. '>' → logprob: -4.428337097167969
    4. ' >' → logprob: -5.053337097167969
    5. ' <=' → logprob: -6.053337097167969
    6. '<' → logprob: -6.053337097167969
    7. ' <' → logprob: -6.053337097167969
    8. '<=' → logprob: -6.428337097167969
    9. '>=' → logprob: -7.053337097167969
    10. ' >=' → logprob: -7.053337097167969

Token 455: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3513818085193634
    2. 'i' → logprob: -1.226381778717041
    3. 'N' → logprob: -6.601381778717041
    4. 'p' → logprob: -6.976381778717041
    5. 'C' → logprob: -7.476381778717041
    6. ' i' → logprob: -10.4763822555542
    7. ' ' → logprob: -10.4763822555542
    8. '1' → logprob: -12.7263822555542
    9. '   ' → logprob: -12.7263822555542
    10. 'B' → logprob: -12.9763822555542

Token 456: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5044332146644592
    2. 'i' → logprob: -1.0044331550598145
    3. 'p' → logprob: -3.7544331550598145
    4. 'N' → logprob: -5.3794331550598145
    5. 'C' → logprob: -6.5044331550598145
    6. ' ' → logprob: -8.754433631896973
    7. ' i' → logprob: -8.879433631896973
    8. '   ' → logprob: -11.004433631896973
    9. '1' → logprob: -11.629433631896973
    10. ' p' → logprob: -11.816933631896973

Token 457: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.22239501774311066
    2. ':' → logprob: -1.7223950624465942
    3. '       ' → logprob: -4.472394943237305
    4. ' or' → logprob: -4.972394943237305
    5. ' and' → logprob: -6.347394943237305
    6. ' :
' → logprob: -8.097394943237305
    7. '   ' → logprob: -8.722394943237305
    8. '           ' → logprob: -9.347394943237305
    9. ' :' → logprob: -10.597394943237305
    10. '):
' → logprob: -10.597394943237305

Token 458: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013161895330995321
    2. '       ' → logprob: -7.501316070556641
    3. '
' → logprob: -7.876316070556641
    4. '            
' → logprob: -9.12631607055664
    5. ':
' → logprob: -9.75131607055664
    6. ' break' → logprob: -10.00131607055664
    7. 'break' → logprob: -10.00131607055664
    8. '        
' → logprob: -10.62631607055664
    9. 'i' → logprob: -10.62631607055664
    10. '               ' → logprob: -10.87631607055664

Token 459: ' print' (ID: 2123)
  Prédit: 'status'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'status' → logprob: -0.2647867500782013
    2. '           ' → logprob: -2.389786720275879
    3. 'break' → logprob: -2.389786720275879
    4. '       ' → logprob: -3.139786720275879
    5. '               ' → logprob: -5.889786720275879
    6. ' status' → logprob: -6.639786720275879
    7. 'i' → logprob: -6.889786720275879
    8. ' break' → logprob: -8.139786720275879
    9. 'print' (adapté à ' print') → logprob: -8.764786720275879
    10. '
' → logprob: -9.014786720275879

Token 460: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0019751458894461393
    2. '(' → logprob: -6.751975059509277
    3. '("' → logprob: -7.126975059509277
    4. '(True' → logprob: -14.251975059509277
    5. ' ('' → logprob: -15.501975059509277
    6. '(
' → logprob: -16.126976013183594
    7. ''' → logprob: -16.501976013183594
    8. '(False' → logprob: -16.501976013183594
    9. '('"' → logprob: -16.751976013183594
    10. '(('' → logprob: -17.376976013183594

Token 461: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.019657891243696213
    2. 'No' → logprob: -4.144658088684082
    3. ''' → logprob: -5.644658088684082
    4. '"' → logprob: -10.519658088684082
    5. 'YES' → logprob: -11.019658088684082
    6. '('' → logprob: -12.019658088684082
    7. '"No' → logprob: -12.394658088684082
    8. 'Ye' → logprob: -12.519658088684082
    9. ' Yes' → logprob: -12.644658088684082
    10. ''N' → logprob: -13.644658088684082

Token 462: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.016007035970687866
    2. '')' → logprob: -4.516006946563721
    3. '           ' → logprob: -5.391006946563721
    4. ')
' → logprob: -8.516007423400879
    5. '       ' → logprob: -9.391007423400879
    6. '')
' → logprob: -9.516007423400879
    7. '")
' → logprob: -11.266007423400879
    8. ')' → logprob: -11.516007423400879
    9. '               ' → logprob: -12.641007423400879
    10. ')')
' → logprob: -12.891007423400879

Token 463: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.2524021157296374e-05
    2. '
' → logprob: -10.750052452087402
    3. '       ' → logprob: -11.125052452087402
    4. '               ' → logprob: -11.625052452087402
    5. '            
' → logprob: -12.750052452087402
    6. '<|end|>' → logprob: -13.625052452087402
    7. '		' → logprob: -13.875052452087402
    8. '	       ' → logprob: -15.000052452087402
    9. '   ' → logprob: -15.125052452087402
    10. '          ' → logprob: -15.250052452087402

Token 464: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20796515047550201
    2. 'return' (adapté à ' return') → logprob: -1.7079651355743408
    3. ' return' → logprob: -5.08296537399292
    4. '
' → logprob: -8.207964897155762
    5. '       ' → logprob: -10.707964897155762
    6. '		' → logprob: -11.582964897155762
    7. '               ' → logprob: -11.832964897155762
    8. '            
' → logprob: -11.957964897155762
    9. '	return' → logprob: -12.707964897155762
    10. '   ' → logprob: -12.707964897155762

Token 465: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024839410558342934
    2. '
' → logprob: -3.774839401245117
    3. '        
' → logprob: -6.524839401245117
    4. '		
' → logprob: -10.024839401245117
    5. '<|end|>' → logprob: -10.524839401245117
    6. '	' → logprob: -11.399839401245117
    7. '  
' → logprob: -11.524839401245117
    8. '   ' → logprob: -12.024839401245117
    9. ' 
' → logprob: -12.274839401245117
    10. '
' → logprob: -12.774839401245117

Token 466: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.954393079970032e-05
    2. '
' → logprob: -10.375049591064453
    3. '   ' → logprob: -11.750049591064453
    4. '<|end|>' → logprob: -12.500049591064453
    5. '```' → logprob: -13.000049591064453
    6. '        
' → logprob: -13.000049591064453
    7. '	' → logprob: -14.750049591064453
    8. 'i' → logprob: -14.750049591064453
    9. '<|end|>' → logprob: -15.125049591064453
    10. '           ' → logprob: -16.125049591064453

Token 467: ' i' (ID: 575)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03339808061718941
    2. 'i' (adapté à ' i') → logprob: -4.033398151397705
    3. '
' → logprob: -4.408398151397705
    4. '   ' → logprob: -6.033398151397705
    5. '        
' → logprob: -8.658397674560547
    6. ' i' → logprob: -8.908397674560547
    7. '	' → logprob: -9.158397674560547
    8. '	i' → logprob: -9.408397674560547
    9. '    
' → logprob: -11.283397674560547
    10. '		
' → logprob: -11.658397674560547

Token 468: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5761138796806335
    2. '+=' → logprob: -0.8261138796806335
    3. '+' → logprob: -9.2011137008667
    4. '=' → logprob: -9.5761137008667
    5. ' =' → logprob: -13.2011137008667
    6. ' +' → logprob: -14.2011137008667
    7. '++' → logprob: -14.3261137008667
    8. ']+=' → logprob: -15.0761137008667
    9. ' ' → logprob: -15.3261137008667
    10. '   ' → logprob: -16.076114654541016

Token 469: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -16.62504005432129
    4. '  ' → logprob: -18.75004005432129
    5. 'p' → logprob: -19.12504005432129
    6. '```' → logprob: -19.37504005432129
    7. ' ' → logprob: -20.12504005432129
    8. ' p' → logprob: -20.31254005432129
    9. '+' → logprob: -20.37504005432129
    10. '
' → logprob: -20.43754005432129

Token 470: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. 'p' → logprob: -15.750006675720215
    4. '   ' → logprob: -18.37500762939453
    5. ' p' → logprob: -19.12500762939453
    6. '  ' → logprob: -20.12500762939453
    7. 'C' → logprob: -20.62500762939453
    8. 'i' → logprob: -21.25000762939453
    9. ' ' → logprob: -21.25000762939453
    10. '```' → logprob: -21.43750762939453

Token 471: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20397771894931793
    2. 'print' → logprob: -1.7039777040481567
    3. '<|end|>' → logprob: -6.203977584838867
    4. '```' → logprob: -8.578977584838867
    5. '
' → logprob: -8.828977584838867
    6. ' print' → logprob: -9.453977584838867
    7. '    
' → logprob: -9.953977584838867
    8. '	print' → logprob: -10.703977584838867
    9. '       ' → logprob: -10.953977584838867
    10. '[' → logprob: -11.953977584838867

Token 472: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5795935988426208
    2. 'print' → logprob: -0.8295935988426208
    3. '<|end|>' → logprob: -6.079593658447266
    4. '```' → logprob: -7.204593658447266
    5. '
' → logprob: -8.204593658447266
    6. '    
' → logprob: -8.954593658447266
    7. ' print' → logprob: -9.204593658447266
    8. '	print' → logprob: -9.829593658447266
    9. 'if' → logprob: -11.454593658447266
    10. '       ' → logprob: -12.204593658447266

Token 473: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.941161776310764e-05
    2. '   ' → logprob: -10.250039100646973
    3. ' print' → logprob: -13.000039100646973
    4. '```' → logprob: -13.375039100646973
    5. '	print' → logprob: -16.62504005432129
    6. '    
' → logprob: -16.75004005432129
    7. '#print' → logprob: -18.37504005432129
    8. '  
' → logprob: -18.37504005432129
    9. 'Print' → logprob: -18.75004005432129
    10. '
' → logprob: -18.75004005432129

Token 474: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.005250125657767057
    2. '(' → logprob: -5.255249977111816
    3. '()' → logprob: -11.255249977111816
    4. '(False' → logprob: -13.380249977111816
    5. '("' → logprob: -13.630249977111816
    6. ' ('' → logprob: -15.380249977111816
    7. '(None' → logprob: -15.630249977111816
    8. '(('' → logprob: -16.630250930786133
    9. '(\'' → logprob: -17.130250930786133
    10. '('(' → logprob: -17.130250930786133

Token 475: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.00020377879263833165
    2. ''' → logprob: -8.500204086303711
    3. '"No' → logprob: -15.500204086303711
    4. ' No' → logprob: -17.50020408630371
    5. '('' → logprob: -18.37520408630371
    6. '(No' → logprob: -18.62520408630371
    7. '_No' → logprob: -19.12520408630371
    8. 'Yes' → logprob: -19.50020408630371
    9. ''N' → logprob: -19.75020408630371
    10. '.No' → logprob: -20.00020408630371

Token 476: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.023264581337571144
    2. ')' → logprob: -3.7732646465301514
    3. '')
' → logprob: -11.89826488494873
    4. '()' → logprob: -12.02326488494873
    5. '")' → logprob: -12.52326488494873
    6. ')'' → logprob: -14.14826488494873
    7. '}')' → logprob: -14.14826488494873
    8. ''' → logprob: -15.02326488494873
    9. ')')
' → logprob: -15.27326488494873
    10. ')")' → logprob: -15.52326488494873

Token 477: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16527678072452545
    2. 'main' → logprob: -1.9152767658233643
    3. '<|end|>' → logprob: -5.915277004241943
    4. '
' → logprob: -7.290277004241943
    5. '```' → logprob: -7.415277004241943
    6. '(main' → logprob: -7.540277004241943
    7. ' if' → logprob: -8.665276527404785
    8. '#' → logprob: -9.290276527404785
    9. ' main' → logprob: -9.290276527404785
    10. ')' → logprob: -9.790276527404785

Token 478: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.12304230034351349
    2. '__' → logprob: -2.748042345046997
    3. ' main' → logprob: -3.123042345046997
    4. ' _' → logprob: -5.873042106628418
    5. '_' → logprob: -6.123042106628418
    6. 'main' → logprob: -6.998042106628418
    7. '()' → logprob: -7.498042106628418
    8. '_main' → logprob: -7.873042106628418
    9. '(' → logprob: -8.748042106628418
    10. ' ' → logprob: -8.748042106628418

Token 479: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07487018406391144
    2. '==' → logprob: -2.6998701095581055
    3. ' ==' → logprob: -5.4498701095581055
    4. '=="' → logprob: -7.9498701095581055
    5. '=='' → logprob: -8.699870109558105
    6. 'name' → logprob: -10.324870109558105
    7. '=' → logprob: -11.074870109558105
    8. ' __' → logprob: -11.324870109558105
    9. '()==' → logprob: -11.449870109558105
    10. '__.__' → logprob: -11.824870109558105

Token 480: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.7432603272027336e-06
    2. '==' → logprob: -14.125001907348633
    3. '__.__' → logprob: -14.625001907348633
    4. '___' → logprob: -15.500001907348633
    5. '____' → logprob: -16.375001907348633
    6. '__('' → logprob: -16.500001907348633
    7. '_' → logprob: -17.125001907348633
    8. '__
' → logprob: -17.375001907348633
    9. '__

' → logprob: -18.000001907348633
    10. 'name' → logprob: -18.375001907348633

Token 481: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.002990536391735077
    2. '==' → logprob: -6.00299072265625
    3. ' ==' → logprob: -7.62799072265625
    4. '=="' → logprob: -11.62799072265625
    5. '=='' → logprob: -11.62799072265625
    6. '__.__' → logprob: -12.50299072265625
    7. '___' → logprob: -13.62799072265625
    8. '_' → logprob: -13.87799072265625
    9. '__('' → logprob: -14.00299072265625
    10. '__
' → logprob: -14.62799072265625

Token 482: ' '__' (ID: 28278)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1002463549375534
    2. '"' → logprob: -2.3502464294433594
    3. '__' → logprob: -11.22524642944336
    4. ' "__' → logprob: -11.22524642944336
    5. ' '__' → logprob: -11.35024642944336
    6. ''"' → logprob: -14.47524642944336
    7. ''name' → logprob: -15.60024642944336
    8. '('__' → logprob: -15.60024642944336
    9. '"'' → logprob: -15.97524642944336
    10. ''post' → logprob: -16.60024642944336

Token 483: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.005250829737633467
    2. '__' → logprob: -5.255250930786133
    3. 'name' → logprob: -11.380250930786133
    4. '_main' → logprob: -12.630250930786133
    5. ' main' → logprob: -13.630250930786133
    6. ''' → logprob: -14.755250930786133
    7. '___' → logprob: -15.130250930786133
    8. '__':
' → logprob: -15.630250930786133
    9. '____' → logprob: -16.380250930786133
    10. '	main' → logprob: -16.880250930786133

Token 484: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.014291615225374699
    2. '__' → logprob: -4.264291763305664
    3. '__":
' → logprob: -9.014291763305664
    4. '__.' → logprob: -12.514291763305664
    5. '__.__' → logprob: -14.014291763305664
    6. '__:' → logprob: -14.014291763305664
    7. '_' → logprob: -15.389291763305664
    8. '__('' → logprob: -15.639291763305664
    9. '():
' → logprob: -15.639291763305664
    10. '()' → logprob: -15.889291763305664

Token 485: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0010499580530449748
    2. '   ' → logprob: -7.251049995422363
    3. ' main' → logprob: -8.376049995422363
    4. '	main' → logprob: -9.126049995422363
    5. '    
' → logprob: -15.501049995422363
    6. '_main' → logprob: -15.626049995422363
    7. '  ' → logprob: -15.751049995422363
    8. ' ' → logprob: -16.126049041748047
    9. '```' → logprob: -16.501049041748047
    10. '(main' → logprob: -17.376049041748047

Token 486: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.5
    3. '	main' → logprob: -20.5
    4. 'import' → logprob: -23.0
    5. '(main' → logprob: -25.125
    6. '   ' → logprob: -25.25
    7. '.main' → logprob: -25.75
    8. '_main' → logprob: -26.25
    9. 'Main' → logprob: -28.0
    10. 'mainwindow' → logprob: -28.75

Token 487: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 485
Tokens correctement prédits (1ère position, stricte): 157
Tokens correctement prédits (1ère position, avec adaptation): 166
Tokens correctement prédits (top 10): 313
Précision stricte (1ère position): 32.37%
Précision adaptée (1ère position): 34.23%
Précision (top 10): 64.54%
================================================================================
