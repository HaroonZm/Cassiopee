================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:37:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

input = sys.stdin.readline

N = int(input())
A = list(map(int, input().split()))

asum = sum(A)
asumhalf = asum / 2.0
foresum = 0
presum = 0

for ai in A:
    foresum += ai
    if foresum >= asumhalf:
        break
    presum = foresum

latsum = asum - foresum
difa = abs(foresum - latsum)
latsum = asum - presum
difb = abs(presum - latsum)

print(min(difa, difb))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.044441498816013336
    2. '\n' → logprob: -3.9194414615631104
    3. 'import' → logprob: -4.5444416999816895
    4. '<|end|>' → logprob: -5.0444416999816895
    5. '\' → logprob: -6.4194416999816895
    6. 'newline' → logprob: -6.7944416999816895
    7. '<|end|>' → logprob: -7.2944416999816895
    8. '' → logprob: -7.6694416999816895
    9. '[' → logprob: -7.6694416999816895
    10. ',' → logprob: -7.9194416999816895

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01459955982863903
    2. '.' → logprob: -4.264599323272705
    3. '[' → logprob: -9.139599800109863
    4. ')' → logprob: -9.139599800109863
    5. ' (' → logprob: -9.764599800109863
    6. '()' → logprob: -9.764599800109863
    7. '_' → logprob: -10.764599800109863
    8. '(
' → logprob: -10.764599800109863
    9. '(.)' → logprob: -11.639599800109863
    10. ' ' → logprob: -11.764599800109863

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.05038515478372574
    2. 'sys' → logprob: -3.0503852367401123
    3. ' input' → logprob: -6.675384998321533
    4. 'input' → logprob: -7.550384998321533
    5. ' ' → logprob: -12.550385475158691
    6. '(sys' → logprob: -13.175385475158691
    7. '	sys' → logprob: -13.425385475158691
    8. '=sys' → logprob: -13.800385475158691
    9. ' lambda' → logprob: -15.300385475158691
    10. ' system' → logprob: -15.550385475158691

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0001696902181720361
    2. ' .' → logprob: -9.62516975402832
    3. '.import' → logprob: -9.87516975402832
    4. '.stdin' → logprob: -11.37516975402832
    5. '.readline' → logprob: -11.50016975402832
    6. '.input' → logprob: -11.75016975402832
    7. '.`' → logprob: -12.75016975402832
    8. 'import' → logprob: -13.12516975402832
    9. '.exit' → logprob: -13.25016975402832
    10. '.get' → logprob: -13.37516975402832

Token 7: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.09518855810165405
    2. '.readline' → logprob: -2.470188617706299
    3. '.read' → logprob: -5.095188617706299
    4. ' .' → logprob: -10.59518814086914
    5. '```' → logprob: -10.84518814086914
    6. '.Read' → logprob: -10.97018814086914
    7. '.\' → logprob: -11.84518814086914
    8. '.readlines' → logprob: -11.97018814086914
    9. '.
' → logprob: -12.47018814086914
    10. '.

' → logprob: -12.59518814086914

Token 8: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02774222381412983
    2. '(' → logprob: -3.6527421474456787
    3. '()
' → logprob: -7.277742385864258
    4. '(
' → logprob: -7.902742385864258
    5. '()\' → logprob: -9.277742385864258
    6. '
' → logprob: -9.777742385864258
    7. '().' → logprob: -9.902742385864258
    8. '()

' → logprob: -9.902742385864258
    9. '\n' → logprob: -10.027742385864258
    10. ')' → logprob: -11.277742385864258

Token 9: 'N' (ID: 45)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006518429610878229
    2. '(' → logprob: -5.131518363952637
    3. '().' → logprob: -7.756518363952637
    4. '()
' → logprob: -9.881518363952637
    5. 'def' → logprob: -10.006518363952637
    6. '()

' → logprob: -10.881518363952637
    7. '()\' → logprob: -11.506518363952637
    8. 'for' → logprob: -12.256518363952637
    9. '()`' → logprob: -12.381518363952637
    10. '(n' → logprob: -12.631518363952637

Token 10: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9298182129859924
    2. ')' → logprob: -1.4298181533813477
    3. ' ' → logprob: -1.4298181533813477
    4. ' =' → logprob: -2.8048181533813477
    5. '[' → logprob: -4.054818153381348
    6. '(' → logprob: -4.179818153381348
    7. '+' → logprob: -4.929818153381348
    8. '.' → logprob: -5.679818153381348
    9. '_' → logprob: -5.929818153381348
    10. '>' → logprob: -6.054818153381348

Token 11: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.011054771952331066
    2. 'int' → logprob: -4.511054992675781
    3. ' ' → logprob: -12.511054992675781
    4. ' input' → logprob: -13.011054992675781
    5. '=int' → logprob: -14.886054992675781
    6. 'input' → logprob: -15.386054992675781
    7. '10' → logprob: -15.511054992675781
    8. '(int' → logprob: -16.38605499267578
    9. '<int' → logprob: -16.51105499267578
    10. '20' → logprob: -17.38605499267578

Token 12: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009062878787517548
    2. '(input' → logprob: -4.759062767028809
    3. '(N' → logprob: -8.009062767028809
    4. ' (' → logprob: -10.134062767028809
    5. '()' → logprob: -10.384062767028809
    6. '('' → logprob: -11.634062767028809
    7. '(`' → logprob: -11.884062767028809
    8. '(sys' → logprob: -12.134062767028809
    9. 'input' → logprob: -12.634062767028809
    10. '```' → logprob: -12.634062767028809

Token 13: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.20478378236293793
    2. ')' → logprob: -1.8297837972640991
    3. '()' → logprob: -3.7047836780548096
    4. '(' → logprob: -9.45478343963623
    5. ' ())' → logprob: -10.82978343963623
    6. '`)' → logprob: -12.32978343963623
    7. '))' → logprob: -12.45478343963623
    8. ' )' → logprob: -12.70478343963623
    9. '().' → logprob: -12.82978343963623
    10. '()))' → logprob: -13.07978343963623

Token 14: 'A' (ID: 32)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7448635697364807
    2. '\n' → logprob: -1.494863510131836
    3. '\' → logprob: -2.119863510131836
    4. '(' → logprob: -3.244863510131836
    5. 'for' → logprob: -3.244863510131836
    6. '[' → logprob: -3.869863510131836
    7. '\r' → logprob: -4.494863510131836
    8. ' ' → logprob: -4.619863510131836
    9. '```' → logprob: -4.744863510131836
    10. '
' → logprob: -4.994863510131836

Token 15: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010869937250390649
    2. '[]' → logprob: -7.501087188720703
    3. '.' → logprob: -8.251087188720703
    4. '[A' → logprob: -9.001087188720703
    5. '[:]' → logprob: -10.251087188720703
    6. '=' → logprob: -10.626087188720703
    7. '\[' → logprob: -10.751087188720703
    8. '[i' → logprob: -11.501087188720703
    9. '.append' → logprob: -11.626087188720703
    10. '[N' → logprob: -11.751087188720703

Token 16: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.16026727855205536
    2. 'list' → logprob: -1.9102672338485718
    3. ' [' → logprob: -10.660266876220703
    4. ' []' → logprob: -11.660266876220703
    5. '[list' → logprob: -12.535266876220703
    6. 'input' → logprob: -13.035266876220703
    7. ' input' → logprob: -13.535266876220703
    8. ' ' → logprob: -13.660266876220703
    9. '[' → logprob: -13.785266876220703
    10. '[]' → logprob: -14.535266876220703

Token 17: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00023441045777872205
    2. '(range' → logprob: -8.625234603881836
    3. '(

' → logprob: -11.250234603881836
    4. '(
' → logprob: -11.625234603881836
    5. '(input' → logprob: -11.750234603881836
    6. '(int' → logprob: -12.375234603881836
    7. '(A' → logprob: -12.500234603881836
    8. '()' → logprob: -12.750234603881836
    9. '(map' → logprob: -13.250234603881836
    10. '("("' → logprob: -13.625234603881836

Token 18: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.02575475350022316
    2. '(' → logprob: -3.900754690170288
    3. '(lambda' → logprob: -5.650754928588867
    4. '(str' → logprob: -6.525754928588867
    5. 'int' → logprob: -9.650754928588867
    6. '[int' → logprob: -10.150754928588867
    7. '(input' → logprob: -10.400754928588867
    8. '<int' → logprob: -10.900754928588867
    9. '```' → logprob: -11.650754928588867
    10. '(
' → logprob: -11.775754928588867

Token 19: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.027812952175736427
    2. '(' → logprob: -3.652812957763672
    3. ',input' → logprob: -6.777812957763672
    4. ')' → logprob: -8.902812957763672
    5. 'input' → logprob: -8.902812957763672
    6. ',' → logprob: -11.027812957763672
    7. '=input' → logprob: -11.402812957763672
    8. '))' → logprob: -11.527812957763672
    9. '<|end|>' → logprob: -11.777812957763672
    10. ' (' → logprob: -11.902812957763672

Token 20: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06196824833750725
    2. ' input' → logprob: -2.8119683265686035
    3. '(input' → logprob: -14.811967849731445
    4. ',input' → logprob: -15.936967849731445
    5. ' ' → logprob: -16.686967849731445
    6. '	input' → logprob: -16.811967849731445
    7. '<input' → logprob: -17.311967849731445
    8. '=input' → logprob: -17.436967849731445
    9. ')' → logprob: -18.061967849731445
    10. '_input' → logprob: -19.186967849731445

Token 21: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.153795766294934e-06
    2. '()' → logprob: -12.125005722045898
    3. '()))' → logprob: -14.500005722045898
    4. '())' → logprob: -16.7500057220459
    5. ' ().' → logprob: -16.8750057220459
    6. 'split' → logprob: -17.2500057220459
    7. '(' → logprob: -17.2500057220459
    8. '.split' → logprob: -18.0000057220459
    9. '()));' → logprob: -18.7500057220459
    10. ')' → logprob: -18.8750057220459

Token 22: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.13284550607204437
    2. 'strip' → logprob: -2.132845401763916
    3. 'rstrip' → logprob: -5.132845401763916
    4. '(split' → logprob: -16.257844924926758
    5. ' split' → logprob: -16.257844924926758
    6. 'read' → logprob: -17.132844924926758
    7. 'rs' → logprob: -17.632844924926758
    8. ' strip' → logprob: -17.757844924926758
    9. ')' → logprob: -19.132844924926758
    10. 'spl' → logprob: -19.882844924926758

Token 23: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.026749800890684128
    2. ')' → logprob: -3.901749849319458
    3. '()))' → logprob: -5.151749610900879
    4. '(' → logprob: -8.651749610900879
    5. '())' → logprob: -9.026749610900879
    6. '()' → logprob: -9.526749610900879
    7. ')))' → logprob: -10.651749610900879
    8. ' ))' → logprob: -13.401749610900879
    9. ''))' → logprob: -13.651749610900879
    10. '))
' → logprob: -13.776749610900879

Token 24: 'as' (ID: 288)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1132797971367836
    2. 's' → logprob: -3.6132798194885254
    3. 'for' → logprob: -4.238279819488525
    4. 'dp' → logprob: -4.488279819488525
    5. 'max' → logprob: -4.988279819488525
    6. 'result' → logprob: -5.113279819488525
    7. 'a' → logprob: -5.113279819488525
    8. ')' → logprob: -5.613279819488525
    9. 'count' → logprob: -5.613279819488525
    10. '\' → logprob: -5.988279819488525

Token 25: 'um' (ID: 394)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4768083989620209
    2. 'c' → logprob: -1.6018084287643433
    3. 'sert' → logprob: -1.8518084287643433
    4. '_' → logprob: -5.476808547973633
    5. 'sum' → logprob: -5.476808547973633
    6. 'sertion' → logprob: -6.351808547973633
    7. 'd' → logprob: -6.726808547973633
    8. 't' → logprob: -6.851808547973633
    9. '_s' → logprob: -6.851808547973633
    10. 'k' → logprob: -6.976808547973633

Token 26: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.060211438685655594
    2. '[' → logprob: -2.935211420059204
    3. '_' → logprob: -5.935211658477783
    4. '()' → logprob: -7.185211658477783
    5. ')' → logprob: -7.310211658477783
    6. '+' → logprob: -7.560211658477783
    7. '.' → logprob: -8.935211181640625
    8. '_sum' → logprob: -8.935211181640625
    9. '([' → logprob: -9.185211181640625
    10. '[:]' → logprob: -9.435211181640625

Token 27: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.031825415790081024
    2. ' ' → logprob: -3.531825304031372
    3. 'sum' → logprob: -6.531825542449951
    4. '[' → logprob: -8.406825065612793
    5. ' sum' → logprob: -8.406825065612793
    6. ' [' → logprob: -9.531825065612793
    7. 'A' → logprob: -9.906825065612793
    8. ' A' → logprob: -10.031825065612793
    9. '(sum' → logprob: -13.406825065612793
    10. '[A' → logprob: -13.781825065612793

Token 28: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018333250656723976
    2. '(A' → logprob: -4.018333435058594
    3. '(a' → logprob: -9.268333435058594
    4. '(as' → logprob: -10.143333435058594
    5. '((' → logprob: -10.768333435058594
    6. '(sum' → logprob: -12.393333435058594
    7. '(
' → logprob: -12.643333435058594
    8. '()' → logprob: -12.643333435058594
    9. '("("' → logprob: -13.018333435058594
    10. '('' → logprob: -13.143333435058594

Token 29: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014978687977418303
    2. '()' → logprob: -9.750149726867676
    3. ' )' → logprob: -10.250149726867676
    4. '+' → logprob: -10.875149726867676
    5. '(' → logprob: -11.000149726867676
    6. '())' → logprob: -11.125149726867676
    7. '[' → logprob: -13.000149726867676
    8. ')
' → logprob: -14.375149726867676
    9. '))' → logprob: -14.750149726867676
    10. ')+' → logprob: -14.875149726867676

Token 30: 'as' (ID: 288)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9158738851547241
    2. '
' → logprob: -1.7908738851547241
    3. ' if' → logprob: -2.0408740043640137
    4. ' 
' → logprob: -2.5408740043640137
    5. '\n' → logprob: -2.9158740043640137
    6. '' → logprob: -3.6658740043640137
    7. 'for' → logprob: -4.040874004364014
    8. '.' → logprob: -4.540874004364014
    9. '_' → logprob: -4.540874004364014
    10. ' for' → logprob: -4.540874004364014

Token 31: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.006235567852854729
    2. 'u' → logprob: -5.381235599517822
    3. 'sum' → logprob: -6.756235599517822
    4. 's' → logprob: -8.631235122680664
    5. 'a' → logprob: -10.256235122680664
    6. 'ub' → logprob: -10.443735122680664
    7. '```' → logprob: -10.818735122680664
    8. '[' → logprob: -10.818735122680664
    9. 'ume' → logprob: -11.443735122680664
    10. 'un' → logprob: -11.631235122680664

Token 32: 'half' (ID: 52836)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.07023828476667404
    2. '<|end|>' → logprob: -3.1952383518218994
    3. '+' → logprob: -4.69523811340332
    4. ' ' → logprob: -5.32023811340332
    5. ' %' → logprob: -5.44523811340332
    6. '```' → logprob: -5.94523811340332
    7. '>' → logprob: -6.57023811340332
    8. ')' → logprob: -7.19523811340332
    9. '*' → logprob: -7.32023811340332
    10. '\n' → logprob: -7.32023811340332

Token 33: ' =' (ID: 314)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.0301741361618042
    2. ' =' → logprob: -4.530174255371094
    3. ' /' → logprob: -4.905174255371094
    4. '//' → logprob: -5.030174255371094
    5. ' ' → logprob: -5.905174255371094
    6. ' ==' → logprob: -7.155174255371094
    7. '=' → logprob: -7.780174255371094
    8. '/' → logprob: -7.905174255371094
    9. '_' → logprob: -8.405174255371094
    10. ' ' → logprob: -9.405174255371094

Token 34: ' asum' (ID: 87728)
  Prédit: ' asum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' asum' → logprob: -0.2597261369228363
    2. 'as' → logprob: -1.5097261667251587
    3. ' as' → logprob: -4.884726047515869
    4. '(as' → logprob: -9.759726524353027
    5. ' (' → logprob: -10.259726524353027
    6. 'sum' → logprob: -11.384726524353027
    7. ' ' → logprob: -11.509726524353027
    8. ' asym' → logprob: -11.634726524353027
    9. ' isum' → logprob: -11.634726524353027
    10. ' int' → logprob: -11.759726524353027

Token 35: ' /' (ID: 820)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.18426233530044556
    2. ' //' → logprob: -1.8092622756958008
    3. '/' → logprob: -5.434262275695801
    4. ' /' → logprob: -9.3092622756958
    5. ' ' → logprob: -10.8092622756958
    6. '*' → logprob: -11.9342622756958
    7. '>>' → logprob: -12.1842622756958
    8. ' ' → logprob: -12.3092622756958
    9. '```' → logprob: -12.6842622756958
    10. ')' → logprob: -13.5592622756958

Token 36: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0011714138090610504
    2. ' ' → logprob: -6.751171588897705
    3. '3' → logprob: -14.501171112060547
    4. '```' → logprob: -15.001171112060547
    5. 'N' → logprob: -16.126171112060547
    6. '=' → logprob: -16.626171112060547
    7. '1' → logprob: -16.813671112060547
    8. ' ' → logprob: -17.501171112060547
    9. '(' → logprob: -17.688671112060547
    10. '  ' → logprob: -17.751171112060547

Token 37: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.754368223482743e-05
    2. ' ' → logprob: -9.625067710876465
    3. '```' → logprob: -13.875067710876465
    4. '２' → logprob: -16.37506675720215
    5. 'N' → logprob: -16.75006675720215
    6. '(' → logprob: -16.87506675720215
    7. '3' → logprob: -16.93756675720215
    8. '=' → logprob: -17.18756675720215
    9. '   ' → logprob: -17.25006675720215
    10. '.' → logprob: -17.62506675720215

Token 38: '.' (ID: 13)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07934962958097458
    2. '
' → logprob: -3.2043495178222656
    3. '

' → logprob: -3.8293495178222656
    4. '\n' → logprob: -4.704349517822266
    5. ' 
' → logprob: -6.079349517822266
    6. '' → logprob: -6.829349517822266
    7. '\' → logprob: -8.204349517822266
    8. ' 

' → logprob: -8.704349517822266
    9. 's' → logprob: -9.204349517822266
    10. 'for' → logprob: -9.454349517822266

Token 39: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.522638169466518e-05
    2. '5' → logprob: -10.750024795532227
    3. ' ' → logprob: -12.750024795532227
    4. 'rstrip' → logprob: -15.750024795532227
    5. '<|end|>' → logprob: -16.000024795532227
    6. '```' → logprob: -16.375024795532227
    7. '000' → logprob: -16.375024795532227
    8. '6' → logprob: -16.750024795532227
    9. 'print' → logprob: -16.875024795532227
    10. '
' → logprob: -17.000024795532227

Token 40: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.038338664919137955
    2. '
' → logprob: -4.663338661193848
    3. '\n' → logprob: -4.913338661193848
    4. ' 
' → logprob: -5.163338661193848
    5. '

' → logprob: -5.538338661193848
    6. '' → logprob: -5.538338661193848
    7. 's' → logprob: -6.413338661193848
    8. '<|end|>' → logprob: -7.038338661193848
    9. ' ans' → logprob: -7.413338661193848
    10. 'dp' → logprob: -7.913338661193848

Token 41: 'fo' (ID: 1070)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.27483120560646057
    2. 'diff' → logprob: -2.7748312950134277
    3. 'best' → logprob: -3.2748312950134277
    4. 'ans' → logprob: -3.3998312950134277
    5. 'current' → logprob: -3.7748312950134277
    6. 'min' → logprob: -3.8998312950134277
    7. 'left' → logprob: -5.024831295013428
    8. 'dist' → logprob: -5.024831295013428
    9. 'res' → logprob: -5.274831295013428
    10. 'closest' → logprob: -5.274831295013428

Token 42: 'res' (ID: 430)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.45848218582978e-06
    2. 'or' → logprob: -13.87500286102295
    3. ' r' → logprob: -14.50000286102295
    4. 'rr' → logprob: -15.75000286102295
    5. 'ur' → logprob: -16.000001907348633
    6. '#' → logprob: -16.375001907348633
    7. 'reach' → logprob: -16.375001907348633
    8. '(r' → logprob: -16.625001907348633
    9. 'rs' → logprob: -16.750001907348633
    10. 'range' → logprob: -16.875001907348633

Token 43: 'um' (ID: 394)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.050981782376766205
    2. 're' → logprob: -3.5509817600250244
    3. 'reach' → logprob: -3.9259817600250244
    4. 'rest' → logprob: -7.1759819984436035
    5. 'rc' → logprob: -9.050981521606445
    6. 'res' → logprob: -9.175981521606445
    7. 'ur' → logprob: -9.550981521606445
    8. 'range' → logprob: -9.675981521606445
    9. 'rec' → logprob: -10.550981521606445
    10. 'reg' → logprob: -10.800981521606445

Token 44: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3136959671974182
    2. ' =' → logprob: -1.3136959075927734
    3. 'w' → logprob: -9.188695907592773
    4. 'r' → logprob: -9.313695907592773
    5. 'm' → logprob: -9.313695907592773
    6. 'u' → logprob: -9.313695907592773
    7. ' ' → logprob: -11.188695907592773
    8. '＝' → logprob: -11.813695907592773
    9. 't' → logprob: -11.938695907592773
    10. 'p' → logprob: -11.938695907592773

Token 45: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017043406842276454
    2. ' ' → logprob: -6.376704216003418
    3. 'A' → logprob: -13.501704216003418
    4. ' ' → logprob: -15.501704216003418
    5. ' A' → logprob: -15.626704216003418
    6. 'a' → logprob: -16.814205169677734
    7. '[' → logprob: -17.251705169677734
    8. '۰' → logprob: -17.564205169677734
    9. 'sum' → logprob: -17.564205169677734
    10. '０' → logprob: -17.689205169677734

Token 46: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.958325295476243e-05
    2. ' ' → logprob: -9.500079154968262
    3. 'A' → logprob: -12.625079154968262
    4. 'sum' → logprob: -15.250079154968262
    5. '[' → logprob: -15.875079154968262
    6. 'a' → logprob: -16.125080108642578
    7. 'float' → logprob: -16.187580108642578
    8. '1' → logprob: -16.937580108642578
    9. 'int' → logprob: -16.937580108642578
    10. '[]' → logprob: -17.187580108642578

Token 47: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19574719667434692
    2. 'min' → logprob: -2.195747137069702
    3. 'best' → logprob: -3.820747137069702
    4. ' for' → logprob: -4.070747375488281
    5. 'answer' → logprob: -4.695747375488281
    6. 'result' → logprob: -5.570747375488281
    7. 'ans' → logprob: -5.695747375488281
    8. 'max' → logprob: -6.320747375488281
    9. 'closest' → logprob: -6.570747375488281
    10. '\n' → logprob: -6.570747375488281

Token 48: 'pres' (ID: 27252)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.8626568913459778
    2. 'for' → logprob: -1.237656831741333
    3. 'best' → logprob: -2.362656831741333
    4. 'ans' → logprob: -2.487656831741333
    5. 'res' → logprob: -3.237656831741333
    6. 'answer' → logprob: -3.862656831741333
    7. 'result' → logprob: -4.487657070159912
    8. 'i' → logprob: -4.737657070159912
    9. 'count' → logprob: -4.862657070159912
    10. 'idx' → logprob: -5.237657070159912

Token 49: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.06661274284124374
    2. 'ent' → logprob: -2.816612720489502
    3. 's' → logprob: -6.441612720489502
    4. '=' → logprob: -7.066612720489502
    5. 'sum' → logprob: -7.441612720489502
    6. 'ums' → logprob: -8.06661319732666
    7. 'et' → logprob: -8.31661319732666
    8. 't' → logprob: -9.31661319732666
    9. ' =' → logprob: -9.31661319732666
    10. 'e' → logprob: -9.31661319732666

Token 50: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47417932748794556
    2. ' =' → logprob: -0.9741793274879456
    3. ' ' → logprob: -9.4741792678833
    4. ' +=' → logprob: -11.3491792678833
    5. '+=' → logprob: -12.8491792678833
    6. '+' → logprob: -13.0991792678833
    7. '=[]' → logprob: -13.0991792678833
    8. 's' → logprob: -13.3491792678833
    9. '＝' → logprob: -14.3491792678833
    10. ')' → logprob: -14.4741792678833

Token 51: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07008815556764603
    2. ' ' → logprob: -2.6950881481170654
    3. '[]' → logprob: -9.695088386535645
    4. '[' → logprob: -10.320088386535645
    5. ' [' → logprob: -10.445088386535645
    6. ' []' → logprob: -11.195088386535645
    7. 'A' → logprob: -12.695088386535645
    8. ' A' → logprob: -13.195088386535645
    9. '[int' → logprob: -13.695088386535645
    10. 'as' → logprob: -14.195088386535645

Token 52: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013922579819336534
    2. '[]' → logprob: -7.251392364501953
    3. '[' → logprob: -7.876392364501953
    4. 'A' → logprob: -8.751392364501953
    5. ' ' → logprob: -9.376392364501953
    6. 'as' → logprob: -10.626392364501953
    7. 'set' → logprob: -11.876392364501953
    8. '{}' → logprob: -12.126392364501953
    9. '-' → logprob: -12.876392364501953
    10. '[A' → logprob: -13.001392364501953

Token 53: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09530885517597198
    2. 'min' → logprob: -2.970308780670166
    3. 'best' → logprob: -4.220308780670166
    4. 'answer' → logprob: -5.095308780670166
    5. 'ans' → logprob: -5.220308780670166
    6. 'max' → logprob: -5.595308780670166
    7. 'result' → logprob: -5.970308780670166
    8. ' for' → logprob: -6.095308780670166
    9. 'closest' → logprob: -6.970308780670166
    10. 'res' → logprob: -7.095308780670166

Token 54: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.016814647242426872
    2. 'min' → logprob: -4.766814708709717
    3. 'best' → logprob: -6.016814708709717
    4. 'ans' → logprob: -6.516814708709717
    5. 'answer' → logprob: -6.516814708709717
    6. 'result' → logprob: -7.141814708709717
    7. 'max' → logprob: -7.766814708709717
    8. 'res' → logprob: -7.891814708709717
    9. 'closest' → logprob: -8.266814231872559
    10. 'i' → logprob: -8.391814231872559

Token 55: ' ai' (ID: 8440)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.00479227676987648
    2. 'i' → logprob: -6.004792213439941
    3. ' ' → logprob: -6.254792213439941
    4. ' _' → logprob: -8.504792213439941
    5. '_' → logprob: -9.504792213439941
    6. ' A' → logprob: -10.254792213439941
    7. ' x' → logprob: -10.254792213439941
    8. ' a' → logprob: -10.754792213439941
    9. ' I' → logprob: -12.379792213439941
    10. ' in' → logprob: -12.504792213439941

Token 56: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28522855043411255
    2. 'in' → logprob: -1.4102284908294678
    3. 'n' → logprob: -5.535228729248047
    4. 'i' → logprob: -9.535228729248047
    5. ' ' → logprob: -10.535228729248047
    6. 's' → logprob: -11.410228729248047
    7. ',' → logprob: -12.535228729248047
    8. '   ' → logprob: -13.160228729248047
    9. '	in' → logprob: -13.410228729248047
    10. ' n' → logprob: -13.535228729248047

Token 57: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0006267757853493094
    2. ' A' → logprob: -7.375626564025879
    3. '(A' → logprob: -15.875626564025879
    4. '	A' → logprob: -17.250627517700195
    5. 'range' → logprob: -18.375627517700195
    6. '[A' → logprob: -18.375627517700195
    7. 'a' → logprob: -18.500627517700195
    8. 'Ａ' → logprob: -18.750627517700195
    9. '>A' → logprob: -19.000627517700195
    10. ',A' → logprob: -19.250627517700195

Token 58: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00024203950306400657
    2. ':
' → logprob: -8.375242233276367
    3. ' :' → logprob: -11.500242233276367
    4. '   ' → logprob: -14.750242233276367
    5. ':
' → logprob: -15.625242233276367
    6. '=' → logprob: -15.750242233276367
    7. ',' → logprob: -16.125242233276367
    8. '):' → logprob: -16.750242233276367
    9. ':**' → logprob: -16.750242233276367
    10. ':

' → logprob: -17.375242233276367

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014244244433939457
    2. ' pres' → logprob: -5.139244079589844
    3. 'pres' → logprob: -5.264244079589844
    4. '   ' → logprob: -6.514244079589844
    5. '    
' → logprob: -7.514244079589844
    6. '```' → logprob: -7.889244079589844
    7. ' presum' → logprob: -8.639244079589844
    8. 'fo' → logprob: -9.014244079589844
    9. '	p' → logprob: -9.764244079589844
    10. ' if' → logprob: -9.889244079589844

Token 60: ' fores' (ID: 103317)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.610268771648407
    2. 'pres' → logprob: -0.860268771648407
    3. 'fo' → logprob: -4.110268592834473
    4. ' pres' → logprob: -4.610268592834473
    5. ' presum' → logprob: -6.110268592834473
    6. '```' → logprob: -6.860268592834473
    7. '   ' → logprob: -6.860268592834473
    8. '    
' → logprob: -6.985268592834473
    9. 'if' → logprob: -7.485268592834473
    10. ' ' → logprob: -8.610268592834473

Token 61: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.0010428131790831685
    2. 'sum' → logprob: -6.87604284286499
    3. 'u' → logprob: -12.626042366027832
    4. 'umsum' → logprob: -13.626042366027832
    5. '+' → logprob: -13.876042366027832
    6. '=' → logprob: -14.001042366027832
    7. 'ум' → logprob: -14.001042366027832
    8. 'us' → logprob: -14.626042366027832
    9. '```' → logprob: -15.001042366027832
    10. ' =' → logprob: -15.126042366027832

Token 62: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.03904008865356445
    2. '+=' → logprob: -3.2890400886535645
    3. ' =' → logprob: -7.1640400886535645
    4. '=' → logprob: -8.789039611816406
    5. '+' → logprob: -10.164039611816406
    6. ' ' → logprob: -11.164039611816406
    7. ' +' → logprob: -11.414039611816406
    8. ' -=' → logprob: -12.164039611816406
    9. '   ' → logprob: -14.539039611816406
    10. '    ' → logprob: -14.664039611816406

Token 63: ' ai' (ID: 8440)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.005046132951974869
    2. ' ai' → logprob: -5.380046367645264
    3. '1' → logprob: -8.005045890808105
    4. ' ' → logprob: -10.630045890808105
    5. 'as' → logprob: -10.630045890808105
    6. '(ai' → logprob: -11.380045890808105
    7. '-ai' → logprob: -11.755045890808105
    8. 'a' → logprob: -12.380045890808105
    9. 'int' → logprob: -12.880045890808105
    10. '   ' → logprob: -13.130045890808105

Token 64: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20895633101463318
    2. ' if' → logprob: -2.083956241607666
    3. ' ' → logprob: -3.333956241607666
    4. '    
' → logprob: -4.333956241607666
    5. '<|end|>' → logprob: -5.458956241607666
    6. ' 
' → logprob: -5.833956241607666
    7. '    ' → logprob: -6.208956241607666
    8. 'if' → logprob: -6.208956241607666
    9. '
' → logprob: -6.708956241607666
    10. '  ' → logprob: -6.833956241607666

Token 65: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00948476605117321
    2. '    
' → logprob: -4.884484767913818
    3. ' if' → logprob: -6.759484767913818
    4. 'if' → logprob: -8.38448429107666
    5. '
' → logprob: -8.75948429107666
    6. '    ' → logprob: -9.75948429107666
    7. ' ' → logprob: -10.00948429107666
    8. '    
    
' → logprob: -10.13448429107666
    9. '<|end|>' → logprob: -10.50948429107666
    10. ' 
' → logprob: -10.63448429107666

Token 66: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5049051642417908
    2. 'pres' → logprob: -1.6299052238464355
    3. '   ' → logprob: -1.8799052238464355
    4. ' if' → logprob: -3.1299052238464355
    5. ' pres' → logprob: -5.7549052238464355
    6. ' ' → logprob: -8.379904747009277
    7. 'print' → logprob: -9.004904747009277
    8. '```' → logprob: -9.254904747009277
    9. '    
' → logprob: -9.629904747009277
    10. 'diff' → logprob: -9.692404747009277

Token 67: ' fores' (ID: 103317)
  Prédit: ' fores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fores' → logprob: -0.004236412234604359
    2. 'fo' → logprob: -5.754236221313477
    3. ' ' → logprob: -7.004236221313477
    4. ' fo' → logprob: -10.129236221313477
    5. ' abs' → logprob: -10.629236221313477
    6. '  ' → logprob: -11.129236221313477
    7. '   ' → logprob: -11.254236221313477
    8. 'f' → logprob: -11.629236221313477
    9. ' foy' → logprob: -12.004236221313477
    10. 'abs' → logprob: -12.129236221313477

Token 68: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.00023858259373810142
    2. 'sum' → logprob: -8.375238418579102
    3. 'u' → logprob: -12.500238418579102
    4. 'ум' → logprob: -13.125238418579102
    5. '   ' → logprob: -14.625238418579102
    6. 'umsum' → logprob: -15.000238418579102
    7. 'ume' → logprob: -15.875238418579102
    8. '_sum' → logprob: -15.875238418579102
    9. 'umed' → logprob: -15.875238418579102
    10. 'ums' → logprob: -16.1252384185791

Token 69: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.8614901900291443
    2. ' >' → logprob: -1.361490249633789
    3. '>=' → logprob: -1.611490249633789
    4. '>' → logprob: -2.111490249633789
    5. '==' → logprob: -8.736490249633789
    6. ' ' → logprob: -8.861490249633789
    7. ' ==' → logprob: -9.111490249633789
    8. '   ' → logprob: -9.861490249633789
    9. '/' → logprob: -10.361490249633789
    10. ' /' → logprob: -11.861490249633789

Token 70: ' asum' (ID: 87728)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.10082440078258514
    2. ' asum' → logprob: -2.3508243560791016
    3. ' as' → logprob: -8.350824356079102
    4. ' presum' → logprob: -8.850824356079102
    5. 'ass' → logprob: -9.100824356079102
    6. ' assum' → logprob: -10.475824356079102
    7. 'pres' → logprob: -10.475824356079102
    8. ' ' → logprob: -11.350824356079102
    9. '(as' → logprob: -11.600824356079102
    10. 'asim' → logprob: -11.725824356079102

Token 71: 'half' (ID: 52836)
  Prédit: 'half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.0008726324886083603
    2. '/' → logprob: -7.500872611999512
    3. ' /' → logprob: -9.000872611999512
    4. 'hal' → logprob: -9.375872611999512
    5. ' ' → logprob: -9.625872611999512
    6. ' half' → logprob: -11.000872611999512
    7. '   ' → logprob: -12.000872611999512
    8. '_half' → logprob: -12.625872611999512
    9. ':' → logprob: -12.875872611999512
    10. 'halb' → logprob: -13.125872611999512

Token 72: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002950958674773574
    2. ':
' → logprob: -5.877951145172119
    3. '   ' → logprob: -9.127950668334961
    4. '       ' → logprob: -10.627950668334961
    5. ' :' → logprob: -11.502950668334961
    6. ' :
' → logprob: -14.252950668334961
    7. ' and' → logprob: -14.627950668334961
    8. '):' → logprob: -14.752950668334961
    9. '    ' → logprob: -14.877950668334961
    10. ':return' → logprob: -15.252950668334961

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003967071825172752
    2. '   ' → logprob: -7.875396728515625
    3. ':' → logprob: -12.375396728515625
    4. ' break' → logprob: -12.875396728515625
    5. '```' → logprob: -13.250396728515625
    6. '           ' → logprob: -13.500396728515625
    7. '      ' → logprob: -14.125396728515625
    8. '    ' → logprob: -14.500396728515625
    9. '\n' → logprob: -14.500396728515625
    10. '[' → logprob: -14.500396728515625

Token 74: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25298449397087097
    2. 'pres' → logprob: -2.6279845237731934
    3. ' break' → logprob: -3.0029845237731934
    4. ' pres' → logprob: -3.5029845237731934
    5. '   ' → logprob: -3.6279845237731934
    6. 'break' (adapté à ' break') → logprob: -4.127984523773193
    7. ' presum' → logprob: -4.127984523773193
    8. 'print' → logprob: -5.002984523773193
    9. ' print' → logprob: -5.377984523773193
    10. '```' → logprob: -7.502984523773193

Token 75: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2812187373638153
    2. 'pres' → logprob: -1.7812187671661377
    3. '
' → logprob: -3.6562187671661377
    4. 'print' → logprob: -3.9062187671661377
    5. ' pres' → logprob: -4.656218528747559
    6. ':' → logprob: -4.906218528747559
    7. '    
' → logprob: -5.656218528747559
    8. '+' → logprob: -5.906218528747559
    9. '\n' → logprob: -7.031218528747559
    10. '.' → logprob: -7.031218528747559

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5370297431945801
    2. '
' → logprob: -1.91202974319458
    3. '<|end|>' → logprob: -2.28702974319458
    4. ' ' → logprob: -2.91202974319458
    5. ' pres' → logprob: -3.41202974319458
    6. '+' → logprob: -3.91202974319458
    7. 'pres' → logprob: -4.53702974319458
    8. '    
' → logprob: -4.66202974319458
    9. ':' → logprob: -4.66202974319458
    10. ' 
' → logprob: -5.03702974319458

Token 77: ' presum' (ID: 60906)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3033129572868347
    2. 'pres' → logprob: -1.4283130168914795
    3. 'print' → logprob: -4.3033127784729
    4. ' pres' → logprob: -5.1783127784729
    5. 'else' → logprob: -6.3033127784729
    6. ' else' → logprob: -8.678313255310059
    7. '    
' → logprob: -8.803313255310059
    8. ' presum' → logprob: -9.428313255310059
    9. ' print' → logprob: -10.115813255310059
    10. '+' → logprob: -10.178313255310059

Token 78: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.48411375284194946
    2. '=' → logprob: -0.9841137528419495
    3. ' +=' → logprob: -4.734113693237305
    4. ' =' → logprob: -6.734113693237305
    5. '+' → logprob: -12.609113693237305
    6. ']+=' → logprob: -14.234113693237305
    7. '+=(' → logprob: -14.359113693237305
    8. '   ' → logprob: -14.484113693237305
    9. ' ' → logprob: -14.859113693237305
    10. '+='' → logprob: -15.109113693237305

Token 79: ' fores' (ID: 103317)
  Prédit: 'fo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fo' → logprob: -0.003612781874835491
    2. 'fore' → logprob: -6.128612995147705
    3. ' fores' → logprob: -6.753612995147705
    4. ' fo' → logprob: -9.628612518310547
    5. '   ' → logprob: -9.753612518310547
    6. 'as' → logprob: -9.878612518310547
    7. ' ' → logprob: -10.378612518310547
    8. 'for' → logprob: -11.378612518310547
    9. '  ' → logprob: -11.753612518310547
    10. ' fore' → logprob: -12.128612518310547

Token 80: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.0013532141456380486
    2. 'sum' → logprob: -6.6263532638549805
    3. 'u' → logprob: -11.37635326385498
    4. 'm' → logprob: -12.50135326385498
    5. 'ум' → logprob: -12.50135326385498
    6. 'umsum' → logprob: -12.62635326385498
    7. 'im' → logprob: -13.75135326385498
    8. 'em' → logprob: -14.12635326385498
    9. ' ' → logprob: -14.50135326385498
    10. ' sum' → logprob: -15.25135326385498

Token 81: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0394427627325058
    2. '<|end|>' → logprob: -4.664442539215088
    3. '\n' → logprob: -5.039442539215088
    4. '+' → logprob: -5.039442539215088
    5. '
' → logprob: -5.789442539215088
    6. ' ' → logprob: -6.164442539215088
    7. '0' → logprob: -6.539442539215088
    8. 'if' → logprob: -6.539442539215088
    9. ')' → logprob: -6.789442539215088
    10. ' print' → logprob: -6.914442539215088

Token 82: 'l' (ID: 75)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0012377295643091202
    2. 'if' → logprob: -7.501237869262695
    3. 'pr' → logprob: -8.251237869262695
    4. ' print' → logprob: -9.001237869262695
    5. '+' → logprob: -9.376237869262695
    6. '
' → logprob: -10.501237869262695
    7. 'p' → logprob: -10.626237869262695
    8. 'pres' → logprob: -10.876237869262695
    9. 'i' → logprob: -11.251237869262695
    10. 'result' → logprob: -11.376237869262695

Token 83: 'ats' (ID: 1838)
  Prédit: 'eft'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eft' → logprob: -0.531328558921814
    2. 'en' → logprob: -1.406328558921814
    3. 'e' → logprob: -1.906328558921814
    4. 'print' → logprob: -5.0313286781311035
    5. 'l' → logprob: -5.9063286781311035
    6. 'ength' → logprob: -6.5313286781311035
    7. 'ast' → logprob: -7.0313286781311035
    8. 'ine' → logprob: -7.0313286781311035
    9. 'i' → logprob: -7.1563286781311035
    10. '=' → logprob: -7.4063286781311035

Token 84: 'um' (ID: 394)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.036417338997125626
    2. 'pres' → logprob: -4.286417484283447
    3. 'p' → logprob: -4.411417484283447
    4. ' =' → logprob: -5.911417484283447
    5. 'sum' → logprob: -6.411417484283447
    6. 'tp' → logprob: -6.911417484283447
    7. '=' → logprob: -7.286417484283447
    8. 'index' → logprob: -7.661417484283447
    9. 'ts' → logprob: -7.661417484283447
    10. 'i' → logprob: -7.661417484283447

Token 85: ' =' (ID: 314)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.08075680583715439
    2. ' =' → logprob: -2.705756902694702
    3. '=' → logprob: -4.580756664276123
    4. 's' → logprob: -8.830757141113281
    5. 'p' → logprob: -9.205757141113281
    6. 'sum' → logprob: -9.830757141113281
    7. ' ' → logprob: -10.080757141113281
    8. 'u' → logprob: -10.080757141113281
    9. 'um' → logprob: -10.455757141113281
    10. 'ts' → logprob: -10.955757141113281

Token 86: ' asum' (ID: 87728)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.0010569837177172303
    2. ' asum' → logprob: -7.876057147979736
    3. ' as' → logprob: -8.501056671142578
    4. 'pres' → logprob: -8.626056671142578
    5. 'fo' → logprob: -9.251056671142578
    6. 'sum' → logprob: -9.626056671142578
    7. 'abs' → logprob: -10.501056671142578
    8. 'ass' → logprob: -10.751056671142578
    9. 'asim' → logprob: -11.376056671142578
    10. 'a' → logprob: -11.501056671142578

Token 87: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.48428773880004883
    2. ' -' → logprob: -0.9842877388000488
    3. '-p' → logprob: -5.234287738800049
    4. '-pres' → logprob: -5.359287738800049
    5. 'pres' → logprob: -10.10928726196289
    6. '-s' → logprob: -10.60928726196289
    7. '-f' → logprob: -10.73428726196289
    8. '-pre' → logprob: -11.60928726196289
    9. ' ' → logprob: -11.98428726196289
    10. '-l' → logprob: -13.48428726196289

Token 88: ' fores' (ID: 103317)
  Prédit: 'pres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pres' → logprob: -0.01715710200369358
    2. 'fo' → logprob: -4.142157077789307
    3. ' pres' → logprob: -7.767157077789307
    4. 'as' → logprob: -7.892157077789307
    5. 'l' → logprob: -9.017157554626465
    6. 'fore' → logprob: -9.517157554626465
    7. 'prem' → logprob: -10.517157554626465
    8. 'pre' → logprob: -11.142157554626465
    9. ' presum' → logprob: -11.517157554626465
    10. 'f' → logprob: -12.267157554626465

Token 89: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.7323909997940063
    2. 'sum' → logprob: -1.2323909997940063
    3. 'm' → logprob: -1.4823909997940063
    4. 's' → logprob: -8.107391357421875
    5. ' sum' → logprob: -9.732391357421875
    6. 'ms' → logprob: -10.482391357421875
    7. 'umsum' → logprob: -11.107391357421875
    8. 'g' → logprob: -11.419891357421875
    9. 'u' → logprob: -11.482391357421875
    10. 'psum' → logprob: -11.669891357421875

Token 90: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.33701664209365845
    2. 'print' → logprob: -1.9620165824890137
    3. 'i' → logprob: -2.2120165824890137
    4. 'diff' → logprob: -3.9620165824890137
    5. ' if' → logprob: -5.837016582489014
    6. 's' → logprob: -6.087016582489014
    7. 'idx' → logprob: -6.337016582489014
    8. 'l' → logprob: -6.837016582489014
    9. 'result' → logprob: -6.837016582489014
    10. 'd' → logprob: -6.962016582489014

Token 91: 'd' (ID: 67)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2917478084564209
    2. 'if' → logprob: -1.541747808456421
    3. 'ans' → logprob: -4.541748046875
    4. 'result' → logprob: -4.791748046875
    5. 'min' → logprob: -5.291748046875
    6. 'abs' → logprob: -5.291748046875
    7. 'diff' → logprob: -5.416748046875
    8. 'answer' → logprob: -6.416748046875
    9. 'res' → logprob: -6.791748046875
    10. 'l' → logprob: -7.791748046875

Token 92: 'ifa' (ID: 22798)
  Prédit: 'iff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iff' → logprob: -0.3625621795654297
    2. ' =' → logprob: -1.8625621795654297
    3. 'if' → logprob: -2.4875621795654297
    4. '=' → logprob: -3.3625621795654297
    5. 'i' → logprob: -3.9875621795654297
    6. 'ifference' → logprob: -5.86256217956543
    7. ' ' → logprob: -6.48756217956543
    8. 'f' → logprob: -6.73756217956543
    9. 'elta' → logprob: -7.11256217956543
    10. ' if' → logprob: -7.48756217956543

Token 93: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4546675980091095
    2. 'b' → logprob: -2.079667568206787
    3. ' =' → logprob: -2.579667568206787
    4. 'rence' → logprob: -2.829667568206787
    5. 'ce' → logprob: -3.454667568206787
    6. 'bs' → logprob: -4.079667568206787
    7. 'diff' → logprob: -4.704667568206787
    8. 'c' → logprob: -5.454667568206787
    9. 'l' → logprob: -5.579667568206787
    10. '=sum' → logprob: -5.579667568206787

Token 94: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.026644179597496986
    2. ' abs' → logprob: -3.651644229888916
    3. 'min' → logprob: -8.526643753051758
    4. 'pres' → logprob: -9.151643753051758
    5. 'l' → logprob: -10.401643753051758
    6. ' min' → logprob: -12.776643753051758
    7. ' pres' → logprob: -12.901643753051758
    8. '(abs' → logprob: -13.026643753051758
    9. ' l' → logprob: -14.276643753051758
    10. 'int' → logprob: -14.901643753051758

Token 95: '(' (ID: 7)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.4361870288848877
    2. '(l' → logprob: -1.0611870288848877
    3. '(as' → logprob: -5.436186790466309
    4. '(d' → logprob: -6.186186790466309
    5. '(' → logprob: -7.311186790466309
    6. '(f' → logprob: -8.186186790466309
    7. '((' → logprob: -10.561186790466309
    8. '(a' → logprob: -10.561186790466309
    9. '(for' → logprob: -11.061186790466309
    10. '(pre' → logprob: -12.436186790466309

Token 96: 'fo' (ID: 1070)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2636414170265198
    2. 'pres' → logprob: -1.513641357421875
    3. 'as' → logprob: -5.263641357421875
    4. 'd' → logprob: -5.763641357421875
    5. 'fo' → logprob: -6.138641357421875
    6. ' l' → logprob: -7.888641357421875
    7. ' pres' → logprob: -8.138641357421875
    8. 'f' → logprob: -9.388641357421875
    9. '(l' → logprob: -9.638641357421875
    10. 'lat' → logprob: -10.263641357421875

Token 97: 'res' (ID: 430)
  Prédit: 'rs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rs' → logprob: -0.07190297544002533
    2. 'res' → logprob: -3.3219029903411865
    3. 'sum' → logprob: -3.5719029903411865
    4. 'r' → logprob: -5.446902751922607
    5. 'as' → logprob: -8.321903228759766
    6. 'rus' → logprob: -8.446903228759766
    7. 'ras' → logprob: -8.821903228759766
    8. 's' → logprob: -9.446903228759766
    9. 'rsat' → logprob: -9.821903228759766
    10. 'psum' → logprob: -9.946903228759766

Token 98: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.014363407157361507
    2. 'sum' → logprob: -4.2643632888793945
    3. '-' → logprob: -9.389363288879395
    4. 'a' → logprob: -10.264363288879395
    5. 'm' → logprob: -11.014363288879395
    6. ' -' → logprob: -11.514363288879395
    7. 'am' → logprob: -11.639363288879395
    8. 'ум' → logprob: -12.264363288879395
    9. 's' → logprob: -12.264363288879395
    10. 'u' → logprob: -12.389363288879395

Token 99: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6931861042976379
    2. ' -' → logprob: -0.6931861042976379
    3. '-l' → logprob: -10.318185806274414
    4. '-d' → logprob: -13.193185806274414
    5. ' ' → logprob: -13.193185806274414
    6. ' ' → logprob: -13.318185806274414
    7. '-s' → logprob: -15.693185806274414
    8. '-p' → logprob: -16.943185806274414
    9. ' -
' → logprob: -17.193185806274414
    10. '−' → logprob: -17.443185806274414

Token 100: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.003898537252098322
    2. ' l' → logprob: -5.878898620605469
    3. 'as' → logprob: -7.253898620605469
    4. 'las' → logprob: -8.253898620605469
    5. 'lass' → logprob: -10.753898620605469
    6. ' as' → logprob: -11.003898620605469
    7. '	l' → logprob: -11.128898620605469
    8. 'pres' → logprob: -11.378898620605469
    9. 'd' → logprob: -12.003898620605469
    10. 'lat' → logprob: -12.316398620605469

Token 101: 'ats' (ID: 1838)
  Prédit: 'ats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ats' → logprob: -0.017288457602262497
    2. 'at' → logprob: -4.517288684844971
    3. 'as' → logprob: -5.142288684844971
    4. 'a' → logprob: -9.017288208007812
    5. 'atsu' → logprob: -9.642288208007812
    6. 'atum' → logprob: -10.142288208007812
    7. 'atas' → logprob: -10.267288208007812
    8. 'ast' → logprob: -11.267288208007812
    9. 'sum' → logprob: -11.892288208007812
    10. 'atul' → logprob: -12.142288208007812

Token 102: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.035051751881837845
    2. 'sum' → logprob: -3.4100518226623535
    3. 'as' → logprob: -6.7850518226623535
    4. 'umsum' → logprob: -8.785051345825195
    5. 's' → logprob: -10.160051345825195
    6. 'us' → logprob: -10.910051345825195
    7. 'ums' → logprob: -11.160051345825195
    8. ' sum' → logprob: -11.535051345825195
    9. '_sum' → logprob: -12.160051345825195
    10. 'a' → logprob: -12.285051345825195

Token 103: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.173704271830502e-06
    2. ')
' → logprob: -12.87500286102295
    3. '))' → logprob: -15.75000286102295
    4. ' )' → logprob: -16.000003814697266
    5. ')

' → logprob: -17.000003814697266
    6. '()' → logprob: -17.500003814697266
    7. ')**' → logprob: -17.500003814697266
    8. '`)' → logprob: -18.000003814697266
    9. '）' → logprob: -18.125003814697266
    10. ')#' → logprob: -18.250003814697266

Token 104: 'l' (ID: 75)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9729734063148499
    2. 'diff' → logprob: -0.9729734063148499
    3. 'd' → logprob: -2.347973346710205
    4. 'for' → logprob: -2.472973346710205
    5. 'if' → logprob: -3.097973346710205
    6. 'dif' → logprob: -4.597973346710205
    7. 'ans' → logprob: -5.222973346710205
    8. 'min' → logprob: -8.097973823547363
    9. 'idx' → logprob: -8.222973823547363
    10. 'result' → logprob: -8.347973823547363

Token 105: 'ats' (ID: 1838)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.6088654398918152
    2. 'a' → logprob: -1.73386549949646
    3. 'ats' → logprob: -2.23386549949646
    4. 'if' → logprob: -2.73386549949646
    5. 'ine' → logprob: -3.73386549949646
    6. 'ast' → logprob: -3.85886549949646
    7. 'print' → logprob: -4.233865261077881
    8. 'd' → logprob: -4.733865261077881
    9. 'e' → logprob: -5.483865261077881
    10. 'l' → logprob: -5.608865261077881

Token 106: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.06279154866933823
    2. 'sum' → logprob: -2.812791585922241
    3. 'u' → logprob: -7.562791347503662
    4. 'up' → logprob: -9.56279182434082
    5. 'umsum' → logprob: -9.68779182434082
    6. 's' → logprob: -9.81279182434082
    7. '_sum' → logprob: -10.81279182434082
    8. 'as' → logprob: -10.93779182434082
    9. 'a' → logprob: -11.43779182434082
    10. 'su' → logprob: -11.43779182434082

Token 107: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: ' asum' (ID: 87728)
  Prédit: 'pres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pres' → logprob: -0.11481542885303497
    2. ' presum' → logprob: -2.6148154735565186
    3. 'as' → logprob: -4.3648152351379395
    4. ' pres' → logprob: -4.7398152351379395
    5. 'abs' → logprob: -5.1148152351379395
    6. ' asum' → logprob: -5.9898152351379395
    7. ' abs' → logprob: -6.8648152351379395
    8. 'fo' → logprob: -7.3648152351379395
    9. 'sum' → logprob: -7.6148152351379395
    10. ' as' → logprob: -7.8648152351379395

Token 109: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11391399055719376
    2. '-' → logprob: -2.2389140129089355
    3. 'abs' → logprob: -8.113913536071777
    4. ' ' → logprob: -8.738913536071777
    5. '-s' → logprob: -9.238913536071777
    6. '-pres' → logprob: -9.238913536071777
    7. 'diff' → logprob: -9.988913536071777
    8. 'd' → logprob: -9.988913536071777
    9. ' /' → logprob: -10.363913536071777
    10. '/' → logprob: -10.488913536071777

Token 110: ' presum' (ID: 60906)
  Prédit: 'pres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pres' → logprob: -0.00021736434428021312
    2. 'fo' → logprob: -9.25021743774414
    3. ' pres' → logprob: -9.62521743774414
    4. 'as' → logprob: -10.37521743774414
    5. 'd' → logprob: -11.87521743774414
    6. 'prem' → logprob: -13.00021743774414
    7. 'ai' → logprob: -13.25021743774414
    8. ' ' → logprob: -13.37521743774414
    9. '   ' → logprob: -13.87521743774414
    10. ' presum' → logprob: -13.93771743774414

Token 111: '
' (ID: 198)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00028993739397265017
    2. 'diff' → logprob: -8.375289916992188
    3. 'dif' → logprob: -9.875289916992188
    4. '<|end|>' → logprob: -12.250289916992188
    5. ' d' → logprob: -14.000289916992188
    6. ' dif' → logprob: -14.250289916992188
    7. 'difference' → logprob: -15.250289916992188
    8. 's' → logprob: -15.625289916992188
    9. '
' → logprob: -15.625289916992188
    10. 'l' → logprob: -15.875289916992188

Token 112: 'dif' (ID: 92027)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.49064165353775024
    2. 'dif' → logprob: -0.9906416535377502
    3. 'diff' → logprob: -4.1156415939331055
    4. ' dif' → logprob: -10.240641593933105
    5. 'dfa' → logprob: -11.115641593933105
    6. 'di' → logprob: -11.865641593933105
    7. 'if' → logprob: -11.990641593933105
    8. 'pres' → logprob: -12.365641593933105
    9. 'difference' → logprob: -12.365641593933105
    10. 'new' → logprob: -12.490641593933105

Token 113: 'b' (ID: 65)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004957766272127628
    2. 'f' → logprob: -5.379957675933838
    3. 'fa' → logprob: -8.504958152770996
    4. 'b' → logprob: -9.879958152770996
    5. '=' → logprob: -10.129958152770996
    6. ' =' → logprob: -10.504958152770996
    7. '_a' → logprob: -12.129958152770996
    8. ' a' → logprob: -13.004958152770996
    9. 'ference' → logprob: -13.379958152770996
    10. 'а' → logprob: -13.629958152770996

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043007638305425644
    2. '=' → logprob: -3.1680076122283936
    3. 'a' → logprob: -12.043007850646973
    4. ' ' → logprob: -13.668007850646973
    5. 's' → logprob: -14.293007850646973
    6. '<|end|>' → logprob: -14.543007850646973
    7. 'b' → logprob: -15.918007850646973
    8. 'f' → logprob: -16.918006896972656
    9. '=a' → logprob: -17.293006896972656
    10. ' a' → logprob: -17.543006896972656

Token 115: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0004315036640036851
    2. ' abs' → logprob: -7.750431537628174
    3. '(abs' → logprob: -14.000431060791016
    4. '```' → logprob: -18.625431060791016
    5. '.abs' → logprob: -19.125431060791016
    6. '   ' → logprob: -20.500431060791016
    7. ' ' → logprob: -21.125431060791016
    8. '
' → logprob: -21.375431060791016
    9. 'int' → logprob: -21.750431060791016
    10. '`' → logprob: -21.875431060791016

Token 116: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.055128246545791626
    2. '(' → logprob: -2.930128335952759
    3. '(l' → logprob: -8.43012809753418
    4. 'fo' → logprob: -11.18012809753418
    5. '(f' → logprob: -12.30512809753418
    6. '((' → logprob: -13.55512809753418
    7. '(for' → logprob: -13.55512809753418
    8. '(pre' → logprob: -13.80512809753418
    9. '(pref' → logprob: -13.80512809753418
    10. '(pred' → logprob: -14.05512809753418

Token 117: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0009068182553164661
    2. '(res' → logprob: -7.125906944274902
    3. 're' → logprob: -10.625906944274902
    4. '(' → logprob: -11.000906944274902
    5. 'pres' → logprob: -11.000906944274902
    6. 'reserv' → logprob: -11.875906944274902
    7. '	res' → logprob: -12.125906944274902
    8. 'ros' → logprob: -12.375906944274902
    9. 'resc' → logprob: -12.750906944274902
    10. 'resume' → logprob: -12.750906944274902

Token 118: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -2.47495681833243e-05
    2. 'sum' → logprob: -11.000024795532227
    3. 'u' → logprob: -12.875024795532227
    4. 'ум' → logprob: -13.125024795532227
    5. 'umsum' → logprob: -13.750024795532227
    6. ' -' → logprob: -15.375024795532227
    7. ' um' → logprob: -15.500024795532227
    8. 'ur' → logprob: -15.625024795532227
    9. '```' → logprob: -15.750024795532227
    10. 'umm' → logprob: -15.750024795532227

Token 119: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11282581090927124
    2. '-' → logprob: -2.237825870513916
    3. ' ' → logprob: -13.362825393676758
    4. ' -
' → logprob: -14.237825393676758
    5. ' ' → logprob: -14.862825393676758
    6. '-
' → logprob: -14.987825393676758
    7. '−' → logprob: -15.362825393676758
    8. ')' → logprob: -16.112825393676758
    9. '<|end|>' → logprob: -16.487825393676758
    10. '-l' → logprob: -16.612825393676758

Token 120: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.014178793877363205
    2. ' l' → logprob: -4.26417875289917
    3. '<|end|>' → logprob: -11.514179229736328
    4. ' ' → logprob: -12.764179229736328
    5. '	l' → logprob: -13.639179229736328
    6. '   ' → logprob: -15.264179229736328
    7. ')' → logprob: -15.889179229736328
    8. '  ' → logprob: -16.014179229736328
    9. '_l' → logprob: -16.389179229736328
    10. '    ' → logprob: -16.514179229736328

Token 121: 'ats' (ID: 1838)
  Prédit: 'ats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ats' → logprob: -0.2819245159626007
    2. 'as' → logprob: -1.5319244861602783
    3. 'at' → logprob: -3.5319244861602783
    4. 'atas' → logprob: -8.9069242477417
    5. ' as' → logprob: -9.9069242477417
    6. 'ast' → logprob: -10.2819242477417
    7. 'ams' → logprob: -11.0319242477417
    8. 's' → logprob: -11.2819242477417
    9. 'atim' → logprob: -11.9069242477417
    10. '	as' → logprob: -12.1569242477417

Token 122: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.003612424246966839
    2. 'sum' → logprob: -5.628612518310547
    3. '_sum' → logprob: -13.253612518310547
    4. 'as' → logprob: -13.378612518310547
    5. 'am' → logprob: -13.378612518310547
    6. 'a' → logprob: -13.628612518310547
    7. 'umsum' → logprob: -13.753612518310547
    8. 'up' → logprob: -14.128612518310547
    9. 's' → logprob: -14.253612518310547
    10. 'im' → logprob: -14.378612518310547

Token 123: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33297428488731384
    2. ')
' → logprob: -1.3329743146896362
    3. 'if' → logprob: -4.082974433898926
    4. ')

' → logprob: -6.082974433898926
    5. ' if' → logprob: -8.457974433898926
    6. '
' → logprob: -9.457974433898926
    7. 'print' → logprob: -9.832974433898926
    8. ' )' → logprob: -11.707974433898926
    9. ' )
' → logprob: -11.957974433898926
    10. '   ' → logprob: -12.082974433898926

Token 124: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.31471654772758484
    2. 'if' → logprob: -1.3147165775299072
    3. '
' → logprob: -6.564716339111328
    4. ' if' → logprob: -11.189716339111328
    5. 'result' → logprob: -11.814716339111328
    6. '\n' → logprob: -11.939716339111328
    7. '```' → logprob: -11.939716339111328
    8. '
' → logprob: -12.939716339111328
    9. ' print' → logprob: -13.439716339111328
    10. '#' → logprob: -14.064716339111328

Token 125: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.0920148715376854
    2. '(d' → logprob: -2.592014789581299
    3. '(' → logprob: -4.342014789581299
    4. '(m' → logprob: -11.717015266418457
    5. 'min' → logprob: -12.092015266418457
    6. '(
' → logprob: -12.217015266418457
    7. '()' → logprob: -12.717015266418457
    8. '(max' → logprob: -12.967015266418457
    9. '(diff' → logprob: -13.342015266418457
    10. '((' → logprob: -13.717015266418457

Token 126: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -5.836499985889532e-05
    2. '(' → logprob: -9.7500581741333
    3. '(diff' → logprob: -18.000059127807617
    4. '(
' → logprob: -18.375059127807617
    5. ' (' → logprob: -18.500059127807617
    6. ')d' → logprob: -18.500059127807617
    7. 'd' → logprob: -18.875059127807617
    8. '((' → logprob: -19.000059127807617
    9. ')' → logprob: -19.625059127807617
    10. '(dic' → logprob: -19.875059127807617

Token 127: 'ifa' (ID: 22798)
  Prédit: 'ifa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifa' → logprob: -0.387465238571167
    2. 'if' → logprob: -1.137465238571167
    3. '(' → logprob: -8.387465476989746
    4. ' if' → logprob: -8.887465476989746
    5. 'ifra' → logprob: -10.387465476989746
    6. '(if' → logprob: -10.512465476989746
    7. 'i' → logprob: -10.637465476989746
    8. 'a' → logprob: -11.137465476989746
    9. '(d' → logprob: -11.137465476989746
    10. '{' → logprob: -11.512465476989746

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006264354567974806
    2. ' ,' → logprob: -5.2562642097473145
    3. ',d' → logprob: -6.8812642097473145
    4. ',
' → logprob: -14.006264686584473
    5. ',b' → logprob: -14.131264686584473
    6. ' ' → logprob: -14.256264686584473
    7. '))' → logprob: -15.131264686584473
    8. ')' → logprob: -15.256264686584473
    9. ' dif' → logprob: -15.506264686584473
    10. 'dif' → logprob: -15.631264686584473

Token 129: ' dif' (ID: 1501)
  Prédit: 'dif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dif' → logprob: -0.048658449202775955
    2. ' dif' → logprob: -3.0486583709716797
    3. 'diff' → logprob: -9.92365837097168
    4. 'd' → logprob: -10.79865837097168
    5. 'dib' → logprob: -14.17365837097168
    6. ' ' → logprob: -15.54865837097168
    7. ' diff' → logprob: -15.67365837097168
    8. '	d' → logprob: -15.92365837097168
    9. '   ' → logprob: -16.42365837097168
    10. 'Dif' → logprob: -17.17365837097168

Token 130: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0005421888781711459
    2. ')' → logprob: -8.000542640686035
    3. 'a' → logprob: -9.125542640686035
    4. ')b' → logprob: -9.750542640686035
    5. '))' → logprob: -10.375542640686035
    6. '_b' → logprob: -13.000542640686035
    7. 'ab' → logprob: -13.625542640686035
    8. '-b' → logprob: -13.625542640686035
    9. ')}' → logprob: -14.250542640686035
    10. 'B' → logprob: -14.625542640686035

Token 131: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.20141851902008057
    2. ')' → logprob: -1.7014185190200806
    3. '))
' → logprob: -12.57641887664795
    4. ')))' → logprob: -14.07641887664795
    5. ')
' → logprob: -14.32641887664795
    6. ' )' → logprob: -15.82641887664795
    7. ' ))' → logprob: -15.95141887664795
    8. '),' → logprob: -17.076417922973633
    9. ')`' → logprob: -17.701417922973633
    10. ')}' → logprob: -17.701417922973633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 129
Tokens correctement prédits (1ère position, stricte): 47
Tokens correctement prédits (1ère position, avec adaptation): 48
Tokens correctement prédits (top 10): 97
Précision stricte (1ère position): 36.43%
Précision adaptée (1ère position): 37.21%
Précision (top 10): 75.19%
================================================================================
