================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:56:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from itertools import islice

ans = sorted(map(int, iter(input().split())))
print(reduce(lambda x, y: x + y, islice(ans, 2)))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.12717629969120026
    2. 'partial' → logprob: -2.627176284790039
    3. ' wraps' → logprob: -3.627176284790039
    4. 'reduce' → logprob: -4.002176284790039
    5. 'l' → logprob: -6.752176284790039
    6. ' partial' → logprob: -7.502176284790039
    7. 'cached' → logprob: -9.127176284790039
    8. 'cmp' → logprob: -9.377176284790039
    9. '```' → logprob: -9.377176284790039
    10. 'cache' → logprob: -9.377176284790039

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010978259146213531
    2. '(lambda' → logprob: -4.6359782218933105
    3. ' (' → logprob: -7.6359782218933105
    4. ',' → logprob: -8.510978698730469
    5. '```' → logprob: -8.760978698730469
    6. 'def' → logprob: -9.135978698730469
    7. '.' → logprob: -9.760978698730469
    8. '(
' → logprob: -9.760978698730469
    9. 'a' → logprob: -10.385978698730469
    10. 'lambda' → logprob: -10.510978698730469

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16714626550674438
    2. '\' → logprob: -2.6671462059020996
    3. 'def' → logprob: -2.7921462059020996
    4. '```' → logprob: -5.1671462059021
    5. ' ' → logprob: -5.5421462059021
    6. '(lambda' → logprob: -6.0421462059021
    7. ',' → logprob: -6.4171462059021
    8. '\n' → logprob: -6.4171462059021
    9. '(
' → logprob: -6.5421462059021
    10. '.' → logprob: -6.5421462059021

Token 6: ' itertools' (ID: 103178)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.9289020299911499
    2. ' operator' → logprob: -1.42890202999115
    3. ' itertools' → logprob: -1.55390202999115
    4. ' collections' → logprob: -1.92890202999115
    5. ' os' → logprob: -4.9289021492004395
    6. 'operator' → logprob: -7.4289021492004395
    7. ' sys' → logprob: -8.553901672363281
    8. ' typing' → logprob: -8.553901672363281
    9. 'collections' → logprob: -8.928901672363281
    10. 'math' → logprob: -9.053901672363281

Token 7: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7218884825706482
    2. ' import' → logprob: -0.7218884825706482
    3. '.' → logprob: -3.596888542175293
    4. '.import' → logprob: -7.471888542175293
    5. ' .' → logprob: -8.721888542175293
    6. '	import' → logprob: -9.596888542175293
    7. ' ' → logprob: -9.846888542175293
    8. '_import' → logprob: -10.596888542175293
    9. '<|end|>' → logprob: -11.596888542175293
    10. '.im' → logprob: -12.221888542175293

Token 8: ' is' (ID: 382)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'group' → logprob: -1.0864453315734863
    2. 'count' → logprob: -1.0864453315734863
    3. 'acc' → logprob: -2.3364453315734863
    4. 'cycle' → logprob: -2.7114453315734863
    5. ' group' → logprob: -2.8364453315734863
    6. 'chain' → logprob: -2.9614453315734863
    7. 'com' → logprob: -4.211445331573486
    8. ' cycle' → logprob: -4.836445331573486
    9. 'product' → logprob: -4.961445331573486
    10. ' chain' → logprob: -5.211445331573486

Token 9: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -0.0003107943630311638
    2. 'l' → logprob: -8.750310897827148
    3. 'lic' → logprob: -9.000310897827148
    4. 'liced' → logprob: -11.375310897827148
    5. 'lices' → logprob: -12.625310897827148
    6. 'licing' → logprob: -12.750310897827148
    7. 'land' → logprob: -13.000310897827148
    8. '```' → logprob: -13.125310897827148
    9. '#' → logprob: -13.375310897827148
    10. 'li' → logprob: -13.375310897827148

Token 10: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5869560837745667
    2. '\' → logprob: -1.7119560241699219
    3. '\n' → logprob: -1.9619560241699219
    4. '(
' → logprob: -2.586956024169922
    5. 'def' → logprob: -3.961956024169922
    6. ',' → logprob: -4.086956024169922
    7. 'import' → logprob: -5.836956024169922
    8. '
' → logprob: -6.711956024169922
    9. ',
' → logprob: -7.086956024169922
    10. '```' → logprob: -7.086956024169922

Token 11: 'ans' (ID: 616)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0255822092294693
    2. '\' → logprob: -4.650582313537598
    3. 'def' → logprob: -4.900582313537598
    4. 'd' → logprob: -5.650582313537598
    5. '(
' → logprob: -6.775582313537598
    6. '\(' → logprob: -7.025582313537598
    7. ',' → logprob: -7.275582313537598
    8. '\n' → logprob: -8.025582313537598
    9. '```' → logprob: -8.025582313537598
    10. '`' → logprob: -8.150582313537598

Token 12: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.32619917392730713
    2. '(' → logprob: -1.4511991739273071
    3. ' =' → logprob: -3.7011990547180176
    4. '_' → logprob: -4.076199054718018
    5. '[' → logprob: -6.951199054718018
    6. ',' → logprob: -7.076199054718018
    7. ')' → logprob: -7.951199054718018
    8. ':' → logprob: -9.326199531555176
    9. '()' → logprob: -11.076199531555176
    10. '(
' → logprob: -11.201199531555176

Token 13: ' sorted' (ID: 20099)
  Prédit: ' reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reduce' → logprob: -0.18214789032936096
    2. 'reduce' → logprob: -1.8071478605270386
    3. ' list' → logprob: -6.807147979736328
    4. ' sum' → logprob: -7.682147979736328
    5. 'sum' → logprob: -8.432147979736328
    6. 'list' → logprob: -8.807147979736328
    7. ' []' → logprob: -9.182147979736328
    8. ' functools' → logprob: -9.682147979736328
    9. ' map' → logprob: -10.057147979736328
    10. 're' → logprob: -10.557147979736328

Token 14: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005512396339327097
    2. '((' → logprob: -6.005512237548828
    3. '(ans' → logprob: -6.380512237548828
    4. '(is' → logprob: -8.130512237548828
    5. '(lambda' → logprob: -8.380512237548828
    6. '([' → logprob: -8.505512237548828
    7. '(range' → logprob: -8.755512237548828
    8. '(list' → logprob: -9.755512237548828
    9. '(re' → logprob: -10.505512237548828
    10. '(s' → logprob: -10.630512237548828

Token 15: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5246602892875671
    2. '(lambda' → logprob: -0.8996602892875671
    3. '(
' → logprob: -6.899660110473633
    4. '<|end|>' → logprob: -8.649660110473633
    5. '(int' → logprob: -9.649660110473633
    6. ' (' → logprob: -9.899660110473633
    7. '(str' → logprob: -10.149660110473633
    8. '(eval' → logprob: -11.024660110473633
    9. '(abs' → logprob: -11.149660110473633
    10. '(func' → logprob: -11.149660110473633

Token 16: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17105130851268768
    2. ',' → logprob: -2.921051263809204
    3. '(is' → logprob: -3.796051263809204
    4. '(s' → logprob: -4.171051502227783
    5. '(range' → logprob: -4.546051502227783
    6. '))' → logprob: -4.671051502227783
    7. '('' → logprob: -4.796051502227783
    8. ')' → logprob: -5.046051502227783
    9. '(input' → logprob: -5.171051502227783
    10. '(next' → logprob: -5.796051502227783

Token 17: ' iter' (ID: 10621)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.15148575603961945
    2. ' input' → logprob: -2.6514856815338135
    3. 'is' → logprob: -2.9014856815338135
    4. 'filter' → logprob: -5.151485919952393
    5. ' is' → logprob: -5.401485919952393
    6. 'open' → logprob: -6.651485919952393
    7. ')' → logprob: -7.651485919952393
    8. '```' → logprob: -8.026485443115234
    9. ' filter' → logprob: -8.151485443115234
    10. '(input' → logprob: -8.151485443115234

Token 18: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0618106946349144
    2. '(lambda' → logprob: -2.9368107318878174
    3. '(()' → logprob: -6.811810493469238
    4. '((' → logprob: -7.311810493469238
    5. '(iter' → logprob: -7.311810493469238
    6. '(range' → logprob: -7.311810493469238
    7. '(input' → logprob: -7.436810493469238
    8. '(
' → logprob: -8.061810493469238
    9. '("("' → logprob: -8.061810493469238
    10. '('' → logprob: -8.311810493469238

Token 19: '().' (ID: 1454)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20683327317237854
    2. ')))' → logprob: -2.7068333625793457
    3. '(' → logprob: -3.7068333625793457
    4. '),' → logprob: -3.9568333625793457
    5. '())))' → logprob: -4.081833362579346
    6. '(),' → logprob: -4.456833362579346
    7. ')),' → logprob: -4.581833362579346
    8. ')' → logprob: -4.831833362579346
    9. '()' → logprob: -5.206833362579346
    10. '))' → logprob: -5.456833362579346

Token 20: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0380830392241478
    2. 'strip' → logprob: -3.288083076477051
    3. 'rstrip' → logprob: -11.03808307647705
    4. ')))' → logprob: -11.78808307647705
    5. ' split' → logprob: -12.66308307647705
    6. ')' → logprob: -13.28808307647705
    7. '))' → logprob: -13.91308307647705
    8. 'empty' → logprob: -14.03808307647705
    9. '```' → logprob: -14.03808307647705
    10. 'break' → logprob: -14.03808307647705

Token 21: '())))
' (ID: 129187)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1606221199035645
    2. ')))' → logprob: -1.7856221199035645
    3. '())))' → logprob: -1.9106221199035645
    4. '()' → logprob: -2.1606221199035645
    5. '())' → logprob: -2.2856221199035645
    6. '),' → logprob: -3.1606221199035645
    7. '()))' → logprob: -3.7856221199035645
    8. '()),' → logprob: -4.0356221199035645
    9. '(),' → logprob: -4.1606221199035645
    10. '(' → logprob: -4.1606221199035645

Token 22: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5571057796478271
    2. '[' → logprob: -1.6821057796478271
    3. '[:' → logprob: -2.182105779647827
    4. '[
' → logprob: -3.682105779647827
    5. ')
' → logprob: -4.182106018066406
    6. 'for' → logprob: -4.682106018066406
    7. '\' → logprob: -4.682106018066406
    8. '[::-' → logprob: -4.807106018066406
    9. ',' → logprob: -5.057106018066406
    10. '(' → logprob: -5.182106018066406

Token 23: '(re' (ID: 8178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019461149349808693
    2. '(ans' → logprob: -4.269461154937744
    3. '((' → logprob: -6.019461154937744
    4. '("("' → logprob: -7.144461154937744
    5. '(()' → logprob: -7.519461154937744
    6. '('' → logprob: -7.769461154937744
    7. '(len' → logprob: -7.894461154937744
    8. '(list' → logprob: -8.269460678100586
    9. '(is' → logprob: -9.394460678100586
    10. '()' → logprob: -10.019460678100586

Token 24: 'duce' (ID: 21375)
  Prédit: 'duce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duce' → logprob: -0.8511353731155396
    2. 'versed' → logprob: -1.3511353731155396
    3. 'verse' → logprob: -1.4761353731155396
    4. 'duced' → logprob: -3.10113525390625
    5. 'd' → logprob: -3.85113525390625
    6. 'v' → logprob: -4.72613525390625
    7. 'du' → logprob: -4.72613525390625
    8. 'ad' → logprob: -7.72613525390625
    9. 'duc' → logprob: -8.60113525390625
    10. 'sorted' → logprob: -8.60113525390625

Token 25: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.10105028003454208
    2. '(' → logprob: -2.35105037689209
    3. '(operator' → logprob: -7.35105037689209
    4. ')' → logprob: -9.72605037689209
    5. '(sum' → logprob: -10.47605037689209
    6. '(int' → logprob: -10.47605037689209
    7. '(+' → logprob: -10.85105037689209
    8. '(len' → logprob: -11.10105037689209
    9. '(max' → logprob: -11.60105037689209
    10. '(
' → logprob: -11.72605037689209

Token 26: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5293439626693726
    2. 'x' → logprob: -1.4043439626693726
    3. ' a' → logprob: -2.529344081878662
    4. 'a' → logprob: -2.529344081878662
    5. ' acc' → logprob: -5.529344081878662
    6. 'acc' → logprob: -6.404344081878662
    7. ' ' → logprob: -8.279343605041504
    8. ',' → logprob: -9.779343605041504
    9. ' ans' → logprob: -10.404343605041504
    10. ' ,' → logprob: -10.529343605041504

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012109770439565182
    2. ' ,' → logprob: -4.512109756469727
    3. ',x' → logprob: -7.137109756469727
    4. ' x' → logprob: -8.637109756469727
    5. ' ' → logprob: -11.387109756469727
    6. '1' → logprob: -11.387109756469727
    7. 'lambda' → logprob: -11.512109756469727
    8. ',y' → logprob: -11.762109756469727
    9. 'x' → logprob: -12.012109756469727
    10. ',f' → logprob: -12.012109756469727

Token 28: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.20141783356666565
    2. ' y' → logprob: -1.7014178037643433
    3. ' ' → logprob: -12.701417922973633
    4. '	y' → logprob: -14.576417922973633
    5. 'x' → logprob: -15.201417922973633
    6. '  ' → logprob: -15.576417922973633
    7. ',y' → logprob: -15.826417922973633
    8. '   ' → logprob: -16.326417922973633
    9. 'a' → logprob: -16.451417922973633
    10. '    ' → logprob: -16.701417922973633

Token 29: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0066500031389296055
    2. ',' → logprob: -5.131649971008301
    3. ' :' → logprob: -7.756649971008301
    4. ':x' → logprob: -8.6316499710083
    5. ',x' → logprob: -10.0066499710083
    6. ',y' → logprob: -11.0066499710083
    7. ' ,' → logprob: -11.2566499710083
    8. 'x' → logprob: -11.8816499710083
    9. '+' → logprob: -12.0066499710083
    10. ')' → logprob: -12.3816499710083

Token 30: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6937958002090454
    2. ' x' → logprob: -0.6937958002090454
    3. ' abs' → logprob: -8.318796157836914
    4. ' ' → logprob: -8.693796157836914
    5. 'abs' → logprob: -8.943796157836914
    6. ' max' → logprob: -10.443796157836914
    7. 'max' → logprob: -10.943796157836914
    8. '(x' → logprob: -11.318796157836914
    9. '  ' → logprob: -11.693796157836914
    10. ' (' → logprob: -11.693796157836914

Token 31: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6503641605377197
    2. '+y' → logprob: -0.9003641605377197
    3. ' +' → logprob: -3.0253641605377197
    4. '*' → logprob: -4.525363922119141
    5. '*y' → logprob: -4.650363922119141
    6. '-' → logprob: -6.900363922119141
    7. ' *' → logprob: -7.775363922119141
    8. '-y' → logprob: -8.40036392211914
    9. '^' → logprob: -8.52536392211914
    10. '+x' → logprob: -8.52536392211914

Token 32: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.42948922514915466
    2. 'y' → logprob: -1.054489254951477
    3. '1' → logprob: -8.429489135742188
    4. ' ' → logprob: -8.929489135742188
    5. 'abs' → logprob: -8.929489135742188
    6. ' (' → logprob: -9.304489135742188
    7. ' abs' → logprob: -9.679489135742188
    8. '(y' → logprob: -10.304489135742188
    9. ' ' → logprob: -10.679489135742188
    10. '(' → logprob: -11.054489135742188

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3246327042579651
    2. ')' → logprob: -2.1996326446533203
    3. '+' → logprob: -3.3246326446533203
    4. '))' → logprob: -3.4496326446533203
    5. ' +' → logprob: -3.6996326446533203
    6. ' -' → logprob: -3.8246326446533203
    7. ' ,' → logprob: -3.9496326446533203
    8. ' )' → logprob: -4.32463264465332
    9. '-' → logprob: -5.57463264465332
    10. '),' → logprob: -5.82463264465332

Token 34: ' is' (ID: 382)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.44930434226989746
    2. 'ans' → logprob: -1.0743043422698975
    3. ' is' → logprob: -4.324304580688477
    4. 'is' → logprob: -5.324304580688477
    5. '(ans' → logprob: -6.699304580688477
    6. ')' → logprob: -8.074304580688477
    7. '[' → logprob: -8.574304580688477
    8. 'list' → logprob: -8.949304580688477
    9. '	ans' → logprob: -8.949304580688477
    10. ' list' → logprob: -9.699304580688477

Token 35: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -1.5094070477061905e-05
    2. 'lace' → logprob: -11.625015258789062
    3. 'slice' → logprob: -12.500015258789062
    4. 'liced' → logprob: -14.125015258789062
    5. 'ice' → logprob: -14.750015258789062
    6. '(ans' → logprob: -14.875015258789062
    7. 'list' → logprob: -15.375015258789062
    8. 'li' → logprob: -15.875015258789062
    9. 'lices' → logprob: -16.250015258789062
    10. 'l' → logprob: -16.625015258789062

Token 36: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -3.130576806142926e-05
    2. '(' → logprob: -10.500031471252441
    3. 'ans' → logprob: -14.125031471252441
    4. ')' → logprob: -14.125031471252441
    5. ' (' → logprob: -14.500031471252441
    6. '(an' → logprob: -14.750031471252441
    7. ')(' → logprob: -15.625031471252441
    8. '(nums' → logprob: -15.875031471252441
    9. '```' → logprob: -16.000030517578125
    10. '(answer' → logprob: -16.125030517578125

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00902247428894043
    2. '(' → logprob: -4.8840227127075195
    3. ' ,' → logprob: -6.6340227127075195
    4. '),' → logprob: -10.50902271270752
    5. ')' → logprob: -11.13402271270752
    6. '(),' → logprob: -11.13402271270752
    7. ' (' → logprob: -11.63402271270752
    8. '1' → logprob: -11.88402271270752
    9. '`,' → logprob: -12.13402271270752
    10. '(",' → logprob: -12.75902271270752

Token 38: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7406544089317322
    2. '1' → logprob: -0.8656544089317322
    3. '2' → logprob: -3.365654468536377
    4. '3' → logprob: -3.365654468536377
    5. '0' → logprob: -3.740654468536377
    6. '4' → logprob: -5.615654468536377
    7. ' len' → logprob: -5.865654468536377
    8. '5' → logprob: -6.865654468536377
    9. 'len' → logprob: -7.240654468536377
    10. '10' → logprob: -7.615654468536377

Token 39: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.845589280128479
    2. '3' → logprob: -1.220589280128479
    3. '2' → logprob: -1.845589280128479
    4. '0' → logprob: -3.3455891609191895
    5. '4' → logprob: -3.3455891609191895
    6. 'len' → logprob: -3.7205891609191895
    7. '5' → logprob: -3.9705891609191895
    8. ' ' → logprob: -6.5955891609191895
    9. '10' → logprob: -6.8455891609191895
    10. '6' → logprob: -7.4705891609191895

Token 40: ')))' (ID: 15975)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4986400008201599
    2. '))' → logprob: -0.9986400008201599
    3. ')' → logprob: -4.623640060424805
    4. ')))' → logprob: -4.998640060424805
    5. 'None' → logprob: -5.998640060424805
    6. ',None' → logprob: -6.123640060424805
    7. '),' → logprob: -7.123640060424805
    8. '3' → logprob: -7.998640060424805
    9. '(None' → logprob: -8.248640060424805
    10. ',len' → logprob: -8.373640060424805


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 38
Tokens correctement prédits (1ère position, stricte): 13
Tokens correctement prédits (1ère position, avec adaptation): 13
Tokens correctement prédits (top 10): 25
Précision stricte (1ère position): 34.21%
Précision adaptée (1ère position): 34.21%
Précision (top 10): 65.79%
================================================================================
