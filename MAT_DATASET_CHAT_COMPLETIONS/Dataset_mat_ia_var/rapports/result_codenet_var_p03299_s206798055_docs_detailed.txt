================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import defaultdict, deque, Counter
from heapq import heappush, heappop, heapify
import math
import bisect
import random
from itertools import permutations, accumulate, combinations, product
import sys
import string
from bisect import bisect_left, bisect_right
from math import factorial, ceil, floor
from operator import mul
from functools import reduce

# Augment maximum recursion depth to handle deep recursion in some problem settings
sys.setrecursionlimit(2147483647)

# Define an infinity constant for later use, common practice in competitive programming
INF = 10 ** 13

#---------------------
# Input utility functions
#---------------------
def LI():
    """
    Reads a line from standard input and returns it as a list of integers.
    
    Returns:
        list of int: List of integers from input.
    """
    return list(map(int, sys.stdin.readline().split()))

def I():
    """
    Reads a line from standard input and returns it as an integer.

    Returns:
        int: The integer value from input.
    """
    return int(sys.stdin.readline())

def LS():
    """
    Reads a line from buffered standard input, returns it as a list of strings
    (words, split by whitespace).

    Returns:
        list of str: List of words as strings.
    """
    return sys.stdin.buffer.readline().rstrip().decode('utf-8').split()

def S():
    """
    Reads a line from buffered standard input and returns it as a string.

    Returns:
        str: String from input.
    """
    return sys.stdin.buffer.readline().rstrip().decode('utf-8')

def IR(n):
    """
    Reads 'n' lines from standard input, returning a list of integers.

    Args:
        n (int): Number of lines to read.

    Returns:
        list of int: List of integer values from input.
    """
    return [I() for i in range(n)]

def LIR(n):
    """
    Reads 'n' lines from standard input, each containing multiple integers, and
    returns them as a list of integer lists.

    Args:
        n (int): Number of lines to read.

    Returns:
        list of list of int: 2D list of integers from input.
    """
    return [LI() for i in range(n)]

def SR(n):
    """
    Reads 'n' lines from input, each as a string.

    Args:
        n (int): Number of lines to read.

    Returns:
        list of str: List of input strings.
    """
    return [S() for i in range(n)]

def LSR(n):
    """
    Reads 'n' lines from input, each as a list of strings (split by whitespace).

    Args:
        n (int): Number of lines to read.

    Returns:
        list of list of str: 2D list of strings.
    """
    return [LS() for i in range(n)]

def SRL(n):
    """
    Reads 'n' lines from input, splitting each string into a list of its characters.

    Args:
        n (int): Number of lines to read.

    Returns:
        list of list of str: 2D list of characters.
    """
    return [list(S()) for i in range(n)]

def MSRL(n):
    """
    Reads 'n' lines from input, converting each character to an integer, and returns
    as a list of lists of integers (useful for matrices input).

    Args:
        n (int): Number of lines to read.

    Returns:
        list of list of int: 2D list of integers.
    """
    return [[int(j) for j in list(S())] for i in range(n)]

#---------------------
# Modulo constant (commonly used for problem constraints)
#---------------------
mod = 10 ** 9 + 7

#---------------------
# Main logic
#---------------------

# Read the integer n, which probably represents the length or size of the problem input
n = I()

# Read a list of n integers H, representing heights (or similar problem-specific values)
H = LI() + [1]  # Append 1 at the end to simplify boundary conditions

# Initialize the dp (dynamic programming) array of size n+1, all values set to 1
dp = [1] * (n + 1)

# Dynamic programming state updates
for k in range(n):
    # Initialize a new dp array for transitions, all values set to 0
    new_dp = [0] * (n + 1)
    for i in range(n + 1):
        # If the (i-th) height is strictly greater than H[k], special update
        if H[i] > H[k]:
            # Doubling the number of ways
            new_dp[i] = dp[k] * 2
        # If the previous height is less than or equal to the current one, update accordingly
        elif H[k - 1] <= H[i]:
            # Use dp[i], multiply by 2 and adjust by power of two depending on height difference
            new_dp[i] = dp[i] * 2 * pow(2, H[k] - H[i], mod)
        # If previous height is greater than current, add possible ways
        elif H[k - 1] > H[k]:
            new_dp[i] = dp[i] + dp[k]
        # For all other cases, use both dp[i] and dp[k-1], adjusting similarly with powers of two
        else:
            new_dp[i] = (dp[i] + dp[k - 1]) * pow(2, H[k] - H[k - 1], mod)
        # Apply modulo to avoid overflow
        new_dp[i] %= mod
    # Update dp array to new values for the next iteration
    dp = new_dp

# Output the result; typically, the answer is the last element in dp
print(dp[-1])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' defaultdict' (ID: 107098)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.0460870265960693
    2. 'default' → logprob: -1.1710870265960693
    3. 'abc' → logprob: -1.7960870265960693
    4. 'Counter' → logprob: -2.4210870265960693
    5. ' defaultdict' → logprob: -2.6710870265960693
    6. 'named' → logprob: -5.421087265014648
    7. ' Counter' → logprob: -5.546087265014648
    8. ' abc' → logprob: -6.046087265014648
    9. ' deque' → logprob: -6.421087265014648
    10. '```' → logprob: -6.796087265014648

Token 4: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007137189619243145
    2. '(
' → logprob: -5.632137298583984
    3. '\' → logprob: -7.132137298583984
    4. '\(' → logprob: -7.382137298583984
    5. '```' → logprob: -7.882137298583984
    6. 'newline' → logprob: -8.007137298583984
    7. '\n' → logprob: -8.382137298583984
    8. '[' → logprob: -8.507137298583984
    9. '
' → logprob: -9.132137298583984
    10. 'def' → logprob: -9.257137298583984

Token 5: ' deque' (ID: 90347)
  Prédit: ' Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Counter' → logprob: -0.43963268399238586
    2. 'Counter' → logprob: -1.3146326541900635
    3. ' deque' → logprob: -3.1896326541900635
    4. 'deque' → logprob: -3.3146326541900635
    5. ' Ordered' → logprob: -5.064632892608643
    6. 'Ordered' → logprob: -5.939632892608643
    7. ' abc' → logprob: -8.439632415771484
    8. ' named' → logprob: -8.439632415771484
    9. 'named' → logprob: -9.064632415771484
    10. 'abc' → logprob: -9.689632415771484

Token 6: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00587890250608325
    2. '(
' → logprob: -5.880878925323486
    3. '\n' → logprob: -7.005878925323486
    4. '\' → logprob: -7.130878925323486
    5. '
' → logprob: -8.130878448486328
    6. '\(' → logprob: -8.505878448486328
    7. '' → logprob: -8.755878448486328
    8. ',' → logprob: -8.880878448486328
    9. '

' → logprob: -9.005878448486328
    10. ' (' → logprob: -9.505878448486328

Token 7: ' Counter' (ID: 32251)
  Prédit: ' Counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Counter' → logprob: -0.6070810556411743
    2. 'Counter' → logprob: -1.1070810556411743
    3. ' Ordered' → logprob: -2.8570809364318848
    4. 'Ordered' → logprob: -2.9820809364318848
    5. ' named' → logprob: -4.482080936431885
    6. 'named' → logprob: -6.232080936431885
    7. ' Chain' → logprob: -6.357080936431885
    8. 'Chain' → logprob: -7.107080936431885
    9. ' defaultdict' → logprob: -7.732080936431885
    10. ' counter' → logprob: -9.982081413269043

Token 8: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4605523943901062
    2. '<|end|>' → logprob: -2.085552453994751
    3. '\' → logprob: -2.335552453994751
    4. '\n' → logprob: -2.960552453994751
    5. '```' → logprob: -3.710552453994751
    6. '
' → logprob: -3.960552453994751
    7. ',' → logprob: -3.960552453994751
    8. 'import' → logprob: -4.710552215576172
    9. '<|end|>' → logprob: -5.210552215576172
    10. '(' → logprob: -5.585552215576172

Token 9: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.1971287727355957
    2. '
' → logprob: -1.3221287727355957
    3. '\' → logprob: -1.8221287727355957
    4. '' → logprob: -2.5721287727355957
    5. '```' → logprob: -3.3221287727355957
    6. '

' → logprob: -3.5721287727355957
    7. ',' → logprob: -3.6971287727355957
    8. '#' → logprob: -3.6971287727355957
    9. '`' → logprob: -4.072128772735596
    10. '.' → logprob: -4.072128772735596

Token 10: ' heap' (ID: 37237)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.0849207192659378
    2. ' typing' → logprob: -2.709920644760132
    3. ' heap' → logprob: -4.584920883178711
    4. ' collections' → logprob: -6.709920883178711
    5. ' sys' → logprob: -7.084920883178711
    6. ' math' → logprob: -7.459920883178711
    7. ' functools' → logprob: -7.459920883178711
    8. ' queue' → logprob: -7.959920883178711
    9. 'typing' → logprob: -7.959920883178711
    10. ' os' → logprob: -8.334920883178711

Token 11: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.9361264946837764e-07
    2. 'queue' → logprob: -16.125
    3. 'import' → logprob: -17.25
    4. ' queue' → logprob: -19.375
    5. 'space' → logprob: -19.875
    6. 'dict' → logprob: -20.25
    7. 's' → logprob: -20.375
    8. ' q' → logprob: -20.75
    9. 'ify' → logprob: -21.125
    10. 'i' → logprob: -21.375

Token 12: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.04867400601506233
    2. 'import' → logprob: -3.0486741065979004
    3. ' ' → logprob: -9.673673629760742
    4. '	import' → logprob: -11.423673629760742
    5. '_import' → logprob: -12.173673629760742
    6. '.import' → logprob: -13.173673629760742
    7. '.' → logprob: -14.048673629760742
    8. 'space' → logprob: -14.298673629760742
    9. ' space' → logprob: -14.548673629760742
    10. '-import' → logprob: -14.548673629760742

Token 13: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.47819843888282776
    2. 'he' → logprob: -0.9781984090805054
    3. 'heap' → logprob: -5.728198528289795
    4. 'import' → logprob: -7.728198528289795
    5. ' heap' → logprob: -8.853198051452637
    6. 'nl' → logprob: -9.728198051452637
    7. 'n' → logprob: -9.728198051452637
    8. ' n' → logprob: -9.728198051452637
    9. ' ' → logprob: -9.853198051452637
    10. ' import' → logprob: -11.103198051452637

Token 14: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.006718452088534832
    2. 'ap' → logprob: -5.006718635559082
    3. 'a' → logprob: -12.881718635559082
    4. 'appen' → logprob: -15.881718635559082
    5. 'q' → logprob: -16.256717681884766
    6. 'aps' → logprob: -16.631717681884766
    7. 'aq' → logprob: -16.756717681884766
    8. 'ап' → logprob: -17.381717681884766
    9. '[' → logprob: -17.881717681884766
    10. 'apl' → logprob: -17.881717681884766

Token 15: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.003398125059902668
    2. 'op' → logprob: -5.7533979415893555
    3. 'u' → logprob: -9.128397941589355
    4. 'us' → logprob: -9.128397941589355
    5. 'o' → logprob: -12.878397941589355
    6. 'ut' → logprob: -15.128397941589355
    7. '```' → logprob: -16.253398895263672
    8. 'opleft' → logprob: -16.378398895263672
    9. 'uf' → logprob: -16.753398895263672
    10. 'USH' → logprob: -17.378398895263672

Token 16: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.48263558745384216
    2. 'he' → logprob: -1.2326356172561646
    3. ',' → logprob: -2.482635498046875
    4. '(heap' → logprob: -5.857635498046875
    5. ' he' → logprob: -7.107635498046875
    6. '(
' → logprob: -7.107635498046875
    7. ')' → logprob: -7.107635498046875
    8. ' ' → logprob: -7.857635498046875
    9. ' (' → logprob: -8.107635498046875
    10. '_he' → logprob: -8.232635498046875

Token 17: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.6326479911804199
    2. 'he' → logprob: -0.7576479911804199
    3. 'heap' → logprob: -10.632648468017578
    4. '.he' → logprob: -11.132648468017578
    5. ' ' → logprob: -12.507648468017578
    6. ' heap' → logprob: -13.382648468017578
    7. '```' → logprob: -13.507648468017578
    8. '_he' → logprob: -13.632648468017578
    9. 'h' → logprob: -14.882648468017578
    10. '-he' → logprob: -15.007648468017578

Token 18: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.7610454708337784e-05
    2. 'ap' → logprob: -10.500027656555176
    3. 'q' → logprob: -17.37502670288086
    4. 'appen' → logprob: -18.37502670288086
    5. 'a' → logprob: -19.00002670288086
    6. 'pp' → logprob: -19.50002670288086
    7. 'aph' → logprob: -20.00002670288086
    8. ' app' → logprob: -20.37502670288086
    9. 'APP' → logprob: -20.87502670288086
    10. 'apps' → logprob: -20.87502670288086

Token 19: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.00179203599691391
    2. 'ush' → logprob: -6.376791954040527
    3. 'o' → logprob: -9.501791954040527
    4. 'p' → logprob: -11.376791954040527
    5. 'opp' → logprob: -13.626791954040527
    6. 'opleft' → logprob: -14.501791954040527
    7. 'app' → logprob: -14.626791954040527
    8. 'sh' → logprob: -15.376791954040527
    9. '   ' → logprob: -15.751791954040527
    10. '```' → logprob: -16.001792907714844

Token 20: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24267667531967163
    2. 'def' → logprob: -2.9926767349243164
    3. '

' → logprob: -3.4926767349243164
    4. '(' → logprob: -3.7426767349243164
    5. '' → logprob: -3.7426767349243164
    6. '\' → logprob: -3.7426767349243164
    7. '(
' → logprob: -4.367676734924316
    8. '\n' → logprob: -4.367676734924316
    9. '
' → logprob: -4.867676734924316
    10. '```' → logprob: -4.992676734924316

Token 21: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.4228290915489197
    2. 'heap' → logprob: -1.1728291511535645
    3. ' he' → logprob: -3.9228291511535645
    4. 'he' → logprob: -4.1728291511535645
    5. ' n' → logprob: -10.172828674316406
    6. '.heap' → logprob: -10.297828674316406
    7. 'n' → logprob: -11.172828674316406
    8. 'nl' → logprob: -11.672828674316406
    9. '```' → logprob: -11.797828674316406
    10. '(heap' → logprob: -11.797828674316406

Token 22: 'ify' (ID: 1985)
  Prédit: 'ify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -0.07809098809957504
    2. 'q' → logprob: -2.7030909061431885
    3. 'replace' → logprob: -5.578091144561768
    4. 's' → logprob: -6.203091144561768
    5. '[' → logprob: -7.828091144561768
    6. 'lify' → logprob: -8.07809066772461
    7. 'push' → logprob: -8.20309066772461
    8. 'sort' → logprob: -8.45309066772461
    9. 'queue' → logprob: -8.57809066772461
    10. '=' → logprob: -8.95309066772461

Token 23: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.427884578704834
    2. '

' → logprob: -1.677884578704834
    3. '' → logprob: -3.302884578704834
    4. 'def' → logprob: -3.927884578704834
    5. '(' → logprob: -4.177884578704834
    6. '\n' → logprob: -4.177884578704834
    7. '\' → logprob: -4.302884578704834
    8. '#' → logprob: -4.427884578704834
    9. '(
' → logprob: -4.427884578704834
    10. '```' → logprob: -4.802884578704834

Token 24: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.670745849609375
    2. 'def' → logprob: -1.045745849609375
    3. 'd' → logprob: -3.170745849609375
    4. '\' → logprob: -3.545745849609375
    5. '' → logprob: -3.920745849609375
    6. '

' → logprob: -4.295745849609375
    7. '```' → logprob: -4.420745849609375
    8. 'class' → logprob: -5.920745849609375
    9. 'import' → logprob: -5.920745849609375
    10. '#' → logprob: -6.045745849609375

Token 25: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.43293923139572144
    2. ' ' → logprob: -1.8079392910003662
    3. ' itertools' → logprob: -2.307939291000366
    4. ' math' → logprob: -3.307939291000366
    5. ' collections' → logprob: -3.307939291000366
    6. ' sys' → logprob: -5.307939052581787
    7. ' space' → logprob: -5.932939052581787
    8. ' re' → logprob: -6.432939052581787
    9. ' ' → logprob: -6.932939052581787
    10. '  ' → logprob: -6.932939052581787

Token 26: '
' (ID: 198)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.7924861907958984
    2. '
' → logprob: -0.9174861907958984
    3. 'def' → logprob: -2.9174861907958984
    4. 'd' → logprob: -3.5424861907958984
    5. '

' → logprob: -3.7924861907958984
    6. '\n' → logprob: -4.042486190795898
    7. '```' → logprob: -5.167486190795898
    8. '' → logprob: -5.292486190795898
    9. 'n' → logprob: -5.417486190795898
    10. '#' → logprob: -5.542486190795898

Token 27: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.273036241531372
    2. 'def' → logprob: -1.273036241531372
    3. '\' → logprob: -1.398036241531372
    4. 'd' → logprob: -2.023036241531372
    5. '' → logprob: -4.148036003112793
    6. '```' → logprob: -4.398036003112793
    7. '

' → logprob: -4.523036003112793
    8. '\n' → logprob: -5.023036003112793
    9. '#' → logprob: -5.648036003112793
    10. 'n' → logprob: -5.898036003112793

Token 28: ' bis' (ID: 7204)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.10679258406162262
    2. ' itertools' → logprob: -2.606792688369751
    3. ' os' → logprob: -4.481792449951172
    4. ' random' → logprob: -4.856792449951172
    5. ' collections' → logprob: -6.231792449951172
    6. ' ' → logprob: -6.231792449951172
    7. ' functools' → logprob: -6.606792449951172
    8. ' ' → logprob: -6.856792449951172
    9. ' operator' → logprob: -7.106792449951172
    10. ' bis' → logprob: -7.731792449951172

Token 29: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.006755155511200428
    2. 't' → logprob: -5.006755352020264
    3. 'e' → logprob: -10.256754875183105
    4. 'ected' → logprob: -13.256754875183105
    5. 'ec' → logprob: -13.256754875183105
    6. 'ectl' → logprob: -15.131754875183105
    7. 'ection' → logprob: -15.381754875183105
    8. '>' → logprob: -15.506754875183105
    9. '```' → logprob: -15.881754875183105
    10. 'et' → logprob: -17.006755828857422

Token 30: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3933078646659851
    2. '

' → logprob: -1.6433079242706299
    3. 'def' → logprob: -3.01830792427063
    4. '\' → logprob: -3.64330792427063
    5. '' → logprob: -4.393307685852051
    6. '\n' → logprob: -4.393307685852051
    7. '#' → logprob: -4.643307685852051
    8. '```' → logprob: -5.268307685852051
    9. '.' → logprob: -5.643307685852051
    10. ' 

' → logprob: -5.768307685852051

Token 31: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.08401620388031
    2. 'd' → logprob: -1.45901620388031
    3. 'def' → logprob: -1.45901620388031
    4. '\' → logprob: -2.2090163230895996
    5. '\n' → logprob: -3.5840163230895996
    6. '' → logprob: -3.9590163230895996
    7. '

' → logprob: -4.2090163230896
    8. '#' → logprob: -4.9590163230896
    9. '```' → logprob: -4.9590163230896
    10. 'n' → logprob: -5.4590163230896

Token 32: ' random' (ID: 7526)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.5451695919036865
    2. ' itertools' → logprob: -0.9201695919036865
    3. ' random' → logprob: -4.420169830322266
    4. 'sys' → logprob: -5.795169830322266
    5. ' heap' → logprob: -6.170169830322266
    6. 'random' → logprob: -6.420169830322266
    7. ' functools' → logprob: -6.920169830322266
    8. ' collections' → logprob: -7.545169830322266
    9. ' os' → logprob: -8.170169830322266
    10. 'it' → logprob: -8.670169830322266

Token 33: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39056822657585144
    2. '\' → logprob: -2.265568256378174
    3. '

' → logprob: -2.515568256378174
    4. '\n' → logprob: -3.265568256378174
    5. '' → logprob: -3.765568256378174
    6. '```' → logprob: -3.765568256378174
    7. '#' → logprob: -4.015568256378174
    8. 'def' → logprob: -4.140568256378174
    9. 'd' → logprob: -5.140568256378174
    10. '`' → logprob: -5.140568256378174

Token 34: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8669909834861755
    2. 'd' → logprob: -0.9919909834861755
    3. '\' → logprob: -2.7419910430908203
    4. 'def' → logprob: -3.1169910430908203
    5. '' → logprob: -3.3669910430908203
    6. '#' → logprob: -3.3669910430908203
    7. '\n' → logprob: -4.24199104309082
    8. '

' → logprob: -4.86699104309082
    9. '```' → logprob: -5.36699104309082
    10. 'n' → logprob: -6.49199104309082

Token 35: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.12142243981361389
    2. ' collections' → logprob: -2.746422529220581
    3. ' typing' → logprob: -3.871422529220581
    4. ' ' → logprob: -4.246422290802002
    5. ' functools' → logprob: -5.121422290802002
    6. ' statistics' → logprob: -5.996422290802002
    7. ' sys' → logprob: -6.121422290802002
    8. ' datetime' → logprob: -6.121422290802002
    9. ' copy' → logprob: -7.121422290802002
    10. 'collections' → logprob: -7.996422290802002

Token 36: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.08214323222637177
    2. '.' → logprob: -2.7071433067321777
    3. 'import' → logprob: -4.707143306732178
    4. ' ' → logprob: -6.457143306732178
    5. ' .' → logprob: -6.832143306732178
    6. '<|end|>' → logprob: -8.83214282989502
    7. '.import' → logprob: -9.20714282989502
    8. '	import' → logprob: -9.58214282989502
    9. '.im' → logprob: -10.08214282989502
    10. ' itertools' → logprob: -10.58214282989502

Token 37: ' permutations' (ID: 174595)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6523643732070923
    2. ' permutations' → logprob: -2.4023642539978027
    3. ' accumulate' → logprob: -2.4023642539978027
    4. ' chain' → logprob: -2.5273642539978027
    5. ' combinations' → logprob: -2.7773642539978027
    6. 'com' → logprob: -3.1523642539978027
    7. ' product' → logprob: -3.2773642539978027
    8. ' group' → logprob: -3.5273642539978027
    9. ' cycle' → logprob: -3.6523642539978027
    10. ' count' → logprob: -4.527364253997803

Token 38: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0182815790176392
    2. 'def' → logprob: -1.6432815790176392
    3. '\n' → logprob: -1.8932815790176392
    4. '\' → logprob: -2.7682814598083496
    5. '

' → logprob: -2.8932814598083496
    6. '<|end|>' → logprob: -3.0182814598083496
    7. 'n' → logprob: -3.6432814598083496
    8. ',' → logprob: -3.8932814598083496
    9. '#' → logprob: -4.01828145980835
    10. '' → logprob: -4.26828145980835

Token 39: ' accumulate' (ID: 74226)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.26819854974746704
    2. ' combinations' → logprob: -1.6431984901428223
    3. ' product' → logprob: -3.7681984901428223
    4. 'product' → logprob: -4.143198490142822
    5. '	com' → logprob: -6.393198490142822
    6. ' chain' → logprob: -8.01819896697998
    7. 'chain' → logprob: -8.26819896697998
    8. ' ' → logprob: -9.01819896697998
    9. ' group' → logprob: -9.51819896697998
    10. 'comb' → logprob: -9.64319896697998

Token 40: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.545056939125061
    2. 'def' → logprob: -2.1700568199157715
    3. '

' → logprob: -2.4200568199157715
    4. '\n' → logprob: -2.4200568199157715
    5. '#' → logprob: -3.5450568199157715
    6. '\' → logprob: -3.6700568199157715
    7. '' → logprob: -3.7950568199157715
    8. 'import' → logprob: -4.2950568199157715
    9. 'n' → logprob: -4.4200568199157715
    10. ',' → logprob: -4.9200568199157715

Token 41: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.7862186431884766
    2. 'product' → logprob: -0.7862186431884766
    3. 'group' → logprob: -3.0362186431884766
    4. ' product' → logprob: -3.6612186431884766
    5. 'chain' → logprob: -5.286218643188477
    6. ' group' → logprob: -5.411218643188477
    7. 'cycle' → logprob: -5.911218643188477
    8. ' combinations' → logprob: -6.286218643188477
    9. ' chain' → logprob: -7.661218643188477
    10. 'compress' → logprob: -9.036218643188477

Token 42: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9100289344787598
    2. ',' → logprob: -1.1600289344787598
    3. '\n' → logprob: -2.5350289344787598
    4. '<|end|>' → logprob: -2.9100289344787598
    5. '#' → logprob: -3.2850289344787598
    6. '

' → logprob: -3.6600289344787598
    7. '\' → logprob: -4.28502893447876
    8. 'import' → logprob: -4.41002893447876
    9. '' → logprob: -4.66002893447876
    10. 'def' → logprob: -4.78502893447876

Token 43: ' product' (ID: 1888)
  Prédit: ' product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.3069995045661926
    2. 'product' → logprob: -1.4319994449615479
    3. ' group' → logprob: -4.431999683380127
    4. 'com' → logprob: -5.181999683380127
    5. 'group' → logprob: -5.681999683380127
    6. ' chain' → logprob: -5.681999683380127
    7. 'chain' → logprob: -7.806999683380127
    8. 'cycle' → logprob: -8.431999206542969
    9. ' combinations' → logprob: -8.556999206542969
    10. ' cycle' → logprob: -8.681999206542969

Token 44: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3420764207839966
    2. '

' → logprob: -2.092076301574707
    3. '\n' → logprob: -2.217076301574707
    4. '\' → logprob: -3.967076301574707
    5. '<|end|>' → logprob: -4.842076301574707
    6. '#' → logprob: -4.967076301574707
    7. '' → logprob: -5.092076301574707
    8. 'def' → logprob: -5.842076301574707
    9. 'n' → logprob: -6.217076301574707
    10. ',' → logprob: -6.217076301574707

Token 45: 'import' (ID: 561)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2966211438179016
    2. 'def' → logprob: -2.296621084213257
    3. '
' → logprob: -2.421621084213257
    4. '#' → logprob: -3.171621084213257
    5. '\' → logprob: -4.671621322631836
    6. '\n' → logprob: -5.296621322631836
    7. '' → logprob: -5.546621322631836
    8. '

' → logprob: -6.296621322631836
    9. '```' → logprob: -6.796621322631836
    10. 'n' → logprob: -6.796621322631836

Token 46: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.05043764039874077
    2. 'sys' → logprob: -3.3004376888275146
    3. ' os' → logprob: -4.9254374504089355
    4. ' functools' → logprob: -6.0504374504089355
    5. ' operator' → logprob: -6.3004374504089355
    6. 'operator' → logprob: -8.175437927246094
    7. ' re' → logprob: -8.425437927246094
    8. 'os' → logprob: -8.550437927246094
    9. 're' → logprob: -9.675437927246094
    10. ' numpy' → logprob: -10.300437927246094

Token 47: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4392060339450836
    2. '

' → logprob: -1.0642060041427612
    3. '\n' → logprob: -5.064206123352051
    4. '\' → logprob: -6.689206123352051
    5. '' → logprob: -6.814206123352051
    6. 'import' → logprob: -7.689206123352051
    7. 'def' → logprob: -8.06420612335205
    8. '
' → logprob: -8.43920612335205
    9. '#' → logprob: -8.56420612335205
    10. '```' → logprob: -8.93920612335205

Token 48: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5156773328781128
    2. '\n' → logprob: -1.2656773328781128
    3. '

' → logprob: -2.3906774520874023
    4. 'def' → logprob: -4.140677452087402
    5. 'import' → logprob: -5.515677452087402
    6. 'sys' → logprob: -5.890677452087402
    7. '\' → logprob: -6.390677452087402
    8. '```' → logprob: -6.890677452087402
    9. '' → logprob: -7.015677452087402
    10. '
' → logprob: -7.515677452087402

Token 49: ' string' (ID: 1621)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0009433844243176281
    2. ' io' → logprob: -7.750943183898926
    3. ' threading' → logprob: -7.750943183898926
    4. 'os' → logprob: -10.125943183898926
    5. ' functools' → logprob: -11.000943183898926
    6. ' operator' → logprob: -11.250943183898926
    7. ' time' → logprob: -12.750943183898926
    8. '"os' → logprob: -12.875943183898926
    9. '	os' → logprob: -13.250943183898926
    10. '_os' → logprob: -13.750943183898926

Token 50: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.3516378700733185
    2. '
' → logprob: -1.226637840270996
    3. '\n' → logprob: -6.226637840270996
    4. '<|end|>' → logprob: -8.351637840270996
    5. '' → logprob: -8.601637840270996
    6. '


' → logprob: -8.851637840270996
    7. '\' → logprob: -8.851637840270996
    8. '
' → logprob: -9.101637840270996
    9. '```' → logprob: -9.226637840270996
    10. '#' → logprob: -9.351637840270996

Token 51: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.19448336958885193
    2. '
' → logprob: -1.9444833993911743
    3. '\n' → logprob: -3.5694832801818848
    4. '' → logprob: -6.569483280181885
    5. 'def' → logprob: -7.194483280181885
    6. '```' → logprob: -7.194483280181885
    7. '
' → logprob: -7.944483280181885
    8. '#' → logprob: -8.069483757019043
    9. 'class' → logprob: -8.319483757019043
    10. 'import' → logprob: -8.319483757019043

Token 52: ' bis' (ID: 7204)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.5981594920158386
    2. ' typing' → logprob: -1.7231595516204834
    3. ' functools' → logprob: -2.7231595516204834
    4. ' io' → logprob: -2.8481595516204834
    5. ' math' → logprob: -2.8481595516204834
    6. ' os' → logprob: -3.0981595516204834
    7. ' operator' → logprob: -4.598159313201904
    8. 'collections' → logprob: -4.598159313201904
    9. ' itertools' → logprob: -4.723159313201904
    10. 'os' → logprob: -5.973159313201904

Token 53: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.0007092170417308807
    2. 'ct' → logprob: -8.125709533691406
    3. 'ects' → logprob: -9.125709533691406
    4. 'ict' → logprob: -9.750709533691406
    5. 'sect' → logprob: -9.750709533691406
    6. 'ec' → logprob: -10.625709533691406
    7. 'ent' → logprob: -10.750709533691406
    8. 'ject' → logprob: -10.750709533691406
    9. 'iect' → logprob: -10.750709533691406
    10. 'ort' → logprob: -10.875709533691406

Token 54: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.18147382140159607
    2. 'import' → logprob: -1.9314738512039185
    3. '.' → logprob: -4.056473731994629
    4. '_' → logprob: -6.181473731994629
    5. '_import' → logprob: -7.556473731994629
    6. ' ' → logprob: -7.681473731994629
    7. '<|end|>' → logprob: -8.431473731994629
    8. ' .' → logprob: -8.556473731994629
    9. '.import' → logprob: -8.931473731994629
    10. '	import' → logprob: -10.306473731994629

Token 55: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.3381916582584381
    2. 'bis' → logprob: -1.3381916284561157
    3. 'ins' → logprob: -3.8381917476654053
    4. ' ins' → logprob: -5.838191509246826
    5. ' ' → logprob: -10.213191986083984
    6. '	b' → logprob: -10.588191986083984
    7. '```' → logprob: -10.588191986083984
    8. '_ins' → logprob: -10.713191986083984
    9. 'b' → logprob: -10.838191986083984
    10. 'bl' → logprob: -11.088191986083984

Token 56: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -2.2723104848410003e-05
    2. 'e' → logprob: -10.875022888183594
    3. 'ectl' → logprob: -13.625022888183594
    4. 'ected' → logprob: -14.000022888183594
    5. 'ec' → logprob: -14.750022888183594
    6. 'ecta' → logprob: -15.000022888183594
    7. 'ects' → logprob: -15.125022888183594
    8. 'sect' → logprob: -15.500022888183594
    9. 'ection' → logprob: -15.875022888183594
    10. '```' → logprob: -16.125022888183594

Token 57: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.724613606929779
    2. '_right' → logprob: -1.2246136665344238
    3. '_' → logprob: -1.5996136665344238
    4. '.ins' → logprob: -4.599613666534424
    5. '.b' → logprob: -5.974613666534424
    6. '.' → logprob: -5.974613666534424
    7. '_ins' → logprob: -6.599613666534424
    8. ',' → logprob: -8.099613189697266
    9. 'ins' → logprob: -8.474613189697266
    10. '._' → logprob: -8.474613189697266

Token 58: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13732926547527313
    2. '

' → logprob: -2.137329339981079
    3. ',' → logprob: -5.8873291015625
    4. '\n' → logprob: -6.1373291015625
    5. '' → logprob: -6.3873291015625
    6. 'def' → logprob: -7.2623291015625
    7. '
' → logprob: -7.3873291015625
    8. '


' → logprob: -7.5123291015625
    9. '\' → logprob: -8.1373291015625
    10. '<|end|>' → logprob: -8.2623291015625

Token 59: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.10022812336683273
    2. ' bis' → logprob: -2.3502280712127686
    3. 'ins' → logprob: -11.600228309631348
    4. 'b' → logprob: -12.100228309631348
    5. '```' → logprob: -12.725228309631348
    6. ' ' → logprob: -14.100228309631348
    7. '	b' → logprob: -14.350228309631348
    8. ' ins' → logprob: -14.412728309631348
    9. 'bs' → logprob: -15.162728309631348
    10. '<|end|>' → logprob: -15.912728309631348

Token 60: 'ect' (ID: 534)
  Prédit: 'sect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sect' → logprob: -0.0028998551424592733
    2. 'ect' → logprob: -6.502899646759033
    3. 's' → logprob: -7.002899646759033
    4. '```' → logprob: -8.752900123596191
    5. 'ser' → logprob: -10.127900123596191
    6. 'ct' → logprob: -10.252900123596191
    7. 'n' → logprob: -10.377900123596191
    8. 'с' → logprob: -10.502900123596191
    9. 'section' → logprob: -10.627900123596191
    10. '<' → logprob: -11.002900123596191

Token 61: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.0007591230678372085
    2. '_' → logprob: -7.875759124755859
    3. 'ight' → logprob: -8.37575912475586
    4. 'right' → logprob: -9.25075912475586
    5. '_r' → logprob: -11.25075912475586
    6. 'ght' → logprob: -11.37575912475586
    7. '<|end|>' → logprob: -11.50075912475586
    8. '_RIGHT' → logprob: -12.25075912475586
    9. '_Right' → logprob: -12.87575912475586
    10. 'Right' → logprob: -13.50075912475586

Token 62: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3165074288845062
    2. '

' → logprob: -1.3165074586868286
    3. '
' → logprob: -6.816507339477539
    4. '' → logprob: -7.691507339477539
    5. 'def' → logprob: -7.691507339477539
    6. '\n' → logprob: -7.941507339477539
    7. '


' → logprob: -8.191507339477539
    8. '#' → logprob: -9.066507339477539
    9. '```' → logprob: -9.566507339477539
    10. 'n' → logprob: -9.691507339477539

Token 63: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18292008340358734
    2. '

' → logprob: -2.057919979095459
    3. 'd' → logprob: -3.932919979095459
    4. 'def' → logprob: -4.807919979095459
    5. '' → logprob: -5.057919979095459
    6. '#' → logprob: -6.432919979095459
    7. '```' → logprob: -7.057919979095459
    8. '\n' → logprob: -7.557919979095459
    9. '\' → logprob: -7.682919979095459
    10. '
' → logprob: -7.682919979095459

Token 64: ' math' (ID: 13324)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.6204262971878052
    2. ' functools' → logprob: -2.2454261779785156
    3. ' collections' → logprob: -2.8704261779785156
    4. ' typing' → logprob: -2.9954261779785156
    5. 'os' → logprob: -3.1204261779785156
    6. 'math' → logprob: -3.1204261779785156
    7. 'operator' → logprob: -3.2454261779785156
    8. 'typing' → logprob: -3.4954261779785156
    9. 'io' → logprob: -3.7454261779785156
    10. ' operator' → logprob: -4.120426177978516

Token 65: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.07732950896024704
    2. 'import' → logprob: -3.077329397201538
    3. ' ' → logprob: -3.827329397201538
    4. '<|end|>' → logprob: -5.327329635620117
    5. '.' → logprob: -7.327329635620117
    6. '_' → logprob: -8.077329635620117
    7. '<|end|>' → logprob: -8.452329635620117
    8. '_import' → logprob: -8.702329635620117
    9. '	import' → logprob: -9.077329635620117
    10. '```' → logprob: -9.452329635620117

Token 66: ' factorial' (ID: 111204)
  Prédit: ' inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inf' → logprob: -0.9930288791656494
    2. ' ceil' → logprob: -1.8680288791656494
    3. ' gcd' → logprob: -1.8680288791656494
    4. ' sqrt' → logprob: -1.9930288791656494
    5. 'sqrt' → logprob: -2.4930288791656494
    6. 'ceil' → logprob: -2.8680288791656494
    7. ' factorial' → logprob: -3.8680288791656494
    8. 'inf' → logprob: -4.74302864074707
    9. ' comb' → logprob: -5.24302864074707
    10. 'log' → logprob: -6.36802864074707

Token 67: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.6400850415229797
    2. '
' → logprob: -0.7650850415229797
    3. 'def' → logprob: -5.640085220336914
    4. '' → logprob: -7.015085220336914
    5. '


' → logprob: -7.140085220336914
    6. '
' → logprob: -7.390085220336914
    7. '\n' → logprob: -7.890085220336914
    8. '#' → logprob: -8.890085220336914
    9. ' 

' → logprob: -8.890085220336914
    10. '\' → logprob: -8.890085220336914

Token 68: ' ceil' (ID: 35964)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.30793920159339905
    2. 'ceil' → logprob: -2.432939291000366
    3. 'g' → logprob: -2.682939291000366
    4. 'log' → logprob: -3.307939291000366
    5. 'comb' → logprob: -3.307939291000366
    6. 'is' → logprob: -4.057939052581787
    7. 'pow' → logprob: -5.557939052581787
    8. ' comb' → logprob: -5.932939052581787
    9. 'inf' → logprob: -6.057939052581787
    10. '```' → logprob: -6.057939052581787

Token 69: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.6151549220085144
    2. '
' → logprob: -0.8651549220085144
    3. ',' → logprob: -3.990154981613159
    4. 'def' → logprob: -4.49015474319458
    5. ',
' → logprob: -6.36515474319458
    6. '<|end|>' → logprob: -6.61515474319458
    7. '


' → logprob: -6.74015474319458
    8. '\n' → logprob: -7.36515474319458
    9. ',

' → logprob: -7.36515474319458
    10. '
' → logprob: -7.49015474319458

Token 70: ' floor' (ID: 8350)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.1567162126302719
    2. ' floor' → logprob: -2.1567161083221436
    3. 'sqrt' → logprob: -3.9067161083221436
    4. 'log' → logprob: -5.156716346740723
    5. ' sqrt' → logprob: -6.531716346740723
    6. 'inf' → logprob: -6.656716346740723
    7. 'fabs' → logprob: -8.531716346740723
    8. ' inf' → logprob: -8.781716346740723
    9. ' log' → logprob: -9.281716346740723
    10. 'pow' → logprob: -9.406716346740723

Token 71: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.20341041684150696
    2. '
' → logprob: -1.7034103870391846
    3. 'def' → logprob: -7.203410625457764
    4. '


' → logprob: -7.578410625457764
    5. '
' → logprob: -8.828410148620605
    6. '\n' → logprob: -9.078410148620605
    7. '#' → logprob: -9.078410148620605
    8. '' → logprob: -9.453410148620605
    9. '



' → logprob: -10.578410148620605
    10. '\' → logprob: -10.578410148620605

Token 72: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24825604259967804
    2. '

' → logprob: -1.8732560873031616
    3. 'def' → logprob: -3.123255968093872
    4. '\n' → logprob: -4.998256206512451
    5. 'import' → logprob: -5.248256206512451
    6. '
' → logprob: -6.248256206512451
    7. 'class' → logprob: -6.623256206512451
    8. '#' → logprob: -6.748256206512451
    9. '\' → logprob: -6.998256206512451
    10. 'n' → logprob: -7.373256206512451

Token 73: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.5753716230392456
    2. ' fractions' → logprob: -1.8253716230392456
    3. ' functools' → logprob: -2.575371742248535
    4. ' decimal' → logprob: -2.700371742248535
    5. ' statistics' → logprob: -2.825371742248535
    6. ' typing' → logprob: -3.450371742248535
    7. 'operator' → logprob: -4.575371742248535
    8. ' os' → logprob: -4.950371742248535
    9. ' collections' → logprob: -5.200371742248535
    10. ' itertools' → logprob: -5.825371742248535

Token 74: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.015803830698132515
    2. 'import' → logprob: -4.265803813934326
    3. '<|end|>' → logprob: -6.515803813934326
    4. ' ' → logprob: -9.390804290771484
    5. '	import' → logprob: -10.265804290771484
    6. '<|end|>' → logprob: -11.640804290771484
    7. ' as' → logprob: -11.890804290771484
    8. '_import' → logprob: -12.140804290771484
    9. '.' → logprob: -12.140804290771484
    10. ',' → logprob: -12.515804290771484

Token 75: ' mul' (ID: 9975)
  Prédit: ' item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.10290894657373428
    2. 'item' → logprob: -2.3529088497161865
    3. ' mul' → logprob: -6.977909088134766
    4. ' attr' → logprob: -7.727909088134766
    5. ' ' → logprob: -8.102909088134766
    6. 'mul' → logprob: -8.602909088134766
    7. '	item' → logprob: -8.727909088134766
    8. 'getitem' → logprob: -8.977909088134766
    9. 'attr' → logprob: -9.102909088134766
    10. ' method' → logprob: -9.352909088134766

Token 76: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03970367833971977
    2. ',
' → logprob: -3.414703607559204
    3. 'import' → logprob: -6.289703845977783
    4. '\' → logprob: -7.164703845977783
    5. ' ,' → logprob: -7.289703845977783
    6. '
' → logprob: -7.414703845977783
    7. '\n' → logprob: -7.789703845977783
    8. '<|end|>' → logprob: -7.789703845977783
    9. 'from' → logprob: -8.164703369140625
    10. '' → logprob: -8.289703369140625

Token 77: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9691210389137268
    2. '
' → logprob: -1.719120979309082
    3. 'def' → logprob: -2.344120979309082
    4. '_' → logprob: -2.594120979309082
    5. 'n' → logprob: -2.969120979309082
    6. '\' → logprob: -2.969120979309082
    7. '\n' → logprob: -3.094120979309082
    8. ',
' → logprob: -3.969120979309082
    9. 'import' → logprob: -4.094120979309082
    10. ' 
' → logprob: -4.344120979309082

Token 78: ' functools' (ID: 142636)
  Prédit: ' functools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.005271584261208773
    2. 'fun' → logprob: -5.5052714347839355
    3. ' itertools' → logprob: -7.0052714347839355
    4. '_' → logprob: -9.380271911621094
    5. ' operator' → logprob: -9.755271911621094
    6. 'operator' → logprob: -9.755271911621094
    7. '_fun' → logprob: -10.880271911621094
    8. ' math' → logprob: -11.005271911621094
    9. ' ' → logprob: -11.630271911621094
    10. 'math' → logprob: -12.130271911621094

Token 79: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.14563095569610596
    2. 'import' → logprob: -2.0206308364868164
    3. '<|end|>' → logprob: -6.395630836486816
    4. '_import' → logprob: -7.520630836486816
    5. ' ' → logprob: -7.770630836486816
    6. '_' → logprob: -8.770630836486816
    7. '	import' → logprob: -9.270630836486816
    8. '.' → logprob: -10.770630836486816
    9. '<|end|>' → logprob: -10.770630836486816
    10. '.import' → logprob: -12.270630836486816

Token 80: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.4832026958465576
    2. ' reduce' → logprob: -0.9832026958465576
    3. ' l' → logprob: -4.983202934265137
    4. 'l' → logprob: -6.233202934265137
    5. 'partial' → logprob: -9.108202934265137
    6. ' partial' → logprob: -9.983202934265137
    7. 'redu' → logprob: -10.358202934265137
    8. 'wrap' → logprob: -10.608202934265137
    9. ' wraps' → logprob: -10.733202934265137
    10. ' cmp' → logprob: -11.983202934265137

Token 81: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5889251232147217
    2. '

' → logprob: -0.8389251232147217
    3. 'def' → logprob: -4.463925361633301
    4. '
' → logprob: -7.838925361633301
    5. '\n' → logprob: -8.7139253616333
    6. 'import' → logprob: -8.8389253616333
    7. '


' → logprob: -8.9639253616333
    8. '#' → logprob: -9.2139253616333
    9. 'class' → logprob: -9.4639253616333
    10. 'n' → logprob: -9.5889253616333

Token 82: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.013408087193965912
    2. 'def' → logprob: -4.388408184051514
    3. '#' → logprob: -7.888408184051514
    4. '\' → logprob: -8.388407707214355
    5. '
' → logprob: -9.013407707214355
    6. 'n' → logprob: -9.513407707214355
    7. 'class' → logprob: -10.013407707214355
    8. 'de' → logprob: -11.138407707214355
    9. ' 
' → logprob: -11.513407707214355
    10. 'a' → logprob: -11.638407707214355

Token 83: ' Aug' (ID: 6025)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08442673832178116
    2. 'd' → logprob: -2.7094266414642334
    3. 'def' → logprob: -4.4594268798828125
    4. ' def' → logprob: -6.7094268798828125
    5. ' d' → logprob: -7.2094268798828125
    6. '_' → logprob: -7.7094268798828125
    7. '#' → logprob: -9.084426879882812
    8. ' 
' → logprob: -9.459426879882812
    9. ' 

' → logprob: -10.709426879882812
    10. ' #' → logprob: -10.834426879882812

Token 84: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.5791876912117004
    2. 'mented' → logprob: -0.8291876912117004
    3. 'mentation' → logprob: -6.329187870025635
    4. 'm' → logprob: -6.954187870025635
    5. 'mentor' → logprob: -9.079187393188477
    6. 'men' → logprob: -9.454187393188477
    7. '#' → logprob: -9.704187393188477
    8. '_' → logprob: -10.079187393188477
    9. 'def' → logprob: -10.329187393188477
    10. 'ments' → logprob: -10.329187393188477

Token 85: ' maximum' (ID: 10562)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.38988515734672546
    2. 'd' → logprob: -1.5148851871490479
    3. 'ation' → logprob: -3.139885187149048
    4. 'ing' → logprob: -3.889885187149048
    5. 'def' → logprob: -4.139884948730469
    6. ' ' → logprob: -4.639884948730469
    7. '_' → logprob: -4.764884948730469
    8. 'e' → logprob: -6.014884948730469
    9. 'class' → logprob: -7.764884948730469
    10. 'er' → logprob: -7.889884948730469

Token 86: ' recursion' (ID: 122185)
  Prédit: '_rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rec' → logprob: -0.30903857946395874
    2. '_stack' → logprob: -2.0590386390686035
    3. '_' → logprob: -2.9340386390686035
    4. '_re' → logprob: -3.9340386390686035
    5. '_size' → logprob: -4.0590386390686035
    6. '_depth' → logprob: -4.0590386390686035
    7. 'rec' → logprob: -5.5590386390686035
    8. 'sys' → logprob: -5.6840386390686035
    9. ' recursion' → logprob: -5.8090386390686035
    10. '_recursive' → logprob: -6.0590386390686035

Token 87: ' depth' (ID: 13636)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.316444456577301
    2. 'limit' → logprob: -1.3164443969726562
    3. '_depth' → logprob: -6.191444396972656
    4. ' limit' → logprob: -6.941444396972656
    5. 'depth' → logprob: -9.191444396972656
    6. '_limits' → logprob: -10.316444396972656
    7. '_LIMIT' → logprob: -11.566444396972656
    8. '_lim' → logprob: -12.066444396972656
    9. '_' → logprob: -12.441444396972656
    10. 'limits' → logprob: -12.941444396972656

Token 88: ' to' (ID: 316)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.852677583694458
    2. '_' → logprob: -1.602677583694458
    3. '
' → logprob: -1.602677583694458
    4. 'sys' → logprob: -2.977677583694458
    5. '(' → logprob: -3.727677583694458
    6. '\' → logprob: -3.727677583694458
    7. '' → logprob: -4.227677345275879
    8. '```' → logprob: -4.352677345275879
    9. '(
' → logprob: -5.102677345275879
    10. '(sys' → logprob: -5.102677345275879

Token 89: ' handle' (ID: 5318)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0036319077480584383
    2. '100' → logprob: -6.628632068634033
    3. ' sys' → logprob: -6.878632068634033
    4. '10' → logprob: -7.253632068634033
    5. ' set' → logprob: -9.378631591796875
    6. '1' → logprob: -10.003631591796875
    7. ' a' → logprob: -10.378631591796875
    8. 'sys' → logprob: -10.378631591796875
    9. ' increase' → logprob: -10.503631591796875
    10. 'set' → logprob: -10.503631591796875

Token 90: ' deep' (ID: 8103)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06373386830091476
    2. ' large' → logprob: -3.6887338161468506
    3. ' recursion' → logprob: -3.9387338161468506
    4. '10' → logprob: -5.18873405456543
    5. '100' → logprob: -5.56373405456543
    6. ' sys' → logprob: -6.81373405456543
    7. ' recursive' → logprob: -6.93873405456543
    8. ' the' → logprob: -7.31373405456543
    9. '_' → logprob: -7.43873405456543
    10. ' larger' → logprob: -7.56373405456543

Token 91: ' recursion' (ID: 122185)
  Prédit: ' recursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' recursion' → logprob: -0.3501081168651581
    2. '_rec' → logprob: -1.7251081466674805
    3. '_recursive' → logprob: -2.9751081466674805
    4. '_' → logprob: -3.2251081466674805
    5. '_stack' → logprob: -4.8501081466674805
    6. '_calls' → logprob: -5.4751081466674805
    7. 'rec' → logprob: -5.8501081466674805
    8. ' recursive' → logprob: -6.1001081466674805
    9. ' calls' → logprob: -6.7251081466674805
    10. '_call' → logprob: -6.7251081466674805

Token 92: ' in' (ID: 306)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6103723049163818
    2. 'sys' → logprob: -1.2353723049163818
    3. '
' → logprob: -2.985372304916382
    4. '(sys' → logprob: -3.360372304916382
    5. '\' → logprob: -3.985372304916382
    6. '\n' → logprob: -4.110372543334961
    7. '```' → logprob: -4.735372543334961
    8. '_' → logprob: -4.860372543334961
    9. '(
' → logprob: -5.235372543334961
    10. ':' → logprob: -5.360372543334961

Token 93: ' some' (ID: 1236)
  Prédit: ' DFS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' DFS' → logprob: -0.17219819128513336
    2. ' Python' → logprob: -2.6721982955932617
    3. ' dfs' → logprob: -3.2971982955932617
    4. ' sys' → logprob: -3.2971982955932617
    5. ' recursive' → logprob: -5.047198295593262
    6. 'dfs' → logprob: -5.547198295593262
    7. ' recursion' → logprob: -5.922198295593262
    8. ' code' → logprob: -6.922198295593262
    9. ' python' → logprob: -8.047198295593262
    10. ' large' → logprob: -8.047198295593262

Token 94: ' problem' (ID: 4792)
  Prédit: ' recursive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' recursive' → logprob: -0.9181996583938599
    2. ' cases' → logprob: -2.1681995391845703
    3. '_recursive' → logprob: -2.1681995391845703
    4. ' recursion' → logprob: -2.5431995391845703
    5. ' DFS' → logprob: -2.6681995391845703
    6. 'dfs' → logprob: -3.0431995391845703
    7. ' algorithms' → logprob: -3.7931995391845703
    8. ' sys' → logprob: -3.7931995391845703
    9. '_rec' → logprob: -4.29319953918457
    10. ' code' → logprob: -4.29319953918457

Token 95: ' settings' (ID: 8743)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.07516887784004211
    2. 'import' → logprob: -3.4501688480377197
    3. '(sys' → logprob: -3.5751688480377197
    4. '_sys' → logprob: -5.325169086456299
    5. 's' → logprob: -6.200169086456299
    6. '
' → logprob: -6.950169086456299
    7. '(' → logprob: -7.200169086456299
    8. '_
' → logprob: -7.325169086456299
    9. '=sys' → logprob: -7.325169086456299
    10. '_set' → logprob: -7.700169086456299

Token 96: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6895891427993774
    2. 'sys' → logprob: -1.4395891427993774
    3. 'import' → logprob: -1.4395891427993774
    4. '\' → logprob: -4.814589023590088
    5. '\n' → logprob: -5.064589023590088
    6. '```' → logprob: -6.189589023590088
    7. '(sys' → logprob: -6.189589023590088
    8. '' → logprob: -6.439589023590088
    9. '  
' → logprob: -7.439589023590088
    10. '
' → logprob: -7.939589023590088

Token 97: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.011545943096280098
    2. 'import' → logprob: -4.6365461349487305
    3. '
' → logprob: -6.3865461349487305
    4. ' sys' → logprob: -9.76154613494873
    5. '\n' → logprob: -11.38654613494873
    6. '  
' → logprob: -11.76154613494873
    7. '(sys' → logprob: -12.13654613494873
    8. '```' → logprob: -12.13654613494873
    9. '

' → logprob: -12.51154613494873
    10. '=sys' → logprob: -12.76154613494873

Token 98: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.0028558745980262756
    2. '.setdefault' → logprob: -5.8778557777404785
    3. '.' → logprob: -10.127856254577637
    4. '.stdout' → logprob: -12.377856254577637
    5. '.stdin' → logprob: -12.627856254577637
    6. ' .' → logprob: -13.752856254577637
    7. '.argv' → logprob: -13.752856254577637
    8. '.stderr' → logprob: -14.252856254577637
    9. '.get' → logprob: -15.502856254577637
    10. '.max' → logprob: -16.00285530090332

Token 99: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.6252275705337524
    2. '_rec' → logprob: -1.3752275705337524
    3. 'ursion' → logprob: -2.250227451324463
    4. '_limit' → logprob: -2.875227451324463
    5. '_max' → logprob: -4.375227451324463
    6. '_depth' → logprob: -4.625227451324463
    7. '_' → logprob: -5.250227451324463
    8. ' recursion' → logprob: -5.375227451324463
    9. '_recursive' → logprob: -6.125227451324463
    10. 'ection' → logprob: -6.625227451324463

Token 100: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -8.85235276655294e-05
    2. 'ursive' → logprob: -10.375088691711426
    3. 'ur' → logprob: -10.750088691711426
    4. 'urs' → logprob: -10.750088691711426
    5. 'limit' → logprob: -11.875088691711426
    6. '_limit' → logprob: -12.250088691711426
    7. 'ursively' → logprob: -13.375088691711426
    8. 'set' → logprob: -15.375088691711426
    9. '_' → logprob: -15.500088691711426
    10. 'ursor' → logprob: -15.750088691711426

Token 101: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.5249304175376892
    2. 'limit' → logprob: -0.8999304175376892
    3. '_depth' → logprob: -6.524930477142334
    4. 'ursion' → logprob: -9.149930000305176
    5. 'depth' → logprob: -9.524930000305176
    6. 'lim' → logprob: -9.774930000305176
    7. 'ault' → logprob: -10.899930000305176
    8. ' limit' → logprob: -11.149930000305176
    9. '_LIMIT' → logprob: -11.149930000305176
    10. '_limits' → logprob: -11.774930000305176

Token 102: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.580929347255733e-05
    2. ' (' → logprob: -11.375016212463379
    3. '(
' → logprob: -13.000016212463379
    4. '((' → logprob: -14.250016212463379
    5. '(int' → logprob: -15.000016212463379
    6. '100' → logprob: -15.375016212463379
    7. '```' → logprob: -15.625016212463379
    8. '(

' → logprob: -15.875016212463379
    9. '()' → logprob: -17.250015258789062
    10. ' ' → logprob: -17.375015258789062

Token 103: '214' (ID: 21401)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.001181777217425406
    2. '100' → logprob: -6.751181602478027
    3. '300' → logprob: -12.126181602478027
    4. ' ' → logprob: -13.001181602478027
    5. '200' → logprob: -13.001181602478027
    6. '500' → logprob: -14.126181602478027
    7. '400' → logprob: -14.751181602478027
    8. '250' → logprob: -15.001181602478027
    9. 'int' → logprob: -16.376182556152344
    10. '150' → logprob: -17.001182556152344

Token 104: '748' (ID: 39478)
  Prédit: '748'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '748' → logprob: -0.00016754455282352865
    2. '743' → logprob: -9.875167846679688
    3. '7' → logprob: -10.125167846679688
    4. '747' → logprob: -10.250167846679688
    5. '700' → logprob: -10.875167846679688
    6. '738' → logprob: -11.250167846679688
    7. '74' → logprob: -13.000167846679688
    8. '728' → logprob: -13.625167846679688
    9. '742' → logprob: -14.000167846679688
    10. '740' → logprob: -14.000167846679688

Token 105: '364' (ID: 30673)
  Prédit: '364'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '364' → logprob: -1.4140441635390744e-05
    2. '363' → logprob: -11.250014305114746
    3. '362' → logprob: -14.500014305114746
    4. '3' → logprob: -15.000014305114746
    5. '36' → logprob: -15.875014305114746
    6. '360' → logprob: -16.37501335144043
    7. '264' → logprob: -17.12501335144043
    8. '367' → logprob: -18.00001335144043
    9. '361' → logprob: -18.12501335144043
    10. '354' → logprob: -18.50001335144043

Token 106: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0005577972042374313
    2. '364' → logprob: -7.875557899475098
    3. '6' → logprob: -9.250557899475098
    4. '3' → logprob: -9.625557899475098
    5. '47' → logprob: -12.500557899475098
    6. '5' → logprob: -12.500557899475098
    7. '4' → logprob: -13.125557899475098
    8. '647' → logprob: -13.375557899475098
    9. '367' → logprob: -13.750557899475098
    10. '363' → logprob: -13.875557899475098

Token 107: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.25
    3. ')
' → logprob: -15.75
    4. '))' → logprob: -18.625
    5. ')`' → logprob: -18.875
    6. ')

' → logprob: -19.875
    7. ')
' → logprob: -19.875
    8. '),' → logprob: -20.0
    9. '()' → logprob: -20.125
    10. ')}' → logprob: -20.25

Token 108: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20639590919017792
    2. '

' → logprob: -2.0813958644866943
    3. 'def' → logprob: -2.8313958644866943
    4. '
' → logprob: -6.581396102905273
    5. 'class' → logprob: -7.706396102905273
    6. 'n' → logprob: -7.956396102905273
    7. '\n' → logprob: -8.706396102905273
    8. '\' → logprob: -8.831396102905273
    9. '


' → logprob: -9.331396102905273
    10. 'd' → logprob: -9.831396102905273

Token 109: ' Define' (ID: 38966)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6227135062217712
    2. 'input' → logprob: -1.622713565826416
    3. ' input' → logprob: -1.622713565826416
    4. ' def' → logprob: -3.372713565826416
    5. 'DEBUG' → logprob: -5.122713565826416
    6. 'class' → logprob: -5.122713565826416
    7. 'INF' → logprob: -5.372713565826416
    8. '#' → logprob: -5.497713565826416
    9. ' class' → logprob: -5.622713565826416
    10. 'MOD' → logprob: -5.872713565826416

Token 110: ' an' (ID: 448)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.9683535099029541
    2. ' class' → logprob: -1.968353509902954
    3. ' MOD' → logprob: -2.093353509902954
    4. 'def' → logprob: -2.343353509902954
    5. ' def' → logprob: -2.718353509902954
    6. 'class' → logprob: -2.968353509902954
    7. ' the' → logprob: -3.093353509902954
    8. ' INF' → logprob: -3.343353509902954
    9. ' MAX' → logprob: -4.218353271484375
    10. 'MOD' → logprob: -4.468353271484375

Token 111: ' infinity' (ID: 103156)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.2911313772201538
    2. ' array' → logprob: -1.6661313772201538
    3. ' empty' → logprob: -2.1661314964294434
    4. ' efficient' → logprob: -2.7911314964294434
    5. '_' → logprob: -3.1661314964294434
    6. ' adjacency' → logprob: -3.4161314964294434
    7. ' initial' → logprob: -3.5411314964294434
    8. 'class' → logprob: -3.7911314964294434
    9. 'd' → logprob: -3.7911314964294434
    10. 'other' → logprob: -3.9161314964294434

Token 112: ' constant' (ID: 9594)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34240034222602844
    2. '_' → logprob: -1.342400312423706
    3. '=' → logprob: -4.092400550842285
    4. '_inf' → logprob: -4.842400550842285
    5. '_value' → logprob: -6.592400550842285
    6. '_val' → logprob: -6.717400550842285
    7. '_float' → logprob: -7.842400550842285
    8. '_var' → logprob: -8.717400550842285
    9. '_symbol' → logprob: -8.717400550842285
    10. ' _' → logprob: -8.842400550842285

Token 113: ' for' (ID: 395)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.19860179722309113
    2. '_INF' → logprob: -2.448601722717285
    3. ' =' → logprob: -3.073601722717285
    4. '_inf' → logprob: -3.448601722717285
    5. '_INFINITY' → logprob: -5.073601722717285
    6. 'inf' → logprob: -5.073601722717285
    7. ' INF' → logprob: -6.698601722717285
    8. '_' → logprob: -7.448601722717285
    9. '=' → logprob: -7.573601722717285
    10. 'IN' → logprob: -7.948601722717285

Token 114: ' later' (ID: 4849)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.13871847093105316
    2. 'float' → logprob: -2.263718366622925
    3. ' math' → logprob: -4.138718605041504
    4. ' inf' → logprob: -5.763718605041504
    5. ' INF' → logprob: -6.263718605041504
    6. 'inf' → logprob: -6.763718605041504
    7. 'INF' → logprob: -7.138718605041504
    8. 'math' → logprob: -7.763718605041504
    9. 'int' → logprob: -7.763718605041504
    10. ' sys' → logprob: -8.138718605041504

Token 115: ' use' (ID: 1199)
  Prédit: '_inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_inf' → logprob: -0.8630280494689941
    2. '_INF' → logprob: -1.4880280494689941
    3. 'INF' → logprob: -1.7380280494689941
    4. '_INFINITY' → logprob: -2.488028049468994
    5. '_' → logprob: -2.613028049468994
    6. ' =' → logprob: -4.738028049468994
    7. 'inf' → logprob: -5.738028049468994
    8. '_in' → logprob: -6.113028049468994
    9. ' INF' → logprob: -6.113028049468994
    10. ' _' → logprob: -7.113028049468994

Token 116: ',' (ID: 11)
  Prédit: '_inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_inf' → logprob: -0.9881073832511902
    2. '_INF' → logprob: -1.613107442855835
    3. '_' → logprob: -1.738107442855835
    4. 'INF' → logprob: -1.738107442855835
    5. '_INFINITY' → logprob: -2.863107442855835
    6. 'inf' → logprob: -4.738107204437256
    7. ' =' → logprob: -5.363107204437256
    8. '_in' → logprob: -5.988107204437256
    9. ' _' → logprob: -6.863107204437256
    10. ' INF' → logprob: -6.863107204437256

Token 117: ' common' (ID: 5355)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.02026974782347679
    2. 'inf' → logprob: -4.145269870758057
    3. ' INF' → logprob: -5.520269870758057
    4. ' inf' → logprob: -9.520269393920898
    5. '_INF' → logprob: -9.645269393920898
    6. '_inf' → logprob: -9.895269393920898
    7. '10' → logprob: -11.520269393920898
    8. 'IN' → logprob: -12.395269393920898
    9. 'Inf' → logprob: -12.520269393920898
    10. '
' → logprob: -12.520269393920898

Token 118: ' practice' (ID: 8248)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6074069738388062
    2. '=' → logprob: -1.2324069738388062
    3. ' =' → logprob: -1.9824069738388062
    4. '_inf' → logprob: -4.107407093048096
    5. '_in' → logprob: -5.607407093048096
    6. '_value' → logprob: -6.857407093048096
    7. '_=' → logprob: -6.982407093048096
    8. 'in' → logprob: -7.107407093048096
    9. ' as' → logprob: -7.357407093048096
    10. ' _' → logprob: -7.732407093048096

Token 119: ' in' (ID: 306)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.06958689540624619
    2. 'inf' → logprob: -3.444586992263794
    3. '_inf' → logprob: -3.819586992263794
    4. '_INF' → logprob: -5.069586753845215
    5. '
' → logprob: -5.319586753845215
    6. '_INFINITY' → logprob: -7.194586753845215
    7. 'IN' → logprob: -7.694586753845215
    8. ' =' → logprob: -7.944586753845215
    9. 'in' → logprob: -9.069586753845215
    10. ' INF' → logprob: -9.069586753845215

Token 120: ' competitive' (ID: 18602)
  Prédit: 'alg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alg' → logprob: -0.38551801443099976
    2. ' algorithms' → logprob: -2.6355180740356445
    3. 'competitive' → logprob: -2.6355180740356445
    4. 'math' → logprob: -3.2605180740356445
    5. 'code' → logprob: -3.3855180740356445
    6. 'algorithm' → logprob: -3.6355180740356445
    7. 'python' → logprob: -3.7605180740356445
    8. ' competitive' → logprob: -4.5105180740356445
    9. 'Python' → logprob: -4.6355180740356445
    10. 'graph' → logprob: -4.7605180740356445

Token 121: ' programming' (ID: 23238)
  Prédit: ' programming'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' programming' → logprob: -0.04870932176709175
    2. 'program' → logprob: -3.0487093925476074
    3. 'Programming' → logprob: -9.42370891571045
    4. '```' → logprob: -11.29870891571045
    5. '-program' → logprob: -11.42370891571045
    6. 'python' → logprob: -12.29870891571045
    7. '_program' → logprob: -12.92370891571045
    8. 'coding' → logprob: -13.04870891571045
    9. 'import' → logprob: -13.67370891571045
    10. '#' → logprob: -13.79870891571045

Token 122: '
' (ID: 198)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.024566926062107086
    2. 'inf' → logprob: -3.899566888809204
    3. '_inf' → logprob: -5.899567127227783
    4. '_INF' → logprob: -6.899567127227783
    5. '
' → logprob: -9.149566650390625
    6. '10' → logprob: -9.649566650390625
    7. ' =' → logprob: -10.399566650390625
    8. '_' → logprob: -11.274566650390625
    9. 'IN' → logprob: -11.274566650390625
    10. '=' → logprob: -11.774566650390625

Token 123: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.0445200651884079
    2. 'inf' → logprob: -3.169520139694214
    3. ' INF' → logprob: -6.919519901275635
    4. '
' → logprob: -8.919520378112793
    5. ' inf' → logprob: -8.919520378112793
    6. '10' → logprob: -9.544520378112793
    7. '_INF' → logprob: -9.544520378112793
    8. '_inf' → logprob: -9.794520378112793
    9. 'IN' → logprob: -10.294520378112793
    10. 'in' → logprob: -12.294520378112793

Token 124: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889573276042938
    2. '=' → logprob: -2.5788958072662354
    3. ',' → logprob: -12.578895568847656
    4. '=int' → logprob: -14.078895568847656
    5. ' =
' → logprob: -14.328895568847656
    6. ' ' → logprob: -14.828895568847656
    7. ' ' → logprob: -15.203895568847656
    8. ')' → logprob: -16.328895568847656
    9. '.' → logprob: -16.703895568847656
    10. '=float' → logprob: -16.828895568847656

Token 125: ' ' (ID: 220)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.5710266828536987
    2. ' float' → logprob: -1.0710266828536987
    3. '10' → logprob: -2.6960268020629883
    4. ' ' → logprob: -3.6960268020629883
    5. '1' → logprob: -9.946026802062988
    6. 'int' → logprob: -11.071026802062988
    7. 'math' → logprob: -11.196026802062988
    8. '214' → logprob: -11.821026802062988
    9. '	float' → logprob: -12.446026802062988
    10. ' math' → logprob: -12.571026802062988

Token 126: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.20169028639793396
    2. 'float' → logprob: -1.7016903162002563
    3. 'int' → logprob: -9.201690673828125
    4. '214' → logprob: -9.701690673828125
    5. '1' → logprob: -9.826690673828125
    6. 'math' → logprob: -10.576690673828125
    7. ' float' → logprob: -10.951690673828125
    8. '2' → logprob: -11.451690673828125
    9. ' ' → logprob: -12.326690673828125
    10. '9' → logprob: -14.201690673828125

Token 127: ' **' (ID: 6240)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '18' → logprob: -0.12714669108390808
    2. '**' → logprob: -2.5021467208862305
    3. '9' → logprob: -3.8771467208862305
    4. '000' → logprob: -4.2521467208862305
    5. '00' → logprob: -7.0021467208862305
    6. '10' → logprob: -7.7521467208862305
    7. '12' → logprob: -7.8771467208862305
    8. '09' → logprob: -7.8771467208862305
    9. '8' → logprob: -9.00214672088623
    10. '20' → logprob: -9.12714672088623

Token 128: ' ' (ID: 220)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '18' → logprob: -0.24646024405956268
    2. '9' → logprob: -2.246460199356079
    3. '15' → logprob: -2.246460199356079
    4. '20' → logprob: -5.746460437774658
    5. '10' → logprob: -5.871460437774658
    6. '16' → logprob: -7.746460437774658
    7. '19' → logprob: -8.1214599609375
    8. '12' → logprob: -9.3714599609375
    9. '17' → logprob: -10.2464599609375
    10. '14' → logprob: -10.7464599609375

Token 129: '13' (ID: 1311)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '18' → logprob: -0.6388249397277832
    2. '15' → logprob: -1.1388249397277832
    3. '9' → logprob: -2.013824939727783
    4. '10' → logprob: -4.388824939727783
    5. '20' → logprob: -5.513824939727783
    6. '16' → logprob: -6.763824939727783
    7. '12' → logprob: -8.013824462890625
    8. '14' → logprob: -8.513824462890625
    9. '19' → logprob: -8.638824462890625
    10. '17' → logprob: -9.763824462890625

Token 130: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.018003251403570175
    2. '

' → logprob: -4.768003463745117
    3. '
' → logprob: -5.643003463745117
    4. '\n' → logprob: -6.018003463745117
    5. '0' → logprob: -7.518003463745117
    6. '' → logprob: -7.643003463745117
    7. '#' → logprob: -7.643003463745117
    8. 'newline' → logprob: -7.643003463745117
    9. '<|end|>' → logprob: -7.768003463745117
    10. '```' → logprob: -8.018003463745117

Token 131: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09271690994501114
    2. '
' → logprob: -2.467716932296753
    3. '

' → logprob: -6.717716693878174
    4. 'class' → logprob: -6.842716693878174
    5. '#' → logprob: -7.092716693878174
    6. '\' → logprob: -7.967716693878174
    7. '\n' → logprob: -9.342717170715332
    8. 'n' → logprob: -9.842717170715332
    9. '
' → logprob: -9.842717170715332
    10. 'import' → logprob: -10.217717170715332

Token 132: '----------------' (ID: 1297)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0009227732080034912
    2. 'class' → logprob: -7.375922679901123
    3. 'input' → logprob: -8.375923156738281
    4. 'MOD' → logprob: -10.125923156738281
    5. '#' → logprob: -11.125923156738281
    6. 'dp' → logprob: -13.250923156738281
    7. 'n' → logprob: -13.625923156738281
    8. 'mod' → logprob: -13.750923156738281
    9. 'import' → logprob: -13.750923156738281
    10. ' def' → logprob: -13.875923156738281

Token 133: '-----
' (ID: 82167)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6358473896980286
    2. '#' → logprob: -1.0108473300933838
    3. '-' → logprob: -2.760847330093384
    4. ' def' → logprob: -4.260847568511963
    5. 'class' → logprob: -4.385847568511963
    6. ' #' → logprob: -5.510847568511963
    7. ':' → logprob: -5.885847568511963
    8. '-
' → logprob: -6.760847568511963
    9. '--' → logprob: -6.885847568511963
    10. 'from' → logprob: -7.260847568511963

Token 134: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006552782375365496
    2. 'class' → logprob: -5.131552696228027
    3. '#' → logprob: -7.506552696228027
    4. 'import' → logprob: -10.256552696228027
    5. 'from' → logprob: -11.131552696228027
    6. ' def' → logprob: -11.256552696228027
    7. '\' → logprob: -13.131552696228027
    8. 'deque' → logprob: -13.131552696228027
    9. 'de' → logprob: -13.256552696228027
    10. 'input' → logprob: -13.631552696228027

Token 135: ' Input' (ID: 10090)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.018448760733008385
    2. 'class' → logprob: -4.143448829650879
    3. '#' → logprob: -6.768448829650879
    4. 'import' → logprob: -7.768448829650879
    5. 'from' → logprob: -7.893448829650879
    6. ' def' → logprob: -7.893448829650879
    7. ' class' → logprob: -9.893448829650879
    8. 'input' → logprob: -11.268448829650879
    9. '\' → logprob: -12.018448829650879
    10. 'dp' → logprob: -13.018448829650879

Token 136: ' utility' (ID: 24779)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8442041277885437
    2. ' =' → logprob: -0.8442041277885437
    3. '()' → logprob: -2.3442041873931885
    4. 's' → logprob: -3.5942041873931885
    5. '_' → logprob: -4.469203948974609
    6. '_data' → logprob: -6.469203948974609
    7. 'data' → logprob: -6.844203948974609
    8. '<|end|>' → logprob: -7.969203948974609
    9. 'def' → logprob: -8.21920394897461
    10. ':' → logprob: -8.46920394897461

Token 137: ' functions' (ID: 9964)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13914550840854645
    2. 's' → logprob: -2.139145612716675
    3. ' =' → logprob: -5.139145374298096
    4. '_' → logprob: -6.014145374298096
    5. '=' → logprob: -6.264145374298096
    6. ' def' → logprob: -6.889145374298096
    7. '()' → logprob: -7.889145374298096
    8. ':' → logprob: -8.014145851135254
    9. 'class' → logprob: -9.514145851135254
    10. '_def' → logprob: -10.014145851135254

Token 138: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005297077354043722
    2. '
' → logprob: -5.2552971839904785
    3. '

' → logprob: -11.25529670715332
    4. ' def' → logprob: -11.38029670715332
    5. '_def' → logprob: -11.63029670715332
    6. '\' → logprob: -12.13029670715332
    7. '#' → logprob: -12.25529670715332
    8. ':' → logprob: -12.38029670715332
    9. ':def' → logprob: -12.38029670715332
    10. 'de' → logprob: -12.50529670715332

Token 139: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.018214913085103035
    2. '
' → logprob: -4.018214702606201
    3. ' def' → logprob: -11.01821517944336
    4. '\' → logprob: -11.01821517944336
    5. '

' → logprob: -11.26821517944336
    6. '_def' → logprob: -11.89321517944336
    7. 'de' → logprob: -12.76821517944336
    8. ' 
' → logprob: -12.89321517944336
    9. 'ndef' → logprob: -13.26821517944336
    10. '#' → logprob: -13.51821517944336

Token 140: '----------------' (ID: 1297)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.134509021649137e-05
    2. 'input' → logprob: -9.75006103515625
    3. ' def' → logprob: -13.12506103515625
    4. 'de' → logprob: -14.75006103515625
    5. '
' → logprob: -14.87506103515625
    6. 'import' → logprob: -16.12506103515625
    7. 'd' → logprob: -16.50006103515625
    8. 'inp' → logprob: -17.12506103515625
    9. '_input' → logprob: -17.37506103515625
    10. '#' → logprob: -18.12506103515625

Token 141: '-----
' (ID: 82167)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.9054008084349334e-05
    2. '_def' → logprob: -10.625039100646973
    3. '_' → logprob: -12.250039100646973
    4. ' def' → logprob: -12.375039100646973
    5. 'f' → logprob: -12.500039100646973
    6. '_

' → logprob: -13.875039100646973
    7. '_f' → logprob: -15.500039100646973
    8. 'de' → logprob: -15.500039100646973
    9. 'func' → logprob: -16.000038146972656
    10. ':def' → logprob: -16.250038146972656

Token 142: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004245673771947622
    2. '
' → logprob: -5.504245758056641
    3. ' def' → logprob: -9.00424575805664
    4. '\' → logprob: -10.62924575805664
    5. ' 
' → logprob: -12.00424575805664
    6. 'input' → logprob: -12.25424575805664
    7. 'de' → logprob: -12.50424575805664
    8. 'ndef' → logprob: -12.87924575805664
    9. '

' → logprob: -13.75424575805664
    10. 'd' → logprob: -14.50424575805664

Token 143: ' LI' (ID: 14875)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.16970305144786835
    2. 'input' → logprob: -1.9197030067443848
    3. ' read' → logprob: -5.669703006744385
    4. ' inp' → logprob: -6.294703006744385
    5. 'I' → logprob: -6.419703006744385
    6. 'inp' → logprob: -6.919703006744385
    7. 'in' → logprob: -7.919703006744385
    8. 'read' → logprob: -8.294703483581543
    9. 'int' → logprob: -8.419703483581543
    10. ' readline' → logprob: -9.044703483581543

Token 144: '():
' (ID: 8595)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.3122314214706421
    2. 'ST' → logprob: -1.812231421470642
    3. 'ne' → logprob: -2.5622315406799316
    4. '():' → logprob: -4.187231540679932
    5. 'NE' → logprob: -5.687231540679932
    6. '():
' → logprob: -5.937231540679932
    7. 'N' → logprob: -6.062231540679932
    8. 'n' → logprob: -6.187231540679932
    9. '()' → logprob: -7.562231540679932
    10. 'St' → logprob: -7.812231540679932

Token 145: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.704299807548523
    2. 'n' → logprob: -1.329299807548523
    3. 'return' → logprob: -2.7042999267578125
    4. 'st' → logprob: -2.7042999267578125
    5. 'nt' → logprob: -3.5792999267578125
    6. ':' → logprob: -4.2042999267578125
    7. 'eturn' → logprob: -4.3292999267578125
    8. '()' → logprob: -4.3292999267578125
    9. ' return' → logprob: -4.5792999267578125
    10. 't' → logprob: -5.2042999267578125

Token 146: ' """
' (ID: 7037)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.8109137415885925
    2. 'list' → logprob: -1.0609138011932373
    3. 'return' → logprob: -1.8109138011932373
    4. ' return' → logprob: -3.5609138011932373
    5. 'map' → logprob: -4.435913562774658
    6. ' map' → logprob: -5.185913562774658
    7. 'int' → logprob: -10.935914039611816
    8. '   ' → logprob: -11.060914039611816
    9. ' ' → logprob: -11.435914039611816
    10. 'eturn' → logprob: -12.560914039611816

Token 147: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.019692376255989075
    2. ' return' → logprob: -4.019692420959473
    3. 'eturn' → logprob: -6.769692420959473
    4. '   ' → logprob: -7.894692420959473
    5. 'n' → logprob: -11.894692420959473
    6. 'int' → logprob: -12.394692420959473
    7. ' ' → logprob: -12.644692420959473
    8. '	return' → logprob: -13.144692420959473
    9. 'list' → logprob: -13.644692420959473
    10. ':return' → logprob: -14.269692420959473

Token 148: ' Reads' (ID: 88839)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04325311630964279
    2. ' return' → logprob: -3.168253183364868
    3. 'eturn' → logprob: -8.418252944946289
    4. '   ' → logprob: -10.793252944946289
    5. '	return' → logprob: -12.168252944946289
    6. 'ret' → logprob: -13.668252944946289
    7. 'list' → logprob: -14.043252944946289
    8. 'def' → logprob: -14.043252944946289
    9. 'Return' → logprob: -14.168252944946289
    10. ' ' → logprob: -14.293252944946289

Token 149: ' a' (ID: 261)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.36324912309646606
    2. ' list' → logprob: -1.4882490634918213
    3. 'return' → logprob: -2.9882490634918213
    4. 'map' → logprob: -4.3632493019104
    5. ' return' → logprob: -4.9882493019104
    6. 'input' → logprob: -5.7382493019104
    7. ' map' → logprob: -6.3632493019104
    8. 'eturn' → logprob: -6.3632493019104
    9. 'int' → logprob: -7.2382493019104
    10. '=list' → logprob: -7.8632493019104

Token 150: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.3298361301422119
    2. ' line' → logprob: -1.454836130142212
    3. 'list' → logprob: -3.954836130142212
    4. 'ine' → logprob: -3.954836130142212
    5. ' list' → logprob: -5.329835891723633
    6. 'n' → logprob: -6.204835891723633
    7. 'int' → logprob: -6.954835891723633
    8. 'input' → logprob: -8.329835891723633
    9. '_line' → logprob: -8.454835891723633
    10. 'll' → logprob: -8.579835891723633

Token 151: ' from' (ID: 591)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.027794985100626945
    2. '()' → logprob: -3.6527950763702393
    3. '.' → logprob: -7.02779483795166
    4. '.strip' → logprob: -8.27779483795166
    5. ' =' → logprob: -8.52779483795166
    6. ')' → logprob: -9.77779483795166
    7. '   ' → logprob: -10.90279483795166
    8. '=' → logprob: -11.02779483795166
    9. '.split' → logprob: -11.15279483795166
    10. '()
' → logprob: -11.15279483795166

Token 152: ' standard' (ID: 7024)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6512951850891113
    2. ' input' → logprob: -1.1512951850891113
    3. 'sys' → logprob: -2.4012951850891113
    4. ' sys' → logprob: -2.6512951850891113
    5. 'stdin' → logprob: -6.901295185089111
    6. ' stdin' → logprob: -8.401294708251953
    7. ' standard' → logprob: -12.651294708251953
    8. 'import' → logprob: -12.901294708251953
    9. '=sys' → logprob: -13.026294708251953
    10. 'standard' → logprob: -13.776294708251953

Token 153: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0788949653506279
    2. ' input' → logprob: -2.578894853591919
    3. 'in' → logprob: -12.45389461517334
    4. 'stdin' → logprob: -14.57889461517334
    5. 'import' → logprob: -14.95389461517334
    6. '_input' → logprob: -15.70389461517334
    7. 'Input' → logprob: -15.95389461517334
    8. '=input' → logprob: -16.828895568847656
    9. 'sys' → logprob: -16.953895568847656
    10. '	input' → logprob: -16.953895568847656

Token 154: ' and' (ID: 326)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.02686144970357418
    2. '()' → logprob: -3.6518614292144775
    3. '.' → logprob: -8.401861190795898
    4. ')' → logprob: -8.651861190795898
    5. ').' → logprob: -10.276861190795898
    6. '()
' → logprob: -10.901861190795898
    7. ' and' → logprob: -10.901861190795898
    8. '.strip' → logprob: -10.901861190795898
    9. ' =' → logprob: -11.276861190795898
    10. '   ' → logprob: -11.401861190795898

Token 155: ' returns' (ID: 7377)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4898346960544586
    2. ' return' → logprob: -1.4898346662521362
    3. ' returns' → logprob: -1.9898346662521362
    4. 'returns' → logprob: -3.739834785461426
    5. 'eturn' → logprob: -7.989834785461426
    6. ' converts' → logprob: -8.989834785461426
    7. 'list' → logprob: -8.989834785461426
    8. ' maps' → logprob: -8.989834785461426
    9. '   ' → logprob: -9.114834785461426
    10. ' parses' → logprob: -9.364834785461426

Token 156: ' it' (ID: 480)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.1269306242465973
    2. 'list' → logprob: -2.1269307136535645
    3. '[list' → logprob: -14.001930236816406
    4. '   ' → logprob: -14.126930236816406
    5. '=list' → logprob: -15.251930236816406
    6. '	list' → logprob: -15.251930236816406
    7. ':list' → logprob: -15.376930236816406
    8. '[' → logprob: -15.751930236816406
    9. 'map' → logprob: -16.876930236816406
    10. ' ' → logprob: -17.251930236816406

Token 157: ' as' (ID: 472)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.09115955978631973
    2. 'list' → logprob: -2.5911595821380615
    3. '.split' → logprob: -5.466159343719482
    4. '.strip' → logprob: -5.716159343719482
    5. '=list' → logprob: -6.466159343719482
    6. '[' → logprob: -7.466159343719482
    7. '.list' → logprob: -7.466159343719482
    8. '.' → logprob: -7.716159343719482
    9. ':list' → logprob: -8.09115982055664
    10. '   ' → logprob: -8.21615982055664

Token 158: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.481692910194397
    2. 'a' → logprob: -1.731692910194397
    3. ' list' → logprob: -2.1066927909851074
    4. 'list' → logprob: -2.4816927909851074
    5. 'List' → logprob: -10.856693267822266
    6. 'A' → logprob: -12.106693267822266
    7. '[' → logprob: -12.606693267822266
    8. 'alist' → logprob: -12.606693267822266
    9. '[a' → logprob: -14.106693267822266
    10. '_list' → logprob: -14.356693267822266

Token 159: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2519482672214508
    2. ' list' → logprob: -1.5019482374191284
    3. 'List' → logprob: -11.626948356628418
    4. 'int' → logprob: -12.126948356628418
    5. '_list' → logprob: -13.501948356628418
    6. 'lst' → logprob: -13.876948356628418
    7. '[' → logprob: -14.126948356628418
    8. 'map' → logprob: -14.626948356628418
    9. '[int' → logprob: -15.001948356628418
    10. 'space' → logprob: -15.376948356628418

Token 160: ' of' (ID: 328)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.494545578956604
    2. '()' → logprob: -1.744545578956604
    3. '(' → logprob: -1.994545578956604
    4. '(int' → logprob: -3.7445454597473145
    5. ' of' → logprob: -3.8695454597473145
    6. '[int' → logprob: -4.2445454597473145
    7. 'map' → logprob: -5.1195454597473145
    8. ' map' → logprob: -5.2445454597473145
    9. 'of' → logprob: -5.6195454597473145
    10. '[' → logprob: -5.8695454597473145

Token 161: ' integers' (ID: 54912)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03834911063313484
    2. 'ints' → logprob: -3.788349151611328
    3. 'inte' → logprob: -4.788349151611328
    4. ' integers' → logprob: -5.038349151611328
    5. ' int' → logprob: -9.038349151611328
    6. ' ints' → logprob: -10.413349151611328
    7. '(int' → logprob: -11.663349151611328
    8. '[int' → logprob: -12.288349151611328
    9. ']int' → logprob: -12.788349151611328
    10. '=int' → logprob: -12.913349151611328

Token 162: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7180598378181458
    2. '():' → logprob: -0.7180598378181458
    3. '().' → logprob: -3.718059778213501
    4. '():
' → logprob: -9.218059539794922
    5. ' ()' → logprob: -9.843059539794922
    6. ':' → logprob: -10.343059539794922
    7. '()`' → logprob: -10.343059539794922
    8. '()
' → logprob: -10.718059539794922
    9. '.' → logprob: -10.843059539794922
    10. '()[' → logprob: -10.968059539794922

Token 163: '    
' (ID: 1944)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.24642513692378998
    2. '()' → logprob: -2.496425151824951
    3. 'return' → logprob: -2.746425151824951
    4. '():
' → logprob: -3.371425151824951
    5. 'def' → logprob: -4.246425151824951
    6. '   ' → logprob: -4.621425151824951
    7. ':' → logprob: -5.371425151824951
    8. ' return' → logprob: -6.121425151824951
    9. '()
' → logprob: -6.121425151824951
    10. ':return' → logprob: -6.371425151824951

Token 164: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3129153251647949
    2. 'return' → logprob: -1.687915325164795
    3. ' return' → logprob: -2.562915325164795
    4. '"""' → logprob: -5.687915325164795
    5. ')' → logprob: -6.312915325164795
    6. ' line' → logprob: -8.187915802001953
    7. '""' → logprob: -8.187915802001953
    8. ' """' → logprob: -8.437915802001953
    9. 'line' → logprob: -8.687915802001953
    10. ':return' → logprob: -9.187915802001953

Token 165: ' Returns' (ID: 9609)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.015068079344928265
    2. ' return' → logprob: -4.265068054199219
    3. '   ' → logprob: -7.140068054199219
    4. 'line' → logprob: -9.390068054199219
    5. 's' → logprob: -11.140068054199219
    6. ' line' → logprob: -12.015068054199219
    7. 'tokens' → logprob: -13.640068054199219
    8. '"""' → logprob: -13.765068054199219
    9. 'lst' → logprob: -13.890068054199219
    10. '```' → logprob: -14.140068054199219

Token 166: ':
' (ID: 734)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.062471192330121994
    2. 'list' → logprob: -2.8124711513519287
    3. '[]' → logprob: -8.187471389770508
    4. ' []' → logprob: -9.312471389770508
    5. ':list' → logprob: -9.562471389770508
    6. '[list' → logprob: -11.062471389770508
    7. ' map' → logprob: -11.312471389770508
    8. '=list' → logprob: -11.562471389770508
    9. ' [' → logprob: -12.187471389770508
    10. '[' → logprob: -12.187471389770508

Token 167: '       ' (ID: 309)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.01571500301361084
    2. 'list' → logprob: -4.2657151222229
    3. 'List' → logprob: -7.6407151222229
    4. ' List' → logprob: -7.7657151222229
    5. '   ' → logprob: -8.140714645385742
    6. ' map' → logprob: -9.015714645385742
    7. ' [' → logprob: -9.390714645385742
    8. '[int' → logprob: -10.140714645385742
    9. ' []' → logprob: -10.515714645385742
    10. '[List' → logprob: -10.765714645385742

Token 168: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.06227172538638115
    2. ' list' → logprob: -2.8122718334198
    3. 'List' → logprob: -8.187272071838379
    4. '[list' → logprob: -11.187272071838379
    5. 'map' → logprob: -12.312272071838379
    6. '[int' → logprob: -12.687272071838379
    7. '   ' → logprob: -13.562272071838379
    8. 'int' → logprob: -14.312272071838379
    9. '[List' → logprob: -14.312272071838379
    10. ' List' → logprob: -14.437272071838379

Token 169: ' of' (ID: 328)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -5.0020742492051795e-05
    2. '<int' → logprob: -10.625049591064453
    3. '<|end|>' → logprob: -11.750049591064453
    4. ' of' → logprob: -12.000049591064453
    5. '[' → logprob: -12.750049591064453
    6. '[]' → logprob: -13.125049591064453
    7. '(int' → logprob: -13.375049591064453
    8. '[Int' → logprob: -13.625049591064453
    9. 'int' → logprob: -13.750049591064453
    10. '<|end|>' → logprob: -14.125049591064453

Token 170: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.014167149551212788
    2. ' int' → logprob: -4.264167308807373
    3. '[int' → logprob: -13.139166831970215
    4. 'ints' → logprob: -13.889166831970215
    5. '(int' → logprob: -15.139166831970215
    6. '<int' → logprob: -15.639166831970215
    7. ':int' → logprob: -16.01416778564453
    8. ']int' → logprob: -17.01416778564453
    9. ' ints' → logprob: -17.13916778564453
    10. 'inte' → logprob: -17.38916778564453

Token 171: ':' (ID: 25)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.4715085029602051
    2. ':' → logprob: -1.096508502960205
    3. '()' → logprob: -3.596508502960205
    4. '[int' → logprob: -4.471508502960205
    5. '():
' → logprob: -7.096508502960205
    6. '):' → logprob: -7.721508502960205
    7. '[]' → logprob: -7.846508502960205
    8. ':
' → logprob: -7.971508502960205
    9. ' =' → logprob: -8.471508026123047
    10. '[' → logprob: -8.596508026123047

Token 172: ' List' (ID: 2655)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3033390939235687
    2. ' list' → logprob: -2.8033390045166016
    3. '[int' → logprob: -2.8033390045166016
    4. ' return' → logprob: -3.0533390045166016
    5. 'list' → logprob: -3.6783390045166016
    6. ' map' → logprob: -3.9283390045166016
    7. 'int' → logprob: -4.053339004516602
    8. 'return' → logprob: -4.428339004516602
    9. 'map' → logprob: -4.678339004516602
    10. 'List' → logprob: -5.678339004516602

Token 173: ' of' (ID: 328)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.048784252256155014
    2. '[' → logprob: -3.7987842559814453
    3. '(map' → logprob: -4.798784255981445
    4. ' of' → logprob: -5.423784255981445
    5. ':' → logprob: -5.923784255981445
    6. ',' → logprob: -6.298784255981445
    7. '[]' → logprob: -6.423784255981445
    8. '(' → logprob: -6.673784255981445
    9. '[str' → logprob: -6.673784255981445
    10. '<|end|>' → logprob: -6.923784255981445

Token 174: ' integers' (ID: 54912)
  Prédit: ' integers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.03783088177442551
    2. 'inte' → logprob: -3.6628308296203613
    3. 'int' → logprob: -4.912830829620361
    4. 'ints' → logprob: -5.662830829620361
    5. ' int' → logprob: -8.78783130645752
    6. '[int' → logprob: -8.91283130645752
    7. ' ints' → logprob: -8.91283130645752
    8. '(int' → logprob: -9.41283130645752
    9. ' parsed' → logprob: -9.78783130645752
    10. 'parsed' → logprob: -10.91283130645752

Token 175: ' from' (ID: 591)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07752908766269684
    2. ':' → logprob: -3.827529191970825
    3. '[int' → logprob: -4.577528953552246
    4. ' =' → logprob: -5.202528953552246
    5. 'def' → logprob: -5.327528953552246
    6. '   ' → logprob: -5.327528953552246
    7. 'from' → logprob: -5.702528953552246
    8. '(map' → logprob: -5.952528953552246
    9. ' of' → logprob: -6.202528953552246
    10. '<|end|>' → logprob: -6.202528953552246

Token 176: ' input' (ID: 3422)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.11893469095230103
    2. 'map' → logprob: -3.1189346313476562
    3. ' the' → logprob: -3.6189346313476562
    4. ' input' → logprob: -3.6189346313476562
    5. '(map' → logprob: -4.868934631347656
    6. ' list' → logprob: -5.743934631347656
    7. 'input' → logprob: -6.493934631347656
    8. 'int' → logprob: -7.743934631347656
    9. '(int' → logprob: -7.743934631347656
    10. 'the' → logprob: -8.493934631347656

Token 177: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07329081743955612
    2. '().' → logprob: -3.0732908248901367
    3. '   ' → logprob: -4.698290824890137
    4. '()
' → logprob: -5.573290824890137
    5. 'def' → logprob: -5.698290824890137
    6. '():' → logprob: -5.823290824890137
    7. '.' → logprob: -6.823290824890137
    8. ' =' → logprob: -7.198290824890137
    9. ':' → logprob: -7.698290824890137
    10. ')' → logprob: -8.073290824890137

Token 178: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03387942910194397
    2. 'def' → logprob: -4.158879280090332
    3. ':' → logprob: -5.033879280090332
    4. '
' → logprob: -6.033879280090332
    5. '"""' → logprob: -6.283879280090332
    6. '    
' → logprob: -6.783879280090332
    7. '():' → logprob: -6.908879280090332
    8. '):' → logprob: -7.033879280090332
    9. ':
' → logprob: -7.158879280090332
    10. ')' → logprob: -7.408879280090332

Token 179: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10944731533527374
    2. '"""' → logprob: -2.4844472408294678
    3. '"""
' (adapté à ' """
') → logprob: -4.984447479248047
    4. ')' → logprob: -5.109447479248047
    5. '""' → logprob: -5.609447479248047
    6. ' """' → logprob: -6.234447479248047
    7. 'def' → logprob: -7.609447479248047
    8. '):' → logprob: -7.859447479248047
    9. '```' → logprob: -8.484447479248047
    10. ' """
' → logprob: -8.859447479248047

Token 180: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012628428637981415
    2. ' return' → logprob: -5.012628555297852
    3. 'return' → logprob: -5.137628555297852
    4. '    ' → logprob: -12.387628555297852
    5. ' s' → logprob: -12.387628555297852
    6. '    
' → logprob: -12.387628555297852
    7. '   ' → logprob: -12.887628555297852
    8. 's' → logprob: -13.262628555297852
    9. ' line' → logprob: -13.387628555297852
    10. '       ' → logprob: -13.637628555297852

Token 181: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.000205566844670102
    2. ' return' → logprob: -8.500205993652344
    3. '   ' → logprob: -13.125205993652344
    4. 'list' → logprob: -16.625205993652344
    5. 'ret' → logprob: -17.875205993652344
    6. 'import' → logprob: -18.750205993652344
    7. '	return' → logprob: -18.875205993652344
    8. 's' → logprob: -19.000205993652344
    9. ' ' → logprob: -20.250205993652344
    10. 'input' → logprob: -20.625205993652344

Token 182: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.018162699416279793
    2. ' list' → logprob: -4.018162727355957
    3. 'map' → logprob: -11.268162727355957
    4. '	list' → logprob: -18.01816177368164
    5. ' map' → logprob: -18.01816177368164
    6. '[list' → logprob: -18.89316177368164
    7. '=list' → logprob: -19.51816177368164
    8. '(list' → logprob: -20.26816177368164
    9. '[' → logprob: -20.89316177368164
    10. ':list' → logprob: -20.89316177368164

Token 183: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -8.804671233519912e-05
    2. '(' → logprob: -9.37508773803711
    3. 'map' → logprob: -12.75008773803711
    4. '(
' → logprob: -16.62508773803711
    5. '(m' → logprob: -16.87508773803711
    6. ' map' → logprob: -17.25008773803711
    7. '()' → logprob: -17.50008773803711
    8. '	map' → logprob: -17.87508773803711
    9. '.map' → logprob: -18.37508773803711
    10. '```' → logprob: -18.37508773803711

Token 184: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0004969134461134672
    2. 'int' → logprob: -7.750496864318848
    3. '(' → logprob: -9.750496864318848
    4. '<int' → logprob: -13.125496864318848
    5. ',int' → logprob: -13.250496864318848
    6. '=int' → logprob: -13.625496864318848
    7. ' int' → logprob: -14.125496864318848
    8. '[int' → logprob: -14.125496864318848
    9. ']int' → logprob: -14.875496864318848
    10. '```' → logprob: -15.125496864318848

Token 185: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26711341738700867
    2. ',input' → logprob: -1.517113447189331
    3. 'input' → logprob: -4.517113208770752
    4. 'sys' → logprob: -5.892113208770752
    5. '(sys' → logprob: -7.017113208770752
    6. '(input' → logprob: -7.767113208770752
    7. ' ,' → logprob: -10.51711368560791
    8. '(' → logprob: -10.76711368560791
    9. ' input' → logprob: -11.89211368560791
    10. '(),' → logprob: -12.39211368560791

Token 186: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.22466418147087097
    2. 'sys' → logprob: -1.7246642112731934
    3. ' input' → logprob: -3.9746642112731934
    4. ' sys' → logprob: -5.474664211273193
    5. 'stdin' → logprob: -12.599663734436035
    6. '   ' → logprob: -14.349663734436035
    7. ' ' → logprob: -14.974663734436035
    8. '=sys' → logprob: -15.224663734436035
    9. 'read' → logprob: -15.474663734436035
    10. ')' → logprob: -15.599663734436035

Token 187: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -9.253090865968261e-06
    2. '.' → logprob: -11.875009536743164
    3. '.stdout' → logprob: -14.000009536743164
    4. '.readline' → logprob: -14.125009536743164
    5. '.argv' → logprob: -15.125009536743164
    6. 'stdin' → logprob: -15.250009536743164
    7. '.std' → logprob: -16.000009536743164
    8. '.input' → logprob: -16.250009536743164
    9. ' stdin' → logprob: -18.875009536743164
    10. '(stdin' → logprob: -18.875009536743164

Token 188: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -2.7848862373502925e-05
    2. '.stdin' → logprob: -11.125027656555176
    3. '.' → logprob: -11.500027656555176
    4. '.read' → logprob: -12.875027656555176
    5. '.readlines' → logprob: -15.875027656555176
    6. '().' → logprob: -16.375028610229492
    7. ').' → logprob: -17.000028610229492
    8. '.buffer' → logprob: -17.500028610229492
    9. ' readline' → logprob: -17.625028610229492
    10. ' .' → logprob: -17.875028610229492

Token 189: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.246537173457909e-06
    2. '()' → logprob: -13.000003814697266
    3. '()))' → logprob: -13.500003814697266
    4. '())' → logprob: -15.125003814697266
    5. ' ().' → logprob: -15.250003814697266
    6. '(' → logprob: -18.125003814697266
    7. '())))' → logprob: -18.625003814697266
    8. '.readline' → logprob: -18.750003814697266
    9. '()[' → logprob: -19.125003814697266
    10. '().__' → logprob: -19.125003814697266

Token 190: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.01819349080324173
    2. 'rstrip' → logprob: -4.01819372177124
    3. 'read' → logprob: -10.518193244934082
    4. ' strip' → logprob: -11.393193244934082
    5. 'split' → logprob: -12.393193244934082
    6. ')' → logprob: -14.518193244934082
    7. 'decode' → logprob: -15.018193244934082
    8. '(strip' → logprob: -16.0181941986084
    9. '_strip' → logprob: -16.7681941986084
    10. '().' → logprob: -16.8931941986084

Token 191: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.02830418013036251
    2. '()' → logprob: -4.278304100036621
    3. '))' → logprob: -4.278304100036621
    4. '()))
' → logprob: -9.153304100036621
    5. '())' → logprob: -10.278304100036621
    6. '(' → logprob: -10.778304100036621
    7. '(),' → logprob: -12.403304100036621
    8. '()));' → logprob: -12.403304100036621
    9. '()))

' → logprob: -13.653304100036621
    10. ' ))' → logprob: -14.028304100036621

Token 192: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08104277402162552
    2. '
' → logprob: -2.581042766571045
    3. '()' → logprob: -7.456042766571045
    4. '

' → logprob: -7.581042766571045
    5. ' def' → logprob: -7.831042766571045
    6. '<|end|>' → logprob: -8.706043243408203
    7. '#' → logprob: -8.831043243408203
    8. ')' → logprob: -10.081043243408203
    9. 'newline' → logprob: -10.081043243408203
    10. '(
' → logprob: -10.206043243408203

Token 193: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.24256041646003723
    2. 'S' → logprob: -1.6175603866577148
    3. 'SI' → logprob: -4.742560386657715
    4. 'LS' → logprob: -5.242560386657715
    5. '()' → logprob: -6.617560386657715
    6. 'L' → logprob: -7.867560386657715
    7. 's' → logprob: -8.242560386657715
    8. ' I' → logprob: -8.617560386657715
    9. ' S' → logprob: -8.742560386657715
    10. 'IS' → logprob: -8.992560386657715

Token 194: '():
' (ID: 8595)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.17210617661476135
    2. 'nt' → logprob: -2.7971062660217285
    3. 'N' → logprob: -3.1721062660217285
    4. '():' → logprob: -3.1721062660217285
    5. '()' → logprob: -4.5471062660217285
    6. '():
' → logprob: -6.2971062660217285
    7. 'nit' → logprob: -7.4221062660217285
    8. 'np' → logprob: -9.29710578918457
    9. 'NT' → logprob: -9.42210578918457
    10. 'ut' → logprob: -11.79710578918457

Token 195: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.007925172336399555
    2. '():
' → logprob: -4.882925033569336
    3. '()' → logprob: -8.632925033569336
    4. ':' → logprob: -9.632925033569336
    5. ' ():' → logprob: -9.882925033569336
    6. '):' → logprob: -10.882925033569336
    7. '():
' → logprob: -13.382925033569336
    8. ':
' → logprob: -14.007925033569336
    9. 'int' → logprob: -14.257925033569336
    10. '(' → logprob: -14.632925033569336

Token 196: ' """
' (ID: 7037)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6990119814872742
    2. 'return' → logprob: -0.6990119814872742
    3. ' return' → logprob: -5.19901180267334
    4. '
' → logprob: -8.57401180267334
    5. ' int' → logprob: -9.32401180267334
    6. '   ' → logprob: -11.44901180267334
    7. '(int' → logprob: -11.69901180267334
    8. 'def' → logprob: -12.07401180267334
    9. ' 
' → logprob: -12.19901180267334
    10. '    
' → logprob: -12.44901180267334

Token 197: '   ' (ID: 271)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0024334511253982782
    2. 'sys' → logprob: -6.1274333000183105
    3. 'return' → logprob: -9.377433776855469
    4. 'nt' → logprob: -10.002433776855469
    5. 'n' → logprob: -10.252433776855469
    6. '   ' → logprob: -10.377433776855469
    7. ' int' → logprob: -11.002433776855469
    8. ')' → logprob: -11.127433776855469
    9. 'ints' → logprob: -12.377433776855469
    10. '()' → logprob: -12.627433776855469

Token 198: ' Reads' (ID: 88839)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0009829123737290502
    2. ' return' → logprob: -7.000982761383057
    3. 'def' → logprob: -10.000983238220215
    4. '
' → logprob: -11.250983238220215
    5. '   ' → logprob: -12.125983238220215
    6. 'int' → logprob: -12.625983238220215
    7. '"""' → logprob: -13.500983238220215
    8. 'Return' → logprob: -14.000983238220215
    9. 'ret' → logprob: -15.125983238220215
    10. '"""
' → logprob: -15.250983238220215

Token 199: ' a' (ID: 261)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.026573020964860916
    2. '()' → logprob: -3.6515729427337646
    3. ' int' → logprob: -9.526573181152344
    4. '=int' → logprob: -9.651573181152344
    5. '(int' → logprob: -10.026573181152344
    6. 'nt' → logprob: -11.276573181152344
    7. '<int' → logprob: -11.401573181152344
    8. 'a' → logprob: -11.651573181152344
    9. 'ints' → logprob: -12.151573181152344
    10. '()
' → logprob: -12.276573181152344

Token 200: ' line' (ID: 2543)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7648875713348389
    2. 'line' → logprob: -1.5148875713348389
    3. ' single' → logprob: -2.139887571334839
    4. 'single' → logprob: -2.139887571334839
    5. ' line' → logprob: -2.889887571334839
    6. 'n' → logprob: -3.764887571334839
    7. 'nt' → logprob: -8.139887809753418
    8. 'ingle' → logprob: -9.014887809753418
    9. ' int' → logprob: -9.139887809753418
    10. 'integer' → logprob: -10.139887809753418

Token 201: ' from' (ID: 591)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.25212839245796204
    2. '()' → logprob: -1.5021283626556396
    3. '.' → logprob: -10.002128601074219
    4. '()
' → logprob: -10.127128601074219
    5. '=' → logprob: -10.252128601074219
    6. '()[' → logprob: -10.877128601074219
    7. '.strip' → logprob: -11.377128601074219
    8. 'from' → logprob: -11.877128601074219
    9. ' ()' → logprob: -12.252128601074219
    10. '())' → logprob: -12.252128601074219

Token 202: ' standard' (ID: 7024)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.03349122777581215
    2. 'int' → logprob: -4.033491134643555
    3. ' sys' → logprob: -4.783491134643555
    4. 'input' → logprob: -5.033491134643555
    5. 'stdin' → logprob: -8.908491134643555
    6. 'standard' → logprob: -9.408491134643555
    7. ' input' → logprob: -9.533491134643555
    8. '=sys' → logprob: -10.908491134643555
    9. '(sys' → logprob: -11.533491134643555
    10. ' int' → logprob: -11.533491134643555

Token 203: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.012713649310171604
    2. 'sys' → logprob: -4.762713432312012
    3. 'stdin' → logprob: -5.512713432312012
    4. ' input' → logprob: -10.137713432312012
    5. 'put' → logprob: -12.387713432312012
    6. 'int' → logprob: -12.512713432312012
    7. '=sys' → logprob: -13.137713432312012
    8. ' sys' → logprob: -13.137713432312012
    9. '_input' → logprob: -13.387713432312012
    10. 'import' → logprob: -13.762713432312012

Token 204: ' and' (ID: 326)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.05006159842014313
    2. '()' → logprob: -3.0500617027282715
    3. ' and' → logprob: -7.4250617027282715
    4. ')' → logprob: -7.6750617027282715
    5. '()
' → logprob: -9.050061225891113
    6. '.' → logprob: -9.300061225891113
    7. 'and' → logprob: -9.550061225891113
    8. '.strip' → logprob: -10.175061225891113
    9. ').' → logprob: -10.800061225891113
    10. '())' → logprob: -11.300061225891113

Token 205: ' returns' (ID: 7377)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.810203492641449
    2. ' returns' → logprob: -0.810203492641449
    3. 'returns' → logprob: -2.8102035522460938
    4. ' return' → logprob: -3.0602035522460938
    5. 'int' → logprob: -6.060203552246094
    6. 'eturn' → logprob: -7.685203552246094
    7. 'def' → logprob: -8.685203552246094
    8. ' converts' → logprob: -9.310203552246094
    9. '
' → logprob: -9.685203552246094
    10. 'rstrip' → logprob: -9.685203552246094

Token 206: ' it' (ID: 480)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.004087185952812433
    2. ' int' → logprob: -5.504086971282959
    3. '(int' → logprob: -11.754087448120117
    4. '   ' → logprob: -14.004087448120117
    5. '=int' → logprob: -17.004087448120117
    6. ':int' → logprob: -17.129087448120117
    7. 'ints' → logprob: -18.004087448120117
    8. '<int' → logprob: -18.379087448120117
    9. '    ' → logprob: -19.129087448120117
    10. '  ' → logprob: -19.504087448120117

Token 207: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.4592224657535553
    2. 'as' → logprob: -1.584222435951233
    3. 'int' → logprob: -1.834222435951233
    4. '.readline' → logprob: -7.209222316741943
    5. '.strip' → logprob: -7.959222316741943
    6. '<int' → logprob: -8.334222793579102
    7. '().' → logprob: -8.334222793579102
    8. '.' → logprob: -8.459222793579102
    9. ' an' → logprob: -8.584222793579102
    10. '(int' → logprob: -8.584222793579102

Token 208: ' an' (ID: 448)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06878695636987686
    2. ' an' → logprob: -3.318786859512329
    3. ' int' → logprob: -3.568786859512329
    4. 'an' → logprob: -6.193787097930908
    5. 'n' → logprob: -10.31878662109375
    6. ' integer' → logprob: -11.94378662109375
    7. 'a' → logprob: -13.06878662109375
    8. ' a' → logprob: -13.44378662109375
    9. 'integer' → logprob: -14.06878662109375
    10. '<int' → logprob: -14.19378662109375

Token 209: ' integer' (ID: 16336)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04170515015721321
    2. 'integer' → logprob: -3.2917051315307617
    3. ' integer' → logprob: -5.791705131530762
    4. ' int' → logprob: -7.416705131530762
    5. '_integer' → logprob: -14.166705131530762
    6. '=int' → logprob: -14.666705131530762
    7. '_int' → logprob: -14.791705131530762
    8. 'n' → logprob: -15.041705131530762
    9. '<int' → logprob: -15.041705131530762
    10. 'inte' → logprob: -15.541705131530762

Token 210: '.

' (ID: 364)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003633804153650999
    2. '().' → logprob: -5.628633975982666
    3. '()
' → logprob: -10.628633499145508
    4. ')' → logprob: -13.128633499145508
    5. '())' → logprob: -13.503633499145508
    6. ' ()' → logprob: -13.628633499145508
    7. 'def' → logprob: -13.628633499145508
    8. '()`' → logprob: -13.753633499145508
    9. '();' → logprob: -14.253633499145508
    10. '(' → logprob: -14.628633499145508

Token 211: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.2650572955608368
    2. '()' → logprob: -1.5150573253631592
    3. '():
' → logprob: -5.14005708694458
    4. '   ' → logprob: -5.14005708694458
    5. '):' → logprob: -7.76505708694458
    6. ' ()' → logprob: -8.390057563781738
    7. '()
' → logprob: -8.640057563781738
    8. ')' → logprob: -8.890057563781738
    9. ':' → logprob: -9.015057563781738
    10. ' ():' → logprob: -9.265057563781738

Token 212: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28186410665512085
    2. 'return' → logprob: -2.1568641662597656
    3. ' return' → logprob: -2.7818641662597656
    4. '()' → logprob: -2.7818641662597656
    5. ')' → logprob: -5.906864166259766
    6. '():' → logprob: -6.531864166259766
    7. 'def' → logprob: -7.781864166259766
    8. ' ()' → logprob: -8.031864166259766
    9. '()
' → logprob: -8.281864166259766
    10. ' ' → logprob: -8.406864166259766

Token 213: ':
' (ID: 734)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.27704691886901855
    2. 'int' → logprob: -1.9020469188690186
    3. '   ' → logprob: -2.5270469188690186
    4. ' ' → logprob: -5.652047157287598
    5. '    ' → logprob: -5.902047157287598
    6. '(int' → logprob: -5.902047157287598
    7. '  ' → logprob: -6.527047157287598
    8. ':' → logprob: -6.902047157287598
    9. ':int' → logprob: -7.402047157287598
    10. '=int' → logprob: -7.777047157287598

Token 214: '       ' (ID: 309)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04204045236110687
    2. ' int' → logprob: -3.2920403480529785
    3. '   ' → logprob: -5.5420403480529785
    4. '(int' → logprob: -10.542040824890137
    5. ':int' → logprob: -11.042040824890137
    6. '=int' → logprob: -11.292040824890137
    7. '    ' → logprob: -11.417040824890137
    8. ':' → logprob: -13.417040824890137
    9. ' ' → logprob: -13.417040824890137
    10. '  ' → logprob: -13.667040824890137

Token 215: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.0007099286303855479
    2. ' int' → logprob: -7.2507100105285645
    3. '   ' → logprob: -19.250709533691406
    4. '(int' → logprob: -19.500709533691406
    5. '
' → logprob: -20.750709533691406
    6. '=int' → logprob: -21.250709533691406
    7. 'ints' → logprob: -21.625709533691406
    8. ':int' → logprob: -21.750709533691406
    9. '	int' → logprob: -22.000709533691406
    10. '[int' → logprob: -22.125709533691406

Token 216: ':' (ID: 25)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7688426375389099
    2. '(int' → logprob: -0.8938426375389099
    3. '(' → logprob: -2.6438426971435547
    4. '():' → logprob: -3.0188426971435547
    5. '(sys' → logprob: -5.643842697143555
    6. 'int' → logprob: -6.143842697143555
    7. '=int' → logprob: -7.643842697143555
    8. '(
' → logprob: -7.893842697143555
    9. ' =' → logprob: -8.393842697143555
    10. ':' → logprob: -8.393842697143555

Token 217: ' The' (ID: 623)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.029750604182481766
    2. ' int' → logprob: -3.5297505855560303
    3. '(int' → logprob: -17.02975082397461
    4. '   ' → logprob: -17.65475082397461
    5. '<int' → logprob: -17.77975082397461
    6. ' ' → logprob: -18.02975082397461
    7. '	int' → logprob: -18.15475082397461
    8. '=int' → logprob: -18.40475082397461
    9. '[int' → logprob: -19.65475082397461
    10. '  ' → logprob: -19.65475082397461

Token 218: ' integer' (ID: 16336)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.27274051308631897
    2. 'int' → logprob: -2.397740602493286
    3. ' int' → logprob: -2.522740602493286
    4. 'next' → logprob: -3.147740602493286
    5. ' integer' → logprob: -4.147740364074707
    6. '=int' → logprob: -5.397740364074707
    7. 'integer' → logprob: -6.397740364074707
    8. ' input' → logprob: -7.647740364074707
    9. ' parsed' → logprob: -7.647740364074707
    10. 'input' → logprob: -8.147740364074707

Token 219: ' value' (ID: 1432)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.27102506160736084
    2. '()' → logprob: -2.0210251808166504
    3. '(sys' → logprob: -2.6460251808166504
    4. '(' → logprob: -3.5210251808166504
    5. 'int' → logprob: -6.14602518081665
    6. 'value' → logprob: -6.52102518081665
    7. '=int' → logprob: -8.146024703979492
    8. '_value' → logprob: -9.396024703979492
    9. 'from' → logprob: -9.771024703979492
    10. 'Value' → logprob: -9.771024703979492

Token 220: ' from' (ID: 591)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.026394929736852646
    2. '(int' → logprob: -3.776394844055176
    3. '(' → logprob: -6.276394844055176
    4. 'int' → logprob: -7.901394844055176
    5. '=int' → logprob: -7.901394844055176
    6. '(sys' → logprob: -8.276394844055176
    7. '=' → logprob: -9.276394844055176
    8. '   ' → logprob: -9.776394844055176
    9. 'from' → logprob: -10.526394844055176
    10. '().' → logprob: -10.651394844055176

Token 221: ' input' (ID: 3422)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.6218107342720032
    2. 'input' → logprob: -0.8718107342720032
    3. ' input' → logprob: -3.7468106746673584
    4. ' sys' → logprob: -3.9968106746673584
    5. 'int' → logprob: -6.1218109130859375
    6. '(sys' → logprob: -7.4968109130859375
    7. '   ' → logprob: -10.121810913085938
    8. 'the' → logprob: -10.746810913085938
    9. '=sys' → logprob: -10.996810913085938
    10. ' int' → logprob: -11.246810913085938

Token 222: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2216266691684723
    2. '().' → logprob: -1.72162663936615
    3. '()
' → logprob: -4.2216267585754395
    4. '():' → logprob: -6.2216267585754395
    5. '():
' → logprob: -6.7216267585754395
    6. ')' → logprob: -6.8466267585754395
    7. '())' → logprob: -6.9716267585754395
    8. '   ' → logprob: -9.846626281738281
    9. '()

' → logprob: -10.721626281738281
    10. '()`' → logprob: -10.846626281738281

Token 223: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.2974773943424225
    2. '():
' → logprob: -1.7974773645401
    3. '()' → logprob: -2.5474774837493896
    4. '   ' → logprob: -4.4224772453308105
    5. '):' → logprob: -7.5474772453308105
    6. '):
' → logprob: -8.422477722167969
    7. ')' → logprob: -8.672477722167969
    8. '()
' → logprob: -9.297477722167969
    9. ' ()' → logprob: -9.672477722167969
    10. 'def' → logprob: -9.922477722167969

Token 224: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24629898369312286
    2. ')' → logprob: -1.8712990283966064
    3. '()' → logprob: -3.7462990283966064
    4. '):' → logprob: -4.496298789978027
    5. 'return' → logprob: -4.746298789978027
    6. '():' → logprob: -4.871298789978027
    7. '):
' → logprob: -5.121298789978027
    8. 'def' → logprob: -6.121298789978027
    9. ' return' → logprob: -6.246298789978027
    10. '():
' → logprob: -6.621298789978027

Token 225: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2923441231250763
    2. '   ' → logprob: -1.542344093322754
    3. ' return' → logprob: -3.542344093322754
    4. 'int' → logprob: -4.542344093322754
    5. ' int' → logprob: -11.417344093322754
    6. '    ' → logprob: -13.542344093322754
    7. '  ' → logprob: -14.292344093322754
    8. '    
' → logprob: -14.292344093322754
    9. ' ' → logprob: -14.417344093322754
    10. '
' → logprob: -14.667344093322754

Token 226: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07893848419189453
    2. 'int' → logprob: -2.5789384841918945
    3. ' return' → logprob: -9.953938484191895
    4. '   ' → logprob: -14.203938484191895
    5. ' int' → logprob: -15.203938484191895
    6. '=int' → logprob: -15.453938484191895
    7. '(int' → logprob: -17.453937530517578
    8. '
' → logprob: -17.578937530517578
    9. '[int' → logprob: -17.953937530517578
    10. 'Return' → logprob: -18.453937530517578

Token 227: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07888978719711304
    2. ' int' → logprob: -2.578889846801758
    3. '	int' → logprob: -16.828889846801758
    4. '(int' → logprob: -17.078889846801758
    5. '   ' → logprob: -18.203889846801758
    6. ' ' → logprob: -18.328889846801758
    7. '  ' → logprob: -18.953889846801758
    8. '=int' → logprob: -19.203889846801758
    9. '<int' → logprob: -19.828889846801758
    10. '[int' → logprob: -20.203889846801758

Token 228: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.0031786637846380472
    2. '(' → logprob: -5.753178596496582
    3. ' (' → logprob: -14.753178596496582
    4. 'sys' → logprob: -14.878178596496582
    5. '(Sys' → logprob: -15.878178596496582
    6. '(system' → logprob: -16.7531795501709
    7. ' sys' → logprob: -17.0031795501709
    8. '=sys' → logprob: -17.2531795501709
    9. '(System' → logprob: -18.5031795501709
    10. '(
' → logprob: -18.8781795501709

Token 229: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -9.014684110297821e-06
    2. '.stdout' → logprob: -12.000008583068848
    3. 'stdin' → logprob: -13.375008583068848
    4. '.std' → logprob: -14.625008583068848
    5. '.' → logprob: -14.875008583068848
    6. '.readline' → logprob: -15.250008583068848
    7. '.argv' → logprob: -16.375009536743164
    8. '(stdin' → logprob: -16.750009536743164
    9. ' stdin' → logprob: -18.375009536743164
    10. '.stderr' → logprob: -19.250009536743164

Token 230: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.314893901348114
    2. '.stdin' → logprob: -1.3148939609527588
    3. '().' → logprob: -6.81489372253418
    4. '(stdin' → logprob: -8.18989372253418
    5. 'stdin' → logprob: -8.93989372253418
    6. '.' → logprob: -9.06489372253418
    7. '.stdout' → logprob: -11.93989372253418
    8. ' .' → logprob: -14.31489372253418
    9. '()' → logprob: -15.06489372253418
    10. '(sys' → logprob: -15.06489372253418

Token 231: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.12773637473583221
    2. '().' → logprob: -2.1277363300323486
    3. '()' → logprob: -7.127736568450928
    4. ' ())' → logprob: -13.00273609161377
    5. ')' → logprob: -14.25273609161377
    6. '.readline' → logprob: -14.62773609161377
    7. '();)' → logprob: -14.75273609161377
    8. '())
' → logprob: -14.75273609161377
    9. '()))' → logprob: -14.87773609161377
    10. '(' → logprob: -15.12773609161377

Token 232: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003765727742575109
    2. '#' → logprob: -8.37537670135498
    3. '
' → logprob: -8.87537670135498
    4. '

' → logprob: -13.25037670135498
    5. 'class' → logprob: -13.50037670135498
    6. 'd' → logprob: -13.62537670135498
    7. '\' → logprob: -14.37537670135498
    8. ' def' → logprob: -15.00037670135498
    9. '#
' → logprob: -15.12537670135498
    10. '  
' → logprob: -16.125375747680664

Token 233: ' LS' (ID: 60790)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.011657999828457832
    2. 'LS' → logprob: -4.511658191680908
    3. 'SI' → logprob: -8.26165771484375
    4. 'L' → logprob: -8.76165771484375
    5. 'SS' → logprob: -9.38665771484375
    6. 'LI' → logprob: -9.88665771484375
    7. 's' → logprob: -11.01165771484375
    8. 'IS' → logprob: -11.51165771484375
    9. 'input' → logprob: -11.76165771484375
    10. 'LL' → logprob: -12.01165771484375

Token 234: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.026035284623503685
    2. '():
' → logprob: -3.7760353088378906
    3. '()' → logprob: -5.901035308837891
    4. ' ():' → logprob: -10.15103530883789
    5. ' ()' → logprob: -12.65103530883789
    6. '():

' → logprob: -12.65103530883789
    7. '():
' → logprob: -13.02603530883789
    8. 'def' → logprob: -14.27603530883789
    9. '()>' → logprob: -14.27603530883789
    10. '()):
' → logprob: -16.52603530883789

Token 235: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0009158630855381489
    2. '():
' → logprob: -7.000916004180908
    3. ' ():' → logprob: -12.62591552734375
    4. '()' → logprob: -14.12591552734375
    5. '():
' → logprob: -15.62591552734375
    6. '():

' → logprob: -16.12591552734375
    7. 'def' → logprob: -16.62591552734375
    8. '):' → logprob: -19.75091552734375
    9. '(' → logprob: -20.25091552734375
    10. '().' → logprob: -20.37591552734375

Token 236: ' """
' (ID: 7037)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.47969502210617065
    2. '():' → logprob: -1.1046950817108154
    3. 'def' → logprob: -3.2296950817108154
    4. '():
' → logprob: -4.729694843292236
    5. 'return' → logprob: -7.479694843292236
    6. '   ' → logprob: -8.354695320129395
    7. '()
' → logprob: -8.479695320129395
    8. ')' → logprob: -9.354695320129395
    9. ' return' → logprob: -10.354695320129395
    10. ' def' → logprob: -10.479695320129395

Token 237: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.16401568055152893
    2. '():
' → logprob: -2.789015769958496
    3. '):' → logprob: -2.914015769958496
    4. '()' → logprob: -3.664015769958496
    5. '):
' → logprob: -4.914015769958496
    6. 'def' → logprob: -6.789015769958496
    7. '   ' → logprob: -7.289015769958496
    8. ')' → logprob: -7.789015769958496
    9. ':' → logprob: -8.289015769958496
    10. ' ():' → logprob: -10.789015769958496

Token 238: ' Reads' (ID: 88839)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0374748669564724
    2. 'return' → logprob: -3.9124748706817627
    3. '   ' → logprob: -4.537474632263184
    4. '()' → logprob: -5.787474632263184
    5. '"""
' → logprob: -7.037474632263184
    6. ' return' → logprob: -7.037474632263184
    7. ' def' → logprob: -7.537474632263184
    8. 'Reads' (adapté à ' Reads') → logprob: -8.287474632263184
    9. '()
' → logprob: -8.537474632263184
    10. '"""' → logprob: -8.787474632263184

Token 239: ' a' (ID: 261)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.030080445110797882
    2. '()' → logprob: -3.530080556869507
    3. ' a' → logprob: -8.405080795288086
    4. 'line' → logprob: -9.655080795288086
    5. 'a' → logprob: -10.780080795288086
    6. '()
' → logprob: -12.280080795288086
    7. ' ()' → logprob: -12.780080795288086
    8. ')' → logprob: -13.280080795288086
    9. ' line' → logprob: -13.280080795288086
    10. '()[' → logprob: -13.655080795288086

Token 240: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.09621033072471619
    2. ' line' → logprob: -2.471210241317749
    3. 'sys' → logprob: -5.471210479736328
    4. 'ine' → logprob: -6.221210479736328
    5. 'str' → logprob: -8.471210479736328
    6. 'strip' → logprob: -8.721210479736328
    7. ' sys' → logprob: -8.846210479736328
    8. 'string' → logprob: -8.971210479736328
    9. 'input' → logprob: -8.971210479736328
    10. '_line' → logprob: -9.721210479736328

Token 241: ' from' (ID: 591)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.011056192219257355
    2. '()' → logprob: -4.511056423187256
    3. 'from' → logprob: -12.886055946350098
    4. '=' → logprob: -13.511055946350098
    5. 'def' → logprob: -13.886055946350098
    6. ' =' → logprob: -14.011055946350098
    7. '()
' → logprob: -14.136055946350098
    8. ' ().' → logprob: -14.636055946350098
    9. '()[' → logprob: -15.261055946350098
    10. '.strip' → logprob: -15.511055946350098

Token 242: ' buffered' (ID: 76502)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -3.500108141452074e-05
    2. ' sys' → logprob: -10.500035285949707
    3. 'input' → logprob: -12.000035285949707
    4. 'string' → logprob: -14.000035285949707
    5. 'standard' → logprob: -14.875035285949707
    6. 'stdin' → logprob: -16.62503433227539
    7. '(sys' → logprob: -17.87503433227539
    8. 'system' → logprob: -18.12503433227539
    9. '=sys' → logprob: -18.25003433227539
    10. 'str' → logprob: -19.62503433227539

Token 243: ' standard' (ID: 7024)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6990900635719299
    2. 'sys' → logprob: -0.6990900635719299
    3. ' input' → logprob: -6.199090003967285
    4. ' sys' → logprob: -6.449090003967285
    5. 'stdin' → logprob: -6.949090003967285
    6. '(sys' → logprob: -7.074090003967285
    7. '=sys' → logprob: -7.824090003967285
    8. 'string' → logprob: -9.949090003967285
    9. '_input' → logprob: -10.824090003967285
    10. '()' → logprob: -11.199090003967285

Token 244: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0005780545179732144
    2. ' input' → logprob: -7.500577926635742
    3. '_input' → logprob: -10.625577926635742
    4. 'in' → logprob: -14.875577926635742
    5. 'sys' → logprob: -15.750577926635742
    6. 'import' → logprob: -16.375577926635742
    7. 'stdin' → logprob: -16.375577926635742
    8. '=input' → logprob: -17.125577926635742
    9. 'output' → logprob: -17.750577926635742
    10. 'Input' → logprob: -18.125577926635742

Token 245: ',' (ID: 11)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0004907185211777687
    2. '()' → logprob: -7.625490665435791
    3. '.strip' → logprob: -14.12549114227295
    4. ')' → logprob: -14.62549114227295
    5. ').' → logprob: -14.75049114227295
    6. '()
' → logprob: -15.00049114227295
    7. '.' → logprob: -15.50049114227295
    8. ' ().' → logprob: -15.87549114227295
    9. 'def' → logprob: -16.000490188598633
    10. '.rstrip' → logprob: -16.500490188598633

Token 246: ' returns' (ID: 7377)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.6485230922698975
    2. '().' → logprob: -1.6485230922698975
    3. '.strip' → logprob: -2.0235230922698975
    4. 'rstrip' → logprob: -2.6485230922698975
    5. '   ' → logprob: -3.8985230922698975
    6. ' strips' → logprob: -4.148523330688477
    7. '.rstrip' → logprob: -4.398523330688477
    8. 'str' → logprob: -4.648523330688477
    9. 'returns' → logprob: -4.898523330688477
    10. 'def' → logprob: -5.273523330688477

Token 247: ' it' (ID: 480)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.8942438960075378
    2. ' it' → logprob: -1.2692439556121826
    3. ' list' → logprob: -2.0192439556121826
    4. 'a' → logprob: -2.1442439556121826
    5. 'list' → logprob: -3.1442439556121826
    6. 'it' → logprob: -4.8942437171936035
    7. 'sys' → logprob: -5.3942437171936035
    8. ' sys' → logprob: -6.3942437171936035
    9. 'strip' → logprob: -7.1442437171936035
    10. 'str' → logprob: -7.5192437171936035

Token 248: ' as' (ID: 472)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.006613765377551317
    2. '.strip' → logprob: -5.381613731384277
    3. '.rstrip' → logprob: -6.756613731384277
    4. '.' → logprob: -7.631613731384277
    5. ' .' → logprob: -8.506613731384277
    6. '()' → logprob: -10.381613731384277
    7. '.split' → logprob: -10.381613731384277
    8. '.readline' → logprob: -10.631613731384277
    9. '   ' → logprob: -10.631613731384277
    10. '[:-' → logprob: -10.881613731384277

Token 249: ' a' (ID: 261)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.07927606999874115
    2. 'list' → logprob: -2.5792760848999023
    3. 'string' → logprob: -8.329276084899902
    4. ' sys' → logprob: -9.454276084899902
    5. ' list' → logprob: -10.579276084899902
    6. 'a' → logprob: -10.704276084899902
    7. 'str' → logprob: -11.579276084899902
    8. '(sys' → logprob: -12.579276084899902
    9. '=sys' → logprob: -13.204276084899902
    10. 'strip' → logprob: -13.579276084899902

Token 250: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.005696384701877832
    2. 'str' → logprob: -5.7556962966918945
    3. ' list' → logprob: -6.7556962966918945
    4. 'strip' → logprob: -7.0056962966918945
    5. 'string' → logprob: -7.7556962966918945
    6. '[str' → logprob: -11.630696296691895
    7. ' stripped' → logprob: -12.755696296691895
    8. '[list' → logprob: -13.380696296691895
    9. '[string' → logprob: -13.880696296691895
    10. 'rstrip' → logprob: -14.380696296691895

Token 251: ' of' (ID: 328)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3417704701423645
    2. '().' → logprob: -1.8417704105377197
    3. '(str' → logprob: -2.2167704105377197
    4. '[str' → logprob: -4.841770648956299
    5. '(' → logprob: -5.341770648956299
    6. 'of' → logprob: -5.591770648956299
    7. '(strip' → logprob: -6.966770648956299
    8. ' of' → logprob: -7.091770648956299
    9. '(map' → logprob: -7.216770648956299
    10. 'def' → logprob: -7.216770648956299

Token 252: ' strings' (ID: 18279)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.02439032681286335
    2. 'strings' → logprob: -3.77439022064209
    3. 'string' → logprob: -6.77439022064209
    4. ' strings' → logprob: -14.77439022064209
    5. ' str' → logprob: -15.14939022064209
    6. '[str' → logprob: -15.14939022064209
    7. 'strip' → logprob: -15.27439022064209
    8. '(str' → logprob: -15.27439022064209
    9. 'sys' → logprob: -15.64939022064209
    10. 'input' → logprob: -16.774391174316406

Token 253: '
' (ID: 198)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.3880128562450409
    2. '()' → logprob: -1.2630128860473633
    3. '():' → logprob: -3.5130128860473633
    4. '   ' → logprob: -4.763012886047363
    5. '():
' → logprob: -8.638012886047363
    6. '()
' → logprob: -9.513012886047363
    7. '.' → logprob: -10.263012886047363
    8. ')' → logprob: -10.388012886047363
    9. 'def' → logprob: -10.638012886047363
    10. ':' → logprob: -10.888012886047363

Token 254: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6287295818328857
    2. '():' → logprob: -1.1287295818328857
    3. '().' → logprob: -2.3787295818328857
    4. '   ' → logprob: -3.5037295818328857
    5. '():
' → logprob: -4.003729820251465
    6. '()
' → logprob: -7.003729820251465
    7. 'def' → logprob: -7.253729820251465
    8. '.' → logprob: -9.378729820251465
    9. ' =' → logprob: -9.378729820251465
    10. '=' → logprob: -9.378729820251465

Token 255: ' (' (ID: 350)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3553858697414398
    2. '()' → logprob: -1.6053858995437622
    3. '().' → logprob: -2.6053857803344727
    4. '():
' → logprob: -4.480385780334473
    5. '   ' → logprob: -4.980385780334473
    6. 'def' → logprob: -5.730385780334473
    7. '):' → logprob: -6.480385780334473
    8. ':' → logprob: -7.480385780334473
    9. '.' → logprob: -8.605385780334473
    10. '()
' → logprob: -8.855385780334473

Token 256: 'words' (ID: 10020)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25987276434898376
    2. '):' → logprob: -1.5098727941513062
    3. ').' → logprob: -6.259872913360596
    4. '   ' → logprob: -6.384872913360596
    5. '):
' → logprob: -6.509872913360596
    6. 'def' → logprob: -6.634872913360596
    7. '().' → logprob: -7.134872913360596
    8. '()' → logprob: -9.259872436523438
    9. 'sys' → logprob: -9.259872436523438
    10. ' )' → logprob: -9.259872436523438

Token 257: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2047068327665329
    2. '())' → logprob: -2.454706907272339
    3. '):' → logprob: -2.829706907272339
    4. '()' → logprob: -4.07970666885376
    5. '   ' → logprob: -4.32970666885376
    6. ').' → logprob: -4.70470666885376
    7. '()).' → logprob: -8.204707145690918
    8. '().' → logprob: -8.329707145690918
    9. 'def' → logprob: -8.579707145690918
    10. '):
' → logprob: -9.204707145690918

Token 258: ' split' (ID: 12648)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3882591724395752
    2. 'strip' → logprob: -2.263259172439575
    3. 'split' → logprob: -2.263259172439575
    4. ' not' → logprob: -3.263259172439575
    5. ' stripped' → logprob: -4.013258934020996
    6. 'str' → logprob: -4.638258934020996
    7. 'not' → logprob: -4.763258934020996
    8. 'rstrip' → logprob: -4.888258934020996
    9. ' without' → logprob: -5.013258934020996
    10. ').' → logprob: -5.513258934020996

Token 259: ' by' (ID: 656)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.44155988097190857
    2. '())' → logprob: -1.066559910774231
    3. ')' → logprob: -5.316559791564941
    4. '=' → logprob: -5.691559791564941
    5. 'by' → logprob: -6.316559791564941
    6. 'lines' → logprob: -6.691559791564941
    7. '()[' → logprob: -7.941559791564941
    8. ' by' → logprob: -8.066559791564941
    9. '()
' → logprob: -8.066559791564941
    10. 'line' → logprob: -9.441559791564941

Token 260: ' whitespace' (ID: 83606)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3676784634590149
    2. ')' → logprob: -1.4926784038543701
    3. '())' → logprob: -2.99267840385437
    4. ''' → logprob: -5.117678642272949
    5. 'space' → logprob: -5.117678642272949
    6. 'None' → logprob: -5.242678642272949
    7. 'spaces' → logprob: -5.367678642272949
    8. 'default' → logprob: -5.617678642272949
    9. ' whitespace' → logprob: -6.117678642272949
    10. ' spaces' → logprob: -6.742678642272949

Token 261: ').

' (ID: 3991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0042049516923725605
    2. '())' → logprob: -6.379204750061035
    3. '   ' → logprob: -6.629204750061035
    4. '()' → logprob: -7.379204750061035
    5. ').' → logprob: -7.879204750061035
    6. '))' → logprob: -9.504204750061035
    7. ' )' → logprob: -10.504204750061035
    8. 'def' → logprob: -10.754204750061035
    9. '().' → logprob: -10.754204750061035
    10. '.' → logprob: -11.504204750061035

Token 262: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03981010615825653
    2. 'def' → logprob: -3.4148101806640625
    3. '()' → logprob: -5.6648101806640625
    4. ')' → logprob: -6.4148101806640625
    5. '():' → logprob: -7.9148101806640625
    6. '()
' → logprob: -8.414810180664062
    7. '():
' → logprob: -8.414810180664062
    8. '):
' → logprob: -9.789810180664062
    9. '):' → logprob: -10.039810180664062
    10. '```' → logprob: -10.039810180664062

Token 263: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13891395926475525
    2. 'def' → logprob: -2.638913869857788
    3. 'return' → logprob: -2.888913869857788
    4. ' return' → logprob: -6.138914108276367
    5. ')' → logprob: -8.263914108276367
    6. '
' → logprob: -9.513914108276367
    7. ' ' → logprob: -10.888914108276367
    8. '    
' → logprob: -11.013914108276367
    9. '```' → logprob: -11.138914108276367
    10. '()' → logprob: -11.263914108276367

Token 264: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06944477558135986
    2. ':' → logprob: -2.9444446563720703
    3. ':list' → logprob: -4.69444465637207
    4. ' list' → logprob: -6.56944465637207
    5. 'def' → logprob: -7.06944465637207
    6. '    ' → logprob: -7.44444465637207
    7. '=list' → logprob: -7.44444465637207
    8. '=' → logprob: -8.06944465637207
    9. '[]' → logprob: -8.19444465637207
    10. 'list' → logprob: -8.19444465637207

Token 265: '       ' (ID: 309)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.3138461112976074
    2. 'list' → logprob: -1.5638461112976074
    3. '   ' → logprob: -2.8138461112976074
    4. 'List' → logprob: -10.438846588134766
    5. ':list' → logprob: -11.313846588134766
    6. '       ' → logprob: -11.563846588134766
    7. '[list' → logprob: -12.938846588134766
    8. '    ' → logprob: -13.313846588134766
    9. 'string' → logprob: -13.438846588134766
    10. '=list' → logprob: -13.438846588134766

Token 266: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.00032259183353744447
    2. ' list' → logprob: -8.250322341918945
    3. 'sys' → logprob: -10.000322341918945
    4. 'List' → logprob: -11.125322341918945
    5. 'str' → logprob: -14.125322341918945
    6. '[list' → logprob: -15.000322341918945
    7. 'line' → logprob: -17.375322341918945
    8. '   ' → logprob: -17.625322341918945
    9. '[]' → logprob: -18.375322341918945
    10. 'def' → logprob: -18.375322341918945

Token 267: ' of' (ID: 328)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.016347065567970276
    2. ' of' → logprob: -4.5163469314575195
    3. '(str' → logprob: -5.5163469314575195
    4. 'of' → logprob: -7.2663469314575195
    5. '<|end|>' → logprob: -8.14134693145752
    6. '[' → logprob: -9.26634693145752
    7. '(' → logprob: -10.01634693145752
    8. '```' → logprob: -10.14134693145752
    9. '()' → logprob: -10.76634693145752
    10. ')' → logprob: -11.14134693145752

Token 268: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.004084808751940727
    2. ' str' → logprob: -5.504084587097168
    3. 'string' → logprob: -12.504084587097168
    4. '[str' → logprob: -12.879084587097168
    5. '(str' → logprob: -16.379085540771484
    6. 'strings' → logprob: -16.504085540771484
    7. 'stri' → logprob: -18.504085540771484
    8. '	str' → logprob: -19.004085540771484
    9. 's' → logprob: -19.004085540771484
    10. '=str' → logprob: -19.754085540771484

Token 269: ':' (ID: 25)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.1669069081544876
    2. '()' → logprob: -2.5419068336486816
    3. '):' → logprob: -2.7919068336486816
    4. '():
' → logprob: -4.416906833648682
    5. ':' → logprob: -7.791906833648682
    6. '   ' → logprob: -8.04190731048584
    7. ')' → logprob: -8.41690731048584
    8. '()):
' → logprob: -8.41690731048584
    9. '):
' → logprob: -8.79190731048584
    10. '"):' → logprob: -9.54190731048584

Token 270: ' List' (ID: 2655)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.2843547463417053
    2. ' sys' → logprob: -1.4093546867370605
    3. '   ' → logprob: -5.7843546867370605
    4. ' return' → logprob: -10.034355163574219
    5. 'return' → logprob: -10.409355163574219
    6. 'string' → logprob: -11.284355163574219
    7. '(sys' → logprob: -11.534355163574219
    8. ' list' → logprob: -12.159355163574219
    9. 'list' → logprob: -12.409355163574219
    10. '	sys' → logprob: -12.784355163574219

Token 271: ' of' (ID: 328)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.2090059518814087
    2. '(map' → logprob: -2.084005832672119
    3. ' of' → logprob: -3.584005832672119
    4. '()' → logprob: -4.584005832672119
    5. '   ' → logprob: -4.834005832672119
    6. '(' → logprob: -5.209005832672119
    7. 'of' → logprob: -6.084005832672119
    8. '=sys' → logprob: -6.209005832672119
    9. '(str' → logprob: -6.334005832672119
    10. '[str' → logprob: -6.334005832672119

Token 272: ' words' (ID: 6391)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.3953351676464081
    2. 'strings' → logprob: -1.1453351974487305
    3. ' sys' → logprob: -5.7703351974487305
    4. 'string' → logprob: -6.0203351974487305
    5. ' strings' → logprob: -6.0203351974487305
    6. 'str' → logprob: -8.27033519744873
    7. '(sys' → logprob: -8.64533519744873
    8. 'words' → logprob: -11.39533519744873
    9. 'input' → logprob: -12.27033519744873
    10. ' string' → logprob: -13.64533519744873

Token 273: ' as' (ID: 472)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.052190713584423065
    2. '   ' → logprob: -3.4271907806396484
    3. ' =' → logprob: -4.927190780639648
    4. '=' → logprob: -5.052190780639648
    5. '().' → logprob: -5.927190780639648
    6. ')' → logprob: -7.427190780639648
    7. '=sys' → logprob: -8.177190780639648
    8. 'from' → logprob: -8.302190780639648
    9. '(sys' → logprob: -8.427190780639648
    10. '())' → logprob: -8.927190780639648

Token 274: ' strings' (ID: 18279)
  Prédit: 'strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strings' → logprob: -0.2132701575756073
    2. ' strings' → logprob: -1.7132701873779297
    3. 'input' → logprob: -5.46327018737793
    4. ' input' → logprob: -5.58827018737793
    5. 'sys' → logprob: -6.08827018737793
    6. 'str' → logprob: -6.83827018737793
    7. ' sys' → logprob: -8.46327018737793
    8. 'string' → logprob: -9.21327018737793
    9. 'tokens' → logprob: -9.46327018737793
    10. '(strings' → logprob: -10.46327018737793

Token 275: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07338409125804901
    2. '   ' → logprob: -3.5733840465545654
    3. '().' → logprob: -3.8233840465545654
    4. '():' → logprob: -4.8233842849731445
    5. ')' → logprob: -5.3233842849731445
    6. '())' → logprob: -6.1983842849731445
    7. '():
' → logprob: -6.3233842849731445
    8. '.' → logprob: -6.5733842849731445
    9. '()
' → logprob: -7.0733842849731445
    10. 'def' → logprob: -7.8233842849731445

Token 276: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00421468960121274
    2. ')' → logprob: -6.129214763641357
    3. '<|end|>' → logprob: -7.629214763641357
    4. 'def' → logprob: -7.754214763641357
    5. '```' → logprob: -7.879214763641357
    6. '):
' → logprob: -8.1292142868042
    7. '()' → logprob: -9.1292142868042
    8. '():
' → logprob: -9.5042142868042
    9. '"""
' → logprob: -9.5042142868042
    10. '
' → logprob: -10.1292142868042

Token 277: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09605494886636734
    2. 'def' → logprob: -2.846055030822754
    3. ')' → logprob: -4.221055030822754
    4. '"""
' (adapté à ' """
') → logprob: -4.971055030822754
    5. '()' → logprob: -5.971055030822754
    6. '():
' → logprob: -6.096055030822754
    7. '```' → logprob: -6.221055030822754
    8. '):
' → logprob: -6.221055030822754
    9. '()
' → logprob: -6.596055030822754
    10. '"""' → logprob: -7.471055030822754

Token 278: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008741624653339386
    2. 'return' → logprob: -4.758741855621338
    3. ' return' → logprob: -9.63374137878418
    4. 'def' → logprob: -9.75874137878418
    5. '	return' → logprob: -12.88374137878418
    6. '```' → logprob: -13.88374137878418
    7. '
' → logprob: -15.38374137878418
    8. '   ' → logprob: -16.63374137878418
    9. '       ' → logprob: -18.00874137878418
    10. '    
' → logprob: -18.50874137878418

Token 279: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -8.061054359131958e-06
    2. ' return' → logprob: -12.500007629394531
    3. '   ' → logprob: -12.625007629394531
    4. 'def' → logprob: -13.875007629394531
    5. 'sys' → logprob: -18.00000762939453
    6. '	return' → logprob: -18.75000762939453
    7. '
' → logprob: -20.25000762939453
    8. '```' → logprob: -21.12500762939453
    9. 'Return' → logprob: -22.00000762939453
    10. '"""' → logprob: -22.25000762939453

Token 280: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -2.7729658540920354e-05
    2. ' sys' → logprob: -10.750027656555176
    3. 'list' → logprob: -12.000027656555176
    4. '(sys' → logprob: -18.000028610229492
    5. '	sys' → logprob: -20.625028610229492
    6. ' list' → logprob: -21.000028610229492
    7. '=sys' → logprob: -21.125028610229492
    8. '   ' → logprob: -21.125028610229492
    9. 'input' → logprob: -21.250028610229492
    10. 'string' → logprob: -21.750028610229492

Token 281: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00028374246903695166
    2. '.stdout' → logprob: -8.250284194946289
    3. '.' → logprob: -10.875284194946289
    4. '.argv' → logprob: -13.625284194946289
    5. '.readline' → logprob: -13.875284194946289
    6. '.std' → logprob: -14.125284194946289
    7. 'stdin' → logprob: -14.500284194946289
    8. '.stderr' → logprob: -16.25028419494629
    9. ' .' → logprob: -17.37528419494629
    10. '.st' → logprob: -17.50028419494629

Token 282: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -3.690834273584187e-05
    2. '.stdin' → logprob: -10.25003719329834
    3. '.stdout' → logprob: -13.75003719329834
    4. '.readlines' → logprob: -15.50003719329834
    5. '.' → logprob: -15.75003719329834
    6. '.read' → logprob: -17.625036239624023
    7. ' readline' → logprob: -18.125036239624023
    8. 'stdin' → logprob: -18.375036239624023
    9. ' .' → logprob: -19.250036239624023
    10. '.buffer' → logprob: -19.625036239624023

Token 283: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.1041145626222715e-05
    2. '.read' → logprob: -11.625011444091797
    3. '.readlines' → logprob: -13.375011444091797
    4. '.decode' → logprob: -14.875011444091797
    5. '.' → logprob: -16.125011444091797
    6. ' readline' → logprob: -17.125011444091797
    7. '.rstrip' → logprob: -17.625011444091797
    8. '.raw' → logprob: -18.000011444091797
    9. '.peek' → logprob: -20.250011444091797
    10. ' .' → logprob: -21.250011444091797

Token 284: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0002964935847558081
    2. '()' → logprob: -8.125296592712402
    3. '().__' → logprob: -16.000295639038086
    4. '(' → logprob: -16.125295639038086
    5. ' ().' → logprob: -16.375295639038086
    6. '()).' → logprob: -17.250295639038086
    7. '.rstrip' → logprob: -17.250295639038086
    8. '().'' → logprob: -17.750295639038086
    9. '()
' → logprob: -18.250295639038086
    10. '()[' → logprob: -18.500295639038086

Token 285: 'rstrip' (ID: 180429)
  Prédit: 'decode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decode' → logprob: -0.49909892678260803
    2. 'rstrip' → logprob: -0.9990988969802856
    3. 'strip' → logprob: -3.749099016189575
    4. 'split' → logprob: -6.749098777770996
    5. ' decode' → logprob: -15.249098777770996
    6. '.rstrip' → logprob: -15.749098777770996
    7. 'raw' → logprob: -16.499099731445312
    8. 'dec' → logprob: -16.874099731445312
    9. '.decode' → logprob: -17.374099731445312
    10. 'replace' → logprob: -17.374099731445312

Token 286: '().' (ID: 1454)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.205476313829422
    2. '(b' → logprob: -2.3304762840270996
    3. '().' → logprob: -2.9554762840270996
    4. '()' → logprob: -3.3304762840270996
    5. ' b' → logprob: -7.5804762840271
    6. '()\' → logprob: -9.705476760864258
    7. '(' → logprob: -10.705476760864258
    8. '(),' → logprob: -11.580476760864258
    9. '_b' → logprob: -11.580476760864258
    10. '.b' → logprob: -11.830476760864258

Token 287: 'decode' (ID: 44196)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.07889088988304138
    2. 'decode' → logprob: -2.578890800476074
    3. 'strip' → logprob: -14.703890800476074
    4. 'rstrip' → logprob: -15.203890800476074
    5. '(split' → logprob: -15.828890800476074
    6. ' split' → logprob: -16.45389175415039
    7. '.split' → logprob: -16.57889175415039
    8. '_split' → logprob: -17.32889175415039
    9. '.decode' → logprob: -17.57889175415039
    10. 'spl' → logprob: -17.95389175415039

Token 288: '('' (ID: 706)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.015700453892350197
    2. '('' → logprob: -4.765700340270996
    3. '().' → logprob: -5.015700340270996
    4. '(' → logprob: -8.640700340270996
    5. '("' → logprob: -9.765700340270996
    6. '()[' → logprob: -9.890700340270996
    7. '()='' → logprob: -10.515700340270996
    8. '(),' → logprob: -11.015700340270996
    9. '();' → logprob: -11.515700340270996
    10. ' ()' → logprob: -11.640700340270996

Token 289: 'utf' (ID: 13353)
  Prédit: 'utf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utf' → logprob: -0.00680454121902585
    2. 'ascii' → logprob: -5.006804466247559
    3. 'UTF' → logprob: -9.881804466247559
    4. ' utf' → logprob: -10.756804466247559
    5. '')' → logprob: -11.756804466247559
    6. '_utf' → logprob: -12.756804466247559
    7. 'Utf' → logprob: -12.881804466247559
    8. '()' → logprob: -14.381804466247559
    9. 'sys' → logprob: -14.631804466247559
    10. ' ascii' → logprob: -15.006804466247559

Token 290: '-' (ID: 12)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.12692894041538239
    2. '-' → logprob: -2.1269290447235107
    3. '_' → logprob: -14.25192928314209
    4. 'utf' → logprob: -15.75192928314209
    5. '')' → logprob: -16.626928329467773
    6. 'ascii' → logprob: -18.501928329467773
    7. '```' → logprob: -18.501928329467773
    8. '‑' → logprob: -18.876928329467773
    9. '۸' → logprob: -19.001928329467773
    10. ' ' → logprob: -19.126928329467773

Token 291: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -1.3856492842023727e-06
    2. 'utf' → logprob: -13.625000953674316
    3. 'ascii' → logprob: -16.000001907348633
    4. '-' → logprob: -18.750001907348633
    5. 'encoding' → logprob: -19.875001907348633
    6. '８' → logprob: -20.500001907348633
    7. '```' → logprob: -20.500001907348633
    8. '_' → logprob: -21.125001907348633
    9. '
' → logprob: -22.000001907348633
    10. '')' → logprob: -22.000001907348633

Token 292: '').' (ID: 3426)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3228850364685059
    2. ').' → logprob: -1.3228850364685059
    3. '').' → logprob: -1.8228850364685059
    4. '()).' → logprob: -1.8228850364685059
    5. '())' → logprob: -2.197885036468506
    6. '()' → logprob: -3.822885036468506
    7. '')' → logprob: -4.697885036468506
    8. '").' → logprob: -7.072885036468506
    9. '().' → logprob: -7.197885036468506
    10. ' )' → logprob: -9.072885513305664

Token 293: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.007582016754895449
    2. 'strip' → logprob: -5.257582187652588
    3. 'decode' → logprob: -6.257582187652588
    4. 'rstrip' → logprob: -7.757582187652588
    5. 'spl' → logprob: -13.50758171081543
    6. 'read' → logprob: -14.38258171081543
    7. ' split' → logprob: -16.38258171081543
    8. '_split' → logprob: -17.00758171081543
    9. '(split' → logprob: -17.00758171081543
    10. '.split' → logprob: -18.63258171081543

Token 294: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003051917883567512
    2. '(' → logprob: -8.12530517578125
    3. '()]' → logprob: -12.37530517578125
    4. '('' → logprob: -13.50030517578125
    5. '())' → logprob: -13.62530517578125
    6. '()[' → logprob: -14.25030517578125
    7. ' ()' → logprob: -14.50030517578125
    8. '()
' → logprob: -14.62530517578125
    9. '()`' → logprob: -16.00030517578125
    10. '()\' → logprob: -16.75030517578125

Token 295: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000122608442325145
    2. '#' → logprob: -9.250123023986816
    3. '
' → logprob: -11.500123023986816
    4. '\' → logprob: -11.875123023986816
    5. '<|end|>' → logprob: -12.625123023986816
    6. '```' → logprob: -13.875123023986816
    7. 'newline' → logprob: -14.000123023986816
    8. '    
' → logprob: -14.375123023986816
    9. '\n' → logprob: -14.375123023986816
    10. ' def' → logprob: -14.375123023986816

Token 296: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.024944420903921127
    2. 's' → logprob: -4.274944305419922
    3. 'L' → logprob: -5.274944305419922
    4. 'input' → logprob: -5.899944305419922
    5. 'I' → logprob: -7.274944305419922
    6. 'LI' → logprob: -7.524944305419922
    7. 'SS' → logprob: -7.774944305419922
    8. ' S' → logprob: -8.274944305419922
    9. 'LS' → logprob: -8.524944305419922
    10. 'SI' → logprob: -9.399944305419922

Token 297: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.006860293447971344
    2. '():
' → logprob: -5.006860256195068
    3. '()' → logprob: -9.131860733032227
    4. ' ():' → logprob: -10.256860733032227
    5. '():
' → logprob: -14.381860733032227
    6. '():

' → logprob: -14.506860733032227
    7. ' ()' → logprob: -15.131860733032227
    8. '()>' → logprob: -16.256860733032227
    9. '().' → logprob: -16.506860733032227
    10. '();' → logprob: -17.256860733032227

Token 298: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00033879990223795176
    2. '():
' → logprob: -8.000338554382324
    3. '()' → logprob: -13.125338554382324
    4. ' ():' → logprob: -14.000338554382324
    5. '():
' → logprob: -14.625338554382324
    6. '():

' → logprob: -16.25033950805664
    7. '):' → logprob: -19.50033950805664
    8. '().' → logprob: -20.12533950805664
    9. ':' → logprob: -20.37533950805664
    10. 'def' → logprob: -20.87533950805664

Token 299: ' """
' (ID: 7037)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.002314880257472396
    2. 'return' → logprob: -6.377315044403076
    3. '(sys' → logprob: -8.002314567565918
    4. '()' → logprob: -8.877314567565918
    5. ' sys' → logprob: -9.502314567565918
    6. '=sys' → logprob: -10.002314567565918
    7. 'def' → logprob: -11.877314567565918
    8. '   ' → logprob: -12.752314567565918
    9. ' return' → logprob: -13.002314567565918
    10. '```' → logprob: -14.002314567565918

Token 300: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7104874849319458
    2. '"""
' → logprob: -0.7104874849319458
    3. '"""' → logprob: -4.335487365722656
    4. 'sys' → logprob: -5.710487365722656
    5. '"' → logprob: -8.210487365722656
    6. 'def' → logprob: -8.335487365722656
    7. '""' → logprob: -9.335487365722656
    8. ' """
' → logprob: -9.710487365722656
    9. ''''
' → logprob: -10.585487365722656
    10. ' sys' → logprob: -10.835487365722656

Token 301: ' Reads' (ID: 88839)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7735942602157593
    2. 'sys' → logprob: -0.8985942602157593
    3. 'def' → logprob: -2.148594379425049
    4. '"""
' → logprob: -5.023594379425049
    5. '()' → logprob: -5.148594379425049
    6. '```' → logprob: -7.148594379425049
    7. '()
' → logprob: -7.523594379425049
    8. '"""' → logprob: -7.648594379425049
    9. '=sys' → logprob: -8.64859390258789
    10. '   ' → logprob: -8.77359390258789

Token 302: ' a' (ID: 261)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.128757506608963
    2. 'a' → logprob: -2.3787574768066406
    3. ' a' → logprob: -3.6287574768066406
    4. 'line' → logprob: -7.003757476806641
    5. '()
' → logprob: -8.62875747680664
    6. '().' → logprob: -8.62875747680664
    7. '.readline' → logprob: -10.00375747680664
    8. '()<' → logprob: -10.25375747680664
    9. 'A' → logprob: -10.50375747680664
    10. 'sys' → logprob: -10.75375747680664

Token 303: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.06203848868608475
    2. ' line' → logprob: -2.8120384216308594
    3. 'sys' → logprob: -10.31203842163086
    4. '()' → logprob: -11.18703842163086
    5. ' sys' → logprob: -11.31203842163086
    6. '_line' → logprob: -11.81203842163086
    7. 'string' → logprob: -13.43703842163086
    8. '=sys' → logprob: -14.31203842163086
    9. '(sys' → logprob: -14.56203842163086
    10. '1' → logprob: -14.93703842163086

Token 304: ' from' (ID: 591)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04673824459314346
    2. '().' → logprob: -3.5467381477355957
    3. 'from' → logprob: -4.296738147735596
    4. '   ' → logprob: -7.046738147735596
    5. ' =' → logprob: -7.171738147735596
    6. '=' → logprob: -7.671738147735596
    7. '=sys' → logprob: -7.796738147735596
    8. '()
' → logprob: -8.171738624572754
    9. ' from' → logprob: -9.046738624572754
    10. 'def' → logprob: -9.421738624572754

Token 305: ' buffered' (ID: 76502)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.04943198710680008
    2. ' sys' → logprob: -3.2994320392608643
    3. 'input' → logprob: -4.549431800842285
    4. ' input' → logprob: -7.924431800842285
    5. 'standard' → logprob: -8.424431800842285
    6. 'stdin' → logprob: -9.049431800842285
    7. ' standard' → logprob: -10.299431800842285
    8. '(sys' → logprob: -11.549431800842285
    9. '=sys' → logprob: -11.924431800842285
    10. 'string' → logprob: -13.299431800842285

Token 306: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.30253225564956665
    2. 'sys' → logprob: -1.6775321960449219
    3. ' sys' → logprob: -3.427532196044922
    4. '().' → logprob: -3.427532196044922
    5. '(sys' → logprob: -5.802532196044922
    6. '()
' → logprob: -6.302532196044922
    7. '=sys' → logprob: -6.302532196044922
    8. ' ()' → logprob: -6.552532196044922
    9. 'stdin' → logprob: -8.177532196044922
    10. ' standard' → logprob: -8.552532196044922

Token 307: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10930945724248886
    2. ' input' → logprob: -2.734309434890747
    3. '_input' → logprob: -3.359309434890747
    4. '(input' → logprob: -6.359309673309326
    5. '()' → logprob: -6.484309673309326
    6. 'import' → logprob: -8.234309196472168
    7. '=input' → logprob: -9.734309196472168
    8. '```' → logprob: -9.859309196472168
    9. '(stdin' → logprob: -9.984309196472168
    10. '_' → logprob: -10.234309196472168

Token 308: ' and' (ID: 326)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.02878797985613346
    2. '()' → logprob: -3.6537880897521973
    3. '():' → logprob: -6.028788089752197
    4. '():
' → logprob: -9.778787612915039
    5. 'def' → logprob: -12.028787612915039
    6. ' ()' → logprob: -12.278787612915039
    7. ' ().' → logprob: -13.528787612915039
    8. '().__' → logprob: -13.653787612915039
    9. '   ' → logprob: -13.778787612915039
    10. ' =' → logprob: -14.403787612915039

Token 309: ' returns' (ID: 7377)
  Prédit: 'rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.553147554397583
    2. ' returns' → logprob: -1.803147554397583
    3. 'return' → logprob: -2.053147554397583
    4. 'returns' → logprob: -2.178147554397583
    5. 'eturn' → logprob: -4.553147315979004
    6. '.rstrip' → logprob: -6.053147315979004
    7. ' return' → logprob: -6.053147315979004
    8. 'def' → logprob: -6.053147315979004
    9. 'decode' → logprob: -7.803147315979004
    10. '
' → logprob: -9.178147315979004

Token 310: ' it' (ID: 480)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.7115576267242432
    2. ' sys' → logprob: -1.3365576267242432
    3. '(' → logprob: -1.7115576267242432
    4. '()' → logprob: -3.711557626724243
    5. ' ' → logprob: -3.961557626724243
    6. '(sys' → logprob: -4.086557388305664
    7. '  ' → logprob: -6.961557388305664
    8. '   ' → logprob: -7.086557388305664
    9. '=sys' → logprob: -7.086557388305664
    10. ' (' → logprob: -7.086557388305664

Token 311: ' as' (ID: 472)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6628183722496033
    2. '().' → logprob: -1.162818431854248
    3. ' as' → logprob: -1.787818431854248
    4. '.' → logprob: -6.537818431854248
    5. 'as' → logprob: -6.537818431854248
    6. '.strip' → logprob: -7.412818431854248
    7. '.rstrip' → logprob: -7.787818431854248
    8. '   ' → logprob: -8.16281795501709
    9. '.readline' → logprob: -8.78781795501709
    10. '=sys' → logprob: -10.03781795501709

Token 312: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.040833499282598495
    2. 'a' → logprob: -3.7908334732055664
    3. 'sys' → logprob: -4.665833473205566
    4. 'str' → logprob: -5.915833473205566
    5. 's' → logprob: -6.040833473205566
    6. ' sys' → logprob: -6.790833473205566
    7. 'input' → logprob: -7.165833473205566
    8. ' input' → logprob: -8.165833473205566
    9. 'string' → logprob: -8.165833473205566
    10. 'rstrip' → logprob: -8.790833473205566

Token 313: ' string' (ID: 1621)
  Prédit: 'string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.014343547634780407
    2. 'str' → logprob: -4.264343738555908
    3. ' string' → logprob: -8.76434326171875
    4. 'strip' → logprob: -11.01434326171875
    5. 'decoded' → logprob: -12.13934326171875
    6. 'raw' → logprob: -13.76434326171875
    7. 'rstrip' → logprob: -14.26434326171875
    8. 's' → logprob: -16.38934326171875
    9. ' stripped' → logprob: -16.63934326171875
    10. 'list' → logprob: -16.76434326171875

Token 314: '.

' (ID: 364)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.7945475578308105
    2. '()' → logprob: -1.2945475578308105
    3. '():' → logprob: -1.2945475578308105
    4. '():
' → logprob: -9.044548034667969
    5. '.' → logprob: -11.419548034667969
    6. '()
' → logprob: -11.544548034667969
    7. ' ()' → logprob: -11.919548034667969
    8. ':' → logprob: -12.294548034667969
    9. '   ' → logprob: -12.419548034667969
    10. '()`' → logprob: -12.794548034667969

Token 315: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1661168485879898
    2. 'def' → logprob: -2.791116952896118
    3. '():' → logprob: -3.041116952896118
    4. '()' → logprob: -3.166116952896118
    5. '():
' → logprob: -7.166116714477539
    6. '()
' → logprob: -7.791116714477539
    7. ' def' → logprob: -8.541116714477539
    8. ':' → logprob: -8.791116714477539
    9. 'return' → logprob: -9.916116714477539
    10. '    
' → logprob: -10.291116714477539

Token 316: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021062735468149185
    2. 'def' → logprob: -3.8960628509521484
    3. ' def' → logprob: -8.271062850952148
    4. '()' → logprob: -9.771062850952148
    5. ' return' → logprob: -9.896062850952148
    6. 'return' → logprob: -10.021062850952148
    7. '    ' → logprob: -10.521062850952148
    8. ' ' → logprob: -10.771062850952148
    9. '    
' → logprob: -10.896062850952148
    10. '  ' → logprob: -11.146062850952148

Token 317: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7690513730049133
    2. '()' → logprob: -1.5190513134002686
    3. '():' → logprob: -1.6440513134002686
    4. ':' → logprob: -3.1440513134002686
    5. ' =' → logprob: -3.7690513134002686
    6. '<|end|>' → logprob: -4.144051551818848
    7. '  ' → logprob: -4.644051551818848
    8. '().' → logprob: -4.644051551818848
    9. '    ' → logprob: -5.394051551818848
    10. '.' → logprob: -6.019051551818848

Token 318: '       ' (ID: 309)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.32806333899497986
    2. 'sys' → logprob: -1.7030633687973022
    3. '   ' → logprob: -2.3280632495880127
    4. '(sys' → logprob: -10.453063011169434
    5. '	sys' → logprob: -11.578063011169434
    6. '    ' → logprob: -11.578063011169434
    7. ' ' → logprob: -11.703063011169434
    8. '=sys' → logprob: -12.203063011169434
    9. '```' → logprob: -12.828063011169434
    10. '  ' → logprob: -13.203063011169434

Token 319: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.13042597472667694
    2. 'str' (adapté à ' str') → logprob: -2.1304259300231934
    3. ' sys' → logprob: -5.755425930023193
    4. 'sys' → logprob: -8.130426406860352
    5. '   ' → logprob: -10.755426406860352
    6. 'string' → logprob: -11.630426406860352
    7. ' string' → logprob: -13.755426406860352
    8. ' ' → logprob: -15.005426406860352
    9. ' ' → logprob: -17.25542640686035
    10. 's' → logprob: -17.25542640686035

Token 320: ':' (ID: 25)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.022936662659049034
    2. '()' → logprob: -4.772936820983887
    3. '():
' → logprob: -4.897936820983887
    4. '().' → logprob: -5.272936820983887
    5. ':' → logprob: -6.522936820983887
    6. '):' → logprob: -9.397936820983887
    7. '   ' → logprob: -10.022936820983887
    8. ' =' → logprob: -12.022936820983887
    9. ':
' → logprob: -12.772936820983887
    10. '();' → logprob: -12.772936820983887

Token 321: ' String' (ID: 1189)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.25193002820014954
    2. 'sys' → logprob: -1.5019299983978271
    3. '(sys' → logprob: -14.626930236816406
    4. '   ' → logprob: -15.501930236816406
    5. '=sys' → logprob: -16.251930236816406
    6. '	sys' → logprob: -17.001930236816406
    7. ' ' → logprob: -17.126930236816406
    8. ' ' → logprob: -17.251930236816406
    9. 's' → logprob: -17.251930236816406
    10. 'str' → logprob: -18.001930236816406

Token 322: ' from' (ID: 591)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02430272288620472
    2. '<|end|>' → logprob: -3.8993027210235596
    3. '().' → logprob: -6.149302959442139
    4. '(' → logprob: -7.649302959442139
    5. '()\' → logprob: -8.02430248260498
    6. '<|end|>' → logprob: -8.77430248260498
    7. '()
' → logprob: -8.77430248260498
    8. '("")' → logprob: -9.77430248260498
    9. '.readline' → logprob: -9.89930248260498
    10. ')' → logprob: -10.27430248260498

Token 323: ' input' (ID: 3422)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.08168905973434448
    2. ' sys' → logprob: -2.5816891193389893
    3. 'input' → logprob: -6.08168888092041
    4. ' input' → logprob: -7.70668888092041
    5. 'stdin' → logprob: -9.83168888092041
    6. '(sys' → logprob: -12.45668888092041
    7. 'standard' → logprob: -13.45668888092041
    8. '=sys' → logprob: -13.83168888092041
    9. ' standard' → logprob: -14.70668888092041
    10. ' stdin' → logprob: -15.33168888092041

Token 324: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18840773403644562
    2. '().' → logprob: -1.8134077787399292
    3. '()
' → logprob: -4.813407897949219
    4. '   ' → logprob: -7.938407897949219
    5. ')' → logprob: -9.688407897949219
    6. '.' → logprob: -11.063407897949219
    7. '())' → logprob: -11.313407897949219
    8. '():
' → logprob: -11.438407897949219
    9. '()`' → logprob: -11.938407897949219
    10. 'def' → logprob: -12.063407897949219

Token 325: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002117785159498453
    2. '()' → logprob: -6.37711763381958
    3. ')' → logprob: -8.752118110656738
    4. '():' → logprob: -9.502118110656738
    5. 'def' → logprob: -9.752118110656738
    6. '```' → logprob: -9.877118110656738
    7. '():
' → logprob: -10.377118110656738
    8. '    
' → logprob: -11.752118110656738
    9. '):' → logprob: -12.127118110656738
    10. '):
' → logprob: -12.252118110656738

Token 326: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009156247251667082
    2. ' return' → logprob: -7.12591552734375
    3. 'return' → logprob: -9.12591552734375
    4. '	return' → logprob: -14.12591552734375
    5. 'def' → logprob: -14.25091552734375
    6. '    ' → logprob: -15.00091552734375
    7. '       ' → logprob: -15.62591552734375
    8. '  ' → logprob: -15.87591552734375
    9. '```' → logprob: -16.00091552734375
    10. ' ' → logprob: -16.12591552734375

Token 327: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.012956798076629639
    2. ' return' → logprob: -4.512956619262695
    3. '   ' → logprob: -6.262956619262695
    4. 'sys' → logprob: -13.762956619262695
    5. 'def' → logprob: -15.262956619262695
    6. '```' → logprob: -15.512956619262695
    7. '	return' → logprob: -16.262956619262695
    8. 's' → logprob: -16.887956619262695
    9. 'import' → logprob: -17.387956619262695
    10. 'raw' → logprob: -18.387956619262695

Token 328: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0003476209531072527
    2. 'sys' → logprob: -8.250348091125488
    3. ' return' → logprob: -9.375348091125488
    4. 's' → logprob: -13.500348091125488
    5. '   ' → logprob: -16.500347137451172
    6. ' sys' → logprob: -18.375347137451172
    7. '	return' → logprob: -18.750347137451172
    8. 'raw' → logprob: -19.000347137451172
    9. 'import' → logprob: -19.000347137451172
    10. '```' → logprob: -19.500347137451172

Token 329: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.20146119594573975
    2. ' sys' → logprob: -1.7014611959457397
    3. 'input' → logprob: -10.326460838317871
    4. '(sys' → logprob: -11.826460838317871
    5. ' input' → logprob: -11.951460838317871
    6. '	sys' → logprob: -14.451460838317871
    7. '=sys' → logprob: -15.201460838317871
    8. 's' → logprob: -15.326460838317871
    9. '.sys' → logprob: -15.701460838317871
    10. 'Sys' → logprob: -16.951461791992188

Token 330: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.8908587662735954e-05
    2. '.stdout' → logprob: -11.125019073486328
    3. '.readline' → logprob: -13.250019073486328
    4. 'stdin' → logprob: -13.250019073486328
    5. '.sys' → logprob: -15.750019073486328
    6. '.argv' → logprob: -15.875019073486328
    7. '=sys' → logprob: -16.000019073486328
    8. '.std' → logprob: -16.125019073486328
    9. '.' → logprob: -16.750019073486328
    10. '(stdin' → logprob: -16.875019073486328

Token 331: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.023337602615356445
    2. '.buffer' → logprob: -3.7733376026153564
    3. '.stdin' → logprob: -9.523337364196777
    4. '.' → logprob: -11.273337364196777
    5. 'buffer' → logprob: -12.273337364196777
    6. '.read' → logprob: -14.023337364196777
    7. '.stdout' → logprob: -14.273337364196777
    8. '.line' → logprob: -16.648338317871094
    9. ' buffer' → logprob: -17.023338317871094
    10. '_buffer' → logprob: -17.773338317871094

Token 332: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -3.128163257315464e-07
    2. '.read' → logprob: -15.875
    3. ' readline' → logprob: -16.125
    4. '.readlines' → logprob: -18.375
    5. 'read' → logprob: -19.125
    6. '.' → logprob: -20.125
    7. '.rstrip' → logprob: -22.375
    8. 'getline' → logprob: -23.75
    9. '```' → logprob: -24.375
    10. 'rstrip' → logprob: -24.375

Token 333: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.014175502583384514
    2. '()' → logprob: -4.2641754150390625
    3. '.readline' → logprob: -12.389175415039062
    4. '().'' → logprob: -13.389175415039062
    5. '()[' → logprob: -13.514175415039062
    6. '().__' → logprob: -13.639175415039062
    7. '())' → logprob: -14.639175415039062
    8. '(' → logprob: -14.889175415039062
    9. '.' → logprob: -15.139175415039062
    10. '<|end|>' → logprob: -15.139175415039062

Token 334: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.029886789619922638
    2. 'decode' → logprob: -3.5298867225646973
    3. 'read' → logprob: -9.029887199401855
    4. 'strip' → logprob: -11.029887199401855
    5. 'raw' → logprob: -16.02988624572754
    6. '.rstrip' → logprob: -16.27988624572754
    7. 'readonly' → logprob: -17.65488624572754
    8. 'rst' → logprob: -18.65488624572754
    9. 'rl' → logprob: -18.90488624572754
    10. 'rd' → logprob: -19.27988624572754

Token 335: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.016387764364480972
    2. '(b' → logprob: -4.516387939453125
    3. 'b' → logprob: -6.016387939453125
    4. '().' → logprob: -6.516387939453125
    5. '()\' → logprob: -7.016387939453125
    6. '(' → logprob: -8.016387939453125
    7. '('\' → logprob: -9.266387939453125
    8. '(),' → logprob: -10.516387939453125
    9. '();' → logprob: -11.391387939453125
    10. ' ()' → logprob: -11.766387939453125

Token 336: 'decode' (ID: 44196)
  Prédit: 'decode'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decode' → logprob: -7.896309739408025e-07
    2. ' decode' → logprob: -14.375000953674316
    3. 'rstrip' → logprob: -16.5
    4. '.decode' → logprob: -16.625
    5. '```' → logprob: -19.75
    6. 'dec' → logprob: -20.125
    7. 'strip' → logprob: -20.5
    8. 'raw' → logprob: -21.25
    9. 'de' → logprob: -22.0
    10. '_decode' → logprob: -22.5

Token 337: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0007177923689596355
    2. '(' → logprob: -7.625717639923096
    3. '()' → logprob: -8.625718116760254
    4. '('_' → logprob: -10.625718116760254
    5. '_' → logprob: -11.875718116760254
    6. ''' → logprob: -11.875718116760254
    7. ''s' → logprob: -13.000718116760254
    8. '("' → logprob: -13.000718116760254
    9. '()='' → logprob: -13.625718116760254
    10. '<|end|>' → logprob: -13.750718116760254

Token 338: 'utf' (ID: 13353)
  Prédit: 'utf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utf' → logprob: -0.00030852947384119034
    2. ''' → logprob: -8.125308990478516
    3. ' utf' → logprob: -11.625308990478516
    4. 'ascii' → logprob: -13.750308990478516
    5. ''u' → logprob: -13.875308990478516
    6. 'UTF' → logprob: -14.750308990478516
    7. 'uft' → logprob: -15.125308990478516
    8. '=utf' → logprob: -15.250308990478516
    9. '_utf' → logprob: -15.750308990478516
    10. '')' → logprob: -16.250308990478516

Token 339: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.7697225252486533e-06
    2. '8' → logprob: -12.500003814697266
    3. '')' → logprob: -19.125003814697266
    4. '=utf' → logprob: -20.500003814697266
    5. '_' → logprob: -21.375003814697266
    6. ''-' → logprob: -21.625003814697266
    7. 'utf' → logprob: -21.750003814697266
    8. '-_' → logprob: -22.125003814697266
    9. ''' → logprob: -22.875003814697266
    10. '=' → logprob: -22.875003814697266

Token 340: '8' (ID: 23)
  Prédit: 'utf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utf' → logprob: -0.0040801819413900375
    2. '8' → logprob: -5.504080295562744
    3. ' utf' → logprob: -14.129079818725586
    4. 'ascii' → logprob: -14.879079818725586
    5. 'uft' → logprob: -15.254079818725586
    6. '')' → logprob: -15.754079818725586
    7. '```' → logprob: -17.004079818725586
    8. '128' → logprob: -17.004079818725586
    9. 'uf' → logprob: -17.254079818725586
    10. 'ut' → logprob: -17.379079818725586

Token 341: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.6764834523200989
    2. '()' → logprob: -0.9264834523200989
    3. ')' → logprob: -2.551483392715454
    4. '())' → logprob: -4.051483631134033
    5. '")' → logprob: -8.676483154296875
    6. ' )' → logprob: -9.551483154296875
    7. '`)' → logprob: -11.176483154296875
    8. ''' → logprob: -11.301483154296875
    9. ' ()' → logprob: -12.301483154296875
    10. '')
' → logprob: -12.551483154296875

Token 342: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.038941264152526855
    2. '
' → logprob: -3.4139413833618164
    3. '#' → logprob: -5.663941383361816
    4. '

' → logprob: -7.038941383361816
    5. '\n' → logprob: -7.913941383361816
    6. '\' → logprob: -7.913941383361816
    7. '    
' → logprob: -10.413941383361816
    8. '  
' → logprob: -10.538941383361816
    9. '<|end|>' → logprob: -10.663941383361816
    10. '' → logprob: -11.038941383361816

Token 343: ' IR' (ID: 23712)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.121576189994812
    2. 'main' → logprob: -1.496576189994812
    3. 'T' → logprob: -2.3715763092041016
    4. 'input' → logprob: -2.4965763092041016
    5. 'D' → logprob: -3.1215763092041016
    6. 'YES' → logprob: -3.2465763092041016
    7. 'E' → logprob: -3.6215763092041016
    8. 'WS' → logprob: -4.121576309204102
    9. 'M' → logprob: -4.246576309204102
    10. 'LI' → logprob: -4.371576309204102

Token 344: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.026765234768390656
    2. '():
' → logprob: -4.0267653465271
    3. '()' → logprob: -5.1517653465271
    4. 'ange' → logprob: -6.2767653465271
    5. 'ANGE' → logprob: -7.1517653465271
    6. '():
' → logprob: -10.276764869689941
    7. ' ():' → logprob: -10.776764869689941
    8. 'E' → logprob: -11.776764869689941
    9. '():

' → logprob: -12.151764869689941
    10. 'ead' → logprob: -12.276764869689941

Token 345: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01111903041601181
    2. '):
' → logprob: -4.5111188888549805
    3. ')' → logprob: -9.76111888885498
    4. ' ):' → logprob: -11.51111888885498
    5. '):
' → logprob: -13.38611888885498
    6. ':' → logprob: -13.63611888885498
    7. 'n' → logprob: -15.76111888885498
    8. ',' → logprob: -15.88611888885498
    9. '):

' → logprob: -16.136119842529297
    10. '(n' → logprob: -16.261119842529297

Token 346: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.15913106501102448
    2. '(' → logprob: -2.6591310501098633
    3. 'def' → logprob: -3.7841310501098633
    4. ':' → logprob: -3.7841310501098633
    5. '():' → logprob: -5.034131050109863
    6. '(range' → logprob: -5.034131050109863
    7. '(size' → logprob: -5.784131050109863
    8. '):' → logprob: -5.784131050109863
    9. 'range' → logprob: -6.284131050109863
    10. 'list' → logprob: -6.534131050109863

Token 347: ' """
' (ID: 7037)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16232693195343018
    2. 'return' → logprob: -2.0373268127441406
    3. 'def' → logprob: -4.537326812744141
    4. '[int' → logprob: -5.787326812744141
    5. '[
' → logprob: -5.912326812744141
    6. '   ' → logprob: -7.412326812744141
    7. '[]' → logprob: -7.537326812744141
    8. '[r' → logprob: -7.912326812744141
    9. ' return' → logprob: -8.03732681274414
    10. '[i' → logprob: -8.16232681274414

Token 348: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.45036906003952026
    2. ' range' → logprob: -1.450369119644165
    3. ' def' → logprob: -3.075369119644165
    4. ' return' → logprob: -3.575369119644165
    5. 'range' → logprob: -3.575369119644165
    6. '   ' → logprob: -5.200368881225586
    7. 'return' → logprob: -5.575368881225586
    8. ':
' → logprob: -5.700368881225586
    9. '"""
' → logprob: -5.825368881225586
    10. '[]' → logprob: -6.450368881225586

Token 349: ' Reads' (ID: 88839)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3911969065666199
    2. 'def' → logprob: -1.7661969661712646
    3. 'return' → logprob: -2.5161969661712646
    4. ' def' → logprob: -3.3911969661712646
    5. '[' → logprob: -4.5161967277526855
    6. ' [' → logprob: -4.6411967277526855
    7. '[
' → logprob: -5.5161967277526855
    8. ' for' → logprob: -5.6411967277526855
    9. '[]' → logprob: -6.3911967277526855
    10. ' range' → logprob: -6.5161967277526855

Token 350: ' '' (ID: 461)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5033300518989563
    2. 'ange' → logprob: -2.0033299922943115
    3. 'n' → logprob: -2.3783299922943115
    4. '[n' → logprob: -2.5033299922943115
    5. 'range' → logprob: -3.2533299922943115
    6. ' range' → logprob: -3.5033299922943115
    7. ' n' → logprob: -4.753330230712891
    8. 'anges' → logprob: -5.503330230712891
    9. 'anged' → logprob: -6.253330230712891
    10. 'ng' → logprob: -7.503330230712891

Token 351: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0007212492637336254
    2. ' n' → logprob: -7.250721454620361
    3. '(n' → logprob: -11.625720977783203
    4. ')n' → logprob: -13.625720977783203
    5. '[n' → logprob: -14.250720977783203
    6. '	n' → logprob: -15.125720977783203
    7. 'int' → logprob: -15.625720977783203
    8. '_n' → logprob: -16.500720977783203
    9. '
' → logprob: -16.875720977783203
    10. ',n' → logprob: -17.250720977783203

Token 352: ''' (ID: 6)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.507189154624939
    2. ' lines' → logprob: -1.257189154624939
    3. 'lines' → logprob: -2.6321892738342285
    4. '_lines' → logprob: -4.1321892738342285
    5. 'times' → logprob: -4.6321892738342285
    6. ' times' → logprob: -5.2571892738342285
    7. ' ()' → logprob: -6.5071892738342285
    8. '(n' → logprob: -6.5071892738342285
    9. '
' → logprob: -7.2571892738342285
    10. ' (' → logprob: -7.3821892738342285

Token 353: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.3368890583515167
    2. 'lines' → logprob: -1.4618890285491943
    3. '()' → logprob: -3.3368890285491943
    4. 'times' → logprob: -4.586889266967773
    5. ' times' → logprob: -5.836889266967773
    6. '
' → logprob: -6.211889266967773
    7. '_lines' → logprob: -7.086889266967773
    8. 'int' → logprob: -7.211889266967773
    9. '():
' → logprob: -8.086889266967773
    10. '(
' → logprob: -8.586889266967773

Token 354: ' from' (ID: 591)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.02481697127223015
    2. 'def' → logprob: -3.7748169898986816
    3. '(' → logprob: -7.149816989898682
    4. '(
' → logprob: -8.149816513061523
    5. '   ' → logprob: -9.399816513061523
    6. 'for' → logprob: -9.524816513061523
    7. 'from' → logprob: -9.899816513061523
    8. 'range' → logprob: -10.274816513061523
    9. '(range' → logprob: -10.399816513061523
    10. ':' → logprob: -10.649816513061523

Token 355: ' standard' (ID: 7024)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.01821093261241913
    2. ' sys' → logprob: -4.0182108879089355
    3. '(sys' → logprob: -11.018211364746094
    4. '   ' → logprob: -11.143211364746094
    5. '=sys' → logprob: -11.393211364746094
    6. 'range' → logprob: -11.643211364746094
    7. '
' → logprob: -12.893211364746094
    8. 'standard' → logprob: -13.018211364746094
    9. 'stdin' → logprob: -13.143211364746094
    10. '_sys' → logprob: -14.393211364746094

Token 356: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4202280342578888
    2. 'input' → logprob: -1.2952280044555664
    3. 'stdin' → logprob: -3.5452280044555664
    4. '_input' → logprob: -4.295228004455566
    5. '(stdin' → logprob: -5.045228004455566
    6. '=sys' → logprob: -5.170228004455566
    7. ' stdin' → logprob: -5.670228004455566
    8. 'put' → logprob: -5.670228004455566
    9. ' range' → logprob: -6.420228004455566
    10. '.stdin' → logprob: -6.545228004455566

Token 357: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.058180201798677444
    2. '(' → logprob: -3.683180093765259
    3. 'def' → logprob: -3.683180093765259
    4. '   ' → logprob: -6.683180332183838
    5. '(
' → logprob: -6.808180332183838
    6. ':' → logprob: -7.308180332183838
    7. ' (' → logprob: -7.558180332183838
    8. '(def' → logprob: -7.558180332183838
    9. '(range' → logprob: -7.683180332183838
    10. '(sys' → logprob: -7.808180332183838

Token 358: ' returning' (ID: 22968)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.830652117729187
    2. 'return' → logprob: -1.080652117729187
    3. '   ' → logprob: -2.2056522369384766
    4. 'def' → logprob: -2.2056522369384766
    5. ' def' → logprob: -5.705652236938477
    6. ' returning' → logprob: -7.455652236938477
    7. ' and' → logprob: -8.330652236938477
    8. '    ' → logprob: -9.205652236938477
    9. '
' → logprob: -9.330652236938477
    10. ' each' → logprob: -9.830652236938477

Token 359: ' a' (ID: 261)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.016217246651649475
    2. '[' → logprob: -4.266217231750488
    3. '[int' → logprob: -6.266217231750488
    4. ' [' → logprob: -10.016217231750488
    5. '[line' → logprob: -11.016217231750488
    6. '[List' → logprob: -11.016217231750488
    7. 'list' → logprob: -11.016217231750488
    8. '[i' → logprob: -11.391217231750488
    9. '[n' → logprob: -11.766217231750488
    10. '[item' → logprob: -12.016217231750488

Token 360: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5862112641334534
    2. ' [' → logprob: -1.8362112045288086
    3. '[
' → logprob: -1.8362112045288086
    4. '[list' → logprob: -2.4612112045288086
    5. '[n' → logprob: -3.8362112045288086
    6. ' [
' → logprob: -4.711211204528809
    7. ' list' → logprob: -5.836211204528809
    8. '[int' → logprob: -6.336211204528809
    9. '[user' → logprob: -7.836211204528809
    10. '[line' → logprob: -7.961211204528809

Token 361: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.3858985900878906
    2. 'of' → logprob: -1.8858985900878906
    3. 'def' → logprob: -3.2608985900878906
    4. '(range' → logprob: -3.3858985900878906
    5. '   ' → logprob: -3.6358985900878906
    6. '[' → logprob: -3.8858985900878906
    7. '[int' → logprob: -4.010898590087891
    8. '(' → logprob: -5.010898590087891
    9. '[
' → logprob: -5.010898590087891
    10. '_of' → logprob: -5.385898590087891

Token 362: ' integers' (ID: 54912)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06369035691022873
    2. '[int' → logprob: -3.438690423965454
    3. 'lists' → logprob: -4.688690185546875
    4. 'ints' → logprob: -4.813690185546875
    5. ' lists' → logprob: -4.938690185546875
    6. 'list' → logprob: -5.813690185546875
    7. ' int' → logprob: -7.313690185546875
    8. 'inte' → logprob: -7.438690185546875
    9. ' ints' → logprob: -8.313690185546875
    10. 'n' → logprob: -8.438690185546875

Token 363: '.

' (ID: 364)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2408672422170639
    2. '[' → logprob: -2.4908671379089355
    3. '[n' → logprob: -2.7408671379089355
    4. '[]' → logprob: -3.7408671379089355
    5. '(n' → logprob: -4.1158671379089355
    6. '[
' → logprob: -4.8658671379089355
    7. '(' → logprob: -5.4908671379089355
    8. '_list' → logprob: -5.6158671379089355
    9. '[(' → logprob: -6.2408671379089355
    10. 'def' → logprob: -6.2408671379089355

Token 364: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.02401098981499672
    2. 'def' → logprob: -4.149011135101318
    3. '   ' → logprob: -5.899011135101318
    4. '(' → logprob: -6.024011135101318
    5. ':' → logprob: -6.399011135101318
    6. '```' → logprob: -7.899011135101318
    7. ' def' → logprob: -8.27401065826416
    8. ' (' → logprob: -8.64901065826416
    9. '(
' → logprob: -9.02401065826416
    10. ':
' → logprob: -9.64901065826416

Token 365: ' Args' (ID: 39185)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12196855992078781
    2. ' return' → logprob: -2.8719685077667236
    3. 'return' → logprob: -3.4969685077667236
    4. ' def' → logprob: -3.6219685077667236
    5. '   ' → logprob: -6.871968746185303
    6. '[]' → logprob: -9.246968269348145
    7. '[' → logprob: -10.621968269348145
    8. '[
' → logprob: -11.371968269348145
    9. '[]
' → logprob: -11.496968269348145
    10. '```' → logprob: -11.871968269348145

Token 366: ':
' (ID: 734)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0014245217898860574
    2. '   ' → logprob: -7.501424312591553
    3. 'n' → logprob: -7.876424312591553
    4. ' (' → logprob: -8.126424789428711
    5. 'def' → logprob: -8.876424789428711
    6. '(' → logprob: -11.001424789428711
    7. '(
' → logprob: -11.126424789428711
    8. '):
' → logprob: -11.626424789428711
    9. ':' → logprob: -12.251424789428711
    10. ':
' → logprob: -12.501424789428711

Token 367: '       ' (ID: 309)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5583553910255432
    2. '   ' → logprob: -0.9333553910255432
    3. 'def' → logprob: -3.5583553314208984
    4. ' n' → logprob: -5.683355331420898
    5. '(n' → logprob: -6.058355331420898
    6. ':' → logprob: -9.183355331420898
    7. '```' → logprob: -9.183355331420898
    8. '	n' → logprob: -9.808355331420898
    9. ' def' → logprob: -10.308355331420898
    10. '):
' → logprob: -10.808355331420898

Token 368: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -5.908022285439074e-05
    2. ' n' → logprob: -10.000059127807617
    3. '   ' → logprob: -11.625059127807617
    4. 'def' → logprob: -13.125059127807617
    5. 'int' → logprob: -14.500059127807617
    6. ')' → logprob: -15.000059127807617
    7. 'num' → logprob: -15.125059127807617
    8. '	n' → logprob: -15.125059127807617
    9. 'self' → logprob: -15.375059127807617
    10. ')n' → logprob: -15.500059127807617

Token 369: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06824251264333725
    2. '):
' → logprob: -3.0682425498962402
    3. ':' → logprob: -4.19324254989624
    4. ')' → logprob: -5.56824254989624
    5. ':int' → logprob: -7.94324254989624
    6. ':
' → logprob: -10.568242073059082
    7. '):
' → logprob: -10.693242073059082
    8. '   ' → logprob: -10.693242073059082
    9. '(n' → logprob: -10.818242073059082
    10. 'int' → logprob: -10.943242073059082

Token 370: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0017313449643552303
    2. '):' → logprob: -7.0017313957214355
    3. ':int' → logprob: -8.001730918884277
    4. ')' → logprob: -9.126730918884277
    5. '):
' → logprob: -9.126730918884277
    6. '=int' → logprob: -9.376730918884277
    7. ' int' → logprob: -9.501730918884277
    8. 'n' → logprob: -9.751730918884277
    9. '(int' → logprob: -10.876730918884277
    10. '[int' → logprob: -11.126730918884277

Token 371: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012866636971011758
    2. '):
' → logprob: -7.251286506652832
    3. ')' → logprob: -7.501286506652832
    4. ':' → logprob: -11.126286506652832
    5. ' ):' → logprob: -12.501286506652832
    6. '):
' → logprob: -12.751286506652832
    7. '):

' → logprob: -13.751286506652832
    8. '   ' → logprob: -14.626286506652832
    9. '<|end|>' → logprob: -15.251286506652832
    10. ' ' → logprob: -15.626286506652832

Token 372: ' Number' (ID: 9184)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0563344955444336
    2. 'int' → logprob: -1.4313344955444336
    3. 'range' → logprob: -1.6813344955444336
    4. '[int' → logprob: -2.1813344955444336
    5. ' range' → logprob: -3.3063344955444336
    6. '   ' → logprob: -3.6813344955444336
    7. ' n' → logprob: -4.181334495544434
    8. 'list' → logprob: -4.681334495544434
    9. '[]' → logprob: -4.806334495544434
    10. '[' → logprob: -5.556334495544434

Token 373: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4372504651546478
    2. '=int' → logprob: -2.1872503757476807
    3. '<|end|>' → logprob: -2.1872503757476807
    4. ':' → logprob: -3.8122503757476807
    5. 'of' → logprob: -4.06225061416626
    6. '):
' → logprob: -4.31225061416626
    7. '   ' → logprob: -4.43725061416626
    8. ' of' → logprob: -4.56225061416626
    9. '<|end|>' → logprob: -4.81225061416626
    10. '):' → logprob: -5.06225061416626

Token 374: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.5760170817375183
    2. 'lines' → logprob: -0.8260170817375183
    3. 'rows' → logprob: -10.826017379760742
    4. ')' → logprob: -11.326017379760742
    5. '_lines' → logprob: -11.576017379760742
    6. ' times' → logprob: -11.826017379760742
    7. '	lines' → logprob: -11.826017379760742
    8. 'times' → logprob: -12.201017379760742
    9. 'iterations' → logprob: -13.076017379760742
    10. 'items' → logprob: -13.201017379760742

Token 375: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5147311687469482
    2. '):
' → logprob: -1.1397311687469482
    3. '):' → logprob: -3.8897311687469482
    4. ':' → logprob: -4.014731407165527
    5. ' to' → logprob: -4.014731407165527
    6. '=' → logprob: -4.639731407165527
    7. 'to' → logprob: -5.264731407165527
    8. '   ' → logprob: -5.389731407165527
    9. '<|end|>' → logprob: -6.264731407165527
    10. 'def' → logprob: -6.514731407165527

Token 376: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.008623320609331131
    2. ' read' → logprob: -4.758623123168945
    3. '.read' → logprob: -13.133623123168945
    4. '_read' → logprob: -13.133623123168945
    5. '-read' → logprob: -13.258623123168945
    6. '	read' → logprob: -13.758623123168945
    7. 'return' → logprob: -14.508623123168945
    8. '
' → logprob: -15.008623123168945
    9. ' readline' → logprob: -15.508623123168945
    10. 'reads' → logprob: -15.633623123168945

Token 377: '.

' (ID: 364)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.36687609553337097
    2. '):' → logprob: -1.6168761253356934
    3. ')' → logprob: -2.3668761253356934
    4. '   ' → logprob: -4.491876125335693
    5. 'def' → logprob: -6.241876125335693
    6. '(n' → logprob: -6.866876125335693
    7. 'n' → logprob: -8.866875648498535
    8. ':' → logprob: -8.991875648498535
    9. '
' → logprob: -8.991875648498535
    10. '):
' → logprob: -9.491875648498535

Token 378: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004851953592151403
    2. 'def' → logprob: -6.129851818084717
    3. ':
' → logprob: -7.379851818084717
    4. ')' → logprob: -7.504851818084717
    5. ':' → logprob: -7.754851818084717
    6. '):
' → logprob: -8.004852294921875
    7. '```' → logprob: -8.254852294921875
    8. ' return' → logprob: -8.754852294921875
    9. '):' → logprob: -9.629852294921875
    10. '    
' → logprob: -10.004852294921875

Token 379: ' Returns' (ID: 9609)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5185409188270569
    2. '   ' → logprob: -1.143540859222412
    3. 'return' → logprob: -2.518540859222412
    4. ' lines' → logprob: -5.893540859222412
    5. '```' → logprob: -7.393540859222412
    6. ' result' → logprob: -7.643540859222412
    7. 'result' → logprob: -7.768540859222412
    8. ')' → logprob: -8.26854133605957
    9. 'lines' → logprob: -8.51854133605957
    10. 'def' → logprob: -8.51854133605957

Token 380: ':
' (ID: 734)
  Prédit: '[List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -1.0856868028640747
    2. '[' → logprob: -1.4606868028640747
    3. '   ' → logprob: -1.7106868028640747
    4. '[
' → logprob: -2.835686683654785
    5. ':' → logprob: -3.210686683654785
    6. ':list' → logprob: -3.585686683654785
    7. ' list' → logprob: -3.835686683654785
    8. 'List' → logprob: -3.960686683654785
    9. ':
' → logprob: -4.085686683654785
    10. ' [
' → logprob: -4.085686683654785

Token 381: '       ' (ID: 309)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.15253442525863647
    2. '[' → logprob: -2.4025344848632812
    3. ' [' → logprob: -3.9025344848632812
    4. '   ' → logprob: -4.027534484863281
    5. '[int' → logprob: -4.652534484863281
    6. '[List' → logprob: -6.277534484863281
    7. '[line' → logprob: -7.527534484863281
    8. '[
' → logprob: -8.402534484863281
    9. 'list' → logprob: -8.527534484863281
    10. ' list' → logprob: -8.902534484863281

Token 382: ' list' (ID: 1562)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.16261716187000275
    2. 'list' (adapté à ' list') → logprob: -1.9126172065734863
    3. '[List' → logprob: -6.162617206573486
    4. '[int' → logprob: -8.912616729736328
    5. 'List' → logprob: -9.662616729736328
    6. '[' → logprob: -9.912616729736328
    7. ' list' → logprob: -10.412616729736328
    8. '   ' → logprob: -13.412616729736328
    9. '[line' → logprob: -13.537616729736328
    10. ' [' → logprob: -13.912616729736328

Token 383: ' of' (ID: 328)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.005668525584042072
    2. ' of' → logprob: -5.380668640136719
    3. '   ' → logprob: -8.005668640136719
    4. '[List' → logprob: -8.755668640136719
    5. ':' → logprob: -8.880668640136719
    6. 'of' → logprob: -8.880668640136719
    7. ':
' → logprob: -9.755668640136719
    8. '(int' → logprob: -9.880668640136719
    9. ' =' → logprob: -9.880668640136719
    10. '[' → logprob: -10.630668640136719

Token 384: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0026750608813017607
    2. ' int' → logprob: -6.0026750564575195
    3. '[int' → logprob: -8.75267505645752
    4. 'list' → logprob: -10.25267505645752
    5. ' list' → logprob: -12.75267505645752
    6. '<int' → logprob: -13.75267505645752
    7. 'List' → logprob: -14.12767505645752
    8. '   ' → logprob: -14.75267505645752
    9. 'ints' → logprob: -14.87767505645752
    10. '	int' → logprob: -15.37767505645752

Token 385: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13148602843284607
    2. ':
' → logprob: -2.756485939025879
    3. '[List' → logprob: -3.631485939025879
    4. '[int' → logprob: -4.006485939025879
    5. '[]' → logprob: -5.756485939025879
    6. '[' → logprob: -6.256485939025879
    7. ':list' → logprob: -6.256485939025879
    8. '   ' → logprob: -6.506485939025879
    9. '[list' → logprob: -7.131485939025879
    10. ' list' → logprob: -7.506485939025879

Token 386: ' List' (ID: 2655)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.3632371723651886
    2. '[' → logprob: -1.6132371425628662
    3. '[int' → logprob: -2.363237142562866
    4. ' [' → logprob: -4.738237380981445
    5. '[List' → logprob: -7.488237380981445
    6. '   ' → logprob: -7.613237380981445
    7. '[i' → logprob: -7.863237380981445
    8. '[line' → logprob: -8.113237380981445
    9. '[Int' → logprob: -8.238237380981445
    10. '[I' → logprob: -8.988237380981445

Token 387: ' of' (ID: 328)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.0603762865066528
    2. '[
' → logprob: -1.3103762865066528
    3. '[' → logprob: -2.0603761672973633
    4. ' of' → logprob: -2.5603761672973633
    5. '   ' → logprob: -3.3103761672973633
    6. '(map' → logprob: -3.4353761672973633
    7. '[]' → logprob: -3.8103761672973633
    8. '(
' → logprob: -4.435376167297363
    9. 'def' → logprob: -4.435376167297363
    10. 'of' → logprob: -4.560376167297363

Token 388: ' integer' (ID: 16336)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.18024775385856628
    2. 'int' → logprob: -1.9302477836608887
    3. 'ints' → logprob: -4.055247783660889
    4. 'inte' → logprob: -6.805247783660889
    5. ' integers' → logprob: -7.055247783660889
    6. ' int' → logprob: -8.43024730682373
    7. ' ints' → logprob: -8.80524730682373
    8. '[n' → logprob: -10.43024730682373
    9. '[I' → logprob: -10.80524730682373
    10. ' [' → logprob: -10.93024730682373

Token 389: ' values' (ID: 4824)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0006085559725761414
    2. '()' → logprob: -8.000608444213867
    3. ' s' → logprob: -8.750608444213867
    4. '[]' → logprob: -10.125608444213867
    5. ']' → logprob: -10.625608444213867
    6. '(s' → logprob: -11.500608444213867
    7. '(' → logprob: -11.750608444213867
    8. '[' → logprob: -12.250608444213867
    9. 'values' → logprob: -12.375608444213867
    10. ')s' → logprob: -12.500608444213867

Token 390: ' from' (ID: 591)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4535495340824127
    2. '   ' → logprob: -1.9535495042800903
    3. '[]' → logprob: -2.32854962348938
    4. '[' → logprob: -3.57854962348938
    5. '[:]' → logprob: -3.95354962348938
    6. '[n' → logprob: -4.328549385070801
    7. 'from' → logprob: -5.078549385070801
    8. 'def' → logprob: -5.078549385070801
    9. 's' → logprob: -5.078549385070801
    10. ' =' → logprob: -5.328549385070801

Token 391: ' input' (ID: 3422)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.2783085107803345
    2. 'sys' → logprob: -1.6533085107803345
    3. '[' → logprob: -3.278308391571045
    4. 'int' → logprob: -5.278308391571045
    5. '[line' → logprob: -6.403308391571045
    6. '(sys' → logprob: -6.528308391571045
    7. '[I' → logprob: -6.528308391571045
    8. 'input' → logprob: -7.403308391571045
    9. ' [' → logprob: -7.653308391571045
    10. ' sys' → logprob: -7.653308391571045

Token 392: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.39364224672317505
    2. '   ' → logprob: -2.0186421871185303
    3. ')' → logprob: -2.2686421871185303
    4. '()
' → logprob: -3.8936421871185303
    5. '():
' → logprob: -4.268642425537109
    6. '[]' → logprob: -5.143642425537109
    7. '[:]' → logprob: -5.268642425537109
    8. ':' → logprob: -5.268642425537109
    9. '():' → logprob: -5.393642425537109
    10. '):' → logprob: -5.518642425537109

Token 393: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6247216463088989
    2. '[]' → logprob: -1.374721646308899
    3. '[' → logprob: -2.6247215270996094
    4. 'def' → logprob: -2.8747215270996094
    5. ':
' → logprob: -3.9997215270996094
    6. '```' → logprob: -4.374721527099609
    7. '[]
' → logprob: -4.374721527099609
    8. '[:]' → logprob: -4.874721527099609
    9. ':' → logprob: -4.999721527099609
    10. '[n' → logprob: -4.999721527099609

Token 394: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003696754574775696
    2. ':
' → logprob: -6.753696918487549
    3. '):
' → logprob: -7.003696918487549
    4. '"""
' (adapté à ' """
') → logprob: -7.878696918487549
    5. '```' → logprob: -8.00369644165039
    6. '[]
' → logprob: -8.62869644165039
    7. ')' → logprob: -8.87869644165039
    8. '[]' → logprob: -9.00369644165039
    9. '[
' → logprob: -9.75369644165039
    10. '[' → logprob: -9.75369644165039

Token 395: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014621413312852383
    2. 'return' → logprob: -4.264621257781982
    3. ' return' → logprob: -7.764621257781982
    4. '	return' → logprob: -10.76462173461914
    5. '[' → logprob: -12.63962173461914
    6. 'def' → logprob: -12.88962173461914
    7. '[]' → logprob: -13.13962173461914
    8. ' ' → logprob: -14.01462173461914
    9. '[
' → logprob: -14.01462173461914
    10. 'result' → logprob: -14.26462173461914

Token 396: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.002120757708325982
    2. '   ' → logprob: -6.6271209716796875
    3. ' return' → logprob: -7.3771209716796875
    4. '[' → logprob: -8.877120971679688
    5. 'def' → logprob: -11.127120971679688
    6. '[int' → logprob: -12.127120971679688
    7. '	return' → logprob: -13.252120971679688
    8. '[line' → logprob: -13.627120971679688
    9. '{return' → logprob: -14.127120971679688
    10. '[i' → logprob: -14.252120971679688

Token 397: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.2340386062860489
    2. '[int' → logprob: -1.7340385913848877
    3. '[' → logprob: -3.4840385913848877
    4. '[List' → logprob: -6.859038829803467
    5. '[I' → logprob: -9.109038352966309
    6. '[line' → logprob: -9.359038352966309
    7. '[Int' → logprob: -10.234038352966309
    8. ' [' → logprob: -10.234038352966309
    9. '[i' → logprob: -11.234038352966309
    10. '[L' → logprob: -11.609038352966309

Token 398: 'I' (ID: 40)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10021141171455383
    2. 'I' → logprob: -2.3502113819122314
    3. ' int' → logprob: -13.100211143493652
    4. ' I' → logprob: -14.475211143493652
    5. '[int' → logprob: -14.600211143493652
    6. '   ' → logprob: -14.850211143493652
    7. '(int' → logprob: -15.100211143493652
    8. 'Int' → logprob: -15.600211143493652
    9. 'ints' → logprob: -15.725211143493652
    10. '
' → logprob: -15.975211143493652

Token 399: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.5048530030981055e-06
    2. '()]' → logprob: -14.000001907348633
    3. ' ()' → logprob: -14.500001907348633
    4. '()
' → logprob: -16.250001907348633
    5. 'for' → logprob: -17.375001907348633
    6. '（）' → logprob: -18.000001907348633
    7. '().' → logprob: -18.125001907348633
    8. '(' → logprob: -18.500001907348633
    9. '()`' → logprob: -19.375001907348633
    10. '()\' → logprob: -20.000001907348633

Token 400: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.803360495017841e-05
    2. 'for' → logprob: -9.500078201293945
    3. ' for' → logprob: -13.000078201293945
    4. '()
' → logprob: -15.000078201293945
    5. ' ()' → logprob: -15.250078201293945
    6. '(' → logprob: -15.625078201293945
    7. ' ' → logprob: -17.750078201293945
    8. '().' → logprob: -17.750078201293945
    9. '()]' → logprob: -17.750078201293945
    10. ')' → logprob: -18.500078201293945

Token 401: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0486002042889595
    2. ' _' → logprob: -3.048600196838379
    3. ' ' → logprob: -12.298600196838379
    4. ' ' → logprob: -12.548600196838379
    5. '_i' → logprob: -13.798600196838379
    6. '<|end|>' → logprob: -14.548600196838379
    7. '_range' → logprob: -14.673600196838379
    8. '_n' → logprob: -14.798600196838379
    9. '<|end|>' → logprob: -15.048600196838379
    10. '_in' → logprob: -15.298600196838379

Token 402: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.95367431640625
    2. '(' → logprob: -1.45367431640625
    3. 'in' → logprob: -1.82867431640625
    4. '_' → logprob: -1.95367431640625
    5. 'n' → logprob: -3.07867431640625
    6. '(n' → logprob: -4.20367431640625
    7. ' ' → logprob: -4.70367431640625
    8. ' n' → logprob: -5.57867431640625
    9. ' _' → logprob: -6.07867431640625
    10. 'range' → logprob: -6.95367431640625

Token 403: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04859134554862976
    2. ' range' → logprob: -3.048591375350952
    3. '_range' → logprob: -13.423591613769531
    4. '_' → logprob: -13.423591613769531
    5. '	range' → logprob: -14.173591613769531
    6. '(range' → logprob: -15.173591613769531
    7. 'rang' → logprob: -17.04859161376953
    8. ' xrange' → logprob: -19.04859161376953
    9. '.range' → logprob: -19.29859161376953
    10. 'ran' → logprob: -19.42359161376953

Token 404: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0019594402983784676
    2. '(' → logprob: -6.251959323883057
    3. 'n' → logprob: -10.501959800720215
    4. ' n' → logprob: -13.501959800720215
    5. ' (' → logprob: -13.751959800720215
    6. '(
' → logprob: -14.001959800720215
    7. '	n' → logprob: -16.5019588470459
    8. ')n' → logprob: -17.5019588470459
    9. '(nn' → logprob: -19.5019588470459
    10. '(N' → logprob: -19.6269588470459

Token 405: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.5690089639974758e-05
    2. ')' → logprob: -11.125015258789062
    3. ']' → logprob: -15.250015258789062
    4. ' )' → logprob: -15.500015258789062
    5. ')]
' → logprob: -15.875015258789062
    6. ')],' → logprob: -16.250015258789062
    7. ')].' → logprob: -16.375015258789062
    8. '):' → logprob: -16.875015258789062
    9. '   ' → logprob: -17.125015258789062
    10. ')])' → logprob: -17.125015258789062

Token 406: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10867767781019211
    2. '<|end|>' → logprob: -2.483677625656128
    3. '
' → logprob: -4.858677864074707
    4. '<|end|>' → logprob: -5.483677864074707
    5. ']' → logprob: -5.608677864074707
    6. '

' → logprob: -5.733677864074707
    7. ' def' → logprob: -7.608677864074707
    8. ')' → logprob: -9.983677864074707
    9. '```' → logprob: -9.983677864074707
    10. '#' → logprob: -10.108677864074707

Token 407: ' L' (ID: 451)
  Prédit: 'IR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'IR' → logprob: -0.20716311037540436
    2. 'LI' → logprob: -1.7071630954742432
    3. 'L' → logprob: -5.707163333892822
    4. 'LR' → logprob: -6.332163333892822
    5. 'IL' → logprob: -8.207162857055664
    6. ' IR' → logprob: -8.332162857055664
    7. 'LS' → logprob: -9.332162857055664
    8. '_IR' → logprob: -11.957162857055664
    9. ' LI' → logprob: -11.957162857055664
    10. 'IRS' → logprob: -12.332162857055664

Token 408: 'IR' (ID: 4368)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.026949994266033173
    2. 'IR' → logprob: -4.276949882507324
    3. 'I' → logprob: -4.401949882507324
    4. '(n' → logprob: -8.651949882507324
    5. 'ist' → logprob: -9.151949882507324
    6. '(' → logprob: -10.526949882507324
    7. '(IR' → logprob: -10.526949882507324
    8. 'IST' → logprob: -10.776949882507324
    9. 'S' → logprob: -11.151949882507324
    10. '(R' → logprob: -11.651949882507324

Token 409: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0002843384863808751
    2. '(' → logprob: -8.250284194946289
    3. ' (' → logprob: -11.250284194946289
    4. 'ange' → logprob: -11.875284194946289
    5. '(N' → logprob: -14.250284194946289
    6. 'e' → logprob: -15.125284194946289
    7. '(i' → logprob: -15.250284194946289
    8. ' ' → logprob: -15.750284194946289
    9. 'anged' → logprob: -16.00028419494629
    10. '```' → logprob: -16.00028419494629

Token 410: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013709498569369316
    2. '):
' → logprob: -4.388709545135498
    3. ')' → logprob: -7.388709545135498
    4. '(n' → logprob: -7.513709545135498
    5. '):
' → logprob: -11.13870906829834
    6. ' ):' → logprob: -11.76370906829834
    7. 'def' → logprob: -12.26370906829834
    8. '):

' → logprob: -12.51370906829834
    9. '):(' → logprob: -13.13870906829834
    10. ':' → logprob: -14.38870906829834

Token 411: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00024846551241353154
    2. 'def' → logprob: -8.500248908996582
    3. '(' → logprob: -10.625248908996582
    4. '(
' → logprob: -11.625248908996582
    5. '   ' → logprob: -12.750248908996582
    6. 'n' → logprob: -12.875248908996582
    7. ' def' → logprob: -13.000248908996582
    8. ' (' → logprob: -13.625248908996582
    9. '(def' → logprob: -14.000248908996582
    10. ' n' → logprob: -14.625248908996582

Token 412: ' """
' (ID: 7037)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.08367916941642761
    2. 'def' → logprob: -2.70867919921875
    3. 'n' → logprob: -4.45867919921875
    4. ' n' → logprob: -7.45867919921875
    5. '(
' → logprob: -7.83367919921875
    6. '[n' → logprob: -8.45867919921875
    7. '(' → logprob: -8.45867919921875
    8. '   ' → logprob: -8.58367919921875
    9. ' def' → logprob: -8.70867919921875
    10. '(lambda' → logprob: -8.83367919921875

Token 413: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.021134648472070694
    2. 'n' → logprob: -4.271134853363037
    3. '"""
' → logprob: -5.771134853363037
    4. '   ' → logprob: -6.021134853363037
    5. '(n' → logprob: -6.646134853363037
    6. ' def' → logprob: -9.396134376525879
    7. '```' → logprob: -12.021134376525879
    8. '
' → logprob: -12.521134376525879
    9. ' n' → logprob: -12.896134376525879
    10. '):
' → logprob: -13.396134376525879

Token 414: ' Reads' (ID: 88839)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.019311033189296722
    2. 'return' → logprob: -4.51931095123291
    3. '[' → logprob: -5.51931095123291
    4. ' def' → logprob: -6.26931095123291
    5. ' return' → logprob: -7.39431095123291
    6. '"""
' → logprob: -7.89431095123291
    7. '[line' → logprob: -8.01931095123291
    8. '[list' → logprob: -8.01931095123291
    9. '[
' → logprob: -8.39431095123291
    10. '[List' → logprob: -9.01931095123291

Token 415: ' '' (ID: 461)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00867543462663889
    2. '[n' → logprob: -5.258675575256348
    3. 'n' → logprob: -5.883675575256348
    4. ' n' → logprob: -8.508675575256348
    5. 'def' → logprob: -8.633675575256348
    6. ' [' → logprob: -9.383675575256348
    7. '[' → logprob: -9.758675575256348
    8. '	n' → logprob: -10.633675575256348
    9. '[
' → logprob: -10.633675575256348
    10. '(
' → logprob: -10.758675575256348

Token 416: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -6.511406809295295e-06
    2. ' n' → logprob: -12.125006675720215
    3. '(n' → logprob: -14.000006675720215
    4. '[n' → logprob: -15.875006675720215
    5. 'def' → logprob: -17.0000057220459
    6. '	n' → logprob: -17.5000057220459
    7. 'range' → logprob: -18.1250057220459
    8. '_n' → logprob: -18.8750057220459
    9. 'int' → logprob: -19.0000057220459
    10. ')n' → logprob: -19.1250057220459

Token 417: ''' (ID: 6)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6368908882141113
    2. '()' → logprob: -0.7618908882141113
    3. 'def' → logprob: -6.761890888214111
    4. ''' → logprob: -7.511890888214111
    5. '(' → logprob: -7.636890888214111
    6. '()(' → logprob: -7.761890888214111
    7. '_lines' → logprob: -7.886890888214111
    8. '(lines' → logprob: -8.136890411376953
    9. ' lines' → logprob: -8.636890411376953
    10. ']' → logprob: -9.386890411376953

Token 418: ' lines' (ID: 8698)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6650733351707458
    2. 'lines' → logprob: -0.9150733351707458
    3. ' lines' → logprob: -3.1650733947753906
    4. '_lines' → logprob: -3.5400733947753906
    5. '(lines' → logprob: -5.415073394775391
    6. 'ines' → logprob: -5.665073394775391
    7. 'def' → logprob: -6.540073394775391
    8. '(
' → logprob: -6.665073394775391
    9. 'Lines' → logprob: -6.665073394775391
    10. '(' → logprob: -6.915073394775391

Token 419: ' from' (ID: 591)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4816770851612091
    2. 'def' → logprob: -0.9816770553588867
    3. '(lambda' → logprob: -6.106677055358887
    4. 'from' → logprob: -6.481677055358887
    5. '(def' → logprob: -7.231677055358887
    6. 'for' → logprob: -7.481677055358887
    7. '   ' → logprob: -7.606677055358887
    8. '(lines' → logprob: -7.981677055358887
    9. ' for' → logprob: -8.106677055358887
    10. ' def' → logprob: -8.856677055358887

Token 420: ' standard' (ID: 7024)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.04101498797535896
    2. ' sys' → logprob: -3.2910149097442627
    3. 'range' → logprob: -5.916015148162842
    4. '(sys' → logprob: -8.791014671325684
    5. ' range' → logprob: -9.291014671325684
    6. '=sys' → logprob: -11.291014671325684
    7. 'def' → logprob: -12.166014671325684
    8. 'standard' → logprob: -12.541014671325684
    9. '   ' → logprob: -13.291014671325684
    10. 'system' → logprob: -13.791014671325684

Token 421: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1352294683456421
    2. '_input' → logprob: -2.8852295875549316
    3. '()' → logprob: -3.5102295875549316
    4. ' input' → logprob: -3.8852295875549316
    5. '=sys' → logprob: -4.510229587554932
    6. '()[' → logprob: -6.010229587554932
    7. '()
' → logprob: -6.510229587554932
    8. 'def' → logprob: -6.760229587554932
    9. '():' → logprob: -7.635229587554932
    10. '(sys' → logprob: -7.760229587554932

Token 422: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.14808562397956848
    2. 'def' → logprob: -2.023085594177246
    3. ',' → logprob: -6.648085594177246
    4. ' def' → logprob: -6.648085594177246
    5. ' (' → logprob: -7.273085594177246
    6. '():
' → logprob: -7.398085594177246
    7. '()' → logprob: -7.648085594177246
    8. '():' → logprob: -8.523085594177246
    9. ' =' → logprob: -8.898085594177246
    10. '   ' → logprob: -8.898085594177246

Token 423: ' each' (ID: 2454)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6185529828071594
    2. ' returning' → logprob: -0.8685529828071594
    3. 'def' → logprob: -3.6185529232025146
    4. ' return' → logprob: -4.243553161621094
    5. '   ' → logprob: -8.618553161621094
    6. ' def' → logprob: -9.243553161621094
    7. 'each' → logprob: -9.243553161621094
    8. ' each' → logprob: -10.118553161621094
    9. 'n' → logprob: -10.618553161621094
    10. '
' → logprob: -11.118553161621094

Token 424: ' containing' (ID: 15683)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.29704543948173523
    2. 'def' → logprob: -2.0470454692840576
    3. '=' → logprob: -3.6720454692840576
    4. ' def' → logprob: -3.7970454692840576
    5. ' for' → logprob: -4.1720452308654785
    6. '   ' → logprob: -4.4220452308654785
    7. ' returning' → logprob: -4.5470452308654785
    8. ' =' → logprob: -4.6720452308654785
    9. ' as' → logprob: -5.4220452308654785
    10. ' with' → logprob: -5.5470452308654785

Token 425: ' multiple' (ID: 7598)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.005311547312885523
    2. 'LI' → logprob: -5.380311489105225
    3. ' list' → logprob: -7.755311489105225
    4. '   ' → logprob: -8.630311965942383
    5. ' LI' → logprob: -10.630311965942383
    6. 'lists' → logprob: -11.005311965942383
    7. 'li' → logprob: -11.880311965942383
    8. '
' → logprob: -11.880311965942383
    9. '(list' → logprob: -11.880311965942383
    10. 'List' → logprob: -11.880311965942383

Token 426: ' integers' (ID: 54912)
  Prédit: ' integers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -1.052854061126709
    2. '(int' → logprob: -1.802854061126709
    3. 'tokens' → logprob: -2.052854061126709
    4. 'int' → logprob: -2.052854061126709
    5. ' tokens' → logprob: -2.927854061126709
    6. 'ints' → logprob: -2.927854061126709
    7. 'def' → logprob: -3.427854061126709
    8. '()' → logprob: -3.677854061126709
    9. ' lists' → logprob: -3.802854061126709
    10. '[int' → logprob: -4.177854061126709

Token 427: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5668304562568665
    2. '(n' → logprob: -0.9418304562568665
    3. '():' → logprob: -4.191830635070801
    4. 'def' → logprob: -4.566830635070801
    5. '().' → logprob: -4.816830635070801
    6. '():
' → logprob: -5.566830635070801
    7. '   ' → logprob: -6.691830635070801
    8. '()
' → logprob: -7.316830635070801
    9. '()[' → logprob: -7.566830635070801
    10. 'for' → logprob: -7.816830635070801

Token 428: ' and' (ID: 326)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16630180180072784
    2. 'return' → logprob: -2.041301727294922
    3. ' returning' → logprob: -4.666301727294922
    4. ' return' → logprob: -5.041301727294922
    5. '   ' → logprob: -5.416301727294922
    6. ' def' → logprob: -6.541301727294922
    7. ' and' → logprob: -7.166301727294922
    8. 'and' → logprob: -7.791301727294922
    9. 'n' → logprob: -8.541301727294922
    10. '
' → logprob: -8.916301727294922

Token 429: '
' (ID: 198)
  Prédit: ' returns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' returns' → logprob: -0.4071623384952545
    2. 'returns' → logprob: -1.1571623086929321
    3. 'return' → logprob: -4.532162189483643
    4. 'def' → logprob: -4.782162189483643
    5. '   ' → logprob: -7.407162189483643
    6. ' return' → logprob: -8.2821626663208
    7. '
' → logprob: -10.2821626663208
    8. 'Returns' → logprob: -10.6571626663208
    9. '_returns' → logprob: -11.5321626663208
    10. ' def' → logprob: -11.7821626663208

Token 430: '   ' (ID: 271)
  Prédit: ' returns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' returns' → logprob: -0.33361274003982544
    2. 'returns' → logprob: -1.3336126804351807
    3. '   ' → logprob: -4.20861291885376
    4. 'def' → logprob: -5.45861291885376
    5. 'return' → logprob: -7.95861291885376
    6. ' def' → logprob: -7.95861291885376
    7. ' returning' → logprob: -8.583612442016602
    8. 'Returns' → logprob: -10.458612442016602
    9. '
' → logprob: -10.583612442016602
    10. '_returns' → logprob: -10.583612442016602

Token 431: ' returns' (ID: 7377)
  Prédit: 'returns'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'returns' (adapté à ' returns') → logprob: -0.38924339413642883
    2. ' returns' → logprob: -1.1392433643341064
    3. 'return' → logprob: -6.7642436027526855
    4. 'def' → logprob: -6.7642436027526855
    5. 'Returns' → logprob: -10.264243125915527
    6. '   ' → logprob: -11.389243125915527
    7. ' def' → logprob: -12.514243125915527
    8. '_returns' → logprob: -12.639243125915527
    9. ' return' → logprob: -13.389243125915527
    10. 'eturn' → logprob: -13.639243125915527

Token 432: ' them' (ID: 1373)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.30072784423828125
    2. ' [' → logprob: -1.5507278442382812
    3. '[n' → logprob: -3.6757278442382812
    4. '[' → logprob: -4.550727844238281
    5. '[line' → logprob: -4.800727844238281
    6. '[List' → logprob: -7.050727844238281
    7. '   ' → logprob: -7.425727844238281
    8. '[i' → logprob: -7.925727844238281
    9. '[a' → logprob: -8.425727844238281
    10. '[layer' → logprob: -8.925727844238281

Token 433: ' as' (ID: 472)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8735619187355042
    2. ' [' → logprob: -1.3735618591308594
    3. '[list' → logprob: -2.4985618591308594
    4. '[n' → logprob: -2.6235618591308594
    5. '[line' → logprob: -2.8735618591308594
    6. ' as' → logprob: -2.9985618591308594
    7. '[i' → logprob: -3.4985618591308594
    8. ' =' → logprob: -4.623561859130859
    9. '[
' → logprob: -4.873561859130859
    10. '=[' → logprob: -5.123561859130859

Token 434: ' a' (ID: 261)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.0860743299126625
    2. '[' → logprob: -2.8360743522644043
    3. '[n' → logprob: -4.336074352264404
    4. '[i' → logprob: -5.836074352264404
    5. ' [' → logprob: -5.836074352264404
    6. '[a' → logprob: -6.461074352264404
    7. '[List' → logprob: -6.461074352264404
    8. '[line' → logprob: -7.086074352264404
    9. '[L' → logprob: -8.336073875427246
    10. '[l' → logprob: -8.461073875427246

Token 435: ' list' (ID: 1562)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.02399260923266411
    2. 'list' → logprob: -4.023992538452148
    3. ' list' → logprob: -5.523992538452148
    4. ' [' → logprob: -7.273992538452148
    5. '[n' → logprob: -7.773992538452148
    6. '[' → logprob: -8.023992538452148
    7. '[List' → logprob: -8.023992538452148
    8. '[
' → logprob: -10.398992538452148
    9. '[[' → logprob: -11.773992538452148
    10. '[line' → logprob: -12.273992538452148

Token 436: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.23974181711673737
    2. 'of' → logprob: -2.239741802215576
    3. '   ' → logprob: -2.489741802215576
    4. '[' → logprob: -4.864741802215576
    5. '_of' → logprob: -4.864741802215576
    6. '[list' → logprob: -5.614741802215576
    7. '[List' → logprob: -6.489741802215576
    8. 'Of' → logprob: -6.864741802215576
    9. '
' → logprob: -7.114741802215576
    10. '[
' → logprob: -7.864741802215576

Token 437: ' integer' (ID: 16336)
  Prédit: 'lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lists' → logprob: -0.3236526548862457
    2. 'list' → logprob: -1.3236526250839233
    3. ' lists' → logprob: -4.573652744293213
    4. ' list' → logprob: -11.073652267456055
    5. '[list' → logprob: -13.823652267456055
    6. '
' → logprob: -15.698652267456055
    7. '_lists' → logprob: -16.073652267456055
    8. '   ' → logprob: -16.948652267456055
    9. ' ' → logprob: -17.448652267456055
    10. 'Lists' → logprob: -17.823652267456055

Token 438: ' lists' (ID: 19471)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.002750665182247758
    2. ' lists' → logprob: -6.377750873565674
    3. 'lists' → logprob: -7.502750873565674
    4. '_lists' → logprob: -7.627750873565674
    5. '_s' → logprob: -12.252750396728516
    6. ' s' → logprob: -13.002750396728516
    7. '   ' → logprob: -13.752750396728516
    8. 'Lists' → logprob: -14.502750396728516
    9. 'es' → logprob: -15.752750396728516
    10. '_' → logprob: -15.752750396728516

Token 439: '.

' (ID: 364)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.003785704728215933
    2. '   ' → logprob: -5.878785610198975
    3. 'def' → logprob: -7.503785610198975
    4. '[n' → logprob: -8.878786087036133
    5. 'for' → logprob: -9.878786087036133
    6. ' (' → logprob: -9.878786087036133
    7. '[(' → logprob: -10.003786087036133
    8. '.' → logprob: -10.628786087036133
    9. ',' → logprob: -10.878786087036133
    10. '(size' → logprob: -11.003786087036133

Token 440: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6122194528579712
    2. '(n' → logprob: -0.8622194528579712
    3. '   ' → logprob: -3.3622193336486816
    4. ' def' → logprob: -7.362219333648682
    5. '```' → logprob: -8.48721981048584
    6. '
' → logprob: -10.23721981048584
    7. ' (' → logprob: -10.98721981048584
    8. '):
' → logprob: -10.98721981048584
    9. 'n' → logprob: -11.48721981048584
    10. ':
' → logprob: -11.86221981048584

Token 441: ' Args' (ID: 39185)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0008247529622167349
    2. '(n' → logprob: -7.375824928283691
    3. ' def' → logprob: -8.750824928283691
    4. '   ' → logprob: -10.375824928283691
    5. '
' → logprob: -12.250824928283691
    6. '"""
' → logprob: -13.125824928283691
    7. '```' → logprob: -14.250824928283691
    8. 'n' → logprob: -14.500824928283691
    9. '    
' → logprob: -15.750824928283691
    10. '):
' → logprob: -16.250823974609375

Token 442: ':
' (ID: 734)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.16702896356582642
    2. 'def' → logprob: -1.9170289039611816
    3. '   ' → logprob: -5.167028903961182
    4. ' (' → logprob: -7.917028903961182
    5. ' def' → logprob: -8.04202938079834
    6. '```' → logprob: -9.29202938079834
    7. '):
' → logprob: -9.66702938079834
    8. ':' → logprob: -9.79202938079834
    9. 'n' → logprob: -10.54202938079834
    10. ':
' → logprob: -10.66702938079834

Token 443: '       ' (ID: 309)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07878082990646362
    2. '   ' → logprob: -2.7037808895111084
    3. '(n' → logprob: -4.828780651092529
    4. ' n' → logprob: -7.453780651092529
    5. 'def' → logprob: -9.203781127929688
    6. '	n' → logprob: -9.578781127929688
    7. '       ' → logprob: -10.578781127929688
    8. '
' → logprob: -11.328781127929688
    9. ')n' → logprob: -12.203781127929688
    10. ' ' → logprob: -12.703781127929688

Token 444: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -2.45848218582978e-06
    2. '   ' → logprob: -13.87500286102295
    3. ' n' → logprob: -14.37500286102295
    4. 'def' → logprob: -14.62500286102295
    5. '(n' → logprob: -15.25000286102295
    6. '```' → logprob: -16.750001907348633
    7. 'int' → logprob: -16.875001907348633
    8. '	n' → logprob: -17.375001907348633
    9. '
' → logprob: -17.875001907348633
    10. 'ndef' → logprob: -18.375001907348633

Token 445: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.0689685344696045
    2. ':' → logprob: -1.3189685344696045
    3. '):' → logprob: -1.9439685344696045
    4. '):
' → logprob: -2.1939685344696045
    5. '(n' → logprob: -2.3189685344696045
    6. '(int' → logprob: -3.9439685344696045
    7. '   ' → logprob: -5.068968772888184
    8. ':int' → logprob: -5.193968772888184
    9. ')' → logprob: -5.943968772888184
    10. 'def' → logprob: -7.193968772888184

Token 446: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.1008713702030946e-06
    2. ' int' → logprob: -13.750001907348633
    3. '(int' → logprob: -15.250001907348633
    4. ')' → logprob: -15.250001907348633
    5. 'n' → logprob: -15.375001907348633
    6. ':int' → logprob: -15.875001907348633
    7. '=int' → logprob: -16.625001907348633
    8. '):
' → logprob: -16.750001907348633
    9. '):' → logprob: -17.125001907348633
    10. '[int' → logprob: -18.125001907348633

Token 447: '):' (ID: 3127)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3888309895992279
    2. '):' → logprob: -1.1388310194015503
    3. ')' → logprob: -6.51383113861084
    4. '):
' → logprob: -8.38883113861084
    5. '=' → logprob: -9.51383113861084
    6. ':' → logprob: -9.63883113861084
    7. '):

' → logprob: -10.13883113861084
    8. '(n' → logprob: -10.76383113861084
    9. '=None' → logprob: -11.13883113861084
    10. '   ' → logprob: -11.88883113861084

Token 448: ' Number' (ID: 9184)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.009243015199899673
    2. ' int' → logprob: -4.884243011474609
    3. 'number' → logprob: -7.509243011474609
    4. '   ' → logprob: -7.634243011474609
    5. 'Number' → logprob: -8.13424301147461
    6. ' number' → logprob: -8.63424301147461
    7. 'n' → logprob: -9.75924301147461
    8. '(int' → logprob: -10.25924301147461
    9. '       ' → logprob: -12.00924301147461
    10. 'The' → logprob: -12.13424301147461

Token 449: ' of' (ID: 328)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6509085297584534
    2. '):
' → logprob: -1.9009084701538086
    3. 'of' → logprob: -2.5259084701538086
    4. '_of' → logprob: -2.5259084701538086
    5. '):' → logprob: -3.0259084701538086
    6. ' of' → logprob: -3.1509084701538086
    7. ')' → logprob: -3.4009084701538086
    8. '=' → logprob: -5.150908470153809
    9. ')n' → logprob: -5.150908470153809
    10. '_lines' → logprob: -5.400908470153809

Token 450: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.016136538237333298
    2. 'lines' → logprob: -4.141136646270752
    3. '_lines' → logprob: -9.891136169433594
    4. '	lines' → logprob: -10.641136169433594
    5. '(lines' → logprob: -11.516136169433594
    6. ' ' → logprob: -11.891136169433594
    7. ' lists' → logprob: -12.266136169433594
    8. ')' → logprob: -13.141136169433594
    9. ' times' → logprob: -14.016136169433594
    10. '   ' → logprob: -14.266136169433594

Token 451: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2204774022102356
    2. 'to' → logprob: -1.9704773426055908
    3. '):' → logprob: -3.720477342605591
    4. ')' → logprob: -4.47047758102417
    5. ':' → logprob: -4.72047758102417
    6. '):
' → logprob: -5.47047758102417
    7. '_to' → logprob: -5.72047758102417
    8. '   ' → logprob: -5.84547758102417
    9. 'def' → logprob: -6.47047758102417
    10. '=' → logprob: -6.97047758102417

Token 452: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -2.9160102712921798e-05
    2. ' read' → logprob: -10.500029563903809
    3. '_read' → logprob: -14.125029563903809
    4. 'write' → logprob: -14.625029563903809
    5. '-read' → logprob: -15.875029563903809
    6. '	read' → logprob: -17.000028610229492
    7. 'input' → logprob: -17.125028610229492
    8. 'range' → logprob: -17.625028610229492
    9. 'def' → logprob: -17.875028610229492
    10. 'Read' → logprob: -17.875028610229492

Token 453: '.

' (ID: 364)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06639835983514786
    2. '(n' → logprob: -3.3163983821868896
    3. '):' → logprob: -3.9413983821868896
    4. '   ' → logprob: -4.9413981437683105
    5. 'def' → logprob: -7.3163981437683105
    6. ')' → logprob: -7.9413981437683105
    7. '):
' → logprob: -9.066398620605469
    8. '():
' → logprob: -9.441398620605469
    9. 'n' → logprob: -10.066398620605469
    10. '=' → logprob: -10.191398620605469

Token 454: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7478084564208984
    2. 'def' → logprob: -1.3728084564208984
    3. '(n' → logprob: -1.9978084564208984
    4. '):
' → logprob: -2.3728084564208984
    5. '```' → logprob: -3.4978084564208984
    6. ')' → logprob: -5.247808456420898
    7. '):' → logprob: -5.372808456420898
    8. '
' → logprob: -6.622808456420898
    9. ' def' → logprob: -7.497808456420898
    10. 'n' → logprob: -7.622808456420898

Token 455: ' Returns' (ID: 9609)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7809525728225708
    2. '   ' → logprob: -1.1559525728225708
    3. '):
' → logprob: -2.0309524536132812
    4. ')' → logprob: -2.7809524536132812
    5. '"""
' → logprob: -3.6559524536132812
    6. ')
' → logprob: -5.405952453613281
    7. ' def' → logprob: -6.780952453613281
    8. '```' → logprob: -6.905952453613281
    9. '):' → logprob: -7.905952453613281
    10. 'n' → logprob: -8.405952453613281

Token 456: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.545257568359375
    2. '(list' → logprob: -1.295257568359375
    3. '[List' → logprob: -3.795257568359375
    4. '(n' → logprob: -3.920257568359375
    5. 'def' → logprob: -4.045257568359375
    6. '[n' → logprob: -4.170257568359375
    7. '[list' → logprob: -4.545257568359375
    8. ':list' → logprob: -4.545257568359375
    9. ' list' → logprob: -4.670257568359375
    10. ':
' → logprob: -4.920257568359375

Token 457: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.659177303314209
    2. ' [' → logprob: -1.159177303314209
    3. '[n' → logprob: -2.659177303314209
    4. '[list' → logprob: -3.284177303314209
    5. '[' → logprob: -3.784177303314209
    6. '[List' → logprob: -4.284177303314209
    7. '[int' → logprob: -4.909177303314209
    8. '[line' → logprob: -5.159177303314209
    9. '[
' → logprob: -5.659177303314209
    10. '[i' → logprob: -6.159177303314209

Token 458: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.009597408585250378
    2. '[list' → logprob: -4.759597301483154
    3. ' list' → logprob: -7.509597301483154
    4. 'List' → logprob: -7.759597301483154
    5. '[List' → logprob: -11.759597778320312
    6. '_list' → logprob: -17.634597778320312
    7. '(list' → logprob: -17.759597778320312
    8. ' List' → logprob: -17.884597778320312
    9. 'def' → logprob: -18.134597778320312
    10. '[' → logprob: -18.259597778320312

Token 459: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.9591216444969177
    2. '[list' → logprob: -1.0841217041015625
    3. 'of' → logprob: -1.3341217041015625
    4. '[List' → logprob: -4.7091217041015625
    5. '   ' → logprob: -5.3341217041015625
    6. '[' → logprob: -7.0841217041015625
    7. '_of' → logprob: -8.834121704101562
    8. '<List' → logprob: -9.709121704101562
    9. '
' → logprob: -9.709121704101562
    10. '	of' → logprob: -10.084121704101562

Token 460: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -3.810037742368877e-05
    2. ' list' → logprob: -10.875038146972656
    3. 'lists' → logprob: -11.000038146972656
    4. '[list' → logprob: -13.500038146972656
    5. 'List' → logprob: -14.125038146972656
    6. '   ' → logprob: -16.500038146972656
    7. ' lists' → logprob: -16.750038146972656
    8. '(list' → logprob: -17.375038146972656
    9. '	list' → logprob: -19.500038146972656
    10. '=list' → logprob: -19.750038146972656

Token 461: ' of' (ID: 328)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.6404699683189392
    2. 'of' → logprob: -1.390470027923584
    3. ' of' → logprob: -1.515470027923584
    4. '   ' → logprob: -6.390470027923584
    5. '<int' → logprob: -6.515470027923584
    6. '_of' → logprob: -8.015469551086426
    7. 'int' → logprob: -8.390469551086426
    8. '```' → logprob: -8.765469551086426
    9. '(int' → logprob: -9.390469551086426
    10. '
' → logprob: -9.390469551086426

Token 462: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.845798710244708e-05
    2. '[int' → logprob: -10.375038146972656
    3. ' int' → logprob: -12.000038146972656
    4. 'ints' → logprob: -14.250038146972656
    5. '(int' → logprob: -15.000038146972656
    6. '<int' → logprob: -17.000038146972656
    7. '   ' → logprob: -17.125038146972656
    8. ']int' → logprob: -17.875038146972656
    9. '	int' → logprob: -18.125038146972656
    10. '```' → logprob: -18.875038146972656

Token 463: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06785941123962402
    2. '[int' → logprob: -3.192859411239624
    3. ':
' → logprob: -4.192859649658203
    4. ']:' → logprob: -5.692859649658203
    5. '):' → logprob: -5.692859649658203
    6. '   ' → logprob: -6.192859649658203
    7. '):
' → logprob: -8.817859649658203
    8. '[List' → logprob: -9.192859649658203
    9. '[list' → logprob: -9.317859649658203
    10. ']:
' → logprob: -9.817859649658203

Token 464: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9110773205757141
    2. 'list' → logprob: -1.1610772609710693
    3. ' list' → logprob: -2.2860772609710693
    4. '[list' → logprob: -2.2860772609710693
    5. '[List' → logprob: -3.1610772609710693
    6. 'List' → logprob: -3.2860772609710693
    7. '[' → logprob: -8.286077499389648
    8. ' List' → logprob: -8.411077499389648
    9. ' [' → logprob: -8.536077499389648
    10. 'return' → logprob: -8.536077499389648

Token 465: '2' (ID: 17)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.04920673742890358
    2. 'list' → logprob: -3.7992067337036133
    3. '[List' → logprob: -3.7992067337036133
    4. '[' → logprob: -6.424206733703613
    5. 'return' → logprob: -7.049206733703613
    6. '[int' → logprob: -8.674206733703613
    7. 'List' → logprob: -8.924206733703613
    8. '[line' → logprob: -9.049206733703613
    9. '   ' → logprob: -9.174206733703613
    10. ' [' → logprob: -9.549206733703613

Token 466: 'D' (ID: 35)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.5077590942382812
    2. 'ist' → logprob: -1.7577590942382812
    3. '   ' → logprob: -1.8827590942382812
    4. '[List' → logprob: -3.0077590942382812
    5. '[' → logprob: -4.632759094238281
    6. '[list' → logprob: -5.507759094238281
    7. 'int' → logprob: -6.132759094238281
    8. ' list' → logprob: -6.257759094238281
    9. 'List' → logprob: -6.882759094238281
    10. 'nt' → logprob: -7.257759094238281

Token 467: ' list' (ID: 1562)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.02471463568508625
    2. '   ' → logprob: -4.524714469909668
    3. ' list' → logprob: -5.274714469909668
    4. 'int' → logprob: -5.774714469909668
    5. 'list' → logprob: -7.024714469909668
    6. '[
' → logprob: -7.149714469909668
    7. '[list' → logprob: -7.149714469909668
    8. '[List' → logprob: -7.399714469909668
    9. ' [' → logprob: -7.774714469909668
    10. '<int' → logprob: -7.774714469909668

Token 468: ' of' (ID: 328)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.49010324478149414
    2. ' of' → logprob: -1.3651032447814941
    3. '   ' → logprob: -2.365103244781494
    4. 'of' → logprob: -4.115103244781494
    5. '[[' → logprob: -5.240103244781494
    6. '[
' → logprob: -5.615103244781494
    7. '[List' → logprob: -5.615103244781494
    8. '
' → logprob: -5.990103244781494
    9. '[list' → logprob: -5.990103244781494
    10. ':' → logprob: -6.865103244781494

Token 469: ' integers' (ID: 54912)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20965959131717682
    2. 'ints' → logprob: -2.4596595764160156
    3. 'inte' → logprob: -2.9596595764160156
    4. 'lists' → logprob: -3.4596595764160156
    5. 'list' → logprob: -4.334659576416016
    6. '[int' → logprob: -5.334659576416016
    7. ' integers' → logprob: -7.084659576416016
    8. ' lists' → logprob: -7.334659576416016
    9. ' int' → logprob: -7.459659576416016
    10. 'integer' → logprob: -8.584659576416016

Token 470: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3483051657676697
    2. '(n' → logprob: -1.9733052253723145
    3. '[n' → logprob: -3.0983052253723145
    4. '
' → logprob: -3.2233052253723145
    5. 'for' → logprob: -3.8483052253723145
    6. ' =' → logprob: -4.5983052253723145
    7. '[I' → logprob: -4.7233052253723145
    8. 'def' → logprob: -5.3483052253723145
    9. '[' → logprob: -5.9733052253723145
    10. ' for' → logprob: -6.0983052253723145

Token 471: ' input' (ID: 3422)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.3641771078109741
    2. 'input' → logprob: -1.3641771078109741
    3. ' sys' → logprob: -3.7391772270202637
    4. ' input' → logprob: -4.864177227020264
    5. '(sys' → logprob: -5.364177227020264
    6. 'range' → logprob: -5.989177227020264
    7. '   ' → logprob: -6.114177227020264
    8. '[n' → logprob: -6.489177227020264
    9. '[int' → logprob: -6.489177227020264
    10. 'map' → logprob: -6.739177227020264

Token 472: '.
' (ID: 558)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0671246349811554
    2. ')' → logprob: -3.692124605178833
    3. ']' → logprob: -4.067124843597412
    4. '   ' → logprob: -4.442124843597412
    5. '):
' → logprob: -5.442124843597412
    6. ':
' → logprob: -6.942124843597412
    7. '[n' → logprob: -6.942124843597412
    8. '):' → logprob: -7.067124843597412
    9. '()' → logprob: -7.317124843597412
    10. '
' → logprob: -7.692124843597412

Token 473: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10249651223421097
    2. 'def' → logprob: -3.10249662399292
    3. '():
' → logprob: -3.85249662399292
    4. '):
' → logprob: -3.85249662399292
    5. '(n' → logprob: -5.60249662399292
    6. '"""
' → logprob: -6.47749662399292
    7. '
' → logprob: -6.97749662399292
    8. ')' → logprob: -6.97749662399292
    9. '```' → logprob: -7.22749662399292
    10. ':
' → logprob: -7.97749662399292

Token 474: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016535507515072823
    2. 'def' → logprob: -4.26653528213501
    3. '):
' → logprob: -7.26653528213501
    4. '"""
' (adapté à ' """
') → logprob: -7.39153528213501
    5. '```' → logprob: -7.64153528213501
    6. ')' → logprob: -7.89153528213501
    7. ':
' → logprob: -9.766535758972168
    8. ':' → logprob: -11.016535758972168
    9. '):' → logprob: -11.141535758972168
    10. '"""' → logprob: -11.141535758972168

Token 475: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00103352265432477
    2. 'def' → logprob: -7.251033306121826
    3. 'return' → logprob: -8.126033782958984
    4. ' return' → logprob: -10.626033782958984
    5. '
' → logprob: -13.376033782958984
    6. '	return' → logprob: -13.876033782958984
    7. '       ' → logprob: -15.251033782958984
    8. ' def' → logprob: -15.626033782958984
    9. '    
' → logprob: -15.751033782958984
    10. '    ' → logprob: -16.251033782958984

Token 476: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06382972002029419
    2. '   ' → logprob: -2.8138296604156494
    3. ' return' → logprob: -6.6888298988342285
    4. 'def' → logprob: -7.4388298988342285
    5. '
' → logprob: -10.81382942199707
    6. '[' → logprob: -12.56382942199707
    7. '	return' → logprob: -13.68882942199707
    8. '[]' → logprob: -14.56382942199707
    9. '    ' → logprob: -15.06382942199707
    10. '[
' → logprob: -15.18882942199707

Token 477: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7185778617858887
    2. '[list' → logprob: -0.7185778617858887
    3. '[L' → logprob: -3.7185778617858887
    4. '[List' → logprob: -7.218577861785889
    5. '[line' → logprob: -9.468578338623047
    6. ' [' → logprob: -11.093578338623047
    7. '[l' → logprob: -12.218578338623047
    8. '[int' → logprob: -12.718578338623047
    9. '[I' → logprob: -13.468578338623047
    10. '[len' → logprob: -13.593578338623047

Token 478: 'LI' (ID: 14313)
  Prédit: 'LI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.201456218957901
    2. 'list' → logprob: -1.7014561891555786
    3. 'li' → logprob: -10.826456069946289
    4. 'LIST' → logprob: -11.826456069946289
    5. ' LI' → logprob: -12.451456069946289
    6. ' list' → logprob: -12.576456069946289
    7. '[' → logprob: -12.826456069946289
    8. 'List' → logprob: -13.951456069946289
    9. '   ' → logprob: -14.201456069946289
    10. 'L' → logprob: -14.201456069946289

Token 479: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008860845118761063
    2. '(n' → logprob: -4.758861064910889
    3. '()]' → logprob: -8.50886058807373
    4. ' ()' → logprob: -10.88386058807373
    5. '(' → logprob: -11.38386058807373
    6. '()[' → logprob: -12.25886058807373
    7. '()
' → logprob: -12.38386058807373
    8. 'for' → logprob: -13.88386058807373
    9. '(i' → logprob: -13.88386058807373
    10. '())' → logprob: -13.88386058807373

Token 480: ' for' (ID: 395)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.000776038970798254
    2. 'for' → logprob: -7.2507758140563965
    3. ' for' → logprob: -10.000776290893555
    4. '(' → logprob: -11.375776290893555
    5. ' (' → logprob: -11.875776290893555
    6. '()' → logprob: -13.875776290893555
    7. '(i' → logprob: -14.375776290893555
    8. 'n' → logprob: -14.875776290893555
    9. ')' → logprob: -15.875776290893555
    10. '   ' → logprob: -16.625776290893555

Token 481: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0034343579318374395
    2. 'i' → logprob: -6.003434181213379
    3. '_i' → logprob: -7.003434181213379
    4. ' _' → logprob: -10.378434181213379
    5. ' i' → logprob: -11.003434181213379
    6. '_in' → logprob: -14.378434181213379
    7. '(i' → logprob: -15.128434181213379
    8. '_=' → logprob: -15.628434181213379
    9. ' in' → logprob: -15.878434181213379
    10. ' ' → logprob: -15.878434181213379

Token 482: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08915048092603683
    2. 'in' → logprob: -2.4641504287719727
    3. '(' → logprob: -9.339150428771973
    4. '(n' → logprob: -9.714150428771973
    5. 'n' → logprob: -11.089150428771973
    6. 'range' → logprob: -11.214150428771973
    7. ' i' → logprob: -11.714150428771973
    8. 'i' → logprob: -11.964150428771973
    9. ' (' → logprob: -12.214150428771973
    10. '(i' → logprob: -12.589150428771973

Token 483: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005530327325686812
    2. ' range' → logprob: -7.500553131103516
    3. '(range' → logprob: -18.000553131103516
    4. '	range' → logprob: -19.375553131103516
    5. ' ' → logprob: -21.750553131103516
    6. '   ' → logprob: -21.875553131103516
    7. '
' → logprob: -22.250553131103516
    8. '_' → logprob: -22.625553131103516
    9. '_range' → logprob: -23.125553131103516
    10. '  ' → logprob: -23.750553131103516

Token 484: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.023621266707777977
    2. 'n' → logprob: -3.7736213207244873
    3. '(' → logprob: -7.898621082305908
    4. '(
' → logprob: -13.023621559143066
    5. ' n' → logprob: -13.773621559143066
    6. 'range' → logprob: -14.273621559143066
    7. ' (' → logprob: -14.773621559143066
    8. ')n' → logprob: -16.27362060546875
    9. '	n' → logprob: -17.39862060546875
    10. '
' → logprob: -17.52362060546875

Token 485: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00014883324911352247
    2. ']' → logprob: -9.00014877319336
    3. '()]' → logprob: -10.75014877319336
    4. ')' → logprob: -13.37514877319336
    5. '   ' → logprob: -14.87514877319336
    6. '}]' → logprob: -14.87514877319336
    7. '(n' → logprob: -15.00014877319336
    8. '])]' → logprob: -15.00014877319336
    9. ')]
' → logprob: -15.75014877319336
    10. '')]' → logprob: -16.00014877319336

Token 486: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5305597186088562
    2. '<|end|>' → logprob: -1.280559778213501
    3. '
' → logprob: -2.155559778213501
    4. '#' → logprob: -4.780559539794922
    5. '<|end|>' → logprob: -5.030559539794922
    6. '

' → logprob: -6.280559539794922
    7. '```' → logprob: -7.405559539794922
    8. ')' → logprob: -8.780559539794922
    9. '()' → logprob: -10.030559539794922
    10. '[' → logprob: -10.405559539794922

Token 487: ' SR' (ID: 30704)
  Prédit: 'LS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LS' → logprob: -0.4712429642677307
    2. 'IR' → logprob: -1.846242904663086
    3. 'SR' → logprob: -2.096242904663086
    4. 'input' → logprob: -3.721242904663086
    5. 'LR' → logprob: -4.221242904663086
    6. 'RS' → logprob: -4.346242904663086
    7. 'L' → logprob: -4.596242904663086
    8. 'S' → logprob: -5.221242904663086
    9. 'main' → logprob: -5.596242904663086
    10. 'SI' → logprob: -5.721242904663086

Token 488: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.0445127372804563e-05
    2. 'def' → logprob: -12.25001049041748
    3. '(' → logprob: -13.00001049041748
    4. '():
' → logprob: -13.75001049041748
    5. ' (' → logprob: -14.25001049041748
    6. 'n' → logprob: -15.12501049041748
    7. '(size' → logprob: -15.12501049041748
    8. '(
' → logprob: -16.000009536743164
    9. '(N' → logprob: -16.000009536743164
    10. '(num' → logprob: -16.000009536743164

Token 489: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3134576678276062
    2. '):' → logprob: -1.313457727432251
    3. '(n' → logprob: -8.813457489013672
    4. '):
' → logprob: -10.688457489013672
    5. ')' → logprob: -10.813457489013672
    6. '):

' → logprob: -13.438457489013672
    7. 'def' → logprob: -13.688457489013672
    8. ':' → logprob: -14.063457489013672
    9. 'n' → logprob: -14.563457489013672
    10. ')n' → logprob: -16.563457489013672

Token 490: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.016098303720355034
    2. 'def' → logprob: -4.141098499298096
    3. 'n' → logprob: -10.016098022460938
    4. ' def' → logprob: -11.516098022460938
    5. 's' → logprob: -13.391098022460938
    6. '(def' → logprob: -13.391098022460938
    7. '```' → logprob: -13.516098022460938
    8. '(' → logprob: -13.641098022460938
    9. '(s' → logprob: -14.141098022460938
    10. '   ' → logprob: -14.516098022460938

Token 491: ' """
' (ID: 7037)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3981010317802429
    2. '(n' → logprob: -1.1481010913848877
    3. 'n' → logprob: -4.523100852966309
    4. ' def' → logprob: -8.898100852966309
    5. '   ' → logprob: -9.273100852966309
    6. '
' → logprob: -10.648100852966309
    7. '"""
' (adapté à ' """
') → logprob: -10.898100852966309
    8. '(
' → logprob: -11.273100852966309
    9. ' n' → logprob: -11.523100852966309
    10. '[n' → logprob: -12.773100852966309

Token 492: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5163171887397766
    2. 'def' → logprob: -1.5163171291351318
    3. '   ' → logprob: -2.016317129135132
    4. '"""
' → logprob: -3.016317129135132
    5. '(n' → logprob: -6.641317367553711
    6. '
' → logprob: -8.641317367553711
    7. '```' → logprob: -9.516317367553711
    8. ' n' → logprob: -11.266317367553711
    9. '"""' → logprob: -11.266317367553711
    10. '       ' → logprob: -11.516317367553711

Token 493: ' Reads' (ID: 88839)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.202070415019989
    2. '"""
' → logprob: -1.7020704746246338
    3. '"""' → logprob: -8.077070236206055
    4. ' def' → logprob: -8.702070236206055
    5. '   ' → logprob: -9.452070236206055
    6. '(n' → logprob: -10.452070236206055
    7. ''''
' → logprob: -10.952070236206055
    8. 'n' → logprob: -11.202070236206055
    9. '
' → logprob: -11.327070236206055
    10. 'Reads' (adapté à ' Reads') → logprob: -11.327070236206055

Token 494: ' '' (ID: 461)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02165612205862999
    2. '(n' → logprob: -3.896656036376953
    3. ' n' → logprob: -7.146656036376953
    4. 'def' → logprob: -8.271656036376953
    5. '[n' → logprob: -9.771656036376953
    6. 's' → logprob: -12.896656036376953
    7. '
' → logprob: -13.021656036376953
    8. 'lines' → logprob: -13.146656036376953
    9. '   ' → logprob: -13.396656036376953
    10. ' (' → logprob: -14.271656036376953

Token 495: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0011908221058547497
    2. '(n' → logprob: -6.751190662384033
    3. ' n' → logprob: -11.501191139221191
    4. '[n' → logprob: -12.501191139221191
    5. 'def' → logprob: -12.751191139221191
    6. 's' → logprob: -13.751191139221191
    7. '
' → logprob: -13.876191139221191
    8. 'sys' → logprob: -14.501191139221191
    9. 'lines' → logprob: -15.001191139221191
    10. ')n' → logprob: -15.751191139221191

Token 496: ''' (ID: 6)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03570970520377159
    2. '_lines' → logprob: -4.160709857940674
    3. '(lines' → logprob: -4.785709857940674
    4. '(' → logprob: -5.535709857940674
    5. ')' → logprob: -6.285709857940674
    6. 'def' → logprob: -6.410709857940674
    7. ' lines' → logprob: -6.660709857940674
    8. 'lines' → logprob: -7.535709857940674
    9. '_' → logprob: -7.910709857940674
    10. '   ' → logprob: -8.160709381103516

Token 497: ' lines' (ID: 8698)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.44199398159980774
    2. 'lines' → logprob: -1.4419939517974854
    3. 'def' → logprob: -2.9419939517974854
    4. '_lines' → logprob: -3.4419939517974854
    5. '(' → logprob: -4.1919941902160645
    6. ' lines' → logprob: -4.5669941902160645
    7. '(lines' → logprob: -5.1919941902160645
    8. '(
' → logprob: -5.8169941902160645
    9. 'Lines' → logprob: -7.0669941902160645
    10. 's' → logprob: -8.941993713378906

Token 498: ' from' (ID: 591)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2037915587425232
    2. 'def' → logprob: -1.828791618347168
    3. 'from' → logprob: -4.203791618347168
    4. '(' → logprob: -4.953791618347168
    5. 'for' → logprob: -7.953791618347168
    6. '   ' → logprob: -8.078791618347168
    7. '<|end|>' → logprob: -8.453791618347168
    8. '(
' → logprob: -8.578791618347168
    9. '(def' → logprob: -9.078791618347168
    10. '```' → logprob: -9.328791618347168

Token 499: ' input' (ID: 3422)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.017589986324310303
    2. ' sys' → logprob: -4.142590045928955
    3. 'standard' → logprob: -6.767590045928955
    4. 'range' → logprob: -8.142589569091797
    5. ' standard' → logprob: -9.642589569091797
    6. '(sys' → logprob: -11.267589569091797
    7. '   ' → logprob: -11.642589569091797
    8. ' range' → logprob: -11.642589569091797
    9. '=sys' → logprob: -12.392589569091797
    10. 'system' → logprob: -12.642589569091797

Token 500: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9036742448806763
    2. '(n' → logprob: -1.2786742448806763
    3. 'def' → logprob: -1.2786742448806763
    4. '(' → logprob: -3.7786741256713867
    5. '(sys' → logprob: -5.653674125671387
    6. '(
' → logprob: -5.903674125671387
    7. '(def' → logprob: -7.028674125671387
    8. ':' → logprob: -7.403674125671387
    9. ')' → logprob: -7.403674125671387
    10. '(stdin' → logprob: -7.403674125671387

Token 501: ' each' (ID: 2454)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1317092478275299
    2. '   ' → logprob: -2.131709337234497
    3. ' returning' → logprob: -6.006709098815918
    4. 'return' → logprob: -6.381709098815918
    5. ' def' → logprob: -8.631709098815918
    6. '
' → logprob: -9.006709098815918
    7. 's' → logprob: -9.506709098815918
    8. 'returns' → logprob: -10.256709098815918
    9. '#' → logprob: -10.256709098815918
    10. 'each' → logprob: -10.756709098815918

Token 502: ' as' (ID: 472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5503994226455688
    2. 'def' → logprob: -0.9253994226455688
    3. '```' → logprob: -4.800399303436279
    4. '()' → logprob: -5.175399303436279
    5. '=' → logprob: -5.925399303436279
    6. 's' → logprob: -6.050399303436279
    7. ')' → logprob: -6.675399303436279
    8. '().' → logprob: -7.425399303436279
    9. 'S' → logprob: -7.550399303436279
    10. ' def' → logprob: -7.675399303436279

Token 503: ' a' (ID: 261)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0650828629732132
    2. ' S' → logprob: -3.8150827884674072
    3. 'sys' → logprob: -3.9400827884674072
    4. '   ' → logprob: -4.065083026885986
    5. ' sys' → logprob: -6.440083026885986
    6. 'string' → logprob: -6.940083026885986
    7. 's' → logprob: -7.440083026885986
    8. 'a' → logprob: -8.440082550048828
    9. ' string' → logprob: -8.565082550048828
    10. 'def' → logprob: -8.690082550048828

Token 504: ' string' (ID: 1621)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6076425909996033
    2. 'string' → logprob: -0.8576425909996033
    3. 'list' → logprob: -4.232642650604248
    4. 'str' → logprob: -4.607642650604248
    5. 's' → logprob: -6.357642650604248
    6. 'sys' → logprob: -6.732642650604248
    7. '   ' → logprob: -7.232642650604248
    8. 'def' → logprob: -7.357642650604248
    9. ' string' → logprob: -7.357642650604248
    10. ' list' → logprob: -7.607642650604248

Token 505: '.

' (ID: 364)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.43900132179260254
    2. '()' → logprob: -1.4390013217926025
    3. 'def' → logprob: -2.6890013217926025
    4. '   ' → logprob: -3.3140013217926025
    5. '():' → logprob: -4.939001083374023
    6. '():
' → logprob: -7.314001083374023
    7. '.' → logprob: -7.314001083374023
    8. '()
' → logprob: -7.314001083374023
    9. ')' → logprob: -7.564001083374023
    10. '(' → logprob: -7.814001083374023

Token 506: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07816717028617859
    2. '   ' → logprob: -3.203167200088501
    3. '(n' → logprob: -3.453167200088501
    4. ' def' → logprob: -5.953166961669922
    5. '):
' → logprob: -8.953166961669922
    6. '(' → logprob: -9.578166961669922
    7. ':' → logprob: -10.328166961669922
    8. '(def' → logprob: -10.703166961669922
    9. ':
' → logprob: -10.828166961669922
    10. '```' → logprob: -11.578166961669922

Token 507: ' Args' (ID: 39185)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008856005035340786
    2. '   ' → logprob: -5.008855819702148
    3. ' def' → logprob: -6.508855819702148
    4. '(n' → logprob: -7.383855819702148
    5. '"""
' → logprob: -11.508855819702148
    6. '(' → logprob: -12.008855819702148
    7. '(def' → logprob: -12.633855819702148
    8. 'n' → logprob: -13.133855819702148
    9. '(
' → logprob: -13.508855819702148
    10. '```' → logprob: -14.133855819702148

Token 508: ':
' (ID: 734)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.43541181087493896
    2. 'def' → logprob: -1.185411810874939
    3. '   ' → logprob: -3.0604119300842285
    4. '):
' → logprob: -9.18541145324707
    5. ' def' → logprob: -9.31041145324707
    6. ':' → logprob: -9.56041145324707
    7. '```' → logprob: -9.68541145324707
    8. 'n' → logprob: -10.43541145324707
    9. '
' → logprob: -10.56041145324707
    10. ')' → logprob: -10.56041145324707

Token 509: '       ' (ID: 309)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6140917539596558
    2. '   ' → logprob: -0.8640917539596558
    3. 'def' → logprob: -3.9890918731689453
    4. '(n' → logprob: -4.239091873168945
    5. '       ' → logprob: -5.614091873168945
    6. '
' → logprob: -7.489091873168945
    7. ' n' → logprob: -8.864091873168945
    8. '```' → logprob: -10.239091873168945
    9. '    
' → logprob: -10.364091873168945
    10. '    ' → logprob: -10.989091873168945

Token 510: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -1.2664456789934775e-06
    2. ' n' → logprob: -14.250000953674316
    3. 'def' → logprob: -14.750000953674316
    4. '(n' → logprob: -16.250001907348633
    5. '	n' → logprob: -17.250001907348633
    6. '   ' → logprob: -17.375001907348633
    7. '
' → logprob: -17.875001907348633
    8. 'ndef' → logprob: -18.875001907348633
    9. '```' → logprob: -19.250001907348633
    10. 'int' → logprob: -19.750001907348633

Token 511: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2634992003440857
    2. '):' → logprob: -2.0134992599487305
    3. '):
' → logprob: -2.5134992599487305
    4. ':int' → logprob: -4.6384992599487305
    5. '   ' → logprob: -5.7634992599487305
    6. ')' → logprob: -7.0134992599487305
    7. '(int' → logprob: -7.0134992599487305
    8. ' (' → logprob: -7.1384992599487305
    9. '(n' → logprob: -7.5134992599487305
    10. ':
' → logprob: -7.6384992599487305

Token 512: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.700132997939363e-05
    2. 'n' → logprob: -11.000017166137695
    3. ' int' → logprob: -16.125017166137695
    4. ')' → logprob: -16.250017166137695
    5. ':int' → logprob: -16.875017166137695
    6. '(int' → logprob: -17.250017166137695
    7. '   ' → logprob: -18.625017166137695
    8. '=int' → logprob: -18.875017166137695
    9. '):
' → logprob: -19.000017166137695
    10. '):' → logprob: -19.250017166137695

Token 513: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16074924170970917
    2. '):
' → logprob: -1.9107491970062256
    3. ')' → logprob: -8.035749435424805
    4. ':' → logprob: -8.660749435424805
    5. '):
' → logprob: -11.035749435424805
    6. '):

' → logprob: -12.535749435424805
    7. '   ' → logprob: -12.535749435424805
    8. '=None' → logprob: -14.035749435424805
    9. ':int' → logprob: -14.160749435424805
    10. '=' → logprob: -14.160749435424805

Token 514: ' Number' (ID: 9184)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0034235394559800625
    2. '   ' → logprob: -6.253423690795898
    3. 'def' → logprob: -7.003423690795898
    4. '(int' → logprob: -8.628423690795898
    5. ' int' → logprob: -8.878423690795898
    6. 'n' → logprob: -9.003423690795898
    7. 'Number' → logprob: -10.253423690795898
    8. '[int' → logprob: -10.253423690795898
    9. 'number' → logprob: -10.878423690795898
    10. '```' → logprob: -11.378423690795898

Token 515: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2702722549438477
    2. ' of' → logprob: -2.0202722549438477
    3. 'lines' → logprob: -2.3952722549438477
    4. '(n' → logprob: -2.6452722549438477
    5. '_lines' → logprob: -2.6452722549438477
    6. '=n' → logprob: -2.7702722549438477
    7. ' lines' → logprob: -2.8952722549438477
    8. 'of' → logprob: -3.1452722549438477
    9. ':' → logprob: -3.2702722549438477
    10. ')' → logprob: -3.5202722549438477

Token 516: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.06650210171937943
    2. 'strings' → logprob: -2.816502094268799
    3. 'str' → logprob: -5.691502094268799
    4. ' lines' → logprob: -7.441502094268799
    5. 'input' → logprob: -8.816502571105957
    6. '_lines' → logprob: -8.941502571105957
    7. ')' → logprob: -9.441502571105957
    8. 's' → logprob: -10.316502571105957
    9. '(lines' → logprob: -10.316502571105957
    10. '_strings' → logprob: -10.566502571105957

Token 517: ' to' (ID: 316)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8689038753509521
    2. 'def' → logprob: -1.1189038753509521
    3. '):' → logprob: -2.118903875350952
    4. '(n' → logprob: -2.618903875350952
    5. '=' → logprob: -3.243903875350952
    6. ':' → logprob: -5.118904113769531
    7. '   ' → logprob: -5.118904113769531
    8. '=None' → logprob: -6.243904113769531
    9. ' def' → logprob: -6.368904113769531
    10. ')' → logprob: -6.493904113769531

Token 518: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.0016916078748181462
    2. ' read' → logprob: -6.501691818237305
    3. '_read' → logprob: -8.751691818237305
    4. 'input' → logprob: -11.376691818237305
    5. 'range' → logprob: -12.001691818237305
    6. 'write' → logprob: -12.501691818237305
    7. 'return' → logprob: -13.001691818237305
    8. 'int' → logprob: -13.126691818237305
    9. ')' → logprob: -13.501691818237305
    10. '
' → logprob: -14.251691818237305

Token 519: '.

' (ID: 364)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6251182556152344
    2. '):
' → logprob: -0.8751182556152344
    3. ')' → logprob: -3.3751182556152344
    4. '   ' → logprob: -4.375118255615234
    5. 'def' → logprob: -7.250118255615234
    6. '(n' → logprob: -8.375118255615234
    7. '):
' → logprob: -8.500118255615234
    8. ':' → logprob: -11.000118255615234
    9. 'n' → logprob: -11.375118255615234
    10. '):

' → logprob: -12.875118255615234

Token 520: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025558851659297943
    2. 'def' → logprob: -4.150558948516846
    3. ')' → logprob: -4.900558948516846
    4. '):
' → logprob: -6.650558948516846
    5. '```' → logprob: -8.650558471679688
    6. '<|end|>' → logprob: -8.650558471679688
    7. '"""
' → logprob: -8.900558471679688
    8. ' def' → logprob: -9.525558471679688
    9. '):' → logprob: -9.650558471679688
    10. ')
' → logprob: -10.150558471679688

Token 521: ' Returns' (ID: 9609)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2040829062461853
    2. '   ' → logprob: -1.70408296585083
    3. ' def' → logprob: -6.95408296585083
    4. 'Returns' (adapté à ' Returns') → logprob: -7.32908296585083
    5. '"""
' → logprob: -7.95408296585083
    6. '
' → logprob: -7.95408296585083
    7. '```' → logprob: -8.204082489013672
    8. '``' → logprob: -11.329082489013672
    9. 'Return' → logprob: -11.454082489013672
    10. 'return' → logprob: -11.579082489013672

Token 522: ':
' (ID: 734)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.1434508562088013
    2. '   ' → logprob: -1.3934508562088013
    3. '(S' → logprob: -2.0184507369995117
    4. '[n' → logprob: -2.1434507369995117
    5. ' [' → logprob: -2.8934507369995117
    6. '[' → logprob: -3.5184507369995117
    7. ' (' → logprob: -3.5184507369995117
    8. '[S' → logprob: -3.8934507369995117
    9. 'def' → logprob: -4.143450736999512
    10. 'S' → logprob: -5.268450736999512

Token 523: '       ' (ID: 309)
  Prédit: '[S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[S' → logprob: -0.21658506989479065
    2. '[' → logprob: -1.7165850400924683
    3. '[s' → logprob: -4.716585159301758
    4. ' [' → logprob: -5.341585159301758
    5. '[str' → logprob: -7.841585159301758
    6. '   ' → logprob: -7.841585159301758
    7. '[String' → logprob: -8.091585159301758
    8. '[string' → logprob: -9.341585159301758
    9. '[self' → logprob: -11.216585159301758
    10. '[n' → logprob: -11.341585159301758

Token 524: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.17756164073944092
    2. '[S' → logprob: -1.927561640739441
    3. '[s' → logprob: -4.8025617599487305
    4. '[list' → logprob: -5.4275617599487305
    5. '[str' → logprob: -5.8025617599487305
    6. '[string' → logprob: -7.5525617599487305
    7. '[List' → logprob: -7.8025617599487305
    8. ' [' → logprob: -8.42756175994873
    9. '[String' → logprob: -8.67756175994873
    10. '[self' → logprob: -9.92756175994873

Token 525: ' of' (ID: 328)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.22739852964878082
    2. ' of' → logprob: -2.227398633956909
    3. 'of' → logprob: -2.352398633956909
    4. '   ' → logprob: -8.352398872375488
    5. '[' → logprob: -9.477398872375488
    6. '```' → logprob: -10.102398872375488
    7. '(str' → logprob: -10.227398872375488
    8. 'def' → logprob: -10.852398872375488
    9. 'Of' → logprob: -11.352398872375488
    10. '
' → logprob: -11.977398872375488

Token 526: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.034277621656656265
    2. '[str' → logprob: -3.7842776775360107
    3. 'S' → logprob: -4.534277439117432
    4. 's' → logprob: -9.15927791595459
    5. 'sys' → logprob: -9.53427791595459
    6. 'string' → logprob: -10.78427791595459
    7. ' str' → logprob: -11.28427791595459
    8. 'strings' → logprob: -11.28427791595459
    9. '[string' → logprob: -12.65927791595459
    10. '
' → logprob: -12.65927791595459

Token 527: ':' (ID: 25)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.20502153038978577
    2. '   ' → logprob: -3.205021619796753
    3. '[' → logprob: -3.580021619796753
    4. ':' → logprob: -3.955021619796753
    5. 'def' → logprob: -3.955021619796753
    6. '[str' → logprob: -4.205021381378174
    7. '[n' → logprob: -4.455021381378174
    8. ' =' → logprob: -4.580021381378174
    9. ' for' → logprob: -5.080021381378174
    10. ']' → logprob: -5.580021381378174

Token 528: ' List' (ID: 2655)
  Prédit: '[S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[S' → logprob: -0.08840732276439667
    2. '[' → logprob: -3.088407278060913
    3. '[s' → logprob: -4.088407516479492
    4. ' [' → logprob: -4.338407516479492
    5. 'S' → logprob: -5.713407516479492
    6. '[String' → logprob: -6.588407516479492
    7. '[str' → logprob: -6.713407516479492
    8. '[string' → logprob: -7.213407516479492
    9. '[i' → logprob: -7.338407516479492
    10. '[I' → logprob: -7.838407516479492

Token 529: ' of' (ID: 328)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.5432007312774658
    2. ' of' → logprob: -1.7932007312774658
    3. '(' → logprob: -1.9182007312774658
    4. 'of' → logprob: -2.668200731277466
    5. '(n' → logprob: -4.668200492858887
    6. '(
' → logprob: -5.043200492858887
    7. '(S' → logprob: -5.168200492858887
    8. '   ' → logprob: -5.668200492858887
    9. '_of' → logprob: -5.793200492858887
    10. '[str' → logprob: -6.418200492858887

Token 530: ' input' (ID: 3422)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0388505645096302
    2. 'strings' → logprob: -3.7888505458831787
    3. 'sys' → logprob: -4.538850784301758
    4. 'input' → logprob: -5.413850784301758
    5. 's' → logprob: -9.288850784301758
    6. ' S' → logprob: -9.413850784301758
    7. 'string' → logprob: -9.413850784301758
    8. ' strings' → logprob: -9.663850784301758
    9. 'str' → logprob: -11.413850784301758
    10. ' input' → logprob: -12.288850784301758

Token 531: ' strings' (ID: 18279)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.13036476075649261
    2. 'strings' → logprob: -3.0053646564483643
    3. '_strings' → logprob: -3.2553646564483643
    4. 'lines' → logprob: -5.005364894866943
    5. '()' → logprob: -5.255364894866943
    6. '[str' → logprob: -5.505364894866943
    7. '[' → logprob: -5.755364894866943
    8. '_lines' → logprob: -5.755364894866943
    9. '(' → logprob: -6.255364894866943
    10. '```' → logprob: -6.380364894866943

Token 532: '.
' (ID: 558)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.17434459924697876
    2. '   ' → logprob: -2.924344539642334
    3. 'def' → logprob: -3.049344539642334
    4. 'for' → logprob: -3.924344539642334
    5. '(' → logprob: -4.299344539642334
    6. ' for' → logprob: -4.549344539642334
    7. '=' → logprob: -5.049344539642334
    8. ')' → logprob: -5.924344539642334
    9. ' =' → logprob: -6.549344539642334
    10. ']' → logprob: -7.424344539642334

Token 533: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10090479999780655
    2. 'def' → logprob: -2.350904703140259
    3. '(n' → logprob: -8.10090446472168
    4. ' def' → logprob: -8.72590446472168
    5. '(' → logprob: -9.47590446472168
    6. '	return' → logprob: -10.97590446472168
    7. ' return' → logprob: -11.10090446472168
    8. '(S' → logprob: -11.22590446472168
    9. '```' → logprob: -11.22590446472168
    10. 'return' → logprob: -11.47590446472168

Token 534: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004549626726657152
    2. 'def' → logprob: -5.504549503326416
    3. '"""
' (adapté à ' """
') → logprob: -8.754549980163574
    4. 'return' → logprob: -9.004549980163574
    5. ')' → logprob: -9.379549980163574
    6. '```' → logprob: -10.004549980163574
    7. ' return' → logprob: -10.504549980163574
    8. '"""' → logprob: -11.379549980163574
    9. ']' → logprob: -12.129549980163574
    10. '	return' → logprob: -12.754549980163574

Token 535: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1681232452392578
    2. 'def' → logprob: -1.9181232452392578
    3. 'return' → logprob: -4.918123245239258
    4. ' return' → logprob: -7.543123245239258
    5. ' def' → logprob: -11.293123245239258
    6. '	return' → logprob: -12.293123245239258
    7. '
' → logprob: -12.668123245239258
    8. '```' → logprob: -13.793123245239258
    9. '  ' → logprob: -13.918123245239258
    10. ' ' → logprob: -14.043123245239258

Token 536: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -1.4855663721391466e-05
    2. ' return' → logprob: -11.625015258789062
    3. '   ' → logprob: -12.125015258789062
    4. '[s' → logprob: -15.500015258789062
    5. 'def' → logprob: -16.375015258789062
    6. '[' → logprob: -16.625015258789062
    7. '
' → logprob: -16.750015258789062
    8. '[S' → logprob: -16.750015258789062
    9. 'sys' → logprob: -18.250015258789062
    10. 's' → logprob: -18.750015258789062

Token 537: ' [' (ID: 723)
  Prédit: '[S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[S' → logprob: -0.47475793957710266
    2. '[' → logprob: -0.9747579097747803
    3. '[s' → logprob: -7.974758148193359
    4. '[I' → logprob: -8.59975814819336
    5. ' [' → logprob: -9.72475814819336
    6. '[String' → logprob: -10.09975814819336
    7. '[str' → logprob: -10.47475814819336
    8. '[i' → logprob: -12.34975814819336
    9. '[line' → logprob: -12.59975814819336
    10. '[int' → logprob: -12.97475814819336

Token 538: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.000297685619443655
    2. 'sys' → logprob: -8.125297546386719
    3. 's' → logprob: -14.000297546386719
    4. ' S' → logprob: -14.875297546386719
    5. 'input' → logprob: -15.125297546386719
    6. 'str' → logprob: -17.00029754638672
    7. 'Sys' → logprob: -17.75029754638672
    8. '```' → logprob: -18.62529754638672
    9. 'Ｓ' → logprob: -18.87529754638672
    10. 'string' → logprob: -19.37529754638672

Token 539: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00015133652777876705
    2. '(n' → logprob: -9.125151634216309
    3. '(' → logprob: -10.875151634216309
    4. ' ()' → logprob: -11.750151634216309
    5. '()]' → logprob: -12.375151634216309
    6. '().' → logprob: -12.375151634216309
    7. 'for' → logprob: -12.500151634216309
    8. '(i' → logprob: -13.000151634216309
    9. '()
' → logprob: -14.625151634216309
    10. '()[' → logprob: -15.375151634216309

Token 540: ' for' (ID: 395)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.010924499481916428
    2. '()' → logprob: -4.760924339294434
    3. 'for' → logprob: -6.385924339294434
    4. '(' → logprob: -7.760924339294434
    5. '(i' → logprob: -8.760924339294434
    6. ' for' → logprob: -10.260924339294434
    7. ' (' → logprob: -12.635924339294434
    8. '(for' → logprob: -14.760924339294434
    9. ' ()' → logprob: -15.760924339294434
    10. 'n' → logprob: -15.760924339294434

Token 541: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5778472423553467
    2. 'i' → logprob: -0.8278472423553467
    3. '_i' → logprob: -6.327847480773926
    4. ' i' → logprob: -9.327847480773926
    5. ' _' → logprob: -10.452847480773926
    6. '	i' → logprob: -14.452847480773926
    7. ' ' → logprob: -14.827847480773926
    8. '   ' → logprob: -15.077847480773926
    9. 'in' → logprob: -15.077847480773926
    10. ' in' → logprob: -15.327847480773926

Token 542: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4290885627269745
    2. 'in' → logprob: -1.0540885925292969
    3. 'i' → logprob: -9.304088592529297
    4. '_' → logprob: -9.429088592529297
    5. 'n' → logprob: -9.429088592529297
    6. '(' → logprob: -9.554088592529297
    7. ' ' → logprob: -10.804088592529297
    8. 'range' → logprob: -11.429088592529297
    9. '(n' → logprob: -11.554088592529297
    10. '_in' → logprob: -12.179088592529297

Token 543: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00033546582562848926
    2. ' range' → logprob: -8.000335693359375
    3. '(range' → logprob: -17.625335693359375
    4. '   ' → logprob: -19.875335693359375
    5. '	range' → logprob: -20.375335693359375
    6. '
' → logprob: -21.000335693359375
    7. ' ' → logprob: -21.375335693359375
    8. '    ' → logprob: -22.625335693359375
    9. '  ' → logprob: -23.125335693359375
    10. '```' → logprob: -23.750335693359375

Token 544: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04752586781978607
    2. '(n' → logprob: -3.5475258827209473
    3. 'n' → logprob: -4.047525882720947
    4. ' range' → logprob: -8.922525405883789
    5. '(' → logprob: -11.672525405883789
    6. 'in' → logprob: -11.922525405883789
    7. '(range' → logprob: -12.547525405883789
    8. '
' → logprob: -15.672525405883789
    9. '_' → logprob: -16.04752540588379
    10. '_range' → logprob: -16.17252540588379

Token 545: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00010354319238103926
    2. ')' → logprob: -9.500103950500488
    3. '(n' → logprob: -11.125103950500488
    4. ']' → logprob: -12.000103950500488
    5. 'n' → logprob: -12.250103950500488
    6. ')],' → logprob: -14.125103950500488
    7. ')n' → logprob: -14.750103950500488
    8. '(' → logprob: -15.125103950500488
    9. '()]' → logprob: -15.125103950500488
    10. ')].' → logprob: -15.250103950500488

Token 546: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09981328994035721
    2. '<|end|>' → logprob: -2.724813222885132
    3. '
' → logprob: -4.099813461303711
    4. '#' → logprob: -4.474813461303711
    5. '<|end|>' → logprob: -7.099813461303711
    6. '```' → logprob: -7.974813461303711
    7. ')' → logprob: -8.974813461303711
    8. '

' → logprob: -9.349813461303711
    9. ']' → logprob: -11.474813461303711
    10. '"""' → logprob: -11.724813461303711

Token 547: ' L' (ID: 451)
  Prédit: 'LS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LS' → logprob: -0.914524495601654
    2. 'L' → logprob: -2.164524555206299
    3. 'I' → logprob: -2.539524555206299
    4. 'IR' → logprob: -2.664524555206299
    5. 'WS' → logprob: -2.789524555206299
    6. 'main' → logprob: -2.914524555206299
    7. 'MS' → logprob: -3.164524555206299
    8. 'LR' → logprob: -3.289524555206299
    9. 'LI' → logprob: -3.414524555206299
    10. 'M' → logprob: -4.289524555206299

Token 548: 'SR' (ID: 22892)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.014254359528422356
    2. 'S' → logprob: -4.764254570007324
    3. 'ist' → logprob: -6.764254570007324
    4. '=[]' → logprob: -6.764254570007324
    5. 'R' → logprob: -7.264254570007324
    6. 'ambda' → logprob: -7.389254570007324
    7. 'i' → logprob: -8.139254570007324
    8. 'def' → logprob: -8.389254570007324
    9. 'SI' → logprob: -8.639254570007324
    10. '()' → logprob: -9.014254570007324

Token 549: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -8.065608562901616e-05
    2. '(' → logprob: -9.875081062316895
    3. 'def' → logprob: -10.625081062316895
    4. ' (' → logprob: -13.125081062316895
    5. '<|end|>' → logprob: -14.000081062316895
    6. 'n' → logprob: -15.000081062316895
    7. '<|end|>' → logprob: -15.125081062316895
    8. '(
' → logprob: -15.500081062316895
    9. '(N' → logprob: -15.625081062316895
    10. '(num' → logprob: -15.750081062316895

Token 550: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2979682981967926
    2. '(n' → logprob: -1.4229682683944702
    3. '):
' → logprob: -4.17296838760376
    4. 'def' → logprob: -7.42296838760376
    5. ')' → logprob: -7.92296838760376
    6. '():' → logprob: -8.422967910766602
    7. 'n' → logprob: -11.297967910766602
    8. '():
' → logprob: -11.422967910766602
    9. ' ):' → logprob: -11.547967910766602
    10. '(' → logprob: -11.547967910766602

Token 551: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.001350234029814601
    2. 'def' → logprob: -7.251350402832031
    3. '(' → logprob: -7.501350402832031
    4. '(
' → logprob: -9.751350402832031
    5. ':' → logprob: -11.376350402832031
    6. '   ' → logprob: -12.001350402832031
    7. 'n' → logprob: -12.126350402832031
    8. ' def' → logprob: -12.876350402832031
    9. '(def' → logprob: -13.501350402832031
    10. ':
' → logprob: -14.626350402832031

Token 552: ' """
' (ID: 7037)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1175038143992424
    2. '(n' → logprob: -2.3675038814544678
    3. '   ' → logprob: -4.117503643035889
    4. ' def' → logprob: -7.742503643035889
    5. 'n' → logprob: -8.617504119873047
    6. '(' → logprob: -9.617504119873047
    7. '(
' → logprob: -9.742504119873047
    8. '[n' → logprob: -10.242504119873047
    9. '"""
' (adapté à ' """
') → logprob: -10.242504119873047
    10. '[
' → logprob: -11.117504119873047

Token 553: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.030768124386668205
    2. '   ' → logprob: -3.6557681560516357
    3. ' def' → logprob: -6.030767917633057
    4. '(n' → logprob: -6.280767917633057
    5. 'n' → logprob: -9.030768394470215
    6. '"""
' → logprob: -11.030768394470215
    7. '
' → logprob: -11.405768394470215
    8. '```' → logprob: -12.030768394470215
    9. '(def' → logprob: -12.405768394470215
    10. '  ' → logprob: -12.405768394470215

Token 554: ' Reads' (ID: 88839)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008485971949994564
    2. '"""
' → logprob: -5.008485794067383
    3. '   ' → logprob: -6.758485794067383
    4. '(n' → logprob: -7.633485794067383
    5. ' def' → logprob: -9.883485794067383
    6. 'LS' → logprob: -11.258485794067383
    7. ''''
' → logprob: -11.258485794067383
    8. '"""' → logprob: -11.383485794067383
    9. '
' → logprob: -11.758485794067383
    10. '(
' → logprob: -12.133485794067383

Token 555: ' '' (ID: 461)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.15695762634277344
    2. 'n' → logprob: -2.1569576263427734
    3. 'def' → logprob: -3.5319576263427734
    4. '[n' → logprob: -8.156957626342773
    5. ' n' → logprob: -10.531957626342773
    6. '   ' → logprob: -12.031957626342773
    7. '```' → logprob: -12.531957626342773
    8. 'LS' → logprob: -12.906957626342773
    9. '	n' → logprob: -13.156957626342773
    10. '(' → logprob: -13.531957626342773

Token 556: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00017016702622640878
    2. '(n' → logprob: -8.75016975402832
    3. ' n' → logprob: -12.25016975402832
    4. 'int' → logprob: -12.37516975402832
    5. 'def' → logprob: -13.12516975402832
    6. '[n' → logprob: -15.37516975402832
    7. ')n' → logprob: -16.00016975402832
    8. 's' → logprob: -16.50016975402832
    9. '	n' → logprob: -16.50016975402832
    10. '```' → logprob: -17.12516975402832

Token 557: ''' (ID: 6)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.002443073783069849
    2. 'def' → logprob: -6.377442836761475
    3. '(' → logprob: -7.877442836761475
    4. ' (' → logprob: -8.877443313598633
    5. '_lines' → logprob: -10.002443313598633
    6. '(lines' → logprob: -10.252443313598633
    7. ' def' → logprob: -10.377443313598633
    8. '```' → logprob: -10.877443313598633
    9. ')' → logprob: -11.252443313598633
    10. ' lines' → logprob: -11.377443313598633

Token 558: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -1.0658230781555176
    2. 'lines' → logprob: -1.5658230781555176
    3. '(n' → logprob: -1.6908230781555176
    4. '_lines' → logprob: -1.9408230781555176
    5. '(lines' → logprob: -2.8158230781555176
    6. 'def' → logprob: -3.1908230781555176
    7. 'Lines' → logprob: -4.440823078155518
    8. '()' → logprob: -6.565823078155518
    9. '_LINES' → logprob: -6.815823078155518
    10. '(
' → logprob: -7.565823078155518

Token 559: ' from' (ID: 591)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2484634965658188
    2. 'def' → logprob: -1.62346351146698
    3. '(' → logprob: -4.4984636306762695
    4. 'from' → logprob: -4.7484636306762695
    5. 'for' → logprob: -6.7484636306762695
    6. '   ' → logprob: -7.7484636306762695
    7. '(def' → logprob: -8.62346363067627
    8. '```' → logprob: -8.62346363067627
    9. '(
' → logprob: -8.87346363067627
    10. '<|end|>' → logprob: -9.12346363067627

Token 560: ' input' (ID: 3422)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.03936941921710968
    2. 'input' → logprob: -3.5393693447113037
    3. '(sys' → logprob: -5.914369583129883
    4. 'def' → logprob: -5.914369583129883
    5. 'LS' → logprob: -6.039369583129883
    6. ' sys' → logprob: -7.289369583129883
    7. 'lambda' → logprob: -8.289369583129883
    8. 'strings' → logprob: -8.789369583129883
    9. 'string' → logprob: -8.914369583129883
    10. 's' → logprob: -9.289369583129883

Token 561: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.10689853876829147
    2. 'def' → logprob: -2.481898546218872
    3. 'for' → logprob: -4.856898307800293
    4. '   ' → logprob: -5.356898307800293
    5. ' for' → logprob: -5.856898307800293
    6. '(' → logprob: -6.856898307800293
    7. '(def' → logprob: -7.731898307800293
    8. ' def' → logprob: -7.981898307800293
    9. ' (' → logprob: -8.356898307800293
    10. ',' → logprob: -8.981898307800293

Token 562: ' each' (ID: 2454)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.016098421066999435
    2. 'each' → logprob: -4.641098499298096
    3. '   ' → logprob: -6.016098499298096
    4. ' def' → logprob: -6.266098499298096
    5. ' each' → logprob: -6.516098499298096
    6. '
' → logprob: -8.016098022460938
    7. 'return' → logprob: -9.766098022460938
    8. 'lambda' → logprob: -10.266098022460938
    9. 'n' → logprob: -10.641098022460938
    10. 'with' → logprob: -11.516098022460938

Token 563: ' as' (ID: 472)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2612258791923523
    2. ' as' → logprob: -2.011225938796997
    3. 'as' → logprob: -2.761225938796997
    4. '   ' → logprob: -4.636225700378418
    5. '=' → logprob: -4.886225700378418
    6. '=lambda' → logprob: -5.136225700378418
    7. ' def' → logprob: -5.636225700378418
    8. ')' → logprob: -7.136225700378418
    9. ' for' → logprob: -7.386225700378418
    10. ' =' → logprob: -7.386225700378418

Token 564: ' a' (ID: 261)
  Prédit: 'LS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LS' → logprob: -0.06691505014896393
    2. 'list' → logprob: -3.9419150352478027
    3. ' LS' → logprob: -4.066915035247803
    4. 'a' → logprob: -4.816915035247803
    5. '   ' → logprob: -4.816915035247803
    6. 'S' → logprob: -5.816915035247803
    7. ' list' → logprob: -6.066915035247803
    8. 'sys' → logprob: -6.316915035247803
    9. 'strings' → logprob: -6.441915035247803
    10. ' a' → logprob: -6.691915035247803

Token 565: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.4848904013633728
    2. 'string' → logprob: -1.1098904609680176
    3. ' list' → logprob: -3.3598904609680176
    4. 'S' → logprob: -4.484890460968018
    5. ' string' → logprob: -5.484890460968018
    6. 'LS' → logprob: -6.234890460968018
    7. 'str' → logprob: -6.359890460968018
    8. 'split' → logprob: -8.73488998413086
    9. 's' → logprob: -8.98488998413086
    10. 'strings' → logprob: -8.98488998413086

Token 566: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.22601322829723358
    2. ' of' → logprob: -1.97601318359375
    3. '[int' → logprob: -4.10101318359375
    4. '[' → logprob: -4.47601318359375
    5. 'def' → logprob: -4.85101318359375
    6. '_of' → logprob: -5.10101318359375
    7. '[list' → logprob: -5.35101318359375
    8. '   ' → logprob: -5.72601318359375
    9. '[List' → logprob: -5.72601318359375
    10. '[str' → logprob: -5.85101318359375

Token 567: ' strings' (ID: 18279)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.008655226789414883
    2. 'strings' → logprob: -4.758655071258545
    3. 'string' → logprob: -11.133655548095703
    4. '[str' → logprob: -11.258655548095703
    5. 'list' → logprob: -11.633655548095703
    6. ' str' → logprob: -13.008655548095703
    7. '(str' → logprob: -14.008655548095703
    8. ' strings' → logprob: -14.133655548095703
    9. 's' → logprob: -16.008655548095703
    10. 'lists' → logprob: -16.133655548095703

Token 568: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.02755715698003769
    2. 'def' → logprob: -4.027557373046875
    3. 'for' → logprob: -5.277557373046875
    4. '   ' → logprob: -5.652557373046875
    5. ' for' → logprob: -7.902557373046875
    6. '(' → logprob: -8.652557373046875
    7. ' (' → logprob: -8.902557373046875
    8. '```' → logprob: -10.902557373046875
    9. '(for' → logprob: -11.777557373046875
    10. ')' → logprob: -11.777557373046875

Token 569: 'split' (ID: 13627)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3158024251461029
    2. 'n' → logprob: -1.4408024549484253
    3. 'for' → logprob: -3.8158023357391357
    4. ')' → logprob: -5.065802574157715
    5. '   ' → logprob: -5.690802574157715
    6. '):
' → logprob: -7.190802574157715
    7. '(n' → logprob: -7.190802574157715
    8. '```' → logprob: -8.440802574157715
    9. ')n' → logprob: -8.690802574157715
    10. ' for' → logprob: -8.940802574157715

Token 570: ' by' (ID: 656)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.21384717524051666
    2. 'def' → logprob: -2.2138471603393555
    3. '()]' → logprob: -3.0888471603393555
    4. '())' → logprob: -3.9638471603393555
    5. '()[' → logprob: -5.0888471603393555
    6. ')' → logprob: -5.7138471603393555
    7. '   ' → logprob: -6.3388471603393555
    8. 'for' → logprob: -6.4638471603393555
    9. '().' → logprob: -6.9638471603393555
    10. '()][' → logprob: -7.0888471603393555

Token 571: ' whitespace' (ID: 83606)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.949219822883606
    2. '()' → logprob: -1.449219822883606
    3. ' whitespace' → logprob: -1.824219822883606
    4. 'wh' → logprob: -2.0742197036743164
    5. '   ' → logprob: -3.8242197036743164
    6. ''' → logprob: -4.074219703674316
    7. '(' → logprob: -4.199219703674316
    8. 'space' → logprob: -4.574219703674316
    9. '()
' → logprob: -4.699219703674316
    10. 'newline' → logprob: -5.574219703674316

Token 572: ').

' (ID: 3991)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6656849384307861
    2. '   ' → logprob: -1.6656849384307861
    3. '):' → logprob: -2.415684938430786
    4. ').' → logprob: -2.415684938430786
    5. 'def' → logprob: -2.665684938430786
    6. ')' → logprob: -3.415684938430786
    7. '(n' → logprob: -4.915684700012207
    8. ').
' → logprob: -5.415684700012207
    9. ')
' → logprob: -6.165684700012207
    10. '):

' → logprob: -7.540684700012207

Token 573: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3544830083847046
    2. '(n' → logprob: -1.3544830083847046
    3. '   ' → logprob: -3.229483127593994
    4. ' def' → logprob: -7.479483127593994
    5. '```' → logprob: -9.604482650756836
    6. '(' → logprob: -10.104482650756836
    7. '(def' → logprob: -10.354482650756836
    8. '
' → logprob: -10.354482650756836
    9. '[n' → logprob: -11.229482650756836
    10. '(
' → logprob: -11.229482650756836

Token 574: ' Args' (ID: 39185)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0008519167313352227
    2. '   ' → logprob: -7.250852108001709
    3. ' def' → logprob: -9.62585163116455
    4. '(n' → logprob: -10.12585163116455
    5. 'return' → logprob: -10.37585163116455
    6. '```' → logprob: -12.87585163116455
    7. 'n' → logprob: -13.50085163116455
    8. ' return' → logprob: -15.25085163116455
    9. '
' → logprob: -15.75085163116455
    10. '``' → logprob: -16.000852584838867

Token 575: ':
' (ID: 734)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.032813604921102524
    2. 'def' → logprob: -4.407813549041748
    3. '   ' → logprob: -4.532813549041748
    4. '(
' → logprob: -5.032813549041748
    5. '(' → logprob: -6.907813549041748
    6. ':' → logprob: -8.157814025878906
    7. '=' → logprob: -8.282814025878906
    8. '):
' → logprob: -8.407814025878906
    9. ')(
' → logprob: -8.407814025878906
    10. ':
' → logprob: -8.907814025878906

Token 576: '       ' (ID: 309)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0498429611325264
    2. '   ' → logprob: -3.1748430728912354
    3. '       ' → logprob: -5.799842834472656
    4. 'def' → logprob: -6.174842834472656
    5. '(n' → logprob: -6.424842834472656
    6. ' n' → logprob: -10.799842834472656
    7. 'self' → logprob: -11.049842834472656
    8. '
' → logprob: -11.549842834472656
    9. '```' → logprob: -11.674842834472656
    10. '	n' → logprob: -11.674842834472656

Token 577: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -6.704273118884885e-07
    2. ' n' → logprob: -14.375000953674316
    3. 'def' → logprob: -17.5
    4. '   ' → logprob: -17.75
    5. '(n' → logprob: -19.0
    6. '	n' → logprob: -20.0
    7. '
' → logprob: -20.625
    8. 'ndef' → logprob: -21.125
    9. '_n' → logprob: -21.625
    10. '```' → logprob: -21.75

Token 578: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0639437809586525
    2. '):
' → logprob: -3.063943862915039
    3. 'def' → logprob: -5.063943862915039
    4. '):' → logprob: -5.563943862915039
    5. ')' → logprob: -5.938943862915039
    6. ':' → logprob: -7.688943862915039
    7. '   ' → logprob: -7.938943862915039
    8. ' (' → logprob: -8.063943862915039
    9. ')(' → logprob: -8.188943862915039
    10. '```' → logprob: -8.313943862915039

Token 579: 'int' (ID: 491)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00319482758641243
    2. 'int' → logprob: -5.753194808959961
    3. ' n' → logprob: -11.628194808959961
    4. '(n' → logprob: -11.878194808959961
    5. ')n' → logprob: -15.128194808959961
    6. ')' → logprob: -15.253194808959961
    7. '   ' → logprob: -15.503194808959961
    8. ':int' → logprob: -16.37819480895996
    9. '_n' → logprob: -16.50319480895996
    10. '	n' → logprob: -16.75319480895996

Token 580: '):' (ID: 3127)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.024879537522792816
    2. '):' → logprob: -3.8998794555664062
    3. '(n' → logprob: -5.524879455566406
    4. '   ' → logprob: -9.274879455566406
    5. ':' → logprob: -9.899879455566406
    6. '):
' → logprob: -10.149879455566406
    7. ')' → logprob: -10.149879455566406
    8. 'def' → logprob: -10.399879455566406
    9. '```' → logprob: -10.649879455566406
    10. 'n' → logprob: -10.774879455566406

Token 581: ' Number' (ID: 9184)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0028922520577907562
    2. ' n' → logprob: -6.252892017364502
    3. 'def' → logprob: -7.127892017364502
    4. '(n' → logprob: -9.12789249420166
    5. '   ' → logprob: -10.00289249420166
    6. '	n' → logprob: -13.50289249420166
    7. '       ' → logprob: -13.75289249420166
    8. 'int' → logprob: -13.75289249420166
    9. ' def' → logprob: -14.12789249420166
    10. '
' → logprob: -14.12789249420166

Token 582: ' of' (ID: 328)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.397635579109192
    2. '(n' → logprob: -1.647635579109192
    3. ' of' → logprob: -1.772635579109192
    4. '=' → logprob: -2.0226354598999023
    5. 'of' → logprob: -2.0226354598999023
    6. '=n' → logprob: -2.7726354598999023
    7. ':' → logprob: -4.397635459899902
    8. '):
' → logprob: -4.397635459899902
    9. ')' → logprob: -4.397635459899902
    10. '   ' → logprob: -4.897635459899902

Token 583: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -9.782141569303349e-05
    2. ' lines' → logprob: -9.25009822845459
    3. '_lines' → logprob: -13.50009822845459
    4. 'line' → logprob: -16.125097274780273
    5. '-lines' → logprob: -17.250097274780273
    6. 'rows' → logprob: -17.500097274780273
    7. '(lines' → logprob: -17.750097274780273
    8. '	lines' → logprob: -17.750097274780273
    9. 'ls' → logprob: -18.875097274780273
    10. 'Lines' → logprob: -19.250097274780273

Token 584: ' to' (ID: 316)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6051928400993347
    2. '):
' → logprob: -0.9801928400993347
    3. '   ' → logprob: -3.3551928997039795
    4. '(n' → logprob: -3.9801928997039795
    5. '):' → logprob: -4.6051926612854
    6. ':' → logprob: -5.1051926612854
    7. '=' → logprob: -5.3551926612854
    8. '```' → logprob: -7.1051926612854
    9. ':
' → logprob: -7.3551926612854
    10. ')' → logprob: -7.3551926612854

Token 585: ' read' (ID: 1729)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002359117614105344
    2. ' range' → logprob: -6.252358913421631
    3. 'read' → logprob: -7.752358913421631
    4. '(range' → logprob: -15.502359390258789
    5. 'def' → logprob: -15.627359390258789
    6. ' read' → logprob: -16.50235939025879
    7. 'int' → logprob: -17.25235939025879
    8. 'n' → logprob: -17.25235939025879
    9. '_range' → logprob: -17.25235939025879
    10. 'split' → logprob: -17.50235939025879

Token 586: '.

' (ID: 364)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.011961364187300205
    2. '):' → logprob: -5.136961460113525
    3. '   ' → logprob: -5.511961460113525
    4. 'def' → logprob: -6.636961460113525
    5. '(n' → logprob: -8.136960983276367
    6. ')' → logprob: -8.511960983276367
    7. '):

' → logprob: -9.636960983276367
    8. '):
' → logprob: -10.136960983276367
    9. 'n' → logprob: -10.511960983276367
    10. ')
' → logprob: -10.636960983276367

Token 587: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000799980596639216
    2. 'def' → logprob: -7.250800132751465
    3. 'return' → logprob: -9.375800132751465
    4. '
' → logprob: -13.500800132751465
    5. '```' → logprob: -13.500800132751465
    6. '       ' → logprob: -14.000800132751465
    7. '	return' → logprob: -14.750800132751465
    8. ' return' → logprob: -14.750800132751465
    9. ')' → logprob: -14.875800132751465
    10. '    ' → logprob: -16.12579917907715

Token 588: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005013751797378063
    2. 'def' → logprob: -5.880013942718506
    3. 'return' → logprob: -6.130013942718506
    4. ')' → logprob: -11.380013465881348
    5. '
' → logprob: -11.505013465881348
    6. '"""
' → logprob: -13.130013465881348
    7. ' return' → logprob: -13.755013465881348
    8. '```' → logprob: -13.880013465881348
    9. '       ' → logprob: -14.255013465881348
    10. '):
' → logprob: -14.505013465881348

Token 589: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4586755633354187
    2. '[n' → logprob: -1.8336756229400635
    3. '(n' → logprob: -2.4586756229400635
    4. '[' → logprob: -3.3336756229400635
    5. '[List' → logprob: -3.7086756229400635
    6. 'def' → logprob: -3.9586756229400635
    7. '[
' → logprob: -4.083675384521484
    8. ':
' → logprob: -4.958675384521484
    9. '[list' → logprob: -5.333675384521484
    10. '(list' → logprob: -5.833675384521484

Token 590: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6686249375343323
    2. ' [' → logprob: -0.9186249375343323
    3. '   ' → logprob: -2.5436248779296875
    4. '[L' → logprob: -5.0436248779296875
    5. '[List' → logprob: -6.5436248779296875
    6. '[n' → logprob: -7.1686248779296875
    7. '[list' → logprob: -7.7936248779296875
    8. '[s' → logprob: -8.918624877929688
    9. 'LS' → logprob: -9.168624877929688
    10. '[str' → logprob: -9.543624877929688

Token 591: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0022739621344953775
    2. '[List' → logprob: -6.502274036407471
    3. '[list' → logprob: -7.252274036407471
    4. '[line' → logprob: -10.752273559570312
    5. '[str' → logprob: -11.002273559570312
    6. '[string' → logprob: -11.127273559570312
    7. '[L' → logprob: -13.127273559570312
    8. '[String' → logprob: -13.377273559570312
    9. 'LS' → logprob: -13.377273559570312
    10. ' [' → logprob: -13.752273559570312

Token 592: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.15572589635849
    2. 'of' → logprob: -2.0307259559631348
    3. '_of' → logprob: -5.280725955963135
    4. '[' → logprob: -5.405725955963135
    5. '[List' → logprob: -7.280725955963135
    6. '```' → logprob: -7.530725955963135
    7. '   ' → logprob: -7.655725955963135
    8. '[list' → logprob: -7.780725955963135
    9. 'def' → logprob: -8.155725479125977
    10. '[int' → logprob: -8.280725479125977

Token 593: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -8.494741632603109e-05
    2. ' list' → logprob: -9.62508487701416
    3. '[list' → logprob: -11.00008487701416
    4. 'lists' → logprob: -13.12508487701416
    5. 'List' → logprob: -16.125085830688477
    6. '(list' → logprob: -16.375085830688477
    7. ' lists' → logprob: -19.000085830688477
    8. '[' → logprob: -19.125085830688477
    9. 'ls' → logprob: -19.375085830688477
    10. '_list' → logprob: -19.625085830688477

Token 594: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.5421009659767151
    2. ' of' → logprob: -1.4171009063720703
    3. '[str' → logprob: -1.7921009063720703
    4. '[list' → logprob: -5.41710090637207
    5. '[' → logprob: -6.41710090637207
    6. '_of' → logprob: -7.04210090637207
    7. '[int' → logprob: -7.16710090637207
    8. '[List' → logprob: -7.41710090637207
    9. '   ' → logprob: -7.91710090637207
    10. '```' → logprob: -8.41710090637207

Token 595: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.004080658778548241
    2. ' str' → logprob: -5.504080772399902
    3. 'string' → logprob: -13.504080772399902
    4. '[str' → logprob: -14.504080772399902
    5. 's' → logprob: -15.254080772399902
    6. '(str' → logprob: -17.754079818725586
    7. 'strings' → logprob: -18.004079818725586
    8. 'stri' → logprob: -18.629079818725586
    9. '	str' → logprob: -19.879079818725586
    10. 'def' → logprob: -20.004079818725586

Token 596: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9802116751670837
    2. '):' → logprob: -1.6052117347717285
    3. '(n' → logprob: -1.8552117347717285
    4. '   ' → logprob: -2.2302117347717285
    5. '):
' → logprob: -2.6052117347717285
    6. 'def' → logprob: -3.1052117347717285
    7. ':
' → logprob: -4.1052117347717285
    8. ')' → logprob: -4.9802117347717285
    9. ']:' → logprob: -4.9802117347717285
    10. ']' → logprob: -5.9802117347717285

Token 597: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.24534393846988678
    2. '[str' → logprob: -2.2453439235687256
    3. '[string' → logprob: -2.7453439235687256
    4. '[S' → logprob: -3.9953439235687256
    5. ' [' → logprob: -4.745344161987305
    6. '[String' → logprob: -4.995344161987305
    7. '[List' → logprob: -5.370344161987305
    8. '[list' → logprob: -5.995344161987305
    9. '[[' → logprob: -6.370344161987305
    10. '[line' → logprob: -6.745344161987305

Token 598: '2' (ID: 17)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6297515630722046
    2. '[S' → logprob: -0.8797515630722046
    3. '[string' → logprob: -3.879751682281494
    4. '[str' → logprob: -3.879751682281494
    5. '[list' → logprob: -5.629751682281494
    6. '[L' → logprob: -5.879751682281494
    7. '[String' → logprob: -6.379751682281494
    8. '[s' → logprob: -6.504751682281494
    9. '[List' → logprob: -7.504751682281494
    10. 'LS' → logprob: -8.129751205444336

Token 599: 'D' (ID: 35)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.2014942169189453
    2. '[' → logprob: -2.4514942169189453
    3. '[S' → logprob: -3.7014942169189453
    4. 'def' → logprob: -3.9514942169189453
    5. '[[' → logprob: -4.701494216918945
    6. 'SR' → logprob: -4.826494216918945
    7. '[int' → logprob: -4.826494216918945
    8. '[n' → logprob: -5.326494216918945
    9. '   ' → logprob: -5.701494216918945
    10. '[
' → logprob: -5.951494216918945

Token 600: ' list' (ID: 1562)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.13283391296863556
    2. '[list' → logprob: -3.632833957672119
    3. '[' → logprob: -3.882833957672119
    4. ' list' → logprob: -3.882833957672119
    5. 'def' → logprob: -3.882833957672119
    6. ' def' → logprob: -4.257833957672119
    7. '   ' → logprob: -5.257833957672119
    8. '(list' → logprob: -6.007833957672119
    9. '[List' → logprob: -6.132833957672119
    10. '[
' → logprob: -6.507833957672119

Token 601: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.15034151077270508
    2. 'of' → logprob: -2.025341510772705
    3. '[' → logprob: -5.900341510772705
    4. '   ' → logprob: -6.525341510772705
    5. '[int' → logprob: -6.650341510772705
    6. '_of' → logprob: -7.275341510772705
    7. '[str' → logprob: -7.525341510772705
    8. '[
' → logprob: -8.275341033935547
    9. '```' → logprob: -9.150341033935547
    10. 'for' → logprob: -9.525341033935547

Token 602: ' strings' (ID: 18279)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.510829508304596
    2. 'strings' → logprob: -1.6358294486999512
    3. '[str' → logprob: -2.385829448699951
    4. 'LS' → logprob: -3.010829448699951
    5. 'string' → logprob: -3.385829448699951
    6. 'list' → logprob: -3.760829448699951
    7. 'lists' → logprob: -6.260829448699951
    8. ' strings' → logprob: -6.510829448699951
    9. ' str' → logprob: -7.010829448699951
    10. ' LS' → logprob: -7.010829448699951

Token 603: '.
' (ID: 558)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3799080550670624
    2. '(n' → logprob: -1.3799080848693848
    3. 'for' → logprob: -3.5049080848693848
    4. '[n' → logprob: -4.129908084869385
    5. ' for' → logprob: -4.754908084869385
    6. ' from' → logprob: -6.129908084869385
    7. ')' → logprob: -6.629908084869385
    8. '   ' → logprob: -6.879908084869385
    9. '
' → logprob: -7.004908084869385
    10. '[' → logprob: -7.129908084869385

Token 604: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009672398678958416
    2. 'def' → logprob: -4.884672164916992
    3. '(n' → logprob: -7.134672164916992
    4. ')' → logprob: -8.009672164916992
    5. ']' → logprob: -8.134672164916992
    6. '```' → logprob: -8.759672164916992
    7. '"""
' → logprob: -8.884672164916992
    8. '()' → logprob: -9.634672164916992
    9. '(' → logprob: -10.509672164916992
    10. '[
' → logprob: -10.509672164916992

Token 605: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006188179831951857
    2. '"""
' (adapté à ' """
') → logprob: -5.25618839263916
    3. '```' → logprob: -7.88118839263916
    4. 'def' → logprob: -8.75618839263916
    5. 'return' → logprob: -8.88118839263916
    6. '"""' → logprob: -9.13118839263916
    7. ')' → logprob: -9.38118839263916
    8. ']' → logprob: -10.13118839263916
    9. '):
' → logprob: -11.38118839263916
    10. ']
' → logprob: -11.88118839263916

Token 606: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023361945524811745
    2. 'return' → logprob: -3.773361921310425
    3. ' return' → logprob: -9.648362159729004
    4. 'def' → logprob: -10.023362159729004
    5. '	return' → logprob: -11.898362159729004
    6. '[' → logprob: -14.898362159729004
    7. '   ' → logprob: -16.273361206054688
    8. '{return' → logprob: -16.523361206054688
    9. '```' → logprob: -16.648361206054688
    10. '[
' → logprob: -16.773361206054688

Token 607: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0002249933750135824
    2. '   ' → logprob: -8.750225067138672
    3. ' return' → logprob: -9.750225067138672
    4. 'def' → logprob: -11.750225067138672
    5. '
' → logprob: -15.375225067138672
    6. '	return' → logprob: -17.625225067138672
    7. '```' → logprob: -17.625225067138672
    8. '[' → logprob: -19.750225067138672
    9. '{return' → logprob: -19.875225067138672
    10. 'LS' → logprob: -19.875225067138672

Token 608: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.319370302458992e-06
    2. ' [' → logprob: -12.375005722045898
    3. '[List' → logprob: -14.500005722045898
    4. '[[' → logprob: -15.750005722045898
    5. '   ' → logprob: -16.7500057220459
    6. '[list' → logprob: -16.8750057220459
    7. 'LS' → logprob: -17.1250057220459
    8. '[S' → logprob: -17.1250057220459
    9. '[s' → logprob: -17.5000057220459
    10. '[
' → logprob: -17.5000057220459

Token 609: 'LS' (ID: 10172)
  Prédit: 'LS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LS' → logprob: -1.9361264946837764e-07
    2. ' LS' → logprob: -16.375
    3. 'S' → logprob: -18.5
    4. 'ls' → logprob: -19.0
    5. 'L' → logprob: -21.625
    6. 'sys' → logprob: -22.125
    7. '_ls' → logprob: -22.375
    8. 'SS' → logprob: -22.75
    9. '[' → logprob: -22.875
    10. 'SL' → logprob: -23.125

Token 610: '()' (ID: 416)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.16141775250434875
    2. 'R' → logprob: -1.9114177227020264
    3. '()' → logprob: -7.2864179611206055
    4. '(' → logprob: -8.161417961120605
    5. ' (' → logprob: -9.161417961120605
    6. '(i' → logprob: -9.786417961120605
    7. '](' → logprob: -11.286417961120605
    8. '()(' → logprob: -11.411417961120605
    9. 'r' → logprob: -12.161417961120605
    10. '()]' → logprob: -12.161417961120605

Token 611: ' for' (ID: 395)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2049184888601303
    2. 'for' → logprob: -1.7049185037612915
    3. ' for' → logprob: -5.704918384552002
    4. '(' → logprob: -9.32991886138916
    5. '(i' → logprob: -10.32991886138916
    6. '(for' → logprob: -11.07991886138916
    7. ')' → logprob: -11.20491886138916
    8. ' (' → logprob: -11.57991886138916
    9. '   ' → logprob: -12.70491886138916
    10. '	for' → logprob: -13.07991886138916

Token 612: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0009376663947477937
    2. ' i' → logprob: -7.000937461853027
    3. '_' → logprob: -10.625937461853027
    4. '_i' → logprob: -13.250937461853027
    5. 'in' → logprob: -16.875938415527344
    6. 'range' → logprob: -17.250938415527344
    7. ' _' → logprob: -17.375938415527344
    8. ' in' → logprob: -17.875938415527344
    9. '(i' → logprob: -19.375938415527344
    10. '	i' → logprob: -19.625938415527344

Token 613: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5760576725006104
    2. ' in' → logprob: -0.8260576725006104
    3. '(' → logprob: -10.076057434082031
    4. 'i' → logprob: -10.326057434082031
    5. 'range' → logprob: -10.951057434082031
    6. '(i' → logprob: -11.951057434082031
    7. 'n' → logprob: -12.201057434082031
    8. '(n' → logprob: -12.201057434082031
    9. '(in' → logprob: -12.951057434082031
    10. 'for' → logprob: -13.201057434082031

Token 614: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007101670489646494
    2. ' range' → logprob: -7.2507100105285645
    3. '(range' → logprob: -15.500710487365723
    4. '	range' → logprob: -23.000709533691406
    5. 'in' → logprob: -24.250709533691406
    6. '_range' → logprob: -24.500709533691406
    7. '(' → logprob: -25.000709533691406
    8. 'Range' → logprob: -25.125709533691406
    9. '
' → logprob: -25.125709533691406
    10. ' in' → logprob: -25.500709533691406

Token 615: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.014510401524603367
    2. 'n' → logprob: -4.264510631561279
    3. 'range' → logprob: -8.014510154724121
    4. '(' → logprob: -11.264510154724121
    5. ' range' → logprob: -13.264510154724121
    6. ' (' → logprob: -13.639510154724121
    7. '(range' → logprob: -15.639510154724121
    8. ' n' → logprob: -15.889510154724121
    9. '(
' → logprob: -17.389511108398438
    10. ',' → logprob: -17.389511108398438

Token 616: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -6.0033853515051305e-05
    2. ']' → logprob: -10.000060081481934
    3. ')' → logprob: -11.375060081481934
    4. '()]' → logprob: -13.875060081481934
    5. ')]
' → logprob: -14.000060081481934
    6. '   ' → logprob: -14.625060081481934
    7. '')]' → logprob: -15.000060081481934
    8. '])]' → logprob: -15.500060081481934
    9. ')])' → logprob: -16.625059127807617
    10. '])' → logprob: -16.750059127807617

Token 617: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 618: ' SR' (ID: 30704)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.5103453993797302
    2. 'O' → logprob: -2.510345458984375
    3. 'print' → logprob: -3.135345458984375
    4. 'input' → logprob: -3.135345458984375
    5. 'MS' → logprob: -3.260345458984375
    6. 'M' → logprob: -3.510345458984375
    7. 'I' → logprob: -3.635345458984375
    8. 'WS' → logprob: -3.885345458984375
    9. 'WI' → logprob: -4.135345458984375
    10. 'DR' → logprob: -4.385345458984375

Token 619: 'L' (ID: 43)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.052624091506004333
    2. '(' → logprob: -3.302623987197876
    3. 'def' → logprob: -4.927624225616455
    4. 'R' → logprob: -5.427624225616455
    5. 's' → logprob: -7.552624225616455
    6. 'n' → logprob: -7.802624225616455
    7. 'SR' → logprob: -7.927624225616455
    8. 'S' → logprob: -8.052623748779297
    9. '()' → logprob: -9.302623748779297
    10. '1' → logprob: -9.427623748779297

Token 620: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0011473640333861113
    2. 'def' → logprob: -7.501147270202637
    3. '(' → logprob: -7.751147270202637
    4. ' (' → logprob: -9.001147270202637
    5. 'n' → logprob: -11.751147270202637
    6. 's' → logprob: -11.876147270202637
    7. ' def' → logprob: -12.751147270202637
    8. ')(' → logprob: -13.001147270202637
    9. '()' → logprob: -13.126147270202637
    10. '((' → logprob: -13.376147270202637

Token 621: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.33137986063957214
    2. '):
' → logprob: -1.3313798904418945
    3. '(n' → logprob: -4.0813798904418945
    4. ')' → logprob: -7.0813798904418945
    5. 'def' → logprob: -9.456379890441895
    6. '():
' → logprob: -10.206379890441895
    7. 'n' → logprob: -10.456379890441895
    8. '():' → logprob: -10.581379890441895
    9. '):
' → logprob: -11.206379890441895
    10. '()):
' → logprob: -11.706379890441895

Token 622: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00937883835285902
    2. 'def' → logprob: -4.759378910064697
    3. '   ' → logprob: -7.634378910064697
    4. '(' → logprob: -9.384378433227539
    5. '(
' → logprob: -9.384378433227539
    6. ':' → logprob: -9.759378433227539
    7. 'n' → logprob: -10.634378433227539
    8. ' def' → logprob: -11.384378433227539
    9. '):' → logprob: -12.759378433227539
    10. '(def' → logprob: -12.759378433227539

Token 623: ' """
' (ID: 7037)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19786158204078674
    2. '   ' → logprob: -2.322861671447754
    3. '(n' → logprob: -2.697861671447754
    4. '(
' → logprob: -5.447861671447754
    5. ' def' → logprob: -5.947861671447754
    6. 'n' → logprob: -6.447861671447754
    7. '(S' → logprob: -6.572861671447754
    8. '"""
' (adapté à ' """
') → logprob: -6.697861671447754
    9. '[
' → logprob: -7.072861671447754
    10. '(' → logprob: -7.947861671447754

Token 624: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5515507459640503
    2. '"""
' → logprob: -1.1765507459640503
    3. 'def' → logprob: -2.17655086517334
    4. '"""' → logprob: -6.55155086517334
    5. '[
' → logprob: -8.92655086517334
    6. 'SR' → logprob: -9.17655086517334
    7. '"
' → logprob: -9.42655086517334
    8. '
' → logprob: -9.80155086517334
    9. '"' → logprob: -9.80155086517334
    10. 'return' → logprob: -10.17655086517334

Token 625: ' Reads' (ID: 88839)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07705384492874146
    2. '"""
' → logprob: -2.7020537853240967
    3. '   ' → logprob: -5.202054023742676
    4. ' def' → logprob: -6.577054023742676
    5. '"""' → logprob: -9.952054023742676
    6. '[
' → logprob: -10.077054023742676
    7. 'Reads' (adapté à ' Reads') → logprob: -10.577054023742676
    8. '(
' → logprob: -10.952054023742676
    9. ''''
' → logprob: -11.202054023742676
    10. '"
' → logprob: -11.577054023742676

Token 626: ' '' (ID: 461)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6054448485374451
    2. 'n' → logprob: -0.9804448485374451
    3. '[n' → logprob: -3.73044490814209
    4. '   ' → logprob: -4.48044490814209
    5. '[
' → logprob: -4.48044490814209
    6. 'def' → logprob: -4.60544490814209
    7. '[' → logprob: -5.23044490814209
    8. ' n' → logprob: -5.35544490814209
    9. ''' → logprob: -5.98044490814209
    10. '```' → logprob: -6.23044490814209

Token 627: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0001882823125924915
    2. '[n' → logprob: -9.625187873840332
    3. 'int' → logprob: -10.000187873840332
    4. '(n' → logprob: -10.500187873840332
    5. ' n' → logprob: -10.750187873840332
    6. 'def' → logprob: -12.000187873840332
    7. '[' → logprob: -12.000187873840332
    8. 's' → logprob: -12.125187873840332
    9. '[int' → logprob: -12.875187873840332
    10. 'S' → logprob: -13.375187873840332

Token 628: ''' (ID: 6)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2609949111938477
    2. ')' → logprob: -1.7609949111938477
    3. '_lines' → logprob: -1.8859949111938477
    4. ' lines' → logprob: -2.3859949111938477
    5. '>' → logprob: -3.0109949111938477
    6. 'lines' → logprob: -3.1359949111938477
    7. '()' → logprob: -3.1359949111938477
    8. '(' → logprob: -4.010994911193848
    9. '*' → logprob: -4.260994911193848
    10. '_line' → logprob: -4.385994911193848

Token 629: ' lines' (ID: 8698)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.9024182558059692
    2. 'lines' → logprob: -1.2774182558059692
    3. '_lines' → logprob: -2.0274181365966797
    4. '(' → logprob: -2.9024181365966797
    5. ' lines' → logprob: -3.0274181365966797
    6. 'def' → logprob: -4.27741813659668
    7. '(lines' → logprob: -4.27741813659668
    8. '(
' → logprob: -4.40241813659668
    9. '()' → logprob: -4.90241813659668
    10. 'Lines' → logprob: -5.02741813659668

Token 630: ' from' (ID: 591)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7514870762825012
    2. '(' → logprob: -1.6264870166778564
    3. 'from' → logprob: -1.8764870166778564
    4. '(n' → logprob: -3.0014870166778564
    5. '   ' → logprob: -3.8764870166778564
    6. '()' → logprob: -4.1264872550964355
    7. '.' → logprob: -4.6264872550964355
    8. ')' → logprob: -4.6264872550964355
    9. '=' → logprob: -4.7514872550964355
    10. 'for' → logprob: -4.7514872550964355

Token 631: ' input' (ID: 3422)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.022928619757294655
    2. 'standard' → logprob: -4.522928714752197
    3. ' sys' → logprob: -5.397928714752197
    4. 'string' → logprob: -5.522928714752197
    5. 'S' → logprob: -6.397928714752197
    6. '(sys' → logprob: -7.647928714752197
    7. 'buffer' → logprob: -7.772928714752197
    8. 'input' → logprob: -8.522928237915039
    9. ' standard' → logprob: -8.897928237915039
    10. 'strings' → logprob: -9.397928237915039

Token 632: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.1279150247573853
    2. 'def' → logprob: -1.3779150247573853
    3. '   ' → logprob: -1.7529150247573853
    4. '():' → logprob: -2.0029149055480957
    5. ',' → logprob: -3.5029149055480957
    6. '(n' → logprob: -3.8779149055480957
    7. 'for' → logprob: -4.377914905548096
    8. '.' → logprob: -4.877914905548096
    9. ')' → logprob: -4.877914905548096
    10. '=' → logprob: -5.002914905548096

Token 633: ' splitting' (ID: 87130)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2120913565158844
    2. '   ' → logprob: -1.837091326713562
    3. ' def' → logprob: -4.962091445922852
    4. '
' → logprob: -5.337091445922852
    5. ' each' → logprob: -5.462091445922852
    6. 'each' → logprob: -5.462091445922852
    7. 'return' → logprob: -5.837091445922852
    8. ' returning' → logprob: -5.962091445922852
    9. 'n' → logprob: -7.212091445922852
    10. ' ' → logprob: -7.337091445922852

Token 634: ' each' (ID: 2454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20912878215312958
    2. 'lines' → logprob: -1.834128737449646
    3. 'def' → logprob: -4.8341288566589355
    4. 'each' → logprob: -4.8341288566589355
    5. '('' → logprob: -5.7091288566589355
    6. '()[' → logprob: -5.8341288566589355
    7. '().' → logprob: -6.7091288566589355
    8. '(n' → logprob: -7.8341288566589355
    9. '```' → logprob: -7.9591288566589355
    10. ' ()' → logprob: -8.084128379821777

Token 635: ' string' (ID: 1621)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8783233761787415
    2. '('' → logprob: -1.2533233165740967
    3. '()' → logprob: -1.7533233165740967
    4. 'lines' → logprob: -3.3783233165740967
    5. '(
' → logprob: -4.003323554992676
    6. '   ' → logprob: -4.503323554992676
    7. '()[' → logprob: -4.628323554992676
    8. '```' → logprob: -4.628323554992676
    9. 'line' → logprob: -4.878323554992676
    10. '('_' → logprob: -5.253323554992676

Token 636: ' into' (ID: 1511)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08326002955436707
    2. '().' → logprob: -3.2082600593566895
    3. '()[' → logprob: -3.9582600593566895
    4. '   ' → logprob: -4.5832600593566895
    5. 'for' → logprob: -5.5832600593566895
    6. '('' → logprob: -6.4582600593566895
    7. 'def' → logprob: -6.8332600593566895
    8. '()
' → logprob: -7.2082600593566895
    9. '.' → logprob: -7.4582600593566895
    10. '(' → logprob: -7.5832600593566895

Token 637: ' a' (ID: 261)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.5561413168907166
    2. 'strings' → logprob: -1.1811413764953613
    3. 'tokens' → logprob: -2.9311413764953613
    4. 'a' → logprob: -3.6811413764953613
    5. 'list' → logprob: -4.431141376495361
    6. 'lists' → logprob: -4.806141376495361
    7. 'str' → logprob: -5.056141376495361
    8. ' words' → logprob: -5.431141376495361
    9. 'LS' → logprob: -6.431141376495361
    10. 'lines' → logprob: -6.556141376495361

Token 638: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.03810954466462135
    2. ' list' → logprob: -3.288109540939331
    3. 'string' → logprob: -10.41310977935791
    4. '[list' → logprob: -11.28810977935791
    5. 'def' → logprob: -12.16310977935791
    6. '[str' → logprob: -12.78810977935791
    7. '   ' → logprob: -12.91310977935791
    8. '```' → logprob: -13.03810977935791
    9. '[
' → logprob: -13.28810977935791
    10. 'tokens' → logprob: -13.28810977935791

Token 639: ' of' (ID: 328)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.023854678496718407
    2. 'of' → logprob: -4.648854732513428
    3. ' of' → logprob: -5.398854732513428
    4. '()[' → logprob: -5.523854732513428
    5. '   ' → logprob: -7.023854732513428
    6. '(' → logprob: -7.273854732513428
    7. '()
' → logprob: -7.523854732513428
    8. ' ()' → logprob: -7.523854732513428
    9. 'def' → logprob: -7.648854732513428
    10. '('' → logprob: -7.773854732513428

Token 640: ' its' (ID: 1617)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.03813260421156883
    2. 'strings' → logprob: -3.288132667541504
    3. 'tokens' → logprob: -10.038132667541504
    4. 'string' → logprob: -11.038132667541504
    5. ' strings' → logprob: -11.413132667541504
    6. 'words' → logprob: -11.913132667541504
    7. ' str' → logprob: -12.038132667541504
    8. '[str' → logprob: -12.163132667541504
    9. 'list' → logprob: -14.163132667541504
    10. '```' → logprob: -14.288132667541504

Token 641: ' characters' (ID: 9862)
  Prédit: 'characters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'characters' → logprob: -0.6876203417778015
    2. ' characters' → logprob: -1.5626204013824463
    3. 'chars' → logprob: -2.1876204013824463
    4. 'tokens' → logprob: -2.3126204013824463
    5. 'words' → logprob: -3.4376204013824463
    6. 'strings' → logprob: -4.062620162963867
    7. 'list' → logprob: -4.937620162963867
    8. 's' → logprob: -5.437620162963867
    9. 'str' → logprob: -5.562620162963867
    10. ' words' → logprob: -5.812620162963867

Token 642: '.

' (ID: 364)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5184541940689087
    2. '   ' → logprob: -1.5184541940689087
    3. 'def' → logprob: -1.8934541940689087
    4. '(' → logprob: -3.893454074859619
    5. 'for' → logprob: -5.143454074859619
    6. '.' → logprob: -6.143454074859619
    7. ',' → logprob: -6.393454074859619
    8. ' for' → logprob: -6.768454074859619
    9. '()' → logprob: -7.268454074859619
    10. ' (' → logprob: -7.643454074859619

Token 643: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03502344340085983
    2. '   ' → logprob: -3.5350234508514404
    3. '(n' → logprob: -5.910023212432861
    4. ' def' → logprob: -6.535023212432861
    5. ':' → logprob: -7.785023212432861
    6. '```' → logprob: -7.910023212432861
    7. ':
' → logprob: -9.78502368927002
    8. '(' → logprob: -10.16002368927002
    9. '():
' → logprob: -10.16002368927002
    10. '
' → logprob: -10.28502368927002

Token 644: ' Args' (ID: 39185)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009039955213665962
    2. '   ' → logprob: -4.759039878845215
    3. 'return' → logprob: -8.134039878845215
    4. ' def' → logprob: -9.134039878845215
    5. ' return' → logprob: -11.759039878845215
    6. '```' → logprob: -12.259039878845215
    7. '[]' → logprob: -12.634039878845215
    8. '[
' → logprob: -13.134039878845215
    9. '"""
' → logprob: -13.759039878845215
    10. '{return' → logprob: -14.259039878845215

Token 645: ':
' (ID: 734)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6721958518028259
    2. '   ' → logprob: -1.0471959114074707
    3. 'def' → logprob: -2.0471959114074707
    4. '       ' → logprob: -5.672195911407471
    5. '[n' → logprob: -6.047195911407471
    6. ':
' → logprob: -6.547195911407471
    7. ':' → logprob: -6.797195911407471
    8. '```' → logprob: -7.922195911407471
    9. 'n' → logprob: -8.297195434570312
    10. '[
' → logprob: -8.922195434570312

Token 646: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06223778426647186
    2. '   ' → logprob: -3.3122377395629883
    3. 'n' → logprob: -3.8122377395629883
    4. '(n' → logprob: -6.687237739562988
    5. '       ' → logprob: -8.312237739562988
    6. '```' → logprob: -8.562237739562988
    7. '
' → logprob: -9.312237739562988
    8. ' def' → logprob: -11.437237739562988
    9. '``' → logprob: -12.437237739562988
    10. '[n' → logprob: -12.812237739562988

Token 647: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -7.584239938296378e-06
    2. 'def' → logprob: -12.000007629394531
    3. '   ' → logprob: -14.625007629394531
    4. ' n' → logprob: -14.625007629394531
    5. '```' → logprob: -14.875007629394531
    6. '(n' → logprob: -16.87500762939453
    7. '
' → logprob: -17.12500762939453
    8. '	n' → logprob: -17.12500762939453
    9. 'self' → logprob: -17.25000762939453
    10. 'ndef' → logprob: -18.00000762939453

Token 648: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6396198272705078
    2. '(n' → logprob: -0.7646198272705078
    3. 'def' → logprob: -6.389619827270508
    4. '(int' → logprob: -6.514619827270508
    5. '):
' → logprob: -6.889619827270508
    6. '   ' → logprob: -7.264619827270508
    7. ')' → logprob: -7.639619827270508
    8. ':' → logprob: -8.014619827270508
    9. '```' → logprob: -8.014619827270508
    10. '(' → logprob: -8.139619827270508

Token 649: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0052342405542731285
    2. 'n' → logprob: -5.255234241485596
    3. ' int' → logprob: -14.755233764648438
    4. '   ' → logprob: -17.130233764648438
    5. ')' → logprob: -17.255233764648438
    6. ' n' → logprob: -17.505233764648438
    7. '(int' → logprob: -17.505233764648438
    8. ':int' → logprob: -18.380233764648438
    9. '[int' → logprob: -18.380233764648438
    10. '(n' → logprob: -18.505233764648438

Token 650: '):' (ID: 3127)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.854032576084137
    2. '):
' → logprob: -1.3540325164794922
    3. '):' → logprob: -1.4790325164794922
    4. ':' → logprob: -2.604032516479492
    5. '   ' → logprob: -5.479032516479492
    6. ')' → logprob: -5.604032516479492
    7. '=' → logprob: -6.354032516479492
    8. '=n' → logprob: -6.604032516479492
    9. '=None' → logprob: -6.854032516479492
    10. 'n' → logprob: -7.354032516479492

Token 651: ' Number' (ID: 9184)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06815922260284424
    2. 'def' → logprob: -3.3181591033935547
    3. 'n' → logprob: -4.318159103393555
    4. 'return' → logprob: -5.693159103393555
    5. '<|end|>' → logprob: -5.693159103393555
    6. ' ' → logprob: -6.318159103393555
    7. '
' → logprob: -6.693159103393555
    8. '```' → logprob: -6.818159103393555
    9. '       ' → logprob: -6.943159103393555
    10. 'int' → logprob: -7.193159103393555

Token 652: ' of' (ID: 328)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3830612003803253
    2. ' of' → logprob: -2.008061170578003
    3. 'def' → logprob: -2.633061170578003
    4. ':' → logprob: -3.258061170578003
    5. 'of' → logprob: -3.633061170578003
    6. '   ' → logprob: -4.258061408996582
    7. '```' → logprob: -4.633061408996582
    8. '):
' → logprob: -5.383061408996582
    9. ')' → logprob: -5.508061408996582
    10. '):' → logprob: -5.633061408996582

Token 653: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.10281096398830414
    2. 'lines' → logprob: -2.352810859680176
    3. 'n' → logprob: -7.477810859680176
    4. '(n' → logprob: -7.477810859680176
    5. '(lines' → logprob: -7.852810859680176
    6. 'int' → logprob: -8.227810859680176
    7. 'Lines' → logprob: -8.602810859680176
    8. ' n' → logprob: -8.727810859680176
    9. '```' → logprob: -9.227810859680176
    10. '_lines' → logprob: -9.352810859680176

Token 654: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3526968955993652
    2. '):' → logprob: -1.6026968955993652
    3. '):
' → logprob: -1.6026968955993652
    4. '   ' → logprob: -1.8526968955993652
    5. 'def' → logprob: -1.8526968955993652
    6. '=' → logprob: -4.227696895599365
    7. '(n' → logprob: -5.852696895599365
    8. ':
' → logprob: -6.102696895599365
    9. '<|end|>' → logprob: -6.727696895599365
    10. ')' → logprob: -6.977696895599365

Token 655: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.2559815049171448
    2. 'range' → logprob: -1.5059814453125
    3. ' read' → logprob: -6.3809814453125
    4. ' range' → logprob: -6.7559814453125
    5. 'return' → logprob: -7.2559814453125
    6. 'def' → logprob: -7.8809814453125
    7. 'Read' → logprob: -11.1309814453125
    8. 'split' → logprob: -11.1309814453125
    9. '_read' → logprob: -11.2559814453125
    10. '
' → logprob: -11.5059814453125

Token 656: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19186268746852875
    2. '):' → logprob: -2.3168625831604004
    3. '):
' → logprob: -3.6918625831604004
    4. '(n' → logprob: -3.8168625831604004
    5. ':' → logprob: -4.1918625831604
    6. 'def' → logprob: -5.3168625831604
    7. ':
' → logprob: -5.3168625831604
    8. ')' → logprob: -5.6918625831604
    9. 'n' → logprob: -8.191863059997559
    10. ',' → logprob: -9.316863059997559

Token 657: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011269100941717625
    2. 'def' → logprob: -4.5112690925598145
    3. ')' → logprob: -8.886269569396973
    4. '```' → logprob: -9.636269569396973
    5. '"""
' → logprob: -11.761269569396973
    6. 'return' → logprob: -13.136269569396973
    7. ' def' → logprob: -13.261269569396973
    8. '):
' → logprob: -13.261269569396973
    9. '"""' → logprob: -13.886269569396973
    10. '       ' → logprob: -14.261269569396973

Token 658: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014312991872429848
    2. 'def' → logprob: -4.389313220977783
    3. 'return' → logprob: -6.889313220977783
    4. '```' → logprob: -7.389313220977783
    5. '"""
' → logprob: -10.014312744140625
    6. '
' → logprob: -10.639312744140625
    7. '``' → logprob: -10.764312744140625
    8. 'Returns' (adapté à ' Returns') → logprob: -10.889312744140625
    9. ')' → logprob: -11.514312744140625
    10. '       ' → logprob: -11.639312744140625

Token 659: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13304266333580017
    2. 'def' → logprob: -2.133042573928833
    3. '[' → logprob: -6.383042812347412
    4. '[n' → logprob: -6.883042812347412
    5. '[
' → logprob: -6.883042812347412
    6. ' def' → logprob: -7.008042812347412
    7. '```' → logprob: -7.758042812347412
    8. '[List' → logprob: -8.383042335510254
    9. ':' → logprob: -8.508042335510254
    10. ':
' → logprob: -9.258042335510254

Token 660: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07272490113973618
    2. '[' → logprob: -3.1977248191833496
    3. ' [' → logprob: -4.19772481918335
    4. '[s' → logprob: -5.19772481918335
    5. '[S' → logprob: -5.32272481918335
    6. '[str' → logprob: -6.82272481918335
    7. '[n' → logprob: -7.32272481918335
    8. '[string' → logprob: -7.57272481918335
    9. '[line' → logprob: -8.072725296020508
    10. '[List' → logprob: -8.322725296020508

Token 661: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.07892107218503952
    2. '[list' → logprob: -2.57892107963562
    3. '[List' → logprob: -10.9539213180542
    4. ' list' → logprob: -11.8289213180542
    5. 'List' → logprob: -12.7039213180542
    6. '```' → logprob: -13.4539213180542
    7. 'def' → logprob: -14.5789213180542
    8. '`' → logprob: -14.8289213180542
    9. '[' → logprob: -15.3289213180542
    10. '[[' → logprob: -15.3289213180542

Token 662: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.04247298091650009
    2. 'of' → logprob: -3.792473077774048
    3. '[' → logprob: -4.792472839355469
    4. '[list' → logprob: -5.167472839355469
    5. '[List' → logprob: -5.667472839355469
    6. '   ' → logprob: -7.292472839355469
    7. '[
' → logprob: -8.167472839355469
    8. '_of' → logprob: -8.792472839355469
    9. 'def' → logprob: -9.417472839355469
    10. 'Of' → logprob: -9.417472839355469

Token 663: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.011012573726475239
    2. ' list' → logprob: -4.761012554168701
    3. '[list' → logprob: -6.261012554168701
    4. '[str' → logprob: -8.01101303100586
    5. 'str' → logprob: -8.88601303100586
    6. '[' → logprob: -12.63601303100586
    7. 'List' → logprob: -13.26101303100586
    8. '(list' → logprob: -13.26101303100586
    9. '   ' → logprob: -13.38601303100586
    10. 'def' → logprob: -14.01101303100586

Token 664: ' of' (ID: 328)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.009343178942799568
    2. ' of' → logprob: -5.384343147277832
    3. 'of' → logprob: -5.759343147277832
    4. '[' → logprob: -7.634343147277832
    5. '(str' → logprob: -7.759343147277832
    6. 'str' → logprob: -8.384343147277832
    7. '[
' → logprob: -8.884343147277832
    8. 'def' → logprob: -9.384343147277832
    9. '[int' → logprob: -9.634343147277832
    10. '```' → logprob: -10.009343147277832

Token 665: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -4.191489642835222e-05
    2. ' str' → logprob: -10.750041961669922
    3. 'list' → logprob: -11.500041961669922
    4. '[str' → logprob: -11.500041961669922
    5. 'char' → logprob: -16.250041961669922
    6. 's' → logprob: -18.750041961669922
    7. '(str' → logprob: -19.125041961669922
    8. 'stri' → logprob: -19.375041961669922
    9. '	str' → logprob: -19.625041961669922
    10. 'chr' → logprob: -19.750041961669922

Token 666: ':' (ID: 25)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.07576879858970642
    2. '   ' → logprob: -2.8257687091827393
    3. '):
' → logprob: -5.700768947601318
    4. 'def' → logprob: -5.825768947601318
    5. ']' → logprob: -6.700768947601318
    6. '):' → logprob: -6.950768947601318
    7. ':' → logprob: -7.200768947601318
    8. ']:
' → logprob: -7.200768947601318
    9. ' =' → logprob: -7.700768947601318
    10. ':
' → logprob: -7.825768947601318

Token 667: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3011246919631958
    2. '   ' → logprob: -1.4261246919631958
    3. ' [' → logprob: -1.4261246919631958
    4. '[S' → logprob: -1.6761246919631958
    5. '[s' → logprob: -3.4261245727539062
    6. '[str' → logprob: -4.676124572753906
    7. '[]' → logprob: -5.801124572753906
    8. '[
' → logprob: -6.176124572753906
    9. '[i' → logprob: -6.426124572753906
    10. '[String' → logprob: -6.426124572753906

Token 668: '2' (ID: 17)
  Prédit: '[S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[S' → logprob: -0.28417596220970154
    2. '[[' → logprob: -1.534175992012024
    3. '[' → logprob: -4.034175872802734
    4. '[s' → logprob: -4.659175872802734
    5. '[str' → logprob: -6.159175872802734
    6. '[c' → logprob: -6.784175872802734
    7. '[string' → logprob: -7.409175872802734
    8. '[i' → logprob: -8.784175872802734
    9. 'return' → logprob: -9.034175872802734
    10. '[String' → logprob: -9.159175872802734

Token 669: 'D' (ID: 35)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1362138986587524
    2. '[[' → logprob: -1.7612138986587524
    3. '[str' → logprob: -1.8862138986587524
    4. 'ach' → logprob: -2.261213779449463
    5. '   ' → logprob: -2.761213779449463
    6. 'SR' → logprob: -2.886213779449463
    7. 'def' → logprob: -3.511213779449463
    8. 'f' → logprob: -3.636213779449463
    9. '[
' → logprob: -4.386213779449463
    10. 'of' → logprob: -4.511213779449463

Token 670: ' list' (ID: 1562)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 671: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.1313406378030777
    2. '[str' → logprob: -3.006340742111206
    3. '   ' → logprob: -3.131340742111206
    4. '[' → logprob: -4.506340503692627
    5. 'of' → logprob: -4.881340503692627
    6. '[int' → logprob: -5.506340503692627
    7. '[
' → logprob: -5.631340503692627
    8. '_of' → logprob: -7.506340503692627
    9. '<|end|>' → logprob: -7.506340503692627
    10. 'def' → logprob: -8.506340980529785

Token 672: ' characters' (ID: 9862)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.33490273356437683
    2. '[str' → logprob: -1.8349027633666992
    3. '[S' → logprob: -2.834902763366699
    4. ' list' → logprob: -3.709902763366699
    5. 'str' → logprob: -4.334902763366699
    6. 'S' → logprob: -4.459902763366699
    7. '[list' → logprob: -4.459902763366699
    8. '[s' → logprob: -6.459902763366699
    9. '[' → logprob: -6.834902763366699
    10. ' [' → logprob: -7.459902763366699

Token 673: '.
' (ID: 558)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.8522485494613647
    2. '(S' → logprob: -1.3522485494613647
    3. '   ' → logprob: -1.9772485494613647
    4. '(' → logprob: -2.8522486686706543
    5. 'for' → logprob: -3.6022486686706543
    6. 'def' → logprob: -4.102248668670654
    7. ' for' → logprob: -4.227248668670654
    8. ']' → logprob: -4.477248668670654
    9. ')' → logprob: -4.977248668670654
    10. '()' → logprob: -5.102248668670654

Token 674: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00535555137321353
    2. 'def' → logprob: -5.505355358123779
    3. '```' → logprob: -6.880355358123779
    4. '"""
' → logprob: -9.630355834960938
    5. '(n' → logprob: -10.505355834960938
    6. '):
' → logprob: -10.505355834960938
    7. '():
' → logprob: -10.755355834960938
    8. '
' → logprob: -10.880355834960938
    9. ')' → logprob: -11.255355834960938
    10. '(
' → logprob: -11.505355834960938

Token 675: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012605957686901093
    2. 'def' → logprob: -4.387606143951416
    3. '"""
' (adapté à ' """
') → logprob: -10.262605667114258
    4. 'return' → logprob: -11.262605667114258
    5. '```' → logprob: -11.387605667114258
    6. ')' → logprob: -11.887605667114258
    7. ']' → logprob: -12.387605667114258
    8. '	return' → logprob: -12.512605667114258
    9. '=' → logprob: -12.762605667114258
    10. '  ' → logprob: -13.012605667114258

Token 676: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.6166903151315637e-05
    2. 'def' → logprob: -11.625016212463379
    3. 'return' → logprob: -11.875016212463379
    4. '	return' → logprob: -16.125015258789062
    5. ' return' → logprob: -16.875015258789062
    6. '   ' → logprob: -17.375015258789062
    7. '       ' → logprob: -18.125015258789062
    8. '```' → logprob: -19.000015258789062
    9. '
' → logprob: -19.250015258789062
    10. '    ' → logprob: -19.375015258789062

Token 677: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0007001649355515838
    2. '   ' → logprob: -8.250699996948242
    3. '[S' → logprob: -8.375699996948242
    4. ' return' → logprob: -8.875699996948242
    5. '[' → logprob: -10.500699996948242
    6. '[
' → logprob: -11.000699996948242
    7. 'def' → logprob: -11.250699996948242
    8. '[s' → logprob: -11.875699996948242
    9. '```' → logprob: -12.875699996948242
    10. '[[' → logprob: -15.125699996948242

Token 678: ' [' (ID: 723)
  Prédit: '[S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[S' → logprob: -0.0660807341337204
    2. '[' → logprob: -2.8160808086395264
    3. '[list' → logprob: -5.566080570220947
    4. '[List' → logprob: -9.066081047058105
    5. '[[' → logprob: -9.566081047058105
    6. ' [' → logprob: -10.066081047058105
    7. '[s' → logprob: -10.566081047058105
    8. '[str' → logprob: -11.566081047058105
    9. '[String' → logprob: -11.816081047058105
    10. '[string' → logprob: -12.816081047058105

Token 679: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00043555660522542894
    2. '[list' → logprob: -7.7504353523254395
    3. '[S' → logprob: -12.500435829162598
    4. '(list' → logprob: -14.250435829162598
    5. 'S' → logprob: -15.375435829162598
    6. ' list' → logprob: -15.750435829162598
    7. '[s' → logprob: -16.37543487548828
    8. '[' → logprob: -17.12543487548828
    9. '=list' → logprob: -19.50043487548828
    10. '[List' → logprob: -20.37543487548828

Token 680: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -6.44443862256594e-05
    2. 'S' → logprob: -9.750064849853516
    3. '(' → logprob: -12.125064849853516
    4. '(s' → logprob: -14.375064849853516
    5. '((' → logprob: -16.875064849853516
    6. '(sys' → logprob: -17.000064849853516
    7. '(str' → logprob: -17.625064849853516
    8. '<S' → logprob: -18.875064849853516
    9. ' (' → logprob: -19.000064849853516
    10. '(
' → logprob: -19.125064849853516

Token 681: '())' (ID: 3516)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002586242975667119
    2. '())' → logprob: -6.127586364746094
    3. '().' → logprob: -8.877586364746094
    4. '()[' → logprob: -9.627586364746094
    5. '()
' → logprob: -10.127586364746094
    6. '(n' → logprob: -10.252586364746094
    7. '()]' → logprob: -10.377586364746094
    8. '(' → logprob: -10.752586364746094
    9. '(i' → logprob: -10.752586364746094
    10. '()`' → logprob: -11.377586364746094

Token 682: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7277568578720093
    2. '(n' → logprob: -0.9777568578720093
    3. 'for' → logprob: -1.9777568578720093
    4. ' for' → logprob: -6.102756977081299
    5. '(' → logprob: -8.60275650024414
    6. '(i' → logprob: -10.35275650024414
    7. '())' → logprob: -11.72775650024414
    8. ')' → logprob: -12.60275650024414
    9. '   ' → logprob: -12.72775650024414
    10. '	for' → logprob: -13.10275650024414

Token 683: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.4855663721391466e-05
    2. '_' → logprob: -11.250015258789062
    3. ' i' → logprob: -13.375015258789062
    4. '_i' → logprob: -15.500015258789062
    5. 'in' → logprob: -17.500015258789062
    6. '
' → logprob: -19.500015258789062
    7. ' in' → logprob: -19.625015258789062
    8. '`' → logprob: -19.750015258789062
    9. ' ' → logprob: -19.875015258789062
    10. '	i' → logprob: -20.500015258789062

Token 684: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4740915596485138
    2. 'in' → logprob: -0.9740915298461914
    3. 'range' → logprob: -12.349091529846191
    4. 'i' → logprob: -12.849091529846191
    5. 'n' → logprob: -13.099091529846191
    6. '(' → logprob: -13.724091529846191
    7. '(n' → logprob: -14.099091529846191
    8. 'for' → logprob: -14.224091529846191
    9. '(in' → logprob: -14.474091529846191
    10. ' ' → logprob: -15.099091529846191

Token 685: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.615255839889869e-05
    2. ' range' → logprob: -9.250096321105957
    3. '_range' → logprob: -19.00009536743164
    4. '(range' → logprob: -19.62509536743164
    5. 'in' → logprob: -20.37509536743164
    6. '_' → logprob: -21.50009536743164
    7. '
' → logprob: -21.50009536743164
    8. '	range' → logprob: -22.25009536743164
    9. 'i' → logprob: -22.50009536743164
    10. 'Range' → logprob: -23.37509536743164

Token 686: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.048333652317523956
    2. '(n' → logprob: -3.5483336448669434
    3. 'n' → logprob: -4.048333644866943
    4. ' range' → logprob: -7.048333644866943
    5. '(range' → logprob: -9.423334121704102
    6. 'in' → logprob: -12.173334121704102
    7. '(' → logprob: -12.673334121704102
    8. ' in' → logprob: -14.048334121704102
    9. ' n' → logprob: -14.548334121704102
    10. '_range' → logprob: -15.548334121704102

Token 687: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0001705246395431459
    2. ')' → logprob: -9.000170707702637
    3. ']' → logprob: -10.000170707702637
    4. ')]
' → logprob: -14.500170707702637
    5. ')],' → logprob: -15.250170707702637
    6. '   ' → logprob: -15.625170707702637
    7. '()]' → logprob: -15.750170707702637
    8. ')])' → logprob: -15.750170707702637
    9. '')]' → logprob: -15.875170707702637
    10. '}]' → logprob: -16.62516975402832

Token 688: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6345813274383545
    2. '<|end|>' → logprob: -1.3845813274383545
    3. '#' → logprob: -1.8845813274383545
    4. '
' → logprob: -2.7595813274383545
    5. '<|end|>' → logprob: -6.634581565856934
    6. '```' → logprob: -6.884581565856934
    7. '

' → logprob: -7.384581565856934
    8. 'class' → logprob: -7.634581565856934
    9. '\n' → logprob: -8.384581565856934
    10. '\' → logprob: -8.759581565856934

Token 689: ' MS' (ID: 15861)
  Prédit: 'WS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'WS' → logprob: -1.2340855598449707
    2. 'DR' → logprob: -2.1090855598449707
    3. 'main' → logprob: -2.2340855598449707
    4. 'WI' → logprob: -2.4840855598449707
    5. 'E' → logprob: -2.8590855598449707
    6. 'WR' → logprob: -3.2340855598449707
    7. 'MS' → logprob: -3.3590855598449707
    8. 'W' → logprob: -3.3590855598449707
    9. 'input' → logprob: -3.4840855598449707
    10. 'I' → logprob: -3.9840855598449707

Token 690: 'RL' (ID: 40408)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.17310313880443573
    2. '():' → logprob: -2.173103094100952
    3. '()>' → logprob: -4.548103332519531
    4. '():
' → logprob: -4.548103332519531
    5. '(n' → logprob: -4.548103332519531
    6. 'A' → logprob: -5.548103332519531
    7. 'E' → logprob: -5.798103332519531
    8. '(' → logprob: -5.923103332519531
    9. 'R' → logprob: -6.923103332519531
    10. '()">' → logprob: -7.048103332519531

Token 691: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00024846551241353154
    2. 'def' → logprob: -8.500248908996582
    3. ' (' → logprob: -10.875248908996582
    4. '(' → logprob: -11.000248908996582
    5. '(
' → logprob: -12.500248908996582
    6. ' def' → logprob: -12.875248908996582
    7. '<|end|>' → logprob: -14.375248908996582
    8. '<|end|>' → logprob: -14.375248908996582
    9. 'n' → logprob: -14.500248908996582
    10. '(def' → logprob: -15.125248908996582

Token 692: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.608482301235199
    2. '):' → logprob: -0.858482301235199
    3. '(n' → logprob: -3.4834823608398438
    4. ')' → logprob: -7.358482360839844
    5. 'def' → logprob: -7.483482360839844
    6. '):
' → logprob: -9.608482360839844
    7. '   ' → logprob: -10.983482360839844
    8. 'for' → logprob: -11.983482360839844
    9. '):

' → logprob: -12.233482360839844
    10. ')(' → logprob: -12.233482360839844

Token 693: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.20226392149925232
    2. 'def' → logprob: -1.7022639513015747
    3. ' def' → logprob: -8.077263832092285
    4. ':' → logprob: -8.952263832092285
    5. '   ' → logprob: -8.952263832092285
    6. '(S' → logprob: -9.452263832092285
    7. '(
' → logprob: -9.827263832092285
    8. '(' → logprob: -10.452263832092285
    9. 'n' → logprob: -10.577263832092285
    10. ':
' → logprob: -10.577263832092285

Token 694: ' """
' (ID: 7037)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04545852914452553
    2. '"""
' (adapté à ' """
') → logprob: -3.4204585552215576
    3. 'return' → logprob: -5.5454583168029785
    4. '   ' → logprob: -5.5454583168029785
    5. '[' → logprob: -6.1704583168029785
    6. ' def' → logprob: -7.4204583168029785
    7. ''''
' → logprob: -7.6704583168029785
    8. '[
' → logprob: -7.6704583168029785
    9. '
' → logprob: -9.545458793640137
    10. ' return' → logprob: -9.920458793640137

Token 695: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0008939516264945269
    2. '   ' → logprob: -7.625894069671631
    3. '"""
' → logprob: -8.000893592834473
    4. ' def' → logprob: -9.750893592834473
    5. 'MS' → logprob: -12.625893592834473
    6. 'n' → logprob: -13.125893592834473
    7. ''''
' → logprob: -13.125893592834473
    8. '```' → logprob: -13.750893592834473
    9. '
' → logprob: -14.125893592834473
    10. '(n' → logprob: -14.375893592834473

Token 696: ' Reads' (ID: 88839)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005102122202515602
    2. '   ' → logprob: -5.880102157592773
    3. '"""
' → logprob: -6.130102157592773
    4. ' def' → logprob: -9.380102157592773
    5. 'Reads' (adapté à ' Reads') → logprob: -10.755102157592773
    6. ''''
' → logprob: -12.380102157592773
    7. 'return' → logprob: -13.005102157592773
    8. '"""' → logprob: -13.630102157592773
    9. '
' → logprob: -13.755102157592773
    10. 'for' → logprob: -13.880102157592773

Token 697: ' '' (ID: 461)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08627491444349289
    2. '(n' → logprob: -3.3362748622894287
    3. 'def' → logprob: -3.3362748622894287
    4. ' n' → logprob: -4.711275100708008
    5. '[n' → logprob: -6.836275100708008
    6. ''n' → logprob: -7.086275100708008
    7. '	n' → logprob: -9.336275100708008
    8. '   ' → logprob: -9.586275100708008
    9. ' def' → logprob: -9.586275100708008
    10. '_n' → logprob: -9.836275100708008

Token 698: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005575236864387989
    2. '[n' → logprob: -5.380575180053711
    3. '[int' → logprob: -7.630575180053711
    4. '[' → logprob: -8.630575180053711
    5. 'int' → logprob: -9.255575180053711
    6. '(n' → logprob: -10.380575180053711
    7. 'S' → logprob: -10.380575180053711
    8. 'MS' → logprob: -10.505575180053711
    9. 'list' → logprob: -10.630575180053711
    10. '[S' → logprob: -10.880575180053711

Token 699: ''' (ID: 6)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0025804166216403246
    2. '(' → logprob: -7.002580642700195
    3. 'def' → logprob: -7.127580642700195
    4. ')' → logprob: -8.127580642700195
    5. '_lines' → logprob: -8.377580642700195
    6. '(lines' → logprob: -9.627580642700195
    7. ' (' → logprob: -10.377580642700195
    8. ' lines' → logprob: -10.627580642700195
    9. '```' → logprob: -10.877580642700195
    10. '_LINES' → logprob: -11.002580642700195

Token 700: ' lines' (ID: 8698)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6437260508537292
    2. 'lines' → logprob: -1.893726110458374
    3. '()' → logprob: -2.018726110458374
    4. 'def' → logprob: -2.768726110458374
    5. '_lines' → logprob: -3.143726110458374
    6. ' lines' → logprob: -3.143726110458374
    7. '(lines' → logprob: -3.393726110458374
    8. '(S' → logprob: -5.893725872039795
    9. 's' → logprob: -6.768725872039795
    10. 'Lines' → logprob: -6.893725872039795

Token 701: ' from' (ID: 591)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8656688332557678
    2. 'from' → logprob: -0.8656688332557678
    3. '(n' → logprob: -2.115668773651123
    4. '   ' → logprob: -3.990668773651123
    5. 'for' → logprob: -4.365668773651123
    6. ' from' → logprob: -6.240668773651123
    7. '(S' → logprob: -6.365668773651123
    8. '(' → logprob: -6.740668773651123
    9. ' for' → logprob: -7.490668773651123
    10. '(def' → logprob: -8.240669250488281

Token 702: ' input' (ID: 3422)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.3035643994808197
    2. 'S' → logprob: -1.428564429283142
    3. 'input' → logprob: -4.803564548492432
    4. 'list' → logprob: -4.803564548492432
    5. ' sys' → logprob: -6.553564548492432
    6. 'MS' → logprob: -7.178564548492432
    7. 'def' → logprob: -7.303564548492432
    8. 'string' → logprob: -7.803564548492432
    9. 'buffer' → logprob: -7.803564548492432
    10. 'stdin' → logprob: -7.928564548492432

Token 703: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31151220202445984
    2. '   ' → logprob: -2.0615122318267822
    3. '(n' → logprob: -2.3115122318267822
    4. 'for' → logprob: -4.186511993408203
    5. ',' → logprob: -4.936511993408203
    6. ' for' → logprob: -5.061511993408203
    7. 'from' → logprob: -5.186511993408203
    8. ' def' → logprob: -6.436511993408203
    9. 's' → logprob: -6.936511993408203
    10. ')' → logprob: -7.061511993408203

Token 704: ' converting' (ID: 55111)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6682795882225037
    2. 'def' → logprob: -1.1682796478271484
    3. '   ' → logprob: -2.2932796478271484
    4. ' return' → logprob: -2.9182796478271484
    5. ' returning' → logprob: -4.293279647827148
    6. ' def' → logprob: -6.043279647827148
    7. ' each' → logprob: -6.293279647827148
    8. 'each' → logprob: -6.543279647827148
    9. ' splitting' → logprob: -7.668279647827148
    10. '
' → logprob: -8.293279647827148

Token 705: ' each' (ID: 2454)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.9724732041358948
    2. 'S' → logprob: -1.09747314453125
    3. 'n' → logprob: -1.84747314453125
    4. 'def' → logprob: -3.22247314453125
    5. 'LS' → logprob: -3.97247314453125
    6. 'SR' → logprob: -4.09747314453125
    7. '[n' → logprob: -4.47247314453125
    8. '   ' → logprob: -4.97247314453125
    9. ' list' → logprob: -5.34747314453125
    10. 'lambda' → logprob: -5.59747314453125

Token 706: ' character' (ID: 5855)
  Prédit: '(list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.9711853861808777
    2. '(
' → logprob: -1.8461854457855225
    3. '(S' → logprob: -1.9711854457855225
    4. '(lambda' → logprob: -2.4711854457855225
    5. '=list' → logprob: -2.4711854457855225
    6. 'def' → logprob: -3.3461854457855225
    7. '(' → logprob: -3.4711854457855225
    8. '=' → logprob: -3.5961854457855225
    9. '=lambda' → logprob: -4.221185207366943
    10. '   ' → logprob: -4.221185207366943

Token 707: ' to' (ID: 316)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8796644806861877
    2. '(S' → logprob: -1.504664421081543
    3. ' for' → logprob: -1.879664421081543
    4. ')' → logprob: -2.879664421081543
    5. 'to' → logprob: -3.004664421081543
    6. '()' → logprob: -3.254664421081543
    7. '   ' → logprob: -3.754664421081543
    8. ' into' → logprob: -4.254664421081543
    9. ' to' → logprob: -4.629664421081543
    10. 'into' → logprob: -5.504664421081543

Token 708: ' an' (ID: 448)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.40591633319854736
    2. 'list' → logprob: -1.1559163331985474
    3. '[int' → logprob: -4.030916213989258
    4. 'ord' → logprob: -6.905916213989258
    5. 'str' → logprob: -10.905916213989258
    6. 'ints' → logprob: -11.280916213989258
    7. 'lambda' → logprob: -11.530916213989258
    8. '[' → logprob: -11.655916213989258
    9. ' int' → logprob: -11.780916213989258
    10. '
' → logprob: -11.780916213989258

Token 709: ' integer' (ID: 16336)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.003821933176368475
    2. ' int' → logprob: -5.628821849822998
    3. 'list' → logprob: -9.003822326660156
    4. 'integer' → logprob: -10.503822326660156
    5. '[int' → logprob: -10.628822326660156
    6. 'ord' → logprob: -11.753822326660156
    7. '_int' → logprob: -11.753822326660156
    8. ' integer' → logprob: -12.003822326660156
    9. '   ' → logprob: -12.128822326660156
    10. '
' → logprob: -12.253822326660156

Token 710: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23564083874225616
    2. '(S' → logprob: -1.9856408834457397
    3. '(' → logprob: -3.61064076423645
    4. ' for' → logprob: -4.110641002655029
    5. '   ' → logprob: -5.110641002655029
    6. 's' → logprob: -5.360641002655029
    7. '(list' → logprob: -5.735641002655029
    8. ',' → logprob: -5.860641002655029
    9. 'def' → logprob: -6.235641002655029
    10. '(i' → logprob: -6.360641002655029

Token 711: ' and' (ID: 326)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.492266446352005
    2. '   ' → logprob: -1.2422664165496826
    3. ' def' → logprob: -2.8672664165496826
    4. 'return' → logprob: -4.117266654968262
    5. ' returning' → logprob: -4.242266654968262
    6. ' and' → logprob: -5.117266654968262
    7. ' return' → logprob: -6.117266654968262
    8. 'and' → logprob: -6.867266654968262
    9. '    ' → logprob: -6.867266654968262
    10. '
' → logprob: -7.617266654968262

Token 712: ' returns' (ID: 7377)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.339857816696167
    2. 'return' → logprob: -2.339857816696167
    3. ' returning' → logprob: -2.714857816696167
    4. 'def' → logprob: -2.839857816696167
    5. ' returns' → logprob: -3.214857816696167
    6. 'returns' → logprob: -3.839857816696167
    7. '
' → logprob: -5.964858055114746
    8. ' return' → logprob: -6.714858055114746
    9. ' def' → logprob: -6.964858055114746
    10. '    ' → logprob: -8.339858055114746

Token 713: '
' (ID: 198)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.009298177435994148
    2. '[List' → logprob: -5.259298324584961
    3. '[[' → logprob: -6.009298324584961
    4. '[' → logprob: -7.134298324584961
    5. '   ' → logprob: -8.384298324584961
    6. '[n' → logprob: -8.634298324584961
    7. ' [' → logprob: -8.884298324584961
    8. '[line' → logprob: -9.384298324584961
    9. '[int' → logprob: -9.884298324584961
    10. '[len' → logprob: -10.259298324584961

Token 714: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.181110143661499
    2. '[list' → logprob: -1.681110143661499
    3. '[n' → logprob: -1.806110143661499
    4. ' [' → logprob: -1.806110143661499
    5. '   ' → logprob: -2.306110143661499
    6. '[List' → logprob: -3.056110143661499
    7. '[int' → logprob: -4.556110382080078
    8. '[i' → logprob: -4.556110382080078
    9. '[len' → logprob: -5.806110382080078
    10. '[line' → logprob: -6.056110382080078

Token 715: ' as' (ID: 472)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.004444243386387825
    2. '[[' → logprob: -5.754444122314453
    3. '[List' → logprob: -6.754444122314453
    4. '[' → logprob: -9.754444122314453
    5. '[int' → logprob: -10.254444122314453
    6. '[np' → logprob: -13.254444122314453
    7. '[line' → logprob: -13.504444122314453
    8. '[i' → logprob: -14.129444122314453
    9. ' [' → logprob: -14.254444122314453
    10. '   ' → logprob: -14.754444122314453

Token 716: ' a' (ID: 261)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.003879642579704523
    2. '[[' → logprob: -6.003879547119141
    3. '[List' → logprob: -6.753879547119141
    4. ' [' → logprob: -8.87887954711914
    5. '[int' → logprob: -10.12887954711914
    6. '[' → logprob: -10.87887954711914
    7. '[i' → logprob: -11.00387954711914
    8. '[line' → logprob: -11.87887954711914
    9. '[np' → logprob: -12.87887954711914
    10. ' [[' → logprob: -13.00387954711914

Token 717: ' list' (ID: 1562)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.22960278391838074
    2. '[[' → logprob: -2.479602813720703
    3. '[
' → logprob: -3.479602813720703
    4. '[n' → logprob: -3.854602813720703
    5. '[int' → logprob: -4.229602813720703
    6. ' list' → logprob: -4.229602813720703
    7. '[' → logprob: -4.604602813720703
    8. 'list' → logprob: -4.729602813720703
    9. '[List' → logprob: -4.729602813720703
    10. ' [' → logprob: -4.729602813720703

Token 718: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.33763158321380615
    2. ' of' → logprob: -2.0876317024230957
    3. '[list' → logprob: -2.5876317024230957
    4. '[int' → logprob: -2.7126317024230957
    5. '   ' → logprob: -4.587631702423096
    6. '[List' → logprob: -4.837631702423096
    7. '[' → logprob: -7.087631702423096
    8. '[[' → logprob: -7.337631702423096
    9. '
' → logprob: -7.712631702423096
    10. '_of' → logprob: -8.212631225585938

Token 719: ' lists' (ID: 19471)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.03126174956560135
    2. '[list' → logprob: -3.781261682510376
    3. 'lists' → logprob: -4.906261920928955
    4. '[List' → logprob: -8.781261444091797
    5. ' list' → logprob: -9.031261444091797
    6. ' lists' → logprob: -9.281261444091797
    7. '[int' → logprob: -9.531261444091797
    8. '[
' → logprob: -9.781261444091797
    9. '
' → logprob: -10.406261444091797
    10. 'List' → logprob: -11.031261444091797

Token 720: ' of' (ID: 328)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.6611801385879517
    2. '(int' → logprob: -0.7861801385879517
    3. 'of' → logprob: -4.786180019378662
    4. '(
' → logprob: -4.911180019378662
    5. '(' → logprob: -5.536180019378662
    6. ' of' → logprob: -5.911180019378662
    7. '(range' → logprob: -6.536180019378662
    8. '(list' → logprob: -7.036180019378662
    9. '[
' → logprob: -7.161180019378662
    10. '([' → logprob: -7.286180019378662

Token 721: ' integers' (ID: 54912)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0004950098809786141
    2. 'ints' → logprob: -7.750494956970215
    3. '[int' → logprob: -10.125494956970215
    4. ' int' → logprob: -11.000494956970215
    5. 'inte' → logprob: -12.125494956970215
    6. 'list' → logprob: -13.375494956970215
    7. ' ints' → logprob: -14.875494956970215
    8. '(int' → logprob: -16.25049591064453
    9. '```' → logprob: -17.50049591064453
    10. 'lists' → logprob: -17.50049591064453

Token 722: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.052533719688653946
    2. '   ' → logprob: -3.9275336265563965
    3. 'for' → logprob: -4.3025336265563965
    4. ' for' → logprob: -4.9275336265563965
    5. '(' → logprob: -5.8025336265563965
    6. '(S' → logprob: -5.8025336265563965
    7. 'def' → logprob: -6.1775336265563965
    8. ' (' → logprob: -7.3025336265563965
    9. '[' → logprob: -7.8025336265563965
    10. '(i' → logprob: -8.302534103393555

Token 723: 'use' (ID: 1821)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.15926189720630646
    2. ')' → logprob: -2.90926194190979
    3. '   ' → logprob: -3.15926194190979
    4. '[i' → logprob: -4.284261703491211
    5. 'int' → logprob: -4.409261703491211
    6. 'list' → logprob: -5.159261703491211
    7. '[list' → logprob: -5.284261703491211
    8. '[' → logprob: -5.909261703491211
    9. '[
' → logprob: -6.034261703491211
    10. 'S' → logprob: -6.034261703491211

Token 724: 'ful' (ID: 1500)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.04175910726189613
    2. '[list' → logprob: -3.9167590141296387
    3. '[' → logprob: -4.791759014129639
    4. '[
' → logprob: -5.416759014129639
    5. 'def' → logprob: -5.666759014129639
    6. 'r' → logprob: -6.916759014129639
    7. '[List' → logprob: -6.916759014129639
    8. '[len' → logprob: -7.666759014129639
    9. '[r' → logprob: -7.916759014129639
    10. 'range' → logprob: -7.916759014129639

Token 725: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4679434299468994
    2. ' for' → logprob: -1.0929434299468994
    3. '   ' → logprob: -3.5929434299468994
    4. 'def' → logprob: -4.84294319152832
    5. '[int' → logprob: -6.59294319152832
    6. ')' → logprob: -7.09294319152832
    7. '=' → logprob: -8.84294319152832
    8. '=lambda' → logprob: -9.09294319152832
    9. 'of' → logprob: -9.71794319152832
    10. '```' → logprob: -9.96794319152832

Token 726: ' matrices' (ID: 75935)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.0918615385890007
    2. 'n' → logprob: -2.9668614864349365
    3. 'matrix' → logprob: -4.716861724853516
    4. 'gr' → logprob: -4.966861724853516
    5. 'reading' → logprob: -4.966861724853516
    6. 'i' → logprob: -5.841861724853516
    7. 'digit' → logprob: -6.216861724853516
    8. 'binary' → logprob: -6.216861724853516
    9. 'MS' → logprob: -6.841861724853516
    10. 'm' → logprob: -6.966861724853516

Token 727: ' input' (ID: 3422)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.991497814655304
    2. ')' → logprob: -1.6164977550506592
    3. '):' → logprob: -1.6164977550506592
    4. ').' → logprob: -2.741497755050659
    5. 'def' → logprob: -2.991497755050659
    6. 'of' → logprob: -3.616497755050659
    7. '(n' → logprob: -3.616497755050659
    8. '   ' → logprob: -3.991497755050659
    9. ' of' → logprob: -4.241497993469238
    10. 'for' → logprob: -4.741497993469238

Token 728: ').

' (ID: 3991)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.367700457572937
    2. 'def' → logprob: -2.2427005767822266
    3. '(n' → logprob: -2.7427005767822266
    4. '   ' → logprob: -3.2427005767822266
    5. '):' → logprob: -3.2427005767822266
    6. ')' → logprob: -3.7427005767822266
    7. ').' → logprob: -3.7427005767822266
    8. ').
' → logprob: -5.367700576782227
    9. 'for' → logprob: -6.367700576782227
    10. ')
' → logprob: -6.492700576782227

Token 729: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.056257572025060654
    2. '   ' → logprob: -2.931257486343384
    3. '(n' → logprob: -6.806257724761963
    4. '```' → logprob: -8.431257247924805
    5. ' def' → logprob: -10.806257247924805
    6. '"""
' → logprob: -11.681257247924805
    7. '``' → logprob: -11.931257247924805
    8. '[n' → logprob: -12.306257247924805
    9. '
' → logprob: -12.681257247924805
    10. 'n' → logprob: -14.306257247924805

Token 730: ' Args' (ID: 39185)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5582205057144165
    2. '   ' → logprob: -1.0582205057144165
    3. 'return' → logprob: -2.558220386505127
    4. ' return' → logprob: -5.808220386505127
    5. '```' → logprob: -9.558220863342285
    6. '
' → logprob: -10.183220863342285
    7. ' def' → logprob: -10.183220863342285
    8. '	return' → logprob: -10.308220863342285
    9. ':return' → logprob: -10.683220863342285
    10. '    ' → logprob: -11.808220863342285

Token 731: ':
' (ID: 734)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.12232188880443573
    2. 'def' → logprob: -2.372321844100952
    3. '   ' → logprob: -3.872321844100952
    4. '```' → logprob: -7.247322082519531
    5. '
' → logprob: -9.122322082519531
    6. '(' → logprob: -9.622322082519531
    7. '(
' → logprob: -9.622322082519531
    8. ' (' → logprob: -11.247322082519531
    9. '(defun' → logprob: -11.372322082519531
    10. '(def' → logprob: -11.497322082519531

Token 732: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3150038719177246
    2. 'n' → logprob: -1.3150038719177246
    3. '       ' → logprob: -7.190003871917725
    4. '(n' → logprob: -7.940003871917725
    5. 'def' → logprob: -8.315004348754883
    6. ' n' → logprob: -8.690004348754883
    7. '	n' → logprob: -9.190004348754883
    8. '```' → logprob: -10.565004348754883
    9. '    ' → logprob: -10.690004348754883
    10. '
' → logprob: -10.815004348754883

Token 733: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -2.935296834039036e-06
    2. ' n' → logprob: -13.62500286102295
    3. 'def' → logprob: -14.12500286102295
    4. '   ' → logprob: -14.25000286102295
    5. '	n' → logprob: -16.750003814697266
    6. '```' → logprob: -16.750003814697266
    7. 'ndef' → logprob: -17.125003814697266
    8. '
' → logprob: -17.250003814697266
    9. '(n' → logprob: -17.500003814697266
    10. '<|end|>' → logprob: -17.875003814697266

Token 734: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.03658491000533104
    2. '(n' → logprob: -3.7865848541259766
    3. ':' → logprob: -4.786584854125977
    4. '(int' → logprob: -5.786584854125977
    5. '):
' → logprob: -8.036584854125977
    6. '   ' → logprob: -8.036584854125977
    7. ':int' → logprob: -8.036584854125977
    8. ')' → logprob: -8.161584854125977
    9. '):' → logprob: -8.786584854125977
    10. '```' → logprob: -9.161584854125977

Token 735: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.704273118884885e-07
    2. ' int' → logprob: -15.125000953674316
    3. '   ' → logprob: -16.125
    4. '[int' → logprob: -16.125
    5. 'def' → logprob: -17.0
    6. '(int' → logprob: -17.0
    7. '=int' → logprob: -17.375
    8. ':int' → logprob: -17.5
    9. 'n' → logprob: -17.625
    10. ')' → logprob: -17.75

Token 736: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.015915529802441597
    2. ':' → logprob: -4.890915393829346
    3. '):
' → logprob: -4.890915393829346
    4. ')' → logprob: -7.515915393829346
    5. '   ' → logprob: -9.140915870666504
    6. ':int' → logprob: -9.890915870666504
    7. ' ):' → logprob: -11.015915870666504
    8. '=' → logprob: -11.515915870666504
    9. '(n' → logprob: -12.140915870666504
    10. '=int' → logprob: -12.515915870666504

Token 737: ' Number' (ID: 9184)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0001363168703392148
    2. '   ' → logprob: -9.750136375427246
    3. '[int' → logprob: -10.500136375427246
    4. 'def' → logprob: -11.125136375427246
    5. '(int' → logprob: -11.125136375427246
    6. ' int' → logprob: -11.125136375427246
    7. '```' → logprob: -13.625136375427246
    8. 'n' → logprob: -13.750136375427246
    9. 'list' → logprob: -14.375136375427246
    10. '=int' → logprob: -14.500136375427246

Token 738: ' of' (ID: 328)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.020770305767655373
    2. 'def' → logprob: -4.270770072937012
    3. '):
' → logprob: -6.770770072937012
    4. '   ' → logprob: -6.770770072937012
    5. 'of' → logprob: -7.145770072937012
    6. '(S' → logprob: -7.645770072937012
    7. ':' → logprob: -7.645770072937012
    8. '
' → logprob: -7.770770072937012
    9. '(' → logprob: -8.020770072937012
    10. '):' → logprob: -8.270770072937012

Token 739: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.01378899160772562
    2. ' lines' → logprob: -4.638789176940918
    3. 'int' → logprob: -5.638789176940918
    4. 'rows' → logprob: -7.888789176940918
    5. '_lines' → logprob: -10.763789176940918
    6. 'n' → logprob: -10.888789176940918
    7. ')' → logprob: -11.013789176940918
    8. 'input' → logprob: -11.513789176940918
    9. 'Lines' → logprob: -12.263789176940918
    10. 'line' → logprob: -12.513789176940918

Token 740: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9819706082344055
    2. '):' → logprob: -1.1069705486297607
    3. '   ' → logprob: -1.7319705486297607
    4. '):
' → logprob: -2.6069705486297607
    5. ')' → logprob: -3.8569705486297607
    6. '(n' → logprob: -4.60697078704834
    7. 'def' → logprob: -4.98197078704834
    8. '
' → logprob: -6.60697078704834
    9. '=' → logprob: -6.73197078704834
    10. 'for' → logprob: -7.35697078704834

Token 741: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.003196727717295289
    2. ' read' → logprob: -5.753196716308594
    3. '_read' → logprob: -11.628196716308594
    4. 'range' → logprob: -12.878196716308594
    5. '
' → logprob: -13.628196716308594
    6. ')' → logprob: -13.628196716308594
    7. 'return' → logprob: -13.878196716308594
    8. 'write' → logprob: -14.253196716308594
    9. '   ' → logprob: -14.378196716308594
    10. 'Read' → logprob: -14.378196716308594

Token 742: '.

' (ID: 364)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04233574867248535
    2. '(n' → logprob: -3.6673357486724854
    3. '):' → logprob: -4.292335510253906
    4. ')' → logprob: -7.042335510253906
    5. '   ' → logprob: -7.042335510253906
    6. 'def' → logprob: -8.292335510253906
    7. '```' → logprob: -9.542335510253906
    8. '):
' → logprob: -10.292335510253906
    9. ''):
' → logprob: -10.417335510253906
    10. 'n' → logprob: -10.792335510253906

Token 743: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.2987729102605954e-05
    2. ')' → logprob: -11.125042915344238
    3. 'return' → logprob: -11.125042915344238
    4. '```' → logprob: -12.375042915344238
    5. '):
' → logprob: -12.500042915344238
    6. '
' → logprob: -12.875042915344238
    7. '  ' → logprob: -14.500042915344238
    8. ' return' → logprob: -14.500042915344238
    9. 'def' → logprob: -14.875042915344238
    10. ')
' → logprob: -15.125042915344238

Token 744: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00031270162435248494
    2. '"""
' → logprob: -8.500312805175781
    3. '```' → logprob: -10.125312805175781
    4. 'return' → logprob: -10.500312805175781
    5. ')' → logprob: -11.250312805175781
    6. 'def' → logprob: -11.375312805175781
    7. '
' → logprob: -12.125312805175781
    8. '``' → logprob: -12.750312805175781
    9. '       ' → logprob: -13.375312805175781
    10. '"""' → logprob: -13.625312805175781

Token 745: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3695441484451294
    2. 'def' → logprob: -2.36954402923584
    3. '[n' → logprob: -2.49454402923584
    4. '[' → logprob: -3.24454402923584
    5. '[
' → logprob: -3.61954402923584
    6. ':' → logprob: -3.74454402923584
    7. '[List' → logprob: -4.11954402923584
    8. ':
' → logprob: -4.49454402923584
    9. '[int' → logprob: -5.61954402923584
    10. '(n' → logprob: -5.61954402923584

Token 746: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2451576590538025
    2. '[n' → logprob: -2.2451577186584473
    3. ' [' → logprob: -2.8701577186584473
    4. '[' → logprob: -2.9951577186584473
    5. '[List' → logprob: -6.245157718658447
    6. '[int' → logprob: -6.745157718658447
    7. '[
' → logprob: -7.870157718658447
    8. '    ' → logprob: -7.995157718658447
    9. '[list' → logprob: -8.370157241821289
    10. '[i' → logprob: -8.745157241821289

Token 747: ' list' (ID: 1562)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.49572163820266724
    2. '[List' → logprob: -0.9957216382026672
    3. 'list' (adapté à ' list') → logprob: -4.495721817016602
    4. 'List' → logprob: -4.745721817016602
    5. '[[' → logprob: -6.870721817016602
    6. '[' → logprob: -8.120721817016602
    7. '[int' → logprob: -8.870721817016602
    8. '[
' → logprob: -10.745721817016602
    9. '   ' → logprob: -10.995721817016602
    10. ' list' → logprob: -11.120721817016602

Token 748: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.2289583384990692
    2. 'of' → logprob: -1.7289583683013916
    3. '[list' → logprob: -3.8539583683013916
    4. '   ' → logprob: -6.1039581298828125
    5. '[List' → logprob: -6.2289581298828125
    6. '_of' → logprob: -7.4789581298828125
    7. '[' → logprob: -7.6039581298828125
    8. '[int' → logprob: -8.353958129882812
    9. '```' → logprob: -8.728958129882812
    10. 'Of' → logprob: -9.353958129882812

Token 749: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -7.896309739408025e-07
    2. ' list' → logprob: -14.250000953674316
    3. 'lists' → logprob: -16.625
    4. '[list' → logprob: -16.75
    5. 'List' → logprob: -18.0
    6. 'int' → logprob: -19.25
    7. '(list' → logprob: -23.0
    8. '   ' → logprob: -24.0
    9. '
' → logprob: -24.0
    10. '	list' → logprob: -24.25

Token 750: ' of' (ID: 328)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.682719886302948
    2. 'of' → logprob: -0.932719886302948
    3. ' of' → logprob: -2.3077199459075928
    4. '[' → logprob: -6.682719707489014
    5. '_of' → logprob: -8.432720184326172
    6. '   ' → logprob: -9.307720184326172
    7. '```' → logprob: -9.307720184326172
    8. '	of' → logprob: -9.557720184326172
    9. '<int' → logprob: -10.932720184326172
    10. '
' → logprob: -11.307720184326172

Token 751: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.337155355140567e-05
    2. ' int' → logprob: -9.750062942504883
    3. '[int' → logprob: -12.500062942504883
    4. 'ints' → logprob: -14.250062942504883
    5. '```' → logprob: -15.250062942504883
    6. '(int' → logprob: -16.125062942504883
    7. '<int' → logprob: -16.375062942504883
    8. '   ' → logprob: -16.500062942504883
    9. '	int' → logprob: -17.375062942504883
    10. '
' → logprob: -17.375062942504883

Token 752: ':' (ID: 25)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.8538028597831726
    2. '   ' → logprob: -1.1038029193878174
    3. 'def' → logprob: -2.3538029193878174
    4. '):
' → logprob: -3.2288029193878174
    5. ':' → logprob: -3.3538029193878174
    6. '):' → logprob: -3.8538029193878174
    7. '(n' → logprob: -4.103802680969238
    8. ':
' → logprob: -4.728802680969238
    9. '[' → logprob: -5.478802680969238
    10. ']:
' → logprob: -5.603802680969238

Token 753: ' ' (ID: 220)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.7215439677238464
    2. '[[' → logprob: -0.9715439677238464
    3. '[int' → logprob: -2.471544027328491
    4. '[' → logprob: -3.721544027328491
    5. '[List' → logprob: -3.846544027328491
    6. ' [' → logprob: -5.971543788909912
    7. '[m' → logprob: -6.596543788909912
    8. '[i' → logprob: -8.22154426574707
    9. '[Int' → logprob: -8.34654426574707
    10. '   ' → logprob: -8.59654426574707

Token 754: '2' (ID: 17)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.44761714339256287
    2. '[int' → logprob: -1.1976171731948853
    3. '[list' → logprob: -3.1976170539855957
    4. '[List' → logprob: -4.447617053985596
    5. '[' → logprob: -5.197617053985596
    6. '[Int' → logprob: -8.322617530822754
    7. '[M' → logprob: -8.697617530822754
    8. '[m' → logprob: -8.822617530822754
    9. '[i' → logprob: -9.322617530822754
    10. '[L' → logprob: -10.322617530822754

Token 755: 'D' (ID: 35)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.3270108997821808
    2. 'of' → logprob: -1.9520108699798584
    3. '   ' → logprob: -3.2020108699798584
    4. 'def' → logprob: -3.4520108699798584
    5. '[' → logprob: -3.5770108699798584
    6. 'D' → logprob: -4.5770111083984375
    7. ' of' → logprob: -5.5770111083984375
    8. 'dim' → logprob: -5.7020111083984375
    9. '[str' → logprob: -5.9520111083984375
    10. '[list' → logprob: -6.2020111083984375

Token 756: ' list' (ID: 1562)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.09377127140760422
    2. '[list' → logprob: -3.71877121925354
    3. '[' → logprob: -3.84377121925354
    4. 'def' → logprob: -4.718771457672119
    5. ' of' → logprob: -4.968771457672119
    6. ' list' → logprob: -4.968771457672119
    7. '[
' → logprob: -5.093771457672119
    8. ' def' → logprob: -5.343771457672119
    9. '[List' → logprob: -6.343771457672119
    10. '[str' → logprob: -6.468771457672119

Token 757: ' of' (ID: 328)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.09019461274147034
    2. ' of' → logprob: -2.7151947021484375
    3. '   ' → logprob: -5.0901947021484375
    4. '_of' → logprob: -5.5901947021484375
    5. 'of' → logprob: -5.8401947021484375
    6. '(int' → logprob: -6.2151947021484375
    7. '[
' → logprob: -6.3401947021484375
    8. '<int' → logprob: -7.2151947021484375
    9. '[' → logprob: -7.3401947021484375
    10. '(map' → logprob: -7.8401947021484375

Token 758: ' integers' (ID: 54912)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06830798089504242
    2. '[int' → logprob: -3.068307876586914
    3. 'list' → logprob: -4.193307876586914
    4. 'ints' → logprob: -5.943307876586914
    5. 'lists' → logprob: -6.693307876586914
    6. 'inte' → logprob: -8.443307876586914
    7. ' int' → logprob: -8.443307876586914
    8. ' ints' → logprob: -10.193307876586914
    9. '[list' → logprob: -10.318307876586914
    10. '(int' → logprob: -10.943307876586914

Token 759: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6187816858291626
    2. '(S' → logprob: -1.8687816858291626
    3. ' for' → logprob: -2.243781566619873
    4. '   ' → logprob: -2.993781566619873
    5. '([' → logprob: -2.993781566619873
    6. '[' → logprob: -3.243781566619873
    7. '([(' → logprob: -3.743781566619873
    8. '(n' → logprob: -4.618781566619873
    9. '[(' → logprob: -4.993781566619873
    10. ')' → logprob: -5.368781566619873

Token 760: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005967585020698607
    2. 'def' → logprob: -7.625596523284912
    3. '```' → logprob: -10.00059700012207
    4. '):
' → logprob: -11.50059700012207
    5. '(n' → logprob: -12.12559700012207
    6. '
' → logprob: -12.25059700012207
    7. '(
' → logprob: -12.37559700012207
    8. '(S' → logprob: -12.62559700012207
    9. '"""
' → logprob: -12.62559700012207
    10. '[
' → logprob: -12.62559700012207

Token 761: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021497849375009537
    2. 'def' → logprob: -6.75214958190918
    3. '):
' → logprob: -8.00214958190918
    4. ')' → logprob: -8.37714958190918
    5. '```' → logprob: -9.00214958190918
    6. 'return' → logprob: -9.50214958190918
    7. '"""
' (adapté à ' """
') → logprob: -9.87714958190918
    8. '
' → logprob: -10.37714958190918
    9. ')
' → logprob: -10.75214958190918
    10. '	return' → logprob: -11.12714958190918

Token 762: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002843384863808751
    2. 'def' → logprob: -8.375284194946289
    3. 'return' → logprob: -9.875284194946289
    4. '	return' → logprob: -14.250284194946289
    5. ' return' → logprob: -14.375284194946289
    6. '       ' → logprob: -14.750284194946289
    7. '```' → logprob: -15.125284194946289
    8. '
' → logprob: -15.375284194946289
    9. '{return' → logprob: -16.62528419494629
    10. '   ' → logprob: -17.37528419494629

Token 763: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01443954836577177
    2. '   ' → logprob: -4.264439582824707
    3. ' return' → logprob: -8.514439582824707
    4. 'def' → logprob: -9.514439582824707
    5. '
' → logprob: -13.764439582824707
    6. '	return' → logprob: -14.389439582824707
    7. '[
' → logprob: -17.13943862915039
    8. '```' → logprob: -17.13943862915039
    9. '{return' → logprob: -17.76443862915039
    10. 'MS' → logprob: -18.01443862915039

Token 764: ' [[' (ID: 9237)
  Prédit: '[L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[L' → logprob: -0.7634139060974121
    2. '[list' → logprob: -0.7634139060974121
    3. '[' → logprob: -3.013413906097412
    4. '[List' → logprob: -4.513413906097412
    5. '[[' → logprob: -5.263413906097412
    6. '[int' → logprob: -6.388413906097412
    7. ' [' → logprob: -7.263413906097412
    8. '[M' → logprob: -9.01341438293457
    9. '[l' → logprob: -11.26341438293457
    10. '[len' → logprob: -11.51341438293457

Token 765: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.512236498361744e-07
    2. 'I' → logprob: -15.125000953674316
    3. ' int' → logprob: -16.375
    4. '(int' → logprob: -16.5
    5. '[int' → logprob: -17.75
    6. 'c' → logprob: -17.875
    7. '*' → logprob: -18.25
    8. '<int' → logprob: -19.125
    9. '   ' → logprob: -19.125
    10. '
' → logprob: -19.375

Token 766: '(j' (ID: 4997)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.007885674014687538
    2. '(ch' → logprob: -5.257885456085205
    3. '(x' → logprob: -6.007885456085205
    4. 'c' → logprob: -9.507885932922363
    5. '(char' → logprob: -9.757885932922363
    6. '(a' → logprob: -11.632885932922363
    7. '(e' → logprob: -11.757885932922363
    8. '(j' → logprob: -11.882885932922363
    9. '(d' → logprob: -12.007885932922363
    10. '(s' → logprob: -12.132885932922363

Token 767: ')' (ID: 8)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.07042429596185684
    2. '(c' → logprob: -3.3204243183135986
    3. '(ch' → logprob: -3.6954243183135986
    4. '(char' → logprob: -5.9454240798950195
    5. ')' → logprob: -6.3204240798950195
    6. 'for' → logprob: -6.9454240798950195
    7. '(x' → logprob: -7.6954240798950195
    8. 'char' → logprob: -7.8204240798950195
    9. '(i' → logprob: -7.9454240798950195
    10. '(k' → logprob: -8.69542407989502

Token 768: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002631661482155323
    2. '(j' → logprob: -7.002631664276123
    3. ' for' → logprob: -7.252631664276123
    4. 'in' → logprob: -7.877631664276123
    5. '(c' → logprob: -8.127631187438965
    6. '(ch' → logprob: -8.877631187438965
    7. 'char' → logprob: -9.627631187438965
    8. '(char' → logprob: -10.002631187438965
    9. '()' → logprob: -10.127631187438965
    10. '(k' → logprob: -11.752631187438965

Token 769: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.842555426876061e-06
    2. ' j' → logprob: -12.250004768371582
    3. 'in' → logprob: -18.0000057220459
    4. '	j' → logprob: -18.7500057220459
    5. '
' → logprob: -19.1250057220459
    6. ' in' → logprob: -20.1250057220459
    7. '$j' → logprob: -20.8750057220459
    8. 'jj' → logprob: -21.0000057220459
    9. 'i' → logprob: -21.1250057220459
    10. ' ' → logprob: -21.1250057220459

Token 770: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.01603730209171772
    2. ' in' → logprob: -4.141037464141846
    3. 'j' → logprob: -14.391036987304688
    4. 'S' → logprob: -15.016036987304688
    5. 's' → logprob: -15.266036987304688
    6. 'for' → logprob: -15.266036987304688
    7. 'import' → logprob: -15.391036987304688
    8. '
' → logprob: -15.391036987304688
    9. ')' → logprob: -15.891036987304688
    10. 'inthe' → logprob: -15.891036987304688

Token 771: ' list' (ID: 1562)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.09331540763378143
    2. 'list' → logprob: -2.468315362930298
    3. ' S' → logprob: -5.968315601348877
    4. ' list' → logprob: -6.343315601348877
    5. 's' → logprob: -10.593315124511719
    6. 'c' → logprob: -10.843315124511719
    7. 'j' → logprob: -13.843315124511719
    8. '(list' → logprob: -13.968315124511719
    9. 'range' → logprob: -14.468315124511719
    10. 'l' → logprob: -15.218315124511719

Token 772: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -6.2729995988775045e-06
    2. '(' → logprob: -12.625006675720215
    3. '(sys' → logprob: -13.375006675720215
    4. 'S' → logprob: -14.125006675720215
    5. '(s' → logprob: -14.625006675720215
    6. '((' → logprob: -16.3750057220459
    7. '(
' → logprob: -17.3750057220459
    8. ' (' → logprob: -17.8750057220459
    9. '(Sys' → logprob: -17.8750057220459
    10. '(str' → logprob: -18.7500057220459

Token 773: '())' (ID: 3516)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6934128999710083
    2. '())' → logprob: -0.6934128999710083
    3. '()[' → logprob: -8.943412780761719
    4. '().' → logprob: -9.568412780761719
    5. '()]' → logprob: -10.318412780761719
    6. '()
' → logprob: -11.193412780761719
    7. '()))' → logprob: -12.443412780761719
    8. ')]' → logprob: -12.943412780761719
    9. '()`' → logprob: -13.193412780761719
    10. '(i' → logprob: -13.443412780761719

Token 774: ']' (ID: 60)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.2542300224304199
    2. ']' → logprob: -1.50423002243042
    3. '()' → logprob: -6.62923002243042
    4. 'for' → logprob: -7.25423002243042
    5. '   ' → logprob: -8.754230499267578
    6. '(n' → logprob: -10.004230499267578
    7. '(i' → logprob: -10.254230499267578
    8. ']]' → logprob: -11.754230499267578
    9. ']()' → logprob: -12.254230499267578
    10. ')]' → logprob: -12.504230499267578

Token 775: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5819919109344482
    2. 'for' → logprob: -0.8319919109344482
    3. '   ' → logprob: -5.206992149353027
    4. ']' → logprob: -8.331992149353027
    5. '    ' → logprob: -9.331992149353027
    6. '(i' → logprob: -9.581992149353027
    7. '()' → logprob: -9.706992149353027
    8. '(n' → logprob: -10.456992149353027
    9. '       ' → logprob: -10.831992149353027
    10. '	for' → logprob: -10.956992149353027

Token 776: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004084574058651924
    2. ' i' → logprob: -5.504084587097168
    3. '_' → logprob: -12.629084587097168
    4. '_i' → logprob: -13.129084587097168
    5. '   ' → logprob: -14.879084587097168
    6. ' _' → logprob: -15.129084587097168
    7. '	i' → logprob: -15.879084587097168
    8. ' ' → logprob: -16.37908363342285
    9. 'j' → logprob: -17.37908363342285
    10. ' in' → logprob: -17.87908363342285

Token 777: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.34846311807632446
    2. 'in' → logprob: -1.2234630584716797
    3. '	in' → logprob: -12.22346305847168
    4. '(' → logprob: -12.97346305847168
    5. 'n' → logprob: -13.22346305847168
    6. 'import' → logprob: -13.47346305847168
    7. 'range' → logprob: -13.47346305847168
    8. '   ' → logprob: -13.72346305847168
    9. '(in' → logprob: -13.72346305847168
    10. '_' → logprob: -14.34846305847168

Token 778: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004317420825827867
    2. ' range' → logprob: -7.750431537628174
    3. '(range' → logprob: -13.750432014465332
    4. '	range' → logprob: -21.875431060791016
    5. '(' → logprob: -22.750431060791016
    6. 'in' → logprob: -24.375431060791016
    7. 'Range' → logprob: -24.750431060791016
    8. 'rang' → logprob: -24.875431060791016
    9. '   ' → logprob: -25.000431060791016
    10. '.range' → logprob: -25.000431060791016

Token 779: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20345640182495117
    2. '(n' → logprob: -1.7034564018249512
    3. 'range' → logprob: -6.203456401824951
    4. ' range' → logprob: -11.07845687866211
    5. ' n' → logprob: -12.95345687866211
    6. '(range' → logprob: -14.20345687866211
    7. '	n' → logprob: -16.95345687866211
    8. '(' → logprob: -17.32845687866211
    9. '_n' → logprob: -18.07845687866211
    10. 'Range' → logprob: -18.20345687866211

Token 780: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0015118853189051151
    2. ']' → logprob: -6.501512050628662
    3. ')' → logprob: -12.376511573791504
    4. '()]' → logprob: -12.501511573791504
    5. '])]' → logprob: -14.501511573791504
    6. '   ' → logprob: -15.126511573791504
    7. '])' → logprob: -15.251511573791504
    8. '}]' → logprob: -16.00151252746582
    9. ')]
' → logprob: -16.12651252746582
    10. ']]' → logprob: -16.12651252746582

Token 781: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6501362323760986
    2. 'def' → logprob: -1.7751362323760986
    3. '<|end|>' → logprob: -1.9001362323760986
    4. '#' → logprob: -2.0251362323760986
    5. '```' → logprob: -4.0251359939575195
    6. '

' → logprob: -5.4001359939575195
    7. '<|end|>' → logprob: -6.5251359939575195
    8. '' → logprob: -7.6501359939575195
    9. '\n' → logprob: -7.9001359939575195
    10. 'newline' → logprob: -8.02513599395752

Token 782: '----------------' (ID: 1297)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009494449011981487
    2. '#' → logprob: -4.759494304656982
    3. '
' → logprob: -7.884494304656982
    4. 'class' → logprob: -8.75949478149414
    5. '<|end|>' → logprob: -9.00949478149414
    6. 'import' → logprob: -9.38449478149414
    7. '```' → logprob: -10.75949478149414
    8. 'd' → logprob: -11.13449478149414
    9. 'from' → logprob: -11.25949478149414
    10. '@' → logprob: -11.38449478149414

Token 783: '-----
' (ID: 82167)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1669229418039322
    2. '#' → logprob: -1.916922926902771
    3. 'class' → logprob: -5.9169230461120605
    4. '_' → logprob: -6.4169230461120605
    5. ':' → logprob: -7.0419230461120605
    6. '=' → logprob: -7.6669230461120605
    7. '__' → logprob: -8.666922569274902
    8. 'import' → logprob: -8.916922569274902
    9. 'if' → logprob: -9.041922569274902
    10. '(' → logprob: -9.666922569274902

Token 784: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0025244110729545355
    2. '#' → logprob: -6.377524375915527
    3. 'class' → logprob: -7.377524375915527
    4. '<|end|>' → logprob: -8.877524375915527
    5. 'import' → logprob: -10.877524375915527
    6. '<|end|>' → logprob: -11.502524375915527
    7. '```' → logprob: -12.377524375915527
    8. '
' → logprob: -12.502524375915527
    9. 'from' → logprob: -12.502524375915527
    10. 'de' → logprob: -13.252524375915527

Token 785: ' Mod' (ID: 7191)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17019377648830414
    2. '#' → logprob: -2.045193672180176
    3. 'class' → logprob: -4.045193672180176
    4. 'import' → logprob: -6.420193672180176
    5. 'from' → logprob: -6.420193672180176
    6. '<|end|>' → logprob: -6.420193672180176
    7. 'print' → logprob: -7.295193672180176
    8. '__' → logprob: -7.920193672180176
    9. 'DEBUG' → logprob: -8.045193672180176
    10. '#!/' → logprob: -8.420193672180176

Token 786: 'ulo' (ID: 5953)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7765950560569763
    2. '=' → logprob: -1.401595115661621
    3. ' =' → logprob: -2.026595115661621
    4. 'MOD' → logprob: -3.276595115661621
    5. 'ULO' → logprob: -3.401595115661621
    6. '```' → logprob: -4.401595115661621
    7. 'ulo' → logprob: -4.401595115661621
    8. '#' → logprob: -4.401595115661621
    9. 'ulus' → logprob: -5.026595115661621
    10. '_MOD' → logprob: -5.151595115661621

Token 787: ' constant' (ID: 9594)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.595923125743866
    2. '_' → logprob: -0.845923125743866
    3. ' =' → logprob: -4.220922946929932
    4. 'def' → logprob: -5.845922946929932
    5. '#' → logprob: -6.970922946929932
    6. '_=' → logprob: -7.720922946929932
    7. ':' → logprob: -8.09592342376709
    8. ',' → logprob: -8.97092342376709
    9. ']' → logprob: -9.72092342376709
    10. ')' → logprob: -9.72092342376709

Token 788: ' (' (ID: 350)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0007923588855192065
    2. '
' → logprob: -7.250792503356934
    3. 'M' → logprob: -10.250792503356934
    4. ' MOD' → logprob: -11.500792503356934
    5. 'mod' → logprob: -11.750792503356934
    6. 'MD' → logprob: -11.750792503356934
    7. '_MOD' → logprob: -11.750792503356934
    8. '=' → logprob: -13.625792503356934
    9. '  
' → logprob: -13.750792503356934
    10. '

' → logprob: -13.750792503356934

Token 789: 'comm' (ID: 2280)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.12493416666984558
    2. ')' → logprob: -2.374934196472168
    3. 'MOD' → logprob: -4.374934196472168
    4. '998' → logprob: -4.499934196472168
    5. '100' → logprob: -8.374934196472168
    6. 'M' → logprob: -8.999934196472168
    7. '#' → logprob: -9.499934196472168
    8. '):' → logprob: -9.749934196472168
    9. '1' → logprob: -9.999934196472168
    10. ']' → logprob: -10.499934196472168

Token 790: 'only' (ID: 7393)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.05135057121515274
    2. 'ents' → logprob: -3.3013505935668945
    3. 'on' → logprob: -4.6763505935668945
    4. '=' → logprob: -6.1763505935668945
    5. 'ented' → logprob: -7.3013505935668945
    6. 'only' → logprob: -8.051350593566895
    7. ')' → logprob: -8.676350593566895
    8. 'onent' → logprob: -8.801350593566895
    9. '```' → logprob: -9.176350593566895
    10. 'entation' → logprob: -9.426350593566895

Token 791: ' used' (ID: 2061)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029051456600427628
    2. 'MOD' → logprob: -3.6540515422821045
    3. ')' → logprob: -6.404051303863525
    4. 'mod' → logprob: -7.029051303863525
    5. ' =' → logprob: -10.029051780700684
    6. '```' → logprob: -10.279051780700684
    7. '#' → logprob: -10.529051780700684
    8. '10' → logprob: -10.654051780700684
    9. 'used' → logprob: -10.904051780700684
    10. '100' → logprob: -11.154051780700684

Token 792: ' for' (ID: 395)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5270074605941772
    2. ')' → logprob: -1.6520074605941772
    3. 'MOD' → logprob: -1.6520074605941772
    4. ' =' → logprob: -4.152007579803467
    5. ']' → logprob: -5.152007579803467
    6. ')=' → logprob: -5.902007579803467
    7. '#' → logprob: -7.402007579803467
    8. ']=' → logprob: -7.527007579803467
    9. 'mod' → logprob: -7.652007579803467
    10. ' MOD' → logprob: -8.902007102966309

Token 793: ' problem' (ID: 4792)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.03875872120261192
    2. 'MOD' → logprob: -3.4137587547302246
    3. '998' → logprob: -5.538758754730225
    4. '100' → logprob: -7.163758754730225
    5. 'mod' → logprob: -8.163758277893066
    6. '#' → logprob: -9.663758277893066
    7. 'int' → logprob: -11.413758277893066
    8. ' MOD' → logprob: -11.788758277893066
    9. ')' → logprob: -12.163758277893066
    10. '1' → logprob: -12.913758277893066

Token 794: ' constraints' (ID: 31060)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4507831633090973
    2. '=' → logprob: -1.075783133506775
    3. '_' → logprob: -4.4507832527160645
    4. ' =' → logprob: -4.9507832527160645
    5. ')
' → logprob: -7.4507832527160645
    6. 's' → logprob: -7.7007832527160645
    7. 'mod' → logprob: -7.8257832527160645
    8. '#' → logprob: -8.700782775878906
    9. '_=' → logprob: -8.825782775878906
    10. '_mod' → logprob: -9.075782775878906

Token 795: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1979362964630127
    2. 'MOD' → logprob: -2.1979362964630127
    3. ']' → logprob: -3.1979362964630127
    4. '=' → logprob: -4.322936058044434
    5. ' =' → logprob: -5.322936058044434
    6. '#' → logprob: -5.447936058044434
    7. '_MOD' → logprob: -6.447936058044434
    8. 'mod' → logprob: -7.072936058044434
    9. ',' → logprob: -7.197936058044434
    10. ')
' → logprob: -7.447936058044434

Token 796: '#' (ID: 2)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0001182052365038544
    2. 'mod' → logprob: -9.625118255615234
    3. '
' → logprob: -10.750118255615234
    4. 'MD' → logprob: -11.000118255615234
    5. ' MOD' → logprob: -12.250118255615234
    6. 'M' → logprob: -12.750118255615234
    7. '_MOD' → logprob: -13.250118255615234
    8. 'MODE' → logprob: -14.000118255615234
    9. '

' → logprob: -14.125118255615234
    10. '```' → logprob: -14.625118255615234

Token 797: '----------------' (ID: 1297)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00033034008811227977
    2. 'mod' → logprob: -8.625329971313477
    3. '
' → logprob: -9.000329971313477
    4. 'MD' → logprob: -11.875329971313477
    5. '_MOD' → logprob: -12.000329971313477
    6. 'M' → logprob: -12.125329971313477
    7. ' MOD' → logprob: -12.500329971313477
    8. '

' → logprob: -14.000329971313477
    9. 'MODE' → logprob: -14.125329971313477
    10. '```' → logprob: -14.250329971313477

Token 798: '-----
' (ID: 82167)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.009677588939666748
    2. '_MOD' → logprob: -5.384677410125732
    3. '
' → logprob: -6.134677410125732
    4. 'M' → logprob: -6.884677410125732
    5. '=' → logprob: -7.634677410125732
    6. '=
' → logprob: -8.00967788696289
    7. ' =' → logprob: -8.13467788696289
    8. '_mod' → logprob: -8.75967788696289
    9. 'mod' → logprob: -8.75967788696289
    10. '_
' → logprob: -8.88467788696289

Token 799: 'mod' (ID: 4847)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0004612935590557754
    2. 'mod' → logprob: -7.750461101531982
    3. 'MD' → logprob: -10.75046157836914
    4. 'M' → logprob: -12.37546157836914
    5. '
' → logprob: -13.37546157836914
    6. ' MOD' → logprob: -13.62546157836914
    7. '_MOD' → logprob: -13.75046157836914
    8. 'Mod' → logprob: -14.75046157836914
    9. 'MODE' → logprob: -15.62546157836914
    10. '_mod' → logprob: -16.12546157836914

Token 800: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029756855219602585
    2. '=' → logprob: -3.529756784439087
    3. ' ' → logprob: -12.404756546020508
    4. '_' → logprob: -13.654756546020508
    5. ',' → logprob: -14.279756546020508
    6. ' =
' → logprob: -16.529756546020508
    7. ':' → logprob: -16.654756546020508
    8. '  ' → logprob: -16.654756546020508
    9. ' ,' → logprob: -17.029756546020508
    10. '   ' → logprob: -17.029756546020508

Token 801: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -6.0629870858974755e-05
    2. ' ' → logprob: -10.25006103515625
    3. '100' → logprob: -10.62506103515625
    4. '998' → logprob: -14.50006103515625
    5. '1' → logprob: -15.00006103515625
    6. 'int' → logprob: -16.87506103515625
    7. '   ' → logprob: -19.12506103515625
    8. '１０' → logprob: -20.62506103515625
    9. '  ' → logprob: -20.75006103515625
    10. '(' → logprob: -20.75006103515625

Token 802: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.013809685595333576
    2. '100' → logprob: -4.763809680938721
    3. '998' → logprob: -5.263809680938721
    4. 'int' → logprob: -12.513810157775879
    5. '(' → logprob: -13.388810157775879
    6. '1' → logprob: -14.388810157775879
    7. 'pow' → logprob: -15.638810157775879
    8. ' ' → logprob: -16.138809204101562
    9. '１０' → logprob: -17.013809204101562
    10. '=' → logprob: -17.888809204101562

Token 803: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.12699982523918152
    2. '**' → logprob: -2.126999855041504
    3. '09' → logprob: -9.626999855041504
    4. '+' → logprob: -13.126999855041504
    5. ' ' → logprob: -14.001999855041504
    6. ' **' → logprob: -14.001999855041504
    7. '```' → logprob: -14.251999855041504
    8. '​' → logprob: -14.501999855041504
    9. '^' → logprob: -15.251999855041504
    10. '000' → logprob: -15.876999855041504

Token 804: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -18.0
    3. '９' → logprob: -22.375
    4. '```' → logprob: -22.5
    5. '
' → logprob: -23.625
    6. '+' → logprob: -23.625
    7. ' ' → logprob: -25.625
    8. '99' → logprob: -25.875
    9. '   ' → logprob: -26.0
    10. '10' → logprob: -26.0

Token 805: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -18.125
    3. '９' → logprob: -22.375
    4. '```' → logprob: -23.0
    5. '99' → logprob: -24.125
    6. '10' → logprob: -24.375
    7. '18' → logprob: -24.875
    8. 'nine' → logprob: -25.25
    9. '19' → logprob: -25.375
    10. '+' → logprob: -25.625

Token 806: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -7.946405094116926e-05
    2. ' +' → logprob: -9.500079154968262
    3. '7' → logprob: -12.375079154968262
    4. '+
' → logprob: -15.125079154968262
    5. '＋' → logprob: -16.875080108642578
    6. 'plus' → logprob: -17.875080108642578
    7. ' plus' → logprob: -19.000080108642578
    8. '```' → logprob: -19.500080108642578
    9. '"+"' → logprob: -20.375080108642578
    10. '
' → logprob: -21.000080108642578

Token 807: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '07' → logprob: -20.5
    3. '9' → logprob: -21.125
    4. '+' → logprob: -21.5
    5. '```' → logprob: -21.75
    6. ' ' → logprob: -23.375
    7. '79' → logprob: -25.25
    8. '   ' → logprob: -25.25
    9. '７' → logprob: -25.25
    10. '67' → logprob: -25.625

Token 808: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '07' → logprob: -22.5
    3. '７' → logprob: -23.375
    4. '```' → logprob: -24.75
    5. ' ' → logprob: -25.125
    6. '   ' → logprob: -25.5
    7. '+' → logprob: -25.5
    8. '9' → logprob: -25.75
    9. '۷' → logprob: -26.625
    10. '
' → logprob: -26.75

Token 809: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 810: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15306413173675537
    2. '
' → logprob: -2.903064250946045
    3. '#' → logprob: -3.153064250946045
    4. '<|end|>' → logprob: -3.653064250946045
    5. '\n' → logprob: -4.778064250946045
    6. '

' → logprob: -5.278064250946045
    7. '```' → logprob: -6.903064250946045
    8. 'class' → logprob: -6.903064250946045
    9. '<|end|>' → logprob: -6.903064250946045
    10. '\' → logprob: -7.153064250946045

Token 811: '----------------' (ID: 1297)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.019237768370658e-05
    2. '#' → logprob: -9.750090599060059
    3. 'd' → logprob: -10.500090599060059
    4. 'class' → logprob: -13.125090599060059
    5. 'n' → logprob: -13.750090599060059
    6. '\' → logprob: -14.375090599060059
    7. '
' → logprob: -15.750090599060059
    8. 'de' → logprob: -15.750090599060059
    9. 'import' → logprob: -16.500089645385742
    10. 'from' → logprob: -16.750089645385742

Token 812: '-----
' (ID: 82167)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001924352254718542
    2. '=' → logprob: -6.626924514770508
    3. '_' → logprob: -8.626924514770508
    4. '#' → logprob: -8.751924514770508
    5. '=
' → logprob: -9.376924514770508
    6. '_
' → logprob: -10.001924514770508
    7. '(
' → logprob: -10.876924514770508
    8. '
' → logprob: -10.876924514770508
    9. 'class' → logprob: -11.376924514770508
    10. 'define' → logprob: -11.376924514770508

Token 813: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0017724005738273263
    2. '#' → logprob: -6.376772403717041
    3. 'class' → logprob: -9.751771926879883
    4. 'import' → logprob: -11.751771926879883
    5. 'from' → logprob: -13.501771926879883
    6. '<|end|>' → logprob: -13.501771926879883
    7. '
' → logprob: -14.251771926879883
    8. ' def' → logprob: -15.876771926879883
    9. '<|end|>' → logprob: -15.876771926879883
    10. '```' → logprob: -16.126771926879883

Token 814: ' Main' (ID: 7956)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04021211713552475
    2. '#' → logprob: -3.4152121543884277
    3. 'class' → logprob: -5.540212154388428
    4. 'from' → logprob: -6.040212154388428
    5. 'import' → logprob: -9.41521167755127
    6. 'DEBUG' → logprob: -9.91521167755127
    7. 'dp' → logprob: -10.41521167755127
    8. '@' → logprob: -11.66521167755127
    9. 'MAX' → logprob: -11.79021167755127
    10. 'default' → logprob: -12.16521167755127

Token 815: ' logic' (ID: 18485)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012892660684883595
    2. '()' → logprob: -4.387892723083496
    3. 'de' → logprob: -8.887892723083496
    4. ' def' → logprob: -9.762892723083496
    5. 'if' → logprob: -10.262892723083496
    6. '(' → logprob: -10.387892723083496
    7. '():' → logprob: -10.387892723083496
    8. ':' → logprob: -10.637892723083496
    9. '
' → logprob: -10.762892723083496
    10. '()
' → logprob: -11.012892723083496

Token 816: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0007893788279034197
    2. 'if' → logprob: -7.250789165496826
    3. 'n' → logprob: -10.000789642333984
    4. '#' → logprob: -10.875789642333984
    5. '
' → logprob: -12.000789642333984
    6. 'de' → logprob: -13.000789642333984
    7. 'import' → logprob: -13.750789642333984
    8. ':' → logprob: -13.875789642333984
    9. '(n' → logprob: -14.000789642333984
    10. ' def' → logprob: -14.500789642333984

Token 817: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014859157614409924
    2. 'n' → logprob: -4.264859199523926
    3. 'if' → logprob: -7.389859199523926
    4. '#' → logprob: -9.889859199523926
    5. 'N' → logprob: -10.889859199523926
    6. '(n' → logprob: -12.514859199523926
    7. 'd' → logprob: -13.139859199523926
    8. 'import' → logprob: -14.514859199523926
    9. 'ndef' → logprob: -14.764859199523926
    10. 'a' → logprob: -14.764859199523926

Token 818: '----------------' (ID: 1297)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.5716304410016164e-05
    2. 'if' → logprob: -10.250035285949707
    3. 'n' → logprob: -16.375036239624023
    4. 'd' → logprob: -16.875036239624023
    5. 'de' → logprob: -17.000036239624023
    6. ' def' → logprob: -17.375036239624023
    7. 'class' → logprob: -18.250036239624023
    8. '#' → logprob: -18.500036239624023
    9. 'N' → logprob: -19.250036239624023
    10. 'import' → logprob: -19.375036239624023

Token 819: '-----

' (ID: 158848)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.659005157416686e-05
    2. 'if' → logprob: -9.625066757202148
    3. ' def' → logprob: -15.875066757202148
    4. '
' → logprob: -16.12506675720215
    5. '#' → logprob: -16.50006675720215
    6. '```' → logprob: -16.75006675720215
    7. 'de' → logprob: -17.25006675720215
    8. 'd' → logprob: -18.25006675720215
    9. 'class' → logprob: -18.50006675720215
    10. ')' → logprob: -18.50006675720215

Token 820: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10041380673646927
    2. 'n' → logprob: -2.3504137992858887
    3. 'N' → logprob: -8.600414276123047
    4. 'if' → logprob: -10.850414276123047
    5. '#' → logprob: -13.225414276123047
    6. 'd' → logprob: -13.850414276123047
    7. 'ndef' → logprob: -14.850414276123047
    8. 'a' → logprob: -15.975414276123047
    9. 't' → logprob: -15.975414276123047
    10. 'import' → logprob: -16.350414276123047

Token 821: ' Read' (ID: 5405)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004194148350507021
    2. 'n' → logprob: -5.504194259643555
    3. 'd' → logprob: -10.129194259643555
    4. 'N' → logprob: -10.254194259643555
    5. 'if' → logprob: -10.254194259643555
    6. 'class' → logprob: -13.129194259643555
    7. 't' → logprob: -13.379194259643555
    8. '#' → logprob: -14.129194259643555
    9. 'import' → logprob: -15.129194259643555
    10. 'a' → logprob: -15.879194259643555

Token 822: ' the' (ID: 290)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.012103996239602566
    2. 'N' → logprob: -4.762104034423828
    3. '()' → logprob: -6.012104034423828
    4. 'def' → logprob: -7.262104034423828
    5. 't' → logprob: -8.262104034423828
    6. '(n' → logprob: -10.512104034423828
    7. ' n' → logprob: -11.637104034423828
    8. '_n' → logprob: -11.762104034423828
    9. 'a' → logprob: -11.887104034423828
    10. 'Q' → logprob: -12.512104034423828

Token 823: ' integer' (ID: 16336)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00233687786385417
    2. 'def' → logprob: -6.2523369789123535
    3. 'N' → logprob: -7.8773369789123535
    4. ' n' → logprob: -11.127336502075195
    5. 't' → logprob: -12.877336502075195
    6. '_n' → logprob: -13.002336502075195
    7. 'a' → logprob: -13.502336502075195
    8. '()' → logprob: -13.627336502075195
    9. 'input' → logprob: -13.877336502075195
    10. 'number' → logprob: -14.002336502075195

Token 824: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11070694029331207
    2. '()' → logprob: -2.9857070446014404
    3. '(' → logprob: -3.4857070446014404
    4. 'N' → logprob: -4.235706806182861
    5. '=' → logprob: -5.110706806182861
    6. ' =' → logprob: -6.735706806182861
    7. '(n' → logprob: -7.110706806182861
    8. 'x' → logprob: -8.36070728302002
    9. 'a' → logprob: -8.73570728302002
    10. '_n' → logprob: -9.11070728302002

Token 825: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3160799443721771
    2. '()' → logprob: -1.9410799741744995
    3. '=' → logprob: -2.06607985496521
    4. ' =' → logprob: -7.441080093383789
    5. '(' → logprob: -9.441080093383789
    6. '=n' → logprob: -9.941080093383789
    7. '()
' → logprob: -11.316080093383789
    8. ' n' → logprob: -11.566080093383789
    9. '_n' → logprob: -11.816080093383789
    10. '(n' → logprob: -11.816080093383789

Token 826: ' which' (ID: 1118)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0001589618914294988
    2. ' n' → logprob: -8.75015926361084
    3. ')' → logprob: -15.87515926361084
    4. '_n' → logprob: -16.500158309936523
    5. '
' → logprob: -17.000158309936523
    6. '   ' → logprob: -17.375158309936523
    7. '	n' → logprob: -17.375158309936523
    8. ' ' → logprob: -17.625158309936523
    9. ' =' → logprob: -18.000158309936523
    10. '#' → logprob: -18.250158309936523

Token 827: ' probably' (ID: 7038)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0002683688362594694
    2. 'defines' → logprob: -8.87526798248291
    3. 'rep' → logprob: -9.87526798248291
    4. 'is' → logprob: -10.50026798248291
    5. '=
' → logprob: -11.00026798248291
    6. '=n' → logprob: -11.37526798248291
    7. ' =' → logprob: -11.62526798248291
    8. 'n' → logprob: -12.87526798248291
    9. '=int' → logprob: -13.00026798248291
    10. 'determ' → logprob: -13.62526798248291

Token 828: ' represents' (ID: 18627)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -2.45848218582978e-06
    2. '=int' → logprob: -13.25000286102295
    3. ' =' → logprob: -15.12500286102295
    4. '=n' → logprob: -15.87500286102295
    5. '=
' → logprob: -16.250001907348633
    6. '=input' → logprob: -16.750001907348633
    7. '=

' → logprob: -18.250001907348633
    8. 'n' → logprob: -18.625001907348633
    9. '=}' → logprob: -18.625001907348633
    10. 'is' → logprob: -19.125001907348633

Token 829: ' the' (ID: 290)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.6960845589637756
    2. 'n' → logprob: -0.6960845589637756
    3. 'the' → logprob: -6.446084499359131
    4. '(n' → logprob: -7.571084499359131
    5. '()' → logprob: -7.946084499359131
    6. 'N' → logprob: -8.196084976196289
    7. '(I' → logprob: -9.946084976196289
    8. 'S' → logprob: -9.946084976196289
    9. 'int' → logprob: -10.696084976196289
    10. ' n' → logprob: -10.696084976196289

Token 830: ' length' (ID: 5517)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.0041402606293559074
    2. 'size' → logprob: -5.629140377044678
    3. ' number' → logprob: -8.25413990020752
    4. 'length' → logprob: -8.50413990020752
    5. 'n' → logprob: -10.00413990020752
    6. 'array' → logprob: -11.62913990020752
    7. 'num' → logprob: -12.75413990020752
    8. 'count' → logprob: -12.75413990020752
    9. 'height' → logprob: -12.87913990020752
    10. '#' → logprob: -13.00413990020752

Token 831: ' or' (ID: 503)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9171236753463745
    2. '()' → logprob: -1.1671236753463745
    3. ' =' → logprob: -1.9171236753463745
    4. '(' → logprob: -2.792123794555664
    5. 'n' → logprob: -2.917123794555664
    6. '_' → logprob: -4.292123794555664
    7. 'of' → logprob: -5.792123794555664
    8. '(n' → logprob: -5.792123794555664
    9. ',' → logprob: -6.292123794555664
    10. 's' → logprob: -7.167123794555664

Token 832: ' size' (ID: 2349)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8997980952262878
    2. '_' → logprob: -1.3997981548309326
    3. 'k' → logprob: -1.6497981548309326
    4. 's' → logprob: -2.2747981548309326
    5. 'S' → logprob: -4.0247979164123535
    6. 'string' → logprob: -5.1497979164123535
    7. 'array' → logprob: -5.6497979164123535
    8. '#' → logprob: -5.7747979164123535
    9. 'arr' → logprob: -6.1497979164123535
    10. 'a' → logprob: -6.1497979164123535

Token 833: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2082878053188324
    2. ' =' → logprob: -2.5832877159118652
    3. 'n' → logprob: -2.9582877159118652
    4. '(' → logprob: -3.0832877159118652
    5. '()' → logprob: -4.333287715911865
    6. '(
' → logprob: -7.208287715911865
    7. '(n' → logprob: -8.083288192749023
    8. ',' → logprob: -9.208288192749023
    9. '=n' → logprob: -9.208288192749023
    10. ':' → logprob: -9.833288192749023

Token 834: ' the' (ID: 290)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.05612054094672203
    2. 'the' → logprob: -4.3061203956604
    3. 'input' → logprob: -4.3061203956604
    4. 'n' → logprob: -4.4311203956604
    5. 'string' → logprob: -5.3061203956604
    6. 'a' → logprob: -5.8061203956604
    7. 's' → logprob: -5.9311203956604
    8. 'code' → logprob: -6.4311203956604
    9. '_' → logprob: -7.3061203956604
    10. ' S' → logprob: -7.3061203956604

Token 835: ' problem' (ID: 4792)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.8674014806747437
    2. 'array' → logprob: -1.4924014806747437
    3. 'input' → logprob: -1.6174014806747437
    4. 'string' → logprob: -2.367401599884033
    5. 'sequence' → logprob: -2.992401599884033
    6. 'arr' → logprob: -6.117401599884033
    7. 's' → logprob: -6.617401599884033
    8. '_' → logprob: -6.867401599884033
    9. 'A' → logprob: -6.992401599884033
    10. 'a' → logprob: -7.367401599884033

Token 836: ' input' (ID: 3422)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0032134840730577707
    2. 'n' → logprob: -5.878213405609131
    3. ' =' → logprob: -8.003213882446289
    4. '=n' → logprob: -9.878213882446289
    5. '()' → logprob: -11.628213882446289
    6. '(n' → logprob: -12.003213882446289
    7. '(' → logprob: -12.128213882446289
    8. ')' → logprob: -14.003213882446289
    9. ',' → logprob: -14.503213882446289
    10. '=
' → logprob: -14.753213882446289

Token 837: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26016050577163696
    2. 'n' → logprob: -1.5101604461669922
    3. '()' → logprob: -5.010160446166992
    4. ' =' → logprob: -6.885160446166992
    5. '(' → logprob: -7.760160446166992
    6. '=n' → logprob: -9.760160446166992
    7. ')' → logprob: -12.135160446166992
    8. '(n' → logprob: -12.260160446166992
    9. ' n' → logprob: -13.135160446166992
    10. 'x' → logprob: -13.510160446166992

Token 838: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: 0.0
    2. ' n' → logprob: -19.625
    3. '
' → logprob: -20.125
    4. '```' → logprob: -21.5
    5. '`' → logprob: -21.75
    6. '

' → logprob: -21.875
    7. 'N' → logprob: -22.25
    8. '=' → logprob: -22.5
    9. ' =' → logprob: -22.5
    10. '_n' → logprob: -22.5

Token 839: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014181718230247498
    2. ' =' → logprob: -4.264181613922119
    3. ',' → logprob: -11.014182090759277
    4. '=n' → logprob: -14.014182090759277
    5. '=int' → logprob: -14.264182090759277
    6. '=input' → logprob: -16.38918113708496
    7. ')' → logprob: -16.51418113708496
    8. '   ' → logprob: -17.13918113708496
    9. '_' → logprob: -17.76418113708496
    10. ';' → logprob: -18.26418113708496

Token 840: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.00026741522015072405
    2. 'int' → logprob: -8.250267028808594
    3. ' I' → logprob: -12.000267028808594
    4. 'Int' → logprob: -18.875267028808594
    5. ' int' → logprob: -19.125267028808594
    6. 'i' → logprob: -19.500267028808594
    7. 'LI' → logprob: -19.625267028808594
    8. 'INT' → logprob: -20.000267028808594
    9. '	I' → logprob: -20.000267028808594
    10. '_I' → logprob: -20.125267028808594

Token 841: '()

' (ID: 5874)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2246134281158447
    2. '
' → logprob: -1.2246134281158447
    3. ',' → logprob: -2.7246134281158447
    4. '#' → logprob: -2.7246134281158447
    5. '<|end|>' → logprob: -2.9746134281158447
    6. '()' → logprob: -3.2246134281158447
    7. ')' → logprob: -3.3496134281158447
    8. 's' → logprob: -3.3496134281158447
    9. 'x' → logprob: -4.224613189697266
    10. '(' → logprob: -4.224613189697266

Token 842: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.020298955962061882
    2. 'A' → logprob: -4.645298957824707
    3. 'arr' → logprob: -5.020298957824707
    4. 's' → logprob: -6.020298957824707
    5. 'data' → logprob: -7.520298957824707
    6. 'lst' → logprob: -8.020298957824707
    7. 'd' → logprob: -8.145298957824707
    8. '#' → logprob: -9.020298957824707
    9. 't' → logprob: -10.770298957824707
    10. 'l' → logprob: -10.895298957824707

Token 843: ' Read' (ID: 5405)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3030204176902771
    2. 'arr' → logprob: -1.4280204772949219
    3. 'A' → logprob: -4.053020477294922
    4. 'lst' → logprob: -6.303020477294922
    5. 'data' → logprob: -6.803020477294922
    6. 's' → logprob: -6.928020477294922
    7. 'h' → logprob: -10.053020477294922
    8. 'values' → logprob: -10.553020477294922
    9. 'l' → logprob: -10.678020477294922
    10. 'd' → logprob: -10.678020477294922

Token 844: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4695175588130951
    2. 'arr' → logprob: -1.3445175886154175
    3. 'A' → logprob: -2.719517469406128
    4. '()' → logprob: -4.219517707824707
    5. 'lst' → logprob: -4.969517707824707
    6. '(a' → logprob: -5.344517707824707
    7. 'L' → logprob: -5.469517707824707
    8. 'l' → logprob: -5.844517707824707
    9. 'li' → logprob: -6.094517707824707
    10. 'LI' → logprob: -6.469517707824707

Token 845: ' list' (ID: 1562)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0640143156051636
    2. 'a' → logprob: -1.1890143156051636
    3. 'lst' → logprob: -2.439014434814453
    4. 'list' → logprob: -2.689014434814453
    5. 'li' → logprob: -3.439014434814453
    6. ' =' → logprob: -3.439014434814453
    7. 'LI' → logprob: -3.689014434814453
    8. '_list' → logprob: -3.814014434814453
    9. '_' → logprob: -4.064014434814453
    10. 's' → logprob: -4.189014434814453

Token 846: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07267523556947708
    2. '()' → logprob: -2.6976752281188965
    3. '(' → logprob: -6.9476752281188965
    4. ' =' → logprob: -7.1976752281188965
    5. '_' → logprob: -7.3226752281188965
    6. 'of' → logprob: -8.322675704956055
    7. 'LI' → logprob: -10.447675704956055
    8. '_=' → logprob: -10.447675704956055
    9. '()
' → logprob: -11.697675704956055
    10. 's' → logprob: -11.822675704956055

Token 847: ' n' (ID: 297)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.1911708116531372
    2. 'int' → logprob: -2.6911706924438477
    3. 'ints' → logprob: -2.9411706924438477
    4. 'n' → logprob: -3.0661706924438477
    5. 'inte' → logprob: -5.316170692443848
    6. 'li' → logprob: -7.441170692443848
    7. 'numbers' → logprob: -7.441170692443848
    8. 'L' → logprob: -7.691170692443848
    9. '(int' → logprob: -9.816170692443848
    10. 'I' → logprob: -9.941170692443848

Token 848: ' integers' (ID: 54912)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.40736037492752075
    2. '()' → logprob: -1.407360315322876
    3. 'a' → logprob: -4.032360553741455
    4. ' =' → logprob: -4.407360553741455
    5. 'values' → logprob: -4.407360553741455
    6. '(' → logprob: -4.407360553741455
    7. 'numbers' → logprob: -4.782360553741455
    8. '_' → logprob: -5.157360553741455
    9. 'arr' → logprob: -5.532360553741455
    10. '_values' → logprob: -5.532360553741455

Token 849: ' H' (ID: 487)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6357852816581726
    2. ' =' → logprob: -1.0107853412628174
    3. 'a' → logprob: -2.7607853412628174
    4. '()' → logprob: -3.3857853412628174
    5. 'arr' → logprob: -5.885785102844238
    6. 'lst' → logprob: -6.385785102844238
    7. '(' → logprob: -6.760785102844238
    8. 'A' → logprob: -6.885785102844238
    9. 'li' → logprob: -7.385785102844238
    10. 'l' → logprob: -7.510785102844238

Token 850: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00765406945720315
    2. '=' → logprob: -5.132654190063477
    3. ' =' → logprob: -6.382654190063477
    4. '(' → logprob: -11.132654190063477
    5. '()
' → logprob: -11.132654190063477
    6. ' ()' → logprob: -13.382654190063477
    7. ')' → logprob: -14.132654190063477
    8. '().' → logprob: -14.882654190063477
    9. '();' → logprob: -15.132654190063477
    10. '   ' → logprob: -15.132654190063477

Token 851: ' representing' (ID: 25389)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.3306015716807451e-05
    2. ' H' → logprob: -11.75001335144043
    3. '=' → logprob: -12.62501335144043
    4. ' =' → logprob: -13.25001335144043
    5. '
' → logprob: -15.25001335144043
    6. '_H' → logprob: -18.25001335144043
    7. '_' → logprob: -18.37501335144043
    8. '[' → logprob: -18.37501335144043
    9. '#' → logprob: -18.37501335144043
    10. ' 
' → logprob: -18.62501335144043

Token 852: ' heights' (ID: 57359)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LI' → logprob: -1.8074162653647363e-05
    2. 'H' → logprob: -11.250018119812012
    3. 'HI' → logprob: -12.875018119812012
    4. ' LI' → logprob: -13.875018119812012
    5. 'L' → logprob: -14.000018119812012
    6. 'LS' → logprob: -15.000018119812012
    7. 'li' → logprob: -15.625018119812012
    8. 'Li' → logprob: -17.000017166137695
    9. 'I' → logprob: -17.750017166137695
    10. 'LH' → logprob: -18.500017166137695

Token 853: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20889751613140106
    2. '()' → logprob: -2.083897590637207
    3. ' =' → logprob: -3.458897590637207
    4. 'H' → logprob: -3.458897590637207
    5. '()
' → logprob: -6.833897590637207
    6. '(H' → logprob: -10.708897590637207
    7. '(' → logprob: -11.333897590637207
    8. '#' → logprob: -12.083897590637207
    9. '=
' → logprob: -12.583897590637207
    10. ':' → logprob: -12.583897590637207

Token 854: 'or' (ID: 267)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.40086764097213745
    2. '()' → logprob: -1.4008677005767822
    3. '=' → logprob: -2.6508677005767822
    4. ' =' → logprob: -5.025867462158203
    5. 'H' → logprob: -5.525867462158203
    6. '())' → logprob: -6.400867462158203
    7. '(' → logprob: -7.525867462158203
    8. ' )' → logprob: -9.275867462158203
    9. ')=' → logprob: -9.400867462158203
    10. '#' → logprob: -9.650867462158203

Token 855: ' similar' (ID: 6771)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8451176285743713
    2. 'he' → logprob: -1.2201175689697266
    3. '=' → logprob: -3.0951175689697266
    4. 'values' → logprob: -3.3451175689697266
    5. 'weights' → logprob: -3.5951175689697266
    6. ' =' → logprob: -3.5951175689697266
    7. '```' → logprob: -3.9701175689697266
    8. 'H' → logprob: -4.095117568969727
    9. 'flo' → logprob: -4.470117568969727
    10. 'spaces' → logprob: -4.470117568969727

Token 856: ' problem' (ID: 4792)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2316114604473114
    2. ' =' → logprob: -2.106611490249634
    3. '()' → logprob: -2.606611490249634
    4. ')' → logprob: -4.606611251831055
    5. 'H' → logprob: -7.106611251831055
    6. '(' → logprob: -8.731611251831055
    7. '()
' → logprob: -9.356611251831055
    8. 's' → logprob: -9.731611251831055
    9. '(H' → logprob: -9.731611251831055
    10. '())' → logprob: -10.481611251831055

Token 857: '-specific' (ID: 31999)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15640388429164886
    2. '=' → logprob: -2.6564037799835205
    3. ' =' → logprob: -3.0314037799835205
    4. 's' → logprob: -3.9064037799835205
    5. ']' → logprob: -6.4064040184021
    6. 'values' → logprob: -6.7814040184021
    7. '_values' → logprob: -7.0314040184021
    8. '_' → logprob: -7.6564040184021
    9. '])' → logprob: -8.031403541564941
    10. '_list' → logprob: -8.156403541564941

Token 858: ' values' (ID: 4824)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6844990253448486
    2. 'values' → logprob: -1.6844990253448486
    3. '()' → logprob: -1.8094990253448486
    4. ')' → logprob: -2.1844990253448486
    5. 's' → logprob: -4.5594987869262695
    6. ' =' → logprob: -4.6844987869262695
    7. 'H' → logprob: -5.8094987869262695
    8. ']' → logprob: -6.0594987869262695
    9. ' values' → logprob: -6.1844987869262695
    10. 'array' → logprob: -6.4344987869262695

Token 859: ')
' (ID: 446)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8009098172187805
    2. ' =' → logprob: -1.3009097576141357
    3. ')' → logprob: -1.4259097576141357
    4. '()' → logprob: -3.6759097576141357
    5. 'H' → logprob: -5.300909996032715
    6. '(H' → logprob: -5.425909996032715
    7. '(' → logprob: -6.425909996032715
    8. ',' → logprob: -7.175909996032715
    9. ']' → logprob: -7.175909996032715
    10. '[' → logprob: -9.175909996032715

Token 860: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -5.512236498361744e-07
    2. ' H' → logprob: -14.625000953674316
    3. ' =' → logprob: -17.75
    4. '=' → logprob: -18.375
    5. 'L' → logprob: -18.625
    6. 'LI' → logprob: -18.875
    7. '(H' → logprob: -20.0
    8. '
' → logprob: -21.0
    9. 'Hs' → logprob: -21.625
    10. '`' → logprob: -21.75

Token 861: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029752222821116447
    2. ' =' → logprob: -3.529752254486084
    3. '()' → logprob: -13.404751777648926
    4. '(' → logprob: -16.904752731323242
    5. '＝' → logprob: -16.904752731323242
    6. '=[]' → logprob: -17.404752731323242
    7. '=list' → logprob: -18.154752731323242
    8. ',' → logprob: -18.529752731323242
    9. '   ' → logprob: -18.529752731323242
    10. '_=' → logprob: -19.029752731323242

Token 862: ' LI' (ID: 14875)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -6.670925358776003e-05
    2. ' LI' → logprob: -9.625066757202148
    3. 'L' → logprob: -14.375066757202148
    4. 'LS' → logprob: -17.25006675720215
    5. 'Li' → logprob: -18.25006675720215
    6. 'I' → logprob: -19.12506675720215
    7. 'li' → logprob: -19.50006675720215
    8. ' ' → logprob: -19.50006675720215
    9. '[' → logprob: -20.37506675720215
    10. 'LIC' → logprob: -20.50006675720215

Token 863: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008801879361271858
    2. '()
' → logprob: -5.5088019371032715
    3. '#' → logprob: -6.1338019371032715
    4. 'for' → logprob: -7.0088019371032715
    5. ')' → logprob: -7.5088019371032715
    6. '(' → logprob: -7.7588019371032715
    7. 'def' → logprob: -9.133801460266113
    8. '
' → logprob: -9.258801460266113
    9. '[' → logprob: -9.633801460266113
    10. '()

' → logprob: -9.883801460266113

Token 864: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6244016885757446
    2. 'dp' → logprob: -1.1244016885757446
    3. '#' → logprob: -2.999401569366455
    4. 'max' → logprob: -3.249401569366455
    5. 'H' → logprob: -4.749401569366455
    6. 'd' → logprob: -4.874401569366455
    7. 'ans' → logprob: -5.499401569366455
    8. 'answer' → logprob: -5.624401569366455
    9. 'count' → logprob: -5.749401569366455
    10. 'stack' → logprob: -5.874401569366455

Token 865: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010130415903404355
    2. ' [' → logprob: -7.126013278961182
    3. '[S' → logprob: -9.376012802124023
    4. '[-' → logprob: -10.251012802124023
    5. '[:]' → logprob: -10.501012802124023
    6. '[I' → logprob: -10.626012802124023
    7. '[::-' → logprob: -11.876012802124023
    8. '[List' → logprob: -12.626012802124023
    9. '[]' → logprob: -12.876012802124023
    10. '[i' → logprob: -13.001012802124023

Token 866: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6439990401268005
    2. 'INF' → logprob: -0.8939990401268005
    3. '-' → logprob: -3.0189990997314453
    4. '10' → logprob: -4.768999099731445
    5. 'H' → logprob: -5.643999099731445
    6. 'float' → logprob: -6.143999099731445
    7. '-INF' → logprob: -6.268999099731445
    8. 'inf' → logprob: -8.268999099731445
    9. '-inf' → logprob: -8.643999099731445
    10. '-H' → logprob: -9.393999099731445

Token 867: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01577918790280819
    2. ' ]' → logprob: -4.8907790184021
    3. '0' → logprob: -5.6407790184021
    4. '000' → logprob: -5.8907790184021
    5. 'e' → logprob: -7.2657790184021
    6. ')' → logprob: -7.3907790184021
    7. ',' → logprob: -8.890779495239258
    8. '])' → logprob: -9.390779495239258
    9. '00' → logprob: -10.265779495239258
    10. ']<<' → logprob: -10.390779495239258

Token 868: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.008942726999521255
    2. '0' → logprob: -5.633942604064941
    3. ' 
' → logprob: -6.758942604064941
    4. '<|end|>' → logprob: -6.883942604064941
    5. ' ' → logprob: -7.258942604064941
    6. '
' → logprob: -7.383942604064941
    7. '[' → logprob: -7.383942604064941
    8. ' for' → logprob: -8.133942604064941
    9. ')' → logprob: -8.508942604064941
    10. 'for' → logprob: -8.633942604064941

Token 869: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004896669648587704
    2. '
' → logprob: -5.754896640777588
    3. '

' → logprob: -6.504896640777588
    4. '0' → logprob: -9.379897117614746
    5. ' 
' → logprob: -9.754897117614746
    6. '\n' → logprob: -10.504897117614746
    7. '#' → logprob: -11.254897117614746
    8. '  
' → logprob: -11.879897117614746
    9. 'for' → logprob: -12.379897117614746
    10. '' → logprob: -12.504897117614746

Token 870: ' Append' (ID: 58624)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.014429793693125248
    2. 'dp' → logprob: -4.514429569244385
    3. '
' → logprob: -6.639429569244385
    4. 'stack' → logprob: -7.139429569244385
    5. ' 
' → logprob: -8.639430046081543
    6. '#' → logprob: -8.639430046081543
    7. 'for' → logprob: -8.889430046081543
    8. 'res' → logprob: -8.889430046081543
    9. '0' → logprob: -9.764430046081543
    10. 'd' → logprob: -10.014430046081543

Token 871: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.30337288975715637
    2. '(' → logprob: -2.178372859954834
    3. '1' → logprob: -2.178372859954834
    4. ' ' → logprob: -3.428372859954834
    5. '<|end|>' → logprob: -6.678372859954834
    6. ')' → logprob: -7.428372859954834
    7. '10' → logprob: -7.428372859954834
    8. '100' → logprob: -9.428373336791992
    9. 'INF' → logprob: -10.303373336791992
    10. ' (' → logprob: -10.428373336791992

Token 872: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06696677953004837
    2. '1' → logprob: -2.8169667720794678
    3. '-' → logprob: -6.566967010498047
    4. '10' → logprob: -6.566967010498047
    5. 'INF' → logprob: -6.691967010498047
    6. ' ' → logprob: -7.441967010498047
    7. 'float' → logprob: -9.191967010498047
    8. '(' → logprob: -9.816967010498047
    9. '100' → logprob: -9.816967010498047
    10. ' -' → logprob: -10.441967010498047

Token 873: ' at' (ID: 540)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005640551447868347
    2. '<|end|>' → logprob: -5.755640506744385
    3. '0' → logprob: -7.505640506744385
    4. '[' → logprob: -8.005640983581543
    5. '
' → logprob: -8.255640983581543
    6. ' ' → logprob: -8.380640983581543
    7. '<|end|>' → logprob: -8.755640983581543
    8. 'for' → logprob: -9.005640983581543
    9. ' for' → logprob: -9.130640983581543
    10. ')' → logprob: -9.255640983581543

Token 874: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.262809693813324
    2. ' the' → logprob: -1.5128097534179688
    3. ')' → logprob: -5.012809753417969
    4. '0' → logprob: -6.137809753417969
    5. '<|end|>' → logprob: -6.637809753417969
    6. 'end' → logprob: -8.762809753417969
    7. '<|end|>' → logprob: -8.887809753417969
    8. '.' → logprob: -8.887809753417969
    9. ']' → logprob: -9.637809753417969
    10. ',' → logprob: -10.012809753417969

Token 875: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.10022392123937607
    2. ' end' → logprob: -2.350224018096924
    3. '[end' → logprob: -11.725223541259766
    4. '_end' → logprob: -12.100223541259766
    5. '.end' → logprob: -14.100223541259766
    6. ':end' → logprob: -14.725223541259766
    7. ''end' → logprob: -14.850223541259766
    8. 'END' → logprob: -14.850223541259766
    9. '	end' → logprob: -15.100223541259766
    10. '-end' → logprob: -15.350223541259766

Token 876: ' to' (ID: 316)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18241742253303528
    2. 'dp' → logprob: -2.057417392730713
    3. 'stack' → logprob: -3.682417392730713
    4. '
' → logprob: -5.807417392730713
    5. 'res' → logprob: -5.932417392730713
    6. 'for' → logprob: -6.807417392730713
    7. 'height' → logprob: -7.057417392730713
    8. 'prev' → logprob: -7.557417392730713
    9. 'max' → logprob: -7.682417392730713
    10. 'ans' → logprob: -7.807417392730713

Token 877: ' simplify' (ID: 66240)
  Prédit: 'ensure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ensure' → logprob: -1.0399080514907837
    2. 'trigger' → logprob: -1.5399080514907837
    3. ' ensure' → logprob: -1.7899080514907837
    4. 'handle' → logprob: -1.7899080514907837
    5. ' handle' → logprob: -3.414907932281494
    6. ' trigger' → logprob: -3.789907932281494
    7. ' facilitate' → logprob: -4.164907932281494
    8. 'H' → logprob: -5.289907932281494
    9. 'fac' → logprob: -5.539907932281494
    10. ' prevent' → logprob: -5.789907932281494

Token 878: ' boundary' (ID: 35021)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -1.1669011116027832
    2. '0' → logprob: -1.5419011116027832
    3. 'H' → logprob: -1.5419011116027832
    4. '#' → logprob: -2.666901111602783
    5. 'for' → logprob: -2.916901111602783
    6. '_stack' → logprob: -3.416901111602783
    7. ' stack' → logprob: -4.041901111602783
    8. '_' → logprob: -4.041901111602783
    9. '
' → logprob: -4.416901111602783
    10. ')' → logprob: -4.541901111602783

Token 879: ' conditions' (ID: 6409)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8940098881721497
    2. ' ' → logprob: -1.8940098285675049
    3. '
' → logprob: -2.144009828567505
    4. ')' → logprob: -2.269009828567505
    5. '.' → logprob: -3.394009828567505
    6. 's' → logprob: -3.644009828567505
    7. 'for' → logprob: -3.894009828567505
    8. ' for' → logprob: -4.144010066986084
    9. 'while' → logprob: -4.269010066986084
    10. ' while' → logprob: -4.269010066986084

Token 880: '

' (ID: 279)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.179839625954628
    2. 'stack' → logprob: -1.9298396110534668
    3. 'ans' → logprob: -4.804839611053467
    4. '
' → logprob: -5.304839611053467
    5. 'res' → logprob: -6.679839611053467
    6. 'answer' → logprob: -7.054839611053467
    7. 'd' → logprob: -7.429839611053467
    8. 'stk' → logprob: -7.429839611053467
    9. 'st' → logprob: -7.804839611053467
    10. '#' → logprob: -7.929839611053467

Token 881: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.41434139013290405
    2. 'stack' → logprob: -1.1643414497375488
    3. 'stk' → logprob: -4.539341449737549
    4. 'ans' → logprob: -4.789341449737549
    5. 'left' → logprob: -6.289341449737549
    6. 'st' → logprob: -6.414341449737549
    7. 'd' → logprob: -7.164341449737549
    8. 'res' → logprob: -7.664341449737549
    9. 'l' → logprob: -7.664341449737549
    10. 'cnt' → logprob: -7.789341449737549

Token 882: ' Initialize' (ID: 19496)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5310060977935791
    2. 'stack' → logprob: -1.031006097793579
    3. 'ans' → logprob: -3.406006097793579
    4. 'stk' → logprob: -4.781005859375
    5. 'left' → logprob: -5.531005859375
    6. 'st' → logprob: -6.281005859375
    7. 'res' → logprob: -6.656005859375
    8. 'cnt' → logprob: -6.781005859375
    9. 'answer' → logprob: -7.031005859375
    10. '#' → logprob: -7.406005859375

Token 883: ' the' (ID: 290)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.034762341529130936
    2. 'stack' → logprob: -3.659762382507324
    3. 'ans' → logprob: -5.159762382507324
    4. 'stk' → logprob: -6.909762382507324
    5. 'cnt' → logprob: -8.034762382507324
    6. 'st' → logprob: -8.159762382507324
    7. 'res' → logprob: -8.409762382507324
    8. 'count' → logprob: -8.409762382507324
    9. 'cur' → logprob: -9.159762382507324
    10. 'now' → logprob: -9.284762382507324

Token 884: ' dp' (ID: 21546)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.022246576845645905
    2. 'dp' → logprob: -4.272246360778809
    3. 'ans' → logprob: -5.522246360778809
    4. 'stk' → logprob: -5.897246360778809
    5. 'st' → logprob: -7.147246360778809
    6. 'answer' → logprob: -8.522246360778809
    7. 'res' → logprob: -8.897246360778809
    8. 'left' → logprob: -9.897246360778809
    9. 'from' → logprob: -11.147246360778809
    10. 'dq' → logprob: -11.647246360778809

Token 885: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002476604888215661
    2. '=' → logprob: -6.127476692199707
    3. '_' → logprob: -8.252476692199707
    4. '=[' → logprob: -10.877476692199707
    5. '[' → logprob: -12.252476692199707
    6. '0' → logprob: -13.502476692199707
    7. 's' → logprob: -13.502476692199707
    8. '_=' → logprob: -14.127476692199707
    9. '=[]' → logprob: -14.752476692199707
    10. ' =[' → logprob: -14.877476692199707

Token 886: 'dynamic' (ID: 46433)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005395700572989881
    2. '[-' → logprob: -8.500539779663086
    3. '[n' → logprob: -9.250539779663086
    4. ']' → logprob: -9.500539779663086
    5. ')' → logprob: -10.000539779663086
    6. '0' → logprob: -10.125539779663086
    7. 'dp' → logprob: -10.375539779663086
    8. 'H' → logprob: -11.750539779663086
    9. '[len' → logprob: -12.125539779663086
    10. '=' → logprob: -12.500539779663086

Token 887: ' programming' (ID: 23238)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12992236018180847
    2. '=' → logprob: -2.129922389984131
    3. 'dp' → logprob: -7.129922389984131
    4. '[' → logprob: -7.379922389984131
    5. 'p' → logprob: -7.379922389984131
    6. '=[' → logprob: -7.754922389984131
    7. '```' → logprob: -9.254921913146973
    8. ']' → logprob: -9.629921913146973
    9. ')' → logprob: -9.629921913146973
    10. '[-' → logprob: -10.004921913146973

Token 888: ')' (ID: 8)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18077324330806732
    2. '=' → logprob: -1.8057732582092285
    3. ']' → logprob: -7.6807732582092285
    4. '=[' → logprob: -8.43077278137207
    5. '[' → logprob: -9.05577278137207
    6. ')' → logprob: -9.80577278137207
    7. 'dp' → logprob: -10.30577278137207
    8. 'array' → logprob: -10.43077278137207
    9. '=[]' → logprob: -10.55577278137207
    10. '[]' → logprob: -10.68077278137207

Token 889: ' array' (ID: 2644)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4295403063297272
    2. '=' → logprob: -1.0545402765274048
    3. '=[' → logprob: -7.429540157318115
    4. 'dp' → logprob: -9.179540634155273
    5. '[' → logprob: -9.429540634155273
    6. '_' → logprob: -10.679540634155273
    7. '=[]' → logprob: -11.804540634155273
    8. 'array' → logprob: -12.054540634155273
    9. '0' → logprob: -12.429540634155273
    10. 'arr' → logprob: -13.304540634155273

Token 890: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.36185672879219055
    2. 'dp' → logprob: -1.3618566989898682
    3. ' =' → logprob: -3.111856698989868
    4. '=[' → logprob: -6.236856937408447
    5. '[' → logprob: -6.986856937408447
    6. '0' → logprob: -11.611856460571289
    7. ' dp' → logprob: -11.861856460571289
    8. '_dp' → logprob: -12.111856460571289
    9. '[-' → logprob: -12.736856460571289
    10. '(dp' → logprob: -13.486856460571289

Token 891: ' size' (ID: 2349)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.2362109124660492
    2. 'size' → logprob: -2.236210823059082
    3. '[' → logprob: -2.861210823059082
    4. 'n' → logprob: -4.236210823059082
    5. '(n' → logprob: -4.486210823059082
    6. 'length' → logprob: -4.611210823059082
    7. '0' → logprob: -4.736210823059082
    8. ' size' → logprob: -6.986210823059082
    9. ' [' → logprob: -7.986210823059082
    10. '(size' → logprob: -8.361210823059082

Token 892: ' n' (ID: 297)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1810782253742218
    2. 'n' → logprob: -1.8060781955718994
    3. ' (' → logprob: -7.1810784339904785
    4. '(' → logprob: -8.30607795715332
    5. ' n' → logprob: -9.05607795715332
    6. '[n' → logprob: -9.68107795715332
    7. 'len' → logprob: -9.80607795715332
    8. '(len' → logprob: -10.05607795715332
    9. '
' → logprob: -11.18107795715332
    10. '0' → logprob: -12.05607795715332

Token 893: '+' (ID: 10)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1270594596862793
    2. '=' → logprob: -2.5020594596862793
    3. '+' → logprob: -3.7520594596862793
    4. '(n' → logprob: -4.877059459686279
    5. 'dp' → logprob: -6.127059459686279
    6. '[n' → logprob: -6.252059459686279
    7. '0' → logprob: -7.377059459686279
    8. '=[' → logprob: -7.502059459686279
    9. 'n' → logprob: -7.752059459686279
    10. '[' → logprob: -8.502059936523438

Token 894: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.020559756085276604
    2. '1' → logprob: -3.895559787750244
    3. '3' → logprob: -11.145559310913086
    4. ' ' → logprob: -13.145559310913086
    5. '(' → logprob: -15.145559310913086
    6. '(n' → logprob: -15.270559310913086
    7. '
' → logprob: -15.645559310913086
    8. '10' → logprob: -16.020559310913086
    9. '11' → logprob: -16.270559310913086
    10. '12' → logprob: -16.333059310913086

Token 895: ',' (ID: 11)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.27242547273635864
    2. ' =' → logprob: -1.8974254131317139
    3. '=' → logprob: -2.647425413131714
    4. '[' → logprob: -4.147425651550293
    5. '=[' → logprob: -6.772425651550293
    6. '0' → logprob: -8.397425651550293
    7. '_dp' → logprob: -8.772425651550293
    8. ' dp' → logprob: -8.897425651550293
    9. ' [' → logprob: -9.897425651550293
    10. 'DP' → logprob: -10.022425651550293

Token 896: ' all' (ID: 722)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.040316201746463776
    2. 'dp' → logprob: -3.415316104888916
    3. ' [' → logprob: -5.290316104888916
    4. '[-' → logprob: -7.165316104888916
    5. ' dp' → logprob: -7.665316104888916
    6. '0' → logprob: -8.040316581726074
    7. '[n' → logprob: -11.290316581726074
    8. 'INF' → logprob: -11.540316581726074
    9. '[i' → logprob: -12.290316581726074
    10. ' [-' → logprob: -12.415316581726074

Token 897: ' values' (ID: 4824)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15251804888248444
    2. '[' → logprob: -2.4025180339813232
    3. '0' → logprob: -3.6525180339813232
    4. '=[' → logprob: -4.277518272399902
    5. ' =' → logprob: -4.652518272399902
    6. 'INF' → logprob: -6.652518272399902
    7. 'inf' → logprob: -9.027518272399902
    8. ' [' → logprob: -9.402518272399902
    9. '[-' → logprob: -10.777518272399902
    10. '=sys' → logprob: -11.027518272399902

Token 898: ' set' (ID: 920)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.027149904519319534
    2. ' =' → logprob: -3.6521499156951904
    3. '=[' → logprob: -8.02715015411377
    4. 'inf' → logprob: -8.52715015411377
    5. '[' → logprob: -8.90215015411377
    6. '0' → logprob: -9.15215015411377
    7. 'INF' → logprob: -10.02715015411377
    8. 'dp' → logprob: -11.90215015411377
    9. '=sys' → logprob: -12.90215015411377
    10. 'are' → logprob: -13.02715015411377

Token 899: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.22813622653484344
    2. '=' → logprob: -2.1031363010406494
    3. ' to' → logprob: -3.7281363010406494
    4. '[' → logprob: -3.8531363010406494
    5. '0' → logprob: -4.10313606262207
    6. 'INF' → logprob: -4.60313606262207
    7. ' =' → logprob: -5.10313606262207
    8. '=[' → logprob: -6.10313606262207
    9. 'inf' → logprob: -6.97813606262207
    10. ' [' → logprob: -7.85313606262207

Token 900: ' ' (ID: 220)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.01599283702671528
    2. '0' → logprob: -4.390992641448975
    3. '10' → logprob: -6.140992641448975
    4. 'math' → logprob: -7.140992641448975
    5. 'float' → logprob: -7.765992641448975
    6. 'inf' → logprob: -10.390993118286133
    7. '-INF' → logprob: -10.390993118286133
    8. '-' → logprob: -11.140993118286133
    9. '[' → logprob: -11.390993118286133
    10. '100' → logprob: -12.140993118286133

Token 901: '1' (ID: 16)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.07044340670108795
    2. '0' → logprob: -3.4454433917999268
    3. '10' → logprob: -3.6954433917999268
    4. 'float' → logprob: -4.820443630218506
    5. 'math' → logprob: -5.820443630218506
    6. 'inf' → logprob: -9.070443153381348
    7. '[' → logprob: -9.945443153381348
    8. 'int' → logprob: -10.320443153381348
    9. '1' → logprob: -11.195443153381348
    10. '-INF' → logprob: -11.695443153381348

Token 902: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0009158630855381489
    2. ' dp' → logprob: -8.25091552734375
    3. '[' → logprob: -8.37591552734375
    4. '_dp' → logprob: -8.75091552734375
    5. ' =' → logprob: -9.12591552734375
    6. '
' → logprob: -9.25091552734375
    7. '=' → logprob: -10.87591552734375
    8. '(dp' → logprob: -11.12591552734375
    9. ',' → logprob: -11.50091552734375
    10. 'd' → logprob: -12.50091552734375

Token 903: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00041875618626363575
    2. ' dp' → logprob: -8.625418663024902
    3. '[' → logprob: -8.750418663024902
    4. '_dp' → logprob: -10.375418663024902
    5. '
' → logprob: -10.500418663024902
    6. ' =' → logprob: -11.875418663024902
    7. '0' → logprob: -12.750418663024902
    8. 'd' → logprob: -12.875418663024902
    9. '_' → logprob: -13.000418663024902
    10. ' [' → logprob: -13.375418663024902

Token 904: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14271028339862823
    2. '=' → logprob: -2.0177102088928223
    3. '=[' → logprob: -11.14271068572998
    4. '[' → logprob: -11.76771068572998
    5. ' =[' → logprob: -12.01771068572998
    6. ')' → logprob: -13.39271068572998
    7. ',' → logprob: -13.64271068572998
    8. '.' → logprob: -14.14271068572998
    9. ' ' → logprob: -14.39271068572998
    10. ']' → logprob: -14.39271068572998

Token 905: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04859782010316849
    2. '[n' → logprob: -3.048597812652588
    3. '[len' → logprob: -12.673598289489746
    4. ' [' → logprob: -12.923598289489746
    5. '[-' → logprob: -13.673598289489746
    6. '[I' → logprob: -13.673598289489746
    7. '[num' → logprob: -14.798598289489746
    8. '[N' → logprob: -14.798598289489746
    9. '[i' → logprob: -15.298598289489746
    10. '[int' → logprob: -15.673598289489746

Token 906: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026543768122792244
    2. '10' → logprob: -4.526543617248535
    3. 'float' → logprob: -4.776543617248535
    4. '0' → logprob: -5.651543617248535
    5. 'INF' → logprob: -5.776543617248535
    6. 'math' → logprob: -8.151543617248535
    7. 'int' → logprob: -11.026543617248535
    8. '(' → logprob: -11.151543617248535
    9. 'inf' → logprob: -11.401543617248535
    10. '-' → logprob: -13.401543617248535

Token 907: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010596273466944695
    2. ' for' → logprob: -5.26059627532959
    3. ']*(' → logprob: -5.88559627532959
    4. 'for' → logprob: -6.63559627532959
    5. ']*' → logprob: -7.13559627532959
    6. ']+' → logprob: -8.01059627532959
    7. ' ]' → logprob: -9.38559627532959
    8. '(n' → logprob: -10.63559627532959
    9. ')' → logprob: -12.01059627532959
    10. '*(' → logprob: -13.01059627532959

Token 908: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.2258083820343018
    2. ']' → logprob: -1.3508083820343018
    3. ' for' → logprob: -2.2258083820343018
    4. 'for' → logprob: -2.4758083820343018
    5. '(n' → logprob: -2.6008083820343018
    6. '
' → logprob: -3.3508083820343018
    7. '<|end|>' → logprob: -3.3508083820343018
    8. '[n' → logprob: -3.6008083820343018
    9. ')' → logprob: -3.8508083820343018
    10. '*(' → logprob: -4.225808143615723

Token 909: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.000241801084484905
    2. '(len' → logprob: -8.375242233276367
    3. '(' → logprob: -12.000242233276367
    4. ' (' → logprob: -12.375242233276367
    5. '(N' → logprob: -15.000242233276367
    6. '
' → logprob: -16.000242233276367
    7. '((' → logprob: -16.250242233276367
    8. 'len' → logprob: -16.375242233276367
    9. '(max' → logprob: -16.375242233276367
    10. '   ' → logprob: -17.125242233276367

Token 910: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3133437931537628
    2. '(n' → logprob: -1.3133437633514404
    3. 'len' → logprob: -9.68834400177002
    4. '(len' → logprob: -11.81334400177002
    5. ' n' → logprob: -12.18834400177002
    6. ' (' → logprob: -12.18834400177002
    7. '(' → logprob: -13.31334400177002
    8. '[n' → logprob: -15.56334400177002
    9. '   ' → logprob: -15.81334400177002
    10. '_n' → logprob: -15.93834400177002

Token 911: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.652451464906335e-05
    2. ' +' → logprob: -11.500016212463379
    3. '+
' → logprob: -12.000016212463379
    4. '()+' → logprob: -17.000017166137695
    5. '+)' → logprob: -18.000017166137695
    6. '+++' → logprob: -18.000017166137695
    7. '1' → logprob: -18.000017166137695
    8. '＋' → logprob: -18.000017166137695
    9. ')+' → logprob: -18.000017166137695
    10. '```' → logprob: -18.375017166137695

Token 912: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6931514143943787
    2. '2' → logprob: -0.6931514143943787
    3. ' ' → logprob: -13.068151473999023
    4. '   ' → logprob: -14.443151473999023
    5. '
' → logprob: -14.755651473999023
    6. '```' → logprob: -15.380651473999023
    7. '`' → logprob: -16.005651473999023
    8. '6' → logprob: -16.130651473999023
    9. '11' → logprob: -16.380651473999023
    10. '5' → logprob: -16.630651473999023

Token 913: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1426766961812973
    2. '1' → logprob: -2.017676591873169
    3. ' ' → logprob: -15.20517635345459
    4. '3' → logprob: -15.39267635345459
    5. '   ' → logprob: -15.70517635345459
    6. '10' → logprob: -15.83017635345459
    7. '5' → logprob: -16.080177307128906
    8. '```' → logprob: -16.080177307128906
    9. '11' → logprob: -16.330177307128906
    10. '12' → logprob: -16.517677307128906

Token 914: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9743012671824545e-05
    2. ')
' → logprob: -10.875020027160645
    3. ' )' → logprob: -15.750020027160645
    4. ')
' → logprob: -15.875020027160645
    5. ']' → logprob: -16.000019073486328
    6. '#' → logprob: -16.125019073486328
    7. ')

' → logprob: -17.000019073486328
    8. ')#' → logprob: -17.000019073486328
    9. ')`' → logprob: -17.250019073486328
    10. '),' → logprob: -17.375019073486328

Token 915: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02148928865790367
    2. 'stack' → logprob: -4.021489143371582
    3. 'dp' → logprob: -7.021489143371582
    4. '.' → logprob: -7.521489143371582
    5. 'i' → logprob: -7.771489143371582
    6. ')' → logprob: -8.521489143371582
    7. ' for' → logprob: -8.771489143371582
    8. 's' → logprob: -9.146489143371582
    9. 'j' → logprob: -9.146489143371582
    10. 'prev' → logprob: -9.146489143371582

Token 916: ' Dynamic' (ID: 37191)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.40584319829940796
    2. 'for' → logprob: -1.1558432579040527
    3. 'from' → logprob: -4.655843257904053
    4. 'st' → logprob: -5.155843257904053
    5. 'stk' → logprob: -6.280843257904053
    6. 'q' → logprob: -8.405842781066895
    7. 's' → logprob: -8.780842781066895
    8. 'left' → logprob: -9.155842781066895
    9. 'dq' → logprob: -9.155842781066895
    10. 'j' → logprob: -9.530842781066895

Token 917: ' programming' (ID: 23238)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.024820003658533096
    2. ' for' → logprob: -3.77482008934021
    3. '=' → logprob: -7.774819850921631
    4. ' ' → logprob: -8.024820327758789
    5. '_' → logprob: -8.274820327758789
    6. ')' → logprob: -8.899820327758789
    7. '   ' → logprob: -9.149820327758789
    8. ' =' → logprob: -9.399820327758789
    9. '
' → logprob: -9.524820327758789
    10. '_for' → logprob: -10.774820327758789

Token 918: ' state' (ID: 2608)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008746589301154017
    2. ' for' → logprob: -7.1258745193481445
    3. '
' → logprob: -9.750874519348145
    4. ')' → logprob: -12.000874519348145
    5. '#' → logprob: -13.125874519348145
    6. '	for' → logprob: -14.625874519348145
    7. '\n' → logprob: -14.750874519348145
    8. ':' → logprob: -15.125874519348145
    9. ']' → logprob: -15.250874519348145
    10. '=' → logprob: -15.500874519348145

Token 919: ' updates' (ID: 12663)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002041533123701811
    2. '=' → logprob: -7.377041339874268
    3. 'i' → logprob: -7.377041339874268
    4. ' for' → logprob: -7.502041339874268
    5. ' =' → logprob: -9.252041816711426
    6. '
' → logprob: -9.752041816711426
    7. ')' → logprob: -10.752041816711426
    8. ':' → logprob: -11.502041816711426
    9. '.' → logprob: -12.127041816711426
    10. ',' → logprob: -12.502041816711426

Token 920: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1517960956552997e-05
    2. ' for' → logprob: -11.500011444091797
    3. '
' → logprob: -13.875011444091797
    4. '	for' → logprob: -15.250011444091797
    5. '\n' → logprob: -16.750011444091797
    6. 'f' → logprob: -17.500011444091797
    7. ')' → logprob: -18.125011444091797
    8. '' → logprob: -18.250011444091797
    9. 'b' → logprob: -19.125011444091797
    10. '\' → logprob: -19.375011444091797

Token 921: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.408677290892228e-05
    2. 'stack' → logprob: -10.2500638961792
    3. 'i' → logprob: -11.3750638961792
    4. 'j' → logprob: -11.7500638961792
    5. 'f' → logprob: -12.5000638961792
    6. 'fo' → logprob: -13.1250638961792
    7. 'from' → logprob: -14.1250638961792
    8. ' for' → logprob: -14.2500638961792
    9. 'q' → logprob: -15.0000638961792
    10. 'last' → logprob: -15.3750638961792

Token 922: ' k' (ID: 372)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10025691986083984
    2. ' i' → logprob: -2.35025691986084
    3. 'x' → logprob: -11.35025691986084
    4. '_i' → logprob: -11.85025691986084
    5. 'k' → logprob: -12.22525691986084
    6. ' ' → logprob: -12.47525691986084
    7. 'j' → logprob: -12.60025691986084
    8. 'h' → logprob: -13.10025691986084
    9. '	i' → logprob: -13.10025691986084
    10. '_' → logprob: -13.35025691986084

Token 923: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02346116304397583
    2. 'in' → logprob: -3.773461103439331
    3. ' ' → logprob: -8.77346134185791
    4. ',' → logprob: -11.52346134185791
    5. ' i' → logprob: -11.64846134185791
    6. '   ' → logprob: -11.77346134185791
    7. '  ' → logprob: -12.14846134185791
    8. '1' → logprob: -12.27346134185791
    9. '	in' → logprob: -12.27346134185791
    10. 'k' → logprob: -12.64846134185791

Token 924: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00015991552209015936
    2. ' range' → logprob: -8.750160217285156
    3. 're' → logprob: -14.125160217285156
    4. 'r' → logprob: -15.625160217285156
    5. 'rang' → logprob: -16.250160217285156
    6. '(range' → logprob: -16.500160217285156
    7. 'ran' → logprob: -16.625160217285156
    8. '   ' → logprob: -16.750160217285156
    9. '
' → logprob: -16.875160217285156
    10. '	range' → logprob: -17.000160217285156

Token 925: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3312697112560272
    2. 'n' → logprob: -1.5812697410583496
    3. '1' → logprob: -3.2062697410583496
    4. '(' → logprob: -3.3312697410583496
    5. '0' → logprob: -11.831269264221191
    6. ' n' → logprob: -12.331269264221191
    7. '2' → logprob: -12.581269264221191
    8. '   ' → logprob: -13.831269264221191
    9. '	n' → logprob: -14.581269264221191
    10. '10' → logprob: -14.831269264221191

Token 926: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -1.1932618618011475
    2. '-' → logprob: -1.3182618618011475
    3. '):
' → logprob: -1.3182618618011475
    4. '+' → logprob: -2.0682618618011475
    5. ' -' → logprob: -3.5682618618011475
    6. '1' → logprob: -5.943262100219727
    7. ' +' → logprob: -6.318262100219727
    8. ',' → logprob: -7.443262100219727
    9. '):
' → logprob: -7.443262100219727
    10. ')' → logprob: -7.568262100219727

Token 927: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3913938105106354
    2. 'if' → logprob: -1.766393780708313
    3. 'for' → logprob: -2.3913938999176025
    4. 'j' → logprob: -3.8913938999176025
    5. ' if' → logprob: -3.8913938999176025
    6. ' for' → logprob: -4.391393661499023
    7. 'dp' → logprob: -5.516393661499023
    8. 'i' → logprob: -6.016393661499023
    9. ' j' → logprob: -7.266393661499023
    10. ' i' → logprob: -8.641393661499023

Token 928: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20027248561382294
    2. 'if' → logprob: -2.325272560119629
    3. 'dp' → logprob: -2.700272560119629
    4. 'j' → logprob: -4.200272560119629
    5. 'i' → logprob: -8.200272560119629
    6. 'h' → logprob: -8.450272560119629
    7. 'while' → logprob: -8.575272560119629
    8. '#' (adapté à ' #') → logprob: -8.575272560119629
    9. 'm' → logprob: -8.700272560119629
    10. 'dk' → logprob: -9.825272560119629

Token 929: ' Initialize' (ID: 19496)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2589888870716095
    2. 'if' → logprob: -1.883988857269287
    3. 'dp' → logprob: -3.258988857269287
    4. 'j' → logprob: -3.633988857269287
    5. 'h' → logprob: -5.508988857269287
    6. 'while' → logprob: -6.008988857269287
    7. 'i' → logprob: -6.758988857269287
    8. 'current' → logprob: -7.008988857269287
    9. '#' → logprob: -7.508988857269287
    10. 'cur' → logprob: -8.133989334106445

Token 930: ' a' (ID: 261)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2660169303417206
    2. 'dp' → logprob: -2.266016960144043
    3. 'i' → logprob: -3.141016960144043
    4. 'm' → logprob: -3.891016960144043
    5. 'for' → logprob: -4.391016960144043
    6. 'cur' → logprob: -4.641016960144043
    7. 'l' → logprob: -5.016016960144043
    8. 'if' → logprob: -5.141016960144043
    9. 'min' → logprob: -5.391016960144043
    10. 'x' → logprob: -5.766016960144043

Token 931: ' new' (ID: 620)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4088590741157532
    2. 'stack' → logprob: -1.7838590145111084
    3. 'tmp' → logprob: -3.5338590145111084
    4. 'dp' → logprob: -3.9088590145111084
    5. 'min' → logprob: -4.0338592529296875
    6. 'for' → logprob: -4.2838592529296875
    7. 'q' → logprob: -4.2838592529296875
    8. 'cur' → logprob: -4.5338592529296875
    9. 'm' → logprob: -5.0338592529296875
    10. 'current' → logprob: -5.4088592529296875

Token 932: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7026404142379761
    2. 'for' → logprob: -1.952640414237976
    3. ' for' → logprob: -2.8276405334472656
    4. 'stack' → logprob: -2.9526405334472656
    5. ' dp' → logprob: -3.5776405334472656
    6. ' stack' → logprob: -3.7026405334472656
    7. '_dp' → logprob: -3.7026405334472656
    8. 'line' → logprob: -3.9526405334472656
    9. ' line' → logprob: -4.202640533447266
    10. 'min' → logprob: -4.202640533447266

Token 933: ' array' (ID: 2644)
  Prédit: '_next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_next' → logprob: -1.012388825416565
    2. 'dp' → logprob: -2.0123887062072754
    3. '2' → logprob: -2.3873887062072754
    4. '_new' → logprob: -2.7623887062072754
    5. 'next' → logprob: -2.7623887062072754
    6. '_' → logprob: -2.8873887062072754
    7. 'new' → logprob: -3.0123887062072754
    8. 'tmp' → logprob: -3.1373887062072754
    9. '_dp' → logprob: -3.3873887062072754
    10. ' =' → logprob: -3.6373887062072754

Token 934: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9963486790657043
    2. '   ' → logprob: -1.1213486194610596
    3. 'dp' → logprob: -1.3713486194610596
    4. ' dp' → logprob: -3.4963486194610596
    5. '=' → logprob: -5.246348857879639
    6. '_dp' → logprob: -5.246348857879639
    7. '[' → logprob: -5.621348857879639
    8. ' for' → logprob: -6.746348857879639
    9. 'for' → logprob: -6.996348857879639
    10. ',' → logprob: -7.121348857879639

Token 935: ' transitions' (ID: 59824)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2452917844057083
    2. 'k' → logprob: -1.745291829109192
    3. '[k' → logprob: -3.6202917098999023
    4. '[' → logprob: -5.245291709899902
    5. ' dp' → logprob: -5.620291709899902
    6. 'n' → logprob: -6.120291709899902
    7. 'next' → logprob: -6.745291709899902
    8. '[n' → logprob: -6.870291709899902
    9. ' [' → logprob: -7.495291709899902
    10. 'tmp' → logprob: -7.620291709899902

Token 936: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17397482693195343
    2. 'dp' → logprob: -2.5489747524261475
    3. ' dp' → logprob: -2.6739747524261475
    4. ' =' → logprob: -5.673974990844727
    5. '[' → logprob: -6.048974990844727
    6. '_dp' → logprob: -6.923974990844727
    7. '(dp' → logprob: -7.173974990844727
    8. ':' → logprob: -7.173974990844727
    9. '=' → logprob: -7.298974990844727
    10. '    
' → logprob: -7.298974990844727

Token 937: ' all' (ID: 722)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.9146822094917297
    2. 'dp' → logprob: -1.289682149887085
    3. 'new' → logprob: -1.539682149887085
    4. 'tmp' → logprob: -3.414682149887085
    5. ' nd' → logprob: -3.789682149887085
    6. '   ' → logprob: -3.914682149887085
    7. 'next' → logprob: -4.164682388305664
    8. 'for' → logprob: -5.289682388305664
    9. '_nd' → logprob: -5.664682388305664
    10. ' new' → logprob: -5.789682388305664

Token 938: ' values' (ID: 4824)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6328991651535034
    2. '[' → logprob: -1.3828991651535034
    3. '=' → logprob: -1.8828991651535034
    4. '=[' → logprob: -3.757899284362793
    5. ' =' → logprob: -3.882899284362793
    6. ' dp' → logprob: -4.507899284362793
    7. '_dp' → logprob: -5.132899284362793
    8. '_' → logprob: -6.507899284362793
    9. '[k' → logprob: -7.132899284362793
    10. '_=' → logprob: -7.382899284362793

Token 939: ' set' (ID: 920)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20443062484264374
    2. ' =' → logprob: -1.7044305801391602
    3. '=[' → logprob: -6.32943058013916
    4. '   ' → logprob: -7.32943058013916
    5. '[' → logprob: -8.07943058013916
    6. 'dp' → logprob: -9.45443058013916
    7. ' =[' → logprob: -10.20443058013916
    8. '=
' → logprob: -10.32943058013916
    9. '```' → logprob: -10.57943058013916
    10. '[:]' → logprob: -11.20443058013916

Token 940: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -1.0754386186599731
    2. '=' → logprob: -1.3254386186599731
    3. ' to' → logprob: -1.8254386186599731
    4. '   ' → logprob: -2.9504384994506836
    5. ' =' → logprob: -3.3254384994506836
    6. '(' → logprob: -3.3254384994506836
    7. '[' → logprob: -3.3254384994506836
    8. 'dp' → logprob: -3.5754384994506836
    9. '1' → logprob: -3.9504384994506836
    10. '0' → logprob: -4.450438499450684

Token 941: ' ' (ID: 220)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.01534515805542469
    2. '0' → logprob: -4.765345096588135
    3. 'float' → logprob: -6.140345096588135
    4. '10' → logprob: -6.390345096588135
    5. 'inf' → logprob: -6.765345096588135
    6. 'math' → logprob: -6.890345096588135
    7. 'dp' → logprob: -8.140345573425293
    8. '1' → logprob: -8.890345573425293
    9. 'int' → logprob: -9.640345573425293
    10. '-INF' → logprob: -9.765345573425293

Token 942: '0' (ID: 15)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.10527023673057556
    2. '0' → logprob: -2.4802701473236084
    3. 'float' → logprob: -5.4802703857421875
    4. '10' → logprob: -5.6052703857421875
    5. 'math' → logprob: -5.6052703857421875
    6. '1' → logprob: -5.9802703857421875
    7. 'inf' → logprob: -7.2302703857421875
    8. 'dp' → logprob: -7.9802703857421875
    9. '-INF' → logprob: -8.105270385742188
    10. '[' → logprob: -8.355270385742188

Token 943: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5394191741943359
    2. '   ' → logprob: -1.164419174194336
    3. ' dp' → logprob: -2.414419174194336
    4. 'new' → logprob: -5.414419174194336
    5. ' new' → logprob: -6.164419174194336
    6. '_dp' → logprob: -6.914419174194336
    7. '	dp' → logprob: -7.164419174194336
    8. '    
' → logprob: -7.289419174194336
    9. 'nd' → logprob: -7.414419174194336
    10. '[' → logprob: -7.539419174194336

Token 944: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7427831888198853
    2. ' dp' → logprob: -1.4927831888198853
    3. 'dp' → logprob: -1.6177831888198853
    4. ' new' → logprob: -3.1177830696105957
    5. 'new' → logprob: -3.6177830696105957
    6. ' nd' → logprob: -4.242783069610596
    7. 'nd' → logprob: -5.367783069610596
    8. ' next' → logprob: -5.617783069610596
    9. 'next' → logprob: -6.367783069610596
    10. 'n' → logprob: -6.617783069610596

Token 945: ' new' (ID: 620)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.7352977991104126
    2. 'dp' → logprob: -1.1102977991104126
    3. 'new' (adapté à ' new') → logprob: -2.110297679901123
    4. 'next' → logprob: -3.360297679901123
    5. 'tmp' → logprob: -3.985297679901123
    6. 'nx' → logprob: -5.360297679901123
    7. 'n' → logprob: -5.860297679901123
    8. 'np' → logprob: -6.235297679901123
    9. 'temp' → logprob: -6.985297679901123
    10. 'd' → logprob: -7.110297679901123

Token 946: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.003687009448185563
    2. 'dp' → logprob: -5.628686904907227
    3. ' =' → logprob: -10.003686904907227
    4. '_' → logprob: -10.753686904907227
    5. '=' → logprob: -11.378686904907227
    6. '
' → logprob: -13.253686904907227
    7. '\' → logprob: -13.878686904907227
    8. '_d' → logprob: -14.003686904907227
    9. '	dp' → logprob: -14.253686904907227
    10. 'Dp' → logprob: -14.253686904907227

Token 947: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28124627470970154
    2. '=' → logprob: -1.406246304512024
    3. '[' → logprob: -10.031246185302734
    4. '=[' → logprob: -10.781246185302734
    5. ' =[' → logprob: -11.781246185302734
    6. ',' → logprob: -12.281246185302734
    7. ')' → logprob: -12.281246185302734
    8. '   ' → logprob: -12.281246185302734
    9. '_' → logprob: -13.031246185302734
    10. '=[]' → logprob: -13.781246185302734

Token 948: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000145137935760431
    2. ' [' → logprob: -8.875144958496094
    3. '[n' → logprob: -13.375144958496094
    4. '[k' → logprob: -13.750144958496094
    5. 'dp' → logprob: -14.250144958496094
    6. '[int' → logprob: -14.625144958496094
    7. '0' → logprob: -15.500144958496094
    8. '[max' → logprob: -15.500144958496094
    9. '[m' → logprob: -15.750144958496094
    10. '[new' → logprob: -15.875144958496094

Token 949: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.696077227592468e-05
    2. 'INF' → logprob: -9.875077247619629
    3. 'float' → logprob: -11.375077247619629
    4. 'math' → logprob: -11.625077247619629
    5. '10' → logprob: -12.875077247619629
    6. '1' → logprob: -14.250077247619629
    7. 'inf' → logprob: -15.000077247619629
    8. '[' → logprob: -15.625077247619629
    9. ' ' → logprob: -15.875077247619629
    10. 'dp' → logprob: -16.000076293945312

Token 950: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0026941976975649595
    2. ')' → logprob: -6.377694129943848
    3. ' ]' → logprob: -8.127694129943848
    4. ']*(' → logprob: -8.377694129943848
    5. ' for' → logprob: -8.502694129943848
    6. '<|end|>' → logprob: -9.502694129943848
    7. ']*' → logprob: -9.877694129943848
    8. 'for' → logprob: -10.377694129943848
    9. '<|end|>' → logprob: -10.627694129943848
    10. ' *' → logprob: -10.752694129943848

Token 951: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8744816184043884
    2. 'for' → logprob: -1.1244816780090332
    3. '*' → logprob: -1.9994816780090332
    4. '*(' → logprob: -2.874481678009033
    5. ' *' → logprob: -2.874481678009033
    6. '(n' → logprob: -5.874481678009033
    7. ']' → logprob: -5.999481678009033
    8. ']*' → logprob: -6.624481678009033
    9. ')' → logprob: -6.749481678009033
    10. ']*(' → logprob: -6.749481678009033

Token 952: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0005762664368376136
    2. '(' → logprob: -8.37557601928711
    3. ' (' → logprob: -8.75057601928711
    4. '(k' → logprob: -9.12557601928711
    5. '(len' → logprob: -10.75057601928711
    6. '
' → logprob: -10.87557601928711
    7. '(max' → logprob: -10.87557601928711
    8. '   ' → logprob: -12.37557601928711
    9. '((' → logprob: -13.12557601928711
    10. '1' → logprob: -13.50057601928711

Token 953: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.31679874658584595
    2. '(n' → logprob: -1.3167986869812012
    3. 'len' → logprob: -7.191798686981201
    4. 'max' → logprob: -7.566798686981201
    5. '(' → logprob: -7.691798686981201
    6. 'k' → logprob: -8.06679916381836
    7. '10' → logprob: -8.81679916381836
    8. '1' → logprob: -8.94179916381836
    9. 'dp' → logprob: -8.94179916381836
    10. '2' → logprob: -9.19179916381836

Token 954: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00029995047952979803
    2. ' +' → logprob: -8.125300407409668
    3. '+
' → logprob: -12.875300407409668
    4. ')' → logprob: -14.750300407409668
    5. '<|end|>' → logprob: -15.125300407409668
    6. '+)' → logprob: -15.375300407409668
    7. '+k' → logprob: -15.875300407409668
    8. '1' → logprob: -16.12529945373535
    9. ')+' → logprob: -17.50029945373535
    10. '[' → logprob: -18.00029945373535

Token 955: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004080420359969139
    2. '2' → logprob: -5.504080295562744
    3. ' ' → logprob: -13.754080772399902
    4. '
' → logprob: -15.379080772399902
    5. '   ' → logprob: -15.629080772399902
    6. '```' → logprob: -15.754080772399902
    7. '(' → logprob: -16.629079818725586
    8. '+' → logprob: -17.066579818725586
    9. '10' → logprob: -17.066579818725586
    10. '11' → logprob: -17.129079818725586

Token 956: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07889342308044434
    2. '2' → logprob: -2.5788934230804443
    3. '(' → logprob: -13.828893661499023
    4. ' ' → logprob: -13.828893661499023
    5. '   ' → logprob: -15.203893661499023
    6. '
' → logprob: -15.203893661499023
    7. '```' → logprob: -15.641393661499023
    8. '11' → logprob: -15.703893661499023
    9. '12' → logprob: -15.703893661499023
    10. '{' → logprob: -16.266393661499023

Token 957: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017278951418120414
    2. '   ' → logprob: -9.37517261505127
    3. ')
' → logprob: -9.75017261505127
    4. '<|end|>' → logprob: -11.00017261505127
    5. ' )' → logprob: -12.50017261505127
    6. ')]' → logprob: -12.62517261505127
    7. ']' → logprob: -13.00017261505127
    8. ')

' → logprob: -14.37517261505127
    9. ')new' → logprob: -15.00017261505127
    10. ')#' → logprob: -15.12517261505127

Token 958: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13124844431877136
    2. ' for' → logprob: -2.8812484741210938
    3. '   ' → logprob: -3.0062484741210938
    4. '	for' → logprob: -4.131248474121094
    5. 'new' → logprob: -7.131248474121094
    6. 'dp' → logprob: -8.631248474121094
    7. '	new' → logprob: -9.881248474121094
    8. '[new' → logprob: -10.006248474121094
    9. ' new' → logprob: -10.256248474121094
    10. '[' → logprob: -10.256248474121094

Token 959: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.023405389860272408
    2. '   ' → logprob: -3.8984053134918213
    3. ' for' → logprob: -6.0234055519104
    4. 'he' → logprob: -8.648405075073242
    5. 'j' → logprob: -9.148405075073242
    6. 'new' → logprob: -10.023405075073242
    7. '	for' → logprob: -10.148405075073242
    8. 'dp' → logprob: -10.898405075073242
    9. 'i' → logprob: -11.148405075073242
    10. 'if' → logprob: -12.398405075073242

Token 960: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5128689408302307
    2. 'i' → logprob: -1.762868881225586
    3. 'l' → logprob: -2.012868881225586
    4. 'h' → logprob: -3.512868881225586
    5. 'x' → logprob: -3.637868881225586
    6. 'm' → logprob: -4.012868881225586
    7. 'p' → logprob: -5.887868881225586
    8. 'v' → logprob: -6.012868881225586
    9. 't' → logprob: -6.137868881225586
    10. 'kk' → logprob: -6.387868881225586

Token 961: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11497781425714493
    2. 'in' → logprob: -2.2399778366088867
    3. '   ' → logprob: -7.114977836608887
    4. '[' → logprob: -7.864977836608887
    5. '<|end|>' → logprob: -8.489977836608887
    6. '(' → logprob: -8.739977836608887
    7. ')' → logprob: -9.239977836608887
    8. '+' → logprob: -9.364977836608887
    9. '    ' → logprob: -10.239977836608887
    10. ' (' → logprob: -10.239977836608887

Token 962: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0025261954870074987
    2. ' range' → logprob: -6.00252628326416
    3. 'dp' → logprob: -10.87752628326416
    4. '[' → logprob: -11.25252628326416
    5. '(range' → logprob: -12.00252628326416
    6. '   ' → logprob: -12.12752628326416
    7. 'new' → logprob: -13.50252628326416
    8. '	range' → logprob: -13.87752628326416
    9. '0' → logprob: -14.12752628326416
    10. '[n' → logprob: -14.25252628326416

Token 963: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0599905326962471
    2. 'n' → logprob: -3.559990644454956
    3. '(k' → logprob: -3.809990644454956
    4. 'k' → logprob: -4.934990406036377
    5. '(' → logprob: -8.684990882873535
    6. ' n' → logprob: -9.184990882873535
    7. ' (' → logprob: -9.809990882873535
    8. '(i' → logprob: -10.184990882873535
    9. '1' → logprob: -11.309990882873535
    10. ')' → logprob: -11.434990882873535

Token 964: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0892176404595375
    2. ' +' → logprob: -2.8392176628112793
    3. ')' → logprob: -4.214217662811279
    4. '):
' → logprob: -5.089217662811279
    5. '):' → logprob: -5.464217662811279
    6. '   ' → logprob: -6.964217662811279
    7. ')+' → logprob: -8.589217185974121
    8. '+i' → logprob: -8.839217185974121
    9. '<|end|>' → logprob: -9.839217185974121
    10. '[i' → logprob: -9.839217185974121

Token 965: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.696077227592468e-05
    2. '2' → logprob: -9.625077247619629
    3. ' ' → logprob: -11.750077247619629
    4. 'k' → logprob: -14.250077247619629
    5. '
' → logprob: -15.062577247619629
    6. '   ' → logprob: -15.062577247619629
    7. 'n' → logprob: -15.250077247619629
    8. '+' → logprob: -15.750077247619629
    9. 'i' → logprob: -15.812577247619629
    10. '(' → logprob: -15.937577247619629

Token 966: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8193366486229934e-05
    2. '2' → logprob: -11.750018119812012
    3. ' ' → logprob: -11.875018119812012
    4. '0' → logprob: -14.312518119812012
    5. '   ' → logprob: -14.312518119812012
    6. '
' → logprob: -14.625018119812012
    7. '+' → logprob: -15.625018119812012
    8. ')' → logprob: -15.687518119812012
    9. '```' → logprob: -15.812518119812012
    10. 'k' → logprob: -15.875018119812012

Token 967: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2986482083797455
    2. ')' → logprob: -1.9236482381820679
    3. '):
' → logprob: -2.2986481189727783
    4. '   ' → logprob: -5.173648357391357
    5. '<|end|>' → logprob: -5.923648357391357
    6. '+' → logprob: -6.548648357391357
    7. ',' → logprob: -7.298648357391357
    8. ' ):' → logprob: -8.6736478805542
    9. ')+' → logprob: -9.1736478805542
    10. '       ' → logprob: -9.4236478805542

Token 968: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04889210686087608
    2. '	' → logprob: -4.048892021179199
    3. ' if' → logprob: -4.298892021179199
    4. ' new' → logprob: -4.673892021179199
    5. 'new' → logprob: -6.173892021179199
    6. '	   ' → logprob: -6.548892021179199
    7. 'if' → logprob: -7.298892021179199
    8. '    ' → logprob: -7.548892021179199
    9. '	if' → logprob: -7.923892021179199
    10. '<|end|>' → logprob: -8.0488920211792

Token 969: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.34220951795578003
    2. ' if' → logprob: -1.7172095775604248
    3. ' new' → logprob: -3.342209577560425
    4. 'for' → logprob: -3.342209577560425
    5. 'new' → logprob: -3.592209577560425
    6. '   ' → logprob: -5.092209339141846
    7. ' for' → logprob: -5.217209339141846
    8. 'dp' → logprob: -9.092209815979004
    9. ' j' → logprob: -9.592209815979004
    10. 'j' → logprob: -9.592209815979004

Token 970: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17099052667617798
    2. 'new' → logprob: -2.295990467071533
    3. 'for' → logprob: -3.295990467071533
    4. '   ' → logprob: -4.920990467071533
    5. ' if' → logprob: -4.920990467071533
    6. ' new' → logprob: -5.795990467071533
    7. 'j' → logprob: -7.670990467071533
    8. ' for' → logprob: -7.795990467071533
    9. 'he' → logprob: -8.170990943908691
    10. 'val' → logprob: -8.670990943908691

Token 971: ' the' (ID: 290)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.5940119624137878
    2. 'i' → logprob: -0.9690119624137878
    3. 'dp' → logprob: -2.8440120220184326
    4. ' H' → logprob: -5.4690117835998535
    5. ' i' → logprob: -5.7190117835998535
    6. 'new' → logprob: -6.7190117835998535
    7. 'k' → logprob: -7.3440117835998535
    8. ' dp' → logprob: -7.5940117835998535
    9. '   ' → logprob: -8.594012260437012
    10. ' new' → logprob: -9.469012260437012

Token 972: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6173796057701111
    2. 'H' → logprob: -1.2423796653747559
    3. 'dp' → logprob: -1.8673796653747559
    4. 'new' → logprob: -5.242379665374756
    5. ' i' → logprob: -5.367379665374756
    6. ' H' → logprob: -5.867379665374756
    7. 'abs' → logprob: -6.617379665374756
    8. 'k' → logprob: -6.617379665374756
    9. ' dp' → logprob: -6.742379665374756
    10. ' new' → logprob: -7.867379665374756

Token 973: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3701813220977783
    2. 'H' → logprob: -1.3701813220977783
    3. 'dp' → logprob: -3.2451813220977783
    4. 'abs' → logprob: -5.495181083679199
    5. 'new' → logprob: -5.620181083679199
    6. ' i' → logprob: -5.870181083679199
    7. 'k' → logprob: -6.120181083679199
    8. ' H' → logprob: -6.370181083679199
    9. ')' → logprob: -7.245181083679199
    10. ' dp' → logprob: -7.995181083679199

Token 974: '-th' (ID: 14928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7037906050682068
    2. ' <' → logprob: -1.2037906646728516
    3. ')' → logprob: -2.3287906646728516
    4. ' ==' → logprob: -3.3287906646728516
    5. ' <=' → logprob: -3.7037906646728516
    6. '+' → logprob: -4.703790664672852
    7. ' !=' → logprob: -4.953790664672852
    8. '<' → logprob: -5.328790664672852
    9. '<n' → logprob: -5.453790664672852
    10. 'f' → logprob: -5.578790664672852

Token 975: ')' (ID: 8)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2927058935165405
    2. 'H' → logprob: -2.29270601272583
    3. '==' → logprob: -3.91770601272583
    4. ' ==' → logprob: -3.91770601272583
    5. ']==' → logprob: -4.29270601272583
    6. 'k' → logprob: -4.41770601272583
    7. ' <' → logprob: -4.41770601272583
    8. ')' → logprob: -4.66770601272583
    9. 'dp' → logprob: -4.91770601272583
    10. ']+' → logprob: -4.91770601272583

Token 976: ' height' (ID: 4679)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.606667160987854
    2. 'H' → logprob: -1.856667160987854
    3. '<' → logprob: -3.3566670417785645
    4. '==' → logprob: -3.4816670417785645
    5. 'token' → logprob: -3.6066670417785645
    6. ']==' → logprob: -3.7316670417785645
    7. 'dp' → logprob: -3.7316670417785645
    8. ' <' → logprob: -3.8566670417785645
    9. ']<' → logprob: -4.2316670417785645
    10. ' H' → logprob: -4.3566670417785645

Token 977: ' is' (ID: 382)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4019395411014557
    2. ']<=' → logprob: -2.526939630508423
    3. '<=' → logprob: -2.651939630508423
    4. ']==' → logprob: -2.776939630508423
    5. ']>=' → logprob: -2.776939630508423
    6. '==' → logprob: -4.276939392089844
    7. '>=' → logprob: -4.401939392089844
    8. ' <=' → logprob: -4.651939392089844
    9. ']<' → logprob: -5.901939392089844
    10. ' >=' → logprob: -6.026939392089844

Token 978: ' strictly' (ID: 38971)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.5421128869056702
    2. '<=' → logprob: -1.0421128273010254
    3. 'H' → logprob: -3.6671128273010254
    4. ' >=' → logprob: -4.292112827301025
    5. ' <=' → logprob: -5.167112827301025
    6. 'k' → logprob: -5.167112827301025
    7. '>' → logprob: -5.417112827301025
    8. 'not' → logprob: -6.417112827301025
    9. '0' → logprob: -6.542112827301025
    10. ' not' → logprob: -6.917112827301025

Token 979: ' greater' (ID: 10740)
  Prédit: 'greater'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'greater' → logprob: -0.964114785194397
    2. '>' → logprob: -1.464114785194397
    3. 'less' → logprob: -1.839114785194397
    4. ' less' → logprob: -2.2141146659851074
    5. '<' → logprob: -2.9641146659851074
    6. ' greater' → logprob: -3.0891146659851074
    7. ' <' → logprob: -4.589114665985107
    8. ' >' → logprob: -4.714114665985107
    9. ')' → logprob: -7.589114665985107
    10. 'H' → logprob: -8.339115142822266

Token 980: ' than' (ID: 1572)
  Prédit: ' than'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' than' → logprob: -1.0281630754470825
    2. 'than' → logprob: -1.1531630754470825
    3. '>' → logprob: -2.278162956237793
    4. 'if' → logprob: -2.403162956237793
    5. '=' → logprob: -2.903162956237793
    6. '   ' → logprob: -4.528162956237793
    7. '_than' → logprob: -4.528162956237793
    8. '==' → logprob: -4.653162956237793
    9. 'and' → logprob: -5.028162956237793
    10. '<' → logprob: -5.403162956237793

Token 981: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0077417283318936825
    2. ' H' → logprob: -5.382741928100586
    3. 'k' → logprob: -5.882741928100586
    4. ''' → logprob: -9.507741928100586
    5. '   ' → logprob: -10.007741928100586
    6. 'i' → logprob: -10.132741928100586
    7. '0' → logprob: -10.382741928100586
    8. '`' → logprob: -10.507741928100586
    9. ' k' → logprob: -10.632741928100586
    10. '"' → logprob: -11.382741928100586

Token 982: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.6612309813499451
    2. '[i' → logprob: -0.7862309813499451
    3. '[' → logprob: -3.78623104095459
    4. 'k' → logprob: -6.41123104095459
    5. ' [' → logprob: -6.78623104095459
    6. 'i' → logprob: -7.66123104095459
    7. '(k' → logprob: -8.03623104095459
    8. '[j' → logprob: -8.16123104095459
    9. '   ' → logprob: -8.28623104095459
    10. ' k' → logprob: -8.53623104095459

Token 983: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1036393642425537
    2. ']:' → logprob: -1.3536393642425537
    3. '[i' → logprob: -1.4786393642425537
    4. '],' → logprob: -2.4786393642425537
    5. '[k' → logprob: -3.4786393642425537
    6. ']:
' → logprob: -3.6036393642425537
    7. ']):' → logprob: -4.353639602661133
    8. '])' → logprob: -4.978639602661133
    9. '[' → logprob: -5.478639602661133
    10. ']):
' → logprob: -5.728639602661133

Token 984: ' special' (ID: 3582)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1971815973520279
    2. 'if' → logprob: -1.9471815824508667
    3. '           ' → logprob: -4.572181701660156
    4. ' new' → logprob: -4.822181701660156
    5. '       ' → logprob: -4.947181701660156
    6. ':' → logprob: -5.572181701660156
    7. ' ' → logprob: -6.697181701660156
    8. 'new' → logprob: -6.697181701660156
    9. ' :' → logprob: -7.072181701660156
    10. '   ' → logprob: -7.322181701660156

Token 985: ' update' (ID: 4027)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0019222497940063
    2. ' if' → logprob: -1.8769222497940063
    3. ' new' → logprob: -2.501922130584717
    4. '<|end|>' → logprob: -2.626922130584717
    5. ')' → logprob: -3.001922130584717
    6. 'if' → logprob: -3.126922130584717
    7. 'new' → logprob: -3.376922130584717
    8. '[i' → logprob: -3.751922130584717
    9. ']' → logprob: -3.876922130584717
    10. '[new' → logprob: -4.251922130584717

Token 986: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6424360275268555
    2. ' and' → logprob: -1.1424360275268555
    3. 'and' → logprob: -2.7674360275268555
    4. '[i' → logprob: -3.3924360275268555
    5. ':
' → logprob: -4.1424360275268555
    6. '   ' → logprob: -4.3924360275268555
    7. '[' → logprob: -4.6424360275268555
    8. 'if' → logprob: -5.2674360275268555
    9. ']' → logprob: -5.5174360275268555
    10. ' if' → logprob: -5.7674360275268555

Token 987: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2064670324325562
    2. '   ' → logprob: -1.2064670324325562
    3. 'if' → logprob: -1.9564670324325562
    4. '[' → logprob: -1.9564670324325562
    5. ' if' → logprob: -3.5814671516418457
    6. '[new' → logprob: -3.9564671516418457
    7. '[i' → logprob: -4.081467151641846
    8. '=' → logprob: -4.706467151641846
    9. '       ' → logprob: -5.081467151641846
    10. ' ' → logprob: -5.206467151641846

Token 988: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1280914545059204
    2. ' if' → logprob: -2.128091335296631
    3. '       ' → logprob: -7.128091335296631
    4. 'new' → logprob: -9.003091812133789
    5. '           ' → logprob: -9.378091812133789
    6. '   ' → logprob: -9.503091812133789
    7. ' new' → logprob: -10.378091812133789
    8. 'i' → logprob: -11.253091812133789
    9. '    ' → logprob: -11.753091812133789
    10. '	if' → logprob: -12.003091812133789

Token 989: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.003672282909974456
    2. ' H' → logprob: -5.628672122955322
    3. '   ' → logprob: -10.37867259979248
    4. 'i' → logprob: -10.50367259979248
    5. 'dp' → logprob: -12.00367259979248
    6. ' ' → logprob: -13.00367259979248
    7. '(H' → logprob: -13.75367259979248
    8. '	H' → logprob: -14.00367259979248
    9. ' i' → logprob: -14.25367259979248
    10. 'new' → logprob: -14.25367259979248

Token 990: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0009892228990793228
    2. '[k' → logprob: -7.2509894371032715
    3. '[' → logprob: -8.375988960266113
    4. ' [' → logprob: -10.750988960266113
    5. 'i' → logprob: -11.375988960266113
    6. '```' → logprob: -12.500988960266113
    7. ']' → logprob: -13.000988960266113
    8. '[
' → logprob: -13.375988960266113
    9. '[I' → logprob: -13.625988960266113
    10. '>' → logprob: -13.625988960266113

Token 991: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10484427958726883
    2. ']>' → logprob: -2.604844331741333
    3. '>' → logprob: -3.979844331741333
    4. ' >' → logprob: -6.604844093322754
    5. '[i' → logprob: -6.979844093322754
    6. '[k' → logprob: -6.979844093322754
    7. '[' → logprob: -7.104844093322754
    8. ')>' → logprob: -7.229844093322754
    9. ')' → logprob: -7.604844093322754
    10. ' ]' → logprob: -7.729844093322754

Token 992: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.18627884984016418
    2. '>' → logprob: -1.9362788200378418
    3. ' <' → logprob: -3.686278820037842
    4. '<' → logprob: -7.686278820037842
    5. ' ' → logprob: -10.311279296875
    6. '   ' → logprob: -10.436279296875
    7. ' <=' → logprob: -10.561279296875
    8. ' >
' → logprob: -10.936279296875
    9. ' >=' → logprob: -11.061279296875
    10. '[i' → logprob: -11.186279296875

Token 993: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0002649119414854795
    2. ' H' → logprob: -8.250265121459961
    3. '   ' → logprob: -12.750265121459961
    4. '	H' → logprob: -15.000265121459961
    5. 'k' → logprob: -16.25026512145996
    6. ' ' → logprob: -16.37526512145996
    7. '1' → logprob: -16.50026512145996
    8. '       ' → logprob: -16.50026512145996
    9. '  ' → logprob: -17.12526512145996
    10. '#' → logprob: -17.62526512145996

Token 994: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.04301517829298973
    2. 'k' → logprob: -3.168015241622925
    3. '[' → logprob: -11.918015480041504
    4. '   ' → logprob: -13.168015480041504
    5. '{k' → logprob: -13.293015480041504
    6. '[
' → logprob: -13.418015480041504
    7. ' [' → logprob: -13.793015480041504
    8. ' k' → logprob: -14.043015480041504
    9. '
' → logprob: -14.418015480041504
    10. '(k' → logprob: -14.668015480041504

Token 995: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.4326246678829193
    2. ']:' → logprob: -1.6826246976852417
    3. ']' → logprob: -2.182624578475952
    4. '):
' → logprob: -3.807624578475952
    5. '       ' → logprob: -4.557624816894531
    6. '           ' → logprob: -5.057624816894531
    7. ' and' → logprob: -5.682624816894531
    8. ':' → logprob: -5.807624816894531
    9. '):' → logprob: -6.182624816894531
    10. ']:
' → logprob: -6.432624816894531

Token 996: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8850651979446411
    2. ' new' → logprob: -1.3850651979446411
    3. 'new' → logprob: -1.6350651979446411
    4. '               ' → logprob: -2.3850650787353516
    5. '       ' → logprob: -3.3850650787353516
    6. '[new' → logprob: -5.385065078735352
    7. ' ' → logprob: -5.760065078735352
    8. ':' → logprob: -5.885065078735352
    9. '```' → logprob: -7.385065078735352
    10. '[' → logprob: -7.385065078735352

Token 997: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.11416129022836685
    2. ' new' → logprob: -2.364161252975464
    3. 'for' → logprob: -4.989161491394043
    4. 'if' → logprob: -6.239161491394043
    5. '   ' → logprob: -6.864161491394043
    6. '               ' → logprob: -6.989161491394043
    7. '           ' → logprob: -6.989161491394043
    8. '       ' → logprob: -7.364161491394043
    9. ' for' → logprob: -7.364161491394043
    10. ' if' → logprob: -8.239161491394043

Token 998: ' Dou' (ID: 23888)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0006515554850921035
    2. 'dp' → logprob: -8.250651359558105
    3. 'continue' → logprob: -8.875651359558105
    4. 'if' → logprob: -9.125651359558105
    5. 'for' → logprob: -9.500651359558105
    6. '#' → logprob: -10.750651359558105
    7. '   ' → logprob: -11.375651359558105
    8. ' new' → logprob: -11.375651359558105
    9. '(new' → logprob: -12.250651359558105
    10. 'he' → logprob: -12.750651359558105

Token 999: 'bling' (ID: 11037)
  Prédit: 'ble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ble' → logprob: -0.04349442198872566
    2. 'b' → logprob: -3.418494462966919
    3. '           ' → logprob: -5.79349422454834
    4. 'bl' → logprob: -6.66849422454834
    5. 'new' → logprob: -6.79349422454834
    6. 'bled' → logprob: -6.91849422454834
    7. '               ' → logprob: -7.04349422454834
    8. 'uble' → logprob: -7.29349422454834
    9. 'w' → logprob: -7.66849422454834
    10. 'bles' → logprob: -7.79349422454834

Token 1000: ' the' (ID: 290)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.17200128734111786
    2. ' new' → logprob: -2.422001361846924
    3. 'dp' → logprob: -3.297001361846924
    4. '_dp' → logprob: -4.047001361846924
    5. '_new' → logprob: -4.922001361846924
    6. '           ' → logprob: -6.672001361846924
    7. ' dp' → logprob: -6.797001361846924
    8. '=' → logprob: -7.047001361846924
    9. '   ' → logprob: -7.297001361846924
    10. ':' → logprob: -7.672001361846924

Token 1001: ' number' (ID: 2086)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03138941526412964
    2. 'new' → logprob: -3.9063894748687744
    3. ' dp' → logprob: -5.031389236450195
    4. ' new' → logprob: -5.531389236450195
    5. '   ' → logprob: -9.406389236450195
    6. 'for' → logprob: -9.781389236450195
    7. ' for' → logprob: -10.281389236450195
    8. '           ' → logprob: -10.281389236450195
    9. '_dp' → logprob: -10.406389236450195
    10. 'old' → logprob: -11.656389236450195

Token 1002: ' of' (ID: 328)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.8343412280082703
    2. 'w' → logprob: -1.084341287612915
    3. 'dp' → logprob: -2.584341287612915
    4. '_dp' → logprob: -2.834341287612915
    5. 'ew' → logprob: -3.584341287612915
    6. ']' → logprob: -4.084341049194336
    7. '_new' → logprob: -4.334341049194336
    8. '[new' → logprob: -4.459341049194336
    9. ' new' → logprob: -5.209341049194336
    10. '[i' → logprob: -5.709341049194336

Token 1003: ' ways' (ID: 6984)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4488382637500763
    2. 'new' → logprob: -1.073838233947754
    3. ' new' → logprob: -4.323838233947754
    4. ' dp' → logprob: -6.073838233947754
    5. '_dp' → logprob: -6.073838233947754
    6. '   ' → logprob: -7.323838233947754
    7. 'ways' → logprob: -7.948838233947754
    8. ' ways' → logprob: -8.448838233947754
    9. '	dp' → logprob: -9.198838233947754
    10. '#' → logprob: -9.323838233947754

Token 1004: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3299369812011719
    2. '               ' → logprob: -1.9549369812011719
    3. ':' → logprob: -2.579936981201172
    4. 'new' → logprob: -3.454936981201172
    5. ' new' → logprob: -4.204936981201172
    6. '[new' → logprob: -5.204936981201172
    7. '=' → logprob: -5.954936981201172
    8. ' =' → logprob: -6.079936981201172
    9. ',' → logprob: -6.079936981201172
    10. ':
' → logprob: -6.579936981201172

Token 1005: '           ' (ID: 352)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.1016151905059814
    2. ':' → logprob: -1.4766151905059814
    3. '           ' → logprob: -2.1016151905059814
    4. '=' → logprob: -2.2266151905059814
    5. '[new' → logprob: -2.3516151905059814
    6. '               ' → logprob: -2.9766151905059814
    7. ' new' → logprob: -3.2266151905059814
    8. '                   ' → logprob: -5.351614952087402
    9. ' =' → logprob: -5.351614952087402
    10. '[' → logprob: -5.976614952087402

Token 1006: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.00032151900813914835
    2. ' new' → logprob: -8.375321388244629
    3. '           ' → logprob: -9.500321388244629
    4. '   ' → logprob: -11.875321388244629
    5. '               ' → logprob: -12.375321388244629
    6. 'dp' → logprob: -12.375321388244629
    7. '       ' → logprob: -15.000321388244629
    8. '                   ' → logprob: -16.000322341918945
    9. '	new' → logprob: -16.000322341918945
    10. '```' → logprob: -17.500322341918945

Token 1007: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -1.1472419600977446e-06
    2. '_d' → logprob: -15.625000953674316
    3. '\' → logprob: -15.750000953674316
    4. '_dt' → logprob: -15.875000953674316
    5. '```' → logprob: -16.375001907348633
    6. 'dp' → logprob: -16.750001907348633
    7. '_df' → logprob: -16.875001907348633
    8. '_p' → logprob: -17.125001907348633
    9. '_' → logprob: -17.250001907348633
    10. '_pd' → logprob: -17.250001907348633

Token 1008: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.927930654550437e-05
    2. '[' → logprob: -10.875029563903809
    3. '```' → logprob: -13.375029563903809
    4. '[new' → logprob: -13.625029563903809
    5. ' [' → logprob: -13.750029563903809
    6. '[k' → logprob: -14.000029563903809
    7. '[j' → logprob: -14.000029563903809
    8. '=' → logprob: -14.250029563903809
    9. ' =' → logprob: -14.375029563903809
    10. '   ' → logprob: -14.500029563903809

Token 1009: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.027019953355193138
    2. ']+=' → logprob: -3.65201997756958
    3. ']=' → logprob: -7.40201997756958
    4. '+=' → logprob: -9.902019500732422
    5. '=' → logprob: -10.777019500732422
    6. ']+' → logprob: -11.277019500732422
    7. '[i' → logprob: -11.652019500732422
    8. '   ' → logprob: -12.027019500732422
    9. '[' → logprob: -12.402019500732422
    10. ' ]' → logprob: -12.527019500732422

Token 1010: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12104841321706772
    2. '+=' → logprob: -2.2460484504699707
    3. '*=' → logprob: -5.246048450469971
    4. ' =' → logprob: -6.371048450469971
    5. ' +=' → logprob: -6.746048450469971
    6. ' *=' → logprob: -11.246047973632812
    7. '   ' → logprob: -11.621047973632812
    8. ']+=' → logprob: -12.121047973632812
    9. '*' → logprob: -12.371047973632812
    10. ' <<=' → logprob: -13.371047973632812

Token 1011: ' dp' (ID: 21546)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.48418501019477844
    2. 'dp' → logprob: -0.984184980392456
    3. '(' → logprob: -4.734185218811035
    4. '2' → logprob: -7.484185218811035
    5. 'new' → logprob: -7.734185218811035
    6. '(new' → logprob: -9.484185218811035
    7. ' dp' → logprob: -9.484185218811035
    8. '(d' → logprob: -10.359185218811035
    9. ' (' → logprob: -10.734185218811035
    10. '	dp' → logprob: -11.859185218811035

Token 1012: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.607391408877447e-05
    2. '[' → logprob: -10.375036239624023
    3. 'i' → logprob: -13.125036239624023
    4. '[k' → logprob: -13.250036239624023
    5. '```' → logprob: -15.000036239624023
    6. ' [' → logprob: -15.375036239624023
    7. '[j' → logprob: -15.875036239624023
    8. '[
' → logprob: -16.750036239624023
    9. '[new' → logprob: -16.750036239624023
    10. '(i' → logprob: -17.125036239624023

Token 1013: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0016380504239350557
    2. '[i' → logprob: -6.876637935638428
    3. '])' → logprob: -8.126638412475586
    4. ']*' → logprob: -8.501638412475586
    5. '][' → logprob: -9.626638412475586
    6. 'i' → logprob: -11.251638412475586
    7. '[' → logprob: -12.626638412475586
    8. '[k' → logprob: -12.751638412475586
    9. ']<<' → logprob: -12.751638412475586
    10. '(i' → logprob: -12.876638412475586

Token 1014: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.15882712602615356
    2. ' *' → logprob: -2.033827066421509
    3. '+' → logprob: -5.033827304840088
    4. '<|end|>' → logprob: -5.908827304840088
    5. '
' → logprob: -6.283827304840088
    6. ')' → logprob: -6.533827304840088
    7. '   ' → logprob: -7.158827304840088
    8. ' if' → logprob: -7.408827304840088
    9. ' +' → logprob: -7.658827304840088
    10. '<<' → logprob: -8.40882682800293

Token 1015: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.526570384972729e-05
    2. '(' → logprob: -10.875055313110352
    3. ' ' → logprob: -10.875055313110352
    4. '3' → logprob: -12.125055313110352
    5. 'dp' → logprob: -12.625055313110352
    6. '4' → logprob: -13.125055313110352
    7. 'pow' → logprob: -13.625055313110352
    8. '
' → logprob: -13.875055313110352
    9. '   ' → logprob: -14.250055313110352
    10. '1' → logprob: -14.375055313110352

Token 1016: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00024263552040793002
    2. '(' → logprob: -8.750242233276367
    3. ' ' → logprob: -10.625242233276367
    4. '3' → logprob: -10.875242233276367
    5. 'dp' → logprob: -11.375242233276367
    6. 'pow' → logprob: -11.375242233276367
    7. '(H' → logprob: -12.125242233276367
    8. '4' → logprob: -12.875242233276367
    9. '1' → logprob: -13.500242233276367
    10. '((' → logprob: -14.000242233276367

Token 1017: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1018: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1019: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6462054252624512
    2. 'else' → logprob: -1.2712054252624512
    3. ' else' → logprob: -2.396205425262451
    4. '<|end|>' → logprob: -3.271205425262451
    5. '           ' → logprob: -3.521205425262451
    6. 'elif' → logprob: -4.271205425262451
    7. '   ' → logprob: -5.396205425262451
    8. '
' → logprob: -5.771205425262451
    9. 'continue' → logprob: -6.271205425262451
    10. '               ' → logprob: -6.271205425262451

Token 1020: ' If' (ID: 1843)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9770519137382507
    2. 'elif' → logprob: -1.3520519733428955
    3. 'else' → logprob: -2.1020519733428955
    4. '       ' → logprob: -2.3520519733428955
    5. ' else' → logprob: -2.7270519733428955
    6. ' elif' → logprob: -3.3520519733428955
    7. 'new' → logprob: -3.3520519733428955
    8. ' new' → logprob: -5.227051734924316
    9. 'return' → logprob: -6.727051734924316
    10. 'if' → logprob: -7.102051734924316

Token 1021: ' the' (ID: 290)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.12250836193561554
    2. ' H' → logprob: -2.2475082874298096
    3. 'i' → logprob: -5.247508525848389
    4. ' i' → logprob: -5.622508525848389
    5. 'k' → logprob: -7.872508525848389
    6. ' k' → logprob: -8.87250804901123
    7. '   ' → logprob: -10.12250804901123
    8. ' ' → logprob: -10.24750804901123
    9. ' not' → logprob: -10.24750804901123
    10. 'not' → logprob: -10.99750804901123

Token 1022: ' previous' (ID: 5880)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5321874022483826
    2. 'H' → logprob: -1.1571874618530273
    3. 'k' → logprob: -2.7821874618530273
    4. ' i' → logprob: -4.157187461853027
    5. ' H' → logprob: -5.157187461853027
    6. 'elif' → logprob: -5.407187461853027
    7. 'else' → logprob: -5.907187461853027
    8. ' k' → logprob: -5.907187461853027
    9. 'if' → logprob: -6.657187461853027
    10. '`' → logprob: -7.282187461853027

Token 1023: ' height' (ID: 4679)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3715686798095703
    2. '[i' → logprob: -2.6215686798095703
    3. 'if' → logprob: -2.9965686798095703
    4. 'dp' → logprob: -2.9965686798095703
    5. '_dp' → logprob: -3.1215686798095703
    6. '`' → logprob: -3.6215686798095703
    7. ' if' → logprob: -4.49656867980957
    8. '_' → logprob: -4.49656867980957
    9. '_i' → logprob: -4.74656867980957
    10. ' i' → logprob: -4.74656867980957

Token 1024: ' is' (ID: 382)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.07383040338754654
    2. '==' → logprob: -3.3238303661346436
    3. 'i' → logprob: -4.448830604553223
    4. 'if' → logprob: -5.073830604553223
    5. ' ==' → logprob: -5.198830604553223
    6. '```' → logprob: -6.073830604553223
    7. '[' → logprob: -6.448830604553223
    8. '   ' → logprob: -6.573830604553223
    9. '>' → logprob: -6.698830604553223
    10. '`' → logprob: -6.823830604553223

Token 1025: ' less' (ID: 3760)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5245388746261597
    2. 'i' → logprob: -1.1495388746261597
    3. 'H' → logprob: -3.149538993835449
    4. '>' → logprob: -4.149538993835449
    5. 'if' → logprob: -4.774538993835449
    6. '>=' → logprob: -5.024538993835449
    7. '==' → logprob: -5.149538993835449
    8. '<=' → logprob: -5.274538993835449
    9. '<' → logprob: -6.649538993835449
    10. '`' → logprob: -7.274538993835449

Token 1026: ' than' (ID: 1572)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4934473037719727
    2. 'if' → logprob: -1.4934473037719727
    3. ' than' → logprob: -1.6184473037719727
    4. 'than' → logprob: -2.2434473037719727
    5. 'er' → logprob: -2.6184473037719727
    6. '```' → logprob: -3.2434473037719727
    7. 'i' → logprob: -3.6184473037719727
    8. '[i' → logprob: -3.7434473037719727
    9. '_than' → logprob: -4.618447303771973
    10. 'and' → logprob: -4.743447303771973

Token 1027: ' or' (ID: 503)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.11193685233592987
    2. ' H' → logprob: -2.7369368076324463
    3. '=' → logprob: -3.8619368076324463
    4. 'i' → logprob: -4.236937046051025
    5. 'k' → logprob: -5.861937046051025
    6. '`' → logprob: -6.986937046051025
    7. ' i' → logprob: -7.236937046051025
    8. ' =' → logprob: -7.861937046051025
    9. ' k' → logprob: -8.986936569213867
    10. ' ' → logprob: -9.111936569213867

Token 1028: ' equal' (ID: 12629)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.8950942158699036
    2. '=' → logprob: -1.1450941562652588
    3. 'i' → logprob: -1.5200941562652588
    4. 'k' → logprob: -3.270094156265259
    5. ' H' → logprob: -5.395094394683838
    6. 'equal' → logprob: -5.520094394683838
    7. ' equal' → logprob: -6.020094394683838
    8. ' =' → logprob: -6.895094394683838
    9. ' i' → logprob: -7.145094394683838
    10. 'if' → logprob: -7.770094394683838

Token 1029: ' to' (ID: 316)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.6225988864898682
    2. 'H' → logprob: -1.8725988864898682
    3. ' H' → logprob: -2.497598886489868
    4. 'to' → logprob: -2.622598886489868
    5. ' to' → logprob: -2.997598886489868
    6. '=' → logprob: -3.122598886489868
    7. '   ' → logprob: -3.997598886489868
    8. '(' → logprob: -4.372598648071289
    9. ' ' → logprob: -4.997598648071289
    10. ' (' → logprob: -5.247598648071289

Token 1030: ' the' (ID: 290)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0025892157573252916
    2. ' H' → logprob: -6.002589225769043
    3. 'k' → logprob: -10.252589225769043
    4. '`' → logprob: -10.252589225769043
    5. '=' → logprob: -11.252589225769043
    6. 'i' → logprob: -11.627589225769043
    7. '   ' → logprob: -11.877589225769043
    8. ' =' → logprob: -12.627589225769043
    9. '```' → logprob: -12.752589225769043
    10. ' ' → logprob: -13.877589225769043

Token 1031: ' current' (ID: 2208)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.10403265804052353
    2. 'k' → logprob: -2.8540327548980713
    3. 'i' → logprob: -3.9790327548980713
    4. ' H' → logprob: -4.604032516479492
    5. '`' → logprob: -4.729032516479492
    6. ' k' → logprob: -6.604032516479492
    7. ' i' → logprob: -7.854032516479492
    8. '[i' → logprob: -8.229032516479492
    9. 'if' → logprob: -8.354032516479492
    10. '```' → logprob: -8.354032516479492

Token 1032: ' one' (ID: 1001)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4841890037059784
    2. 'and' → logprob: -1.7341890335083008
    3. 'k' → logprob: -1.9841890335083008
    4. 'i' → logprob: -3.984189033508301
    5. '`' → logprob: -4.109189033508301
    6. 'H' → logprob: -5.234189033508301
    7. '_k' → logprob: -5.609189033508301
    8. '[k' → logprob: -5.984189033508301
    9. '   ' → logprob: -6.234189033508301
    10. '```' → logprob: -6.234189033508301

Token 1033: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08839467167854309
    2. 'and' → logprob: -3.0883946418762207
    3. '       ' → logprob: -3.3383946418762207
    4. '   ' → logprob: -6.463394641876221
    5. '           ' → logprob: -7.713394641876221
    6. ':
' → logprob: -7.713394641876221
    7. ':' → logprob: -7.963394641876221
    8. ',' → logprob: -8.588395118713379
    9. ' or' → logprob: -8.588395118713379
    10. ' ' → logprob: -9.713395118713379

Token 1034: ' update' (ID: 4027)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3253023326396942
    2. '       ' → logprob: -1.5753023624420166
    3. 'if' → logprob: -3.3253023624420166
    4. '	' → logprob: -4.2003021240234375
    5. '           ' → logprob: -4.7003021240234375
    6. ' ' → logprob: -6.0753021240234375
    7. '	if' → logprob: -6.3253021240234375
    8. ' and' → logprob: -6.8253021240234375
    9. '   ' → logprob: -7.2003021240234375
    10. '		' → logprob: -7.2003021240234375

Token 1035: ' accordingly' (ID: 44041)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16179929673671722
    2. 'if' → logprob: -2.411799192428589
    3. '       ' → logprob: -3.161799192428589
    4. '   ' → logprob: -5.161799430847168
    5. ' and' → logprob: -5.786799430847168
    6. 'elif' → logprob: -6.536799430847168
    7. '           ' → logprob: -6.911799430847168
    8. 'and' → logprob: -7.036799430847168
    9. ' elif' → logprob: -7.161799430847168
    10. ' new' → logprob: -7.411799430847168

Token 1036: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016104523092508316
    2. '   ' → logprob: -4.516104698181152
    3. ' if' → logprob: -6.391104698181152
    4. '           ' → logprob: -7.016104698181152
    5. 'elif' → logprob: -7.016104698181152
    6. ' elif' → logprob: -7.516104698181152
    7. ' and' → logprob: -7.891104698181152
    8. '	' → logprob: -8.766104698181152
    9. 'if' → logprob: -9.391104698181152
    10. ' ' → logprob: -9.516104698181152

Token 1037: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006764513906091452
    2. ' and' → logprob: -6.2567644119262695
    3. '           ' → logprob: -7.0067644119262695
    4. '   ' → logprob: -7.0067644119262695
    5. '<|end|>' → logprob: -7.2567644119262695
    6. ' if' → logprob: -7.3817644119262695
    7. ' elif' → logprob: -7.5067644119262695
    8. 'and' → logprob: -8.63176441192627
    9. ' ' → logprob: -8.88176441192627
    10. ' ' → logprob: -9.13176441192627

Token 1038: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5477119088172913
    2. 'elif' (adapté à ' elif') → logprob: -1.1727118492126465
    3. ' if' → logprob: -3.1727118492126465
    4. 'if' → logprob: -3.4227118492126465
    5. ' elif' → logprob: -3.5477118492126465
    6. '   ' → logprob: -5.6727118492126465
    7. '	' → logprob: -5.9227118492126465
    8. '           ' → logprob: -7.5477118492126465
    9. '	elif' → logprob: -7.5477118492126465
    10. 'else' → logprob: -8.047712326049805

Token 1039: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.24536044895648956
    2. ' H' → logprob: -1.6203604936599731
    3. 'i' → logprob: -4.620360374450684
    4. ' i' → logprob: -4.870360374450684
    5. 'k' → logprob: -6.745360374450684
    6. ' k' → logprob: -7.870360374450684
    7. '   ' → logprob: -8.120360374450684
    8. 'dp' → logprob: -8.995360374450684
    9. ' ' → logprob: -9.120360374450684
    10. ' dp' → logprob: -9.995360374450684

Token 1040: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.05502954125404358
    2. '[k' → logprob: -2.9300296306610107
    3. '[' → logprob: -9.18002986907959
    4. 'i' → logprob: -11.18002986907959
    5. '[j' → logprob: -11.55502986907959
    6. ' [' → logprob: -11.55502986907959
    7. 'k' → logprob: -12.55502986907959
    8. '   ' → logprob: -13.05502986907959
    9. '```' → logprob: -13.18002986907959
    10. '[
' → logprob: -14.93002986907959

Token 1041: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11638646572828293
    2. '[i' → logprob: -2.7413864135742188
    3. ']>=' → logprob: -3.6163864135742188
    4. '>=' → logprob: -5.616386413574219
    5. ']==' → logprob: -5.866386413574219
    6. '[k' → logprob: -6.116386413574219
    7. '   ' → logprob: -6.241386413574219
    8. ' >=' → logprob: -6.241386413574219
    9. ']<=' → logprob: -6.741386413574219
    10. ']>' → logprob: -6.991386413574219

Token 1042: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002904966240748763
    2. 'k' → logprob: -6.252904891967773
    3. ' ' → logprob: -7.127904891967773
    4. ' k' → logprob: -9.627904891967773
    5. ']' → logprob: -9.752904891967773
    6. 'i' → logprob: -10.877904891967773
    7. '+' → logprob: -11.752904891967773
    8. '```' → logprob: -12.377904891967773
    9. ')' → logprob: -12.940404891967773
    10. ']+' → logprob: -13.627904891967773

Token 1043: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.082895273109898e-05
    2. ' ' → logprob: -11.000030517578125
    3. 'k' → logprob: -11.875030517578125
    4. ']' → logprob: -12.625030517578125
    5. 'i' → logprob: -13.500030517578125
    6. '0' → logprob: -14.125030517578125
    7. '   ' → logprob: -15.125030517578125
    8. '`' → logprob: -15.312530517578125
    9. '```' → logprob: -15.437530517578125
    10. '+' → logprob: -15.625030517578125

Token 1044: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01868092268705368
    2. ']<=' → logprob: -4.518681049346924
    3. ']<' → logprob: -6.143681049346924
    4. '[i' → logprob: -6.768681049346924
    5. ']==' → logprob: -6.893681049346924
    6. ' <=' → logprob: -7.268681049346924
    7. '<=' → logprob: -8.018680572509766
    8. '][' → logprob: -8.143680572509766
    9. ']>=' → logprob: -8.143680572509766
    10. ']>' → logprob: -8.268680572509766

Token 1045: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.24359099566936493
    2. '<=' → logprob: -1.6185909509658813
    3. ' ==' → logprob: -5.368590831756592
    4. '[i' → logprob: -5.868590831756592
    5. ' <' → logprob: -5.993590831756592
    6. '==' → logprob: -5.993590831756592
    7. '[' → logprob: -6.243590831756592
    8. ']' → logprob: -6.868590831756592
    9. ']<=' → logprob: -7.618590831756592
    10. ' >=' → logprob: -7.743590831756592

Token 1046: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.009828930720686913
    2. ' H' → logprob: -4.634829044342041
    3. 'k' → logprob: -10.259828567504883
    4. 'i' → logprob: -10.634828567504883
    5. '   ' → logprob: -12.384828567504883
    6. 'h' → logprob: -13.384828567504883
    7. ' ' → logprob: -13.384828567504883
    8. '0' → logprob: -14.447328567504883
    9. ' k' → logprob: -14.572328567504883
    10. '_H' → logprob: -14.697328567504883

Token 1047: '[i' (ID: 1768)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.08969048410654068
    2. 'i' → logprob: -2.4646904468536377
    3. '[k' → logprob: -8.089690208435059
    4. 'H' → logprob: -8.339690208435059
    5. '[i' → logprob: -9.089690208435059
    6. ' k' → logprob: -9.714690208435059
    7. ' i' → logprob: -10.714690208435059
    8. '[' → logprob: -13.464690208435059
    9. '   ' → logprob: -13.464690208435059
    10. ']' → logprob: -13.589690208435059

Token 1048: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.05198442563414574
    2. ']' → logprob: -3.6769843101501465
    3. ']:' → logprob: -3.8019843101501465
    4. ':
' → logprob: -7.0519843101501465
    5. ':' → logprob: -7.8019843101501465
    6. '       ' → logprob: -7.9269843101501465
    7. ' and' → logprob: -7.9269843101501465
    8. ']:
' → logprob: -8.051984786987305
    9. '):
' → logprob: -8.426984786987305
    10. ']==' → logprob: -9.301984786987305

Token 1049: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8051211833953857
    2. '           ' → logprob: -0.8051211833953857
    3. '       ' → logprob: -3.1801211833953857
    4. ':
' → logprob: -3.3051211833953857
    5. ' new' → logprob: -5.055121421813965
    6. ' and' → logprob: -5.180121421813965
    7. '               ' → logprob: -5.305121421813965
    8. ',' → logprob: -6.430121421813965
    9. 'new' → logprob: -6.430121421813965
    10. '```' → logprob: -6.930121421813965

Token 1050: ' #' (ID: 1069)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.06227653846144676
    2. 'new' → logprob: -2.812276601791382
    3. ' ' → logprob: -9.437276840209961
    4. '               ' → logprob: -9.562276840209961
    5. '[new' → logprob: -10.062276840209961
    6. '	new' → logprob: -10.562276840209961
    7. '           ' → logprob: -10.687276840209961
    8. '```' → logprob: -10.687276840209961
    9. '        ' → logprob: -11.187276840209961
    10. '            ' → logprob: -12.062276840209961

Token 1051: ' Use' (ID: 7649)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.07072178274393082
    2. ' new' → logprob: -2.6957218647003174
    3. '           ' → logprob: -8.070721626281738
    4. 'if' → logprob: -9.070721626281738
    5. '               ' → logprob: -9.195721626281738
    6. '```' → logprob: -9.570721626281738
    7. '	new' → logprob: -10.070721626281738
    8. '       ' → logprob: -10.445721626281738
    9. ' if' → logprob: -10.945721626281738
    10. '   ' → logprob: -11.070721626281738

Token 1052: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07406820356845856
    2. ' dp' → logprob: -3.199068307876587
    3. 'new' → logprob: -3.824068307876587
    4. ' new' → logprob: -5.449068069458008
    5. 'max' → logprob: -5.699068069458008
    6. ' max' → logprob: -8.074068069458008
    7. '   ' → logprob: -8.199068069458008
    8. '(dp' → logprob: -9.199068069458008
    9. 'prev' → logprob: -10.199068069458008
    10. ' +=' → logprob: -10.574068069458008

Token 1053: '[i' (ID: 1768)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.48532527685165405
    2. '[i' → logprob: -0.985325276851654
    3. 'k' → logprob: -5.110325336456299
    4. '[' → logprob: -5.860325336456299
    5. 'i' → logprob: -6.360325336456299
    6. 'new' → logprob: -9.11032485961914
    7. '```' → logprob: -9.11032485961914
    8. '[j' → logprob: -9.23532485961914
    9. '[new' → logprob: -9.48532485961914
    10. ' [' → logprob: -10.11032485961914

Token 1054: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5346652269363403
    2. '[k' → logprob: -0.9096652269363403
    3. '-' → logprob: -5.534665107727051
    4. ']+' → logprob: -6.284665107727051
    5. '+' → logprob: -6.909665107727051
    6. ' +' → logprob: -7.159665107727051
    7. '])' → logprob: -7.534665107727051
    8. '[j' → logprob: -7.659665107727051
    9. '[' → logprob: -7.784665107727051
    10. '   ' → logprob: -8.03466510772705

Token 1055: ' multiply' (ID: 57388)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.23853619396686554
    2. 'new' → logprob: -1.6135362386703491
    3. ' +=' → logprob: -4.863536357879639
    4. '+=' → logprob: -6.238536357879639
    5. '+' → logprob: -6.863536357879639
    6. '```' → logprob: -6.988536357879639
    7. '=' → logprob: -7.863536357879639
    8. ' +' → logprob: -8.36353588104248
    9. 'dp' → logprob: -8.98853588104248
    10. ' =' → logprob: -8.98853588104248

Token 1056: ' by' (ID: 656)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.24287642538547516
    2. ' dp' → logprob: -2.3678765296936035
    3. '(dp' → logprob: -2.9928765296936035
    4. 'new' → logprob: -3.8678765296936035
    5. ' by' → logprob: -4.1178765296936035
    6. 'by' → logprob: -4.2428765296936035
    7. '=' → logprob: -4.7428765296936035
    8. ' new' → logprob: -5.3678765296936035
    9. '2' → logprob: -6.3678765296936035
    10. ' =' → logprob: -6.8678765296936035

Token 1057: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001123072113841772
    2. 'dp' → logprob: -7.626122951507568
    3. ' ' → logprob: -8.251123428344727
    4. '   ' → logprob: -8.751123428344727
    5. 'new' → logprob: -9.626123428344727
    6. '1' → logprob: -9.751123428344727
    7. 'k' → logprob: -10.626123428344727
    8. '3' → logprob: -11.626123428344727
    9. 'H' → logprob: -11.751123428344727
    10. ' dp' → logprob: -12.126123428344727

Token 1058: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009825863875448704
    2. 'dp' → logprob: -5.259825706481934
    3. 'k' → logprob: -6.509825706481934
    4. 'H' → logprob: -7.134825706481934
    5. '3' → logprob: -7.509825706481934
    6. ' ' → logprob: -7.634825706481934
    7. '1' → logprob: -8.134825706481934
    8. '(H' → logprob: -8.634825706481934
    9. '(' → logprob: -9.009825706481934
    10. '   ' → logprob: -9.259825706481934

Token 1059: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.722546398639679
    2. ',' → logprob: -1.4725463390350342
    3. '*' → logprob: -2.347546339035034
    4. ' *' → logprob: -2.472546339035034
    5. ' and' → logprob: -2.597546339035034
    6. ')' → logprob: -5.222546577453613
    7. '               ' → logprob: -5.597546577453613
    8. 'new' → logprob: -5.597546577453613
    9. ' new' → logprob: -5.972546577453613
    10. ']' → logprob: -5.972546577453613

Token 1060: ' adjust' (ID: 10266)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -1.4201782941818237
    2. '+=' → logprob: -1.4201782941818237
    3. '+' → logprob: -1.7951782941818237
    4. ' new' → logprob: -2.0451784133911133
    5. ' +' → logprob: -2.5451784133911133
    6. 'new' → logprob: -2.6701784133911133
    7. '=' → logprob: -3.5451784133911133
    8. '`' → logprob: -4.420178413391113
    9. 'dp' → logprob: -4.920178413391113
    10. ' =' → logprob: -4.920178413391113

Token 1061: ' by' (ID: 656)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.3720998764038086
    2. ' +=' → logprob: -1.7470998764038086
    3. ' new' → logprob: -2.1220998764038086
    4. ' dp' → logprob: -2.2470998764038086
    5. '+=' → logprob: -2.4970998764038086
    6. 'new' → logprob: -2.6220998764038086
    7. '=' → logprob: -2.7470998764038086
    8. '`' → logprob: -3.3720998764038086
    9. '-' → logprob: -4.122099876403809
    10. ' -' → logprob: -4.372099876403809

Token 1062: ' power' (ID: 3470)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7689683437347412
    2. ' -' → logprob: -1.6439683437347412
    3. 'dp' → logprob: -1.7689683437347412
    4. '-d' → logprob: -3.143968343734741
    5. ' dp' → logprob: -3.143968343734741
    6. '-k' → logprob: -4.51896858215332
    7. '(-' → logprob: -4.64396858215332
    8. 'k' → logprob: -4.76896858215332
    9. ' (' → logprob: -4.76896858215332
    10. '+' → logprob: -4.76896858215332

Token 1063: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.692896842956543
    2. 'of' → logprob: -1.192896842956543
    3. '2' → logprob: -2.317896842956543
    4. ' of' → logprob: -3.692896842956543
    5. '[' → logprob: -3.942896842956543
    6. '**' → logprob: -4.692896842956543
    7. '=' → logprob: -4.942896842956543
    8. '_of' → logprob: -5.317896842956543
    9. 'pow' → logprob: -5.567896842956543
    10. '   ' → logprob: -5.692896842956543

Token 1064: ' two' (ID: 1920)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003133513033390045
    2. ' ' → logprob: -6.003133296966553
    3. '`' → logprob: -8.503133773803711
    4. ' two' → logprob: -9.003133773803711
    5. 'two' → logprob: -9.253133773803711
    6. '```' → logprob: -9.378133773803711
    7. '10' → logprob: -10.003133773803711
    8. '(' → logprob: -10.003133773803711
    9. '``' → logprob: -10.253133773803711
    10. '   ' → logprob: -11.503133773803711

Token 1065: ' depending' (ID: 14537)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.6350854635238647
    2. '**' → logprob: -1.7600854635238647
    3. '[' → logprob: -2.0100855827331543
    4. ' **' → logprob: -2.1350855827331543
    5. ' *' → logprob: -2.3850855827331543
    6. ' ' → logprob: -2.7600855827331543
    7. ' (' → logprob: -3.2600855827331543
    8. '(' → logprob: -3.2600855827331543
    9. '[i' → logprob: -3.7600855827331543
    10. ',' → logprob: -4.135085582733154

Token 1066: ' on' (ID: 402)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.550147294998169
    2. '(k' → logprob: -1.800147294998169
    3. ' k' → logprob: -2.425147294998169
    4. ' (' → logprob: -2.675147294998169
    5. 'H' → logprob: -3.800147294998169
    6. '(' → logprob: -4.05014705657959
    7. 'i' → logprob: -4.55014705657959
    8. '`' → logprob: -4.55014705657959
    9. '(i' → logprob: -4.92514705657959
    10. ' H' → logprob: -5.05014705657959

Token 1067: ' height' (ID: 4679)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3406442403793335
    2. '(k' → logprob: -1.8406442403793335
    3. ' (' → logprob: -2.840644359588623
    4. ' k' → logprob: -3.715644359588623
    5. 'abs' → logprob: -3.965644359588623
    6. '(n' → logprob: -4.215644359588623
    7. 'i' → logprob: -5.965644359588623
    8. 'n' → logprob: -6.090644359588623
    9. '(abs' → logprob: -6.090644359588623
    10. '(i' → logprob: -6.340644359588623

Token 1068: ' difference' (ID: 9809)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.7530193328857422
    2. '[i' → logprob: -2.003019332885742
    3. '**' → logprob: -2.128019332885742
    4. '(k' → logprob: -2.503019332885742
    5. '[' → logprob: -2.628019332885742
    6. ' ' → logprob: -4.503019332885742
    7. '(' → logprob: -4.628019332885742
    8. ')' → logprob: -4.753019332885742
    9. '
' → logprob: -4.878019332885742
    10. '   ' → logprob: -4.878019332885742

Token 1069: '
' (ID: 198)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -1.4336624145507812
    2. '   ' → logprob: -1.6836624145507812
    3. '**' → logprob: -2.0586624145507812
    4. 'new' → logprob: -2.3086624145507812
    5. '*' → logprob: -2.5586624145507812
    6. '=' → logprob: -2.9336624145507812
    7. ' =' → logprob: -3.3086624145507812
    8. ':' → logprob: -3.6836624145507812
    9. '           ' → logprob: -3.8086624145507812
    10. ']' → logprob: -4.308662414550781

Token 1070: '           ' (ID: 352)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.31861838698387146
    2. 'new' → logprob: -2.1936182975769043
    3. '           ' → logprob: -3.0686182975769043
    4. ' =' → logprob: -3.1936182975769043
    5. '=' → logprob: -3.9436182975769043
    6. '[' → logprob: -4.068618297576904
    7. '   ' → logprob: -4.818618297576904
    8. '[new' → logprob: -5.193618297576904
    9. '               ' → logprob: -5.318618297576904
    10. '       ' → logprob: -6.068618297576904

Token 1071: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.5239306092262268
    2. ' new' → logprob: -0.8989306092262268
    3. '   ' → logprob: -8.023930549621582
    4. '           ' → logprob: -8.398930549621582
    5. '               ' → logprob: -9.023930549621582
    6. '                   ' → logprob: -10.273930549621582
    7. 'dp' → logprob: -11.023930549621582
    8. '```' → logprob: -11.398930549621582
    9. '       ' → logprob: -11.523930549621582
    10. 'pow' → logprob: -11.773930549621582

Token 1072: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -5.5577775128767826e-06
    2. '_' → logprob: -13.500005722045898
    3. 'dp' → logprob: -13.625005722045898
    4. '_DP' → logprob: -14.375005722045898
    5. '   ' → logprob: -15.500005722045898
    6. '_pow' → logprob: -15.625005722045898
    7. '	dp' → logprob: -15.875005722045898
    8. '```' → logprob: -15.875005722045898
    9. '_token' → logprob: -16.0000057220459
    10. '_dt' → logprob: -16.1250057220459

Token 1073: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.32523515378125e-05
    2. '[' → logprob: -10.000062942504883
    3. '```' → logprob: -12.125062942504883
    4. ' [' → logprob: -12.375062942504883
    5. '=' → logprob: -13.000062942504883
    6. '[k' → logprob: -13.625062942504883
    7. '=[' → logprob: -13.875062942504883
    8. '   ' → logprob: -14.125062942504883
    9. '=i' → logprob: -14.375062942504883
    10. '[j' → logprob: -14.375062942504883

Token 1074: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6029432415962219
    2. ' =' → logprob: -0.8529432415962219
    3. ' +=' → logprob: -3.977943181991577
    4. '+=' → logprob: -5.852943420410156
    5. '[i' → logprob: -6.102943420410156
    6. ']' → logprob: -6.852943420410156
    7. '   ' → logprob: -7.727943420410156
    8. '[' → logprob: -8.727943420410156
    9. '[k' → logprob: -8.727943420410156
    10. '*=' → logprob: -8.727943420410156

Token 1075: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08596353977918625
    2. ' =' → logprob: -2.960963487625122
    3. '+=' → logprob: -4.085963726043701
    4. '*=' → logprob: -5.085963726043701
    5. ' +=' → logprob: -5.210963726043701
    6. '[' → logprob: -6.835963726043701
    7. ' *=' → logprob: -8.210963249206543
    8. '[i' → logprob: -8.210963249206543
    9. '   ' → logprob: -8.835963249206543
    10. '=[' → logprob: -9.335963249206543

Token 1076: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0033584432676434517
    2. '(dp' → logprob: -6.253358364105225
    3. ' dp' → logprob: -6.628358364105225
    4. '   ' → logprob: -9.503358840942383
    5. 'new' → logprob: -11.503358840942383
    6. '(' → logprob: -12.253358840942383
    7. ' (' → logprob: -12.378358840942383
    8. '	dp' → logprob: -12.503358840942383
    9. '2' → logprob: -12.878358840942383
    10. 'pow' → logprob: -13.128358840942383

Token 1077: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.05015785992145538
    2. '[k' → logprob: -3.0501577854156494
    3. '[' → logprob: -6.5501580238342285
    4. 'i' → logprob: -9.55015754699707
    5. 'k' → logprob: -10.92515754699707
    6. '[j' → logprob: -11.92515754699707
    7. '*' → logprob: -11.92515754699707
    8. '`' → logprob: -12.17515754699707
    9. '```' → logprob: -12.30015754699707
    10. '[*' → logprob: -12.55015754699707

Token 1078: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.08039233088493347
    2. '*' → logprob: -2.580392360687256
    3. ')' → logprob: -7.080392360687256
    4. ']' → logprob: -8.080391883850098
    5. ' +' → logprob: -9.705391883850098
    6. ' ' → logprob: -9.705391883850098
    7. '   ' → logprob: -9.955391883850098
    8. '+' → logprob: -10.830391883850098
    9. '       ' → logprob: -11.080391883850098
    10. ' ' → logprob: -11.080391883850098

Token 1079: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7017189264297485
    2. ' *' → logprob: -0.7017189264297485
    3. '**' → logprob: -5.826718807220459
    4. '<|end|>' → logprob: -5.826718807220459
    5. '*(' → logprob: -7.076718807220459
    6. '[' → logprob: -7.826718807220459
    7. ')' → logprob: -8.076719284057617
    8. '       ' → logprob: -8.201719284057617
    9. '<|end|>' → logprob: -8.951719284057617
    10. ' **' → logprob: -9.076719284057617

Token 1080: ' ' (ID: 220)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.770175039768219
    2. '(' → logprob: -1.0201749801635742
    3. '2' → logprob: -2.145174980163574
    4. '(pow' → logprob: -2.895174980163574
    5. '(H' → logprob: -6.270174980163574
    6. '((' → logprob: -6.770174980163574
    7. '(math' → logprob: -8.020174980163574
    8. ' (' → logprob: -8.645174980163574
    9. '(int' → logprob: -8.770174980163574
    10. '(max' → logprob: -9.020174980163574

Token 1081: '2' (ID: 17)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.6143074035644531
    2. '(' → logprob: -1.1143074035644531
    3. '(pow' → logprob: -2.489307403564453
    4. '2' → logprob: -3.114307403564453
    5. '(H' → logprob: -6.364307403564453
    6. '((' → logprob: -7.364307403564453
    7. '(int' → logprob: -8.114307403564453
    8. '(max' → logprob: -8.364307403564453
    9. '(math' → logprob: -8.489307403564453
    10. '(f' → logprob: -9.114307403564453

Token 1082: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.08191336691379547
    2. '*' → logprob: -2.706913471221924
    3. '   ' → logprob: -5.581913471221924
    4. '**' → logprob: -5.956913471221924
    5. ' -' → logprob: -7.081913471221924
    6. '
' → logprob: -7.206913471221924
    7. ' if' → logprob: -7.331913471221924
    8. '       ' → logprob: -7.581913471221924
    9. ' **' → logprob: -7.831913471221924
    10. '*(' → logprob: -7.831913471221924

Token 1083: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.011557734571397305
    2. '(pow' → logprob: -4.886557579040527
    3. '(' → logprob: -6.511557579040527
    4. '(H' → logprob: -6.761557579040527
    5. '2' → logprob: -7.136557579040527
    6. 'H' → logprob: -9.011557579040527
    7. 'math' → logprob: -9.136557579040527
    8. 'max' → logprob: -9.636557579040527
    9. '(max' → logprob: -9.886557579040527
    10. '((' → logprob: -10.511557579040527

Token 1084: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017142124706879258
    2. '2' → logprob: -6.37671422958374
    3. '(
' → logprob: -12.001713752746582
    4. ' (' → logprob: -12.751713752746582
    5. '```' → logprob: -13.501713752746582
    6. '(H' → logprob: -14.126713752746582
    7. '(pow' → logprob: -15.376713752746582
    8. '`' → logprob: -16.2517147064209
    9. 'two' → logprob: -16.3767147064209
    10. ')' → logprob: -16.6267147064209

Token 1085: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005363960284739733
    2. '(' → logprob: -5.255363941192627
    3. 'mod' → logprob: -10.005364418029785
    4. '   ' → logprob: -10.630364418029785
    5. '10' → logprob: -11.255364418029785
    6. '```' → logprob: -11.630364418029785
    7. ' ' → logprob: -12.005364418029785
    8. '`' → logprob: -12.505364418029785
    9. '
' → logprob: -12.755364418029785
    10. ')' → logprob: -12.755364418029785

Token 1086: ',' (ID: 11)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.8119992613792419
    2. ',' → logprob: -0.9369992613792419
    3. ',H' → logprob: -2.0619993209838867
    4. '[' → logprob: -4.811999320983887
    5. '(abs' → logprob: -5.186999320983887
    6. ',k' → logprob: -5.311999320983887
    7. '(k' → logprob: -5.561999320983887
    8. '(' → logprob: -5.686999320983887
    9. ')' → logprob: -6.186999320983887
    10. 'abs' → logprob: -6.311999320983887

Token 1087: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.21572495996952057
    2. '(H' → logprob: -1.7157249450683594
    3. 'abs' → logprob: -5.340724945068359
    4. 'k' → logprob: -6.090724945068359
    5. 'max' → logprob: -6.340724945068359
    6. '(abs' → logprob: -6.590724945068359
    7. ' H' → logprob: -7.215724945068359
    8. 'min' → logprob: -7.215724945068359
    9. '(' → logprob: -7.465724945068359
    10. '(max' → logprob: -7.465724945068359

Token 1088: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5279271602630615
    2. '[k' → logprob: -0.9029271602630615
    3. '[' → logprob: -5.777927398681641
    4. 'i' → logprob: -7.777927398681641
    5. ' [' → logprob: -7.902927398681641
    6. ')' → logprob: -8.02792739868164
    7. 'k' → logprob: -8.15292739868164
    8. 'H' → logprob: -9.65292739868164
    9. ']' → logprob: -9.77792739868164
    10. '[
' → logprob: -10.27792739868164

Token 1089: ']' (ID: 60)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.1755773276090622
    2. '[i' → logprob: -2.050577402114868
    3. 'k' → logprob: -3.675577402114868
    4. 'i' → logprob: -6.050577163696289
    5. ']' → logprob: -6.050577163696289
    6. '[' → logprob: -6.425577163696289
    7. ')' → logprob: -8.300577163696289
    8. '[
' → logprob: -9.550577163696289
    9. '[j' → logprob: -10.300577163696289
    10. '[-' → logprob: -10.300577163696289

Token 1090: ' -' (ID: 533)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7794799208641052
    2. '[k' → logprob: -0.7794799208641052
    3. '-' → logprob: -2.90447998046875
    4. '[' → logprob: -4.15447998046875
    5. ' -' → logprob: -5.15447998046875
    6. '[-' → logprob: -6.27947998046875
    7. ')' → logprob: -6.77947998046875
    8. '-k' → logprob: -7.27947998046875
    9. '[
' → logprob: -7.27947998046875
    10. '   ' → logprob: -7.27947998046875

Token 1091: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0005406428826972842
    2. ' H' → logprob: -7.625540733337402
    3. 'i' → logprob: -10.500540733337402
    4. '1' → logprob: -11.250540733337402
    5. '   ' → logprob: -11.875540733337402
    6. 'k' → logprob: -13.250540733337402
    7. ' ' → logprob: -14.625540733337402
    8. '2' → logprob: -15.125540733337402
    9. '           ' → logprob: -15.125540733337402
    10. '	H' → logprob: -15.375540733337402

Token 1092: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.49023300409317017
    2. 'i' → logprob: -1.3652329444885254
    3. 'k' → logprob: -2.6152329444885254
    4. '[k' → logprob: -2.8652329444885254
    5. '```' → logprob: -6.490232944488525
    6. '[
' → logprob: -8.615233421325684
    7. '[' → logprob: -8.990233421325684
    8. ' i' → logprob: -9.990233421325684
    9. '`' → logprob: -10.615233421325684
    10. ' k' → logprob: -10.740233421325684

Token 1093: '],' (ID: 2155)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04791398346424103
    2. '-' → logprob: -3.7979140281677246
    3. ',' → logprob: -4.297914028167725
    4. '])' → logprob: -5.672914028167725
    5. '+' → logprob: -5.797914028167725
    6. ')])' → logprob: -6.672914028167725
    7. ' -' → logprob: -7.422914028167725
    8. '),' → logprob: -7.922914028167725
    9. '))' → logprob: -8.047913551330566
    10. '[' → logprob: -8.172913551330566

Token 1094: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00014060820103622973
    2. ' mod' → logprob: -8.875140190124512
    3. '10' → logprob: -15.625140190124512
    4. '	mod' → logprob: -16.250141143798828
    5. '   ' → logprob: -16.500141143798828
    6. '
' → logprob: -16.625141143798828
    7. ' ' → logprob: -16.625141143798828
    8. ' ' → logprob: -17.125141143798828
    9. '100' → logprob: -17.125141143798828
    10. '(mod' → logprob: -17.375141143798828

Token 1095: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017541198758408427
    2. ')
' → logprob: -9.375175476074219
    3. ' )' → logprob: -9.875175476074219
    4. ',' → logprob: -10.625175476074219
    5. '   ' → logprob: -12.750175476074219
    6. ')%' → logprob: -13.125175476074219
    7. '[' → logprob: -13.750175476074219
    8. '),' → logprob: -13.875175476074219
    9. '<|end|>' → logprob: -14.125175476074219
    10. ')[' → logprob: -14.250175476074219

Token 1096: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1097: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1098: ' If' (ID: 1843)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7146372199058533
    2. 'else' → logprob: -1.214637279510498
    3. '<|end|>' → logprob: -2.339637279510498
    4. ' else' → logprob: -2.839637279510498
    5. 'elif' → logprob: -3.714637279510498
    6. '   ' → logprob: -5.089637279510498
    7. '           ' → logprob: -5.089637279510498
    8. '#' → logprob: -5.714637279510498
    9. '```' → logprob: -5.839637279510498
    10. ']' → logprob: -6.214637279510498

Token 1099: ' previous' (ID: 5880)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.42823326587677
    2. 'k' → logprob: -1.67823326587677
    3. ' H' → logprob: -2.4282331466674805
    4. ' k' → logprob: -3.1782331466674805
    5. 'i' → logprob: -4.1782331466674805
    6. ' i' → logprob: -4.6782331466674805
    7. ' not' → logprob: -6.4282331466674805
    8. ' new' → logprob: -6.6782331466674805
    9. 'False' → logprob: -6.6782331466674805
    10. 'new' → logprob: -7.0532331466674805

Token 1100: ' height' (ID: 4679)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.06555690616369247
    2. '_' → logprob: -3.1905570030212402
    3. '[i' → logprob: -4.81555700302124
    4. '[' → logprob: -5.56555700302124
    5. '```' → logprob: -5.56555700302124
    6. '_k' → logprob: -5.94055700302124
    7. 'k' → logprob: -6.94055700302124
    8. ':' → logprob: -7.19055700302124
    9. ')' → logprob: -8.065556526184082
    10. '`' → logprob: -8.440556526184082

Token 1101: ' is' (ID: 382)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.04208318516612053
    2. '==' → logprob: -4.167083263397217
    3. ' ==' → logprob: -5.042083263397217
    4. '```' → logprob: -5.292083263397217
    5. '[i' → logprob: -5.417083263397217
    6. '[' → logprob: -5.417083263397217
    7. 'k' → logprob: -6.417083263397217
    8. '   ' → logprob: -7.542083263397217
    9. '_' → logprob: -7.667083263397217
    10. '<=' → logprob: -7.917083263397217

Token 1102: ' greater' (ID: 10740)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.32119879126548767
    2. ' k' → logprob: -2.1961987018585205
    3. 'H' → logprob: -2.3211987018585205
    4. ' H' → logprob: -2.9461987018585205
    5. 'i' → logprob: -5.9461989402771
    6. '<' → logprob: -6.1961989402771
    7. '<=' → logprob: -6.6961989402771
    8. ' not' → logprob: -7.0711989402771
    9. '[k' → logprob: -7.0711989402771
    10. ' ' → logprob: -7.1961989402771

Token 1103: ' than' (ID: 1572)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4407369792461395
    2. '==' → logprob: -1.815737009048462
    3. ' ==' → logprob: -3.315737009048462
    4. ':' → logprob: -3.565737009048462
    5. '[k' → logprob: -3.565737009048462
    6. '_' → logprob: -3.690737009048462
    7. ' than' → logprob: -4.065736770629883
    8. '   ' → logprob: -4.815736770629883
    9. '>' → logprob: -4.815736770629883
    10. ' =' → logprob: -4.940736770629883

Token 1104: ' current' (ID: 2208)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.18610724806785583
    2. 'k' → logprob: -2.3111071586608887
    3. ' H' → logprob: -3.1861071586608887
    4. 'i' → logprob: -4.061107158660889
    5. '=' → logprob: -5.186107158660889
    6. ' k' → logprob: -5.436107158660889
    7. ' i' → logprob: -7.561107158660889
    8. ']' → logprob: -7.936107158660889
    9. '`' → logprob: -9.061107635498047
    10. '0' → logprob: -9.061107635498047

Token 1105: ',' (ID: 11)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3654235899448395
    2. 'i' → logprob: -2.8654236793518066
    3. '[k' → logprob: -2.9904236793518066
    4. '[i' → logprob: -3.2404236793518066
    5. '```' → logprob: -3.6154236793518066
    6. ':' → logprob: -3.8654236793518066
    7. 'if' → logprob: -4.240423679351807
    8. ' k' → logprob: -4.240423679351807
    9. '_k' → logprob: -4.365423679351807
    10. ' and' → logprob: -4.490423679351807

Token 1106: ' add' (ID: 1147)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -1.0707464218139648
    2. ' new' → logprob: -1.4457464218139648
    3. 'new' → logprob: -2.070746421813965
    4. 'else' → logprob: -2.070746421813965
    5. '           ' → logprob: -3.195746421813965
    6. ' else' → logprob: -3.570746421813965
    7. ' elif' → logprob: -4.070746421813965
    8. 'if' → logprob: -4.320746421813965
    9. ' continue' → logprob: -4.695746421813965
    10. ' if' → logprob: -4.820746421813965

Token 1107: ' possible' (ID: 4149)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4307405352592468
    2. 'new' → logprob: -1.4307405948638916
    3. ' new' → logprob: -2.5557405948638916
    4. ' dp' → logprob: -3.4307405948638916
    5. '=' → logprob: -8.055740356445312
    6. '1' → logprob: -9.180740356445312
    7. '(dp' → logprob: -9.430740356445312
    8. '0' → logprob: -9.805740356445312
    9. '`' → logprob: -10.055740356445312
    10. '   ' → logprob: -10.055740356445312

Token 1108: ' ways' (ID: 6984)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.7127612829208374
    2. 'dp' → logprob: -0.9627612829208374
    3. ' new' → logprob: -2.337761402130127
    4. ' dp' → logprob: -4.087761402130127
    5. '(dp' → logprob: -5.462761402130127
    6. '=' → logprob: -6.337761402130127
    7. '+' → logprob: -6.587761402130127
    8. 'i' → logprob: -6.837761402130127
    9. '_dp' → logprob: -6.837761402130127
    10. '(' → logprob: -7.087761402130127

Token 1109: '
' (ID: 198)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7964131832122803
    2. '=' → logprob: -1.4214131832122803
    3. '+=' → logprob: -1.5464131832122803
    4. '[i' → logprob: -2.9214131832122803
    5. ' =' → logprob: -4.296413421630859
    6. '[' → logprob: -5.546413421630859
    7. ' if' → logprob: -5.671413421630859
    8. '   ' → logprob: -5.921413421630859
    9. 'new' → logprob: -5.921413421630859
    10. '[new' → logprob: -6.046413421630859

Token 1110: '       ' (ID: 309)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7001186609268188
    2. '=' → logprob: -1.5751186609268188
    3. '+=' → logprob: -2.0751185417175293
    4. ' =' → logprob: -2.7001185417175293
    5. '       ' → logprob: -3.2001185417175293
    6. '           ' → logprob: -3.5751185417175293
    7. '   ' → logprob: -4.950118541717529
    8. ':' → logprob: -4.950118541717529
    9. '[i' → logprob: -5.700118541717529
    10. 'elif' → logprob: -5.825118541717529

Token 1111: ' elif' (ID: 9497)
  Prédit: ' elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.9752955436706543
    2. 'elif' (adapté à ' elif') → logprob: -1.1002955436706543
    3. ' else' → logprob: -1.9752955436706543
    4. ' +=' → logprob: -2.8502955436706543
    5. 'else' → logprob: -2.8502955436706543
    6. '+=' → logprob: -4.600295543670654
    7. '=' → logprob: -5.225295543670654
    8. ' if' → logprob: -5.475295543670654
    9. ' new' → logprob: -5.600295543670654
    10. ' =' → logprob: -5.725295543670654

Token 1112: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.17796362936496735
    2. ' H' → logprob: -2.1779637336730957
    3. 'k' → logprob: -3.4279637336730957
    4. 'i' → logprob: -4.802963733673096
    5. ' k' → logprob: -5.802963733673096
    6. ' i' → logprob: -5.927963733673096
    7. 'dp' → logprob: -6.052963733673096
    8. ' dp' → logprob: -7.927963733673096
    9. 'new' → logprob: -8.427963256835938
    10. '   ' → logprob: -8.677963256835938

Token 1113: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0180576890707016
    2. '[i' → logprob: -4.268057823181152
    3. '[' → logprob: -5.768057823181152
    4. 'k' → logprob: -7.643057823181152
    5. '```' → logprob: -8.893057823181152
    6. 'i' → logprob: -10.643057823181152
    7. '[j' → logprob: -11.018057823181152
    8. '(k' → logprob: -11.143057823181152
    9. '`' → logprob: -11.268057823181152
    10. ']' → logprob: -11.518057823181152

Token 1114: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.39216405153274536
    2. '[i' → logprob: -2.0171639919281006
    3. ']' → logprob: -2.2671639919281006
    4. '[-' → logprob: -3.0171639919281006
    5. ' -' → logprob: -4.39216423034668
    6. '[k' → logprob: -4.64216423034668
    7. '[' → logprob: -4.89216423034668
    8. ']>' → logprob: -6.01716423034668
    9. '   ' → logprob: -6.51716423034668
    10. '][' → logprob: -6.76716423034668

Token 1115: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004484269011300057
    2. ' ' → logprob: -7.750448226928711
    3. '```' → logprob: -12.687948226928711
    4. '>' → logprob: -13.062948226928711
    5. '0' → logprob: -13.187948226928711
    6. 'i' → logprob: -13.250448226928711
    7. '2' → logprob: -13.437948226928711
    8. ']' → logprob: -13.625448226928711
    9. '...' → logprob: -14.375448226928711
    10. ')' → logprob: -14.687948226928711

Token 1116: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001382497837767005
    2. ' ' → logprob: -6.626382350921631
    3. 'i' → logprob: -10.626382827758789
    4. '2' → logprob: -11.876382827758789
    5. '```' → logprob: -12.376382827758789
    6. ']' → logprob: -12.438882827758789
    7. '0' → logprob: -12.751382827758789
    8. 'k' → logprob: -13.313882827758789
    9. '-' → logprob: -13.501382827758789
    10. '3' → logprob: -13.626382827758789

Token 1117: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4380728304386139
    2. ']' → logprob: -1.5630728006362915
    3. '][' → logprob: -3.063072919845581
    4. '>' → logprob: -3.188072919845581
    5. ']>' → logprob: -3.938072919845581
    6. ' >' → logprob: -4.063072681427002
    7. '[' → logprob: -4.938072681427002
    8. '   ' → logprob: -5.438072681427002
    9. '[k' → logprob: -6.188072681427002
    10. '```' → logprob: -6.313072681427002

Token 1118: ' >' (ID: 1424)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.9027834534645081
    2. '>' → logprob: -1.0277833938598633
    3. '[' → logprob: -2.4027833938598633
    4. ']' → logprob: -3.0277833938598633
    5. ' >' → logprob: -3.0277833938598633
    6. ']>' → logprob: -4.027783393859863
    7. '   ' → logprob: -4.777783393859863
    8. '][' → logprob: -5.027783393859863
    9. '[k' → logprob: -5.277783393859863
    10. '```' → logprob: -6.277783393859863

Token 1119: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.012650436721742153
    2. ' H' → logprob: -4.387650489807129
    3. 'i' → logprob: -9.012650489807129
    4. '[i' → logprob: -12.762650489807129
    5. ' ' → logprob: -13.012650489807129
    6. ' i' → logprob: -13.512650489807129
    7. '[' → logprob: -13.512650489807129
    8. '0' → logprob: -13.637650489807129
    9. '=' → logprob: -13.637650489807129
    10. '>' → logprob: -13.762650489807129

Token 1120: '[k' (ID: 14298)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7434176206588745
    2. '[i' → logprob: -0.7434176206588745
    3. ' i' → logprob: -3.243417739868164
    4. '[k' → logprob: -5.493417739868164
    5. ']' → logprob: -6.368417739868164
    6. 'k' → logprob: -6.493417739868164
    7. ' [' → logprob: -6.868417739868164
    8. 'H' → logprob: -7.993417739868164
    9. '[' → logprob: -8.243417739868164
    10. '```' → logprob: -8.493417739868164

Token 1121: ']:
' (ID: 22152)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.28697311878204346
    2. ']:
' → logprob: -1.6619731187820435
    3. '[i' → logprob: -3.661972999572754
    4. '-' → logprob: -4.536972999572754
    5. ']:' → logprob: -4.661972999572754
    6. ']+' → logprob: -5.411972999572754
    7. 'i' → logprob: -6.161972999572754
    8. ' ]' → logprob: -6.786972999572754
    9. '][' → logprob: -6.911972999572754
    10. '   ' → logprob: -6.911972999572754

Token 1122: '           ' (ID: 352)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2481508255004883
    2. ' new' → logprob: -1.8731508255004883
    3. '           ' → logprob: -1.8731508255004883
    4. ':' → logprob: -1.9981508255004883
    5. '       ' → logprob: -2.1231508255004883
    6. ':
' → logprob: -3.3731508255004883
    7. '   ' → logprob: -3.7481508255004883
    8. '[i' → logprob: -3.8731508255004883
    9. ' =' → logprob: -4.123150825500488
    10. '               ' → logprob: -4.873150825500488

Token 1123: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.6359810829162598
    2. ' new' → logprob: -0.7609810829162598
    3. 'dp' → logprob: -6.26098108291626
    4. '   ' → logprob: -7.26098108291626
    5. ' dp' → logprob: -8.010980606079102
    6. '[new' → logprob: -9.010980606079102
    7. '           ' → logprob: -9.135980606079102
    8. '       ' → logprob: -9.635980606079102
    9. '	new' → logprob: -10.385980606079102
    10. '+' → logprob: -10.635980606079102

Token 1124: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -7.5649528298527e-05
    2. '```' → logprob: -10.000075340270996
    3. '   ' → logprob: -12.500075340270996
    4. '`' → logprob: -12.500075340270996
    5. '_' → logprob: -13.125075340270996
    6. 'dp' → logprob: -13.250075340270996
    7. '_token' → logprob: -13.250075340270996
    8. '_d' → logprob: -13.750075340270996
    9. '_tokens' → logprob: -13.750075340270996
    10. ''_' → logprob: -14.000075340270996

Token 1125: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.002485288307070732
    2. '[k' → logprob: -6.127485275268555
    3. '[' → logprob: -8.502485275268555
    4. '=' → logprob: -9.877485275268555
    5. ' =' → logprob: -11.377485275268555
    6. '```' → logprob: -11.752485275268555
    7. '=[' → logprob: -12.127485275268555
    8. ' [' → logprob: -13.002485275268555
    9. '[j' → logprob: -13.002485275268555
    10. 'i' → logprob: -13.002485275268555

Token 1126: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.14977465569972992
    2. '[' → logprob: -3.2747745513916016
    3. '=' → logprob: -3.3997745513916016
    4. ']' → logprob: -3.7747745513916016
    5. '+=' → logprob: -3.8997745513916016
    6. ' +=' → logprob: -4.899774551391602
    7. ']+=' → logprob: -5.399774551391602
    8. '][' → logprob: -5.649774551391602
    9. ' =' → logprob: -6.024774551391602
    10. '```' → logprob: -6.274774551391602

Token 1127: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5813159346580505
    2. '=' → logprob: -0.9563159346580505
    3. ' +=' → logprob: -2.9563159942626953
    4. ' =' → logprob: -5.456315994262695
    5. '   ' → logprob: -9.206315994262695
    6. '+' → logprob: -9.456315994262695
    7. ']+=' → logprob: -10.581315994262695
    8. '           ' → logprob: -11.206315994262695
    9. '       ' → logprob: -11.581315994262695
    10. '	' → logprob: -11.956315994262695

Token 1128: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.060918960720300674
    2. '(dp' → logprob: -3.1859190464019775
    3. 'new' → logprob: -4.685918807983398
    4. ' dp' → logprob: -4.935918807983398
    5. ' (' → logprob: -7.685918807983398
    6. '0' → logprob: -8.060918807983398
    7. '(' → logprob: -8.435918807983398
    8. '(new' → logprob: -8.935918807983398
    9. ' new' → logprob: -9.060918807983398
    10. '   ' → logprob: -10.560918807983398

Token 1129: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.011972553096711636
    2. '[k' → logprob: -4.511972427368164
    3. '[' → logprob: -7.011972427368164
    4. 'i' → logprob: -12.261972427368164
    5. ' [' → logprob: -12.636972427368164
    6. 'k' → logprob: -13.011972427368164
    7. '[I' → logprob: -13.011972427368164
    8. '[
' → logprob: -13.261972427368164
    9. '   ' → logprob: -13.636972427368164
    10. '(i' → logprob: -14.136972427368164

Token 1130: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4573608934879303
    2. ' +' → logprob: -1.582360863685608
    3. ']' → logprob: -2.4573609828948975
    4. '*' → logprob: -3.2073609828948975
    5. ' *' → logprob: -3.8323609828948975
    6. ')' → logprob: -4.582360744476318
    7. ']+' → logprob: -6.582360744476318
    8. '<|end|>' → logprob: -6.832360744476318
    9. '   ' → logprob: -9.457361221313477
    10. ' ]' → logprob: -9.582361221313477

Token 1131: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7528573870658875
    2. ' +' → logprob: -1.7528574466705322
    3. '[' → logprob: -2.0028574466705322
    4. '<|end|>' → logprob: -2.3778574466705322
    5. '[i' → logprob: -2.5028574466705322
    6. ')' → logprob: -4.752857208251953
    7. ']' → logprob: -4.877857208251953
    8. '   ' → logprob: -5.002857208251953
    9. '<|end|>' → logprob: -5.752857208251953
    10. '       ' → logprob: -5.877857208251953

Token 1132: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04716453701257706
    2. 'new' → logprob: -3.7971644401550293
    3. ' dp' → logprob: -4.297164440155029
    4. '1' → logprob: -5.297164440155029
    5. 'pow' → logprob: -6.547164440155029
    6. '(dp' → logprob: -6.547164440155029
    7. ' new' → logprob: -6.922164440155029
    8. '0' → logprob: -7.047164440155029
    9. '(' → logprob: -9.297164916992188
    10. ' ' → logprob: -9.797164916992188

Token 1133: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.018846124410629272
    2. '[i' → logprob: -4.018846035003662
    3. '[' → logprob: -8.14384651184082
    4. 'k' → logprob: -8.26884651184082
    5. '[
' → logprob: -10.01884651184082
    6. '(k' → logprob: -10.89384651184082
    7. '```' → logprob: -10.89384651184082
    8. '[j' → logprob: -11.01884651184082
    9. '[n' → logprob: -11.39384651184082
    10. 'i' → logprob: -11.39384651184082

Token 1134: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.025693640112876892
    2. '[i' → logprob: -3.775693655014038
    3. '][' → logprob: -7.400693416595459
    4. '[k' → logprob: -7.525693416595459
    5. '[' → logprob: -7.900693416595459
    6. '   ' → logprob: -8.400693893432617
    7. '<|end|>' → logprob: -8.775693893432617
    8. ']*' → logprob: -8.900693893432617
    9. ']
' → logprob: -9.025693893432617
    10. '[
' → logprob: -9.400693893432617

Token 1135: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1136: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1137: ' For' (ID: 2214)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1138: ' all' (ID: 722)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.47890543937683105
    2. ' i' → logprob: -0.978905439376831
    3. '_' → logprob: -6.35390567779541
    4. ' _' → logprob: -6.85390567779541
    5. ' the' → logprob: -7.97890567779541
    6. ' else' → logprob: -7.97890567779541
    7. 'the' → logprob: -8.10390567779541
    8. ')' → logprob: -8.22890567779541
    9. ' ' → logprob: -8.60390567779541
    10. ' )' → logprob: -8.97890567779541

Token 1139: ' other' (ID: 1273)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.49416524171829224
    2. '_' → logprob: -1.9941651821136475
    3. ' else' → logprob: -2.2441651821136475
    4. 'else' → logprob: -2.4941651821136475
    5. ' i' → logprob: -3.1191651821136475
    6. '[i' → logprob: -5.369165420532227
    7. '```' → logprob: -6.119165420532227
    8. '_else' → logprob: -6.244165420532227
    9. 'k' → logprob: -6.369165420532227
    10. ' _' → logprob: -6.494165420532227

Token 1140: ' cases' (ID: 7911)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5588983297348022
    2. ':' → logprob: -0.9338983297348022
    3. '[i' → logprob: -4.308898448944092
    4. ' _' → logprob: -5.558898448944092
    5. 'i' → logprob: -5.683898448944092
    6. '[' → logprob: -6.308898448944092
    7. ' :' → logprob: -6.433898448944092
    8. 'else' → logprob: -6.433898448944092
    9. '_:' → logprob: -6.558898448944092
    10. '_tokens' → logprob: -6.808898448944092

Token 1141: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05208706110715866
    2. ':
' → logprob: -3.9270870685577393
    3. 'else' → logprob: -4.05208683013916
    4. '=' → logprob: -5.55208683013916
    5. '[' → logprob: -6.17708683013916
    6. ' else' → logprob: -6.30208683013916
    7. '[i' → logprob: -6.30208683013916
    8. '   ' → logprob: -6.42708683013916
    9. 'continue' → logprob: -7.67708683013916
    10. '           ' → logprob: -7.80208683013916

Token 1142: ' use' (ID: 1199)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.9695197343826294
    2. ' new' → logprob: -1.0945197343826294
    3. ' continue' → logprob: -2.34451961517334
    4. 'continue' → logprob: -2.59451961517334
    5. 'else' → logprob: -3.09451961517334
    6. ' else' → logprob: -3.84451961517334
    7. '           ' → logprob: -4.34451961517334
    8. '       ' → logprob: -4.84451961517334
    9. '```' → logprob: -4.84451961517334
    10. '   ' → logprob: -4.96951961517334

Token 1143: ' both' (ID: 2973)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.28396132588386536
    2. '0' → logprob: -1.533961296081543
    3. 'new' → logprob: -4.533961296081543
    4. ' dp' → logprob: -4.658961296081543
    5. '`' → logprob: -5.908961296081543
    6. 'i' → logprob: -6.158961296081543
    7. ' new' → logprob: -6.533961296081543
    8. '```' → logprob: -6.908961296081543
    9. 'k' → logprob: -7.033961296081543
    10. '[' → logprob: -7.158961296081543

Token 1144: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.14816465973854065
    2. ' dp' → logprob: -2.648164749145508
    3. 'new' → logprob: -3.773164749145508
    4. ' new' → logprob: -3.898164749145508
    5. '=' → logprob: -5.523164749145508
    6. '[' → logprob: -5.648164749145508
    7. '`' → logprob: -5.898164749145508
    8. '_dp' → logprob: -5.898164749145508
    9. 'k' → logprob: -6.398164749145508
    10. '[i' → logprob: -6.648164749145508

Token 1145: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.21483565866947174
    2. '[k' → logprob: -1.7148356437683105
    3. '[' → logprob: -4.7148356437683105
    4. ' =' → logprob: -6.7148356437683105
    5. '=' → logprob: -7.5898356437683105
    6. '[:]' → logprob: -7.8398356437683105
    7. 'i' → logprob: -8.214836120605469
    8. ' [' → logprob: -8.464836120605469
    9. ' _' → logprob: -8.589836120605469
    10. 'k' → logprob: -8.589836120605469

Token 1146: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4986705780029297
    2. '[i' → logprob: -0.9986705780029297
    3. ']+' → logprob: -4.62367057800293
    4. ' and' → logprob: -5.37367057800293
    5. '```' → logprob: -5.49867057800293
    6. '   ' → logprob: -6.62367057800293
    7. '][' → logprob: -7.24867057800293
    8. ']
' → logprob: -7.49867057800293
    9. ']:
' → logprob: -7.74867057800293
    10. '       ' → logprob: -8.12367057800293

Token 1147: ' and' (ID: 326)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0042968266643583775
    2. '[' → logprob: -6.754296779632568
    3. ' and' → logprob: -7.129296779632568
    4. '=' → logprob: -7.879296779632568
    5. ' +=' → logprob: -7.879296779632568
    6. '   ' → logprob: -8.379297256469727
    7. ' +' → logprob: -8.754297256469727
    8. '+' → logprob: -8.754297256469727
    9. 'and' → logprob: -8.754297256469727
    10. ':' → logprob: -8.879297256469727

Token 1148: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.12767070531845093
    2. ' dp' → logprob: -2.1276707649230957
    3. 'new' → logprob: -7.752670764923096
    4. ' new' → logprob: -8.377670288085938
    5. '`' → logprob: -10.752670288085938
    6. 'k' → logprob: -11.127670288085938
    7. ' k' → logprob: -11.127670288085938
    8. '```' → logprob: -11.877670288085938
    9. '(dp' → logprob: -12.627670288085938
    10. '	dp' → logprob: -12.627670288085938

Token 1149: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.01328093558549881
    2. '[i' → logprob: -4.388280868530273
    3. '```' → logprob: -8.513280868530273
    4. 'k' → logprob: -8.638280868530273
    5. '[j' → logprob: -9.013280868530273
    6. '[' → logprob: -9.013280868530273
    7. ']' → logprob: -10.388280868530273
    8. 'i' → logprob: -10.638280868530273
    9. '(k' → logprob: -11.013280868530273
    10. '_k' → logprob: -11.638280868530273

Token 1150: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.07905645668506622
    2. ']' → logprob: -3.07905650138855
    3. '[k' → logprob: -3.70405650138855
    4. '[' → logprob: -5.704056262969971
    5. '```' → logprob: -7.829056262969971
    6. '][' → logprob: -7.954056262969971
    7. '[j' → logprob: -7.954056262969971
    8. '   ' → logprob: -8.079056739807129
    9. '[
' → logprob: -8.954056739807129
    10. ']
' → logprob: -9.329056739807129

Token 1151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6800994873046875
    2. ']' → logprob: -0.8050994873046875
    3. '-' → logprob: -3.1800994873046875
    4. ' -' → logprob: -6.3050994873046875
    5. 'i' → logprob: -6.8050994873046875
    6. '```' → logprob: -7.0550994873046875
    7. ' ]' → logprob: -8.305099487304688
    8. '+' → logprob: -8.305099487304688
    9. ' ' → logprob: -9.055099487304688
    10. ']+' → logprob: -9.180099487304688

Token 1152: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.40264657139778137
    2. '[i' → logprob: -1.152646541595459
    3. '[k' → logprob: -4.777646541595459
    4. '[' → logprob: -6.027646541595459
    5. ']+' → logprob: -6.902646541595459
    6. '```' → logprob: -7.277646541595459
    7. '][' → logprob: -7.402646541595459
    8. ']
' → logprob: -7.652646541595459
    9. ']:
' → logprob: -7.777646541595459
    10. '+' → logprob: -8.027647018432617

Token 1153: ' adjusting' (ID: 67396)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.6274423599243164
    2. ' new' → logprob: -1.1274423599243164
    3. 'dp' → logprob: -2.3774423599243164
    4. '`' → logprob: -4.752442359924316
    5. '```' → logprob: -4.752442359924316
    6. ' dp' → logprob: -5.002442359924316
    7. 'if' → logprob: -5.502442359924316
    8. '*' → logprob: -5.877442359924316
    9. 'i' → logprob: -5.877442359924316
    10. '   ' → logprob: -5.877442359924316

Token 1154: ' similarly' (ID: 60314)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.3004631996154785
    2. '[i' → logprob: -1.5504631996154785
    3. 'new' → logprob: -1.6754631996154785
    4. 'by' → logprob: -1.9254631996154785
    5. '```' → logprob: -3.3004631996154785
    6. ' by' → logprob: -3.8004631996154785
    7. '_dp' → logprob: -4.0504631996154785
    8. '`' → logprob: -4.0504631996154785
    9. ' dp' → logprob: -4.4254631996154785
    10. '*' → logprob: -4.4254631996154785

Token 1155: ' with' (ID: 483)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6997024416923523
    2. '=' → logprob: -2.074702501296997
    3. '   ' → logprob: -2.074702501296997
    4. 'new' → logprob: -2.199702501296997
    5. '[new' → logprob: -3.574702501296997
    6. '`' → logprob: -3.949702501296997
    7. ' =' → logprob: -4.074702262878418
    8. ' new' → logprob: -4.199702262878418
    9. '[k' → logprob: -4.449702262878418
    10. '```' → logprob: -4.449702262878418

Token 1156: ' powers' (ID: 27742)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.019772090017795563
    2. ' pow' → logprob: -4.644772052764893
    3. '2' → logprob: -5.894772052764893
    4. 'H' → logprob: -6.144772052764893
    5. ' H' → logprob: -6.269772052764893
    6. '`' → logprob: -6.644772052764893
    7. '(' → logprob: -7.394772052764893
    8. ' (' → logprob: -8.14477252960205
    9. '```' → logprob: -8.51977252960205
    10. '1' → logprob: -8.64477252960205

Token 1157: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7263641357421875
    2. '[' → logprob: -1.6013641357421875
    3. '[k' → logprob: -2.4763641357421875
    4. 'of' → logprob: -2.7263641357421875
    5. '[i' → logprob: -2.7263641357421875
    6. ' of' → logprob: -3.9763641357421875
    7. '```' → logprob: -4.2263641357421875
    8. '_' → logprob: -4.3513641357421875
    9. '_of' → logprob: -4.4763641357421875
    10. ' =' → logprob: -4.6013641357421875

Token 1158: ' two' (ID: 1920)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2620115876197815
    2. 'two' → logprob: -1.5120115280151367
    3. ' two' → logprob: -4.887011528015137
    4. '```' → logprob: -6.387011528015137
    5. ' ' → logprob: -8.637011528015137
    6. '-' → logprob: -9.137011528015137
    7. '-two' → logprob: -9.137011528015137
    8. '(' → logprob: -9.137011528015137
    9. 'Two' → logprob: -9.387011528015137
    10. '``' → logprob: -10.137011528015137

Token 1159: '
' (ID: 198)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5466831922531128
    2. '=' → logprob: -1.9216831922531128
    3. '   ' → logprob: -1.9216831922531128
    4. '```' → logprob: -3.0466833114624023
    5. ' =' → logprob: -3.6716833114624023
    6. ':' → logprob: -3.7966833114624023
    7. '[' → logprob: -4.296683311462402
    8. '[k' → logprob: -5.171683311462402
    9. ' +=' → logprob: -6.546683311462402
    10. ':
' → logprob: -6.546683311462402

Token 1160: '       ' (ID: 309)
  Prédit: '[new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[new' → logprob: -1.1778194904327393
    2. '[i' → logprob: -1.3028194904327393
    3. '[' → logprob: -2.0528194904327393
    4. '   ' → logprob: -2.3028194904327393
    5. ' new' → logprob: -2.9278194904327393
    6. '```' → logprob: -3.4278194904327393
    7. ' =' → logprob: -3.5528194904327393
    8. 'new' → logprob: -3.5528194904327393
    9. '=' → logprob: -3.5528194904327393
    10. '           ' → logprob: -5.67781925201416

Token 1161: ' else' (ID: 1203)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6079056859016418
    2. '[' → logprob: -2.232905626296997
    3. ' =' → logprob: -2.482905626296997
    4. 'elif' → logprob: -2.607905626296997
    5. 'else' (adapté à ' else') → logprob: -2.857905626296997
    6. '   ' → logprob: -2.857905626296997
    7. ' elif' → logprob: -3.857905626296997
    8. ' else' → logprob: -4.232905864715576
    9. '[i' → logprob: -4.607905864715576
    10. ' new' → logprob: -5.107905864715576

Token 1162: ':
' (ID: 734)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.04084939882159233
    2. ':' → logprob: -4.665849208831787
    3. '[' → logprob: -5.040849208831787
    4. ' =' → logprob: -5.290849208831787
    5. 'new' → logprob: -5.540849208831787
    6. '   ' → logprob: -5.540849208831787
    7. ' new' → logprob: -5.790849208831787
    8. ':
' → logprob: -5.915849208831787
    9. '=' → logprob: -6.165849208831787
    10. '[new' → logprob: -6.790849208831787

Token 1163: '           ' (ID: 352)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.11415502429008484
    2. 'new' → logprob: -2.3641550540924072
    3. '[' → logprob: -5.239154815673828
    4. '[new' → logprob: -5.989154815673828
    5. '(new' → logprob: -6.114154815673828
    6. ' =' → logprob: -6.364154815673828
    7. '           ' → logprob: -7.739154815673828
    8. '   ' → logprob: -8.239154815673828
    9. '               ' → logprob: -8.614154815673828
    10. '=' → logprob: -8.614154815673828

Token 1164: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.20162899792194366
    2. ' new' → logprob: -1.7016290426254272
    3. '   ' → logprob: -8.951628684997559
    4. '```' → logprob: -10.576628684997559
    5. 'dp' → logprob: -10.701628684997559
    6. '           ' → logprob: -11.201628684997559
    7. '_new' → logprob: -11.951628684997559
    8. ' dp' → logprob: -12.701628684997559
    9. '	new' → logprob: -12.826628684997559
    10. '               ' → logprob: -12.951628684997559

Token 1165: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -2.339278580620885e-06
    2. '_' → logprob: -14.125001907348633
    3. 'dp' → logprob: -14.125001907348633
    4. '_dt' → logprob: -16.000001907348633
    5. ' _' → logprob: -16.750001907348633
    6. '[i' → logprob: -17.000001907348633
    7. '_d' → logprob: -17.000001907348633
    8. '
' → logprob: -17.125001907348633
    9. '	dp' → logprob: -17.125001907348633
    10. '_df' → logprob: -17.250001907348633

Token 1166: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004552215104922652
    2. '[' → logprob: -7.875455379486084
    3. '```' → logprob: -10.125454902648926
    4. '=' → logprob: -10.750454902648926
    5. ' [' → logprob: -12.375454902648926
    6. '   ' → logprob: -12.750454902648926
    7. '\[' → logprob: -13.375454902648926
    8. ' =' → logprob: -13.875454902648926
    9. '=i' → logprob: -14.250454902648926
    10. '`' → logprob: -14.500454902648926

Token 1167: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.023571547120809555
    2. '=' → logprob: -4.398571491241455
    3. '[' → logprob: -4.773571491241455
    4. '```' → logprob: -6.523571491241455
    5. '[k' → logprob: -7.898571491241455
    6. ']' → logprob: -8.898571968078613
    7. '[
' → logprob: -9.148571968078613
    8. '=i' → logprob: -9.398571968078613
    9. ']=' → logprob: -9.648571968078613
    10. '+=' → logprob: -9.648571968078613

Token 1168: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12883369624614716
    2. '[i' → logprob: -2.128833770751953
    3. '[' → logprob: -6.628833770751953
    4. ' =' → logprob: -7.753833770751953
    5. '=i' → logprob: -10.003833770751953
    6. '+=' → logprob: -10.378833770751953
    7. '[k' → logprob: -10.753833770751953
    8. '=
' → logprob: -11.128833770751953
    9. '```' → logprob: -11.503833770751953
    10. ']=' → logprob: -12.128833770751953

Token 1169: ' (' (ID: 350)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.20507262647151947
    2. '(dp' → logprob: -1.7050726413726807
    3. ' dp' → logprob: -5.830072402954102
    4. ' (' → logprob: -7.330072402954102
    5. '(' → logprob: -11.330072402954102
    6. '   ' → logprob: -11.580072402954102
    7. 'new' → logprob: -11.830072402954102
    8. '	dp' → logprob: -12.080072402954102
    9. 'pow' → logprob: -12.455072402954102
    10. '((' → logprob: -12.580072402954102

Token 1170: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0011380735086277127
    2. '(dp' → logprob: -7.001138210296631
    3. 'new' → logprob: -8.501137733459473
    4. ' dp' → logprob: -10.876137733459473
    5. '   ' → logprob: -13.751137733459473
    6. '(' → logprob: -14.126137733459473
    7. 'pow' → logprob: -14.626137733459473
    8. '	dp' → logprob: -14.751137733459473
    9. 'd' → logprob: -15.376137733459473
    10. ' (' → logprob: -15.501137733459473

Token 1171: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005380203947424889
    2. '[k' → logprob: -8.000537872314453
    3. '[' → logprob: -9.250537872314453
    4. 'i' → logprob: -9.250537872314453
    5. '```' → logprob: -13.000537872314453
    6. '[j' → logprob: -13.500537872314453
    7. '[
' → logprob: -13.875537872314453
    8. 'k' → logprob: -14.125537872314453
    9. '(i' → logprob: -14.125537872314453
    10. '**' → logprob: -14.375537872314453

Token 1172: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.9416325092315674
    2. '+' → logprob: -1.1916325092315674
    3. ' +' → logprob: -1.3166325092315674
    4. ' *' → logprob: -4.316632270812988
    5. '*' → logprob: -4.441632270812988
    6. ')' → logprob: -4.816632270812988
    7. '[' → logprob: -6.316632270812988
    8. ']' → logprob: -7.066632270812988
    9. '```' → logprob: -7.191632270812988
    10. ' ' → logprob: -8.691632270812988

Token 1173: ' +' (ID: 659)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.9881610870361328
    2. '*' → logprob: -1.2381610870361328
    3. ' +' → logprob: -1.7381610870361328
    4. '+' → logprob: -1.8631610870361328
    5. ')' → logprob: -5.738161087036133
    6. '[i' → logprob: -5.988161087036133
    7. '[' → logprob: -7.488161087036133
    8. ' ' → logprob: -9.738161087036133
    9. '**' → logprob: -10.113161087036133
    10. ' +
' → logprob: -10.238161087036133

Token 1174: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.006179171148687601
    2. ' dp' → logprob: -5.256179332733154
    3. 'pow' → logprob: -7.506179332733154
    4. '(dp' → logprob: -7.881179332733154
    5. '(' → logprob: -12.006178855895996
    6. ' (' → logprob: -12.631178855895996
    7. '	dp' → logprob: -13.506178855895996
    8. '   ' → logprob: -13.631178855895996
    9. '```' → logprob: -13.756178855895996
    10. ' pow' → logprob: -14.631178855895996

Token 1175: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0005847262218594551
    2. '[i' → logprob: -7.875584602355957
    3. 'k' → logprob: -9.625584602355957
    4. '(k' → logprob: -9.875584602355957
    5. '[' → logprob: -10.625584602355957
    6. '[j' → logprob: -11.000584602355957
    7. '[(' → logprob: -11.375584602355957
    8. '```' → logprob: -11.375584602355957
    9. '[
' → logprob: -11.625584602355957
    10. '`' → logprob: -12.500584602355957

Token 1176: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.001735870959237218
    2. '[k' → logprob: -7.376735687255859
    3. '])' → logprob: -7.751735687255859
    4. ' -' → logprob: -7.876735687255859
    5. '[-' → logprob: -8.37673568725586
    6. ']' → logprob: -10.00173568725586
    7. '-k' → logprob: -12.25173568725586
    8. '[i' → logprob: -12.75173568725586
    9. '[' → logprob: -13.00173568725586
    10. '   ' → logprob: -13.12673568725586

Token 1177: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -13.000004768371582
    3. ']' → logprob: -14.125004768371582
    4. '   ' → logprob: -14.875004768371582
    5. '```' → logprob: -15.125004768371582
    6. '
' → logprob: -16.000003814697266
    7. '`' → logprob: -16.312503814697266
    8. '-' → logprob: -16.437503814697266
    9. 'k' → logprob: -16.750003814697266
    10. 'i' → logprob: -17.625003814697266

Token 1178: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.537868779967539e-06
    2. ']' → logprob: -12.625008583068848
    3. '```' → logprob: -13.187508583068848
    4. '2' → logprob: -14.062508583068848
    5. ' ' → logprob: -14.437508583068848
    6. '`' → logprob: -15.125008583068848
    7. '-' → logprob: -15.562508583068848
    8. '   ' → logprob: -15.562508583068848
    9. '
' → logprob: -16.12500762939453
    10. ')' → logprob: -16.37500762939453

Token 1179: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33283448219299316
    2. '])' → logprob: -1.3328344821929932
    3. ']' → logprob: -3.957834482192993
    4. '*' → logprob: -9.457834243774414
    5. '`)' → logprob: -10.332834243774414
    6. ')]' → logprob: -10.457834243774414
    7. '```' → logprob: -10.457834243774414
    8. ')*' → logprob: -10.957834243774414
    9. '   ' → logprob: -11.082834243774414
    10. ']*' → logprob: -11.207834243774414

Token 1180: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07110068202018738
    2. '*' → logprob: -2.9461007118225098
    3. '```' → logprob: -5.07110071182251
    4. ')' → logprob: -5.32110071182251
    5. '[i' → logprob: -6.82110071182251
    6. ']' → logprob: -6.94610071182251
    7. '[' → logprob: -7.07110071182251
    8. '**' → logprob: -7.82110071182251
    9. '[k' → logprob: -8.196100234985352
    10. '
' → logprob: -8.196100234985352

Token 1181: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.00024323153775185347
    2. ' pow' → logprob: -8.375243186950684
    3. '2' → logprob: -12.000243186950684
    4. '(pow' → logprob: -12.000243186950684
    5. '```' → logprob: -15.375243186950684
    6. '(' → logprob: -17.625244140625
    7. '`' → logprob: -18.125244140625
    8. '.pow' → logprob: -18.250244140625
    9. '   ' → logprob: -18.250244140625
    10. '1' → logprob: -18.625244140625

Token 1182: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000116655595775228
    2. '(pow' → logprob: -9.500116348266602
    3. ' (' → logprob: -11.375116348266602
    4. '2' → logprob: -11.375116348266602
    5. 'pow' → logprob: -11.750116348266602
    6. '(
' → logprob: -12.625116348266602
    7. '((' → logprob: -13.250116348266602
    8. '```' → logprob: -13.625116348266602
    9. '(power' → logprob: -14.000116348266602
    10. '('' → logprob: -14.250116348266602

Token 1183: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3132656216621399
    2. '(' → logprob: -1.3132655620574951
    3. ' ' → logprob: -13.438265800476074
    4. ' (' → logprob: -14.063265800476074
    5. '(
' → logprob: -14.313265800476074
    6. '```' → logprob: -15.438265800476074
    7. ')' → logprob: -15.938265800476074
    8. 'pow' → logprob: -15.938265800476074
    9. '(pow' → logprob: -16.563264846801758
    10. '[' → logprob: -16.563264846801758

Token 1184: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1858079433441162
    2. '(H' → logprob: -1.9358079433441162
    3. ',' → logprob: -3.810807943344116
    4. ' (' → logprob: -6.685808181762695
    5. '(
' → logprob: -7.560808181762695
    6. '(k' → logprob: -7.685808181762695
    7. '((' → logprob: -8.310808181762695
    8. ',H' → logprob: -8.310808181762695
    9. '```' → logprob: -8.810808181762695
    10. '(i' → logprob: -10.685808181762695

Token 1185: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.2577868103981018
    2. ' H' → logprob: -1.882786750793457
    3. '(H' → logprob: -2.757786750793457
    4. ' (' → logprob: -4.632786750793457
    5. '(' → logprob: -7.132786750793457
    6. '1' → logprob: -8.132786750793457
    7. ''H' → logprob: -8.382786750793457
    8. ''' → logprob: -8.882786750793457
    9. '`' → logprob: -9.507786750793457
    10. '32' → logprob: -9.632786750793457

Token 1186: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -7.433829159708694e-05
    2. 'k' → logprob: -10.12507438659668
    3. '(k' → logprob: -11.12507438659668
    4. '[i' → logprob: -11.37507438659668
    5. '[' → logprob: -12.00007438659668
    6. '{k' → logprob: -13.87507438659668
    7. ' k' → logprob: -15.50007438659668
    8. '[j' → logprob: -15.62507438659668
    9. '```' → logprob: -15.62507438659668
    10. '	k' → logprob: -16.12507438659668

Token 1187: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6900358200073242
    2. '[i' → logprob: -1.1900358200073242
    3. '-' → logprob: -1.6900358200073242
    4. ' -' → logprob: -5.190035820007324
    5. ']-' → logprob: -6.690035820007324
    6. '[k' → logprob: -6.815035820007324
    7. '-i' → logprob: -7.065035820007324
    8. '[-' → logprob: -7.565035820007324
    9. '[' → logprob: -8.940035820007324
    10. '-k' → logprob: -9.565035820007324

Token 1188: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.13217467069625854
    2. '[i' → logprob: -2.3821747303009033
    3. ' -' → logprob: -3.7571747303009033
    4. '[' → logprob: -6.007174491882324
    5. '-i' → logprob: -6.132174491882324
    6. ']' → logprob: -6.382174491882324
    7. '```' → logprob: -7.757174491882324
    8. '-k' → logprob: -7.882174491882324
    9. '[-' → logprob: -8.132174491882324
    10. ')' → logprob: -8.507174491882324

Token 1189: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.001672802958637476
    2. ' H' → logprob: -6.626672744750977
    3. 'i' → logprob: -8.001672744750977
    4. ' i' → logprob: -12.626672744750977
    5. '   ' → logprob: -13.001672744750977
    6. '```' → logprob: -13.251672744750977
    7. '[i' → logprob: -13.376672744750977
    8. '`' → logprob: -14.751672744750977
    9. '(i' → logprob: -15.001672744750977
    10. 'Hi' → logprob: -15.126672744750977

Token 1190: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.038326848298311234
    2. 'i' → logprob: -3.2883267402648926
    3. '```' → logprob: -9.41332721710205
    4. ']' → logprob: -9.53832721710205
    5. '[' → logprob: -10.28832721710205
    6. '[k' → logprob: -10.53832721710205
    7. '[
' → logprob: -10.91332721710205
    8. '(i' → logprob: -11.16332721710205
    9. '][' → logprob: -12.03832721710205
    10. 'k' → logprob: -12.16332721710205

Token 1191: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.027452077716588974
    2. '-' → logprob: -4.152451992034912
    3. ']-' → logprob: -5.027451992034912
    4. '[i' → logprob: -5.652451992034912
    5. '])' → logprob: -7.152451992034912
    6. 'i' → logprob: -8.90245246887207
    7. ']+' → logprob: -9.40245246887207
    8. '[k' → logprob: -9.77745246887207
    9. '[' → logprob: -10.40245246887207
    10. '[
' → logprob: -10.52745246887207

Token 1192: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.756989700486884e-05
    2. '2' → logprob: -9.62508773803711
    3. ' ' → logprob: -11.75008773803711
    4. ']' → logprob: -12.25008773803711
    5. '```' → logprob: -13.18758773803711
    6. '])' → logprob: -13.25008773803711
    7. '   ' → logprob: -13.31258773803711
    8. '-' → logprob: -14.56258773803711
    9. ')' → logprob: -15.06258773803711
    10. '`' → logprob: -15.50008773803711

Token 1193: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018923594325315207
    2. ' ' → logprob: -9.000188827514648
    3. ']' → logprob: -10.500188827514648
    4. '2' → logprob: -10.500188827514648
    5. '   ' → logprob: -12.750188827514648
    6. '```' → logprob: -13.312688827514648
    7. ')' → logprob: -14.750188827514648
    8. '`' → logprob: -14.812688827514648
    9. 'i' → logprob: -15.000188827514648
    10. '])' → logprob: -15.000188827514648

Token 1194: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.004210412967950106
    2. '])' → logprob: -6.254210472106934
    3. ']' → logprob: -6.629210472106934
    4. ',' → logprob: -8.004210472106934
    5. '-' → logprob: -8.254210472106934
    6. '),' → logprob: -8.504210472106934
    7. '+' → logprob: -10.754210472106934
    8. ')' → logprob: -11.004210472106934
    9. ']+' → logprob: -11.004210472106934
    10. '[k' → logprob: -11.254210472106934

Token 1195: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0019312551012262702
    2. ' mod' → logprob: -6.251931190490723
    3. '```' → logprob: -14.376931190490723
    4. '(mod' → logprob: -14.501931190490723
    5. '   ' → logprob: -15.001931190490723
    6. '           ' → logprob: -15.751931190490723
    7. '	mod' → logprob: -15.751931190490723
    8. ' ' → logprob: -16.25193214416504
    9. '`' → logprob: -16.37693214416504
    10. '               ' → logprob: -16.50193214416504

Token 1196: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00037144700763747096
    2. '   ' → logprob: -8.125370979309082
    3. ')
' → logprob: -10.125370979309082
    4. '```' → logprob: -10.875370979309082
    5. ')`' → logprob: -12.250370979309082
    6. '       ' → logprob: -13.000370979309082
    7. ')*' → logprob: -13.500370979309082
    8. '`)' → logprob: -13.875370979309082
    9. ']' → logprob: -13.875370979309082
    10. '**' → logprob: -14.000370979309082

Token 1197: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.929193377494812
    2. '<|end|>' → logprob: -1.679193377494812
    3. '   ' → logprob: -1.929193377494812
    4. ')' → logprob: -2.6791934967041016
    5. '[' → logprob: -2.8041934967041016
    6. '\n' → logprob: -3.4291934967041016
    7. '%' → logprob: -3.5541934967041016
    8. ' ' → logprob: -3.8041934967041016
    9. '```' → logprob: -4.429193496704102
    10. '    
' → logprob: -4.929193496704102

Token 1198: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38616645336151123
    2. '\n' → logprob: -2.386166572570801
    3. '       ' → logprob: -2.636166572570801
    4. '    
' → logprob: -3.761166572570801
    5. '
' → logprob: -4.011166572570801
    6. '[' → logprob: -4.261166572570801
    7. '%' → logprob: -4.386166572570801
    8. ')' → logprob: -4.511166572570801
    9. ' new' → logprob: -4.511166572570801
    10. 'new' → logprob: -4.511166572570801

Token 1199: ' Apply' (ID: 28921)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.13232463598251343
    2. ' new' → logprob: -2.257324695587158
    3. '   ' → logprob: -4.007324695587158
    4. '       ' → logprob: -7.507324695587158
    5. 'if' → logprob: -8.13232421875
    6. ' if' → logprob: -9.75732421875
    7. '```' → logprob: -9.75732421875
    8. '	new' → logprob: -10.13232421875
    9. '
' → logprob: -10.13232421875
    10. 'newline' → logprob: -11.00732421875

Token 1200: ' modulo' (ID: 112372)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.4967331886291504
    2. ' %' → logprob: -1.9967331886291504
    3. 'new' → logprob: -2.2467331886291504
    4. '%' → logprob: -2.3717331886291504
    5. 'mod' → logprob: -3.9967331886291504
    6. '[new' → logprob: -4.37173318862915
    7. ' %=' → logprob: -4.74673318862915
    8. ' mod' → logprob: -5.12173318862915
    9. '`' → logprob: -5.62173318862915
    10. '_new' → logprob: -5.99673318862915

Token 1201: ' to' (ID: 316)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.6522512435913086
    2. ' new' → logprob: -1.7772512435913086
    3. '[new' → logprob: -1.9022512435913086
    4. ' %' → logprob: -2.2772512435913086
    5. '%' → logprob: -3.6522512435913086
    6. '
' → logprob: -4.152251243591309
    7. '(new' → logprob: -5.527251243591309
    8. ')' → logprob: -5.902251243591309
    9. ' %=' → logprob: -6.027251243591309
    10. '   ' → logprob: -6.402251243591309

Token 1202: ' avoid' (ID: 8397)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.008671299554407597
    2. ' new' → logprob: -4.758671283721924
    3. '```' → logprob: -10.758671760559082
    4. '=' → logprob: -11.633671760559082
    5. '_new' → logprob: -11.633671760559082
    6. '[new' → logprob: -12.133671760559082
    7. 'mod' → logprob: -13.383671760559082
    8. '`' → logprob: -13.383671760559082
    9. '10' → logprob: -13.508671760559082
    10. '%=' → logprob: -13.758671760559082

Token 1203: ' overflow' (ID: 28614)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.33161038160324097
    2. 'new' → logprob: -1.8316104412078857
    3. 'mod' → logprob: -2.3316104412078857
    4. '```' → logprob: -4.456610202789307
    5. ' mod' → logprob: -4.956610202789307
    6. '%' → logprob: -6.581610202789307
    7. '``' → logprob: -6.956610202789307
    8. ' %=' → logprob: -7.206610202789307
    9. '[new' → logprob: -7.331610202789307
    10. '_new' → logprob: -7.831610202789307

Token 1204: '
' (ID: 198)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.5660147666931152
    2. ' new' → logprob: -2.3160147666931152
    3. '[new' → logprob: -2.4410147666931152
    4. '
' → logprob: -2.9410147666931152
    5. '=' → logprob: -3.3160147666931152
    6. '%' → logprob: -3.3160147666931152
    7. '   ' → logprob: -3.5660147666931152
    8. ')' → logprob: -3.5660147666931152
    9. ' %' → logprob: -4.191014766693115
    10. ' =' → logprob: -4.316014766693115

Token 1205: '       ' (ID: 309)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.094616174697876
    2. '
' → logprob: -1.344616174697876
    3. ' %' → logprob: -1.844616174697876
    4. '%' → logprob: -2.219616174697876
    5. '[new' → logprob: -3.219616174697876
    6. ' new' → logprob: -3.344616174697876
    7. '%=' → logprob: -4.344615936279297
    8. ' %=' → logprob: -4.344615936279297
    9. '   ' → logprob: -4.594615936279297
    10. '```' → logprob: -5.344615936279297

Token 1206: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.008678981103003025
    2. ' new' → logprob: -4.758678913116455
    3. '=' → logprob: -10.508679389953613
    4. '%=' → logprob: -10.758679389953613
    5. '%' → logprob: -12.508679389953613
    6. ' %=' → logprob: -12.883679389953613
    7. '[new' → logprob: -13.258679389953613
    8. '=new' → logprob: -13.383679389953613
    9. '   ' → logprob: -13.633679389953613
    10. '```' → logprob: -13.758679389953613

Token 1207: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -1.8550976164988242e-05
    2. '_' → logprob: -11.875018119812012
    3. '_d' → logprob: -12.125018119812012
    4. '_p' → logprob: -13.500018119812012
    5. '_dt' → logprob: -13.750018119812012
    6. '_df' → logprob: -14.750018119812012
    7. '_ds' → logprob: -15.000018119812012
    8. '_db' → logprob: -15.000018119812012
    9. '_dc' → logprob: -15.125018119812012
    10. '_dx' → logprob: -15.125018119812012

Token 1208: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3902033970225602e-05
    2. '[new' → logprob: -11.875014305114746
    3. '[' → logprob: -12.000014305114746
    4. '```' → logprob: -14.750014305114746
    5. '\[' → logprob: -15.375014305114746
    6. 'new' → logprob: -16.25001335144043
    7. '[I' → logprob: -16.87501335144043
    8. '=' → logprob: -17.50001335144043
    9. '[j' → logprob: -18.00001335144043
    10. ' [' → logprob: -18.25001335144043

Token 1209: ']' (ID: 60)
  Prédit: ' %='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.16270712018013
    2. '%=' → logprob: -2.4127070903778076
    3. '=' → logprob: -3.9127070903778076
    4. ']' → logprob: -4.412707328796387
    5. ')' → logprob: -4.412707328796387
    6. ' =' → logprob: -4.662707328796387
    7. '%' → logprob: -5.162707328796387
    8. ' %' → logprob: -8.037707328796387
    9. '   ' → logprob: -8.037707328796387
    10. '[' → logprob: -8.287707328796387

Token 1210: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.5790823101997375
    2. '=' → logprob: -0.8290823101997375
    3. ' %=' → logprob: -5.954082489013672
    4. ' =' → logprob: -7.829082489013672
    5. '%' → logprob: -9.579082489013672
    6. ')' → logprob: -10.329082489013672
    7. 'new' → logprob: -11.204082489013672
    8. ']' → logprob: -11.454082489013672
    9. '```' → logprob: -12.204082489013672
    10. '   ' → logprob: -12.204082489013672

Token 1211: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.9361264946837764e-07
    2. ' mod' → logprob: -16.25
    3. '(mod' → logprob: -18.25
    4. 'MOD' → logprob: -22.5
    5. '	mod' → logprob: -23.5
    6. '_mod' → logprob: -23.5
    7. '```' → logprob: -23.625
    8. '
' → logprob: -24.25
    9. 'moder' → logprob: -24.375
    10. 'Mod' → logprob: -26.0

Token 1212: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1213: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1214: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.22100499272346497
    2. '<|end|>' → logprob: -1.7210049629211426
    3. '   ' → logprob: -5.346004962921143
    4. ')' → logprob: -5.471004962921143
    5. ']' → logprob: -5.846004962921143
    6. 'continue' → logprob: -6.471004962921143
    7. '```' → logprob: -6.471004962921143
    8. 'return' → logprob: -7.221004962921143
    9. 'for' → logprob: -7.471004962921143
    10. '[' → logprob: -7.471004962921143

Token 1215: ' Update' (ID: 9152)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: 0.0
    2. '   ' → logprob: -17.0
    3. ' dp' → logprob: -18.5
    4. '	dp' → logprob: -22.125
    5. '(dp' → logprob: -24.375
    6. '_dp' → logprob: -24.375
    7. 'dc' → logprob: -24.5
    8. '
' → logprob: -24.625
    9. '    
' → logprob: -25.125
    10. 'dt' → logprob: -25.5

Token 1216: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: 0.0
    2. ' dp' → logprob: -17.75
    3. '```' → logprob: -23.375
    4. '   ' → logprob: -23.5
    5. '	dp' → logprob: -23.875
    6. '_dp' → logprob: -24.0
    7. '`' → logprob: -24.5
    8. '(dp' → logprob: -25.125
    9. '
' → logprob: -26.125
    10. 'dpi' → logprob: -26.75

Token 1217: ' array' (ID: 2644)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -2.451116051815916e-05
    2. ' =' → logprob: -10.750024795532227
    3. '=k' → logprob: -13.375024795532227
    4. '[:]' → logprob: -14.500024795532227
    5. '=
' → logprob: -15.500024795532227
    6. '   ' → logprob: -15.625024795532227
    7. '=new' → logprob: -16.000024795532227
    8. '[' → logprob: -16.125024795532227
    9. '.=' → logprob: -16.500024795532227
    10. '[k' → logprob: -16.750024795532227

Token 1218: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.024234425276517868
    2. ' =' → logprob: -3.7742345333099365
    3. '   ' → logprob: -7.274234294891357
    4. 'dp' → logprob: -8.149234771728516
    5. ' dp' → logprob: -12.649234771728516
    6. '=
' → logprob: -13.649234771728516
    7. '_dp' → logprob: -14.399234771728516
    8. ',' → logprob: -14.899234771728516
    9. '[:]' → logprob: -14.899234771728516
    10. '```' → logprob: -15.399234771728516

Token 1219: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -2.4868770196917467e-05
    2. ' new' → logprob: -10.625024795532227
    3. '   ' → logprob: -15.250024795532227
    4. '```' → logprob: -15.375024795532227
    5. '`' → logprob: -17.875024795532227
    6. 'the' → logprob: -19.500024795532227
    7. '
' → logprob: -20.000024795532227
    8. '_new' → logprob: -20.375024795532227
    9. '``' → logprob: -20.750024795532227
    10. 'next' → logprob: -21.000024795532227

Token 1220: ' values' (ID: 4824)
  Prédit: '_dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dp' → logprob: -3.128163257315464e-07
    2. 'dp' → logprob: -15.375
    3. '_' → logprob: -17.125
    4. 'new' → logprob: -18.25
    5. '_dt' → logprob: -18.25
    6. '```' → logprob: -18.625
    7. '_dc' → logprob: -18.75
    8. '	dp' → logprob: -18.75
    9. '_py' → logprob: -19.0
    10. '
' → logprob: -19.0

Token 1221: ' for' (ID: 395)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.12984700500965118
    2. '   ' → logprob: -2.1298470497131348
    3. ' dp' → logprob: -5.879847049713135
    4. '	dp' → logprob: -10.129846572875977
    5. '(dp' → logprob: -10.254846572875977
    6. '
' → logprob: -10.504846572875977
    7. '_dp' → logprob: -11.504846572875977
    8. '    
' → logprob: -12.504846572875977
    9. '.dp' → logprob: -13.254846572875977
    10. '```' → logprob: -14.254846572875977

Token 1222: ' the' (ID: 290)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.14566197991371155
    2. 'next' → logprob: -2.2706620693206787
    3. 'the' → logprob: -3.7706620693206787
    4. 'new' → logprob: -5.0206618309021
    5. 'i' → logprob: -6.8956618309021
    6. ' next' → logprob: -7.0206618309021
    7. ' k' → logprob: -8.145662307739258
    8. ' the' → logprob: -8.520662307739258
    9. 'dp' → logprob: -8.645662307739258
    10. ' new' → logprob: -10.395662307739258

Token 1223: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.025347337126731873
    2. 'k' → logprob: -4.0253472328186035
    3. ' next' → logprob: -5.0253472328186035
    4. 'i' → logprob: -7.6503472328186035
    5. 'new' → logprob: -9.150347709655762
    6. 'current' → logprob: -12.025347709655762
    7. 'for' → logprob: -12.150347709655762
    8. '_next' → logprob: -13.150347709655762
    9. ' k' → logprob: -13.775347709655762
    10. 'iteration' → logprob: -14.025347709655762

Token 1224: ' iteration' (ID: 43155)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.09923075139522552
    2. 'iteration' → logprob: -2.5992307662963867
    3. '_k' → logprob: -4.349230766296387
    4. '_iteration' → logprob: -5.974230766296387
    5. 'step' → logprob: -6.224230766296387
    6. 'line' → logprob: -6.474230766296387
    7. ' iteration' → logprob: -7.224230766296387
    8. '_line' → logprob: -8.724230766296387
    9. '_step' → logprob: -8.974230766296387
    10. ' k' → logprob: -10.099230766296387

Token 1225: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0065546790137887
    2. ' dp' → logprob: -5.50655460357666
    3. '   ' → logprob: -6.00655460357666
    4. '	dp' → logprob: -11.88155460357666
    5. '_dp' → logprob: -13.75655460357666
    6. '
' → logprob: -13.75655460357666
    7. '(dp' → logprob: -13.75655460357666
    8. '```' → logprob: -15.38155460357666
    9. '    
' → logprob: -16.131555557250977
    10. '.dp' → logprob: -17.006555557250977

Token 1226: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00023119196703191847
    2. '   ' → logprob: -8.50023078918457
    3. ' dp' → logprob: -10.50023078918457
    4. '	dp' → logprob: -16.00023078918457
    5. '```' → logprob: -17.37523078918457
    6. '_dp' → logprob: -18.37523078918457
    7. '(dp' → logprob: -19.12523078918457
    8. '`' → logprob: -19.50023078918457
    9. '.dp' → logprob: -21.75023078918457
    10. ' ' → logprob: -22.00023078918457

Token 1227: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -1.7432603272027336e-06
    2. ' dp' → logprob: -13.500001907348633
    3. '   ' → logprob: -15.500001907348633
    4. '	dp' → logprob: -18.750001907348633
    5. '_dp' → logprob: -21.000001907348633
    6. '
' → logprob: -21.125001907348633
    7. '    
' → logprob: -22.250001907348633
    8. '(dp' → logprob: -22.500001907348633
    9. '```' → logprob: -23.250001907348633
    10. 'dpi' → logprob: -24.500001907348633

Token 1228: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -3.845798710244708e-05
    2. ' =' → logprob: -10.250038146972656
    3. '[:]' → logprob: -12.875038146972656
    4. '=
' → logprob: -15.625038146972656
    5. '[' → logprob: -16.500038146972656
    6. '=k' → logprob: -16.750038146972656
    7. '[k' → logprob: -16.750038146972656
    8. ',' → logprob: -18.250038146972656
    9. '=

' → logprob: -18.750038146972656
    10. '.=' → logprob: -18.875038146972656

Token 1229: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0019287518225610256
    2. ' new' → logprob: -6.251928806304932
    3. '[new' → logprob: -16.126928329467773
    4. '   ' → logprob: -16.751928329467773
    5. 'dp' → logprob: -18.626928329467773
    6. '[' → logprob: -18.626928329467773
    7. '_new' → logprob: -18.876928329467773
    8. '`' → logprob: -18.876928329467773
    9. '```' → logprob: -19.126928329467773
    10. '新' → logprob: -19.251928329467773

Token 1230: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.00012701898231171072
    2. 'dp' → logprob: -9.000126838684082
    3. 'new' → logprob: -12.625126838684082
    4. '	dp' → logprob: -15.750126838684082
    5. 'DP' → logprob: -17.5001277923584
    6. '_dc' → logprob: -17.5001277923584
    7. 'p' → logprob: -17.5001277923584
    8. '[new' → logprob: -17.7501277923584
    9. '_dt' → logprob: -17.8751277923584
    10. 'w' → logprob: -18.7501277923584

Token 1231: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1232: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007853380404412746
    2. 'result' → logprob: -5.1328535079956055
    3. 'answer' → logprob: -6.5078535079956055
    4. '#' → logprob: -8.632853507995605
    5. 'ans' → logprob: -8.882853507995605
    6. '#print' → logprob: -10.882853507995605
    7. 'for' → logprob: -11.007853507995605
    8. 'res' → logprob: -11.132853507995605
    9. 'total' → logprob: -11.257853507995605
    10. '```' → logprob: -11.507853507995605

Token 1233: ' Output' (ID: 18315)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.1424973713001236e-05
    2. 'result' → logprob: -10.750031471252441
    3. 'answer' → logprob: -12.125031471252441
    4. 'ans' → logprob: -12.375031471252441
    5. 'res' → logprob: -15.125031471252441
    6. '#' → logprob: -17.375030517578125
    7. 'pr' → logprob: -17.750030517578125
    8. '```' → logprob: -18.125030517578125
    9. ' print' → logprob: -18.500030517578125
    10. 'for' → logprob: -18.875030517578125

Token 1234: ' the' (ID: 290)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.704273118884885e-07
    2. '```' → logprob: -14.250000953674316
    3. '``' → logprob: -19.25
    4. ' print' → logprob: -19.625
    5. 'result' → logprob: -22.625
    6. '`' → logprob: -22.875
    7. '
' → logprob: -23.0
    8. '(print' → logprob: -23.375
    9. '#print' → logprob: -23.75
    10. 'for' → logprob: -24.125

Token 1235: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.5577775128767826e-06
    2. 'dp' → logprob: -12.250005722045898
    3. 'result' → logprob: -15.375005722045898
    4. '```' → logprob: -15.375005722045898
    5. ' print' → logprob: -15.500005722045898
    6. 'max' → logprob: -18.2500057220459
    7. '``' → logprob: -18.7500057220459
    8. 'sum' → logprob: -18.7500057220459
    9. 'answer' → logprob: -19.5000057220459
    10. '0' → logprob: -19.6250057220459

Token 1236: ';' (ID: 26)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0280383548888494e-06
    2. '```' → logprob: -13.875000953674316
    3. ' print' → logprob: -16.750001907348633
    4. '``' → logprob: -16.875001907348633
    5. '
' → logprob: -20.000001907348633
    6. 'for' → logprob: -20.000001907348633
    7. '#print' → logprob: -21.000001907348633
    8. 'ans' → logprob: -21.625001907348633
    9. '-print' → logprob: -21.750001907348633
    10. '(print' → logprob: -21.750001907348633

Token 1237: ' typically' (ID: 13729)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -18.375
    3. ' print' → logprob: -20.125
    4. 'pr' → logprob: -20.5
    5. 'printf' → logprob: -21.5
    6. '
' → logprob: -22.625
    7. '``' → logprob: -24.375
    8. 'ans' → logprob: -24.75
    9. '0' → logprob: -24.75
    10. 'for' → logprob: -25.125

Token 1238: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -18.0
    3. ' print' → logprob: -19.0
    4. '
' → logprob: -21.375
    5. '(print' → logprob: -22.5
    6. 'for' → logprob: -23.125
    7. '``' → logprob: -23.125
    8. 'printf' → logprob: -23.25
    9. '`' → logprob: -24.5
    10. '0' → logprob: -24.5

Token 1239: ' the' (ID: 290)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -16.125
    3. 'dp' → logprob: -20.75
    4. '```' → logprob: -20.75
    5. 'printf' → logprob: -21.75
    6. '
' → logprob: -21.75
    7. '0' → logprob: -23.25
    8. '(print' → logprob: -23.375
    9. 'pr' → logprob: -23.75
    10. 'result' → logprob: -23.875

Token 1240: ' answer' (ID: 6052)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.008129963040119e-06
    2. '```' → logprob: -12.750003814697266
    3. ' print' → logprob: -13.875003814697266
    4. 'result' → logprob: -16.125003814697266
    5. 'dp' → logprob: -16.875003814697266
    6. '``' → logprob: -17.375003814697266
    7. '`' → logprob: -17.375003814697266
    8. '0' → logprob: -18.500003814697266
    9. 'printf' → logprob: -18.625003814697266
    10. 'max' → logprob: -19.000003814697266

Token 1241: ' is' (ID: 382)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.37574025988578796
    2. '=' → logprob: -1.5007402896881104
    3. '[' → logprob: -2.7507402896881104
    4. ' =' → logprob: -4.250740051269531
    5. '[len' → logprob: -5.375740051269531
    6. '[-' → logprob: -6.375740051269531
    7. '```' → logprob: -6.625740051269531
    8. 'dp' → logprob: -6.750740051269531
    9. '[n' → logprob: -7.500740051269531
    10. 'for' → logprob: -7.500740051269531

Token 1242: ' the' (ID: 290)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.029872551560401917
    2. 'dp' → logprob: -3.5298726558685303
    3. '(dp' → logprob: -9.02987289428711
    4. '```' → logprob: -14.02987289428711
    5. '(print' → logprob: -14.40487289428711
    6. ' print' → logprob: -14.52987289428711
    7. ' dp' → logprob: -14.90487289428711
    8. '``' → logprob: -17.02987289428711
    9. 'printf' → logprob: -17.27987289428711
    10. '`' → logprob: -18.27987289428711

Token 1243: ' last' (ID: 2174)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0029230411164462566
    2. 'print' → logprob: -6.752923011779785
    3. 'str' → logprob: -7.627923011779785
    4. 'max' → logprob: -7.627923011779785
    5. 'sum' → logprob: -7.877923011779785
    6. ' dp' → logprob: -8.377923011779785
    7. 'result' → logprob: -9.502923011779785
    8. '0' → logprob: -9.752923011779785
    9. '(dp' → logprob: -10.877923011779785
    10. 'last' → logprob: -11.377923011779785

Token 1244: ' element' (ID: 3577)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05670924484729767
    2. 'token' → logprob: -3.3067092895507812
    3. 'dp' → logprob: -5.056709289550781
    4. '(dp' → logprob: -5.181709289550781
    5. '()' → logprob: -5.806709289550781
    6. '```' → logprob: -6.306709289550781
    7. '`' → logprob: -7.431709289550781
    8. '(' → logprob: -8.931709289550781
    9. '())' → logprob: -9.056709289550781
    10. ')' → logprob: -9.056709289550781

Token 1245: ' in' (ID: 306)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.591415437171236e-05
    2. '```' → logprob: -9.875096321105957
    3. '(print' → logprob: -10.125096321105957
    4. '
' → logprob: -13.875096321105957
    5. '()
' → logprob: -13.875096321105957
    6. '``' → logprob: -14.125096321105957
    7. ' print' → logprob: -14.875096321105957
    8. '`' → logprob: -15.000096321105957
    9. '.print' → logprob: -15.375096321105957
    10. '()' → logprob: -15.500096321105957

Token 1246: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -3.531315314830863e-06
    2. ' dp' → logprob: -13.000003814697266
    3. '(dp' → logprob: -14.000003814697266
    4. 'print' → logprob: -15.500003814697266
    5. 'the' → logprob: -15.750003814697266
    6. '```' → logprob: -19.000003814697266
    7. '`' → logprob: -20.250003814697266
    8. '	dp' → logprob: -20.375003814697266
    9. 'new' → logprob: -20.500003814697266
    10. '
' → logprob: -20.750003814697266

Token 1247: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003473825636319816
    2. '```' → logprob: -8.000347137451172
    3. '``' → logprob: -11.500347137451172
    4. '[' → logprob: -14.750347137451172
    5. '`
' → logprob: -14.875347137451172
    6. ' print' → logprob: -15.375347137451172
    7. '
' → logprob: -15.500347137451172
    8. '.print' → logprob: -15.500347137451172
    9. '`' → logprob: -15.625347137451172
    10. '[
' → logprob: -15.875347137451172

Token 1248: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.935296834039036e-06
    2. '```' → logprob: -12.75000286102295
    3. '``' → logprob: -17.000003814697266
    4. ' print' → logprob: -18.625003814697266
    5. '
' → logprob: -20.375003814697266
    6. '`' → logprob: -22.750003814697266
    7. 'printf' → logprob: -24.250003814697266
    8. '-print' → logprob: -24.500003814697266
    9. '#print' → logprob: -24.625003814697266
    10. '	print' → logprob: -24.750003814697266

Token 1249: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -7.505351095460355e-05
    2. 'dp' → logprob: -9.500075340270996
    3. '(' → logprob: -16.75007438659668
    4. ' dp' → logprob: -16.75007438659668
    5. '	dp' → logprob: -17.25007438659668
    6. '((' → logprob: -18.00007438659668
    7. '_dp' → logprob: -18.62507438659668
    8. '(pow' → logprob: -20.00007438659668
    9. '(max' → logprob: -20.37507438659668
    10. 'Dp' → logprob: -20.75007438659668

Token 1250: '[-' (ID: 17503)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.03855398669838905
    2. 'n' → logprob: -3.7885539531707764
    3. '(n' → logprob: -4.7885541915893555
    4. '[-' → logprob: -5.0385541915893555
    5. ')' → logprob: -8.788554191589355
    6. ')n' → logprob: -9.163554191589355
    7. ' n' → logprob: -10.163554191589355
    8. '-' → logprob: -10.288554191589355
    9. '[' → logprob: -11.163554191589355
    10. '-n' → logprob: -11.788554191589355

Token 1251: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '```' → logprob: -17.375
    3. ' ' → logprob: -18.0
    4. '])' → logprob: -18.0
    5. ']' → logprob: -18.375
    6. '   ' → logprob: -19.125
    7. '１' → logprob: -19.375
    8. ')' → logprob: -19.625
    9. '``' → logprob: -19.75
    10. '0' → logprob: -20.25

Token 1252: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47412383556365967
    2. '])' → logprob: -0.9741238355636597
    3. '))' → logprob: -11.22412395477295
    4. ']' → logprob: -11.22412395477295
    5. '})' → logprob: -11.34912395477295
    6. ')])' → logprob: -12.97412395477295
    7. '`)' → logprob: -13.59912395477295
    8. ''])' → logprob: -13.72412395477295
    9. ')]' → logprob: -13.84912395477295
    10. '）' → logprob: -14.22412395477295


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1250
Tokens correctement prédits (1ère position, stricte): 260
Tokens correctement prédits (1ère position, avec adaptation): 290
Tokens correctement prédits (top 10): 767
Précision stricte (1ère position): 20.80%
Précision adaptée (1ère position): 23.20%
Précision (top 10): 61.36%
================================================================================
