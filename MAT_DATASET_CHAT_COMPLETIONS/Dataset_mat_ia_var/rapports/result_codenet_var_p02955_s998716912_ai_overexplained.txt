================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:50:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from itertools import accumulate  # Importation de la fonction accumulate pour générer des sommes cumulées

# Lecture de toutes les données d'entrée depuis l'entrée standard, puis conversion de chaque élément en entier grâce à map(int, ...)
N, K, *A = map(int, open(0).read().split())
# N : nombre d'éléments du tableau A
# K : nombre maximum de modifications autorisées
# A : tableau des entiers ; le * signifie que tout ce qui reste après N et K va dans la liste A


def check(d):
    # Cette fonction retourne True si, en utilisant au plus K opérations, on peut rendre tous les éléments de A divisibles par d
    # Elle vérifie cela en considérant les restes modulo d de chaque élément de A

    # Calcul du reste de chaque élément de A lorsqu'il est divisé par d
    r = sorted([v % d for v in A])
    # On trie les restes dans l'ordre croissant pour rendre les calculs ultérieurs plus simples

    # Calcul des valeurs nécessaires pour que chaque reste atteigne d (par soustraction du reste à d)
    r_inv = [d - v for v in r]

    # Création d'une liste contenant 0 suivi des sommes cumulées des restes.
    # Cela veut dire que r_cs[i] est la somme des i premiers restes (de 0 à i-1)
    r_cs = [0] + list(accumulate(r))

    # Calcul de la somme cumulée des "complements" (r_inv) en partant de la fin du tableau
    # La fonction accumulate opère normalement de gauche à droite, donc on inverse la liste, puis on l'accumule,
    # puis on la réinverse pour obtenir les sommes de droite à gauche
    r_inv_cs = list(accumulate(r_inv[::-1]))[::-1] + [0]
    # On ajoute [0] à la fin pour avoir une taille compatible avec r_cs

    ret = False  # Variable qui va retenir si une configuration valide a été trouvée

    # Boucle sur toutes les façons possibles de répartir les modifications entre augmenter et diminuer les éléments
    for i in range(N + 1):
        flg1 = r_cs[i] <= K  # Est-ce qu'on peut ramener les i premiers restes à 0 avec au plus K opérations ?
        flg2 = r_cs[i] == r_inv_cs[i]  # Est-ce que les augmentations et diminutions nécessaires sont égales ?
        # Si les deux conditions sont remplies, cela signifie qu’il est possible avec K ou moins de modifications de tout rendre divisible par d
        ret = (flg1 and flg2) or ret  # On conserve True si jamais au moins une itération vérifie les deux conditions

    return ret  # Retourne True si au moins une configuration est valide, sinon False


M = sum(A)  # Somme totale des éléments du tableau A (utilisée pour déterminer les diviseurs possibles)
ans = 0  # Variable pour stocker la plus grande valeur de d trouvée

# On souhaite trouver le plus grand diviseur de M pour lequel check(d) retourne True
# On parcourt tous les diviseurs potentiels de M de la plus grande à la plus petite valeur possible

for i in reversed(range(1, int(M ** 0.5) + 1)):
    # La boucle va de la racine carrée de M jusqu'à 1, ce qui permet de ne vérifier chaque diviseur que deux fois au maximum

    if M % i == 0:  # Si i est un diviseur de M
        if check(i):  # On vérifie si on peut rendre tous les éléments divisibles par i en au plus K opérations
            ans = max(ans, i)  # Si oui, on met à jour la réponse si i est supérieur à la valeur actuelle

    # (M // i) donne l'autre diviseur complémentaire
    if M % (M // i) == 0:  # Si (M // i) est un diviseur de M
        # Ici, on vérifie si le diviseur complémentaire donne un meilleur résultat
        if check(M // i):
            ans = max(ans, M // i)  # Mise à jour si besoin

# À la fin de la boucle, ans contient le plus grand diviseur de M pour lequel tous les éléments de A peuvent devenir multiples de ans en au plus K modifications
print(ans)  # Affichage du résultat final
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' accumulate' (ID: 74226)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.1645621061325073
    2. 'product' → logprob: -1.4145621061325073
    3. 'per' → logprob: -1.7895621061325073
    4. 'count' → logprob: -2.039562225341797
    5. 'cycle' → logprob: -2.664562225341797
    6. 'group' → logprob: -3.289562225341797
    7. 'chain' → logprob: -3.414562225341797
    8. 'acc' → logprob: -6.039562225341797
    9. 'is' → logprob: -6.539562225341797
    10. 'zip' → logprob: -6.914562225341797

Token 4: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00045259902253746986
    2. '(
' → logprob: -8.375452995300293
    3. '.' → logprob: -8.750452995300293
    4. '\(' → logprob: -10.875452995300293
    5. ',' → logprob: -11.625452995300293
    6. '()' → logprob: -11.750452995300293
    7. '```' → logprob: -11.875452995300293
    8. 'import' → logprob: -13.000452995300293
    9. '((' → logprob: -13.125452995300293
    10. '(

' → logprob: -13.125452995300293

Token 5: ' #' (ID: 1069)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005398084758780897
    2. '(
' → logprob: -7.625539779663086
    3. 'def' → logprob: -11.625539779663086
    4. '\(' → logprob: -11.625539779663086
    5. ',' → logprob: -11.875539779663086
    6. '.' → logprob: -12.125539779663086
    7. 'a' → logprob: -12.625539779663086
    8. 'import' → logprob: -12.625539779663086
    9. '\' → logprob: -12.750539779663086
    10. '(

' → logprob: -13.125539779663086

Token 6: ' Import' (ID: 19998)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.026255834847688675
    2. '(' → logprob: -4.1512556076049805
    3. '  ' → logprob: -5.9012556076049805
    4. ' (' → logprob: -6.6512556076049805
    5. '.' → logprob: -6.7762556076049805
    6. ',' → logprob: -7.1512556076049805
    7. '_' → logprob: -7.5262556076049805
    8. 'space' → logprob: -7.5262556076049805
    9. ' a' → logprob: -7.9012556076049805
    10. 'import' → logprob: -8.02625560760498

Token 7: 'ation' (ID: 387)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005705483490601182
    2. '(
' → logprob: -8.250570297241211
    3. ' (' → logprob: -9.250570297241211
    4. ' ' → logprob: -9.625570297241211
    5. ',' → logprob: -10.000570297241211
    6. '.' → logprob: -10.500570297241211
    7. ''' → logprob: -11.625570297241211
    8. '\' → logprob: -12.000570297241211
    9. 'import' → logprob: -12.000570297241211
    10. '```' → logprob: -12.000570297241211

Token 8: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0036225237417966127
    2. '(
' → logprob: -6.503622531890869
    3. ' ' → logprob: -7.128622531890869
    4. ',' → logprob: -7.753622531890869
    5. ' (' → logprob: -7.878622531890869
    6. '.' → logprob: -8.253622055053711
    7. 'import' → logprob: -9.753622055053711
    8. '\' → logprob: -10.378622055053711
    9. 'a' → logprob: -10.503622055053711
    10. ')' → logprob: -11.003622055053711

Token 9: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.015337053686380386
    2. ' l' → logprob: -5.140336990356445
    3. ' itertools' → logprob: -5.140336990356445
    4. 'l' → logprob: -6.015336990356445
    5. '  ' → logprob: -7.515336990356445
    6. ' ' → logprob: -8.390336990356445
    7. ' la' → logprob: -8.765336990356445
    8. ' space' → logprob: -11.015336990356445
    9. ' the' → logprob: -11.140336990356445
    10. ' a' → logprob: -11.640336990356445

Token 10: ' fonction' (ID: 17610)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -1.006959080696106
    2. ' ' → logprob: -1.631959080696106
    3. ' fonction' → logprob: -2.1319589614868164
    4. 's' → logprob: -2.2569589614868164
    5. ' liste' → logprob: -3.0069589614868164
    6. 'f' → logprob: -3.3819589614868164
    7. 'liste' → logprob: -3.3819589614868164
    8. ' itertools' → logprob: -4.131958961486816
    9. ' f' → logprob: -4.506958961486816
    10. 'space' → logprob: -4.881958961486816

Token 11: ' accumulate' (ID: 74226)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000464035285403952
    2. '_' → logprob: -8.87546443939209
    3. 's' → logprob: -9.12546443939209
    4. '(
' → logprob: -9.62546443939209
    5. ' (' → logprob: -9.75046443939209
    6. ',' → logprob: -10.12546443939209
    7. 'def' → logprob: -11.50046443939209
    8. '('' → logprob: -11.75046443939209
    9. ''' → logprob: -12.25046443939209
    10. ' ' → logprob: -12.75046443939209

Token 12: ' pour' (ID: 1930)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014410295523703098
    2. '(
' → logprob: -5.264410495758057
    3. '\' → logprob: -5.889410495758057
    4. '\n' → logprob: -6.139410495758057
    5. ' (' → logprob: -6.264410495758057
    6. ',' → logprob: -7.014410495758057
    7. '
' → logprob: -7.764410495758057
    8. 'import' → logprob: -8.764410018920898
    9. '(

' → logprob: -9.264410018920898
    10. '<|end|>' → logprob: -9.389410018920898

Token 13: ' génér' (ID: 18939)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.3071376383304596
    2. 'calcul' → logprob: -2.4321377277374268
    3. 'l' → logprob: -3.3071377277374268
    4. ' effectuer' → logprob: -3.4321377277374268
    5. ' réaliser' → logprob: -4.182137489318848
    6. 'le' → logprob: -4.182137489318848
    7. ' le' → logprob: -4.307137489318848
    8. ' la' → logprob: -4.682137489318848
    9. 'la' → logprob: -4.807137489318848
    10. ' l' → logprob: -5.057137489318848

Token 14: 'er' (ID: 259)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.29223698377609253
    2. 'ateur' → logprob: -1.9172370433807373
    3. 'ator' → logprob: -2.9172370433807373
    4. 'er' → logprob: -3.5422370433807373
    5. 'ating' → logprob: -5.417236804962158
    6. 'at' → logprob: -5.417236804962158
    7. 'a' → logprob: -5.542236804962158
    8. 'ation' → logprob: -5.542236804962158
    9. 'ates' → logprob: -6.542236804962158
    10. 'te' → logprob: -7.042236804962158

Token 15: ' des' (ID: 731)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0631473064422607
    2. ' des' → logprob: -1.0631473064422607
    3. '(' → logprob: -1.9381473064422607
    4. 'des' → logprob: -3.3131473064422607
    5. ' les' → logprob: -3.5631473064422607
    6. ' ' → logprob: -3.8131473064422607
    7. ' la' → logprob: -3.9381473064422607
    8. ' une' → logprob: -4.06314754486084
    9. '_' → logprob: -4.18814754486084
    10. '(s' → logprob: -5.06314754486084

Token 16: ' sommes' (ID: 32024)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3164353370666504
    2. ' sommes' → logprob: -1.6914353370666504
    3. ' pré' → logprob: -1.8164353370666504
    4. 's' → logprob: -1.8164353370666504
    5. ' valeurs' → logprob: -2.4414353370666504
    6. ' ' → logprob: -4.06643533706665
    7. ' nombres' → logprob: -4.44143533706665
    8. ' résultats' → logprob: -4.44143533706665
    9. ' listes' → logprob: -4.44143533706665
    10. '_s' → logprob: -5.06643533706665

Token 17: ' cumul' (ID: 163119)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07815130054950714
    2. '_' → logprob: -2.953151226043701
    3. 's' → logprob: -5.203151226043701
    4. 'def' → logprob: -5.703151226043701
    5. '(
' → logprob: -6.203151226043701
    6. 'import' → logprob: -6.453151226043701
    7. 'c' → logprob: -6.828151226043701
    8. '()' → logprob: -6.953151226043701
    9. '```' → logprob: -6.953151226043701
    10. ' cumul' → logprob: -7.078151226043701

Token 18: 'ées' (ID: 5161)
  Prédit: 'atives'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atives' → logprob: -0.004404244478791952
    2. 'ul' → logprob: -5.754404067993164
    3. 'ative' → logprob: -7.504404067993164
    4. 'ées' → logprob: -7.879404067993164
    5. '```' → logprob: -10.004404067993164
    6. 'a' → logprob: -10.129404067993164
    7. 'ules' → logprob: -10.129404067993164
    8. 'at' → logprob: -10.379404067993164
    9. 'ales' → logprob: -11.254404067993164
    10. 'ulative' → logprob: -11.254404067993164

Token 19: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3809334933757782
    2. '\n' → logprob: -1.7559335231781006
    3. '\' → logprob: -2.5059335231781006
    4. '

' → logprob: -3.8809335231781006
    5. 'def' → logprob: -4.2559332847595215
    6. '' → logprob: -5.3809332847595215
    7. ',' → logprob: -5.7559332847595215
    8. 'import' → logprob: -5.8809332847595215
    9. 'a' → logprob: -6.0059332847595215
    10. '(' → logprob: -6.0059332847595215

Token 20: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23865938186645508
    2. '(' → logprob: -2.738659381866455
    3. '\n' → logprob: -3.238659381866455
    4. 'def' → logprob: -3.363659381866455
    5. '(
' → logprob: -3.738659381866455
    6. '

' → logprob: -4.488659381866455
    7. '\' → logprob: -4.613659381866455
    8. '
' → logprob: -5.488659381866455
    9. ',' → logprob: -5.488659381866455
    10. 'a' → logprob: -5.738659381866455

Token 21: ' Lecture' (ID: 106534)
  Prédit: ' Calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Calcul' → logprob: -0.6799707412719727
    2. ' Dé' → logprob: -2.8049707412719727
    3. ' def' → logprob: -2.9299707412719727
    4. 'def' → logprob: -2.9299707412719727
    5. ' Gén' → logprob: -3.4299707412719727
    6. 'Calcul' → logprob: -3.8049707412719727
    7. '#' → logprob: -3.9299707412719727
    8. 'Dé' → logprob: -3.9299707412719727
    9. ' La' → logprob: -3.9299707412719727
    10. ' Liste' → logprob: -4.054970741271973

Token 22: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.051053259521722794
    2. 'des' → logprob: -3.801053285598755
    3. '()' → logprob: -4.676053047180176
    4. '_' → logprob: -5.051053047180176
    5. ' des' → logprob: -5.676053047180176
    6. 's' → logprob: -6.551053047180176
    7. 'n' → logprob: -6.801053047180176
    8. 'de' → logprob: -6.926053047180176
    9. 'f' → logprob: -6.926053047180176
    10. 'du' → logprob: -7.176053047180176

Token 23: ' toutes' (ID: 17502)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.1161181852221489
    2. 'l' → logprob: -2.9911181926727295
    3. ' l' → logprob: -3.3661181926727295
    4. 'la' → logprob: -3.9911181926727295
    5. '()' → logprob: -6.24111795425415
    6. 's' → logprob: -6.99111795425415
    7. ' ' → logprob: -6.99111795425415
    8. 'les' → logprob: -7.49111795425415
    9. ' les' → logprob: -8.116118431091309
    10. ' data' → logprob: -8.116118431091309

Token 24: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.7553162574768066
    2. ' les' → logprob: -0.7553162574768066
    3. 'l' → logprob: -3.0053162574768066
    4. '()' → logprob: -5.130316257476807
    5. ' ' → logprob: -6.255316257476807
    6. '(' → logprob: -6.255316257476807
    7. ' l' → logprob: -8.505315780639648
    8. '_' → logprob: -8.755315780639648
    9. 's' → logprob: -8.880315780639648
    10. '```' → logprob: -9.505315780639648

Token 25: ' données' (ID: 30580)
  Prédit: ' lignes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -0.4095298647880554
    2. 'l' → logprob: -1.6595299243927002
    3. ' données' → logprob: -2.7845299243927
    4. ' valeurs' → logprob: -3.2845299243927
    5. 'd' → logprob: -4.284529685974121
    6. 'val' → logprob: -4.534529685974121
    7. 's' → logprob: -6.159529685974121
    8. ' lign' → logprob: -6.159529685974121
    9. 'n' → logprob: -6.534529685974121
    10. ' notes' → logprob: -6.784529685974121

Token 26: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.4398528337478638
    2. 'f' → logprob: -1.4398528337478638
    3. 'data' → logprob: -2.064852714538574
    4. 'input' → logprob: -2.064852714538574
    5. 's' → logprob: -2.689852714538574
    6. ' ' → logprob: -2.814852714538574
    7. ' input' → logprob: -3.564852714538574
    8. ',' → logprob: -3.939852714538574
    9. ' data' → logprob: -4.189852714538574
    10. ' f' → logprob: -4.439852714538574

Token 27: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.6232249736785889
    2. ''une' → logprob: -1.7482249736785889
    3. 'e' → logprob: -1.9982249736785889
    4. ''un' → logprob: -2.123224973678589
    5. 'es' → logprob: -4.873225212097168
    6. 'une' → logprob: -4.998225212097168
    7. 'u' → logprob: -5.248225212097168
    8. 'entrée' → logprob: -5.623225212097168
    9. ''' → logprob: -5.748225212097168
    10. ''ex' → logprob: -5.998225212097168

Token 28: ' depuis' (ID: 16277)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.5010913014411926
    2. 'input' → logprob: -1.2510912418365479
    3. 's' → logprob: -2.876091241836548
    4. 'n' → logprob: -3.751091241836548
    5. 'lines' → logprob: -5.251091480255127
    6. 'inputs' → logprob: -5.376091480255127
    7. 'user' → logprob: -5.751091480255127
    8. ' data' → logprob: -6.501091480255127
    9. '```' → logprob: -6.626091480255127
    10. 'd' → logprob: -6.751091480255127

Token 29: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.6897424459457397
    2. ' stdin' → logprob: -1.3147424459457397
    3. ' sys' → logprob: -2.1897425651550293
    4. 'l' → logprob: -2.5647425651550293
    5. 'stdin' → logprob: -4.314742565155029
    6. ' standard' → logprob: -4.564742565155029
    7. 'sys' → logprob: -4.814742565155029
    8. ' la' → logprob: -6.189742565155029
    9. ' input' → logprob: -6.314742565155029
    10. ' ' → logprob: -6.689742565155029

Token 30: ''entrée' (ID: 115820)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2567911446094513
    2. ''entrée' → logprob: -2.256791114807129
    3. ''' → logprob: -3.006791114807129
    4. '_' → logprob: -3.631791114807129
    5. 'e' → logprob: -4.256791114807129
    6. 'es' → logprob: -4.381791114807129
    7. 'input' → logprob: -4.381791114807129
    8. 'entrée' → logprob: -6.006791114807129
    9. ' input' → logprob: -7.006791114807129
    10. 'stdin' → logprob: -7.131791114807129

Token 31: ' standard' (ID: 7024)
  Prédit: ' standard'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' standard' → logprob: -0.18136654794216156
    2. 'standard' → logprob: -2.431366443634033
    3. '_' → logprob: -4.056366443634033
    4. 'stdin' → logprob: -4.056366443634033
    5. '()' → logprob: -4.431366443634033
    6. 's' → logprob: -4.806366443634033
    7. '_standard' → logprob: -4.806366443634033
    8. ' stdin' → logprob: -4.931366443634033
    9. '(stdin' → logprob: -6.306366443634033
    10. '`' → logprob: -6.806366443634033

Token 32: ',' (ID: 11)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.009762698784470558
    2. 'd' → logprob: -5.259762763977051
    3. 'input' → logprob: -5.884762763977051
    4. ' data' → logprob: -7.509762763977051
    5. 'don' → logprob: -8.00976276397705
    6. 's' → logprob: -8.38476276397705
    7. 'n' → logprob: -8.75976276397705
    8. 'import' → logprob: -9.38476276397705
    9. 'lines' → logprob: -9.88476276397705
    10. 'inputs' → logprob: -10.00976276397705

Token 33: ' puis' (ID: 18766)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.3929787874221802
    2. ' data' → logprob: -1.5179787874221802
    3. ' puis' → logprob: -2.3929786682128906
    4. ' les' → logprob: -2.8929786682128906
    5. 'data' → logprob: -3.0179786682128906
    6. 's' → logprob: -3.1429786682128906
    7. ' lines' → logprob: -3.5179786682128906
    8. ' import' → logprob: -3.6429786682128906
    9. 'input' → logprob: -3.6429786682128906
    10. 'import' → logprob: -4.142978668212891

Token 34: ' conversion' (ID: 22165)
  Prédit: ' split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' split' → logprob: -0.4642115831375122
    2. 'split' → logprob: -1.7142115831375122
    3. ' la' → logprob: -2.8392114639282227
    4. ' les' → logprob: -3.2142114639282227
    5. ' splitting' → logprob: -3.4642114639282227
    6. ' conversion' → logprob: -4.589211463928223
    7. ' on' → logprob: -5.589211463928223
    8. 'la' → logprob: -5.589211463928223
    9. 'spl' → logprob: -5.839211463928223
    10. 'les' → logprob: -5.964211463928223

Token 35: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.4633263349533081
    2. ' en' → logprob: -1.213326334953308
    3. ' de' → logprob: -3.5883264541625977
    4. ' ' → logprob: -3.9633264541625977
    5. 'des' → logprob: -4.338326454162598
    6. '(' → logprob: -4.963326454162598
    7. 's' → logprob: -6.838326454162598
    8. 'en' → logprob: -6.963326454162598
    9. ' du' → logprob: -7.838326454162598
    10. ' into' → logprob: -8.088326454162598

Token 36: ' chaque' (ID: 21194)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.1968365907669067
    2. 'la' → logprob: -1.3218365907669067
    3. 'l' → logprob: -2.071836471557617
    4. ' ' → logprob: -2.696836471557617
    5. 'int' → logprob: -3.321836471557617
    6. 'chaine' → logprob: -3.571836471557617
    7. '_' → logprob: -3.821836471557617
    8. ' list' → logprob: -4.071836471557617
    9. 'str' → logprob: -4.196836471557617
    10. ' int' → logprob: -4.196836471557617

Token 37: ' élément' (ID: 99627)
  Prédit: ' ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.19382509589195251
    2. 'ligne' → logprob: -2.4438250064849854
    3. ' line' → logprob: -3.3188250064849854
    4. 'line' → logprob: -4.3188252449035645
    5. 'élé' → logprob: -4.8188252449035645
    6. 'car' → logprob: -5.3188252449035645
    7. '```' → logprob: -5.5688252449035645
    8. 'l' → logprob: -5.9438252449035645
    9. ' token' → logprob: -5.9438252449035645
    10. ' ' → logprob: -6.0688252449035645

Token 38: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.009291441179811954
    2. 'en' → logprob: -5.009291648864746
    3. 's' → logprob: -7.134291648864746
    4. ' in' → logprob: -7.884291648864746
    5. ' into' → logprob: -8.134291648864746
    6. '```' → logprob: -8.134291648864746
    7. ' ' → logprob: -8.259291648864746
    8. ' input' → logprob: -9.134291648864746
    9. ' de' → logprob: -9.884291648864746
    10. ' des' → logprob: -10.009291648864746

Token 39: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.09718379378318787
    2. 'ent' → logprob: -2.4721837043762207
    3. ' int' → logprob: -4.972183704376221
    4. ' ent' → logprob: -7.847183704376221
    5. ' entier' → logprob: -7.847183704376221
    6. 'inte' → logprob: -9.347184181213379
    7. '```' → logprob: -9.472184181213379
    8. 'ints' → logprob: -9.722184181213379
    9. ' integers' → logprob: -9.972184181213379
    10. ' un' → logprob: -10.222184181213379

Token 40: ' grâce' (ID: 31589)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.020465856418013573
    2. 'input' → logprob: -5.395465850830078
    3. 'inputs' → logprob: -5.645465850830078
    4. 'numbers' → logprob: -5.645465850830078
    5. 'n' → logprob: -5.770465850830078
    6. ' data' → logprob: -6.895465850830078
    7. 'values' → logprob: -7.145465850830078
    8. 's' → logprob: -7.395465850830078
    9. '\n' → logprob: -7.520465850830078
    10. 'don' → logprob: -7.645465850830078

Token 41: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.018720591440796852
    2. 'à' → logprob: -5.018720626831055
    3. ' au' → logprob: -5.268720626831055
    4. ' a' → logprob: -6.643720626831055
    5. ' ' → logprob: -6.768720626831055
    6. ''à' → logprob: -6.768720626831055
    7. 'au' → logprob: -7.143720626831055
    8. ' to' → logprob: -7.643720626831055
    9. '```' → logprob: -7.893720626831055
    10. 's' → logprob: -8.018720626831055

Token 42: ' map' (ID: 4014)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -1.330997109413147
    2. ' map' → logprob: -1.455997109413147
    3. ' la' → logprob: -1.705997109413147
    4. 'list' → logprob: -1.830997109413147
    5. 'map' → logprob: -2.9559969902038574
    6. 'split' → logprob: -3.5809969902038574
    7. 'la' → logprob: -4.080996990203857
    8. ' split' → logprob: -4.205996990203857
    9. 'l' → logprob: -4.330996990203857
    10. ' input' → logprob: -4.455996990203857

Token 43: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09423615038394928
    2. 'data' → logprob: -3.469236135482788
    3. 'input' → logprob: -3.594236135482788
    4. '(
' → logprob: -4.719236373901367
    5. 's' → logprob: -4.969236373901367
    6. 'inputs' → logprob: -5.969236373901367
    7. 'stdin' → logprob: -6.094236373901367
    8. 'int' → logprob: -6.344236373901367
    9. '(input' → logprob: -6.719236373901367
    10. 'r' → logprob: -7.219236373901367

Token 44: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015957956202328205
    2. ',' → logprob: -6.751595973968506
    3. '),' → logprob: -8.626595497131348
    4. '(' → logprob: -10.001595497131348
    5. '))' → logprob: -10.001595497131348
    6. ' )' → logprob: -10.126595497131348
    7. ').' → logprob: -10.876595497131348
    8. ')(' → logprob: -10.876595497131348
    9. ')`' → logprob: -11.001595497131348
    10. '`)' → logprob: -11.626595497131348

Token 45: ' ...)
' (ID: 132905)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3141220211982727
    2. 'input' → logprob: -1.439121961593628
    3. ' data' → logprob: -3.939121961593628
    4. 'data' → logprob: -5.564122200012207
    5. ')' → logprob: -6.439122200012207
    6. ' sys' → logprob: -7.189122200012207
    7. 'lines' → logprob: -7.189122200012207
    8. '```' → logprob: -7.314122200012207
    9. 'sys' → logprob: -7.314122200012207
    10. ' f' → logprob: -7.439122200012207

Token 46: 'N' (ID: 45)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.07625126838684082
    2. 'input' → logprob: -2.951251268386841
    3. 'numbers' → logprob: -5.326251029968262
    4. 'lines' → logprob: -5.701251029968262
    5. ' data' → logprob: -6.076251029968262
    6. 'import' → logprob: -6.826251029968262
    7. 'don' → logprob: -6.826251029968262
    8. 'inputs' → logprob: -6.951251029968262
    9. 's' → logprob: -6.951251029968262
    10. 'values' → logprob: -7.076251029968262

Token 47: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.34250935912132263
    2. ' =' → logprob: -1.717509388923645
    3. '=' → logprob: -2.8425092697143555
    4. 'umbers' → logprob: -4.2175092697143555
    5. 'ums' → logprob: -4.8425092697143555
    6. '=input' → logprob: -5.3425092697143555
    7. 'um' → logprob: -5.4675092697143555
    8. '_data' → logprob: -5.9675092697143555
    9. '=int' → logprob: -6.0925092697143555
    10. '_=' → logprob: -6.2175092697143555

Token 48: ' K' (ID: 658)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.06062125042080879
    2. ' *' → logprob: -3.1856212615966797
    3. '*a' → logprob: -5.31062126159668
    4. '*M' → logprob: -5.68562126159668
    5. '*l' → logprob: -6.68562126159668
    6. ' data' → logprob: -6.81062126159668
    7. '*A' → logprob: -6.81062126159668
    8. '*s' → logprob: -6.93562126159668
    9. '*m' → logprob: -7.06062126159668
    10. 'data' → logprob: -7.31062126159668

Token 49: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6947702169418335
    2. ' =' → logprob: -0.6947702169418335
    3. ',' → logprob: -6.444770336151123
    4. '=input' → logprob: -10.819769859313965
    5. ' ' → logprob: -12.194769859313965
    6. '=list' → logprob: -12.444769859313965
    7. '=int' → logprob: -13.194769859313965
    8. '=N' → logprob: -15.194769859313965
    9. ')' → logprob: -15.819769859313965
    10. '```' → logprob: -16.06977081298828

Token 50: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.8410516381263733
    2. '*' → logprob: -1.0910515785217285
    3. ' ' → logprob: -2.2160515785217285
    4. ' A' → logprob: -2.8410515785217285
    5. 'A' → logprob: -4.4660515785217285
    6. ' L' → logprob: -4.4660515785217285
    7. 'arr' → logprob: -4.8410515785217285
    8. ' M' → logprob: -5.2160515785217285
    9. 'L' → logprob: -5.5910515785217285
    10. ' a' → logprob: -5.7160515785217285

Token 51: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.11739251762628555
    2. ' A' → logprob: -2.6173925399780273
    3. 'a' → logprob: -4.117392539978027
    4. 'H' → logprob: -5.242392539978027
    5. 'arr' → logprob: -5.367392539978027
    6. 'data' → logprob: -5.992392539978027
    7. ' data' → logprob: -6.742392539978027
    8. ' a' → logprob: -6.867392539978027
    9. 'L' → logprob: -6.992392539978027
    10. 'h' → logprob: -7.242392539978027

Token 52: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08894437551498413
    2. ' =' → logprob: -2.463944435119629
    3. ',' → logprob: -13.463944435119629
    4. '=input' → logprob: -14.463944435119629
    5. ')' → logprob: -14.588944435119629
    6. 's' → logprob: -15.088944435119629
    7. '=list' → logprob: -15.338944435119629
    8. ')=' → logprob: -15.338944435119629
    9. '=int' → logprob: -15.338944435119629
    10. '<|end|>' → logprob: -15.338944435119629

Token 53: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.02325700782239437
    2. ' map' → logprob: -3.77325701713562
    3. 'list' → logprob: -11.5232572555542
    4. ' list' → logprob: -14.7732572555542
    5. '   ' → logprob: -15.0232572555542
    6. '	map' → logprob: -15.2732572555542
    7. 'm' → logprob: -15.5232572555542
    8. ' ' → logprob: -15.7732572555542
    9. '(map' → logprob: -16.398256301879883
    10. '```' → logprob: -16.523256301879883

Token 54: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004141910932958126
    2. '(' → logprob: -5.504141807556152
    3. '<int' → logprob: -10.504141807556152
    4. '(lambda' → logprob: -10.754141807556152
    5. '[int' → logprob: -12.629141807556152
    6. 'int' → logprob: -12.754141807556152
    7. '<|end|>' → logprob: -13.129141807556152
    8. '(
' → logprob: -13.254141807556152
    9. '=int' → logprob: -14.254141807556152
    10. ']int' → logprob: -14.379141807556152

Token 55: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.48124220967292786
    2. ',' → logprob: -0.9812421798706055
    3. '(input' → logprob: -5.3562421798706055
    4. 'input' → logprob: -6.3562421798706055
    5. '(' → logprob: -8.356242179870605
    6. ',(' → logprob: -8.981242179870605
    7. ',int' → logprob: -9.356242179870605
    8. ' input' → logprob: -9.356242179870605
    9. ' ,' → logprob: -10.481242179870605
    10. ')(' → logprob: -10.606242179870605

Token 56: ' open' (ID: 2494)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.042507484555244446
    2. 'open' → logprob: -3.7925074100494385
    3. ' input' → logprob: -4.042507648468018
    4. ')' → logprob: -7.417507648468018
    5. ' open' → logprob: -7.917507648468018
    6. 'sys' → logprob: -8.41750717163086
    7. '   ' → logprob: -8.79250717163086
    8. ' ' → logprob: -9.54250717163086
    9. 'import' → logprob: -10.41750717163086
    10. 'stdin' → logprob: -10.79250717163086

Token 57: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014251765795052052
    2. '('' → logprob: -4.264251708984375
    3. '('/' → logprob: -10.639251708984375
    4. '0' → logprob: -10.639251708984375
    5. '("' → logprob: -11.139251708984375
    6. ' (' → logprob: -12.139251708984375
    7. 'input' → logprob: -12.264251708984375
    8. '```' → logprob: -12.514251708984375
    9. ')' → logprob: -12.889251708984375
    10. ' ('' → logprob: -13.389251708984375

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010771428234875202
    2. ''' → logprob: -5.26077127456665
    3. '(' → logprob: -5.63577127456665
    4. '"' → logprob: -6.76077127456665
    5. ''/' → logprob: -7.51077127456665
    6. '"/' → logprob: -9.260771751403809
    7. ' ' → logprob: -9.635771751403809
    8. '```' → logprob: -10.760771751403809
    9. '('' → logprob: -11.010771751403809
    10. '   ' → logprob: -11.760771751403809

Token 59: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.02798464335501194
    2. '()).' → logprob: -4.027984619140625
    3. '().' → logprob: -5.277984619140625
    4. '))' → logprob: -6.277984619140625
    5. ')' → logprob: -6.277984619140625
    6. '()))' → logprob: -7.902984619140625
    7. '())' → logprob: -7.902984619140625
    8. '()' → logprob: -9.277984619140625
    9. '.read' → logprob: -10.402984619140625
    10. 'read' → logprob: -10.402984619140625

Token 60: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -2.935296834039036e-06
    2. ')' → logprob: -13.12500286102295
    3. ' read' → logprob: -14.12500286102295
    4. '.read' → logprob: -16.875003814697266
    5. ' ' → logprob: -17.000003814697266
    6. '```' → logprob: -17.500003814697266
    7. '	read' → logprob: -18.500003814697266
    8. '.readlines' → logprob: -18.500003814697266
    9. ' readline' → logprob: -19.750003814697266
    10. '_read' → logprob: -20.000003814697266

Token 61: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0035498205106705427
    2. 'lines' → logprob: -6.003550052642822
    3. 'line' → logprob: -7.128550052642822
    4. '()' → logprob: -8.628549575805664
    5. ')' → logprob: -10.253549575805664
    6. '())' → logprob: -11.003549575805664
    7. '_lines' → logprob: -11.128549575805664
    8. '(' → logprob: -11.753549575805664
    9. 'li' → logprob: -12.378549575805664
    10. 'split' → logprob: -12.503549575805664

Token 62: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.004099654499441385
    2. 'strip' → logprob: -5.5040998458862305
    3. 'rstrip' → logprob: -11.12909984588623
    4. ' split' → logprob: -12.25409984588623
    5. 'read' → logprob: -14.25409984588623
    6. 'spl' → logprob: -14.87909984588623
    7. 'sp' → logprob: -15.00409984588623
    8. '```' → logprob: -15.87909984588623
    9. ')' → logprob: -16.004098892211914
    10. 's' → logprob: -16.004098892211914

Token 63: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.002790611470118165
    2. '()' → logprob: -6.252790451049805
    3. ')' → logprob: -7.627790451049805
    4. '()))' → logprob: -8.002790451049805
    5. '(' → logprob: -11.252790451049805
    6. '())
' → logprob: -11.752790451049805
    7. ' ())' → logprob: -11.877790451049805
    8. '))' → logprob: -12.002790451049805
    9. '(),' → logprob: -13.127790451049805
    10. '('' → logprob: -14.127790451049805

Token 64: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.040903184562921524
    2. '
' → logprob: -3.415903091430664
    3. '\n' → logprob: -5.790903091430664
    4. ' 
' → logprob: -6.040903091430664
    5. '

' → logprob: -7.290903091430664
    6. '  
' → logprob: -7.540903091430664
    7. '' → logprob: -8.165903091430664
    8. ' 

' → logprob: -9.540903091430664
    9. '\' → logprob: -10.040903091430664
    10. '<|end|>' → logprob: -10.165903091430664

Token 65: ' N' (ID: 478)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.411575436592102
    2. 'acc' → logprob: -1.661575436592102
    3. 's' → logprob: -2.0365753173828125
    4. 'A' → logprob: -2.1615753173828125
    5. 'prefix' → logprob: -2.1615753173828125
    6. 'dp' → logprob: -3.4115753173828125
    7. 'c' → logprob: -4.0365753173828125
    8. 'cum' → logprob: -4.0365753173828125
    9. 'result' → logprob: -4.2865753173828125
    10. ' A' → logprob: -4.6615753173828125

Token 66: ' :' (ID: 712)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: ' nombre' (ID: 9733)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.9859496355056763
    2. ' nombre' → logprob: -1.6109496355056763
    3. 'int' → logprob: -1.7359496355056763
    4. 'le' → logprob: -2.8609495162963867
    5. '#' → logprob: -2.9859495162963867
    6. ' int' → logprob: -2.9859495162963867
    7. 'nombre' → logprob: -2.9859495162963867
    8. 'Nombre' → logprob: -4.235949516296387
    9. ' la' → logprob: -4.860949516296387
    10. ' #' → logprob: -5.485949516296387

Token 68: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8473673462867737
    2. ' d' → logprob: -0.9723673462867737
    3. ' total' → logprob: -2.847367286682129
    4. 'de' → logprob: -2.972367286682129
    5. 'total' → logprob: -3.347367286682129
    6. 'd' → logprob: -3.597367286682129
    7. 's' → logprob: -4.597367286682129
    8. ' des' → logprob: -6.222367286682129
    9. '_total' → logprob: -6.347367286682129
    10. ' ' → logprob: -6.347367286682129

Token 69: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1344587206840515
    2. ''é' → logprob: -2.5094587802886963
    3. 'élé' → logprob: -4.134458541870117
    4. ''él' → logprob: -5.134458541870117
    5. ''e' → logprob: -5.634458541870117
    6. ''ent' → logprob: -5.634458541870117
    7. 'é' → logprob: -5.884458541870117
    8. 'e' → logprob: -5.884458541870117
    9. ''esp' → logprob: -6.384458541870117
    10. ''éc' → logprob: -7.009458541870117

Token 70: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.01571066491305828
    2. 'él' → logprob: -5.515710830688477
    3. 'é' → logprob: -5.640710830688477
    4. ''' → logprob: -6.765710830688477
    5. 'obj' → logprob: -6.890710830688477
    6. 'articles' → logprob: -7.015710830688477
    7. 'elements' → logprob: -7.390710830688477
    8. 'jours' → logprob: -7.390710830688477
    9. ''él' → logprob: -7.640710830688477
    10. 'éc' → logprob: -8.265710830688477

Token 71: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.002217818982899189
    2. 'ment' → logprob: -6.877217769622803
    3. 'éments' → logprob: -7.002217769622803
    4. 'm' → logprob: -8.877218246459961
    5. 'mé' → logprob: -9.502218246459961
    6. 'ements' → logprob: -11.002218246459961
    7. '```' → logprob: -11.252218246459961
    8. 'ément' → logprob: -11.377218246459961
    9. 'MENTS' → logprob: -13.127218246459961
    10. ' ' → logprob: -13.252218246459961

Token 72: ' du' (ID: 1462)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: ' tableau' (ID: 67053)
  Prédit: ' tableau'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tableau' → logprob: -0.4133291244506836
    2. 'table' → logprob: -1.1633291244506836
    3. 'liste' → logprob: -4.788329124450684
    4. 'A' → logprob: -5.413329124450684
    5. ' table' → logprob: -5.413329124450684
    6. 'la' → logprob: -6.788329124450684
    7. 't' → logprob: -7.163329124450684
    8. 'a' → logprob: -7.163329124450684
    9. 'list' → logprob: -7.163329124450684
    10. ' ' → logprob: -7.288329124450684

Token 74: ' A' (ID: 355)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.030073268339037895
    2. ',' → logprob: -5.030073165893555
    3. '#' → logprob: -5.280073165893555
    4. 'A' → logprob: -5.405073165893555
    5. '
' → logprob: -5.905073165893555
    6. '<|end|>' → logprob: -6.030073165893555
    7. '  
' → logprob: -6.155073165893555
    8. '```' → logprob: -6.655073165893555
    9. 's' → logprob: -7.030073165893555
    10. '\n' → logprob: -7.155073165893555

Token 75: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.023955246433615685
    2. '<|end|>' → logprob: -4.523955345153809
    3. '
' → logprob: -5.898955345153809
    4. '#' → logprob: -6.023955345153809
    5. ' 
' → logprob: -6.523955345153809
    6. '\n' → logprob: -6.773955345153809
    7. '  
' → logprob: -7.023955345153809
    8. '

' → logprob: -7.148955345153809
    9. ',' → logprob: -7.273955345153809
    10. ' ' → logprob: -7.273955345153809

Token 76: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5929917097091675
    2. '
' → logprob: -1.3429917097091675
    3. 'K' → logprob: -2.092991828918457
    4. ',' → logprob: -3.092991828918457
    5. ' ' → logprob: -5.592991828918457
    6. '```' → logprob: -5.967991828918457
    7. '<|end|>' → logprob: -6.092991828918457
    8. ' #' → logprob: -6.217991828918457
    9. 'A' → logprob: -6.967991828918457
    10. '  
' → logprob: -7.217991828918457

Token 77: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.4304234981536865
    2. ' K' → logprob: -1.1804234981536865
    3. ' A' → logprob: -4.055423736572266
    4. 'A' → logprob: -4.305423736572266
    5. '#' → logprob: -4.930423736572266
    6. ' #' → logprob: -6.055423736572266
    7. 'k' → logprob: -8.555423736572266
    8. '
' → logprob: -8.617923736572266
    9. '```' → logprob: -8.617923736572266
    10. ' ' → logprob: -8.867923736572266

Token 78: ' :' (ID: 712)
  Prédit: ' :'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.07582128793001175
    2. ' =' → logprob: -3.0758213996887207
    3. ':' → logprob: -4.200821399688721
    4. ' ' → logprob: -4.700821399688721
    5. '=' → logprob: -6.325821399688721
    6. ',' → logprob: -7.575821399688721
    7. ' est' → logprob: -8.700820922851562
    8. ' ,' → logprob: -9.200820922851562
    9. ' >' → logprob: -10.200820922851562
    10. '  ' → logprob: -10.950820922851562

Token 79: ' nombre' (ID: 9733)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.9810293912887573
    2. ' la' → logprob: -1.8560293912887573
    3. 'le' → logprob: -2.106029510498047
    4. 'l' → logprob: -2.231029510498047
    5. 'val' → logprob: -2.481029510498047
    6. 'nombre' → logprob: -2.981029510498047
    7. 's' → logprob: -3.606029510498047
    8. ' nombre' → logprob: -4.356029510498047
    9. ' l' → logprob: -4.356029510498047
    10. ' le' → logprob: -4.481029510498047

Token 80: ' maximum' (ID: 10562)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3349727988243103
    2. 'd' → logprob: -1.459972858428955
    3. ' de' → logprob: -3.334972858428955
    4. 'de' → logprob: -5.084972858428955
    5. ' ' → logprob: -5.584972858428955
    6. '<|end|>' → logprob: -5.584972858428955
    7. 's' → logprob: -6.959972858428955
    8. ' des' → logprob: -7.459972858428955
    9. '<|end|>' → logprob: -7.834972858428955
    10. 'des' → logprob: -8.709972381591797

Token 81: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.1823458969593048
    2. 'd' → logprob: -2.4323458671569824
    3. '<|end|>' → logprob: -3.3073458671569824
    4. ' de' → logprob: -3.4323458671569824
    5. 'de' → logprob: -4.932345867156982
    6. ' ' → logprob: -6.557345867156982
    7. 's' → logprob: -7.432345867156982
    8. '<|end|>' → logprob: -7.682345867156982
    9. ' des' → logprob: -10.05734634399414
    10. '  ' → logprob: -10.05734634399414

Token 82: ' modifications' (ID: 38756)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.3012103736400604
    2. ' éléments' → logprob: -2.051210403442383
    3. 's' → logprob: -3.426210403442383
    4. ' ' → logprob: -4.176210403442383
    5. 'l' → logprob: -4.676210403442383
    6. ' l' → logprob: -4.801210403442383
    7. 'segments' → logprob: -4.801210403442383
    8. '0' → logprob: -5.051210403442383
    9. ' sous' → logprob: -5.363710403442383
    10. 'sé' → logprob: -5.426210403442383

Token 83: ' autor' (ID: 13432)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.013065522536635399
    2. '
' → logprob: -5.388065338134766
    3. ' 
' → logprob: -6.263065338134766
    4. '\n' → logprob: -6.513065338134766
    5. '

' → logprob: -6.888065338134766
    6. '' → logprob: -7.263065338134766
    7. '<|end|>' → logprob: -7.263065338134766
    8. '#' → logprob: -7.513065338134766
    9. 's' → logprob: -7.763065338134766
    10. '  
' → logprob: -8.138065338134766

Token 84: 'isées' (ID: 108324)
  Prédit: 'isées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isées' → logprob: -0.02652101032435894
    2. 'ées' → logprob: -3.6515209674835205
    3. 'isé' → logprob: -9.526520729064941
    4. 'isés' → logprob: -9.901520729064941
    5. 'nées' → logprob: -9.901520729064941
    6. 'isée' → logprob: -11.401520729064941
    7. 'és' → logprob: -11.526520729064941
    8. 'érées' → logprob: -11.526520729064941
    9. 'is' → logprob: -11.901520729064941
    10. 'es' → logprob: -12.401520729064941

Token 85: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.022952858358621597
    2. '
' → logprob: -4.772953033447266
    3. '<|end|>' → logprob: -5.022953033447266
    4. ' 
' → logprob: -6.022953033447266
    5. '

' → logprob: -6.022953033447266
    6. '\n' → logprob: -6.897953033447266
    7. '' → logprob: -7.772953033447266
    8. '  
' → logprob: -8.147953033447266
    9. ',' → logprob: -8.647953033447266
    10. ' ' → logprob: -8.897953033447266

Token 86: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.021153083071112633
    2. '\n' → logprob: -5.146152973175049
    3. '
' → logprob: -5.771152973175049
    4. '<|end|>' → logprob: -5.896152973175049
    5. ' 
' → logprob: -6.646152973175049
    6. '#' → logprob: -6.771152973175049
    7. 's' → logprob: -6.896152973175049
    8. '\' → logprob: -7.021152973175049
    9. '' → logprob: -7.146152973175049
    10. '

' → logprob: -7.396152973175049

Token 87: ' A' (ID: 355)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.8678926229476929
    2. ' A' → logprob: -1.8678926229476929
    3. 'A' → logprob: -2.2428927421569824
    4. 'dp' → logprob: -2.2428927421569824
    5. 'prefix' → logprob: -2.3678927421569824
    6. ' prefix' → logprob: -2.7428927421569824
    7. ' dp' → logprob: -3.2428927421569824
    8. ' #' → logprob: -3.4928927421569824
    9. 'def' → logprob: -3.6178927421569824
    10. ' cumulative' → logprob: -3.8678927421569824

Token 88: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15355142951011658
    2. '=' → logprob: -2.0285513401031494
    3. '<|end|>' → logprob: -4.7785515785217285
    4. '#' → logprob: -7.5285515785217285
    5. '<|end|>' → logprob: -7.9035515785217285
    6. ':' → logprob: -8.40355110168457
    7. '=[]' → logprob: -8.40355110168457
    8. ',' → logprob: -8.65355110168457
    9. '[' → logprob: -8.77855110168457
    10. ')' → logprob: -9.02855110168457

Token 89: ' tableau' (ID: 67053)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.24295000731945038
    2. ' list' → logprob: -2.617949962615967
    3. 'la' → logprob: -3.492949962615967
    4. 'list' → logprob: -3.617949962615967
    5. ' le' → logprob: -3.742949962615967
    6. ' liste' → logprob: -3.992949962615967
    7. 'liste' → logprob: -4.992949962615967
    8. ' ' → logprob: -5.117949962615967
    9. 'le' → logprob: -5.117949962615967
    10. 'l' → logprob: -5.242949962615967

Token 90: ' des' (ID: 731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: ' ent' (ID: 1121)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.05947330966591835
    2. ' éléments' → logprob: -3.0594732761383057
    3. ' valeurs' → logprob: -5.059473514556885
    4. 'val' → logprob: -6.559473514556885
    5. 'scores' → logprob: -7.559473514556885
    6. ' longue' → logprob: -7.809473514556885
    7. 'é' → logprob: -7.934473514556885
    8. ' scores' → logprob: -7.934473514556885
    9. ' nombres' → logprob: -8.184473037719727
    10. 'ent' → logprob: -8.934473037719727

Token 92: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.004703880287706852
    2. 'i' → logprob: -5.754703998565674
    3. 'ières' → logprob: -6.504703998565674
    4. 'ié' → logprob: -10.879703521728516
    5. 'ier' → logprob: -12.504703521728516
    6. ' i' → logprob: -13.629703521728516
    7. 'ri' → logprob: -14.254703521728516
    8. 'í' → logprob: -14.254703521728516
    9. 'ités' → logprob: -14.754703521728516
    10. 'î' → logprob: -14.754703521728516

Token 93: ' ;' (ID: 4605)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.008224117569625378
    2. ' 
' → logprob: -5.883224010467529
    3. '
' → logprob: -5.883224010467529
    4. '

' → logprob: -6.883224010467529
    5. '<|end|>' → logprob: -6.883224010467529
    6. '  
' → logprob: -8.508224487304688
    7. '\n' → logprob: -8.883224487304688
    8. '' → logprob: -9.758224487304688
    9. '\' → logprob: -10.383224487304688
    10. ' 

' → logprob: -10.758224487304688

Token 94: ' le' (ID: 505)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -1.5679365396499634
    2. ' ' → logprob: -1.6929365396499634
    3. ' prefix' → logprob: -1.8179365396499634
    4. '#' → logprob: -2.192936420440674
    5. 's' → logprob: -2.942936420440674
    6. ')' → logprob: -2.942936420440674
    7. '
' → logprob: -3.692936420440674
    8. ' #' → logprob: -3.692936420440674
    9. ' cumulative' → logprob: -3.692936420440674
    10. 'acc' → logprob: -4.567936420440674

Token 95: ' *' (ID: 425)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1126298904418945
    2. 'élé' → logprob: -2.1126298904418945
    3. ' code' → logprob: -2.7376298904418945
    4. 'a' → logprob: -2.8626298904418945
    5. ' reste' → logprob: -2.9876298904418945
    6. ' nombre' → logprob: -3.2376298904418945
    7. '_' → logprob: -3.3626298904418945
    8. ' plus' → logprob: -3.9876298904418945
    9. ' éléments' → logprob: -3.9876298904418945
    10. '#' → logprob: -4.1126298904418945

Token 96: ' signifie' (ID: 81149)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ind' → logprob: -1.4151670932769775
    2. 'car' → logprob: -1.7901670932769775
    3. 's' → logprob: -2.1651670932769775
    4. '*' → logprob: -2.2901670932769775
    5. ' permet' → logprob: -2.7901670932769775
    6. 'per' → logprob: -2.9151670932769775
    7. 'A' → logprob: -3.7901670932769775
    8. ' indique' → logprob: -3.7901670932769775
    9. 'reste' → logprob: -4.040166854858398
    10. ' représente' → logprob: -4.040166854858398

Token 97: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.6397837996482849
    2. 'une' → logprob: -2.1397838592529297
    3. ' que' → logprob: -2.3897838592529297
    4. 'l' → logprob: -2.6397838592529297
    5. 'le' → logprob: -3.2647838592529297
    6. 'qu' → logprob: -3.2647838592529297
    7. 'la' → logprob: -3.3897838592529297
    8. ' qu' → logprob: -3.7647838592529297
    9. 't' → logprob: -4.51478385925293
    10. ' la' → logprob: -4.76478385925293

Token 98: ' tout' (ID: 5501)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6443957090377808
    2. 'les' → logprob: -1.7693957090377808
    3. 't' → logprob: -2.1443958282470703
    4. 'on' → logprob: -2.6443958282470703
    5. 'le' → logprob: -3.3943958282470703
    6. 'la' → logprob: -3.6443958282470703
    7. 'tout' → logprob: -4.51939582824707
    8. ' les' → logprob: -4.76939582824707
    9. ' A' → logprob: -4.89439582824707
    10. ' on' → logprob: -5.01939582824707

Token 99: ' ce' (ID: 2357)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.562201201915741
    2. ' le' → logprob: -1.3122012615203857
    3. 'le' → logprob: -2.8122012615203857
    4. ' les' → logprob: -3.0622012615203857
    5. 'les' → logprob: -4.187201023101807
    6. ' reste' → logprob: -4.437201023101807
    7. 'reste' → logprob: -5.062201023101807
    8. 'l' → logprob: -5.312201023101807
    9. 'rest' → logprob: -5.937201023101807
    10. '<|end|>' → logprob: -6.062201023101807

Token 100: ' qui' (ID: 2780)
  Prédit: 'qui'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qui' → logprob: -0.6661057472229004
    2. ' qui' → logprob: -0.9161057472229004
    3. 'reste' → logprob: -2.7911057472229004
    4. 's' → logprob: -4.4161057472229
    5. ' reste' → logprob: -5.4161057472229
    6. 'rest' → logprob: -5.9161057472229
    7. 'que' → logprob: -6.5411057472229
    8. 'r' → logprob: -6.7911057472229
    9. 'ux' → logprob: -7.4161057472229
    10. 'n' → logprob: -8.291105270385742

Token 101: ' reste' (ID: 26769)
  Prédit: 'reste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reste' → logprob: -0.4544212222099304
    2. 'n' → logprob: -1.0794212818145752
    3. ' n' → logprob: -4.829421043395996
    4. 'ap' → logprob: -5.329421043395996
    5. 's' → logprob: -5.704421043395996
    6. 'su' → logprob: -5.829421043395996
    7. ' reste' → logprob: -6.454421043395996
    8. 'rest' → logprob: -6.704421043395996
    9. 'vient' → logprob: -6.829421043395996
    10. '#' → logprob: -7.579421043395996

Token 102: ' après' (ID: 16460)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.743751049041748
    2. ' est' → logprob: -1.618751049041748
    3. ' après' → logprob: -2.118751049041748
    4. 'est' → logprob: -2.493751049041748
    5. 's' → logprob: -2.993751049041748
    6. 'A' → logprob: -4.493751049041748
    7. 'au' → logprob: -4.493751049041748
    8. 'des' → logprob: -4.618751049041748
    9. ' au' → logprob: -5.368751049041748
    10. 'after' → logprob: -5.493751049041748

Token 103: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.014397254213690758
    2. ' N' → logprob: -5.264397144317627
    3. 'K' → logprob: -5.389397144317627
    4. 'la' → logprob: -6.639397144317627
    5. 'A' → logprob: -7.014397144317627
    6. ' la' → logprob: -7.264397144317627
    7. '<|end|>' → logprob: -7.389397144317627
    8. 'l' → logprob: -8.139397621154785
    9. 'len' → logprob: -8.764397621154785
    10. ' ' → logprob: -9.514397621154785

Token 104: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.504667341709137
    2. 'est' → logprob: -2.004667282104492
    3. ' est' → logprob: -2.129667282104492
    4. 'n' → logprob: -3.629667282104492
    5. 'len' → logprob: -3.629667282104492
    6. 'A' → logprob: -4.129667282104492
    7. 'et' → logprob: -4.504667282104492
    8. 'N' → logprob: -4.504667282104492
    9. ' ,' → logprob: -4.754667282104492
    10. '```' → logprob: -5.629667282104492

Token 105: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.000204851632588543
    2. ' K' → logprob: -8.500205039978027
    3. ' ' → logprob: -14.625205039978027
    4. 'N' → logprob: -14.625205039978027
    5. 'A' → logprob: -14.875205039978027
    6. '#' → logprob: -16.75020408630371
    7. '```' → logprob: -17.50020408630371
    8. '<K' → logprob: -17.62520408630371
    9. '>K' → logprob: -18.00020408630371
    10. 'l' → logprob: -18.00020408630371

Token 106: ' va' (ID: 3423)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.16831083595752716
    2. 's' → logprob: -2.0433108806610107
    3. ' est' → logprob: -3.9183108806610107
    4. '<|end|>' → logprob: -5.793310642242432
    5. 'ser' → logprob: -7.418310642242432
    6. 'vient' → logprob: -8.04331111907959
    7. '...' → logprob: -8.16831111907959
    8. 'sert' → logprob: -8.29331111907959
    9. 'a' → logprob: -8.91831111907959
    10. 'reste' → logprob: -9.04331111907959

Token 107: ' dans' (ID: 2671)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.09388479590415955
    2. ' être' → logprob: -2.7188847064971924
    3. 'venir' → logprob: -4.4688849449157715
    4. 'êtres' → logprob: -5.8438849449157715
    5. 'contin' → logprob: -6.2188849449157715
    6. 'etre' → logprob: -6.5938849449157715
    7. 'dans' → logprob: -7.3438849449157715
    8. ''être' → logprob: -7.7188849449157715
    9. ' ' → logprob: -7.7188849449157715
    10. 'aller' → logprob: -7.8438849449157715

Token 108: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0003382038848940283
    2. ' A' → logprob: -8.000338554382324
    3. 'a' → logprob: -13.875338554382324
    4. '`' → logprob: -14.625338554382324
    5. ' la' → logprob: -15.000338554382324
    6. 'la' → logprob: -15.250338554382324
    7. ' ' → logprob: -15.250338554382324
    8. '_A' → logprob: -16.500337600708008
    9. 'variable' → logprob: -16.625337600708008
    10. 'l' → logprob: -16.875337600708008

Token 109: ' liste' (ID: 31719)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00020342117932159454
    2. 'variable' → logprob: -9.000203132629395
    3. 'liste' → logprob: -10.375203132629395
    4. ' A' → logprob: -10.500203132629395
    5. 'list' → logprob: -11.375203132629395
    6. ' tableau' → logprob: -13.375203132629395
    7. 'a' → logprob: -13.500203132629395
    8. 'variables' → logprob: -13.750203132629395
    9. '```' → logprob: -13.750203132629395
    10. 'table' → logprob: -14.375203132629395

Token 110: ' A' (ID: 355)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04815814644098282
    2. '
' → logprob: -4.673158168792725
    3. '\n' → logprob: -5.423158168792725
    4. '#' → logprob: -5.423158168792725
    5. 'prefix' → logprob: -5.423158168792725
    6. 's' → logprob: -5.548158168792725
    7. '

' → logprob: -6.048158168792725
    8. '\' → logprob: -6.048158168792725
    9. 'dp' → logprob: -6.048158168792725
    10. 'acc' → logprob: -6.548158168792725

Token 111: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006861839443445206
    2. '
' → logprob: -5.381861686706543
    3. '

' → logprob: -7.256861686706543
    4. '#' → logprob: -8.006861686706543
    5. 'def' → logprob: -8.381861686706543
    6. 's' → logprob: -8.756861686706543
    7. 'prefix' → logprob: -9.131861686706543
    8. 'dp' → logprob: -9.381861686706543
    9. '' → logprob: -9.506861686706543
    10. ' 
' → logprob: -9.506861686706543

Token 112: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41776013374328613
    2. 'dp' → logprob: -2.292760133743286
    3. 'prefix' → logprob: -2.417760133743286
    4. '#' → logprob: -3.042760133743286
    5. 'c' → logprob: -4.542759895324707
    6. '

' → logprob: -4.542759895324707
    7. 'acc' → logprob: -4.667759895324707
    8. 's' → logprob: -4.667759895324707
    9. 'cum' → logprob: -4.667759895324707
    10. '
' → logprob: -4.667759895324707

Token 113: ' check' (ID: 2371)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.0628441646695137
    2. 'max' → logprob: -3.5628442764282227
    3. ' solve' → logprob: -4.312844276428223
    4. ' can' → logprob: -5.562844276428223
    5. 'solve' → logprob: -6.062844276428223
    6. ' count' → logprob: -6.562844276428223
    7. ' possible' → logprob: -6.687844276428223
    8. ' maximum' → logprob: -6.812844276428223
    9. ' cumulative' → logprob: -6.937844276428223
    10. ' main' → logprob: -6.937844276428223

Token 114: '(d' (ID: 2572)
  Prédit: '(mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(mid' → logprob: -0.2981773018836975
    2. '(' → logprob: -2.0481772422790527
    3. '(x' → logprob: -2.2981772422790527
    4. '(m' → logprob: -4.298177242279053
    5. '(s' → logprob: -5.548177242279053
    6. '(k' → logprob: -5.673177242279053
    7. '(limit' → logprob: -6.548177242279053
    8. '(length' → logprob: -6.798177242279053
    9. '(max' → logprob: -6.923177242279053
    10. '(value' → logprob: -6.923177242279053

Token 115: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04838237911462784
    2. ')' → logprob: -3.42338228225708
    3. '(x' → logprob: -6.17338228225708
    4. 'ist' → logprob: -6.29838228225708
    5. 'iff' → logprob: -6.54838228225708
    6. '>=' → logprob: -6.67338228225708
    7. 'x' → logprob: -6.92338228225708
    8. 'ef' → logprob: -7.04838228225708
    9. 'e' → logprob: -7.17338228225708
    10. '(' → logprob: -7.67338228225708

Token 116: '   ' (ID: 271)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.6328597068786621
    2. ':' → logprob: -1.132859706878662
    3. '(' → logprob: -2.257859706878662
    4. '(N' → logprob: -4.007859706878662
    5. '   ' → logprob: -5.007859706878662
    6. '(n' → logprob: -5.507859706878662
    7. '(i' → logprob: -6.132859706878662
    8. '():' → logprob: -6.257859706878662
    9. '(M' → logprob: -6.882859706878662
    10. ' :' → logprob: -6.882859706878662

Token 117: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2929190397262573
    2. ' s' → logprob: -1.4179190397262573
    3. ' acc' → logprob: -1.5429190397262573
    4. 's' → logprob: -3.292919158935547
    5. ' prefix' → logprob: -3.292919158935547
    6. ' current' → logprob: -4.042919158935547
    7. 'acc' → logprob: -4.292919158935547
    8. ' cur' → logprob: -4.292919158935547
    9. ' max' → logprob: -4.417919158935547
    10. ' cum' → logprob: -4.792919158935547

Token 118: ' Cette' (ID: 27383)
  Prédit: ' acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' acc' → logprob: -1.1625624895095825
    2. ' s' → logprob: -1.6625624895095825
    3. 'acc' → logprob: -1.9125624895095825
    4. 's' → logprob: -3.287562370300293
    5. 'count' → logprob: -3.537562370300293
    6. ' for' → logprob: -3.537562370300293
    7. 'prefix' → logprob: -3.787562370300293
    8. ' prefix' → logprob: -3.912562370300293
    9. ' cnt' → logprob: -3.912562370300293
    10. ' count' → logprob: -3.912562370300293

Token 119: ' fonction' (ID: 17610)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25309205055236816
    2. ' fonction' → logprob: -2.378092050552368
    3. 'fonction' → logprob: -3.378092050552368
    4. ' function' → logprob: -3.753092050552368
    5. '   ' → logprob: -3.878092050552368
    6. ' ligne' → logprob: -4.378091812133789
    7. ' def' → logprob: -4.753091812133789
    8. ':' → logprob: -5.128091812133789
    9. 'function' → logprob: -6.003091812133789
    10. 'ligne' → logprob: -6.128091812133789

Token 120: ' retourne' (ID: 178818)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18195900321006775
    2. '   ' → logprob: -2.0569589138031006
    3. ' :' → logprob: -3.8069589138031006
    4. '    ' → logprob: -5.43195915222168
    5. '():' → logprob: -5.55695915222168
    6. '(' → logprob: -6.18195915222168
    7. 'def' → logprob: -6.80695915222168
    8. ':
' → logprob: -7.18195915222168
    9. ':return' → logprob: -7.80695915222168
    10. 'd' → logprob: -8.05695915222168

Token 121: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.2519476115703583
    2. 'True' → logprob: -1.5019476413726807
    3. '   ' → logprob: -12.251947402954102
    4. ' ' → logprob: -12.376947402954102
    5. ' False' → logprob: -12.751947402954102
    6. 'False' → logprob: -12.751947402954102
    7. '(True' → logprob: -13.251947402954102
    8. ' ' → logprob: -14.001947402954102
    9. '  ' → logprob: -14.501947402954102
    10. '    ' → logprob: -15.751947402954102

Token 122: ' si' (ID: 1784)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.31232693791389465
    2. ' True' → logprob: -2.4373269081115723
    3. ' d' → logprob: -2.6873269081115723
    4. '   ' → logprob: -3.3123269081115723
    5. ' for' → logprob: -3.8123269081115723
    6. ' ' → logprob: -4.312326908111572
    7. 'all' → logprob: -4.312326908111572
    8. '    ' → logprob: -5.312326908111572
    9. ' if' → logprob: -5.437326908111572
    10. ',' → logprob: -5.687326908111572

Token 123: ',' (ID: 11)
  Prédit: ' toutes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' toutes' → logprob: -0.7904489636421204
    2. ' on' → logprob: -1.2904489040374756
    3. ' all' → logprob: -1.7904489040374756
    4. ' il' → logprob: -3.2904489040374756
    5. 'd' → logprob: -4.915449142456055
    6. ' d' → logprob: -4.915449142456055
    7. ' tous' → logprob: -5.040449142456055
    8. 'all' → logprob: -5.165449142456055
    9. 'on' → logprob: -5.165449142456055
    10. ' toute' → logprob: -5.415449142456055

Token 124: ' en' (ID: 469)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.4257110357284546
    2. 'd' → logprob: -2.175711154937744
    3. '   ' → logprob: -2.425711154937744
    4. '```' → logprob: -2.925711154937744
    5. 'c' → logprob: -3.050711154937744
    6. ' il' → logprob: -3.425711154937744
    7. ' i' → logprob: -3.675711154937744
    8. ' la' → logprob: -3.800711154937744
    9. 'def' → logprob: -3.800711154937744
    10. 'acc' → logprob: -3.800711154937744

Token 125: ' utilisant' (ID: 92474)
  Prédit: ' faisant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faisant' → logprob: -0.9631302356719971
    2. ' effect' → logprob: -1.338130235671997
    3. ' utilisant' → logprob: -2.838130235671997
    4. ' réalis' → logprob: -3.088130235671997
    5. ' mod' → logprob: -3.088130235671997
    6. 'mod' → logprob: -3.213130235671997
    7. ' ajout' → logprob: -3.338130235671997
    8. ' range' → logprob: -4.213129997253418
    9. ' appli' → logprob: -4.213129997253418
    10. ' augment' → logprob: -4.213129997253418

Token 126: ' au' (ID: 2791)
  Prédit: ' au'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.7696598768234253
    2. 'd' → logprob: -1.0196598768234253
    3. 'au' → logprob: -3.144659996032715
    4. ' une' → logprob: -3.644659996032715
    5. ' K' → logprob: -3.894659996032715
    6. ' les' → logprob: -4.269659996032715
    7. 'K' → logprob: -4.269659996032715
    8. ' d' → logprob: -4.394659996032715
    9. 'k' → logprob: -5.144659996032715
    10. 'les' → logprob: -5.644659996032715

Token 127: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.1294177621603012
    2. 'moins' → logprob: -2.379417657852173
    3. ' plus' → logprob: -3.754417657852173
    4. '   ' → logprob: -6.129417896270752
    5. ' moins' → logprob: -6.754417896270752
    6. 'most' → logprob: -7.879417896270752
    7. '```' → logprob: -7.879417896270752
    8. ' ' → logprob: -7.879417896270752
    9. '  ' → logprob: -8.129417419433594
    10. 'maximum' → logprob: -8.754417419433594

Token 128: ' K' (ID: 658)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.31425347924232483
    2. ' d' → logprob: -1.3142534494400024
    3. ' K' → logprob: -7.439253330230713
    4. 'K' → logprob: -8.314253807067871
    5. ' ' → logprob: -9.564253807067871
    6. ' une' → logprob: -10.814253807067871
    7. '`' → logprob: -11.314253807067871
    8. ' `' → logprob: -11.439253807067871
    9. 'k' → logprob: -11.564253807067871
    10. ' ' → logprob: -12.064253807067871

Token 129: ' opérations' (ID: 102793)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.34404686093330383
    2. ' de' → logprob: -2.0940468311309814
    3. ' modifications' → logprob: -2.7190468311309814
    4. ' d' → logprob: -3.5940468311309814
    5. 'd' → logprob: -3.8440468311309814
    6. 'mod' → logprob: -3.9690468311309814
    7. 'des' → logprob: -4.0940470695495605
    8. 'de' → logprob: -4.4690470695495605
    9. ')' → logprob: -6.4690470695495605
    10. ' changements' → logprob: -7.3440470695495605

Token 130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0027479345444589853
    2. ' ,' → logprob: -6.127748012542725
    3. '(' → logprob: -8.877747535705566
    4. 'd' → logprob: -9.502747535705566
    5. ',d' → logprob: -9.752747535705566
    6. ' de' → logprob: -9.877747535705566
    7. 'de' → logprob: -10.377747535705566
    8. ' ' → logprob: -10.627747535705566
    9. ' d' → logprob: -10.627747535705566
    10. ' sur' → logprob: -10.877747535705566

Token 131: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.030264126136898994
    2. ' il' → logprob: -4.030263900756836
    3. 'on' → logprob: -5.530263900756836
    4. ' la' → logprob: -6.280263900756836
    5. ' c' → logprob: -7.030263900756836
    6. '   ' → logprob: -7.280263900756836
    7. ' ' → logprob: -7.530263900756836
    8. ' we' → logprob: -7.530263900756836
    9. ' le' → logprob: -7.780263900756836
    10. 'c' → logprob: -7.780263900756836

Token 132: ' peut' (ID: 9216)
  Prédit: ' peut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.1319323182106018
    2. 'pe' → logprob: -2.131932258605957
    3. ' peux' → logprob: -5.506932258605957
    4. ' can' → logprob: -8.631932258605957
    5. 'can' → logprob: -8.756932258605957
    6. '_pe' → logprob: -9.381932258605957
    7. ' ' → logprob: -9.381932258605957
    8. 'p' → logprob: -9.756932258605957
    9. ' pourra' → logprob: -9.881932258605957
    10. '_' → logprob: -10.006932258605957

Token 133: ' rendre' (ID: 44629)
  Prédit: ' augmenter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' augmenter' → logprob: -0.739240288734436
    2. 'augment' → logprob: -1.489240288734436
    3. ' garantir' → logprob: -1.989240288734436
    4. ' obtenir' → logprob: -2.8642401695251465
    5. ' rendre' → logprob: -3.7392401695251465
    6. 'aj' → logprob: -4.2392401695251465
    7. 'faire' → logprob: -4.6142401695251465
    8. ' s' → logprob: -4.9892401695251465
    9. ' faire' → logprob: -4.9892401695251465
    10. 'ob' → logprob: -5.1142401695251465

Token 134: ' tous' (ID: 10688)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8243376016616821
    2. ' toutes' → logprob: -1.3243376016616821
    3. ' tous' → logprob: -1.4493376016616821
    4. ' la' → logprob: -4.574337482452393
    5. ' chaque' → logprob: -4.699337482452393
    6. 'd' → logprob: -5.324337482452393
    7. 'la' → logprob: -5.324337482452393
    8. ' le' → logprob: -5.324337482452393
    9. 'le' → logprob: -5.449337482452393
    10. ' les' → logprob: -5.574337482452393

Token 135: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.20927993953227997
    2. 'les' → logprob: -1.7092798948287964
    3. 'A' → logprob: -5.709280014038086
    4. 'd' → logprob: -7.209280014038086
    5. 's' → logprob: -7.459280014038086
    6. ' A' → logprob: -7.459280014038086
    7. ' ' → logprob: -7.459280014038086
    8. 'sub' → logprob: -8.459280014038086
    9. ' the' → logprob: -8.709280014038086
    10. '(A' → logprob: -8.709280014038086

Token 136: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.17060133814811707
    2. ' éléments' → logprob: -1.9206013679504395
    3. 'éc' → logprob: -4.9206013679504395
    4. 'A' → logprob: -6.9206013679504395
    5. 'diff' → logprob: -7.0456013679504395
    6. ' A' → logprob: -8.170600891113281
    7. 'd' → logprob: -8.295600891113281
    8. ' elements' → logprob: -9.295600891113281
    9. 'elements' → logprob: -9.295600891113281
    10. ' é' → logprob: -9.420600891113281

Token 137: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.879814624786377
    2. ' du' → logprob: -1.879814624786377
    3. '>=' → logprob: -2.504814624786377
    4. ' d' → logprob: -2.504814624786377
    5. ' >=' → logprob: -2.504814624786377
    6. ' sup' → logprob: -3.004814624786377
    7. 'd' → logprob: -3.254814624786377
    8. '   ' → logprob: -3.754814624786377
    9. ' ' → logprob: -4.129814624786377
    10. ' A' → logprob: -4.254814624786377

Token 138: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1003800630569458
    2. ' A' → logprob: -2.3503799438476562
    3. 'l' → logprob: -9.350379943847656
    4. 'a' → logprob: -10.475379943847656
    5. ' la' → logprob: -11.100379943847656
    6. ' ' → logprob: -11.725379943847656
    7. '`' → logprob: -12.225379943847656
    8. '#' → logprob: -12.475379943847656
    9. ' l' → logprob: -12.475379943847656
    10. 'd' → logprob: -12.725379943847656

Token 139: ' divis' (ID: 37826)
  Prédit: ' au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' au' → logprob: -1.0535497665405273
    2. '>=' → logprob: -1.3035497665405273
    3. 'sup' → logprob: -2.0535497665405273
    4. ' sup' → logprob: -2.4285497665405273
    5. ' >=' → logprob: -2.6785497665405273
    6. '>' → logprob: -4.178549766540527
    7. ' plus' → logprob: -4.303549766540527
    8. 'au' → logprob: -4.428549766540527
    9. ' ' → logprob: -4.428549766540527
    10. ' d' → logprob: -4.803549766540527

Token 140: 'ibles' (ID: 12234)
  Prédit: 'ibles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ibles' → logprob: -0.14334292709827423
    2. 'ible' → logprob: -2.018342971801758
    3. 'isible' → logprob: -8.768342971801758
    4. '```' → logprob: -9.268342971801758
    5. 'es' → logprob: -9.393342971801758
    6. 'ables' → logprob: -9.643342971801758
    7. 'ib' → logprob: -9.893342971801758
    8. 'bles' → logprob: -10.018342971801758
    9. 'i' → logprob: -10.768342971801758
    10. 'e' → logprob: -10.768342971801758

Token 141: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.7071083784103394
    2. 'par' → logprob: -0.7071083784103394
    3. 'd' → logprob: -5.457108497619629
    4. 'by' → logprob: -5.707108497619629
    5. ' by' → logprob: -6.332108497619629
    6. '(d' → logprob: -7.332108497619629
    7. '   ' → logprob: -7.332108497619629
    8. ' d' → logprob: -7.707108497619629
    9. 'def' → logprob: -7.832108497619629
    10. '_par' → logprob: -7.832108497619629

Token 142: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.34864339232444763
    2. 'd' → logprob: -1.22364342212677
    3. ' ' → logprob: -9.59864330291748
    4. ' (' → logprob: -9.84864330291748
    5. ' ' → logprob: -9.97364330291748
    6. '(d' → logprob: -11.09864330291748
    7. '(' → logprob: -11.72364330291748
    8. '
' → logprob: -13.22364330291748
    9. '	d' → logprob: -13.84864330291748
    10. '```' → logprob: -14.78614330291748

Token 143: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9350000023841858
    2. '.' → logprob: -1.184999942779541
    3. '):' → logprob: -2.184999942779541
    4. ',' → logprob: -2.684999942779541
    5. ':' → logprob: -3.059999942779541
    6. 'def' → logprob: -3.684999942779541
    7. '   ' → logprob: -4.184999942779541
    8. ').' → logprob: -5.059999942779541
    9. ' ' → logprob: -5.184999942779541
    10. '(' → logprob: -5.934999942779541

Token 144: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03056696616113186
    2. '   ' → logprob: -3.905566930770874
    3. ':
' → logprob: -5.530567169189453
    4. '):' → logprob: -5.905567169189453
    5. ' :' → logprob: -6.030567169189453
    6. ',' → logprob: -7.530567169189453
    7. '():' → logprob: -9.530567169189453
    8. ' :
' → logprob: -9.530567169189453
    9. ')' → logprob: -9.905567169189453
    10. '):
' → logprob: -10.280567169189453

Token 145: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13543447852134705
    2. ':' → logprob: -2.51043438911438
    3. ':
' → logprob: -3.63543438911438
    4. 's' → logprob: -6.010434627532959
    5. 'count' → logprob: -6.135434627532959
    6. 'cnt' → logprob: -6.135434627532959
    7. ' :' → logprob: -6.385434627532959
    8. '
' → logprob: -6.760434627532959
    9. ' :
' → logprob: -6.760434627532959
    10. '```' → logprob: -6.885434627532959

Token 146: ' Elle' (ID: 21300)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.7280994057655334
    2. '   ' → logprob: -2.1030993461608887
    3. 'cnt' → logprob: -2.2280993461608887
    4. ' count' → logprob: -2.6030993461608887
    5. 'ops' → logprob: -2.6030993461608887
    6. 'mod' → logprob: -3.7280993461608887
    7. ' cnt' → logprob: -3.9780993461608887
    8. 'c' → logprob: -4.603099346160889
    9. ' ops' → logprob: -4.853099346160889
    10. 'needed' → logprob: -5.103099346160889

Token 147: ' vér' (ID: 42524)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.051942229270935
    2. ' =' → logprob: -1.176942229270935
    3. ':' → logprob: -1.551942229270935
    4. '=' → logprob: -2.4269423484802246
    5. 'def' → logprob: -4.301942348480225
    6. ' :' → logprob: -5.301942348480225
    7. ' retourne' → logprob: -5.301942348480225
    8. ' prend' → logprob: -5.676942348480225
    9. ' permet' → logprob: -6.426942348480225
    10. ' return' → logprob: -6.551942348480225

Token 148: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.00024132427643053234
    2. 'ite' → logprob: -8.50024127960205
    3. 'ifié' → logprob: -11.50024127960205
    4. 'ife' → logprob: -11.62524127960205
    5. 'ifi' → logprob: -12.50024127960205
    6. 'ifiez' → logprob: -12.75024127960205
    7. 'e' → logprob: -12.75024127960205
    8. 'if' → logprob: -13.12524127960205
    9. '#' → logprob: -13.87524127960205
    10. 'ifiée' → logprob: -14.00024127960205

Token 149: ' cela' (ID: 17542)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.05166182667016983
    2. ' si' → logprob: -3.801661729812622
    3. '   ' → logprob: -4.301661968231201
    4. ' ' → logprob: -5.426661968231201
    5. 'if' → logprob: -5.676661968231201
    6. ' whether' → logprob: -6.426661968231201
    7. ' la' → logprob: -6.551661968231201
    8. ' que' → logprob: -7.426661968231201
    9. ' =' → logprob: -7.676661968231201
    10. ' for' → logprob: -8.176661491394043

Token 150: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48295652866363525
    2. ':' → logprob: -1.4829565286636353
    3. '=' → logprob: -2.4829564094543457
    4. ' =' → logprob: -2.8579564094543457
    5. 'def' → logprob: -5.732956409454346
    6. ':
' → logprob: -5.857956409454346
    7. ' par' → logprob: -7.107956409454346
    8. 'd' → logprob: -7.357956409454346
    9. ' for' → logprob: -7.357956409454346
    10. ',' → logprob: -7.357956409454346

Token 151: ' considér' (ID: 68502)
  Prédit: ' accum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' accum' → logprob: -0.6275902986526489
    2. 'calcul' → logprob: -1.127590298652649
    3. ' calcul' → logprob: -2.5025901794433594
    4. ' accumulating' → logprob: -3.6275901794433594
    5. ' accumulate' → logprob: -4.752590179443359
    6. 'acc' → logprob: -5.127590179443359
    7. ' acc' → logprob: -6.252590179443359
    8. ' calculating' → logprob: -6.252590179443359
    9. 'evalu' → logprob: -6.877590179443359
    10. 's' → logprob: -6.877590179443359

Token 152: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.004158887546509504
    2. 'e' → logprob: -6.254158973693848
    3. 'érant' → logprob: -7.004158973693848
    4. 't' → logprob: -7.629158973693848
    5. 'er' → logprob: -8.879158973693848
    6. 'd' → logprob: -9.129158973693848
    7. 'ent' → logprob: -9.254158973693848
    8. 'tant' → logprob: -9.629158973693848
    9. 'çant' → logprob: -9.629158973693848
    10. 'def' → logprob: -10.004158973693848

Token 153: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.07915988564491272
    2. ' la' → logprob: -3.32915997505188
    3. 'les' → logprob: -4.079159736633301
    4. ' deux' → logprob: -4.329159736633301
    5. ' des' → logprob: -6.079159736633301
    6. ' le' → logprob: -6.454159736633301
    7. ' ' → logprob: -6.454159736633301
    8. ' toutes' → logprob: -6.954159736633301
    9. ' l' → logprob: -7.454159736633301
    10. ' ' → logprob: -7.704159736633301

Token 154: ' rest' (ID: 2867)
  Prédit: ' re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' re' → logprob: -1.1072598695755005
    2. 'diff' → logprob: -2.357259750366211
    3. 'dif' → logprob: -2.482259750366211
    4. 'mod' → logprob: -2.607259750366211
    5. 'rema' → logprob: -2.732259750366211
    6. ' diff' → logprob: -3.357259750366211
    7. ' dif' → logprob: -3.482259750366211
    8. 're' → logprob: -3.857259750366211
    9. ' besoins' → logprob: -3.982259750366211
    10. 'increments' → logprob: -3.982259750366211

Token 155: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -3.8219583075260743e-05
    2. 'e' → logprob: -10.875038146972656
    3. 'd' → logprob: -11.250038146972656
    4. 's' → logprob: -13.125038146972656
    5. 'ants' → logprob: -13.375038146972656
    6. 'def' → logprob: -13.500038146972656
    7. 'ec' → logprob: -15.500038146972656
    8. 'a' → logprob: -16.125038146972656
    9. 'as' → logprob: -16.125038146972656
    10. ' d' → logprob: -16.250038146972656

Token 156: ' modulo' (ID: 112372)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017138548428192735
    2. 'def' → logprob: -7.501713752746582
    3. ':' → logprob: -8.001713752746582
    4. 's' → logprob: -8.876713752746582
    5. ' ' → logprob: -9.251713752746582
    6. ' =' → logprob: -9.626713752746582
    7. ' def' → logprob: -10.001713752746582
    8. ',' → logprob: -10.251713752746582
    9. ':
' → logprob: -10.501713752746582
    10. ' de' → logprob: -10.501713752746582

Token 157: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.16287517547607422
    2. ' d' → logprob: -1.9128751754760742
    3. '(d' → logprob: -6.162875175476074
    4. '   ' → logprob: -8.912875175476074
    5. '	d' → logprob: -9.537875175476074
    6. 'A' → logprob: -9.787875175476074
    7. '_d' → logprob: -10.162875175476074
    8. ' (' → logprob: -10.162875175476074
    9. ' ' → logprob: -10.287875175476074
    10. ',' → logprob: -10.287875175476074

Token 158: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26532796025276184
    2. ':' → logprob: -1.5153279304504395
    3. '():' → logprob: -5.2653279304504395
    4. ' :' → logprob: -6.1403279304504395
    5. 'def' → logprob: -6.2653279304504395
    6. ',' → logprob: -6.7653279304504395
    7. '):' → logprob: -7.1403279304504395
    8. ':
' → logprob: -7.3903279304504395
    9. '(' → logprob: -7.7653279304504395
    10. 'd' → logprob: -9.015328407287598

Token 159: ' chaque' (ID: 21194)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2882930338382721
    2. ' A' → logprob: -1.4132930040359497
    3. 'a' → logprob: -5.91329288482666
    4. 'x' → logprob: -6.03829288482666
    5. ' x' → logprob: -7.66329288482666
    6. ' a' → logprob: -7.66329288482666
    7. ' ' → logprob: -8.66329288482666
    8. 'l' → logprob: -8.78829288482666
    9. '[' → logprob: -8.78829288482666
    10. '[A' → logprob: -8.91329288482666

Token 160: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.6029179692268372
    2. ' élément' → logprob: -1.8529179096221924
    3. ' a' → logprob: -2.3529179096221924
    4. 'a' → logprob: -2.4779179096221924
    5. ' element' → logprob: -2.7279179096221924
    6. 'element' → logprob: -3.8529179096221924
    7. ' A' → logprob: -4.4779181480407715
    8. 'A' → logprob: -4.6029181480407715
    9. 'x' → logprob: -5.6029181480407715
    10. ' x' → logprob: -5.8529181480407715

Token 161: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023683900013566017
    2. '():' → logprob: -4.398684024810791
    3. ':' → logprob: -4.648684024810791
    4. '):' → logprob: -8.023683547973633
    5. 'def' → logprob: -8.148683547973633
    6. '():
' → logprob: -8.398683547973633
    7. ',' → logprob: -9.148683547973633
    8. '```' → logprob: -9.148683547973633
    9. ':
' → logprob: -9.273683547973633
    10. '):
' → logprob: -9.523683547973633

Token 162: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.16050316393375397
    2. ' A' → logprob: -1.9105031490325928
    3. ' ' → logprob: -8.660503387451172
    4. 'a' → logprob: -10.285503387451172
    5. 'd' → logprob: -10.910503387451172
    6. 'l' → logprob: -11.285503387451172
    7. ' ' → logprob: -12.348003387451172
    8. '`' → logprob: -12.598003387451172
    9. ' la' → logprob: -12.723003387451172
    10. 's' → logprob: -12.723003387451172

Token 163: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09177161008119583
    2. ':' → logprob: -2.4667716026306152
    3. ':
' → logprob: -6.466771602630615
    4. '():' → logprob: -7.716771602630615
    5. '):' → logprob: -8.841772079467773
    6. '):
' → logprob: -8.841772079467773
    7. '```' → logprob: -9.466772079467773
    8. 'def' → logprob: -9.591772079467773
    9. '():
' → logprob: -9.716772079467773
    10. ',' → logprob: -9.716772079467773

Token 164: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026579394470900297
    2. ':' → logprob: -6.127657890319824
    3. '```' → logprob: -8.752657890319824
    4. ':
' → logprob: -9.377657890319824
    5. '    
' → logprob: -9.627657890319824
    6. 'rest' → logprob: -10.252657890319824
    7. '
' → logprob: -10.502657890319824
    8. '(rest' → logprob: -11.002657890319824
    9. ' :' → logprob: -11.127657890319824
    10. '    ' → logprob: -11.877657890319824

Token 165: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9862642884254456
    2. 'r' → logprob: -1.7362642288208008
    3. 'mods' → logprob: -2.111264228820801
    4. 'rem' → logprob: -2.486264228820801
    5. 'mod' → logprob: -3.361264228820801
    6. 'B' → logprob: -3.361264228820801
    7. 'rema' → logprob: -3.361264228820801
    8. 're' → logprob: -4.111264228820801
    9. 'R' → logprob: -4.236264228820801
    10. 'rest' → logprob: -4.236264228820801

Token 166: ' Calcul' (ID: 57243)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.5458636283874512
    2. 'mods' → logprob: -1.7958636283874512
    3. 'rema' → logprob: -2.045863628387451
    4. 'mod' → logprob: -2.545863628387451
    5. 'rem' → logprob: -2.545863628387451
    6. ' re' → logprob: -2.795863628387451
    7. 'prefix' → logprob: -3.045863628387451
    8. 're' → logprob: -3.045863628387451
    9. '   ' → logprob: -3.670863628387451
    10. 'res' → logprob: -3.670863628387451

Token 167: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020644081756472588
    2. ' des' → logprob: -4.270644187927246
    3. 's' → logprob: -6.895644187927246
    4. ' of' → logprob: -6.895644187927246
    5. 'ation' → logprob: -7.145644187927246
    6. 'er' → logprob: -7.395644187927246
    7. ' de' → logprob: -7.520644187927246
    8. 'mod' → logprob: -8.145644187927246
    9. '
' → logprob: -8.270644187927246
    10. 'r' → logprob: -8.520644187927246

Token 168: ' reste' (ID: 26769)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -1.056087613105774
    2. 'rema' → logprob: -1.556087613105774
    3. 'r' → logprob: -1.931087613105774
    4. 'mod' → logprob: -2.0560874938964844
    5. 'res' → logprob: -3.0560874938964844
    6. 'reste' → logprob: -3.1810874938964844
    7. 're' → logprob: -3.9310874938964844
    8. 'rests' → logprob: -4.056087493896484
    9. 'mods' → logprob: -4.556087493896484
    10. 'rem' → logprob: -4.556087493896484

Token 169: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03557924926280975
    2. ' =' → logprob: -3.410579204559326
    3. ' s' → logprob: -6.910579204559326
    4. '=' → logprob: -7.910579204559326
    5. '   ' → logprob: -8.160579681396484
    6. 'mod' → logprob: -9.660579681396484
    7. ' des' → logprob: -10.535579681396484
    8. ' ' → logprob: -10.660579681396484
    9. '_mod' → logprob: -10.910579681396484
    10. 'A' → logprob: -10.910579681396484

Token 170: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.8667544722557068
    2. ' a' → logprob: -0.9917544722557068
    3. 'a' → logprob: -1.8667545318603516
    4. ' each' → logprob: -3.7417545318603516
    5. ' A' → logprob: -5.241754531860352
    6. 'ch' → logprob: -5.616754531860352
    7. 'A' → logprob: -5.741754531860352
    8. ' x' → logprob: -5.741754531860352
    9. 'each' → logprob: -6.241754531860352
    10. ' l' → logprob: -6.491754531860352

Token 171: ' élément' (ID: 99627)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6657466292381287
    2. 'x' → logprob: -1.2907466888427734
    3. ' a' → logprob: -2.0407466888427734
    4. ' x' → logprob: -2.9157466888427734
    5. 'élé' → logprob: -4.915746688842773
    6. 'element' → logprob: -5.040746688842773
    7. ' élément' → logprob: -5.415746688842773
    8. ' element' → logprob: -5.665746688842773
    9. 'A' → logprob: -6.290746688842773
    10. 'elem' → logprob: -6.790746688842773

Token 172: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18030013144016266
    2. 's' → logprob: -3.180300235748291
    3. ' =' → logprob: -3.430300235748291
    4. ' modulo' → logprob: -3.555300235748291
    5. ' s' → logprob: -4.680300235748291
    6. ' des' → logprob: -4.805300235748291
    7. '[' → logprob: -5.180300235748291
    8. 'A' → logprob: -5.305300235748291
    9. 'mod' → logprob: -5.305300235748291
    10. ' A' → logprob: -5.305300235748291

Token 173: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4122069776058197
    2. ' A' → logprob: -1.162207007408142
    3. 'd' → logprob: -4.287207126617432
    4. 'a' → logprob: -4.912207126617432
    5. ' d' → logprob: -6.287207126617432
    6. ' a' → logprob: -6.912207126617432
    7. 'div' → logprob: -7.662207126617432
    8. ' ' → logprob: -8.162206649780273
    9. ' la' → logprob: -8.787206649780273
    10. ' modulo' → logprob: -10.912206649780273

Token 174: ' lorsqu' (ID: 57416)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1075819581747055
    2. 'r' → logprob: -3.107581853866577
    3. ' r' → logprob: -3.107581853866577
    4. ',' → logprob: -5.857582092285156
    5. ' =' → logprob: -6.607582092285156
    6. ' mod' → logprob: -6.732582092285156
    7. 'R' → logprob: -6.857582092285156
    8. ' R' → logprob: -7.107582092285156
    9. ' rest' → logprob: -7.107582092285156
    10. 'mod' → logprob: -7.357582092285156

Token 175: ''il' (ID: 14683)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.13734963536262512
    2. ''on' → logprob: -2.5123496055603027
    3. 'on' → logprob: -3.5123496055603027
    4. ''il' → logprob: -5.137349605560303
    5. ''à' → logprob: -6.262349605560303
    6. ''ils' → logprob: -6.262349605560303
    7. ' modulo' → logprob: -7.137349605560303
    8. 'A' → logprob: -7.137349605560303
    9. 'u' → logprob: -7.262349605560303
    10. '_on' → logprob: -7.262349605560303

Token 176: ' est' (ID: 893)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.8112149238586426
    2. ' est' → logprob: -0.8112149238586426
    3. ' prend' → logprob: -3.3112149238586426
    4. ' modulo' → logprob: -3.8112149238586426
    5. 'est' → logprob: -4.311214923858643
    6. ' mod' → logprob: -4.686214923858643
    7. ' %' → logprob: -4.686214923858643
    8. '%d' → logprob: -4.686214923858643
    9. 's' → logprob: -5.936214923858643
    10. 'mod' → logprob: -5.936214923858643

Token 177: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.13565881550312042
    2. 'pris' → logprob: -2.5106587409973145
    3. ' pris' → logprob: -3.6356587409973145
    4. ' div' → logprob: -4.3856587409973145
    5. 'mod' → logprob: -5.7606587409973145
    6. 'calcul' → logprob: -6.6356587409973145
    7. 'd' → logprob: -7.3856587409973145
    8. ' divis' → logprob: -7.8856587409973145
    9. ' modulo' → logprob: -8.010659217834473
    10. '%' → logprob: -8.510659217834473

Token 178: 'isé' (ID: 30065)
  Prédit: 'isé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isé' → logprob: -0.0014566626632586122
    2. 'ise' → logprob: -7.6264567375183105
    3. 'id' → logprob: -8.251456260681152
    4. 'd' → logprob: -8.501456260681152
    5. 'isés' → logprob: -8.876456260681152
    6. 'iser' → logprob: -9.251456260681152
    7. 'mod' → logprob: -9.626456260681152
    8. 'is' → logprob: -9.751456260681152
    9. '%' → logprob: -9.876456260681152
    10. ' d' → logprob: -10.876456260681152

Token 179: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6428841352462769
    2. ' par' → logprob: -1.2678841352462769
    3. 'par' → logprob: -1.8928841352462769
    4. ' =' → logprob: -4.267884254455566
    5. '=' → logprob: -4.517884254455566
    6. ',' → logprob: -5.642884254455566
    7. '[' → logprob: -6.017884254455566
    8. 'd' → logprob: -6.142884254455566
    9. 'A' → logprob: -7.017884254455566
    10. '       ' → logprob: -7.017884254455566

Token 180: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.25194334983825684
    2. 'd' → logprob: -1.5019433498382568
    3. ' ' → logprob: -11.751943588256836
    4. ' ' → logprob: -12.376943588256836
    5. '	d' → logprob: -13.376943588256836
    6. '_d' → logprob: -16.001943588256836
    7. '```' → logprob: -16.626943588256836
    8. '   ' → logprob: -16.876943588256836
    9. ''d' → logprob: -17.126943588256836
    10. '`' → logprob: -17.501943588256836

Token 181: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05324842408299446
    2. 'r' → logprob: -3.303248405456543
    3. ' r' → logprob: -4.678248405456543
    4. 'R' → logprob: -6.553248405456543
    5. 'rema' → logprob: -7.053248405456543
    6. 're' → logprob: -7.553248405456543
    7. 'rem' → logprob: -7.678248405456543
    8. 'rest' → logprob: -7.803248405456543
    9. ' R' → logprob: -8.053248405456543
    10. '
' → logprob: -8.178248405456543

Token 182: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00020354038861114532
    2. 'r' → logprob: -9.250203132629395
    3. ' r' → logprob: -11.250203132629395
    4. '   ' → logprob: -11.375203132629395
    5. '    
' → logprob: -11.500203132629395
    6. 're' → logprob: -11.750203132629395
    7. 'rema' → logprob: -11.750203132629395
    8. 'rest' → logprob: -11.750203132629395
    9. ' re' → logprob: -12.250203132629395
    10. 's' → logprob: -12.250203132629395

Token 183: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.39523762464523315
    2. '   ' → logprob: -1.895237684249878
    3. ' r' → logprob: -3.145237684249878
    4. 'rem' → logprob: -3.270237684249878
    5. ' re' → logprob: -3.770237684249878
    6. 're' → logprob: -4.145237445831299
    7. 'rema' → logprob: -4.270237445831299
    8. 'mods' → logprob: -4.395237445831299
    9. 'res' → logprob: -4.770237445831299
    10. 'mod' → logprob: -5.270237445831299

Token 184: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03167494386434555
    2. '=' → logprob: -3.656674861907959
    3. 'est' → logprob: -6.281674861907959
    4. 'ests' → logprob: -6.281674861907959
    5. 's' → logprob: -7.781674861907959
    6. 'es' → logprob: -8.281675338745117
    7. '   ' → logprob: -8.906675338745117
    8. 'em' → logprob: -8.906675338745117
    9. '=[' → logprob: -8.906675338745117
    10. 'ema' → logprob: -9.031675338745117

Token 185: ' sorted' (ID: 20099)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.24209441244602203
    2. '[i' → logprob: -2.4920945167541504
    3. '[x' → logprob: -2.9920945167541504
    4. '[a' → logprob: -2.9920945167541504
    5. '[' → logprob: -3.7420945167541504
    6. '[A' → logprob: -5.61709451675415
    7. '[d' → logprob: -5.74209451675415
    8. '[(' → logprob: -7.61709451675415
    9. '[list' → logprob: -8.867094039916992
    10. '[p' → logprob: -9.242094039916992

Token 186: '([' (ID: 5194)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.39600950479507446
    2. '(x' → logprob: -1.8960094451904297
    3. '([' → logprob: -2.2710094451904297
    4. '([(' → logprob: -3.3960094451904297
    5. '(a' → logprob: -3.5210094451904297
    6. '(((' → logprob: -5.14600944519043
    7. '(A' → logprob: -5.64600944519043
    8. '(r' → logprob: -7.89600944519043
    9. '(' → logprob: -8.02100944519043
    10. '(lambda' → logprob: -8.39600944519043

Token 187: 'v' (ID: 85)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.22850027680397034
    2. 'x' → logprob: -1.603500247001648
    3. '(a' → logprob: -6.6035003662109375
    4. 'ai' → logprob: -6.8535003662109375
    5. '(x' → logprob: -7.6035003662109375
    6. 'i' → logprob: -9.728500366210938
    7. '(ai' → logprob: -10.103500366210938
    8. '((' → logprob: -10.978500366210938
    9. '(i' → logprob: -11.228500366210938
    10. ' a' → logprob: -11.478500366210938

Token 188: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.020066337659955025
    2. '%d' → logprob: -4.020066261291504
    3. '%' → logprob: -6.270066261291504
    4. ' ' → logprob: -11.520066261291504
    5. 'd' → logprob: -12.645066261291504
    6. '%i' → logprob: -13.020066261291504
    7. ' ' → logprob: -13.145066261291504
    8. '%c' → logprob: -13.145066261291504
    9. '%D' → logprob: -13.645066261291504
    10. '%e' → logprob: -14.145066261291504

Token 189: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.038043100386857986
    2. ' d' → logprob: -3.2880430221557617
    3. ' ' → logprob: -14.288043022155762
    4. '	d' → logprob: -14.788043022155762
    5. ')d' → logprob: -15.788043022155762
    6. '(d' → logprob: -16.038043975830078
    7. ' ' → logprob: -16.538043975830078
    8. '   ' → logprob: -16.788043975830078
    9. ')' → logprob: -17.163043975830078
    10. '%d' → logprob: -17.288043975830078

Token 190: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3133259117603302
    2. 'for' → logprob: -1.3133258819580078
    3. ')' → logprob: -10.063325881958008
    4. ' ' → logprob: -11.313325881958008
    5. ',' → logprob: -11.938325881958008
    6. '   ' → logprob: -13.938325881958008
    7. 'd' → logprob: -14.188325881958008
    8. '	for' → logprob: -14.313325881958008
    9. '  ' → logprob: -15.688325881958008
    10. '
' → logprob: -16.188325881958008

Token 191: ' v' (ID: 323)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.6343351602554321
    2. 'A' → logprob: -1.0093351602554321
    3. 'v' → logprob: -2.8843350410461426
    4. ' v' → logprob: -3.0093350410461426
    5. ' ' → logprob: -10.7593355178833
    6. '	A' → logprob: -12.8843355178833
    7. '_A' → logprob: -13.1343355178833
    8. ' ' → logprob: -13.3843355178833
    9. '   ' → logprob: -13.5718355178833
    10. '  ' → logprob: -14.0093355178833

Token 192: ' in' (ID: 306)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.41334396600723267
    2. ' in' → logprob: -1.288343906402588
    3. 'in' → logprob: -3.038343906402588
    4. ' A' → logprob: -4.288343906402588
    5. 'v' → logprob: -6.913343906402588
    6. ' ' → logprob: -9.538344383239746
    7. ']' → logprob: -10.288344383239746
    8. ')' → logprob: -10.788344383239746
    9. 'r' → logprob: -11.163344383239746
    10. ' v' → logprob: -11.163344383239746

Token 193: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0015052208909764886
    2. ' A' → logprob: -6.501505374908447
    3. ' ' → logprob: -14.251504898071289
    4. '   ' → logprob: -14.376504898071289
    5. '
' → logprob: -14.626504898071289
    6. '	A' → logprob: -15.376504898071289
    7. ')' → logprob: -15.626504898071289
    8. 'a' → logprob: -15.876504898071289
    9. ']' → logprob: -16.00150489807129
    10. 'range' → logprob: -16.68900489807129

Token 194: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0028998551424592733
    2. '],' → logprob: -5.877899646759033
    3. ' ])' → logprob: -9.627900123596191
    4. '])
' → logprob: -11.252900123596191
    5. ')' → logprob: -12.502900123596191
    6. ')])' → logprob: -12.752900123596191
    7. ']' → logprob: -13.127900123596191
    8. '])

' → logprob: -13.502900123596191
    9. '),' → logprob: -13.752900123596191
    10. ']);' → logprob: -13.877900123596191

Token 195: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008492360822856426
    2. 'c' → logprob: -6.633492469787598
    3. 's' → logprob: -6.633492469787598
    4. '
' → logprob: -6.883492469787598
    5. '```' → logprob: -7.133492469787598
    6. '    
' → logprob: -7.258492469787598
    7. 'acc' → logprob: -7.383492469787598
    8. 'n' → logprob: -8.008492469787598
    9. 'r' → logprob: -8.258492469787598
    10. 'prefix' → logprob: -8.758492469787598

Token 196: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5488777756690979
    2. 'prefix' → logprob: -1.5488777160644531
    3. 'm' → logprob: -2.923877716064453
    4. 's' → logprob: -3.173877716064453
    5. 'acc' → logprob: -4.048877716064453
    6. 'n' → logprob: -4.173877716064453
    7. 'left' → logprob: -4.548877716064453
    8. 'c' → logprob: -4.673877716064453
    9. 'cum' → logprob: -4.673877716064453
    10. 'p' → logprob: -4.798877716064453

Token 197: ' On' (ID: 2160)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.539909303188324
    2. 's' → logprob: -1.9149093627929688
    3. 'm' → logprob: -2.1649093627929688
    4. 'left' → logprob: -3.9149093627929688
    5. 'acc' → logprob: -3.9149093627929688
    6. '   ' → logprob: -3.9149093627929688
    7. 'cum' → logprob: -4.414909362792969
    8. 'c' → logprob: -4.539909362792969
    9. 'total' → logprob: -4.664909362792969
    10. 'n' → logprob: -4.789909362792969

Token 198: ' trie' (ID: 139428)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.123905897140503
    2. 'm' → logprob: -2.373905897140503
    3. 's' → logprob: -2.373905897140503
    4. '#' → logprob: -2.623905897140503
    5. '   ' → logprob: -2.623905897140503
    6. ' n' → logprob: -2.623905897140503
    7. 'len' → logprob: -3.373905897140503
    8. 'r' → logprob: -3.498905897140503
    9. 'def' → logprob: -3.748905897140503
    10. 'acc' → logprob: -4.123906135559082

Token 199: ' les' (ID: 1341)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.24656859040260315
    2. '()' → logprob: -2.1215686798095703
    3. 'r' → logprob: -2.7465686798095703
    4. ' r' → logprob: -3.7465686798095703
    5. '(len' → logprob: -5.87156867980957
    6. '(' → logprob: -6.37156867980957
    7. ' (' → logprob: -6.99656867980957
    8. '   ' → logprob: -7.37156867980957
    9. ' les' → logprob: -7.37156867980957
    10. 'def' → logprob: -7.62156867980957

Token 200: ' rest' (ID: 2867)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03173626586794853
    2. ' r' → logprob: -3.531736373901367
    3. 'rest' → logprob: -7.406736373901367
    4. '[r' → logprob: -7.906736373901367
    5. 'len' → logprob: -8.031736373901367
    6. ' rest' → logprob: -8.531736373901367
    7. 're' → logprob: -9.031736373901367
    8. '[' → logprob: -9.281736373901367
    9. '[len' → logprob: -9.281736373901367
    10. ' len' → logprob: -10.531736373901367

Token 201: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.12932424247264862
    2. 'e' → logprob: -2.879324197769165
    3. 'ants' → logprob: -3.254324197769165
    4. '[r' → logprob: -4.879324436187744
    5. 'r' → logprob: -5.129324436187744
    6. 'res' → logprob: -5.754324436187744
    7. 're' → logprob: -6.004324436187744
    8. '[' → logprob: -6.504324436187744
    9. '(r' → logprob: -6.504324436187744
    10. ' r' → logprob: -6.629324436187744

Token 202: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10100448131561279
    2. '
' → logprob: -2.7260046005249023
    3. '    
' → logprob: -4.226004600524902
    4. ')' → logprob: -4.851004600524902
    5. ',' → logprob: -5.601004600524902
    6. '<|end|>' → logprob: -6.726004600524902
    7. '  
' → logprob: -7.101004600524902
    8. ' 
' → logprob: -7.601004600524902
    9. '   
' → logprob: -8.101004600524902
    10. ' ,' → logprob: -8.851004600524902

Token 203: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.2847541272640228
    2. 'l' → logprob: -1.4097541570663452
    3. 'r' → logprob: -6.909754276275635
    4. ' r' → logprob: -7.409754276275635
    5. 'ordre' → logprob: -7.409754276275635
    6. ' ascending' → logprob: -7.909754276275635
    7. 'ascending' → logprob: -8.409753799438477
    8. ' ordre' → logprob: -8.784753799438477
    9. ' order' → logprob: -8.909753799438477
    10. ''ordre' → logprob: -9.034753799438477

Token 204: ''ordre' (ID: 124753)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.38490694761276245
    2. ''ordre' → logprob: -1.7599070072174072
    3. '(r' → logprob: -2.1349070072174072
    4. 'ordre' → logprob: -4.009906768798828
    5. ' r' → logprob: -5.884906768798828
    6. '’ordre' → logprob: -6.259906768798828
    7. ''r' → logprob: -6.884906768798828
    8. 'e' → logprob: -7.384906768798828
    9. 'def' → logprob: -7.509906768798828
    10. 'order' → logprob: -7.884906768798828

Token 205: ' cro' (ID: 11270)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8526849746704102
    2. 'r' → logprob: -1.9776849746704102
    3. 'd' → logprob: -2.22768497467041
    4. ')' → logprob: -3.10268497467041
    5. 'def' → logprob: -3.22768497467041
    6. 'cro' → logprob: -3.47768497467041
    7. ' cumulative' → logprob: -4.10268497467041
    8. '  ' → logprob: -4.10268497467041
    9. 'cum' → logprob: -4.22768497467041
    10. ' crescente' → logprob: -4.22768497467041

Token 206: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.0027901383582502604
    2. 'issent' → logprob: -6.7527899742126465
    3. 'issante' → logprob: -7.2527899742126465
    4. 'ss' → logprob: -7.6277899742126465
    5. 'issance' → logprob: -8.377790451049805
    6. '```' → logprob: -9.877790451049805
    7. '#' → logprob: -10.377790451049805
    8. 'iss' → logprob: -11.252790451049805
    9. 'ass' → logprob: -11.252790451049805
    10. 'issa' → logprob: -11.752790451049805

Token 207: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17536447942256927
    2. '
' → logprob: -1.9253644943237305
    3. '    
' → logprob: -5.4253644943237305
    4. '<|end|>' → logprob: -5.5503644943237305
    5. ')' → logprob: -5.9253644943237305
    6. ',' → logprob: -6.5503644943237305
    7. '  
' → logprob: -7.3003644943237305
    8. ' 
' → logprob: -8.42536449432373
    9. 'def' → logprob: -8.42536449432373
    10. '```' → logprob: -8.42536449432373

Token 208: ' rendre' (ID: 44629)
  Prédit: ' faciliter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' faciliter' → logprob: -0.19700747728347778
    2. ' pouvoir' → logprob: -2.197007417678833
    3. ' i' → logprob: -4.197007656097412
    4. ' mieux' → logprob: -5.072007656097412
    5. ' permettre' → logprob: -5.197007656097412
    6. ' facil' → logprob: -5.322007656097412
    7. 'fac' → logprob: -5.447007656097412
    8. 'i' → logprob: -6.072007656097412
    9. ' ' → logprob: -6.197007656097412
    10. 'len' → logprob: -6.197007656097412

Token 209: ' les' (ID: 1341)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.3182281255722046
    2. ' possible' → logprob: -1.4432281255722046
    3. 'plus' → logprob: -4.443228244781494
    4. 'possible' → logprob: -5.068228244781494
    5. ' la' → logprob: -5.443228244781494
    6. ' les' → logprob: -5.693228244781494
    7. ' possibles' → logprob: -5.818228244781494
    8. '```' → logprob: -6.443228244781494
    9. ' le' → logprob: -6.568228244781494
    10. ' l' → logprob: -6.568228244781494

Token 210: ' calcul' (ID: 7559)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.9966227412223816
    2. 'mod' → logprob: -1.2466228008270264
    3. 's' → logprob: -2.6216228008270264
    4. 'dif' → logprob: -3.6216228008270264
    5. 'plus' → logprob: -3.7466228008270264
    6. 'c' → logprob: -3.9966228008270264
    7. 'diff' → logprob: -3.9966228008270264
    8. 'prefix' → logprob: -4.121622562408447
    9. ' modifications' → logprob: -4.246622562408447
    10. 'r' → logprob: -4.246622562408447

Token 211: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9841252565383911
    2. 'ations' → logprob: -1.2341252565383911
    3. 'es' → logprob: -2.2341251373291016
    4. 'r' → logprob: -2.3591251373291016
    5. 'us' → logprob: -2.7341251373291016
    6. 'ais' → logprob: -3.2341251373291016
    7. 'd' → logprob: -4.984125137329102
    8. 't' → logprob: -6.109125137329102
    9. 'ts' → logprob: -6.859125137329102
    10. ' r' → logprob: -6.859125137329102

Token 212: ' ult' (ID: 11619)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.03581874817609787
    2. 'plus' → logprob: -4.160818576812744
    3. ' des' → logprob: -4.285818576812744
    4. ' more' → logprob: -6.910818576812744
    5. ' de' → logprob: -7.410818576812744
    6. 'des' → logprob: -7.410818576812744
    7. '   ' → logprob: -7.785818576812744
    8. 'r' → logprob: -7.910818576812744
    9. 'acc' → logprob: -8.160819053649902
    10. 'd' → logprob: -8.160819053649902

Token 213: 'érieurs' (ID: 97672)
  Prédit: 'ime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ime' → logprob: -0.36713171005249023
    2. 'imes' → logprob: -2.2421317100524902
    3. 'érieurs' → logprob: -2.6171317100524902
    4. 'érieur' → logprob: -2.7421317100524902
    5. 'eux' → logprob: -4.61713171005249
    6. 'érieure' → logprob: -4.74213171005249
    7. 'égr' → logprob: -5.86713171005249
    8. 'ève' → logprob: -6.11713171005249
    9. 'ème' → logprob: -6.11713171005249
    10. 'iques' → logprob: -6.36713171005249

Token 214: ' plus' (ID: 2932)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025112416595220566
    2. ' prefix' → logprob: -5.025112628936768
    3. 'prefix' → logprob: -5.275112628936768
    4. ' cumulative' → logprob: -6.025112628936768
    5. ')' → logprob: -6.275112628936768
    6. ' n' → logprob: -6.650112628936768
    7. ' cum' → logprob: -7.275112628936768
    8. 'c' → logprob: -7.275112628936768
    9. 'n' → logprob: -7.275112628936768
    10. 'cum' → logprob: -7.275112628936768

Token 215: ' simples' (ID: 26239)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.5485672950744629
    2. 'comm' → logprob: -1.673567295074463
    3. 'sim' → logprob: -1.923567295074463
    4. 'ais' → logprob: -3.173567295074463
    5. ' faciles' → logprob: -3.798567295074463
    6. 'simple' → logprob: -5.173567295074463
    7. 'com' → logprob: -5.423567295074463
    8. 'cl' → logprob: -5.673567295074463
    9. 'f' → logprob: -6.173567295074463
    10. 'int' → logprob: -6.423567295074463

Token 216: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10017614811658859
    2. '
' → logprob: -3.6001760959625244
    3. 'prefix' → logprob: -3.7251760959625244
    4. 's' → logprob: -4.9751763343811035
    5. 'n' → logprob: -5.2251763343811035
    6. 'm' → logprob: -5.4751763343811035
    7. ' prefix' → logprob: -5.7251763343811035
    8. 'c' → logprob: -5.9751763343811035
    9. '    
' → logprob: -5.9751763343811035
    10. 'acc' → logprob: -6.1001763343811035

Token 217: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3256755471229553
    2. 'prefix' → logprob: -1.7006754875183105
    3. 's' → logprob: -3.3256754875183105
    4. ' prefix' → logprob: -4.7006754875183105
    5. 'acc' → logprob: -4.9506754875183105
    6. 'c' → logprob: -5.0756754875183105
    7. 'm' → logprob: -5.2006754875183105
    8. 'left' → logprob: -5.4506754875183105
    9. 'n' → logprob: -5.7006754875183105
    10. 'cum' → logprob: -5.8256754875183105

Token 218: ' #' (ID: 1069)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.24132031202316284
    2. 's' → logprob: -2.8663203716278076
    3. 'left' → logprob: -2.8663203716278076
    4. 'acc' → logprob: -4.3663201332092285
    5. 'L' → logprob: -4.3663201332092285
    6. 'p' → logprob: -4.6163201332092285
    7. 'pref' → logprob: -4.6163201332092285
    8. 'n' → logprob: -4.7413201332092285
    9. 'm' → logprob: -4.7413201332092285
    10. 'l' → logprob: -4.7413201332092285

Token 219: ' Calcul' (ID: 57243)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.22619321942329407
    2. 's' → logprob: -2.6011931896209717
    3. 'm' → logprob: -3.6011931896209717
    4. 'acc' → logprob: -4.101193428039551
    5. 'left' → logprob: -4.226193428039551
    6. 'pref' → logprob: -4.351193428039551
    7. 'cs' → logprob: -4.976193428039551
    8. 'c' → logprob: -5.101193428039551
    9. 'p' → logprob: -5.226193428039551
    10. 'cum' → logprob: -5.226193428039551

Token 220: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030936693772673607
    2. ' des' → logprob: -3.9059367179870605
    3. 's' → logprob: -5.7809367179870605
    4. 'des' → logprob: -6.1559367179870605
    5. ' de' → logprob: -6.7809367179870605
    6. '  ' → logprob: -7.6559367179870605
    7. '    ' → logprob: -7.7809367179870605
    8. ' du' → logprob: -8.030936241149902
    9. 'prefix' → logprob: -8.030936241149902
    10. 'acc' → logprob: -8.155936241149902

Token 221: ' valeurs' (ID: 73668)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.4605308473110199
    2. 'list' → logprob: -1.0855308771133423
    3. 'prefix' → logprob: -4.085530757904053
    4. ' list' → logprob: -5.460530757904053
    5. 'ac' → logprob: -5.710530757904053
    6. 's' → logprob: -5.960530757904053
    7. 'liste' → logprob: -7.210530757904053
    8. 'pref' → logprob: -7.335530757904053
    9. 'r' → logprob: -7.835530757904053
    10. 'p' → logprob: -7.960530757904053

Token 222: ' nécessaires' (ID: 74402)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.31718865036964417
    2. 'g' → logprob: -2.5671887397766113
    3. 'acc' → logprob: -2.6921887397766113
    4. ' prefix' → logprob: -3.3171887397766113
    5. 'p' → logprob: -3.6921887397766113
    6. 's' → logprob: -4.192188739776611
    7. '   ' → logprob: -5.067188739776611
    8. 'import' → logprob: -5.192188739776611
    9. 'pref' → logprob: -5.317188739776611
    10. 'c' → logprob: -5.442188739776611

Token 223: ' pour' (ID: 1930)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.32643699645996094
    2. ' prefix' → logprob: -1.951436996459961
    3. '   ' → logprob: -2.701436996459961
    4. 'pref' → logprob: -3.701436996459961
    5. 's' → logprob: -4.826436996459961
    6. 'g' → logprob: -4.826436996459961
    7. 'acc' → logprob: -5.451436996459961
    8. ' acc' → logprob: -5.701436996459961
    9. 'pre' → logprob: -5.826436996459961
    10. 'p' → logprob: -5.826436996459961

Token 224: ' que' (ID: 661)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.9055736064910889
    2. 'l' → logprob: -1.5305736064910889
    3. 'r' → logprob: -1.7805736064910889
    4. 'ac' → logprob: -2.780573606491089
    5. 'len' → logprob: -3.155573606491089
    6. ' la' → logprob: -4.530573844909668
    7. ' l' → logprob: -4.655573844909668
    8. 'check' → logprob: -4.780573844909668
    9. 'range' → logprob: -4.780573844909668
    10. ' acc' → logprob: -5.030573844909668

Token 225: ' chaque' (ID: 21194)
  Prédit: ' tous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tous' → logprob: -1.1501752138137817
    2. ' chaque' → logprob: -1.6501752138137817
    3. 'r' → logprob: -1.7751752138137817
    4. ' les' → logprob: -2.900175094604492
    5. ' i' → logprob: -3.275175094604492
    6. ' all' → logprob: -3.775175094604492
    7. ' r' → logprob: -3.900175094604492
    8. ' toutes' → logprob: -3.900175094604492
    9. '#' → logprob: -4.150175094604492
    10. ' for' → logprob: -4.275175094604492

Token 226: ' reste' (ID: 26769)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.1572752743959427
    2. ' élément' → logprob: -3.0322751998901367
    3. 'r' → logprob: -3.5322751998901367
    4. 'rest' → logprob: -3.7822751998901367
    5. 'reste' → logprob: -4.657275199890137
    6. 'val' → logprob: -4.657275199890137
    7. ' r' → logprob: -5.407275199890137
    8. 'v' → logprob: -5.782275199890137
    9. ' reste' → logprob: -5.907275199890137
    10. 'mod' → logprob: -6.032275199890137

Token 227: ' atte' (ID: 43312)
  Prédit: ' soit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' soit' → logprob: -0.688683807849884
    2. 'so' → logprob: -1.3136837482452393
    3. ' puisse' → logprob: -2.9386837482452393
    4. 'mod' → logprob: -3.0636837482452393
    5. ' mod' → logprob: -3.1886837482452393
    6. 'd' → logprob: -4.313683986663818
    7. 's' → logprob: -4.438683986663818
    8. ' s' → logprob: -4.563683986663818
    9. 'dev' → logprob: -5.188683986663818
    10. ' ' → logprob: -5.688683986663818

Token 228: 'igne' (ID: 24120)
  Prédit: 'igne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igne' → logprob: -0.000779965310357511
    2. 'gne' → logprob: -8.62578010559082
    3. 'g' → logprob: -9.12578010559082
    4. 'inte' → logprob: -9.25078010559082
    5. 'int' → logprob: -9.25078010559082
    6. 'ind' → logprob: -9.50078010559082
    7. 'ign' → logprob: -9.75078010559082
    8. 'indre' → logprob: -10.12578010559082
    9. 'ignent' → logprob: -10.12578010559082
    10. 'ing' → logprob: -11.00078010559082

Token 229: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.11019296199083328
    2. ' d' → logprob: -2.4851930141448975
    3. '0' → logprob: -4.110192775726318
    4. ' ' → logprob: -6.235192775726318
    5. ' la' → logprob: -6.360192775726318
    6. ' le' → logprob: -8.235193252563477
    7. 'la' → logprob: -8.985193252563477
    8. 'l' → logprob: -9.360193252563477
    9. 'le' → logprob: -9.360193252563477
    10. ' zero' → logprob: -9.360193252563477

Token 230: ' (' (ID: 350)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.43082788586616516
    2. ' -' → logprob: -1.0558278560638428
    3. '-s' → logprob: -6.555828094482422
    4. '-r' → logprob: -7.930828094482422
    5. ')' → logprob: -9.180828094482422
    6. ',' → logprob: -10.430828094482422
    7. '-v' → logprob: -10.430828094482422
    8. '-n' → logprob: -10.430828094482422
    9. ' or' → logprob: -10.555828094482422
    10. ' ' → logprob: -11.055828094482422

Token 231: 'par' (ID: 796)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1234130859375
    2. 'd' → logprob: -1.2484130859375
    3. '   ' → logprob: -1.3734130859375
    4. '),' → logprob: -3.4984130859375
    5. ' d' → logprob: -3.7484130859375
    6. ')
' → logprob: -4.7484130859375
    7. ' )' → logprob: -4.8734130859375
    8. 's' → logprob: -4.9984130859375
    9. 'len' → logprob: -5.2484130859375
    10. 'acc' → logprob: -5.2484130859375

Token 232: ' sou' (ID: 4069)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.48584917187690735
    2. ' exemple' → logprob: -2.360849142074585
    3. 'acc' → logprob: -2.735849142074585
    4. 'c' → logprob: -3.360849142074585
    5. ')' → logprob: -3.735849142074585
    6. 'r' → logprob: -3.860849142074585
    7. 'abs' → logprob: -3.985849142074585
    8. 'd' → logprob: -4.110849380493164
    9. 'example' → logprob: -4.110849380493164
    10. 'sum' → logprob: -4.360849380493164

Token 233: 'straction' (ID: 79887)
  Prédit: 'straction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'straction' → logprob: -0.4903615713119507
    2. 'stract' → logprob: -1.3653615713119507
    3. 'tra' → logprob: -3.4903616905212402
    4. 'str' → logprob: -3.4903616905212402
    5. 'tr' → logprob: -3.6153616905212402
    6. 'stra' → logprob: -3.9903616905212402
    7. 'tract' → logprob: -4.99036169052124
    8. 'b' → logprob: -5.24036169052124
    9. 'd' → logprob: -6.24036169052124
    10. '(b' → logprob: -6.61536169052124

Token 234: ' du' (ID: 1462)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20319056510925293
    2. ' ou' → logprob: -2.203190565109253
    3. '   ' → logprob: -3.078190565109253
    4. ',' → logprob: -4.578190803527832
    5. ')
' → logprob: -5.578190803527832
    6. ' )' → logprob: -5.828190803527832
    7. '),' → logprob: -6.078190803527832
    8. ' et' → logprob: -6.453190803527832
    9. ')
' → logprob: -6.828190803527832
    10. ' or' → logprob: -7.203190803527832

Token 235: ' reste' (ID: 26769)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0765167698264122
    2. 'x' → logprob: -3.70151686668396
    3. 'r' → logprob: -3.95151686668396
    4. 'reste' → logprob: -4.326516628265381
    5. 'rest' → logprob: -5.451516628265381
    6. 'val' → logprob: -5.826516628265381
    7. 'c' → logprob: -5.951516628265381
    8. ' d' → logprob: -6.826516628265381
    9. 'xi' → logprob: -7.201516628265381
    10. 's' → logprob: -7.451516628265381

Token 236: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31670060753822327
    2. '   ' → logprob: -1.9417005777359009
    3. ',' → logprob: -3.0667006969451904
    4. ' ou' → logprob: -3.8167006969451904
    5. '),' → logprob: -3.9417006969451904
    6. ' )' → logprob: -4.941700458526611
    7. ' -' → logprob: -5.316700458526611
    8. 'r' → logprob: -5.941700458526611
    9. ' et' → logprob: -6.066700458526611
    10. ')
' → logprob: -6.066700458526611

Token 237: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.01798451878130436
    2. ' d' → logprob: -4.142984390258789
    3. ')' → logprob: -6.892984390258789
    4. 'r' → logprob: -9.017984390258789
    5. '1' → logprob: -9.205484390258789
    6. 'acc' → logprob: -9.330484390258789
    7. ' ' → logprob: -9.767984390258789
    8. ')d' → logprob: -9.892984390258789
    9. '
' → logprob: -9.955484390258789
    10. 'c' → logprob: -10.330484390258789

Token 238: ')
' (ID: 446)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2928765118122101
    2. '-' → logprob: -1.6678764820098877
    3. ')' → logprob: -3.4178764820098877
    4. '-r' → logprob: -3.5428764820098877
    5. '),' → logprob: -7.167876720428467
    6. ' ' → logprob: -7.792876720428467
    7. 'r' → logprob: -7.917876720428467
    8. '   ' → logprob: -8.167876243591309
    9. ' )' → logprob: -8.417876243591309
    10. '-d' → logprob: -8.792876243591309

Token 239: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04401986300945282
    2. 'up' → logprob: -4.04401969909668
    3. 'plus' → logprob: -5.16901969909668
    4. 's' → logprob: -5.79401969909668
    5. 'add' → logprob: -6.41901969909668
    6. ',' → logprob: -6.66901969909668
    7. '
' → logprob: -6.79401969909668
    8. ' ' → logprob: -7.04401969909668
    9. 'suffix' → logprob: -7.04401969909668
    10. ' up' → logprob: -7.29401969909668

Token 240: ' r' (ID: 428)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8599746823310852
    2. 'add' → logprob: -2.4849746227264404
    3. 'to' → logprob: -2.6099746227264404
    4. 'plus' → logprob: -2.8599746227264404
    5. 'inc' → logprob: -2.8599746227264404
    6. 's' → logprob: -3.3599746227264404
    7. 'x' → logprob: -3.6099746227264404
    8. 'c' → logprob: -3.6099746227264404
    9. 'b' → logprob: -3.8599746227264404
    10. 'need' → logprob: -3.8599746227264404

Token 241: '_inv' (ID: 53427)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.33434000611305237
    2. '_plus' → logprob: -2.3343400955200195
    3. '_sub' → logprob: -2.9593400955200195
    4. '_add' → logprob: -3.5843400955200195
    5. '=' → logprob: -3.7093400955200195
    6. 'd' → logprob: -4.0843400955200195
    7. 'plus' → logprob: -4.5843400955200195
    8. '_minus' → logprob: -4.8343400955200195
    9. '_inc' → logprob: -4.9593400955200195
    10. 'r' → logprob: -5.4593400955200195

Token 242: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6326901912689209
    2. '=' → logprob: -0.7576901912689209
    3. '=[' → logprob: -9.6326904296875
    4. 'd' → logprob: -11.6326904296875
    5. '   ' → logprob: -12.7576904296875
    6. '=d' → logprob: -13.0076904296875
    7. ' ' → logprob: -13.2576904296875
    8. '=[]' → logprob: -13.2576904296875
    9. '=r' → logprob: -13.5076904296875
    10. ' =[' → logprob: -13.5076904296875

Token 243: ' [' (ID: 723)
  Prédit: '[d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.41326195001602173
    2. 'sorted' → logprob: -1.413261890411377
    3. ' [' → logprob: -2.913261890411377
    4. '[' → logprob: -3.413261890411377
    5. ' sorted' → logprob: -5.163261890411377
    6. 'list' → logprob: -7.663261890411377
    7. '[s' → logprob: -7.663261890411377
    8. '[(' → logprob: -7.913261890411377
    9. '[list' → logprob: -8.163262367248535
    10. 'd' → logprob: -8.538262367248535

Token 244: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.038225434720516205
    2. '(d' → logprob: -3.2882254123687744
    3. ' d' → logprob: -9.788225173950195
    4. '(' → logprob: -10.413225173950195
    5. ' (' → logprob: -10.413225173950195
    6. '((' → logprob: -10.663225173950195
    7. '   ' → logprob: -11.038225173950195
    8. ' ' → logprob: -12.163225173950195
    9. '	d' → logprob: -12.413225173950195
    10. '
' → logprob: -12.788225173950195

Token 245: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.28337523341178894
    2. '-' → logprob: -1.4083752632141113
    3. '-v' → logprob: -6.408375263214111
    4. '-x' → logprob: -7.533375263214111
    5. ' ' → logprob: -11.533374786376953
    6. 'x' → logprob: -12.033374786376953
    7. '-r' → logprob: -12.908374786376953
    8. ']' → logprob: -13.033374786376953
    9. '-val' → logprob: -13.033374786376953
    10. ' x' → logprob: -13.158374786376953

Token 246: ' v' (ID: 323)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004925496876239777
    2. 'v' → logprob: -5.379925727844238
    3. 'r' → logprob: -8.254925727844238
    4. 'rv' → logprob: -11.254925727844238
    5. ' x' → logprob: -11.379925727844238
    6. 'ri' → logprob: -12.004925727844238
    7. 'vi' → logprob: -12.004925727844238
    8. 'i' → logprob: -13.004925727844238
    9. 'val' → logprob: -13.254925727844238
    10. 'xi' → logprob: -13.879925727844238

Token 247: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6965196132659912
    2. 'for' → logprob: -0.6965196132659912
    3. ' if' → logprob: -6.32151985168457
    4. 'if' → logprob: -6.57151985168457
    5. ' ' → logprob: -8.69651985168457
    6. '   ' → logprob: -13.44651985168457
    7. '  ' → logprob: -14.32151985168457
    8. '%' → logprob: -14.57151985168457
    9. '	for' → logprob: -15.44651985168457
    10. ' ' → logprob: -17.82151985168457

Token 248: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0015239100903272629
    2. ' v' → logprob: -6.501523971557617
    3. 'r' → logprob: -10.751523971557617
    4. ' r' → logprob: -16.001523971557617
    5. '	v' → logprob: -16.626523971557617
    6. ' ' → logprob: -19.001523971557617
    7. '_v' → logprob: -19.876523971557617
    8. '$v' → logprob: -20.376523971557617
    9. ')v' → logprob: -20.376523971557617
    10. 'rv' → logprob: -20.626523971557617

Token 249: ' in' (ID: 306)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.22595883905887604
    2. ' r' → logprob: -1.6009588241577148
    3. 'v' → logprob: -7.850958824157715
    4. ' in' → logprob: -9.475958824157715
    5. 'in' → logprob: -10.100958824157715
    6. ' v' → logprob: -10.350958824157715
    7. '_r' → logprob: -12.725958824157715
    8. ' ' → logprob: -13.850958824157715
    9. '	r' → logprob: -14.225958824157715
    10. 'A' → logprob: -15.475958824157715

Token 250: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.014164221473038197
    2. ' r' → logprob: -4.264164447784424
    3. ' ' → logprob: -14.889163970947266
    4. ']' → logprob: -16.139163970947266
    5. '	r' → logprob: -16.639163970947266
    6. '   ' → logprob: -16.639163970947266
    7. 're' → logprob: -17.139163970947266
    8. ' ' → logprob: -17.264163970947266
    9. 'v' → logprob: -17.389163970947266
    10. '_r' → logprob: -17.514163970947266

Token 251: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008284482173621655
    2. ' ]' → logprob: -7.250828266143799
    3. ']
' → logprob: -10.000828742980957
    4. ']

' → logprob: -10.250828742980957
    5. '   ' → logprob: -11.000828742980957
    6. ' if' → logprob: -11.875828742980957
    7. '[' → logprob: -12.375828742980957
    8. ']
' → logprob: -12.500828742980957
    9. 'if' → logprob: -13.250828742980957
    10. ' ' → logprob: -13.625828742980957

Token 252: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09383704513311386
    2. '   ' → logprob: -2.593837022781372
    3. '    
' → logprob: -4.468837261199951
    4. '  
' → logprob: -6.468837261199951
    5. ' 
' → logprob: -7.718837261199951
    6. '<|end|>' → logprob: -7.968837261199951
    7. '	
' → logprob: -8.343836784362793
    8. '   
' → logprob: -8.968836784362793
    9. '
' → logprob: -9.218836784362793
    10. ',' → logprob: -9.468836784362793

Token 253: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0278717279434204
    2. 'prefix' → logprob: -1.6528717279434204
    3. '   ' → logprob: -1.7778717279434204
    4. 'sum' → logprob: -2.902871608734131
    5. 'acc' → logprob: -3.402871608734131
    6. 'pr' → logprob: -3.402871608734131
    7. 'pref' → logprob: -3.527871608734131
    8. 'S' → logprob: -3.527871608734131
    9. '    
' → logprob: -4.527871608734131
    10. 'psum' → logprob: -4.777871608734131

Token 254: ' Cré' (ID: 109203)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.4910851716995239
    2. 'pref' → logprob: -1.741085171699524
    3. 's' → logprob: -2.2410850524902344
    4. 'acc' → logprob: -3.2410850524902344
    5. 'sum' → logprob: -4.491085052490234
    6. 'cs' → logprob: -4.741085052490234
    7. 'S' → logprob: -4.866085052490234
    8. 'pre' → logprob: -4.991085052490234
    9. 'cum' → logprob: -5.366085052490234
    10. ' prefix' → logprob: -5.366085052490234

Token 255: 'ation' (ID: 387)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.8671086430549622
    2. 'ation' → logprob: -1.7421085834503174
    3. 'r' → logprob: -1.9921085834503174
    4. '#' → logprob: -2.6171085834503174
    5. 'd' → logprob: -3.2421085834503174
    6. 'c' → logprob: -3.4921085834503174
    7. 'er' → logprob: -4.1171088218688965
    8. ' r' → logprob: -4.7421088218688965
    9. '_sum' → logprob: -4.7421088218688965
    10. 'cum' → logprob: -4.7421088218688965

Token 256: ' d' (ID: 272)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.23201866447925568
    2. '   ' → logprob: -2.1070187091827393
    3. 'des' → logprob: -3.7320187091827393
    4. 'r' → logprob: -3.8570187091827393
    5. 's' → logprob: -4.73201847076416
    6. ' de' → logprob: -4.98201847076416
    7. 'acc' → logprob: -5.35701847076416
    8. ' r' → logprob: -5.73201847076416
    9. 'prefix' → logprob: -6.10701847076416
    10. 'de' → logprob: -6.23201847076416

Token 257: ''une' (ID: 13337)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8286364674568176
    2. ' r' → logprob: -2.078636407852173
    3. 'acc' → logprob: -2.078636407852173
    4. '(r' → logprob: -3.078636407852173
    5. 'e' → logprob: -3.578636407852173
    6. '(acc' → logprob: -3.578636407852173
    7. ' les' → logprob: -3.953636407852173
    8. ' list' → logprob: -3.953636407852173
    9. '[' → logprob: -4.078636646270752
    10. 'es' → logprob: -4.203636646270752

Token 258: ' liste' (ID: 31719)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.29293227195739746
    2. 'list' → logprob: -2.1679322719573975
    3. 'prefix' → logprob: -2.2929322719573975
    4. 'pref' → logprob: -4.292932510375977
    5. 'liste' → logprob: -4.667932510375977
    6. 's' → logprob: -5.417932510375977
    7. 'ac' → logprob: -5.792932510375977
    8. 'c' → logprob: -6.042932510375977
    9. ' prefix' → logprob: -7.542932510375977
    10. 'suffix' → logprob: -7.542932510375977

Token 259: ' contenant' (ID: 131049)
  Prédit: ' prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.9810270667076111
    2. 'prefix' → logprob: -1.1060271263122559
    3. ' des' → logprob: -2.356027126312256
    4. 's' → logprob: -2.606027126312256
    5. '   ' → logprob: -3.856027126312256
    6. ' cum' → logprob: -4.106027126312256
    7. 'acc' → logprob: -4.231027126312256
    8. 'cum' → logprob: -4.231027126312256
    9. 'c' → logprob: -4.481027126312256
    10. ' acc' → logprob: -4.731027126312256

Token 260: ' ' (ID: 220)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.03272027522325516
    2. ' list' → logprob: -4.03272008895874
    3. '[' → logprob: -5.40772008895874
    4. 'acc' → logprob: -5.40772008895874
    5. 'r' → logprob: -6.28272008895874
    6. '[list' → logprob: -6.53272008895874
    7. '[r' → logprob: -7.28272008895874
    8. '(list' → logprob: -7.53272008895874
    9. ' [' → logprob: -8.407720565795898
    10. '[len' → logprob: -8.782720565795898

Token 261: '0' (ID: 15)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.012274758890271187
    2. '[' → logprob: -4.887274742126465
    3. 'acc' → logprob: -6.137274742126465
    4. '[list' → logprob: -6.887274742126465
    5. 'r' → logprob: -7.512274742126465
    6. ' list' → logprob: -8.137274742126465
    7. '[r' → logprob: -8.262274742126465
    8. '(list' → logprob: -9.262274742126465
    9. '[-' → logprob: -9.387274742126465
    10. '[*' → logprob: -10.012274742126465

Token 262: ' suivi' (ID: 60370)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010517130605876446
    2. ',' → logprob: -4.760517120361328
    3. ']+' → logprob: -6.385517120361328
    4. ' ]' → logprob: -10.510517120361328
    5. '   ' → logprob: -10.635517120361328
    6. '
' → logprob: -10.760517120361328
    7. ',r' → logprob: -10.885517120361328
    8. ']
' → logprob: -11.010517120361328
    9. 's' → logprob: -11.010517120361328
    10. ')' → logprob: -11.010517120361328

Token 263: ' des' (ID: 731)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -1.0840916633605957
    2. 'r' → logprob: -1.5840916633605957
    3. 'des' → logprob: -1.8340916633605957
    4. 'de' → logprob: -2.2090916633605957
    5. 'list' → logprob: -2.2090916633605957
    6. '   ' → logprob: -3.5840916633605957
    7. '+' → logprob: -4.209091663360596
    8. 'd' → logprob: -4.834091663360596
    9. ' des' → logprob: -5.084091663360596
    10. 'del' → logprob: -5.709091663360596

Token 264: ' sommes' (ID: 32024)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0035169220063835382
    2. 'acc' → logprob: -5.878517150878906
    3. ' list' → logprob: -7.253517150878906
    4. 'ac' → logprob: -13.628517150878906
    5. '[list' → logprob: -14.503517150878906
    6. 'r' → logprob: -14.628517150878906
    7. '[' → logprob: -14.753517150878906
    8. ' accumulate' → logprob: -14.753517150878906
    9. '=list' → logprob: -15.003517150878906
    10. '(list' → logprob: -15.003517150878906

Token 265: ' cumul' (ID: 163119)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.04307444021105766
    2. 'acc' → logprob: -3.418074369430542
    3. 'cum' → logprob: -4.918074607849121
    4. ' cumul' → logprob: -6.668074607849121
    5. '   ' → logprob: -7.918074607849121
    6. 'list' → logprob: -9.043074607849121
    7. ' ' → logprob: -10.043074607849121
    8. ' acumul' → logprob: -10.043074607849121
    9. '_acc' → logprob: -10.168074607849121
    10. ' accum' → logprob: -10.168074607849121

Token 266: 'ées' (ID: 5161)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.11660534888505936
    2. 'list' → logprob: -2.991605281829834
    3. '[' → logprob: -3.241605281829834
    4. 'ac' → logprob: -4.991605281829834
    5. 'r' → logprob: -5.366605281829834
    6. ' list' → logprob: -6.241605281829834
    7. 'ule' → logprob: -7.116605281829834
    8. '(acc' → logprob: -7.116605281829834
    9. '   ' → logprob: -7.366605281829834
    10. ' [' → logprob: -7.366605281829834

Token 267: ' des' (ID: 731)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.21320001780986786
    2. '(r' → logprob: -1.8381999731063843
    3. 'acc' → logprob: -3.838200092315674
    4. '(acc' → logprob: -4.713200092315674
    5. ' (' → logprob: -7.213200092315674
    6. 'ac' → logprob: -8.463199615478516
    7. ' of' → logprob: -8.588199615478516
    8. 'de' → logprob: -8.588199615478516
    9. 'd' → logprob: -8.588199615478516
    10. 'of' → logprob: -8.713199615478516

Token 268: ' rest' (ID: 2867)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0006521515315398574
    2. ' r' → logprob: -7.375652313232422
    3. '   ' → logprob: -11.375652313232422
    4. ' ' → logprob: -11.875652313232422
    5. 'acc' → logprob: -12.625652313232422
    6. '  ' → logprob: -13.125652313232422
    7. '    ' → logprob: -14.875652313232422
    8. 're' → logprob: -15.250652313232422
    9. '[r' → logprob: -16.000652313232422
    10. 'sorted' → logprob: -16.250652313232422

Token 269: 'es' (ID: 268)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6821752190589905
    2. 'es' → logprob: -1.5571751594543457
    3. '[r' → logprob: -1.9321751594543457
    4. 'r' → logprob: -2.4321751594543457
    5. 'acc' → logprob: -4.182175159454346
    6. 'ées' → logprob: -4.432175159454346
    7. 'e' → logprob: -4.932175159454346
    8. ' [' → logprob: -5.557175159454346
    9. 'és' → logprob: -6.557175159454346
    10. '   ' → logprob: -6.807175159454346

Token 270: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7762919068336487
    2. 'r' → logprob: -0.9012919068336487
    3. '(acc' → logprob: -3.276291847229004
    4. '(r' → logprob: -3.901291847229004
    5. ',' → logprob: -4.151291847229004
    6. '(' → logprob: -4.276291847229004
    7. 'acc' → logprob: -4.401291847229004
    8. '([' → logprob: -4.651291847229004
    9. ' (' → logprob: -4.776291847229004
    10. '[' → logprob: -5.651291847229004

Token 271: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3726489245891571
    2. ' [' → logprob: -2.4976489543914795
    3. '   ' → logprob: -2.9976489543914795
    4. 'acc' → logprob: -3.1226489543914795
    5. 's' → logprob: -3.3726489543914795
    6. 'r' → logprob: -3.4976489543914795
    7. 'p' → logprob: -3.7476489543914795
    8. 'prefix' → logprob: -4.4976487159729
    9. ' s' → logprob: -4.8726487159729
    10. ' p' → logprob: -5.3726487159729

Token 272: ' #' (ID: 1069)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -1.4875510931015015
    2. 's' → logprob: -1.9875510931015015
    3. 'pr' → logprob: -1.9875510931015015
    4. 'p' → logprob: -2.237551212310791
    5. 'prefix' → logprob: -2.362551212310791
    6. 'sr' → logprob: -2.737551212310791
    7. ' acc' → logprob: -3.487551212310791
    8. '[' → logprob: -3.737551212310791
    9. 'ps' → logprob: -4.112551212310791
    10. ' prefix' → logprob: -4.112551212310791

Token 273: ' Cela' (ID: 44403)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -1.0997397899627686
    2. 'prefix' → logprob: -1.3497397899627686
    3. 's' → logprob: -2.2247397899627686
    4. 'pref' → logprob: -2.4747397899627686
    5. 'sr' → logprob: -2.5997397899627686
    6. 'pr' → logprob: -2.9747397899627686
    7. 'p' → logprob: -4.099740028381348
    8. 'rs' → logprob: -4.474740028381348
    9. 'prs' → logprob: -4.724740028381348
    10. 'cs' → logprob: -4.974740028381348

Token 274: ' veut' (ID: 41653)
  Prédit: ' permet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' permet' → logprob: -0.023474669083952904
    2. ' permettra' → logprob: -4.52347469329834
    3. ' donne' → logprob: -5.77347469329834
    4. ')' → logprob: -6.14847469329834
    5. ' facilite' → logprob: -6.52347469329834
    6. ' allows' → logprob: -6.77347469329834
    7. ',' → logprob: -7.39847469329834
    8. 'allows' → logprob: -7.39847469329834
    9. 'le' → logprob: -8.39847469329834
    10. ' crée' → logprob: -8.52347469329834

Token 275: ' dire' (ID: 4071)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.15634669363498688
    2. ' dire' → logprob: -2.0313467979431152
    3. 'une' → logprob: -6.156346797943115
    4. 'r' → logprob: -6.281346797943115
    5. 's' → logprob: -6.656346797943115
    6. 'd' → logprob: -6.781346797943115
    7. 'val' → logprob: -7.031346797943115
    8. '0' → logprob: -7.156346797943115
    9. '-dire' → logprob: -7.281346797943115
    10. 'expr' → logprob: -7.406346797943115

Token 276: ' que' (ID: 661)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7143344283103943
    2. ' [' → logprob: -0.7143344283103943
    3. 'acc' → logprob: -5.089334487915039
    4. 'r' → logprob: -5.464334487915039
    5. ' ' → logprob: -5.714334487915039
    6. ' r' → logprob: -5.839334487915039
    7. ' que' → logprob: -7.214334487915039
    8. '[r' → logprob: -7.464334487915039
    9. ' list' → logprob: -7.589334487915039
    10. '"' → logprob: -7.589334487915039

Token 277: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0231093168258667
    2. ' r' → logprob: -1.0231093168258667
    3. '0' → logprob: -2.3981094360351562
    4. 'acc' → logprob: -2.6481094360351562
    5. ' [' → logprob: -3.1481094360351562
    6. '[' → logprob: -3.7731094360351562
    7. ' ' → logprob: -4.023109436035156
    8. ' acc' → logprob: -4.648109436035156
    9. 'c' → logprob: -5.523109436035156
    10. ' cum' → logprob: -5.898109436035156

Token 278: '_cs' (ID: 82698)
  Prédit: '_inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.6455288529396057
    2. '_acc' → logprob: -0.8955288529396057
    3. '_c' → logprob: -4.020528793334961
    4. '_prefix' → logprob: -4.145528793334961
    5. '_' → logprob: -4.270528793334961
    6. '_s' → logprob: -5.645528793334961
    7. ' =' → logprob: -5.770528793334961
    8. '_sum' → logprob: -6.270528793334961
    9. 'cum' → logprob: -6.395528793334961
    10. 's' → logprob: -6.395528793334961

Token 279: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42079809308052063
    2. '=' → logprob: -1.5457980632781982
    3. 's' → logprob: -2.1707980632781982
    4. '_' → logprob: -4.420798301696777
    5. 'v' → logprob: -6.545798301696777
    6. 'm' → logprob: -7.295798301696777
    7. '_s' → logprob: -7.545798301696777
    8. 'um' → logprob: -7.920798301696777
    9. ' ' → logprob: -8.170798301696777
    10. '_cs' → logprob: -8.295798301696777

Token 280: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1974591314792633
    2. 's' → logprob: -1.822459101676941
    3. ']=' → logprob: -4.1974592208862305
    4. '=' → logprob: -7.4474592208862305
    5. ' ]' → logprob: -7.8224592208862305
    6. '[i' → logprob: -8.57245922088623
    7. ':]' → logprob: -8.69745922088623
    8. ':' → logprob: -8.69745922088623
    9. ' =' → logprob: -9.07245922088623
    10. 'i' → logprob: -9.82245922088623

Token 281: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42901328206062317
    2. ' =' → logprob: -1.0540132522583008
    3. ',' → logprob: -9.8040132522583
    4. '[' → logprob: -9.9290132522583
    5. '=[' → logprob: -10.0540132522583
    6. 's' → logprob: -10.4290132522583
    7. ' ' → logprob: -10.6790132522583
    8. '[i' → logprob: -10.8040132522583
    9. '=list' → logprob: -11.3040132522583
    10. '=[]' → logprob: -11.5540132522583

Token 282: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.14831863343715668
    2. 'la' → logprob: -2.0233185291290283
    3. 'le' → logprob: -6.273318767547607
    4. 'r' → logprob: -7.023318767547607
    5. ' le' → logprob: -7.398318767547607
    6. '0' → logprob: -7.648318767547607
    7. 'l' → logprob: -8.39831829071045
    8. ' ' → logprob: -8.52331829071045
    9. 's' → logprob: -8.77331829071045
    10. 'les' → logprob: -8.89831829071045

Token 283: ' somme' (ID: 64484)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1522064507007599
    2. '0' → logprob: -2.7772064208984375
    3. 'sum' → logprob: -3.6522064208984375
    4. ' r' → logprob: -4.0272064208984375
    5. ' sum' → logprob: -4.7772064208984375
    6. 'i' → logprob: -5.5272064208984375
    7. ' cumulative' → logprob: -6.0272064208984375
    8. ' i' → logprob: -6.1522064208984375
    9. 's' → logprob: -6.1522064208984375
    10. 'c' → logprob: -6.2772064208984375

Token 284: ' des' (ID: 731)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6839998960494995
    2. 'acc' → logprob: -1.1839998960494995
    3. 'des' → logprob: -2.809000015258789
    4. '[r' → logprob: -3.559000015258789
    5. '(acc' → logprob: -3.809000015258789
    6. '[' → logprob: -3.934000015258789
    7. '(r' → logprob: -4.184000015258789
    8. '   ' → logprob: -4.684000015258789
    9. '[i' → logprob: -4.809000015258789
    10. ' des' → logprob: -4.934000015258789

Token 285: ' i' (ID: 575)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00801777932792902
    2. ' r' → logprob: -4.8830180168151855
    3. '[r' → logprob: -8.133017539978027
    4. ' [' → logprob: -10.133017539978027
    5. '[' → logprob: -10.258017539978027
    6. '[i' → logprob: -11.758017539978027
    7. ' ' → logprob: -12.008017539978027
    8. 'acc' → logprob: -12.008017539978027
    9. '0' → logprob: -12.133017539978027
    10. 'rest' → logprob: -12.633017539978027

Token 286: ' premiers' (ID: 59140)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.5974133014678955
    2. ' premiers' → logprob: -1.0974133014678955
    3. '_p' → logprob: -2.3474133014678955
    4. ' premières' → logprob: -5.097413063049316
    5. '_' → logprob: -5.472413063049316
    6. ' premier' → logprob: -6.222413063049316
    7. ' _' → logprob: -6.597413063049316
    8. 's' → logprob: -6.972413063049316
    9. ' ' → logprob: -7.097413063049316
    10. 'r' → logprob: -7.347413063049316

Token 287: ' rest' (ID: 2867)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.019241567701101303
    2. ' r' → logprob: -4.0192413330078125
    3. 'rest' → logprob: -8.269241333007812
    4. 'tokens' → logprob: -8.269241333007812
    5. ' tokens' → logprob: -8.894241333007812
    6. '   ' → logprob: -9.519241333007812
    7. ' ' → logprob: -9.769241333007812
    8. ' elements' → logprob: -9.769241333007812
    9. ' rest' → logprob: -9.894241333007812
    10. 'elements' → logprob: -10.019241333007812

Token 288: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.027391774579882622
    2. 'r' → logprob: -4.9023919105529785
    3. 's' → logprob: -5.0273919105529785
    4. '[' → logprob: -5.4023919105529785
    5. 'ues' → logprob: -6.6523919105529785
    6. '[r' → logprob: -6.6523919105529785
    7. 'cum' → logprob: -6.9023919105529785
    8. 'arts' → logprob: -7.2773919105529785
    9. 'cs' → logprob: -7.7773919105529785
    10. '[:' → logprob: -8.02739143371582

Token 289: ' (' (ID: 350)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3926524817943573
    2. '   ' → logprob: -1.2676525115966797
    3. '_r' → logprob: -4.76765251159668
    4. ',' → logprob: -4.89265251159668
    5. ' r' → logprob: -5.26765251159668
    6. '(r' → logprob: -5.26765251159668
    7. ' =' → logprob: -5.39265251159668
    8. 's' → logprob: -6.39265251159668
    9. '[r' → logprob: -6.39265251159668
    10. ' (' → logprob: -6.39265251159668

Token 290: 'de' (ID: 613)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.04581382870674133
    2. ')' → logprob: -3.420813798904419
    3. '(r' → logprob: -5.670814037322998
    4. '   ' → logprob: -5.795814037322998
    5. ')
' → logprob: -6.670814037322998
    6. ',' → logprob: -7.045814037322998
    7. '(' → logprob: -7.170814037322998
    8. ']' → logprob: -7.170814037322998
    9. '[' → logprob: -7.545814037322998
    10. ' r' → logprob: -7.795814037322998

Token 291: ' ' (ID: 220)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.10916581749916077
    2. ' r' → logprob: -2.359165906906128
    3. 'i' → logprob: -5.484165668487549
    4. 's' → logprob: -6.484165668487549
    5. ')' → logprob: -7.109165668487549
    6. ' la' → logprob: -7.484165668487549
    7. '0' → logprob: -8.234166145324707
    8. ']' → logprob: -8.359166145324707
    9. ' ' → logprob: -8.859166145324707
    10. 'l' → logprob: -8.859166145324707

Token 292: '0' (ID: 15)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.009987685829401016
    2. '0' → logprob: -5.759987831115723
    3. '[r' → logprob: -6.134987831115723
    4. ' r' → logprob: -6.634987831115723
    5. '[' → logprob: -6.759987831115723
    6. ']' → logprob: -7.634987831115723
    7. 'i' → logprob: -8.134987831115723
    8. '
' → logprob: -8.509987831115723
    9. ' [' → logprob: -8.634987831115723
    10. '[i' → logprob: -8.634987831115723

Token 293: ' à' (ID: 1221)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9954866766929626
    2. ',' → logprob: -1.1204867362976074
    3. ':i' → logprob: -2.7454867362976074
    4. 'r' → logprob: -2.8704867362976074
    5. ')' → logprob: -3.1204867362976074
    6. ':r' → logprob: -3.3704867362976074
    7. ']' → logprob: -3.4954867362976074
    8. ' à' → logprob: -4.370486736297607
    9. ',i' → logprob: -4.745486736297607
    10. ',r' → logprob: -5.120486736297607

Token 294: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2533460855484009
    2. ' i' → logprob: -1.5033460855484009
    3. '   ' → logprob: -6.753345966339111
    4. ' ' → logprob: -9.00334644317627
    5. '	i' → logprob: -10.12834644317627
    6. '  ' → logprob: -10.62834644317627
    7. 'r' → logprob: -11.00334644317627
    8. '    ' → logprob: -11.75334644317627
    9. '```' → logprob: -12.00334644317627
    10. ')' → logprob: -12.00334644317627

Token 295: '-' (ID: 12)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.4623458981513977
    2. '+' → logprob: -2.087345838546753
    3. ']' → logprob: -2.087345838546753
    4. ')' → logprob: -3.212345838546753
    5. 's' → logprob: -3.962345838546753
    6. '])
' → logprob: -4.337346076965332
    7. '-' → logprob: -4.837346076965332
    8. ' +' → logprob: -5.462346076965332
    9. 'n' → logprob: -5.837346076965332
    10. ']+' → logprob: -5.962346076965332

Token 296: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18730145692825317
    2. '1' → logprob: -1.9373013973236084
    3. ' i' → logprob: -3.8123013973236084
    4. '```' → logprob: -6.8123016357421875
    5. 'index' → logprob: -7.4373016357421875
    6. ')' → logprob: -7.4373016357421875
    7. ' ' → logprob: -7.6873016357421875
    8. 's' → logprob: -7.8123016357421875
    9. 'r' → logprob: -7.9373016357421875
    10. '-' → logprob: -8.437301635742188

Token 297: ')
' (ID: 446)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.10628903657197952
    2. ')' → logprob: -2.7312891483306885
    3. ']' → logprob: -4.481288909912109
    4. '])
' → logprob: -4.606288909912109
    5. 'r' → logprob: -5.356288909912109
    6. '   ' → logprob: -6.356288909912109
    7. ' ])' → logprob: -6.356288909912109
    8. ')]' → logprob: -6.481288909912109
    9. ')])' → logprob: -6.606288909912109
    10. ',' → logprob: -7.106288909912109

Token 298: '   ' (ID: 271)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6474769711494446
    2. '
' → logprob: -0.7724769711494446
    3. '   ' → logprob: -4.522477149963379
    4. '(r' → logprob: -6.522477149963379
    5. '
' → logprob: -7.897477149963379
    6. ',' → logprob: -8.147477149963379
    7. '  
' → logprob: -8.147477149963379
    8. ')
' → logprob: -8.522477149963379
    9. ',
' → logprob: -8.522477149963379
    10. '    
' → logprob: -8.897477149963379

Token 299: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.0572333037853241
    2. '   ' → logprob: -3.4322333335876465
    3. '
' → logprob: -3.8072333335876465
    4. ' r' → logprob: -7.3072333335876465
    5. '    
' → logprob: -9.057232856750488
    6. '
' → logprob: -9.307232856750488
    7. ' 
' → logprob: -9.932232856750488
    8. '\n' → logprob: -10.557232856750488
    9. '	r' → logprob: -10.807232856750488
    10. '  
' → logprob: -10.932232856750488

Token 300: '_cs' (ID: 82698)
  Prédit: '_cs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cs' → logprob: -1.0325924449716695e-05
    2. '_' → logprob: -12.00001049041748
    3. '_c' → logprob: -13.75001049041748
    4. 's' → logprob: -15.12501049041748
    5. '_s' → logprob: -15.25001049041748
    6. '_cd' → logprob: -15.37501049041748
    7. '\' → logprob: -15.50001049041748
    8. ' _' → logprob: -15.50001049041748
    9. '_js' → logprob: -15.50001049041748
    10. '_css' → logprob: -15.50001049041748

Token 301: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142170786857605
    2. ' =' → logprob: -1.7014217376708984
    3. ',' → logprob: -12.201421737670898
    4. '=list' → logprob: -13.326421737670898
    5. '=[' → logprob: -14.076421737670898
    6. ' ' → logprob: -15.326421737670898
    7. ' =[' → logprob: -15.701421737670898
    8. '＝' → logprob: -15.701421737670898
    9. '=[]' → logprob: -16.0764217376709
    10. ']' → logprob: -16.2014217376709

Token 302: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.018241137266159058
    2. ' [' → logprob: -4.018240928649902
    3. 'list' → logprob: -9.393240928649902
    4. ' list' → logprob: -11.893240928649902
    5. '([' → logprob: -14.518240928649902
    6. '   ' → logprob: -15.768240928649902
    7. '[list' → logprob: -16.14324188232422
    8. ' ' → logprob: -16.26824188232422
    9. '0' → logprob: -16.39324188232422
    10. '(' → logprob: -16.89324188232422

Token 303: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. '*' → logprob: -14.875000953674316
    3. ' ' → logprob: -14.875000953674316
    4. '۰' → logprob: -18.75
    5. '   ' → logprob: -19.125
    6. '00' → logprob: -19.625
    7. 'v' → logprob: -19.75
    8. ']' → logprob: -19.875
    9. '
' → logprob: -20.25
    10. 'a' → logprob: -20.25

Token 304: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005797247868031263
    2. ']+' → logprob: -5.255797386169434
    3. ',' → logprob: -7.505797386169434
    4. ',*' → logprob: -12.380797386169434
    5. '*' → logprob: -12.505797386169434
    6. ']
' → logprob: -12.880797386169434
    7. '+' → logprob: -14.005797386169434
    8. ']+=' → logprob: -14.755797386169434
    9. ')' → logprob: -15.255797386169434
    10. '0' → logprob: -15.255797386169434

Token 305: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17421923577785492
    2. ']+' → logprob: -2.4242191314697266
    3. '+' → logprob: -2.6742191314697266
    4. ' +' → logprob: -6.799219131469727
    5. ',' → logprob: -7.049219131469727
    6. '*' → logprob: -8.924219131469727
    7. '
' → logprob: -9.424219131469727
    8. '+r' → logprob: -10.299219131469727
    9. '+]' → logprob: -10.674219131469727
    10. ']+=' → logprob: -10.799219131469727

Token 306: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -2.7610454708337784e-05
    2. ' list' → logprob: -10.500027656555176
    3. 'List' → logprob: -23.00002670288086
    4. 'lst' → logprob: -24.75002670288086
    5. '(list' → logprob: -25.12502670288086
    6. 'l' → logprob: -25.12502670288086
    7. '	list' → logprob: -25.37502670288086
    8. '   ' → logprob: -25.62502670288086
    9. '[list' → logprob: -26.37502670288086
    10. '_list' → logprob: -26.50002670288086

Token 307: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.00043281487887725234
    2. 'acc' → logprob: -7.750432968139648
    3. '(ac' → logprob: -13.500432968139648
    4. '(' → logprob: -14.625432968139648
    5. '	acc' → logprob: -16.12543296813965
    6. ' accumulate' → logprob: -16.62543296813965
    7. '(
' → logprob: -17.12543296813965
    8. 'ac' → logprob: -17.87543296813965
    9. '_acc' → logprob: -18.00043296813965
    10. ' (' → logprob: -18.25043296813965

Token 308: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -8.08944896562025e-05
    2. 'um' → logprob: -9.500081062316895
    3. 'umul' → logprob: -12.625081062316895
    4. '(' → logprob: -14.000081062316895
    5. 'ulate' → logprob: -14.750081062316895
    6. '(acc' → logprob: -15.375081062316895
    7. 'umal' → logprob: -15.375081062316895
    8. 'umulator' → logprob: -15.750081062316895
    9. 'umulative' → logprob: -16.000080108642578
    10. 'umu' → logprob: -16.125080108642578

Token 309: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -4.127333340875339e-06
    2. 'r' → logprob: -13.000003814697266
    3. ' (' → logprob: -14.000003814697266
    4. '(' → logprob: -14.500003814697266
    5. ')(' → logprob: -15.250003814697266
    6. '(v' → logprob: -16.000003814697266
    7. ')' → logprob: -16.125003814697266
    8. ' ' → logprob: -17.750003814697266
    9. '(re' → logprob: -18.125003814697266
    10. '	r' → logprob: -18.125003814697266

Token 310: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0003645442193374038
    2. ']))' → logprob: -9.125364303588867
    3. ')]' → logprob: -9.250364303588867
    4. ' ))' → logprob: -9.625364303588867
    5. ' ' → logprob: -10.250364303588867
    6. '))
' → logprob: -10.500364303588867
    7. ')])' → logprob: -11.500364303588867
    8. '))]
' → logprob: -12.125364303588867
    9. ')))' → logprob: -12.250364303588867
    10. '])' → logprob: -13.125364303588867

Token 311: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01399813313037157
    2. '
' → logprob: -4.763998031616211
    3. 'r' → logprob: -5.638998031616211
    4. '    
' → logprob: -7.388998031616211
    5. ')' → logprob: -8.263998031616211
    6. '  
' → logprob: -8.638998031616211
    7. '<|end|>' → logprob: -8.638998031616211
    8. ',' → logprob: -9.013998031616211
    9. '  ' → logprob: -9.763998031616211
    10. ' 
' → logprob: -9.888998031616211

Token 312: ' #' (ID: 1069)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03928322717547417
    2. '   ' → logprob: -3.789283275604248
    3. ' r' → logprob: -4.164283275604248
    4. '
' → logprob: -9.28928279876709
    5. 'n' → logprob: -10.03928279876709
    6. '	r' → logprob: -10.03928279876709
    7. ' ' → logprob: -10.28928279876709
    8. '  ' → logprob: -10.91428279876709
    9. '    
' → logprob: -11.28928279876709
    10. ' for' → logprob: -11.41428279876709

Token 313: ' Calcul' (ID: 57243)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1717110425233841
    2. 'r' → logprob: -2.421710968017578
    3. 'n' → logprob: -4.171710968017578
    4. 'res' → logprob: -4.796710968017578
    5. 'best' → logprob: -4.796710968017578
    6. 'm' → logprob: -4.921710968017578
    7. 'total' → logprob: -5.046710968017578
    8. ' for' → logprob: -5.171710968017578
    9. 'prefix' → logprob: -5.421710968017578
    10. 'max' → logprob: -5.921710968017578

Token 314: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21215325593948364
    2. ' de' → logprob: -2.337153196334839
    3. 'r' → logprob: -2.837153196334839
    4. 'de' → logprob: -4.837153434753418
    5. ' of' → logprob: -4.962153434753418
    6. 's' → logprob: -5.212153434753418
    7. ' des' → logprob: -5.462153434753418
    8. ' r' → logprob: -6.587153434753418
    9. 'for' → logprob: -6.712153434753418
    10. 'des' → logprob: -6.712153434753418

Token 315: ' la' (ID: 557)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6237328052520752
    2. ' len' → logprob: -1.8737328052520752
    3. 'N' → logprob: -2.248732805252075
    4. ' N' → logprob: -2.248732805252075
    5. 'i' → logprob: -3.623732805252075
    6. 'n' → logprob: -3.998732805252075
    7. ' i' → logprob: -4.373732566833496
    8. ' n' → logprob: -4.748732566833496
    9. 'max' → logprob: -4.873732566833496
    10. 'd' → logprob: -4.998732566833496

Token 316: ' somme' (ID: 64484)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.805372953414917
    2. 'res' → logprob: -2.055372953414917
    3. 'len' → logprob: -2.055372953414917
    4. 'N' → logprob: -2.180372953414917
    5. 'total' → logprob: -2.180372953414917
    6. 'min' → logprob: -2.555372953414917
    7. 'r' → logprob: -2.930372953414917
    8. 'd' → logprob: -2.930372953414917
    9. 'ans' → logprob: -3.055372953414917
    10. 'm' → logprob: -4.055373191833496

Token 317: ' cumul' (ID: 163119)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1354207545518875
    2. '_r' → logprob: -2.635420799255371
    3. 'total' → logprob: -4.260420799255371
    4. '   ' → logprob: -4.385420799255371
    5. 'des' → logprob: -5.260420799255371
    6. 'rest' → logprob: -5.385420799255371
    7. 'tot' → logprob: -5.760420799255371
    8. '_total' → logprob: -5.760420799255371
    9. '_' → logprob: -6.260420799255371
    10. '_tot' → logprob: -6.510420799255371

Token 318: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.093685083091259
    2. 'ées' → logprob: -2.9686851501464844
    3. 'es' → logprob: -4.093685150146484
    4. 'r' → logprob: -4.593685150146484
    5. ' r' → logprob: -5.343685150146484
    6. 'e' → logprob: -5.843685150146484
    7. '[' → logprob: -6.843685150146484
    8. 'ed' → logprob: -7.843685150146484
    9. 'és' → logprob: -8.093685150146484
    10. 'ee' → logprob: -8.218685150146484

Token 319: ' des' (ID: 731)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.006484437733888626
    2. ' r' → logprob: -5.756484508514404
    3. 's' → logprob: -7.131484508514404
    4. ' of' → logprob: -7.506484508514404
    5. 'inverse' → logprob: -7.881484508514404
    6. '   ' → logprob: -8.631484031677246
    7. 'des' → logprob: -8.756484031677246
    8. '(r' → logprob: -8.756484031677246
    9. 'acc' → logprob: -8.881484031677246
    10. '_inverse' → logprob: -9.006484031677246

Token 320: ' "' (ID: 392)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0061574894934892654
    2. ' r' → logprob: -5.131157398223877
    3. 're' → logprob: -9.506157875061035
    4. ' reversed' → logprob: -9.881157875061035
    5. 'reverse' → logprob: -10.506157875061035
    6. '[::-' → logprob: -10.631157875061035
    7. '(r' → logprob: -11.381157875061035
    8. 'rev' → logprob: -11.381157875061035
    9. 'sorted' → logprob: -12.256157875061035
    10. ' ' → logprob: -12.381157875061035

Token 321: 'com' (ID: 639)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00045926711754873395
    2. ' r' → logprob: -7.75045919418335
    3. ')' → logprob: -11.375459671020508
    4. ']' → logprob: -13.000459671020508
    5. 'reverse' → logprob: -13.500459671020508
    6. ' ' → logprob: -13.562959671020508
    7. 'd' → logprob: -13.875459671020508
    8. '   ' → logprob: -14.062959671020508
    9. 'v' → logprob: -14.125459671020508
    10. 'inv' → logprob: -14.250459671020508

Token 322: 'plements' (ID: 96965)
  Prédit: 'pl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.03173418343067169
    2. 'p' → logprob: -4.281733989715576
    3. 'plements' → logprob: -4.656733989715576
    4. 'r' → logprob: -5.406733989715576
    5. 'm' → logprob: -7.156733989715576
    6. 'plt' → logprob: -7.281733989715576
    7. 'plement' → logprob: -7.531733989715576
    8. '_pl' → logprob: -8.031734466552734
    9. 'pls' → logprob: -8.156734466552734
    10. 'plets' → logprob: -8.906734466552734

Token 323: '"' (ID: 1)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2267669290304184
    2. ' r' → logprob: -2.35176682472229
    3. '_r' → logprob: -2.97676682472229
    4. '"' → logprob: -4.101767063140869
    5. '_' → logprob: -4.476767063140869
    6. 's' → logprob: -5.476767063140869
    7. ' invers' → logprob: -5.601767063140869
    8. ',' → logprob: -5.726767063140869
    9. '_inv' → logprob: -5.976767063140869
    10. ' de' → logprob: -6.101767063140869

Token 324: ' (' (ID: 350)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.039265118539333344
    2. '_inv' → logprob: -4.039265155792236
    3. '   ' → logprob: -4.789265155792236
    4. ',' → logprob: -5.914265155792236
    5. ' r' → logprob: -6.289265155792236
    6. '_in' → logprob: -6.789265155792236
    7. 'in' → logprob: -6.789265155792236
    8. 'inv' → logprob: -6.914265155792236
    9. '_r' → logprob: -7.164265155792236
    10. '_inverse' → logprob: -7.289265155792236

Token 325: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.02106320485472679
    2. ' r' → logprob: -4.521063327789307
    3. '[' → logprob: -5.271063327789307
    4. '[r' → logprob: -6.146063327789307
    5. ' [' → logprob: -6.896063327789307
    6. '0' → logprob: -7.771063327789307
    7. '[::-' → logprob: -8.271062850952148
    8. '   ' → logprob: -8.521062850952148
    9. ')' → logprob: -8.521062850952148
    10. 'rev' → logprob: -9.521062850952148

Token 326: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.00025919382460415363
    2. 'inv' → logprob: -9.500259399414062
    3. '_cs' → logprob: -9.625259399414062
    4. 'r' → logprob: -10.125259399414062
    5. ')' → logprob: -11.125259399414062
    6. '   ' → logprob: -11.625259399414062
    7. 'd' → logprob: -11.875259399414062
    8. 'cs' → logprob: -12.125259399414062
    9. ')_' → logprob: -12.375259399414062
    10. ''_' → logprob: -12.750259399414062

Token 327: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13925346732139587
    2. '_cs' → logprob: -2.6392533779144287
    3. ')]' → logprob: -4.139253616333008
    4. '[' → logprob: -4.639253616333008
    5. ')])' → logprob: -4.639253616333008
    6. '))' → logprob: -5.264253616333008
    7. 'cs' → logprob: -5.389253616333008
    8. '])' → logprob: -6.139253616333008
    9. '[:-' → logprob: -6.264253616333008
    10. '[::-' → logprob: -6.264253616333008

Token 328: ' en' (ID: 469)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24928921461105347
    2. 'r' → logprob: -2.7492892742156982
    3. '=' → logprob: -2.9992892742156982
    4. '_cs' → logprob: -2.9992892742156982
    5. '   ' → logprob: -3.1242892742156982
    6. 'cs' → logprob: -5.124289035797119
    7. ',' → logprob: -6.124289035797119
    8. 's' → logprob: -6.374289035797119
    9. '[' → logprob: -6.749289035797119
    10. ' r' → logprob: -7.749289035797119

Token 329: ' part' (ID: 997)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.929365336894989
    2. 'ordre' → logprob: -1.0543653964996338
    3. 'sens' → logprob: -2.554365396499634
    4. 'acc' → logprob: -2.679365396499634
    5. 're' → logprob: -2.929365396499634
    6. 'reverse' → logprob: -3.929365396499634
    7. 'liste' → logprob: -4.554365158081055
    8. 'c' → logprob: -5.679365158081055
    9. 'list' → logprob: -5.679365158081055
    10. 'order' → logprob: -5.804365158081055

Token 330: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.9297997355461121
    2. 'ielle' → logprob: -1.3047997951507568
    3. 'ition' → logprob: -2.429799795150757
    4. 'ial' → logprob: -2.804799795150757
    5. 'i' → logprob: -3.304799795150757
    6. '[' → logprob: -3.429799795150757
    7. 'it' → logprob: -3.554799795150757
    8. 'iale' → logprob: -4.179799556732178
    9. 'ie' → logprob: -4.429799556732178
    10. 'itions' → logprob: -4.554799556732178

Token 331: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.4937375485897064
    2. ' de' → logprob: -1.6187375783920288
    3. 'from' → logprob: -2.3687374591827393
    4. ' du' → logprob: -2.9937374591827393
    5. ' from' → logprob: -4.243737697601318
    6. 'du' → logprob: -4.243737697601318
    7. '[' → logprob: -4.743737697601318
    8. ' ' → logprob: -6.118737697601318
    9. '   ' → logprob: -6.368737697601318
    10. 'd' → logprob: -6.368737697601318

Token 332: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.14424392580986023
    2. ' la' → logprob: -2.7692439556121826
    3. 'len' → logprob: -2.8942439556121826
    4. 'l' → logprob: -4.3942437171936035
    5. 'dro' → logprob: -6.7692437171936035
    6. ' droite' → logprob: -7.3942437171936035
    7. 'r' → logprob: -7.6442437171936035
    8. ' len' → logprob: -7.8942437171936035
    9. '#' → logprob: -8.644244194030762
    10. '0' → logprob: -8.769244194030762

Token 333: ' fin' (ID: 2131)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4377667009830475
    2. 'len' → logprob: -2.4377667903900146
    3. 'end' → logprob: -2.6877667903900146
    4. '1' → logprob: -3.1877667903900146
    5. 'r' → logprob: -3.4377667903900146
    6. 'right' → logprob: -3.8127667903900146
    7. '[' → logprob: -4.0627665519714355
    8. 'fin' → logprob: -4.1877665519714355
    9. '[::-' → logprob: -4.4377665519714355
    10. 'i' → logprob: -4.5627665519714355

Token 334: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4543774724006653
    2. 'r' → logprob: -1.4543774127960205
    3. ' =' → logprob: -2.3293774127960205
    4. ' r' → logprob: -4.7043776512146
    5. '=' → logprob: -4.8293776512146
    6. '[::-' → logprob: -4.8293776512146
    7. ',' → logprob: -5.3293776512146
    8. '[' → logprob: -7.4543776512146
    9. 's' → logprob: -7.4543776512146
    10. ' (' → logprob: -7.7043776512146

Token 335: ' tableau' (ID: 67053)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0019732422661036253
    2. 'range' → logprob: -7.0019731521606445
    3. 'list' → logprob: -8.001973152160645
    4. '[::-' → logprob: -8.626973152160645
    5. 'liste' → logprob: -8.751973152160645
    6. 'acc' → logprob: -9.251973152160645
    7. ' r' → logprob: -9.376973152160645
    8. 're' → logprob: -9.751973152160645
    9. '[' → logprob: -10.251973152160645
    10. 'reverse' → logprob: -10.251973152160645

Token 336: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5760379433631897
    2. 'r' → logprob: -0.9510379433631897
    3. ' r' → logprob: -3.076037883758545
    4. ',' → logprob: -5.701037883758545
    5. '
' → logprob: -7.451037883758545
    6. ' (' → logprob: -8.076038360595703
    7. ' ' → logprob: -8.201038360595703
    8. ' =' → logprob: -8.576038360595703
    9. '  ' → logprob: -9.201038360595703
    10. ':' → logprob: -9.701038360595703

Token 337: '   ' (ID: 271)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.05332596227526665
    2. '   ' → logprob: -3.678325891494751
    3. ' r' → logprob: -4.05332612991333
    4. ',' → logprob: -5.67832612991333
    5. ' =' → logprob: -5.80332612991333
    6. '[' → logprob: -6.67832612991333
    7. '
' → logprob: -8.553325653076172
    8. '=' → logprob: -8.678325653076172
    9. 's' → logprob: -8.678325653076172
    10. '_r' → logprob: -9.178325653076172

Token 338: ' #' (ID: 1069)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.32879605889320374
    2. ' r' → logprob: -1.3287960290908813
    3. '   ' → logprob: -4.203795909881592
    4. '
' → logprob: -9.20379638671875
    5. ' ' → logprob: -9.45379638671875
    6. '	r' → logprob: -10.07879638671875
    7. 'rv' → logprob: -10.57879638671875
    8. 'c' → logprob: -10.70379638671875
    9. ' c' → logprob: -10.89129638671875
    10. ',' → logprob: -11.01629638671875

Token 339: ' La' (ID: 3038)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.08361973613500595
    2. ' r' → logprob: -2.5836198329925537
    3. '   ' → logprob: -5.583619594573975
    4. 'rv' → logprob: -8.833620071411133
    5. '
' → logprob: -9.208620071411133
    6. 'rev' → logprob: -9.708620071411133
    7. 'c' → logprob: -10.146120071411133
    8. ' ' → logprob: -10.271120071411133
    9. 'reverse' → logprob: -10.271120071411133
    10. '[r' → logprob: -10.333620071411133

Token 340: ' fonction' (ID: 17610)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.030438397079706192
    2. ' r' → logprob: -3.6554384231567383
    3. 'rev' → logprob: -7.405438423156738
    4. 'suffix' → logprob: -7.405438423156738
    5. 'c' → logprob: -7.780438423156738
    6. 's' → logprob: -7.780438423156738
    7. 'inv' → logprob: -8.155438423156738
    8. '#' → logprob: -8.405438423156738
    9. 'reverse' → logprob: -8.405438423156738
    10. 'rc' → logprob: -8.780438423156738

Token 341: ' accumulate' (ID: 74226)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7297965288162231
    2. 'acc' → logprob: -1.3547965288162231
    3. ' accumulate' → logprob: -2.1047964096069336
    4. 'from' → logprob: -3.3547964096069336
    5. 'list' → logprob: -3.6047964096069336
    6. ' r' → logprob: -4.104796409606934
    7. 'def' → logprob: -4.354796409606934
    8. 'import' → logprob: -4.604796409606934
    9. ' list' → logprob: -4.604796409606934
    10. 'reverse' → logprob: -4.854796409606934

Token 342: ' op' (ID: 991)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4644712209701538
    2. '(lambda' → logprob: -1.4644712209701538
    3. '(re' → logprob: -2.4644713401794434
    4. 'r' → logprob: -3.8394713401794434
    5. ' from' → logprob: -4.964471340179443
    6. '(r' → logprob: -5.089471340179443
    7. '(' → logprob: -5.339471340179443
    8. '(reverse' → logprob: -5.339471340179443
    9. ',' → logprob: -6.464471340179443
    10. 're' → logprob: -6.589471340179443

Token 343: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.12566258013248444
    2. 'r' → logprob: -3.6256625652313232
    3. 're' → logprob: -3.8756625652313232
    4. 'ér' → logprob: -4.250662803649902
    5. 'er' → logprob: -4.500662803649902
    6. '=' → logprob: -4.625662803649902
    7. 'e' → logprob: -5.000662803649902
    8. 'ération' → logprob: -5.000662803649902
    9. 'érations' → logprob: -5.125662803649902
    10. 't' → logprob: -6.000662803649902

Token 344: ' normalement' (ID: 164432)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -1.1651661396026611
    2. '(reverse' → logprob: -1.2901661396026611
    3. '(' → logprob: -1.6651661396026611
    4. '(re' → logprob: -2.415166139602661
    5. '(r' → logprob: -3.415166139602661
    6. 'r' → logprob: -3.665166139602661
    7. 'sur' → logprob: -4.540165901184082
    8. 'from' → logprob: -4.915165901184082
    9. '(acc' → logprob: -5.040165901184082
    10. 's' → logprob: -5.165165901184082

Token 345: ' de' (ID: 334)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.7879133224487305
    2. '(lambda' → logprob: -1.7879133224487305
    3. '(re' → logprob: -2.1629133224487305
    4. '(reverse' → logprob: -2.1629133224487305
    5. 'from' → logprob: -2.4129133224487305
    6. '(acc' → logprob: -3.7879133224487305
    7. 'r' → logprob: -4.6629133224487305
    8. '(' → logprob: -4.9129133224487305
    9. ' on' → logprob: -5.5379133224487305
    10. ' from' → logprob: -5.5379133224487305

Token 346: ' gauche' (ID: 58367)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.24984091520309448
    2. 'right' → logprob: -2.1248409748077393
    3. ' droite' → logprob: -2.9998409748077393
    4. 'r' → logprob: -3.4998409748077393
    5. 'la' → logprob: -5.49984073638916
    6. 'reverse' → logprob: -5.74984073638916
    7. 're' → logprob: -6.12484073638916
    8. 'import' → logprob: -6.37484073638916
    9. 'lambda' → logprob: -6.62484073638916
    10. ' ' → logprob: -6.99984073638916

Token 347: ' à' (ID: 1221)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0636482983827591
    2. 'à' → logprob: -2.938648223876953
    3. ' to' → logprob: -5.563648223876953
    4. ')' → logprob: -6.188648223876953
    5. ' à' → logprob: -7.063648223876953
    6. 'right' → logprob: -7.688648223876953
    7. '-to' → logprob: -7.813648223876953
    8. 'reverse' → logprob: -8.438648223876953
    9. '   ' → logprob: -9.063648223876953
    10. 'wards' → logprob: -9.063648223876953

Token 348: ' droite' (ID: 61428)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.5580103993415833
    2. 'dro' → logprob: -0.9330103993415833
    3. ' droite' → logprob: -4.058010578155518
    4. 'left' → logprob: -4.433010578155518
    5. 'it' → logprob: -5.933010578155518
    6. 'g' → logprob: -6.683010578155518
    7. 'la' → logprob: -7.683010578155518
    8. ' itertools' → logprob: -8.68301010131836
    9. ' gauche' → logprob: -8.80801010131836
    10. 'iter' → logprob: -8.80801010131836

Token 349: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4235531687736511
    2. '   ' → logprob: -1.798553228378296
    3. 'r' → logprob: -2.048553228378296
    4. '[::-' → logprob: -4.298552989959717
    5. ' ,' → logprob: -4.673552989959717
    6. ' r' → logprob: -4.798552989959717
    7. 'import' → logprob: -5.548552989959717
    8. 'rev' → logprob: -6.048552989959717
    9. ' (' → logprob: -6.673552989959717
    10. ' ' → logprob: -7.048552989959717

Token 350: ' donc' (ID: 14206)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -1.1365612745285034
    2. 'r' → logprob: -1.2615612745285034
    3. ' but' → logprob: -2.136561393737793
    4. ' r' → logprob: -2.261561393737793
    5. ' reverse' → logprob: -2.761561393737793
    6. '   ' → logprob: -3.261561393737793
    7. 'but' → logprob: -3.761561393737793
    8. 'acc' → logprob: -4.011561393737793
    9. ' accumulate' → logprob: -5.261561393737793
    10. '[' → logprob: -5.761561393737793

Token 351: ' on' (ID: 402)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3523652255535126
    2. 'list' → logprob: -2.477365255355835
    3. ' list' → logprob: -2.477365255355835
    4. ' r' → logprob: -2.727365255355835
    5. ' [' → logprob: -3.852365255355835
    6. '[' → logprob: -3.977365255355835
    7. '   ' → logprob: -4.477365016937256
    8. '[r' → logprob: -5.477365016937256
    9. 'reverse' → logprob: -6.227365016937256
    10. 'acc' → logprob: -6.602365016937256

Token 352: ' inverse' (ID: 53743)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.9136909246444702
    2. 'reverse' → logprob: -1.1636909246444702
    3. 'r' → logprob: -2.4136910438537598
    4. ' utilise' → logprob: -2.7886910438537598
    5. 'do' → logprob: -3.4136910438537598
    6. 'inverse' → logprob: -3.6636910438537598
    7. 're' → logprob: -4.16369104385376
    8. 'acc' → logprob: -4.53869104385376
    9. ' reverse' → logprob: -4.78869104385376
    10. 'fait' → logprob: -5.41369104385376

Token 353: ' la' (ID: 557)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.026958931237459183
    2. '(r' → logprob: -3.77695894241333
    3. 'la' → logprob: -6.65195894241333
    4. 'l' → logprob: -6.77695894241333
    5. ' r' → logprob: -8.151958465576172
    6. ' la' → logprob: -8.276958465576172
    7. '   ' → logprob: -9.026958465576172
    8. '(' → logprob: -9.526958465576172
    9. 'le' → logprob: -9.651958465576172
    10. '[r' → logprob: -9.651958465576172

Token 354: ' liste' (ID: 31719)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -4.632542913896032e-05
    2. 'list' → logprob: -11.000046730041504
    3. ' r' → logprob: -11.000046730041504
    4. 'liste' → logprob: -12.750046730041504
    5. 'lst' → logprob: -13.375046730041504
    6. '[::-' → logprob: -13.375046730041504
    7. 'rv' → logprob: -13.750046730041504
    8. ')' → logprob: -14.125046730041504
    9. '   ' → logprob: -14.375046730041504
    10. 'direction' → logprob: -14.625046730041504

Token 355: ',' (ID: 11)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.030852198600769
    2. '   ' → logprob: -1.280852198600769
    3. '[::-' → logprob: -1.280852198600769
    4. ',' → logprob: -3.2808523178100586
    5. '(r' → logprob: -3.6558523178100586
    6. ' r' → logprob: -4.530852317810059
    7. ' (' → logprob: -5.780852317810059
    8. '[r' → logprob: -6.155852317810059
    9. 'rev' → logprob: -6.780852317810059
    10. ')' → logprob: -7.405852317810059

Token 356: ' puis' (ID: 18766)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.4287042021751404
    2. ' reverse' → logprob: -1.6787042617797852
    3. ' puis' → logprob: -2.678704261779785
    4. 'r' → logprob: -2.803704261779785
    5. '   ' → logprob: -4.803704261779785
    6. ' r' → logprob: -4.928704261779785
    7. ',' → logprob: -5.803704261779785
    8. ' then' → logprob: -5.803704261779785
    9. 'rev' → logprob: -5.928704261779785
    10. '    ' → logprob: -6.303704261779785

Token 357: ' on' (ID: 402)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.767058253288269
    2. 'acc' → logprob: -1.517058253288269
    3. 'reverse' → logprob: -1.892058253288269
    4. 'r' → logprob: -2.5170583724975586
    5. '   ' → logprob: -3.1420583724975586
    6. ' list' → logprob: -4.267058372497559
    7. 're' → logprob: -5.267058372497559
    8. ')' → logprob: -5.517058372497559
    9. ' accumulate' → logprob: -5.642058372497559
    10. '[::-' → logprob: -6.017058372497559

Token 358: ' l' (ID: 305)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.08063265681266785
    2. 'list' → logprob: -3.0806326866149902
    3. 'reverse' → logprob: -3.5806326866149902
    4. ' accumulate' → logprob: -5.95563268661499
    5. 're' → logprob: -8.330632209777832
    6. '   ' → logprob: -8.830632209777832
    7. ' list' → logprob: -8.830632209777832
    8. 'rev' → logprob: -8.955632209777832
    9. '[::-' → logprob: -8.955632209777832
    10. 'liste' → logprob: -9.830632209777832

Token 359: ''acc' (ID: 46331)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.758041262626648
    2. '[::-' → logprob: -1.258041262626648
    3. 'acc' → logprob: -1.758041262626648
    4. 're' → logprob: -3.2580413818359375
    5. 'rev' → logprob: -3.6330413818359375
    6. 'r' → logprob: -6.8830413818359375
    7. 'ist' → logprob: -7.2580413818359375
    8. '.reverse' → logprob: -7.2580413818359375
    9. 'inverse' → logprob: -7.2580413818359375
    10. '#' → logprob: -7.2580413818359375

Token 360: 'um' (ID: 394)
  Prédit: 'umulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.0002622894535306841
    2. 'um' → logprob: -8.375262260437012
    3. 'umul' → logprob: -11.250262260437012
    4. 'om' → logprob: -12.125262260437012
    5. 'acc' → logprob: -13.000262260437012
    6. ' accumulate' → logprob: -13.750262260437012
    7. 'ulate' → logprob: -13.750262260437012
    8. 'umulator' → logprob: -13.875262260437012
    9. 'cum' → logprob: -14.125262260437012
    10. 'umu' → logprob: -14.250262260437012

Token 361: 'ule' (ID: 1601)
  Prédit: 'ulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulate' → logprob: -0.09135260432958603
    2. 'late' → logprob: -3.341352701187134
    3. 'acc' → logprob: -3.591352701187134
    4. 'ate' → logprob: -4.091352462768555
    5. 'ule' → logprob: -5.841352462768555
    6. '#' → logprob: -6.591352462768555
    7. 'culate' → logprob: -7.466352462768555
    8. 'ul' → logprob: -7.841352462768555
    9. ' accumulate' → logprob: -8.091352462768555
    10. 'r' → logprob: -8.091352462768555

Token 362: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7594250440597534
    2. ',' → logprob: -1.7594250440597534
    3. '[::-' → logprob: -1.7594250440597534
    4. 'r' → logprob: -2.009425163269043
    5. '(r' → logprob: -3.259425163269043
    6. '=' → logprob: -6.259425163269043
    7. '(' → logprob: -6.384425163269043
    8. ' =' → logprob: -6.509425163269043
    9. ' (' → logprob: -6.634425163269043
    10. 'rev' → logprob: -7.134425163269043

Token 363: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8850394487380981
    2. ' puis' → logprob: -1.5100394487380981
    3. '#' → logprob: -1.7600394487380981
    4. ',' → logprob: -2.6350393295288086
    5. '[::-' → logprob: -3.1350393295288086
    6. ')' → logprob: -3.7600393295288086
    7. ' then' → logprob: -4.260039329528809
    8. 'reverse' → logprob: -4.885039329528809
    9. '),' → logprob: -5.010039329528809
    10. '[' → logprob: -5.260039329528809

Token 364: ' #' (ID: 1069)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.6524180173873901
    2. ' puis' → logprob: -1.9024180173873901
    3. ' reverse' → logprob: -2.0274181365966797
    4. '   ' → logprob: -2.7774181365966797
    5. ',' → logprob: -3.2774181365966797
    6. '[::-' → logprob: -3.7774181365966797
    7. 'r' → logprob: -4.27741813659668
    8. '[r' → logprob: -4.40241813659668
    9. '),' → logprob: -4.52741813659668
    10. ' r' → logprob: -4.65241813659668

Token 365: ' puis' (ID: 18766)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6384514570236206
    2. '   ' → logprob: -1.3884514570236206
    3. ' puis' → logprob: -2.63845157623291
    4. 'reverse' → logprob: -2.63845157623291
    5. 'then' → logprob: -4.26345157623291
    6. ' then' → logprob: -4.26345157623291
    7. '[::-' → logprob: -4.88845157623291
    8. ')' → logprob: -5.01345157623291
    9. '),' → logprob: -5.13845157623291
    10. ' r' → logprob: -5.38845157623291

Token 366: ' on' (ID: 402)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.14422091841697693
    2. 'on' → logprob: -2.7692208290100098
    3. '[::-' → logprob: -3.2692208290100098
    4. '   ' → logprob: -4.14422082901001
    5. ' on' → logprob: -4.76922082901001
    6. '[' → logprob: -5.64422082901001
    7. ' r' → logprob: -6.26922082901001
    8. 'reverse' → logprob: -7.01922082901001
    9. '.reverse' → logprob: -7.89422082901001
    10. 'list' → logprob: -8.019221305847168

Token 367: ' la' (ID: 557)
  Prédit: '.reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.reverse' → logprob: -0.47094300389289856
    2. '[::-' → logprob: -1.2209429740905762
    3. 'reverse' → logprob: -2.845942974090576
    4. 'r' → logprob: -4.095942974090576
    5. '.r' → logprob: -6.845942974090576
    6. '[' → logprob: -6.845942974090576
    7. ' reverse' → logprob: -7.095942974090576
    8. 'list' → logprob: -7.220942974090576
    9. ' .' → logprob: -7.720942974090576
    10. '.' → logprob: -7.720942974090576

Token 368: ' ré' (ID: 3146)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.16862782835960388
    2. 'reverse' → logprob: -2.2936277389526367
    3. '.reverse' → logprob: -4.043627738952637
    4. '[' → logprob: -4.668627738952637
    5. 're' → logprob: -4.918627738952637
    6. 'rev' → logprob: -5.168627738952637
    7. '[in' → logprob: -5.168627738952637
    8. 'r' → logprob: -5.293627738952637
    9. '[r' → logprob: -6.543627738952637
    10. 'inverse' → logprob: -7.043627738952637

Token 369: 'inverse' (ID: 153422)
  Prédit: 'inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.5801874399185181
    2. 'verse' → logprob: -0.8301874399185181
    3. 'reverse' → logprob: -6.2051873207092285
    4. 'transpose' → logprob: -7.5801873207092285
    5. 'interp' → logprob: -8.080187797546387
    6. 'inv' → logprob: -8.455187797546387
    7. 'in' → logprob: -8.455187797546387
    8. 'invert' → logprob: -8.455187797546387
    9. 'tour' → logprob: -8.705187797546387
    10. 'v' → logprob: -8.955187797546387

Token 370: ' pour' (ID: 1930)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.21615752577781677
    2. 'r' → logprob: -1.8411575555801392
    3. '   ' → logprob: -4.09115743637085
    4. ' =' → logprob: -5.21615743637085
    5. ',' → logprob: -5.46615743637085
    6. '[' → logprob: -6.34115743637085
    7. ' (' → logprob: -6.46615743637085
    8. '(r' → logprob: -6.59115743637085
    9. '[r' → logprob: -7.21615743637085
    10. ' [' → logprob: -7.71615743637085

Token 371: ' obtenir' (ID: 54423)
  Prédit: 'avoir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avoir' → logprob: -1.1510030031204224
    2. 'ob' → logprob: -1.2760030031204224
    3. ' obtenir' → logprob: -2.276002883911133
    4. 'g' → logprob: -2.776002883911133
    5. 'r' → logprob: -3.151002883911133
    6. 'con' → logprob: -3.401002883911133
    7. 're' → logprob: -3.651002883911133
    8. ' garder' → logprob: -3.651002883911133
    9. ' conserver' → logprob: -3.776002883911133
    10. 'l' → logprob: -3.776002883911133

Token 372: ' les' (ID: 1341)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5859278440475464
    2. '[' → logprob: -1.2109278440475464
    3. 'la' → logprob: -3.085927963256836
    4. '[r' → logprob: -3.585927963256836
    5. ' la' → logprob: -3.710927963256836
    6. 'list' → logprob: -4.085927963256836
    7. ' [' → logprob: -4.835927963256836
    8. '[::-' → logprob: -4.960927963256836
    9. 'l' → logprob: -5.585927963256836
    10. ' r' → logprob: -5.960927963256836

Token 373: ' sommes' (ID: 32024)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.2819129228591919
    2. 'sens' → logprob: -1.656912922859192
    3. 'c' → logprob: -3.4069128036499023
    4. 'rés' → logprob: -5.031912803649902
    5. 's' → logprob: -5.156912803649902
    6. ']' → logprob: -6.156912803649902
    7. 'result' → logprob: -6.281912803649902
    8. ' sens' → logprob: -7.281912803649902
    9. 'cum' → logprob: -7.281912803649902
    10. 'reverse' → logprob: -7.406912803649902

Token 374: ' de' (ID: 334)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5930734872817993
    2. 'cum' → logprob: -2.0930733680725098
    3. '   ' → logprob: -2.2180733680725098
    4. 'r' → logprob: -2.9680733680725098
    5. 'in' → logprob: -3.2180733680725098
    6. ' cumul' → logprob: -3.4680733680725098
    7. ' invers' → logprob: -3.8430733680725098
    8. '[::-' → logprob: -3.9680733680725098
    9. 'inv' → logprob: -4.34307336807251
    10. ' cum' → logprob: -4.96807336807251

Token 375: ' droite' (ID: 61428)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.015016764402389526
    2. 'la' → logprob: -4.890016555786133
    3. ' droite' → logprob: -5.765016555786133
    4. 'r' → logprob: -6.140016555786133
    5. 'fin' → logprob: -7.515016555786133
    6. 'l' → logprob: -7.765016555786133
    7. 'arr' → logprob: -8.265016555786133
    8. '-dro' → logprob: -8.765016555786133
    9. 'c' → logprob: -9.015016555786133
    10. '```' → logprob: -9.890016555786133

Token 376: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.5772910714149475
    2. 'à' → logprob: -0.9522910714149475
    3. '-à' → logprob: -3.3272910118103027
    4. ' ' → logprob: -5.202291011810303
    5. ' to' → logprob: -5.452291011810303
    6. 'to' → logprob: -5.702291011810303
    7. '   ' → logprob: -7.077291011810303
    8. 'a' → logprob: -7.327291011810303
    9. 'r' → logprob: -7.577291011810303
    10. '[' → logprob: -7.952291011810303

Token 377: ' gauche' (ID: 58367)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.001783475512638688
    2. ' gauche' → logprob: -6.62678337097168
    3. 'dro' → logprob: -8.00178337097168
    4. 'l' → logprob: -10.00178337097168
    5. 'left' → logprob: -10.37678337097168
    6. 'ga' → logprob: -10.62678337097168
    7. ' droite' → logprob: -11.75178337097168
    8. 'd' → logprob: -12.50178337097168
    9. 'r' → logprob: -13.25178337097168
    10. 'gau' → logprob: -13.62678337097168

Token 378: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26309168338775635
    2. 'r' → logprob: -1.5130916833877563
    3. ' r' → logprob: -4.888091564178467
    4. '[::-' → logprob: -6.638091564178467
    5. '(r' → logprob: -8.013092041015625
    6. ',' → logprob: -8.138092041015625
    7. '[r' → logprob: -8.138092041015625
    8. '
' → logprob: -8.638092041015625
    9. ' =' → logprob: -9.138092041015625
    10. '```' → logprob: -9.138092041015625

Token 379: '   ' (ID: 271)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7032143473625183
    2. '   ' → logprob: -0.7032143473625183
    3. ' r' → logprob: -5.078214168548584
    4. 'rs' → logprob: -7.328214168548584
    5. ',' → logprob: -7.703214168548584
    6. ' ' → logprob: -8.078214645385742
    7. 'rev' → logprob: -8.203214645385742
    8. 'rv' → logprob: -8.453214645385742
    9. '[::-' → logprob: -8.703214645385742
    10. 'inv' → logprob: -8.828214645385742

Token 380: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.14413805305957794
    2. '   ' → logprob: -2.3941380977630615
    3. ' r' → logprob: -3.2691380977630615
    4. '
' → logprob: -7.519137859344482
    5. 'rev' → logprob: -7.644137859344482
    6. '[' → logprob: -7.769137859344482
    7. '[r' → logprob: -7.769137859344482
    8. '[::-' → logprob: -7.769137859344482
    9. ' ' → logprob: -8.14413833618164
    10. 'rv' → logprob: -8.14413833618164

Token 381: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.004331014584749937
    2. '_cs' → logprob: -5.504331111907959
    3. '_rev' → logprob: -10.2543306350708
    4. '_i' → logprob: -10.3793306350708
    5. 'inv' → logprob: -10.3793306350708
    6. '_iv' → logprob: -10.8793306350708
    7. '_ci' → logprob: -11.2543306350708
    8. '_inverse' → logprob: -11.2543306350708
    9. 'cs' → logprob: -11.5043306350708
    10. '_c' → logprob: -11.5043306350708

Token 382: '_cs' (ID: 82698)
  Prédit: '_cs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cs' → logprob: -0.0016748257912695408
    2. '=' → logprob: -6.626674652099609
    3. ' =' → logprob: -8.50167465209961
    4. 'cs' → logprob: -9.87667465209961
    5. '_' → logprob: -9.87667465209961
    6. '_=' → logprob: -10.62667465209961
    7. '=_' → logprob: -12.00167465209961
    8. '_c' → logprob: -13.37667465209961
    9. '_rev' → logprob: -13.62667465209961
    10. '_CS' → logprob: -13.75167465209961

Token 383: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759634971618652
    2. '=' → logprob: -0.8259634971618652
    3. '=[' → logprob: -10.950963973999023
    4. ' =[' → logprob: -12.575963973999023
    5. ']' → logprob: -13.825963973999023
    6. ' ' → logprob: -14.575963973999023
    7. '=r' → logprob: -14.575963973999023
    8. '[::-' → logprob: -15.075963973999023
    9. '=list' → logprob: -15.200963973999023
    10. ']=' → logprob: -15.950963973999023

Token 384: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5232591032981873
    2. ' [' → logprob: -0.8982591032981873
    3. 'list' → logprob: -10.023259162902832
    4. '   ' → logprob: -10.773259162902832
    5. ' list' → logprob: -11.148259162902832
    6. ' ' → logprob: -11.398259162902832
    7. '[d' → logprob: -11.773259162902832
    8. '([' → logprob: -12.023259162902832
    9. 'd' → logprob: -12.273259162902832
    10. '[::-' → logprob: -12.273259162902832

Token 385: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.023651881143450737
    2. '(re' → logprob: -3.7736518383026123
    3. 'acc' → logprob: -8.148652076721191
    4. '(' → logprob: -9.523652076721191
    5. '(ac' → logprob: -10.148652076721191
    6. '(reverse' → logprob: -13.273652076721191
    7. 're' → logprob: -14.023652076721191
    8. '	acc' → logprob: -14.023652076721191
    9. '(
' → logprob: -14.398652076721191
    10. '(sorted' → logprob: -15.773652076721191

Token 386: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.026915879920125008
    2. 'culate' → logprob: -5.401916027069092
    3. 'utate' → logprob: -5.401916027069092
    4. 'cc' → logprob: -5.526916027069092
    5. 'cum' → logprob: -5.776916027069092
    6. 'ulate' → logprob: -6.026916027069092
    7. 'acc' → logprob: -6.401916027069092
    8. 'd' → logprob: -6.401916027069092
    9. 'c' → logprob: -6.526916027069092
    10. 't' → logprob: -6.776916027069092

Token 387: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.5761385560035706
    2. '(re' → logprob: -0.8261385560035706
    3. 're' → logprob: -9.201138496398926
    4. 'r' → logprob: -9.576138496398926
    5. '[::-' → logprob: -11.326138496398926
    6. ')' → logprob: -12.326138496398926
    7. ')(' → logprob: -12.826138496398926
    8. '(' → logprob: -13.201138496398926
    9. '(sorted' → logprob: -13.451138496398926
    10. '[r' → logprob: -13.451138496398926

Token 388: '_inv' (ID: 53427)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.0006678790668956935
    2. '_inv' → logprob: -7.625668048858643
    3. 'r' → logprob: -9.500667572021484
    4. 'inv' → logprob: -10.375667572021484
    5. '[-' → logprob: -10.375667572021484
    6. 'd' → logprob: -11.375667572021484
    7. '[' → logprob: -12.000667572021484
    8. '[r' → logprob: -12.125667572021484
    9. '(r' → logprob: -12.750667572021484
    10. '   ' → logprob: -13.375667572021484

Token 389: '[::-' (ID: 159890)
  Prédit: '[::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.0001310719089815393
    2. '[' → logprob: -9.000130653381348
    3. ')[' → logprob: -13.375130653381348
    4. '[r' → logprob: -13.750130653381348
    5. '   ' → logprob: -13.750130653381348
    6. '[:' → logprob: -14.125130653381348
    7. '))[' → logprob: -14.125130653381348
    8. '[-' → logprob: -14.750130653381348
    9. ' [' → logprob: -14.875130653381348
    10. '[:-' → logprob: -15.125130653381348

Token 390: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008329743286594748
    2. '-' → logprob: -7.125833034515381
    3. '::-' → logprob: -11.250832557678223
    4. '])' → logprob: -12.500832557678223
    5. ' ' → logprob: -13.000832557678223
    6. '])[' → logprob: -13.250832557678223
    7. '[::-' → logprob: -13.500832557678223
    8. '```' → logprob: -13.625832557678223
    9. ']))' → logprob: -13.750832557678223
    10. '])-' → logprob: -14.500832557678223

Token 391: ']))' (ID: 20259)
  Prédit: '))['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))[' → logprob: -0.008033620193600655
    2. ']))' → logprob: -5.258033752441406
    3. '])[' → logprob: -6.133033752441406
    4. '[::-' → logprob: -8.383033752441406
    5. '))' → logprob: -8.758033752441406
    6. '}' → logprob: -9.383033752441406
    7. '][' → logprob: -10.008033752441406
    8. ' ' → logprob: -10.383033752441406
    9. ')[' → logprob: -11.008033752441406
    10. ']' → logprob: -11.133033752441406

Token 392: '[::-' (ID: 159890)
  Prédit: '[::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.08073855191469193
    2. ')[' → logprob: -2.5807385444641113
    3. '()[' → logprob: -6.955738544464111
    4. '   ' → logprob: -7.455738544464111
    5. '[' → logprob: -9.20573902130127
    6. ')' → logprob: -9.58073902130127
    7. 'r' → logprob: -10.45573902130127
    8. ' [' → logprob: -10.45573902130127
    9. '[r' → logprob: -10.83073902130127
    10. '][' → logprob: -10.95573902130127

Token 393: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01000881101936102
    2. '0' → logprob: -5.260008811950684
    3. '-' → logprob: -5.385008811950684
    4. ' ' → logprob: -9.510008811950684
    5. '::-' → logprob: -9.760008811950684
    6. '])' → logprob: -10.635008811950684
    7. '```' → logprob: -11.635008811950684
    8. ')' → logprob: -12.635008811950684
    9. '   ' → logprob: -12.760008811950684
    10. '
' → logprob: -13.385008811950684

Token 394: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010228052269667387
    2. ']' → logprob: -7.126022815704346
    3. '   ' → logprob: -9.126022338867188
    4. ' )' → logprob: -9.751022338867188
    5. '])' → logprob: -10.751022338867188
    6. ')
' → logprob: -11.001022338867188
    7. ')]' → logprob: -12.251022338867188
    8. '）' → logprob: -13.376022338867188
    9. '()' → logprob: -13.501022338867188
    10. ' ' → logprob: -13.876022338867188

Token 395: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13948149979114532
    2. '
' → logprob: -2.264481544494629
    3. '    
' → logprob: -4.139481544494629
    4. '<|end|>' → logprob: -4.889481544494629
    5. ' for' → logprob: -6.889481544494629
    6. '  
' → logprob: -7.389481544494629
    7. 'for' → logprob: -8.014481544494629
    8. ' 
' → logprob: -8.514481544494629
    9. '<|end|>' → logprob: -8.514481544494629
    10. '   
' → logprob: -8.639481544494629

Token 396: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.718606891809031e-05
    2. ' [' → logprob: -9.625066757202148
    3. '([' → logprob: -13.750066757202148
    4. '[-' → logprob: -17.50006675720215
    5. '[r' → logprob: -17.62506675720215
    6. '0' → logprob: -18.00006675720215
    7. ' ' → logprob: -18.25006675720215
    8. '{' → logprob: -19.00006675720215
    9. '=[' → logprob: -19.00006675720215
    10. '   ' → logprob: -19.75006675720215

Token 397: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8074162653647363e-05
    2. ' ' → logprob: -11.000018119812012
    3. 'float' → logprob: -14.375018119812012
    4. 'd' → logprob: -15.625018119812012
    5. '-' → logprob: -16.250017166137695
    6. '   ' → logprob: -16.500017166137695
    7. '
' → logprob: -16.625017166137695
    8. '[' → logprob: -17.250017166137695
    9. '  ' → logprob: -17.812517166137695
    10. '#' → logprob: -18.062517166137695

Token 398: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.039558619260787964
    2. ')' → logprob: -3.7895586490631104
    3. '   ' → logprob: -4.664558410644531
    4. ']
' → logprob: -5.789558410644531
    5. '
' → logprob: -5.914558410644531
    6. ' ]' → logprob: -7.914558410644531
    7. '])' → logprob: -8.414558410644531
    8. ')
' → logprob: -9.664558410644531
    9. 'def' → logprob: -9.664558410644531
    10. ']

' → logprob: -9.914558410644531

Token 399: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 400: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23287507891654968
    2. '<|end|>' → logprob: -1.982875108718872
    3. '   ' → logprob: -3.107875108718872
    4. '    
' → logprob: -4.357874870300293
    5. '  
' → logprob: -5.107874870300293
    6. ' 
' → logprob: -6.232874870300293
    7. ' for' → logprob: -6.482874870300293
    8. '

' → logprob: -7.232874870300293
    9. '<|end|>' → logprob: -7.357874870300293
    10. 'for' → logprob: -7.857874870300293

Token 401: ' On' (ID: 2160)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5255190134048462
    2. 'for' → logprob: -1.1505190134048462
    3. '   ' → logprob: -2.4005188941955566
    4. '
' → logprob: -7.275518894195557
    5. 'if' → logprob: -8.025519371032715
    6. ' if' → logprob: -8.400519371032715
    7. '    
' → logprob: -8.650519371032715
    8. ' 
' → logprob: -10.275519371032715
    9. '  ' → logprob: -10.650519371032715
    10. 'n' → logprob: -10.900519371032715

Token 402: ' ajoute' (ID: 91611)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8800817131996155
    2. 'continue' → logprob: -1.5050816535949707
    3. '#' → logprob: -2.5050816535949707
    4. ' continue' → logprob: -3.2550816535949707
    5. 'def' → logprob: -3.6300816535949707
    6. 's' → logprob: -3.8800816535949707
    7. ' for' → logprob: -4.005081653594971
    8. 'cherche' → logprob: -4.005081653594971
    9. 'expl' → logprob: -4.255081653594971
    10. 'len' → logprob: -4.380081653594971

Token 403: ' [' (ID: 723)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 404: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001998227322474122
    2. ']' → logprob: -6.751998424530029
    3. '
' → logprob: -7.876998424530029
    4. ' ' → logprob: -8.501997947692871
    5. 'r' → logprob: -9.376997947692871
    6. 'd' → logprob: -9.501997947692871
    7. '

' → logprob: -10.751997947692871
    8. '   ' → logprob: -11.126997947692871
    9. ' ]' → logprob: -11.626997947692871
    10. ']
' → logprob: -12.126997947692871

Token 405: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005105441436171532
    2. ' ]' → logprob: -5.380105495452881
    3. ']
' → logprob: -8.380105018615723
    4. ')' → logprob: -9.130105018615723
    5. '])' → logprob: -9.505105018615723
    6. ']

' → logprob: -10.380105018615723
    7. ',' → logprob: -11.130105018615723
    8. ']
' → logprob: -12.380105018615723
    9. '   ' → logprob: -12.505105018615723
    10. ' ' → logprob: -13.130105018615723

Token 406: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 407: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.2852505147457123
    2. 'r' → logprob: -1.4102505445480347
    3. ' la' → logprob: -6.410250663757324
    4. 'l' → logprob: -7.035250663757324
    5. ' r' → logprob: -7.660250663757324
    6. 'g' → logprob: -8.285250663757324
    7. 'len' → logprob: -8.660250663757324
    8. 'fac' → logprob: -9.535250663757324
    9. '```' → logprob: -9.785250663757324
    10. 'align' → logprob: -9.910250663757324

Token 408: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.027185173705220222
    2. 'r' → logprob: -4.777184963226318
    3. 'len' → logprob: -4.777184963226318
    4. 'liste' → logprob: -5.527184963226318
    5. 'tail' → logprob: -5.777184963226318
    6. 'long' → logprob: -6.527184963226318
    7. 'la' → logprob: -7.652184963226318
    8. '#' → logprob: -7.777184963226318
    9. ' fin' → logprob: -8.902185440063477
    10. 'f' → logprob: -9.777185440063477

Token 409: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06380801647901535
    2. '<|end|>' → logprob: -2.938807964324951
    3. '
' → logprob: -5.188807964324951
    4. '    
' → logprob: -6.313807964324951
    5. '<|end|>' → logprob: -6.938807964324951
    6. ' for' → logprob: -8.93880844116211
    7. ')' → logprob: -9.31380844116211
    8. 'def' → logprob: -9.56380844116211
    9. 'for' → logprob: -10.06380844116211
    10. '  
' → logprob: -10.18880844116211

Token 410: ' avoir' (ID: 16595)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fac' → logprob: -1.0589491128921509
    2. 'év' → logprob: -1.5589491128921509
    3. 'p' → logprob: -1.9339491128921509
    4. ' faciliter' → logprob: -2.4339489936828613
    5. 'r' → logprob: -2.9339489936828613
    6. 'align' → logprob: -3.4339489936828613
    7. 'avoir' → logprob: -4.183948993682861
    8. ' éviter' → logprob: -4.183948993682861
    9. '#' → logprob: -4.308948993682861
    10. 'simpl' → logprob: -4.558948993682861

Token 411: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.4194405674934387
    2. 'un' → logprob: -1.294440507888794
    3. 'la' → logprob: -3.294440507888794
    4. 'r' → logprob: -3.919440507888794
    5. ' une' → logprob: -5.419440746307373
    6. 'des' → logprob: -6.169440746307373
    7. 'len' → logprob: -6.294440746307373
    8. 'l' → logprob: -6.919440746307373
    9. ' un' → logprob: -7.169440746307373
    10. '#' → logprob: -8.044440269470215

Token 412: ' taille' (ID: 41644)
  Prédit: ' longueur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' longueur' → logprob: -0.725521445274353
    2. 'len' → logprob: -2.3505215644836426
    3. 'base' → logprob: -2.6005215644836426
    4. 's' → logprob: -3.2255215644836426
    5. 'tail' → logprob: -3.3505215644836426
    6. 'cor' → logprob: -3.4755215644836426
    7. 'liste' → logprob: -3.4755215644836426
    8. 'long' → logprob: -3.4755215644836426
    9. 'sent' → logprob: -3.9755215644836426
    10. 'compatible' → logprob: -4.100521564483643

Token 413: ' compatible' (ID: 24686)
  Prédit: 'compatible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compatible' → logprob: -1.234226942062378
    2. 'ég' → logprob: -1.484226942062378
    3. ' ég' → logprob: -1.609226942062378
    4. 'égal' → logprob: -1.859226942062378
    5. '   ' → logprob: -2.859226942062378
    6. 'len' → logprob: -3.859226942062378
    7. 'ident' → logprob: -5.109227180480957
    8. 'exact' → logprob: -5.359227180480957
    9. 'sym' → logprob: -5.484227180480957
    10. ' ident' → logprob: -5.609227180480957

Token 414: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09474407136440277
    2. '<|end|>' → logprob: -2.7197439670562744
    3. '    
' → logprob: -4.4697442054748535
    4. '
' → logprob: -4.9697442054748535
    5. '<|end|>' → logprob: -5.7197442054748535
    6. ' for' → logprob: -6.7197442054748535
    7. '  
' → logprob: -7.7197442054748535
    8. 'for' → logprob: -8.469743728637695
    9. ')' → logprob: -8.844743728637695
    10. ' 
' → logprob: -8.969743728637695

Token 415: ' r' (ID: 428)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.009191637858748436
    2. 'r' → logprob: -4.759191513061523
    3. ' len' → logprob: -8.009191513061523
    4. 'range' → logprob: -8.759191513061523
    5. '[len' → logprob: -10.509191513061523
    6. '(len' → logprob: -10.759191513061523
    7. 'l' → logprob: -11.009191513061523
    8. 'la' → logprob: -12.134191513061523
    9. 'le' → logprob: -12.384191513061523
    10. ' r' → logprob: -12.509191513061523

Token 416: '_cs' (ID: 82698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.652787983417511
    2. '   ' → logprob: -1.0277879238128662
    3. 'def' → logprob: -2.902787923812866
    4. 'for' → logprob: -3.652787923812866
    5. ' for' → logprob: -4.277788162231445
    6. '    
' → logprob: -4.402788162231445
    7. '

' → logprob: -5.527788162231445
    8. '
' → logprob: -5.777788162231445
    9. '  
' → logprob: -6.402788162231445
    10. ')' → logprob: -6.902788162231445

Token 417: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07247568666934967
    2. '
' → logprob: -3.9474756717681885
    3. '<|end|>' → logprob: -3.9474756717681885
    4. '    
' → logprob: -4.322475910186768
    5. ' for' → logprob: -4.447475910186768
    6. '  
' → logprob: -6.697475910186768
    7. '<|end|>' → logprob: -6.697475910186768
    8. 'for' → logprob: -6.822475910186768
    9. '\n' → logprob: -6.947475910186768
    10. ')' → logprob: -8.32247543334961

Token 418: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3292367458343506
    2. ' for' → logprob: -1.4542367458343506
    3. 'for' → logprob: -3.5792367458343506
    4. '
' → logprob: -4.32923698425293
    5. '    
' → logprob: -5.82923698425293
    6. '```' → logprob: -6.45423698425293
    7. '  
' → logprob: -7.70423698425293
    8. '<|end|>' → logprob: -8.20423698425293
    9. ' 
' → logprob: -8.57923698425293
    10. '	for' → logprob: -9.20423698425293

Token 419: ' ret' (ID: 2881)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.22308336198329926
    2. 'for' → logprob: -1.7230833768844604
    3. '   ' → logprob: -3.848083257675171
    4. '
' → logprob: -9.72308349609375
    5. 'n' → logprob: -10.59808349609375
    6. '    
' → logprob: -10.72308349609375
    7. '	for' → logprob: -12.59808349609375
    8. ' 
' → logprob: -13.84808349609375
    9. '```' → logprob: -14.09808349609375
    10. ' n' → logprob: -14.09808349609375

Token 420: ' =' (ID: 314)
  Prédit: 'urn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urn' → logprob: -0.006565337534993887
    2. '=' → logprob: -5.631565570831299
    3. ' =' → logprob: -6.006565570831299
    4. 'u' → logprob: -8.00656509399414
    5. 'urning' → logprob: -9.63156509399414
    6. 'ur' → logprob: -10.13156509399414
    7. ' ' → logprob: -10.38156509399414
    8. ' urn' → logprob: -11.75656509399414
    9. 'urne' → logprob: -11.88156509399414
    10. 'urno' → logprob: -13.13156509399414

Token 421: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.16322721540927887
    2. 'float' → logprob: -2.0382273197174072
    3. '10' → logprob: -4.163227081298828
    4. '0' → logprob: -6.288227081298828
    5. 'None' → logprob: -6.913227081298828
    6. '-' → logprob: -7.163227081298828
    7. 'K' → logprob: -7.788227081298828
    8. 'N' → logprob: -8.288227081298828
    9. ' False' → logprob: -8.788227081298828
    10. ' float' → logprob: -9.538227081298828

Token 422: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7335584759712219
    2. '   ' → logprob: -1.1085584163665771
    3. ' for' → logprob: -2.858558416366577
    4. '\n' → logprob: -3.108558416366577
    5. '<|end|>' → logprob: -3.483558416366577
    6. '    
' → logprob: -3.983558416366577
    7. ' 
' → logprob: -4.358558654785156
    8. ':' → logprob: -5.483558654785156
    9. '  
' → logprob: -5.483558654785156
    10. 'for' → logprob: -5.733558654785156

Token 423: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06587862223386765
    2. '\n' → logprob: -4.065878391265869
    3. '   ' → logprob: -4.315878391265869
    4. ' for' → logprob: -4.315878391265869
    5. '    
' → logprob: -5.315878391265869
    6. ':' → logprob: -5.815878391265869
    7. '  
' → logprob: -5.940878391265869
    8. 'for' → logprob: -5.940878391265869
    9. ' 
' → logprob: -6.190878391265869
    10. '<|end|>' → logprob: -7.315878391265869

Token 424: ' Variable' (ID: 36336)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14546236395835876
    2. 'for' → logprob: -2.0204622745513916
    3. ' l' → logprob: -6.895462512969971
    4. ' i' → logprob: -7.395462512969971
    5. '   ' → logprob: -7.770462512969971
    6. 'i' → logprob: -8.770462036132812
    7. ' left' → logprob: -9.145462036132812
    8. '0' → logprob: -9.270462036132812
    9. ' low' → logprob: -9.520462036132812
    10. 'low' → logprob: -9.645462036132812

Token 425: ' qui' (ID: 2780)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.554507851600647
    2. '   ' → logprob: -1.304507851600647
    3. ' =' → logprob: -2.1795077323913574
    4. '=True' → logprob: -4.929507732391357
    5. '    
' → logprob: -5.054507732391357
    6. 'ret' → logprob: -5.429507732391357
    7. '=False' → logprob: -5.679507732391357
    8. '_' → logprob: -5.804507732391357
    9. '_=' → logprob: -5.929507732391357
    10. '    ' → logprob: -5.929507732391357

Token 426: ' va' (ID: 3423)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0011222377652302384
    2. ' =' → logprob: -6.87612247467041
    3. '=False' → logprob: -10.12612247467041
    4. '=True' → logprob: -11.00112247467041
    5. '#' → logprob: -12.12612247467041
    6. '=
' → logprob: -12.75112247467041
    7. '+=' → logprob: -13.12612247467041
    8. 'continue' → logprob: -13.37612247467041
    9. '=#' → logprob: -13.37612247467041
    10. '_=' → logprob: -13.75112247467041

Token 427: ' retenir' (ID: 185142)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.7077738642692566
    2. 'être' → logprob: -1.2077739238739014
    3. 'prendre' → logprob: -3.0827739238739014
    4. ' servir' → logprob: -3.7077739238739014
    5. 'serve' → logprob: -3.9577739238739014
    6. 'stock' → logprob: -4.582773685455322
    7. ' être' → logprob: -4.582773685455322
    8. 'serv' → logprob: -4.582773685455322
    9. 'cont' → logprob: -4.707773685455322
    10. ' True' → logprob: -4.707773685455322

Token 428: ' si' (ID: 1784)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.2369365692138672
    2. ' ret' → logprob: -2.236936569213867
    3. ' True' → logprob: -3.111936569213867
    4. 'True' → logprob: -3.236936569213867
    5. 'False' → logprob: -4.361936569213867
    6. ' False' → logprob: -5.236936569213867
    7. '   ' → logprob: -7.486936569213867
    8. '(ret' → logprob: -7.486936569213867
    9. ' la' → logprob: -7.611936569213867
    10. 'r' → logprob: -8.486936569213867

Token 429: ' une' (ID: 2463)
  Prédit: ' ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ret' → logprob: -0.6497799158096313
    2. 'ret' → logprob: -0.7747799158096313
    3. ' True' → logprob: -4.899779796600342
    4. 'True' → logprob: -5.149779796600342
    5. 'r' → logprob: -6.899779796600342
    6. ' not' → logprob: -7.524779796600342
    7. ' len' → logprob: -7.774779796600342
    8. ' any' → logprob: -8.1497802734375
    9. '(ret' → logprob: -8.5247802734375
    10. 'not' → logprob: -8.7747802734375

Token 430: ' configuration' (ID: 12282)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.3256511688232422
    2. ' modification' → logprob: -1.4506511688232422
    3. ' condition' → logprob: -2.575651168823242
    4. 'condition' → logprob: -2.575651168823242
    5. 'poss' → logprob: -2.575651168823242
    6. ' possibilité' → logprob: -2.825651168823242
    7. ' solution' → logprob: -3.075651168823242
    8. 'solution' → logprob: -3.325651168823242
    9. ' mod' → logprob: -3.700651168823242
    10. '   ' → logprob: -3.825651168823242

Token 431: ' valide' (ID: 137323)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.7665126919746399
    2. ' possible' → logprob: -1.8915126323699951
    3. 'possible' → logprob: -2.141512632369995
    4. ' est' → logprob: -2.391512632369995
    5. 'True' → logprob: -2.516512632369995
    6. 'est' → logprob: -2.891512632369995
    7. '=True' → logprob: -4.016512870788574
    8. '   ' → logprob: -4.641512870788574
    9. '_possible' → logprob: -5.391512870788574
    10. ' =' → logprob: -6.141512870788574

Token 432: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4039468765258789
    2. ' for' → logprob: -1.153946876525879
    3. 'for' → logprob: -5.403946876525879
    4. ' =' → logprob: -5.403946876525879
    5. ' possible' → logprob: -7.153946876525879
    6. '=True' → logprob: -7.153946876525879
    7. '  ' → logprob: -7.278946876525879
    8. ' est' → logprob: -7.278946876525879
    9. ' is' → logprob: -7.403946876525879
    10. ' pour' → logprob: -7.528946876525879

Token 433: ' été' (ID: 9799)
  Prédit: 'été'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'été' → logprob: -0.13412967324256897
    2. 'True' → logprob: -2.634129762649536
    3. ' True' → logprob: -3.134129762649536
    4. 'pu' → logprob: -5.509129524230957
    5. ' été' → logprob: -5.759129524230957
    6. 'é' → logprob: -7.134129524230957
    7. 'être' → logprob: -8.009129524230957
    8. 'ét' → logprob: -8.259129524230957
    9. 'v' → logprob: -8.384129524230957
    10. 'et' → logprob: -8.509129524230957

Token 434: ' trouv' (ID: 40254)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.30730336904525757
    2. ' trouv' → logprob: -1.4323034286499023
    3. 'ret' → logprob: -4.807303428649902
    4. 'True' → logprob: -4.932303428649902
    5. ' True' → logprob: -5.807303428649902
    6. 'found' → logprob: -6.307303428649902
    7. 'valid' → logprob: -7.057303428649902
    8. 'atte' → logprob: -7.057303428649902
    9. 'v' → logprob: -7.182303428649902
    10. ' trouvé' → logprob: -7.807303428649902

Token 435: 'ée' (ID: 2894)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7184644937515259
    2. '
' → logprob: -0.9684644937515259
    3. '    
' → logprob: -2.5934643745422363
    4. 'for' → logprob: -3.7184643745422363
    5. ' for' → logprob: -4.718464374542236
    6. '	for' → logprob: -4.843464374542236
    7. '  
' → logprob: -5.218464374542236
    8. '	
' → logprob: -5.843464374542236
    9. '\t' → logprob: -6.218464374542236
    10. '   
' → logprob: -6.343464374542236

Token 436: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28201308846473694
    2. '   ' → logprob: -1.6570130586624146
    3. ' for' → logprob: -3.532013177871704
    4. '    
' → logprob: -4.407012939453125
    5. '	for' → logprob: -5.407012939453125
    6. 'for' → logprob: -5.657012939453125
    7. '  
' → logprob: -5.782012939453125
    8. '	
' → logprob: -7.532012939453125
    9. '\n' → logprob: -7.782012939453125
    10. '   
' → logprob: -7.782012939453125

Token 437: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2842748165130615
    2. '
' → logprob: -1.6592748165130615
    3. ' for' → logprob: -3.1592748165130615
    4. '    
' → logprob: -4.534275054931641
    5. 'for' → logprob: -6.534275054931641
    6. '  
' → logprob: -7.034275054931641
    7. ' 
' → logprob: -7.159275054931641
    8. '	for' → logprob: -8.65927505493164
    9. '   
' → logprob: -8.65927505493164
    10. '\n' → logprob: -8.78427505493164

Token 438: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7901661992073059
    2. ' for' → logprob: -0.9151661992073059
    3. '   ' → logprob: -2.290166139602661
    4. '
' → logprob: -3.165166139602661
    5. '    
' → logprob: -6.79016637802124
    6. '	for' → logprob: -7.66516637802124
    7. ' 
' → logprob: -8.415165901184082
    8. 'n' → logprob: -9.040165901184082
    9. '\n' → logprob: -9.040165901184082
    10. ' ' → logprob: -9.290165901184082

Token 439: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03859149292111397
    2. ' for' → logprob: -3.2885913848876953
    3. 'n' → logprob: -8.288591384887695
    4. 'i' → logprob: -8.663591384887695
    5. '   ' → logprob: -9.163591384887695
    6. 'l' → logprob: -12.038591384887695
    7. ' i' → logprob: -12.163591384887695
    8. ' n' → logprob: -12.288591384887695
    9. 'N' → logprob: -13.413591384887695
    10. 'left' → logprob: -14.663591384887695

Token 440: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.090506412088871
    2. 'c' → logprob: -2.4655063152313232
    3. 'cl' → logprob: -7.340506553649902
    4. '   ' → logprob: -7.840506553649902
    5. 'cler' → logprob: -8.590506553649902
    6. '
' → logprob: -9.590506553649902
    7. '#' → logprob: -9.840506553649902
    8. '

' → logprob: -10.465506553649902
    9. 'cles' → logprob: -10.590506553649902
    10. 'clé' → logprob: -10.590506553649902

Token 441: ' sur' (ID: 1512)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1811773031949997
    2. 'for' → logprob: -1.9311772584915161
    3. ' i' → logprob: -4.306177139282227
    4. '   ' → logprob: -5.181177139282227
    5. ' in' → logprob: -7.181177139282227
    6. 'i' → logprob: -8.056177139282227
    7. ' range' → logprob: -9.056177139282227
    8. 'in' → logprob: -9.431177139282227
    9. ' ' → logprob: -9.806177139282227
    10. 'range' → logprob: -9.806177139282227

Token 442: ' toutes' (ID: 17502)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.39105039834976196
    2. ' range' → logprob: -1.1410503387451172
    3. 'i' → logprob: -5.516050338745117
    4. ' i' → logprob: -9.016050338745117
    5. ' ' → logprob: -11.391050338745117
    6. '(range' → logprob: -12.391050338745117
    7. 'len' → logprob: -12.516050338745117
    8. 'n' → logprob: -12.766050338745117
    9. 'r' → logprob: -13.266050338745117
    10. '   ' → logprob: -14.016050338745117

Token 443: ' les' (ID: 1341)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.03918751701712608
    2. 'range' → logprob: -3.414187431335449
    3. '(i' → logprob: -6.039187431335449
    4. '(' → logprob: -6.539187431335449
    5. ' range' → logprob: -6.539187431335449
    6. '(len' → logprob: -8.78918743133545
    7. '   ' → logprob: -9.91418743133545
    8. 'i' → logprob: -10.66418743133545
    9. '	range' → logprob: -12.28918743133545
    10. '_range' → logprob: -12.41418743133545

Token 444: ' façons' (ID: 165958)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.39374327659606934
    2. ' range' → logprob: -1.1437432765960693
    3. 'i' → logprob: -5.018743515014648
    4. ' i' → logprob: -8.643743515014648
    5. ' ' → logprob: -10.768743515014648
    6. 'len' → logprob: -10.768743515014648
    7. 'index' → logprob: -12.393743515014648
    8. '(range' → logprob: -12.768743515014648
    9. '   ' → logprob: -12.893743515014648
    10. ' len' → logprob: -14.018743515014648

Token 445: ' possibles' (ID: 97753)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2121036946773529
    2. 'de' → logprob: -2.5871036052703857
    3. '   ' → logprob: -2.8371036052703857
    4. ' d' → logprob: -4.212103843688965
    5. ' range' → logprob: -4.212103843688965
    6. '(range' → logprob: -4.212103843688965
    7. 'range' → logprob: -5.712103843688965
    8. ' possible' → logprob: -5.837103843688965
    9. '_possible' → logprob: -6.087103843688965
    10. '  ' → logprob: -7.212103843688965

Token 446: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6419568061828613
    2. '   ' → logprob: -1.8919568061828613
    3. ' de' → logprob: -1.8919568061828613
    4. 'range' → logprob: -2.3919568061828613
    5. '(range' → logprob: -3.0169568061828613
    6. 'd' → logprob: -5.016956806182861
    7. ' range' → logprob: -5.141956806182861
    8. ' ' → logprob: -5.391956806182861
    9. 'in' → logprob: -6.016956806182861
    10. ' d' → logprob: -6.141956806182861

Token 447: ' répart' (ID: 147636)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008700020611286163
    2. ' range' → logprob: -4.758699893951416
    3. 'i' → logprob: -9.758700370788574
    4. 'len' → logprob: -11.133700370788574
    5. '(range' → logprob: -12.258700370788574
    6. 'r' → logprob: -12.883700370788574
    7. 'import' → logprob: -13.383700370788574
    8. ' i' → logprob: -13.633700370788574
    9. 'rang' → logprob: -14.383700370788574
    10. ' ' → logprob: -14.508700370788574

Token 448: 'ir' (ID: 380)
  Prédit: 'iser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.21836641430854797
    2. 'iner' → logprob: -2.3433663845062256
    3. '   ' → logprob: -3.4683663845062256
    4. 'ir' → logprob: -3.4683663845062256
    5. 'ager' → logprob: -4.093366622924805
    6. 'iter' → logprob: -4.593366622924805
    7. 'ie' → logprob: -6.468366622924805
    8. 'ition' → logprob: -6.593366622924805
    9. 'ner' → logprob: -6.968366622924805
    10. 'anter' → logprob: -7.218366622924805

Token 449: ' les' (ID: 1341)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.04738546162843704
    2. '(range' → logprob: -3.1723854541778564
    3. 'range' → logprob: -6.0473856925964355
    4. '(' → logprob: -7.6723856925964355
    5. 'len' → logprob: -8.172385215759277
    6. '   ' → logprob: -8.172385215759277
    7. ' (' → logprob: -8.422385215759277
    8. '(N' → logprob: -8.672385215759277
    9. ' le' → logprob: -9.547385215759277
    10. '(l' → logprob: -9.547385215759277

Token 450: ' modifications' (ID: 38756)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.5662824511528015
    2. 'i' → logprob: -2.0662825107574463
    3. 'rest' → logprob: -2.4412825107574463
    4. ' modifications' → logprob: -2.9412825107574463
    5. 'indices' → logprob: -2.9412825107574463
    6. 'increments' → logprob: -3.5662825107574463
    7. ' i' → logprob: -4.191282272338867
    8. 'r' → logprob: -4.816282272338867
    9. ' rest' → logprob: -4.816282272338867
    10. 'k' → logprob: -4.941282272338867

Token 451: ' entre' (ID: 3853)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.7041577100753784
    2. '(range' → logprob: -1.7041577100753784
    3. 'range' → logprob: -2.204157829284668
    4. '   ' → logprob: -2.704157829284668
    5. 'for' → logprob: -3.329157829284668
    6. ' range' → logprob: -3.829157829284668
    7. '(' → logprob: -4.329157829284668
    8. 'len' → logprob: -4.579157829284668
    9. '(n' → logprob: -4.579157829284668
    10. ' de' → logprob: -4.704157829284668

Token 452: ' augmenter' (ID: 114677)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001041978714056313
    2. ' range' → logprob: -7.126041889190674
    3. '0' → logprob: -9.251042366027832
    4. 'i' → logprob: -9.501042366027832
    5. 'r' → logprob: -9.876042366027832
    6. 'len' → logprob: -11.751042366027832
    7. '   ' → logprob: -12.876042366027832
    8. '(range' → logprob: -13.751042366027832
    9. 'la' → logprob: -14.501042366027832
    10. 'l' → logprob: -14.501042366027832

Token 453: ' et' (ID: 859)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8156903982162476
    2. 'i' → logprob: -0.9406903982162476
    3. ' et' → logprob: -3.315690517425537
    4. '(i' → logprob: -3.315690517425537
    5. '   ' → logprob: -3.690690517425537
    6. ' ' → logprob: -4.440690517425537
    7. ',' → logprob: -4.565690517425537
    8. '0' → logprob: -5.065690517425537
    9. ' la' → logprob: -5.065690517425537
    10. '(' → logprob: -5.440690517425537

Token 454: ' dimin' (ID: 33870)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.31251680850982666
    2. 'b' → logprob: -1.9375168085098267
    3. ' dimin' → logprob: -2.562516689300537
    4. '   ' → logprob: -4.312516689300537
    5. 'desc' → logprob: -4.562516689300537
    6. 'de' → logprob: -4.937516689300537
    7. 'dim' → logprob: -5.562516689300537
    8. ' ' → logprob: -6.062516689300537
    9. '```' → logprob: -6.187516689300537
    10. '#' → logprob: -6.437516689300537

Token 455: 'uer' (ID: 4615)
  Prédit: 'uer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uer' → logprob: -3.2855416066013277e-05
    2. 'uire' → logprob: -10.750032424926758
    3. 'u' → logprob: -11.750032424926758
    4. 'ution' → logprob: -13.375032424926758
    5. 'user' → logprob: -14.875032424926758
    6. 'uir' → logprob: -15.000032424926758
    7. 'ue' → logprob: -15.375032424926758
    8. 'uis' → logprob: -15.875032424926758
    9. ' u' → logprob: -16.125032424926758
    10. '   ' → logprob: -16.125032424926758

Token 456: ' les' (ID: 1341)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.27955594658851624
    2. '(range' → logprob: -1.9045559167861938
    3. 'range' → logprob: -3.0295560359954834
    4. '(i' → logprob: -3.7795560359954834
    5. 'for' → logprob: -4.779555797576904
    6. '(' → logprob: -5.029555797576904
    7. 'len' → logprob: -5.904555797576904
    8. '(n' → logprob: -6.154555797576904
    9. ' range' → logprob: -6.654555797576904
    10. '
' → logprob: -6.904555797576904

Token 457: ' éléments' (ID: 57375)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.49211063981056213
    2. 'élé' → logprob: -2.1171107292175293
    3. 'elements' → logprob: -2.1171107292175293
    4. 'i' → logprob: -2.4921107292175293
    5. 'range' → logprob: -3.6171107292175293
    6. 'val' → logprob: -4.367110729217529
    7. 'rest' → logprob: -4.742110729217529
    8. ' éléments' → logprob: -6.117110729217529
    9. 'r' → logprob: -6.367110729217529
    10. 'indexes' → logprob: -6.367110729217529

Token 458: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04823959991335869
    2. ':' → logprob: -4.173239707946777
    3. '
' → logprob: -4.173239707946777
    4. '(range' → logprob: -4.798239707946777
    5. 'for' → logprob: -5.923239707946777
    6. ' for' → logprob: -6.798239707946777
    7. ':
' → logprob: -6.923239707946777
    8. '    
' → logprob: -7.173239707946777
    9. '(' → logprob: -7.298239707946777
    10. 'range' → logprob: -7.798239707946777

Token 459: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1471361219882965
    2. ' for' → logprob: -2.7721362113952637
    3. 'for' → logprob: -3.2721362113952637
    4. ':' → logprob: -4.397136211395264
    5. '
' → logprob: -4.772136211395264
    6. ':
' → logprob: -5.397136211395264
    7. '(range' → logprob: -5.397136211395264
    8. '    
' → logprob: -6.147136211395264
    9. 'range' → logprob: -7.522136211395264
    10. '  
' → logprob: -7.522136211395264

Token 460: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14645667374134064
    2. ' for' → logprob: -2.146456718444824
    3. '
' → logprob: -4.646456718444824
    4. 'for' (adapté à ' for') → logprob: -4.896456718444824
    5. '    
' → logprob: -7.021456718444824
    6. ':' → logprob: -7.896456718444824
    7. '\n' → logprob: -8.396456718444824
    8. ' 
' → logprob: -8.646456718444824
    9. ':
' → logprob: -9.146456718444824
    10. '  
' → logprob: -9.146456718444824

Token 461: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.28362560272216797
    2. ' i' → logprob: -1.408625602722168
    3. 'x' → logprob: -7.158625602722168
    4. 'k' → logprob: -7.408625602722168
    5. ' x' → logprob: -8.158625602722168
    6. ' k' → logprob: -8.908625602722168
    7. 'a' → logprob: -9.783625602722168
    8. ' ' → logprob: -9.908625602722168
    9. 'j' → logprob: -10.158625602722168
    10. 'l' → logprob: -10.283625602722168

Token 462: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08911285549402237
    2. 'in' → logprob: -2.4641127586364746
    3. ' ' → logprob: -9.464113235473633
    4. '(' → logprob: -10.839113235473633
    5. ',' → logprob: -10.964113235473633
    6. '  ' → logprob: -11.339113235473633
    7. ')' → logprob: -11.714113235473633
    8. '   ' → logprob: -11.839113235473633
    9. '_in' → logprob: -12.214113235473633
    10. 'In' → logprob: -12.464113235473633

Token 463: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01815134845674038
    2. ' range' → logprob: -4.01815128326416
    3. ' ' → logprob: -13.89315128326416
    4. '(range' → logprob: -15.39315128326416
    5. '   ' → logprob: -15.76815128326416
    6. '	range' → logprob: -16.393152236938477
    7. '0' → logprob: -16.893152236938477
    8. '  ' → logprob: -17.893152236938477
    9. ')' → logprob: -18.143152236938477
    10. '```' → logprob: -18.768152236938477

Token 464: '(N' (ID: 10564)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.023833142593503
    2. '(N' → logprob: -3.7738330364227295
    3. '(' → logprob: -7.898833274841309
    4. '(n' → logprob: -8.648833274841309
    5. 'len' → logprob: -10.273833274841309
    6. ' (' → logprob: -12.898833274841309
    7. ' len' → logprob: -13.023833274841309
    8. '(
' → logprob: -14.398833274841309
    9. '((' → logprob: -14.773833274841309
    10. '[len' → logprob: -15.898833274841309

Token 465: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20142260193824768
    2. ' +' → logprob: -1.7014225721359253
    3. '):' → logprob: -12.451422691345215
    4. '):
' → logprob: -12.701422691345215
    5. '   ' → logprob: -14.201422691345215
    6. '+
' → logprob: -14.326422691345215
    7. ')' → logprob: -14.951422691345215
    8. ' +
' → logprob: -15.451422691345215
    9. '1' → logprob: -15.951422691345215
    10. ' plus' → logprob: -16.4514217376709

Token 466: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000553151941858232
    2. ' ' → logprob: -7.500553131103516
    3. '   ' → logprob: -17.250553131103516
    4. '  ' → logprob: -17.500553131103516
    5. '１' → logprob: -17.750553131103516
    6. '2' → logprob: -17.875553131103516
    7. '
' → logprob: -18.063053131103516
    8. '+' → logprob: -18.313053131103516
    9. '

' → logprob: -18.688053131103516
    10. '```' → logprob: -19.063053131103516

Token 467: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.583550642360933e-05
    2. ' ' → logprob: -10.250036239624023
    3. '2' → logprob: -16.125036239624023
    4. '   ' → logprob: -16.625036239624023
    5. '
' → logprob: -16.750036239624023
    6. '１' → logprob: -17.500036239624023
    7. '  ' → logprob: -18.187536239624023
    8. '

' → logprob: -18.500036239624023
    9. '```' → logprob: -18.875036239624023
    10. '+' → logprob: -18.937536239624023

Token 468: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6934811472892761
    2. '):' → logprob: -0.6934811472892761
    3. '):
' → logprob: -8.6934814453125
    4. ':' → logprob: -9.6934814453125
    5. ')' → logprob: -9.9434814453125
    6. '   ' → logprob: -10.0684814453125
    7. '):

' → logprob: -11.6934814453125
    8. ' ):' → logprob: -13.5684814453125
    9. ' ):
' → logprob: -13.8184814453125
    10. ':
' → logprob: -13.8184814453125

Token 469: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010446012020111084
    2. ':' → logprob: -7.626044750213623
    3. ' if' → logprob: -8.251044273376465
    4. '
' → logprob: -9.751044273376465
    5. '<|end|>' → logprob: -9.876044273376465
    6. '        
' → logprob: -10.001044273376465
    7. '   ' → logprob: -10.001044273376465
    8. ',' → logprob: -10.876044273376465
    9. ':
' → logprob: -10.876044273376465
    10. 'if' → logprob: -11.501044273376465

Token 470: ' fl' (ID: 1548)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9029825329780579
    2. ' if' → logprob: -1.152982473373413
    3. '       ' → logprob: -1.277982473373413
    4. '           ' → logprob: -9.777982711791992
    5. 'cost' → logprob: -9.777982711791992
    6. '```' → logprob: -9.777982711791992
    7. '
' → logprob: -10.152982711791992
    8. '   ' → logprob: -10.777982711791992
    9. '        
' → logprob: -10.902982711791992
    10. 'sum' → logprob: -11.152982711791992

Token 471: 'g' (ID: 70)
  Prédit: 'ag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ag' → logprob: -0.010488930158317089
    2. '=' → logprob: -4.760488986968994
    3. ' =' → logprob: -7.385488986968994
    4. 'ags' → logprob: -7.635488986968994
    5. 'ip' → logprob: -8.510488510131836
    6. '#' → logprob: -9.010488510131836
    7. 'ex' → logprob: -9.135488510131836
    8. 'ips' → logprob: -9.510488510131836
    9. 'g' → logprob: -9.885488510131836
    10. '=True' → logprob: -10.135488510131836

Token 472: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07937826216220856
    2. '=' → logprob: -2.579378366470337
    3. ' ' → logprob: -8.204378128051758
    4. '   ' → logprob: -9.329378128051758
    5. ' |=' → logprob: -10.704378128051758
    6. 'if' → logprob: -10.829378128051758
    7. '=True' → logprob: -11.204378128051758
    8. 'or' → logprob: -11.579378128051758
    9. '_' → logprob: -11.579378128051758
    10. '       ' → logprob: -11.704378128051758

Token 473: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2811696231365204
    2. ' =' → logprob: -1.4061696529388428
    3. ' ' → logprob: -12.156169891357422
    4. '=True' → logprob: -12.281169891357422
    5. ',' → logprob: -12.406169891357422
    6. '   ' → logprob: -13.656169891357422
    7. ' |=' → logprob: -14.406169891357422
    8. '=
' → logprob: -14.531169891357422
    9. '=False' → logprob: -14.656169891357422
    10. 'if' → logprob: -14.656169891357422

Token 474: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2707282304763794
    2. '(r' → logprob: -1.6457282304763794
    3. ' r' → logprob: -3.27072811126709
    4. ' (' → logprob: -5.27072811126709
    5. 'ret' → logprob: -8.77072811126709
    6. '(i' → logprob: -9.14572811126709
    7. 'True' → logprob: -9.27072811126709
    8. '(' → logprob: -9.27072811126709
    9. '(ret' → logprob: -9.39572811126709
    10. '(fl' → logprob: -9.39572811126709

Token 475: '_cs' (ID: 82698)
  Prédit: '_cs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cs' → logprob: -0.00146558100823313
    2. '[i' → logprob: -6.751465797424316
    3. '   ' → logprob: -9.501465797424316
    4. '[' → logprob: -9.501465797424316
    5. 'cs' → logprob: -9.876465797424316
    6. 'Cs' → logprob: -11.501465797424316
    7. '<=' → logprob: -11.501465797424316
    8. '	cs' → logprob: -12.126465797424316
    9. '[:' → logprob: -12.376465797424316
    10. '==' → logprob: -12.376465797424316

Token 476: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -14.500000953674316
    3. ' [' → logprob: -15.000000953674316
    4. '   ' → logprob: -15.625000953674316
    5. 'i' → logprob: -16.250001907348633
    6. '       ' → logprob: -17.625001907348633
    7. '[I' → logprob: -18.000001907348633
    8. '(i' → logprob: -18.250001907348633
    9. '[j' → logprob: -18.625001907348633
    10. ' ' → logprob: -18.625001907348633

Token 477: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00924916286021471
    2. ']<=' → logprob: -4.759249210357666
    3. ' ]' → logprob: -7.509249210357666
    4. '<=' → logprob: -10.259248733520508
    5. ']==' → logprob: -10.384248733520508
    6. ']+' → logprob: -12.009248733520508
    7. ']
' → logprob: -12.259248733520508
    8. ']>=' → logprob: -12.884248733520508
    9. ' <=' → logprob: -13.384248733520508
    10. '```' → logprob: -14.259248733520508

Token 478: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5766623020172119
    2. ' <=' → logprob: -0.8266623020172119
    3. '+' → logprob: -8.076662063598633
    4. '==' → logprob: -8.326662063598633
    5. ' +' → logprob: -9.451662063598633
    6. ' ==' → logprob: -9.701662063598633
    7. ' ' → logprob: -12.201662063598633
    8. '>' → logprob: -12.326662063598633
    9. ' >' → logprob: -13.076662063598633
    10. '    ' → logprob: -13.076662063598633

Token 479: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -2.7848862373502925e-05
    2. ' K' → logprob: -10.750027656555176
    3. '   ' → logprob: -12.625027656555176
    4. '       ' → logprob: -13.375027656555176
    5. '           ' → logprob: -14.875027656555176
    6. '    ' → logprob: -15.125027656555176
    7. ' ' → logprob: -15.625027656555176
    8. '        ' → logprob: -15.750027656555176
    9. '     ' → logprob: -16.125028610229492
    10. '         ' → logprob: -16.500028610229492

Token 480: ' ' (ID: 220)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04861121252179146
    2. 'and' → logprob: -3.0486111640930176
    3. '<|end|>' → logprob: -11.673611640930176
    4. '
' → logprob: -12.173611640930176
    5. ' ' → logprob: -12.423611640930176
    6. '       ' → logprob: -12.673611640930176
    7. '	and' → logprob: -13.798611640930176
    8. '        ' → logprob: -15.048611640930176
    9. '<|end|>' → logprob: -15.048611640930176
    10. '    ' → logprob: -15.298611640930176

Token 481: ' #' (ID: 1069)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.061990320682525635
    2. 'and' → logprob: -2.811990261077881
    3. '       ' → logprob: -11.436990737915039
    4. '<|end|>' → logprob: -11.686990737915039
    5. '	and' → logprob: -13.686990737915039
    6. '
' → logprob: -13.686990737915039
    7. ' ' → logprob: -15.061990737915039
    8. '   ' → logprob: -15.561990737915039
    9. '<|end|>' → logprob: -16.06199073791504
    10. '        ' → logprob: -16.18699073791504

Token 482: ' Est' (ID: 4555)
  Prédit: 'fl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fl' → logprob: -0.09935630112886429
    2. ' fl' → logprob: -2.8493564128875732
    3. 'r' → logprob: -3.5993564128875732
    4. ' r' → logprob: -5.224356174468994
    5. '       ' → logprob: -5.724356174468994
    6. 'i' → logprob: -8.724356651306152
    7. ' i' → logprob: -9.224356651306152
    8. 'if' → logprob: -9.474356651306152
    9. '(r' → logprob: -9.474356651306152
    10. '(fl' → logprob: -9.599356651306152

Token 483: '-ce' (ID: 35404)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0364224910736084
    2. ' r' → logprob: -1.5364224910736084
    3. 'True' → logprob: -2.5364224910736084
    4. '-ce' → logprob: -2.5364224910736084
    5. ' ce' → logprob: -2.7864224910736084
    6. 'fl' → logprob: -3.2864224910736084
    7. ' fl' → logprob: -3.5364224910736084
    8. 'ce' → logprob: -3.5364224910736084
    9. ' possible' → logprob: -4.2864227294921875
    10. 't' → logprob: -4.5364227294921875

Token 484: ' qu' (ID: 474)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.6277279257774353
    2. 'True' → logprob: -0.8777279257774353
    3. 'r' → logprob: -3.87772798538208
    4. ' possible' → logprob: -4.75272798538208
    5. ' que' → logprob: -4.75272798538208
    6. ' r' → logprob: -5.25272798538208
    7. ' vrai' → logprob: -6.00272798538208
    8. 'possible' → logprob: -6.12772798538208
    9. '(True' → logprob: -8.002727508544922
    10. 'que' → logprob: -8.002727508544922

Token 485: ''on' (ID: 25812)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.04288579896092415
    2. 'r' → logprob: -3.2928857803344727
    3. ' on' → logprob: -5.917885780334473
    4. ' ' → logprob: -6.667885780334473
    5. ' la' → logprob: -8.167885780334473
    6. ' ' → logprob: -8.917885780334473
    7. 'on' → logprob: -9.167885780334473
    8. ' le' → logprob: -9.167885780334473
    9. ' l' → logprob: -9.792885780334473
    10. 'le' → logprob: -10.542885780334473

Token 486: ' peut' (ID: 9216)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.2671869993209839
    2. ' peut' → logprob: -1.5171869993209839
    3. ' peux' → logprob: -4.517187118530273
    4. 'a' → logprob: -6.267187118530273
    5. 'pour' → logprob: -6.892187118530273
    6. 'can' → logprob: -7.892187118530273
    7. ' a' → logprob: -8.267187118530273
    8. 'p' → logprob: -8.392187118530273
    9. ' can' → logprob: -9.517187118530273
    10. ' puisse' → logprob: -10.017187118530273

Token 487: ' ram' (ID: 20920)
  Prédit: ' effectuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' effectuer' → logprob: -0.4548135995864868
    2. ' modifier' → logprob: -2.2048134803771973
    3. ' augmenter' → logprob: -2.5798134803771973
    4. 'modifier' → logprob: -2.9548134803771973
    5. ' réaliser' → logprob: -3.5798134803771973
    6. ' utiliser' → logprob: -3.7048134803771973
    7. 'faire' → logprob: -3.9548134803771973
    8. ' faire' → logprob: -4.079813480377197
    9. 'augment' → logprob: -4.329813480377197
    10. ' ajust' → logprob: -5.454813480377197

Token 488: 'ener' (ID: 944)
  Prédit: 'ener'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ener' → logprob: -5.796184723294573e-06
    2. 'ner' → logprob: -13.750005722045898
    3. 'enir' → logprob: -13.750005722045898
    4. 'en' → logprob: -14.125005722045898
    5. 'oner' → logprob: -14.250005722045898
    6. 'e' → logprob: -14.375005722045898
    7. 'ené' → logprob: -14.500005722045898
    8. 'ene' → logprob: -15.125005722045898
    9. 'enar' → logprob: -16.3750057220459
    10. 'ENER' → logprob: -16.5000057220459

Token 489: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.6245603561401367
    2. 'les' → logprob: -0.9995603561401367
    3. ' tous' → logprob: -3.3745603561401367
    4. 'r' → logprob: -4.249560356140137
    5. ' tout' → logprob: -4.374560356140137
    6. 'tout' → logprob: -4.499560356140137
    7. ' r' → logprob: -5.249560356140137
    8. ' à' → logprob: -5.374560356140137
    9. 'au' → logprob: -6.624560356140137
    10. ' ' → logprob: -6.749560356140137

Token 490: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7505061626434326
    2. ' i' → logprob: -2.1255061626434326
    3. 'élé' → logprob: -2.1255061626434326
    4. ' éléments' → logprob: -2.5005061626434326
    5. 'r' → logprob: -2.8755061626434326
    6. ' premiers' → logprob: -2.8755061626434326
    7. 'prem' → logprob: -3.2505061626434326
    8. 'rest' → logprob: -4.375506401062012
    9. ' r' → logprob: -4.500506401062012
    10. ' K' → logprob: -4.625506401062012

Token 491: ' premiers' (ID: 59140)
  Prédit: ' premiers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' premiers' → logprob: -0.23678907752037048
    2. ' éléments' → logprob: -2.1117889881134033
    3. 'prem' → logprob: -2.7367889881134033
    4. 'élé' → logprob: -4.361789226531982
    5. ' elements' → logprob: -6.236789226531982
    6. ' rest' → logprob: -6.236789226531982
    7. 'elements' → logprob: -6.611789226531982
    8. 'rest' → logprob: -6.986789226531982
    9. ' ' → logprob: -7.111789226531982
    10. ' premières' → logprob: -7.236789226531982

Token 492: ' rest' (ID: 2867)
  Prédit: ' éléments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éléments' → logprob: -0.10717219859361649
    2. 'élé' → logprob: -2.9821722507476807
    3. ' rest' → logprob: -3.4821722507476807
    4. 'rest' → logprob: -4.482172012329102
    5. ' elements' → logprob: -5.982172012329102
    6. '%' → logprob: -6.607172012329102
    7. 'elements' → logprob: -7.107172012329102
    8. 'r' → logprob: -7.357172012329102
    9. ' r' → logprob: -7.357172012329102
    10. ' à' → logprob: -7.857172012329102

Token 493: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.11155787110328674
    2. 'ants' → logprob: -2.486557960510254
    3. '[i' → logprob: -4.611557960510254
    4. '[' → logprob: -4.986557960510254
    5. '   ' → logprob: -6.236557960510254
    6. 'ents' → logprob: -7.486557960510254
    7. 'ant' → logprob: -7.486557960510254
    8. 'antes' → logprob: -7.736557960510254
    9. 'aux' → logprob: -8.486557960510254
    10. 'eurs' → logprob: -8.611557960510254

Token 494: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.4458525776863098
    2. ' en' → logprob: -1.945852518081665
    3. 'en' → logprob: -2.820852518081665
    4. ' de' → logprob: -3.445852518081665
    5. 'à' → logprob: -3.445852518081665
    6. ' par' → logprob: -3.820852518081665
    7. '   ' → logprob: -4.320852756500244
    8. '```' → logprob: -4.695852756500244
    9. ')' → logprob: -4.945852756500244
    10. '       ' → logprob: -4.945852756500244

Token 495: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03794761374592781
    2. 'd' → logprob: -4.287947654724121
    3. ' ' → logprob: -4.662947654724121
    4. 'zero' → logprob: -4.912947654724121
    5. ' zéro' → logprob: -5.787947654724121
    6. 'div' → logprob: -6.662947654724121
    7. 'r' → logprob: -6.912947654724121
    8. 'la' → logprob: -7.912947654724121
    9. ' zero' → logprob: -7.912947654724121
    10. 'z' → logprob: -8.787947654724121

Token 496: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011425971984863281
    2. 'z' → logprob: -5.261425971984863
    3. 'd' → logprob: -5.761425971984863
    4. 'zero' → logprob: -5.886425971984863
    5. ' zéro' → logprob: -9.386425971984863
    6. '```' → logprob: -9.636425971984863
    7. ' ' → logprob: -10.761425971984863
    8. 'r' → logprob: -10.761425971984863
    9. 'la' → logprob: -11.261425971984863
    10. '   ' → logprob: -11.261425971984863

Token 497: ' avec' (ID: 3937)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10127825289964676
    2. 'and' → logprob: -2.351278305053711
    3. '       ' → logprob: -7.851278305053711
    4. '<|end|>' → logprob: -7.976278305053711
    5. ')' → logprob: -8.351278305053711
    6. '   ' → logprob: -10.101278305053711
    7. 'et' → logprob: -10.976278305053711
    8. ' ' → logprob: -11.851278305053711
    9. ',' → logprob: -12.101278305053711
    10. '    ' → logprob: -12.601278305053711

Token 498: ' au' (ID: 2791)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.984419047832489
    2. 'les' → logprob: -1.1094191074371338
    3. ' les' → logprob: -2.234419107437134
    4. 'l' → logprob: -2.484419107437134
    5. 'K' → logprob: -2.984419107437134
    6. ' l' → logprob: -4.234418869018555
    7. 'des' → logprob: -5.109418869018555
    8. 'une' → logprob: -5.234418869018555
    9. 'le' → logprob: -5.234418869018555
    10. 'la' → logprob: -5.359418869018555

Token 499: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.5877231359481812
    2. 'moins' → logprob: -1.3377231359481812
    3. 'max' → logprob: -2.7127232551574707
    4. 'most' → logprob: -2.8377232551574707
    5. 'maximum' → logprob: -3.5877232551574707
    6. ' most' → logprob: -4.837723255157471
    7. ' maximum' → logprob: -5.462723255157471
    8. 'mo' → logprob: -5.962723255157471
    9. ' max' → logprob: -6.087723255157471
    10. ' plus' → logprob: -6.212723255157471

Token 500: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.1798236072063446
    2. ' K' → logprob: -1.804823637008667
    3. 'i' → logprob: -11.179823875427246
    4. ' ' → logprob: -11.554823875427246
    5. ' des' → logprob: -11.679823875427246
    6. ' i' → logprob: -12.054823875427246
    7. 'r' → logprob: -12.054823875427246
    8. '   ' → logprob: -12.179823875427246
    9. 'le' → logprob: -12.179823875427246
    10. 'des' → logprob: -12.554823875427246

Token 501: ' opérations' (ID: 102793)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.7990599870681763
    2. 'operations' → logprob: -1.1740599870681763
    3. ' opérations' → logprob: -2.0490598678588867
    4. ' modifications' → logprob: -2.5490598678588867
    5. ' operations' → logprob: -4.549059867858887
    6. 'op' → logprob: -5.299059867858887
    7. 'ops' → logprob: -5.799059867858887
    8. ')' → logprob: -5.799059867858887
    9. '   ' → logprob: -5.924059867858887
    10. '_mod' → logprob: -6.174059867858887

Token 502: ' ?
' (ID: 19740)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05669707804918289
    2. 'and' → logprob: -2.931697130203247
    3. '<|end|>' → logprob: -6.681696891784668
    4. ')' → logprob: -7.806696891784668
    5. '       ' → logprob: -9.556696891784668
    6. '   ' → logprob: -10.806696891784668
    7. '
' → logprob: -11.056696891784668
    8. '<|end|>' → logprob: -11.431696891784668
    9. ',' → logprob: -11.806696891784668
    10. 'et' → logprob: -12.806696891784668

Token 503: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09999365359544754
    2. ' and' → logprob: -2.4749937057495117
    3. '<|end|>' → logprob: -4.849993705749512
    4. 'and' → logprob: -6.974993705749512
    5. '
' → logprob: -7.349993705749512
    6. '        
' → logprob: -8.349993705749512
    7. '	' → logprob: -8.349993705749512
    8. ' ' → logprob: -8.474993705749512
    9. ' if' → logprob: -8.974993705749512
    10. '   ' → logprob: -9.099993705749512

Token 504: ' fl' (ID: 1548)
  Prédit: 'fl'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fl' (adapté à ' fl') → logprob: -0.26685401797294617
    2. ' fl' → logprob: -1.6418540477752686
    3. '       ' → logprob: -3.2668540477752686
    4. ' and' → logprob: -7.0168538093566895
    5. '
' → logprob: -7.8918538093566895
    6. ' if' → logprob: -8.641854286193848
    7. '(fl' → logprob: -8.641854286193848
    8. '	fl' → logprob: -8.766854286193848
    9. 'and' → logprob: -8.891854286193848
    10. '           ' → logprob: -9.266854286193848

Token 505: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -3.762356209335849e-05
    2. 'ag' → logprob: -10.25003719329834
    3. '1' → logprob: -14.00003719329834
    4. 'gs' → logprob: -14.87503719329834
    5. 'lg' → logprob: -15.25003719329834
    6. 'f' → logprob: -15.25003719329834
    7. 'l' → logprob: -15.75003719329834
    8. '_g' → logprob: -16.625038146972656
    9. '#' → logprob: -17.437538146972656
    10. 'fl' → logprob: -17.500038146972656

Token 506: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.008129963040119e-06
    2. '1' → logprob: -13.375003814697266
    3. '0' → logprob: -13.875003814697266
    4. '_' → logprob: -14.875003814697266
    5. ' =' → logprob: -15.250003814697266
    6. '=' → logprob: -15.750003814697266
    7. '
' → logprob: -15.875003814697266
    8. '3' → logprob: -16.000003814697266
    9. '２' → logprob: -16.125003814697266
    10. '₂' → logprob: -16.500003814697266

Token 507: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048589639365673065
    2. '=' → logprob: -3.0485897064208984
    3. '=r' → logprob: -13.423589706420898
    4. ' ' → logprob: -14.548589706420898
    5. '   ' → logprob: -16.2985897064209
    6. 'r' → logprob: -16.4235897064209
    7. '  ' → logprob: -17.4235897064209
    8. ' ' → logprob: -17.6735897064209
    9. 'd' → logprob: -18.0485897064209
    10. ',' → logprob: -18.4235897064209

Token 508: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.017052223905920982
    2. ' r' → logprob: -4.142052173614502
    3. '   ' → logprob: -7.642052173614502
    4. '(r' → logprob: -7.767052173614502
    5. ' (' → logprob: -10.39205265045166
    6. ' ' → logprob: -10.51705265045166
    7. '  ' → logprob: -10.76705265045166
    8. 'K' → logprob: -11.64205265045166
    9. '    ' → logprob: -11.89205265045166
    10. '     ' → logprob: -12.26705265045166

Token 509: '_cs' (ID: 82698)
  Prédit: '_inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.09717028588056564
    2. '_cs' → logprob: -2.722170352935791
    3. '[i' → logprob: -3.722170352935791
    4. 'inv' → logprob: -7.222170352935791
    5. '[' → logprob: -7.597170352935791
    6. 'cs' → logprob: -8.097169876098633
    7. '[N' → logprob: -8.472169876098633
    8. '_i' → logprob: -8.722169876098633
    9. 'Inv' → logprob: -8.972169876098633
    10. '   ' → logprob: -9.347169876098633

Token 510: '[i' (ID: 1768)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.39258041977882385
    2. '[i' → logprob: -1.1425803899765015
    3. '[len' → logprob: -6.142580509185791
    4. '[' → logprob: -6.392580509185791
    5. '[-' → logprob: -7.517580509185791
    6. 'i' → logprob: -7.642580509185791
    7. 'len' → logprob: -7.767580509185791
    8. 'N' → logprob: -8.767580032348633
    9. '[j' → logprob: -9.267580032348633
    10. '   ' → logprob: -9.517580032348633

Token 511: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.045226920396089554
    2. '[i' → logprob: -3.795226812362671
    3. '+' → logprob: -4.67022705078125
    4. '[-' → logprob: -6.04522705078125
    5. '[' → logprob: -6.29522705078125
    6. ']<=' → logprob: -6.54522705078125
    7. ':]' → logprob: -6.67022705078125
    8. '-' → logprob: -7.04522705078125
    9. ']+' → logprob: -7.17022705078125
    10. '+]' → logprob: -7.29522705078125

Token 512: ' ==' (ID: 951)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4322318434715271
    2. '[i' → logprob: -2.057231903076172
    3. ' +' → logprob: -2.057231903076172
    4. '[-' → logprob: -3.432231903076172
    5. '<=' → logprob: -3.557231903076172
    6. '[N' → logprob: -4.182231903076172
    7. 'len' → logprob: -5.682231903076172
    8. '   ' → logprob: -5.932231903076172
    9. '[' → logprob: -6.057231903076172
    10. ' <=' → logprob: -6.432231903076172

Token 513: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.002995055168867111
    2. ' r' → logprob: -5.877995014190674
    3. 'K' → logprob: -10.002995491027832
    4. ' ' → logprob: -10.127995491027832
    5. '   ' → logprob: -10.252995491027832
    6. '  ' → logprob: -11.127995491027832
    7. '=' → logprob: -11.127995491027832
    8. '0' → logprob: -11.627995491027832
    9. 'k' → logprob: -11.877995491027832
    10. '    ' → logprob: -12.002995491027832

Token 514: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.34488752484321594
    2. '_cs' → logprob: -1.3448874950408936
    3. '[i' → logprob: -3.7198874950408936
    4. 'inv' → logprob: -6.094887733459473
    5. 'cs' → logprob: -6.219887733459473
    6. 'i' → logprob: -6.844887733459473
    7. '[' → logprob: -8.219887733459473
    8. '_i' → logprob: -8.594887733459473
    9. '   ' → logprob: -9.094887733459473
    10. 'r' → logprob: -9.094887733459473

Token 515: '_cs' (ID: 82698)
  Prédit: '_cs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cs' → logprob: -0.1035032719373703
    2. '[i' → logprob: -2.3535032272338867
    3. 'cs' → logprob: -6.603503227233887
    4. 's' → logprob: -6.603503227233887
    5. '[' → logprob: -8.478503227233887
    6. 'i' → logprob: -9.228503227233887
    7. '   ' → logprob: -10.103503227233887
    8. 'Cs' → logprob: -10.478503227233887
    9. '[s' → logprob: -10.478503227233887
    10. '_inv' → logprob: -11.353503227233887

Token 516: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.619311974034645e-05
    2. 'i' → logprob: -10.875036239624023
    3. '[' → logprob: -11.375036239624023
    4. '   ' → logprob: -12.625036239624023
    5. ' [' → logprob: -13.875036239624023
    6. '[j' → logprob: -14.750036239624023
    7. '(i' → logprob: -15.250036239624023
    8. '       ' → logprob: -15.500036239624023
    9. '
' → logprob: -16.375036239624023
    10. '[len' → logprob: -16.375036239624023

Token 517: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.40186649560928345
    2. ')' → logprob: -1.9018664360046387
    3. '   ' → logprob: -2.4018664360046387
    4. ' ' → logprob: -3.5268664360046387
    5. ' or' → logprob: -4.651866436004639
    6. '+' → logprob: -4.776866436004639
    7. '    ' → logprob: -4.901866436004639
    8. '[' → logprob: -5.026866436004639
    9. '  ' → logprob: -5.026866436004639
    10. '[i' → logprob: -5.401866436004639

Token 518: ' ' (ID: 220)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0959969013929367
    2. '       ' → logprob: -2.470996856689453
    3. 'and' → logprob: -5.595996856689453
    4. ' if' → logprob: -6.470996856689453
    5. ' or' → logprob: -6.470996856689453
    6. '<|end|>' → logprob: -9.095996856689453
    7. 'if' → logprob: -9.970996856689453
    8. '   ' → logprob: -11.095996856689453
    9. '
' → logprob: -11.470996856689453
    10. ' ' → logprob: -11.720996856689453

Token 519: ' #' (ID: 1069)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.012380140833556652
    2. 'and' → logprob: -4.637380123138428
    3. '       ' → logprob: -6.262380123138428
    4. ' or' → logprob: -7.762380123138428
    5. ' if' → logprob: -8.637380599975586
    6. '<|end|>' → logprob: -10.137380599975586
    7. '   ' → logprob: -10.637380599975586
    8. ' ' → logprob: -10.887380599975586
    9. 'if' → logprob: -11.637380599975586
    10. '    ' → logprob: -12.262380599975586

Token 520: ' Est' (ID: 4555)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.22169093787670135
    2. 'if' → logprob: -2.0966908931732178
    3. '       ' → logprob: -2.7216908931732178
    4. '#' → logprob: -5.096691131591797
    5. ' fl' → logprob: -6.721691131591797
    6. ' #' → logprob: -6.971691131591797
    7. 'If' → logprob: -7.346691131591797
    8. '
' → logprob: -7.846691131591797
    9. 'fl' → logprob: -7.971691131591797
    10. ' ret' → logprob: -8.846691131591797

Token 521: '-ce' (ID: 35404)
  Prédit: 'fl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fl' → logprob: -0.4840611517429352
    2. '-ce' → logprob: -2.2340612411499023
    3. 'r' → logprob: -2.4840612411499023
    4. '       ' → logprob: -2.9840612411499023
    5. '   ' → logprob: -4.109061241149902
    6. 'not' → logprob: -4.234061241149902
    7. '(fl' → logprob: -4.234061241149902
    8. 'ce' → logprob: -4.234061241149902
    9. 'i' → logprob: -4.359061241149902
    10. '(r' → logprob: -4.484061241149902

Token 522: ' que' (ID: 661)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.7083514928817749
    2. ' True' → logprob: -1.083351492881775
    3. ' not' → logprob: -2.3333516120910645
    4. 'not' → logprob: -4.3333516120910645
    5. 'i' → logprob: -4.4583516120910645
    6. 'r' → logprob: -4.4583516120910645
    7. ' i' → logprob: -4.9583516120910645
    8. '   ' → logprob: -5.7083516120910645
    9. '=' → logprob: -5.8333516120910645
    10. ' (' → logprob: -5.9583516120910645

Token 523: ' les' (ID: 1341)
  Prédit: ' fl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fl' → logprob: -0.7772395014762878
    2. 'fl' → logprob: -1.2772395610809326
    3. 'r' → logprob: -1.9022395610809326
    4. ' r' → logprob: -2.6522395610809326
    5. ' on' → logprob: -4.7772393226623535
    6. ' la' → logprob: -4.9022393226623535
    7. ' les' → logprob: -5.4022393226623535
    8. ' le' → logprob: -5.7772393226623535
    9. ' (' → logprob: -6.1522393226623535
    10. ' i' → logprob: -6.1522393226623535

Token 524: ' augment' (ID: 44474)
  Prédit: ' modifications'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' modifications' → logprob: -0.666903018951416
    2. 'mod' → logprob: -1.666903018951416
    3. ' rest' → logprob: -2.166903018951416
    4. 'rest' → logprob: -3.416903018951416
    5. '#' → logprob: -3.791903018951416
    6. 'r' → logprob: -4.166903018951416
    7. ' mod' → logprob: -4.166903018951416
    8. 'i' → logprob: -4.416903018951416
    9. ' #' → logprob: -4.541903018951416
    10. ' i' → logprob: -4.666903018951416

Token 525: 'ations' (ID: 929)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.05014028772711754
    2. 'r' → logprob: -3.800140380859375
    3. 'e' → logprob: -4.675140380859375
    4. '   ' → logprob: -5.050140380859375
    5. '#' → logprob: -5.300140380859375
    6. '       ' → logprob: -6.050140380859375
    7. 'ations' → logprob: -7.050140380859375
    8. '[i' → logprob: -7.675140380859375
    9. '           ' → logprob: -7.925140380859375
    10. 'ion' → logprob: -8.675140380859375

Token 526: ' et' (ID: 859)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -1.0946708917617798
    2. ' ou' → logprob: -1.4696708917617798
    3. '==' → logprob: -1.4696708917617798
    4. ' ==' → logprob: -1.8446708917617798
    5. '<|end|>' → logprob: -4.21967077255249
    6. 'or' → logprob: -4.59467077255249
    7. 'ou' → logprob: -5.46967077255249
    8. '       ' → logprob: -5.59467077255249
    9. '<=' → logprob: -6.46967077255249
    10. ' <=' → logprob: -6.59467077255249

Token 527: ' dimin' (ID: 33870)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.21114429831504822
    2. ' les' → logprob: -2.711144208908081
    3. 'd' → logprob: -2.961144208908081
    4. ' dimin' → logprob: -3.586144208908081
    5. '   ' → logprob: -4.33614444732666
    6. 'r' → logprob: -4.46114444732666
    7. 'dim' → logprob: -4.96114444732666
    8. ' ' → logprob: -5.46114444732666
    9. ' diminu' → logprob: -6.08614444732666
    10. '#' → logprob: -6.08614444732666

Token 528: 'utions' (ID: 5773)
  Prédit: 'utions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utions' → logprob: -0.03282848745584488
    2. 'uctions' → logprob: -4.157828330993652
    3. 'ution' → logprob: -5.157828330993652
    4. 'u' → logprob: -5.782828330993652
    5. 'uis' → logprob: -5.782828330993652
    6. 'n' → logprob: -7.157828330993652
    7. 'usions' → logprob: -7.282828330993652
    8. 'uer' → logprob: -7.657828330993652
    9. 'r' → logprob: -8.032828330993652
    10. 'us' → logprob: -8.032828330993652

Token 529: ' nécessaires' (ID: 74402)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6118655204772949
    2. ' sont' → logprob: -0.8618655204772949
    3. 'se' → logprob: -5.236865520477295
    4. ' correspondent' → logprob: -5.361865520477295
    5. 'cor' → logprob: -5.611865520477295
    6. ' s' → logprob: -5.861865520477295
    7. 'ont' → logprob: -6.236865520477295
    8. 'des' → logprob: -6.236865520477295
    9. ' se' → logprob: -6.486865520477295
    10. '#' → logprob: -6.861865520477295

Token 530: ' sont' (ID: 5242)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 531: ' ég' (ID: 33150)
  Prédit: ' ég'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ég' → logprob: -0.606886088848114
    2. 'ég' → logprob: -1.2318861484527588
    3. 'équ' → logprob: -2.731886148452759
    4. 'égal' → logprob: -2.981886148452759
    5. ' équilibr' → logprob: -3.106886148452759
    6. 'en' → logprob: -7.98188591003418
    7. 'exact' → logprob: -8.23188591003418
    8. ' équ' → logprob: -8.48188591003418
    9. '```' → logprob: -8.48188591003418
    10. 'balance' → logprob: -8.73188591003418

Token 532: 'ales' (ID: 3459)
  Prédit: 'ales'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ales' → logprob: -0.14484868943691254
    2. 'aux' → logprob: -2.019848585128784
    3. 'al' → logprob: -7.019848823547363
    4. 'a' → logprob: -8.269848823547363
    5. 'als' → logprob: -8.394848823547363
    6. '```' → logprob: -9.144848823547363
    7. 'ale' → logprob: -9.269848823547363
    8. 'uales' → logprob: -9.644848823547363
    9. 'au' → logprob: -10.019848823547363
    10. '``' → logprob: -10.019848823547363

Token 533: ' ?
' (ID: 19740)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 534: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.061743684113025665
    2. '<|end|>' → logprob: -2.93674373626709
    3. ')' → logprob: -5.93674373626709
    4. '   ' → logprob: -6.31174373626709
    5. ':' → logprob: -7.18674373626709
    6. ' if' → logprob: -7.81174373626709
    7. '```' → logprob: -8.56174373626709
    8. '           ' → logprob: -9.31174373626709
    9. '    ' → logprob: -9.31174373626709
    10. '<|end|>' → logprob: -9.31174373626709

Token 535: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010547212325036526
    2. ' if' → logprob: -5.135547161102295
    3. 'if' → logprob: -5.385547161102295
    4. '	' → logprob: -11.760547637939453
    5. '	if' → logprob: -12.385547637939453
    6. '   ' → logprob: -12.510547637939453
    7. '<|end|>' → logprob: -12.510547637939453
    8. ' ' → logprob: -13.760547637939453
    9. '    ' → logprob: -14.010547637939453
    10. '```' → logprob: -14.260547637939453

Token 536: ' Si' (ID: 7832)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08448633551597595
    2. 'if' → logprob: -2.584486246109009
    3. ' if' → logprob: -5.209486484527588
    4. '	' → logprob: -9.58448600769043
    5. '   ' → logprob: -10.83448600769043
    6. '	if' → logprob: -10.95948600769043
    7. '           ' → logprob: -13.08448600769043
    8. '	   ' → logprob: -13.08448600769043
    9. '```' → logprob: -13.58448600769043
    10. ' ' → logprob: -13.95948600769043

Token 537: ' les' (ID: 1341)
  Prédit: ' fl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fl' → logprob: -0.3871314525604248
    2. 'fl' → logprob: -1.1371314525604248
    3. ' not' → logprob: -8.637131690979004
    4. '(fl' → logprob: -10.262131690979004
    5. 'not' → logprob: -11.012131690979004
    6. '	fl' → logprob: -11.262131690979004
    7. '   ' → logprob: -11.512131690979004
    8. '       ' → logprob: -12.512131690979004
    9. '    ' → logprob: -12.762131690979004
    10. ' ' → logprob: -14.012131690979004

Token 538: ' deux' (ID: 10301)
  Prédit: 'fl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fl' → logprob: -0.2818349301815033
    2. ' fl' → logprob: -1.4068349599838257
    3. ' not' → logprob: -8.281834602355957
    4. '(fl' → logprob: -8.656834602355957
    5. 'not' → logprob: -9.406834602355957
    6. '	fl' → logprob: -10.031834602355957
    7. '   ' → logprob: -10.281834602355957
    8. '       ' → logprob: -11.156834602355957
    9. '    ' → logprob: -11.406834602355957
    10. ' ' → logprob: -11.531834602355957

Token 539: ' conditions' (ID: 6409)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.007684589363634586
    2. 'and' → logprob: -4.882684707641602
    3. ' et' → logprob: -9.882684707641602
    4. ' conditions' → logprob: -11.757684707641602
    5. ':' → logprob: -11.882684707641602
    6. ' if' → logprob: -12.507684707641602
    7. 'et' → logprob: -12.882684707641602
    8. ' ' → logprob: -13.757684707641602
    9. '	and' → logprob: -14.007684707641602
    10. 'if' → logprob: -14.257684707641602

Token 540: ' sont' (ID: 5242)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.007118130102753639
    2. 'and' → logprob: -5.132118225097656
    3. ' et' → logprob: -7.382118225097656
    4. '    ' → logprob: -8.757118225097656
    5. ':' → logprob: -8.882118225097656
    6. ' if' → logprob: -8.882118225097656
    7. 'et' → logprob: -10.257118225097656
    8. '       ' → logprob: -10.757118225097656
    9. '        ' → logprob: -11.257118225097656
    10. '<|end|>' → logprob: -11.257118225097656

Token 541: ' rem' (ID: 1662)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.20698565244674683
    2. 'True' → logprob: -1.7069857120513916
    3. 'v' → logprob: -6.3319854736328125
    4. 'fl' → logprob: -6.8319854736328125
    5. ' and' → logprob: -6.9569854736328125
    6. '       ' → logprob: -7.7069854736328125
    7. 'and' → logprob: -8.081985473632812
    8. '           ' → logprob: -8.206985473632812
    9. 'true' → logprob: -8.581985473632812
    10. ' true' → logprob: -9.081985473632812

Token 542: 'plies' (ID: 9773)
  Prédit: 'plies'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plies' → logprob: -0.0031806828919798136
    2. 'pl' → logprob: -5.753180503845215
    3. 'p' → logprob: -13.253180503845215
    4. 'plit' → logprob: -15.503180503845215
    5. 'pies' → logprob: -15.628180503845215
    6. 'ises' → logprob: -15.753180503845215
    7. 'port' → logprob: -16.12818145751953
    8. 'plac' → logprob: -16.12818145751953
    9. 'ples' → logprob: -16.37818145751953
    10. 'ply' → logprob: -16.50318145751953

Token 543: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4866897463798523
    2. '       ' → logprob: -1.111689805984497
    3. ':' → logprob: -3.111689805984497
    4. ' or' → logprob: -5.361689567565918
    5. '           ' → logprob: -6.361689567565918
    6. ' if' → logprob: -6.486689567565918
    7. ',' → logprob: -6.611689567565918
    8. ':
' → logprob: -7.486689567565918
    9. 'and' → logprob: -7.486689567565918
    10. '<|end|>' → logprob: -7.486689567565918

Token 544: ' cela' (ID: 17542)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006785470526665449
    2. ' ret' → logprob: -5.7567853927612305
    3. 'ret' → logprob: -6.1317853927612305
    4. '       ' → logprob: -7.6317853927612305
    5. ' return' → logprob: -7.6317853927612305
    6. 'return' → logprob: -8.00678539276123
    7. '               ' → logprob: -9.75678539276123
    8. ' if' → logprob: -10.88178539276123
    9. '		' → logprob: -12.00678539276123
    10. '   ' → logprob: -12.00678539276123

Token 545: ' signifie' (ID: 81149)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3979392945766449
    2. ':' → logprob: -1.3979393243789673
    3. '           ' → logprob: -3.0229392051696777
    4. '       ' → logprob: -4.022939205169678
    5. ':
' → logprob: -4.772939205169678
    6. 'and' → logprob: -5.647939205169678
    7. ' or' → logprob: -7.397939205169678
    8. ':return' → logprob: -7.397939205169678
    9. ' is' → logprob: -8.022939682006836
    10. ',' → logprob: -9.022939682006836

Token 546: ' qu' (ID: 474)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05014039948582649
    2. '       ' → logprob: -3.050140380859375
    3. ' True' → logprob: -7.175140380859375
    4. 'True' → logprob: -8.300140380859375
    5. 'ret' → logprob: -8.425140380859375
    6. ' ret' → logprob: -9.050140380859375
    7. '   ' → logprob: -9.550140380859375
    8. 'return' → logprob: -10.675140380859375
    9. '
' → logprob: -10.675140380859375
    10. '          ' → logprob: -11.175140380859375

Token 547: '’il' (ID: 14828)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5265861749649048
    2. ' ret' → logprob: -1.2765861749649048
    3. '       ' → logprob: -2.5265860557556152
    4. ' return' → logprob: -3.6515860557556152
    5. '   ' → logprob: -4.651586055755615
    6. ' ' → logprob: -5.776586055755615
    7. 'ret' → logprob: -6.026586055755615
    8. ' True' → logprob: -6.401586055755615
    9. '          ' → logprob: -6.526586055755615
    10. ' retour' → logprob: -7.526586055755615

Token 548: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.9412719011306763
    2. 'est' → logprob: -1.3162719011306763
    3. '   ' → logprob: -1.8162719011306763
    4. ' possible' → logprob: -2.3162717819213867
    5. 'possible' → logprob: -3.3162717819213867
    6. ' n' → logprob: -4.316271781921387
    7. 'n' → logprob: -4.816271781921387
    8. '       ' → logprob: -5.066271781921387
    9. ' y' → logprob: -5.566271781921387
    10. ' existe' → logprob: -5.816271781921387

Token 549: ' possible' (ID: 4149)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29315948486328125
    2. ' possible' → logprob: -1.5431594848632812
    3. 'possible' → logprob: -3.2931594848632812
    4. ' True' → logprob: -6.043159484863281
    5. ' vrai' → logprob: -8.418159484863281
    6. 'True' → logprob: -8.418159484863281
    7. '       ' → logprob: -9.293159484863281
    8. '          ' → logprob: -9.793159484863281
    9. '   ' → logprob: -9.918159484863281
    10. ' posible' → logprob: -9.918159484863281

Token 550: ' avec' (ID: 3937)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20403380692005157
    2. '           ' → logprob: -1.7040338516235352
    3. ' if' → logprob: -7.454033851623535
    4. '   ' → logprob: -7.454033851623535
    5. ' and' → logprob: -7.954033851623535
    6. ' to' → logprob: -8.079033851623535
    7. ' de' → logprob: -8.704033851623535
    8. ',' → logprob: -9.079033851623535
    9. ' or' → logprob: -9.079033851623535
    10. ' et' → logprob: -9.579033851623535

Token 551: ' K' (ID: 658)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.3609895706176758
    2. '           ' → logprob: -1.6109895706176758
    3. 'True' → logprob: -2.485989570617676
    4. '       ' → logprob: -4.985989570617676
    5. '               ' → logprob: -5.485989570617676
    6. 'd' → logprob: -5.610989570617676
    7. 'fl' → logprob: -6.610989570617676
    8. '         ' → logprob: -7.860989570617676
    9. 'r' → logprob: -7.860989570617676
    10. '   ' → logprob: -7.985989570617676

Token 552: ' ou' (ID: 2031)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6178155541419983
    2. ' de' → logprob: -2.1178154945373535
    3. ' operations' → logprob: -2.6178154945373535
    4. ' opérations' → logprob: -2.7428154945373535
    5. 'operations' → logprob: -2.9928154945373535
    6. '           ' → logprob: -3.2428154945373535
    7. '   ' → logprob: -3.3678154945373535
    8. ' modifications' → logprob: -3.7428154945373535
    9. ' d' → logprob: -4.1178154945373535
    10. ' ' → logprob: -5.4928154945373535

Token 553: ' moins' (ID: 15924)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.7523126006126404
    2. 'moins' → logprob: -0.7523126006126404
    3. 'sans' → logprob: -3.877312660217285
    4. '#' → logprob: -3.877312660217285
    5. '   ' → logprob: -5.252312660217285
    6. 'égal' → logprob: -6.002312660217285
    7. '+' → logprob: -6.627312660217285
    8. 'exact' → logprob: -6.752312660217285
    9. '```' → logprob: -6.752312660217285
    10. '=' → logprob: -7.502312660217285

Token 554: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4321078658103943
    2. ' d' → logprob: -1.682107925415039
    3. 'd' → logprob: -2.807107925415039
    4. ' de' → logprob: -3.307107925415039
    5. 'operations' → logprob: -4.182107925415039
    6. '           ' → logprob: -4.307107925415039
    7. 'de' → logprob: -4.807107925415039
    8. ' opérations' → logprob: -5.182107925415039
    9. '        ' → logprob: -5.432107925415039
    10. '   ' → logprob: -5.557107925415039

Token 555: ' modifications' (ID: 38756)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.12520314753055573
    2. 'op' → logprob: -2.3752031326293945
    3. 'operations' → logprob: -4.5002031326293945
    4. ' modifications' → logprob: -5.1252031326293945
    5. ' opérations' → logprob: -5.3752031326293945
    6. ' mod' → logprob: -7.0002031326293945
    7. '```' → logprob: -7.8752031326293945
    8. ' op' → logprob: -8.250203132629395
    9. 'modifier' → logprob: -8.750203132629395
    10. '   ' → logprob: -9.125203132629395

Token 556: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0580318346619606
    2. ' and' → logprob: -3.1830317974090576
    3. ':' → logprob: -5.683032035827637
    4. '<|end|>' → logprob: -6.058032035827637
    5. '           ' → logprob: -6.308032035827637
    6. ' to' → logprob: -6.683032035827637
    7. ',' → logprob: -6.808032035827637
    8. ' de' → logprob: -6.808032035827637
    9. ' et' → logprob: -7.058032035827637
    10. '   ' → logprob: -7.058032035827637

Token 557: ' tout' (ID: 5501)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.0078409593552351
    2. ' ret' → logprob: -5.632841110229492
    3. '       ' → logprob: -6.007841110229492
    4. 'return' → logprob: -7.757841110229492
    5. '
' → logprob: -8.007841110229492
    6. ' True' → logprob: -8.257841110229492
    7. 'True' → logprob: -8.632841110229492
    8. 'r' → logprob: -8.757841110229492
    9. '   ' → logprob: -9.132841110229492
    10. 'modifier' → logprob: -9.257841110229492

Token 558: ' rendre' (ID: 44629)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5057747960090637
    2. ' rendre' → logprob: -1.380774736404419
    3. '       ' → logprob: -2.505774736404419
    4. '```' → logprob: -3.880774736404419
    5. '#' → logprob: -4.255774974822998
    6. 'aj' → logprob: -5.380774974822998
    7. 'faire' → logprob: -5.505774974822998
    8. 'modifier' → logprob: -5.505774974822998
    9. '   ' → logprob: -5.755774974822998
    10. 'mettre' → logprob: -5.880774974822998

Token 559: ' divisible' (ID: 167813)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.5998008251190186
    2. ' divisible' → logprob: -1.7248008251190186
    3. 'div' → logprob: -1.8498008251190186
    4. ' True' → logprob: -2.4748008251190186
    5. '   ' → logprob: -3.7248008251190186
    6. 'd' → logprob: -5.349801063537598
    7. ' divis' → logprob: -6.599801063537598
    8. '       ' → logprob: -7.974801063537598
    9. '```' → logprob: -8.599801063537598
    10. ' div' → logprob: -8.849801063537598

Token 560: ' par' (ID: 686)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011952999047935009
    2. ' par' → logprob: -4.761952877044678
    3. 'par' → logprob: -6.511952877044678
    4. '           ' → logprob: -6.636952877044678
    5. '   ' → logprob: -8.261953353881836
    6. ')' → logprob: -9.511953353881836
    7. '               ' → logprob: -10.011953353881836
    8. 'by' → logprob: -10.261953353881836
    9. '        ' → logprob: -10.761953353881836
    10. ' ' → logprob: -11.261953353881836

Token 561: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.313291072845459
    2. 'd' → logprob: -1.313291072845459
    3. '	d' → logprob: -10.688291549682617
    4. ' ' → logprob: -13.313291549682617
    5. '   ' → logprob: -13.688291549682617
    6. ' ' → logprob: -13.938291549682617
    7. ''d' → logprob: -14.188291549682617
    8. '"d' → logprob: -14.313291549682617
    9. '_d' → logprob: -15.188291549682617
    10. '  ' → logprob: -15.313291549682617

Token 562: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017271699383854866
    2. ':' → logprob: -4.267271518707275
    3. ' and' → logprob: -6.892271518707275
    4. '   ' → logprob: -7.642271518707275
    5. ' if' → logprob: -7.892271518707275
    6. '<|end|>' → logprob: -8.017271995544434
    7. ':
' → logprob: -8.517271995544434
    8. '           ' → logprob: -8.767271995544434
    9. '):' → logprob: -9.017271995544434
    10. ' or' → logprob: -9.267271995544434

Token 563: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007248217007145286
    2. '   ' → logprob: -8.375724792480469
    3. '<|end|>' → logprob: -8.875724792480469
    4. ':' → logprob: -9.125724792480469
    5. ')' → logprob: -9.250724792480469
    6. ' if' → logprob: -10.000724792480469
    7. ',' → logprob: -10.875724792480469
    8. ' and' → logprob: -11.125724792480469
    9. '	' → logprob: -11.250724792480469
    10. '):' → logprob: -11.750724792480469

Token 564: ' ret' (ID: 2881)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008988694287836552
    2. ' if' → logprob: -5.258988857269287
    3. ' and' → logprob: -6.883988857269287
    4. '<|end|>' → logprob: -6.883988857269287
    5. '   ' → logprob: -7.508988857269287
    6. ':' → logprob: -7.758988857269287
    7. ',' → logprob: -8.883988380432129
    8. ':
' → logprob: -9.133988380432129
    9. 'if' → logprob: -9.258988380432129
    10. ')' → logprob: -9.633988380432129

Token 565: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2432449460029602
    2. '|' → logprob: -1.7432448863983154
    3. ' |=' → logprob: -3.4932448863983154
    4. ' =' → logprob: -4.6182451248168945
    5. '   ' → logprob: -7.4932451248168945
    6. 'or' → logprob: -10.243245124816895
    7. '  ' → logprob: -10.368245124816895
    8. '    ' → logprob: -10.868245124816895
    9. '       ' → logprob: -11.118245124816895
    10. ' or' → logprob: -11.243245124816895

Token 566: ' (' (ID: 350)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.3491308391094208
    2. ' ret' → logprob: -1.2241308689117432
    3. '       ' → logprob: -7.974130630493164
    4. '   ' → logprob: -8.099130630493164
    5. '	ret' → logprob: -11.599130630493164
    6. '      ' → logprob: -11.849130630493164
    7. '    ' → logprob: -11.849130630493164
    8. '(ret' → logprob: -12.349130630493164
    9. '     ' → logprob: -12.724130630493164
    10. '  ' → logprob: -12.849130630493164

Token 567: 'fl' (ID: 1836)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.010118920356035233
    2. 'fl' → logprob: -4.6351189613342285
    3. ' ret' → logprob: -8.13511848449707
    4. 'True' → logprob: -10.63511848449707
    5. '   ' → logprob: -11.51011848449707
    6. 'r' → logprob: -12.01011848449707
    7. ' fl' → logprob: -12.13511848449707
    8. '(ret' → logprob: -12.13511848449707
    9. '	ret' → logprob: -12.63511848449707
    10. ' ' → logprob: -13.51011848449707

Token 568: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.009365138597786427
    2. 'r' → logprob: -4.884365081787109
    3. 'ag' → logprob: -6.634365081787109
    4. 'd' → logprob: -8.38436508178711
    5. '   ' → logprob: -9.38436508178711
    6. '       ' → logprob: -9.88436508178711
    7. 'fl' → logprob: -10.88436508178711
    8. '(r' → logprob: -11.63436508178711
    9. ')' → logprob: -12.50936508178711
    10. 'True' → logprob: -12.63436508178711

Token 569: '1' (ID: 16)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.26333165168762207
    2. '1' → logprob: -1.513331651687622
    3. 'or' → logprob: -5.263331413269043
    4. ')' → logprob: -6.013331413269043
    5. 'ret' → logprob: -6.138331413269043
    6. ' |=' → logprob: -8.138331413269043
    7. '|' → logprob: -8.263331413269043
    8. ' |' → logprob: -8.388331413269043
    9. ' ret' → logprob: -8.513331413269043
    10. ' ' → logprob: -9.013331413269043

Token 570: ' and' (ID: 326)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.00912997405976057
    2. ' and' → logprob: -5.134130001068115
    3. ')' → logprob: -6.134130001068115
    4. 'or' → logprob: -7.009130001068115
    5. 'and' → logprob: -9.134129524230957
    6. '    ' → logprob: -12.384129524230957
    7. ' )' → logprob: -12.384129524230957
    8. '        ' → logprob: -12.759129524230957
    9. ' ' → logprob: -12.884129524230957
    10. '|' → logprob: -14.009129524230957

Token 571: ' fl' (ID: 1548)
  Prédit: 'fl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fl' → logprob: -0.05496251955628395
    2. ' fl' → logprob: -2.929962635040283
    3. '	fl' → logprob: -10.554962158203125
    4. '   ' → logprob: -10.804962158203125
    5. '       ' → logprob: -11.804962158203125
    6. '    ' → logprob: -12.179962158203125
    7. '     ' → logprob: -12.179962158203125
    8. ' ' → logprob: -12.304962158203125
    9. '  ' → logprob: -12.679962158203125
    10. '(fl' → logprob: -12.929962158203125

Token 572: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.00010020548506872728
    2. 'ag' → logprob: -9.250100135803223
    3. 'f' → logprob: -13.875100135803223
    4. 'gs' → logprob: -14.000100135803223
    5. 'd' → logprob: -15.500100135803223
    6. 'r' → logprob: -15.625100135803223
    7. '
' → logprob: -15.625100135803223
    8. ')' → logprob: -15.625100135803223
    9. '(g' → logprob: -15.625100135803223
    10. 'ags' → logprob: -15.875100135803223

Token 573: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. '
' → logprob: -15.0
    3. ' ' → logprob: -17.25
    4. '   ' → logprob: -18.125
    5. '_' → logprob: -18.875
    6. '

' → logprob: -19.0
    7. '```' → logprob: -19.125
    8. 'r' → logprob: -19.25
    9. 's' → logprob: -19.625
    10. '=' → logprob: -20.0

Token 574: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004089085850864649
    2. ')
' → logprob: -5.504088878631592
    3. ' or' → logprob: -12.37908935546875
    4. '       ' → logprob: -13.00408935546875
    5. ')

' → logprob: -13.50408935546875
    6. '   ' → logprob: -14.00408935546875
    7. ' )' → logprob: -14.25408935546875
    8. ')
' → logprob: -14.37908935546875
    9. 'or' → logprob: -15.50408935546875
    10. ')return' → logprob: -15.75408935546875

Token 575: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2574627697467804
    2. ' or' → logprob: -1.507462739944458
    3. ' if' → logprob: -6.382462978363037
    4. 'or' → logprob: -6.382462978363037
    5. '   ' → logprob: -7.007462978363037
    6. '
' → logprob: -7.632462978363037
    7. '           ' → logprob: -8.507462501525879
    8. 'if' → logprob: -8.632462501525879
    9. '|' → logprob: -9.382462501525879
    10. '      ' → logprob: -9.757462501525879

Token 576: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.048633918166160583
    2. ' ret' → logprob: -3.0486338138580322
    3. '   ' → logprob: -10.673633575439453
    4. '       ' → logprob: -11.423633575439453
    5. '(ret' → logprob: -12.048633575439453
    6. '	ret' → logprob: -12.298633575439453
    7. '    ' → logprob: -14.048633575439453
    8. '     ' → logprob: -15.298633575439453
    9. '           ' → logprob: -15.548633575439453
    10. '      ' → logprob: -15.548633575439453

Token 577: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.057178255170583725
    2. '
' → logprob: -3.182178258895874
    3. '    
' → logprob: -4.557178020477295
    4. 'return' → logprob: -6.307178020477295
    5. ' return' → logprob: -6.807178020477295
    6. '<|end|>' → logprob: -8.182178497314453
    7. '	return' → logprob: -9.307178497314453
    8. '  
' → logprob: -9.432178497314453
    9. '   ' → logprob: -10.557178497314453
    10. '        
' → logprob: -10.682178497314453

Token 578: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21300755441188812
    2. '<|end|>' → logprob: -2.2130074501037598
    3. '
' → logprob: -2.7130074501037598
    4. '    
' → logprob: -5.33800745010376
    5. '       ' → logprob: -5.58800745010376
    6. '	return' → logprob: -6.58800745010376
    7. ' return' → logprob: -6.71300745010376
    8. ')' → logprob: -6.71300745010376
    9. '  
' → logprob: -7.46300745010376
    10. ' ' → logprob: -7.46300745010376

Token 579: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1209996938705444
    2. 'return' → logprob: -1.3709996938705444
    3. ' return' → logprob: -1.3709996938705444
    4. '       ' → logprob: -1.8709996938705444
    5. '
' → logprob: -5.370999813079834
    6. '```' → logprob: -6.120999813079834
    7. 'continue' → logprob: -7.120999813079834
    8. '	return' → logprob: -7.370999813079834
    9. ' if' → logprob: -7.495999813079834
    10. ')' → logprob: -7.495999813079834

Token 580: ' conserve' (ID: 72274)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '|' → logprob: -1.1943390369415283
    2. ' |=' → logprob: -1.1943390369415283
    3. '<|end|>' → logprob: -2.0693390369415283
    4. '=' → logprob: -2.4443390369415283
    5. '=True' → logprob: -2.5693390369415283
    6. ')' → logprob: -3.3193390369415283
    7. '   ' → logprob: -4.569338798522949
    8. 'return' → logprob: -4.569338798522949
    9. ' =' → logprob: -5.069338798522949
    10. 'continue' → logprob: -5.194338798522949

Token 581: ' True' (ID: 6432)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.008839460089802742
    2. ' ret' → logprob: -4.7588396072387695
    3. '       ' → logprob: -9.00883960723877
    4. '   ' → logprob: -9.38383960723877
    5. '	ret' → logprob: -11.50883960723877
    6. '(ret' → logprob: -12.63383960723877
    7. 'fl' → logprob: -13.63383960723877
    8. ' True' → logprob: -13.88383960723877
    9. '$ret' → logprob: -14.38383960723877
    10. 'True' → logprob: -14.38383960723877

Token 582: ' si' (ID: 1784)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 583: ' jamais' (ID: 23077)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.0076520610600709915
    2. ' ret' → logprob: -5.007652282714844
    3. 'True' → logprob: -7.882652282714844
    4. 'fl' → logprob: -8.007652282714844
    5. ' True' → logprob: -9.132652282714844
    6. '(ret' → logprob: -9.757652282714844
    7. '   ' → logprob: -11.632652282714844
    8. '	ret' → logprob: -11.757652282714844
    9. ' fl' → logprob: -11.882652282714844
    10. 'true' → logprob: -12.007652282714844

Token 584: ' au' (ID: 2791)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.010750548914074898
    2. ' ret' → logprob: -4.760750770568848
    3. '       ' → logprob: -6.885750770568848
    4. 'fl' → logprob: -7.385750770568848
    5. '   ' → logprob: -8.260750770568848
    6. 'True' → logprob: -9.135750770568848
    7. '           ' → logprob: -10.135750770568848
    8. ' True' → logprob: -11.010750770568848
    9. '(ret' → logprob: -11.385750770568848
    10. 'not' → logprob: -11.885750770568848

Token 585: ' moins' (ID: 15924)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8162750005722046
    2. 'moins' → logprob: -0.9412750005722046
    3. 'cun' → logprob: -1.9412750005722046
    4. 'jourd' → logprob: -5.566275119781494
    5. 'une' → logprob: -5.566275119781494
    6. '```' → logprob: -6.066275119781494
    7. ' moins' → logprob: -6.191275119781494
    8. 'm' → logprob: -6.316275119781494
    9. 'n' → logprob: -6.441275119781494
    10. 'un' → logprob: -6.941275119781494

Token 586: ' une' (ID: 2463)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.5575725436210632
    2. 'True' → logprob: -1.057572603225708
    3. '   ' → logprob: -3.932572603225708
    4. ' True' → logprob: -3.932572603225708
    5. 'une' → logprob: -4.057572364807129
    6. ' ret' → logprob: -5.057572364807129
    7. 'one' → logprob: -5.182572364807129
    8. 'fl' → logprob: -5.432572364807129
    9. 'un' → logprob: -5.932572364807129
    10. ' one' → logprob: -6.557572364807129

Token 587: ' it' (ID: 480)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.5525041222572327
    2. 'True' → logprob: -1.177504062652588
    3. '(True' → logprob: -2.677504062652588
    4. '   ' → logprob: -4.802504062652588
    5. 'fl' → logprob: -4.927504062652588
    6. 'v' → logprob: -5.927504062652588
    7. '```' → logprob: -6.052504062652588
    8. ' fl' → logprob: -6.052504062652588
    9. 'case' → logprob: -6.302504062652588
    10. ')' → logprob: -6.427504062652588

Token 588: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.0012086842907592654
    2. 'er' → logprob: -7.001208782196045
    3. 'ter' → logprob: -8.876208305358887
    4. 'érations' → logprob: -10.376208305358887
    5. '=' → logprob: -11.001208305358887
    6. 'ér' → logprob: -11.626208305358887
    7. 'érant' → logprob: -11.751208305358887
    8. 'érée' → logprob: -11.876208305358887
    9. 'érateur' → logprob: -11.876208305358887
    10. 'érance' → logprob: -12.001208305358887

Token 589: ' vér' (ID: 42524)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7023113965988159
    2. '   ' → logprob: -1.702311396598816
    3. 'ret' → logprob: -2.4523115158081055
    4. 'return' → logprob: -2.9523115158081055
    5. 'returns' → logprob: -3.2023115158081055
    6. '```' → logprob: -3.2023115158081055
    7. ':return' → logprob: -4.0773115158081055
    8. 'avait' → logprob: -4.3273115158081055
    9. ' returns' → logprob: -4.5773115158081055
    10. 'def' → logprob: -4.8273115158081055

Token 590: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.03302457556128502
    2. 'ifiée' → logprob: -3.908024549484253
    3. 'if' → logprob: -4.658024787902832
    4. 'f' → logprob: -7.283024787902832
    5. 'ifié' → logprob: -7.533024787902832
    6. '   ' → logprob: -7.658024787902832
    7. 'ret' → logprob: -8.408024787902832
    8. 'ifi' → logprob: -8.908024787902832
    9. 'ified' → logprob: -9.283024787902832
    10. '#' → logprob: -9.408024787902832

Token 591: ' les' (ID: 1341)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.13122616708278656
    2. 'True' → logprob: -2.131226062774658
    3. ' True' → logprob: -5.631226062774658
    4. ' ret' → logprob: -7.756226062774658
    5. '   ' → logprob: -8.631226539611816
    6. '```' → logprob: -9.881226539611816
    7. '(ret' → logprob: -11.506226539611816
    8. '=True' → logprob: -11.756226539611816
    9. 'true' → logprob: -12.256226539611816
    10. '	ret' → logprob: -12.381226539611816

Token 592: ' deux' (ID: 10301)
  Prédit: 'condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'condition' → logprob: -0.3957579731941223
    2. 'conditions' → logprob: -1.1457579135894775
    3. 'cond' → logprob: -5.145758152008057
    4. ' conditions' → logprob: -6.145758152008057
    5. ' condition' → logprob: -7.770758152008057
    6. '条件' → logprob: -8.895757675170898
    7. 'crit' → logprob: -9.020757675170898
    8. 'criteria' → logprob: -9.020757675170898
    9. 'conds' → logprob: -10.895757675170898
    10. 'criter' → logprob: -11.145757675170898

Token 593: ' conditions' (ID: 6409)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6766815781593323
    2. 'return' → logprob: -1.3016815185546875
    3. '=' → logprob: -2.5516815185546875
    4. ' return' → logprob: -3.4266815185546875
    5. '<|end|>' → logprob: -3.8016815185546875
    6. ' =' → logprob: -3.9266815185546875
    7. ':return' → logprob: -4.0516815185546875
    8. ')' → logprob: -4.0516815185546875
    9. '=True' → logprob: -4.8016815185546875
    10. '    
' → logprob: -5.8016815185546875

Token 594: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 595: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08152119070291519
    2. 'return' → logprob: -2.8315212726593018
    3. ' return' → logprob: -4.706521034240723
    4. '
' → logprob: -5.581521034240723
    5. '    
' → logprob: -5.581521034240723
    6. '<|end|>' → logprob: -6.581521034240723
    7. '	return' → logprob: -7.206521034240723
    8. '```' → logprob: -8.206521034240723
    9. '  
' → logprob: -9.206521034240723
    10. ':return' → logprob: -9.206521034240723

Token 596: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008913540281355381
    2. 'return' (adapté à ' return') → logprob: -4.758913516998291
    3. ' return' → logprob: -8.63391399383545
    4. '	return' → logprob: -9.13391399383545
    5. '```' → logprob: -12.50891399383545
    6. '    
' → logprob: -12.63391399383545
    7. '
' → logprob: -13.00891399383545
    8. '       ' → logprob: -13.25891399383545
    9. ':return' → logprob: -13.88391399383545
    10. '   ' → logprob: -15.75891399383545

Token 597: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.07888989895582199
    2. ' ret' → logprob: -2.578889846801758
    3. '(ret' → logprob: -16.578889846801758
    4. '	ret' → logprob: -17.453889846801758
    5. '   ' → logprob: -18.203889846801758
    6. '$ret' → logprob: -19.703889846801758
    7. 'True' → logprob: -20.453889846801758
    8. '_ret' → logprob: -21.078889846801758
    9. 'return' → logprob: -21.453889846801758
    10. ' ' → logprob: -21.953889846801758

Token 598: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 599: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 600: ' Retour' (ID: 146830)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.030582575127482414
    2. 'return' → logprob: -3.5305826663970947
    3. ' ret' → logprob: -8.405582427978516
    4. '   ' → logprob: -8.405582427978516
    5. 'def' → logprob: -9.030582427978516
    6. 'True' → logprob: -9.155582427978516
    7. 'check' → logprob: -10.280582427978516
    8. 'False' → logprob: -10.905582427978516
    9. '```' → logprob: -10.905582427978516
    10. '(ret' → logprob: -11.030582427978516

Token 601: 'ne' (ID: 611)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 602: ' True' (ID: 6432)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.0052342405542731285
    2. ' ret' → logprob: -5.255234241485596
    3. '   ' → logprob: -15.255233764648438
    4. '(ret' → logprob: -16.130233764648438
    5. '	ret' → logprob: -16.255233764648438
    6. 'False' → logprob: -17.505233764648438
    7. 'True' → logprob: -18.005233764648438
    8. 'return' → logprob: -18.130233764648438
    9. ' ' → logprob: -18.380233764648438
    10. '$ret' → logprob: -18.755233764648438

Token 603: ' si' (ID: 1784)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 604: ' au' (ID: 2791)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.01593524031341076
    2. 'check' → logprob: -4.89093542098999
    3. 'True' → logprob: -5.64093542098999
    4. ' ret' → logprob: -5.89093542098999
    5. 'any' → logprob: -6.76593542098999
    6. ' check' → logprob: -8.265934944152832
    7. ' True' → logprob: -8.265934944152832
    8. 'possible' → logprob: -9.015934944152832
    9. ' any' → logprob: -9.265934944152832
    10. '   ' → logprob: -10.265934944152832

Token 605: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.20011427998542786
    2. ' moins' → logprob: -2.7001142501831055
    3. 'plus' → logprob: -3.2001142501831055
    4. '```' → logprob: -3.3251142501831055
    5. 'max' → logprob: -4.4501142501831055
    6. 'possible' → logprob: -4.9501142501831055
    7. 'mo' → logprob: -5.8251142501831055
    8. ' ' → logprob: -6.0751142501831055
    9. '   ' → logprob: -6.0751142501831055
    10. 'maximum' → logprob: -6.7001142501831055

Token 606: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.08705015480518341
    2. 'True' → logprob: -2.837050199508667
    3. '```' → logprob: -4.712049961090088
    4. '   ' → logprob: -5.212049961090088
    5. ' une' → logprob: -5.587049961090088
    6. 'un' → logprob: -5.587049961090088
    7. 'l' → logprob: -6.712049961090088
    8. ' True' → logprob: -7.712049961090088
    9. ''une' → logprob: -8.587050437927246
    10. 'quel' → logprob: -8.712050437927246

Token 607: ' configuration' (ID: 12282)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.18049292266368866
    2. 'True' → logprob: -2.555492877960205
    3. ' valid' → logprob: -3.430492877960205
    4. ' configuration' → logprob: -4.055492877960205
    5. 'configuration' → logprob: -4.930492877960205
    6. 'valid' → logprob: -5.055492877960205
    7. ' divisible' → logprob: -5.055492877960205
    8. ' des' → logprob: -6.305492877960205
    9. 'élé' → logprob: -6.430492877960205
    10. 'possible' → logprob: -6.555492877960205

Token 608: ' est' (ID: 893)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.233067512512207
    2. 'possible' → logprob: -1.233067512512207
    3. 'valid' → logprob: -1.733067512512207
    4. ' possible' → logprob: -2.858067512512207
    5. ' True' → logprob: -2.983067512512207
    6. '   ' → logprob: -3.608067512512207
    7. '_possible' → logprob: -3.608067512512207
    8. 'est' → logprob: -3.733067512512207
    9. ' valid' → logprob: -3.733067512512207
    10. '```' → logprob: -4.733067512512207

Token 609: ' valide' (ID: 137323)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.14311298727989197
    2. 'valid' → logprob: -2.143112897872925
    3. 'True' → logprob: -5.268113136291504
    4. 'val' → logprob: -5.393113136291504
    5. '```' → logprob: -6.143113136291504
    6. 'v' → logprob: -7.018113136291504
    7. 'acceptable' → logprob: -7.518113136291504
    8. 'Possible' → logprob: -7.768113136291504
    9. 'atte' → logprob: -7.893113136291504
    10. 'poss' → logprob: -7.893113136291504

Token 610: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 611: ' sinon' (ID: 52915)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 612: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0015024791937321424
    2. ' False' → logprob: -6.501502513885498
    3. '   ' → logprob: -16.001502990722656
    4. 'false' → logprob: -18.376502990722656
    5. 'ret' → logprob: -18.751502990722656
    6. 'True' → logprob: -19.376502990722656
    7. '(False' → logprob: -19.501502990722656
    8. ' ' → logprob: -20.876502990722656
    9. '_false' → logprob: -21.001502990722656
    10. 'F' → logprob: -21.626502990722656

Token 613: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 614: 'M' (ID: 44)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5893446803092957
    2. '
' → logprob: -1.7143447399139404
    3. 'd' → logprob: -2.0893447399139404
    4. '#' → logprob: -2.2143447399139404
    5. '  
' → logprob: -5.339344501495361
    6. '\' → logprob: -5.839344501495361
    7. ' 
' → logprob: -5.839344501495361
    8. '\n' → logprob: -5.839344501495361
    9. '<|end|>' → logprob: -6.089344501495361
    10. '

' → logprob: -6.339344501495361

Token 615: ' =' (ID: 314)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.026279741898179054
    2. 'AX' → logprob: -4.151279926300049
    3. 'def' → logprob: -5.026279926300049
    4. 'ain' → logprob: -7.401279926300049
    5. '#' → logprob: -7.776279926300049
    6. 'OD' → logprob: -8.02627944946289
    7. 'A' → logprob: -8.02627944946289
    8. 'od' → logprob: -8.27627944946289
    9. '_ax' → logprob: -8.65127944946289
    10. 'AXB' → logprob: -8.77627944946289

Token 616: ' sum' (ID: 4215)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.40530890226364136
    2. ' max' → logprob: -2.030308961868286
    3. '10' → logprob: -2.030308961868286
    4. 'sum' → logprob: -3.030308961868286
    5. ' ' → logprob: -4.655308723449707
    6. ' sum' → logprob: -5.155308723449707
    7. 'min' → logprob: -6.030308723449707
    8. 'int' → logprob: -6.280308723449707
    9. '1' → logprob: -7.405308723449707
    10. '2' → logprob: -7.780308723449707

Token 617: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.013031400740146637
    2. 'A' → logprob: -4.888031482696533
    3. '(' → logprob: -5.263031482696533
    4. '(abs' → logprob: -9.638031005859375
    5. '((' → logprob: -10.138031005859375
    6. '([' → logprob: -10.888031005859375
    7. '(range' → logprob: -10.888031005859375
    8. '(a' → logprob: -11.138031005859375
    9. '(max' → logprob: -11.263031005859375
    10. '(K' → logprob: -11.388031005859375

Token 618: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008441763930022717
    2. ')+' → logprob: -5.133441925048828
    3. ')
' → logprob: -6.133441925048828
    4. '+' → logprob: -9.383441925048828
    5. ')

' → logprob: -9.758441925048828
    6. ')#' → logprob: -9.883441925048828
    7. ' )' → logprob: -10.008441925048828
    8. ')-' → logprob: -10.258441925048828
    9. '[' → logprob: -10.758441925048828
    10. ')
' → logprob: -11.508441925048828

Token 619: ' ' (ID: 220)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11073287576436996
    2. 'for' → logprob: -2.8607327938079834
    3. '#' → logprob: -4.4857330322265625
    4. '
' → logprob: -4.6107330322265625
    5. ' +' → logprob: -4.7357330322265625
    6. ' for' → logprob: -5.7357330322265625
    7. 'def' → logprob: -5.7357330322265625
    8. '<|end|>' → logprob: -5.7357330322265625
    9. '+
' → logprob: -6.3607330322265625
    10. 'import' → logprob: -6.8607330322265625

Token 620: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6945281624794006
    2. '+' → logprob: -0.8195281624794006
    3. '
' → logprob: -3.819528102874756
    4. '#' → logprob: -4.569528102874756
    5. '+
' → logprob: -4.569528102874756
    6. ' for' → logprob: -4.819528102874756
    7. '//' → logprob: -6.194528102874756
    8. '<|end|>' → logprob: -6.319528102874756
    9. 'def' → logprob: -6.569528102874756
    10. 'max' → logprob: -7.444528102874756

Token 621: ' Som' (ID: 12116)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.1215561032295227
    2. ' max' → logprob: -2.371556043624878
    3. 'M' → logprob: -4.996556282043457
    4. 'abs' → logprob: -5.121556282043457
    5. 'sum' → logprob: -5.621556282043457
    6. ' M' → logprob: -6.371556282043457
    7. 'min' → logprob: -7.121556282043457
    8. ' abs' → logprob: -7.496556282043457
    9. ' sum' → logprob: -7.621556282043457
    10. ' ' → logprob: -8.246556282043457

Token 622: 'me' (ID: 1047)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4383464753627777
    2. '=' → logprob: -1.9383465051651
    3. 'me' → logprob: -2.9383463859558105
    4. ')' → logprob: -2.9383463859558105
    5. '=sum' → logprob: -3.1883463859558105
    6. '#' → logprob: -3.8133463859558105
    7. ' =' → logprob: -4.4383463859558105
    8. 'M' → logprob: -4.6883463859558105
    9. 'a' → logprob: -5.5633463859558105
    10. 'def' → logprob: -6.1883463859558105

Token 623: ' totale' (ID: 52898)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.5670890212059021
    2. 'A' → logprob: -0.9420890212059021
    3. '_' → logprob: -3.817089080810547
    4. '_A' → logprob: -5.692089080810547
    5. '(' → logprob: -6.067089080810547
    6. '(
' → logprob: -6.192089080810547
    7. 'M' → logprob: -6.192089080810547
    8. ' of' → logprob: -6.317089080810547
    9. 'of' → logprob: -6.817089080810547
    10. '   ' → logprob: -6.817089080810547

Token 624: ' des' (ID: 731)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09301543980836868
    2. 'A' → logprob: -3.343015432357788
    3. 'M' → logprob: -4.593015670776367
    4. '+' → logprob: -4.593015670776367
    5. '#' → logprob: -4.968015670776367
    6. '
' → logprob: -5.093015670776367
    7. ' for' → logprob: -5.218015670776367
    8. 'while' → logprob: -5.343015670776367
    9. 'max' → logprob: -5.968015670776367
    10. 'from' → logprob: -6.218015670776367

Token 625: ' éléments' (ID: 57375)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.4855663721391466e-05
    2. ' A' → logprob: -11.125015258789062
    3. ' ' → logprob: -18.875015258789062
    4. 'a' → logprob: -19.875015258789062
    5. '[A' → logprob: -20.250015258789062
    6. 'abs' → logprob: -21.000015258789062
    7. '	A' → logprob: -21.125015258789062
    8. '(A' → logprob: -21.250015258789062
    9. 'elements' → logprob: -21.500015258789062
    10. '
' → logprob: -21.625015258789062

Token 626: ' du' (ID: 1462)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.532669186592102
    2. '+' → logprob: -1.407669186592102
    3. '#' → logprob: -2.1576690673828125
    4. ' for' → logprob: -3.7826690673828125
    5. 'max' → logprob: -4.5326690673828125
    6. ' +' → logprob: -6.1576690673828125
    7. '
' → logprob: -6.2826690673828125
    8. 'def' → logprob: -6.5326690673828125
    9. 'M' → logprob: -6.5326690673828125
    10. 'from' → logprob: -6.6576690673828125

Token 627: ' tableau' (ID: 67053)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -7.743758760625497e-05
    2. ' A' → logprob: -9.500077247619629
    3. 'a' → logprob: -13.125077247619629
    4. 'r' → logprob: -16.000078201293945
    5. ' ' → logprob: -16.375078201293945
    6. '#' → logprob: -16.625078201293945
    7. 'M' → logprob: -16.750078201293945
    8. '```' → logprob: -17.750078201293945
    9. '
' → logprob: -18.000078201293945
    10. ')' → logprob: -18.125078201293945

Token 628: ' A' (ID: 355)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10965970158576965
    2. ' for' → logprob: -2.9846596717834473
    3. 'def' → logprob: -3.9846596717834473
    4. 'd' → logprob: -4.609659671783447
    5. 'from' → logprob: -5.234659671783447
    6. 'import' → logprob: -5.359659671783447
    7. '#' → logprob: -5.359659671783447
    8. 'div' → logprob: -5.734659671783447
    9. 'max' → logprob: -6.109659671783447
    10. '+' → logprob: -6.484659671783447

Token 629: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018963918089866638
    2. 'def' → logprob: -5.143963813781738
    3. ' for' → logprob: -5.393963813781738
    4. 'd' → logprob: -5.643963813781738
    5. 'import' → logprob: -6.268963813781738
    6. 'ans' → logprob: -6.893963813781738
    7. '
' → logprob: -7.268963813781738
    8. 'from' → logprob: -7.393963813781738
    9. 'max' → logprob: -8.768963813781738
    10. '#' → logprob: -8.768963813781738

Token 630: 'util' (ID: 2056)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3695882558822632
    2. '
' → logprob: -2.3695883750915527
    3. 'for' → logprob: -2.3695883750915527
    4. '#' → logprob: -2.8695883750915527
    5. ')
' → logprob: -3.2445883750915527
    6. 'def' → logprob: -5.119588375091553
    7. 'max' → logprob: -5.994588375091553
    8. '
' → logprob: -5.994588375091553
    9. 'M' → logprob: -6.244588375091553
    10. 'while' → logprob: -6.244588375091553

Token 631: 'isée' (ID: 59331)
  Prédit: 'isée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isée' → logprob: -0.7208399772644043
    2. 'isant' → logprob: -1.0958399772644043
    3. 'isé' → logprob: -2.5958399772644043
    4. 'isés' → logprob: -2.7208399772644043
    5. 'ée' → logprob: -3.9708399772644043
    6. 'ise' → logprob: -5.470839977264404
    7. '#' → logprob: -5.720839977264404
    8. 'és' → logprob: -5.845839977264404
    9. 'isation' → logprob: -6.220839977264404
    10. 'ant' → logprob: -6.220839977264404

Token 632: ' pour' (ID: 1930)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5109962821006775
    2. ')' → logprob: -1.3859963417053223
    3. 'for' → logprob: -2.3859963417053223
    4. '#' → logprob: -3.6359963417053223
    5. ' pour' → logprob: -5.010996341705322
    6. '
' → logprob: -5.260996341705322
    7. ' +' → logprob: -5.385996341705322
    8. ' for' → logprob: -5.635996341705322
    9. 'pour' → logprob: -6.260996341705322
    10. 'def' → logprob: -6.635996341705322

Token 633: ' déterminer' (ID: 122024)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.15726244449615479
    2. 'max' → logprob: -2.1572623252868652
    3. '
' → logprob: -4.907262325286865
    4. 'for' → logprob: -4.907262325286865
    5. 'possible' → logprob: -5.407262325286865
    6. '#' → logprob: -5.657262325286865
    7. 'i' → logprob: -6.407262325286865
    8. 'm' → logprob: -6.657262325286865
    9. 'def' → logprob: -7.157262325286865
    10. ')' → logprob: -7.657262325286865

Token 634: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4167615473270416
    2. ' M' → logprob: -2.666761636734009
    3. ' possible' → logprob: -2.916761636734009
    4. ' ' → logprob: -3.666761636734009
    5. 'max' → logprob: -3.666761636734009
    6. ')' → logprob: -4.04176139831543
    7. 'la' → logprob: -4.16676139831543
    8. ' the' → logprob: -4.29176139831543
    9. 'le' → logprob: -4.41676139831543
    10. ' l' → logprob: -4.54176139831543

Token 635: ' div' (ID: 4223)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5537720918655396
    2. 'div' → logprob: -1.8037720918655396
    3. 'def' → logprob: -2.42877197265625
    4. 'possible' → logprob: -2.92877197265625
    5. 'max' → logprob: -3.55377197265625
    6. 'import' → logprob: -3.67877197265625
    7. 'd' → logprob: -3.80377197265625
    8. 'from' → logprob: -3.92877197265625
    9. 'for' → logprob: -5.17877197265625
    10. 'c' → logprob: -5.42877197265625

Token 636: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.09315837919712067
    2. 'is' → logprob: -2.593158483505249
    3. 'iseur' → logprob: -5.46815824508667
    4. '```' → logprob: -6.21815824508667
    5. '   ' → logprob: -6.71815824508667
    6. 's' → logprob: -7.34315824508667
    7. '``' → logprob: -7.59315824508667
    8. '#' → logprob: -7.84315824508667
    9. '=' → logprob: -7.96815824508667
    10. '`' → logprob: -8.093158721923828

Token 637: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.004826799500733614
    2. 'ur' → logprob: -6.00482702255249
    3. 'rs' → logprob: -6.37982702255249
    4. 's' → logprob: -8.004826545715332
    5. 'eurs' → logprob: -8.504826545715332
    6. 'urse' → logprob: -10.629826545715332
    7. 'u' → logprob: -10.629826545715332
    8. 'ors' → logprob: -10.879826545715332
    9. 'r' → logprob: -12.129826545715332
    10. 'd' → logprob: -12.129826545715332

Token 638: ' possibles' (ID: 97753)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10749770700931549
    2. '+' → logprob: -2.8574976921081543
    3. ')
' → logprob: -3.3574976921081543
    4. 'for' → logprob: -6.107497692108154
    5. ')+' → logprob: -6.607497692108154
    6. '
' → logprob: -6.732497692108154
    7. ' +' → logprob: -6.857497692108154
    8. ')

' → logprob: -6.857497692108154
    9. 'def' → logprob: -7.232497692108154
    10. '#' → logprob: -7.357497692108154

Token 639: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5127924680709839
    2. '
' → logprob: -1.2627924680709839
    3. 'for' → logprob: -3.2627925872802734
    4. 'def' → logprob: -3.6377925872802734
    5. '

' → logprob: -4.512792587280273
    6. '#' → logprob: -4.512792587280273
    7. '+' → logprob: -4.637792587280273
    8. ')
' → logprob: -5.262792587280273
    9. ')

' → logprob: -5.637792587280273
    10. 'd' → logprob: -6.137792587280273

Token 640: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11553817987442017
    2. 'from' → logprob: -3.3655381202697754
    3. 'def' → logprob: -3.4905381202697754
    4. 'd' → logprob: -3.9905381202697754
    5. 'import' → logprob: -4.365538120269775
    6. 'div' → logprob: -4.740538120269775
    7. 'ans' → logprob: -6.615538120269775
    8. 'max' → logprob: -7.115538120269775
    9. '#' → logprob: -7.615538120269775
    10. 'possible' → logprob: -7.865538120269775

Token 641: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10032323002815247
    2. '=' → logprob: -2.35032320022583
    3. ',' → logprob: -9.225323677062988
    4. ' ' → logprob: -11.725323677062988
    5. ' =
' → logprob: -12.850323677062988
    6. '_' → logprob: -12.975323677062988
    7. ' ' → logprob: -14.225323677062988
    8. ' ,' → logprob: -14.225323677062988
    9. '  ' → logprob: -14.475323677062988
    10. 's' → logprob: -14.475323677062988

Token 642: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.28987929224967957
    2. '0' → logprob: -1.539879322052002
    3. ' ' → logprob: -3.539879322052002
    4. '-' → logprob: -5.039879322052002
    5. 'max' → logprob: -6.789879322052002
    6. 'M' → logprob: -8.539878845214844
    7. ' max' → logprob: -9.414878845214844
    8. ' M' → logprob: -9.539878845214844
    9. 'sum' → logprob: -9.539878845214844
    10. '[]
' → logprob: -9.539878845214844

Token 643: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010205652564764023
    2. '0' → logprob: -4.7602057456970215
    3. '-' → logprob: -6.5102057456970215
    4. 'max' → logprob: -9.510205268859863
    5. '2' → logprob: -11.385205268859863
    6. ' ' → logprob: -11.760205268859863
    7. 'M' → logprob: -12.635205268859863
    8. '[]' → logprob: -13.385205268859863
    9. '[]
' → logprob: -13.885205268859863
    10. '[' → logprob: -14.135205268859863

Token 644: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05342451483011246
    2. ' for' → logprob: -3.303424596786499
    3. '
' → logprob: -4.30342435836792
    4. 'd' → logprob: -7.55342435836792
    5. 'import' → logprob: -8.178424835205078
    6. ' 
' → logprob: -8.428424835205078
    7. 'from' → logprob: -8.928424835205078
    8. 'i' → logprob: -9.053424835205078
    9. '  
' → logprob: -9.178424835205078
    10. '<|end|>' → logprob: -9.803424835205078

Token 645: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.021074999123811722
    2. '
' → logprob: -4.5210747718811035
    3. ' for' → logprob: -4.7710747718811035
    4. 'd' → logprob: -6.7710747718811035
    5. '  
' → logprob: -9.521075248718262
    6. 'def' → logprob: -9.646075248718262
    7. ' 
' → logprob: -9.771075248718262
    8. 'import' → logprob: -10.271075248718262
    9. '#' → logprob: -10.771075248718262
    10. ',' → logprob: -10.771075248718262

Token 646: ' Variable' (ID: 36336)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.43650737404823303
    2. 'for' → logprob: -1.1865073442459106
    3. 'd' → logprob: -4.436507225036621
    4. 'def' → logprob: -5.061507225036621
    5. ' for' → logprob: -5.186507225036621
    6. 'max' → logprob: -5.311507225036621
    7. ' ' → logprob: -5.561507225036621
    8. 'import' → logprob: -5.686507225036621
    9. 'from' → logprob: -5.686507225036621
    10. 'ans' → logprob: -6.061507225036621

Token 647: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1296810507774353
    2. ' =' → logprob: -2.25468111038208
    3. 'for' → logprob: -4.37968111038208
    4. '+=' → logprob: -6.25468111038208
    5. ' for' → logprob: -6.75468111038208
    6. ' +=' → logprob: -8.379680633544922
    7. 'max' → logprob: -8.629680633544922
    8. '=max' → logprob: -8.754680633544922
    9. '<|end|>' → logprob: -9.004680633544922
    10. ',' → logprob: -9.879680633544922

Token 648: ' stock' (ID: 6546)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.29650259017944336
    2. '0' → logprob: -2.0465025901794434
    3. 'max' → logprob: -2.7965025901794434
    4. ' ' → logprob: -3.2965025901794434
    5. 'M' → logprob: -4.296502590179443
    6. 'ans' → logprob: -4.671502590179443
    7. ' max' → logprob: -5.921502590179443
    8. ' M' → logprob: -6.671502590179443
    9. 'd' → logprob: -7.421502590179443
    10. '-' → logprob: -7.421502590179443

Token 649: 'er' (ID: 259)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03495575487613678
    2. ' =' → logprob: -3.7849557399749756
    3. 'ans' → logprob: -5.409955978393555
    4. '0' → logprob: -5.909955978393555
    5. ' ans' → logprob: -6.534955978393555
    6. 'le' → logprob: -7.784955978393555
    7. 'e' → logprob: -8.034955978393555
    8. '+=' → logprob: -8.034955978393555
    9. ' le' → logprob: -8.159955978393555
    10. '(ans' → logprob: -8.159955978393555

Token 650: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11006098240613937
    2. '1' → logprob: -2.860060930252075
    3. 'ans' → logprob: -3.485060930252075
    4. 'M' → logprob: -4.610061168670654
    5. ' ' → logprob: -5.360061168670654
    6. 'max' → logprob: -7.235061168670654
    7. 'd' → logprob: -7.860061168670654
    8. ' M' → logprob: -8.360060691833496
    9. '-' → logprob: -8.610060691833496
    10. ' ans' → logprob: -10.110060691833496

Token 651: ' plus' (ID: 2932)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.49541211128234863
    2. '0' → logprob: -1.2454121112823486
    3. 'ans' → logprob: -2.7454121112823486
    4. '1' → logprob: -4.1204118728637695
    5. 'M' → logprob: -4.7454118728637695
    6. 'None' → logprob: -5.7454118728637695
    7. 'best' → logprob: -6.1204118728637695
    8. '_' → logprob: -6.7454118728637695
    9. '=' → logprob: -6.8704118728637695
    10. 'd' → logprob: -7.2454118728637695

Token 652: ' grande' (ID: 10094)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.19202031195163727
    2. 'gr' → logprob: -1.817020297050476
    3. 'import' → logprob: -5.067020416259766
    4. ' grand' → logprob: -6.067020416259766
    5. 'pet' → logprob: -7.067020416259766
    6. '```' → logprob: -7.192020416259766
    7. ' grande' → logprob: -7.692020416259766
    8. 'large' → logprob: -8.317020416259766
    9. ' ' → logprob: -8.817020416259766
    10. '_gr' → logprob: -8.942020416259766

Token 653: ' valeur' (ID: 41664)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.05098653957247734
    2. 'ans' → logprob: -3.5509865283966064
    3. 'div' → logprob: -3.9259865283966064
    4. ' d' → logprob: -7.4259867668151855
    5. 'M' → logprob: -8.550986289978027
    6. ' divisor' → logprob: -9.300986289978027
    7. ' ans' → logprob: -9.550986289978027
    8. 'possible' → logprob: -9.800986289978027
    9. 'answer' → logprob: -10.175986289978027
    10. 'factor' → logprob: -10.300986289978027

Token 654: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.048040445894002914
    2. 'd' → logprob: -3.7980403900146484
    3. ' for' → logprob: -4.923040390014648
    4. 'ans' → logprob: -5.298040390014648
    5. 'M' → logprob: -5.423040390014648
    6. '=' → logprob: -5.548040390014648
    7. 'div' → logprob: -6.423040390014648
    8. 'i' → logprob: -6.923040390014648
    9. ' =' → logprob: -8.173040390014648
    10. 'possible' → logprob: -8.423040390014648

Token 655: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0013267839094623923
    2. 'ans' → logprob: -6.876326560974121
    3. 'M' → logprob: -8.626326560974121
    4. ' d' → logprob: -9.501326560974121
    5. 'ret' → logprob: -11.251326560974121
    6. '0' → logprob: -11.501326560974121
    7. 'div' → logprob: -12.001326560974121
    8. '```' → logprob: -13.001326560974121
    9. '1' → logprob: -13.251326560974121
    10. ' ans' → logprob: -13.376326560974121

Token 656: ' trouv' (ID: 40254)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.036761198192834854
    2. ' for' → logprob: -3.9117612838745117
    3. 'd' → logprob: -4.411761283874512
    4. '+' → logprob: -6.411761283874512
    5. '
' → logprob: -7.536761283874512
    6. 'i' → logprob: -8.161761283874512
    7. 'div' → logprob: -8.286761283874512
    8. '+
' → logprob: -8.536761283874512
    9. '.' → logprob: -8.661761283874512
    10. '1' → logprob: -9.161761283874512

Token 657: 'ée' (ID: 2894)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.21208587288856506
    2. 'érée' → logprob: -2.8370859622955322
    3. 'ie' → logprob: -3.5870859622955322
    4. 'enue' → logprob: -4.087085723876953
    5. 'u' → logprob: -4.212085723876953
    6. 'ière' → logprob: -4.212085723876953
    7. 'int' → logprob: -4.712085723876953
    8. 'ée' → logprob: -4.837085723876953
    9. 'é' → logprob: -5.212085723876953
    10. 'éré' → logprob: -5.587085723876953

Token 658: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005452881450764835
    2. 'import' → logprob: -8.375545501708984
    3. 'd' → logprob: -8.750545501708984
    4. 'from' → logprob: -9.625545501708984
    5. 'def' → logprob: -10.000545501708984
    6. ' for' → logprob: -10.500545501708984
    7. 'i' → logprob: -11.125545501708984
    8. '1' → logprob: -14.250545501708984
    9. '#' → logprob: -14.625545501708984
    10. '```' → logprob: -14.625545501708984

Token 659: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0021932062227278948
    2. 'import' → logprob: -6.752192974090576
    3. 'def' → logprob: -7.502192974090576
    4. 'from' → logprob: -7.877192974090576
    5. 'i' → logprob: -10.377193450927734
    6. 'd' → logprob: -10.502193450927734
    7. ' for' → logprob: -10.502193450927734
    8. '```' → logprob: -12.377193450927734
    9. '#' → logprob: -14.752193450927734
    10. '
' → logprob: -15.377193450927734

Token 660: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03733603656291962
    2. 'import' → logprob: -4.2873358726501465
    3. 'from' → logprob: -4.4123358726501465
    4. 'def' → logprob: -4.5373358726501465
    5. 'i' → logprob: -9.912336349487305
    6. 'd' → logprob: -11.662336349487305
    7. '
' → logprob: -12.037336349487305
    8. ' for' → logprob: -12.037336349487305
    9. '#' → logprob: -12.412336349487305
    10. '```' → logprob: -13.662336349487305

Token 661: ' souhaite' (ID: 68897)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002306673675775528
    2. 'def' → logprob: -6.8773064613342285
    3. 'from' → logprob: -7.3773064613342285
    4. 'import' → logprob: -7.5023064613342285
    5. '=' → logprob: -9.627306938171387
    6. ' for' → logprob: -10.627306938171387
    7. '```' → logprob: -13.502306938171387
    8. '#' → logprob: -13.627306938171387
    9. ' =' → logprob: -13.752306938171387
    10. '+=' → logprob: -14.002306938171387

Token 662: ' trouver' (ID: 23195)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006861062138341367
    2. 'def' → logprob: -8.375685691833496
    3. 'd' → logprob: -8.500685691833496
    4. ' for' → logprob: -9.375685691833496
    5. '#' → logprob: -9.875685691833496
    6. 'from' → logprob: -10.000685691833496
    7. 'range' → logprob: -10.750685691833496
    8. 'import' → logprob: -10.875685691833496
    9. 'div' → logprob: -11.750685691833496
    10. 'i' → logprob: -11.875685691833496

Token 663: ' le' (ID: 505)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06732839345932007
    2. 'd' → logprob: -3.192328453063965
    3. 'i' → logprob: -3.817328453063965
    4. ' for' → logprob: -6.817328453063965
    5. 'from' → logprob: -8.192328453063965
    6. '#' → logprob: -8.692328453063965
    7. 'div' → logprob: -8.692328453063965
    8. ' i' → logprob: -9.317328453063965
    9. 'M' → logprob: -9.942328453063965
    10. '1' → logprob: -10.192328453063965

Token 664: ' plus' (ID: 2932)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -1.0700352191925049
    2. 'for' → logprob: -1.1950352191925049
    3. 'plus' → logprob: -1.3200352191925049
    4. 'd' → logprob: -3.320035219192505
    5. 'def' → logprob: -3.820035219192505
    6. 'me' → logprob: -4.445034980773926
    7. 'M' → logprob: -5.445034980773926
    8. 'fact' → logprob: -6.320034980773926
    9. 'possible' → logprob: -6.570034980773926
    10. 'max' → logprob: -6.570034980773926

Token 665: ' grand' (ID: 6363)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.002451992128044367
    2. ' grand' → logprob: -6.5024518966674805
    3. '```' → logprob: -7.8774518966674805
    4. 'd' → logprob: -8.37745189666748
    5. 'div' → logprob: -9.00245189666748
    6. 'gr' → logprob: -9.25245189666748
    7. 'Grand' → logprob: -10.00245189666748
    8. 'for' → logprob: -10.75245189666748
    9. 'g' → logprob: -11.25245189666748
    10. '#' → logprob: -11.37745189666748

Token 666: ' div' (ID: 4223)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.37503889203071594
    2. 'div' → logprob: -1.2500388622283936
    3. 'i' → logprob: -4.250039100646973
    4. 'for' → logprob: -4.500039100646973
    5. ' d' → logprob: -8.875039100646973
    6. ' for' → logprob: -8.875039100646973
    7. 'def' → logprob: -9.000039100646973
    8. ' i' → logprob: -9.000039100646973
    9. '```' → logprob: -9.125039100646973
    10. ' div' → logprob: -9.250039100646973

Token 667: 'iseur' (ID: 108637)
  Prédit: 'iseur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iseur' → logprob: -0.0003502434410620481
    2. 'ise' → logprob: -8.000349998474121
    3. 'iser' → logprob: -12.250349998474121
    4. 'isateur' → logprob: -12.375349998474121
    5. '```' → logprob: -13.125349998474121
    6. 'isor' → logprob: -13.625349998474121
    7. 'isseur' → logprob: -14.250349998474121
    8. '#' → logprob: -14.250349998474121
    9. 'isible' → logprob: -15.250349998474121
    10. 'isé' → logprob: -15.625349998474121

Token 668: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.042538341134786606
    2. 'd' → logprob: -3.4175384044647217
    3. 'of' → logprob: -5.667538166046143
    4. 'from' → logprob: -5.792538166046143
    5. ' of' → logprob: -6.792538166046143
    6. ' for' → logprob: -7.667538166046143
    7. 'i' → logprob: -7.667538166046143
    8. 'M' → logprob: -9.4175386428833
    9. 'def' → logprob: -9.9175386428833
    10. 'x' → logprob: -10.0425386428833

Token 669: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.00014072739577386528
    2. ' M' → logprob: -8.875141143798828
    3. 'sum' → logprob: -14.375141143798828
    4. 'm' → logprob: -16.375141143798828
    5. 'range' → logprob: -16.500141143798828
    6. 's' → logprob: -17.375141143798828
    7. '```' → logprob: -17.750141143798828
    8. '(M' → logprob: -18.500141143798828
    9. ' sum' → logprob: -18.625141143798828
    10. 'ans' → logprob: -18.625141143798828

Token 670: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0016172155737876892
    2. 'def' → logprob: -7.751617431640625
    3. ' for' → logprob: -7.876617431640625
    4. 'i' → logprob: -8.251617431640625
    5. 'd' → logprob: -8.376617431640625
    6. 'import' → logprob: -8.626617431640625
    7. 'from' → logprob: -9.376617431640625
    8. '
' → logprob: -11.001617431640625
    9. 'while' → logprob: -11.001617431640625
    10. '#' → logprob: -11.751617431640625

Token 671: ' lequel' (ID: 55154)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.40340641140937805
    2. 'd' → logprob: -1.7784063816070557
    3. 'which' → logprob: -2.2784063816070557
    4. '_' → logprob: -3.9034063816070557
    5. ' i' → logprob: -4.028406620025635
    6. ' which' → logprob: -5.028406620025635
    7. ' lequel' → logprob: -5.278406620025635
    8. 'div' → logprob: -5.778406620025635
    9. ' laquelle' → logprob: -6.653406620025635
    10. 'l' → logprob: -6.903406620025635

Token 672: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.011472645215690136
    2. 'for' → logprob: -5.261472702026367
    3. 'M' → logprob: -5.386472702026367
    4. 'd' → logprob: -6.761472702026367
    5. 'def' → logprob: -8.636472702026367
    6. ' check' → logprob: -9.136472702026367
    7. 'i' → logprob: -9.386472702026367
    8. 'ans' → logprob: -10.136472702026367
    9. 'all' → logprob: -10.761472702026367
    10. 'K' → logprob: -10.886472702026367

Token 673: '(d' (ID: 2572)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.233883798122406
    2. '(' → logprob: -2.108883857727051
    3. '(d' → logprob: -2.983883857727051
    4. '(lambda' → logprob: -3.733883857727051
    5. '(ans' → logprob: -4.983883857727051
    6. '(i' → logprob: -5.483883857727051
    7. '(
' → logprob: -7.233883857727051
    8. '(len' → logprob: -8.35888385772705
    9. '(m' → logprob: -9.10888385772705
    10. ' (' → logprob: -9.23388385772705

Token 674: ')' (ID: 8)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.09027837961912155
    2. '):' → logprob: -2.715278387069702
    3. ')' → logprob: -4.340278148651123
    4. '(' → logprob: -5.465278148651123
    5. '(d' → logprob: -6.590278148651123
    6. '):
' → logprob: -7.715278148651123
    7. ',' → logprob: -8.465278625488281
    8. 'def' → logprob: -9.090278625488281
    9. '(m' → logprob: -9.215278625488281
    10. '(True' → logprob: -9.590278625488281

Token 675: ' retourne' (ID: 178818)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7407917976379395
    2. 'for' → logprob: -1.8657917976379395
    3. '(' → logprob: -2.1157917976379395
    4. ' in' → logprob: -2.4907917976379395
    5. ' for' → logprob: -3.3657917976379395
    6. ':
' → logprob: -3.6157917976379395
    7. 'in' → logprob: -3.9907917976379395
    8. ',' → logprob: -4.2407917976379395
    9. '(d' → logprob: -4.2407917976379395
    10. 'def' → logprob: -4.7407917976379395

Token 676: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -9.65101717156358e-05
    2. ' True' → logprob: -9.250096321105957
    3. '(True' → logprob: -14.750096321105957
    4. '   ' → logprob: -18.875097274780273
    5. 'true' → logprob: -19.875097274780273
    6. '=True' → logprob: -20.250097274780273
    7. '_true' → logprob: -22.125097274780273
    8. '1' → logprob: -22.750097274780273
    9. 'False' → logprob: -22.750097274780273
    10. 'TRUE' → logprob: -22.875097274780273

Token 677: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006186736281961203
    2. 'import' → logprob: -8.250618934631348
    3. 'from' → logprob: -9.250618934631348
    4. ' for' → logprob: -9.375618934631348
    5. 'd' → logprob: -9.500618934631348
    6. 'def' → logprob: -9.500618934631348
    7. 'i' → logprob: -10.875618934631348
    8. '
' → logprob: -12.125618934631348
    9. '```' → logprob: -13.875618934631348
    10. '#' → logprob: -14.750618934631348

Token 678: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.923874702304602e-05
    2. 'import' → logprob: -9.875089645385742
    3. 'def' → logprob: -10.625089645385742
    4. 'from' → logprob: -11.875089645385742
    5. 'd' → logprob: -12.375089645385742
    6. 'i' → logprob: -13.625089645385742
    7. ' for' → logprob: -13.750089645385742
    8. '```' → logprob: -17.125089645385742
    9. '#' → logprob: -18.000089645385742
    10. '
' → logprob: -18.125089645385742

Token 679: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002414299873635173
    2. 'import' → logprob: -6.752414226531982
    3. 'def' → logprob: -7.627414226531982
    4. 'from' → logprob: -8.00241470336914
    5. 'd' → logprob: -8.25241470336914
    6. 'i' → logprob: -8.75241470336914
    7. ' for' → logprob: -13.25241470336914
    8. 'div' → logprob: -14.50241470336914
    9. 'f' → logprob: -15.50241470336914
    10. 'x' → logprob: -15.87741470336914

Token 680: ' parc' (ID: 22138)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04742787405848503
    2. 'from' → logprob: -4.297427654266357
    3. 'import' → logprob: -4.422427654266357
    4. 'def' → logprob: -4.672427654266357
    5. ' for' → logprob: -4.672427654266357
    6. '=' → logprob: -6.672427654266357
    7. '#' → logprob: -7.922427654266357
    8. 'd' → logprob: -8.922428131103516
    9. ' =' → logprob: -9.172428131103516
    10. ' from' → logprob: -9.797428131103516

Token 681: 'ourt' (ID: 38600)
  Prédit: 'ourt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ourt' → logprob: -0.008982546627521515
    2. 'ours' → logprob: -4.7589826583862305
    3. 'oure' → logprob: -8.13398265838623
    4. 'our' → logprob: -10.38398265838623
    5. 'ourse' → logprob: -12.13398265838623
    6. 'ou' → logprob: -12.38398265838623
    7. '_' → logprob: -12.50898265838623
    8. 'o' → logprob: -12.75898265838623
    9. 'court' → logprob: -12.75898265838623
    10. '
' → logprob: -13.00898265838623

Token 682: ' tous' (ID: 10688)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.43845057487487793
    2. 'range' → logprob: -1.563450574874878
    3. 'for' → logprob: -2.563450574874878
    4. 'i' → logprob: -3.438450574874878
    5. '(d' → logprob: -3.813450574874878
    6. '(i' → logprob: -4.938450813293457
    7. ' range' → logprob: -6.188450813293457
    8. '(' → logprob: -6.438450813293457
    9. ' d' → logprob: -6.938450813293457
    10. 'div' → logprob: -7.188450813293457

Token 683: ' les' (ID: 1341)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.7177790403366089
    2. 'd' → logprob: -1.3427790403366089
    3. 'i' → logprob: -2.0927791595458984
    4. '(d' → logprob: -2.5927791595458984
    5. '(' → logprob: -3.7177791595458984
    6. 'div' → logprob: -4.467779159545898
    7. 'for' → logprob: -4.967779159545898
    8. ' i' → logprob: -5.967779159545898
    9. 'range' → logprob: -5.967779159545898
    10. ' d' → logprob: -6.467779159545898

Token 684: ' div' (ID: 4223)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.32671624422073364
    2. 'd' → logprob: -1.3267161846160889
    3. 'for' → logprob: -4.326716423034668
    4. 'range' → logprob: -9.826716423034668
    5. 'div' → logprob: -10.076716423034668
    6. ' i' → logprob: -11.201716423034668
    7. 'x' → logprob: -11.451716423034668
    8. ' d' → logprob: -11.951716423034668
    9. 'from' → logprob: -11.951716423034668
    10. 'import' → logprob: -12.076716423034668

Token 685: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.10269016772508621
    2. 'is' → logprob: -2.7276902198791504
    3. 'd' → logprob: -4.47769021987915
    4. 'iseur' → logprob: -5.10269021987915
    5. 'div' → logprob: -6.10269021987915
    6. 'range' → logprob: -6.22769021987915
    7. 'M' → logprob: -6.22769021987915
    8. 'eurs' → logprob: -6.72769021987915
    9. 'i' → logprob: -7.10269021987915
    10. '```' → logprob: -7.47769021987915

Token 686: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.011441880837082863
    2. 'teurs' → logprob: -4.636441707611084
    3. 'urse' → logprob: -7.636441707611084
    4. 'ur' → logprob: -8.136442184448242
    5. 'eurs' → logprob: -8.261442184448242
    6. 'nte' → logprob: -8.261442184448242
    7. 's' → logprob: -8.761442184448242
    8. 'reurs' → logprob: -10.011442184448242
    9. 'ieurs' → logprob: -10.511442184448242
    10. 'rs' → logprob: -10.511442184448242

Token 687: ' potent' (ID: 35668)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013361863791942596
    2. 'd' → logprob: -4.763361930847168
    3. 'i' → logprob: -5.388361930847168
    4. ' for' → logprob: -9.763361930847168
    5. 'from' → logprob: -9.763361930847168
    6. 'import' → logprob: -10.263361930847168
    7. 'def' → logprob: -11.888361930847168
    8. 'of' → logprob: -12.388361930847168
    9. 'range' → logprob: -13.013361930847168
    10. 'x' → logprob: -13.763361930847168

Token 688: 'iels' (ID: 25833)
  Prédit: 'eurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eurs' → logprob: -0.35608482360839844
    2. 'aires' → logprob: -1.7310848236083984
    3. 'M' → logprob: -3.8560848236083984
    4. '(M' → logprob: -3.8560848236083984
    5. ' M' → logprob: -4.106084823608398
    6. 'is' → logprob: -4.606084823608398
    7. 'iers' → logprob: -4.731084823608398
    8. '   ' → logprob: -5.106084823608398
    9. '=' → logprob: -5.231084823608398
    10. '(' → logprob: -5.231084823608398

Token 689: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009005698375403881
    2. 'd' → logprob: -4.759005546569824
    3. 'i' → logprob: -8.259005546569824
    4. 'from' → logprob: -9.884005546569824
    5. 'import' → logprob: -10.009005546569824
    6. ' for' → logprob: -10.509005546569824
    7. '
' → logprob: -13.009005546569824
    8. '```' → logprob: -13.509005546569824
    9. '(d' → logprob: -13.759005546569824
    10. 'in' → logprob: -14.134005546569824

Token 690: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.027446288615465164
    2. 'i' → logprob: -3.6524462699890137
    3. 'range' → logprob: -7.777446269989014
    4. 'd' → logprob: -8.527446746826172
    5. ' M' → logprob: -8.527446746826172
    6. 'int' → logprob: -8.652446746826172
    7. ' i' → logprob: -9.152446746826172
    8. ' range' → logprob: -11.277446746826172
    9. 'm' → logprob: -11.777446746826172
    10. 'x' → logprob: -12.027446746826172

Token 691: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.016911353915929794
    2. 'd' → logprob: -4.391911506652832
    3. 'import' → logprob: -6.141911506652832
    4. 'from' → logprob: -6.516911506652832
    5. 'i' → logprob: -7.391911506652832
    6. ' for' → logprob: -9.391911506652832
    7. '(' → logprob: -10.516911506652832
    8. '(
' → logprob: -11.141911506652832
    9. '1' → logprob: -12.516911506652832
    10. '(i' → logprob: -12.641911506652832

Token 692: ' la' (ID: 557)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3371475040912628
    2. 'range' → logprob: -1.4621474742889404
    3. ' range' → logprob: -3.7121474742889404
    4. 'i' → logprob: -3.8371474742889404
    5. 'd' → logprob: -5.5871477127075195
    6. '2' → logprob: -6.7121477127075195
    7. 'int' → logprob: -6.9621477127075195
    8. ' i' → logprob: -7.0871477127075195
    9. ' ' → logprob: -7.0871477127075195
    10. ' d' → logprob: -7.3371477127075195

Token 693: ' plus' (ID: 2932)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008340691216289997
    2. '2' → logprob: -5.008340835571289
    3. 'range' → logprob: -6.758340835571289
    4. 'int' → logprob: -9.133340835571289
    5. ' range' → logprob: -9.508340835571289
    6. ' ' → logprob: -9.508340835571289
    7. 'for' → logprob: -9.883340835571289
    8. 'd' → logprob: -10.008340835571289
    9. 'i' → logprob: -10.008340835571289
    10. 'import' → logprob: -10.133340835571289

Token 694: ' grande' (ID: 10094)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07668538391590118
    2. 'int' → logprob: -3.3266854286193848
    3. 'import' → logprob: -4.201685428619385
    4. 'M' → logprob: -4.701685428619385
    5. 'd' → logprob: -5.576685428619385
    6. 'i' → logprob: -5.576685428619385
    7. 'N' → logprob: -6.326685428619385
    8. 'is' → logprob: -7.076685428619385
    9. 'for' → logprob: -7.201685428619385
    10. 'div' → logprob: -7.701685428619385

Token 695: ' à' (ID: 1221)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.872888445854187
    2. 'M' → logprob: -0.872888445854187
    3. 'd' → logprob: -2.7478885650634766
    4. 'range' → logprob: -3.7478885650634766
    5. 'int' → logprob: -3.7478885650634766
    6. 'import' → logprob: -4.497888565063477
    7. '```' → logprob: -4.872888565063477
    8. '
' → logprob: -5.122888565063477
    9. ' M' → logprob: -5.247888565063477
    10. '``' → logprob: -5.497888565063477

Token 696: ' la' (ID: 557)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015424626879394054
    2. ' ' → logprob: -5.265424728393555
    3. 'int' → logprob: -5.265424728393555
    4. 'range' → logprob: -6.515424728393555
    5. 'M' → logprob: -6.640424728393555
    6. 'd' → logprob: -7.265424728393555
    7. '```' → logprob: -7.765424728393555
    8. '(int' → logprob: -8.015424728393555
    9. '0' → logprob: -9.015424728393555
    10. '(M' → logprob: -9.015424728393555

Token 697: ' plus' (ID: 2932)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015873430529609323
    2. 'int' → logprob: -6.876587390899658
    3. '2' → logprob: -8.6265869140625
    4. ' ' → logprob: -8.8765869140625
    5. '0' → logprob: -9.6265869140625
    6. '```' → logprob: -9.7515869140625
    7. 'M' → logprob: -10.6265869140625
    8. '...' → logprob: -10.6265869140625
    9. 'import' → logprob: -10.7515869140625
    10. '
' → logprob: -11.0015869140625

Token 698: ' petite' (ID: 28119)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2036978006362915
    2. 'int' → logprob: -2.578697681427002
    3. 'import' → logprob: -2.703697681427002
    4. 'M' → logprob: -3.953697681427002
    5. 'N' → logprob: -4.703697681427002
    6. 'd' → logprob: -5.453697681427002
    7. '
' → logprob: -6.078697681427002
    8. '```' → logprob: -6.203697681427002
    9. 'sqrt' → logprob: -6.578697681427002
    10. 'from' → logprob: -7.328697681427002

Token 699: ' valeur' (ID: 41664)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010712217539548874
    2. 'import' → logprob: -4.635712146759033
    3. 'd' → logprob: -7.760712146759033
    4. 'from' → logprob: -7.885712146759033
    5. 'i' → logprob: -9.260712623596191
    6. ' for' → logprob: -9.885712623596191
    7. '
' → logprob: -12.510712623596191
    8. 'int' → logprob: -13.760712623596191
    9. '```' → logprob: -14.385712623596191
    10. '(
' → logprob: -15.010712623596191

Token 700: ' possible' (ID: 4149)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007888155058026314
    2. 'import' → logprob: -5.007888317108154
    3. 'from' → logprob: -7.132888317108154
    4. 'd' → logprob: -8.132887840270996
    5. ' for' → logprob: -9.882887840270996
    6. 'i' → logprob: -10.757887840270996
    7. '
' → logprob: -12.257887840270996
    8. 'int' → logprob: -13.757887840270996
    9. '```' → logprob: -14.257887840270996
    10. 'while' → logprob: -15.382887840270996

Token 701: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009393833577632904
    2. 'import' → logprob: -5.134393692016602
    3. 'd' → logprob: -6.259393692016602
    4. ' for' → logprob: -7.259393692016602
    5. 'from' → logprob: -7.384393692016602
    6. 'i' → logprob: -8.509393692016602
    7. '```' → logprob: -11.384393692016602
    8. '
' → logprob: -12.134393692016602
    9. ',' → logprob: -13.884393692016602
    10. ',
' → logprob: -14.759393692016602

Token 702: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005410315468907356
    2. 'import' → logprob: -5.255410194396973
    3. 'd' → logprob: -9.255410194396973
    4. 'from' → logprob: -9.630410194396973
    5. 'i' → logprob: -11.755410194396973
    6. ' for' → logprob: -12.005410194396973
    7. '```' → logprob: -13.755410194396973
    8. '
' → logprob: -16.25541114807129
    9. '	for' → logprob: -17.50541114807129
    10. 'while' → logprob: -18.00541114807129

Token 703: ' i' (ID: 575)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1934131532907486
    2. 'i' → logprob: -1.8184131383895874
    3. ' d' → logprob: -4.818413257598877
    4. ' i' → logprob: -5.568413257598877
    5. 'x' → logprob: -6.443413257598877
    6. ' x' → logprob: -10.318412780761719
    7. 'div' → logprob: -10.818412780761719
    8. 'f' → logprob: -12.068412780761719
    9. 'p' → logprob: -12.193412780761719
    10. 'a' → logprob: -12.318412780761719

Token 704: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016049619764089584
    2. 'in' → logprob: -4.141049385070801
    3. ' ' → logprob: -12.2660493850708
    4. 'd' → logprob: -12.3910493850708
    5. 'range' → logprob: -13.7660493850708
    6. 'from' → logprob: -14.1410493850708
    7. 's' → logprob: -14.2660493850708
    8. 'import' → logprob: -14.2660493850708
    9. '	in' → logprob: -14.2660493850708
    10. '1' → logprob: -14.2660493850708

Token 705: ' reversed' (ID: 57184)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018164223060011864
    2. ' range' → logprob: -4.018164157867432
    3. '1' → logprob: -12.14316463470459
    4. '(range' → logprob: -12.89316463470459
    5. 'int' → logprob: -13.26816463470459
    6. 'M' → logprob: -13.51816463470459
    7. 're' → logprob: -13.89316463470459
    8. 'sorted' → logprob: -14.01816463470459
    9. 'd' → logprob: -15.01816463470459
    10. 'in' → logprob: -15.14316463470459

Token 706: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -1.5570885807392187e-05
    2. 'range' → logprob: -11.250015258789062
    3. '(' → logprob: -13.250015258789062
    4. ' range' → logprob: -14.125015258789062
    5. '	range' → logprob: -17.875015258789062
    6. ' (' → logprob: -18.000015258789062
    7. '(list' → logprob: -18.000015258789062
    8. '(sorted' → logprob: -20.125015258789062
    9. '((' → logprob: -20.500015258789062
    10. '1' → logprob: -21.625015258789062

Token 707: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.36574100604048e-06
    2. '1' → logprob: -12.375004768371582
    3. ' (' → logprob: -16.875003814697266
    4. ' ' → logprob: -18.625003814697266
    5. '((' → logprob: -20.000003814697266
    6. '2' → logprob: -20.625003814697266
    7. '(int' → logprob: -21.375003814697266
    8. ',' → logprob: -21.500003814697266
    9. '(
' → logprob: -21.500003814697266
    10. 'int' → logprob: -21.750003814697266

Token 708: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004628888331353664
    2. '(' → logprob: -5.379628658294678
    3. 'int' → logprob: -11.879629135131836
    4. '(int' → logprob: -14.129629135131836
    5. ' ' → logprob: -14.254629135131836
    6. '2' → logprob: -15.754629135131836
    7. 'max' → logprob: -16.504629135131836
    8. '(M' → logprob: -16.504629135131836
    9. 'M' → logprob: -17.129629135131836
    10. '１' → logprob: -17.629629135131836

Token 709: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017152780201286077
    2. ' ,' → logprob: -6.626715183258057
    3. ',int' → logprob: -8.751715660095215
    4. ',M' → logprob: -8.751715660095215
    5. ',(' → logprob: -9.876715660095215
    6. 'int' → logprob: -12.001715660095215
    7. '(M' → logprob: -12.001715660095215
    8. '(int' → logprob: -12.876715660095215
    9. 'import' → logprob: -12.876715660095215
    10. '(' → logprob: -13.251715660095215

Token 710: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.38699305057525635
    2. 'M' → logprob: -1.1369930505752563
    3. '(int' → logprob: -9.386993408203125
    4. '(M' → logprob: -10.886993408203125
    5. ' int' → logprob: -11.136993408203125
    6. ' M' → logprob: -12.636993408203125
    7. '10' → logprob: -14.261993408203125
    8. '(' → logprob: -14.386993408203125
    9. '1' → logprob: -15.136993408203125
    10. '[int' → logprob: -16.761993408203125

Token 711: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.0001652796781854704
    2. 'M' → logprob: -8.750164985656738
    3. '((' → logprob: -12.375164985656738
    4. '(' → logprob: -13.125164985656738
    5. '(
' → logprob: -15.625164985656738
    6. ' M' → logprob: -16.375165939331055
    7. '(pow' → logprob: -16.375165939331055
    8. ' (' → logprob: -16.625165939331055
    9. '[M' → logprob: -17.125165939331055
    10. 'import' → logprob: -17.250165939331055

Token 712: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0068030026741325855
    2. '+' → logprob: -5.381803035736084
    3. ' **' → logprob: -7.256803035736084
    4. '.sqrt' → logprob: -7.381803035736084
    5. '
' → logprob: -8.756802558898926
    6. ')' → logprob: -9.256802558898926
    7. '(' → logprob: -9.256802558898926
    8. 'import' → logprob: -9.256802558898926
    9. '(i' → logprob: -9.506802558898926
    10. '.is' → logprob: -9.881802558898926

Token 713: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.750000953674316
    3. '.' → logprob: -14.750000953674316
    4. ' ' → logprob: -17.125
    5. '{' → logprob: -20.0
    6. '```' → logprob: -20.375
    7. '+' → logprob: -21.125
    8. '

' → logprob: -21.25
    9. '=' → logprob: -21.5
    10. '2' → logprob: -21.5

Token 714: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. '.' → logprob: -14.625000953674316
    3. '(' → logprob: -14.875000953674316
    4. ' ' → logprob: -15.750000953674316
    5. '{' → logprob: -17.500001907348633
    6. '```' → logprob: -19.125001907348633
    7. '/' → logprob: -20.500001907348633
    8. '2' → logprob: -21.000001907348633
    9. '   ' → logprob: -21.000001907348633
    10. '

' → logprob: -21.000001907348633

Token 715: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.05743210017681122
    2. '5' → logprob: -3.557432174682617
    3. '0' → logprob: -3.682432174682617
    4. '(' → logprob: -6.182432174682617
    5. '(i' → logprob: -10.182432174682617
    6. '```' → logprob: -11.057432174682617
    7. '   ' → logprob: -12.932432174682617
    8. '/' → logprob: -13.432432174682617
    9. ' .' → logprob: -13.432432174682617
    10. '=' → logprob: -13.557432174682617

Token 716: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -2.1008713702030946e-06
    2. '.' → logprob: -14.500001907348633
    3. '

' → logprob: -15.187501907348633
    4. '```' → logprob: -15.375001907348633
    5. '6' → logprob: -16.125001907348633
    6. '
' → logprob: -16.250001907348633
    7. '   ' → logprob: -16.250001907348633
    8. '52' → logprob: -16.375001907348633
    9. '{' → logprob: -16.875001907348633
    10. '0' → logprob: -16.937501907348633

Token 717: ')' (ID: 8)
  Prédit: ')+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.2884068489074707
    2. ')' → logprob: -1.6634068489074707
    3. '()' → logprob: -3.4134068489074707
    4. '()+' → logprob: -3.9134068489074707
    5. '+' → logprob: -5.663406848907471
    6. '())' → logprob: -5.788406848907471
    7. '2' → logprob: -6.913406848907471
    8. '(' → logprob: -8.663406372070312
    9. ' +' → logprob: -8.788406372070312
    10. ' )' → logprob: -9.413406372070312

Token 718: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04548152908682823
    2. ' +' → logprob: -3.1704814434051514
    3. '()+' → logprob: -6.2954816818237305
    4. ')+' → logprob: -7.6704816818237305
    5. '()' → logprob: -9.04548168182373
    6. ')' → logprob: -10.29548168182373
    7. '```' → logprob: -12.29548168182373
    8. '2' → logprob: -13.04548168182373
    9. ' ' → logprob: -13.29548168182373
    10. '+i' → logprob: -13.54548168182373

Token 719: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.057743949990254e-05
    2. ' ' → logprob: -11.375020980834961
    3. '2' → logprob: -12.125020980834961
    4. '(' → logprob: -12.500020980834961
    5. '   ' → logprob: -17.87502098083496
    6. ' (' → logprob: -18.25002098083496
    7. '+' → logprob: -18.62502098083496
    8. '  ' → logprob: -18.75002098083496
    9. '(i' → logprob: -19.00002098083496
    10. '```' → logprob: -19.25002098083496

Token 720: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.491498531133402e-06
    2. '2' → logprob: -11.875009536743164
    3. ' ' → logprob: -13.000009536743164
    4. '(' → logprob: -15.625009536743164
    5. '+' → logprob: -17.500009536743164
    6. '   ' → logprob: -18.000009536743164
    7. '(i' → logprob: -18.500009536743164
    8. '```' → logprob: -18.625009536743164
    9. '  ' → logprob: -19.375009536743164
    10. '3' → logprob: -20.000009536743164

Token 721: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.3270961344242096
    2. ')):
' → logprob: -1.4520961046218872
    3. '):' → logprob: -3.2020962238311768
    4. '):
' → logprob: -6.202095985412598
    5. '))' → logprob: -6.952095985412598
    6. ')):
' → logprob: -7.077095985412598
    7. ':' → logprob: -8.077095985412598
    8. '+' → logprob: -10.327095985412598
    9. ')' → logprob: -11.202095985412598
    10. '   ' → logprob: -11.702095985412598

Token 722: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02874073199927807
    2. ':
' → logprob: -4.278740882873535
    3. '   ' → logprob: -4.403740882873535
    4. ' if' → logprob: -6.528740882873535
    5. '<|end|>' → logprob: -8.278740882873535
    6. 'if' → logprob: -8.653740882873535
    7. ' :' → logprob: -9.278740882873535
    8. '	if' → logprob: -9.403740882873535
    9. '):
' → logprob: -9.903740882873535
    10. '```' → logprob: -10.528740882873535

Token 723: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7297163009643555
    2. ' if' → logprob: -1.3547163009643555
    3. '   ' → logprob: -1.3547163009643555
    4. '	if' → logprob: -6.7297163009643555
    5. ' ' → logprob: -7.9797163009643555
    6. '       ' → logprob: -8.729716300964355
    7. '    
' → logprob: -9.729716300964355
    8. '    ' → logprob: -10.229716300964355
    9. '
' → logprob: -10.479716300964355
    10. ':' → logprob: -10.979716300964355

Token 724: ' La' (ID: 3038)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00296581513248384
    2. '   ' → logprob: -6.252965927124023
    3. ' if' → logprob: -6.877965927124023
    4. '	if' → logprob: -12.127965927124023
    5. ' ' → logprob: -14.502965927124023
    6. '       ' → logprob: -14.752965927124023
    7. '  ' → logprob: -16.752965927124023
    8. '    ' → logprob: -16.877965927124023
    9. '    
' → logprob: -16.877965927124023
    10. 'If' → logprob: -17.002965927124023

Token 725: ' boucle' (ID: 174211)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0130969462916255
    2. ' if' → logprob: -4.388096809387207
    3. 'M' → logprob: -7.763096809387207
    4. ' M' → logprob: -10.513096809387207
    5. ':' → logprob: -11.013096809387207
    6. ' ' → logprob: -11.013096809387207
    7. '   ' → logprob: -11.138096809387207
    8. 's' → logprob: -11.388096809387207
    9. '
' → logprob: -11.388096809387207
    10. 'i' → logprob: -11.513096809387207

Token 726: ' va' (ID: 3423)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25634291768074036
    2. ' if' → logprob: -2.131342887878418
    3. 'if' → logprob: -3.256342887878418
    4. '   ' → logprob: -3.381342887878418
    5. ':
' → logprob: -3.506342887878418
    6. ' :' → logprob: -5.881342887878418
    7. ' =' → logprob: -7.881342887878418
    8. ' :
' → logprob: -8.006342887878418
    9. '	if' → logprob: -8.506342887878418
    10. ' ' → logprob: -8.881342887878418

Token 727: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46172410249710083
    2. ' if' → logprob: -1.586724042892456
    3. ' ' → logprob: -2.461724042892456
    4. 'if' → logprob: -2.836724042892456
    5. ':' → logprob: -4.711724281311035
    6. '  ' → logprob: -6.461724281311035
    7. ' not' → logprob: -6.586724281311035
    8. ' continue' → logprob: -6.836724281311035
    9. '1' → logprob: -7.211724281311035
    10. ' for' → logprob: -7.211724281311035

Token 728: ' la' (ID: 557)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.27229467034339905
    2. 'int' → logprob: -2.022294759750366
    3. 'i' → logprob: -2.272294759750366
    4. 'M' → logprob: -6.647294521331787
    5. ' ' → logprob: -7.147294521331787
    6. ' i' → logprob: -7.647294521331787
    7. ' int' → logprob: -8.397294998168945
    8. '(i' → logprob: -9.772294998168945
    9. '(int' → logprob: -10.147294998168945
    10. ' M' → logprob: -10.897294998168945

Token 729: ' rac' (ID: 12334)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2833644449710846
    2. 'i' → logprob: -1.5333644151687622
    3. '1' → logprob: -3.5333645343780518
    4. ' int' → logprob: -7.408364295959473
    5. ' i' → logprob: -7.533364295959473
    6. 'M' → logprob: -7.658364295959473
    7. '(int' → logprob: -10.158364295959473
    8. ' ' → logprob: -10.408364295959473
    9. '(i' → logprob: -11.408364295959473
    10. '   ' → logprob: -11.783364295959473

Token 730: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -1.3166306018829346
    2. '```' → logprob: -1.3166306018829346
    3. 't' → logprob: -2.4416306018829346
    4. 'isque' → logprob: -2.5666306018829346
    5. '(i' → logprob: -2.8166306018829346
    6. 'ı' → logprob: -3.4416306018829346
    7. '``' → logprob: -3.4416306018829346
    8. 'oot' → logprob: -4.0666303634643555
    9. 'e' → logprob: -4.1916303634643555
    10. 'ïque' → logprob: -4.5666303634643555

Token 731: ' carr' (ID: 18321)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7073550820350647
    2. '(int' → logprob: -1.45735502243042
    3. '(i' → logprob: -1.58235502243042
    4. 'i' → logprob: -3.33235502243042
    5. '(' → logprob: -3.95735502243042
    6. '1' → logprob: -4.95735502243042
    7. '```' → logprob: -6.45735502243042
    8. '2' → logprob: -6.58235502243042
    9. ' carr' → logprob: -7.08235502243042
    10. ' int' → logprob: -7.08235502243042

Token 732: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.21850468218326569
    2. 'ique' → logprob: -2.5935046672821045
    3. 'i' → logprob: -2.8435046672821045
    4. 'ic' → logprob: -3.9685046672821045
    5. '2' → logprob: -4.468504905700684
    6. 'ïque' → logprob: -4.468504905700684
    7. 'urée' → logprob: -4.718504905700684
    8. 'é' → logprob: -5.343504905700684
    9. '```' → logprob: -6.468504905700684
    10. 'e' → logprob: -6.968504905700684

Token 733: ' de' (ID: 334)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.03615200147032738
    2. '(' → logprob: -4.411151885986328
    3. '(int' → logprob: -4.661151885986328
    4. '(i' → logprob: -5.161151885986328
    5. '+' → logprob: -6.036151885986328
    6. ',' → logprob: -6.661151885986328
    7. 'int' → logprob: -6.661151885986328
    8. '1' → logprob: -7.161151885986328
    9. 'M' → logprob: -7.536151885986328
    10. 'de' → logprob: -7.661151885986328

Token 734: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.11902792751789093
    2. 'i' → logprob: -2.369027853012085
    3. 'int' → logprob: -4.494028091430664
    4. '(M' → logprob: -5.119028091430664
    5. '(i' → logprob: -7.619028091430664
    6. '(int' → logprob: -7.994028091430664
    7. ' M' → logprob: -7.994028091430664
    8. ' i' → logprob: -8.494028091430664
    9. ' int' → logprob: -10.119028091430664
    10. ' (' → logprob: -10.369028091430664

Token 735: ' jusqu' (ID: 21961)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3347497880458832
    2. ':' → logprob: -1.5847498178482056
    3. ':
' → logprob: -2.959749698638916
    4. ',' → logprob: -4.459749698638916
    5. 'if' → logprob: -5.209749698638916
    6. '():
' → logprob: -5.709749698638916
    7. ' to' → logprob: -6.709749698638916
    8. 'to' → logprob: -6.834749698638916
    9. '(' → logprob: -7.084749698638916
    10. ' if' → logprob: -7.334749698638916

Token 736: ''à' (ID: 33688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07571541517972946
    2. '1' → logprob: -2.8257153034210205
    3. 'à' → logprob: -5.5757155418396
    4. '(i' → logprob: -5.8257155418396
    5. ''à' → logprob: -5.8257155418396
    6. '   ' → logprob: -6.3257155418396
    7. ' à' → logprob: -7.5757155418396
    8. 'a' → logprob: -7.9507155418396
    9. 'to' → logprob: -8.200715065002441
    10. 'i' → logprob: -8.325715065002441

Token 737: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003337410045787692
    2. '0' → logprob: -5.878337383270264
    3. ' ' → logprob: -8.003337860107422
    4. 'i' → logprob: -9.128337860107422
    5. 'M' → logprob: -9.378337860107422
    6. ' i' → logprob: -13.628337860107422
    7. ' M' → logprob: -13.753337860107422
    8. '2' → logprob: -13.878337860107422
    9. '(i' → logprob: -14.628337860107422
    10. '```' → logprob: -14.753337860107422

Token 738: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00259408843703568
    2. 'i' → logprob: -6.627593994140625
    3. '0' → logprob: -6.877593994140625
    4. 'M' → logprob: -8.502593994140625
    5. ' ' → logprob: -10.502593994140625
    6. '2' → logprob: -13.252593994140625
    7. ' i' → logprob: -13.502593994140625
    8. '(i' → logprob: -13.627593994140625
    9. '```' → logprob: -14.877593994140625
    10. ' M' → logprob: -14.877593994140625

Token 739: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016979556530714035
    2. ':
' → logprob: -4.266979694366455
    3. '   ' → logprob: -6.391979694366455
    4. '):' → logprob: -7.391979694366455
    5. '):
' → logprob: -8.141979217529297
    6. '():' → logprob: -9.766979217529297
    7. '():
' → logprob: -10.016979217529297
    8. ' if' → logprob: -10.266979217529297
    9. 'if' → logprob: -10.766979217529297
    10. ' :' → logprob: -11.141979217529297

Token 740: ' ce' (ID: 2357)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42989882826805115
    2. ':' → logprob: -1.1798988580703735
    3. ' if' → logprob: -3.929898738861084
    4. '	if' → logprob: -4.929898738861084
    5. 'if' → logprob: -5.179898738861084
    6. ':
' → logprob: -5.304898738861084
    7. '    
' → logprob: -6.554898738861084
    8. '
' → logprob: -6.929898738861084
    9. ' :' → logprob: -7.554898738861084
    10. ' ' → logprob: -7.929898738861084

Token 741: ' qui' (ID: 2780)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.33704516291618347
    2. ' if' → logprob: -1.9620451927185059
    3. ':' → logprob: -2.462045192718506
    4. 'n' → logprob: -3.962045192718506
    5. 'in' → logprob: -4.212045192718506
    6. 'for' → logprob: -5.212045192718506
    7. ' for' → logprob: -5.962045192718506
    8. '1' → logprob: -6.087045192718506
    9. ')' → logprob: -6.212045192718506
    10. '   ' → logprob: -6.212045192718506

Token 742: ' permet' (ID: 11798)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06817124783992767
    2. ':
' → logprob: -3.068171262741089
    3. '   ' → logprob: -4.56817102432251
    4. ' :' → logprob: -5.81817102432251
    5. 'if' → logprob: -6.31817102432251
    6. ' if' → logprob: -6.69317102432251
    7. 's' → logprob: -7.81817102432251
    8. ' :
' → logprob: -7.81817102432251
    9. ' est' → logprob: -7.94317102432251
    10. '
' → logprob: -8.193171501159668

Token 743: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10492318123579025
    2. ':' → logprob: -2.9799232482910156
    3. ' de' → logprob: -3.2299232482910156
    4. ' d' → logprob: -4.979923248291016
    5. 'de' → logprob: -6.979923248291016
    6. 'd' → logprob: -6.979923248291016
    7. ':
' → logprob: -9.229923248291016
    8. '):' → logprob: -9.729923248291016
    9. 'if' → logprob: -9.854923248291016
    10. ' :' → logprob: -10.229923248291016

Token 744: ' ne' (ID: 453)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8723106980323792
    2. 'if' → logprob: -1.8723106384277344
    3. 'enumer' → logprob: -1.8723106384277344
    4. ' vérifier' → logprob: -2.7473106384277344
    5. ' for' → logprob: -3.4973106384277344
    6. 's' → logprob: -3.6223106384277344
    7. '...' → logprob: -3.8723106384277344
    8. '#' → logprob: -3.9973106384277344
    9. 'div' → logprob: -4.247310638427734
    10. 'prendre' → logprob: -4.247310638427734

Token 745: ' vérifier' (ID: 93671)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.3082716464996338
    2. ' ' → logprob: -2.433271646499634
    3. ' possible' → logprob: -3.433271646499634
    4. ' if' → logprob: -3.558271646499634
    5. ' in' → logprob: -4.058271408081055
    6. ' not' → logprob: -4.183271408081055
    7. ' for' → logprob: -4.558271408081055
    8. '1' → logprob: -4.683271408081055
    9. 'if' → logprob: -4.683271408081055
    10. ' range' → logprob: -5.058271408081055

Token 746: ' chaque' (ID: 21194)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.2424596548080444
    2. 'if' → logprob: -1.3674596548080444
    3. '   ' → logprob: -1.6174596548080444
    4. ' deux' → logprob: -2.117459774017334
    5. ' i' → logprob: -3.242459774017334
    6. ' two' → logprob: -3.492459774017334
    7. ' both' → logprob: -4.367459774017334
    8. 'both' → logprob: -4.367459774017334
    9. 'i' → logprob: -4.492459774017334
    10. 'd' → logprob: -5.367459774017334

Token 747: ' div' (ID: 4223)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.010487168096005917
    2. 'div' → logprob: -5.385487079620361
    3. 'M' → logprob: -5.760487079620361
    4. ' i' → logprob: -6.635487079620361
    5. 'd' → logprob: -7.010487079620361
    6. '1' → logprob: -9.26048755645752
    7. 'number' → logprob: -9.51048755645752
    8. ' ' → logprob: -9.88548755645752
    9. ' M' → logprob: -10.13548755645752
    10. ')' → logprob: -10.51048755645752

Token 748: 'iseur' (ID: 108637)
  Prédit: 'isor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isor' → logprob: -0.2918684482574463
    2. 'iseur' → logprob: -1.4168684482574463
    3. 'is' → logprob: -5.166868209838867
    4. 'i' → logprob: -6.416868209838867
    5. 'iser' → logprob: -6.916868209838867
    6. '```' → logprob: -7.791868209838867
    7. 'iz' → logprob: -7.916868209838867
    8. 'd' → logprob: -8.916868209838867
    9. 's' → logprob: -9.166868209838867
    10. '(i' → logprob: -9.166868209838867

Token 749: ' que' (ID: 661)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08988739550113678
    2. '():' → logprob: -3.2148873805999756
    3. ':
' → logprob: -3.9648873805999756
    4. '   ' → logprob: -4.464887619018555
    5. '():
' → logprob: -5.214887619018555
    6. 'if' → logprob: -5.339887619018555
    7. '):' → logprob: -6.214887619018555
    8. ' if' → logprob: -6.589887619018555
    9. ' :' → logprob: -7.464887619018555
    10. ',' → logprob: -7.589887619018555

Token 750: ' deux' (ID: 10301)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.0046449899673462
    2. '(i' → logprob: -1.2546449899673462
    3. 'i' → logprob: -1.8796449899673462
    4. ' deux' → logprob: -2.5046448707580566
    5. ':' → logprob: -3.7546448707580566
    6. '2' → logprob: -4.004644870758057
    7. ',' → logprob: -4.379644870758057
    8. ' two' → logprob: -4.504644870758057
    9. '[i' → logprob: -4.629644870758057
    10. ' ' → logprob: -5.004644870758057

Token 751: ' fois' (ID: 14697)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12057999521493912
    2. '):' → logprob: -2.495579957962036
    3. 'tokens' → logprob: -4.745580196380615
    4. ' :' → logprob: -5.370580196380615
    5. 'fois' → logprob: -5.620580196380615
    6. ':
' → logprob: -6.120580196380615
    7. ' fois' → logprob: -6.245580196380615
    8. ' tokens' → logprob: -6.245580196380615
    9. ',' → logprob: -6.370580196380615
    10. ')' → logprob: -6.995580196380615

Token 752: ' au' (ID: 2791)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023443229496479034
    2. ':
' → logprob: -4.023443222045898
    3. '():' → logprob: -6.398443222045898
    4. '):' → logprob: -6.898443222045898
    5. '():
' → logprob: -7.023443222045898
    6. '   ' → logprob: -7.273443222045898
    7. '):
' → logprob: -7.398443222045898
    8. 'if' → logprob: -8.773443222045898
    9. ' if' → logprob: -8.773443222045898
    10. '<|end|>' → logprob: -10.898443222045898

Token 753: ' maximum' (ID: 10562)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -1.5084004402160645
    2. '```' → logprob: -1.7584004402160645
    3. '1' → logprob: -2.1334004402160645
    4. ' pas' → logprob: -2.7584004402160645
    5. '2' → logprob: -2.7584004402160645
    6. ':' → logprob: -3.3834004402160645
    7. ' ' → logprob: -3.3834004402160645
    8. 'pass' → logprob: -3.3834004402160645
    9. 'if' → logprob: -3.5084004402160645
    10. '+' → logprob: -3.8834004402160645

Token 754: '

' (ID: 279)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10498113185167313
    2. ':
' → logprob: -2.4799811840057373
    3. '   ' → logprob: -4.729980945587158
    4. '):
' → logprob: -5.354980945587158
    5. '):' → logprob: -6.854980945587158
    6. 'if' → logprob: -7.854980945587158
    7. ' if' → logprob: -7.854980945587158
    8. '():
' → logprob: -8.229981422424316
    9. '():' → logprob: -9.604981422424316
    10. '```' → logprob: -9.979981422424316

Token 755: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43107014894485474
    2. '   ' → logprob: -1.30607008934021
    3. 'if' → logprob: -3.43107008934021
    4. ':
' → logprob: -3.55607008934021
    5. ' if' → logprob: -4.056070327758789
    6. '	if' → logprob: -7.806070327758789
    7. '):
' → logprob: -8.431070327758789
    8. '```' → logprob: -9.306070327758789
    9. '<|end|>' → logprob: -9.556070327758789
    10. '):' → logprob: -10.056070327758789

Token 756: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.021710949018597603
    2. '   ' → logprob: -3.8967108726501465
    3. ' if' → logprob: -6.7717108726501465
    4. '	if' → logprob: -11.021711349487305
    5. ' ' → logprob: -13.646711349487305
    6. '       ' → logprob: -13.771711349487305
    7. '```' → logprob: -13.896711349487305
    8. '    
' → logprob: -14.521711349487305
    9. 'for' → logprob: -14.521711349487305
    10. '#' → logprob: -14.896711349487305

Token 757: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.023262368515133858
    2. ' M' → logprob: -3.7732622623443604
    3. ' ' → logprob: -11.273262023925781
    4. '   ' → logprob: -12.523262023925781
    5. '(M' → logprob: -15.523262023925781
    6. '  ' → logprob: -15.523262023925781
    7. '	M' → logprob: -16.39826202392578
    8. ' ' → logprob: -16.77326202392578
    9. ' (' → logprob: -17.14826202392578
    10. '    ' → logprob: -17.39826202392578

Token 758: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.12825891375541687
    2. ' %' → logprob: -2.1282589435577393
    3. '%i' → logprob: -6.62825870513916
    4. '%d' → logprob: -13.00325870513916
    5. ' ' → logprob: -13.37825870513916
    6. '%s' → logprob: -13.50325870513916
    7. ' ' → logprob: -14.50325870513916
    8. '[i' → logprob: -15.12825870513916
    9. '```' → logprob: -15.50325870513916
    10. '%e' → logprob: -15.50325870513916

Token 759: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.157039049663581e-05
    2. ' i' → logprob: -9.875051498413086
    3. ' ' → logprob: -17.875051498413086
    4. '	i' → logprob: -18.000051498413086
    5. '(i' → logprob: -18.375051498413086
    6. '   ' → logprob: -18.875051498413086
    7. '```' → logprob: -20.250051498413086
    8. '  ' → logprob: -20.375051498413086
    9. '%i' → logprob: -20.750051498413086
    10. '
' → logprob: -20.750051498413086

Token 760: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.048597704619169235
    2. ' ==' → logprob: -3.048597812652588
    3. '=' → logprob: -12.79859733581543
    4. '===' → logprob: -13.04859733581543
    5. ')==' → logprob: -13.17359733581543
    6. '==
' → logprob: -13.42359733581543
    7. '0' → logprob: -13.79859733581543
    8. ']==' → logprob: -15.04859733581543
    9. ' ' → logprob: -15.42359733581543
    10. '()==' → logprob: -15.79859733581543

Token 761: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '۰' → logprob: -21.500003814697266
    4. '  ' → logprob: -22.250003814697266
    5. '   ' → logprob: -22.875003814697266
    6. 's' → logprob: -23.125003814697266
    7. '০' → logprob: -23.250003814697266
    8. '=' → logprob: -24.250003814697266
    9. '    ' → logprob: -24.250003814697266
    10. '०' → logprob: -24.312503814697266

Token 762: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. 's' → logprob: -22.0
    4. '۰' → logprob: -22.25
    5. '=' → logprob: -22.875
    6. 'int' → logprob: -24.125
    7. '
' → logprob: -24.375
    8. ' ' → logprob: -24.5
    9. '০' → logprob: -24.625
    10. '   ' → logprob: -24.75

Token 763: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7327412962913513
    2. ':
' → logprob: -0.8577412962913513
    3. ' and' → logprob: -2.357741355895996
    4. 'and' → logprob: -7.482741355895996
    5. ':

' → logprob: -10.107741355895996
    6. '   ' → logprob: -10.732741355895996
    7. ':
' → logprob: -11.482741355895996
    8. '):
' → logprob: -12.357741355895996
    9. ' :
' → logprob: -12.482741355895996
    10. '       ' → logprob: -12.482741355895996

Token 764: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04284856468439102
    2. '   ' → logprob: -3.792848587036133
    3. '
' → logprob: -4.042848587036133
    4. ' if' → logprob: -7.667848587036133
    5. '```' → logprob: -7.792848587036133
    6. '        
' → logprob: -8.042848587036133
    7. '    
' → logprob: -8.667848587036133
    8. ':' → logprob: -9.292848587036133
    9. '  
' → logprob: -9.292848587036133
    10. '<|end|>' → logprob: -9.542848587036133

Token 765: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4817478656768799
    2. 'if' → logprob: -1.4817478656768799
    3. '       ' → logprob: -2.10674786567688
    4. ' if' → logprob: -4.106747627258301
    5. 'for' → logprob: -4.731747627258301
    6. 'd' → logprob: -5.231747627258301
    7. ' for' → logprob: -6.231747627258301
    8. '
' → logprob: -7.481747627258301
    9. '	if' → logprob: -9.9817476272583
    10. '#' → logprob: -9.9817476272583

Token 766: ' Si' (ID: 7832)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12456493079662323
    2. ' if' → logprob: -2.6245648860931396
    3. 'if' → logprob: -3.2495648860931396
    4. '       ' → logprob: -5.249565124511719
    5. 'd' → logprob: -8.499565124511719
    6. '```' → logprob: -8.874565124511719
    7. '#' → logprob: -9.624565124511719
    8. ' for' → logprob: -9.999565124511719
    9. '
' → logprob: -9.999565124511719
    10. 'for' → logprob: -10.499565124511719

Token 767: ' i' (ID: 575)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.07890598475933075
    2. ' check' → logprob: -2.5789060592651367
    3. 'i' → logprob: -11.953906059265137
    4. '   ' → logprob: -12.328906059265137
    5. ' i' → logprob: -13.078906059265137
    6. ' ' → logprob: -13.328906059265137
    7. '(check' → logprob: -14.328906059265137
    8. ' M' → logprob: -15.078906059265137
    9. '
' → logprob: -15.453906059265137
    10. '  ' → logprob: -15.578906059265137

Token 768: ' est' (ID: 893)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7608383297920227
    2. ' ==' → logprob: -0.7608383297920227
    3. ':' → logprob: -3.010838270187378
    4. ' and' → logprob: -5.135838508605957
    5. '!=' → logprob: -5.510838508605957
    6. ' !=' → logprob: -5.885838508605957
    7. ' in' → logprob: -7.635838508605957
    8. ' is' → logprob: -7.885838508605957
    9. 'and' → logprob: -7.885838508605957
    10. '>' → logprob: -8.260838508605957

Token 769: ' un' (ID: 537)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006990876980125904
    2. ' ' → logprob: -5.131990909576416
    3. 'div' → logprob: -7.131990909576416
    4. '1' → logprob: -9.006990432739258
    5. 'un' → logprob: -9.881990432739258
    6. ' un' → logprob: -10.131990432739258
    7. '   ' → logprob: -11.131990432739258
    8. 'M' → logprob: -12.506990432739258
    9. '==' → logprob: -12.631990432739258
    10. ' div' → logprob: -12.631990432739258

Token 770: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.0036288120318204165
    2. ' div' → logprob: -5.628628730773926
    3. ' divisor' → logprob: -11.003628730773926
    4. ' divis' → logprob: -12.003628730773926
    5. '	div' → logprob: -12.753628730773926
    6. ' ' → logprob: -14.253628730773926
    7. '(div' → logprob: -14.378628730773926
    8. '<div' → logprob: -14.503628730773926
    9. ' divisible' → logprob: -15.128628730773926
    10. 'divide' → logprob: -15.753628730773926

Token 771: 'iseur' (ID: 108637)
  Prédit: 'iseur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iseur' → logprob: -9.460291767027229e-05
    2. 'ise' → logprob: -10.375094413757324
    3. 'isateur' → logprob: -11.125094413757324
    4. 'iteur' → logprob: -11.625094413757324
    5. 'isseur' → logprob: -12.125094413757324
    6. 'i' → logprob: -12.125094413757324
    7. 'isible' → logprob: -12.125094413757324
    8. 'div' → logprob: -12.750094413757324
    9. '```' → logprob: -12.875094413757324
    10. 'is' → logprob: -13.250094413757324

Token 772: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02338710054755211
    2. ':
' → logprob: -4.1483869552612305
    3. ' and' → logprob: -5.0233869552612305
    4. '   ' → logprob: -8.02338695526123
    5. 'and' → logprob: -8.27338695526123
    6. ' or' → logprob: -9.77338695526123
    7. ' :' → logprob: -10.02338695526123
    8. '<|end|>' → logprob: -11.64838695526123
    9. '):' → logprob: -12.02338695526123
    10. ',' → logprob: -12.02338695526123

Token 773: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.001170225441455841
    2. ' M' → logprob: -6.7511701583862305
    3. ' ' → logprob: -17.251171112060547
    4. '   ' → logprob: -18.876171112060547
    5. ' ' → logprob: -19.376171112060547
    6. '```' → logprob: -20.001171112060547
    7. 'i' → logprob: -20.126171112060547
    8. '	M' → logprob: -20.251171112060547
    9. '
' → logprob: -20.501171112060547
    10. '  ' → logprob: -20.751171112060547

Token 774: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1276898980140686
    2. ':
' → logprob: -2.127689838409424
    3. '   ' → logprob: -8.002690315246582
    4. '       ' → logprob: -8.502690315246582
    5. '):
' → logprob: -9.627690315246582
    6. ' and' → logprob: -10.127690315246582
    7. '<|end|>' → logprob: -10.627690315246582
    8. ':

' → logprob: -10.877690315246582
    9. '```' → logprob: -10.877690315246582
    10. '):' → logprob: -11.127690315246582

Token 775: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009496577084064484
    2. '   ' → logprob: -5.384496688842773
    3. ':' → logprob: -6.009496688842773
    4. '<|end|>' → logprob: -7.259496688842773
    5. '```' → logprob: -7.509496688842773
    6. '        
' → logprob: -7.884496688842773
    7. ':
' → logprob: -8.134496688842773
    8. '
' → logprob: -8.134496688842773
    9. '):
' → logprob: -9.634496688842773
    10. ' if' → logprob: -10.134496688842773

Token 776: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24651317298412323
    2. 'if' (adapté à ' if') → logprob: -1.9965131282806396
    3. ' if' → logprob: -2.4965131282806396
    4. '   ' → logprob: -9.621513366699219
    5. 'for' → logprob: -9.996513366699219
    6. '```' → logprob: -9.996513366699219
    7. ' for' → logprob: -10.121513366699219
    8. '	if' → logprob: -10.371513366699219
    9. '
' → logprob: -10.996513366699219
    10. '        
' → logprob: -11.246513366699219

Token 777: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.07889441400766373
    2. ' check' → logprob: -2.5788943767547607
    3. '   ' → logprob: -12.70389461517334
    4. '           ' → logprob: -14.32889461517334
    5. '	check' → logprob: -14.57889461517334
    6. '       ' → logprob: -15.20389461517334
    7. '(check' → logprob: -15.95389461517334
    8. ' ' → logprob: -16.078893661499023
    9. '
' → logprob: -16.953893661499023
    10. '  ' → logprob: -18.078893661499023

Token 778: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.023249439895153046
    2. '(M' → logprob: -3.773249387741089
    3. '(' → logprob: -13.148249626159668
    4. '(I' → logprob: -14.023249626159668
    5. ' (' → logprob: -14.273249626159668
    6. '((' → logprob: -14.898249626159668
    7. '(
' → logprob: -16.39824867248535
    8. 'i' → logprob: -16.89824867248535
    9. '(int' → logprob: -17.89824867248535
    10. ')' → logprob: -18.52324867248535

Token 779: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4775148630142212
    2. '):
' → logprob: -0.9775148630142212
    3. ')' → logprob: -5.727514743804932
    4. ' ):' → logprob: -9.97751522064209
    5. '):
' → logprob: -10.22751522064209
    6. '   ' → logprob: -10.22751522064209
    7. '       ' → logprob: -10.72751522064209
    8. ':' → logprob: -11.35251522064209
    9. ' ):
' → logprob: -11.47751522064209
    10. '):

' → logprob: -11.97751522064209

Token 780: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15073294937610626
    2. '
' → logprob: -2.40073299407959
    3. 'ans' → logprob: -3.40073299407959
    4. ' ans' → logprob: -4.15073299407959
    5. '       ' → logprob: -10.40073299407959
    6. '(ans' → logprob: -10.40073299407959
    7. '	ans' → logprob: -10.65073299407959
    8. '            
' → logprob: -10.77573299407959
    9. 'answer' → logprob: -11.15073299407959
    10. '   ' → logprob: -11.27573299407959

Token 781: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.659636914730072
    2. 'ans' → logprob: -0.909636914730072
    3. ' ans' → logprob: -2.534636974334717
    4. '
' → logprob: -7.284636974334717
    5. '	ans' → logprob: -9.159636497497559
    6. '   ' → logprob: -9.534636497497559
    7. '       ' → logprob: -9.909636497497559
    8. '(ans' → logprob: -10.034636497497559
    9. 'answer' → logprob: -10.409636497497559
    10. '```' → logprob: -13.034636497497559

Token 782: ' On' (ID: 2160)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2820272147655487
    2. 'ans' → logprob: -1.532027244567871
    3. ' ans' → logprob: -3.532027244567871
    4. '   ' → logprob: -8.532027244567871
    5. '       ' → logprob: -9.532027244567871
    6. '
' → logprob: -9.907027244567871
    7. '	ans' → logprob: -10.407027244567871
    8. 'answer' → logprob: -10.657027244567871
    9. '               ' → logprob: -11.532027244567871
    10. '(ans' → logprob: -12.282027244567871

Token 783: ' vér' (ID: 42524)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7543118596076965
    2. '   ' → logprob: -1.3793118000030518
    3. '           ' → logprob: -2.1293118000030518
    4. ':' → logprob: -2.6293118000030518
    5. ' ans' → logprob: -3.0043118000030518
    6. '	ans' → logprob: -4.754312038421631
    7. ':
' → logprob: -4.879312038421631
    8. '=' → logprob: -5.129312038421631
    9. '       ' → logprob: -5.254312038421631
    10. '>' → logprob: -5.379312038421631

Token 784: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0007476831669919193
    2. 'if' → logprob: -7.2507476806640625
    3. 'ifiez' → logprob: -10.750747680664062
    4. 'ife' → logprob: -12.250747680664062
    5. 'o' → logprob: -13.125747680664062
    6. '   ' → logprob: -13.500747680664062
    7. 'ifié' → logprob: -13.625747680664062
    8. 'ifier' → logprob: -13.625747680664062
    9. '```' → logprob: -13.625747680664062
    10. '       ' → logprob: -14.250747680664062

Token 785: ' si' (ID: 1784)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00776029983535409
    2. 'ans' → logprob: -5.757760524749756
    3. '       ' → logprob: -6.757760524749756
    4. ':' → logprob: -6.757760524749756
    5. '   ' → logprob: -6.882760524749756
    6. ' ans' → logprob: -7.507760524749756
    7. '(ans' → logprob: -8.632760047912598
    8. '
' → logprob: -8.757760047912598
    9. ':
' → logprob: -9.132760047912598
    10. '               ' → logprob: -9.507760047912598

Token 786: ' on' (ID: 402)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7447234988212585
    2. 'check' → logprob: -1.1197235584259033
    3. 'ans' → logprob: -2.6197235584259033
    4. ' check' → logprob: -2.6197235584259033
    5. ' i' → logprob: -2.9947235584259033
    6. ' ans' → logprob: -5.869723320007324
    7. '   ' → logprob: -10.119723320007324
    8. 'not' → logprob: -10.244723320007324
    9. 'answer' → logprob: -10.244723320007324
    10. ' ' → logprob: -10.494723320007324

Token 787: ' peut' (ID: 9216)
  Prédit: ' peut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.29022014141082764
    2. ' can' → logprob: -2.415220260620117
    3. ' peux' → logprob: -2.540220260620117
    4. 'can' → logprob: -3.165220260620117
    5. '           ' → logprob: -4.290220260620117
    6. '       ' → logprob: -5.040220260620117
    7. ':' → logprob: -5.165220260620117
    8. 'pe' → logprob: -5.540220260620117
    9. '#' → logprob: -6.040220260620117
    10. 'ans' → logprob: -6.790220260620117

Token 788: ' rendre' (ID: 44629)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4781929850578308
    2. ' ans' → logprob: -1.8531930446624756
    3. 'ans' → logprob: -1.8531930446624756
    4. '   ' → logprob: -3.7281930446624756
    5. '       ' → logprob: -4.2281928062438965
    6. '          ' → logprob: -4.9781928062438965
    7. '#' → logprob: -5.8531928062438965
    8. '
' → logprob: -6.1031928062438965
    9. 'mettre' → logprob: -6.1031928062438965
    10. 'max' → logprob: -6.7281928062438965

Token 789: ' tous' (ID: 10688)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5834007263183594
    2. 't' → logprob: -1.5834007263183594
    3. 'all' → logprob: -1.8334007263183594
    4. 'ans' → logprob: -2.9584007263183594
    5. 'tout' → logprob: -3.9584007263183594
    6. 'True' → logprob: -6.333400726318359
    7. 'M' → logprob: -6.458400726318359
    8. 'l' → logprob: -7.208400726318359
    9. '   ' → logprob: -7.708400726318359
    10. '0' → logprob: -7.833400726318359

Token 790: ' les' (ID: 1341)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.20011527836322784
    2. '(A' → logprob: -2.200115203857422
    3. '(i' → logprob: -3.575115203857422
    4. 'les' → logprob: -4.200115203857422
    5. ' A' → logprob: -4.450115203857422
    6. ' les' → logprob: -5.200115203857422
    7. 'i' → logprob: -5.325115203857422
    8. 'd' → logprob: -6.825115203857422
    9. '(v' → logprob: -7.075115203857422
    10. 'elements' → logprob: -7.325115203857422

Token 791: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.02624642476439476
    2. 'A' → logprob: -3.9012463092803955
    3. 'elements' → logprob: -5.276246547698975
    4. 'é' → logprob: -8.026246070861816
    5. 'a' → logprob: -9.276246070861816
    6. ' éléments' → logprob: -9.776246070861816
    7. 'elem' → logprob: -10.651246070861816
    8. 'él' → logprob: -10.901246070861816
    9. 'ele' → logprob: -11.151246070861816
    10. 'à' → logprob: -11.526246070861816

Token 792: ' divis' (ID: 37826)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.037331558763980865
    2. ' divis' → logprob: -3.6623315811157227
    3. ' divisible' → logprob: -4.662331581115723
    4. '%' → logprob: -7.787331581115723
    5. '   ' → logprob: -8.287331581115723
    6. ' div' → logprob: -8.412331581115723
    7. '#' → logprob: -8.662331581115723
    8. '```' → logprob: -9.162331581115723
    9. 'multip' → logprob: -9.787331581115723
    10. 'd' → logprob: -9.787331581115723

Token 793: 'ibles' (ID: 12234)
  Prédit: 'ible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ible' → logprob: -0.3870519697666168
    2. 'ibles' → logprob: -1.1370519399642944
    3. 'isible' → logprob: -8.762051582336426
    4. 'ib' → logprob: -11.012051582336426
    5. 'is' → logprob: -12.637051582336426
    6. '```' → logprob: -13.387051582336426
    7. 'bles' → logprob: -14.387051582336426
    8. 'ibes' → logprob: -14.387051582336426
    9. 'iples' → logprob: -15.262051582336426
    10. 'ble' → logprob: -15.262051582336426

Token 794: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.8748711347579956
    2. '(i' → logprob: -0.9998711347579956
    3. '       ' → logprob: -1.9998711347579956
    4. 'by' → logprob: -3.249871253967285
    5. '(ans' → logprob: -4.499871253967285
    6. ' par' → logprob: -4.624871253967285
    7. '           ' → logprob: -4.624871253967285
    8. 'ans' → logprob: -5.624871253967285
    9. '   ' → logprob: -5.624871253967285
    10. ' by' → logprob: -7.249871253967285

Token 795: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.700132997939363e-05
    2. ' i' → logprob: -11.000017166137695
    3. '   ' → logprob: -16.000017166137695
    4. '
' → logprob: -16.750017166137695
    5. '```' → logprob: -16.875017166137695
    6. '	i' → logprob: -18.125017166137695
    7. '[i' → logprob: -18.750017166137695
    8. '(i' → logprob: -18.875017166137695
    9. '       ' → logprob: -19.750017166137695
    10. '
' → logprob: -19.875017166137695

Token 796: ' en' (ID: 469)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015670526772737503
    2. ':' → logprob: -4.515670299530029
    3. ':
' → logprob: -5.640670299530029
    4. ' and' → logprob: -7.890670299530029
    5. 'ans' → logprob: -8.015670776367188
    6. '       ' → logprob: -9.015670776367188
    7. ' ans' → logprob: -9.390670776367188
    8. '               ' → logprob: -10.390670776367188
    9. '
' → logprob: -10.515670776367188
    10. '   ' → logprob: -10.890670776367188

Token 797: ' au' (ID: 2791)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -1.398022174835205
    2. 'True' → logprob: -1.523022174835205
    3. ' at' → logprob: -1.648022174835205
    4. 'check' → logprob: -2.398022174835205
    5. 'K' → logprob: -2.523022174835205
    6. ' K' → logprob: -3.648022174835205
    7. ' check' → logprob: -3.648022174835205
    8. '           ' → logprob: -3.648022174835205
    9. 'i' → logprob: -3.898022174835205
    10. 'au' → logprob: -4.023022174835205

Token 798: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.1537557989358902
    2. 'most' → logprob: -2.4037559032440186
    3. 'moins' → logprob: -3.1537559032440186
    4. ' most' → logprob: -5.1537556648254395
    5. ' plus' → logprob: -6.1537556648254395
    6. 'mo' → logprob: -6.9037556648254395
    7. 'max' → logprob: -8.403756141662598
    8. ' moins' → logprob: -9.278756141662598
    9. '
' → logprob: -9.778756141662598
    10. '```' → logprob: -10.028756141662598

Token 799: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -6.988221684878226e-06
    2. ' K' → logprob: -11.875006675720215
    3. '   ' → logprob: -17.50000762939453
    4. '```' → logprob: -17.50000762939453
    5. '`' → logprob: -18.12500762939453
    6. '
' → logprob: -18.12500762939453
    7. '	K' → logprob: -19.25000762939453
    8. ' ' → logprob: -19.62500762939453
    9. '
' → logprob: -20.87500762939453
    10. '*K' → logprob: -21.12500762939453

Token 800: ' opérations' (ID: 102793)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3474617302417755
    2. ':' → logprob: -1.7224617004394531
    3. '   ' → logprob: -3.597461700439453
    4. 'operations' → logprob: -3.722461700439453
    5. '       ' → logprob: -4.347461700439453
    6. '+' → logprob: -4.722461700439453
    7. '=' → logprob: -4.972461700439453
    8. ' operations' → logprob: -5.347461700439453
    9. '           ' → logprob: -5.472461700439453
    10. 'tokens' → logprob: -5.722461700439453

Token 801: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013720430433750153
    2. ':' → logprob: -4.763720512390137
    3. ':
' → logprob: -6.013720512390137
    4. '       ' → logprob: -6.138720512390137
    5. ' and' → logprob: -9.138720512390137
    6. '```' → logprob: -9.763720512390137
    7. '               ' → logprob: -9.888720512390137
    8. ' ans' → logprob: -9.888720512390137
    9. '   ' → logprob: -10.138720512390137
    10. 'ans' → logprob: -10.263720512390137

Token 802: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004151176195591688
    2. 'ans' → logprob: -5.629151344299316
    3. ' ans' → logprob: -7.629151344299316
    4. '       ' → logprob: -11.129151344299316
    5. '(ans' → logprob: -11.254151344299316
    6. '```' → logprob: -11.254151344299316
    7. 'answer' → logprob: -12.004151344299316
    8. '	ans' → logprob: -12.379151344299316
    9. '               ' → logprob: -13.004151344299316
    10. '          ' → logprob: -13.129151344299316

Token 803: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -5.204720582696609e-05
    2. ' ans' → logprob: -10.000052452087402
    3. 'print' → logprob: -12.500052452087402
    4. '	ans' → logprob: -13.375052452087402
    5. 'answer' → logprob: -14.500052452087402
    6. '(ans' → logprob: -14.625052452087402
    7. '_ans' → logprob: -15.750052452087402
    8. '           ' → logprob: -15.875052452087402
    9. '   ' → logprob: -17.000051498413086
    10. '```' → logprob: -17.375051498413086

Token 804: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858771339058876
    2. ' =' → logprob: -3.0485877990722656
    3. '=i' → logprob: -15.298587799072266
    4. '＝' → logprob: -16.548587799072266
    5. '+=' → logprob: -18.048587799072266
    6. '=max' → logprob: -18.048587799072266
    7. '=end' → logprob: -19.298587799072266
    8. '=
' → logprob: -19.423587799072266
    9. '=int' → logprob: -19.423587799072266
    10. '=

' → logprob: -20.048587799072266

Token 805: ' max' (ID: 2999)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0001916200271807611
    2. 'max' → logprob: -9.375191688537598
    3. ' i' → logprob: -9.625191688537598
    4. 'M' → logprob: -10.125191688537598
    5. ' max' → logprob: -15.250191688537598
    6. '   ' → logprob: -16.37519073486328
    7. ' M' → logprob: -16.50019073486328
    8. ' ' → logprob: -16.62519073486328
    9. ' ' → logprob: -18.25019073486328
    10. 'int' → logprob: -18.75019073486328

Token 806: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.6047699318733066e-05
    2. 'ans' → logprob: -11.875016212463379
    3. '(i' → logprob: -11.875016212463379
    4. '(' → logprob: -13.125016212463379
    5. '	ans' → logprob: -17.375015258789062
    6. '(answer' → logprob: -18.500015258789062
    7. ' ans' → logprob: -19.250015258789062
    8. '(
' → logprob: -20.500015258789062
    9. '```' → logprob: -20.750015258789062
    10. '(err' → logprob: -20.875015258789062

Token 807: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003403495065867901
    2. ',i' → logprob: -8.875340461730957
    3. ' ,' → logprob: -9.375340461730957
    4. 'ans' → logprob: -9.875340461730957
    5. 'i' → logprob: -10.625340461730957
    6. '(ans' → logprob: -10.750340461730957
    7. ' ans' → logprob: -12.000340461730957
    8. ',
' → logprob: -12.250340461730957
    9. '(i' → logprob: -12.625340461730957
    10. ' i' → logprob: -13.875340461730957

Token 808: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.5048530030981055e-06
    2. ' i' → logprob: -13.500001907348633
    3. '   ' → logprob: -20.250001907348633
    4. '	i' → logprob: -22.000001907348633
    5. '       ' → logprob: -22.750001907348633
    6. '
' → logprob: -22.875001907348633
    7. ')' → logprob: -23.000001907348633
    8. ')i' → logprob: -23.000001907348633
    9. ' ' → logprob: -23.625001907348633
    10. '           ' → logprob: -23.750001907348633

Token 809: ')' (ID: 8)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1118539348244667
    2. ')' → logprob: -2.361853837966919
    3. '       ' → logprob: -4.486854076385498
    4. '           ' → logprob: -8.48685359954834
    5. ')
' → logprob: -9.36185359954834
    6. ' )
' → logprob: -10.98685359954834
    7. ')

' → logprob: -12.23685359954834
    8. '               ' → logprob: -12.73685359954834
    9. '   ' → logprob: -12.86185359954834
    10. ' )' → logprob: -13.11185359954834

Token 810: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05153966695070267
    2. '
' → logprob: -3.176539659500122
    3. '           ' → logprob: -4.926539897918701
    4. ' if' → logprob: -7.676539897918701
    5. '        
' → logprob: -8.301539421081543
    6. '
' → logprob: -8.926539421081543
    7. '   ' → logprob: -9.676539421081543
    8. 'break' → logprob: -9.926539421081543
    9. ' break' → logprob: -10.301539421081543
    10. ' continue' → logprob: -10.301539421081543

Token 811: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.061518844217061996
    2. 'break' → logprob: -3.311518907546997
    3. ' break' → logprob: -4.311518669128418
    4. '           ' → logprob: -4.686518669128418
    5. '
' → logprob: -8.061518669128418
    6. '   ' → logprob: -9.561518669128418
    7. '        
' → logprob: -9.936518669128418
    8. 'if' → logprob: -10.311518669128418
    9. 'continue' → logprob: -10.561518669128418
    10. ' if' → logprob: -10.811518669128418

Token 812: ' Si' (ID: 7832)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.014369867742061615
    2. ' break' → logprob: -4.264369964599609
    3. '           ' → logprob: -8.51436996459961
    4. 'ans' → logprob: -12.88936996459961
    5. '       ' → logprob: -13.38936996459961
    6. '   ' → logprob: -14.88936996459961
    7. ' ans' → logprob: -14.88936996459961
    8. '	break' → logprob: -14.88936996459961
    9. 'print' → logprob: -15.51436996459961
    10. '               ' → logprob: -15.76436996459961

Token 813: ' oui' (ID: 50908)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6366822719573975
    2. 'ans' → logprob: -1.2616822719573975
    3. ' i' → logprob: -1.8866822719573975
    4. ' ans' → logprob: -4.011682510375977
    5. 'check' → logprob: -5.011682510375977
    6. ' check' → logprob: -5.386682510375977
    7. '           ' → logprob: -6.261682510375977
    8. ' True' → logprob: -6.386682510375977
    9. 'True' → logprob: -6.636682510375977
    10. '
' → logprob: -7.511682510375977

Token 814: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07853707671165466
    2. '       ' → logprob: -3.5785369873046875
    3. 'break' → logprob: -3.7035369873046875
    4. '
' → logprob: -4.2035369873046875
    5. ' break' → logprob: -5.5785369873046875
    6. '               ' → logprob: -6.0785369873046875
    7. '	break' → logprob: -8.203536987304688
    8. ')' → logprob: -8.203536987304688
    9. '\n' → logprob: -8.328536987304688
    10. '            
' → logprob: -8.328536987304688

Token 815: ' on' (ID: 402)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.32429903745651245
    2. ' ans' → logprob: -1.3242990970611572
    3. '           ' → logprob: -5.074298858642578
    4. 'break' → logprob: -5.574298858642578
    5. ' break' → logprob: -7.574298858642578
    6. '(ans' → logprob: -8.324298858642578
    7. '	ans' → logprob: -9.324298858642578
    8. '               ' → logprob: -10.449298858642578
    9. 'answer' → logprob: -10.949298858642578
    10. 'print' → logprob: -11.574298858642578

Token 816: ' met' (ID: 1421)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.707937479019165
    2. 'break' → logprob: -0.832937479019165
    3. '           ' → logprob: -3.332937479019165
    4. ' ans' → logprob: -3.582937479019165
    5. ' break' → logprob: -5.707937240600586
    6. '
' → logprob: -6.332937240600586
    7. '(ans' → logprob: -6.457937240600586
    8. '=' → logprob: -7.082937240600586
    9. '	ans' → logprob: -8.207937240600586
    10. '#' → logprob: -8.332937240600586

Token 817: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.4919188916683197
    2. 'ans' → logprob: -1.241918921470642
    3. ' à' → logprob: -2.9919188022613525
    4. ' ' → logprob: -3.1169188022613525
    5. '```' → logprob: -6.241919040679932
    6. 'aj' → logprob: -6.741919040679932
    7. '   ' → logprob: -7.241919040679932
    8. ' ans' → logprob: -7.491919040679932
    9. '	ans' → logprob: -8.116918563842773
    10. '(ans' → logprob: -8.366918563842773

Token 818: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.000983862322755158
    2. 'i' → logprob: -7.750983715057373
    3. ' jour' → logprob: -8.500984191894531
    4. 'jours' → logprob: -9.125984191894531
    5. '```' → logprob: -9.125984191894531
    6. 'ans' → logprob: -9.375984191894531
    7. 'j' → logprob: -11.250984191894531
    8. 'day' → logprob: -11.375984191894531
    9. 'Jour' → logprob: -11.375984191894531
    10. 'jou' → logprob: -13.000984191894531

Token 819: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0006769311730749905
    2. '(ans' → logprob: -7.500677108764648
    3. ' ans' → logprob: -9.000677108764648
    4. '	ans' → logprob: -14.625677108764648
    5. 'answer' → logprob: -15.750677108764648
    6. '_ans' → logprob: -17.50067710876465
    7. '   ' → logprob: -19.75067710876465
    8. 'i' → logprob: -21.12567710876465
    9. 'ANS' → logprob: -21.25067710876465
    10. 'ann' → logprob: -21.25067710876465

Token 820: ' réponse' (ID: 50332)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -3.7385154428193346e-05
    2. ' ans' → logprob: -10.25003719329834
    3. 'answer' → logprob: -13.25003719329834
    4. '	ans' → logprob: -16.375038146972656
    5. '(ans' → logprob: -17.250038146972656
    6. '_ans' → logprob: -19.125038146972656
    7. '
' → logprob: -19.375038146972656
    8. '```' → logprob: -19.500038146972656
    9. ' ' → logprob: -21.750038146972656
    10. '   ' → logprob: -21.750038146972656

Token 821: ' si' (ID: 1784)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35639262199401855
    2. '           ' → logprob: -1.2313926219940186
    3. 'break' → logprob: -5.481392860412598
    4. ' break' → logprob: -6.481392860412598
    5. '
' → logprob: -6.606392860412598
    6. '        
' → logprob: -8.481392860412598
    7. '<|end|>' → logprob: -8.731392860412598
    8. '               ' → logprob: -8.981392860412598
    9. 'if' → logprob: -9.481392860412598
    10. '   ' → logprob: -9.981392860412598

Token 822: ' i' (ID: 575)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7082951664924622
    2. 'i' → logprob: -1.0832951068878174
    3. ' i' → logprob: -2.2082951068878174
    4. ' ans' → logprob: -2.8332951068878174
    5. '(ans' → logprob: -9.083294868469238
    6. '	ans' → logprob: -9.208294868469238
    7. '   ' → logprob: -9.583294868469238
    8. '```' → logprob: -11.208294868469238
    9. '	i' → logprob: -12.208294868469238
    10. ' ' → logprob: -12.583294868469238

Token 823: ' est' (ID: 893)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4904429614543915
    2. ' >' → logprob: -0.9904429912567139
    3. ' est' → logprob: -4.365442752838135
    4. ' is' → logprob: -6.490442752838135
    5. 'est' → logprob: -7.240442752838135
    6. 'is' → logprob: -7.490442752838135
    7. ')' → logprob: -8.365443229675293
    8. 'a' → logprob: -9.490443229675293
    9. '```' → logprob: -9.615443229675293
    10. '>a' → logprob: -9.740443229675293

Token 824: ' supérieur' (ID: 98491)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3239622116088867
    2. 'plus' → logprob: -1.3239622116088867
    3. 'sup' → logprob: -5.323962211608887
    4. ' plus' → logprob: -5.698962211608887
    5. ' >' → logprob: -6.948962211608887
    6. 'greater' → logprob: -7.198962211608887
    7. ' supérieur' → logprob: -8.073962211608887
    8. 'larg' → logprob: -8.823962211608887
    9. 'super' → logprob: -9.198962211608887
    10. ' supérieure' → logprob: -9.823962211608887

Token 825: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.44184571504592896
    2. ')' → logprob: -1.5668456554412842
    3. ')
' → logprob: -2.816845655441284
    4. 'ans' → logprob: -3.441845655441284
    5. '(ans' → logprob: -3.941845655441284
    6. ',
' → logprob: -4.316845893859863
    7. '           ' → logprob: -5.191845893859863
    8. ',i' → logprob: -5.566845893859863
    9. '(i' → logprob: -5.691845893859863
    10. '),' → logprob: -5.941845893859863

Token 826: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -7.896309739408025e-07
    2. ' ans' → logprob: -14.250000953674316
    3. '	ans' → logprob: -17.75
    4. '(ans' → logprob: -17.875
    5. 'l' → logprob: -18.875
    6. '```' → logprob: -19.875
    7. '   ' → logprob: -21.0
    8. 'answer' → logprob: -21.25
    9. 'i' → logprob: -21.375
    10. '`' → logprob: -22.625

Token 827: ' valeur' (ID: 41664)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.003184125293046236
    2. ' ans' → logprob: -5.7531843185424805
    3. 'answer' → logprob: -12.75318431854248
    4. '	ans' → logprob: -13.37818431854248
    5. '(ans' → logprob: -13.50318431854248
    6. '_ans' → logprob: -14.50318431854248
    7. '   ' → logprob: -17.128183364868164
    8. '```' → logprob: -17.128183364868164
    9. ' ' → logprob: -18.253183364868164
    10. ' answer' → logprob: -18.628183364868164

Token 828: ' actuelle' (ID: 104951)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6727181077003479
    2. '(ans' → logprob: -1.5477180480957031
    3. ' ans' → logprob: -1.9227180480957031
    4. '           ' → logprob: -2.797718048095703
    5. '_ans' → logprob: -4.172718048095703
    6. '   ' → logprob: -4.172718048095703
    7. '       ' → logprob: -4.297718048095703
    8. '	ans' → logprob: -4.922718048095703
    9. '```' → logprob: -5.047718048095703
    10. ' ' → logprob: -5.922718048095703

Token 829: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05301307141780853
    2. '       ' → logprob: -3.3030130863189697
    3. '           ' → logprob: -4.553012847900391
    4. '\n' → logprob: -7.178012847900391
    5. '        
' → logprob: -7.303012847900391
    6. '
' → logprob: -7.553012847900391
    7. '            
' → logprob: -7.803012847900391
    8. 'break' → logprob: -7.928012847900391
    9. '               ' → logprob: -8.30301284790039
    10. ')
' → logprob: -8.30301284790039

Token 830: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008592926897108555
    2. '
' → logprob: -8.000859260559082
    3. '           ' → logprob: -8.500859260559082
    4. ' if' → logprob: -9.000859260559082
    5. '        
' → logprob: -9.375859260559082
    6. '   ' → logprob: -9.625859260559082
    7. 'if' → logprob: -11.125859260559082
    8. '
' → logprob: -11.625859260559082
    9. '```' → logprob: -12.250859260559082
    10. '<|end|>' → logprob: -12.750859260559082

Token 831: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6957772970199585
    2. 'd' → logprob: -1.4457772970199585
    3. 'div' → logprob: -1.9457772970199585
    4. 'if' → logprob: -2.195777416229248
    5. '   ' → logprob: -4.695777416229248
    6. ' if' → logprob: -6.820777416229248
    7. '```' → logprob: -7.695777416229248
    8. ' d' → logprob: -8.69577693939209
    9. ' div' → logprob: -8.94577693939209
    10. '
' → logprob: -9.07077693939209

Token 832: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.505713701248169
    2. 'd' → logprob: -1.755713701248169
    3. 'j' → logprob: -1.880713701248169
    4. 'if' → logprob: -3.255713701248169
    5. 'div' → logprob: -4.00571346282959
    6. '       ' → logprob: -4.88071346282959
    7. 'other' → logprob: -5.25571346282959
    8. ' j' → logprob: -7.38071346282959
    9. ' d' → logprob: -7.63071346282959
    10. '    
' → logprob: -8.88071346282959

Token 833: 'M' (ID: 44)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5371811389923096
    2. 'd' → logprob: -1.0371811389923096
    3. '   ' → logprob: -3.4121811389923096
    4. 'div' → logprob: -4.4121809005737305
    5. ' j' → logprob: -5.0371809005737305
    6. 'if' → logprob: -6.0371809005737305
    7. ' d' → logprob: -6.0371809005737305
    8. 'other' → logprob: -6.2871809005737305
    9. '       ' → logprob: -6.7871809005737305
    10. ' div' → logprob: -7.7871809005737305

Token 834: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.2707363963127136
    2. ' //' → logprob: -1.6457364559173584
    3. '#' → logprob: -3.3957364559173584
    4. '   ' → logprob: -5.270736217498779
    5. '%' → logprob: -6.645736217498779
    6. ' %' → logprob: -6.770736217498779
    7. '/i' → logprob: -7.020736217498779
    8. ' #' → logprob: -7.520736217498779
    9. ' ' → logprob: -8.020736694335938
    10. ')' → logprob: -8.395736694335938

Token 835: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.012557681649923325
    2. ' i' → logprob: -4.387557506561279
    3. '   ' → logprob: -10.887557983398438
    4. ')' → logprob: -11.262557983398438
    5. ' ' → logprob: -12.262557983398438
    6. '(i' → logprob: -12.637557983398438
    7. '[i' → logprob: -13.262557983398438
    8. ' (' → logprob: -13.387557983398438
    9. ')i' → logprob: -13.387557983398438
    10. '	i' → logprob: -14.012557983398438

Token 836: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05423412472009659
    2. ' !=' → logprob: -4.054234027862549
    3. '   ' → logprob: -4.179234027862549
    4. 'if' → logprob: -5.179234027862549
    5. '!=' → logprob: -5.554234027862549
    6. ',' → logprob: -6.304234027862549
    7. ')!=' → logprob: -6.304234027862549
    8. ' ==' → logprob: -6.429234027862549
    9. '==' → logprob: -6.554234027862549
    10. ')==' → logprob: -6.804234027862549

Token 837: ' donne' (ID: 30004)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7115803360939026
    2. '   ' → logprob: -1.7115802764892578
    3. '=' → logprob: -2.086580276489258
    4. ' =' → logprob: -2.461580276489258
    5. ' if' → logprob: -2.961580276489258
    6. '       ' → logprob: -3.461580276489258
    7. 'div' → logprob: -4.336580276489258
    8. '==' → logprob: -5.336580276489258
    9. ' !=' → logprob: -5.461580276489258
    10. '!=' → logprob: -5.461580276489258

Token 838: ' l' (ID: 305)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.9354532957077026
    2. '(M' → logprob: -1.0604532957077026
    3. ' M' → logprob: -1.4354532957077026
    4. ' (' → logprob: -4.685453414916992
    5. ')' → logprob: -5.310453414916992
    6. '   ' → logprob: -6.310453414916992
    7. ',' → logprob: -6.935453414916992
    8. '1' → logprob: -7.060453414916992
    9. ' ' → logprob: -7.060453414916992
    10. '=M' → logprob: -7.685453414916992

Token 839: ''autre' (ID: 52145)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1395785808563232
    2. ')' → logprob: -1.5145785808563232
    3. 'd' → logprob: -2.2645785808563232
    4. ' ' → logprob: -3.0145785808563232
    5. '```' → logprob: -3.1395785808563232
    6. '(M' → logprob: -3.3895785808563232
    7. ']' → logprob: -3.5145785808563232
    8. 'div' → logprob: -3.6395785808563232
    9. '   ' → logprob: -3.8895785808563232
    10. ',' → logprob: -3.8895785808563232

Token 840: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.048795148730278015
    2. ' divisor' → logprob: -4.048795223236084
    3. 'if' → logprob: -4.673795223236084
    4. ' div' → logprob: -5.048795223236084
    5. '_div' → logprob: -5.173795223236084
    6. ' if' → logprob: -5.423795223236084
    7. ' divis' → logprob: -6.923795223236084
    8. '
' → logprob: -7.298795223236084
    9. 'd' → logprob: -7.298795223236084
    10. '	div' → logprob: -8.548794746398926

Token 841: 'iseur' (ID: 108637)
  Prédit: 'iseur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iseur' → logprob: -0.0007755621336400509
    2. 'isor' → logprob: -8.250775337219238
    3. 'ise' → logprob: -8.500775337219238
    4. 'isateur' → logprob: -8.750775337219238
    5. '   ' → logprob: -10.250775337219238
    6. 'is' → logprob: -10.500775337219238
    7. 'isé' → logprob: -10.500775337219238
    8. 'iser' → logprob: -11.250775337219238
    9. 'i' → logprob: -11.250775337219238
    10. 'isseur' → logprob: -11.625775337219238

Token 842: ' complément' (ID: 81265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19895291328430176
    2. '   ' → logprob: -2.0739529132843018
    3. ' =' → logprob: -3.5739529132843018
    4. ' if' → logprob: -4.448952674865723
    5. ',' → logprob: -5.323952674865723
    6. '=' → logprob: -5.448952674865723
    7. 'if' → logprob: -5.698952674865723
    8. 'd' → logprob: -7.573952674865723
    9. 'div' → logprob: -7.573952674865723
    10. '<|end|>' → logprob: -8.323952674865723

Token 843: 'aire' (ID: 8189)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.583693265914917
    2. '   ' → logprob: -1.458693265914917
    3. 'e' → logprob: -2.208693265914917
    4. ',' → logprob: -3.708693265914917
    5. '=' → logprob: -4.083693504333496
    6. 'if' → logprob: -4.458693504333496
    7. 'aire' → logprob: -4.708693504333496
    8. ')' → logprob: -4.833693504333496
    9. 'div' → logprob: -5.333693504333496
    10. '           ' → logprob: -5.458693504333496

Token 844: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12549130618572235
    2. '   ' → logprob: -2.2504913806915283
    3. '<|end|>' → logprob: -5.750491142272949
    4. '=' → logprob: -6.375491142272949
    5. '        
' → logprob: -6.375491142272949
    6. ' =' → logprob: -6.500491142272949
    7. ' if' → logprob: -7.125491142272949
    8. ',' → logprob: -7.375491142272949
    9. ')' → logprob: -7.500491142272949
    10. '<|end|>' → logprob: -7.875491142272949

Token 845: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23211894929409027
    2. '       ' → logprob: -1.6071189641952515
    3. ' if' → logprob: -5.982119083404541
    4. '<|end|>' → logprob: -6.357119083404541
    5. '```' → logprob: -6.607119083404541
    6. ':' → logprob: -7.857119083404541
    7. ',' → logprob: -9.232118606567383
    8. ' ' → logprob: -9.607118606567383
    9. '  ' → logprob: -9.732118606567383
    10. ' and' → logprob: -9.857118606567383

Token 846: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2242272049188614
    2. '       ' → logprob: -1.7242271900177002
    3. ' if' → logprob: -4.474227428436279
    4. '```' → logprob: -4.849227428436279
    5. '<|end|>' → logprob: -6.224227428436279
    6. 'if' (adapté à ' if') → logprob: -7.099227428436279
    7. '
' → logprob: -8.724226951599121
    8. ' ' → logprob: -9.474226951599121
    9. '``' → logprob: -9.599226951599121
    10. '        
' → logprob: -9.974226951599121

Token 847: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -1.00510835647583
    2. 'check' → logprob: -1.25510835647583
    3. ' check' → logprob: -1.63010835647583
    4. ' M' → logprob: -1.88010835647583
    5. ' ' → logprob: -9.130107879638672
    6. 'i' → logprob: -9.505107879638672
    7. ' i' → logprob: -9.755107879638672
    8. '   ' → logprob: -9.755107879638672
    9. '(M' → logprob: -10.130107879638672
    10. '(check' → logprob: -10.255107879638672

Token 848: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.2816871702671051
    2. ' %' → logprob: -1.4066871404647827
    3. '//' → logprob: -8.281686782836914
    4. ' //' → logprob: -8.656686782836914
    5. '%i' → logprob: -9.656686782836914
    6. '%s' → logprob: -11.531686782836914
    7. ' ' → logprob: -12.031686782836914
    8. ' ' → logprob: -12.031686782836914
    9. '%d' → logprob: -12.406686782836914
    10. '   ' → logprob: -12.531686782836914

Token 849: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.13215313851833344
    2. '(i' → logprob: -2.757153034210205
    3. ' (' → logprob: -3.257153034210205
    4. '(M' → logprob: -3.882153034210205
    5. ' i' → logprob: -7.007153034210205
    6. '(' → logprob: -8.507153511047363
    7. '(int' → logprob: -11.257153511047363
    8. '```' → logprob: -11.507153511047363
    9. '((' → logprob: -11.694653511047363
    10. '   ' → logprob: -11.757153511047363

Token 850: 'M' (ID: 44)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1841961145401001
    2. '(M' → logprob: -1.9341961145401
    3. 'M' → logprob: -3.8091959953308105
    4. '(i' → logprob: -6.6841959953308105
    5. ' (' → logprob: -8.559196472167969
    6. ' i' → logprob: -10.184196472167969
    7. '   ' → logprob: -11.434196472167969
    8. ' M' → logprob: -11.684196472167969
    9. 'int' → logprob: -12.684196472167969
    10. '(' → logprob: -12.684196472167969

Token 851: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.0037244230043143034
    2. ' //' → logprob: -5.628724575042725
    3. '#' → logprob: -9.878724098205566
    4. '   ' → logprob: -10.378724098205566
    5. 'i' → logprob: -10.753724098205566
    6. '(i' → logprob: -11.753724098205566
    7. ' ' → logprob: -12.128724098205566
    8. '/i' → logprob: -12.628724098205566
    9. ' ' → logprob: -13.503724098205566
    10. '[i' → logprob: -14.128724098205566

Token 852: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7075554728507996
    2. '(M' → logprob: -0.8325554728507996
    3. ' (' → logprob: -2.7075555324554443
    4. ' i' → logprob: -5.832555294036865
    5. '(i' → logprob: -6.207555294036865
    6. '(' → logprob: -8.207555770874023
    7. ' ' → logprob: -8.832555770874023
    8. '   ' → logprob: -9.207555770874023
    9. '((' → logprob: -10.957555770874023
    10. '_i' → logprob: -12.082555770874023

Token 853: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009813627693802118
    2. ')==' → logprob: -7.000981330871582
    3. '==' → logprob: -9.750981330871582
    4. ' )' → logprob: -11.500981330871582
    5. ' ==' → logprob: -15.000981330871582
    6. '`)' → logprob: -15.375981330871582
    7. '）' → logprob: -15.500981330871582
    8. '")' → logprob: -15.750981330871582
    9. '')' → logprob: -16.0009822845459
    10. ' ' → logprob: -16.0009822845459

Token 854: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02055543102324009
    2. ' ==' → logprob: -3.8955554962158203
    3. '==
' → logprob: -11.52055549621582
    4. '===' → logprob: -13.52055549621582
    5. ')==' → logprob: -13.77055549621582
    6. '=' → logprob: -14.02055549621582
    7. '()==' → logprob: -15.77055549621582
    8. ']==' → logprob: -16.02055549621582
    9. '```' → logprob: -16.77055549621582
    10. ' ' → logprob: -17.77055549621582

Token 855: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014096579980105162
    2. ' ' → logprob: -8.875141143798828
    3. '   ' → logprob: -14.375141143798828
    4. '  ' → logprob: -16.250141143798828
    5. '     ' → logprob: -16.625141143798828
    6. '    ' → logprob: -17.000141143798828
    7. '       ' → logprob: -17.062641143798828
    8. '	' → logprob: -17.187641143798828
    9. '=' → logprob: -17.562641143798828
    10. '==' → logprob: -18.062641143798828

Token 856: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.214019307051785e-05
    2. ' ' → logprob: -10.375032424926758
    3. '   ' → logprob: -14.937532424926758
    4. '  ' → logprob: -16.562532424926758
    5. '(' → logprob: -16.562532424926758
    6. '00' → logprob: -17.000032424926758
    7. '     ' → logprob: -17.125032424926758
    8. '۰' → logprob: -17.187532424926758
    9. ' (' → logprob: -17.312532424926758
    10. 'i' → logprob: -17.437532424926758

Token 857: ':' (ID: 25)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02299504168331623
    2. ':
' → logprob: -4.5229949951171875
    3. '       ' → logprob: -5.2729949951171875
    4. ':' → logprob: -5.3979949951171875
    5. 'and' → logprob: -6.2729949951171875
    6. '   ' → logprob: -8.147994995117188
    7. ' :
' → logprob: -11.522994995117188
    8. '<|end|>' → logprob: -11.897994995117188
    9. '	and' → logprob: -12.022994995117188
    10. ' ' → logprob: -12.522994995117188

Token 858: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010785412741824985
    2. '   ' → logprob: -7.8760786056518555
    3. '<|end|>' → logprob: -8.001078605651855
    4. ' if' → logprob: -8.251078605651855
    5. '<|end|>' → logprob: -11.126078605651855
    6. '```' → logprob: -11.251078605651855
    7. ' and' → logprob: -11.376078605651855
    8. 'if' → logprob: -11.376078605651855
    9. '
' → logprob: -11.626078605651855
    10. '        
' → logprob: -12.126078605651855

Token 859: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010663634166121483
    2. 'if' → logprob: -5.1356635093688965
    3. ' if' → logprob: -5.3856635093688965
    4. '   ' → logprob: -9.135663986206055
    5. '
' → logprob: -11.010663986206055
    6. '           ' → logprob: -12.135663986206055
    7. ' and' → logprob: -12.385663986206055
    8. '	' → logprob: -13.385663986206055
    9. '	if' → logprob: -13.760663986206055
    10. '```' → logprob: -13.760663986206055

Token 860: ' Si' (ID: 7832)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010234209708869457
    2. ' if' → logprob: -4.760234355926514
    3. 'if' → logprob: -6.635234355926514
    4. '   ' → logprob: -8.385233879089355
    5. '<|end|>' → logprob: -10.635233879089355
    6. ' and' → logprob: -11.635233879089355
    7. '	' → logprob: -11.760233879089355
    8. '           ' → logprob: -11.760233879089355
    9. '```' → logprob: -12.135233879089355
    10. '	   ' → logprob: -12.635233879089355

Token 861: ' (' (ID: 350)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.20254793763160706
    2. ' check' → logprob: -1.7025479078292847
    3. 'M' → logprob: -7.702548027038574
    4. ' M' → logprob: -8.577548027038574
    5. 'i' → logprob: -8.827548027038574
    6. '   ' → logprob: -9.327548027038574
    7. '(M' → logprob: -9.702548027038574
    8. '(check' → logprob: -9.702548027038574
    9. ' i' → logprob: -9.827548027038574
    10. ' (' → logprob: -9.952548027038574

Token 862: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.05629273131489754
    2. '(M' → logprob: -2.931292772293091
    3. ' (' → logprob: -7.431292533874512
    4. ' M' → logprob: -7.431292533874512
    5. '   ' → logprob: -8.681292533874512
    6. '(' → logprob: -10.431292533874512
    7. ' ' → logprob: -11.681292533874512
    8. '  ' → logprob: -12.556292533874512
    9. '       ' → logprob: -13.306292533874512
    10. 'check' → logprob: -13.431292533874512

Token 863: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.5767515897750854
    2. ' //' → logprob: -0.8267515897750854
    3. '#' → logprob: -8.326751708984375
    4. ' ' → logprob: -8.326751708984375
    5. ')' → logprob: -8.576751708984375
    6. ' ' → logprob: -10.201751708984375
    7. '```' → logprob: -10.326751708984375
    8. '   ' → logprob: -10.576751708984375
    9. ' !=' → logprob: -11.451751708984375
    10. ' #' → logprob: -11.826751708984375

Token 864: ' i' (ID: 575)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.5686906576156616
    2. 'i' → logprob: -1.0686906576156616
    3. ' (' → logprob: -2.443690776824951
    4. ' i' → logprob: -6.318690776824951
    5. '(i' → logprob: -7.068690776824951
    6. '(' → logprob: -7.943690776824951
    7. '   ' → logprob: -8.318690299987793
    8. ' ' → logprob: -9.568690299987793
    9. 'M' → logprob: -10.943690299987793
    10. '((' → logprob: -11.068690299987793

Token 865: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021004145964980125
    2. ')!=' → logprob: -4.8960041999816895
    3. ' !=' → logprob: -5.0210041999816895
    4. '!=' → logprob: -5.0210041999816895
    5. ' )' → logprob: -9.646003723144531
    6. '   ' → logprob: -10.771003723144531
    7. '```' → logprob: -11.646003723144531
    8. ')==' → logprob: -11.771003723144531
    9. '==' → logprob: -12.521003723144531
    10. ']!=' → logprob: -13.896003723144531

Token 866: ' est' (ID: 893)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.28405052423477173
    2. '!=' → logprob: -1.534050464630127
    3. ' and' → logprob: -3.659050464630127
    4. 'and' → logprob: -5.659050464630127
    5. '   ' → logprob: -7.034050464630127
    6. ' ==' → logprob: -7.159050464630127
    7. '==' → logprob: -7.534050464630127
    8. ':' → logprob: -9.409050941467285
    9. ':
' → logprob: -10.534050941467285
    10. ')' → logprob: -11.034050941467285

Token 867: ' un' (ID: 537)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05237467214465141
    2. '!=' → logprob: -3.3023746013641357
    3. 'check' → logprob: -5.552374839782715
    4. '1' → logprob: -5.927374839782715
    5. ' ' → logprob: -6.052374839782715
    6. 'not' → logprob: -6.302374839782715
    7. ' !=' → logprob: -6.802374839782715
    8. 'i' → logprob: -7.302374839782715
    9. 'M' → logprob: -7.677374839782715
    10. 'div' → logprob: -8.302374839782715

Token 868: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.0006417844560928643
    2. '1' → logprob: -8.375641822814941
    3. '   ' → logprob: -8.625641822814941
    4. 'i' → logprob: -9.125641822814941
    5. 'd' → logprob: -9.750641822814941
    6. '```' → logprob: -11.000641822814941
    7. 'check' → logprob: -11.625641822814941
    8. '       ' → logprob: -12.000641822814941
    9. '0' → logprob: -12.125641822814941
    10. ' div' → logprob: -12.250641822814941

Token 869: 'iseur' (ID: 108637)
  Prédit: 'iseur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iseur' → logprob: -7.398067828034982e-05
    2. 'isor' → logprob: -10.37507438659668
    3. 'isateur' → logprob: -11.62507438659668
    4. 'isible' → logprob: -11.87507438659668
    5. 'ise' → logprob: -12.00007438659668
    6. 'isseur' → logprob: -12.12507438659668
    7. 'iteur' → logprob: -12.50007438659668
    8. '```' → logprob: -13.37507438659668
    9. 'is' → logprob: -13.50007438659668
    10. 'ieur' → logprob: -13.62507438659668

Token 870: ' de' (ID: 334)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05510060861706734
    2. 'and' → logprob: -3.180100679397583
    3. '   ' → logprob: -4.930100440979004
    4. '       ' → logprob: -5.555100440979004
    5. ':
' → logprob: -7.680100440979004
    6. ':' → logprob: -7.805100440979004
    7. '=' → logprob: -11.805100440979004
    8. '           ' → logprob: -11.930100440979004
    9. 'et' → logprob: -12.055100440979004
    10. ')' → logprob: -12.430100440979004

Token 871: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.005457866471260786
    2. '(M' → logprob: -5.755457878112793
    3. ' M' → logprob: -6.255457878112793
    4. 'i' → logprob: -8.255457878112793
    5. ' (' → logprob: -9.755457878112793
    6. '(' → logprob: -11.255457878112793
    7. '   ' → logprob: -11.380457878112793
    8. ' ' → logprob: -12.505457878112793
    9. ' i' → logprob: -12.630457878112793
    10. '1' → logprob: -12.880457878112793

Token 872: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4357988238334656
    2. ' and' → logprob: -1.9357988834381104
    3. ':' → logprob: -2.0607988834381104
    4. ':
' → logprob: -2.5607988834381104
    5. '   ' → logprob: -5.935798645019531
    6. 'and' → logprob: -7.560798645019531
    7. ' :
' → logprob: -8.060798645019531
    8. ',' → logprob: -8.310798645019531
    9. '):
' → logprob: -8.435798645019531
    10. ' :' → logprob: -9.560798645019531

Token 873: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14917676150798798
    2. ' and' → logprob: -2.024176836013794
    3. 'and' → logprob: -6.149176597595215
    4. ':' → logprob: -6.774176597595215
    5. ':
' → logprob: -6.899176597595215
    6. '<|end|>' → logprob: -7.149176597595215
    7. '   ' → logprob: -7.524176597595215
    8. '```' → logprob: -7.774176597595215
    9. ' if' → logprob: -8.399176597595215
    10. '<|end|>' → logprob: -9.649176597595215

Token 874: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09167057275772095
    2. '       ' → logprob: -2.716670513153076
    3. ' if' → logprob: -3.841670513153076
    4. '   ' → logprob: -10.966670989990234
    5. '	if' → logprob: -11.091670989990234
    6. '           ' → logprob: -12.466670989990234
    7. '	' → logprob: -12.841670989990234
    8. '```' → logprob: -13.716670989990234
    9. '
' → logprob: -14.091670989990234
    10. '	   ' → logprob: -14.841670989990234

Token 875: ' Ici' (ID: 145754)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2041773945093155
    2. '       ' → logprob: -2.0791773796081543
    3. ' if' → logprob: -2.8291773796081543
    4. '   ' → logprob: -7.579177379608154
    5. '           ' → logprob: -10.079177856445312
    6. '```' → logprob: -10.954177856445312
    7. '	if' → logprob: -11.829177856445312
    8. ' ' → logprob: -12.704177856445312
    9. '
' → logprob: -12.829177856445312
    10. '	' → logprob: -14.079177856445312

Token 876: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03420780226588249
    2. 'if' → logprob: -4.034207820892334
    3. ' if' → logprob: -4.159207820892334
    4. '           ' → logprob: -8.534207344055176
    5. '   ' → logprob: -9.284207344055176
    6. '
' → logprob: -11.909207344055176
    7. '```' → logprob: -12.659207344055176
    8. '     ' → logprob: -13.034207344055176
    9. '        
' → logprob: -13.284207344055176
    10. ',' → logprob: -13.534207344055176

Token 877: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3878939151763916
    2. 'if' → logprob: -1.3878939151763916
    3. ' if' → logprob: -2.6378939151763916
    4. '           ' → logprob: -8.262893676757812
    5. '   ' → logprob: -9.512893676757812
    6. '```' → logprob: -10.262893676757812
    7. '	if' → logprob: -11.012893676757812
    8. '	   ' → logprob: -12.637893676757812
    9. '	' → logprob: -12.762893676757812
    10. '
' → logprob: -13.012893676757812

Token 878: ' vér' (ID: 42524)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8364575505256653
    2. ' if' → logprob: -0.9614575505256653
    3. '       ' → logprob: -1.7114574909210205
    4. '   ' → logprob: -6.2114577293396
    5. '        
' → logprob: -7.9614577293396
    6. ' check' → logprob: -8.211457252502441
    7. '           ' → logprob: -8.211457252502441
    8. '
' → logprob: -8.461457252502441
    9. 'check' → logprob: -8.961457252502441
    10. '```' → logprob: -9.336457252502441

Token 879: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.00029756641015410423
    2. 'if' → logprob: -8.500297546386719
    3. '   ' → logprob: -10.625297546386719
    4. '```' → logprob: -11.000297546386719
    5. 'ère' → logprob: -11.250297546386719
    6. 'f' → logprob: -11.375297546386719
    7. 'ife' → logprob: -11.500297546386719
    8. '#' → logprob: -12.750297546386719
    9. 'e' → logprob: -12.875297546386719
    10. '
' → logprob: -13.250297546386719

Token 880: ' si' (ID: 1784)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.389121413230896
    2. 'if' → logprob: -1.389121413230896
    3. ' if' → logprob: -2.6391215324401855
    4. '           ' → logprob: -7.1391215324401855
    5. 'check' → logprob: -7.6391215324401855
    6. ' check' → logprob: -8.514121055603027
    7. '   ' → logprob: -9.264121055603027
    8. 'not' → logprob: -11.014121055603027
    9. '(check' → logprob: -11.389121055603027
    10. '
' → logprob: -11.764121055603027

Token 881: ' le' (ID: 505)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.04867934063076973
    2. ' check' → logprob: -3.0486793518066406
    3. '   ' → logprob: -10.42367935180664
    4. '       ' → logprob: -10.54867935180664
    5. 'M' → logprob: -11.79867935180664
    6. '(check' → logprob: -12.04867935180664
    7. ' M' → logprob: -12.17367935180664
    8. 'i' → logprob: -12.54867935180664
    9. '           ' → logprob: -12.92367935180664
    10. ' ' → logprob: -12.92367935180664

Token 882: ' div' (ID: 4223)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.0019361276645213366
    2. ' check' → logprob: -6.251935958862305
    3. 'M' → logprob: -13.126935958862305
    4. 'i' → logprob: -13.376935958862305
    5. ' M' → logprob: -13.751935958862305
    6. '   ' → logprob: -14.001935958862305
    7. '(check' → logprob: -14.251935958862305
    8. 'ans' → logprob: -14.751935958862305
    9. ' ' → logprob: -15.751935958862305
    10. '       ' → logprob: -15.876935958862305

Token 883: 'iseur' (ID: 108637)
  Prédit: 'iseur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iseur' → logprob: -0.0027257020119577646
    2. 'isor' → logprob: -6.377725601196289
    3. 'is' → logprob: -7.627725601196289
    4. 'ise' → logprob: -9.252725601196289
    5. 'vise' → logprob: -9.377725601196289
    6. '   ' → logprob: -9.752725601196289
    7. 'isseur' → logprob: -9.752725601196289
    8. 'isateur' → logprob: -10.127725601196289
    9. 'i' → logprob: -10.377725601196289
    10. '(M' → logprob: -10.502725601196289

Token 884: ' complément' (ID: 81265)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.5164622068405151
    2. ' !=' → logprob: -1.8914622068405151
    3. '!=' → logprob: -2.7664623260498047
    4. '       ' → logprob: -3.3914623260498047
    5. '=' → logprob: -3.6414623260498047
    6. ' (' → logprob: -3.8914623260498047
    7. ' =' → logprob: -4.141462326049805
    8. 'M' → logprob: -4.266462326049805
    9. '   ' → logprob: -4.516462326049805
    10. 'd' → logprob: -4.766462326049805

Token 885: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.0019970352295786142
    2. '#' → logprob: -7.251996994018555
    3. 'ier' → logprob: -7.751996994018555
    4. '   ' → logprob: -8.751996994018555
    5. '=' → logprob: -8.876996994018555
    6. 'if' → logprob: -9.251996994018555
    7. ' i' → logprob: -9.501996994018555
    8. 'i' → logprob: -9.626996994018555
    9. 'ière' → logprob: -10.376996994018555
    10. ' =' → logprob: -10.501996994018555

Token 886: ' donne' (ID: 30004)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4224868714809418
    2. ' !=' → logprob: -1.5474869012832642
    3. '!=' → logprob: -3.4224867820739746
    4. ' ==' → logprob: -3.7974867820739746
    5. '==' → logprob: -4.172486782073975
    6. '           ' → logprob: -4.672486782073975
    7. '=' → logprob: -5.047486782073975
    8. ')' → logprob: -5.047486782073975
    9. 'if' → logprob: -5.172486782073975
    10. ' (' → logprob: -5.172486782073975

Token 887: ' un' (ID: 537)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.013286811299622059
    2. ' check' → logprob: -4.388286590576172
    3. '       ' → logprob: -7.638286590576172
    4. '   ' → logprob: -8.888286590576172
    5. '           ' → logprob: -9.013286590576172
    6. '(check' → logprob: -11.138286590576172
    7. 'not' → logprob: -12.263286590576172
    8. '          ' → logprob: -13.013286590576172
    9. 'if' → logprob: -13.263286590576172
    10. '               ' → logprob: -13.263286590576172

Token 888: ' meilleur' (ID: 37552)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.06027698516845703
    2. 'if' → logprob: -3.435276985168457
    3. ' check' → logprob: -4.060276985168457
    4. 'True' → logprob: -5.435276985168457
    5. '```' → logprob: -6.310276985168457
    6. ' if' → logprob: -7.310276985168457
    7. ' True' → logprob: -7.435276985168457
    8. '   ' → logprob: -7.560276985168457
    9. 'result' → logprob: -8.435276985168457
    10. 'valid' → logprob: -8.685276985168457

Token 889: ' résultat' (ID: 62556)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11474931240081787
    2. ' if' → logprob: -2.2397494316101074
    3. 'result' → logprob: -6.989749431610107
    4. 'ans' → logprob: -7.864749431610107
    5. '   ' → logprob: -9.23974895477295
    6. 'div' → logprob: -9.61474895477295
    7. '```' → logprob: -9.61474895477295
    8. ' résultat' → logprob: -9.73974895477295
    9. '           ' → logprob: -9.86474895477295
    10. ' result' → logprob: -10.36474895477295

Token 890: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011614117538556457
    2. ' and' → logprob: -6.876161575317383
    3. ' if' → logprob: -9.626161575317383
    4. '           ' → logprob: -11.126161575317383
    5. 'and' → logprob: -11.251161575317383
    6. ':' → logprob: -11.626161575317383
    7. ':
' → logprob: -12.126161575317383
    8. ',' → logprob: -12.376161575317383
    9. '<|end|>' → logprob: -12.751161575317383
    10. '   ' → logprob: -13.001161575317383

Token 891: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.457669562427327e-05
    2. ' if' → logprob: -10.62507438659668
    3. '   ' → logprob: -10.87507438659668
    4. '```' → logprob: -11.00007438659668
    5. 'if' → logprob: -11.37507438659668
    6. '           ' → logprob: -13.50007438659668
    7. '<|end|>' → logprob: -14.50007438659668
    8. '
' → logprob: -14.62507438659668
    9. '{
' → logprob: -15.62507438659668
    10. '``' → logprob: -16.00007438659668

Token 892: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07907705008983612
    2. 'if' (adapté à ' if') → logprob: -2.8290770053863525
    3. ' if' → logprob: -4.079077243804932
    4. '   ' → logprob: -10.954076766967773
    5. '```' → logprob: -11.329076766967773
    6. '           ' → logprob: -12.204076766967773
    7. '	if' → logprob: -12.954076766967773
    8. '	' → logprob: -13.079076766967773
    9. ' ' → logprob: -15.079076766967773
    10. '	   ' → logprob: -15.329076766967773

Token 893: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.4740799069404602
    2. ' check' → logprob: -0.9740799069404602
    3. '   ' → logprob: -13.849080085754395
    4. ' ' → logprob: -14.599080085754395
    5. '(check' → logprob: -14.974080085754395
    6. '	check' → logprob: -14.974080085754395
    7. 'chec' → logprob: -15.599080085754395
    8. '  ' → logprob: -16.099079132080078
    9. '    ' → logprob: -16.474079132080078
    10. '       ' → logprob: -16.599079132080078

Token 894: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.0006327360169962049
    2. '((' → logprob: -7.3756327629089355
    3. '(' → logprob: -12.625632286071777
    4. ' (' → logprob: -13.750632286071777
    5. 'M' → logprob: -14.000632286071777
    6. '   ' → logprob: -14.250632286071777
    7. '       ' → logprob: -17.000633239746094
    8. '(
' → logprob: -17.000633239746094
    9. '           ' → logprob: -17.250633239746094
    10. '```' → logprob: -17.375633239746094

Token 895: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.009763291105628014
    2. ' //' → logprob: -4.634763240814209
    3. '#' → logprob: -12.009763717651367
    4. '   ' → logprob: -14.634763717651367
    5. '[i' → logprob: -15.384763717651367
    6. '//=' → logprob: -15.634763717651367
    7. '/i' → logprob: -15.884763717651367
    8. ' ' → logprob: -16.259763717651367
    9. '	' → logprob: -16.759763717651367
    10. '```' → logprob: -16.759763717651367

Token 896: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007099286303855479
    2. ' i' → logprob: -7.2507100105285645
    3. '   ' → logprob: -17.875709533691406
    4. '	i' → logprob: -18.125709533691406
    5. ' ' → logprob: -18.750709533691406
    6. '```' → logprob: -20.125709533691406
    7. ')i' → logprob: -20.125709533691406
    8. ')' → logprob: -20.875709533691406
    9. '_i' → logprob: -21.125709533691406
    10. '  ' → logprob: -21.125709533691406

Token 897: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.254117488861084
    2. '):
' → logprob: -1.504117488861084
    3. '):
' → logprob: -6.254117488861084
    4. ')' → logprob: -8.504117965698242
    5. '):

' → logprob: -10.504117965698242
    6. '       ' → logprob: -11.504117965698242
    7. '   ' → logprob: -11.629117965698242
    8. ' ):' → logprob: -12.004117965698242
    9. ' ):
' → logprob: -13.379117965698242
    10. '):

' → logprob: -13.879117965698242

Token 898: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009141792543232441
    2. ' ans' → logprob: -4.75914192199707
    3. 'ans' → logprob: -7.63414192199707
    4. '       ' → logprob: -10.50914192199707
    5. '               ' → logprob: -12.63414192199707
    6. '```' → logprob: -13.00914192199707
    7. ' and' → logprob: -13.50914192199707
    8. '          ' → logprob: -13.50914192199707
    9. '(ans' → logprob: -13.50914192199707
    10. '   ' → logprob: -13.88414192199707

Token 899: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0005570820067077875
    2. ' ans' → logprob: -7.500556945800781
    3. '           ' → logprob: -12.500556945800781
    4. '	ans' → logprob: -15.625556945800781
    5. 'answer' → logprob: -16.12555694580078
    6. '       ' → logprob: -17.12555694580078
    7. '   ' → logprob: -17.50055694580078
    8. '(ans' → logprob: -17.87555694580078
    9. '               ' → logprob: -18.62555694580078
    10. '```' → logprob: -19.37555694580078

Token 900: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868710398674011
    2. '=' → logprob: -1.136871099472046
    3. '=max' → logprob: -17.761871337890625
    4. '   ' → logprob: -19.011871337890625
    5. '＝' → logprob: -19.386871337890625
    6. '	' → logprob: -19.886871337890625
    7. ' ' → logprob: -19.886871337890625
    8. ')=' → logprob: -20.511871337890625
    9. '=

' → logprob: -20.886871337890625
    10. ')' → logprob: -20.886871337890625

Token 901: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3133218288421631
    2. ' max' → logprob: -1.313321828842163
    3. ' M' → logprob: -10.313322067260742
    4. 'M' → logprob: -10.563322067260742
    5. '(max' → logprob: -14.063322067260742
    6. ' ' → logprob: -16.438322067260742
    7. '	max' → logprob: -17.063322067260742
    8. '   ' → logprob: -17.188322067260742
    9. ' ' → logprob: -17.938322067260742
    10. '(M' → logprob: -18.063322067260742

Token 902: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -2.935296834039036e-06
    2. 'ans' → logprob: -13.25000286102295
    3. '(' → logprob: -13.75000286102295
    4. '	ans' → logprob: -20.000003814697266
    5. '(answer' → logprob: -20.250003814697266
    6. ' ans' → logprob: -21.000003814697266
    7. '(
' → logprob: -21.250003814697266
    8. ' (' → logprob: -22.625003814697266
    9. '(ord' → logprob: -22.625003814697266
    10. 'ANS' → logprob: -22.875003814697266

Token 903: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016553020104765892
    2. '(ans' → logprob: -7.126655101776123
    3. 'ans' → logprob: -7.251655101776123
    4. ' ans' → logprob: -9.001655578613281
    5. ' ,' → logprob: -11.126655578613281
    6. 'Ans' → logprob: -14.001655578613281
    7. '   ' → logprob: -14.751655578613281
    8. '           ' → logprob: -14.876655578613281
    9. '	ans' → logprob: -15.001655578613281
    10. ')' → logprob: -15.251655578613281

Token 904: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.1002139002084732
    2. ' M' → logprob: -2.3502140045166016
    3. '(M' → logprob: -12.100214004516602
    4. ' ' → logprob: -13.975214004516602
    5. ' (' → logprob: -14.475214004516602
    6. '   ' → logprob: -15.600214004516602
    7. ' ' → logprob: -16.2252140045166
    8. '    ' → logprob: -17.4752140045166
    9. '  ' → logprob: -17.6002140045166
    10. '(' → logprob: -18.3502140045166

Token 905: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.11287778615951538
    2. '//' → logprob: -2.23787784576416
    3. ' ' → logprob: -10.73787784576416
    4. ' ' → logprob: -11.23787784576416
    5. '#' → logprob: -11.36287784576416
    6. '   ' → logprob: -12.61287784576416
    7. ' #' → logprob: -12.86287784576416
    8. '  ' → logprob: -14.48787784576416
    9. '	' → logprob: -14.86287784576416
    10. ' /' → logprob: -14.98787784576416

Token 906: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03806157782673836
    2. ' i' → logprob: -3.2880616188049316
    3. ' ' → logprob: -11.038061141967773
    4. ' ' → logprob: -13.538061141967773
    5. '_i' → logprob: -14.163061141967773
    6. '	i' → logprob: -14.163061141967773
    7. '   ' → logprob: -14.538061141967773
    8. '  ' → logprob: -15.850561141967773
    9. ')' → logprob: -16.038061141967773
    10. 'd' → logprob: -16.100561141967773

Token 907: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.040457421680912e-05
    2. ')
' → logprob: -9.625070571899414
    3. ' )' → logprob: -13.250070571899414
    4. '   ' → logprob: -13.750070571899414
    5. ')

' → logprob: -14.000070571899414
    6. ')
' → logprob: -15.875070571899414
    7. ')`' → logprob: -16.125070571899414
    8. '       ' → logprob: -16.250070571899414
    9. ')#' → logprob: -16.875070571899414
    10. '))' → logprob: -17.000070571899414

Token 908: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0015180727932602167
    2. '
' → logprob: -6.501518249511719
    3. ' print' → logprob: -12.126518249511719
    4. '    
' → logprob: -12.751518249511719
    5. '```' → logprob: -12.751518249511719
    6. '  
' → logprob: -13.751518249511719
    7. '   ' → logprob: -14.126518249511719
    8. '

' → logprob: -14.126518249511719
    9. '        
' → logprob: -14.876518249511719
    10. 'break' → logprob: -14.876518249511719

Token 909: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.802462100982666
    2. '   ' → logprob: -1.802462100982666
    3. '       ' → logprob: -2.177462100982666
    4. '```' → logprob: -2.802462100982666
    5. '\n' → logprob: -2.927462100982666
    6. '<|end|>' → logprob: -3.052462100982666
    7. ')
' → logprob: -4.052462100982666
    8. '
' → logprob: -4.177462100982666
    9. '           ' → logprob: -4.802462100982666
    10. ' 
' → logprob: -4.927462100982666

Token 910: ' Mise' (ID: 157932)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.6308319568634033
    2. ' break' → logprob: -1.5058319568634033
    3. '           ' → logprob: -2.1308319568634033
    4. '       ' → logprob: -3.2558319568634033
    5. ' pass' → logprob: -3.5058319568634033
    6. '   ' → logprob: -4.255831718444824
    7. 'pass' → logprob: -4.380831718444824
    8. 'ans' → logprob: -4.380831718444824
    9. ' ans' → logprob: -4.755831718444824
    10. ')' → logprob: -5.755831718444824

Token 911: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.032326556742191315
    2. 'à' → logprob: -3.7823264598846436
    3. '-à' → logprob: -5.157326698303223
    4. '   ' → logprob: -6.157326698303223
    5. '```' → logprob: -7.532326698303223
    6. ' =' → logprob: -8.907326698303223
    7. ' +=' → logprob: -9.282326698303223
    8. '           ' → logprob: -9.657326698303223
    9. 'a' → logprob: -9.907326698303223
    10. '+=' → logprob: -10.282326698303223

Token 912: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.06708104908466339
    2. ' jour' → logprob: -2.8170809745788574
    3. 'day' → logprob: -5.567080974578857
    4. 'jours' → logprob: -7.567080974578857
    5. 'max' → logprob: -8.067081451416016
    6. '```' → logprob: -8.567081451416016
    7. 'Jour' → logprob: -9.692081451416016
    8. 'place' → logprob: -9.942081451416016
    9. ' jours' → logprob: -10.442081451416016
    10. 'jou' → logprob: -10.442081451416016

Token 913: ' si' (ID: 1784)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00029267906211316586
    2. '(' → logprob: -8.500292778015137
    3. '(answer' → logprob: -10.375292778015137
    4. 'ans' → logprob: -10.875292778015137
    5. '(
' → logprob: -11.750292778015137
    6. '           ' → logprob: -12.000292778015137
    7. '()' → logprob: -12.125292778015137
    8. '   ' → logprob: -12.250292778015137
    9. '```' → logprob: -12.625292778015137
    10. ')' → logprob: -13.250292778015137

Token 914: ' besoin' (ID: 27703)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.5042531490325928
    2. 'M' → logprob: -1.0042531490325928
    3. ' check' → logprob: -4.129253387451172
    4. ' M' → logprob: -4.879253387451172
    5. 'ans' → logprob: -5.379253387451172
    6. '(M' → logprob: -7.254253387451172
    7. '(check' → logprob: -8.504253387451172
    8. ' ans' → logprob: -9.004253387451172
    9. '   ' → logprob: -9.004253387451172
    10. '(ans' → logprob: -9.129253387451172

Token 915: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00019173922191839665
    2. '
' → logprob: -9.250191688537598
    3. ' print' → logprob: -10.500191688537598
    4. ')' → logprob: -11.500191688537598
    5. '       ' → logprob: -11.500191688537598
    6. 'return' → logprob: -11.625191688537598
    7. ')
' → logprob: -11.625191688537598
    8. '   ' → logprob: -11.750191688537598
    9. '```' → logprob: -12.625191688537598
    10. '           ' → logprob: -13.000191688537598

Token 916: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.6405310816480778e-05
    2. '
' → logprob: -11.250016212463379
    3. '```' → logprob: -12.750016212463379
    4. ' print' → logprob: -15.750016212463379
    5. '

' → logprob: -16.250017166137695
    6. ')' → logprob: -16.250017166137695
    7. ')
' → logprob: -16.500017166137695
    8. '    
' → logprob: -17.375017166137695
    9. '  
' → logprob: -17.875017166137695
    10. ')

' → logprob: -18.000017166137695

Token 917: ' À' (ID: 27643)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -17.25
    3. '```' → logprob: -18.375
    4. '
' → logprob: -19.0
    5. '#print' → logprob: -21.375
    6. 'pr' → logprob: -21.5
    7. 'prin' → logprob: -22.875
    8. 'printf' → logprob: -24.25
    9. '  
' → logprob: -25.25
    10. '    
' → logprob: -25.375

Token 918: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.857719275401905e-05
    2. ' print' → logprob: -10.375038146972656
    3. 'pr' → logprob: -13.125038146972656
    4. '```' → logprob: -13.375038146972656
    5. '_print' → logprob: -13.500038146972656
    6. 'Print' → logprob: -14.250038146972656
    7. '
' → logprob: -14.750038146972656
    8. 'printf' → logprob: -14.875038146972656
    9. '#print' → logprob: -15.750038146972656
    10. '-print' → logprob: -16.125038146972656

Token 919: ' fin' (ID: 2131)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00013131031300872564
    2. ' print' → logprob: -10.000131607055664
    3. '```' → logprob: -10.375131607055664
    4. '#' → logprob: -10.750131607055664
    5. 'final' → logprob: -11.750131607055664
    6. 'bout' → logprob: -12.625131607055664
    7. 'pr' → logprob: -12.625131607055664
    8. 'output' → logprob: -12.875131607055664
    9. 'fin' → logprob: -13.000131607055664
    10. 'printf' → logprob: -13.125131607055664

Token 920: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001434690784662962
    2. ' print' → logprob: -9.375143051147461
    3. '
' → logprob: -9.750143051147461
    4. '(print' → logprob: -17.12514305114746
    5. '.print' → logprob: -17.37514305114746
    6. '
' → logprob: -17.37514305114746
    7. '_print' → logprob: -17.62514305114746
    8. '```' → logprob: -17.87514305114746
    9. '

' → logprob: -18.00014305114746
    10. ',' → logprob: -18.12514305114746

Token 921: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.12127808178775e-05
    2. ' print' → logprob: -10.125051498413086
    3. 'range' → logprob: -11.875051498413086
    4. 'la' → logprob: -13.625051498413086
    5. '#' → logprob: -13.750051498413086
    6. '```' → logprob: -14.250051498413086
    7. 'code' → logprob: -15.750051498413086
    8. '   ' → logprob: -16.250051498413086
    9. 'pass' → logprob: -16.500051498413086
    10. ' la' → logprob: -16.500051498413086

Token 922: ' boucle' (ID: 174211)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00024870390188880265
    2. 'code' → logprob: -8.625248908996582
    3. '#' → logprob: -10.625248908996582
    4. ' print' → logprob: -11.375248908996582
    5. 'for' → logprob: -11.750248908996582
    6. 'script' → logprob: -11.750248908996582
    7. 'file' → logprob: -12.000248908996582
    8. 'range' → logprob: -12.625248908996582
    9. 'program' → logprob: -12.750248908996582
    10. 'output' → logprob: -13.750248908996582

Token 923: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.7954958821064793e-05
    2. '
' → logprob: -11.250018119812012
    3. ' print' → logprob: -12.250018119812012
    4. '```' → logprob: -17.375017166137695
    5. '#print' → logprob: -17.500017166137695
    6. '(print' → logprob: -18.250017166137695
    7. '

' → logprob: -18.500017166137695
    8. '  
' → logprob: -18.750017166137695
    9. '.print' → logprob: -18.875017166137695
    10. '#' → logprob: -19.125017166137695

Token 924: ' ans' (ID: 3345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. ' print' → logprob: -16.0
    3. '```' → logprob: -16.625
    4. '
' → logprob: -17.375
    5. '#print' → logprob: -18.125
    6. '#' → logprob: -22.0
    7. '

' → logprob: -22.625
    8. '    
' → logprob: -22.875
    9. '``' → logprob: -23.25
    10. '   ' → logprob: -23.5

Token 925: ' contient' (ID: 89067)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5779457092285156
    2. '=' → logprob: -1.5779457092285156
    3. '+=' → logprob: -1.5779457092285156
    4. ' +=' → logprob: -4.702945709228516
    5. '<|end|>' → logprob: -4.827945709228516
    6. ' =' → logprob: -5.202945709228516
    7. ' print' → logprob: -6.327945709228516
    8. '#print' → logprob: -8.077945709228516
    9. ',' → logprob: -8.577945709228516
    10. '#' → logprob: -8.702945709228516

Token 926: ' le' (ID: 505)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.002020355314016342
    2. 'print' → logprob: -6.252020359039307
    3. '(ans' → logprob: -9.502019882202148
    4. 'the' → logprob: -11.377019882202148
    5. ' ans' → logprob: -12.377019882202148
    6. 'a' → logprob: -14.377019882202148
    7. 'answer' → logprob: -15.502019882202148
    8. '	ans' → logprob: -15.627019882202148
    9. '#' → logprob: -16.12701988220215
    10. ' the' → logprob: -16.75201988220215

Token 927: ' plus' (ID: 2932)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.09360107034444809
    2. 'print' → logprob: -2.4686009883880615
    3. 'max' → logprob: -6.343601226806641
    4. 'plus' → logprob: -6.843601226806641
    5. 'me' → logprob: -7.468601226806641
    6. 'answer' → logprob: -7.468601226806641
    7. 'largest' → logprob: -8.46860122680664
    8. 'maximum' → logprob: -8.59360122680664
    9. 'result' → logprob: -8.71860122680664
    10. 'best' → logprob: -10.21860122680664

Token 928: ' grand' (ID: 6363)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.008650264702737331
    2. ' grand' → logprob: -5.758650302886963
    3. 'gr' → logprob: -6.133650302886963
    4. 'final' → logprob: -6.383650302886963
    5. 'large' → logprob: -7.508650302886963
    6. '```' → logprob: -8.008649826049805
    7. '_' → logprob: -8.633649826049805
    8. '#' → logprob: -9.133649826049805
    9. 'div' → logprob: -9.508649826049805
    10. 'pro' → logprob: -10.008649826049805

Token 929: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.37996333837509155
    2. 'print' → logprob: -1.2549633979797363
    3. 'ans' → logprob: -4.129963397979736
    4. ' divisible' → logprob: -5.129963397979736
    5. 'd' → logprob: -5.504963397979736
    6. '(ans' → logprob: -6.504963397979736
    7. '(div' → logprob: -7.254963397979736
    8. '#' → logprob: -7.379963397979736
    9. 'ent' → logprob: -7.629963397979736
    10. '```' → logprob: -8.254962921142578

Token 930: 'iseur' (ID: 108637)
  Prédit: 'iseur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iseur' → logprob: -0.02465089038014412
    2. 'div' → logprob: -4.399651050567627
    3. 'isseur' → logprob: -5.524651050567627
    4. 'isible' → logprob: -5.649651050567627
    5. 'esseur' → logprob: -6.774651050567627
    6. 'ieur' → logprob: -7.274651050567627
    7. 'isor' → logprob: -8.274650573730469
    8. 'i' → logprob: -8.399650573730469
    9. ' divisible' → logprob: -8.399650573730469
    10. 'isateur' → logprob: -8.899650573730469

Token 931: ' de' (ID: 334)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.1911136955022812
    2. 'ans' → logprob: -1.9411137104034424
    3. 'print' → logprob: -4.066113471984863
    4. '=' → logprob: -4.441113471984863
    5. ' =' → logprob: -6.941113471984863
    6. '+=' → logprob: -8.441113471984863
    7. ' ans' → logprob: -9.191113471984863
    8. 'import' → logprob: -9.691113471984863
    9. '
' → logprob: -10.066113471984863
    10. '(' → logprob: -11.316113471984863

Token 932: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -7.588793960167095e-05
    2. ' M' → logprob: -9.500076293945312
    3. 's' → logprob: -14.750076293945312
    4. 'm' → logprob: -16.000076293945312
    5. 'A' → logprob: -16.500076293945312
    6. '```' → logprob: -16.500076293945312
    7. 'sum' → logprob: -16.625076293945312
    8. ' ' → logprob: -16.875076293945312
    9. 'l' → logprob: -17.375076293945312
    10. ' ' → logprob: -17.500076293945312

Token 933: ' pour' (ID: 1930)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001099491841159761
    2. '
' → logprob: -7.751099586486816
    3. ' print' → logprob: -7.751099586486816
    4. '```' → logprob: -9.126099586486816
    5. '+' → logprob: -9.751099586486816
    6. '   ' → logprob: -10.876099586486816
    7. ')' → logprob: -11.751099586486816
    8. '#print' → logprob: -11.751099586486816
    9. 'ans' → logprob: -11.876099586486816
    10. ')
' → logprob: -12.126099586486816

Token 934: ' lequel' (ID: 55154)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.12641054391860962
    2. 'la' → logprob: -2.876410484313965
    3. '#' → logprob: -3.626410484313965
    4. 'print' → logprob: -4.126410484313965
    5. 'que' → logprob: -5.126410484313965
    6. ' lequel' → logprob: -5.126410484313965
    7. 'which' → logprob: -5.251410484313965
    8. 'qui' → logprob: -7.751410484313965
    9. 'quel' → logprob: -7.751410484313965
    10. 'l' → logprob: -8.251410484313965

Token 935: ' tous' (ID: 10688)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.6513633131980896
    2. 'print' → logprob: -0.7763633131980896
    3. '#' → logprob: -4.526363372802734
    4. 'ans' → logprob: -5.026363372802734
    5. ' check' → logprob: -7.276363372802734
    6. 'all' → logprob: -8.276363372802734
    7. ' print' → logprob: -9.276363372802734
    8. 'True' → logprob: -9.901363372802734
    9. 'ret' → logprob: -9.901363372802734
    10. ' #' → logprob: -11.151363372802734

Token 936: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.08355219662189484
    2. ' les' → logprob: -3.083552122116089
    3. '(A' → logprob: -3.458552122116089
    4. '#' → logprob: -6.333552360534668
    5. 'A' → logprob: -7.583552360534668
    6. 's' → logprob: -9.458552360534668
    7. '   ' → logprob: -9.583552360534668
    8. 'l' → logprob: -9.708552360534668
    9. '_' → logprob: -9.833552360534668
    10. '(' → logprob: -9.958552360534668

Token 937: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.0033611739054322243
    2. 'A' → logprob: -5.878361225128174
    3. ' éléments' → logprob: -8.128360748291016
    4. '#' → logprob: -9.128360748291016
    5. 'elements' → logprob: -9.878360748291016
    6. 'é' → logprob: -10.003360748291016
    7. 'él' → logprob: -10.003360748291016
    8. ' A' → logprob: -12.128360748291016
    9. 'É' → logprob: -13.128360748291016
    10. '```' → logprob: -14.753360748291016

Token 938: ' de' (ID: 334)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.31715941429138184
    2. 's' → logprob: -1.3171594142913818
    3. 'de' → logprob: -6.192159652709961
    4. ' #' → logprob: -7.692159652709961
    5. 'ser' → logprob: -8.192159652709961
    6. '%' → logprob: -8.442159652709961
    7. ' sont' → logprob: -8.442159652709961
    8. 'd' → logprob: -8.817159652709961
    9. 'du' → logprob: -9.192159652709961
    10. 'print' → logprob: -9.317159652709961

Token 939: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.003761132014915347
    2. ' A' → logprob: -5.753761291503906
    3. '#' → logprob: -7.503761291503906
    4. 'l' → logprob: -11.253761291503906
    5. 'la' → logprob: -12.128761291503906
    6. ' #' → logprob: -12.503761291503906
    7. '```' → logprob: -12.878761291503906
    8. ' la' → logprob: -13.003761291503906
    9. '`' → logprob: -13.753761291503906
    10. 'a' → logprob: -14.128761291503906

Token 940: ' peuvent' (ID: 21321)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6409128308296204
    2. 's' → logprob: -0.7659128308296204
    3. '%' → logprob: -5.765913009643555
    4. ' sont' → logprob: -6.015913009643555
    5. ' #' → logprob: -6.640913009643555
    6. 'ont' → logprob: -7.140913009643555
    7. 'ser' → logprob: -8.515913009643555
    8. 'éta' → logprob: -8.890913009643555
    9. 'pe' → logprob: -10.265913009643555
    10. ' %' → logprob: -10.390913009643555

Token 941: ' devenir' (ID: 58346)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.020193573087453842
    2. ' être' → logprob: -4.520193576812744
    3. 'êtres' → logprob: -5.770193576812744
    4. '#' → logprob: -6.520193576812744
    5. ''être' → logprob: -6.770193576812744
    6. 'êt' → logprob: -7.270193576812744
    7. '’être' → logprob: -7.895193576812744
    8. 'ê' → logprob: -8.020193099975586
    9. ' devenir' → logprob: -8.145193099975586
    10. 'Ê' → logprob: -8.145193099975586

Token 942: ' multiples' (ID: 70720)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.04164808616042137
    2. '0' → logprob: -3.2916481494903564
    3. 'ans' → logprob: -6.416647911071777
    4. '#' → logprob: -7.416647911071777
    5. ' divisible' → logprob: -7.541647911071777
    6. ' divis' → logprob: -8.041647911071777
    7. 'ent' → logprob: -8.541647911071777
    8. '   ' → logprob: -9.541647911071777
    9. '1' → logprob: -9.666647911071777
    10. '```' → logprob: -10.416647911071777

Token 943: ' de' (ID: 334)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.12126553058624268
    2. '=' → logprob: -2.496265411376953
    3. 'ans' → logprob: -3.496265411376953
    4. 'print' → logprob: -6.871265411376953
    5. ' =' → logprob: -8.121265411376953
    6. ' ans' → logprob: -9.496265411376953
    7. '+=' → logprob: -10.121265411376953
    8. '(' → logprob: -11.246265411376953
    9. '_ans' → logprob: -12.496265411376953
    10. '=
' → logprob: -12.621265411376953

Token 944: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.006966728251427412
    2. ' ans' → logprob: -5.006966590881348
    3. '(ans' → logprob: -8.756966590881348
    4. 'd' → logprob: -9.506966590881348
    5. '
' → logprob: -11.131966590881348
    6. '	ans' → logprob: -13.006966590881348
    7. '```' → logprob: -13.881966590881348
    8. '#' → logprob: -14.881966590881348
    9. ' d' → logprob: -15.006966590881348
    10. 'i' → logprob: -15.131966590881348

Token 945: ' en' (ID: 469)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005256287753582001
    2. '
' → logprob: -5.255256175994873
    3. ' print' → logprob: -11.130256652832031
    4. '```' → logprob: -12.505256652832031
    5. '
' → logprob: -12.880256652832031
    6. '

' → logprob: -14.505256652832031
    7. ')
' → logprob: -14.880256652832031
    8. '(print' → logprob: -15.380256652832031
    9. '.print' → logprob: -16.38025665283203
    10. ')' → logprob: -16.38025665283203

Token 946: ' au' (ID: 2791)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'au' → logprob: -0.03139149397611618
    2. 'K' → logprob: -4.031391620635986
    3. ' au' → logprob: -4.531391620635986
    4. ' K' → logprob: -7.031391620635986
    5. '```' → logprob: -7.031391620635986
    6. 'at' → logprob: -7.906391620635986
    7. ' at' → logprob: -8.906391143798828
    8. ''au' → logprob: -10.906391143798828
    9. 'moins' → logprob: -11.031391143798828
    10. 'up' → logprob: -11.406391143798828

Token 947: ' plus' (ID: 2932)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.5979586243629456
    2. 'plus' → logprob: -0.8479586243629456
    3. 'pless' → logprob: -4.347958564758301
    4. 'pl' → logprob: -5.722958564758301
    5. 'près' → logprob: -6.097958564758301
    6. 'mo' → logprob: -7.222958564758301
    7. 'plet' → logprob: -7.972958564758301
    8. 'ple' → logprob: -8.5979585647583
    9. ' moins' → logprob: -8.5979585647583
    10. '```' → logprob: -8.7229585647583

Token 948: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -3.762356209335849e-05
    2. ' K' → logprob: -10.25003719329834
    3. '
' → logprob: -14.12503719329834
    4. '`' → logprob: -14.87503719329834
    5. 'print' → logprob: -14.87503719329834
    6. '   ' → logprob: -15.12503719329834
    7. '\n' → logprob: -15.75003719329834
    8. '
' → logprob: -16.000038146972656
    9. ' ' → logprob: -16.500038146972656
    10. '```' → logprob: -16.625038146972656

Token 949: ' modifications' (ID: 38756)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005082195159047842
    2. 'operations' → logprob: -6.005082130432129
    3. '```' → logprob: -6.630082130432129
    4. 'op' → logprob: -7.755082130432129
    5. '
' → logprob: -8.005082130432129
    6. '_operations' → logprob: -8.880082130432129
    7. 'ops' → logprob: -9.755082130432129
    8. ' opérations' → logprob: -9.880082130432129
    9. '   ' → logprob: -10.130082130432129
    10. ' print' → logprob: -10.380082130432129

Token 950: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.2948405128554441e-05
    2. '
' → logprob: -11.75001335144043
    3. ' print' → logprob: -12.37501335144043
    4. '```' → logprob: -14.25001335144043
    5. '#print' → logprob: -19.25001335144043
    6. '(print' → logprob: -19.62501335144043
    7. '``' → logprob: -19.75001335144043
    8. '

' → logprob: -19.87501335144043
    9. '
' → logprob: -20.12501335144043
    10. '-print' → logprob: -20.37501335144043

Token 951: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.791440293658525e-05
    2. '```' → logprob: -9.500078201293945
    3. '
' → logprob: -13.125078201293945
    4. ' print' → logprob: -14.250078201293945
    5. '``' → logprob: -15.000078201293945
    6. '#print' → logprob: -18.750078201293945
    7. '
' → logprob: -19.250078201293945
    8. '(print' → logprob: -20.250078201293945
    9. '  
' → logprob: -20.750078201293945
    10. '\' → logprob: -21.125078201293945

Token 952: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.7432603272027336e-06
    2. 'ans' → logprob: -13.625001907348633
    3. '(' → logprob: -14.750001907348633
    4. '(answer' → logprob: -17.875001907348633
    5. ' (' → logprob: -18.250001907348633
    6. '(
' → logprob: -19.000001907348633
    7. '	ans' → logprob: -19.875001907348633
    8. '(abs' → logprob: -20.375001907348633
    9. '()' → logprob: -20.625001907348633
    10. 'ANS' → logprob: -20.750001907348633

Token 953: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ')
' → logprob: -15.375000953674316
    3. '))' → logprob: -15.750000953674316
    4. ')`' → logprob: -15.750000953674316
    5. ' )' → logprob: -16.0
    6. '())' → logprob: -17.5
    7. '()' → logprob: -17.875
    8. '`)' → logprob: -18.375
    9. ')}' → logprob: -18.875
    10. ')#' → logprob: -19.0

Token 954: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 955: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4325350522994995
    2. '   ' → logprob: -1.6825350522994995
    3. ' ' → logprob: -1.8075350522994995
    4. ':' → logprob: -1.9325350522994995
    5. '[' → logprob: -2.307535171508789
    6. '=' → logprob: -3.182535171508789
    7. '#' → logprob: -3.182535171508789
    8. '<|end|>' → logprob: -3.557535171508789
    9. ' if' → logprob: -4.307535171508789
    10. 'if' → logprob: -4.557535171508789

Token 956: ' Aff' (ID: 13741)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 957: 'ichage' (ID: 118475)
  Prédit: 'ichage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ichage' → logprob: -0.49374642968177795
    2. 'icher' → logprob: -0.9937463998794556
    3. 'ich' → logprob: -4.868746280670166
    4. '#' → logprob: -5.118746280670166
    5. 'f' → logprob: -6.118746280670166
    6. 'ic' → logprob: -6.243746280670166
    7. 'iche' → logprob: -6.868746280670166
    8. 'iché' → logprob: -8.118746757507324
    9. 'ichier' → logprob: -9.118746757507324
    10. 'fic' → logprob: -9.868746757507324

Token 958: ' du' (ID: 1462)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 959: ' résultat' (ID: 62556)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.060728270560503006
    2. '(ans' → logprob: -2.9357283115386963
    3. 'result' → logprob: -5.810728073120117
    4. 'answer' → logprob: -5.935728073120117
    5. '\n' → logprob: -9.435728073120117
    6. 'final' → logprob: -10.185728073120117
    7. '\' → logprob: -10.810728073120117
    8. '(' → logprob: -11.310728073120117
    9. '(answer' → logprob: -11.435728073120117
    10. ' ans' → logprob: -11.935728073120117

Token 960: ' final' (ID: 1721)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 958
Tokens correctement prédits (1ère position, stricte): 195
Tokens correctement prédits (1ère position, avec adaptation): 202
Tokens correctement prédits (top 10): 511
Précision stricte (1ère position): 20.35%
Précision adaptée (1ère position): 21.09%
Précision (top 10): 53.34%
================================================================================
