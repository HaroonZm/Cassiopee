================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:49:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from itertools import groupby, count, accumulate, chain

s = input()
n = len(s)

ans = [0]*n

def reflect(i, j): return i + ((abs(j-i)) % 2)

pairs = [(i, i+1) for i in range(n-1) if s[i:i+2] == "RL"]

for i, _ in pairs:
    # Process consecutive R's to the left of i
    left = (next(g) for k, g in groupby((j for j in range(i, -1, -1)), lambda x: s[x]=='R') if k)
    for idx in next(left, []):
        ans[reflect(i, idx)] += 1
    # Process consecutive L's to the right of i+1
    right = (next(g) for k, g in groupby((j for j in range(i+1, n)), lambda x: s[x]=='L') if k)
    for idx in next(right, []):
        ans[reflect(i, idx)] += 1

print(*map(str, ans))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.30384737253189087
    2. 'partial' → logprob: -1.803847312927246
    3. 'reduce' → logprob: -2.553847312927246
    4. 'l' → logprob: -4.553847312927246
    5. ' wraps' → logprob: -4.803847312927246
    6. 'cached' → logprob: -8.053847312927246
    7. 'cache' → logprob: -8.553847312927246
    8. 'cmp' → logprob: -9.053847312927246
    9. ' partial' → logprob: -9.428847312927246
    10. ' l' → logprob: -9.803847312927246

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02168913371860981
    2. '(lambda' → logprob: -4.646688938140869
    3. ',' → logprob: -5.771688938140869
    4. '.' → logprob: -6.021688938140869
    5. '\' → logprob: -6.021688938140869
    6. ' (' → logprob: -6.396688938140869
    7. '```' → logprob: -7.396688938140869
    8. ' ' → logprob: -8.521689414978027
    9. '`' → logprob: -8.646689414978027
    10. '\(' → logprob: -8.646689414978027

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07312828302383423
    2. '\' → logprob: -3.1981282234191895
    3. 'def' → logprob: -4.0731282234191895
    4. '.' → logprob: -5.8231282234191895
    5. ',' → logprob: -5.9481282234191895
    6. '(
' → logprob: -6.3231282234191895
    7. '```' → logprob: -6.6981282234191895
    8. '\(' → logprob: -6.8231282234191895
    9. ' ' → logprob: -7.9481282234191895
    10. '\n' → logprob: -8.073128700256348

Token 6: ' itertools' (ID: 103178)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.4874143600463867
    2. ' math' → logprob: -1.2374143600463867
    3. ' itertools' → logprob: -2.7374143600463867
    4. ' collections' → logprob: -3.7374143600463867
    5. 'operator' → logprob: -5.362414360046387
    6. ' os' → logprob: -6.987414360046387
    7. 'math' → logprob: -6.987414360046387
    8. ' ' → logprob: -8.362414360046387
    9. ' typing' → logprob: -8.862414360046387
    10. 'collections' → logprob: -9.237414360046387

Token 7: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7218881249427795
    2. ' import' → logprob: -0.7218881249427795
    3. '.' → logprob: -3.5968880653381348
    4. '.import' → logprob: -7.471888065338135
    5. ' .' → logprob: -8.721888542175293
    6. '	import' → logprob: -9.596888542175293
    7. ' ' → logprob: -9.846888542175293
    8. '_import' → logprob: -10.596888542175293
    9. '<|end|>' → logprob: -11.596888542175293
    10. '.im' → logprob: -12.221888542175293

Token 8: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -1.0253076553344727
    2. 'count' → logprob: -1.4003076553344727
    3. 'acc' → logprob: -1.6503076553344727
    4. ' group' → logprob: -2.6503076553344727
    5. 'chain' → logprob: -3.1503076553344727
    6. 'cycle' → logprob: -3.1503076553344727
    7. 'com' → logprob: -4.400307655334473
    8. ' cycle' → logprob: -5.025307655334473
    9. 'product' → logprob: -5.150307655334473
    10. ' chain' → logprob: -5.275307655334473

Token 9: 'by' (ID: 2345)
  Prédit: 'by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.0002991160727106035
    2. 'y' → logprob: -8.250299453735352
    3. 'py' → logprob: -10.625299453735352
    4. 's' → logprob: -12.250299453735352
    5. 'ertools' → logprob: -12.875299453735352
    6. 'r' → logprob: -13.250299453735352
    7. 'b' → logprob: -13.875299453735352
    8. 'from' → logprob: -13.875299453735352
    9. 'tools' → logprob: -14.125299453735352
    10. 't' → logprob: -15.000299453735352

Token 10: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.36539387702941895
    2. '(
' → logprob: -2.490393877029419
    3. '\n' → logprob: -2.490393877029419
    4. 'def' → logprob: -2.615393877029419
    5. '\' → logprob: -2.865393877029419
    6. ',' → logprob: -5.86539363861084
    7. '```' → logprob: -6.74039363861084
    8. '`' → logprob: -6.99039363861084
    9. '
' → logprob: -7.24039363861084
    10. 'for' → logprob: -7.36539363861084

Token 11: ' count' (ID: 3605)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.7896823287010193
    2. 'count' → logprob: -1.789682388305664
    3. 'chain' → logprob: -2.414682388305664
    4. 'com' → logprob: -2.414682388305664
    5. 'product' → logprob: -2.789682388305664
    6. ' accumulate' → logprob: -3.039682388305664
    7. 'filter' → logprob: -3.914682388305664
    8. 'tee' → logprob: -4.164682388305664
    9. 'cycle' → logprob: -4.289682388305664
    10. 'zip' → logprob: -4.539682388305664

Token 12: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08860884606838226
    2. '(
' → logprob: -3.088608741760254
    3. 'def' → logprob: -4.338608741760254
    4. '\' → logprob: -4.338608741760254
    5. ',' → logprob: -5.713608741760254
    6. '\n' → logprob: -6.088608741760254
    7. '#' → logprob: -6.338608741760254
    8. 'for' → logprob: -6.463608741760254
    9. '(

' → logprob: -7.463608741760254
    10. 'd' → logprob: -7.713608741760254

Token 13: ' accumulate' (ID: 74226)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.5643429160118103
    2. ' cycle' → logprob: -1.814342975616455
    3. 'chain' → logprob: -2.814342975616455
    4. 'take' → logprob: -2.939342975616455
    5. 'acc' → logprob: -3.064342975616455
    6. 'filter' → logprob: -3.689342975616455
    7. ' chain' → logprob: -4.189342975616455
    8. ' accumulate' → logprob: -4.564342975616455
    9. ' is' → logprob: -4.689342975616455
    10. ' take' → logprob: -4.814342975616455

Token 14: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19861216843128204
    2. '(
' → logprob: -2.4486122131347656
    3. 'def' → logprob: -3.3236122131347656
    4. '\' → logprob: -4.323612213134766
    5. ',' → logprob: -4.448612213134766
    6. '\n' → logprob: -4.698612213134766
    7. '```' → logprob: -5.698612213134766
    8. '[' → logprob: -5.823612213134766
    9. '`' → logprob: -6.323612213134766
    10. '#' → logprob: -6.323612213134766

Token 15: ' chain' (ID: 13464)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.981456995010376
    2. ' chain' → logprob: -1.231456995010376
    3. 'product' → logprob: -2.731456995010376
    4. 'com' → logprob: -2.981456995010376
    5. ' product' → logprob: -3.231456995010376
    6. 'filter' → logprob: -3.356456995010376
    7. 'take' → logprob: -3.356456995010376
    8. 'tee' → logprob: -3.606456995010376
    9. 'cycle' → logprob: -3.731456995010376
    10. 'per' → logprob: -4.731456756591797

Token 16: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6553613543510437
    2. ',' → logprob: -1.7803614139556885
    3. '(
' → logprob: -2.0303614139556885
    4. 'def' → logprob: -3.1553614139556885
    5. '\' → logprob: -3.7803614139556885
    6. '
' → logprob: -4.030361175537109
    7. '.' → logprob: -4.155361175537109
    8. '#' → logprob: -4.155361175537109
    9. '\n' → logprob: -4.155361175537109
    10. ',
' → logprob: -4.405361175537109

Token 17: 's' (ID: 82)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5653529763221741
    2. 'def' → logprob: -1.8153529167175293
    3. 'd' → logprob: -2.4403529167175293
    4. '#' → logprob: -2.9403529167175293
    5. '.' → logprob: -3.8153529167175293
    6. '=' → logprob: -3.9403529167175293
    7. '(
' → logprob: -3.9403529167175293
    8. ',' → logprob: -4.190352916717529
    9. '\' → logprob: -4.565352916717529
    10. '[' → logprob: -5.190352916717529

Token 18: ' =' (ID: 314)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.8797010779380798
    2. 'um' → logprob: -2.5047011375427246
    3. 't' → logprob: -2.7547011375427246
    4. ' =' → logprob: -2.8797011375427246
    5. '=' → logprob: -3.1297011375427246
    6. 'e' → logprob: -3.1297011375427246
    7. ')' → logprob: -3.2547011375427246
    8. '(' → logprob: -3.2547011375427246
    9. '[' → logprob: -3.5047011375427246
    10. '.' → logprob: -3.6297011375427246

Token 19: ' input' (ID: 3422)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.9093577265739441
    2. ''' → logprob: -1.1593577861785889
    3. '"' → logprob: -2.659357786178589
    4. ' "' → logprob: -3.159357786178589
    5. ' ''' → logprob: -3.409357786178589
    6. ' [' → logprob: -3.534357786178589
    7. '''' → logprob: -4.03435754776001
    8. ' ' → logprob: -4.15935754776001
    9. ' []' → logprob: -4.40935754776001
    10. ''s' → logprob: -4.53435754776001

Token 20: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002181987656513229
    2. '('' → logprob: -9.250218391418457
    3. '(
' → logprob: -9.500218391418457
    4. '("("' → logprob: -11.250218391418457
    5. ')' → logprob: -12.000218391418457
    6. '(

' → logprob: -12.375218391418457
    7. ''' → logprob: -12.500218391418457
    8. ' (' → logprob: -12.875218391418457
    9. '```' → logprob: -13.000218391418457
    10. '(`' → logprob: -13.250218391418457

Token 21: 'n' (ID: 77)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06604814529418945
    2. '.split' → logprob: -3.4410481452941895
    3. ')' → logprob: -4.5660481452941895
    4. '_' → logprob: -5.1910481452941895
    5. '[' → logprob: -5.8160481452941895
    6. '=' → logprob: -6.3160481452941895
    7. 's' → logprob: -6.5660481452941895
    8. '(' → logprob: -7.0660481452941895
    9. ',' → logprob: -7.0660481452941895
    10. 'split' → logprob: -7.3160481452941895

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18771187961101532
    2. '=' → logprob: -2.0627119541168213
    3. ' ' → logprob: -3.4377119541168213
    4. '.' → logprob: -5.187711715698242
    5. '_' → logprob: -5.312711715698242
    6. 'u' → logprob: -8.187711715698242
    7. ',' → logprob: -8.312711715698242
    8. 'um' → logprob: -8.437711715698242
    9. '  ' → logprob: -9.062711715698242
    10. 'o' → logprob: -9.312711715698242

Token 23: ' len' (ID: 4631)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2466934323310852
    2. ' len' → logprob: -2.1216933727264404
    3. 'int' → logprob: -2.4966933727264404
    4. 'len' → logprob: -4.2466936111450195
    5. ' ' → logprob: -6.4966936111450195
    6. '10' → logprob: -8.49669361114502
    7. '0' → logprob: -8.99669361114502
    8. '1' → logprob: -9.74669361114502
    9. '3' → logprob: -9.74669361114502
    10. '2' → logprob: -10.87169361114502

Token 24: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.01822088100016117
    2. '(' → logprob: -4.018220901489258
    3. 's' → logprob: -9.643220901489258
    4. '(n' → logprob: -12.768220901489258
    5. '(
' → logprob: -13.518220901489258
    6. ' (' → logprob: -14.768220901489258
    7. '(

' → logprob: -14.768220901489258
    8. '(str' → logprob: -15.893220901489258
    9. '(x' → logprob: -15.893220901489258
    10. '(a' → logprob: -16.393220901489258

Token 25: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.650518920039758e-06
    2. ' )' → logprob: -13.750003814697266
    3. ')
' → logprob: -14.375003814697266
    4. ')n' → logprob: -14.500003814697266
    5. '))' → logprob: -14.875003814697266
    6. ')))' → logprob: -15.750003814697266
    7. '),' → logprob: -15.875003814697266
    8. '')' → logprob: -16.000003814697266
    9. ')s' → logprob: -16.125003814697266
    10. '#' → logprob: -16.500003814697266

Token 26: 'ans' (ID: 616)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.2028062343597412
    2. ')' → logprob: -2.077806234359741
    3. 'result' → logprob: -2.702806234359741
    4. '_' → logprob: -2.952806234359741
    5. 'for' → logprob: -3.077806234359741
    6. '#' → logprob: -3.077806234359741
    7. 'words' → logprob: -3.452806234359741
    8. 'groups' → logprob: -3.452806234359741
    9. 'a' → logprob: -3.827806234359741
    10. '
' → logprob: -3.952806234359741

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5865457653999329
    2. '=' → logprob: -0.8365457653999329
    3. '_' → logprob: -4.586545944213867
    4. ',' → logprob: -8.336545944213867
    5. ' ' → logprob: -9.961545944213867
    6. 's' → logprob: -10.711545944213867
    7. ')' → logprob: -11.211545944213867
    8. ':' → logprob: -11.836545944213867
    9. '.' → logprob: -11.961545944213867
    10. '[' → logprob: -11.961545944213867

Token 28: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10489580780267715
    2. '[]' → logprob: -3.354895830154419
    3. ' ' → logprob: -4.10489559173584
    4. '[' → logprob: -4.35489559173584
    5. ' []' → logprob: -4.60489559173584
    6. ' [' → logprob: -4.85489559173584
    7. 'n' → logprob: -5.10489559173584
    8. ' n' → logprob: -5.72989559173584
    9. '[n' → logprob: -6.10489559173584
    10. '1' → logprob: -6.72989559173584

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.019205786287784576
    2. '(' → logprob: -4.769205570220947
    3. '1' → logprob: -5.644205570220947
    4. ']' → logprob: -6.269205570220947
    5. '(n' → logprob: -7.019205570220947
    6. '[' → logprob: -7.394205570220947
    7. 'False' → logprob: -7.394205570220947
    8. '-' → logprob: -7.394205570220947
    9. 's' → logprob: -7.769205570220947
    10. '{' → logprob: -7.894205570220947

Token 30: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004359859973192215
    2. ',' → logprob: -5.504359722137451
    3. ' ]' → logprob: -8.75436019897461
    4. ']*' → logprob: -9.62936019897461
    5. ')]' → logprob: -10.87936019897461
    6. ')' → logprob: -11.12936019897461
    7. ' for' → logprob: -11.87936019897461
    8. '`]' → logprob: -12.50436019897461
    9. '],' → logprob: -12.87936019897461
    10. 'for' → logprob: -13.50436019897461

Token 31: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.21316033601760864
    2. 'n' → logprob: -1.7131602764129639
    3. '(' → logprob: -4.713160514831543
    4. '10' → logprob: -6.963160514831543
    5. ' (' → logprob: -7.963160514831543
    6. '100' → logprob: -7.963160514831543
    7. '9' → logprob: -8.838160514831543
    8. '26' → logprob: -9.463160514831543
    9. '101' → logprob: -9.713160514831543
    10. '20' → logprob: -9.838160514831543

Token 32: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9727419018745422
    2. '
' → logprob: -1.2227418422698975
    3. ' 
' → logprob: -1.4727418422698975
    4. ' for' → logprob: -2.8477418422698975
    5. ' ' → logprob: -3.9727418422698975
    6. '' → logprob: -4.972742080688477
    7. '\n' → logprob: -6.347742080688477
    8. '#' → logprob: -6.472742080688477
    9. 'i' → logprob: -6.597742080688477
    10. '
' → logprob: -6.847742080688477

Token 33: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02146979793906212
    2. 'i' → logprob: -4.896469593048096
    3. 'group' → logprob: -5.271469593048096
    4. ' for' → logprob: -6.521469593048096
    5. 'prev' → logprob: -6.896469593048096
    6. 'd' → logprob: -7.646469593048096
    7. 'g' → logprob: -7.646469593048096
    8. 'cur' → logprob: -8.021470069885254
    9. 'count' → logprob: -8.021470069885254
    10. 'freq' → logprob: -8.021470069885254

Token 34: ' reflect' (ID: 12140)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -1.002114176750183
    2. ' count' → logprob: -1.752114176750183
    3. ' is' → logprob: -2.5021142959594727
    4. ' calculate' → logprob: -2.6271142959594727
    5. ' accumulate' → logprob: -2.8771142959594727
    6. ' f' → logprob: -3.1271142959594727
    7. ' prefix' → logprob: -3.5021142959594727
    8. ' compute' → logprob: -3.8771142959594727
    9. ' calc' → logprob: -4.127114295959473
    10. ' process' → logprob: -4.377114295959473

Token 35: '(i' (ID: 3649)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7924953699111938
    2. '(' → logprob: -0.9174953699111938
    3. '(s' → logprob: -3.0424952507019043
    4. '(x' → logprob: -3.1674952507019043
    5. '(i' → logprob: -4.042495250701904
    6. '_char' → logprob: -4.542495250701904
    7. '(c' → logprob: -5.167495250701904
    8. '(a' → logprob: -5.292495250701904
    9. '(char' → logprob: -5.917495250701904
    10. '_(' → logprob: -6.167495250701904

Token 36: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04265245422720909
    2. ',' → logprob: -3.5426523685455322
    3. ')' → logprob: -4.417652606964111
    4. ' ):' → logprob: -8.167652130126953
    5. '):
' → logprob: -8.917652130126953
    6. ':' → logprob: -9.042652130126953
    7. '+' → logprob: -9.542652130126953
    8. ' ,' → logprob: -10.042652130126953
    9. ',i' → logprob: -10.542652130126953
    10. ' )' → logprob: -11.667652130126953

Token 37: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.5981751680374146
    2. ' j' → logprob: -1.5981751680374146
    3. ' n' → logprob: -1.8481751680374146
    4. 'n' → logprob: -1.9731751680374146
    5. 'x' → logprob: -2.598175048828125
    6. ' x' → logprob: -3.223175048828125
    7. 'k' → logprob: -3.348175048828125
    8. ' k' → logprob: -3.848175048828125
    9. 'a' → logprob: -4.348175048828125
    10. 'd' → logprob: -4.473175048828125

Token 38: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0053084660321474075
    2. ')' → logprob: -5.255308628082275
    3. ',' → logprob: -10.380308151245117
    4. ':' → logprob: -11.005308151245117
    5. '):
' → logprob: -11.005308151245117
    6. ' ):' → logprob: -12.505308151245117
    7. '+' → logprob: -12.755308151245117
    8. '):
' → logprob: -14.380308151245117
    9. '=' → logprob: -14.505308151245117
    10. ']:' → logprob: -14.880308151245117

Token 39: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05221730098128319
    2. '    ' → logprob: -4.427217483520508
    3. '    
' → logprob: -4.677217483520508
    4. '
' → logprob: -4.927217483520508
    5. ' ' → logprob: -5.052217483520508
    6. ' 
' → logprob: -5.177217483520508
    7. '<|end|>' → logprob: -5.302217483520508
    8. '\n' → logprob: -6.177217483520508
    9. ':' → logprob: -6.677217483520508
    10. ' return' → logprob: -8.052217483520508

Token 40: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.302033007144928
    2. ' j' → logprob: -2.302032947540283
    3. '2' → logprob: -3.427032947540283
    4. '(j' → logprob: -3.677032947540283
    5. 'i' → logprob: -3.802032947540283
    6. 'n' → logprob: -4.552032947540283
    7. '(i' → logprob: -4.552032947540283
    8. ' ' → logprob: -4.677032947540283
    9. ' (' → logprob: -4.802032947540283
    10. 's' → logprob: -4.802032947540283

Token 41: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6780679225921631
    2. '+j' → logprob: -2.178067922592163
    3. ' ^' → logprob: -2.553067922592163
    4. '^' → logprob: -2.553067922592163
    5. ' +' → logprob: -2.678067922592163
    6. '-' → logprob: -2.928067922592163
    7. 'j' → logprob: -3.303067922592163
    8. ',' → logprob: -3.928067922592163
    9. '*' → logprob: -4.928068161010742
    10. ' ' → logprob: -5.053068161010742

Token 42: ' ((' (ID: 3536)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.056398987770080566
    2. '(j' → logprob: -3.431398868560791
    3. '2' → logprob: -4.806398868560791
    4. ' j' → logprob: -5.556398868560791
    5. '(' → logprob: -5.931398868560791
    6. '1' → logprob: -5.931398868560791
    7. ' (' → logprob: -6.431398868560791
    8. '(n' → logprob: -6.431398868560791
    9. '(i' → logprob: -7.556398868560791
    10. 'n' → logprob: -7.681398868560791

Token 43: 'abs' (ID: 6071)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.01395369041711092
    2. '1' → logprob: -5.013953685760498
    3. '2' → logprob: -6.263953685760498
    4. '(j' → logprob: -6.263953685760498
    5. 'i' → logprob: -6.513953685760498
    6. 'n' → logprob: -7.638953685760498
    7. ' j' → logprob: -8.013954162597656
    8. '(' → logprob: -8.388954162597656
    9. '(i' → logprob: -8.763954162597656
    10. ')' → logprob: -8.888954162597656

Token 44: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.5890915393829346
    2. '(i' → logprob: -0.8390915393829346
    3. '(n' → logprob: -4.7140913009643555
    4. '(' → logprob: -6.0890913009643555
    5. 'j' → logprob: -7.3390913009643555
    6. '((' → logprob: -7.8390913009643555
    7. 'i' → logprob: -7.9640913009643555
    8. '(s' → logprob: -8.589091300964355
    9. ')' → logprob: -9.339091300964355
    10. ')(' → logprob: -10.464091300964355

Token 45: '-i' (ID: 18499)
  Prédit: '-i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.31413742899894714
    2. '-' → logprob: -1.4391374588012695
    3. ' -' → logprob: -3.4391374588012695
    4. '-j' → logprob: -8.93913745880127
    5. ')' → logprob: -9.06413745880127
    6. 'i' → logprob: -10.81413745880127
    7. '-n' → logprob: -10.81413745880127
    8. ' ' → logprob: -11.68913745880127
    9. '+' → logprob: -12.31413745880127
    10. '1' → logprob: -12.43913745880127

Token 46: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28895294666290283
    2. ')*' → logprob: -1.9139529466629028
    3. ')<<' → logprob: -3.4139528274536133
    4. ')-' → logprob: -3.9139528274536133
    5. '))' → logprob: -4.538952827453613
    6. ')>>' → logprob: -4.913952827453613
    7. ')+' → logprob: -5.413952827453613
    8. ' )' → logprob: -5.413952827453613
    9. ')%' → logprob: -5.663952827453613
    10. ')//' → logprob: -5.663952827453613

Token 47: ' %' (ID: 1851)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.1558887958526611
    2. '-' → logprob: -1.4058887958526611
    3. '*' → logprob: -2.155888795852661
    4. '//' → logprob: -2.280888795852661
    5. ' //' → logprob: -2.655888795852661
    6. ' *' → logprob: -3.405888795852661
    7. '+' → logprob: -3.905888795852661
    8. ' ' → logprob: -4.030888557434082
    9. '>>' → logprob: -4.155888557434082
    10. ')' → logprob: -4.280888557434082

Token 48: ' ' (ID: 220)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.289094477891922
    2. ' (' → logprob: -2.4140944480895996
    3. '(' → logprob: -2.7890944480895996
    4. 'n' → logprob: -2.7890944480895996
    5. '2' → logprob: -3.7890944480895996
    6. ' n' → logprob: -5.4140944480896
    7. ' ' → logprob: -5.5390944480896
    8. '((' → logprob: -6.1640944480896
    9. '(i' → logprob: -7.2890944480896
    10. '4' → logprob: -7.7890944480896

Token 49: '2' (ID: 17)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8267964720726013
    2. '(n' → logprob: -0.8267964720726013
    3. '(' → logprob: -2.576796531677246
    4. '2' → logprob: -3.451796531677246
    5. ' (' → logprob: -4.701796531677246
    6. '3' → logprob: -6.951796531677246
    7. '4' → logprob: -7.201796531677246
    8. ')' → logprob: -7.451796531677246
    9. '26' → logprob: -7.576796531677246
    10. ' ' → logprob: -7.576796531677246

Token 50: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10646887868642807
    2. ')*' → logprob: -2.356468915939331
    3. '2' → logprob: -6.356468677520752
    4. ' )' → logprob: -6.856468677520752
    5. ' +' → logprob: -6.981468677520752
    6. '0' → logprob: -7.606468677520752
    7. '*' → logprob: -7.606468677520752
    8. '+' → logprob: -7.856468677520752
    9. ' *' → logprob: -8.48146915435791
    10. ')*(' → logprob: -8.60646915435791

Token 51: 'pairs' (ID: 175838)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9886531829833984
    2. '<|end|>' → logprob: -1.2386531829833984
    3. ')' → logprob: -2.6136531829833984
    4. ' ' → logprob: -2.7386531829833984
    5. '+' → logprob: -2.7386531829833984
    6. ' 
' → logprob: -3.3636531829833984
    7. 'n' → logprob: -3.8636531829833984
    8. '*' → logprob: -4.738653182983398
    9. '[' → logprob: -4.988653182983398
    10. '%' → logprob: -5.113653182983398

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021166982129216194
    2. '=' → logprob: -3.896167039871216
    3. 's' → logprob: -8.521166801452637
    4. '(' → logprob: -8.896166801452637
    5. '=[]' → logprob: -9.396166801452637
    6. '_' → logprob: -9.646166801452637
    7. ',' → logprob: -10.271166801452637
    8. ')' → logprob: -11.396166801452637
    9. '.' → logprob: -11.521166801452637
    10. '_pairs' → logprob: -11.646166801452637

Token 53: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -1.0292433500289917
    2. '[]' → logprob: -1.2792433500289917
    3. 'list' → logprob: -1.2792433500289917
    4. ' list' → logprob: -3.7792434692382812
    5. '[' → logprob: -3.7792434692382812
    6. ' []' → logprob: -4.279243469238281
    7. ' [(' → logprob: -4.404243469238281
    8. ' [' → logprob: -5.779243469238281
    9. 'chain' → logprob: -5.779243469238281
    10. '[list' → logprob: -6.029243469238281

Token 54: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.6989181041717529
    2. 'i' → logprob: -0.8239181041717529
    3. '(s' → logprob: -4.198918342590332
    4. 's' → logprob: -4.698918342590332
    5. 'x' → logprob: -4.823918342590332
    6. '(' → logprob: -4.948918342590332
    7. '0' → logprob: -5.073918342590332
    8. '(x' → logprob: -5.698918342590332
    9. '(k' → logprob: -5.948918342590332
    10. 'k' → logprob: -6.073918342590332

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002187376143410802
    2. ',i' → logprob: -7.002187252044678
    3. ' ,' → logprob: -7.127187252044678
    4. ',j' → logprob: -8.377187728881836
    5. ',s' → logprob: -9.877187728881836
    6. ',p' → logprob: -10.252187728881836
    7. '+' → logprob: -10.877187728881836
    8. ',k' → logprob: -11.127187728881836
    9. '*' → logprob: -11.502187728881836
    10. ' ' → logprob: -11.502187728881836

Token 56: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8822140097618103
    2. 'i' → logprob: -1.132214069366455
    3. ' j' → logprob: -2.132214069366455
    4. 'j' → logprob: -2.882214069366455
    5. ' n' → logprob: -3.132214069366455
    6. 'n' → logprob: -4.132214069366455
    7. ' reflect' → logprob: -5.007214069366455
    8. ' s' → logprob: -5.132214069366455
    9. ')' → logprob: -5.882214069366455
    10. ' len' → logprob: -6.194714069366455

Token 57: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01535877212882042
    2. ' +' → logprob: -4.390358924865723
    3. ')' → logprob: -5.890358924865723
    4. '-' → logprob: -10.515358924865723
    5. '+j' → logprob: -11.015358924865723
    6. ' )' → logprob: -11.765358924865723
    7. '+)' → logprob: -11.890358924865723
    8. '+n' → logprob: -12.765358924865723
    9. '+
' → logprob: -13.140358924865723
    10. ' ' → logprob: -13.140358924865723

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017907321453094482
    2. ' ' → logprob: -6.626790523529053
    3. '2' → logprob: -7.876790523529053
    4. '3' → logprob: -10.939291000366211
    5. 's' → logprob: -10.939291000366211
    6. 'n' → logprob: -11.314291000366211
    7. 'j' → logprob: -12.626791000366211
    8. 'k' → logprob: -12.626791000366211
    9. 'd' → logprob: -12.689291000366211
    10. '4' → logprob: -12.876791000366211

Token 59: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9266199160483666e-05
    2. ' )' → logprob: -11.000019073486328
    3. 'for' → logprob: -14.375019073486328
    4. ' for' → logprob: -14.500019073486328
    5. ')]' → logprob: -15.000019073486328
    6. ')
' → logprob: -15.250019073486328
    7. ',' → logprob: -15.375019073486328
    8. ' ' → logprob: -16.375019073486328
    9. '))' → logprob: -16.500019073486328
    10. ']' → logprob: -17.000019073486328

Token 60: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17240189015865326
    2. ' for' → logprob: -1.9224019050598145
    3. 'for' → logprob: -4.5474019050598145
    4. ' )' → logprob: -6.5474019050598145
    5. ' ' → logprob: -10.547401428222656
    6. '	for' → logprob: -10.797401428222656
    7. '<|end|>' → logprob: -11.297401428222656
    8. ']' → logprob: -12.047401428222656
    9. ')]' → logprob: -12.297401428222656
    10. '<|end|>' → logprob: -14.172401428222656

Token 61: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.004677779972553253
    2. 'i' → logprob: -5.379677772521973
    3. ' range' → logprob: -10.379677772521973
    4. ' ' → logprob: -10.754677772521973
    5. 'range' → logprob: -13.254677772521973
    6. '	i' → logprob: -13.629677772521973
    7. ' _' → logprob: -14.629677772521973
    8. ' in' → logprob: -14.629677772521973
    9. '  ' → logprob: -15.129677772521973
    10. '<|end|>' → logprob: -15.504677772521973

Token 62: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01417702715843916
    2. 'in' → logprob: -4.264176845550537
    3. 'range' → logprob: -12.264177322387695
    4. ' ' → logprob: -13.139177322387695
    5. '<|end|>' → logprob: -13.389177322387695
    6. ',' → logprob: -13.514177322387695
    7. ')' → logprob: -14.139177322387695
    8. 'import' → logprob: -14.139177322387695
    9. '```' → logprob: -14.889177322387695
    10. 's' → logprob: -15.139177322387695

Token 63: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04858816787600517
    2. ' range' → logprob: -3.048588275909424
    3. '(range' → logprob: -14.548587799072266
    4. '	range' → logprob: -15.548587799072266
    5. 'chain' → logprob: -16.423587799072266
    6. ' ' → logprob: -18.548587799072266
    7. ' xrange' → logprob: -18.673587799072266
    8. 'count' → logprob: -19.548587799072266
    9. '.range' → logprob: -19.673587799072266
    10. '```' → logprob: -19.798587799072266

Token 64: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0010474584996700287
    2. '(' → logprob: -6.876047611236572
    3. '(len' → logprob: -11.376047134399414
    4. 'n' → logprob: -12.876047134399414
    5. ' (' → logprob: -15.251047134399414
    6. ' n' → logprob: -15.376047134399414
    7. '(
' → logprob: -16.626047134399414
    8. '	n' → logprob: -16.751047134399414
    9. ')n' → logprob: -16.876047134399414
    10. '(s' → logprob: -17.251047134399414

Token 65: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1002306118607521
    2. ' -' → logprob: -2.3502306938171387
    3. ')' → logprob: -10.85023021697998
    4. ' ' → logprob: -12.72523021697998
    5. ')]' → logprob: -13.97523021697998
    6. ' )' → logprob: -14.47523021697998
    7. ' if' → logprob: -16.725231170654297
    8. '1' → logprob: -17.225231170654297
    9. ' ' → logprob: -17.600231170654297
    10. '   ' → logprob: -17.850231170654297

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.953082341467962e-05
    2. ' ' → logprob: -10.250039100646973
    3. ')' → logprob: -12.750039100646973
    4. '```' → logprob: -14.875039100646973
    5. '2' → logprob: -15.125039100646973
    6. '<|end|>' → logprob: -15.375039100646973
    7. '<|end|>' → logprob: -16.75004005432129
    8. '۱' → logprob: -17.31254005432129
    9. '   ' → logprob: -17.31254005432129
    10. '-' → logprob: -17.37504005432129

Token 67: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5962971448898315
    2. ')]' → logprob: -0.8462971448898315
    3. ' if' → logprob: -4.346297264099121
    4. ' )' → logprob: -4.971297264099121
    5. 'if' → logprob: -8.721297264099121
    6. ')])' → logprob: -9.971297264099121
    7. ']' → logprob: -10.721297264099121
    8. ')],' → logprob: -11.346297264099121
    9. ')][' → logprob: -11.721297264099121
    10. ' ' → logprob: -13.221297264099121

Token 68: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.008284647017717361
    2. ')' → logprob: -5.133284568786621
    3. 'if' → logprob: -6.258284568786621
    4. ')]' → logprob: -8.258284568786621
    5. ' )' → logprob: -8.758284568786621
    6. ' ' → logprob: -11.258284568786621
    7. ')],' → logprob: -13.008284568786621
    8. '	if' → logprob: -13.383284568786621
    9. ')])' → logprob: -13.383284568786621
    10. ']' → logprob: -13.508284568786621

Token 69: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.07003068923950195
    2. 's' → logprob: -2.695030689239502
    3. '(s' → logprob: -10.820030212402344
    4. 'abs' → logprob: -11.070030212402344
    5. ' reflect' → logprob: -11.195030212402344
    6. ' ' → logprob: -11.445030212402344
    7. ' abs' → logprob: -11.695030212402344
    8. 'reflect' → logprob: -11.945030212402344
    9. ' not' → logprob: -12.320030212402344
    10. '	s' → logprob: -12.945030212402344

Token 70: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.583550642360933e-05
    2. '[' → logprob: -10.250036239624023
    3. '[
' → logprob: -15.375036239624023
    4. 'i' → logprob: -16.250036239624023
    5. '[I' → logprob: -16.875036239624023
    6. ' [' → logprob: -17.375036239624023
    7. '[j' → logprob: -18.125036239624023
    8. '(i' → logprob: -18.250036239624023
    9. '```' → logprob: -18.250036239624023
    10. '==' → logprob: -18.750036239624023

Token 71: ':i' (ID: 34041)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.11341944336891174
    2. ']==' → logprob: -3.238419532775879
    3. ' ==' → logprob: -3.238419532775879
    4. ']' → logprob: -3.613419532775879
    5. '!=' → logprob: -6.863419532775879
    6. ' ' → logprob: -8.488419532775879
    7. '=' → logprob: -8.738419532775879
    8. '[' → logprob: -8.988419532775879
    9. ' !=' → logprob: -10.113419532775879
    10. ']!=' → logprob: -10.113419532775879

Token 72: '+' (ID: 10)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0020561658311635256
    2. '==' → logprob: -7.002056121826172
    3. ' ' → logprob: -7.627056121826172
    4. ']' → logprob: -9.127056121826172
    5. '+' → logprob: -9.377056121826172
    6. ' ==' → logprob: -9.377056121826172
    7. ']==' → logprob: -9.502056121826172
    8. '"' → logprob: -9.752056121826172
    9. 'i' → logprob: -10.314556121826172
    10. '=="' → logprob: -10.502056121826172

Token 73: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.62501335144043
    3. '3' → logprob: -14.25001335144043
    4. '```' → logprob: -14.25001335144043
    5. '+' → logprob: -14.75001335144043
    6. ')' → logprob: -14.81251335144043
    7. '1' → logprob: -15.31251335144043
    8. '   ' → logprob: -15.68751335144043
    9. ']' → logprob: -16.00001335144043
    10. '4' → logprob: -16.00001335144043

Token 74: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.14957953989505768
    2. ']==' → logprob: -2.8995795249938965
    3. ']' → logprob: -3.0245795249938965
    4. '=='' → logprob: -4.1495795249938965
    5. ']=='' → logprob: -4.8995795249938965
    6. '=="' → logprob: -5.1495795249938965
    7. ' ==' → logprob: -5.2745795249938965
    8. ']=="' → logprob: -7.5245795249938965
    9. '==
' → logprob: -8.149580001831055
    10. ' in' → logprob: -9.149580001831055

Token 75: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.017700666561722755
    2. '=='' → logprob: -4.642700672149658
    3. '=="' → logprob: -5.517700672149658
    4. ' ==' → logprob: -6.392700672149658
    5. ' in' → logprob: -6.517700672149658
    6. 'in' → logprob: -7.392700672149658
    7. '==
' → logprob: -9.1427001953125
    8. '!=' → logprob: -11.3927001953125
    9. '[' → logprob: -13.0177001953125
    10. '=' → logprob: -13.1427001953125

Token 76: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5897172689437866
    2. ''' → logprob: -0.8397172689437866
    3. ''))' → logprob: -6.339717388153076
    4. ''ab' → logprob: -6.339717388153076
    5. ' '' → logprob: -6.714717388153076
    6. '"))' → logprob: -6.964717388153076
    7. ''o' → logprob: -7.464717388153076
    8. ''a' → logprob: -7.464717388153076
    9. '")' → logprob: -7.589717388153076
    10. ''i' → logprob: -7.714717388153076

Token 77: 'RL' (ID: 40408)
  Prédit: 'RL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RL' → logprob: -1.1446341276168823
    2. '()' → logprob: -1.5196341276168823
    3. '()"' → logprob: -1.7696341276168823
    4. '"' → logprob: -2.144634246826172
    5. 'LR' → logprob: -2.269634246826172
    6. '))' → logprob: -4.144634246826172
    7. 'ab' → logprob: -4.894634246826172
    8. 'AB' → logprob: -5.269634246826172
    9. 'at' → logprob: -5.769634246826172
    10. '01' → logprob: -5.894634246826172

Token 78: '"]

' (ID: 57728)
  Prédit: '"]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.0002601438027340919
    2. '"' → logprob: -8.375260353088379
    3. '']' → logprob: -11.125260353088379
    4. '")' → logprob: -12.500260353088379
    5. '"]

' → logprob: -12.750260353088379
    6. ']' → logprob: -13.250260353088379
    7. '"]
' → logprob: -13.375260353088379
    8. '"]]' → logprob: -13.625260353088379
    9. '"](' → logprob: -13.750260353088379
    10. '")]' → logprob: -14.125260353088379

Token 79: 'for' (ID: 1938)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5173341035842896
    2. 'for' → logprob: -1.6423341035842896
    3. '
' → logprob: -1.6423341035842896
    4. ' ' → logprob: -2.017333984375
    5. ':' → logprob: -2.892333984375
    6. '```' → logprob: -3.017333984375
    7. ']' → logprob: -3.642333984375
    8. '\n' → logprob: -3.642333984375
    9. '  
' → logprob: -3.892333984375
    10. '<|end|>' → logprob: -4.017333984375

Token 80: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.018724100664258003
    2. 'i' → logprob: -4.018723964691162
    3. ' p' → logprob: -8.14372444152832
    4. ' ' → logprob: -8.76872444152832
    5. ' pair' → logprob: -10.26872444152832
    6. 'p' → logprob: -10.64372444152832
    7. '```' → logprob: -10.89372444152832
    8. ' (' → logprob: -11.39372444152832
    9. 'pair' → logprob: -12.14372444152832
    10. ' _' → logprob: -12.51872444152832

Token 81: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007478733081370592
    2. ' ' → logprob: -5.632478713989258
    3. 'in' → logprob: -5.632478713989258
    4. '<|end|>' → logprob: -9.132478713989258
    5. ',' → logprob: -9.382478713989258
    6. '  ' → logprob: -10.382478713989258
    7. ' ,' → logprob: -11.257478713989258
    8. 's' → logprob: -11.257478713989258
    9. 'n' → logprob: -11.382478713989258
    10. ' n' → logprob: -11.632478713989258

Token 82: ' _' (ID: 1175)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.12762685120105743
    2. ' j' → logprob: -2.127626895904541
    3. '(j' → logprob: -8.627626419067383
    4. 'i' → logprob: -9.252626419067383
    5. ' (' → logprob: -9.377626419067383
    6. '_j' → logprob: -9.877626419067383
    7. ' ' → logprob: -10.002626419067383
    8. 'pair' → logprob: -10.127626419067383
    9. ' pair' → logprob: -10.752626419067383
    10. '```' → logprob: -11.002626419067383

Token 83: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22577527165412903
    2. 'in' → logprob: -1.6007752418518066
    3. ',' → logprob: -8.100775718688965
    4. '<|end|>' → logprob: -11.225775718688965
    5. 'i' → logprob: -11.725775718688965
    6. ')' → logprob: -11.975775718688965
    7. 'a' → logprob: -12.225775718688965
    8. 'n' → logprob: -12.225775718688965
    9. '```' → logprob: -12.725775718688965
    10. 's' → logprob: -13.100775718688965

Token 84: ' pairs' (ID: 24702)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.008661724627017975
    2. ' pairs' → logprob: -4.75866174697876
    3. 'pair' → logprob: -10.633661270141602
    4. 'enumer' → logprob: -12.008661270141602
    5. 'p' → logprob: -12.133661270141602
    6. 'range' → logprob: -12.258661270141602
    7. 'chain' → logprob: -13.383661270141602
    8. ' enumerate' → logprob: -14.258661270141602
    9. '```' → logprob: -14.758661270141602
    10. ' ' → logprob: -14.883661270141602

Token 85: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001242772996192798
    2. ',' → logprob: -9.250123977661133
    3. ' in' → logprob: -11.875123977661133
    4. ' :' → logprob: -11.875123977661133
    5. ':
' → logprob: -12.625123977661133
    6. '<|end|>' → logprob: -12.625123977661133
    7. ':**' → logprob: -13.125123977661133
    8. '=' → logprob: -14.375123977661133
    9. '):' → logprob: -14.500123977661133
    10. 'in' → logprob: -14.500123977661133

Token 86: '   ' (ID: 271)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.9805711507797241
    2. ' ans' → logprob: -1.2305711507797241
    3. '   ' → logprob: -1.3555711507797241
    4. 'while' → logprob: -3.3555712699890137
    5. ' for' → logprob: -4.480571269989014
    6. 'ans' → logprob: -4.605571269989014
    7. ' if' → logprob: -5.355571269989014
    8. '
' → logprob: -6.480571269989014
    9. '```' → logprob: -6.480571269989014
    10. ' range' → logprob: -6.605571269989014

Token 87: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.8103235960006714
    2. 'while' → logprob: -0.9353235960006714
    3. 'l' → logprob: -3.310323715209961
    4. 'r' → logprob: -3.435323715209961
    5. 'j' → logprob: -3.685323715209961
    6. ' while' → logprob: -3.935323715209961
    7. ' ans' → logprob: -4.435323715209961
    8. 'k' → logprob: -4.560323715209961
    9. 'a' → logprob: -5.060323715209961
    10. 'for' → logprob: -5.560323715209961

Token 88: ' Process' (ID: 12482)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.13795267045497894
    2. 'ans' → logprob: -2.5129525661468506
    3. ' while' → logprob: -3.7629525661468506
    4. 'while' → logprob: -5.01295280456543
    5. ' if' → logprob: -5.13795280456543
    6. ' for' → logprob: -5.63795280456543
    7. '   ' → logprob: -6.26295280456543
    8. 'if' → logprob: -6.88795280456543
    9. ' j' → logprob: -7.13795280456543
    10. 'j' → logprob: -7.51295280456543

Token 89: ' consecutive' (ID: 40840)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -1.169324517250061
    2. ' while' → logprob: -1.294324517250061
    3. 'while' → logprob: -2.1693243980407715
    4. 'ans' → logprob: -2.2943243980407715
    5. ' for' → logprob: -3.1693243980407715
    6. '   ' → logprob: -3.4193243980407715
    7. 'k' → logprob: -3.6693243980407715
    8. ' k' → logprob: -3.9193243980407715
    9. 'j' → logprob: -4.0443243980407715
    10. ' j' → logprob: -4.4193243980407715

Token 90: ' R' (ID: 460)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6911725997924805
    2. 'pairs' → logprob: -1.1911725997924805
    3. 'j' → logprob: -2.5661725997924805
    4. 's' → logprob: -3.3161725997924805
    5. 'R' → logprob: -4.0661725997924805
    6. 'r' → logprob: -4.4411725997924805
    7. ' pairs' → logprob: -4.5661725997924805
    8. 'indices' → logprob: -4.6911725997924805
    9. 'positions' → logprob: -4.9411725997924805
    10. ' i' → logprob: -5.3161725997924805

Token 91: ''s' (ID: 885)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.4182817935943604
    2. 'L' → logprob: -1.5432817935943604
    3. 'i' → logprob: -1.6682817935943604
    4. ' and' → logprob: -1.9182817935943604
    5. 'and' → logprob: -2.1682817935943604
    6. 'l' → logprob: -3.4182817935943604
    7. 'j' → logprob: -5.168281555175781
    8. 'while' → logprob: -5.293281555175781
    9. '<|end|>' → logprob: -5.293281555175781
    10. ' ' → logprob: -5.543281555175781

Token 92: ' to' (ID: 316)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.1026533767580986
    2. ' the' → logprob: -2.3526532649993896
    3. 'left' → logprob: -7.102653503417969
    4. 'i' → logprob: -7.102653503417969
    5. 'reflect' → logprob: -7.852653503417969
    6. ' i' → logprob: -9.727653503417969
    7. ' ' → logprob: -10.102653503417969
    8. 'j' → logprob: -10.227653503417969
    9. 'he' → logprob: -10.352653503417969
    10. 'r' → logprob: -10.602653503417969

Token 94: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.17187932133674622
    2. 'right' → logprob: -2.046879291534424
    3. ' left' → logprob: -4.046879291534424
    4. ' right' → logprob: -4.796879291534424
    5. 'ight' → logprob: -6.421879291534424
    6. 'i' → logprob: -7.296879291534424
    7. 'j' → logprob: -8.421879768371582
    8. 'lef' → logprob: -9.171879768371582
    9. ' ' → logprob: -9.796879768371582
    10. 'l' → logprob: -9.921879768371582

Token 95: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9509186744689941
    2. '<|end|>' → logprob: -1.2009186744689941
    3. ' while' → logprob: -1.4509186744689941
    4. ' ' → logprob: -4.200918674468994
    5. ' i' → logprob: -4.575918674468994
    6. '```' → logprob: -4.700918674468994
    7. 'while' → logprob: -4.825918674468994
    8. ',' → logprob: -5.075918674468994
    9. '    ' → logprob: -5.450918674468994
    10. 'i' → logprob: -5.575918674468994

Token 96: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02630819007754326
    2. ' i' → logprob: -3.651308298110962
    3. '<|end|>' → logprob: -12.276308059692383
    4. '	i' → logprob: -14.151308059692383
    5. '`' → logprob: -14.776308059692383
    6. '(i' → logprob: -14.901308059692383
    7. '```' → logprob: -15.026308059692383
    8. ',i' → logprob: -15.026308059692383
    9. '   ' → logprob: -15.526308059692383
    10. '[i' → logprob: -15.526308059692383

Token 97: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9431423544883728
    2. '<|end|>' → logprob: -1.3181424140930176
    3. 'while' → logprob: -1.8181424140930176
    4. ' while' → logprob: -2.4431424140930176
    5. 'i' → logprob: -3.5681424140930176
    6. '```' → logprob: -4.443142414093018
    7. 'j' → logprob: -4.443142414093018
    8. 'k' → logprob: -4.568142414093018
    9. 'l' → logprob: -5.193142414093018
    10. 'x' → logprob: -5.943142414093018

Token 98: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026977714151144028
    2. ' while' → logprob: -4.2769775390625
    3. 'while' → logprob: -5.5269775390625
    4. '<|end|>' → logprob: -6.4019775390625
    5. 'i' → logprob: -6.5269775390625
    6. ' for' → logprob: -6.9019775390625
    7. '```' → logprob: -6.9019775390625
    8. ' i' → logprob: -7.4019775390625
    9. '    
' → logprob: -8.2769775390625
    10. ',' → logprob: -8.4019775390625

Token 99: ' left' (ID: 3561)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6323492527008057
    2. 'l' → logprob: -1.8823492527008057
    3. 'j' → logprob: -2.3823492527008057
    4. '   ' → logprob: -3.0073492527008057
    5. ' while' → logprob: -3.3823492527008057
    6. 'x' → logprob: -3.7573492527008057
    7. 'while' → logprob: -3.7573492527008057
    8. ' k' → logprob: -3.8823492527008057
    9. ' for' → logprob: -4.007349014282227
    10. 'r' → logprob: -4.132349014282227

Token 100: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09627356380224228
    2. '=' → logprob: -2.59627366065979
    3. '_idx' → logprob: -5.721273422241211
    4. '_count' → logprob: -6.096273422241211
    5. '_' → logprob: -6.221273422241211
    6. ',' → logprob: -6.721273422241211
    7. 'while' → logprob: -7.221273422241211
    8. 'j' → logprob: -7.221273422241211
    9. '   ' → logprob: -7.346273422241211
    10. '-' → logprob: -7.346273422241211

Token 101: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0008507246384397149
    2. ' i' → logprob: -7.125850677490234
    3. '   ' → logprob: -11.250850677490234
    4. '[i' → logprob: -11.750850677490234
    5. '[' → logprob: -12.375850677490234
    6. '0' → logprob: -12.625850677490234
    7. 'reflect' → logprob: -12.750850677490234
    8. 's' → logprob: -13.000850677490234
    9. '(i' → logprob: -13.250850677490234
    10. ' ' → logprob: -13.250850677490234

Token 102: 'next' (ID: 7311)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004313568584620953
    2. ' i' → logprob: -5.8793134689331055
    3. '   ' → logprob: -7.6293134689331055
    4. 's' → logprob: -8.129313468933105
    5. ')' → logprob: -8.504313468933105
    6. ' ' → logprob: -9.004313468933105
    7. '0' → logprob: -9.379313468933105
    8. 'n' → logprob: -10.254313468933105
    9. '(i' → logprob: -10.254313468933105
    10. '[i' → logprob: -10.629313468933105

Token 103: '(g' (ID: 7791)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.7159528732299805
    2. '((' → logprob: -1.5909528732299805
    3. '(k' → logprob: -1.5909528732299805
    4. '(x' → logprob: -3.0909528732299805
    5. '(j' → logprob: -3.0909528732299805
    6. '(i' → logprob: -5.4659528732299805
    7. '(c' → logprob: -5.8409528732299805
    8. '(' → logprob: -5.9659528732299805
    9. '(chain' → logprob: -7.5909528732299805
    10. '(t' → logprob: -7.7159528732299805

Token 104: ')' (ID: 8)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.3107151687145233
    2. '(group' → logprob: -1.8107151985168457
    3. '(chain' → logprob: -2.5607151985168457
    4. '(len' → logprob: -5.310715198516846
    5. '(it' → logprob: -5.560715198516846
    6. '(' → logprob: -5.935715198516846
    7. '((' → logprob: -6.185715198516846
    8. 'for' → logprob: -6.310715198516846
    9. '(g' → logprob: -6.310715198516846
    10. '(counter' → logprob: -6.310715198516846

Token 105: ' for' (ID: 395)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.19636498391628265
    2. ' for' → logprob: -2.1963648796081543
    3. 'for' → logprob: -3.6963648796081543
    4. 'count' → logprob: -4.071364879608154
    5. '(chain' → logprob: -4.321364879608154
    6. ')' → logprob: -5.196364879608154
    7. '=count' → logprob: -6.446364879608154
    8. ' ' → logprob: -6.696364879608154
    9. '   ' → logprob: -6.946364879608154
    10. '(' → logprob: -7.321364879608154

Token 106: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7930693030357361
    2. '_' → logprob: -1.1680693626403809
    3. '_,' → logprob: -2.168069362640381
    4. 'group' → logprob: -3.418069362640381
    5. ' k' → logprob: -3.543069362640381
    6. ' group' → logprob: -4.418069362640381
    7. 'g' → logprob: -4.543069362640381
    8. 'i' → logprob: -4.668069362640381
    9. ',' → logprob: -5.293069362640381
    10. '(' → logprob: -6.293069362640381

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08895865827798843
    2. ' in' → logprob: -2.838958740234375
    3. ',g' → logprob: -3.838958740234375
    4. 'in' → logprob: -5.838958740234375
    5. ',k' → logprob: -6.463958740234375
    6. 'k' → logprob: -8.338958740234375
    7. ',in' → logprob: -9.463958740234375
    8. 'g' → logprob: -9.713958740234375
    9. ' ,' → logprob: -9.713958740234375
    10. ',_' → logprob: -10.463958740234375

Token 108: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.014631048776209354
    2. ' g' → logprob: -4.264631271362305
    3. '_g' → logprob: -8.139631271362305
    4. '_' → logprob: -8.889631271362305
    5. 'group' → logprob: -11.389631271362305
    6. '	g' → logprob: -12.014631271362305
    7. ' group' → logprob: -12.389631271362305
    8. ' _' → logprob: -12.514631271362305
    9. 'v' → logprob: -12.889631271362305
    10. 'grp' → logprob: -12.889631271362305

Token 109: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.34860050678253174
    2. ' in' → logprob: -1.2236005067825317
    3. ',' → logprob: -9.223600387573242
    4. ')' → logprob: -10.848600387573242
    5. ' ' → logprob: -11.473600387573242
    6. 'group' → logprob: -12.223600387573242
    7. '```' → logprob: -12.348600387573242
    8. '
' → logprob: -12.723600387573242
    9. ',in' → logprob: -12.973600387573242
    10. 'it' → logprob: -13.098600387573242

Token 110: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.0031786637846380472
    2. ' group' → logprob: -5.753178596496582
    3. ' ' → logprob: -14.753178596496582
    4. '   ' → logprob: -15.628178596496582
    5. '"group' → logprob: -15.628178596496582
    6. '	group' → logprob: -16.3781795501709
    7. '    ' → logprob: -16.5031795501709
    8. '(group' → logprob: -16.5031795501709
    9. '  ' → logprob: -17.2531795501709
    10. 'it' → logprob: -17.8781795501709

Token 111: 'by' (ID: 2345)
  Prédit: 'by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -5.080963092041202e-06
    2. 'b' → logprob: -12.250004768371582
    3. 'y' → logprob: -16.1250057220459
    4. 's' → logprob: -16.6250057220459
    5. 'in' → logprob: -17.5000057220459
    6. '=' → logprob: -17.5000057220459
    7. ' ' → logprob: -17.6250057220459
    8. ' by' → logprob: -18.1250057220459
    9. 'py' → logprob: -18.6250057220459
    10. ')' → logprob: -18.7500057220459

Token 112: '((' (ID: 2054)
  Prédit: '(en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(en' → logprob: -0.1383412927389145
    2. '(lambda' → logprob: -3.013341188430786
    3. '(range' → logprob: -3.138341188430786
    4. 'enumer' → logprob: -4.013341426849365
    5. '((' → logprob: -4.388341426849365
    6. '(' → logprob: -6.513341426849365
    7. '(re' → logprob: -6.638341426849365
    8. 'lambda' → logprob: -7.263341426849365
    9. '(count' → logprob: -7.263341426849365
    10. '(i' → logprob: -7.638341426849365

Token 113: 'j' (ID: 73)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31180933117866516
    2. 'enumer' → logprob: -2.1868093013763428
    3. 's' → logprob: -3.0618093013763428
    4. 're' → logprob: -3.9368093013763428
    5. '(range' → logprob: -4.186809539794922
    6. 'count' → logprob: -4.561809539794922
    7. 'j' → logprob: -4.811809539794922
    8. 'i' → logprob: -4.936809539794922
    9. '(i' → logprob: -5.061809539794922
    10. 'x' → logprob: -5.061809539794922

Token 114: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08573324978351593
    2. 'for' → logprob: -2.71073317527771
    3. ' in' → logprob: -4.335733413696289
    4. 'in' → logprob: -6.960733413696289
    5. ',' → logprob: -7.585733413696289
    6. ' ' → logprob: -8.585733413696289
    7. ')' → logprob: -8.960733413696289
    8. '>=' → logprob: -9.335733413696289
    9. '   ' → logprob: -9.585733413696289
    10. '<=' → logprob: -9.710733413696289

Token 115: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6106112599372864
    2. ' j' → logprob: -1.1106112003326416
    3. ' range' → logprob: -2.7356112003326416
    4. 'range' → logprob: -2.9856112003326416
    5. ' in' → logprob: -5.485611438751221
    6. ')' → logprob: -6.110611438751221
    7. ' ' → logprob: -7.110611438751221
    8. '  ' → logprob: -7.485611438751221
    9. '   ' → logprob: -7.860611438751221
    10. ',' → logprob: -7.860611438751221

Token 116: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04318690299987793
    2. 'in' → logprob: -3.168186902999878
    3. '<|end|>' → logprob: -9.668187141418457
    4. 'n' → logprob: -9.793187141418457
    5. ',' → logprob: -10.543187141418457
    6. ' ' → logprob: -10.543187141418457
    7. '<|end|>' → logprob: -13.043187141418457
    8. 'x' → logprob: -13.418187141418457
    9. 'range' → logprob: -13.918187141418457
    10. '  ' → logprob: -14.043187141418457

Token 117: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04483834281563759
    2. ' range' → logprob: -3.2948384284973145
    3. 'count' → logprob: -5.4198384284973145
    4. 're' → logprob: -6.2948384284973145
    5. 'chain' → logprob: -9.294837951660156
    6. '
' → logprob: -9.419837951660156
    7. ' reversed' → logprob: -9.544837951660156
    8. 'reverse' → logprob: -9.794837951660156
    9. '   ' → logprob: -9.919837951660156
    10. ' ' → logprob: -10.044837951660156

Token 118: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0005245577194727957
    2. '(' → logprob: -8.000524520874023
    3. ' i' → logprob: -9.000524520874023
    4. 'i' → logprob: -10.125524520874023
    5. ' (' → logprob: -12.000524520874023
    6. '   ' → logprob: -12.375524520874023
    7. '	i' → logprob: -12.875524520874023
    8. 's' → logprob: -13.000524520874023
    9. ',i' → logprob: -13.125524520874023
    10. ')' → logprob: -13.375524520874023

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02884196676313877
    2. ' ,' → logprob: -4.528841972351074
    3. ',-' → logprob: -4.903841972351074
    4. '-' → logprob: -5.028841972351074
    5. ' -' → logprob: -6.278841972351074
    6. ' ' → logprob: -7.028841972351074
    7. ' ,-' → logprob: -8.778841972351074
    8. ' if' → logprob: -8.903841972351074
    9. 'if' → logprob: -9.153841972351074
    10. '   ' → logprob: -9.778841972351074

Token 120: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.006300961598753929
    2. ' -' → logprob: -5.506300926208496
    3. '0' → logprob: -6.256300926208496
    4. ' ' → logprob: -9.006300926208496
    5. '-i' → logprob: -9.631300926208496
    6. '-re' → logprob: -10.256300926208496
    7. '-n' → logprob: -10.506300926208496
    8. '
' → logprob: -11.881300926208496
    9. '```' → logprob: -12.256300926208496
    10. '-l' → logprob: -12.506300926208496

Token 121: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.603335638530552e-05
    2. '-' → logprob: -10.125096321105957
    3. ' ' → logprob: -10.500096321105957
    4. '
' → logprob: -11.625096321105957
    5. ' -' → logprob: -11.750096321105957
    6. '```' → logprob: -12.250096321105957
    7. ',' → logprob: -13.312596321105957
    8. '

' → logprob: -13.937596321105957
    9. '   ' → logprob: -14.312596321105957
    10. '  ' → logprob: -14.500096321105957

Token 122: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005371429491788149
    2. ',-' → logprob: -5.630371570587158
    3. '-' → logprob: -6.380371570587158
    4. ' ,' → logprob: -10.13037109375
    5. ' -' → logprob: -11.13037109375
    6. '```' → logprob: -11.63037109375
    7. '   ' → logprob: -12.63037109375
    8. ' ,-' → logprob: -13.00537109375
    9. ',
' → logprob: -13.50537109375
    10. '-,' → logprob: -13.75537109375

Token 123: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3871963620185852
    2. ' -' → logprob: -1.1371963024139404
    3. ',-' → logprob: -9.51219654083252
    4. ' ' → logprob: -9.51219654083252
    5. ')' → logprob: -10.13719654083252
    6. '```' → logprob: -10.51219654083252
    7. '<|end|>' → logprob: -10.63719654083252
    8. ',' → logprob: -11.01219654083252
    9. '  ' → logprob: -11.63719654083252
    10. '1' → logprob: -12.01219654083252

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0034048978704959154
    2. '-' → logprob: -5.7534050941467285
    3. ' -' → logprob: -8.87840461730957
    4. ',' → logprob: -10.50340461730957
    5. ' ' → logprob: -10.87840461730957
    6. ')' → logprob: -10.87840461730957
    7. ',-' → logprob: -12.37840461730957
    8. '```' → logprob: -12.37840461730957
    9. '
' → logprob: -12.62840461730957
    10. '),' → logprob: -13.06590461730957

Token 125: ')),' (ID: 12098)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001535812160000205
    2. ')),' → logprob: -7.876535892486572
    3. ')))' → logprob: -8.251535415649414
    4. ' if' → logprob: -8.501535415649414
    5. '))),' → logprob: -8.876535415649414
    6. '))' → logprob: -9.001535415649414
    7. ' )' → logprob: -9.001535415649414
    8. 'if' → logprob: -9.001535415649414
    9. ',' → logprob: -9.876535415649414
    10. '   ' → logprob: -10.626535415649414

Token 126: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.003381260670721531
    2. ' lambda' → logprob: -5.753381252288818
    3. '   ' → logprob: -9.128381729125977
    4. '(lambda' → logprob: -9.628381729125977
    5. 'key' → logprob: -11.253381729125977
    6. ' ' → logprob: -11.628381729125977
    7. '=lambda' → logprob: -12.878381729125977
    8. '  ' → logprob: -13.253381729125977
    9. '
' → logprob: -14.128381729125977
    10. '    ' → logprob: -14.503381729125977

Token 127: ' x' (ID: 1215)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.06401780992746353
    2. ' x' → logprob: -3.3140177726745605
    3. 'j' → logprob: -3.9390177726745605
    4. ' k' → logprob: -5.3140177726745605
    5. 'x' → logprob: -7.0640177726745605
    6. 'k' → logprob: -8.189018249511719
    7. ' ' → logprob: -10.564018249511719
    8. ' idx' → logprob: -10.939018249511719
    9. ' i' → logprob: -11.064018249511719
    10. '   ' → logprob: -12.064018249511719

Token 128: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014775654301047325
    2. 's' → logprob: -4.63977575302124
    3. ' :' → logprob: -5.63977575302124
    4. ':s' → logprob: -7.38977575302124
    5. ':
' → logprob: -7.51477575302124
    6. ' s' → logprob: -8.514775276184082
    7. '0' → logprob: -10.389775276184082
    8. '
' → logprob: -11.264775276184082
    9. '1' → logprob: -11.639775276184082
    10. 'x' → logprob: -12.014775276184082

Token 129: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6430560350418091
    2. ' s' → logprob: -0.7680560350418091
    3. ' reflect' → logprob: -5.5180559158325195
    4. 'reflect' → logprob: -6.3930559158325195
    5. '(s' → logprob: -6.7680559158325195
    6. ' ' → logprob: -7.0180559158325195
    7. ' (' → logprob: -7.1430559158325195
    8. ')' → logprob: -7.7680559158325195
    9. '   ' → logprob: -8.14305591583252
    10. '0' → logprob: -8.39305591583252

Token 130: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.00037228144356049597
    2. '[s' → logprob: -8.625371932983398
    3. 'x' → logprob: -9.000371932983398
    4. '[j' → logprob: -10.250371932983398
    5. '[' → logprob: -10.625371932983398
    6. '[
' → logprob: -12.000371932983398
    7. '```' → logprob: -14.250371932983398
    8. 's' → logprob: -14.500371932983398
    9. '(x' → logprob: -14.500371932983398
    10. ' x' → logprob: -14.500371932983398

Token 131: ']=='' (ID: 71177)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.05338597670197487
    2. ' ==' → logprob: -3.1783859729766846
    3. '=='' → logprob: -5.178386211395264
    4. ')' → logprob: -6.178386211395264
    5. '!=' → logprob: -6.553386211395264
    6. '==
' → logprob: -8.303385734558105
    7. ')==' → logprob: -8.303385734558105
    8. ']==' → logprob: -8.553385734558105
    9. '=="' → logprob: -9.053385734558105
    10. ' !=' → logprob: -9.678385734558105

Token 132: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.008476639166474342
    2. ''' → logprob: -5.008476734161377
    3. 'L' → logprob: -6.758476734161377
    4. ' R' → logprob: -7.633476734161377
    5. '"' → logprob: -10.195976257324219
    6. ''L' → logprob: -11.008476257324219
    7. 'RL' → logprob: -12.008476257324219
    8. ' '' → logprob: -12.070976257324219
    9. '`' → logprob: -12.133476257324219
    10. '')' → logprob: -12.383476257324219

Token 133: '')' (ID: 1542)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.020656690001487732
    2. ')' → logprob: -4.770656585693359
    3. ')))' → logprob: -5.520656585693359
    4. '))
' → logprob: -5.895656585693359
    5. ' ))' → logprob: -6.270656585693359
    6. ' and' → logprob: -6.895656585693359
    7. 'and' → logprob: -7.270656585693359
    8. ' ' → logprob: -7.520656585693359
    9. 'if' → logprob: -8.39565658569336
    10. '),' → logprob: -8.39565658569336

Token 134: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.13067735731601715
    2. ')' → logprob: -2.6306774616241455
    3. 'if' → logprob: -3.0056774616241455
    4. ' )' → logprob: -7.255677223205566
    5. '))' → logprob: -9.130677223205566
    6. '    ' → logprob: -10.130677223205566
    7. ' and' → logprob: -10.255677223205566
    8. '),' → logprob: -11.255677223205566
    9. '()' → logprob: -12.005677223205566
    10. ')))' → logprob: -12.005677223205566

Token 135: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.04585720971226692
    2. ' k' → logprob: -3.2958571910858154
    3. ' not' → logprob: -5.2958574295043945
    4. 'not' → logprob: -5.9208574295043945
    5. '   ' → logprob: -10.795857429504395
    6. ' ' → logprob: -11.045857429504395
    7. 'x' → logprob: -11.670857429504395
    8. 'True' → logprob: -11.733357429504395
    9. ' True' → logprob: -11.733357429504395
    10. 'next' → logprob: -12.420857429504395

Token 136: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001907855912577361
    2. ')
' → logprob: -9.875190734863281
    3. ' )' → logprob: -10.250190734863281
    4. ' is' → logprob: -10.500190734863281
    5. ')is' → logprob: -10.750190734863281
    6. '==' → logprob: -11.250190734863281
    7. 'is' → logprob: -11.625190734863281
    8. ')

' → logprob: -11.875190734863281
    9. ' and' → logprob: -12.125190734863281
    10. ')[' → logprob: -12.125190734863281

Token 137: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 138: ' for' (ID: 395)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.9696683883666992
    2. '   ' → logprob: -1.2196683883666992
    3. 'next' → logprob: -1.9696683883666992
    4. '
' → logprob: -2.719668388366699
    5. ')' → logprob: -3.594668388366699
    6. '<|end|>' → logprob: -3.719668388366699
    7. ' next' → logprob: -4.594668388366699
    8. '    
' → logprob: -4.969668388366699
    9. ' left' → logprob: -5.094668388366699
    10. ' for' → logprob: -5.219668388366699

Token 139: ' idx' (ID: 14016)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2058194875717163
    2. ' j' → logprob: -2.580819606781006
    3. 'l' → logprob: -3.080819606781006
    4. 'left' → logprob: -3.955819606781006
    5. 'idx' → logprob: -4.955819606781006
    6. 'pos' → logprob: -4.955819606781006
    7. ' l' → logprob: -5.330819606781006
    8. 'x' → logprob: -5.580819606781006
    9. ' left' → logprob: -5.830819606781006
    10. 'i' → logprob: -6.330819606781006

Token 140: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01673821359872818
    2. ',' → logprob: -4.391738414764404
    3. 's' → logprob: -5.766738414764404
    4. 'in' → logprob: -7.391738414764404
    5. ' ' → logprob: -8.641737937927246
    6. '_' → logprob: -9.891737937927246
    7. '1' → logprob: -10.266737937927246
    8. '  ' → logprob: -10.391737937927246
    9. ' ,' → logprob: -10.641737937927246
    10. '_group' → logprob: -11.016737937927246

Token 141: ' next' (ID: 2613)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.18119581043720245
    2. 'left' → logprob: -1.806195855140686
    3. ' range' → logprob: -7.4311957359313965
    4. '(left' → logprob: -7.9311957359313965
    5. ' next' → logprob: -8.806196212768555
    6. 'range' → logprob: -9.056196212768555
    7. ' ' → logprob: -9.806196212768555
    8. '	left' → logprob: -10.431196212768555
    9. '[left' → logprob: -10.556196212768555
    10. ' reflect' → logprob: -10.806196212768555

Token 142: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -2.558399319241289e-05
    2. 'left' → logprob: -10.625025749206543
    3. '[left' → logprob: -13.750025749206543
    4. '(' → logprob: -16.875024795532227
    5. ',left' → logprob: -16.875024795532227
    6. ':left' → logprob: -17.125024795532227
    7. '(le' → logprob: -17.125024795532227
    8. '	left' → logprob: -17.500024795532227
    9. '(g' → logprob: -17.625024795532227
    10. '(p' → logprob: -18.250024795532227

Token 143: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20223207771778107
    2. ')' → logprob: -1.8272321224212646
    3. '()' → logprob: -4.2022318840026855
    4. '():' → logprob: -6.2022318840026855
    5. '):
' → logprob: -6.2022318840026855
    6. ',' → logprob: -7.5772318840026855
    7. ':' → logprob: -7.7022318840026855
    8. ')(' → logprob: -8.264732360839844
    9. ')+' → logprob: -8.327232360839844
    10. ' ' → logprob: -8.452232360839844

Token 144: ' []' (ID: 6126)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.010590267367661
    2. ' None' → logprob: -4.635590076446533
    3. '   ' → logprob: -7.635590076446533
    4. '0' → logprob: -8.885590553283691
    5. ')' → logprob: -9.510590553283691
    6. '-' → logprob: -10.010590553283691
    7. 'n' → logprob: -10.885590553283691
    8. '  ' → logprob: -11.010590553283691
    9. '(None' → logprob: -11.135590553283691
    10. ' ' → logprob: -11.260590553283691

Token 145: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.035175710916519165
    2. '):
' → logprob: -3.6601758003234863
    3. ':' → logprob: -5.035175800323486
    4. ')' → logprob: -6.285175800323486
    5. ' ):' → logprob: -9.160175323486328
    6. ':
' → logprob: -9.910175323486328
    7. '   ' → logprob: -10.035175323486328
    8. ' ' → logprob: -10.160175323486328
    9. ',' → logprob: -10.285175323486328
    10. '):
' → logprob: -10.785175323486328

Token 146: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.8280463218688965
    2. ' ' → logprob: -1.8280463218688965
    3. '       ' → logprob: -1.8280463218688965
    4. ':' → logprob: -1.9530463218688965
    5. '   ' → logprob: -3.0780463218688965
    6. '<|end|>' → logprob: -4.0780463218688965
    7. ' :' → logprob: -4.3280463218688965
    8. '[' → logprob: -5.2030463218688965
    9. ')' → logprob: -6.0780463218688965
    10. ' 
' → logprob: -6.3280463218688965

Token 147: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.2683161497116089
    2. 'ans' (adapté à ' ans') → logprob: -1.5183161497116089
    3. '   ' → logprob: -5.018316268920898
    4. '    ' → logprob: -6.018316268920898
    5. ' if' → logprob: -6.393316268920898
    6. '       ' → logprob: -7.018316268920898
    7. '           ' → logprob: -7.018316268920898
    8. '	ans' → logprob: -7.018316268920898
    9. ' ' → logprob: -7.518316268920898
    10. '        ' → logprob: -7.643316268920898

Token 148: '[' (ID: 58)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.04726903885602951
    2. '[' → logprob: -3.172269105911255
    3. '[i' → logprob: -5.797268867492676
    4. '<|end|>' → logprob: -7.672268867492676
    5. '[index' → logprob: -8.172268867492676
    6. '[
' → logprob: -9.422268867492676
    7. '```' → logprob: -9.922268867492676
    8. '[ix' → logprob: -10.047268867492676
    9. 'idx' → logprob: -10.422268867492676
    10. '[j' → logprob: -10.547268867492676

Token 149: 'reflect' (ID: 76183)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0037389216013252735
    2. ' idx' → logprob: -5.753738880157471
    3. 'i' → logprob: -8.503739356994629
    4. 'x' → logprob: -9.503739356994629
    5. 'index' → logprob: -9.628739356994629
    6. '(idx' → logprob: -9.878739356994629
    7. ']' → logprob: -10.253739356994629
    8. '<|end|>' → logprob: -10.253739356994629
    9. ' ' → logprob: -11.128739356994629
    10. '[idx' → logprob: -11.378739356994629

Token 150: '(i' (ID: 3649)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.08643368631601334
    2. '(i' → logprob: -2.5864336490631104
    3. '(' → logprob: -4.9614338874816895
    4. '(index' → logprob: -8.211433410644531
    5. '((' → logprob: -10.211433410644531
    6. '(x' → logprob: -10.336433410644531
    7. '(ix' → logprob: -10.461433410644531
    8. '](' → logprob: -10.711433410644531
    9. '(ii' → logprob: -11.086433410644531
    10. ' (' → logprob: -11.336433410644531

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018098909640684724
    2. ',j' → logprob: -7.626810073852539
    3. ' ,' → logprob: -7.876810073852539
    4. 'idx' → logprob: -8.001810073852539
    5. ',x' → logprob: -8.251810073852539
    6. '-' → logprob: -9.251810073852539
    7. ',index' → logprob: -9.376810073852539
    8. ',
' → logprob: -9.876810073852539
    9. ' idx' → logprob: -10.876810073852539
    10. ',i' → logprob: -11.376810073852539

Token 152: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0015554478159174323
    2. ' idx' → logprob: -6.501555442810059
    3. 'x' → logprob: -11.126555442810059
    4. '(idx' → logprob: -11.626555442810059
    5. 'index' → logprob: -11.751555442810059
    6. '	idx' → logprob: -12.251555442810059
    7. '[idx' → logprob: -12.751555442810059
    8. ' ' → logprob: -12.751555442810059
    9. '   ' → logprob: -13.501555442810059
    10. ')' → logprob: -13.626555442810059

Token 153: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.013832604512572289
    2. ')' → logprob: -4.6388325691223145
    3. ' )' → logprob: -6.1388325691223145
    4. ')])' → logprob: -6.6388325691223145
    5. ']' → logprob: -8.138833045959473
    6. ')+' → logprob: -9.263833045959473
    7. '])' → logprob: -10.263833045959473
    8. '))' → logprob: -10.513833045959473
    9. ')]
' → logprob: -10.763833045959473
    10. '])]' → logprob: -10.888833045959473

Token 154: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.08394620567560196
    2. ' +=' → logprob: -2.5839462280273438
    3. '+' → logprob: -5.333946228027344
    4. ']+=' → logprob: -9.208946228027344
    5. '=' → logprob: -9.458946228027344
    6. '+='' → logprob: -11.583946228027344
    7. ' +' → logprob: -11.833946228027344
    8. ' ' → logprob: -11.958946228027344
    9. '++' → logprob: -12.833946228027344
    10. '   ' → logprob: -12.958946228027344

Token 155: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019361276645213366
    2. ' ' → logprob: -6.501935958862305
    3. 'idx' → logprob: -8.876935958862305
    4. '2' → logprob: -9.501935958862305
    5. '(' → logprob: -10.001935958862305
    6. '(idx' → logprob: -10.751935958862305
    7. 'next' → logprob: -10.876935958862305
    8. 's' → logprob: -11.126935958862305
    9. 'len' → logprob: -11.126935958862305
    10. '   ' → logprob: -11.376935958862305

Token 156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002695386065170169
    2. ' ' → logprob: -6.127695560455322
    3. 's' → logprob: -8.627695083618164
    4. '(' → logprob: -9.877695083618164
    5. '   ' → logprob: -10.002695083618164
    6. 'ans' → logprob: -10.252695083618164
    7. 'int' → logprob: -10.627695083618164
    8. 'idx' → logprob: -10.752695083618164
    9. '-' → logprob: -10.877695083618164
    10. 'chain' → logprob: -11.002695083618164

Token 157: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 158: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 159: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 160: ' Process' (ID: 12482)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.6626433730125427
    2. 'right' → logprob: -0.9126433730125427
    3. 'left' → logprob: -4.1626434326171875
    4. ' for' → logprob: -4.5376434326171875
    5. ' ' → logprob: -4.6626434326171875
    6. ' left' → logprob: -4.7876434326171875
    7. ' Process' → logprob: -4.7876434326171875
    8. '<|end|>' → logprob: -5.1626434326171875
    9. '#' → logprob: -5.4126434326171875
    10. ' #' → logprob: -5.4126434326171875

Token 161: ' consecutive' (ID: 40840)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.4459569752216339
    2. ' consecutive' → logprob: -1.1959569454193115
    3. 'right' → logprob: -3.6959569454193115
    4. ' right' → logprob: -4.070957183837891
    5. ' chain' → logprob: -5.945957183837891
    6. 'chain' → logprob: -6.195957183837891
    7. ' j' → logprob: -6.320957183837891
    8. 'j' → logprob: -7.070957183837891
    9. 'left' → logprob: -7.195957183837891
    10. ' ' → logprob: -7.195957183837891

Token 162: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.5932180881500244
    2. 'R' → logprob: -1.2182180881500244
    3. ' L' → logprob: -2.5932180881500244
    4. ' R' → logprob: -2.7182180881500244
    5. 's' → logprob: -6.218217849731445
    6. '   ' → logprob: -6.843217849731445
    7. ' ' → logprob: -6.843217849731445
    8. 'S' → logprob: -6.843217849731445
    9. '(' → logprob: -7.343217849731445
    10. 'j' → logprob: -7.468217849731445

Token 163: ''s' (ID: 885)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2867111265659332
    2. 'to' → logprob: -2.0367112159729004
    3. ' =' → logprob: -3.2867112159729004
    4. 's' → logprob: -3.4117112159729004
    5. '=' → logprob: -3.5367112159729004
    6. '_to' → logprob: -5.9117112159729
    7. ' (' → logprob: -6.0367112159729
    8. ''s' → logprob: -6.1617112159729
    9. 'left' → logprob: -6.2867112159729
    10. 'right' → logprob: -6.6617112159729

Token 164: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5245423316955566
    2. 'to' → logprob: -0.8995423316955566
    3. 'right' → logprob: -7.274542331695557
    4. ' right' → logprob: -8.149541854858398
    5. '   ' → logprob: -9.524541854858398
    6. ' (' → logprob: -9.649541854858398
    7. ' for' → logprob: -9.649541854858398
    8. '(' → logprob: -10.399541854858398
    9. 'for' → logprob: -10.399541854858398
    10. 'To' → logprob: -10.399541854858398

Token 165: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.020583465695381165
    2. ' the' → logprob: -3.895583391189575
    3. 'right' → logprob: -11.645583152770996
    4. 'The' → logprob: -11.770583152770996
    5. '<|end|>' → logprob: -12.145583152770996
    6. '_the' → logprob: -12.645583152770996
    7. 'he' → logprob: -12.895583152770996
    8. '...' → logprob: -13.020583152770996
    9. '
' → logprob: -13.520583152770996
    10. ' ' → logprob: -13.770583152770996

Token 166: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.008310186676681042
    2. 'left' → logprob: -5.008310317993164
    3. ' right' → logprob: -6.883310317993164
    4. 'j' → logprob: -7.758310317993164
    5. '_right' → logprob: -10.133310317993164
    6. 'ight' → logprob: -11.008310317993164
    7. 'i' → logprob: -11.258310317993164
    8. '[right' → logprob: -11.758310317993164
    9. '```' → logprob: -11.883310317993164
    10. '
' → logprob: -12.008310317993164

Token 167: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.6493132710456848
    2. 'of' → logprob: -0.8993132710456848
    3. '   ' → logprob: -3.77431321144104
    4. 'for' → logprob: -4.024313449859619
    5. '(' → logprob: -4.524313449859619
    6. ' (' → logprob: -4.649313449859619
    7. '(i' → logprob: -5.399313449859619
    8. ' for' → logprob: -6.024313449859619
    9. '(of' → logprob: -7.149313449859619
    10. '(right' → logprob: -8.524312973022461

Token 168: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00499441334977746
    2. ' i' → logprob: -5.3799943923950195
    3. '(i' → logprob: -8.37999439239502
    4. 'j' → logprob: -9.62999439239502
    5. 'range' → logprob: -10.12999439239502
    6. '   ' → logprob: -11.75499439239502
    7. '(' → logprob: -12.25499439239502
    8. ' (' → logprob: -12.37999439239502
    9. '_i' → logprob: -12.75499439239502
    10. 'for' → logprob: -12.87999439239502

Token 169: '+' (ID: 10)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.08041487634181976
    2. ' right' → logprob: -2.7054147720336914
    3. '   ' → logprob: -4.705414772033691
    4. '(right' → logprob: -7.580414772033691
    5. '	right' → logprob: -7.955414772033691
    6. '(' → logprob: -9.705414772033691
    7. '...' → logprob: -9.705414772033691
    8. 'for' → logprob: -9.955414772033691
    9. '[right' → logprob: -9.955414772033691
    10. '```' → logprob: -10.580414772033691

Token 170: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0551355816423893
    2. '2' → logprob: -2.930135488510132
    3. ' ' → logprob: -8.930135726928711
    4. 'range' → logprob: -9.805135726928711
    5. '3' → logprob: -11.180135726928711
    6. '0' → logprob: -11.180135726928711
    7. '   ' → logprob: -11.867635726928711
    8. '```' → logprob: -12.492635726928711
    9. '
' → logprob: -12.617635726928711
    10. '+' → logprob: -12.992635726928711

Token 171: '
' (ID: 198)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.3087530732154846
    2. '   ' → logprob: -1.6837530136108398
    3. ' right' → logprob: -2.55875301361084
    4. '	right' → logprob: -6.55875301361084
    5. '(right' → logprob: -7.30875301361084
    6. '[right' → logprob: -8.93375301361084
    7. '       ' → logprob: -10.05875301361084
    8. ',right' → logprob: -10.18375301361084
    9. '_right' → logprob: -10.43375301361084
    10. '```' → logprob: -10.55875301361084

Token 172: '   ' (ID: 271)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -1.0229032039642334
    2. 'right' → logprob: -1.0229032039642334
    3. '   ' → logprob: -1.2729032039642334
    4. '	right' → logprob: -7.7729034423828125
    5. '(right' → logprob: -8.897903442382812
    6. '       ' → logprob: -9.522903442382812
    7. '  ' → logprob: -9.772903442382812
    8. '```' → logprob: -10.272903442382812
    9. ' ' → logprob: -10.522903442382812
    10. '
' → logprob: -10.647903442382812

Token 173: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.0015374773647636175
    2. ' right' → logprob: -6.501537322998047
    3. 'for' → logprob: -11.001537322998047
    4. 'left' → logprob: -12.001537322998047
    5. '   ' → logprob: -12.376537322998047
    6. 'r' → logprob: -12.876537322998047
    7. '	right' → logprob: -13.626537322998047
    8. '.right' → logprob: -14.376537322998047
    9. '_right' → logprob: -14.376537322998047
    10. '[right' → logprob: -14.626537322998047

Token 174: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033652957528829575
    2. '=' → logprob: -3.4086530208587646
    3. ' =(' → logprob: -12.908653259277344
    4. '=(' → logprob: -13.158653259277344
    5. ' ' → logprob: -14.033653259277344
    6. 's' → logprob: -14.283653259277344
    7. 'for' → logprob: -14.283653259277344
    8. ' (' → logprob: -15.533653259277344
    9. '   ' → logprob: -16.033653259277344
    10. '(' → logprob: -16.158653259277344

Token 175: ' (' (ID: 350)
  Prédit: '(next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.07000701129436493
    2. ' (' → logprob: -2.695007085800171
    3. '[next' → logprob: -10.32000732421875
    4. '(n' → logprob: -11.82000732421875
    5. '(' → logprob: -11.82000732421875
    6. ' ' → logprob: -12.19500732421875
    7. '(list' → logprob: -12.44500732421875
    8. '(iter' → logprob: -12.94500732421875
    9. 'next' → logprob: -13.32000732421875
    10. '   ' → logprob: -13.32000732421875

Token 176: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.1831498146057129
    2. '(next' → logprob: -1.808149814605713
    3. ' next' → logprob: -6.183149814605713
    4. '(k' → logprob: -7.558149814605713
    5. 'k' → logprob: -7.933149814605713
    6. '(j' → logprob: -8.058149337768555
    7. '[next' → logprob: -9.433149337768555
    8. 'j' → logprob: -10.808149337768555
    9. ' (' → logprob: -11.433149337768555
    10. '(n' → logprob: -11.683149337768555

Token 177: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -1.7432603272027336e-06
    2. '(' → logprob: -13.625001907348633
    3. 'g' → logprob: -14.750001907348633
    4. ' (' → logprob: -17.750001907348633
    5. '(
' → logprob: -18.125001907348633
    6. '(group' → logprob: -18.750001907348633
    7. '/g' → logprob: -19.000001907348633
    8. '(s' → logprob: -19.250001907348633
    9. '[g' → logprob: -19.250001907348633
    10. '...' → logprob: -19.250001907348633

Token 178: ')' (ID: 8)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12697471678256989
    2. 'for' → logprob: -2.1269748210906982
    3. ')' → logprob: -10.126975059509277
    4. ' ' → logprob: -12.501975059509277
    5. '(for' → logprob: -13.751975059509277
    6. '(' → logprob: -14.126975059509277
    7. ' (' → logprob: -14.626975059509277
    8. ' )' → logprob: -15.251975059509277
    9. '	for' → logprob: -15.501975059509277
    10. ',' → logprob: -16.12697410583496

Token 179: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16022412478923798
    2. ' for' → logprob: -1.9102240800857544
    3. '	for' → logprob: -17.28522491455078
    4. ' ' → logprob: -17.66022491455078
    5. ')' → logprob: -18.53522491455078
    6. '(for' → logprob: -19.03522491455078
    7. '
' → logprob: -20.03522491455078
    8. 'or' → logprob: -20.03522491455078
    9. 'from' → logprob: -20.66022491455078
    10. '(' → logprob: -21.03522491455078

Token 180: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.28139805793762207
    2. ' k' → logprob: -1.406398057937622
    3. '(k' → logprob: -8.531397819519043
    4. ' ' → logprob: -11.031397819519043
    5. ' (' → logprob: -12.343897819519043
    6. ',' → logprob: -12.843897819519043
    7. ',k' → logprob: -12.906397819519043
    8. '   ' → logprob: -12.906397819519043
    9. '	k' → logprob: -13.031397819519043
    10. '  ' → logprob: -13.156397819519043

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.129266067640856e-05
    2. ' ,' → logprob: -10.875020980834961
    3. ' in' → logprob: -13.500020980834961
    4. '<|end|>' → logprob: -15.250020980834961
    5. 'in' → logprob: -15.500020980834961
    6. ',g' → logprob: -15.750020980834961
    7. ',v' → logprob: -16.75002098083496
    8. ',user' → logprob: -17.00002098083496
    9. ',j' → logprob: -17.25002098083496
    10. ',k' → logprob: -17.25002098083496

Token 182: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.17977629601955414
    2. ' g' → logprob: -1.8047763109207153
    3. 'group' → logprob: -11.179776191711426
    4. ' in' → logprob: -12.679776191711426
    5. ' ' → logprob: -12.804776191711426
    6. ' group' → logprob: -12.929776191711426
    7. '	g' → logprob: -12.929776191711426
    8. '...' → logprob: -13.429776191711426
    9. '```' → logprob: -13.929776191711426
    10. '_g' → logprob: -14.054776191711426

Token 183: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3134553134441376
    2. ' in' → logprob: -1.31345534324646
    3. ',' → logprob: -8.563455581665039
    4. '
' → logprob: -13.813455581665039
    5. ' ' → logprob: -14.688455581665039
    6. 's' → logprob: -15.688455581665039
    7. '...' → logprob: -15.813455581665039
    8. '```' → logprob: -15.813455581665039
    9. 'group' → logprob: -15.938455581665039
    10. ' ,' → logprob: -16.31345558166504

Token 184: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.0007154120248742402
    2. ' group' → logprob: -7.250715255737305
    3. 'chain' → logprob: -13.000715255737305
    4. '(group' → logprob: -13.125715255737305
    5. 'enumer' → logprob: -14.875715255737305
    6. 'pair' → logprob: -15.750715255737305
    7. '
' → logprob: -15.875715255737305
    8. '...' → logprob: -16.125715255737305
    9. '"group' → logprob: -16.250715255737305
    10. '[group' → logprob: -16.375715255737305

Token 185: 'by' (ID: 2345)
  Prédit: 'by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.00021486106561496854
    2. 'py' → logprob: -8.750214576721191
    3. 'in' → logprob: -11.500214576721191
    4. 'if' → logprob: -11.500214576721191
    5. 'id' → logprob: -11.750214576721191
    6. 'of' → logprob: -11.750214576721191
    7. 'key' → logprob: -12.750214576721191
    8. 'p' → logprob: -13.250214576721191
    9. 'up' → logprob: -13.625214576721191
    10. '_by' → logprob: -13.625214576721191

Token 186: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.006609502714127302
    2. '(j' → logprob: -5.1316094398498535
    3. '(range' → logprob: -7.6316094398498535
    4. '(' → logprob: -9.006609916687012
    5. '(
' → logprob: -10.381609916687012
    6. 'range' → logprob: -12.131609916687012
    7. ' (' → logprob: -12.131609916687012
    8. '
' → logprob: -12.256609916687012
    9. '(k' → logprob: -12.381609916687012
    10. ' ((' → logprob: -12.381609916687012

Token 187: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0005118065746501088
    2. ' j' → logprob: -7.750511646270752
    3. '(j' → logprob: -9.62551212310791
    4. 'range' → logprob: -12.37551212310791
    5. '   ' → logprob: -12.50051212310791
    6. '[j' → logprob: -13.25051212310791
    7. ' ' → logprob: -13.62551212310791
    8. ' (' → logprob: -14.12551212310791
    9. 'x' → logprob: -14.50051212310791
    10. '    ' → logprob: -14.62551212310791

Token 188: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6932267546653748
    2. 'for' → logprob: -0.6932267546653748
    3. ' in' → logprob: -9.94322681427002
    4. ' ' → logprob: -10.94322681427002
    5. '<|end|>' → logprob: -12.56822681427002
    6. 'in' → logprob: -12.94322681427002
    7. '	for' → logprob: -13.56822681427002
    8. 'range' → logprob: -13.56822681427002
    9. '(range' → logprob: -13.81822681427002
    10. '   ' → logprob: -14.31822681427002

Token 189: ' j' (ID: 441)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04306473210453987
    2. ' range' → logprob: -3.168064832687378
    3. '(range' → logprob: -9.793065071105957
    4. ' in' → logprob: -12.918065071105957
    5. 'in' → logprob: -13.168065071105957
    6. '	range' → logprob: -13.793065071105957
    7. 'chain' → logprob: -13.918065071105957
    8. 'i' → logprob: -14.293065071105957
    9. ' ' → logprob: -14.543065071105957
    10. '   ' → logprob: -14.918065071105957

Token 190: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004689049907028675
    2. ' range' → logprob: -5.3796892166137695
    3. '(range' → logprob: -9.62968921661377
    4. 'in' → logprob: -13.50468921661377
    5. ' in' → logprob: -14.62968921661377
    6. '	range' → logprob: -14.75468921661377
    7. ' ' → logprob: -15.37968921661377
    8. 'count' → logprob: -15.50468921661377
    9. '(' → logprob: -15.75468921661377
    10. '   ' → logprob: -16.129688262939453

Token 191: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0022549335844814777
    2. ' range' → logprob: -6.127254962921143
    3. '(range' → logprob: -9.752254486083984
    4. 'chain' → logprob: -12.502254486083984
    5. 'count' → logprob: -12.627254486083984
    6. '   ' → logprob: -13.252254486083984
    7. ' ' → logprob: -14.127254486083984
    8. '	range' → logprob: -14.252254486083984
    9. 'rang' → logprob: -15.252254486083984
    10. '  ' → logprob: -15.377254486083984

Token 192: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.070975071750581e-05
    2. 'i' → logprob: -11.125030517578125
    3. '(' → logprob: -11.375030517578125
    4. '((' → logprob: -13.875030517578125
    5. '(n' → logprob: -14.000030517578125
    6. '(ii' → logprob: -14.875030517578125
    7. 'n' → logprob: -15.125030517578125
    8. '   ' → logprob: -15.125030517578125
    9. ' (' → logprob: -15.125030517578125
    10. '```' → logprob: -15.250030517578125

Token 193: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0008503671269863844
    2. ' +' → logprob: -7.375850200653076
    3. 'n' → logprob: -9.375850677490234
    4. '2' → logprob: -10.125850677490234
    5. '+n' → logprob: -10.125850677490234
    6. ',' → logprob: -10.375850677490234
    7. '1' → logprob: -11.625850677490234
    8. '(n' → logprob: -12.375850677490234
    9. '+,' → logprob: -13.125850677490234
    10. '+
' → logprob: -13.375850677490234

Token 194: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005792870186269283
    2. '1' → logprob: -6.00579309463501
    3. ' ' → logprob: -6.00579309463501
    4. 'n' → logprob: -7.38079309463501
    5. ' n' → logprob: -9.380792617797852
    6. '   ' → logprob: -10.068292617797852
    7. '```' → logprob: -10.443292617797852
    8. '
' → logprob: -10.630792617797852
    9. '

' → logprob: -12.380792617797852
    10. '  ' → logprob: -12.443292617797852

Token 195: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0038629011251032352
    2. ',n' → logprob: -5.7538628578186035
    3. 'n' → logprob: -7.3788628578186035
    4. ' ,' → logprob: -9.878863334655762
    5. '```' → logprob: -12.378863334655762
    6. ' n' → logprob: -13.753863334655762
    7. ' ' → logprob: -14.003863334655762
    8. ',len' → logprob: -14.628863334655762
    9. '   ' → logprob: -15.003863334655762
    10. '),' → logprob: -15.003863334655762

Token 196: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0009223000961355865
    2. ' n' → logprob: -7.000922203063965
    3. '   ' → logprob: -12.875922203063965
    4. '	n' → logprob: -13.125922203063965
    5. '```' → logprob: -13.375922203063965
    6. '<|end|>' → logprob: -13.500922203063965
    7. ' ' → logprob: -13.875922203063965
    8. 'len' → logprob: -14.500922203063965
    9. ',n' → logprob: -14.500922203063965
    10. ',' → logprob: -14.875922203063965

Token 197: ')),' (ID: 12098)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.007685420103371143
    2. ',' → logprob: -5.50768518447876
    3. ')),' → logprob: -6.13268518447876
    4. ' ),' → logprob: -6.88268518447876
    5. '   ' → logprob: -9.132685661315918
    6. '```' → logprob: -9.632685661315918
    7. ' ' → logprob: -9.882685661315918
    8. ')' → logprob: -10.132685661315918
    9. '+' → logprob: -10.382685661315918
    10. 'if' → logprob: -10.632685661315918

Token 198: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.01604997180402279
    2. ' lambda' → logprob: -4.141049861907959
    3. '(lambda' → logprob: -12.141050338745117
    4. '           ' → logprob: -13.641050338745117
    5. '       ' → logprob: -13.766050338745117
    6. '=lambda' → logprob: -13.891050338745117
    7. '
' → logprob: -14.141050338745117
    8. '   ' → logprob: -14.141050338745117
    9. '    ' → logprob: -14.266050338745117
    10. '```' → logprob: -14.391050338745117

Token 199: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06197776645421982
    2. ' x' → logprob: -2.8119778633117676
    3. 'lambda' → logprob: -11.81197738647461
    4. ' lambda' → logprob: -13.18697738647461
    5. ' ' → logprob: -14.68697738647461
    6. '   ' → logprob: -16.31197738647461
    7. 's' → logprob: -16.68697738647461
    8. 'j' → logprob: -16.93697738647461
    9. '  ' → logprob: -17.43697738647461
    10. ' ' → logprob: -17.56197738647461

Token 200: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.288163083605468e-05
    2. ' :' → logprob: -10.125052452087402
    3. ':s' → logprob: -11.750052452087402
    4. 's' → logprob: -12.625052452087402
    5. ':
' → logprob: -14.625052452087402
    6. ':x' → logprob: -15.750052452087402
    7. ' ' → logprob: -15.875052452087402
    8. '   ' → logprob: -15.875052452087402
    9. '```' → logprob: -16.25005340576172
    10. 'x' → logprob: -16.50005340576172

Token 201: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07144880294799805
    2. ' s' → logprob: -2.696448802947998
    3. 'x' → logprob: -7.196448802947998
    4. 'lambda' → logprob: -7.696448802947998
    5. ' lambda' → logprob: -9.196449279785156
    6. ' ' → logprob: -9.696449279785156
    7. '   ' → logprob: -9.946449279785156
    8. ' x' → logprob: -10.196449279785156
    9. '(s' → logprob: -10.946449279785156
    10. ' ' → logprob: -11.821449279785156

Token 202: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -8.280175097752362e-05
    2. 'x' → logprob: -9.875082969665527
    3. '[j' → logprob: -10.500082969665527
    4. '(x' → logprob: -13.625082969665527
    5. 'j' → logprob: -13.875082969665527
    6. '{x' → logprob: -14.375082969665527
    7. '[' → logprob: -14.500082969665527
    8. ' x' → logprob: -15.500082969665527
    9. '<x' → logprob: -16.00008201599121
    10. '[
' → logprob: -16.00008201599121

Token 203: ']=='' (ID: 71177)
  Prédit: '==''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.04291137680411339
    2. ']=='' → logprob: -3.2929112911224365
    3. '==' → logprob: -5.792911529541016
    4. ' =='' → logprob: -7.042911529541016
    5. ']==' → logprob: -7.917911529541016
    6. ' ==' → logprob: -8.667911529541016
    7. ']' → logprob: -9.167911529541016
    8. '[' → logprob: -9.542911529541016
    9. ')=='' → logprob: -9.542911529541016
    10. '']=='' → logprob: -10.042911529541016

Token 204: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.13001950085163116
    2. ''L' → logprob: -2.130019426345825
    3. ''' → logprob: -6.380019664764404
    4. '"L' → logprob: -7.005019664764404
    5. 'R' → logprob: -8.755019187927246
    6. ' L' → logprob: -9.755019187927246
    7. 'False' → logprob: -10.255019187927246
    8. '
' → logprob: -10.442519187927246
    9. ''S' → logprob: -10.505019187927246
    10. '`' → logprob: -10.505019187927246

Token 205: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004410771187394857
    2. '))' → logprob: -5.504410743713379
    3. ' )' → logprob: -9.379410743713379
    4. ')))' → logprob: -9.504410743713379
    5. '   ' → logprob: -10.254410743713379
    6. '')' → logprob: -10.379410743713379
    7. '))
' → logprob: -10.379410743713379
    8. ')
' → logprob: -10.379410743713379
    9. ')))
' → logprob: -12.504410743713379
    10. '),' → logprob: -12.504410743713379

Token 206: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03852887079119682
    2. 'if' → logprob: -3.2885289192199707
    3. ')' → logprob: -8.288528442382812
    4. '    ' → logprob: -8.913528442382812
    5. '        ' → logprob: -10.288528442382812
    6. '   ' → logprob: -10.413528442382812
    7. ' ' → logprob: -11.538528442382812
    8. '  ' → logprob: -12.538528442382812
    9. '     ' → logprob: -12.663528442382812
    10. '          ' → logprob: -12.663528442382812

Token 207: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0009217040496878326
    2. ' k' → logprob: -7.125921726226807
    3. 'not' → logprob: -9.250921249389648
    4. ' not' → logprob: -11.000921249389648
    5. '   ' → logprob: -12.750921249389648
    6. ' ' → logprob: -15.375921249389648
    7. ' ' → logprob: -15.438421249389648
    8. ')' → logprob: -15.563421249389648
    9. '    ' → logprob: -15.875921249389648
    10. '  ' → logprob: -16.18842124938965

Token 208: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3496459722518921
    2. ')' → logprob: -1.224645972251892
    3. '   ' → logprob: -7.474646091461182
    4. ')

' → logprob: -8.849645614624023
    5. ')
' → logprob: -8.974645614624023
    6. '))
' → logprob: -8.974645614624023
    7. ' )
' → logprob: -9.099645614624023
    8. '))' → logprob: -9.849645614624023
    9. ' )' → logprob: -10.849645614624023
    10. '):
' → logprob: -11.599645614624023

Token 209: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2644459307193756
    2. ' for' → logprob: -1.5144459009170532
    3. '   ' → logprob: -4.389445781707764
    4. '	for' → logprob: -11.014446258544922
    5. ' ' → logprob: -11.764446258544922
    6. '  ' → logprob: -13.014446258544922
    7. ')' → logprob: -13.264446258544922
    8. '<|end|>' → logprob: -13.764446258544922
    9. '       ' → logprob: -14.514446258544922
    10. '```' → logprob: -15.264446258544922

Token 210: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -6.76628842484206e-05
    2. ' for' → logprob: -9.625067710876465
    3. '   ' → logprob: -13.375067710876465
    4. ' ' → logprob: -18.50006675720215
    5. '	for' → logprob: -19.37506675720215
    6. '       ' → logprob: -20.12506675720215
    7. '```' → logprob: -20.12506675720215
    8. 'next' → logprob: -20.25006675720215
    9. '    
' → logprob: -20.37506675720215
    10. '
' → logprob: -20.50006675720215

Token 211: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.05492832511663437
    2. ' idx' → logprob: -2.9299283027648926
    3. 'j' → logprob: -10.92992877960205
    4. 'x' → logprob: -12.55492877960205
    5. 'r' → logprob: -12.55492877960205
    6. ' ' → logprob: -12.67992877960205
    7. '	idx' → logprob: -12.67992877960205
    8. 'index' → logprob: -12.80492877960205
    9. ' j' → logprob: -13.17992877960205
    10. '_idx' → logprob: -13.17992877960205

Token 212: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023254794999957085
    2. 'in' → logprob: -3.773254871368408
    3. ' ' → logprob: -12.27325439453125
    4. ' next' → logprob: -13.52325439453125
    5. '   ' → logprob: -14.14825439453125
    6. '  ' → logprob: -14.27325439453125
    7. ',' → logprob: -14.39825439453125
    8. 'next' → logprob: -14.89825439453125
    9. '...' → logprob: -16.02325439453125
    10. ')' → logprob: -16.14825439453125

Token 213: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.4741020202636719
    2. ' next' → logprob: -0.9741020202636719
    3. '(next' → logprob: -10.974102020263672
    4. '[next' → logprob: -12.849102020263672
    5. '	next' → logprob: -12.974102020263672
    6. 'range' → logprob: -14.724102020263672
    7. 'right' → logprob: -14.849102020263672
    8. ' ' → logprob: -15.099102020263672
    9. ',next' → logprob: -15.349102020263672
    10. ' range' → logprob: -15.599102020263672

Token 214: '(right' (ID: 52104)
  Prédit: '(right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(right' → logprob: -0.00029744720086455345
    2. 'right' → logprob: -8.125297546386719
    3. '[right' → logprob: -14.000297546386719
    4. '(left' → logprob: -15.750297546386719
    5. ',right' → logprob: -15.875297546386719
    6. ' right' → logprob: -16.37529754638672
    7. ' (' → logprob: -16.75029754638672
    8. '(' → logprob: -17.12529754638672
    9. '	right' → logprob: -17.62529754638672
    10. '(rhs' → logprob: -17.62529754638672

Token 215: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00033117449493147433
    2. '(),' → logprob: -9.125330924987793
    3. '([]' → logprob: -9.375330924987793
    4. '[]' → logprob: -9.750330924987793
    5. '[],' → logprob: -10.250330924987793
    6. ' ,' → logprob: -10.875330924987793
    7. '):' → logprob: -11.375330924987793
    8. '[]):' → logprob: -12.000330924987793
    9. '()' → logprob: -13.625330924987793
    10. ',
' → logprob: -14.000330924987793

Token 216: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.006152869667857885
    2. '[]):' → logprob: -5.256153106689453
    3. ' []' → logprob: -7.006153106689453
    4. '[])' → logprob: -12.381153106689453
    5. '[]
' → logprob: -13.381153106689453
    6. '[],' → logprob: -13.506153106689453
    7. '):' → logprob: -13.506153106689453
    8. '([]' → logprob: -14.006153106689453
    9. '[]>' → logprob: -14.131153106689453
    10. '[' → logprob: -14.131153106689453

Token 217: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.21517063677310944
    2. '):
' → logprob: -1.9651706218719482
    3. ':' → logprob: -3.3401706218719482
    4. '       ' → logprob: -4.465170860290527
    5. ')' → logprob: -5.965170860290527
    6. ':
' → logprob: -5.965170860290527
    7. '   ' → logprob: -6.715170860290527
    8. '):

' → logprob: -9.840170860290527
    9. '):
' → logprob: -10.465170860290527
    10. ']:' → logprob: -10.590170860290527

Token 218: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004205309320241213
    2. '   ' → logprob: -6.254205226898193
    3. ' ans' → logprob: -6.629205226898193
    4. 'ans' → logprob: -7.254205226898193
    5. '	ans' → logprob: -9.629205703735352
    6. '           ' → logprob: -10.254205703735352
    7. '(ans' → logprob: -10.504205703735352
    8. '      ' → logprob: -10.629205703735352
    9. '     ' → logprob: -11.004205703735352
    10. '<|end|>' → logprob: -11.504205703735352

Token 219: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.003199454629793763
    2. ' ans' → logprob: -5.753199577331543
    3. '   ' → logprob: -11.253199577331543
    4. '       ' → logprob: -12.753199577331543
    5. '	ans' → logprob: -13.128199577331543
    6. '           ' → logprob: -13.753199577331543
    7. ' ' → logprob: -14.253199577331543
    8. '
' → logprob: -14.378199577331543
    9. '  ' → logprob: -14.503199577331543
    10. '(ans' → logprob: -14.753199577331543

Token 220: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.816093228830141e-06
    2. '[idx' → logprob: -13.75000286102295
    3. '[
' → logprob: -14.25000286102295
    4. 'reflect' → logprob: -14.50000286102295
    5. '```' → logprob: -15.62500286102295
    6. 'ans' → logprob: -16.750001907348633
    7. '[i' → logprob: -17.000001907348633
    8. '[ind' → logprob: -17.250001907348633
    9. '[in' → logprob: -17.250001907348633
    10. '[index' → logprob: -17.375001907348633

Token 221: 'reflect' (ID: 76183)
  Prédit: 'reflect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reflect' → logprob: -5.598092684522271e-05
    2. ' reflect' → logprob: -9.875056266784668
    3. 'ref' → logprob: -12.875056266784668
    4. '.reflect' → logprob: -14.000056266784668
    5. '[' → logprob: -15.000056266784668
    6. '(' → logprob: -15.625056266784668
    7. '(ref' → logprob: -15.750056266784668
    8. '   ' → logprob: -16.62505531311035
    9. 'Reflect' → logprob: -16.75005531311035
    10. '
' → logprob: -16.87505531311035

Token 222: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0020611651707440615
    2. '(' → logprob: -6.252061367034912
    3. 'i' → logprob: -9.002060890197754
    4. '(
' → logprob: -12.627060890197754
    5. ')' → logprob: -13.127060890197754
    6. ' i' → logprob: -13.377060890197754
    7. ',i' → logprob: -14.002060890197754
    8. ' (' → logprob: -14.502060890197754
    9. ')i' → logprob: -15.502060890197754
    10. ',' → logprob: -15.752060890197754

Token 223: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014809363055974245
    2. '+' → logprob: -7.251481056213379
    3. ' ,' → logprob: -7.376481056213379
    4. ',
' → logprob: -9.876481056213379
    5. ',i' → logprob: -10.876481056213379
    6. ',j' → logprob: -11.126481056213379
    7. '   ' → logprob: -11.251481056213379
    8. ')' → logprob: -11.376481056213379
    9. ' +' → logprob: -11.501481056213379
    10. '+,' → logprob: -12.126481056213379

Token 224: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0010646054288372397
    2. ' idx' → logprob: -6.876064777374268
    3. 'i' → logprob: -10.75106430053711
    4. 'index' → logprob: -13.00106430053711
    5. '   ' → logprob: -13.12606430053711
    6. '(idx' → logprob: -13.62606430053711
    7. '  ' → logprob: -13.75106430053711
    8. ' ' → logprob: -14.00106430053711
    9. '	idx' → logprob: -14.62606430053711
    10. '    ' → logprob: -14.75106430053711

Token 225: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.026529952883720398
    2. ')' → logprob: -4.026529788970947
    3. ']' → logprob: -5.026529788970947
    4. ')+' → logprob: -6.651529788970947
    5. ']+' → logprob: -8.026530265808105
    6. '+' → logprob: -10.026530265808105
    7. ' )' → logprob: -10.026530265808105
    8. ']+=' → logprob: -10.276530265808105
    9. ' ]' → logprob: -11.776530265808105
    10. '   ' → logprob: -12.026530265808105

Token 226: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0020214279647916555
    2. ' +=' → logprob: -6.252021312713623
    3. ']+=' → logprob: -9.627021789550781
    4. '+' → logprob: -11.127021789550781
    5. '   ' → logprob: -11.627021789550781
    6. '```' → logprob: -13.752021789550781
    7. '[' → logprob: -14.127021789550781
    8. '  ' → logprob: -14.377021789550781
    9. '    ' → logprob: -15.627021789550781
    10. '+='' → logprob: -15.752021789550781

Token 227: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029756641015410423
    2. ' ' → logprob: -8.125297546386719
    3. '```' → logprob: -14.125297546386719
    4. '2' → logprob: -15.625297546386719
    5. '   ' → logprob: -15.750297546386719
    6. '-' → logprob: -15.750297546386719
    7. '0' → logprob: -16.25029754638672
    8. '`' → logprob: -16.87529754638672
    9. '+' → logprob: -17.31279754638672
    10. '
' → logprob: -17.37529754638672

Token 228: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -12.625004768371582
    3. '0' → logprob: -14.250004768371582
    4. '-' → logprob: -15.500004768371582
    5. '```' → logprob: -15.750004768371582
    6. '2' → logprob: -15.750004768371582
    7. '<|end|>' → logprob: -15.937504768371582
    8. '!' → logprob: -17.062503814697266
    9. '   ' → logprob: -17.500003814697266
    10. '`' → logprob: -18.000003814697266

Token 229: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 230: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6472795605659485
    2. '<|end|>' → logprob: -1.0222795009613037
    3. ' ' → logprob: -3.3972795009613037
    4. '[]' → logprob: -3.6472795009613037
    5. '[' → logprob: -3.8972795009613037
    6. '
' → logprob: -4.022279739379883
    7. '   ' → logprob: -5.522279739379883
    8. ']' → logprob: -6.022279739379883
    9. '<|end|>' → logprob: -6.147279739379883
    10. '#' → logprob: -6.522279739379883

Token 231: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.39118659496307373
    2. '(ans' → logprob: -1.3911865949630737
    3. '(*' → logprob: -2.7661867141723633
    4. '()' → logprob: -4.891186714172363
    5. '('' → logprob: -5.891186714172363
    6. '(sum' → logprob: -7.391186714172363
    7. '(len' → logprob: -7.766186714172363
    8. '(tuple' → logprob: -8.016186714172363
    9. 'ans' → logprob: -9.266186714172363
    10. '("' → logprob: -9.391186714172363

Token 232: 'map' (ID: 3726)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -3.128163257315464e-07
    2. '(ans' → logprob: -16.125
    3. ' ans' → logprob: -16.375
    4. '	ans' → logprob: -20.125
    5. '`' → logprob: -21.75
    6. 'a' → logprob: -21.75
    7. '[' → logprob: -21.875
    8. '```' → logprob: -22.625
    9. ')' → logprob: -22.875
    10. 'answer' → logprob: -23.125

Token 233: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.3693102300167084
    2. '(int' → logprob: -1.4943102598190308
    3. 'str' → logprob: -2.619310140609741
    4. 'int' → logprob: -5.61931037902832
    5. '(ans' → logprob: -5.86931037902832
    6. '(' → logprob: -6.36931037902832
    7. '(lambda' → logprob: -6.74431037902832
    8. 'list' → logprob: -7.49431037902832
    9. '(tuple' → logprob: -7.74431037902832
    10. '(abs' → logprob: -8.61931037902832

Token 234: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003661475842818618
    2. '(ans' → logprob: -5.628661632537842
    3. ' ,' → logprob: -10.503661155700684
    4. ',(' → logprob: -10.878661155700684
    5. '(' → logprob: -11.503661155700684
    6. ',args' → logprob: -13.003661155700684
    7. '```' → logprob: -14.253661155700684
    8. 'ans' → logprob: -14.378661155700684
    9. '(),' → logprob: -15.253661155700684
    10. '`,' → logprob: -15.753661155700684

Token 235: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0009152670972980559
    2. ' ans' → logprob: -7.000915050506592
    3. '(ans' → logprob: -12.50091552734375
    4. '	ans' → logprob: -16.50091552734375
    5. 'answer' → logprob: -17.75091552734375
    6. ')' → logprob: -19.50091552734375
    7. '   ' → logprob: -19.62591552734375
    8. '
' → logprob: -19.87591552734375
    9. '_ans' → logprob: -19.87591552734375
    10. 'ANS' → logprob: -20.12591552734375

Token 236: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.008685367181897163
    2. ')' → logprob: -4.75868558883667
    3. '))
' → logprob: -9.633685111999512
    4. ')))' → logprob: -12.633685111999512
    5. '),' → logprob: -14.383685111999512
    6. '])' → logprob: -15.133685111999512
    7. ')
' → logprob: -15.133685111999512
    8. ' ))' → logprob: -15.508685111999512
    9. '()))' → logprob: -15.633685111999512
    10. ')]' → logprob: -16.383686065673828


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 234
Tokens correctement prédits (1ère position, stricte): 80
Tokens correctement prédits (1ère position, avec adaptation): 83
Tokens correctement prédits (top 10): 183
Précision stricte (1ère position): 34.19%
Précision adaptée (1ère position): 35.47%
Précision (top 10): 78.21%
================================================================================
