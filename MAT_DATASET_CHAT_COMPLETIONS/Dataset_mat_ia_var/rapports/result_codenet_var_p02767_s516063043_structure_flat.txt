================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:25:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
X = list(map(int, input().split()))
ans = float('inf')
i = 0
while i < 100:
    temp = 0
    j = 0
    while j < N:
        temp += (X[j] - (i+1)) ** 2
        j += 1
    if ans > temp:
        ans = temp
    i += 1
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00011903966515092179
    2. '```' → logprob: -10.25011920928955
    3. '`' → logprob: -10.62511920928955
    4. '(N' → logprob: -11.12511920928955
    5. '(
' → logprob: -11.37511920928955
    6. '('' → logprob: -11.75011920928955
    7. ''' → logprob: -11.87511920928955
    8. '("("' → logprob: -12.25011920928955
    9. '(input' → logprob: -12.87511920928955
    10. ' (' → logprob: -13.12511920928955

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2372170090675354
    2. ')' → logprob: -1.7372169494628906
    3. '()' → logprob: -3.4872169494628906
    4. '())' → logprob: -5.737216949462891
    5. '```' → logprob: -7.987216949462891
    6. '(
' → logprob: -8.23721694946289
    7. '`' → logprob: -9.61221694946289
    8. '(()' → logprob: -9.61221694946289
    9. '("("' → logprob: -9.61221694946289
    10. '")' → logprob: -9.73721694946289

Token 5: 'X' (ID: 55)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5391327142715454
    2. 'if' → logprob: -2.289132595062256
    3. 's' → logprob: -2.664132595062256
    4. 'a' → logprob: -2.664132595062256
    5. 'x' → logprob: -3.539132595062256
    6. 'i' → logprob: -3.539132595062256
    7. ' ' → logprob: -4.039132595062256
    8. 'f' → logprob: -4.164132595062256
    9. '[' → logprob: -4.539132595062256
    10. ' for' → logprob: -4.664132595062256

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13975593447685242
    2. '+' → logprob: -3.139755964279175
    3. '.' → logprob: -3.889755964279175
    4. '=' → logprob: -4.014755725860596
    5. ' =' → logprob: -4.014755725860596
    6. '**' → logprob: -4.764755725860596
    7. '%' → logprob: -5.264755725860596
    8. ')' → logprob: -5.889755725860596
    9. '.append' → logprob: -6.014755725860596
    10. '[i' → logprob: -6.264755725860596

Token 7: ' list' (ID: 1562)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.8232229948043823
    2. 'list' → logprob: -1.8232229948043823
    3. 'input' → logprob: -1.8232229948043823
    4. ' int' → logprob: -2.948223114013672
    5. '[]' → logprob: -2.948223114013672
    6. ' list' → logprob: -3.198223114013672
    7. ' []' → logprob: -3.698223114013672
    8. '0' → logprob: -3.823223114013672
    9. '[int' → logprob: -3.948223114013672
    10. ' input' → logprob: -4.073223114013672

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -7.386147626675665e-05
    2. '(range' → logprob: -9.875073432922363
    3. ' (' → logprob: -11.750073432922363
    4. '(
' → logprob: -12.375073432922363
    5. '(X' → logprob: -13.000073432922363
    6. '```' → logprob: -13.250073432922363
    7. '("("' → logprob: -13.750073432922363
    8. '(

' → logprob: -13.875073432922363
    9. '(input' → logprob: -14.500073432922363
    10. '((' → logprob: -14.625073432922363

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.18147560954093933
    2. '(' → logprob: -1.9314756393432617
    3. '(str' → logprob: -3.9314756393432617
    4. '(lambda' → logprob: -7.306475639343262
    5. 'int' → logprob: -8.431475639343262
    6. '(input' → logprob: -8.931475639343262
    7. '(
' → logprob: -9.806475639343262
    8. ')' → logprob: -9.931475639343262
    9. '```' → logprob: -9.931475639343262
    10. '<int' → logprob: -10.181475639343262

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.026667507365345955
    2. ',input' → logprob: -4.401667594909668
    3. '(' → logprob: -4.526667594909668
    4. ',' → logprob: -6.276667594909668
    5. '))' → logprob: -7.526667594909668
    6. ')' → logprob: -8.151667594909668
    7. '=input' → logprob: -9.026667594909668
    8. 'input' → logprob: -9.276667594909668
    9. ' (' → logprob: -10.026667594909668
    10. '(int' → logprob: -10.151667594909668

Token 11: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4741699993610382
    2. 'input' → logprob: -0.9741699695587158
    3. '(input' → logprob: -9.349169731140137
    4. ',input' → logprob: -12.724169731140137
    5. ' ' → logprob: -13.974169731140137
    6. ')' → logprob: -13.974169731140137
    7. '=input' → logprob: -14.349169731140137
    8. '	input' → logprob: -15.599169731140137
    9. '_input' → logprob: -16.599170684814453
    10. '<input' → logprob: -16.724170684814453

Token 12: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.7096682190895081
    2. '()))' → logprob: -1.2096681594848633
    3. '()' → logprob: -1.8346681594848633
    4. '())' → logprob: -3.5846681594848633
    5. '(' → logprob: -3.9596681594848633
    6. '()));' → logprob: -6.459668159484863
    7. '(),' → logprob: -7.459668159484863
    8. '))' → logprob: -7.584668159484863
    9. ')' → logprob: -8.459668159484863
    10. '());' → logprob: -9.209668159484863

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.002531664213165641
    2. 'strip' → logprob: -6.0025315284729
    3. 'rstrip' → logprob: -9.877532005310059
    4. ' split' → logprob: -12.377532005310059
    5. 'spl' → logprob: -15.377532005310059
    6. '(split' → logprob: -15.627532005310059
    7. 'read' → logprob: -17.377531051635742
    8. ')' → logprob: -17.502531051635742
    9. ' strip' → logprob: -17.502531051635742
    10. 'replace' → logprob: -18.877531051635742

Token 14: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3826470673084259
    2. ')' → logprob: -1.2576470375061035
    3. '()))' → logprob: -3.7576470375061035
    4. '())' → logprob: -5.1326470375061035
    5. '(' → logprob: -5.6326470375061035
    6. ')))' → logprob: -8.007647514343262
    7. '()' → logprob: -8.382647514343262
    8. '('' → logprob: -9.257647514343262
    9. ''))' → logprob: -10.382647514343262
    10. '(','' → logprob: -10.382647514343262

Token 15: 'ans' (ID: 616)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -1.1323754787445068
    2. 's' → logprob: -1.5073754787445068
    3. 'S' → logprob: -3.007375478744507
    4. 'M' → logprob: -3.007375478744507
    5. 'for' → logprob: -3.007375478744507
    6. 'c' → logprob: -3.132375478744507
    7. 'print' → logprob: -3.257375478744507
    8. 'result' → logprob: -3.382375478744507
    9. 'count' → logprob: -3.507375478744507
    10. 'x' → logprob: -3.757375478744507

Token 16: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28164753317832947
    2. ' =' → logprob: -1.7816475629806519
    3. '_' → logprob: -3.2816474437713623
    4. ' +=' → logprob: -4.156647682189941
    5. '+=' → logprob: -4.531647682189941
    6. '.' → logprob: -5.406647682189941
    7. '[' → logprob: -5.531647682189941
    8. '.append' → logprob: -6.656647682189941
    9. '+' → logprob: -6.906647682189941
    10. '.=' → logprob: -7.531647682189941

Token 17: ' float' (ID: 4428)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18181729316711426
    2. ' ' → logprob: -1.9318172931671143
    3. 'max' → logprob: -5.181817054748535
    4. ' max' → logprob: -5.431817054748535
    5. ' []' → logprob: -5.806817054748535
    6. '[]' → logprob: -6.181817054748535
    7. 'sum' → logprob: -6.431817054748535
    8. '[' → logprob: -6.806817054748535
    9. ' [' → logprob: -7.056817054748535
    10. ' sum' → logprob: -7.181817054748535

Token 18: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7173270583152771
    2. '('' → logprob: -0.7173270583152771
    3. '('.')' → logprob: -4.717327117919922
    4. '('.' → logprob: -5.092327117919922
    5. '.' → logprob: -5.842327117919922
    6. ''.' → logprob: -6.342327117919922
    7. '```' → logprob: -6.967327117919922
    8. ')' → logprob: -7.342327117919922
    9. ''' → logprob: -7.967327117919922
    10. '("("' → logprob: -8.092327117919922

Token 19: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.00010044389637187123
    2. '-inf' → logprob: -9.625100135803223
    3. 'INF' → logprob: -11.125100135803223
    4. 'i' → logprob: -11.750100135803223
    5. '-i' → logprob: -12.375100135803223
    6. 'in' → logprob: -12.875100135803223
    7. ' inf' → logprob: -13.375100135803223
    8. 'Inf' → logprob: -14.125100135803223
    9. ''in' → logprob: -14.750100135803223
    10. ''' → logprob: -14.875100135803223

Token 20: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0046619996428489685
    2. '))' → logprob: -5.379662036895752
    3. '')' → logprob: -10.504661560058594
    4. ' )' → logprob: -11.629661560058594
    5. ')))' → logprob: -13.629661560058594
    6. ')
' → logprob: -13.629661560058594
    7. ''))' → logprob: -14.004661560058594
    8. '(' → logprob: -14.879661560058594
    9. '()' → logprob: -15.004661560058594
    10. '[' → logprob: -15.004661560058594

Token 21: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04508153349161148
    2. ' for' → logprob: -3.170081615447998
    3. '
' → logprob: -7.670081615447998
    4. ' 
' → logprob: -7.670081615447998
    5. ' ' → logprob: -7.795081615447998
    6. '<|end|>' → logprob: -8.42008113861084
    7. ')' → logprob: -8.92008113861084
    8. ',' → logprob: -9.79508113861084
    9. '\n' → logprob: -9.92008113861084
    10. '[' → logprob: -10.04508113861084

Token 22: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3921831250190735
    2. '=' → logprob: -1.8921830654144287
    3. ' =' → logprob: -2.5171830654144287
    4. ' ' → logprob: -3.3921830654144287
    5. 'f' → logprob: -3.8921830654144287
    6. '+' → logprob: -4.142183303833008
    7. 's' → logprob: -5.392183303833008
    8. ',' → logprob: -5.517183303833008
    9. ' +=' → logprob: -5.517183303833008
    10. 'nt' → logprob: -6.267183303833008

Token 23: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3510519862174988
    2. ' ' → logprob: -1.2260520458221436
    3. '1' → logprob: -5.9760518074035645
    4. '2' → logprob: -10.476052284240723
    5. ' -' → logprob: -11.351052284240723
    6. '-' → logprob: -11.851052284240723
    7. ' ' → logprob: -12.601052284240723
    8. '`' → logprob: -12.851052284240723
    9. '```' → logprob: -13.288552284240723
    10. ' i' → logprob: -14.101052284240723

Token 24: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007048533298075199
    2. '1' → logprob: -5.882048606872559
    3. ' ' → logprob: -6.132048606872559
    4. '-' → logprob: -6.257048606872559
    5. '2' → logprob: -9.632048606872559
    6. ' -' → logprob: -10.507048606872559
    7. 'N' → logprob: -11.382048606872559
    8. '-N' → logprob: -11.882048606872559
    9. 'len' → logprob: -12.132048606872559
    10. '(' → logprob: -12.194548606872559

Token 25: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7013723254203796
    2. '<|end|>' → logprob: -1.0763723850250244
    3. 'while' → logprob: -2.3263723850250244
    4. ' while' → logprob: -3.2013723850250244
    5. ' 
' → logprob: -4.576372146606445
    6. ',' → logprob: -6.076372146606445
    7. '<|end|>' → logprob: -6.201372146606445
    8. ' ,' → logprob: -6.326372146606445
    9. 'for' → logprob: -6.451372146606445
    10. '
' → logprob: -6.576372146606445

Token 26: 'while' (ID: 7032)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.029239296913147
    2. 'while' → logprob: -1.154239296913147
    3. ' while' → logprob: -1.654239296913147
    4. '<|end|>' → logprob: -2.1542391777038574
    5. 'for' → logprob: -5.279239177703857
    6. ',' → logprob: -6.029239177703857
    7. ' 
' → logprob: -6.279239177703857
    8. ' ,' → logprob: -6.279239177703857
    9. '
' → logprob: -6.654239177703857
    10. 'n' → logprob: -6.779239177703857

Token 27: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.048783570528030396
    2. 'i' → logprob: -3.048783540725708
    3. ' True' → logprob: -8.923783302307129
    4. 'True' → logprob: -10.298783302307129
    5. ' ' → logprob: -11.298783302307129
    6. ' N' → logprob: -12.048783302307129
    7. 'N' → logprob: -12.923783302307129
    8. '(i' → logprob: -12.923783302307129
    9. ' ' → logprob: -14.298783302307129
    10. ')' → logprob: -14.298783302307129

Token 28: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.14327682554721832
    2. '<' → logprob: -2.0182769298553467
    3. ' ' → logprob: -8.143277168273926
    4. '<len' → logprob: -8.768277168273926
    5. ' <=' → logprob: -9.143277168273926
    6. '<=' → logprob: -10.768277168273926
    7. '<n' → logprob: -12.143277168273926
    8. '<size' → logprob: -12.268277168273926
    9. '+' → logprob: -12.768277168273926
    10. '<N' → logprob: -13.018277168273926

Token 29: ' ' (ID: 220)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.397938072681427
    2. ' N' → logprob: -1.1479380130767822
    3. 'len' → logprob: -5.147938251495361
    4. ' len' → logprob: -5.647938251495361
    5. ' ' → logprob: -6.522938251495361
    6. 'n' → logprob: -10.397937774658203
    7. '1' → logprob: -10.522937774658203
    8. '2' → logprob: -10.897937774658203
    9. '10' → logprob: -11.022937774658203
    10. '100' → logprob: -11.272937774658203

Token 30: '100' (ID: 1353)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.02139757201075554
    2. 'len' → logprob: -3.896397590637207
    3. ' N' → logprob: -7.521397590637207
    4. ' len' → logprob: -9.896397590637207
    5. '100' → logprob: -10.146397590637207
    6. '10' → logprob: -10.146397590637207
    7. '1' → logprob: -10.146397590637207
    8. '2' → logprob: -10.646397590637207
    9. 'n' → logprob: -10.646397590637207
    10. '3' → logprob: -10.771397590637207

Token 31: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1337910294532776
    2. ' :' → logprob: -2.508790969848633
    3. '0' → logprob: -3.258790969848633
    4. ':
' → logprob: -6.758790969848633
    5. ' :
' → logprob: -6.883790969848633
    6. '000' → logprob: -7.008790969848633
    7. '   ' → logprob: -7.258790969848633
    8. '00' → logprob: -7.383790969848633
    9. '**' → logprob: -7.883790969848633
    10. ' ' → logprob: -8.008790969848633

Token 32: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.043618250638246536
    2. '    ' → logprob: -3.4186182022094727
    3. '     
' → logprob: -5.293618202209473
    4. '   ' → logprob: -6.043618202209473
    5. '  ' → logprob: -7.293618202209473
    6. ' 
' → logprob: -7.668618202209473
    7. '<|end|>' → logprob: -8.293618202209473
    8. ' i' → logprob: -8.668618202209473
    9. '    
' → logprob: -8.668618202209473
    10. '  
' → logprob: -8.668618202209473

Token 33: ' temp' (ID: 5484)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07390767335891724
    2. ' i' → logprob: -3.1989076137542725
    3. '    ' → logprob: -4.323907852172852
    4. '   ' → logprob: -5.698907852172852
    5. ' ans' → logprob: -5.698907852172852
    6. ' for' → logprob: -6.323907852172852
    7. '  ' → logprob: -6.698907852172852
    8. 'i' → logprob: -6.948907852172852
    9. '     
' → logprob: -7.573907852172852
    10. ' ,' → logprob: -7.573907852172852

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5152603387832642
    2. '_' → logprob: -1.0152603387832642
    3. '=' → logprob: -4.015260219573975
    4. ' ' → logprob: -5.015260219573975
    5. ' _' → logprob: -5.890260219573975
    6. 's' → logprob: -6.140260219573975
    7. '_ans' → logprob: -6.640260219573975
    8. '_x' → logprob: -6.890260219573975
    9. '_s' → logprob: -7.140260219573975
    10. ',' → logprob: -7.265260219573975

Token 35: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.563383936882019
    2. ' i' → logprob: -1.813383936882019
    3. ' ' → logprob: -1.938383936882019
    4. ' abs' → logprob: -2.0633840560913086
    5. ' X' → logprob: -2.1883840560913086
    6. ' ans' → logprob: -2.6883840560913086
    7. 'abs' → logprob: -3.0633840560913086
    8. ' sum' → logprob: -3.4383840560913086
    9. ' (' → logprob: -3.8133840560913086
    10. 'i' → logprob: -3.9383840560913086

Token 36: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5264267921447754
    2. 'abs' → logprob: -1.9014267921447754
    3. 'sum' → logprob: -2.4014267921447754
    4. 'X' → logprob: -3.2764267921447754
    5. ' ' → logprob: -3.4014267921447754
    6. 'ans' → logprob: -3.5264267921447754
    7. 'i' → logprob: -3.6514267921447754
    8. ' sum' → logprob: -4.526426792144775
    9. ' abs' → logprob: -5.151426792144775
    10. ' X' → logprob: -5.151426792144775

Token 37: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: ' j' (ID: 441)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14582395553588867
    2. ' for' → logprob: -2.1458239555358887
    3. ' ' → logprob: -4.395823955535889
    4. '   ' → logprob: -5.520823955535889
    5. '\n' → logprob: -6.770823955535889
    6. 'j' (adapté à ' j') → logprob: -8.145824432373047
    7. '  ' → logprob: -8.645824432373047
    8. '<|end|>' → logprob: -8.645824432373047
    9. '	for' → logprob: -9.145824432373047
    10. '
' → logprob: -9.520824432373047

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1808588057756424
    2. '=' → logprob: -1.805858850479126
    3. ' in' → logprob: -7.930858612060547
    4. ' ' → logprob: -8.180858612060547
    5. ' for' → logprob: -8.180858612060547
    6. 'for' → logprob: -9.180858612060547
    7. 'in' → logprob: -9.555858612060547
    8. '<|end|>' → logprob: -12.305858612060547
    9. ' +=' → logprob: -12.680858612060547
    10. '<|end|>' → logprob: -12.930858612060547

Token 41: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019362468738108873
    2. ' ' → logprob: -6.251936435699463
    3. '1' → logprob: -12.001935958862305
    4. 'i' → logprob: -14.626935958862305
    5. ' i' → logprob: -15.376935958862305
    6. ' j' → logprob: -15.501935958862305
    7. 'j' → logprob: -15.751935958862305
    8. '-' → logprob: -15.876935958862305
    9. ' -' → logprob: -16.251935958862305
    10. '10' → logprob: -16.376935958862305

Token 42: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015908108616713434
    2. 'i' → logprob: -9.62515926361084
    3. '1' → logprob: -9.87515926361084
    4. ' ' → logprob: -10.50015926361084
    5. '-' → logprob: -11.62515926361084
    6. 'j' → logprob: -12.87515926361084
    7. '-i' → logprob: -14.25015926361084
    8. ' -' → logprob: -14.75015926361084
    9. '100' → logprob: -15.12515926361084
    10. '2' → logprob: -15.62515926361084

Token 43: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6572815775871277
    2. '<|end|>' → logprob: -1.4072816371917725
    3. '   ' → logprob: -1.9072816371917725
    4. ' while' → logprob: -2.7822816371917725
    5. '	while' → logprob: -4.782281398773193
    6. '<|end|>' → logprob: -5.407281398773193
    7. '  ' → logprob: -5.532281398773193
    8. '    ' → logprob: -5.782281398773193
    9. 'while' → logprob: -5.907281398773193
    10. ' 
' → logprob: -7.407281398773193

Token 45: ' while' (ID: 2049)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.4287970960140228
    2. 'j' → logprob: -1.0537971258163452
    3. ' ' → logprob: -10.053796768188477
    4. 'n' → logprob: -11.428796768188477
    5. '   ' → logprob: -11.928796768188477
    6. 'N' → logprob: -11.928796768188477
    7. 'len' → logprob: -12.053796768188477
    8. ' n' → logprob: -12.178796768188477
    9. '	j' → logprob: -12.428796768188477
    10. '    ' → logprob: -12.553796768188477

Token 47: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0772663876414299
    2. '<len' → logprob: -3.0772664546966553
    3. '<' → logprob: -3.5772664546966553
    4. '<n' → logprob: -8.577266693115234
    5. '<N' → logprob: -9.452266693115234
    6. '<size' → logprob: -10.327266693115234
    7. ' ' → logprob: -12.077266693115234
    8. 'len' → logprob: -12.327266693115234
    9. ' len' → logprob: -13.077266693115234
    10. '<int' → logprob: -13.452266693115234

Token 48: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.010290851816534996
    2. 'len' → logprob: -4.885290622711182
    3. ' N' → logprob: -6.135290622711182
    4. '100' → logprob: -8.51029109954834
    5. '10' → logprob: -9.13529109954834
    6. ' len' → logprob: -9.63529109954834
    7. ' ' → logprob: -10.13529109954834
    8. '5' → logprob: -10.76029109954834
    9. '20' → logprob: -11.26029109954834
    10. '   ' → logprob: -11.38529109954834

Token 49: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.051639407873153687
    2. ':
' → logprob: -3.0516393184661865
    3. '   ' → logprob: -5.926639556884766
    4. '<|end|>' → logprob: -9.176639556884766
    5. ' :' → logprob: -9.926639556884766
    6. ' and' → logprob: -9.926639556884766
    7. '       ' → logprob: -10.551639556884766
    8. 'and' → logprob: -10.926639556884766
    9. ' :
' → logprob: -11.051639556884766
    10. '<|end|>' → logprob: -11.051639556884766

Token 50: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6053695678710938
    2. '   ' → logprob: -1.1053695678710938
    3. '<|end|>' → logprob: -2.3553695678710938
    4. '
' → logprob: -4.980369567871094
    5. ' ' → logprob: -5.105369567871094
    6. 'temp' → logprob: -5.480369567871094
    7. ':' → logprob: -6.105369567871094
    8. ' temp' → logprob: -6.230369567871094
    9. '    ' → logprob: -6.980369567871094
    10. '<|end|>' → logprob: -7.230369567871094

Token 51: ' temp' (ID: 5484)
  Prédit: ' temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.3741247355937958
    2. 'temp' (adapté à ' temp') → logprob: -1.6241247653961182
    3. ' abs' → logprob: -3.124124765396118
    4. ' ' → logprob: -3.624124765396118
    5. 'abs' → logprob: -4.124124526977539
    6. '   ' → logprob: -4.124124526977539
    7. '    ' → logprob: -5.749124526977539
    8. '       ' → logprob: -6.374124526977539
    9. '<|end|>' → logprob: -6.499124526977539
    10. ' 
' → logprob: -6.624124526977539

Token 52: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.08593027293682098
    2. ' +=' → logprob: -2.585930347442627
    3. '+=(' → logprob: -5.460930347442627
    4. '=' → logprob: -6.460930347442627
    5. 'abs' → logprob: -7.085930347442627
    6. '   ' → logprob: -9.085929870605469
    7. ' =' → logprob: -9.460929870605469
    8. ' abs' → logprob: -9.710929870605469
    9. '+' → logprob: -9.960929870605469
    10. 'max' → logprob: -10.960929870605469

Token 53: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5212332606315613
    2. '(X' → logprob: -1.771233320236206
    3. '(abs' → logprob: -2.021233320236206
    4. ' abs' → logprob: -2.896233320236206
    5. 'abs' → logprob: -3.146233320236206
    6. '(' → logprob: -5.521233081817627
    7. ' ' → logprob: -7.271233081817627
    8. '(x' → logprob: -8.271233558654785
    9. '(ans' → logprob: -9.771233558654785
    10. '(max' → logprob: -10.396233558654785

Token 54: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.05917999520897865
    2. ' X' → logprob: -3.1841800212860107
    3. '(X' → logprob: -4.309179782867432
    4. ' (' → logprob: -7.184179782867432
    5. 'abs' → logprob: -7.309179782867432
    6. ' abs' → logprob: -7.809179782867432
    7. ')' → logprob: -9.05918025970459
    8. '(' → logprob: -9.18418025970459
    9. '(abs' → logprob: -9.18418025970459
    10. ' ' → logprob: -9.30918025970459

Token 55: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.723973582556937e-05
    2. '[' → logprob: -12.000017166137695
    3. '[i' → logprob: -12.625017166137695
    4. ' [' → logprob: -12.750017166137695
    5. 'j' → logprob: -13.125017166137695
    6. '[J' → logprob: -14.000017166137695
    7. ')[' → logprob: -15.250017166137695
    8. '```' → logprob: -15.500017166137695
    9. '[
' → logprob: -15.750017166137695
    10. '[X' → logprob: -16.000017166137695

Token 56: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6338158249855042
    2. ' -' → logprob: -0.7588158249855042
    3. '-i' → logprob: -7.008815765380859
    4. ')' → logprob: -8.63381576538086
    5. ' ' → logprob: -10.50881576538086
    6. ')-' → logprob: -10.50881576538086
    7. '-j' → logprob: -11.00881576538086
    8. '-)' → logprob: -11.75881576538086
    9. ' ' → logprob: -12.38381576538086
    10. ')-(' → logprob: -12.44631576538086

Token 57: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.22663065791130066
    2. '-' → logprob: -1.601630687713623
    3. '-i' → logprob: -6.726630687713623
    4. ' ' → logprob: -11.726630210876465
    5. '-j' → logprob: -12.476630210876465
    6. ' ' → logprob: -13.726630210876465
    7. '+' → logprob: -13.851630210876465
    8. ')' → logprob: -13.976630210876465
    9. ' i' → logprob: -14.726630210876465
    10. '-k' → logprob: -14.914130210876465

Token 58: ' (' (ID: 350)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2913743555545807
    2. 'i' → logprob: -1.4163743257522583
    3. ' (' → logprob: -4.916374206542969
    4. '(' → logprob: -7.041374206542969
    5. '(i' → logprob: -7.041374206542969
    6. ' ' → logprob: -7.166374206542969
    7. ')' → logprob: -9.041374206542969
    8. '100' → logprob: -10.478874206542969
    9. 'j' → logprob: -10.541374206542969
    10. ' j' → logprob: -10.666374206542969

Token 59: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004271546378731728
    2. ' i' → logprob: -5.629271507263184
    3. '100' → logprob: -8.629271507263184
    4. ')' → logprob: -8.879271507263184
    5. ' ' → logprob: -9.879271507263184
    6. '50' → logprob: -10.004271507263184
    7. '   ' → logprob: -10.004271507263184
    8. ')i' → logprob: -10.004271507263184
    9. 'j' → logprob: -10.129271507263184
    10. '(i' → logprob: -11.441771507263184

Token 60: '+' (ID: 10)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.05928334966301918
    2. ')**' → logprob: -3.1842832565307617
    3. ')' → logprob: -4.309283256530762
    4. ' ))' → logprob: -6.684283256530762
    5. ' )' → logprob: -7.684283256530762
    6. '+' → logprob: -7.684283256530762
    7. ')))' → logprob: -8.934283256530762
    8. ' +' → logprob: -9.434283256530762
    9. '**' → logprob: -9.559283256530762
    10. '-' → logprob: -9.934283256530762

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004927515983581543
    2. '-' → logprob: -5.629927635192871
    3. 'j' → logprob: -7.629927635192871
    4. ' ' → logprob: -8.004927635192871
    5. '   ' → logprob: -9.817427635192871
    6. '50' → logprob: -9.817427635192871
    7. '0' → logprob: -9.942427635192871
    8. '))' → logprob: -10.442427635192871
    9. '500' → logprob: -10.442427635192871
    10. '2' → logprob: -10.504927635192871

Token 62: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.012687401846051216
    2. ')**' → logprob: -4.8876872062683105
    3. ')' → logprob: -5.3876872062683105
    4. ' ))' → logprob: -8.262687683105469
    5. ')))' → logprob: -9.012687683105469
    6. '**' → logprob: -10.762687683105469
    7. ''))' → logprob: -11.012687683105469
    8. '   ' → logprob: -11.137687683105469
    9. ' )' → logprob: -11.387687683105469
    10. '))*' → logprob: -11.887687683105469

Token 63: ' **' (ID: 6240)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17238111793994904
    2. ')**' → logprob: -2.1723811626434326
    3. '**' → logprob: -3.2973811626434326
    4. ')*(' → logprob: -5.7973809242248535
    5. '2' → logprob: -5.9223809242248535
    6. ' )' → logprob: -7.1723809242248535
    7. ' **' → logprob: -8.547381401062012
    8. ')*' → logprob: -8.797381401062012
    9. '*' → logprob: -9.422381401062012
    10. ' ' → logprob: -9.547381401062012

Token 64: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00193280098028481
    2. ' ' → logprob: -6.251932621002197
    3. '²' → logprob: -14.439433097839355
    4. '3' → logprob: -14.876933097839355
    5. '22' → logprob: -14.876933097839355
    6. '۲' → logprob: -15.001933097839355
    7. '23' → logprob: -15.189433097839355
    8. '```' → logprob: -15.501933097839355
    9. '21' → logprob: -15.564433097839355
    10. '<|end|>' → logprob: -15.689433097839355

Token 65: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008155853138305247
    2. ' ' → logprob: -7.125815391540527
    3. '3' → logprob: -12.375815391540527
    4. '1' → logprob: -13.500815391540527
    5. '²' → logprob: -14.000815391540527
    6. '  ' → logprob: -14.563315391540527
    7. '23' → logprob: -15.000815391540527
    8. '   ' → logprob: -15.125815391540527
    9. '```' → logprob: -15.438315391540527
    10. ' ' → logprob: -15.563315391540527

Token 66: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31576913595199585
    2. '
' → logprob: -1.3157691955566406
    3. '
' → logprob: -6.440769195556641
    4. '	' → logprob: -8.44076919555664
    5. '   ' → logprob: -8.94076919555664
    6. '\n' → logprob: -9.19076919555664
    7. 'j' → logprob: -9.44076919555664
    8. '' → logprob: -9.44076919555664
    9. '        
' → logprob: -9.69076919555664
    10. '```' → logprob: -10.19076919555664

Token 67: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014732305891811848
    2. '
' → logprob: -4.264732360839844
    3. '
' → logprob: -8.514732360839844
    4. '   ' → logprob: -9.514732360839844
    5. '```' → logprob: -9.514732360839844
    6. '        
' → logprob: -9.639732360839844
    7. '' → logprob: -10.514732360839844
    8. 'j' → logprob: -10.514732360839844
    9. '	' → logprob: -10.764732360839844
    10. '<|end|>' → logprob: -11.264732360839844

Token 68: ' j' (ID: 441)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6971080303192139
    2. 'j' (adapté à ' j') → logprob: -0.9471080303192139
    3. '   ' → logprob: -2.697108030319214
    4. ' j' → logprob: -3.197108030319214
    5. '	j' → logprob: -5.322108268737793
    6. ' ' → logprob: -7.572108268737793
    7. '	' → logprob: -8.822108268737793
    8. '    ' → logprob: -9.447108268737793
    9. '	   ' → logprob: -9.697108268737793
    10. '  ' → logprob: -9.947108268737793

Token 69: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06085357442498207
    2. ' +=' → logprob: -3.3108534812927246
    3. '+' → logprob: -3.8108534812927246
    4. '=' → logprob: -7.935853481292725
    5. '++' → logprob: -10.185853958129883
    6. '+='' → logprob: -11.435853958129883
    7. '<|end|>' → logprob: -12.185853958129883
    8. ' +' → logprob: -12.560853958129883
    9. ']+=' → logprob: -12.810853958129883
    10. '+="' → logprob: -13.060853958129883

Token 70: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015860427811276168
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -17.000158309936523
    4. '```' → logprob: -17.625158309936523
    5. '  ' → logprob: -19.000158309936523
    6. '１' → logprob: -19.187658309936523
    7. '+' → logprob: -19.312658309936523
    8. ' ' → logprob: -19.562658309936523
    9. '0' → logprob: -20.000158309936523
    10. '۱' → logprob: -20.062658309936523

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -17.750001907348633
    4. '   ' → logprob: -18.312501907348633
    5. '<|end|>' → logprob: -18.312501907348633
    6. '+' → logprob: -19.562501907348633
    7. '１' → logprob: -19.875001907348633
    8. '۱' → logprob: -20.187501907348633
    9. '>' → logprob: -20.250001907348633
    10. '१' → logprob: -20.312501907348633

Token 72: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2539600133895874
    2. '   ' → logprob: -1.5039600133895874
    3. '
' → logprob: -7.003960132598877
    4. '    
' → logprob: -7.378960132598877
    5. '  
' → logprob: -9.503959655761719
    6. '   
' → logprob: -9.503959655761719
    7. ' 
' → logprob: -9.628959655761719
    8. '<|end|>' → logprob: -9.628959655761719
    9. '```' → logprob: -9.628959655761719
    10. '

' → logprob: -10.378959655761719

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011706985533237457
    2. 'if' → logprob: -7.501170635223389
    3. ' if' → logprob: -8.001171112060547
    4. '
' → logprob: -9.126171112060547
    5. 'i' → logprob: -9.876171112060547
    6. ' i' → logprob: -10.001171112060547
    7. ' ' → logprob: -10.501171112060547
    8. 'ans' → logprob: -10.626171112060547
    9. '```' → logprob: -10.876171112060547
    10. '    
' → logprob: -13.376171112060547

Token 74: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.305632084608078
    2. '   ' → logprob: -2.0556321144104004
    3. ' if' → logprob: -2.0556321144104004
    4. 'ans' → logprob: -5.5556321144104
    5. ' ' → logprob: -5.9306321144104
    6. '
' → logprob: -8.305631637573242
    7. '  ' → logprob: -8.555631637573242
    8. 'i' → logprob: -8.930631637573242
    9. ' i' → logprob: -9.930631637573242
    10. '	if' → logprob: -10.055631637573242

Token 75: ' ans' (ID: 3345)
  Prédit: ' temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.0005054924986325204
    2. ' ans' → logprob: -8.125505447387695
    3. 'temp' → logprob: -8.500505447387695
    4. ' tmp' → logprob: -12.875505447387695
    5. ' tem' → logprob: -13.875505447387695
    6. '(temp' → logprob: -14.625505447387695
    7. ' temps' → logprob: -14.625505447387695
    8. '	temp' → logprob: -14.875505447387695
    9. ' ' → logprob: -15.125505447387695
    10. ' tempr' → logprob: -15.125505447387695

Token 76: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.14268000423908234
    2. ' >' → logprob: -2.0176799297332764
    3. ' ' → logprob: -13.517680168151855
    4. '＞' → logprob: -14.267680168151855
    5. '">' → logprob: -14.392680168151855
    6. '   ' → logprob: -14.767680168151855
    7. '>`' → logprob: -15.017680168151855
    8. '>null' → logprob: -15.142680168151855
    9. '>=' → logprob: -15.392680168151855
    10. '>tag' → logprob: -15.642680168151855

Token 77: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.428723007440567
    2. ' temp' → logprob: -1.0537229776382446
    3. '	temp' → logprob: -11.803723335266113
    4. '   ' → logprob: -12.678723335266113
    5. 'tmp' → logprob: -12.803723335266113
    6. 'tem' → logprob: -12.928723335266113
    7. '(temp' → logprob: -13.303723335266113
    8. ' ' → logprob: -13.428723335266113
    9. '$temp' → logprob: -13.803723335266113
    10. ' tmp' → logprob: -15.053723335266113

Token 78: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.043248314410448074
    2. ':
' → logprob: -3.168248414993286
    3. ' :' → logprob: -8.668248176574707
    4. ' :
' → logprob: -9.793248176574707
    5. ':
' → logprob: -11.918248176574707
    6. ':

' → logprob: -12.418248176574707
    7. '   ' → logprob: -12.918248176574707
    8. '=' → logprob: -13.043248176574707
    9. '):
' → logprob: -13.543248176574707
    10. '):' → logprob: -13.668248176574707

Token 79: '       ' (ID: 309)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.7072286009788513
    2. ':' → logprob: -1.707228660583496
    3. '       ' → logprob: -2.207228660583496
    4. 'ans' → logprob: -2.832228660583496
    5. ' ' → logprob: -3.457228660583496
    6. '   ' → logprob: -3.582228660583496
    7. '	ans' → logprob: -3.707228660583496
    8. '(ans' → logprob: -3.957228660583496
    9. '```' → logprob: -4.082228660583496
    10. ' 
' → logprob: -4.582228660583496

Token 80: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.16066104173660278
    2. 'ans' (adapté à ' ans') → logprob: -1.910660982131958
    3. '	ans' → logprob: -7.910661220550537
    4. '(ans' → logprob: -10.410660743713379
    5. '   ' → logprob: -10.910660743713379
    6. '       ' → logprob: -11.160660743713379
    7. '_ans' → logprob: -12.535660743713379
    8. '```' → logprob: -13.285660743713379
    9. '    ' → logprob: -15.160660743713379
    10. '           ' → logprob: -15.160660743713379

Token 81: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014164102263748646
    2. '=' → logprob: -4.264163970947266
    3. ' ' → logprob: -14.389163970947266
    4. '＝' → logprob: -17.014163970947266
    5. '=temp' → logprob: -19.014163970947266
    6. ' =)' → logprob: -19.139163970947266
    7. '<|end|>' → logprob: -19.514163970947266
    8. ',' → logprob: -19.764163970947266
    9. ' =
' → logprob: -19.889163970947266
    10. '=int' → logprob: -20.264163970947266

Token 82: ' temp' (ID: 5484)
  Prédit: ' temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.47407761216163635
    2. 'temp' → logprob: -0.974077582359314
    3. '	temp' → logprob: -15.474077224731445
    4. 'tem' → logprob: -15.974077224731445
    5. 'tmp' → logprob: -15.974077224731445
    6. '(temp' → logprob: -17.099077224731445
    7. '$temp' → logprob: -17.349077224731445
    8. ' tmp' → logprob: -17.599077224731445
    9. ' tem' → logprob: -18.224077224731445
    10. 't' → logprob: -18.349077224731445

Token 83: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04296436160802841
    2. '
' → logprob: -3.292964458465576
    3. ' i' → logprob: -6.417964458465576
    4. '    
' → logprob: -6.417964458465576
    5. ' 
' → logprob: -7.167964458465576
    6. '  
' → logprob: -7.792964458465576
    7. '<|end|>' → logprob: -9.542963981628418
    8. '
' → logprob: -9.792963981628418
    9. ',i' → logprob: -9.917963981628418
    10. '\n' → logprob: -9.917963981628418

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022750934585928917
    2. 'i' → logprob: -4.2727508544921875
    3. ' i' → logprob: -4.7727508544921875
    4. ',i' → logprob: -10.147750854492188
    5. '```' → logprob: -11.022750854492188
    6. '	i' → logprob: -11.272750854492188
    7. '       ' → logprob: -12.147750854492188
    8. '
' → logprob: -12.272750854492188
    9. ' ' → logprob: -12.397750854492188
    10. ',' → logprob: -12.897750854492188

Token 85: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.16475319862365723
    2. '   ' → logprob: -1.9147531986236572
    3. ' i' → logprob: -5.414752960205078
    4. '```' → logprob: -10.289752960205078
    5. '	i' → logprob: -10.664752960205078
    6. ' ' → logprob: -12.289752960205078
    7. '  ' → logprob: -13.539752960205078
    8. '``' → logprob: -13.914752960205078
    9. ',i' → logprob: -14.039752960205078
    10. '_i' → logprob: -14.164752960205078

Token 86: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.024587860330939293
    2. '+' → logprob: -3.774587869644165
    3. ' +=' → logprob: -6.649587631225586
    4. '++' → logprob: -10.149587631225586
    5. '=' → logprob: -12.399587631225586
    6. '+++' → logprob: -13.649587631225586
    7. '+='' → logprob: -13.899587631225586
    8. '+="' → logprob: -14.024587631225586
    9. ']+=' → logprob: -15.524587631225586
    10. '<|end|>' → logprob: -15.899587631225586

Token 87: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006266565760597587
    2. ' ' → logprob: -7.375626564025879
    3. '```' → logprob: -16.875627517700195
    4. '10' → logprob: -17.125627517700195
    5. '   ' → logprob: -17.250627517700195
    6. '+' → logprob: -17.500627517700195
    7. '2' → logprob: -18.125627517700195
    8. '100' → logprob: -18.625627517700195
    9. '１' → logprob: -19.000627517700195
    10. '0' → logprob: -19.125627517700195

Token 88: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '```' → logprob: -17.375011444091797
    4. '   ' → logprob: -17.625011444091797
    5. '2' → logprob: -17.687511444091797
    6. '  ' → logprob: -17.875011444091797
    7. '10' → logprob: -18.375011444091797
    8. '0' → logprob: -18.562511444091797
    9. '100' → logprob: -18.750011444091797
    10. '１' → logprob: -18.812511444091797

Token 89: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.3464544432936236e-05
    2. '
' → logprob: -10.375043869018555
    3. ' print' → logprob: -12.000043869018555
    4. '```' → logprob: -12.375043869018555
    5. 'p' → logprob: -14.125043869018555
    6. 'pr' → logprob: -15.125043869018555
    7. ' 
' → logprob: -16.125043869018555
    8. '  
' → logprob: -16.250043869018555
    9. '#print' → logprob: -16.500043869018555
    10. ')' → logprob: -16.625043869018555

Token 90: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.27099974633893e-05
    2. '
' → logprob: -12.000012397766113
    3. ' print' → logprob: -12.625012397766113
    4. '```' → logprob: -13.000012397766113
    5. 'p' → logprob: -14.750012397766113
    6. 'pr' → logprob: -15.750012397766113
    7. ')' → logprob: -16.25001335144043
    8. '#print' → logprob: -16.87501335144043
    9. '(print' → logprob: -17.25001335144043
    10. '<|end|>' → logprob: -17.25001335144043

Token 91: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.10022111982107162
    2. '(' → logprob: -2.3502211570739746
    3. ' (' → logprob: -11.600220680236816
    4. '('' → logprob: -13.600220680236816
    5. '()' → logprob: -13.725220680236816
    6. 'ans' → logprob: -13.975220680236816
    7. '(abs' → logprob: -14.475220680236816
    8. '(answer' → logprob: -14.475220680236816
    9. '("("' → logprob: -15.475220680236816
    10. '((' → logprob: -15.725220680236816

Token 92: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -14.375000953674316
    3. '))' → logprob: -15.625000953674316
    4. ')
' → logprob: -16.75
    5. ')`' → logprob: -17.0
    6. ')}' → logprob: -19.125
    7. '')' → logprob: -19.25
    8. '),' → logprob: -19.625
    9. '}' → logprob: -19.75
    10. '`)' → logprob: -20.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 90
Tokens correctement prédits (1ère position, stricte): 36
Tokens correctement prédits (1ère position, avec adaptation): 38
Tokens correctement prédits (top 10): 76
Précision stricte (1ère position): 40.00%
Précision adaptée (1ère position): 42.22%
Précision (top 10): 84.44%
================================================================================
