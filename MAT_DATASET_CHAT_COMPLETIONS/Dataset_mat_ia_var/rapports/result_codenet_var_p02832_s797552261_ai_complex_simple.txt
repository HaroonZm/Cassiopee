================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:34:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from functools import reduce
from operator import eq, add

read = sys.stdin.read
readline = sys.stdin.readline
readlines = sys.stdin.readlines
setattr(sys, '__setrecursionlimit__', sys.setrecursionlimit)
getattr(sys, '__setrecursionlimit__')(42 ** 21)
INF = int('f'*60,16)
MOD = pow(10,9)+7

def main():
    data = list(map(int, read().split()))
    N, *A = data
    seq = (x for x in A)
    inc = iter(lambda: None, None)
    def fancy_counter():
        cnt, gen = 1, seq
        try:
            while True:
                v = next(gen)
                if v == cnt:
                    cnt += 1
        except StopIteration:
            return cnt
    n = fancy_counter()

    outcome = (-1 if n == 1 else N - n + 1)
    print((lambda x: x)(outcome))
    return

if __name__ == '__main__':
    (lambda f: f())(main)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: ' functools' (ID: 142636)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.01821877807378769
    2. 'os' → logprob: -4.143218994140625
    3. ' Py' → logprob: -7.768218994140625
    4. ' pathlib' → logprob: -7.768218994140625
    5. ' collections' → logprob: -7.893218994140625
    6. ' math' → logprob: -8.768218994140625
    7. 'collections' → logprob: -9.018218994140625
    8. ' ' → logprob: -9.143218994140625
    9. ' typing' → logprob: -9.643218994140625
    10. ' datetime' → logprob: -9.768218994140625

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.18088944256305695
    2. 'import' → logprob: -1.8058894872665405
    3. '.' → logprob: -7.18088960647583
    4. ' ' → logprob: -8.555889129638672
    5. '_import' → logprob: -9.305889129638672
    6. '	import' → logprob: -9.930889129638672
    7. '_' → logprob: -11.180889129638672
    8. '.import' → logprob: -11.430889129638672
    9. ' ' → logprob: -11.680889129638672
    10. ' .' → logprob: -12.305889129638672

Token 6: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -1.0566222667694092
    2. ' wraps' → logprob: -1.0566222667694092
    3. 'partial' → logprob: -1.8066222667694092
    4. ' partial' → logprob: -2.306622266769409
    5. ' l' → logprob: -3.681622266769409
    6. 'l' → logprob: -5.181622505187988
    7. 'reduce' → logprob: -5.556622505187988
    8. 'import' → logprob: -5.681622505187988
    9. ' import' → logprob: -6.806622505187988
    10. ' reduce' → logprob: -7.181622505187988

Token 7: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.46892404556274414
    2. ',' → logprob: -1.8439240455627441
    3. '(' → logprob: -2.718924045562744
    4. '\n' → logprob: -2.968924045562744
    5. '\' → logprob: -3.093924045562744
    6. '.' → logprob: -3.968924045562744
    7. '```' → logprob: -4.968924045562744
    8. '' → logprob: -5.218924045562744
    9. ' ' → logprob: -5.468924045562744
    10. 'def' → logprob: -5.593924045562744

Token 8: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7167914509773254
    2. ',' → logprob: -1.9667913913726807
    3. '\n' → logprob: -2.0917913913726807
    4. '\' → logprob: -2.3417913913726807
    5. 'def' → logprob: -3.0917913913726807
    6. '```' → logprob: -3.3417913913726807
    7. 'import' → logprob: -3.7167913913726807
    8. '(
' → logprob: -4.84179162979126
    9. '[' → logprob: -4.96679162979126
    10. '`' → logprob: -5.09179162979126

Token 9: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.32348668575286865
    2. ' math' → logprob: -2.073486804962158
    3. ' itertools' → logprob: -2.073486804962158
    4. ' collections' → logprob: -4.198486804962158
    5. 'operator' → logprob: -4.948486804962158
    6. ' os' → logprob: -6.448486804962158
    7. 'math' → logprob: -7.698486804962158
    8. ' ' → logprob: -7.948486804962158
    9. ' typing' → logprob: -8.698486328125
    10. 'collections' → logprob: -9.323486328125

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.019459979608654976
    2. 'import' → logprob: -4.019460201263428
    3. '.' → logprob: -7.144460201263428
    4. ' ' → logprob: -7.894460201263428
    5. ' .' → logprob: -9.64445972442627
    6. '<|end|>' → logprob: -10.51945972442627
    7. '	import' → logprob: -10.64445972442627
    8. '.import' → logprob: -11.51945972442627
    9. '_import' → logprob: -11.51945972442627
    10. '<|end|>' → logprob: -13.51945972442627

Token 11: ' eq' (ID: 18955)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.7084946632385254
    2. ' mul' → logprob: -0.8334946632385254
    3. 'mul' → logprob: -3.7084946632385254
    4. 'add' → logprob: -4.208494663238525
    5. ' import' → logprob: -4.208494663238525
    6. ' item' → logprob: -4.583494663238525
    7. ' ' → logprob: -5.833494663238525
    8. ' icon' → logprob: -6.333494663238525
    9. 'item' → logprob: -7.208494663238525
    10. 'import' → logprob: -7.458494663238525

Token 12: ',' (ID: 11)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.4940105974674225
    2. '(' → logprob: -1.4940105676651
    3. 'ual' → logprob: -2.2440106868743896
    4. 'ua' → logprob: -4.7440104484558105
    5. ',' → logprob: -4.8690104484558105
    6. '.' → logprob: -5.1190104484558105
    7. 'a' → logprob: -5.2440104484558105
    8. 'al' → logprob: -5.2440104484558105
    9. 'uire' → logprob: -5.8690104484558105
    10. 'import' → logprob: -5.9940104484558105

Token 13: ' add' (ID: 1147)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.04773477092385292
    2. 'gt' → logprob: -4.17273473739624
    3. 'lt' → logprob: -4.54773473739624
    4. 'eq' → logprob: -4.67273473739624
    5. 'le' → logprob: -5.79773473739624
    6. 'ge' → logprob: -6.04773473739624
    7. 'item' → logprob: -6.29773473739624
    8. ' ne' → logprob: -7.17273473739624
    9. 'is' → logprob: -7.29773473739624
    10. 'contains' → logprob: -7.54773473739624

Token 14: '

' (ID: 279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1719554215669632
    2. '(' → logprob: -2.5469553470611572
    3. 'import' → logprob: -4.421955585479736
    4. ',
' → logprob: -4.546955585479736
    5. 'u' → logprob: -4.671955585479736
    6. 'def' → logprob: -4.796955585479736
    7. '
' → logprob: -5.046955585479736
    8. '\n' → logprob: -5.296955585479736
    9. '\' → logprob: -5.421955585479736
    10. '

' → logprob: -5.671955585479736

Token 15: 'read' (ID: 1293)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4539804756641388
    2. ',' → logprob: -1.3289804458618164
    3. '=' → logprob: -3.3289804458618164
    4. 'def' → logprob: -3.3289804458618164
    5. '(
' → logprob: -4.203980445861816
    6. ',
' → logprob: -6.203980445861816
    7. '[' → logprob: -6.328980445861816
    8. '#' → logprob: -6.453980445861816
    9. '\' → logprob: -6.703980445861816
    10. ')' → logprob: -6.828980445861816

Token 16: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7455214262008667
    2. '()' → logprob: -1.1205214262008667
    3. '_line' → logprob: -2.6205215454101562
    4. 'line' → logprob: -2.9955215454101562
    5. ' =' → logprob: -3.8705215454101562
    6. 'ing' → logprob: -4.370521545410156
    7. '_' → logprob: -4.370521545410156
    8. '_data' → logprob: -4.745521545410156
    9. '=' → logprob: -4.870521545410156
    10. ')' → logprob: -5.620521545410156

Token 17: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.11556674540042877
    2. 'lambda' → logprob: -2.6155667304992676
    3. ' sys' → logprob: -3.4905667304992676
    4. ' lambda' → logprob: -5.490566730499268
    5. 'input' → logprob: -6.740566730499268
    6. '(sys' → logprob: -9.990567207336426
    7. 'stdin' → logprob: -10.365567207336426
    8. '=sys' → logprob: -10.490567207336426
    9. '	sys' → logprob: -10.615567207336426
    10. '(lambda' → logprob: -10.615567207336426

Token 18: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00935156550258398
    2. '.' → logprob: -4.88435173034668
    3. '.argv' → logprob: -7.13435173034668
    4. '.stdout' → logprob: -7.25935173034668
    5. '.readline' → logprob: -9.00935173034668
    6. '.std' → logprob: -10.25935173034668
    7. ' .' → logprob: -10.38435173034668
    8. '.stderr' → logprob: -11.00935173034668
    9. '.read' → logprob: -11.38435173034668
    10. 'stdin' → logprob: -11.88435173034668

Token 19: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.06268665194511414
    2. '.' → logprob: -3.4376866817474365
    3. '.read' → logprob: -3.5626866817474365
    4. 'read' → logprob: -8.937686920166016
    5. '.readlines' → logprob: -9.062686920166016
    6. '.buffer' → logprob: -12.687686920166016
    7. '.Read' → logprob: -12.812686920166016
    8. '```' → logprob: -13.187686920166016
    9. '_read' → logprob: -13.687686920166016
    10. '.write' → logprob: -13.937686920166016

Token 20: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05546924099326134
    2. '().' → logprob: -3.180469274520874
    3. '(' → logprob: -4.555469036102295
    4. 'line' → logprob: -7.180469036102295
    5. ')' → logprob: -7.805469036102295
    6. '()\' → logprob: -8.555469512939453
    7. '```' → logprob: -9.305469512939453
    8. ' ()' → logprob: -9.555469512939453
    9. '.' → logprob: -9.805469512939453
    10. '\' → logprob: -9.805469512939453

Token 21: 'read' (ID: 1293)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10453745722770691
    2. '(' → logprob: -3.1045374870300293
    3. 'def' → logprob: -3.8545374870300293
    4. '().' → logprob: -4.854537487030029
    5. '()
' → logprob: -5.479537487030029
    6. 'split' → logprob: -5.729537487030029
    7. 'data' → logprob: -6.354537487030029
    8. '.' → logprob: -6.354537487030029
    9. '()

' → logprob: -6.479537487030029
    10. '_' → logprob: -6.604537487030029

Token 22: 'line' (ID: 1137)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002574057725723833
    2. '().' → logprob: -8.75025749206543
    3. '(' → logprob: -10.12525749206543
    4. '()
' → logprob: -10.62525749206543
    5. ' ()' → logprob: -11.37525749206543
    6. '()

' → logprob: -11.87525749206543
    7. '()\' → logprob: -12.00025749206543
    8. '()<' → logprob: -13.37525749206543
    9. '()+' → logprob: -13.62525749206543
    10. '()`' → logprob: -13.75025749206543

Token 23: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0039308140985667706
    2. '=' → logprob: -5.878931045532227
    3. '(' → logprob: -7.003931045532227
    4. ' =' → logprob: -9.253931045532227
    5. ')' → logprob: -10.003931045532227
    6. '().' → logprob: -11.128931045532227
    7. ' ()' → logprob: -11.253931045532227
    8. '()

' → logprob: -11.378931045532227
    9. '()
' → logprob: -11.628931045532227
    10. ',' → logprob: -12.253931045532227

Token 24: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0619698166847229
    2. ' sys' → logprob: -2.811969757080078
    3. '=sys' → logprob: -14.061969757080078
    4. '	sys' → logprob: -14.436969757080078
    5. 'read' → logprob: -15.186969757080078
    6. '(sys' → logprob: -15.311969757080078
    7. 'input' → logprob: -15.811969757080078
    8. 's' → logprob: -16.311969757080078
    9. '/sys' → logprob: -16.686969757080078
    10. 'stdin' → logprob: -16.686969757080078

Token 25: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0011310477275401354
    2. '.stdout' → logprob: -7.626131057739258
    3. '.readline' → logprob: -8.001131057739258
    4. 'stdin' → logprob: -8.126131057739258
    5. '.' → logprob: -11.751131057739258
    6. '.stderr' → logprob: -13.751131057739258
    7. ' stdin' → logprob: -14.376131057739258
    8. '.argv' → logprob: -14.376131057739258
    9. '.std' → logprob: -14.626131057739258
    10. '(stdin' → logprob: -15.251131057739258

Token 26: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.004522450268268585
    2. 'buffer' → logprob: -5.754522323608398
    3. 'read' → logprob: -6.629522323608398
    4. '.buffer' → logprob: -11.754522323608398
    5. '.readlines' → logprob: -12.004522323608398
    6. ' readline' → logprob: -12.629522323608398
    7. '.read' → logprob: -12.879522323608398
    8. '.' → logprob: -13.879522323608398
    9. 'line' → logprob: -14.004522323608398
    10. 'buf' → logprob: -14.504522323608398

Token 27: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19551105797290802
    2. '()' → logprob: -2.5705111026763916
    3. '\n' → logprob: -3.6955111026763916
    4. '
' → logprob: -3.8205111026763916
    5. '\' → logprob: -4.4455108642578125
    6. 'for' → logprob: -5.3205108642578125
    7. '(' → logprob: -5.3205108642578125
    8. '

' → logprob: -5.4455108642578125
    9. '```' → logprob: -6.0705108642578125
    10. 's' → logprob: -6.0705108642578125

Token 28: 'read' (ID: 1293)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.030729977414011955
    2. '
' → logprob: -4.1557297706604
    3. '

' → logprob: -5.2807297706604
    4. 'n' → logprob: -6.2807297706604
    5. 'data' → logprob: -6.5307297706604
    6. '\n' → logprob: -6.9057297706604
    7. '\' → logprob: -7.2807297706604
    8. '#' → logprob: -7.5307297706604
    9. '_' → logprob: -7.7807297706604
    10. '' → logprob: -8.280730247497559

Token 29: 'lines' (ID: 10105)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00044223200529813766
    2. '().' → logprob: -8.125442504882812
    3. '()
' → logprob: -9.750442504882812
    4. '(' → logprob: -10.000442504882812
    5. ' ()' → logprob: -10.750442504882812
    6. '()\' → logprob: -11.625442504882812
    7. '()

' → logprob: -12.250442504882812
    8. '()[' → logprob: -13.250442504882812
    9. '.' → logprob: -13.500442504882812
    10. '()`' → logprob: -14.125442504882812

Token 30: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4939928948879242
    2. ' =' → logprob: -0.9939929246902466
    3. '()' → logprob: -4.118992805480957
    4. ')' → logprob: -6.618992805480957
    5. '<|end|>' → logprob: -6.993992805480957
    6. ' ' → logprob: -7.368992805480957
    7. '<|end|>' → logprob: -8.868992805480957
    8. 'read' → logprob: -10.118992805480957
    9. '```' → logprob: -10.243992805480957
    10. ',' → logprob: -10.493992805480957

Token 31: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.10023804754018784
    2. 'sys' → logprob: -2.350238084793091
    3. '(sys' → logprob: -11.600237846374512
    4. '=sys' → logprob: -11.850237846374512
    5. 'read' → logprob: -11.975237846374512
    6. '	sys' → logprob: -12.975237846374512
    7. ' read' → logprob: -12.975237846374512
    8. 's' → logprob: -13.475237846374512
    9. 'lines' → logprob: -14.100237846374512
    10. '/sys' → logprob: -14.475237846374512

Token 32: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0012932125246152282
    2. 'stdin' → logprob: -7.251293182373047
    3. '.stdout' → logprob: -7.501293182373047
    4. '.std' → logprob: -11.376293182373047
    5. '.stderr' → logprob: -12.001293182373047
    6. '.' → logprob: -12.376293182373047
    7. '.readlines' → logprob: -12.876293182373047
    8. 'in' → logprob: -13.376293182373047
    9. '.lines' → logprob: -13.876293182373047
    10. 'lines' → logprob: -13.876293182373047

Token 33: '.readlines' (ID: 92237)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.44328993558883667
    2. '.read' → logprob: -1.9432899951934814
    3. '.readlines' → logprob: -2.1932899951934814
    4. '.readline' → logprob: -2.8182899951934814
    5. 'read' → logprob: -3.1932899951934814
    6. '.Read' → logprob: -6.443289756774902
    7. '```' → logprob: -8.068289756774902
    8. '<|end|>' → logprob: -8.568289756774902
    9. ' .' → logprob: -9.318289756774902
    10. '.\' → logprob: -10.068289756774902

Token 34: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7541166543960571
    2. '

' → logprob: -0.7541166543960571
    3. 'def' → logprob: -3.1291165351867676
    4. '\n' → logprob: -5.004116535186768
    5. '


' → logprob: -6.379116535186768
    6. '' → logprob: -6.629116535186768
    7. '\' → logprob: -6.754116535186768
    8. '#' → logprob: -6.879116535186768
    9. '```' → logprob: -7.379116535186768
    10. 'newline' → logprob: -7.754116535186768

Token 35: 'set' (ID: 977)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23721475899219513
    2. '
' → logprob: -1.8622148036956787
    3. '

' → logprob: -3.2372148036956787
    4. '\n' → logprob: -4.7372145652771
    5. 'n' → logprob: -6.7372145652771
    6. 'class' → logprob: -6.9872145652771
    7. 'newline' → logprob: -7.3622145652771
    8. '```' → logprob: -7.4872145652771
    9. '\' → logprob: -7.6122145652771
    10. '#' → logprob: -7.8622145652771

Token 36: 'attr' (ID: 6035)
  Prédit: 'attr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attr' → logprob: -0.6232349872589111
    2. 'uptools' → logprob: -1.1232349872589111
    3. 's' → logprob: -2.373234987258911
    4. ' =' → logprob: -3.998234987258911
    5. 'default' → logprob: -5.248234748840332
    6. 'tlement' → logprob: -5.498234748840332
    7. '=' → logprob: -5.623234748840332
    8. 'up' → logprob: -5.998234748840332
    9. ' ' → logprob: -6.623234748840332
    10. '()' → logprob: -6.998234748840332

Token 37: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009386393241584301
    2. '(sys' → logprob: -5.3843865394592285
    3. '(set' → logprob: -5.7593865394592285
    4. '(read' → logprob: -6.7593865394592285
    5. '(
' → logprob: -8.50938606262207
    6. '(object' → logprob: -9.25938606262207
    7. '(print' → logprob: -10.50938606262207
    8. '(s' → logprob: -11.00938606262207
    9. '(str' → logprob: -11.00938606262207
    10. ' (' → logprob: -11.38438606262207

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005231983028352261
    2. ',module' → logprob: -6.130231857299805
    3. ' ,' → logprob: -6.755231857299805
    4. ')' → logprob: -7.880231857299805
    5. '.stdin' → logprob: -9.005231857299805
    6. '.,' → logprob: -9.130231857299805
    7. ',set' → logprob: -9.255231857299805
    8. ',std' → logprob: -9.380231857299805
    9. '.modules' → logprob: -9.505231857299805
    10. ',get' → logprob: -9.630231857299805

Token 39: ' '__' (ID: 28278)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.13715675473213196
    2. '"' → logprob: -2.8871567249298096
    3. ''re' → logprob: -3.6371567249298096
    4. ''ex' → logprob: -3.6371567249298096
    5. ''s' → logprob: -5.012156963348389
    6. ')' → logprob: -5.887156963348389
    7. ''t' → logprob: -6.137156963348389
    8. ''_' → logprob: -6.887156963348389
    9. ''in' → logprob: -7.387156963348389
    10. ''name' → logprob: -7.512156963348389

Token 40: 'set' (ID: 977)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.8312167525291443
    2. 'spec' → logprob: -1.081216812133789
    3. 'name' → logprob: -2.456216812133789
    4. 'stderr' → logprob: -3.331216812133789
    5. 'dict' → logprob: -3.581216812133789
    6. 'path' → logprob: -3.956216812133789
    7. 'stdout' → logprob: -4.081216812133789
    8. 'set' → logprob: -4.831216812133789
    9. 'loader' → logprob: -5.706216812133789
    10. 'cached' → logprob: -5.706216812133789

Token 41: 'rec' (ID: 9285)
  Prédit: 'attr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'attr' → logprob: -0.0008868030272424221
    2. 'item' → logprob: -7.375886917114258
    3. 'attro' → logprob: -9.000886917114258
    4. 'attribute' → logprob: -9.125886917114258
    5. 'att' → logprob: -11.750886917114258
    6. 'state' → logprob: -11.875886917114258
    7. 'a' → logprob: -12.125886917114258
    8. '__' → logprob: -13.000886917114258
    9. 'at' → logprob: -13.500886917114258
    10. 'attrs' → logprob: -13.750886917114258

Token 42: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.07469706982374191
    2. '__' → logprob: -2.8246970176696777
    3. 'ursor' → logprob: -5.449697017669678
    4. 'attr' → logprob: -6.074697017669678
    5. '_' → logprob: -6.324697017669678
    6. 'ursive' → logprob: -7.324697017669678
    7. '_attr' → logprob: -7.324697017669678
    8. 'all' → logprob: -7.949697017669678
    9. '___' → logprob: -8.074697494506836
    10. 'ache' → logprob: -8.574697494506836

Token 43: 'limit' (ID: 19698)
  Prédit: 'ursion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.49569374322891235
    2. 'limit' → logprob: -0.9956937432289124
    3. '_limit' → logprob: -4.120693683624268
    4. 'ur' → logprob: -5.995693683624268
    5. 'ursive' → logprob: -6.620693683624268
    6. 'imit' → logprob: -7.495693683624268
    7. 'mit' → logprob: -9.120694160461426
    8. 'depth' → logprob: -9.620694160461426
    9. 'Limit' → logprob: -9.995694160461426
    10. 'it' → logprob: -9.995694160461426

Token 44: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00019460011390037835
    2. '',' → logprob: -9.125194549560547
    3. '_' → logprob: -9.875194549560547
    4. ''' → logprob: -11.375194549560547
    5. '__('' → logprob: -11.625194549560547
    6. '_',' → logprob: -11.750194549560547
    7. '___' → logprob: -13.375194549560547
    8. '(',' → logprob: -13.750194549560547
    9. '__,' → logprob: -14.250194549560547
    10. '')' → logprob: -14.250194549560547

Token 45: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04403698071837425
    2. ')' → logprob: -3.419036865234375
    3. '(' → logprob: -5.794036865234375
    4. ''' → logprob: -5.794036865234375
    5. '',' → logprob: -6.044036865234375
    6. ' ,' → logprob: -7.544036865234375
    7. ','' → logprob: -8.419036865234375
    8. ' (' → logprob: -8.919036865234375
    9. '('' → logprob: -8.919036865234375
    10. '','' → logprob: -9.169036865234375

Token 46: ' sys' (ID: 12228)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.2241622358560562
    2. '100' → logprob: -2.5991623401641846
    3. 'sys' → logprob: -2.5991623401641846
    4. '10' → logprob: -3.0991623401641846
    5. '1' → logprob: -6.2241621017456055
    6. ' lambda' → logprob: -6.3491621017456055
    7. 'int' → logprob: -6.9741621017456055
    8. ' ' → logprob: -7.2241621017456055
    9. 'set' → logprob: -7.3491621017456055
    10. '(lambda' → logprob: -8.474162101745605

Token 47: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9351229667663574
    2. '.set' → logprob: -0.9351229667663574
    3. '.get' → logprob: -2.0601229667663574
    4. ')' → logprob: -3.6851229667663574
    5. '.max' → logprob: -4.060122966766357
    6. ',' → logprob: -4.435122966766357
    7. '._' → logprob: -4.810122966766357
    8. '.setdefault' → logprob: -5.060122966766357
    9. '.__' → logprob: -5.435122966766357
    10. ' .' → logprob: -6.060122966766357

Token 48: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.0005908019375056028
    2. '_rec' → logprob: -7.625590801239014
    3. '_' → logprob: -9.750591278076172
    4. 're' → logprob: -11.750591278076172
    5. 'attr' → logprob: -12.250591278076172
    6. 'ec' → logprob: -12.250591278076172
    7. ' recursion' → logprob: -12.250591278076172
    8. 'set' → logprob: -12.500591278076172
    9. 'reg' → logprob: -13.125591278076172
    10. ' rec' → logprob: -13.500591278076172

Token 49: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -4.036524842376821e-05
    2. 'limit' → logprob: -10.625040054321289
    3. 'urs' → logprob: -12.375040054321289
    4. 'ursive' → logprob: -12.375040054321289
    5. 'ur' → logprob: -12.625040054321289
    6. 'ursor' → logprob: -12.875040054321289
    7. '_limit' → logprob: -14.625040054321289
    8. 'usion' → logprob: -15.375040054321289
    9. 'urse' → logprob: -15.750040054321289
    10. 'url' → logprob: -15.875040054321289

Token 50: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.062394823879003525
    2. 'it' → logprob: -2.812394857406616
    3. 't' → logprob: -8.312395095825195
    4. '_limit' → logprob: -9.187395095825195
    5. ' limit' → logprob: -10.562395095825195
    6. 'itle' → logprob: -10.812395095825195
    7. 'lit' → logprob: -11.937395095825195
    8. 'mit' → logprob: -12.062395095825195
    9. 'lim' → logprob: -12.437395095825195
    10. '```' → logprob: -12.812395095825195

Token 51: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005906638223677874
    2. '(' → logprob: -5.255906581878662
    3. ' )' → logprob: -7.755906581878662
    4. '('' → logprob: -9.88090705871582
    5. '40' → logprob: -10.00590705871582
    6. '))' → logprob: -10.63090705871582
    7. ')
' → logprob: -10.88090705871582
    8. ',' → logprob: -11.13090705871582
    9. ')(' → logprob: -11.13090705871582
    10. '')' → logprob: -11.50590705871582

Token 52: 'get' (ID: 522)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3006134629249573
    2. '(
' → logprob: -1.9256134033203125
    3. 'def' → logprob: -3.4256134033203125
    4. '(sys' → logprob: -3.8006134033203125
    5. 'sys' → logprob: -3.9256134033203125
    6. '
' → logprob: -4.4256134033203125
    7. 'set' → logprob: -5.0506134033203125
    8. '()' → logprob: -5.6756134033203125
    9. '(set' → logprob: -6.4256134033203125
    10. 'read' → logprob: -6.4256134033203125

Token 53: 'attr' (ID: 6035)
  Prédit: 'attr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attr' → logprob: -1.1279553291387856e-05
    2. 'attribute' → logprob: -12.625011444091797
    3. 'set' → logprob: -13.375011444091797
    4. 'sys' → logprob: -13.875011444091797
    5. '_attr' → logprob: -14.000011444091797
    6. 'at' → logprob: -14.125011444091797
    7. 'sizeof' → logprob: -14.250011444091797
    8. 'rec' → logprob: -14.250011444091797
    9. 'attro' → logprob: -14.750011444091797
    10. '=sys' → logprob: -14.750011444091797

Token 54: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.16045880317687988
    2. '(' → logprob: -1.9104588031768799
    3. '(
' → logprob: -9.1604585647583
    4. 'sys' → logprob: -10.4104585647583
    5. '(system' → logprob: -10.6604585647583
    6. '=sys' → logprob: -10.9104585647583
    7. ' sys' → logprob: -11.0354585647583
    8. ' (' → logprob: -11.2854585647583
    9. '(s' → logprob: -11.4104585647583
    10. '(

' → logprob: -12.0354585647583

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033261224161833525
    2. ')' → logprob: -5.753325939178467
    3. ' ,' → logprob: -9.503326416015625
    4. '(sys' → logprob: -10.628326416015625
    5. '(' → logprob: -11.503326416015625
    6. 'import' → logprob: -12.003326416015625
    7. ',
' → logprob: -12.003326416015625
    8. ','' → logprob: -12.378326416015625
    9. ',)' → logprob: -12.628326416015625
    10. ' ' → logprob: -12.753326416015625

Token 56: ' '__' (ID: 28278)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.44992595911026
    2. ' '__' → logprob: -1.5749258995056152
    3. ''' → logprob: -1.9499258995056152
    4. 'sys' → logprob: -5.199925899505615
    5. ' sys' → logprob: -5.449925899505615
    6. '('__' → logprob: -6.324925899505615
    7. '__' → logprob: -7.574925899505615
    8. ' '' → logprob: -8.074926376342773
    9. '=sys' → logprob: -8.824926376342773
    10. ')' → logprob: -9.199926376342773

Token 57: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.019984425976872444
    2. 'get' → logprob: -4.019984245300293
    3. 'version' → logprob: -6.769984245300293
    4. '_set' → logprob: -8.269984245300293
    5. 'max' → logprob: -9.269984245300293
    6. 'stdin' → logprob: -9.269984245300293
    7. '_get' → logprob: -10.144984245300293
    8. 'path' → logprob: -10.394984245300293
    9. 'rec' → logprob: -10.519984245300293
    10. 'dict' → logprob: -10.519984245300293

Token 58: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.0038872421719133854
    2. '_rec' → logprob: -5.753887176513672
    3. 'attr' → logprob: -7.878887176513672
    4. '__' → logprob: -8.753887176513672
    5. 'limit' → logprob: -9.753887176513672
    6. 'ec' → logprob: -10.628887176513672
    7. '_limit' → logprob: -10.878887176513672
    8. ' recursion' → logprob: -11.753887176513672
    9. '(rec' → logprob: -12.003887176513672
    10. 'attribute' → logprob: -12.128887176513672

Token 59: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.10356014221906662
    2. 'limit' → logprob: -2.353560209274292
    3. 'ursive' → logprob: -5.978559970855713
    4. 'urs' → logprob: -7.478559970855713
    5. '_limit' → logprob: -8.728560447692871
    6. 'ursively' → logprob: -10.353560447692871
    7. 'ur' → logprob: -10.853560447692871
    8. 'limits' → logprob: -11.353560447692871
    9. 'url' → logprob: -11.978560447692871
    10. '```' → logprob: -12.603560447692871

Token 60: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -1.700132997939363e-05
    2. '_limit' → logprob: -11.125017166137695
    3. ' limit' → logprob: -13.500017166137695
    4. 'limits' → logprob: -14.750017166137695
    5. 'lim' → logprob: -15.750017166137695
    6. '(limit' → logprob: -16.625017166137695
    7. 'level' → logprob: -16.750017166137695
    8. 'depth' → logprob: -16.750017166137695
    9. '-limit' → logprob: -17.125017166137695
    10. '__' → logprob: -17.375017166137695

Token 61: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.010429716669023037
    2. '__)' → logprob: -4.635429859161377
    3. '__('' → logprob: -7.385429859161377
    4. '__(' → logprob: -11.635429382324219
    5. '__.__' → logprob: -12.135429382324219
    6. '__
' → logprob: -12.260429382324219
    7. '__))' → logprob: -12.385429382324219
    8. '__)
' → logprob: -12.385429382324219
    9. '('__' → logprob: -12.510429382324219
    10. '__
' → logprob: -12.760429382324219

Token 62: '')(' (ID: 65372)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.416074275970459
    2. '__)' → logprob: -1.166074275970459
    3. '__' → logprob: -3.666074275970459
    4. ')__' → logprob: -7.166074275970459
    5. '__)
' → logprob: -7.291074275970459
    6. '())' → logprob: -7.541074275970459
    7. '__,' → logprob: -8.291074752807617
    8. ' )' → logprob: -9.041074752807617
    9. ')(__' → logprob: -9.041074752807617
    10. ')(' → logprob: -9.166074752807617

Token 63: '42' (ID: 4689)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.009814999997615814
    2. '100' → logprob: -4.634815216064453
    3. '300' → logprob: -10.634815216064453
    4. ' ' → logprob: -11.509815216064453
    5. '999' → logprob: -11.634815216064453
    6. '200' → logprob: -12.134815216064453
    7. '500' → logprob: -12.509815216064453
    8. '9' → logprob: -13.634815216064453
    9. '2' → logprob: -13.759815216064453
    10. 'pow' → logprob: -14.134815216064453

Token 64: ' **' (ID: 6240)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16955122351646423
    2. '9' → logprob: -3.169551134109497
    3. '19' → logprob: -3.669551134109497
    4. '8' → logprob: -3.794551134109497
    5. '00' → logprob: -3.919551134109497
    6. '95' → logprob: -4.169551372528076
    7. '000' → logprob: -4.419551372528076
    8. '949' → logprob: -5.044551372528076
    9. '192' → logprob: -5.294551372528076
    10. '1' → logprob: -6.544551372528076

Token 65: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3615299165248871
    2. '7' → logprob: -2.23652982711792
    3. '3' → logprob: -2.36152982711792
    4. '6' → logprob: -3.23652982711792
    5. '1' → logprob: -3.86152982711792
    6. '5' → logprob: -3.98652982711792
    7. '0' → logprob: -4.98652982711792
    8. '4' → logprob: -5.11152982711792
    9. '9' → logprob: -5.23652982711792
    10. '8' → logprob: -5.98652982711792

Token 66: '21' (ID: 2040)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8552740812301636
    2. '7' → logprob: -0.9802740812301636
    3. '3' → logprob: -2.355274200439453
    4. '6' → logprob: -2.980274200439453
    5. '4' → logprob: -3.980274200439453
    6. '1' → logprob: -4.105274200439453
    7. '5' → logprob: -4.480274200439453
    8. '0' → logprob: -5.730274200439453
    9. '9' → logprob: -6.230274200439453
    10. '8' → logprob: -6.355274200439453

Token 67: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0046135918237268925
    2. '7' → logprob: -6.379613399505615
    3. '6' → logprob: -6.629613399505615
    4. '2' → logprob: -7.754613399505615
    5. '0' → logprob: -7.754613399505615
    6. '3' → logprob: -8.754613876342773
    7. '4' → logprob: -8.879613876342773
    8. ' )' → logprob: -9.004613876342773
    9. '9' → logprob: -9.129613876342773
    10. '8' → logprob: -9.629613876342773

Token 68: 'INF' (ID: 64358)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4677000939846039
    2. 'def' → logprob: -1.7177001237869263
    3. '

' → logprob: -2.2177000045776367
    4. '\n' → logprob: -3.5927000045776367
    5. '#' → logprob: -4.842700004577637
    6. '' → logprob: -4.842700004577637
    7. '\' → logprob: -5.342700004577637
    8. '_' → logprob: -5.717700004577637
    9. '


' → logprob: -5.717700004577637
    10. '
' → logprob: -6.342700004577637

Token 69: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2812083065509796
    2. '=' → logprob: -1.4062082767486572
    3. ',' → logprob: -10.906208038330078
    4. ')' → logprob: -11.156208038330078
    5. ' =
' → logprob: -11.781208038330078
    6. '_' → logprob: -11.906208038330078
    7. '.' → logprob: -12.906208038330078
    8. '=

' → logprob: -13.281208038330078
    9. '＝' → logprob: -14.031208038330078
    10. ' ' → logprob: -14.156208038330078

Token 70: ' int' (ID: 677)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.4887522757053375
    2. 'float' → logprob: -1.1137522459030151
    3. ' float' → logprob: -3.2387523651123047
    4. ' ' → logprob: -4.238752365112305
    5. '1' → logprob: -6.113752365112305
    6. 'int' → logprob: -6.988752365112305
    7. '9' → logprob: -7.238752365112305
    8. '100' → logprob: -8.488752365112305
    9. '2' → logprob: -9.238752365112305
    10. '3' → logprob: -9.613752365112305

Token 71: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003964178264141083
    2. '('' → logprob: -5.628963947296143
    3. '(float' → logprob: -10.0039644241333
    4. '("("' → logprob: -10.1289644241333
    5. '```' → logprob: -10.2539644241333
    6. '32' → logprob: -10.6289644241333
    7. '(pow' → logprob: -10.6289644241333
    8. '(max' → logprob: -10.7539644241333
    9. ''' → logprob: -10.7539644241333
    10. '1' → logprob: -11.0039644241333

Token 72: 'f' (ID: 69)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3360588252544403
    2. '9' → logprob: -1.5860588550567627
    3. '3' → logprob: -3.3360588550567627
    4. ' ' → logprob: -4.461058616638184
    5. '4' → logprob: -4.586058616638184
    6. '0' → logprob: -5.336058616638184
    7. '100' → logprob: -5.461058616638184
    8. '2' → logprob: -5.961058616638184
    9. '999' → logprob: -6.461058616638184
    10. '7' → logprob: -7.086058616638184

Token 73: ''*' (ID: 96093)
  Prédit: 'ffff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ffff' → logprob: -0.22055168449878693
    2. 'f' → logprob: -2.3455517292022705
    3. 'ffffffff' → logprob: -2.4705517292022705
    4. 'ffffff' → logprob: -4.970551490783691
    5. 'fff' → logprob: -5.470551490783691
    6. ''f' → logprob: -5.720551490783691
    7. '0' → logprob: -6.970551490783691
    8. 'ff' → logprob: -7.095551490783691
    9. '7' → logprob: -7.845551490783691
    10. ''' → logprob: -7.845551490783691

Token 74: '60' (ID: 1910)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -1.0756930112838745
    2. '16' → logprob: -1.7006930112838745
    3. 'f' → logprob: -1.8256930112838745
    4. '40' → logprob: -1.9506930112838745
    5. '8' → logprob: -2.325693130493164
    6. '20' → logprob: -3.950693130493164
    7. 'ffff' → logprob: -4.075693130493164
    8. '10' → logprob: -4.825693130493164
    9. '12' → logprob: -5.200693130493164
    10. '15' → logprob: -5.575693130493164

Token 75: ',' (ID: 11)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.35106778144836426
    2. ',' → logprob: -1.7260677814483643
    3. 'ffff' → logprob: -2.8510677814483643
    4. 'ffffffff' → logprob: -3.1010677814483643
    5. ',f' → logprob: -4.601067543029785
    6. 'ffffff' → logprob: -5.976067543029785
    7. '16' → logprob: -6.476067543029785
    8. ' ,' → logprob: -8.351067543029785
    9. 'F' → logprob: -8.351067543029785
    10. 'ff' → logprob: -8.851067543029785

Token 76: '16' (ID: 1125)
  Prédit: '16'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: -0.00014334988372866064
    2. '1' → logprob: -9.500143051147461
    3. ' ' → logprob: -9.625143051147461
    4. '   ' → logprob: -14.250143051147461
    5. '```' → logprob: -14.750143051147461
    6. 'base' → logprob: -14.875143051147461
    7. 'hex' → logprob: -15.125143051147461
    8. '0' → logprob: -16.37514305114746
    9. '6' → logprob: -16.56264305114746
    10. '	' → logprob: -16.68764305114746

Token 77: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016825977945700288
    2. ' )' → logprob: -8.750167846679688
    3. ')+' → logprob: -11.875167846679688
    4. ')
' → logprob: -14.000167846679688
    5. 'f' → logprob: -14.875167846679688
    6. '0' → logprob: -15.500167846679688
    7. '))' → logprob: -15.750167846679688
    8. 'F' → logprob: -16.125167846679688
    9. ')#' → logprob: -16.125167846679688
    10. ')-' → logprob: -16.125167846679688

Token 78: 'MOD' (ID: 52135)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7087974548339844
    2. '=' → logprob: -2.0837974548339844
    3. '\n' → logprob: -2.0837974548339844
    4. ')' → logprob: -2.4587974548339844
    5. '#' → logprob: -2.4587974548339844
    6. '_' → logprob: -4.083797454833984
    7. '' → logprob: -4.208797454833984
    8. 'def' → logprob: -4.208797454833984
    9. '\' → logprob: -5.083797454833984
    10. '*' → logprob: -5.583797454833984

Token 79: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043048977851867676
    2. '=' → logprob: -3.168048858642578
    3. ' ' → logprob: -10.168048858642578
    4. ' =
' → logprob: -12.043048858642578
    5. ' =)' → logprob: -12.793048858642578
    6. ' ,' → logprob: -14.543048858642578
    7. ')' → logprob: -14.543048858642578
    8. ',' → logprob: -14.668048858642578
    9. ' )' → logprob: -14.918048858642578
    10. ' ' → logprob: -15.793048858642578

Token 80: ' pow' (ID: 9779)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1628718376159668
    2. '10' → logprob: -1.9128718376159668
    3. '100' → logprob: -6.037871837615967
    4. '1' → logprob: -8.662872314453125
    5. ' (' → logprob: -10.412872314453125
    6. '998' → logprob: -11.162872314453125
    7. '(' → logprob: -11.537872314453125
    8. '0' → logprob: -12.537872314453125
    9. 'int' → logprob: -12.662872314453125
    10. ')' → logprob: -12.662872314453125

Token 81: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.543733904138207e-05
    2. '10' → logprob: -10.25009536743164
    3. '(
' → logprob: -11.12509536743164
    4. '(pow' → logprob: -11.37509536743164
    5. '(int' → logprob: -11.87509536743164
    6. '<|end|>' → logprob: -12.37509536743164
    7. '9' → logprob: -12.50009536743164
    8. '32' → logprob: -12.87509536743164
    9. '2' → logprob: -13.12509536743164
    10. '19' → logprob: -14.00009536743164

Token 82: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.004496823064982891
    2. '2' → logprob: -5.504497051239014
    3. '1' → logprob: -8.879496574401855
    4. '100' → logprob: -9.629496574401855
    5. '7' → logprob: -9.754496574401855
    6. '998' → logprob: -10.379496574401855
    7. '3' → logprob: -10.754496574401855
    8. '(' → logprob: -11.004496574401855
    9. ' ' → logprob: -11.129496574401855
    10. '19' → logprob: -11.504496574401855

Token 83: ',' (ID: 11)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -4.4849443838757e-06
    2. '+' → logprob: -13.000004768371582
    3. ' ' → logprob: -13.500004768371582
    4. '09' → logprob: -14.500004768371582
    5. '**' → logprob: -16.000003814697266
    6. '```' → logprob: -16.625003814697266
    7. '7' → logprob: -18.625003814697266
    8. '   ' → logprob: -18.625003814697266
    9. '    ' → logprob: -19.500003814697266
    10. '９' → logprob: -19.750003814697266

Token 84: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.1041145626222715e-05
    2. '+' → logprob: -11.750011444091797
    3. '09' → logprob: -13.875011444091797
    4. '```' → logprob: -14.250011444091797
    5. ' ' → logprob: -14.375011444091797
    6. '10' → logprob: -15.750011444091797
    7. '18' → logprob: -16.125011444091797
    8. '8' → logprob: -16.125011444091797
    9. '6' → logprob: -16.750011444091797
    10. '   ' → logprob: -16.937511444091797

Token 85: ')+' (ID: 16161)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0004242395516484976
    2. '7' → logprob: -8.2504243850708
    3. ' +' → logprob: -8.7504243850708
    4. '9' → logprob: -13.3754243850708
    5. '＋' → logprob: -14.3754243850708
    6. ')+' → logprob: -14.5004243850708
    7. '```' → logprob: -14.5004243850708
    8. ')' → logprob: -15.0004243850708
    9. 'plus' → logprob: -15.1254243850708
    10. ' ' → logprob: -16.000423431396484

Token 86: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -5.438573680294212e-06
    2. '+' → logprob: -12.625005722045898
    3. '9' → logprob: -13.250005722045898
    4. '07' → logprob: -16.5000057220459
    5. '007' → logprob: -17.5000057220459
    6. ' ' → logprob: -17.6250057220459
    7. '```' → logprob: -17.7500057220459
    8. '87' → logprob: -18.5000057220459
    9. '1' → logprob: -18.7500057220459
    10. '10' → logprob: -18.9375057220459

Token 87: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08365679532289505
    2. '#' → logprob: -3.3336567878723145
    3. '' → logprob: -4.4586567878723145
    4. '

' → logprob: -4.9586567878723145
    5. ' 
' → logprob: -5.3336567878723145
    6. '\n' → logprob: -5.5836567878723145
    7. ')' → logprob: -5.8336567878723145
    8. 'def' → logprob: -6.4586567878723145
    9. '=' → logprob: -6.5836567878723145
    10. '\' → logprob: -6.8336567878723145

Token 88: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009382973425090313
    2. 'class' → logprob: -5.509383201599121
    3. '
' → logprob: -5.634383201599121
    4. '#' → logprob: -7.384383201599121
    5. 'n' → logprob: -8.009383201599121
    6. '\' → logprob: -8.884383201599121
    7. '

' → logprob: -9.259383201599121
    8. ' def' → logprob: -9.384383201599121
    9. '\n' → logprob: -9.759383201599121
    10. '```' → logprob: -10.134383201599121

Token 89: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.19333551824092865
    2. ' solve' → logprob: -2.44333553314209
    3. ' ' → logprob: -2.81833553314209
    4. ' factorial' → logprob: -4.06833553314209
    5. ' add' → logprob: -5.81833553314209
    6. ' dfs' → logprob: -5.94333553314209
    7. ' solution' → logprob: -6.44333553314209
    8. ' reduce' → logprob: -7.06833553314209
    9. ' pow' → logprob: -7.44333553314209
    10. ' factor' → logprob: -7.56833553314209

Token 90: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00024727347772568464
    2. '(' → logprob: -8.75024700164795
    3. ' ():' → logprob: -9.75024700164795
    4. '()' → logprob: -10.75024700164795
    5. ':' → logprob: -12.25024700164795
    6. '():
' → logprob: -13.25024700164795
    7. '(:' → logprob: -13.25024700164795
    8. '(":' → logprob: -15.37524700164795
    9. '(**' → logprob: -16.500247955322266
    10. '(*' → logprob: -16.625247955322266

Token 91: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059803593903779984
    2. ' ' → logprob: -3.8098034858703613
    3. '    ' → logprob: -4.184803485870361
    4. '
' → logprob: -5.309803485870361
    5. '(' → logprob: -5.684803485870361
    6. '    
' → logprob: -5.684803485870361
    7. '\' → logprob: -6.559803485870361
    8. ':' → logprob: -6.559803485870361
    9. 'n' → logprob: -7.434803485870361
    10. ' 
' → logprob: -7.559803485870361

Token 92: ' data' (ID: 1238)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7204620242118835
    2. 'n' → logprob: -0.9704620242118835
    3. ' pass' → logprob: -3.9704620838165283
    4. ' ' → logprob: -4.095461845397949
    5. '   ' → logprob: -4.220461845397949
    6. 'data' (adapté à ' data') → logprob: -4.345461845397949
    7. 'a' → logprob: -4.345461845397949
    8. '    ' → logprob: -4.595461845397949
    9. 'r' → logprob: -5.095461845397949
    10. ' data' → logprob: -5.095461845397949

Token 93: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6328835487365723
    2. ' =' → logprob: -0.7578835487365723
    3. ' ' → logprob: -8.632883071899414
    4. '_' → logprob: -10.507883071899414
    5. '.' → logprob: -11.007883071899414
    6. '   ' → logprob: -11.007883071899414
    7. ')' → logprob: -11.757883071899414
    8. '=[]' → logprob: -12.257883071899414
    9. ',' → logprob: -12.757883071899414
    10. '[' → logprob: -12.757883071899414

Token 94: ' list' (ID: 1562)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.5399008989334106
    2. 'read' → logprob: -1.4149008989334106
    3. ' list' → logprob: -2.414900779724121
    4. ' readline' → logprob: -2.664900779724121
    5. 'list' → logprob: -4.664900779724121
    6. ' sys' → logprob: -5.664900779724121
    7. ' input' → logprob: -7.039900779724121
    8. ' map' → logprob: -7.789900779724121
    9. ' ' → logprob: -8.289900779724121
    10. 'sys' → logprob: -8.414900779724121

Token 95: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.05281532555818558
    2. '(read' → logprob: -3.0528154373168945
    3. '(' → logprob: -5.5528154373168945
    4. '()' → logprob: -8.927815437316895
    5. '(int' → logprob: -8.927815437316895
    6. '(sys' → logprob: -10.177815437316895
    7. 'map' → logprob: -10.802815437316895
    8. '(input' → logprob: -12.427815437316895
    9. ' (' → logprob: -12.552815437316895
    10. '(range' → logprob: -13.302815437316895

Token 96: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00497342087328434
    2. '(' → logprob: -5.379973411560059
    3. '(str' → logprob: -8.004973411560059
    4. ')' → logprob: -11.879973411560059
    5. '(
' → logprob: -12.879973411560059
    6. '   ' → logprob: -13.504973411560059
    7. ',int' → logprob: -13.754973411560059
    8. 'int' → logprob: -13.879973411560059
    9. ' (' → logprob: -13.879973411560059
    10. '(read' → logprob: -13.879973411560059

Token 97: ',' (ID: 11)
  Prédit: '(read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.002422152552753687
    2. 'read' → logprob: -6.877422332763672
    3. '(' → logprob: -7.127422332763672
    4. ',' → logprob: -7.752422332763672
    5. ' (' → logprob: -9.127422332763672
    6. ' read' → logprob: -11.127422332763672
    7. ')' → logprob: -11.627422332763672
    8. '))' → logprob: -12.127422332763672
    9. ' readline' → logprob: -12.502422332763672
    10. '(
' → logprob: -13.002422332763672

Token 98: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.5505078434944153
    2. ' readline' → logprob: -1.1755077838897705
    3. ' read' → logprob: -2.1755077838897705
    4. '	read' → logprob: -7.80050802230835
    5. '(read' → logprob: -7.92550802230835
    6. ' ' → logprob: -8.925507545471191
    7. '   ' → logprob: -9.175507545471191
    8. ')' → logprob: -10.425507545471191
    9. '.readline' → logprob: -10.800507545471191
    10. '  ' → logprob: -11.300507545471191

Token 99: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.052377623040229e-05
    2. '()' → logprob: -9.625070571899414
    3. '()))' → logprob: -13.000070571899414
    4. ' ().' → logprob: -13.500070571899414
    5. '())))' → logprob: -14.500070571899414
    6. '()
' → logprob: -16.625070571899414
    7. '().'' → logprob: -17.250070571899414
    8. '   ' → logprob: -17.625070571899414
    9. '()?.' → logprob: -17.625070571899414
    10. '(' → logprob: -17.750070571899414

Token 100: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.04860054701566696
    2. 'strip' → logprob: -3.048600435256958
    3. 'rstrip' → logprob: -11.423600196838379
    4. ' split' → logprob: -13.298600196838379
    5. '(split' → logprob: -14.673600196838379
    6. 'decode' → logprob: -16.673601150512695
    7. 'replace' → logprob: -17.048601150512695
    8. ' strip' → logprob: -17.298601150512695
    9. '().' → logprob: -17.548601150512695
    10. ')' → logprob: -17.548601150512695

Token 101: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.05080481618642807
    2. '))' → logprob: -3.175804853439331
    3. '()' → logprob: -4.925804615020752
    4. '())' → logprob: -8.42580509185791
    5. '(' → logprob: -8.80080509185791
    6. '()))
' → logprob: -9.05080509185791
    7. ')' → logprob: -11.30080509185791
    8. '()));' → logprob: -11.55080509185791
    9. '()))

' → logprob: -12.92580509185791
    10. '())))' → logprob: -13.30080509185791

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6841131448745728
    2. ' ' → logprob: -1.4341131448745728
    3. ')' → logprob: -2.934113025665283
    4. '    
' → logprob: -3.059113025665283
    5. '[' → logprob: -3.184113025665283
    6. '    ' → logprob: -3.309113025665283
    7. ' 
' → logprob: -4.059113025665283
    8. '\' → logprob: -4.184113025665283
    9. '
' → logprob: -4.684113025665283
    10. ':' → logprob: -4.684113025665283

Token 103: ' N' (ID: 478)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8640837669372559
    2. ' n' → logprob: -0.8640837669372559
    3. 'n' → logprob: -3.364083766937256
    4. ' idx' → logprob: -3.489083766937256
    5. ' 
' → logprob: -3.614083766937256
    6. ' i' → logprob: -3.739083766937256
    7. 'idx' → logprob: -5.239083766937256
    8. ' \' → logprob: -5.239083766937256
    9. ' res' → logprob: -5.489083766937256
    10. '    ' → logprob: -5.614083766937256

Token 104: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0022261450067162514
    2. '=' → logprob: -6.75222635269165
    3. ',' → logprob: -7.00222635269165
    4. ' ' → logprob: -9.627225875854492
    5. ' ,' → logprob: -9.627225875854492
    6. ' =)' → logprob: -12.002225875854492
    7. '  ' → logprob: -12.502225875854492
    8. ' =
' → logprob: -13.627225875854492
    9. ')' → logprob: -14.752225875854492
    10. '    ' → logprob: -14.877225875854492

Token 105: ' *' (ID: 425)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.9142440557479858
    2. 'data' → logprob: -1.4142440557479858
    3. 'Q' → logprob: -2.0392441749572754
    4. 'M' → logprob: -2.2892441749572754
    5. '*' → logprob: -3.2892441749572754
    6. ' K' → logprob: -3.4142441749572754
    7. ' data' → logprob: -4.039244174957275
    8. ' M' → logprob: -4.664244174957275
    9. '=' → logprob: -4.789244174957275
    10. ' =' → logprob: -4.789244174957275

Token 106: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.05489233136177063
    2. 'a' → logprob: -3.4298923015594482
    3. 'data' → logprob: -5.554892539978027
    4. 'rest' → logprob: -5.679892539978027
    5. 'arr' → logprob: -5.804892539978027
    6. 'H' → logprob: -6.804892539978027
    7. 'Q' → logprob: -6.929892539978027
    8. 'S' → logprob: -7.054892539978027
    9. 'As' → logprob: -7.304892539978027
    10. 'X' → logprob: -7.304892539978027

Token 107: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47408363223075867
    2. '=' → logprob: -0.974083662033081
    3. ',' → logprob: -12.72408390045166
    4. 's' → logprob: -13.97408390045166
    5. '=data' → logprob: -13.97408390045166
    6. ' ' → logprob: -13.97408390045166
    7. '[' → logprob: -14.84908390045166
    8. '  ' → logprob: -15.59908390045166
    9. '   ' → logprob: -15.97408390045166
    10. ')' → logprob: -16.599082946777344

Token 108: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.12692926824092865
    2. ' data' → logprob: -2.12692928314209
    3. 'dat' → logprob: -14.50192928314209
    4. ' ' → logprob: -15.62692928314209
    5. '	data' → logprob: -15.62692928314209
    6. ' dat' → logprob: -15.62692928314209
    7. 'da' → logprob: -16.626928329467773
    8. '   ' → logprob: -17.376928329467773
    9. '(data' → logprob: -17.751928329467773
    10. '_data' → logprob: -18.376928329467773

Token 109: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4714011251926422
    2. '   ' → logprob: -2.0964012145996094
    3. '\n' → logprob: -2.4714012145996094
    4. '<|end|>' → logprob: -2.7214012145996094
    5. ':' → logprob: -3.5964012145996094
    6. '[' → logprob: -3.8464012145996094
    7. '    
' → logprob: -3.9714012145996094
    8. ' 
' → logprob: -5.221401214599609
    9. ')' → logprob: -5.471401214599609
    10. '  
' → logprob: -5.846401214599609

Token 110: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23621487617492676
    2. '   ' → logprob: -2.2362148761749268
    3. '<|end|>' → logprob: -2.3612148761749268
    4. '    
' → logprob: -4.986214637756348
    5. '<|end|>' → logprob: -7.861214637756348
    6. '  
' → logprob: -8.111214637756348
    7. ' 
' → logprob: -8.361214637756348
    8. ' for' → logprob: -8.486214637756348
    9. '   
' → logprob: -8.861214637756348
    10. '    ' → logprob: -8.986214637756348

Token 111: ' seq' (ID: 26775)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9727697372436523
    2. ' dp' → logprob: -1.5977697372436523
    3. ' ans' → logprob: -2.3477697372436523
    4. ' res' → logprob: -3.2227697372436523
    5. '   ' → logprob: -3.3477697372436523
    6. 'ans' → logprob: -3.4727697372436523
    7. 's' → logprob: -3.8477697372436523
    8. 'res' → logprob: -3.9727697372436523
    9. 'result' → logprob: -4.097769737243652
    10. ' result' → logprob: -4.347769737243652

Token 112: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09336687624454498
    2. '=' → logprob: -2.468366861343384
    3. 'u' → logprob: -5.843367099761963
    4. '_' → logprob: -7.093367099761963
    5. '=[]' → logprob: -8.468366622924805
    6. 's' → logprob: -8.718366622924805
    7. ',' → logprob: -9.843366622924805
    8. ' ' → logprob: -9.843366622924805
    9. '_len' → logprob: -9.968366622924805
    10. 'ue' → logprob: -10.968366622924805

Token 113: ' (' (ID: 350)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.0714045763015747
    2. '[A' → logprob: -1.9464045763015747
    3. ' A' → logprob: -2.071404457092285
    4. 'list' → logprob: -2.321404457092285
    5. '[]' → logprob: -2.571404457092285
    6. '[' → logprob: -2.696404457092285
    7. ' [' → logprob: -2.696404457092285
    8. ' list' → logprob: -3.196404457092285
    9. 'reduce' → logprob: -4.571404457092285
    10. 'tuple' → logprob: -4.821404457092285

Token 114: 'x' (ID: 87)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.8059468865394592
    2. ' A' → logprob: -1.5559468269348145
    3. 'reduce' → logprob: -2.8059468269348145
    4. '0' → logprob: -3.0559468269348145
    5. 'map' → logprob: -3.1809468269348145
    6. 'a' → logprob: -3.3059468269348145
    7. '1' → logprob: -3.8059468269348145
    8. ' map' → logprob: -4.0559468269348145
    9. ' ' → logprob: -4.1809468269348145
    10. ')' → logprob: -4.4309468269348145

Token 115: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01908602938055992
    2. 'for' → logprob: -4.394085884094238
    3. ' %' → logprob: -6.269085884094238
    4. ' ' → logprob: -7.144085884094238
    5. '%' → logprob: -7.269085884094238
    6. '+' → logprob: -7.519085884094238
    7. ' in' → logprob: -7.769085884094238
    8. '**' → logprob: -7.894085884094238
    9. '-' → logprob: -8.019085884094238
    10. ' if' → logprob: -8.144085884094238

Token 116: ' x' (ID: 1215)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.09089934080839157
    2. 'A' → logprob: -2.8408992290496826
    3. ' x' → logprob: -3.8408992290496826
    4. 'x' → logprob: -5.215899467468262
    5. ' ' → logprob: -6.965899467468262
    6. '_' → logprob: -8.215899467468262
    7. '	A' → logprob: -8.840899467468262
    8. '_A' → logprob: -9.465899467468262
    9. ')' → logprob: -9.840899467468262
    10. ' in' → logprob: -10.465899467468262

Token 117: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0494164414703846
    2. 'in' → logprob: -3.0494165420532227
    3. ' ' → logprob: -7.424416542053223
    4. '  ' → logprob: -10.049416542053223
    5. 'A' → logprob: -10.174416542053223
    6. ')' → logprob: -10.549416542053223
    7. 's' → logprob: -10.674416542053223
    8. 'x' → logprob: -11.174416542053223
    9. '   ' → logprob: -11.424416542053223
    10. 'In' → logprob: -11.549416542053223

Token 118: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.018257521092891693
    2. ' A' → logprob: -4.0182576179504395
    3. 'range' → logprob: -10.143257141113281
    4. ')' → logprob: -10.268257141113281
    5. ' range' → logprob: -11.143257141113281
    6. ' ' → logprob: -11.393257141113281
    7. '   ' → logprob: -12.893257141113281
    8. 'data' → logprob: -13.393257141113281
    9. '  ' → logprob: -14.768257141113281
    10. '[' → logprob: -14.893257141113281

Token 119: ')
' (ID: 446)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5135008096694946
    2. ')' → logprob: -1.1385008096694946
    3. ' )' → logprob: -2.638500690460205
    4. 'if' → logprob: -4.763500690460205
    5. ' in' → logprob: -6.888500690460205
    6. 'in' → logprob: -8.638501167297363
    7. ' ' → logprob: -9.388501167297363
    8. '))' → logprob: -12.763501167297363
    9. '  ' → logprob: -13.013501167297363
    10. '   ' → logprob: -13.138501167297363

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1477690488100052
    2. '
' → logprob: -2.522768974304199
    3. ')' → logprob: -3.522768974304199
    4. '    
' → logprob: -4.397768974304199
    5. '<|end|>' → logprob: -5.397768974304199
    6. ' for' → logprob: -6.022768974304199
    7. ' ' → logprob: -6.272768974304199
    8. 'for' → logprob: -6.897768974304199
    9. ' 
' → logprob: -7.397768974304199
    10. '\n' → logprob: -7.522768974304199

Token 121: ' inc' (ID: 4570)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15057697892189026
    2. ')' → logprob: -3.0255770683288574
    3. 'for' → logprob: -3.5255770683288574
    4. ' for' → logprob: -4.150577068328857
    5. '    
' → logprob: -4.150577068328857
    6. '
' → logprob: -4.400577068328857
    7. 'while' → logprob: -6.025577068328857
    8. 'result' → logprob: -6.650577068328857
    9. ' while' → logprob: -6.775577068328857
    10. 'x' → logprob: -6.900577068328857

Token 122: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19986891746520996
    2. 'rement' → logprob: -2.69986891746521
    3. '_seq' → logprob: -2.94986891746521
    4. '=' → logprob: -3.44986891746521
    5. 'lude' → logprob: -4.824869155883789
    6. 're' → logprob: -5.199869155883789
    7. '_' → logprob: -5.574869155883789
    8. 'seq' → logprob: -6.199869155883789
    9. '_idx' → logprob: -6.574869155883789
    10. 'dec' → logprob: -7.199869155883789

Token 123: ' iter' (ID: 10621)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7123425006866455
    2. '1' → logprob: -0.9623425006866455
    3. ' ' → logprob: -2.5873425006866455
    4. '[' → logprob: -4.337342262268066
    5. '[]' → logprob: -4.337342262268066
    6. ' [' → logprob: -4.587342262268066
    7. ' []' → logprob: -5.712342262268066
    8. ' (' → logprob: -5.962342262268066
    9. '(' → logprob: -6.337342262268066
    10. 'reduce' → logprob: -6.587342262268066

Token 124: '(lambda' (ID: 43341)
  Prédit: '(seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.15034806728363037
    2. '(lambda' → logprob: -3.02534818649292
    3. '([' → logprob: -3.27534818649292
    4. '(range' → logprob: -4.27534818649292
    5. '(' → logprob: -4.40034818649292
    6. '([]' → logprob: -5.02534818649292
    7. '(x' → logprob: -5.40034818649292
    8. '((' → logprob: -5.65034818649292
    9. '(int' → logprob: -6.15034818649292
    10. '(list' → logprob: -6.27534818649292

Token 125: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0021691746078431606
    2. ' :' → logprob: -6.502169132232666
    3. 'next' → logprob: -8.877169609069824
    4. ':list' → logprob: -8.877169609069824
    5. ' next' → logprob: -9.002169609069824
    6. ':int' → logprob: -9.127169609069824
    7. ':add' → logprob: -9.627169609069824
    8. 'seq' → logprob: -10.752169609069824
    9. ':not' → logprob: -11.252169609069824
    10. ' seq' → logprob: -11.627169609069824

Token 126: ' None' (ID: 4662)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.23310445249080658
    2. ' next' → logprob: -1.6081044673919678
    3. 'reduce' → logprob: -6.358104228973389
    4. '(next' → logprob: -6.483104228973389
    5. 'all' → logprob: -7.358104228973389
    6. 'max' → logprob: -7.358104228973389
    7. ' max' → logprob: -7.858104228973389
    8. '1' → logprob: -8.108104705810547
    9. 'min' → logprob: -8.108104705810547
    10. ' reduce' → logprob: -8.233104705810547

Token 127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17833451926708221
    2. ' if' → logprob: -1.9283344745635986
    3. 'if' → logprob: -5.428334712982178
    4. ' ,' → logprob: -5.428334712982178
    5. ')' → logprob: -5.553334712982178
    6. ',None' → logprob: -5.928334712982178
    7. ',next' → logprob: -6.553334712982178
    8. '),' → logprob: -8.42833423614502
    9. ' next' → logprob: -8.67833423614502
    10. 'next' → logprob: -8.80333423614502

Token 128: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.415388822555542
    2. 'None' → logprob: -1.540388822555542
    3. ')' → logprob: -3.290388822555542
    4. '')' → logprob: -4.040389060974121
    5. ' ' → logprob: -4.165389060974121
    6. ''\' → logprob: -4.415389060974121
    7. ''' → logprob: -4.540389060974121
    8. ' ')' → logprob: -4.915389060974121
    9. ' '\' → logprob: -5.040389060974121
    10. ' '' → logprob: -5.040389060974121

Token 129: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007100477814674377
    2. ')
' → logprob: -7.5007100105285645
    3. ' )' → logprob: -9.125710487365723
    4. ':' → logprob: -11.875710487365723
    5. '))' → logprob: -12.125710487365723
    6. '(' → logprob: -12.500710487365723
    7. ' ' → logprob: -12.625710487365723
    8. ')

' → logprob: -12.750710487365723
    9. '())' → logprob: -12.875710487365723
    10. ')#' → logprob: -12.875710487365723

Token 130: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5767903327941895
    2. '   ' → logprob: -1.2017903327941895
    3. '
' → logprob: -2.8267903327941895
    4. ':' → logprob: -3.5767903327941895
    5. ' ' → logprob: -4.2017903327941895
    6. '    
' → logprob: -4.9517903327941895
    7. '#' → logprob: -5.7017903327941895
    8. ')
' → logprob: -5.7017903327941895
    9. '<|end|>' → logprob: -5.7017903327941895
    10. 'def' → logprob: -5.8267903327941895

Token 131: ' def' (ID: 1056)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6488125920295715
    2. ' ' → logprob: -1.8988125324249268
    3. '   ' → logprob: -2.3988125324249268
    4. ':' → logprob: -2.7738125324249268
    5. 'for' → logprob: -3.2738125324249268
    6. '
' → logprob: -3.5238125324249268
    7. ' for' → logprob: -3.7738125324249268
    8. 'def' (adapté à ' def') → logprob: -4.523812770843506
    9. ' 
' → logprob: -4.648812770843506
    10. '    ' → logprob: -4.773812770843506

Token 132: ' fancy' (ID: 39357)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.9876731634140015
    2. ' next' → logprob: -2.237673282623291
    3. ' helper' → logprob: -2.237673282623291
    4. ' inc' → logprob: -2.862673282623291
    5. ' ' → logprob: -3.112673282623291
    6. ' f' → logprob: -3.237673282623291
    7. ' solve' → logprob: -3.612673282623291
    8. ' gen' → logprob: -3.737673282623291
    9. 'next' → logprob: -3.862673282623291
    10. ' check' → logprob: -3.862673282623291

Token 133: '_counter' (ID: 35419)
  Prédit: '_add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_add' → logprob: -1.5239602327346802
    2. '_seq' → logprob: -1.8989602327346802
    3. '_in' → logprob: -2.2739601135253906
    4. '_increment' → logprob: -2.2739601135253906
    5. '_eq' → logprob: -2.6489601135253906
    6. '_' → logprob: -2.6489601135253906
    7. '_inc' → logprob: -3.2739601135253906
    8. '(x' → logprob: -3.6489601135253906
    9. '_sequence' → logprob: -3.7739601135253906
    10. '_f' → logprob: -3.8989601135253906

Token 134: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.03513934463262558
    2. '(counter' → logprob: -4.535139560699463
    3. '(n' → logprob: -4.660139560699463
    4. '(' → logprob: -5.160139560699463
    5. '(count' → logprob: -5.410139560699463
    6. '(i' → logprob: -6.785139560699463
    7. '(start' → logprob: -7.285139560699463
    8. '():
' → logprob: -8.285139083862305
    9. '(limit' → logprob: -8.410139083862305
    10. '(idx' → logprob: -8.660139083862305

Token 135: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11055123805999756
    2. '   ' → logprob: -2.860551357269287
    3. '    ' → logprob: -3.360551357269287
    4. ' counter' → logprob: -5.485551357269287
    5. '	   ' → logprob: -5.610551357269287
    6. ' n' → logprob: -6.735551357269287
    7. ' count' → logprob: -7.360551357269287
    8. ' i' → logprob: -7.360551357269287
    9. '        ' → logprob: -7.860551357269287
    10. '0' → logprob: -8.235550880432129

Token 136: ' cnt' (ID: 27340)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3200783431529999
    2. '   ' → logprob: -2.4450783729553223
    3. ' i' → logprob: -2.8200783729553223
    4. ' non' → logprob: -3.0700783729553223
    5. 'i' → logprob: -4.070078372955322
    6. ' count' → logprob: -4.445078372955322
    7. ' yield' → logprob: -4.695078372955322
    8. 'count' → logprob: -4.945078372955322
    9. ' for' → logprob: -5.320078372955322
    10. 'n' → logprob: -5.445078372955322

Token 137: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5232927799224854
    2. '=' → logprob: -0.8982927799224854
    3. ',' → logprob: -9.773292541503906
    4. ' ' → logprob: -9.898292541503906
    5. '  ' → logprob: -10.898292541503906
    6. '   ' → logprob: -11.023292541503906
    7. ' +=' → logprob: -11.898292541503906
    8. '+=' → logprob: -12.273292541503906
    9. ':' → logprob: -12.648292541503906
    10. '    ' → logprob: -12.648292541503906

Token 138: ' gen' (ID: 3645)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' val' → logprob: -1.0758404731750488
    2. ' x' → logprob: -1.9508404731750488
    3. ' i' → logprob: -2.825840473175049
    4. ' acc' → logprob: -2.950840473175049
    5. ' current' → logprob: -2.950840473175049
    6. 'x' → logprob: -3.075840473175049
    7. ' value' → logprob: -3.325840473175049
    8. ' last' → logprob: -3.450840473175049
    9. 'val' → logprob: -3.700840473175049
    10. ' prev' → logprob: -3.825840473175049

Token 139: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17983704805374146
    2. ' =' → logprob: -1.8048369884490967
    3. ',' → logprob: -9.429837226867676
    4. ' ' → logprob: -12.179837226867676
    5. '   ' → logprob: -13.179837226867676
    6. '=None' → logprob: -13.804837226867676
    7. '  ' → logprob: -13.929837226867676
    8. '_' → logprob: -14.679837226867676
    9. '=
' → logprob: -14.804837226867676
    10. '=

' → logprob: -15.429837226867676

Token 140: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3149105906486511
    2. '0' → logprob: -1.314910650253296
    3. '1' → logprob: -7.189910411834717
    4. ' (' → logprob: -7.939910411834717
    5. ' -' → logprob: -9.189910888671875
    6. ' next' → logprob: -9.314910888671875
    7. 'next' → logprob: -9.439910888671875
    8. '-' → logprob: -9.689910888671875
    9. '(' → logprob: -10.314910888671875
    10. ' itertools' → logprob: -10.314910888671875

Token 141: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03374021127820015
    2. '1' → logprob: -3.783740282058716
    3. ' ' → logprob: -4.908740043640137
    4. '-' → logprob: -6.908740043640137
    5. 'next' → logprob: -6.908740043640137
    6. '(' → logprob: -7.533740043640137
    7. 'iter' → logprob: -9.408740043640137
    8. '(next' → logprob: -9.408740043640137
    9. 'seq' → logprob: -9.908740043640137
    10. 'it' → logprob: -9.908740043640137

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16158002614974976
    2. '
' → logprob: -2.0365800857543945
    3. ',
' → logprob: -4.0365800857543945
    4. '    
' → logprob: -8.161580085754395
    5. ' ,' → logprob: -9.161580085754395
    6. '

' → logprob: -9.536580085754395
    7. 'def' → logprob: -9.786580085754395
    8. ' 
' → logprob: -9.911580085754395
    9. ',None' → logprob: -10.036580085754395
    10. '<|end|>' → logprob: -10.036580085754395

Token 143: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.4198910593986511
    2. 'next' → logprob: -2.294891119003296
    3. ' seq' → logprob: -2.294891119003296
    4. 'iter' → logprob: -3.169891119003296
    5. 'inc' → logprob: -3.294891119003296
    6. ' iter' → logprob: -3.544891119003296
    7. ' next' → logprob: -4.294890880584717
    8. '0' → logprob: -4.669890880584717
    9. ' inc' → logprob: -5.919890880584717
    10. '(seq' → logprob: -6.294890880584717

Token 144: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006361012347042561
    2. '       ' → logprob: -6.25636100769043
    3. '<|end|>' → logprob: -6.75636100769043
    4. '        
' → logprob: -7.63136100769043
    5. '   ' → logprob: -8.00636100769043
    6. ',' → logprob: -8.13136100769043
    7. '    
' → logprob: -8.25636100769043
    8. '<|end|>' → logprob: -8.38136100769043
    9. ')' → logprob: -8.50636100769043
    10. '.next' → logprob: -8.50636100769043

Token 145: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0652969628572464
    2. '       ' → logprob: -3.8152968883514404
    3. ' 
' → logprob: -4.5652971267700195
    4. '    
' → logprob: -5.0652971267700195
    5. '<|end|>' → logprob: -5.4402971267700195
    6. ' while' → logprob: -5.6902971267700195
    7. '        
' → logprob: -5.6902971267700195
    8. '   ' → logprob: -6.1902971267700195
    9. '  
' → logprob: -6.1902971267700195
    10. ':
' → logprob: -6.5652971267700195

Token 146: ' try' (ID: 2075)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.70638507604599
    2. '       ' → logprob: -0.83138507604599
    3. 'while' → logprob: -2.7063851356506348
    4. '   ' → logprob: -6.331385135650635
    5. '
' → logprob: -7.206385135650635
    6. ' try' → logprob: -7.456385135650635
    7. 'try' (adapté à ' try') → logprob: -8.206384658813477
    8. ' for' → logprob: -8.456384658813477
    9. '	while' → logprob: -8.581384658813477
    10. '    ' → logprob: -8.956384658813477

Token 147: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08959492295980453
    2. ':
' → logprob: -2.464594841003418
    3. '<|end|>' → logprob: -7.714594841003418
    4. ' :' → logprob: -9.589594841003418
    5. '           ' → logprob: -9.964594841003418
    6. ' :
' → logprob: -10.964594841003418
    7. '<|end|>' → logprob: -10.964594841003418
    8. '   ' → logprob: -11.339594841003418
    9. ':return' → logprob: -11.339594841003418
    10. ':

' → logprob: -11.839594841003418

Token 148: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09790266305208206
    2. ' while' → logprob: -2.472902774810791
    3. '       ' → logprob: -5.597902774810791
    4. 'while' → logprob: -5.972902774810791
    5. '   ' → logprob: -6.097902774810791
    6. ' for' → logprob: -8.972902297973633
    7. '    ' → logprob: -9.972902297973633
    8. '               ' → logprob: -10.472902297973633
    9. '        ' → logprob: -10.472902297973633
    10. ' ' → logprob: -10.722902297973633

Token 149: ' while' (ID: 2049)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9078763723373413
    2. ' while' → logprob: -1.2828763723373413
    3. ' x' → logprob: -1.7828763723373413
    4. 'while' (adapté à ' while') → logprob: -2.907876491546631
    5. ' v' → logprob: -3.657876491546631
    6. 'v' → logprob: -4.032876491546631
    7. 'x' → logprob: -4.282876491546631
    8. ' val' → logprob: -4.282876491546631
    9. '               ' → logprob: -5.407876491546631
    10. ' value' → logprob: -5.782876491546631

Token 150: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.11304228752851486
    2. 'True' → logprob: -2.2380423545837402
    3. '(True' → logprob: -8.738041877746582
    4. ' ' → logprob: -10.738041877746582
    5. 'cnt' → logprob: -10.988041877746582
    6. '  ' → logprob: -12.113041877746582
    7. '1' → logprob: -12.363041877746582
    8. ' cnt' → logprob: -12.363041877746582
    9. '   ' → logprob: -12.738041877746582
    10. '    ' → logprob: -13.988041877746582

Token 151: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6440213918685913
    2. ':
' → logprob: -0.7690213918685913
    3. '               ' → logprob: -5.269021511077881
    4. ' :' → logprob: -5.644021511077881
    5. ' :
' → logprob: -6.394021511077881
    6. '           ' → logprob: -7.394021511077881
    7. '):
' → logprob: -9.269021034240723
    8. ',' → logprob: -9.519021034240723
    9. ':

' → logprob: -9.644021034240723
    10. ' and' → logprob: -10.144021034240723

Token 152: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009266873821616173
    2. '           ' → logprob: -5.0092668533325195
    3. '       ' → logprob: -6.7592668533325195
    4. ' x' → logprob: -8.25926685333252
    5. ' token' → logprob: -8.38426685333252
    6. 'token' → logprob: -8.63426685333252
    7. '<|end|>' → logprob: -8.75926685333252
    8. ' next' → logprob: -10.13426685333252
    9. '	       ' → logprob: -10.13426685333252
    10. ':' → logprob: -10.38426685333252

Token 153: ' v' (ID: 323)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.8911275863647461
    2. '           ' → logprob: -1.891127586364746
    3. '                   ' → logprob: -2.141127586364746
    4. ' val' → logprob: -2.266127586364746
    5. ' yield' → logprob: -2.391127586364746
    6. '               ' → logprob: -3.141127586364746
    7. ' value' → logprob: -3.641127586364746
    8. 'x' → logprob: -4.391127586364746
    9. ' item' → logprob: -4.391127586364746
    10. 'v' (adapté à ' v') → logprob: -5.516127586364746

Token 154: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.474282830953598
    2. '=' → logprob: -0.9742828607559204
    3. 'alue' → logprob: -8.724283218383789
    4. '   ' → logprob: -11.349283218383789
    5. 'al' → logprob: -11.599283218383789
    6. ' ' → logprob: -12.724283218383789
    7. 'ALUE' → logprob: -12.849283218383789
    8. 'alid' → logprob: -12.974283218383789
    9. 'next' → logprob: -13.224283218383789
    10. '    ' → logprob: -13.349283218383789

Token 155: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.07889022678136826
    2. 'next' → logprob: -2.578890323638916
    3. '(next' → logprob: -15.203889846801758
    4. '	next' → logprob: -15.828889846801758
    5. ' nex' → logprob: -15.828889846801758
    6. ' ' → logprob: -18.203889846801758
    7. '[next' → logprob: -18.453889846801758
    8. '   ' → logprob: -18.578889846801758
    9. ',next' → logprob: -18.828889846801758
    10. ' nxt' → logprob: -19.078889846801758

Token 156: '(gen' (ID: 80178)
  Prédit: '(gen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(gen' → logprob: -0.00015109812375158072
    2. 'gen' → logprob: -9.125150680541992
    3. ' gen' → logprob: -10.875150680541992
    4. '(seq' → logprob: -11.250150680541992
    5. '(' → logprob: -11.625150680541992
    6. '	gen' → logprob: -14.125150680541992
    7. '(generator' → logprob: -15.250150680541992
    8. ' (' → logprob: -16.000150680541992
    9. 'seq' → logprob: -16.625150680541992
    10. '_gen' → logprob: -18.000150680541992

Token 157: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18004962801933289
    2. ')
' → logprob: -1.8050496578216553
    3. '())' → logprob: -9.430049896240234
    4. ')
' → logprob: -9.680049896240234
    5. '())
' → logprob: -9.930049896240234
    6. ')

' → logprob: -10.055049896240234
    7. '()' → logprob: -10.305049896240234
    8. ' )' → logprob: -11.305049896240234
    9. '               ' → logprob: -12.055049896240234
    10. ' )
' → logprob: -12.305049896240234

Token 158: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06167419254779816
    2. '<|end|>' → logprob: -2.936674118041992
    3. '                ' → logprob: -5.936674118041992
    4. '                
' → logprob: -6.186674118041992
    5. '<|end|>' → logprob: -6.561674118041992
    6. '			' → logprob: -8.936674118041992
    7. ',' → logprob: -9.061674118041992
    8. ' ' → logprob: -10.061674118041992
    9. '                

' → logprob: -10.436674118041992
    10. ')' → logprob: -10.561674118041992

Token 159: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5371443629264832
    2. 'if' (adapté à ' if') → logprob: -1.537144422531128
    3. '               ' → logprob: -1.662144422531128
    4. ' yield' → logprob: -5.412144184112549
    5. 'yield' → logprob: -5.662144184112549
    6. '       ' → logprob: -6.287144184112549
    7. '                ' → logprob: -8.037144660949707
    8. '                
' → logprob: -9.287144660949707
    9. ' ' → logprob: -9.287144660949707
    10. '        ' → logprob: -9.412144660949707

Token 160: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.13154037296772003
    2. 'v' → logprob: -2.256540298461914
    3. ' not' → logprob: -4.756540298461914
    4. ' isinstance' → logprob: -6.256540298461914
    5. ' cnt' → logprob: -6.631540298461914
    6. ' ' → logprob: -6.756540298461914
    7. ' seq' → logprob: -6.881540298461914
    8. 'cnt' → logprob: -7.506540298461914
    9. ' hasattr' → logprob: -7.506540298461914
    10. 'not' → logprob: -7.881540298461914

Token 161: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -1.2677037715911865
    2. ' >' → logprob: -1.3927037715911865
    3. ' ==' → logprob: -1.3927037715911865
    4. '==' → logprob: -1.6427037715911865
    5. ' ' → logprob: -4.767704010009766
    6. ' <' → logprob: -5.642704010009766
    7. ':' → logprob: -5.892704010009766
    8. '<' → logprob: -6.267704010009766
    9. '<|end|>' → logprob: -6.267704010009766
    10. ' >=' → logprob: -6.392704010009766

Token 162: ' cnt' (ID: 27340)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7509397864341736
    2. 'cnt' → logprob: -1.7509398460388184
    3. ' cnt' → logprob: -1.8759398460388184
    4. '0' → logprob: -2.2509398460388184
    5. '1' → logprob: -3.1259398460388184
    6. 'None' → logprob: -4.875939846038818
    7. ' None' → logprob: -5.000939846038818
    8. 'inc' → logprob: -5.125939846038818
    9. ' v' → logprob: -5.250939846038818
    10. ' seq' → logprob: -5.375939846038818

Token 163: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04361255094408989
    2. ':
' → logprob: -3.168612480163574
    3. '                   ' → logprob: -8.168612480163574
    4. '):' → logprob: -9.543612480163574
    5. ' :' → logprob: -9.793612480163574
    6. '           ' → logprob: -9.793612480163574
    7. '               ' → logprob: -9.918612480163574
    8. '+' → logprob: -10.793612480163574
    9. '):
' → logprob: -11.043612480163574
    10. ' or' → logprob: -11.918612480163574

Token 164: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0028342308942228556
    2. '                    
' → logprob: -7.252834320068359
    3. '
' → logprob: -7.377834320068359
    4. '               ' → logprob: -7.877834320068359
    5. '           ' → logprob: -8.00283432006836
    6. '                       ' → logprob: -8.37783432006836
    7. '                    ' → logprob: -8.37783432006836
    8. ' return' → logprob: -10.25283432006836
    9. '<|end|>' → logprob: -10.25283432006836
    10. '                ' → logprob: -10.37783432006836

Token 165: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.8838030695915222
    2. 'cnt' (adapté à ' cnt') → logprob: -1.133803129196167
    3. '                   ' → logprob: -1.633803129196167
    4. '                       ' → logprob: -2.758803129196167
    5. '               ' → logprob: -6.133802890777588
    6. '                    ' → logprob: -6.758802890777588
    7. '
' → logprob: -6.883802890777588
    8. '	cnt' → logprob: -7.008802890777588
    9. '                ' → logprob: -8.258803367614746
    10. '```' → logprob: -9.258803367614746

Token 166: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4745195806026459
    2. ' +=' → logprob: -0.9745196104049683
    3. '=' → logprob: -7.974519729614258
    4. ' =' → logprob: -9.349519729614258
    5. ']+=' → logprob: -12.974519729614258
    6. '+' → logprob: -13.224519729614258
    7. ' ' → logprob: -13.349519729614258
    8. '   ' → logprob: -13.349519729614258
    9. '*=' → logprob: -14.099519729614258
    10. ' <<=' → logprob: -14.349519729614258

Token 167: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043102685594931245
    2. ' ' → logprob: -7.750431060791016
    3. 'v' → logprob: -15.250431060791016
    4. '   ' → logprob: -16.250431060791016
    5. '
' → logprob: -17.250431060791016
    6. '  ' → logprob: -18.250431060791016
    7. '2' → logprob: -18.625431060791016
    8. ' v' → logprob: -18.750431060791016
    9. '<|end|>' → logprob: -18.875431060791016
    10. '           ' → logprob: -19.562931060791016

Token 168: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -17.37501335144043
    4. '  ' → logprob: -19.25001335144043
    5. '2' → logprob: -19.50001335144043
    6. 'one' → logprob: -19.56251335144043
    7. '-' → logprob: -19.75001335144043
    8. '
' → logprob: -19.87501335144043
    9. '```' → logprob: -20.06251335144043
    10. 'v' → logprob: -20.37501335144043

Token 169: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12378431111574173
    2. '<|end|>' → logprob: -2.498784303665161
    3. ' else' → logprob: -4.37378454208374
    4. '
' → logprob: -4.37378454208374
    5. '                ' → logprob: -5.62378454208374
    6. '<|end|>' → logprob: -6.87378454208374
    7. '       ' → logprob: -7.37378454208374
    8. 'else' → logprob: -7.49878454208374
    9. ')' → logprob: -7.49878454208374
    10. '           ' → logprob: -7.62378454208374

Token 170: '       ' (ID: 309)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.016556965187191963
    2. ' else' → logprob: -4.391556739807129
    3. '<|end|>' → logprob: -6.141556739807129
    4. 'else' → logprob: -7.016556739807129
    5. '                   ' → logprob: -8.516556739807129
    6. '           ' → logprob: -8.891556739807129
    7. '       ' → logprob: -9.016556739807129
    8. '                ' → logprob: -9.141556739807129
    9. '<|end|>' → logprob: -9.641556739807129
    10. '			' → logprob: -10.516556739807129

Token 171: ' except' (ID: 6384)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07058060169219971
    2. ' else' → logprob: -2.82058048248291
    3. 'else' → logprob: -5.44558048248291
    4. '                ' → logprob: -6.19558048248291
    5. '                   ' → logprob: -7.19558048248291
    6. '           ' → logprob: -7.32058048248291
    7. '<|end|>' → logprob: -9.19558048248291
    8. ' ' → logprob: -9.32058048248291
    9. '       ' → logprob: -9.32058048248291
    10. '            ' → logprob: -9.32058048248291

Token 172: ' Stop' (ID: 22535)
  Prédit: ' Stop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Stop' → logprob: -0.47407975792884827
    2. 'Stop' → logprob: -0.9740797281265259
    3. '_Stop' → logprob: -13.724080085754395
    4. 'Exception' → logprob: -14.349080085754395
    5. ' Exception' → logprob: -15.224080085754395
    6. '   ' → logprob: -15.224080085754395
    7. ' ' → logprob: -15.474080085754395
    8. ':' → logprob: -16.349079132080078
    9. '  ' → logprob: -16.599079132080078
    10. 'EOF' → logprob: -17.224079132080078

Token 173: 'Iteration' (ID: 77823)
  Prédit: 'Iteration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iteration' → logprob: -3.173704271830502e-06
    2. 'iteration' → logprob: -12.75000286102295
    3. 'Iterator' → logprob: -16.125003814697266
    4. ' iteration' → logprob: -16.500003814697266
    5. '_iteration' → logprob: -17.875003814697266
    6. 'Exception' → logprob: -18.250003814697266
    7. 'Async' → logprob: -19.000003814697266
    8. 'Iter' → logprob: -19.500003814697266
    9. 'Traversal' → logprob: -20.500003814697266
    10. 'Iterations' → logprob: -20.625003814697266

Token 174: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03852531313896179
    2. '           ' → logprob: -3.413525342941284
    3. ':
' → logprob: -5.413525104522705
    4. '():' → logprob: -8.413525581359863
    5. '):' → logprob: -9.788525581359863
    6. '       ' → logprob: -10.163525581359863
    7. ' :' → logprob: -10.913525581359863
    8. ':return' → logprob: -11.163525581359863
    9. '               ' → logprob: -11.663525581359863
    10. ',' → logprob: -11.913525581359863

Token 175: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005369171965867281
    2. ' pass' → logprob: -5.630369186401367
    3. '       ' → logprob: -6.630369186401367
    4. ' return' → logprob: -8.630369186401367
    5. 'pass' → logprob: -9.255369186401367
    6. '               ' → logprob: -10.005369186401367
    7. '   ' → logprob: -10.380369186401367
    8. '	pass' → logprob: -10.755369186401367
    9. 'return' → logprob: -11.005369186401367
    10. '	       ' → logprob: -11.255369186401367

Token 176: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4661162793636322
    2. ' pass' → logprob: -1.7161163091659546
    3. ' return' → logprob: -2.216116189956665
    4. 'return' (adapté à ' return') → logprob: -3.091116189956665
    5. 'pass' → logprob: -3.716116189956665
    6. '       ' → logprob: -4.591116428375244
    7. '   ' → logprob: -5.841116428375244
    8. '               ' → logprob: -7.341116428375244
    9. ' ' → logprob: -9.341115951538086
    10. '	pass' → logprob: -9.591115951538086

Token 177: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.057272832840681076
    2. ' cnt' → logprob: -2.9322729110717773
    3. 'None' → logprob: -7.682272911071777
    4. ' None' → logprob: -7.807272911071777
    5. '(cnt' → logprob: -8.182272911071777
    6. '
' → logprob: -8.557272911071777
    7. '<|end|>' → logprob: -8.557272911071777
    8. ' ' → logprob: -8.682272911071777
    9. '   ' → logprob: -9.057272911071777
    10. '       ' → logprob: -9.057272911071777

Token 178: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 179: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 180: ' n' (ID: 297)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 181: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8823466897010803
    2. ',' → logprob: -1.6323466300964355
    3. '=' → logprob: -1.6323466300964355
    4. 'ext' → logprob: -1.8823466300964355
    5. '_' → logprob: -4.2573466300964355
    6. 'um' → logprob: -4.5073466300964355
    7. ' ' → logprob: -5.6323466300964355
    8. 'xt' → logprob: -6.1323466300964355
    9. '   ' → logprob: -6.2573466300964355
    10. '+=' → logprob: -6.8823466300964355

Token 182: ' fancy' (ID: 39357)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.038453735411167145
    2. ' fancy' → logprob: -3.7884538173675537
    3. 'next' → logprob: -5.163453578948975
    4. ' next' → logprob: -5.163453578948975
    5. ' f' → logprob: -6.163453578948975
    6. 'max' → logprob: -8.038454055786133
    7. ' ' → logprob: -8.038454055786133
    8. 'len' → logprob: -8.038454055786133
    9. ' max' → logprob: -8.788454055786133
    10. ' len' → logprob: -9.413454055786133

Token 183: '_counter' (ID: 35419)
  Prédit: '_counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -3.8889261304575484e-06
    2. 'counter' → logprob: -12.875003814697266
    3. '_count' → logprob: -13.625003814697266
    4. 'Counter' → logprob: -17.375003814697266
    5. '_COUNTER' → logprob: -18.250003814697266
    6. ' counter' → logprob: -19.500003814697266
    7. '_c' → logprob: -20.250003814697266
    8. '_' → logprob: -20.375003814697266
    9. '_cnt' → logprob: -20.625003814697266
    10. 'ounter' → logprob: -20.750003814697266

Token 184: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.027066368609666824
    2. '()
' → logprob: -3.652066469192505
    3. '   ' → logprob: -8.027066230773926
    4. '()-' → logprob: -9.277066230773926
    5. '()+' → logprob: -9.402066230773926
    6. '-' → logprob: -10.152066230773926
    7. '();' → logprob: -10.277066230773926
    8. '())' → logprob: -10.527066230773926
    9. '+' → logprob: -10.527066230773926
    10. ' -' → logprob: -11.027066230773926

Token 185: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08584943413734436
    2. '<|end|>' → logprob: -2.7108495235443115
    3. ')' → logprob: -4.835849285125732
    4. '
' → logprob: -5.210849285125732
    5. '+' → logprob: -7.210849285125732
    6. '<|end|>' → logprob: -8.21084976196289
    7. ' ' → logprob: -8.71084976196289
    8. '    ' → logprob: -8.71084976196289
    9. '#' → logprob: -8.83584976196289
    10. '       ' → logprob: -8.83584976196289

Token 186: ' outcome' (ID: 24192)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.32936713099479675
    2. '   ' → logprob: -1.3293671607971191
    3. ' print' → logprob: -5.329367160797119
    4. 'if' → logprob: -5.829367160797119
    5. 'for' → logprob: -5.954367160797119
    6. ' if' → logprob: -6.579367160797119
    7. ')' → logprob: -6.579367160797119
    8. ' for' → logprob: -7.329367160797119
    9. 'n' → logprob: -7.704367160797119
    10. 'return' → logprob: -7.829367160797119

Token 187: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6958410143852234
    2. ' =' → logprob: -0.6958410143852234
    3. 's' → logprob: -6.195840835571289
    4. '_' → logprob: -7.945840835571289
    5. ':' → logprob: -8.695840835571289
    6. '=n' → logprob: -10.820840835571289
    7. ',' → logprob: -11.070840835571289
    8. '()' → logprob: -11.195840835571289
    9. '   ' → logprob: -11.195840835571289
    10. '=int' → logprob: -11.695840835571289

Token 188: ' (-' (ID: 21382)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5307558178901672
    2. 'n' → logprob: -1.5307557582855225
    3. 'reduce' → logprob: -3.1557557582855225
    4. ' max' → logprob: -3.6557557582855225
    5. 'max' → logprob: -3.7807557582855225
    6. ' reduce' → logprob: -3.9057557582855225
    7. ' add' → logprob: -4.655755996704102
    8. 'add' → logprob: -4.780755996704102
    9. ' ' → logprob: -4.780755996704102
    10. '0' → logprob: -5.030755996704102

Token 189: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6583795547485352
    2. 'n' → logprob: -1.0333795547485352
    3. ' n' → logprob: -2.658379554748535
    4. '(' → logprob: -4.283379554748535
    5. '(n' → logprob: -4.408379554748535
    6. ')' → logprob: -4.658379554748535
    7. ' ' → logprob: -5.533379554748535
    8. ' (' → logprob: -5.908379554748535
    9. '2' → logprob: -6.033379554748535
    10. 'INF' → logprob: -6.033379554748535

Token 190: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.831032395362854
    2. ',)' → logprob: -0.831032395362854
    3. ' if' → logprob: -2.5810322761535645
    4. ',' → logprob: -3.5810322761535645
    5. '+' → logprob: -4.5810322761535645
    6. ' +' → logprob: -4.7060322761535645
    7. ' )' → logprob: -6.0810322761535645
    8. '+)' → logprob: -7.0810322761535645
    9. 'if' → logprob: -7.4560322761535645
    10. ',)
' → logprob: -7.5810322761535645

Token 191: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3870585262775421
    2. 'n' → logprob: -1.1370584964752197
    3. ')' → logprob: -9.63705825805664
    4. ' not' → logprob: -10.13705825805664
    5. '(n' → logprob: -11.01205825805664
    6. ' ' → logprob: -11.38705825805664
    7. 'not' → logprob: -11.63705825805664
    8. ' (' → logprob: -11.63705825805664
    9. ')n' → logprob: -12.19955825805664
    10. 'len' → logprob: -12.88705825805664

Token 192: ' ==' (ID: 951)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -1.2519500255584717
    2. '==' → logprob: -1.2519500255584717
    3. ' ==' → logprob: -1.7519500255584717
    4. '<' → logprob: -2.1269500255584717
    5. '<=' → logprob: -3.5019500255584717
    6. ' !=' → logprob: -3.6269500255584717
    7. '!=' → logprob: -3.7519500255584717
    8. ' <=' → logprob: -3.8769500255584717
    9. ')' → logprob: -4.376950263977051
    10. '>' → logprob: -4.751950263977051

Token 193: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06821022182703018
    2. 'N' → logprob: -3.4432101249694824
    3. ' ' → logprob: -4.068210124969482
    4. '0' → logprob: -4.568210124969482
    5. 'INF' → logprob: -5.443210124969482
    6. 'cnt' → logprob: -6.943210124969482
    7. ' N' → logprob: -7.568210124969482
    8. 'len' → logprob: -7.818210124969482
    9. ' INF' → logprob: -9.81821060180664
    10. '(N' → logprob: -10.06821060180664

Token 194: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4875059425830841
    2. '0' → logprob: -1.2375059127807617
    3. 'N' → logprob: -2.4875059127807617
    4. ' ' → logprob: -4.612505912780762
    5. 'INF' → logprob: -6.862505912780762
    6. ' N' → logprob: -7.612505912780762
    7. 'len' → logprob: -7.612505912780762
    8. '(N' → logprob: -8.612505912780762
    9. 'cnt' → logprob: -8.987505912780762
    10. 'max' → logprob: -9.862505912780762

Token 195: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.2520327568054199
    2. 'else' → logprob: -1.50203275680542
    3. '   ' → logprob: -10.002033233642578
    4. '-' → logprob: -10.502033233642578
    5. ' ' → logprob: -11.002033233642578
    6. '
' → logprob: -13.252033233642578
    7. '    ' → logprob: -13.377033233642578
    8. ' -' → logprob: -13.377033233642578
    9. '  ' → logprob: -13.627033233642578
    10. ')' → logprob: -13.627033233642578

Token 196: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5521348118782043
    2. ' n' → logprob: -0.9271348118782043
    3. 'N' → logprob: -4.427134990692139
    4. ' N' → logprob: -5.427134990692139
    5. 'len' → logprob: -5.927134990692139
    6. '0' → logprob: -6.802134990692139
    7. ' len' → logprob: -6.927134990692139
    8. ' ' → logprob: -7.052134990692139
    9. '(n' → logprob: -7.052134990692139
    10. 'cnt' → logprob: -7.052134990692139

Token 197: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2502075433731079
    2. '-' → logprob: -1.625207543373108
    3. '-n' → logprob: -4.250207424163818
    4. ')' → logprob: -5.875207424163818
    5. '+' → logprob: -6.250207424163818
    6. ' if' → logprob: -6.250207424163818
    7. ' else' → logprob: -6.625207424163818
    8. '   ' → logprob: -6.875207424163818
    9. ' +' → logprob: -8.125207901000977
    10. 'else' → logprob: -9.125207901000977

Token 198: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06595998257398605
    2. '(n' → logprob: -2.940959930419922
    3. ' n' → logprob: -4.565959930419922
    4. ' (' → logprob: -7.565959930419922
    5. '(' → logprob: -10.065959930419922
    6. '1' → logprob: -10.690959930419922
    7. ')' → logprob: -12.065959930419922
    8. '   ' → logprob: -12.190959930419922
    9. ' ' → logprob: -12.315959930419922
    10. '	n' → logprob: -13.128459930419922

Token 199: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20420140027999878
    2. '+' → logprob: -1.8292014598846436
    3. ' +' → logprob: -3.9542014598846436
    4. ' )' → logprob: -5.8292012214660645
    5. ')
' → logprob: -7.2042012214660645
    6. '   ' → logprob: -7.7042012214660645
    7. '-' → logprob: -7.9542012214660645
    8. ')+' → logprob: -8.954201698303223
    9. '+)' → logprob: -9.329201698303223
    10. ' -' → logprob: -9.579201698303223

Token 200: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021021578868385404
    2. ' ' → logprob: -8.50020980834961
    3. '2' → logprob: -12.25020980834961
    4. '0' → logprob: -13.87520980834961
    5. ')' → logprob: -14.62520980834961
    6. '+' → logprob: -15.37520980834961
    7. '   ' → logprob: -16.25020980834961
    8. '```' → logprob: -16.68770980834961
    9. '-' → logprob: -17.75020980834961
    10. '3' → logprob: -17.81270980834961

Token 201: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.538490950129926e-05
    2. '2' → logprob: -10.125055313110352
    3. ' ' → logprob: -11.125055313110352
    4. '0' → logprob: -15.250055313110352
    5. ')' → logprob: -15.875055313110352
    6. '+' → logprob: -16.37505531311035
    7. '```' → logprob: -17.37505531311035
    8. '3' → logprob: -17.50005531311035
    9. '-' → logprob: -17.87505531311035
    10. '   ' → logprob: -18.00005531311035

Token 202: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0436742827296257
    2. ')
' → logprob: -3.1686742305755615
    3. '   ' → logprob: -7.418674468994141
    4. ' )' → logprob: -10.04367446899414
    5. ')

' → logprob: -11.29367446899414
    6. ' ' → logprob: -12.41867446899414
    7. ' )
' → logprob: -12.41867446899414
    8. ')
' → logprob: -12.66867446899414
    9. '
' → logprob: -12.79367446899414
    10. '  ' → logprob: -13.79367446899414

Token 203: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6435877680778503
    2. '   ' → logprob: -1.0185878276824951
    3. 'print' → logprob: -2.268587827682495
    4. ')' → logprob: -4.893587589263916
    5. ' print' → logprob: -7.018587589263916
    6. ')
' → logprob: -7.268587589263916
    7. '    
' → logprob: -7.768587589263916
    8. '<|end|>' → logprob: -8.518588066101074
    9. '
' → logprob: -9.768588066101074
    10. '' → logprob: -10.018588066101074

Token 204: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0033631932456046343
    2. '   ' → logprob: -6.003363132476807
    3. '
' → logprob: -7.253363132476807
    4. ')' → logprob: -9.628363609313965
    5. ' print' → logprob: -9.753363609313965
    6. 'if' → logprob: -10.628363609313965
    7. 'return' → logprob: -11.253363609313965
    8. ')
' → logprob: -11.503363609313965
    9. 'for' → logprob: -12.878363609313965
    10. '    
' → logprob: -13.253363609313965

Token 205: '((' (ID: 2054)
  Prédit: '(out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(out' → logprob: -8.64970643306151e-05
    2. '(' → logprob: -9.375086784362793
    3. 'out' → logprob: -14.250086784362793
    4. ' (' → logprob: -14.375086784362793
    5. '(
' → logprob: -15.375086784362793
    6. '()' → logprob: -16.250085830688477
    7. '((' → logprob: -16.750085830688477
    8. '*out' → logprob: -17.625085830688477
    9. '(output' → logprob: -18.250085830688477
    10. '(end' → logprob: -18.500085830688477

Token 206: 'lambda' (ID: 35280)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.001773830852471292
    2. ' outcome' → logprob: -6.376773834228516
    3. ')' → logprob: -10.626773834228516
    4. ' out' → logprob: -11.001773834228516
    5. '(out' → logprob: -12.126773834228516
    6. '*out' → logprob: -12.126773834228516
    7. '   ' → logprob: -12.751773834228516
    8. 'str' → logprob: -13.001773834228516
    9. '))' → logprob: -13.126773834228516
    10. ' ' → logprob: -13.501773834228516

Token 207: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2579771876335144
    2. 'x' → logprob: -1.6329772472381592
    3. 'out' → logprob: -4.75797700881958
    4. ':' → logprob: -5.63297700881958
    5. ' n' → logprob: -5.63297700881958
    6. 'n' → logprob: -6.25797700881958
    7. ' s' → logprob: -6.50797700881958
    8. ' outcome' → logprob: -6.50797700881958
    9. ' a' → logprob: -6.63297700881958
    10. 'a' → logprob: -6.63297700881958

Token 208: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013184349052608013
    2. ':x' → logprob: -4.388184547424316
    3. ' :' → logprob: -7.513184547424316
    4. ',' → logprob: -10.388184547424316
    5. ':
' → logprob: -10.763184547424316
    6. 'x' → logprob: -10.888184547424316
    7. ':(' → logprob: -11.138184547424316
    8. ':n' → logprob: -11.263184547424316
    9. '=' → logprob: -11.638184547424316
    10. ':[' → logprob: -13.013184547424316

Token 209: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.13829095661640167
    2. ' x' → logprob: -2.5132908821105957
    3. '-' → logprob: -3.8882908821105957
    4. 'out' → logprob: -5.138290882110596
    5. '0' → logprob: -5.638290882110596
    6. '(-' → logprob: -5.638290882110596
    7. '(x' → logprob: -5.888290882110596
    8. 'N' → logprob: -6.388290882110596
    9. '(' → logprob: -6.388290882110596
    10. 'print' → logprob: -6.888290882110596

Token 210: ')(' (ID: 4898)
  Prédit: ')('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')(' → logprob: -1.3205010890960693
    2. ' if' → logprob: -1.6955010890960693
    3. '(x' → logprob: -2.0705010890960693
    4. ' and' → logprob: -2.4455010890960693
    5. '))(' → logprob: -2.4455010890960693
    6. 'and' → logprob: -2.6955010890960693
    7. '+' → logprob: -2.9455010890960693
    8. 'if' → logprob: -2.9455010890960693
    9. ')' → logprob: -4.070501327514648
    10. '**' → logprob: -4.320501327514648

Token 211: 'out' (ID: 468)
  Prédit: 'out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.011080952361226082
    2. ' outcome' → logprob: -4.511080741882324
    3. ' out' → logprob: -11.136080741882324
    4. '(out' → logprob: -11.886080741882324
    5. '   ' → logprob: -12.511080741882324
    6. 'Outcome' → logprob: -13.386080741882324
    7. ')' → logprob: -13.511080741882324
    8. ' ' → logprob: -14.011080741882324
    9. '[out' → logprob: -14.261080741882324
    10. '	out' → logprob: -14.386080741882324

Token 212: 'come' (ID: 2512)
  Prédit: 'come'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'come' → logprob: -0.00027099132421426475
    2. 'ome' → logprob: -8.37527084350586
    3. 'com' → logprob: -10.37527084350586
    4. ' come' → logprob: -13.00027084350586
    5. ')' → logprob: -13.12527084350586
    6. '_' → logprob: -13.75027084350586
    7. '   ' → logprob: -14.00027084350586
    8. 'Come' → logprob: -14.12527084350586
    9. 'came' → logprob: -15.00027084350586
    10. 'ame' → logprob: -15.37527084350586

Token 213: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038050562143325806
    2. '))' → logprob: -3.288050651550293
    3. ')))' → logprob: -12.038050651550293
    4. ')
' → logprob: -13.288050651550293
    5. ' )' → logprob: -14.163050651550293
    6. '   ' → logprob: -15.163050651550293
    7. '))
' → logprob: -16.163049697875977
    8. ')}' → logprob: -16.413049697875977
    9. '})' → logprob: -16.663049697875977
    10. ')")' → logprob: -16.788049697875977

Token 214: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11671991646289825
    2. '<|end|>' → logprob: -2.241719961166382
    3. '
' → logprob: -5.991719722747803
    4. '\n' → logprob: -8.366720199584961
    5. ':' → logprob: -8.616720199584961
    6. ')
' → logprob: -8.741720199584961
    7. ' ' → logprob: -8.866720199584961
    8. '<|end|>' → logprob: -9.116720199584961
    9. ' )' → logprob: -9.366720199584961
    10. '```' → logprob: -9.491720199584961

Token 215: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 216: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 217: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16368994116783142
    2. 'main' → logprob: -2.2886898517608643
    3. '<|end|>' → logprob: -3.2886898517608643
    4. '
' → logprob: -4.913690090179443
    5. '#' → logprob: -6.663690090179443
    6. ')' → logprob: -7.038690090179443
    7. '_' → logprob: -8.038689613342285
    8. ' if' → logprob: -8.038689613342285
    9. '```' → logprob: -8.038689613342285
    10. '}' → logprob: -8.163689613342285

Token 218: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.02324792370200157
    2. '__' → logprob: -3.7732479572296143
    3. ' ' → logprob: -13.398247718811035
    4. '_name' → logprob: -14.648247718811035
    5. 'name' → logprob: -15.523247718811035
    6. ' ' → logprob: -16.77324867248535
    7. '/__' → logprob: -16.77324867248535
    8. '___' → logprob: -17.39824867248535
    9. ' name' → logprob: -17.52324867248535
    10. ' True' → logprob: -18.02324867248535

Token 219: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.027967136353254318
    2. ' ==' → logprob: -3.9029672145843506
    3. '==' → logprob: -5.1529669761657715
    4. '__.__' → logprob: -7.4029669761657715
    5. ' __' → logprob: -7.6529669761657715
    6. '__.' → logprob: -7.9029669761657715
    7. '.__' → logprob: -10.15296745300293
    8. '__[' → logprob: -10.52796745300293
    9. '__["' → logprob: -11.65296745300293
    10. '____' → logprob: -11.77796745300293

Token 220: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.023293538717553e-05
    2. '__.__' → logprob: -10.625030517578125
    3. '==' → logprob: -12.875030517578125
    4. '__.' → logprob: -13.500030517578125
    5. ' ==' → logprob: -14.250030517578125
    6. '____' → logprob: -14.750030517578125
    7. '__
' → logprob: -15.000030517578125
    8. '___' → logprob: -15.125030517578125
    9. '__["' → logprob: -16.625030517578125
    10. '__('' → logprob: -16.875030517578125

Token 221: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5461726188659668
    2. ' ==' → logprob: -1.0461726188659668
    3. '==' → logprob: -2.671172618865967
    4. '=='' → logprob: -8.921173095703125
    5. '=="' → logprob: -9.046173095703125
    6. '__.__' → logprob: -10.171173095703125
    7. '_' → logprob: -10.421173095703125
    8. '.__' → logprob: -11.171173095703125
    9. '__.' → logprob: -11.421173095703125
    10. '___' → logprob: -11.921173095703125

Token 222: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.693168580532074
    2. ''' → logprob: -0.693168580532074
    3. '__' → logprob: -11.443168640136719
    4. ' "__' → logprob: -11.943168640136719
    5. ' '__' → logprob: -13.068168640136719
    6. '"user' → logprob: -15.068168640136719
    7. ''name' → logprob: -15.318168640136719
    8. ''"' → logprob: -15.568168640136719
    9. '"'' → logprob: -15.568168640136719
    10. '('__' → logprob: -15.568168640136719

Token 223: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -2.248469718324486e-05
    2. '__' → logprob: -11.375022888183594
    3. '_main' → logprob: -11.500022888183594
    4. ' main' → logprob: -14.625022888183594
    5. 'name' → logprob: -15.250022888183594
    6. '_MAIN' → logprob: -17.250022888183594
    7. '(main' → logprob: -17.250022888183594
    8. '__':
' → logprob: -17.375022888183594
    9. 'm' → logprob: -18.000022888183594
    10. '	main' → logprob: -18.250022888183594

Token 224: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.5817956924438477
    2. '__' → logprob: -0.8317956924438477
    3. '__:' → logprob: -5.206795692443848
    4. '__":
' → logprob: -8.206795692443848
    5. ':' → logprob: -10.081795692443848
    6. '':' → logprob: -10.831795692443848
    7. '_' → logprob: -11.706795692443848
    8. '('__' → logprob: -11.831795692443848
    9. '__
' → logprob: -13.206795692443848
    10. '__.' → logprob: -13.456795692443848

Token 225: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24382233619689941
    2. 'main' → logprob: -1.7438223361968994
    3. ' main' → logprob: -3.6188223361968994
    4. '	main' → logprob: -4.24382209777832
    5. '_main' → logprob: -8.36882209777832
    6. '    
' → logprob: -9.99382209777832
    7. '<|end|>' → logprob: -10.24382209777832
    8. '(main' → logprob: -11.49382209777832
    9. '  ' → logprob: -12.36882209777832
    10. ' ' → logprob: -12.36882209777832

Token 226: ' (' (ID: 350)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.8889261304575484e-06
    2. ' main' → logprob: -12.500003814697266
    3. '	main' → logprob: -15.875003814697266
    4. '   ' → logprob: -17.000003814697266
    5. '_main' → logprob: -19.875003814697266
    6. 'import' → logprob: -20.750003814697266
    7. '(main' → logprob: -21.000003814697266
    8. '__' → logprob: -22.000003814697266
    9. '.main' → logprob: -22.000003814697266
    10. '    
' → logprob: -22.250003814697266

Token 227: 'lambda' (ID: 35280)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0002270198310725391
    2. ')' → logprob: -8.750226974487305
    3. ' main' → logprob: -9.625226974487305
    4. '__' → logprob: -13.500226974487305
    5. '_main' → logprob: -14.250226974487305
    6. '	main' → logprob: -14.875226974487305
    7. '   ' → logprob: -16.875226974487305
    8. '(main' → logprob: -17.250226974487305
    9. 'Main' → logprob: -18.125226974487305
    10. ')__' → logprob: -18.625226974487305

Token 228: ' f' (ID: 285)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2633287012577057
    2. 'main' → logprob: -1.5133286714553833
    3. ':' → logprob: -4.888328552246094
    4. '):' → logprob: -6.263328552246094
    5. ' :' → logprob: -7.513328552246094
    6. ' ):' → logprob: -7.638328552246094
    7. ')' → logprob: -7.638328552246094
    8. '():' → logprob: -9.138328552246094
    9. '	main' → logprob: -9.263328552246094
    10. ' )' → logprob: -9.638328552246094

Token 229: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11617401242256165
    2. ':f' → logprob: -2.4911739826202393
    3. '(f' → logprob: -4.616174221038818
    4. ' :' → logprob: -4.866174221038818
    5. 'f' → logprob: -5.366174221038818
    6. ' f' → logprob: -5.866174221038818
    7. '():' → logprob: -6.866174221038818
    8. ')' → logprob: -8.61617374420166
    9. '=f' → logprob: -9.11617374420166
    10. '):' → logprob: -9.36617374420166

Token 230: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.1811234951019287
    2. ' f' → logprob: -1.8061234951019287
    3. '   ' → logprob: -6.681123733520508
    4. '    ' → logprob: -9.931123733520508
    5. 'sys' → logprob: -11.431123733520508
    6. ')' → logprob: -11.681123733520508
    7. '__' → logprob: -11.681123733520508
    8. ' ' → logprob: -11.806123733520508
    9. '  ' → logprob: -12.306123733520508
    10. '	f' → logprob: -12.306123733520508

Token 231: '())' (ID: 3516)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.6058021187782288
    2. '())' → logprob: -0.8558021187782288
    3. '()' → logprob: -3.605802059173584
    4. '(main' → logprob: -7.105802059173584
    5. '(sys' → logprob: -7.355802059173584
    6. ')' → logprob: -8.355802536010742
    7. '().__' → logprob: -9.230802536010742
    8. ')(' → logprob: -9.480802536010742
    9. '(' → logprob: -9.605802536010742
    10. 'main' → logprob: -9.855802536010742

Token 232: '(' (ID: 7)
  Prédit: '(main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(main' → logprob: -3.869639476761222e-05
    2. ' (' → logprob: -10.375039100646973
    3. 'main' → logprob: -12.000039100646973
    4. '(' → logprob: -14.875039100646973
    5. '(lambda' → logprob: -15.125039100646973
    6. '(Main' → logprob: -15.250039100646973
    7. ' ' → logprob: -15.500039100646973
    8. ' main' → logprob: -15.625039100646973
    9. '(print' → logprob: -18.000038146972656
    10. '   ' → logprob: -18.125038146972656

Token 233: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -4.5491004129871726e-05
    2. ' main' → logprob: -10.000045776367188
    3. '	main' → logprob: -19.875045776367188
    4. '(main' → logprob: -21.750045776367188
    5. '.main' → logprob: -24.000045776367188
    6. '_main' → logprob: -24.250045776367188
    7. '   ' → logprob: -25.000045776367188
    8. 'Main' → logprob: -25.000045776367188
    9. ')' → logprob: -25.625045776367188
    10. '__' → logprob: -25.750045776367188

Token 234: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.464347173576243e-05
    2. '())' → logprob: -10.87503433227539
    3. ')
' → logprob: -11.37503433227539
    4. '()' → logprob: -13.25003433227539
    5. '))' → logprob: -13.50003433227539
    6. ' )' → logprob: -14.25003433227539
    7. ')`' → logprob: -16.25003433227539
    8. ')}' → logprob: -17.87503433227539
    9. ')#' → logprob: -17.87503433227539
    10. '`)' → logprob: -18.12503433227539


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 232
Tokens correctement prédits (1ère position, stricte): 92
Tokens correctement prédits (1ère position, avec adaptation): 93
Tokens correctement prédits (top 10): 173
Précision stricte (1ère position): 39.66%
Précision adaptée (1ère position): 40.09%
Précision (top 10): 74.57%
================================================================================
