================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def get_input():
    return input().split()

def parse_n(nm):
    return int(nm[0])

def parse_m(nm):
    return int(nm[1])

def parse_a():
    return input().split()

def convert_a_to_int_list(a):
    return [int(x) for x in a]

def initialize_b():
    return {0: 1}

def initialize_k():
    return 0

def update_k(k, ai, m):
    k += ai
    k = k % m
    return k

def update_b(b, k):
    if k in b:
        b[k] += 1
    else:
        b[k] = 1

def process_b_and_k(n, a, m):
    b = initialize_b()
    k = initialize_k()
    for i in range(n):
        k = update_k(k, a[i], m)
        update_b(b, k)
    return b

def get_b_values(b):
    return b.values()

def initialize_ans():
    return 0

def combinatoric_count(i):
    return i * (i - 1) // 2

def compute_ans(c):
    ans = initialize_ans()
    for i in c:
        ans += combinatoric_count(i)
    return ans

def output_result(ans):
    print(ans)

def main():
    nm = get_input()
    n = parse_n(nm)
    m = parse_m(nm)
    a = parse_a()
    a = convert_a_to_int_list(a)
    b = process_b_and_k(n, a, m)
    c = get_b_values(b)
    ans = compute_ans(c)
    output_result(ans)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' get' (ID: 717)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002158825984224677
    2. '_' → logprob: -6.2521586418151855
    3. '():' → logprob: -9.252159118652344
    4. ' (' → logprob: -10.252159118652344
    5. '()' → logprob: -10.627159118652344
    6. '```' → logprob: -10.627159118652344
    7. '(_' → logprob: -11.502159118652344
    8. '(:' → logprob: -11.627159118652344
    9. '(_:' → logprob: -12.127159118652344
    10. ':' → logprob: -12.502159118652344

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5172414183616638
    2. '\' → logprob: -1.3922414779663086
    3. '\n' → logprob: -3.3922414779663086
    4. '   ' → logprob: -3.5172414779663086
    5. '(' → logprob: -3.7672414779663086
    6. '    
' → logprob: -4.517241477966309
    7. ':' → logprob: -4.642241477966309
    8. ''' → logprob: -5.392241477966309
    9. '()' → logprob: -5.392241477966309
    10. ''\' → logprob: -5.517241477966309

Token 5: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.359432190656662
    2. 'user' → logprob: -2.4844322204589844
    3. 'input' → logprob: -2.8594322204589844
    4. 'x' → logprob: -2.9844322204589844
    5. 'i' → logprob: -3.2344322204589844
    6. '   ' → logprob: -3.9844322204589844
    7. 'r' → logprob: -3.9844322204589844
    8. ' ' → logprob: -4.234432220458984
    9. 'u' → logprob: -5.359432220458984
    10. 'a' → logprob: -5.734432220458984

Token 6: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5008310079574585
    2. ' input' → logprob: -1.1258310079574585
    3. 'input' → logprob: -3.000831127166748
    4. '"' → logprob: -4.375831127166748
    5. ''' → logprob: -5.750831127166748
    6. ' "' → logprob: -6.375831127166748
    7. '  ' → logprob: -7.000831127166748
    8. ' '' → logprob: -7.750831127166748
    9. ' None' → logprob: -8.37583065032959
    10. '(input' → logprob: -8.62583065032959

Token 7: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015279557555913925
    2. '()' → logprob: -6.876527786254883
    3. '('' → logprob: -8.251527786254883
    4. '("("' → logprob: -9.126527786254883
    5. ' (' → logprob: -10.376527786254883
    6. '(
' → logprob: -10.626527786254883
    7. ''' → logprob: -10.751527786254883
    8. '("")' → logprob: -11.376527786254883
    9. ' ' → logprob: -11.501527786254883
    10. '"' → logprob: -12.001527786254883

Token 8: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.002309527015313506
    2. 'rstrip' → logprob: -6.752309322357178
    3. 'split' → logprob: -6.877309322357178
    4. 'replace' → logprob: -9.877309799194336
    5. '()' → logprob: -10.877309799194336
    6. '(' → logprob: -11.377309799194336
    7. '```' → logprob: -12.377309799194336
    8. 'lower' → logprob: -12.377309799194336
    9. '-strip' → logprob: -12.502309799194336
    10. ' strip' → logprob: -12.877309799194336

Token 9: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010069949552416801
    2. '()' → logprob: -4.635069847106934
    3. '('' → logprob: -9.635069847106934
    4. '("("' → logprob: -9.885069847106934
    5. '```' → logprob: -10.260069847106934
    6. '`' → logprob: -10.385069847106934
    7. '`()' → logprob: -10.635069847106934
    8. ' (' → logprob: -10.760069847106934
    9. '(`' → logprob: -11.010069847106934
    10. '(

' → logprob: -11.135069847106934

Token 10: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1117290258407593
    2. '```' → logprob: -1.6117290258407593
    3. '#' → logprob: -2.236729145050049
    4. '(' → logprob: -2.611729145050049
    5. '<|end|>' → logprob: -2.861729145050049
    6. 'd' → logprob: -3.361729145050049
    7. '' → logprob: -3.361729145050049
    8. '[' → logprob: -3.361729145050049
    9. '\' → logprob: -3.986729145050049
    10. '.' → logprob: -4.236729145050049

Token 11: ' parse' (ID: 8420)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.9335078597068787
    2. ' calculate' → logprob: -1.0585079193115234
    3. ' main' → logprob: -1.5585079193115234
    4. ' process' → logprob: -3.6835079193115234
    5. ' compute' → logprob: -5.433507919311523
    6. ' space' → logprob: -5.433507919311523
    7. ' user' → logprob: -5.683507919311523
    8. ' add' → logprob: -6.183507919311523
    9. ' print' → logprob: -6.683507919311523
    10. ' my' → logprob: -6.683507919311523

Token 12: '_n' (ID: 2170)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0781932920217514
    2. '_input' → logprob: -2.953193187713623
    3. '(' → logprob: -4.453193187713623
    4. '_parameters' → logprob: -6.203193187713623
    5. '_line' → logprob: -6.453193187713623
    6. '_data' → logprob: -6.453193187713623
    7. '_user' → logprob: -6.828193187713623
    8. '_args' → logprob: -7.578193187713623
    9. '_name' → logprob: -7.703193187713623
    10. '_params' → logprob: -8.078193664550781

Token 13: '(n' (ID: 2406)
  Prédit: 'umber'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'umber' → logprob: -0.07952898740768433
    2. 'um' → logprob: -3.454529047012329
    3. 'umbers' → logprob: -3.579529047012329
    4. 'ame' → logprob: -4.57952880859375
    5. '()' → logprob: -5.82952880859375
    6. '_' → logprob: -5.95452880859375
    7. 'ext' → logprob: -7.70452880859375
    8. 'ames' → logprob: -8.07952880859375
    9. '():' → logprob: -9.20452880859375
    10. '(' → logprob: -10.07952880859375

Token 14: 'm' (ID: 76)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16313090920448303
    2. ')' → logprob: -2.41313099861145
    3. 'umber' → logprob: -3.16313099861145
    4. 'umer' → logprob: -4.538130760192871
    5. 'umbers' → logprob: -5.663130760192871
    6. 'um' → logprob: -7.038130760192871
    7. 'umerator' → logprob: -7.163130760192871
    8. '_' → logprob: -7.288130760192871
    9. ':' → logprob: -7.663130760192871
    10. '=' → logprob: -8.163130760192871

Token 15: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.269024521112442
    2. '):' → logprob: -1.5190244913101196
    3. '()' → logprob: -4.76902437210083
    4. '[' → logprob: -6.14402437210083
    5. '():' → logprob: -7.01902437210083
    6. '())' → logprob: -7.26902437210083
    7. '(' → logprob: -7.26902437210083
    8. '[]):' → logprob: -7.26902437210083
    9. '_' → logprob: -7.51902437210083
    10. 'e' → logprob: -8.019024848937988

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12188181281089783
    2. '(n' → logprob: -2.7468817234039307
    3. '    ' → logprob: -3.6218817234039307
    4. '_' → logprob: -5.24688196182251
    5. '[' → logprob: -5.87188196182251
    6. '_n' → logprob: -6.12188196182251
    7. '(' → logprob: -6.24688196182251
    8. ' n' → logprob: -6.37188196182251
    9. '[]' → logprob: -6.62188196182251
    10. '[n' → logprob: -6.74688196182251

Token 17: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.100262999534607
    2. 'n' → logprob: -1.475262999534607
    3. ' n' → logprob: -1.725262999534607
    4. 'return' (adapté à ' return') → logprob: -2.2252631187438965
    5. '   ' → logprob: -2.3502631187438965
    6. ' nm' → logprob: -2.9752631187438965
    7. 'nm' → logprob: -5.4752631187438965
    8. '    ' → logprob: -8.100262641906738
    9. ' parts' → logprob: -8.225262641906738
    10. '[n' → logprob: -8.350262641906738

Token 18: ' int' (ID: 677)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.3995765149593353
    2. ' int' → logprob: -2.274576425552368
    3. '[int' → logprob: -2.774576425552368
    4. ' tuple' → logprob: -3.024576425552368
    5. 'list' → logprob: -3.524576425552368
    6. ' [' → logprob: -3.524576425552368
    7. 'int' → logprob: -4.024576663970947
    8. '[n' → logprob: -4.649576663970947
    9. '(int' → logprob: -4.899576663970947
    10. ' nm' → logprob: -5.024576663970947

Token 19: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.179777592420578
    2. '(n' → logprob: -1.8047776222229004
    3. '('' → logprob: -10.929777145385742
    4. '(nn' → logprob: -12.304777145385742
    5. '((' → logprob: -13.304777145385742
    6. '()' → logprob: -13.554777145385742
    7. '("("' → logprob: -13.554777145385742
    8. '(m' → logprob: -13.929777145385742
    9. '(

' → logprob: -14.054777145385742
    10. ' (' → logprob: -14.054777145385742

Token 20: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00024406595912296325
    2. '[' → logprob: -8.750244140625
    3. '_m' → logprob: -10.000244140625
    4. '[m' → logprob: -10.625244140625
    5. ')' → logprob: -11.875244140625
    6. 'м' → logprob: -12.250244140625
    7. ')m' → logprob: -13.625244140625
    8. ' m' → logprob: -14.500244140625
    9. 'n' → logprob: -14.625244140625
    10. 'M' → logprob: -14.750244140625

Token 21: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.981667537620524e-06
    2. ')' → logprob: -13.750001907348633
    3. '.split' → logprob: -15.500001907348633
    4. ' [' → logprob: -15.875001907348633
    5. '   ' → logprob: -16.000001907348633
    6. '0' → logprob: -16.250001907348633
    7. '[n' → logprob: -16.250001907348633
    8. '```' → logprob: -16.875001907348633
    9. '[
' → logprob: -17.750001907348633
    10. '[]' → logprob: -17.750001907348633

Token 22: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00044103997061029077
    2. '1' → logprob: -7.750441074371338
    3. ' ' → logprob: -11.62544059753418
    4. ')' → logprob: -14.00044059753418
    5. '])' → logprob: -15.62544059753418
    6. ']' → logprob: -15.75044059753418
    7. '   ' → logprob: -17.62544059753418
    8. '```' → logprob: -17.62544059753418
    9. '-' → logprob: -18.50044059753418
    10. '  ' → logprob: -18.62544059753418

Token 23: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006695592775940895
    2. '),' → logprob: -5.506695747375488
    3. '])' → logprob: -6.006695747375488
    4. '))' → logprob: -10.506695747375488
    5. ')]' → logprob: -10.506695747375488
    6. ' )' → logprob: -10.631695747375488
    7. ')])' → logprob: -10.756695747375488
    8. ',' → logprob: -11.506695747375488
    9. ']' → logprob: -11.881695747375488
    10. '})' → logprob: -12.131695747375488

Token 24: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.015676278620958328
    2. '

' → logprob: -4.765676498413086
    3. '
' → logprob: -5.140676498413086
    4. 'n' → logprob: -7.265676498413086
    5. '<|end|>' → logprob: -8.765676498413086
    6. '```' → logprob: -8.890676498413086
    7. '<|end|>' → logprob: -9.765676498413086
    8. '\' → logprob: -10.390676498413086
    9. '#' → logprob: -10.640676498413086
    10. 'ndef' → logprob: -11.140676498413086

Token 25: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.020103728398680687
    2. ' get' → logprob: -4.895103931427002
    3. ' main' → logprob: -5.395103931427002
    4. 'parse' → logprob: -5.645103931427002
    5. ' solve' → logprob: -5.645103931427002
    6. ' calculate' → logprob: -8.020103454589844
    7. ' process' → logprob: -8.770103454589844
    8. ' compute' → logprob: -10.020103454589844
    9. 'main' → logprob: -10.395103454589844
    10. 'solve' → logprob: -10.520103454589844

Token 26: '_m' (ID: 1285)
  Prédit: '_nm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nm' → logprob: -0.25470229983329773
    2. '_n' → logprob: -2.62970232963562
    3. '_m' → logprob: -2.75470232963562
    4. '_' → logprob: -2.75470232963562
    5. '(n' → logprob: -3.87970232963562
    6. '(' → logprob: -6.879702091217041
    7. ' (' → logprob: -8.1297025680542
    8. ' ' → logprob: -8.1297025680542
    9. ' nm' → logprob: -8.2547025680542
    10. '_s' → logprob: -8.3797025680542

Token 27: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.31342604756355286
    2. '(m' → logprob: -1.3134260177612305
    3. '(' → logprob: -9.56342601776123
    4. ' (' → logprob: -10.06342601776123
    5. '(mm' → logprob: -11.43842601776123
    6. '(nn' → logprob: -12.31342601776123
    7. '_nm' → logprob: -12.43842601776123
    8. ',' → logprob: -12.68842601776123
    9. '```' → logprob: -12.68842601776123
    10. '(dm' → logprob: -12.68842601776123

Token 28: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0010450744302943349
    2. '[' → logprob: -6.876045227050781
    3. ')' → logprob: -12.001045227050781
    4. 'n' → logprob: -13.126045227050781
    5. '_m' → logprob: -13.376045227050781
    6. 'nm' → logprob: -14.126045227050781
    7. 'м' → logprob: -14.626045227050781
    8. '(' → logprob: -14.626045227050781
    9. '_nm' → logprob: -15.376045227050781
    10. ' m' → logprob: -15.751045227050781

Token 29: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5772292017936707
    2. '[' → logprob: -0.8272292017936707
    3. '):
' → logprob: -7.452229022979736
    4. ')' → logprob: -7.952229022979736
    5. '[]):' → logprob: -8.702229499816895
    6. '   ' → logprob: -9.452229499816895
    7. ')[' → logprob: -9.702229499816895
    8. '[]' → logprob: -11.702229499816895
    9. ' ):' → logprob: -11.952229499816895
    10. '):
' → logprob: -12.202229499816895

Token 30: '   ' (ID: 271)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5777246356010437
    2. ' int' → logprob: -0.8277246356010437
    3. '   ' → logprob: -6.577724456787109
    4. ' return' → logprob: -8.07772445678711
    5. '(int' → logprob: -10.45272445678711
    6. 'return' → logprob: -10.57772445678711
    7. '=int' → logprob: -11.45272445678711
    8. '[int' → logprob: -12.32772445678711
    9. '    ' → logprob: -12.57772445678711
    10. ' ' → logprob: -12.70272445678711

Token 31: ' return' (ID: 622)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10791141539812088
    2. ' int' → logprob: -2.8579113483428955
    3. 'return' (adapté à ' return') → logprob: -3.6079113483428955
    4. ' return' → logprob: -4.107911586761475
    5. '   ' → logprob: -6.607911586761475
    6. ' ' → logprob: -13.982911109924316
    7. '=int' → logprob: -13.982911109924316
    8. '```' → logprob: -14.232911109924316
    9. '(int' → logprob: -14.482911109924316
    10. '[int' → logprob: -14.482911109924316

Token 32: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.004081128165125847
    2. ' int' → logprob: -5.5040812492370605
    3. '(int' → logprob: -12.879080772399902
    4. '   ' → logprob: -16.50408172607422
    5. '  ' → logprob: -17.50408172607422
    6. 'nt' → logprob: -18.12908172607422
    7. ' ' → logprob: -18.50408172607422
    8. '[int' → logprob: -18.75408172607422
    9. '	int' → logprob: -19.62908172607422
    10. '<int' → logprob: -20.00408172607422

Token 33: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.47544610500335693
    2. '(' → logprob: -0.9754461050033569
    3. '(m' → logprob: -6.7254462242126465
    4. '((' → logprob: -9.725445747375488
    5. ' (' → logprob: -10.350445747375488
    6. '(nn' → logprob: -10.600445747375488
    7. '("("' → logprob: -11.225445747375488
    8. '('' → logprob: -11.725445747375488
    9. '()' → logprob: -12.350445747375488
    10. '(_' → logprob: -12.725445747375488

Token 34: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00033713103039190173
    2. '[' → logprob: -8.000337600708008
    3. '[m' → logprob: -14.000337600708008
    4. 'м' → logprob: -15.125337600708008
    5. '[n' → logprob: -15.250337600708008
    6. 'n' → logprob: -16.250337600708008
    7. ')' → logprob: -16.500337600708008
    8. '_m' → logprob: -16.750337600708008
    9. ' m' → logprob: -17.250337600708008
    10. ')m' → logprob: -17.625337600708008

Token 35: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. ' [' → logprob: -16.25
    3. '1' → logprob: -17.625
    4. ')[' → logprob: -18.25
    5. '```' → logprob: -18.25
    6. ')' → logprob: -18.375
    7. '   ' → logprob: -18.875
    8. '\[' → logprob: -19.25
    9. '[
' → logprob: -20.375
    10. '[-' → logprob: -21.625

Token 36: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. '0' → logprob: -14.500000953674316
    3. ' ' → logprob: -14.875000953674316
    4. '```' → logprob: -16.250001907348633
    5. '[' → logprob: -16.875001907348633
    6. '   ' → logprob: -17.250001907348633
    7. '-' → logprob: -17.437501907348633
    8. '])' → logprob: -17.625001907348633
    9. ']' → logprob: -18.125001907348633
    10. ')' → logprob: -18.875001907348633

Token 37: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. '))' → logprob: -13.125001907348633
    3. '')' → logprob: -16.375001907348633
    4. ']' → logprob: -16.875001907348633
    5. '])' → logprob: -17.125001907348633
    6. '）' → logprob: -17.250001907348633
    7. ' )' → logprob: -17.625001907348633
    8. '}' → logprob: -18.125001907348633
    9. ')))' → logprob: -18.125001907348633
    10. '[' → logprob: -18.375001907348633

Token 38: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06645034998655319
    2. 'n' → logprob: -3.441450357437134
    3. 'd' → logprob: -3.566450357437134
    4. '\' → logprob: -6.441450119018555
    5. '#' → logprob: -7.191450119018555
    6. '```' → logprob: -7.441450119018555
    7. '\n' → logprob: -7.941450119018555
    8. '
' → logprob: -8.191450119018555
    9. 'de' → logprob: -9.441450119018555
    10. '

' → logprob: -9.941450119018555

Token 39: ' parse' (ID: 8420)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.2693619728088379
    2. ' main' → logprob: -2.019361972808838
    3. 'solve' → logprob: -2.644361972808838
    4. 'calculate' → logprob: -4.519361972808838
    5. ' solve' → logprob: -5.269361972808838
    6. 'process' → logprob: -5.519361972808838
    7. 'sum' → logprob: -6.144361972808838
    8. 'get' → logprob: -6.269361972808838
    9. 'multiply' → logprob: -6.519361972808838
    10. 'max' → logprob: -7.144361972808838

Token 40: '_a' (ID: 10852)
  Prédit: '_n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.20996275544166565
    2. '_' → logprob: -2.459962844848633
    3. '_k' → logprob: -3.834962844848633
    4. '_input' → logprob: -4.084962844848633
    5. '_a' → logprob: -4.209962844848633
    6. '_p' → logprob: -4.459962844848633
    7. '_s' → logprob: -4.959962844848633
    8. '_data' → logprob: -5.084962844848633
    9. '_x' → logprob: -5.334962844848633
    10. '_m' → logprob: -5.584962844848633

Token 41: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20955489575862885
    2. '(n' → logprob: -2.70955491065979
    3. '(a' → logprob: -2.83455491065979
    4. '_' → logprob: -3.83455491065979
    5. '([]' → logprob: -3.95955491065979
    6. '_a' → logprob: -5.709554672241211
    7. 'a' → logprob: -5.709554672241211
    8. '_list' → logprob: -6.084554672241211
    9. '_array' → logprob: -6.709554672241211
    10. '()' → logprob: -6.709554672241211

Token 42: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5762025117874146
    2. '   ' → logprob: -0.9512025117874146
    3. 'list' → logprob: -3.826202392578125
    4. '[]' → logprob: -3.826202392578125
    5. 'int' → logprob: -5.326202392578125
    6. 'input' → logprob: -6.951202392578125
    7. '[int' → logprob: -7.076202392578125
    8. '[' → logprob: -7.201202392578125
    9. ' return' → logprob: -7.826202392578125
    10. 'map' → logprob: -9.451202392578125

Token 43: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0420253649353981
    2. 'list' → logprob: -3.292025327682495
    3. ' return' → logprob: -6.417025566101074
    4. '   ' → logprob: -6.792025566101074
    5. 'input' → logprob: -7.917025566101074
    6. 'int' → logprob: -8.167025566101074
    7. 'a' → logprob: -8.292025566101074
    8. 'map' → logprob: -9.167025566101074
    9. ' list' → logprob: -9.792025566101074
    10. '[]' → logprob: -9.917025566101074

Token 44: ' input' (ID: 3422)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.037531934678554535
    2. '[int' → logprob: -3.912531852722168
    3. 'int' → logprob: -5.287531852722168
    4. 'input' → logprob: -5.537531852722168
    5. ' list' → logprob: -6.162531852722168
    6. '[list' → logprob: -6.162531852722168
    7. '[input' → logprob: -6.412531852722168
    8. '[' → logprob: -6.537531852722168
    9. '[]' → logprob: -7.912531852722168
    10. '[get' → logprob: -9.787531852722168

Token 45: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002453662164043635
    2. '(' → logprob: -8.750245094299316
    3. '().' → logprob: -9.500245094299316
    4. ' ()' → logprob: -12.125245094299316
    5. '()
' → logprob: -13.625245094299316
    6. '()(' → logprob: -14.000245094299316
    7. '()

' → logprob: -14.000245094299316
    8. '`()' → logprob: -14.375245094299316
    9. '()]' → logprob: -14.500245094299316
    10. '()`' → logprob: -14.750245094299316

Token 46: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005668530357070267
    2. 'strip' → logprob: -7.5005669593811035
    3. 'rstrip' → logprob: -11.250566482543945
    4. ' split' → logprob: -14.000566482543945
    5. 'spl' → logprob: -17.250566482543945
    6. '(split' → logprob: -18.375566482543945
    7. 'replace' → logprob: -20.500566482543945
    8. 'read' → logprob: -20.500566482543945
    9. 'plit' → logprob: -20.625566482543945
    10. ' strip' → logprob: -21.125566482543945

Token 47: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0015147423837333918
    2. '(' → logprob: -6.501514911651611
    3. '()(' → logprob: -12.876514434814453
    4. '`()' → logprob: -13.001514434814453
    5. '().' → logprob: -13.376514434814453
    6. '()`' → logprob: -13.501514434814453
    7. '()

' → logprob: -14.376514434814453
    8. ' ()' → logprob: -14.501514434814453
    9. '()]' → logprob: -14.626514434814453
    10. '()
' → logprob: -14.626514434814453

Token 48: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0010444821091368794
    2. 'a' → logprob: -7.876044273376465
    3. '```' → logprob: -8.501044273376465
    4. '<|end|>' → logprob: -8.751044273376465
    5. '\' → logprob: -9.376044273376465
    6. '#' → logprob: -9.751044273376465
    7. 'n' → logprob: -10.126044273376465
    8. '[' → logprob: -11.001044273376465
    9. 'd' → logprob: -11.126044273376465
    10. 'data' → logprob: -11.251044273376465

Token 49: ' convert' (ID: 8452)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0372374951839447
    2. 'main' → logprob: -3.7872374057769775
    3. ' parse' → logprob: -5.412237644195557
    4. ' solve' → logprob: -5.412237644195557
    5. ' get' → logprob: -6.412237644195557
    6. 'parse' → logprob: -7.287237644195557
    7. 'solve' → logprob: -7.287237644195557
    8. '_main' → logprob: -7.787237644195557
    9. ' calculate' → logprob: -7.912237644195557
    10. ' process' → logprob: -8.037237167358398

Token 50: '_a' (ID: 10852)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01604469306766987
    2. '_to' → logprob: -5.016044616699219
    3. '(' → logprob: -5.641044616699219
    4. '_a' → logprob: -5.891044616699219
    5. '_(' → logprob: -6.016044616699219
    6. '(_' → logprob: -9.266044616699219
    7. '_A' → logprob: -10.016044616699219
    8. '_t' → logprob: -10.266044616699219
    9. '('_' → logprob: -10.266044616699219
    10. '_value' → logprob: -10.266044616699219

Token 51: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.43102243542671204
    2. '(' → logprob: -1.8060224056243896
    3. '_' → logprob: -2.1810224056243896
    4. '()' → logprob: -3.3060224056243896
    5. 'to' → logprob: -3.9310224056243896
    6. 'To' → logprob: -4.931022644042969
    7. '_a' → logprob: -6.681022644042969
    8. '_list' → logprob: -7.056022644042969
    9. '(_)' → logprob: -7.056022644042969
    10. '_(' → logprob: -7.181022644042969

Token 52: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.004653099924325943
    2. 'int' → logprob: -5.504652976989746
    3. 'ints' → logprob: -7.879652976989746
    4. '_list' → logprob: -8.879652976989746
    5. '_in' → logprob: -10.879652976989746
    6. 'Int' → logprob: -11.379652976989746
    7. '_' → logprob: -11.879652976989746
    8. '_numbers' → logprob: -12.629652976989746
    9. 'Ints' → logprob: -12.754652976989746
    10. '_i' → logprob: -13.004652976989746

Token 53: '_list' (ID: 4162)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.40293827652931213
    2. '(' → logprob: -1.2779382467269897
    3. '_' → logprob: -3.9029383659362793
    4. '():' → logprob: -4.027938365936279
    5. 's' → logprob: -4.652938365936279
    6. '_list' → logprob: -6.277938365936279
    7. '[]' → logprob: -7.402938365936279
    8. '_a' → logprob: -7.527938365936279
    9. 'a' → logprob: -8.527937889099121
    10. '```' → logprob: -8.527937889099121

Token 54: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00015181333583313972
    2. '(a' → logprob: -9.500151634216309
    3. '("("' → logprob: -11.125151634216309
    4. ' (' → logprob: -11.375151634216309
    5. '()' → logprob: -11.375151634216309
    6. '_' → logprob: -11.750151634216309
    7. 'def' → logprob: -12.625151634216309
    8. 's' → logprob: -12.750151634216309
    9. '():' → logprob: -12.750151634216309
    10. '(n' → logprob: -12.875151634216309

Token 55: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.017564449459314346
    2. ')' → logprob: -4.267564296722412
    3. '():' → logprob: -5.767564296722412
    4. '()' → logprob: -9.26756477355957
    5. '):
' → logprob: -9.89256477355957
    6. '(' → logprob: -10.14256477355957
    7. ' ):' → logprob: -10.26756477355957
    8. '[]):' → logprob: -11.26756477355957
    9. '(a' → logprob: -11.76756477355957
    10. '())' → logprob: -12.39256477355957

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1741047501564026
    2. '[' → logprob: -2.049104690551758
    3. ' return' → logprob: -4.174104690551758
    4. ' list' → logprob: -5.299104690551758
    5. ' [' → logprob: -5.424104690551758
    6. 'return' → logprob: -5.549104690551758
    7. '[int' → logprob: -7.049104690551758
    8. '[:]' → logprob: -7.549104690551758
    9. 'list' → logprob: -8.049104690551758
    10. '[]' → logprob: -8.174104690551758

Token 57: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7006810307502747
    2. 'return' (adapté à ' return') → logprob: -0.7006810307502747
    3. '   ' → logprob: -5.075681209564209
    4. '[' → logprob: -6.950681209564209
    5. ' list' → logprob: -8.95068073272705
    6. ' [' → logprob: -9.32568073272705
    7. 'list' → logprob: -10.07568073272705
    8. '[int' → logprob: -10.57568073272705
    9. '[]' → logprob: -12.45068073272705
    10. '[a' → logprob: -13.20068073272705

Token 58: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.4274632930755615
    2. ' [' → logprob: -1.1774632930755615
    3. '[list' → logprob: -3.6774632930755615
    4. '[' → logprob: -4.552463531494141
    5. 'list' → logprob: -5.552463531494141
    6. '[int' → logprob: -10.05246353149414
    7. '[List' → logprob: -11.05246353149414
    8. '(list' → logprob: -12.42746353149414
    9. '[len' → logprob: -13.17746353149414
    10. '   ' → logprob: -13.80246353149414

Token 59: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.9361264946837764e-07
    2. ' int' → logprob: -16.25
    3. '(int' → logprob: -21.125
    4. '<int' → logprob: -21.625
    5. '```' → logprob: -21.625
    6. '   ' → logprob: -21.875
    7. '[int' → logprob: -21.875
    8. ']int' → logprob: -21.875
    9. ':int' → logprob: -22.5
    10. '	int' → logprob: -23.5

Token 60: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.011877376586198807
    2. '(i' → logprob: -4.511877536773682
    3. '(' → logprob: -7.261877536773682
    4. '(item' → logprob: -10.261877059936523
    5. '(a' → logprob: -10.261877059936523
    6. 'x' → logprob: -10.636877059936523
    7. '(elem' → logprob: -11.761877059936523
    8. '(s' → logprob: -12.011877059936523
    9. '(num' → logprob: -12.261877059936523
    10. '(e' → logprob: -12.386877059936523

Token 61: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9862216504407115e-05
    2. ' )' → logprob: -11.500020027160645
    3. ')]' → logprob: -11.750020027160645
    4. ')...' → logprob: -14.625020027160645
    5. 'for' → logprob: -15.000020027160645
    6. ')x' → logprob: -15.500020027160645
    7. ')
' → logprob: -15.875020027160645
    8. ' for' → logprob: -16.000019073486328
    9. ']' → logprob: -16.500019073486328
    10. ')])' → logprob: -16.625019073486328

Token 62: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13804613053798676
    2. 'for' → logprob: -2.1380460262298584
    3. ' for' → logprob: -4.5130462646484375
    4. ')]' → logprob: -9.888046264648438
    5. ']' → logprob: -11.013046264648438
    6. ' )' → logprob: -11.263046264648438
    7. 'in' → logprob: -12.263046264648438
    8. '   ' → logprob: -13.763046264648438
    9. ' in' → logprob: -14.388046264648438
    10. '(x' → logprob: -14.513046264648438

Token 63: ' x' (ID: 1215)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.43569132685661316
    2. ' x' → logprob: -1.0606913566589355
    3. 'a' → logprob: -5.3106913566589355
    4. 'x' → logprob: -6.3106913566589355
    5. ' ' → logprob: -9.185690879821777
    6. ' ' → logprob: -10.185690879821777
    7. '<|end|>' → logprob: -10.810690879821777
    8. '_a' → logprob: -11.185690879821777
    9. ' in' → logprob: -11.685690879821777
    10. '	a' → logprob: -11.935690879821777

Token 64: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.19453899562358856
    2. 'in' → logprob: -1.819538950920105
    3. ']' → logprob: -5.4445390701293945
    4. 'a' → logprob: -5.9445390701293945
    5. ' ]' → logprob: -5.9445390701293945
    6. ')]' → logprob: -6.5695390701293945
    7. ' )' → logprob: -6.9445390701293945
    8. ')' → logprob: -7.0695390701293945
    9. ' ' → logprob: -7.6945390701293945
    10. ' a' → logprob: -7.8195390701293945

Token 65: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.018150413408875465
    2. ' a' → logprob: -4.018150329589844
    3. ')a' → logprob: -15.393150329589844
    4. '	a' → logprob: -15.768150329589844
    5. '(a' → logprob: -16.643150329589844
    6. ' ' → logprob: -17.143150329589844
    7. '_a' → logprob: -18.143150329589844
    8. '   ' → logprob: -18.643150329589844
    9. ')' → logprob: -18.643150329589844
    10. '  ' → logprob: -19.143150329589844

Token 66: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -8.625866030342877e-05
    2. ')]' → logprob: -9.875085830688477
    3. ' ]' → logprob: -10.500085830688477
    4. '])' → logprob: -12.250085830688477
    5. '   ' → logprob: -14.000085830688477
    6. ')' → logprob: -14.125085830688477
    7. ']
' → logprob: -14.625085830688477
    8. '()]' → logprob: -15.375085830688477
    9. ']]' → logprob: -16.875085830688477
    10. '])]' → logprob: -17.000085830688477

Token 67: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006164593622088432
    2. 'd' → logprob: -5.50616455078125
    3. 'n' → logprob: -7.50616455078125
    4. '#' → logprob: -7.63116455078125
    5. '```' → logprob: -8.25616455078125
    6. '\' → logprob: -8.38116455078125
    7. 'for' → logprob: -8.50616455078125
    8. 'a' → logprob: -8.75616455078125
    9. '
' → logprob: -9.75616455078125
    10. 'de' → logprob: -10.63116455078125

Token 68: ' initialize' (ID: 18400)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0035636075772345066
    2. 'main' → logprob: -6.253563404083252
    3. ' solve' → logprob: -7.253563404083252
    4. ' max' → logprob: -8.87856388092041
    5. ' process' → logprob: -8.87856388092041
    6. ' get' → logprob: -9.12856388092041
    7. ' parse' → logprob: -9.25356388092041
    8. '_main' → logprob: -9.37856388092041
    9. ' sum' → logprob: -9.37856388092041
    10. ' calculate' → logprob: -9.37856388092041

Token 69: '_b' (ID: 1535)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6054351329803467
    2. '_array' → logprob: -1.1054351329803467
    3. '_list' → logprob: -3.2304351329803467
    4. '_a' → logprob: -3.4804351329803467
    5. '_counter' → logprob: -4.980435371398926
    6. '_table' → logprob: -5.355435371398926
    7. '_matrix' → logprob: -5.355435371398926
    8. '_data' → logprob: -5.605435371398926
    9. '_map' → logprob: -5.605435371398926
    10. '(' → logprob: -5.730435371398926

Token 70: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.124264195561409
    2. '()' → logprob: -2.3742642402648926
    3. '(' → logprob: -3.8742642402648926
    4. '(n' → logprob: -6.249264240264893
    5. '(size' → logprob: -7.749264240264893
    6. '()(' → logprob: -8.499263763427734
    7. '_' → logprob: -8.749263763427734
    8. ' ()' → logprob: -9.374263763427734
    9. ' ():' → logprob: -9.374263763427734
    10. '():
' → logprob: -10.499263763427734

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7632013559341431
    2. '[]' → logprob: -0.7632013559341431
    3. ' []' → logprob: -3.7632012367248535
    4. '[' → logprob: -3.8882012367248535
    5. 'return' → logprob: -4.0132012367248535
    6. ' return' → logprob: -5.7632012367248535
    7. ' [' → logprob: -7.0132012367248535
    8. '[:]' → logprob: -7.7632012367248535
    9. ' ' → logprob: -7.8882012367248535
    10. 'b' → logprob: -8.638201713562012

Token 72: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6433581709861755
    2. '[]' → logprob: -0.8933581709861755
    3. '[' → logprob: -3.7683582305908203
    4. 'b' → logprob: -3.8933582305908203
    5. '   ' → logprob: -4.51835823059082
    6. ' return' → logprob: -4.76835823059082
    7. ' []' → logprob: -6.89335823059082
    8. ' [' → logprob: -8.01835823059082
    9. '{}' → logprob: -8.26835823059082
    10. ' ' → logprob: -8.51835823059082

Token 73: ' {' (ID: 354)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.06463942676782608
    2. '[' → logprob: -2.8146393299102783
    3. ' []' → logprob: -6.189639568328857
    4. '{}' → logprob: -7.814639568328857
    5. ' [' → logprob: -9.4396390914917
    6. '[]}' → logprob: -9.4396390914917
    7. '[],' → logprob: -11.1896390914917
    8. '0' → logprob: -11.8146390914917
    9. '[:]' → logprob: -11.8146390914917
    10. '[]
' → logprob: -11.9396390914917

Token 74: '0' (ID: 15)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.01653621345758438
    2. '0' → logprob: -4.766536235809326
    3. 'i' → logprob: -4.891536235809326
    4. ' }' → logprob: -9.016535758972168
    5. 'k' → logprob: -9.391535758972168
    6. '[]}' → logprob: -10.391535758972168
    7. '1' → logprob: -10.516535758972168
    8. ''}' → logprob: -11.141535758972168
    9. 'x' → logprob: -11.141535758972168
    10. '   ' → logprob: -11.641535758972168

Token 75: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009429076453670859
    2. '}' → logprob: -7.125942707061768
    3. ' :' → logprob: -9.375943183898926
    4. ',' → logprob: -11.000943183898926
    5. ':true' → logprob: -12.125943183898926
    6. ':{}' → logprob: -13.000943183898926
    7. ':return' → logprob: -13.125943183898926
    8. '```' → logprob: -13.250943183898926
    9. ':false' → logprob: -13.313443183898926
    10. ')' → logprob: -13.438443183898926

Token 76: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03859780728816986
    2. '1' → logprob: -4.538597583770752
    3. '[]' → logprob: -4.788597583770752
    4. '[]}' → logprob: -5.038597583770752
    5. '-' → logprob: -5.788597583770752
    6. 'True' → logprob: -6.288597583770752
    7. ' ' → logprob: -6.413597583770752
    8. 'float' → logprob: -6.538597583770752
    9. 'False' → logprob: -6.788597583770752
    10. '[' → logprob: -6.913597583770752

Token 77: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0478595569729805
    2. '1' → logprob: -3.5478596687316895
    3. '-' → logprob: -4.9228596687316895
    4. '[]' → logprob: -5.5478596687316895
    5. 'True' → logprob: -6.4228596687316895
    6. '[]}' → logprob: -6.4228596687316895
    7. '[' → logprob: -6.7978596687316895
    8. 'False' → logprob: -7.4228596687316895
    9. 'float' → logprob: -8.172859191894531
    10. ' ' → logprob: -8.422859191894531

Token 78: '}

' (ID: 943)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.1799338459968567
    2. ',' → logprob: -1.804933786392212
    3. ' }' → logprob: -8.679933547973633
    4. '   ' → logprob: -12.054933547973633
    5. ',
' → logprob: -12.054933547973633
    6. ')' → logprob: -12.804933547973633
    7. '}
' → logprob: -13.679933547973633
    8. '})' → logprob: -14.554933547973633
    9. ' ,' → logprob: -14.679933547973633
    10. ' ' → logprob: -14.804933547973633

Token 79: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00016301481809932739
    2. 'b' → logprob: -10.500163078308105
    3. '```' → logprob: -10.500163078308105
    4. '
' → logprob: -10.625163078308105
    5. '\' → logprob: -11.000163078308105
    6. 'n' → logprob: -11.375163078308105
    7. 'a' → logprob: -11.625163078308105
    8. '

' → logprob: -11.750163078308105
    9. 'from' → logprob: -12.250163078308105
    10. '<|end|>' → logprob: -12.375163078308105

Token 80: ' initialize' (ID: 18400)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.1286576986312866
    2. ' process' → logprob: -1.2536576986312866
    3. ' solve' → logprob: -2.628657817840576
    4. ' initialize' → logprob: -2.628657817840576
    5. ' calculate' → logprob: -3.003657817840576
    6. ' parse' → logprob: -3.003657817840576
    7. ' get' → logprob: -3.003657817840576
    8. ' update' → logprob: -3.503657817840576
    9. ' check' → logprob: -4.753657817840576
    10. ' b' → logprob: -4.753657817840576

Token 81: '_k' (ID: 11637)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.7899653315544128
    2. '_c' → logprob: -1.0399653911590576
    3. '_a' → logprob: -2.2899653911590576
    4. '_s' → logprob: -4.0399651527404785
    5. '_e' → logprob: -4.4149651527404785
    6. '_i' → logprob: -4.6649651527404785
    7. '_x' → logprob: -4.7899651527404785
    8. '_p' → logprob: -4.7899651527404785
    9. '_m' → logprob: -5.2899651527404785
    10. '_k' → logprob: -5.5399651527404785

Token 82: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.001317500718869269
    2. '()' → logprob: -7.251317501068115
    3. '():
' → logprob: -8.376317024230957
    4. '(' → logprob: -9.001317024230957
    5. 'a' → logprob: -9.126317024230957
    6. ' ():' → logprob: -10.501317024230957
    7. 'e' → logprob: -11.126317024230957
    8. '=' → logprob: -11.626317024230957
    9. '_' → logprob: -11.626317024230957
    10. 'v' → logprob: -12.251317024230957

Token 83: '   ' (ID: 271)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.36036819219589233
    2. '{}' → logprob: -1.360368251800537
    3. '{' → logprob: -3.485368251800537
    4. '1' → logprob: -4.485368251800537
    5. '   ' → logprob: -6.235368251800537
    6. '[]' → logprob: -7.610368251800537
    7. ' {}' → logprob: -8.110367774963379
    8. ' ' → logprob: -8.235367774963379
    9. 'return' → logprob: -8.735367774963379
    10. '=' → logprob: -8.860367774963379

Token 84: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.179231658577919
    2. '{}' → logprob: -1.9292316436767578
    3. '1' → logprob: -4.929231643676758
    4. '{' → logprob: -5.054231643676758
    5. 'return' (adapté à ' return') → logprob: -5.804231643676758
    6. ' ' → logprob: -7.554231643676758
    7. '   ' → logprob: -8.054231643676758
    8. ' {}' → logprob: -8.554231643676758
    9. '[]' → logprob: -8.679231643676758
    10. '100' → logprob: -8.929231643676758

Token 85: ' ' (ID: 220)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.5399129986763
    2. '0' → logprob: -0.9149129986763
    3. '{' → logprob: -4.539913177490234
    4. '1' → logprob: -5.414913177490234
    5. '[]' → logprob: -7.539913177490234
    6. 'default' → logprob: -8.539913177490234
    7. ' ' → logprob: -8.664913177490234
    8. ' {}' → logprob: -8.789913177490234
    9. 'dict' → logprob: -9.039913177490234
    10. '-' → logprob: -9.414913177490234

Token 86: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.49259576201438904
    2. '{}' → logprob: -1.1175957918167114
    3. '{' → logprob: -3.242595672607422
    4. '1' → logprob: -3.992595672607422
    5. 'default' → logprob: -6.367595672607422
    6. '[]' → logprob: -6.617595672607422
    7. '[' → logprob: -7.367595672607422
    8. 'dict' → logprob: -8.867595672607422
    9. '-' → logprob: -8.992595672607422
    10. '(' → logprob: -9.992595672607422

Token 87: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.204046830534935
    2. '<|end|>' → logprob: -2.4540467262268066
    3. '

' → logprob: -3.0790467262268066
    4. '
' → logprob: -3.0790467262268066
    5. '\n' → logprob: -6.079046726226807
    6. '<|end|>' → logprob: -6.579046726226807
    7. ' def' → logprob: -7.079046726226807
    8. '\' → logprob: -7.579046726226807
    9. '```' → logprob: -8.079047203063965
    10. 'n' → logprob: -8.204047203063965

Token 88: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003513125702738762
    2. '```' → logprob: -9.500350952148438
    3. '
' → logprob: -9.625350952148438
    4. 'd' → logprob: -9.625350952148438
    5. '\' → logprob: -9.875350952148438
    6. 'n' → logprob: -10.500350952148438
    7. '#' → logprob: -11.250350952148438
    8. '

' → logprob: -11.375350952148438
    9. '<|end|>' → logprob: -12.000350952148438
    10. '\n' → logprob: -12.125350952148438

Token 89: ' update' (ID: 4027)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.18462127447128296
    2. 'main' → logprob: -2.1846213340759277
    3. ' process' → logprob: -4.059621334075928
    4. ' solve' → logprob: -4.809621334075928
    5. 'process' → logprob: -5.309621334075928
    6. ' get' → logprob: -5.559621334075928
    7. 'parse' → logprob: -5.934621334075928
    8. 'solve' → logprob: -5.934621334075928
    9. ' calculate' → logprob: -6.184621334075928
    10. ' update' → logprob: -6.184621334075928

Token 90: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.15445147454738617
    2. '_b' → logprob: -2.154451370239258
    3. '_' → logprob: -3.654451370239258
    4. '_(' → logprob: -8.029451370239258
    5. '_a' → logprob: -8.154451370239258
    6. '_B' → logprob: -8.404451370239258
    7. '_K' → logprob: -8.654451370239258
    8. '(_' → logprob: -10.654451370239258
    9. '```' → logprob: -10.654451370239258
    10. '_s' → logprob: -10.654451370239258

Token 91: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.27180659770965576
    2. '(' → logprob: -1.5218065977096558
    3. '(a' → logprob: -5.146806716918945
    4. '(n' → logprob: -5.271806716918945
    5. ' (' → logprob: -5.771806716918945
    6. '(b' → logprob: -7.021806716918945
    7. '(new' → logprob: -7.146806716918945
    8. '(i' → logprob: -7.271806716918945
    9. '(current' → logprob: -7.771806716918945
    10. '(x' → logprob: -7.896806716918945

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009128442965447903
    2. ',a' → logprob: -5.384128570556641
    3. ',x' → logprob: -6.134128570556641
    4. ' ,' → logprob: -6.759128570556641
    5. ',k' → logprob: -8.00912857055664
    6. ',n' → logprob: -8.13412857055664
    7. ',value' → logprob: -9.00912857055664
    8. ',b' → logprob: -9.63412857055664
    9. ',i' → logprob: -9.88412857055664
    10. ',int' → logprob: -9.88412857055664

Token 93: ' ai' (ID: 8440)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.26989462971687317
    2. 'x' → logprob: -2.394894599914551
    3. ' a' → logprob: -2.769894599914551
    4. 'b' → logprob: -4.019894599914551
    5. 'value' → logprob: -4.144894599914551
    6. ' x' → logprob: -4.394894599914551
    7. 'ai' → logprob: -4.894894599914551
    8. ' value' → logprob: -5.644894599914551
    9. ' ai' → logprob: -5.644894599914551
    10. 'val' → logprob: -5.644894599914551

Token 94: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1654391586780548
    2. '+' → logprob: -2.6654391288757324
    3. ',' → logprob: -2.7904391288757324
    4. ' +' → logprob: -4.790439128875732
    5. ')' → logprob: -5.415439128875732
    6. ' ):' → logprob: -5.540439128875732
    7. ' ,' → logprob: -6.415439128875732
    8. '-' → logprob: -7.290439128875732
    9. '_plus' → logprob: -7.415439128875732
    10. '):
' → logprob: -7.415439128875732

Token 95: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.605506181716919
    2. 'b' → logprob: -1.105506181716919
    3. 'k' → logprob: -2.855506181716919
    4. ' m' → logprob: -4.60550594329834
    5. ' b' → logprob: -4.73050594329834
    6. 'mod' → logprob: -4.98050594329834
    7. 'max' → logprob: -5.35550594329834
    8. 'a' → logprob: -5.35550594329834
    9. ')' → logprob: -5.48050594329834
    10. 'i' → logprob: -5.60550594329834

Token 96: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01910344325006008
    2. ',' → logprob: -4.019103527069092
    3. '):
' → logprob: -7.269103527069092
    4. ' ):' → logprob: -9.019103050231934
    5. ')' → logprob: -10.019103050231934
    6. ':' → logprob: -10.519103050231934
    7. '=' → logprob: -11.269103050231934
    8. '):
' → logprob: -12.269103050231934
    9. '):

' → logprob: -12.519103050231934
    10. '   ' → logprob: -12.831603050231934

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7245087623596191
    2. ':' → logprob: -0.8495087623596191
    3. ',' → logprob: -3.349508762359619
    4. '(k' → logprob: -4.099508762359619
    5. '+' → logprob: -4.349508762359619
    6. '):' → logprob: -5.349508762359619
    7. ':
' → logprob: -5.849508762359619
    8. ' +' → logprob: -6.099508762359619
    9. ' (' → logprob: -6.224508762359619
    10. ' =' → logprob: -6.849508762359619

Token 98: ' k' (ID: 372)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.9116708636283875
    2. ' (' → logprob: -1.2866709232330322
    3. ' return' → logprob: -1.5366709232330322
    4. 'return' → logprob: -2.9116709232330322
    5. '   ' → logprob: -3.0366709232330322
    6. '(' → logprob: -6.536670684814453
    7. ' if' → logprob: -7.411670684814453
    8. '((' → logprob: -7.536670684814453
    9. ' k' → logprob: -7.661670684814453
    10. ' ((' → logprob: -7.911670684814453

Token 99: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24485179781913757
    2. ' ^=' → logprob: -2.11985182762146
    3. '^' → logprob: -3.11985182762146
    4. '+=' → logprob: -3.36985182762146
    5. ' =' → logprob: -4.119851589202881
    6. '|' → logprob: -7.244851589202881
    7. ' +=' → logprob: -7.369851589202881
    8. ' ^' → logprob: -7.744851589202881
    9. '+' → logprob: -8.369852066040039
    10. 'xor' → logprob: -9.494852066040039

Token 100: ' ai' (ID: 8440)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.017287518829107285
    2. ' ai' → logprob: -4.142287731170654
    3. '(ai' → logprob: -7.642287731170654
    4. 'int' → logprob: -7.767287731170654
    5. '1' → logprob: -8.267287254333496
    6. ' int' → logprob: -10.642287254333496
    7. ' ' → logprob: -10.767287254333496
    8. '(' → logprob: -10.892287254333496
    9. ' (' → logprob: -11.392287254333496
    10. '   ' → logprob: -12.017287254333496

Token 101: '
' (ID: 198)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.4750238060951233
    2. ' %' → logprob: -0.9750238060951233
    3. '
' → logprob: -7.9750237464904785
    4. ' ' → logprob: -7.9750237464904785
    5. ' %=' → logprob: -9.725024223327637
    6. ' 
' → logprob: -9.975024223327637
    7. ')' → logprob: -10.475024223327637
    8. '<|end|>' → logprob: -11.100024223327637
    9. ' ' → logprob: -11.350024223327637
    10. '   ' → logprob: -11.475024223327637

Token 102: '   ' (ID: 271)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3133877217769623
    2. '%' → logprob: -1.3133877515792847
    3. ' %=' → logprob: -10.438387870788574
    4. ' ' → logprob: -10.563387870788574
    5. ' %
' → logprob: -11.438387870788574
    6. '   ' → logprob: -11.563387870788574
    7. '<|end|>' → logprob: -11.688387870788574
    8. '%m' → logprob: -12.188387870788574
    9. '%
' → logprob: -12.438387870788574
    10. '
' → logprob: -12.438387870788574

Token 103: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.8076907992362976
    2. '%' → logprob: -1.0576908588409424
    3. ' %' → logprob: -1.8076908588409424
    4. ' k' → logprob: -3.9326908588409424
    5. ' if' → logprob: -4.432690620422363
    6. 'if' → logprob: -4.932690620422363
    7. 'm' → logprob: -6.557690620422363
    8. ' %=' → logprob: -6.557690620422363
    9. ' m' → logprob: -7.682690620422363
    10. '   ' → logprob: -8.057690620422363

Token 104: ' =' (ID: 314)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.35046452283859253
    2. '%' → logprob: -1.2254645824432373
    3. ' %=' → logprob: -6.225464344024658
    4. '%=' → logprob: -10.600464820861816
    5. ' ' → logprob: -12.350464820861816
    6. '=' → logprob: -13.350464820861816
    7. ' ' → logprob: -13.725464820861816
    8. ')' → logprob: -13.850464820861816
    9. '`' → logprob: -14.100464820861816
    10. ' %
' → logprob: -14.225464820861816

Token 105: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.523141086101532
    2. 'k' → logprob: -0.898141086101532
    3. ' ' → logprob: -12.023140907287598
    4. '%' → logprob: -12.148140907287598
    5. '(k' → logprob: -12.898140907287598
    6. '	k' → logprob: -14.273140907287598
    7. ' %' → logprob: -14.398140907287598
    8. ' (' → logprob: -14.773140907287598
    9. '{k' → logprob: -14.898140907287598
    10. '0' → logprob: -15.148140907287598

Token 106: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.0011245026253163815
    2. ' %' → logprob: -7.001124382019043
    3. '%m' → logprob: -8.501124382019043
    4. 'k' → logprob: -13.001124382019043
    5. '%d' → logprob: -13.626124382019043
    6. '%i' → logprob: -13.876124382019043
    7. '`' → logprob: -14.126124382019043
    8. '%n' → logprob: -14.126124382019043
    9. '%c' → logprob: -14.501124382019043
    10. ' ' → logprob: -14.626124382019043

Token 107: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.25192973017692566
    2. ' m' → logprob: -1.501929759979248
    3. ' ' → logprob: -15.00192928314209
    4. '(m' → logprob: -15.12692928314209
    5. ' (' → logprob: -16.876930236816406
    6. ' ' → logprob: -17.376930236816406
    7. '(' → logprob: -17.376930236816406
    8. '	m' → logprob: -17.751930236816406
    9. ' м' → logprob: -18.126930236816406
    10. '20' → logprob: -19.126930236816406

Token 108: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08361677080392838
    2. ' return' → logprob: -3.3336167335510254
    3. 'return' → logprob: -3.4586167335510254
    4. '	return' → logprob: -5.208616733551025
    5. '
' → logprob: -5.958616733551025
    6. '<|end|>' → logprob: -5.958616733551025
    7. '\n' → logprob: -6.708616733551025
    8. '    
' → logprob: -7.208616733551025
    9. '```' → logprob: -9.208617210388184
    10. ':return' → logprob: -9.708617210388184

Token 109: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00351644866168499
    2. ' return' → logprob: -6.128516674041748
    3. 'return' → logprob: -6.878516674041748
    4. '	return' → logprob: -8.75351619720459
    5. '    
' → logprob: -9.00351619720459
    6. '
' → logprob: -11.62851619720459
    7. '```' → logprob: -12.62851619720459
    8. ' 
' → logprob: -13.62851619720459
    9. '<|end|>' → logprob: -13.62851619720459
    10. ':return' → logprob: -13.62851619720459

Token 110: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3944476544857025
    2. 'return' (adapté à ' return') → logprob: -1.144447684288025
    3. ' return' → logprob: -4.8944478034973145
    4. '	return' → logprob: -9.769447326660156
    5. '```' → logprob: -13.644447326660156
    6. ' ' → logprob: -14.644447326660156
    7. '
' → logprob: -14.894447326660156
    8. '    
' → logprob: -15.269447326660156
    9. ':return' → logprob: -15.894447326660156
    10. '  ' → logprob: -16.019447326660156

Token 111: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00861456897109747
    2. ' k' → logprob: -4.758614540100098
    3. '(k' → logprob: -17.258615493774414
    4. '	k' → logprob: -19.133615493774414
    5. '{k' → logprob: -19.258615493774414
    6. ' к' → logprob: -20.258615493774414
    7. '"k' → logprob: -20.758615493774414
    8. '_k' → logprob: -20.883615493774414
    9. ' ' → logprob: -21.008615493774414
    10. ' (' → logprob: -21.383615493774414

Token 112: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.106736039626412e-05
    2. '<|end|>' → logprob: -10.500031471252441
    3. ' def' → logprob: -13.625031471252441
    4. '<|end|>' → logprob: -14.000031471252441
    5. '```' → logprob: -14.375031471252441
    6. '#' → logprob: -15.500031471252441
    7. ')' → logprob: -16.250030517578125
    8. '\' → logprob: -16.375030517578125
    9. '[' → logprob: -16.750030517578125
    10. '
' → logprob: -16.750030517578125

Token 113: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.1008713702030946e-06
    2. '```' → logprob: -14.125001907348633
    3. '\' → logprob: -14.875001907348633
    4. 'from' → logprob: -15.250001907348633
    5. '<|end|>' → logprob: -15.500001907348633
    6. ' def' → logprob: -16.000001907348633
    7. '#' → logprob: -16.125001907348633
    8. 'for' → logprob: -16.125001907348633
    9. '  
' → logprob: -17.125001907348633
    10. '	def' → logprob: -17.375001907348633

Token 114: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.29339492321014404
    2. 'main' → logprob: -2.0433950424194336
    3. 'process' → logprob: -2.7933950424194336
    4. 'count' → logprob: -3.5433950424194336
    5. 'def' → logprob: -4.418395042419434
    6. 'solve' → logprob: -4.543395042419434
    7. ' update' → logprob: -5.668395042419434
    8. 'calculate' → logprob: -5.793395042419434
    9. ' main' → logprob: -6.543395042419434
    10. 'get' → logprob: -6.918395042419434

Token 115: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0013996411580592394
    2. 'b' → logprob: -6.626399517059326
    3. '_a' → logprob: -10.376399993896484
    4. '_k' → logprob: -10.751399993896484
    5. '_' → logprob: -12.251399993896484
    6. '   ' → logprob: -13.251399993896484
    7. '_B' → logprob: -13.251399993896484
    8. 'a' → logprob: -13.376399993896484
    9. '```' → logprob: -13.501399993896484
    10. '_m' → logprob: -13.751399993896484

Token 116: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0003802680876106024
    2. '(' → logprob: -8.250380516052246
    3. ' (' → logprob: -9.125380516052246
    4. '(k' → logprob: -11.625380516052246
    5. ',' → logprob: -14.750380516052246
    6. '(
' → logprob: -15.500380516052246
    7. ',b' → logprob: -15.875380516052246
    8. '(B' → logprob: -16.25037956237793
    9. 'b' → logprob: -16.37537956237793
    10. '   ' → logprob: -16.62537956237793

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8312570318812504e-05
    2. ',k' → logprob: -11.125018119812012
    3. ' ,' → logprob: -12.750018119812012
    4. ',b' → logprob: -15.250018119812012
    5. ',a' → logprob: -15.625018119812012
    6. ',key' → logprob: -16.000019073486328
    7. ',i' → logprob: -17.250019073486328
    8. '

' → logprob: -18.125019073486328
    9. 'k' → logprob: -18.125019073486328
    10. ',n' → logprob: -18.500019073486328

Token 118: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0010401944164186716
    2. ' k' → logprob: -6.876039981842041
    3. ')' → logprob: -11.8760404586792
    4. '<|end|>' → logprob: -15.7510404586792
    5. ',k' → logprob: -16.126039505004883
    6. '_k' → logprob: -16.376039505004883
    7. '   ' → logprob: -17.501039505004883
    8. ',' → logprob: -17.751039505004883
    9. ' ' → logprob: -17.876039505004883
    10. '  ' → logprob: -18.001039505004883

Token 119: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3145866394042969
    2. ',' → logprob: -1.5645866394042969
    3. '):
' → logprob: -2.814586639404297
    4. ' ):' → logprob: -7.564586639404297
    5. ' ,' → logprob: -9.564586639404297
    6. ')' → logprob: -9.689586639404297
    7. ',k' → logprob: -9.814586639404297
    8. '):
' → logprob: -9.939586639404297
    9. '):

' → logprob: -10.689586639404297
    10. ' ):
' → logprob: -11.189586639404297

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16839919984340668
    2. ' if' → logprob: -2.1683990955352783
    3. 'if' → logprob: -3.9183990955352783
    4. 'b' → logprob: -3.9183990955352783
    5. ' b' → logprob: -7.043399333953857
    6. '```' → logprob: -12.7933988571167
    7. ' ' → logprob: -14.5433988571167
    8. '	if' → logprob: -15.6683988571167
    9. '	b' → logprob: -15.6683988571167
    10. '       ' → logprob: -16.043399810791016

Token 121: ' if' (ID: 538)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4688858687877655
    2. 'if' (adapté à ' if') → logprob: -1.218885898590088
    3. '   ' → logprob: -3.093885898590088
    4. ' if' → logprob: -3.468885898590088
    5. ' b' → logprob: -6.093885898590088
    6. ' ' → logprob: -12.96888542175293
    7. '	b' → logprob: -13.59388542175293
    8. '
' → logprob: -13.71888542175293
    9. '```' → logprob: -13.71888542175293
    10. '  ' → logprob: -14.21888542175293

Token 122: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.575939953327179
    2. 'k' → logprob: -0.825939953327179
    3. ' ' → logprob: -14.950940132141113
    4. ' ' → logprob: -16.825939178466797
    5. '	k' → logprob: -16.950939178466797
    6. '_k' → logprob: -17.200939178466797
    7. '(k' → logprob: -17.700939178466797
    8. '   ' → logprob: -18.450939178466797
    9. ' к' → logprob: -19.700939178466797
    10. '  ' → logprob: -19.950939178466797

Token 123: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03097992017865181
    2. 'in' → logprob: -3.530979871749878
    3. ' not' → logprob: -6.780980110168457
    4. 'not' → logprob: -9.780980110168457
    5. ' ' → logprob: -10.405980110168457
    6. ')' → logprob: -13.905980110168457
    7. ']' → logprob: -14.155980110168457
    8. 'n' → logprob: -14.155980110168457
    9. '   ' → logprob: -14.530980110168457
    10. ' i' → logprob: -14.655980110168457

Token 124: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.3868713080883026
    2. 'b' → logprob: -1.136871337890625
    3. ')b' → logprob: -16.136871337890625
    4. ' б' → logprob: -16.761871337890625
    5. '	b' → logprob: -16.761871337890625
    6. '```' → logprob: -18.011871337890625
    7. ' ' → logprob: -18.261871337890625
    8. '   ' → logprob: -18.636871337890625
    9. '_b' → logprob: -18.636871337890625
    10. '>b' → logprob: -19.261871337890625

Token 125: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017292065313085914
    2. ':
' → logprob: -6.3767290115356445
    3. ' :' → logprob: -11.251729011535645
    4. '.keys' → logprob: -11.751729011535645
    5. ':b' → logprob: -13.126729011535645
    6. '   ' → logprob: -14.001729011535645
    7. '):' → logprob: -14.126729011535645
    8. ':k' → logprob: -14.626729011535645
    9. ':

' → logprob: -14.751729011535645
    10. ':
' → logprob: -15.126729011535645

Token 126: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003952544182538986
    2. 'b' → logprob: -5.878952503204346
    3. ' b' → logprob: -7.003952503204346
    4. ':' → logprob: -9.128952980041504
    5. '   ' → logprob: -9.878952980041504
    6. ':
' → logprob: -10.503952980041504
    7. '[' → logprob: -11.503952980041504
    8. ',' → logprob: -12.503952980041504
    9. '=' → logprob: -12.753952980041504
    10. '[b' → logprob: -12.753952980041504

Token 127: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.006682813633233309
    2. '       ' → logprob: -5.631682872772217
    3. ' b' → logprob: -5.881682872772217
    4. '           ' → logprob: -8.631682395935059
    5. '   ' → logprob: -9.131682395935059
    6. ' ' → logprob: -14.381682395935059
    7. '	b' → logprob: -14.631682395935059
    8. '```' → logprob: -16.006683349609375
    9. '               ' → logprob: -16.131683349609375
    10. '  ' → logprob: -16.881683349609375

Token 128: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -3.128163257315464e-07
    2. '[b' → logprob: -16.25
    3. 'k' → logprob: -16.75
    4. '[key' → logprob: -16.875
    5. '[' → logprob: -17.125
    6. ' [' → logprob: -20.875
    7. '[i' → logprob: -21.0
    8. '	k' → logprob: -21.375
    9. '{k' → logprob: -21.625
    10. 'b' → logprob: -22.125

Token 129: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0016021024202927947
    2. ']+=' → logprob: -6.5016021728515625
    3. '']' → logprob: -9.376602172851562
    4. '"]' → logprob: -11.501602172851562
    5. '`]' → logprob: -13.126602172851562
    6. ' ]' → logprob: -13.251602172851562
    7. ']+' → logprob: -14.626602172851562
    8. ']=' → logprob: -15.126602172851562
    9. '   ' → logprob: -15.876602172851562
    10. '[' → logprob: -16.751602172851562

Token 130: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.010803976096212864
    2. '=' → logprob: -4.760804176330566
    3. ' +=' → logprob: -6.135804176330566
    4. ']+=' → logprob: -11.260804176330566
    5. '[' → logprob: -12.135804176330566
    6. '[k' → logprob: -12.510804176330566
    7. ' =' → logprob: -14.885804176330566
    8. '=k' → logprob: -15.260804176330566
    9. '```' → logprob: -16.01080322265625
    10. '*=' → logprob: -16.13580322265625

Token 131: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020543284714221954
    2. ' ' → logprob: -3.895543336868286
    3. '   ' → logprob: -13.520543098449707
    4. '  ' → logprob: -17.770544052124023
    5. '```' → logprob: -18.020544052124023
    6. ' ' → logprob: -18.770544052124023
    7. '    ' → logprob: -19.270544052124023
    8. '１' → logprob: -20.145544052124023
    9. '	' → logprob: -20.395544052124023
    10. '0' → logprob: -20.520544052124023

Token 132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -19.500001907348633
    4. '```' → logprob: -20.875001907348633
    5. '１' → logprob: -21.000001907348633
    6. '0' → logprob: -22.625001907348633
    7. '  ' → logprob: -22.812501907348633
    8. '2' → logprob: -23.000001907348633
    9. '۱' → logprob: -23.000001907348633
    10. '3' → logprob: -23.125001907348633

Token 133: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08130602538585663
    2. 'else' → logprob: -2.831305980682373
    3. ' else' → logprob: -3.956305980682373
    4. '	else' → logprob: -11.206306457519531
    5. '       ' → logprob: -12.331306457519531
    6. '<|end|>' → logprob: -15.706306457519531
    7. ' ' → logprob: -16.08130645751953
    8. '   ' → logprob: -16.20630645751953
    9. '```' → logprob: -16.33130645751953
    10. '    
' → logprob: -16.45630645751953

Token 134: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31558865308761597
    2. 'else' → logprob: -1.3155887126922607
    3. ' else' → logprob: -6.065588474273682
    4. '       ' → logprob: -13.44058895111084
    5. '	else' → logprob: -13.56558895111084
    6. '  ' → logprob: -16.815587997436523
    7. '```' → logprob: -17.065587997436523
    8. ' ' → logprob: -17.190587997436523
    9. '   ' → logprob: -17.815587997436523
    10. 'elif' → logprob: -17.940587997436523

Token 135: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.023400496691465378
    2. ' else' → logprob: -3.7734005451202393
    3. '   ' → logprob: -8.77340030670166
    4. '	else' → logprob: -15.89840030670166
    5. '```' → logprob: -17.148401260375977
    6. ' ' → logprob: -17.523401260375977
    7. '       ' → logprob: -19.273401260375977
    8. '
' → logprob: -19.773401260375977
    9. '_else' → logprob: -19.773401260375977
    10. 'Else' → logprob: -20.273401260375977

Token 136: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010480916127562523
    2. ' b' → logprob: -5.135480880737305
    3. ':' → logprob: -6.135480880737305
    4. 'b' → logprob: -6.385480880737305
    5. '   ' → logprob: -7.885480880737305
    6. ':
' → logprob: -8.260480880737305
    7. '0' → logprob: -10.885480880737305
    8. '      ' → logprob: -11.760480880737305
    9. ' ' → logprob: -12.260480880737305
    10. ':b' → logprob: -12.385480880737305

Token 137: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04407211020588875
    2. 'b' → logprob: -3.294072151184082
    3. ' b' → logprob: -5.169072151184082
    4. '   ' → logprob: -8.044072151184082
    5. '	b' → logprob: -14.794072151184082
    6. ' ' → logprob: -15.294072151184082
    7. '      ' → logprob: -15.419072151184082
    8. '           ' → logprob: -15.544072151184082
    9. '0' → logprob: -15.669072151184082
    10. '     ' → logprob: -15.669072151184082

Token 138: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.014189948327839375
    2. ' b' → logprob: -4.264189720153809
    3. '       ' → logprob: -10.764189720153809
    4. '   ' → logprob: -12.264189720153809
    5. '	b' → logprob: -15.139189720153809
    6. ' ' → logprob: -15.139189720153809
    7. '1' → logprob: -15.764189720153809
    8. '  ' → logprob: -17.764190673828125
    9. '0' → logprob: -18.389190673828125
    10. '    ' → logprob: -19.014190673828125

Token 139: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.580929347255733e-05
    2. '[' → logprob: -11.625016212463379
    3. '[b' → logprob: -12.375016212463379
    4. 'b' → logprob: -13.000016212463379
    5. '[key' → logprob: -15.625016212463379
    6. 'k' → logprob: -16.250015258789062
    7. '```' → logprob: -17.125015258789062
    8. ' [' → logprob: -17.500015258789062
    9. '=k' → logprob: -17.500015258789062
    10. '[m' → logprob: -18.125015258789062

Token 140: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.045982569456100464
    2. '=' → logprob: -3.170982599258423
    3. ']=' → logprob: -6.045982360839844
    4. ' =' → logprob: -7.420982360839844
    5. ' ]' → logprob: -11.545982360839844
    6. '[' → logprob: -13.170982360839844
    7. ')' → logprob: -14.295982360839844
    8. '   ' → logprob: -15.545982360839844
    9. '']' → logprob: -15.795982360839844
    10. '```' → logprob: -15.795982360839844

Token 141: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031777136027812958
    2. ' =' → logprob: -5.753177642822266
    3. '[' → logprob: -18.378177642822266
    4. ' ' → logprob: -18.753177642822266
    5. '=
' → logprob: -19.003177642822266
    6. ']' → logprob: -20.378177642822266
    7. ']=' → logprob: -20.503177642822266
    8. '   ' → logprob: -20.628177642822266
    9. '＝' → logprob: -20.878177642822266
    10. '+=' → logprob: -21.128177642822266

Token 142: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012368128227535635
    2. ' ' → logprob: -9.000123977661133
    3. '   ' → logprob: -15.500123977661133
    4. '0' → logprob: -17.375123977661133
    5. '  ' → logprob: -19.375123977661133
    6. '```' → logprob: -19.750123977661133
    7. '2' → logprob: -20.625123977661133
    8. '    ' → logprob: -21.125123977661133
    9. ' ' → logprob: -21.250123977661133
    10. '１' → logprob: -21.437623977661133

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -16.750003814697266
    4. '0' → logprob: -18.125003814697266
    5. '```' → logprob: -19.000003814697266
    6. '  ' → logprob: -19.750003814697266
    7. '2' → logprob: -19.750003814697266
    8. '１' → logprob: -20.250003814697266
    9. '۱' → logprob: -20.375003814697266
    10. '    ' → logprob: -21.312503814697266

Token 144: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30543938279151917
    2. '<|end|>' → logprob: -1.6804393529891968
    3. '
' → logprob: -2.8054394721984863
    4. 'def' → logprob: -4.430439472198486
    5. 'return' → logprob: -6.180439472198486
    6. '<|end|>' → logprob: -6.930439472198486
    7. '    
' → logprob: -7.680439472198486
    8. ' return' → logprob: -8.555438995361328
    9. '```' → logprob: -8.680438995361328
    10. '  ' → logprob: -9.555438995361328

Token 145: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0007350585656240582
    2. '<|end|>' → logprob: -7.250735282897949
    3. '```' → logprob: -11.75073528289795
    4. 'from' → logprob: -11.87573528289795
    5. '#' → logprob: -13.37573528289795
    6. '0' → logprob: -13.75073528289795
    7. ' def' → logprob: -13.75073528289795
    8. ')' → logprob: -13.87573528289795
    9. '<|end|>' → logprob: -13.87573528289795
    10. '  
' → logprob: -14.25073528289795

Token 146: ' process' (ID: 2273)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.2233007401227951
    2. 'calculate' → logprob: -1.9733006954193115
    3. 'main' → logprob: -3.2233006954193115
    4. 'solve' → logprob: -5.223300933837891
    5. 'get' → logprob: -5.348300933837891
    6. 'compute' → logprob: -6.098300933837891
    7. 'process' → logprob: -6.098300933837891
    8. ' count' → logprob: -6.098300933837891
    9. 'def' → logprob: -6.348300933837891
    10. 'calc' → logprob: -6.973300933837891

Token 147: '_b' (ID: 1535)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.1371317207813263
    2. '_' → logprob: -2.262131690979004
    3. '_n' → logprob: -4.637131690979004
    4. '_b' → logprob: -5.262131690979004
    5. '_input' → logprob: -5.387131690979004
    6. '_(' → logprob: -6.637131690979004
    7. '_k' → logprob: -7.012131690979004
    8. '_m' → logprob: -7.387131690979004
    9. '(a' → logprob: -8.012131690979004
    10. '(' → logprob: -8.262131690979004

Token 148: '_and' (ID: 18645)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.029977839440107346
    2. '(' → logprob: -3.529977798461914
    3. ' (' → logprob: -8.404977798461914
    4. '(a' → logprob: -13.529977798461914
    5. '(k' → logprob: -14.154977798461914
    6. '(
' → logprob: -14.904977798461914
    7. '(B' → logprob: -15.154977798461914
    8. '```' → logprob: -16.154977798461914
    9. '(s' → logprob: -16.654977798461914
    10. 'def' → logprob: -16.779977798461914

Token 149: '_k' (ID: 11637)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7160367369651794
    2. 'count' → logprob: -1.0910367965698242
    3. 'calculate' → logprob: -2.216036796569824
    4. 'get' → logprob: -3.841036796569824
    5. 'return' → logprob: -4.091036796569824
    6. 'compute' → logprob: -5.091036796569824
    7. 'update' → logprob: -5.216036796569824
    8. 'sum' → logprob: -6.091036796569824
    9. 'b' → logprob: -6.091036796569824
    10. 'answer' → logprob: -6.091036796569824

Token 150: '(n' (ID: 2406)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.002012740820646286
    2. '(' → logprob: -6.377012729644775
    3. '():' → logprob: -9.127013206481934
    4. '(k' → logprob: -9.127013206481934
    5. ' (' → logprob: -9.752013206481934
    6. '(a' → logprob: -11.627013206481934
    7. '()' → logprob: -12.377013206481934
    8. '(n' → logprob: -12.502013206481934
    9. '(m' → logprob: -12.877013206481934
    10. '((' → logprob: -13.002013206481934

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010073843412101269
    2. ',k' → logprob: -5.635073661804199
    3. 'm' → logprob: -5.760073661804199
    4. ',b' → logprob: -6.510073661804199
    5. ',m' → logprob: -7.510073661804199
    6. 'k' → logprob: -7.760073661804199
    7. 'b' → logprob: -8.0100736618042
    8. '):' → logprob: -8.7600736618042
    9. ',a' → logprob: -9.1350736618042
    10. 'a' → logprob: -9.3850736618042

Token 152: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.38459059596061707
    2. 'm' → logprob: -1.2595906257629395
    3. ' a' → logprob: -4.2595906257629395
    4. 'b' → logprob: -4.6345906257629395
    5. ' m' → logprob: -4.6345906257629395
    6. 'k' → logprob: -7.3845906257629395
    7. ' b' → logprob: -7.5095906257629395
    8. 'ai' → logprob: -8.134590148925781
    9. 'arr' → logprob: -9.009590148925781
    10. '   ' → logprob: -9.634590148925781

Token 153: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007317355484701693
    2. ' ,' → logprob: -8.750731468200684
    3. ',k' → logprob: -8.750731468200684
    4. ',b' → logprob: -8.875731468200684
    5. ',m' → logprob: -8.875731468200684
    6. '):' → logprob: -10.125731468200684
    7. 'm' → logprob: -11.250731468200684
    8. ',a' → logprob: -11.500731468200684
    9. 'b' → logprob: -11.625731468200684
    10. '_,' → logprob: -11.750731468200684

Token 154: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.03316619619727135
    2. ' m' → logprob: -3.5331661701202393
    3. 'b' → logprob: -5.783166408538818
    4. ' b' → logprob: -8.53316593170166
    5. 'k' → logprob: -9.15816593170166
    6. ' k' → logprob: -11.65816593170166
    7. '   ' → logprob: -11.90816593170166
    8. ' ' → logprob: -12.15816593170166
    9. '  ' → logprob: -13.47066593170166
    10. '	m' → logprob: -13.72066593170166

Token 155: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014790681190788746
    2. '):' → logprob: -4.2647905349731445
    3. ',k' → logprob: -8.514790534973145
    4. ' ,' → logprob: -8.639790534973145
    5. '):
' → logprob: -8.764790534973145
    6. ',b' → logprob: -10.264790534973145
    7. ')' → logprob: -10.764790534973145
    8. 'k' → logprob: -11.389790534973145
    9. ' ):' → logprob: -12.139790534973145
    10. ',
' → logprob: -13.014790534973145

Token 156: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10253244638442993
    2. 'b' → logprob: -2.352532386779785
    3. ' b' → logprob: -6.727532386779785
    4. 'k' → logprob: -6.977532386779785
    5. 'def' → logprob: -10.102532386779785
    6. '```' → logprob: -10.102532386779785
    7. 'result' → logprob: -10.727532386779785
    8. 'count' → logprob: -10.852532386779785
    9. ' k' → logprob: -11.227532386779785
    10. '	b' → logprob: -11.852532386779785

Token 157: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.0005662570474669337
    2. 'k' → logprob: -8.250566482543945
    3. '   ' → logprob: -9.000566482543945
    4. 'count' → logprob: -9.625566482543945
    5. 'result' → logprob: -10.250566482543945
    6. 'def' → logprob: -10.500566482543945
    7. ' b' → logprob: -10.500566482543945
    8. 'total' → logprob: -12.625566482543945
    9. 'res' → logprob: -12.875566482543945
    10. 'a' → logprob: -13.000566482543945

Token 158: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09317348152399063
    2. ' =' → logprob: -2.8431735038757324
    3. '=' → logprob: -3.8431735038757324
    4. ',k' → logprob: -4.718173503875732
    5. ' ,' → logprob: -9.093173027038574
    6. ',b' → logprob: -9.968173027038574
    7. 'k' → logprob: -10.468173027038574
    8. '[' → logprob: -10.593173027038574
    9. '   ' → logprob: -10.968173027038574
    10. ' ' → logprob: -11.093173027038574

Token 159: ' initialize' (ID: 18400)
  Prédit: 'initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initialize' → logprob: -0.0529475100338459
    2. '{' → logprob: -3.177947521209717
    3. ' initialize' → logprob: -4.677947521209717
    4. ' {' → logprob: -7.677947521209717
    5. '	initialize' → logprob: -10.052947044372559
    6. '{}' → logprob: -10.177947044372559
    7. '  ' → logprob: -11.427947044372559
    8. '{'' → logprob: -11.802947044372559
    9. ' ' → logprob: -11.802947044372559
    10. '{"' → logprob: -11.927947044372559

Token 160: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -2.546478935983032e-05
    2. 'b' → logprob: -10.625025749206543
    3. '_' → logprob: -15.375025749206543
    4. '_a' → logprob: -15.875025749206543
    5. 'a' → logprob: -16.250024795532227
    6. '{' → logprob: -16.375024795532227
    7. 's' → logprob: -16.500024795532227
    8. '```' → logprob: -16.750024795532227
    9. '_k' → logprob: -17.000024795532227
    10. '\' → logprob: -17.125024795532227

Token 161: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.014200292527675629
    2. '()' → logprob: -4.264200210571289
    3. '()
' → logprob: -10.389200210571289
    4. '()

' → logprob: -13.014200210571289
    5. 'k' → logprob: -13.264200210571289
    6. '
' → logprob: -14.389200210571289
    7. 'def' → logprob: -14.764200210571289
    8. 'a' → logprob: -15.264200210571289
    9. '(k' → logprob: -15.264200210571289
    10. '()\' → logprob: -15.889200210571289

Token 162: '   ' (ID: 271)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2814309000968933
    2. '   ' → logprob: -1.406430959701538
    3. ' k' → logprob: -8.281431198120117
    4. '
' → logprob: -11.656431198120117
    5. '	k' → logprob: -12.281431198120117
    6. ' ' → logprob: -12.531431198120117
    7. '```' → logprob: -13.031431198120117
    8. '  ' → logprob: -13.156431198120117
    9. '       ' → logprob: -13.281431198120117
    10. '    
' → logprob: -13.406431198120117

Token 163: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -1.0325924449716695e-05
    2. ' k' → logprob: -11.75001049041748
    3. '   ' → logprob: -13.62501049041748
    4. 'def' → logprob: -14.37501049041748
    5. '
' → logprob: -15.00001049041748
    6. ' ' → logprob: -16.250009536743164
    7. '```' → logprob: -17.250009536743164
    8. 'result' → logprob: -17.500009536743164
    9. 'n' → logprob: -17.750009536743164
    10. '  ' → logprob: -18.125009536743164

Token 164: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07910799980163574
    2. '=' → logprob: -2.5791079998016357
    3. ',' → logprob: -8.454108238220215
    4. ' ' → logprob: -12.954108238220215
    5. ' ,' → logprob: -13.704108238220215
    6. ' =
' → logprob: -14.204108238220215
    7. ',k' → logprob: -15.954108238220215
    8. ' +=' → logprob: -16.5791072845459
    9. '	' → logprob: -16.7041072845459
    10. '  ' → logprob: -16.7041072845459

Token 165: ' initialize' (ID: 18400)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01283429004251957
    2. 'initialize' → logprob: -5.012834072113037
    3. ' ' → logprob: -5.137834072113037
    4. ' initialize' → logprob: -8.387834548950195
    5. '  ' → logprob: -14.637834548950195
    6. '	initialize' → logprob: -14.637834548950195
    7. '   ' → logprob: -15.075334548950195
    8. 'update' → logprob: -15.637834548950195
    9. '_initialize' → logprob: -15.825334548950195
    10. 'initial' → logprob: -16.012834548950195

Token 166: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.0008188001229427755
    2. '_' → logprob: -7.125818729400635
    3. 'k' → logprob: -11.250819206237793
    4. '_
' → logprob: -14.875819206237793
    5. ' _' → logprob: -15.500819206237793
    6. '(' → logprob: -15.500819206237793
    7. '```' → logprob: -16.375818252563477
    8. '_b' → logprob: -16.500818252563477
    9. '_i' → logprob: -16.625818252563477
    10. '(k' → logprob: -16.750818252563477

Token 167: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35194113850593567
    2. '   ' → logprob: -1.2269411087036133
    3. '    
' → logprob: -5.976941108703613
    4. 'for' → logprob: -7.851941108703613
    5. ' for' → logprob: -8.476941108703613
    6. '
' → logprob: -9.101941108703613
    7. '  
' → logprob: -9.601941108703613
    8. 'def' → logprob: -9.976941108703613
    9. '<|end|>' → logprob: -10.351941108703613
    10. '	for' → logprob: -10.976941108703613

Token 168: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0698302686214447
    2. 'for' → logprob: -2.8198301792144775
    3. ' for' → logprob: -4.944830417633057
    4. '
' → logprob: -7.944830417633057
    5. 'result' → logprob: -8.944829940795898
    6. '    
' → logprob: -9.444829940795898
    7. 'total' → logprob: -10.319829940795898
    8. 'def' → logprob: -10.694829940795898
    9. 'results' → logprob: -10.819829940795898
    10. '	for' → logprob: -11.444829940795898

Token 169: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.05742106959223747
    2. 'result' → logprob: -3.3074209690093994
    3. 'count' → logprob: -5.3074212074279785
    4. 'ans' → logprob: -5.5574212074279785
    5. 'res' → logprob: -5.6824212074279785
    6. 'answer' → logprob: -6.3074212074279785
    7. 'total' → logprob: -6.3074212074279785
    8. ' for' → logprob: -6.6824212074279785
    9. '   ' → logprob: -6.8074212074279785
    10. 'results' → logprob: -7.4324212074279785

Token 170: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3453415334224701
    2. 'ai' → logprob: -1.9703415632247925
    3. ' i' → logprob: -2.095341444015503
    4. ' ai' → logprob: -3.720341444015503
    5. 'a' → logprob: -5.595341682434082
    6. ' a' → logprob: -6.845341682434082
    7. 'x' → logprob: -7.845341682434082
    8. ' x' → logprob: -9.345341682434082
    9. '   ' → logprob: -10.220341682434082
    10. ' ' → logprob: -10.720341682434082

Token 171: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03397668898105621
    2. 'in' → logprob: -3.4089767932891846
    3. ' ' → logprob: -8.658976554870605
    4. 'n' → logprob: -9.533976554870605
    5. 'range' → logprob: -10.158976554870605
    6. '  ' → logprob: -11.158976554870605
    7. ' range' → logprob: -11.283976554870605
    8. '   ' → logprob: -11.533976554870605
    9. ',' → logprob: -13.283976554870605
    10. '	in' → logprob: -13.408976554870605

Token 172: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004658087622374296
    2. ' range' → logprob: -5.504658222198486
    3. 'a' → logprob: -7.504658222198486
    4. '   ' → logprob: -10.879657745361328
    5. '  ' → logprob: -12.754657745361328
    6. ' ' → logprob: -13.129657745361328
    7. ' a' → logprob: -13.629657745361328
    8. '	range' → logprob: -13.629657745361328
    9. '(range' → logprob: -14.004657745361328
    10. 'r' → logprob: -15.004657745361328

Token 173: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04338952898979187
    2. '(' → logprob: -3.1683895587921143
    3. ' (' → logprob: -8.668389320373535
    4. 'n' → logprob: -8.668389320373535
    5. '(len' → logprob: -10.668389320373535
    6. ' n' → logprob: -11.543389320373535
    7. '1' → logprob: -11.668389320373535
    8. '(
' → logprob: -12.793389320373535
    9. '   ' → logprob: -14.293389320373535
    10. ',' → logprob: -14.918389320373535

Token 174: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03370033949613571
    2. '):
' → logprob: -3.4087002277374268
    3. ' ):' → logprob: -10.533699989318848
    4. ':' → logprob: -10.783699989318848
    5. '   ' → logprob: -12.533699989318848
    6. '):
' → logprob: -13.533699989318848
    7. '():' → logprob: -14.658699989318848
    8. ' ):
' → logprob: -14.783699989318848
    9. ')' → logprob: -15.408699989318848
    10. '}:' → logprob: -15.408699989318848

Token 175: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009737554006278515
    2. ' k' → logprob: -5.009737491607666
    3. 'k' → logprob: -6.384737491607666
    4. '   ' → logprob: -6.759737491607666
    5. '
' → logprob: -10.134737968444824
    6. 'ai' → logprob: -10.259737968444824
    7. 'a' → logprob: -11.384737968444824
    8. '    
' → logprob: -11.384737968444824
    9. ',k' → logprob: -11.384737968444824
    10. ' ai' → logprob: -11.634737968444824

Token 176: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.11487548053264618
    2. ' k' → logprob: -2.239875555038452
    3. '   ' → logprob: -6.364875316619873
    4. '       ' → logprob: -8.739875793457031
    5. 'ai' → logprob: -9.114875793457031
    6. ' ai' → logprob: -10.989875793457031
    7. '	k' → logprob: -11.239875793457031
    8. 'a' → logprob: -11.364875793457031
    9. '
' → logprob: -11.989875793457031
    10. '           ' → logprob: -12.239875793457031

Token 177: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07009882479906082
    2. ' =' → logprob: -2.695098876953125
    3. '+=' → logprob: -9.320098876953125
    4. ' +=' → logprob: -9.570098876953125
    5. '+' → logprob: -13.695098876953125
    6. 'update' → logprob: -14.820098876953125
    7. ',' → logprob: -14.820098876953125
    8. '   ' → logprob: -15.195098876953125
    9. ' ' → logprob: -15.195098876953125
    10. ' update' → logprob: -15.945098876953125

Token 178: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.10020752996206284
    2. ' update' → logprob: -2.350207567214966
    3. '(update' → logprob: -14.725207328796387
    4. '	update' → logprob: -15.850207328796387
    5. '.update' → logprob: -16.475208282470703
    6. ' ' → logprob: -16.600208282470703
    7. '   ' → logprob: -16.975208282470703
    8. '
' → logprob: -16.975208282470703
    9. 'updated' → logprob: -17.850208282470703
    10. '_update' → logprob: -18.100208282470703

Token 179: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.003606363432481885
    2. 'k' → logprob: -5.62860631942749
    3. '(k' → logprob: -12.878606796264648
    4. '_' → logprob: -13.503606796264648
    5. '_b' → logprob: -14.128606796264648
    6. ' k' → logprob: -14.253606796264648
    7. '```' → logprob: -15.003606796264648
    8. '-k' → logprob: -16.00360679626465
    9. 'b' → logprob: -16.00360679626465
    10. '[k' → logprob: -16.50360679626465

Token 180: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -3.619311974034645e-05
    2. '(' → logprob: -10.250036239624023
    3. '(
' → logprob: -14.500036239624023
    4. ' (' → logprob: -16.375036239624023
    5. '(b' → logprob: -17.250036239624023
    6. 'k' → logprob: -17.500036239624023
    7. '(i' → logprob: -18.250036239624023
    8. '```' → logprob: -18.250036239624023
    9. '<|end|>' → logprob: -18.750036239624023
    10. '	k' → logprob: -19.500036239624023

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001824885024689138
    2. ',a' → logprob: -6.751824855804443
    3. 'a' → logprob: -7.626824855804443
    4. ' ,' → logprob: -8.751825332641602
    5. ' a' → logprob: -12.251825332641602
    6. '(a' → logprob: -14.001825332641602
    7. ',int' → logprob: -14.376825332641602
    8. '(' → logprob: -14.501825332641602
    9. ',k' → logprob: -14.751825332641602
    10. ',b' → logprob: -15.001825332641602

Token 182: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.038432858884334564
    2. ' a' → logprob: -3.4134328365325928
    3. 'int' → logprob: -5.538433074951172
    4. ' int' → logprob: -7.663433074951172
    5. 'convert' → logprob: -8.038433074951172
    6. ' convert' → logprob: -10.288433074951172
    7. '   ' → logprob: -11.538433074951172
    8. 'ai' → logprob: -13.538433074951172
    9. '[int' → logprob: -13.663433074951172
    10. ' ' → logprob: -13.788433074951172

Token 183: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000488811288960278
    2. '[' → logprob: -7.625488758087158
    3. ' [' → logprob: -15.125489234924316
    4. '[I' → logprob: -15.750489234924316
    5. '```' → logprob: -16.12548828125
    6. '[k' → logprob: -16.12548828125
    7. '[
' → logprob: -16.62548828125
    8. '[j' → logprob: -17.25048828125
    9. 'i' → logprob: -17.50048828125
    10. '[int' → logprob: -17.62548828125

Token 184: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00046796895912848413
    2. '],' → logprob: -8.375468254089355
    3. ' ,' → logprob: -8.625468254089355
    4. '),' → logprob: -10.250468254089355
    5. ',m' → logprob: -11.125468254089355
    6. '[' → logprob: -13.125468254089355
    7. 'm' → logprob: -13.750468254089355
    8. '   ' → logprob: -14.375468254089355
    9. '‌,' → logprob: -14.375468254089355
    10. '},' → logprob: -14.625468254089355

Token 185: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.47407716512680054
    2. 'm' → logprob: -0.9740771651268005
    3. ')' → logprob: -17.599077224731445
    4. '	m' → logprob: -17.724077224731445
    5. ' м' → logprob: -17.724077224731445
    6. ')m' → logprob: -17.724077224731445
    7. ' ' → logprob: -18.724077224731445
    8. ' ' → logprob: -19.099077224731445
    9. '```' → logprob: -20.099077224731445
    10. '   ' → logprob: -20.474077224731445

Token 186: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.31333857774734497
    2. ')' → logprob: -1.3133385181427002
    3. ')
' → logprob: -9.688338279724121
    4. '   ' → logprob: -11.813338279724121
    5. ')

' → logprob: -12.063338279724121
    6. ' )
' → logprob: -14.188338279724121
    7. '       ' → logprob: -14.563338279724121
    8. ' )' → logprob: -15.938338279724121
    9. ')`
' → logprob: -16.188339233398438
    10. ' ' → logprob: -16.438339233398438

Token 187: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012368843890726566
    2. '   ' → logprob: -5.262368679046631
    3. 'update' → logprob: -5.262368679046631
    4. ' update' → logprob: -6.262368679046631
    5. '           ' → logprob: -12.387369155883789
    6. '      ' → logprob: -12.887369155883789
    7. '```' → logprob: -12.887369155883789
    8. ' ' → logprob: -13.137369155883789
    9. '     ' → logprob: -13.262369155883789
    10. 'process' → logprob: -13.387369155883789

Token 188: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' (adapté à ' update') → logprob: -0.014301136136054993
    2. ' update' → logprob: -4.264301300048828
    3. '       ' → logprob: -9.014301300048828
    4. '   ' → logprob: -11.139301300048828
    5. ' ' → logprob: -14.389301300048828
    6. '  ' → logprob: -14.889301300048828
    7. '	update' → logprob: -15.639301300048828
    8. '
' → logprob: -16.014301300048828
    9. '           ' → logprob: -16.514301300048828
    10. '.update' → logprob: -16.639301300048828

Token 189: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -4.842555426876061e-06
    2. 'b' → logprob: -12.250004768371582
    3. '_' → logprob: -18.2500057220459
    4. ' _' → logprob: -21.6250057220459
    5. '_a' → logprob: -21.8750057220459
    6. '_k' → logprob: -22.0000057220459
    7. '(b' → logprob: -22.1250057220459
    8. ' b' → logprob: -22.2500057220459
    9. '	b' → logprob: -22.3750057220459
    10. '_B' → logprob: -23.0000057220459

Token 190: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.750000953674316
    3. ' (' → logprob: -15.000000953674316
    4. 'b' → logprob: -16.625
    5. '(
' → logprob: -18.75
    6. ',b' → logprob: -20.125
    7. '	b' → logprob: -20.125
    8. '```' → logprob: -20.625
    9. ' b' → logprob: -20.875
    10. ')b' → logprob: -21.125

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013365271501243114
    2. ',b' → logprob: -4.388365268707275
    3. ' ,' → logprob: -7.513365268707275
    4. '(b' → logprob: -8.263365745544434
    5. 'b' → logprob: -10.263365745544434
    6. ',k' → logprob: -11.888365745544434
    7. '(' → logprob: -12.638365745544434
    8. ' b' → logprob: -12.638365745544434
    9. ',
' → logprob: -13.513365745544434
    10. ')' → logprob: -13.888365745544434

Token 192: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0009117019944824278
    2. ' k' → logprob: -7.000911712646484
    3. ')' → logprob: -16.000911712646484
    4. '(k' → logprob: -16.250911712646484
    5. '	k' → logprob: -17.250911712646484
    6. ' ' → logprob: -17.875911712646484
    7. ',k' → logprob: -18.000911712646484
    8. '   ' → logprob: -18.625911712646484
    9. '[k' → logprob: -19.250911712646484
    10. 'b' → logprob: -19.500911712646484

Token 193: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018156031146645546
    2. ')
' → logprob: -4.018156051635742
    3. ')

' → logprob: -12.643156051635742
    4. ' )' → logprob: -13.643156051635742
    5. '   ' → logprob: -14.268156051635742
    6. ')
' → logprob: -14.643156051635742
    7. ')return' → logprob: -15.143156051635742
    8. ' )
' → logprob: -16.268156051635742
    9. ',' → logprob: -16.393156051635742
    10. ',)' → logprob: -17.268156051635742

Token 194: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028111685067415237
    2. 'return' → logprob: -3.778111696243286
    3. 'result' → logprob: -6.278111457824707
    4. 'count' → logprob: -6.778111457824707
    5. 'def' → logprob: -7.153111457824707
    6. ' return' → logprob: -7.403111457824707
    7. 'total' → logprob: -8.778111457824707
    8. 'answer' → logprob: -10.403111457824707
    9. ' ' → logprob: -10.528111457824707
    10. 'sum' → logprob: -10.778111457824707

Token 195: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03419790416955948
    2. 'count' → logprob: -4.159197807312012
    3. 'result' → logprob: -4.534197807312012
    4. 'total' → logprob: -6.159197807312012
    5. '   ' → logprob: -6.659197807312012
    6. 'res' → logprob: -6.784197807312012
    7. 'answer' → logprob: -7.034197807312012
    8. 'ans' → logprob: -7.284197807312012
    9. ' return' → logprob: -7.534197807312012
    10. 'cnt' → logprob: -8.159197807312012

Token 196: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.009856191463768482
    2. ' b' → logprob: -4.634856224060059
    3. 'sum' → logprob: -9.509856224060059
    4. ' sum' → logprob: -11.634856224060059
    5. '(b' → logprob: -12.009856224060059
    6. '[b' → logprob: -12.384856224060059
    7. ' ' → logprob: -13.384856224060059
    8. 'len' → logprob: -14.009856224060059
    9. 'k' → logprob: -14.384856224060059
    10. ' (' → logprob: -14.384856224060059

Token 197: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001381305861286819
    2. '<|end|>' → logprob: -6.6263813972473145
    3. '
' → logprob: -11.001380920410156
    4. '```' → logprob: -11.126380920410156
    5. ' def' → logprob: -12.001380920410156
    6. '<|end|>' → logprob: -12.001380920410156
    7. 'from' → logprob: -12.751380920410156
    8. '#' → logprob: -13.501380920410156
    9. '(def' → logprob: -13.876380920410156
    10. ')' → logprob: -14.251380920410156

Token 198: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.3438327843905427e-05
    2. 'from' → logprob: -10.75002384185791
    3. '<|end|>' → logprob: -13.62502384185791
    4. '#' → logprob: -15.12502384185791
    5. ' def' → logprob: -15.75002384185791
    6. 'import' → logprob: -15.87502384185791
    7. '```' → logprob: -16.125022888183594
    8. '
' → logprob: -17.500022888183594
    9. 'for' → logprob: -18.125022888183594
    10. 'Code' → logprob: -18.625022888183594

Token 199: ' get' (ID: 717)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0979747548699379
    2. 'calculate' → logprob: -2.9729747772216797
    3. 'main' → logprob: -3.8479747772216797
    4. 'solve' → logprob: -4.72297477722168
    5. ' count' → logprob: -5.72297477722168
    6. 'sum' → logprob: -6.09797477722168
    7. 'compute' → logprob: -6.34797477722168
    8. 'process' → logprob: -6.47297477722168
    9. 'get' → logprob: -6.97297477722168
    10. 'calc' → logprob: -7.97297477722168

Token 200: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.1061322689056396
    2. '_result' → logprob: -1.4811322689056396
    3. '_sub' → logprob: -2.3561322689056396
    4. '_total' → logprob: -2.8561322689056396
    5. '_answer' → logprob: -3.1061322689056396
    6. '_m' → logprob: -3.2311322689056396
    7. '_sum' → logprob: -3.4811322689056396
    8. '_input' → logprob: -3.6061322689056396
    9. '_max' → logprob: -3.6061322689056396
    10. '_count' → logprob: -3.6061322689056396

Token 201: '_values' (ID: 20393)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.46374350786209106
    2. '()' → logprob: -1.5887434482574463
    3. '():' → logprob: -2.2137434482574463
    4. '(b' → logprob: -2.9637434482574463
    5. '(n' → logprob: -6.713743686676025
    6. '_keys' → logprob: -7.838743686676025
    7. '().' → logprob: -7.963743686676025
    8. '(
' → logprob: -7.963743686676025
    9. '_' → logprob: -8.088743209838867
    10. '.' → logprob: -8.213743209838867

Token 202: '(b' (ID: 3229)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.41940629482269287
    2. '(b' → logprob: -1.1694062948226929
    3. '():' → logprob: -3.9194064140319824
    4. '()' → logprob: -4.419406414031982
    5. '(B' → logprob: -10.544405937194824
    6. '()(' → logprob: -10.794405937194824
    7. ' (' → logprob: -10.794405937194824
    8. '(
' → logprob: -11.669405937194824
    9. '():
' → logprob: -12.044405937194824
    10. '(a' → logprob: -12.169405937194824

Token 203: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03343290090560913
    2. ')' → logprob: -3.533432960510254
    3. '):
' → logprob: -5.658432960510254
    4. ').' → logprob: -8.908432960510254
    5. '):

' → logprob: -11.408432960510254
    6. '():' → logprob: -11.533432960510254
    7. '.' → logprob: -11.658432960510254
    8. ' ):' → logprob: -11.783432960510254
    9. '):
' → logprob: -12.158432960510254
    10. '()' → logprob: -12.158432960510254

Token 204: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4405118525028229
    2. 'return' → logprob: -1.4405118227005005
    3. ' list' → logprob: -2.94051194190979
    4. '   ' → logprob: -3.31551194190979
    5. 'list' → logprob: -3.69051194190979
    6. '()' → logprob: -5.690511703491211
    7. 'b' → logprob: -6.315511703491211
    8. ' b' → logprob: -9.190511703491211
    9. '()
' → logprob: -10.940511703491211
    10. '
' → logprob: -11.440511703491211

Token 205: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07655000686645508
    2. 'b' → logprob: -2.826550006866455
    3. 'list' → logprob: -4.326550006866455
    4. ' return' → logprob: -6.701550006866455
    5. ' list' → logprob: -10.701549530029297
    6. ' b' → logprob: -11.451549530029297
    7. '[b' → logprob: -14.576549530029297
    8. '   ' → logprob: -14.826549530029297
    9. '{return' → logprob: -16.076549530029297
    10. 'Return' → logprob: -16.076549530029297

Token 206: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.16065870225429535
    2. 'list' → logprob: -2.035658597946167
    3. ' list' → logprob: -4.660658836364746
    4. ' b' → logprob: -4.785658836364746
    5. '[b' → logprob: -11.785658836364746
    6. 'sorted' → logprob: -13.660658836364746
    7. '[' → logprob: -13.910658836364746
    8. '```' → logprob: -14.535658836364746
    9. '[list' → logprob: -14.660658836364746
    10. '(list' → logprob: -14.785658836364746

Token 207: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -0.008844541385769844
    2. '.' → logprob: -4.883844375610352
    3. 'values' → logprob: -7.133844375610352
    4. '<|end|>' → logprob: -7.883844375610352
    5. '_values' → logprob: -11.133844375610352
    6. '.Values' → logprob: -11.133844375610352
    7. ' values' → logprob: -11.508844375610352
    8. '.keys' → logprob: -11.883844375610352
    9. '().' → logprob: -13.008844375610352
    10. '.items' → logprob: -13.008844375610352

Token 208: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -6.988221684878226e-06
    2. '(' → logprob: -13.250006675720215
    3. ' ()' → logprob: -14.000006675720215
    4. '`()' → logprob: -14.000006675720215
    5. '().' → logprob: -14.125006675720215
    6. '()`' → logprob: -14.625006675720215
    7. '()]' → logprob: -14.750006675720215
    8. '(),' → logprob: -15.000006675720215
    9. '[]' → logprob: -15.375006675720215
    10. ']()' → logprob: -15.500006675720215

Token 209: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.153795766294934e-06
    2. '<|end|>' → logprob: -13.125005722045898
    3. 'sum' → logprob: -13.750005722045898
    4. '```' → logprob: -13.875005722045898
    5. 'from' → logprob: -14.250005722045898
    6. ' def' → logprob: -14.750005722045898
    7. ')' → logprob: -15.125005722045898
    8. '#' → logprob: -15.375005722045898
    9. '<|end|>' → logprob: -16.1250057220459
    10. 'import' → logprob: -16.3750057220459

Token 210: ' initialize' (ID: 18400)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -1.1051472425460815
    2. ' sum' → logprob: -1.2301472425460815
    3. 'sum' → logprob: -2.355147361755371
    4. 'calculate' → logprob: -2.480147361755371
    5. ' count' → logprob: -2.980147361755371
    6. 'def' → logprob: -3.105147361755371
    7. ' main' → logprob: -3.355147361755371
    8. 'count' → logprob: -3.605147361755371
    9. ' def' → logprob: -4.105147361755371
    10. 'main' → logprob: -4.730147361755371

Token 211: '_ans' (ID: 146254)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9255155324935913
    2. 'count' → logprob: -1.8005155324935913
    3. '_answer' → logprob: -2.425515651702881
    4. 'answer' → logprob: -2.675515651702881
    5. '_result' → logprob: -2.675515651702881
    6. 'ans' → logprob: -2.800515651702881
    7. '_ans' → logprob: -2.925515651702881
    8. 'total' → logprob: -4.050515651702881
    9. 'c' → logprob: -4.175515651702881
    10. 'res' → logprob: -4.175515651702881

Token 212: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.016962092369794846
    2. '():
' → logprob: -4.516962051391602
    3. '()' → logprob: -5.141962051391602
    4. ' ():' → logprob: -10.266962051391602
    5. '():

' → logprob: -11.766962051391602
    6. ' ()' → logprob: -12.391962051391602
    7. '():
' → logprob: -13.141962051391602
    8. 'def' → logprob: -14.391962051391602
    9. '(' → logprob: -14.516962051391602
    10. '0' → logprob: -15.391962051391602

Token 213: '   ' (ID: 271)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07249365001916885
    2. '   ' → logprob: -2.822493553161621
    3. 'return' → logprob: -4.572493553161621
    4. ' return' → logprob: -9.072493553161621
    5. ' ' → logprob: -10.947493553161621
    6. '=' → logprob: -12.822493553161621
    7. '  ' → logprob: -13.572493553161621
    8. 'def' → logprob: -14.197493553161621
    9. '    
' → logprob: -14.947493553161621
    10. '    ' → logprob: -14.947493553161621

Token 214: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.134509021649137e-05
    2. 'return' (adapté à ' return') → logprob: -10.25006103515625
    3. ' ' → logprob: -10.75006103515625
    4. '   ' → logprob: -12.50006103515625
    5. ' return' → logprob: -14.75006103515625
    6. '=' → logprob: -16.00006103515625
    7. '  ' → logprob: -17.62506103515625
    8. 'ans' → logprob: -17.87506103515625
    9. ' =' → logprob: -18.12506103515625
    10. 'def' → logprob: -18.37506103515625

Token 215: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -17.000011444091797
    4. 'int' → logprob: -17.750011444091797
    5. '۰' → logprob: -18.937511444091797
    6. '  ' → logprob: -19.625011444091797
    7. '０' → logprob: -20.062511444091797
    8. '```' → logprob: -20.125011444091797
    9. '(' → logprob: -20.250011444091797
    10. '000' → logprob: -20.687511444091797

Token 216: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. 'int' → logprob: -15.875000953674316
    4. '۰' → logprob: -17.500001907348633
    5. '   ' → logprob: -17.750001907348633
    6. '{' → logprob: -17.937501907348633
    7. '０' → logprob: -18.250001907348633
    8. '(' → logprob: -18.312501907348633
    9. 'ans' → logprob: -18.562501907348633
    10. '[' → logprob: -18.937501907348633

Token 217: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00599196320399642
    2. '<|end|>' → logprob: -5.1309919357299805
    3. ' def' → logprob: -10.50599193572998
    4. '<|end|>' → logprob: -10.75599193572998
    5. '
' → logprob: -11.50599193572998
    6. '```' → logprob: -12.88099193572998
    7. '-def' → logprob: -15.13099193572998
    8. '_def' → logprob: -15.25599193572998
    9. ':def' → logprob: -15.63099193572998
    10. '(def' → logprob: -15.88099193572998

Token 218: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.5776860184123507e-06
    2. '<|end|>' → logprob: -14.12500286102295
    3. ' def' → logprob: -14.37500286102295
    4. 'for' → logprob: -14.62500286102295
    5. '```' → logprob: -15.00000286102295
    6. '
' → logprob: -15.87500286102295
    7. '\' → logprob: -17.125001907348633
    8. '<|end|>' → logprob: -17.250001907348633
    9. 'ndef' → logprob: -17.625001907348633
    10. '#' → logprob: -17.750001907348633

Token 219: ' combin' (ID: 25307)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.135372132062912
    2. ' calculate' → logprob: -3.0103721618652344
    3. 'compute' → logprob: -3.1353721618652344
    4. 'count' → logprob: -4.135372161865234
    5. 'process' → logprob: -5.635372161865234
    6. 'update' → logprob: -5.635372161865234
    7. ' compute' → logprob: -5.885372161865234
    8. 'get' → logprob: -6.260372161865234
    9. 'def' → logprob: -6.385372161865234
    10. 'calc' → logprob: -7.135372161865234

Token 220: 'ator' (ID: 1246)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0002036595979006961
    2. 'ation' → logprob: -9.375204086303711
    3. 'atorial' → logprob: -10.125204086303711
    4. '```' → logprob: -10.250204086303711
    5. 'ator' → logprob: -11.625204086303711
    6. 'a' → logprob: -12.000204086303711
    7. 'ations' → logprob: -12.000204086303711
    8. '
' → logprob: -12.125204086303711
    9. 'ate' → logprob: -13.250204086303711
    10. '_' → logprob: -13.250204086303711

Token 221: 'ic' (ID: 291)
  Prédit: 'ial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.1062915027141571
    2. 'ials' → logprob: -3.2312915325164795
    3. 'ics' → logprob: -3.4812915325164795
    4. 'e' → logprob: -4.2312912940979
    5. 'al' → logprob: -5.2312912940979
    6. 'ialize' → logprob: -5.3562912940979
    7. 'def' → logprob: -5.6062912940979
    8. '```' → logprob: -6.4812912940979
    9. 'ic' → logprob: -8.356291770935059
    10. 'es' → logprob: -9.356291770935059

Token 222: '_count' (ID: 7536)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -1.1548432111740112
    2. '_s' → logprob: -1.7798432111740112
    3. 's' → logprob: -2.029843330383301
    4. '_sum' → logprob: -2.029843330383301
    5. '_count' → logprob: -2.779843330383301
    6. 'e' → logprob: -2.779843330383301
    7. '_' → logprob: -2.904843330383301
    8. '_ans' → logprob: -3.904843330383301
    9. '_c' → logprob: -4.279843330383301
    10. '_factor' → logprob: -4.904843330383301

Token 223: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07843028753995895
    2. '(n' → logprob: -3.32843017578125
    3. '_' → logprob: -4.32843017578125
    4. 's' → logprob: -4.45343017578125
    5. '(ans' → logprob: -5.07843017578125
    6. '(s' → logprob: -5.57843017578125
    7. '(a' → logprob: -6.57843017578125
    8. '(_' → logprob: -6.82843017578125
    9. '(b' → logprob: -7.45343017578125
    10. '(
' → logprob: -7.82843017578125

Token 224: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20619669556617737
    2. 's' → logprob: -3.0811967849731445
    3. 'n' → logprob: -3.2061967849731445
    4. '):' → logprob: -3.2061967849731445
    5. 'nt' → logprob: -4.2061967849731445
    6. ' ,' → logprob: -4.3311967849731445
    7. ')' → logprob: -4.4561967849731445
    8. ',n' → logprob: -4.9561967849731445
    9. 'f' → logprob: -5.5811967849731445
    10. 'nd' → logprob: -6.4561967849731445

Token 225: '   ' (ID: 271)
  Prédit: '*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.9922105073928833
    2. '(i' → logprob: -1.1172105073928833
    3. '*' → logprob: -1.8672105073928833
    4. ' *' → logprob: -2.8672103881835938
    5. 'def' → logprob: -3.3672103881835938
    6. ' (' → logprob: -4.117210388183594
    7. 'return' → logprob: -4.492210388183594
    8. '
' → logprob: -4.742210388183594
    9. '(' → logprob: -5.242210388183594
    10. ' return' → logprob: -5.367210388183594

Token 226: ' return' (ID: 622)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.28917866945266724
    2. 'return' (adapté à ' return') → logprob: -1.5391786098480225
    3. '(i' → logprob: -3.6641786098480225
    4. '   ' → logprob: -4.914178848266602
    5. ' i' → logprob: -6.039178848266602
    6. ' return' → logprob: -6.789178848266602
    7. ' (' → logprob: -10.539178848266602
    8. 'def' → logprob: -11.539178848266602
    9. '[i' → logprob: -11.664178848266602
    10. 'int' → logprob: -11.914178848266602

Token 227: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3516457676887512
    2. '(i' → logprob: -1.2266457080841064
    3. ' i' → logprob: -5.9766459465026855
    4. ' (' → logprob: -7.7266459465026855
    5. 'int' → logprob: -9.226645469665527
    6. '(' → logprob: -9.976645469665527
    7. '(int' → logprob: -10.226645469665527
    8. '((' → logprob: -10.851645469665527
    9. '   ' → logprob: -12.226645469665527
    10. ' ' → logprob: -12.476645469665527

Token 228: ' *' (ID: 425)
  Prédit: '*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.6363230347633362
    2. '*' → logprob: -1.3863229751586914
    3. ' *' → logprob: -1.5113229751586914
    4. ' *(' → logprob: -9.136322975158691
    5. '**' → logprob: -10.886322975158691
    6. 'def' → logprob: -12.011322975158691
    7. '*i' → logprob: -12.261322975158691
    8. '*((' → logprob: -12.386322975158691
    9. ' ' → logprob: -13.011322975158691
    10. ' ' → logprob: -13.011322975158691

Token 229: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.013691513799130917
    2. ' (' → logprob: -4.388691425323486
    3. '(' → logprob: -6.888691425323486
    4. '(I' → logprob: -9.263691902160645
    5. '(int' → logprob: -10.763691902160645
    6. '  ' → logprob: -11.263691902160645
    7. ' ' → logprob: -11.388691902160645
    8. '   ' → logprob: -12.263691902160645
    9. '<|end|>' → logprob: -12.513691902160645
    10. '
' → logprob: -13.138691902160645

Token 230: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07158076018095016
    2. '(i' → logprob: -2.696580648422241
    3. ' i' → logprob: -6.94658088684082
    4. ' (' → logprob: -7.44658088684082
    5. '   ' → logprob: -10.19658088684082
    6. ')i' → logprob: -11.19658088684082
    7. ' ' → logprob: -11.57158088684082
    8. ')' → logprob: -11.57158088684082
    9. '(' → logprob: -11.82158088684082
    10. '{i' → logprob: -12.19658088684082

Token 231: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.006730526220053434
    2. ' -' → logprob: -5.006730556488037
    3. ' ' → logprob: -11.881730079650879
    4. '   ' → logprob: -12.506730079650879
    5. '1' → logprob: -13.006730079650879
    6. ')' → logprob: -13.256730079650879
    7. '```' → logprob: -15.131730079650879
    8. '  ' → logprob: -15.256730079650879
    9. '-)' → logprob: -17.506731033325195
    10. ' )' → logprob: -18.256731033325195

Token 232: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.44706009957008e-05
    2. ' ' → logprob: -9.50008487701416
    3. '   ' → logprob: -11.62508487701416
    4. '  ' → logprob: -14.75008487701416
    5. ')' → logprob: -16.250083923339844
    6. '    ' → logprob: -16.750083923339844
    7. '```' → logprob: -17.375083923339844
    8. '
' → logprob: -17.812583923339844
    9. '       ' → logprob: -17.812583923339844
    10. '...' → logprob: -18.562583923339844

Token 233: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -15.625004768371582
    4. '  ' → logprob: -17.000003814697266
    5. '
' → logprob: -17.875003814697266
    6. ')' → logprob: -17.875003814697266
    7. '<|end|>' → logprob: -18.125003814697266
    8. '```' → logprob: -18.500003814697266
    9. '

' → logprob: -19.625003814697266
    10. '...' → logprob: -20.000003814697266

Token 234: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002481127390637994
    2. ')//' → logprob: -6.502480983734131
    3. ' )' → logprob: -7.502480983734131
    4. ' //' → logprob: -7.877480983734131
    5. '//' → logprob: -10.127481460571289
    6. '   ' → logprob: -12.377481460571289
    7. ')/' → logprob: -13.752481460571289
    8. '<|end|>' → logprob: -14.627481460571289
    9. '```' → logprob: -15.127481460571289
    10. ')>>' → logprob: -15.502481460571289

Token 235: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.5225254893302917
    2. 'def' → logprob: -1.2725255489349365
    3. ' //' → logprob: -2.1475255489349365
    4. '<|end|>' → logprob: -4.897525310516357
    5. '/' → logprob: -7.147525310516357
    6. '   ' → logprob: -7.147525310516357
    7. ' /' → logprob: -7.647525310516357
    8. '
' → logprob: -9.022525787353516
    9. ' def' → logprob: -9.022525787353516
    10. '#' → logprob: -9.397525787353516

Token 236: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -15.875015258789062
    4. '1' → logprob: -17.875015258789062
    5. '
' → logprob: -19.125015258789062
    6. '  ' → logprob: -19.625015258789062
    7. '```' → logprob: -19.750015258789062
    8. '    ' → logprob: -20.125015258789062
    9. '۲' → logprob: -20.875015258789062
    10. '<|end|>' → logprob: -21.000015258789062

Token 237: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -17.875
    4. '1' → logprob: -19.75
    5. '
' → logprob: -20.0
    6. '  ' → logprob: -21.125
    7. '```' → logprob: -21.25
    8. '<|end|>' → logprob: -21.375
    9. '۲' → logprob: -21.5
    10. '.' → logprob: -23.1875

Token 238: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0007970004808157682
    2. '<|end|>' → logprob: -7.500796794891357
    3. '
' → logprob: -8.500797271728516
    4. '

' → logprob: -11.375797271728516
    5. '```' → logprob: -11.750797271728516
    6. '  
' → logprob: -11.750797271728516
    7. '\' → logprob: -12.625797271728516
    8. '<|end|>' → logprob: -12.875797271728516
    9. ' def' → logprob: -13.125797271728516
    10. '    
' → logprob: -13.500797271728516

Token 239: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00014251544780563563
    2. '<|end|>' → logprob: -8.875142097473145
    3. '```' → logprob: -13.875142097473145
    4. ' def' → logprob: -14.500142097473145
    5. '
' → logprob: -14.750142097473145
    6. '#' → logprob: -15.500142097473145
    7. 'for' → logprob: -15.500142097473145
    8. ')' → logprob: -16.25014305114746
    9. '  
' → logprob: -16.62514305114746
    10. '<|end|>' → logprob: -17.00014305114746

Token 240: ' compute' (ID: 23864)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.7144356966018677
    2. 'main' → logprob: -1.8394356966018677
    3. 'calculate' → logprob: -2.214435577392578
    4. ' calculate' → logprob: -2.464435577392578
    5. ' count' → logprob: -2.589435577392578
    6. 'count' → logprob: -2.964435577392578
    7. ' solve' → logprob: -4.589435577392578
    8. 'compute' → logprob: -5.089435577392578
    9. 'solve' → logprob: -5.214435577392578
    10. ' compute' → logprob: -5.464435577392578

Token 241: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -0.003288820618763566
    2. '_answer' → logprob: -6.753288745880127
    3. '_' → logprob: -7.003288745880127
    4. '_sum' → logprob: -7.128288745880127
    5. '_total' → logprob: -8.378289222717285
    6. '(ans' → logprob: -10.003289222717285
    7. '_result' → logprob: -10.378289222717285
    8. '_answers' → logprob: -11.003289222717285
    9. '_s' → logprob: -11.378289222717285
    10. '_an' → logprob: -11.628289222717285

Token 242: '(c' (ID: 2410)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0008062947308644652
    2. '(' → logprob: -7.2508063316345215
    3. ' (' → logprob: -9.375805854797363
    4. '(
' → logprob: -12.000805854797363
    5. '(ans' → logprob: -12.625805854797363
    6. '(s' → logprob: -14.250805854797363
    7. '():' → logprob: -14.500805854797363
    8. '(a' → logprob: -15.375805854797363
    9. '(def' → logprob: -16.12580680847168
    10. 'def' → logprob: -16.25080680847168

Token 243: '):
' (ID: 1883)
  Prédit: 'ount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ount' → logprob: -0.40623152256011963
    2. ')' → logprob: -2.03123140335083
    3. 'b' → logprob: -2.65623140335083
    4. 'ounter' → logprob: -3.40623140335083
    5. 'om' → logprob: -3.53123140335083
    6. 'omb' → logprob: -4.28123140335083
    7. '(b' → logprob: -4.28123140335083
    8. '_b' → logprob: -4.78123140335083
    9. '_values' → logprob: -5.15623140335083
    10. '):' → logprob: -5.40623140335083

Token 244: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033807750791311264
    2. 'ans' → logprob: -3.5338077545166016
    3. ' ans' → logprob: -5.658807754516602
    4. '	ans' → logprob: -7.908807754516602
    5. '=' → logprob: -9.783807754516602
    6. ' =' → logprob: -10.283807754516602
    7. '    
' → logprob: -10.658807754516602
    8. 'total' → logprob: -10.783807754516602
    9. '(ans' → logprob: -11.033807754516602
    10. 'answer' → logprob: -11.283807754516602

Token 245: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0016167386202141643
    2. 'return' → logprob: -7.251616954803467
    3. '   ' → logprob: -7.376616954803467
    4. ' ans' → logprob: -8.376616477966309
    5. 'result' → logprob: -11.376616477966309
    6. 'answer' → logprob: -11.501616477966309
    7. '	ans' → logprob: -12.001616477966309
    8. 'total' → logprob: -12.126616477966309
    9. 'for' → logprob: -12.501616477966309
    10. 's' → logprob: -12.876616477966309

Token 246: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020868370309472084
    2. '=' → logprob: -4.270868301391602
    3. ' +=' → logprob: -5.020868301391602
    4. '+=' → logprob: -10.145868301391602
    5. '   ' → logprob: -10.520868301391602
    6. ' ' → logprob: -11.270868301391602
    7. ' +' → logprob: -13.770868301391602
    8. '+' → logprob: -14.020868301391602
    9. '  ' → logprob: -14.520868301391602
    10. ',' → logprob: -14.520868301391602

Token 247: ' initialize' (ID: 18400)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10104304552078247
    2. ' ' → logprob: -2.3510429859161377
    3. ' c' → logprob: -7.726043224334717
    4. ' initialize' → logprob: -8.851042747497559
    5. 'c' → logprob: -8.976042747497559
    6. 'initialize' → logprob: -9.851042747497559
    7. 'com' → logprob: -10.351042747497559
    8. 'compute' → logprob: -11.476042747497559
    9. ' combin' → logprob: -11.976042747497559
    10. ' compute' → logprob: -12.101042747497559

Token 248: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -0.004008115269243717
    2. 'ans' → logprob: -6.0040082931518555
    3. '_' → logprob: -6.5040082931518555
    4. '(ans' → logprob: -12.379008293151855
    5. '_
' → logprob: -12.629008293151855
    6. 'Ans' → logprob: -12.629008293151855
    7. ' _' → logprob: -12.629008293151855
    8. '	ans' → logprob: -12.879008293151855
    9. '0' → logprob: -13.004008293151855
    10. '_answer' → logprob: -13.129008293151855

Token 249: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.03693986311554909
    2. '()' → logprob: -3.411939859390259
    3. '
' → logprob: -5.786940097808838
    4. '   ' → logprob: -8.78693962097168
    5. '()

' → logprob: -10.66193962097168
    6. '()
' → logprob: -10.78693962097168
    7. '+
' → logprob: -12.28693962097168
    8. '+' → logprob: -12.53693962097168
    9. ' ()
' → logprob: -12.66193962097168
    10. 'def' → logprob: -13.16193962097168

Token 250: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35761749744415283
    2. 'for' → logprob: -1.8576174974441528
    3. ' for' → logprob: -1.9826174974441528
    4. '
' → logprob: -4.982617378234863
    5. ' ' → logprob: -10.857617378234863
    6. '    
' → logprob: -11.357617378234863
    7. '	for' → logprob: -11.982617378234863
    8. '```' → logprob: -12.107617378234863
    9. '  ' → logprob: -12.857617378234863
    10. ' 
' → logprob: -13.482617378234863

Token 251: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0007854487630538642
    2. '   ' → logprob: -7.2507853507995605
    3. ' for' → logprob: -9.500785827636719
    4. '
' → logprob: -14.625785827636719
    5. ' ' → logprob: -15.625785827636719
    6. '```' → logprob: -17.75078582763672
    7. '  ' → logprob: -18.12578582763672
    8. '	for' → logprob: -18.12578582763672
    9. '    
' → logprob: -19.25078582763672
    10. '``' → logprob: -20.12578582763672

Token 252: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.34460902214050293
    2. ' i' → logprob: -1.344609022140503
    3. 'value' → logprob: -4.594609260559082
    4. ' value' → logprob: -5.094609260559082
    5. 'v' → logprob: -5.344609260559082
    6. ' v' → logprob: -6.219609260559082
    7. 'x' → logprob: -6.219609260559082
    8. '   ' → logprob: -6.219609260559082
    9. 'count' → logprob: -6.844609260559082
    10. ' val' → logprob: -7.094609260559082

Token 253: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002821635687723756
    2. 'in' → logprob: -5.877821445465088
    3. ' ' → logprob: -11.377821922302246
    4. 'c' → logprob: -13.002821922302246
    5. '   ' → logprob: -14.377821922302246
    6. '	in' → logprob: -14.502821922302246
    7. 's' → logprob: -14.627821922302246
    8. '  ' → logprob: -14.627821922302246
    9. 'n' → logprob: -15.502821922302246
    10. ' c' → logprob: -15.752821922302246

Token 254: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.04300444945693016
    2. ' c' → logprob: -3.1680045127868652
    3. ' ' → logprob: -13.293004035949707
    4. '   ' → logprob: -13.668004035949707
    5. 'get' → logprob: -14.168004035949707
    6. '  ' → logprob: -14.918004035949707
    7. ' range' → logprob: -14.918004035949707
    8. 'range' → logprob: -15.043004035949707
    9. ' get' → logprob: -15.418004035949707
    10. 'b' → logprob: -15.918004035949707

Token 255: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001137358252890408
    2. ':
' → logprob: -7.2511372566223145
    3. '):' → logprob: -7.8761372566223145
    4. ' :' → logprob: -11.126137733459473
    5. '.values' → logprob: -11.126137733459473
    6. '):
' → logprob: -12.501137733459473
    7. '   ' → logprob: -12.751137733459473
    8. '<|end|>' → logprob: -12.876137733459473
    9. ' in' → logprob: -13.251137733459473
    10. ')' → logprob: -13.501137733459473

Token 256: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023691373644396663
    2. 'ans' → logprob: -9.250236511230469
    3. '   ' → logprob: -9.375236511230469
    4. ' ans' → logprob: -9.875236511230469
    5. '
' → logprob: -13.750236511230469
    6. '        
' → logprob: -14.125236511230469
    7. '	ans' → logprob: -14.250236511230469
    8. ' if' → logprob: -14.625236511230469
    9. '      ' → logprob: -15.000236511230469
    10. '           ' → logprob: -15.125236511230469

Token 257: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.7607272863388062
    2. ' ans' → logprob: -0.8857272863388062
    3. '       ' → logprob: -2.1357274055480957
    4. '   ' → logprob: -6.510727405548096
    5. '	ans' → logprob: -7.635727405548096
    6. '           ' → logprob: -10.010726928710938
    7. '(ans' → logprob: -10.260726928710938
    8. '
' → logprob: -11.510726928710938
    9. ' ' → logprob: -11.510726928710938
    10. '_ans' → logprob: -11.760726928710938

Token 258: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1002127155661583
    2. '+=' → logprob: -2.350212812423706
    3. '=' → logprob: -13.100213050842285
    4. ' =' → logprob: -13.475213050842285
    5. '+' → logprob: -14.100213050842285
    6. '+=(' → logprob: -14.100213050842285
    7. ']+=' → logprob: -15.225213050842285
    8. '<|end|>' → logprob: -15.225213050842285
    9. '   ' → logprob: -15.475213050842285
    10. ' ' → logprob: -15.600213050842285

Token 259: ' combin' (ID: 25307)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.023267842829227448
    2. ' combin' → logprob: -3.7732677459716797
    3. '(com' → logprob: -11.27326774597168
    4. 'comb' → logprob: -12.39826774597168
    5. ' com' → logprob: -12.89826774597168
    6. ' comb' → logprob: -13.89826774597168
    7. 'i' → logprob: -13.89826774597168
    8. ' i' → logprob: -14.64826774597168
    9. '<com' → logprob: -15.39826774597168
    10. '	com' → logprob: -15.64826774597168

Token 260: 'ator' (ID: 1246)
  Prédit: 'ator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ator' → logprob: -9.729906196298543e-06
    2. 'atorial' → logprob: -11.625009536743164
    3. 'atori' → logprob: -15.000009536743164
    4. 'atory' → logprob: -16.125009536743164
    5. 'атор' → logprob: -16.750009536743164
    6. '   ' → logprob: -16.875009536743164
    7. 'at' → logprob: -17.250009536743164
    8. '(' → logprob: -17.375009536743164
    9. '```' → logprob: -17.375009536743164
    10. ' at' → logprob: -18.000009536743164

Token 261: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.00014942926645744592
    2. 'c' → logprob: -9.125149726867676
    3. '_count' → logprob: -11.000149726867676
    4. 'atic' → logprob: -12.125149726867676
    5. 'oc' → logprob: -12.250149726867676
    6. '_ic' → logprob: -13.250149726867676
    7. '```' → logprob: -13.500149726867676
    8. 'o' → logprob: -13.750149726867676
    9. 'i' → logprob: -13.750149726867676
    10. 'ics' → logprob: -13.750149726867676

Token 262: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.1472419600977446e-06
    2. 'count' → logprob: -14.250000953674316
    3. '(i' → logprob: -14.750000953674316
    4. '_' → logprob: -17.250001907348633
    5. ' count' → logprob: -17.500001907348633
    6. 'Count' → logprob: -18.500001907348633
    7. '_COUNT' → logprob: -18.625001907348633
    8. '_counts' → logprob: -18.875001907348633
    9. '_c' → logprob: -19.375001907348633
    10. '   ' → logprob: -19.375001907348633

Token 263: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -14.875
    3. '(int' → logprob: -17.375
    4. ' (' → logprob: -17.375
    5. '(
' → logprob: -20.125
    6. '(x' → logprob: -21.0
    7. 'i' → logprob: -21.125
    8. '(ii' → logprob: -21.125
    9. '((' → logprob: -21.5
    10. '(I' → logprob: -22.875

Token 264: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018041854491457343
    2. ')
' → logprob: -8.6251802444458
    3. ' )' → logprob: -15.0001802444458
    4. ')

' → logprob: -15.1251802444458
    5. ')return' → logprob: -16.250181198120117
    6. '<|end|>' → logprob: -16.625181198120117
    7. '   ' → logprob: -17.500181198120117
    8. '}' → logprob: -18.000181198120117
    9. ')
' → logprob: -18.250181198120117
    10. ')}' → logprob: -18.250181198120117

Token 265: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004947714623995125
    2. 'return' → logprob: -7.875494956970215
    3. ' return' → logprob: -9.250494956970215
    4. '
' → logprob: -11.000494956970215
    5. '	return' → logprob: -13.500494956970215
    6. '    
' → logprob: -16.1254940032959
    7. 'def' → logprob: -16.5004940032959
    8. '```' → logprob: -16.5004940032959
    9. '       ' → logprob: -16.7504940032959
    10. ':return' → logprob: -16.8754940032959

Token 266: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06208879500627518
    2. '   ' → logprob: -3.06208872795105
    3. ' return' → logprob: -4.312088966369629
    4. '	return' → logprob: -12.562088966369629
    5. '
' → logprob: -13.562088966369629
    6. ' ' → logprob: -15.562088966369629
    7. 'def' → logprob: -16.687088012695312
    8. ':return' → logprob: -17.312088012695312
    9. '```' → logprob: -17.312088012695312
    10. '  ' → logprob: -17.812088012695312

Token 267: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.011048054322600365
    2. ' ans' → logprob: -4.511047840118408
    3. '(ans' → logprob: -15.511048316955566
    4. '	ans' → logprob: -17.63604736328125
    5. '_ans' → logprob: -19.76104736328125
    6. 'answer' → logprob: -21.76104736328125
    7. 'Ans' → logprob: -22.13604736328125
    8. ' ' → logprob: -23.26104736328125
    9. 'anst' → logprob: -24.13604736328125
    10. 'ann' → logprob: -24.51104736328125

Token 268: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11097177863121033
    2. '<|end|>' → logprob: -2.485971689224243
    3. '
' → logprob: -3.860971689224243
    4. '```' → logprob: -8.610971450805664
    5. '#' → logprob: -8.735971450805664
    6. 'n' → logprob: -8.985971450805664
    7. 'print' → logprob: -9.985971450805664
    8. '<|end|>' → logprob: -9.985971450805664
    9. '()' → logprob: -10.235971450805664
    10. '

' → logprob: -10.485971450805664

Token 269: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002577205654233694
    2. 'if' → logprob: -6.377577304840088
    3. 'n' → logprob: -7.377577304840088
    4. 'nm' → logprob: -8.75257682800293
    5. '#' → logprob: -10.12757682800293
    6. '```' → logprob: -10.50257682800293
    7. 'print' → logprob: -11.50257682800293
    8. '<|end|>' → logprob: -12.00257682800293
    9. 'ndef' → logprob: -13.12757682800293
    10. 'data' → logprob: -13.25257682800293

Token 270: ' output' (ID: 4733)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.014256465248763561
    2. ' main' → logprob: -4.264256477355957
    3. 'solve' → logprob: -9.514256477355957
    4. 'def' → logprob: -11.389256477355957
    5. ' solve' → logprob: -13.389256477355957
    6. 'calculate' → logprob: -13.639256477355957
    7. 'if' → logprob: -13.889256477355957
    8. 'solution' → logprob: -14.139256477355957
    9. 'get' → logprob: -14.389256477355957
    10. 'read' → logprob: -14.514256477355957

Token 271: '_result' (ID: 11623)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023274600505828857
    2. '()' → logprob: -4.2732744216918945
    3. '_' → logprob: -5.6482744216918945
    4. '(ans' → logprob: -5.7732744216918945
    5. '("("' → logprob: -6.3982744216918945
    6. '_(' → logprob: -8.648274421691895
    7. '('' → logprob: -9.148274421691895
    8. ' (' → logprob: -9.148274421691895
    9. '(()' → logprob: -9.648274421691895
    10. '()(' → logprob: -9.773274421691895

Token 272: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00437766732648015
    2. '(' → logprob: -5.504377841949463
    3. ' (' → logprob: -8.754377365112305
    4. '(answer' → logprob: -9.754377365112305
    5. '():' → logprob: -10.254377365112305
    6. '(result' → logprob: -10.379377365112305
    7. '(output' → logprob: -11.379377365112305
    8. '(print' → logprob: -13.254377365112305
    9. '(a' → logprob: -13.879377365112305
    10. '(value' → logprob: -14.129377365112305

Token 273: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4756346046924591
    2. '):
' → logprob: -0.9756345748901367
    3. ')' → logprob: -6.475634574890137
    4. '):
' → logprob: -11.350634574890137
    5. ':' → logprob: -13.600634574890137
    6. '):

' → logprob: -13.725634574890137
    7. ')
' → logprob: -13.725634574890137
    8. '():
' → logprob: -14.975634574890137
    9. ' ):' → logprob: -15.475634574890137
    10. ':
' → logprob: -16.225635528564453

Token 274: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.37862923741340637
    2. '   ' → logprob: -1.628629207611084
    3. ' print' → logprob: -2.128629207611084
    4. '```' → logprob: -13.253629684448242
    5. '	print' → logprob: -16.378629684448242
    6. '.print' → logprob: -18.628629684448242
    7. '`' → logprob: -18.753629684448242
    8. '    ' → logprob: -19.378629684448242
    9. ' ' → logprob: -19.378629684448242
    10. '       ' → logprob: -20.128629684448242

Token 275: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.15310683415737e-05
    2. ' print' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.25002098083496
    4. '```' → logprob: -20.25002098083496
    5. '	print' → logprob: -25.75002098083496
    6. '`' → logprob: -26.12502098083496
    7. '``' → logprob: -26.50002098083496
    8. '#print' → logprob: -27.12502098083496
    9. '.print' → logprob: -27.75002098083496
    10. '
' → logprob: -27.87502098083496

Token 276: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -2.816093228830141e-06
    2. 'ans' → logprob: -13.25000286102295
    3. '(' → logprob: -13.87500286102295
    4. ' (' → logprob: -18.125001907348633
    5. '	ans' → logprob: -19.125001907348633
    6. '()' → logprob: -19.375001907348633
    7. '(answer' → logprob: -19.500001907348633
    8. '(
' → logprob: -20.500001907348633
    9. ' ans' → logprob: -21.375001907348633
    10. '_ans' → logprob: -21.625001907348633

Token 277: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: 0.0
    2. ' )' → logprob: -17.875
    3. ')`' → logprob: -18.0
    4. ')
' → logprob: -18.125
    5. ')}' → logprob: -19.125
    6. '))' → logprob: -19.625
    7. '()' → logprob: -20.0
    8. '())' → logprob: -20.25
    9. '),' → logprob: -20.75
    10. ').' → logprob: -21.25

Token 278: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.512236498361744e-07
    2. 'if' → logprob: -14.875000953674316
    3. 'n' → logprob: -16.875
    4. 'ndef' → logprob: -17.375
    5. ' def' → logprob: -18.5
    6. '```' → logprob: -18.75
    7. 'for' → logprob: -18.875
    8. '#' → logprob: -19.125
    9. 'nm' → logprob: -20.75
    10. 'while' → logprob: -22.375

Token 279: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.05918852612376213
    2. 'def' → logprob: -3.0591886043548584
    3. ' main' → logprob: -4.559188365936279
    4. ' def' → logprob: -9.684188842773438
    5. 'if' → logprob: -11.559188842773438
    6. '__' → logprob: -13.184188842773438
    7. 'run' → logprob: -15.434188842773438
    8. 'solve' → logprob: -15.434188842773438
    9. '_main' → logprob: -15.934188842773438
    10. 'get' → logprob: -15.934188842773438

Token 280: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0001146291324403137
    2. ' ():' → logprob: -9.125114440917969
    3. '():
' → logprob: -12.250114440917969
    4. '()' → logprob: -15.000114440917969
    5. '(' → logprob: -15.000114440917969
    6. '_' → logprob: -15.375114440917969
    7. '()>' → logprob: -17.25011444091797
    8. '():
' → logprob: -17.50011444091797
    9. '(":' → logprob: -18.62511444091797
    10. 'def' → logprob: -19.12511444091797

Token 281: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028294214978814125
    2. ' nm' → logprob: -4.278294086456299
    3. 'nm' → logprob: -4.278294086456299
    4. 'n' → logprob: -9.153294563293457
    5. '	n' → logprob: -10.153294563293457
    6. ' n' → logprob: -11.278294563293457
    7. '_nm' → logprob: -13.403294563293457
    8. '   ' → logprob: -13.653294563293457
    9. '(n' → logprob: -13.903294563293457
    10. ',n' → logprob: -14.153294563293457

Token 282: ' nm' (ID: 43183)
  Prédit: 'nm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nm' (adapté à ' nm') → logprob: -0.0016206686850637197
    2. ' nm' → logprob: -7.126620769500732
    3. '   ' → logprob: -7.251620769500732
    4. 'n' → logprob: -9.251620292663574
    5. ' ' → logprob: -12.501620292663574
    6. '	n' → logprob: -12.876620292663574
    7. '_nm' → logprob: -14.001620292663574
    8. '  ' → logprob: -14.376620292663574
    9. '    
' → logprob: -14.501620292663574
    10. '```' → logprob: -14.751620292663574

Token 283: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759426355361938
    2. ' =' → logprob: -0.8259426355361938
    3. ' ' → logprob: -14.075942993164062
    4. '=[]' → logprob: -14.200942993164062
    5. '   ' → logprob: -14.950942993164062
    6. ',' → logprob: -15.075942993164062
    7. ')' → logprob: -15.200942993164062
    8. '=input' → logprob: -15.950942993164062
    9. '=n' → logprob: -16.075942993164062
    10. 's' → logprob: -16.200942993164062

Token 284: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.0007099286303855479
    2. ' get' → logprob: -7.2507100105285645
    3. 'input' → logprob: -18.375709533691406
    4. '(get' → logprob: -18.875709533691406
    5. ' ' → logprob: -19.000709533691406
    6. '	get' → logprob: -19.875709533691406
    7. '=get' → logprob: -21.000709533691406
    8. '[get' → logprob: -21.000709533691406
    9. '   ' → logprob: -21.125709533691406
    10. '  ' → logprob: -21.375709533691406

Token 285: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.007774028927087784
    2. '()' → logprob: -5.0077738761901855
    3. '_' → logprob: -7.0077738761901855
    4. 'input' → logprob: -9.007774353027344
    5. '(' → logprob: -11.382774353027344
    6. 'Input' → logprob: -12.757774353027344
    7. '_inputs' → logprob: -13.382774353027344
    8. '_token' → logprob: -13.632774353027344
    9. '_Input' → logprob: -13.632774353027344
    10. '_INPUT' → logprob: -13.757774353027344

Token 286: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.069664333248511e-05
    2. '()
' → logprob: -10.875020980834961
    3. ' ()' → logprob: -14.000020980834961
    4. '()[' → logprob: -15.625020980834961
    5. '()`' → logprob: -16.00002098083496
    6. '()\' → logprob: -16.12502098083496
    7. '()

' → logprob: -16.25002098083496
    8. '()
' → logprob: -16.25002098083496
    9. '())' → logprob: -16.75002098083496
    10. '()<' → logprob: -17.12502098083496

Token 287: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.58170485496521
    2. '   ' → logprob: -0.83170485496521
    3. ' n' → logprob: -5.206705093383789
    4. 'm' → logprob: -8.456705093383789
    5. '    
' → logprob: -10.831705093383789
    6. '
' → logprob: -11.831705093383789
    7. '	n' → logprob: -11.956705093383789
    8. '  ' → logprob: -12.081705093383789
    9. '```' → logprob: -12.331705093383789
    10. 'nm' → logprob: -12.456705093383789

Token 288: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -2.1008713702030946e-06
    2. '   ' → logprob: -13.500001907348633
    3. ' n' → logprob: -14.250001907348633
    4. '```' → logprob: -18.500001907348633
    5. '	n' → logprob: -19.250001907348633
    6. '  ' → logprob: -19.875001907348633
    7. '    
' → logprob: -20.250001907348633
    8. 'nm' → logprob: -21.375001907348633
    9. ' ' → logprob: -21.625001907348633
    10. '_n' → logprob: -21.750001907348633

Token 289: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03188326582312584
    2. ',' → logprob: -4.156883239746094
    3. '=' → logprob: -4.156883239746094
    4. ',m' → logprob: -10.281883239746094
    5. ' ,' → logprob: -10.531883239746094
    6. 'm' → logprob: -13.406883239746094
    7. ' ' → logprob: -13.406883239746094
    8. ',n' → logprob: -13.781883239746094
    9. ')' → logprob: -14.156883239746094
    10. '=int' → logprob: -14.656883239746094

Token 290: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.47407785058021545
    2. 'parse' → logprob: -0.9740778207778931
    3. '(parse' → logprob: -14.724078178405762
    4. '=parse' → logprob: -15.974078178405762
    5. ' int' → logprob: -16.474077224731445
    6. '   ' → logprob: -16.474077224731445
    7. 'int' → logprob: -16.599077224731445
    8. '	parse' → logprob: -16.974077224731445
    9. ' ' → logprob: -18.224077224731445
    10. '_parse' → logprob: -18.349077224731445

Token 291: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.001202850602567196
    2. '(n' → logprob: -6.7512030601501465
    3. '_nm' → logprob: -11.126202583312988
    4. 'n' → logprob: -11.251202583312988
    5. '_m' → logprob: -12.751202583312988
    6. '[n' → logprob: -14.626202583312988
    7. '_(' → logprob: -15.001202583312988
    8. '_' → logprob: -15.376202583312988
    9. '\' → logprob: -15.501202583312988
    10. 'nm' → logprob: -15.751202583312988

Token 292: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: 0.0
    2. '(' → logprob: -17.375
    3. ' (' → logprob: -17.625
    4. 'n' → logprob: -22.125
    5. '(m' → logprob: -22.125
    6. '(nx' → logprob: -22.625
    7. '   ' → logprob: -22.75
    8. '((' → logprob: -23.25
    9. '(N' → logprob: -23.5
    10. 'nm' → logprob: -23.5

Token 293: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.000320330640533939
    2. ')' → logprob: -8.125320434570312
    3. ')
' → logprob: -11.625320434570312
    4. '(m' → logprob: -11.875320434570312
    5. ')m' → logprob: -12.375320434570312
    6. 'м' → logprob: -13.000320434570312
    7. 'M' → logprob: -14.125320434570312
    8. '   ' → logprob: -15.375320434570312
    9. '(n' → logprob: -15.750320434570312
    10. '	m' → logprob: -15.875320434570312

Token 294: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003179855877533555
    2. ')
' → logprob: -5.753180027008057
    3. ')

' → logprob: -13.878179550170898
    4. ' )' → logprob: -14.878179550170898
    5. ')n' → logprob: -15.003179550170898
    6. ')
' → logprob: -15.503179550170898
    7. '),' → logprob: -16.3781795501709
    8. '   ' → logprob: -16.8781795501709
    9. '<|end|>' → logprob: -17.3781795501709
    10. ')#' → logprob: -17.6281795501709

Token 295: '   ' (ID: 271)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5011155605316162
    2. '   ' → logprob: -1.0011155605316162
    3. ' m' → logprob: -3.626115560531616
    4. '
' → logprob: -10.126115798950195
    5. '	m' → logprob: -11.626115798950195
    6. '    
' → logprob: -12.876115798950195
    7. '    ' → logprob: -13.251115798950195
    8. ',m' → logprob: -14.126115798950195
    9. '[m' → logprob: -14.376115798950195
    10. ' ' → logprob: -14.626115798950195

Token 296: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -3.650518920039758e-06
    2. '   ' → logprob: -13.125003814697266
    3. ' m' → logprob: -13.375003814697266
    4. '	m' → logprob: -20.000003814697266
    5. '    
' → logprob: -20.125003814697266
    6. '  ' → logprob: -20.500003814697266
    7. '    ' → logprob: -21.250003814697266
    8. '
' → logprob: -22.125003814697266
    9. '```' → logprob: -22.250003814697266
    10. ' ' → logprob: -22.750003814697266

Token 297: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25192973017692566
    2. '=' → logprob: -1.501929759979248
    3. ')' → logprob: -15.12692928314209
    4. ' ' → logprob: -15.75192928314209
    5. '=parse' → logprob: -17.251930236816406
    6. '_' → logprob: -18.001930236816406
    7. ' =
' → logprob: -18.001930236816406
    8. '.' → logprob: -18.001930236816406
    9. '<|end|>' → logprob: -18.126930236816406
    10. ' =)' → logprob: -18.126930236816406

Token 298: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.007276379968971014
    2. 'parse' → logprob: -5.00727653503418
    3. ' int' → logprob: -7.50727653503418
    4. 'int' → logprob: -11.50727653503418
    5. '(parse' → logprob: -14.13227653503418
    6. ' m' → logprob: -15.25727653503418
    7. '=parse' → logprob: -15.50727653503418
    8. ' n' → logprob: -15.50727653503418
    9. '_parse' → logprob: -16.50727653503418
    10. ' ' → logprob: -16.63227653503418

Token 299: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.0004972710739821196
    2. '_n' → logprob: -8.000496864318848
    3. '(n' → logprob: -9.250496864318848
    4. 'm' → logprob: -9.875496864318848
    5. '_nm' → logprob: -11.875496864318848
    6. '(m' → logprob: -12.500496864318848
    7. '[' → logprob: -14.125496864318848
    8. ' m' → logprob: -14.500496864318848
    9. '_s' → logprob: -14.625496864318848
    10. 'parse' → logprob: -14.750496864318848

Token 300: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0009232500451616943
    2. 'def' → logprob: -7.875923156738281
    3. '   ' → logprob: -8.500923156738281
    4. '(' → logprob: -9.375923156738281
    5. 'nm' → logprob: -9.375923156738281
    6. 'n' → logprob: -9.875923156738281
    7. '(get' → logprob: -9.875923156738281
    8. '
' → logprob: -10.500923156738281
    9. 'a' → logprob: -12.250923156738281
    10. 'get' → logprob: -12.250923156738281

Token 301: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0009184855734929442
    2. ')' → logprob: -7.000918388366699
    3. ')m' → logprob: -12.2509183883667
    4. ')
' → logprob: -13.3759183883667
    5. 'м' → logprob: -14.6259183883667
    6. 'M' → logprob: -15.7509183883667
    7. '))' → logprob: -16.500919342041016
    8. '(m' → logprob: -17.125919342041016
    9. 'nm' → logprob: -17.500919342041016
    10. '[' → logprob: -17.750919342041016

Token 302: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38699424266815186
    2. ')
' → logprob: -1.1369942426681519
    3. '   ' → logprob: -9.136994361877441
    4. ')

' → logprob: -11.761994361877441
    5. ')
' → logprob: -12.136994361877441
    6. ')n' → logprob: -13.886994361877441
    7. ' )' → logprob: -14.636994361877441
    8. ' )
' → logprob: -15.386994361877441
    9. '
' → logprob: -15.511994361877441
    10. ')a' → logprob: -16.011993408203125

Token 303: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14109736680984497
    2. 'a' → logprob: -2.1410973072052
    3. ' a' → logprob: -4.266097545623779
    4. '	a' → logprob: -11.016097068786621
    5. '
' → logprob: -12.766097068786621
    6. ' ' → logprob: -13.016097068786621
    7. '    
' → logprob: -13.016097068786621
    8. '   ' → logprob: -13.641097068786621
    9. '```' → logprob: -13.766097068786621
    10. '#a' → logprob: -13.766097068786621

Token 304: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0014016677159816027
    2. ' a' → logprob: -6.626401901245117
    3. '   ' → logprob: -9.501401901245117
    4. ' ' → logprob: -14.751401901245117
    5. '	a' → logprob: -15.251401901245117
    6. '_a' → logprob: -16.126401901245117
    7. 'ai' → logprob: -16.751401901245117
    8. '```' → logprob: -17.001401901245117
    9. '       ' → logprob: -17.126401901245117
    10. '  ' → logprob: -17.251401901245117

Token 305: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759401917457581
    2. ' =' → logprob: -0.8259401917457581
    3. ' ' → logprob: -15.700940132141113
    4. '=a' → logprob: -15.825940132141113
    5. 'a' → logprob: -16.07594108581543
    6. '   ' → logprob: -16.57594108581543
    7. ',' → logprob: -16.70094108581543
    8. ' =
' → logprob: -17.07594108581543
    9. '=[]' → logprob: -17.32594108581543
    10. '[' → logprob: -17.45094108581543

Token 306: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.04407701641321182
    2. ' parse' → logprob: -3.294076919555664
    3. 'convert' → logprob: -5.169076919555664
    4. ' convert' → logprob: -8.044076919555664
    5. '   ' → logprob: -12.419076919555664
    6. '(parse' → logprob: -13.794076919555664
    7. '	parse' → logprob: -14.419076919555664
    8. 'get' → logprob: -15.044076919555664
    9. ' ' → logprob: -15.419076919555664
    10. '=parse' → logprob: -15.794076919555664

Token 307: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -7.896309739408025e-07
    2. 'a' → logprob: -14.500000953674316
    3. '_n' → logprob: -16.125
    4. '_' → logprob: -16.625
    5. '_m' → logprob: -20.0
    6. '_input' → logprob: -20.0
    7. ' _' → logprob: -20.875
    8. '_s' → logprob: -22.125
    9. '_i' → logprob: -22.25
    10. '_b' → logprob: -22.375

Token 308: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008946274407207966
    2. '()
' → logprob: -4.883946418762207
    3. '   ' → logprob: -6.633946418762207
    4. 'a' → logprob: -11.258946418762207
    5. '()\' → logprob: -13.008946418762207
    6. ' ()' → logprob: -13.383946418762207
    7. '()

' → logprob: -13.383946418762207
    8. '())' → logprob: -13.508946418762207
    9. '()
' → logprob: -14.383946418762207
    10. 'def' → logprob: -14.383946418762207

Token 309: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0042251357808709145
    2. 'a' → logprob: -5.504225254058838
    3. ' a' → logprob: -9.37922477722168
    4. '<|end|>' → logprob: -10.37922477722168
    5. ' ' → logprob: -11.50422477722168
    6. '  ' → logprob: -11.87922477722168
    7. '    
' → logprob: -12.37922477722168
    8. '```' → logprob: -12.62922477722168
    9. '
' → logprob: -12.87922477722168
    10. '    ' → logprob: -13.75422477722168

Token 310: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.036856796592473984
    2. 'int' → logprob: -4.036856651306152
    3. '   ' → logprob: -4.536856651306152
    4. 'ai' → logprob: -5.161856651306152
    5. 'ia' → logprob: -6.911856651306152
    6. ' a' → logprob: -7.036856651306152
    7. 'ints' → logprob: -10.161856651306152
    8. ' ' → logprob: -10.411856651306152
    9. ' ai' → logprob: -10.536856651306152
    10. ' int' → logprob: -10.786856651306152

Token 311: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10024560242891312
    2. '=' → logprob: -2.350245714187622
    3. '_int' → logprob: -10.600245475769043
    4. '=int' → logprob: -11.850245475769043
    5. 'int' → logprob: -12.850245475769043
    6. '_' → logprob: -13.475245475769043
    7. 'a' → logprob: -14.225245475769043
    8. ' ' → logprob: -14.725245475769043
    9. '_=' → logprob: -15.100245475769043
    10. '   ' → logprob: -15.350245475769043

Token 312: ' convert' (ID: 8452)
  Prédit: 'convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'convert' → logprob: -0.06196768581867218
    2. ' convert' → logprob: -2.811967611312866
    3. '(convert' → logprob: -17.561967849731445
    4. '_convert' → logprob: -18.186967849731445
    5. '   ' → logprob: -18.436967849731445
    6. '.convert' → logprob: -18.561967849731445
    7. '[' → logprob: -19.061967849731445
    8. ' [' → logprob: -19.686967849731445
    9. ' ' → logprob: -21.311967849731445
    10. '  ' → logprob: -21.936967849731445

Token 313: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -4.084206375409849e-05
    2. '_' → logprob: -10.125041007995605
    3. 'a' → logprob: -14.250041007995605
    4. ' _' → logprob: -16.37504005432129
    5. '(a' → logprob: -17.62504005432129
    6. ' a' → logprob: -18.25004005432129
    7. '_b' → logprob: -18.75004005432129
    8. '```' → logprob: -19.75004005432129
    9. '(_' → logprob: -20.75004005432129
    10. '_
' → logprob: -20.87504005432129

Token 314: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.00010223194840364158
    2. '_a' → logprob: -9.250102043151855
    3. '_int' → logprob: -13.000102043151855
    4. 'int' → logprob: -13.500102043151855
    5. 'to' → logprob: -13.750102043151855
    6. 'a' → logprob: -14.375102043151855
    7. '_t' → logprob: -14.500102043151855
    8. '(a' → logprob: -15.875102043151855
    9. '_' → logprob: -17.000102996826172
    10. '_list' → logprob: -17.125102996826172

Token 315: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.5759618878364563
    2. 'int' → logprob: -0.8259618878364563
    3. ' int' → logprob: -11.57596206665039
    4. 'a' → logprob: -11.70096206665039
    5. 'Int' → logprob: -13.32596206665039
    6. '_list' → logprob: -14.07596206665039
    7. 'ints' → logprob: -14.95096206665039
    8. '[int' → logprob: -14.95096206665039
    9. 'list' → logprob: -15.07596206665039
    10. '<int' → logprob: -15.32596206665039

Token 316: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0004348413785919547
    2. 'list' → logprob: -7.750434875488281
    3. 'List' → logprob: -13.500434875488281
    4. 'a' → logprob: -13.625434875488281
    5. 'ist' → logprob: -14.250434875488281
    6. 'int' → logprob: -15.125434875488281
    7. '[a' → logprob: -15.125434875488281
    8. '(a' → logprob: -15.500434875488281
    9. '_a' → logprob: -17.12543487548828
    10. '_lists' → logprob: -17.87543487548828

Token 317: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: 0.0
    2. '(' → logprob: -18.375
    3. ' (' → logprob: -21.25
    4. 'a' → logprob: -21.25
    5. '(ai' → logprob: -22.0
    6. '(A' → logprob: -22.625
    7. '(
' → logprob: -23.375
    8. '(an' → logprob: -24.625
    9. '```' → logprob: -24.625
    10. '[a' → logprob: -24.875

Token 318: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022707698866724968
    2. ')
' → logprob: -3.89770770072937
    3. '   ' → logprob: -6.147707462310791
    4. '
' → logprob: -11.39770793914795
    5. ' ' → logprob: -13.02270793914795
    6. ')
' → logprob: -13.27270793914795
    7. ' )' → logprob: -13.27270793914795
    8. ')

' → logprob: -13.52270793914795
    9. '<|end|>' → logprob: -13.52270793914795
    10. '    
' → logprob: -13.64770793914795

Token 319: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019069071859121323
    2. 'b' → logprob: -4.019069194793701
    3. ' b' → logprob: -7.144069194793701
    4. '
' → logprob: -9.394068717956543
    5. '    
' → logprob: -10.769068717956543
    6. '```' → logprob: -11.019068717956543
    7. '<|end|>' → logprob: -12.644068717956543
    8. '	b' → logprob: -12.769068717956543
    9. ' ' → logprob: -14.894068717956543
    10. '  ' → logprob: -15.144068717956543

Token 320: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -5.264322317088954e-05
    2. '   ' → logprob: -10.500052452087402
    3. ' b' → logprob: -10.625052452087402
    4. '```' → logprob: -14.750052452087402
    5. ' ' → logprob: -16.12505340576172
    6. '	b' → logprob: -16.62505340576172
    7. 'c' → logprob: -17.37505340576172
    8. '
' → logprob: -17.62505340576172
    9. '  ' → logprob: -18.00005340576172
    10. '    
' → logprob: -18.12505340576172

Token 321: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016058536246418953
    2. '=' → logprob: -4.141058444976807
    3. ',' → logprob: -10.641058921813965
    4. ' ' → logprob: -16.26605796813965
    5. ' =
' → logprob: -16.39105796813965
    6. '=b' → logprob: -16.64105796813965
    7. 's' → logprob: -17.01605796813965
    8. ')' → logprob: -17.39105796813965
    9. ' =)' → logprob: -17.64105796813965
    10. ' =
' → logprob: -18.14105796813965

Token 322: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.1269291490316391
    2. ' process' → logprob: -2.1269290447235107
    3. '(process' → logprob: -13.75192928314209
    4. '	process' → logprob: -17.751928329467773
    5. 'initialize' → logprob: -17.751928329467773
    6. '.process' → logprob: -17.876928329467773
    7. '_process' → logprob: -18.501928329467773
    8. ' proces' → logprob: -18.626928329467773
    9. 'proces' → logprob: -20.001928329467773
    10. 'rocess' → logprob: -20.126928329467773

Token 323: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -6.2729995988775045e-06
    2. 'b' → logprob: -12.000006675720215
    3. '(b' → logprob: -18.1250057220459
    4. '_' → logprob: -21.0000057220459
    5. ' b' → logprob: -21.3750057220459
    6. ' _' → logprob: -21.5000057220459
    7. '
' → logprob: -22.0000057220459
    8. '_a' → logprob: -22.1250057220459
    9. '_B' → logprob: -22.2500057220459
    10. 'a' → logprob: -22.2500057220459

Token 324: '_and' (ID: 18645)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6468288898468018
    2. '_and' → logprob: -1.5218288898468018
    3. '_b' → logprob: -1.7718288898468018
    4. '(n' → logprob: -3.0218288898468018
    5. 'and' → logprob: -3.2718288898468018
    6. '(b' → logprob: -7.021828651428223
    7. ' and' → logprob: -9.646828651428223
    8. '```' → logprob: -9.896828651428223
    9. '(' → logprob: -10.146828651428223
    10. 'k' → logprob: -10.396828651428223

Token 325: '_k' (ID: 11637)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0024854077491909266
    2. '_k' → logprob: -6.002485275268555
    3. 'b' → logprob: -12.127485275268555
    4. ' k' → logprob: -12.627485275268555
    5. '```' → logprob: -14.877485275268555
    6. '(k' → logprob: -15.377485275268555
    7. 'a' → logprob: -16.002485275268555
    8. 'm' → logprob: -16.127485275268555
    9. '_b' → logprob: -16.877485275268555
    10. 'n' → logprob: -17.127485275268555

Token 326: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.0280383548888494e-06
    2. ' (' → logprob: -13.875000953674316
    3. '(' → logprob: -17.625001907348633
    4. 'n' → logprob: -18.000001907348633
    5. '
' → logprob: -19.875001907348633
    6. '```' → logprob: -20.375001907348633
    7. '(len' → logprob: -21.375001907348633
    8. '(
' → logprob: -21.625001907348633
    9. '(N' → logprob: -21.875001907348633
    10. '   ' → logprob: -22.125001907348633

Token 327: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003323665587231517
    2. ',a' → logprob: -8.125332832336426
    3. 'a' → logprob: -10.500332832336426
    4. ' ,' → logprob: -11.750332832336426
    5. ' a' → logprob: -14.625332832336426
    6. ',
' → logprob: -15.250332832336426
    7. '(a' → logprob: -16.37533187866211
    8. '(' → logprob: -17.00033187866211
    9. ')' → logprob: -17.50033187866211
    10. '```' → logprob: -17.62533187866211

Token 328: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0005533903022296727
    2. ' a' → logprob: -7.500553607940674
    3. '   ' → logprob: -14.750553131103516
    4. '	a' → logprob: -17.250553131103516
    5. ' ' → logprob: -17.625553131103516
    6. '
' → logprob: -18.000553131103516
    7. ')a' → logprob: -18.625553131103516
    8. '  ' → logprob: -18.750553131103516
    9. '    ' → logprob: -19.500553131103516
    10. 'а' → logprob: -19.875553131103516

Token 329: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00039254239527508616
    2. ',m' → logprob: -8.25039291381836
    3. ' ,' → logprob: -9.12539291381836
    4. 'm' → logprob: -10.75039291381836
    5. ')' → logprob: -14.87539291381836
    6. '   ' → logprob: -15.75039291381836
    7. ',
' → logprob: -16.00039291381836
    8. ' m' → logprob: -16.00039291381836
    9. '```' → logprob: -16.75039291381836
    10. '),' → logprob: -17.00039291381836

Token 330: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.011047814972698689
    2. ' m' → logprob: -4.511047840118408
    3. ')' → logprob: -17.38604736328125
    4. ')m' → logprob: -17.76104736328125
    5. '   ' → logprob: -17.88604736328125
    6. ' ' → logprob: -17.88604736328125
    7. '	m' → logprob: -19.01104736328125
    8. '
' → logprob: -19.88604736328125
    9. '  ' → logprob: -20.76104736328125
    10. '    ' → logprob: -21.63604736328125

Token 331: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018259983509778976
    2. ')
' → logprob: -4.0182600021362305
    3. '   ' → logprob: -9.14326000213623
    4. ' )' → logprob: -13.51826000213623
    5. ')
' → logprob: -13.64326000213623
    6. ')

' → logprob: -15.26826000213623
    7. ' )
' → logprob: -16.268259048461914
    8. ' ' → logprob: -16.643259048461914
    9. ')b' → logprob: -17.393259048461914
    10. '),' → logprob: -17.518259048461914

Token 332: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016330180689692497
    2. 'ans' → logprob: -4.141330242156982
    3. 'c' → logprob: -8.891329765319824
    4. ' ans' → logprob: -9.516329765319824
    5. '	ans' → logprob: -9.641329765319824
    6. '```' → logprob: -11.891329765319824
    7. '
' → logprob: -12.766329765319824
    8. '(ans' → logprob: -13.016329765319824
    9. ' ' → logprob: -13.266329765319824
    10. ' c' → logprob: -13.516329765319824

Token 333: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.07139130681753159
    2. 'ans' → logprob: -2.6963913440704346
    3. 'values' → logprob: -6.9463911056518555
    4. 'vals' → logprob: -8.321391105651855
    5. '   ' → logprob: -9.696391105651855
    6. ' c' → logprob: -9.946391105651855
    7. 'v' → logprob: -9.946391105651855
    8. 'result' → logprob: -10.446391105651855
    9. 'b' → logprob: -10.821391105651855
    10. ' ans' → logprob: -11.196391105651855

Token 334: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020763427019119
    2. '=' → logprob: -2.350207567214966
    3. '=b' → logprob: -14.975207328796387
    4. ' ' → logprob: -15.100207328796387
    5. 's' → logprob: -15.975207328796387
    6. '_values' → logprob: -16.100208282470703
    7. '=get' → logprob: -16.475208282470703
    8. '   ' → logprob: -16.850208282470703
    9. '=c' → logprob: -17.100208282470703
    10. '  ' → logprob: -17.600208282470703

Token 335: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.011134241707623005
    2. ' get' → logprob: -4.511134147644043
    3. 'list' → logprob: -9.511134147644043
    4. 'b' → logprob: -11.511134147644043
    5. ' list' → logprob: -13.136134147644043
    6. ' b' → logprob: -15.136134147644043
    7. '(get' → logprob: -16.88613510131836
    8. '[get' → logprob: -17.88613510131836
    9. '	get' → logprob: -18.76113510131836
    10. '.get' → logprob: -19.26113510131836

Token 336: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.002192852320149541
    2. 'b' → logprob: -6.127192974090576
    3. '(b' → logprob: -12.002192497253418
    4. 'get' → logprob: -14.377192497253418
    5. 's' → logprob: -15.127192497253418
    6. 'a' → logprob: -15.127192497253418
    7. ' b' → logprob: -15.752192497253418
    8. 'values' → logprob: -16.252193450927734
    9. '_values' → logprob: -16.252193450927734
    10. '[b' → logprob: -17.127193450927734

Token 337: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.00671584764495492
    2. 'values' → logprob: -5.006715774536133
    3. 'al' → logprob: -15.506715774536133
    4. '_' → logprob: -16.256715774536133
    5. ' values' → logprob: -16.256715774536133
    6. '(values' → logprob: -16.756715774536133
    7. '_VALUES' → logprob: -16.756715774536133
    8. '	values' → logprob: -17.131715774536133
    9. 'Values' → logprob: -17.756715774536133
    10. 'alue' → logprob: -17.881715774536133

Token 338: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -6.869017852295656e-06
    2. '(' → logprob: -12.000006675720215
    3. ' (' → logprob: -14.375006675720215
    4. '(
' → logprob: -18.50000762939453
    5. '(c' → logprob: -19.37500762939453
    6. 'b' → logprob: -20.00000762939453
    7. '(B' → logprob: -20.50000762939453
    8. '```' → logprob: -20.62500762939453
    9. '	b' → logprob: -20.75000762939453
    10. '(a' → logprob: -20.87500762939453

Token 339: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4995635151863098
    2. ')' → logprob: -0.9995635151863098
    3. '()' → logprob: -4.249563694000244
    4. '())
' → logprob: -4.999563694000244
    5. '()
' → logprob: -5.874563694000244
    6. '())' → logprob: -6.874563694000244
    7. ')

' → logprob: -8.499563217163086
    8. ' )
' → logprob: -10.124563217163086
    9. '   ' → logprob: -10.249563217163086
    10. ' ' → logprob: -11.374563217163086

Token 340: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010768119245767593
    2. 'ans' → logprob: -5.010767936706543
    3. ' ans' → logprob: -5.635767936706543
    4. '	ans' → logprob: -8.385767936706543
    5. '
' → logprob: -8.635767936706543
    6. '(ans' → logprob: -10.385767936706543
    7. '    
' → logprob: -10.510767936706543
    8. '```' → logprob: -12.385767936706543
    9. '_ans' → logprob: -12.635767936706543
    10. '<|end|>' → logprob: -13.760767936706543

Token 341: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -7.696077227592468e-05
    2. ' ans' → logprob: -9.500077247619629
    3. '   ' → logprob: -13.750077247619629
    4. '	ans' → logprob: -14.000077247619629
    5. '(ans' → logprob: -16.125076293945312
    6. '_ans' → logprob: -17.625076293945312
    7. 'result' → logprob: -19.125076293945312
    8. 'anst' → logprob: -19.500076293945312
    9. 'answer' → logprob: -19.500076293945312
    10. '
' → logprob: -21.000076293945312

Token 342: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0380416102707386
    2. '=' → logprob: -3.288041591644287
    3. ' +=' → logprob: -16.663042068481445
    4. ' ' → logprob: -16.913042068481445
    5. ' =
' → logprob: -18.663042068481445
    6. ')' → logprob: -19.163042068481445
    7. ' =)' → logprob: -19.288042068481445
    8. ' ' → logprob: -19.413042068481445
    9. '＝' → logprob: -19.538042068481445
    10. '_' → logprob: -19.663042068481445

Token 343: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.25192907452583313
    2. 'compute' → logprob: -1.5019290447235107
    3. '.compute' → logprob: -17.876928329467773
    4. '_compute' → logprob: -18.001928329467773
    5. '   ' → logprob: -18.126928329467773
    6. 'computer' → logprob: -19.251928329467773
    7. 'comput' → logprob: -19.751928329467773
    8. ' computer' → logprob: -19.751928329467773
    9. ' ' → logprob: -20.251928329467773
    10. 'Compute' → logprob: -21.626928329467773

Token 344: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -7.941850526549388e-06
    2. '(ans' → logprob: -12.000007629394531
    3. 'ans' → logprob: -13.375007629394531
    4. '	ans' → logprob: -16.87500762939453
    5. '_answer' → logprob: -17.12500762939453
    6. '_an' → logprob: -17.75000762939453
    7. '_' → logprob: -18.00000762939453
    8. 's' → logprob: -18.37500762939453
    9. '_ant' → logprob: -18.75000762939453
    10. '_ann' → logprob: -19.00000762939453

Token 345: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -5.512236498361744e-07
    2. '(ans' → logprob: -14.625000953674316
    3. ' (' → logprob: -17.0
    4. '(' → logprob: -17.25
    5. '(C' → logprob: -19.125
    6. '©' → logprob: -19.125
    7. '(
' → logprob: -20.0
    8. 'c' → logprob: -20.375
    9. 'ans' → logprob: -21.25
    10. '(s' → logprob: -21.75

Token 346: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.01816258206963539
    2. ')' → logprob: -4.018162727355957
    3. '   ' → logprob: -12.018162727355957
    4. ')
' → logprob: -12.018162727355957
    5. ' )
' → logprob: -15.143162727355957
    6. ')

' → logprob: -15.518162727355957
    7. ' ' → logprob: -17.01816177368164
    8. '
' → logprob: -18.51816177368164
    9. ')`
' → logprob: -19.01816177368164
    10. ' )' → logprob: -19.39316177368164

Token 347: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05134253203868866
    2. 'output' → logprob: -3.051342487335205
    3. ' output' → logprob: -6.301342487335205
    4. '
' → logprob: -7.051342487335205
    5. '	output' → logprob: -10.676342964172363
    6. '```' → logprob: -11.176342964172363
    7. '(output' → logprob: -11.926342964172363
    8. '    
' → logprob: -12.426342964172363
    9. '$output' → logprob: -13.801342964172363
    10. '
' → logprob: -14.301342964172363

Token 348: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -2.7729658540920354e-05
    2. ' output' → logprob: -10.500027656555176
    3. '   ' → logprob: -16.250028610229492
    4. '(output' → logprob: -19.000028610229492
    5. '_output' → logprob: -20.125028610229492
    6. '	output' → logprob: -20.250028610229492
    7. '.output' → logprob: -23.000028610229492
    8. '$output' → logprob: -23.125028610229492
    9. 'Output' → logprob: -23.750028610229492
    10. '
' → logprob: -24.000028610229492

Token 349: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -16.0
    3. '_RESULT' → logprob: -17.0
    4. '_results' → logprob: -17.125
    5. '_Result' → logprob: -18.0
    6. '_res' → logprob: -18.125
    7. '_output' → logprob: -19.0
    8. 's' → logprob: -19.625
    9. ' _' → logprob: -19.875
    10. 'result' → logprob: -19.875

Token 350: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -5.526570384972729e-05
    2. '(' → logprob: -9.875055313110352
    3. ' (' → logprob: -12.750055313110352
    4. '(answer' → logprob: -14.000055313110352
    5. '(an' → logprob: -17.00005531311035
    6. '(
' → logprob: -18.12505531311035
    7. '_ans' → logprob: -18.62505531311035
    8. '(acc' → logprob: -19.37505531311035
    9. '(ast' → logprob: -19.50005531311035
    10. '(ord' → logprob: -19.50005531311035

Token 351: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4060561776859686e-05
    2. '())' → logprob: -10.375043869018555
    3. ')
' → logprob: -12.000043869018555
    4. '()' → logprob: -12.000043869018555
    5. ' )' → logprob: -15.125043869018555
    6. ')

' → logprob: -16.125043869018555
    7. '))' → logprob: -16.750043869018555
    8. ')`' → logprob: -17.125043869018555
    9. ')}' → logprob: -18.250043869018555
    10. '()
' → logprob: -18.750043869018555

Token 352: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.062021348625421524
    2. 'if' → logprob: -2.812021255493164
    3. '
' → logprob: -10.312021255493164
    4. ' main' → logprob: -11.312021255493164
    5. '(main' → logprob: -12.062021255493164
    6. ' if' → logprob: -14.062021255493164
    7. '\n' → logprob: -14.187021255493164
    8. '#' → logprob: -15.312021255493164
    9. '```' → logprob: -15.312021255493164
    10. '	main' → logprob: -15.562021255493164

Token 353: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0021711974404752254
    2. '(' → logprob: -7.127171039581299
    3. '<|end|>' → logprob: -7.127171039581299
    4. '()
' → logprob: -8.502171516418457
    5. '
' → logprob: -8.627171516418457
    6. '```' → logprob: -9.127171516418457
    7. '#' → logprob: -10.502171516418457
    8. '(
' → logprob: -11.252171516418457
    9. '();' → logprob: -12.002171516418457
    10. ')' → logprob: -12.502171516418457


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 351
Tokens correctement prédits (1ère position, stricte): 150
Tokens correctement prédits (1ère position, avec adaptation): 178
Tokens correctement prédits (top 10): 309
Précision stricte (1ère position): 42.74%
Précision adaptée (1ère position): 50.71%
Précision (top 10): 88.03%
================================================================================
