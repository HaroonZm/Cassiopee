================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:38:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def x(x):return int(x)
def y(y):return [x(z)for z in y.split()]

M=x(input())
a,b=0,0

for _ in[*range(M)]:
 d,c=y(input())
 a+=d*c
 b+=c

def f(s,t):return t-1+(s-1)//9

print(f(a,b))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' x' (ID: 1215)
  → Token d'amorce (pas de prédiction)

Token 2: '(x' (ID: 4061)
  → Token d'amorce (pas de prédiction)

Token 3: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47526171803474426
    2. '):' → logprob: -0.9752616882324219
    3. ':' → logprob: -7.225261688232422
    4. '=' → logprob: -8.725261688232422
    5. ',' → logprob: -8.975261688232422
    6. '[' → logprob: -9.725261688232422
    7. '_' → logprob: -10.600261688232422
    8. '*' → logprob: -11.100261688232422
    9. '.' → logprob: -11.475261688232422
    10. '(' → logprob: -11.600261688232422

Token 4: 'return' (ID: 1034)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.8766637444496155
    2. '\n' → logprob: -1.0016636848449707
    3. '   ' → logprob: -3.1266636848449707
    4. ' 
' → logprob: -3.2516636848449707
    5. '(' → logprob: -3.6266636848449707
    6. ''' → logprob: -3.6266636848449707
    7. ' ' → logprob: -4.001663684844971
    8. '    
' → logprob: -4.376663684844971
    9. ' return' → logprob: -4.751663684844971
    10. '[' → logprob: -5.376663684844971

Token 5: ' int' (ID: 677)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.25957828760147095
    2. ' ' → logprob: -1.7595782279968262
    3. 'x' → logprob: -2.884578227996826
    4. ' None' → logprob: -8.009578704833984
    5. '0' → logprob: -9.384578704833984
    6. '_' → logprob: -9.384578704833984
    7. '(x' → logprob: -10.509578704833984
    8. '  ' → logprob: -10.884578704833984
    9. 'None' → logprob: -11.134578704833984
    10. '1' → logprob: -11.509578704833984

Token 6: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0027248715050518513
    2. '.' → logprob: -6.252724647521973
    3. '(x' → logprob: -8.252724647521973
    4. ' (' → logprob: -8.627724647521973
    5. ')' → logprob: -9.127724647521973
    6. '```' → logprob: -9.627724647521973
    7. '_' → logprob: -10.752724647521973
    8. '[' → logprob: -11.002724647521973
    9. '\(' → logprob: -11.127724647521973
    10. '`' → logprob: -11.127724647521973

Token 7: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025372595991939306
    2. '))' → logprob: -6.002537250518799
    3. '[' → logprob: -10.877537727355957
    4. ')))' → logprob: -11.502537727355957
    5. '')' → logprob: -11.627537727355957
    6. '*' → logprob: -11.877537727355957
    7. ' )' → logprob: -12.877537727355957
    8. '*)' → logprob: -13.252537727355957
    9. '.' → logprob: -13.377537727355957
    10. '`)' → logprob: -13.377537727355957

Token 8: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013390447944402695
    2. ')' → logprob: -6.51339054107666
    3. '_' → logprob: -6.63839054107666
    4. '<|end|>' → logprob: -6.76339054107666
    5. '\' → logprob: -6.88839054107666
    6. ':' → logprob: -6.88839054107666
    7. ' ' → logprob: -7.01339054107666
    8. ' (' → logprob: -7.01339054107666
    9. '\(' → logprob: -7.01339054107666
    10. 'newline' → logprob: -7.13839054107666

Token 9: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.09007076174020767
    2. ' ' → logprob: -2.9650707244873047
    3. '_' → logprob: -4.215070724487305
    4. ' x' → logprob: -4.465070724487305
    5. 'y' → logprob: -5.465070724487305
    6. ' ' → logprob: -7.090070724487305
    7. 'x' → logprob: -7.465070724487305
    8. ' f' → logprob: -7.715070724487305
    9. '(' → logprob: -7.965070724487305
    10. '<|end|>' → logprob: -7.965070724487305

Token 10: '(y' (ID: 14684)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00745778065174818
    2. '(x' → logprob: -5.007457733154297
    3. ' (' → logprob: -7.632457733154297
    4. '_' → logprob: -9.257457733154297
    5. ' ' → logprob: -10.632457733154297
    6. '(a' → logprob: -10.757457733154297
    7. ')' → logprob: -11.007457733154297
    8. '((' → logprob: -11.257457733154297
    9. '(y' → logprob: -11.507457733154297
    10. '```' → logprob: -11.632457733154297

Token 11: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023298002779483795
    2. ')' → logprob: -3.7732980251312256
    3. ' ):' → logprob: -10.773298263549805
    4. ':' → logprob: -11.648298263549805
    5. '):
' → logprob: -12.523298263549805
    6. '=' → logprob: -12.898298263549805
    7. ')=' → logprob: -12.898298263549805
    8. '(y' → logprob: -13.398298263549805
    9. ' y' → logprob: -13.398298263549805
    10. ' )' → logprob: -13.523298263549805

Token 12: 'return' (ID: 1034)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.18615196645259857
    2. ' return' → logprob: -1.9361519813537598
    3. 'y' → logprob: -3.9361519813537598
    4. ' int' → logprob: -5.43615198135376
    5. 'return' → logprob: -6.56115198135376
    6. 'int' → logprob: -9.311151504516602
    7. '(y' → logprob: -10.561151504516602
    8. ' ' → logprob: -10.686151504516602
    9. '   ' → logprob: -10.811151504516602
    10. ' ' → logprob: -10.936151504516602

Token 13: ' [' (ID: 723)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.7579489350318909
    2. 'int' → logprob: -1.007948875427246
    3. ' y' → logprob: -2.007948875427246
    4. 'y' → logprob: -3.507948875427246
    5. 'float' → logprob: -7.132948875427246
    6. ' float' → logprob: -7.507948875427246
    7. 'str' → logprob: -8.382948875427246
    8. ' str' → logprob: -8.507948875427246
    9. ' ' → logprob: -9.132948875427246
    10. '0' → logprob: -9.757948875427246

Token 14: 'x' (ID: 87)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.06590317189693451
    2. 'int' → logprob: -2.9409031867980957
    3. ' y' → logprob: -5.065903186798096
    4. 'i' → logprob: -5.940903186798096
    5. 'x' → logprob: -7.065903186798096
    6. ' int' → logprob: -7.690903186798096
    7. '0' → logprob: -8.315902709960938
    8. '*' → logprob: -9.440902709960938
    9. 'str' → logprob: -9.690902709960938
    10. '1' → logprob: -9.940902709960938

Token 15: '(z' (ID: 27674)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.35128867626190186
    2. '(y' → logprob: -1.2262886762619019
    3. '(x' → logprob: -5.976288795471191
    4. 'y' → logprob: -9.476288795471191
    5. '(i' → logprob: -10.101288795471191
    6. '(s' → logprob: -10.351288795471191
    7. ']' → logprob: -10.476288795471191
    8. '(
' → logprob: -11.351288795471191
    9. '((' → logprob: -11.351288795471191
    10. ' (' → logprob: -11.476288795471191

Token 16: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0037397451233118773
    2. '(z' → logprob: -5.753739833831787
    3. ')]' → logprob: -9.003739356994629
    4. '(' → logprob: -9.128739356994629
    5. 'z' → logprob: -9.128739356994629
    6. ' )' → logprob: -9.253739356994629
    7. ')])' → logprob: -9.503739356994629
    8. '[z' → logprob: -11.003739356994629
    9. ' for' → logprob: -11.878739356994629
    10. '[' → logprob: -12.128739356994629

Token 17: 'for' (ID: 1938)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.1798413246870041
    2. '(' → logprob: -2.5548412799835205
    3. ')' → logprob: -2.8048412799835205
    4. ']' → logprob: -4.3048415184021
    5. ')]' → logprob: -4.9298415184021
    6. 'z' → logprob: -6.5548415184021
    7. '(y' → logprob: -6.6798415184021
    8. ' for' → logprob: -6.9298415184021
    9. '(x' → logprob: -7.6798415184021
    10. '(i' → logprob: -8.179841041564941

Token 18: ' z' (ID: 579)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.04301825538277626
    2. 'y' → logprob: -3.168018341064453
    3. ' ' → logprob: -11.293018341064453
    4. '	y' → logprob: -12.168018341064453
    5. ' ' → logprob: -14.918018341064453
    6. '(y' → logprob: -14.918018341064453
    7. ' range' → logprob: -15.543018341064453
    8. '<|end|>' → logprob: -16.043018341064453
    9. '_y' → logprob: -16.293018341064453
    10. '  ' → logprob: -16.543018341064453

Token 19: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09235752373933792
    2. ' y' → logprob: -2.592357635498047
    3. 'in' → logprob: -4.592357635498047
    4. 'y' → logprob: -6.467357635498047
    5. ' ' → logprob: -6.467357635498047
    6. '(y' → logprob: -9.717357635498047
    7. ',y' → logprob: -10.592357635498047
    8. '	y' → logprob: -11.967357635498047
    9. '<|end|>' → logprob: -11.967357635498047
    10. 'range' → logprob: -12.342357635498047

Token 20: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.38700705766677856
    2. 'y' → logprob: -1.1370069980621338
    3. ' ' → logprob: -9.887006759643555
    4. ' range' → logprob: -10.512006759643555
    5. 'str' → logprob: -11.012006759643555
    6. ' str' → logprob: -11.262006759643555
    7. 'range' → logprob: -11.762006759643555
    8. '	y' → logprob: -12.012006759643555
    9. '(y' → logprob: -12.387006759643555
    10. ''y' → logprob: -13.387006759643555

Token 21: '.split' (ID: 10347)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006477446295320988
    2. ' ]' → logprob: -7.75064754486084
    3. ')]' → logprob: -9.12564754486084
    4. '])' → logprob: -9.25064754486084
    5. '])]' → logprob: -12.75064754486084
    6. ']]' → logprob: -13.50064754486084
    7. ']}' → logprob: -13.87564754486084
    8. ']>' → logprob: -13.87564754486084
    9. ']
' → logprob: -14.00064754486084
    10. '`]' → logprob: -14.12564754486084

Token 22: '()' (ID: 416)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.002351741772145033
    2. '(',' → logprob: -6.502351760864258
    3. '(' → logprob: -7.752351760864258
    4. '("' → logprob: -8.502351760864258
    5. '("("' → logprob: -9.252351760864258
    6. '('.')' → logprob: -9.877351760864258
    7. '(','' → logprob: -10.502351760864258
    8. '()]' → logprob: -11.127351760864258
    9. ''' → logprob: -12.252351760864258
    10. '('"' → logprob: -12.252351760864258

Token 23: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003972373902797699
    2. ')]' → logprob: -5.87897253036499
    3. '])' → logprob: -7.62897253036499
    4. '']' → logprob: -8.003972053527832
    5. ' ]' → logprob: -8.503972053527832
    6. '()]' → logprob: -9.128972053527832
    7. '`]' → logprob: -10.878972053527832
    8. '"]' → logprob: -12.253972053527832
    9. '])]' → logprob: -12.378972053527832
    10. ')' → logprob: -13.628972053527832

Token 24: 'M' (ID: 44)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5895684361457825
    2. 'x' → logprob: -1.9645683765411377
    3. 'a' → logprob: -2.7145683765411377
    4. '#' → logprob: -2.8395683765411377
    5. 'd' → logprob: -3.0895683765411377
    6. '[' → logprob: -3.3395683765411377
    7. 'n' → logprob: -4.089568614959717
    8. 'for' → logprob: -4.089568614959717
    9. 'z' → logprob: -4.464568614959717
    10. 'print' → logprob: -4.714568614959717

Token 25: '=x' (ID: 56980)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05624654144048691
    2. 'e' → logprob: -4.181246757507324
    3. 'y' → logprob: -4.556246757507324
    4. '=' → logprob: -5.056246757507324
    5. ' =' → logprob: -5.056246757507324
    6. 'i' → logprob: -5.681246757507324
    7. 'ap' → logprob: -5.806246757507324
    8. 'ax' → logprob: -5.931246757507324
    9. 'ean' → logprob: -7.056246757507324
    10. 'M' → logprob: -7.181246757507324

Token 26: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13864313066005707
    2. '.' → logprob: -3.0136430263519287
    3. '(M' → logprob: -3.8886430263519287
    4. ')' → logprob: -4.888643264770508
    5. '(x' → logprob: -4.888643264770508
    6. '[' → logprob: -5.138643264770508
    7. '<|end|>' → logprob: -5.388643264770508
    8. 'y' → logprob: -5.513643264770508
    9. '_' → logprob: -5.763643264770508
    10. ''' → logprob: -5.888643264770508

Token 27: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.008370012044906616
    2. '()' → logprob: -5.0083699226379395
    3. '(' → logprob: -6.8833699226379395
    4. ')' → logprob: -8.383370399475098
    5. '('' → logprob: -8.633370399475098
    6. ' ())' → logprob: -9.258370399475098
    7. '()))' → logprob: -10.258370399475098
    8. '("' → logprob: -10.383370399475098
    9. '();)' → logprob: -10.633370399475098
    10. '())
' → logprob: -11.633370399475098

Token 28: 'a' (ID: 64)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0073636770248413
    2. '[' → logprob: -1.2573636770248413
    3. '+' → logprob: -2.132363796234131
    4. '(' → logprob: -2.757363796234131
    5. ')' → logprob: -3.507363796234131
    6. '()
' → logprob: -3.757363796234131
    7. '*' → logprob: -4.382363796234131
    8. '
' → logprob: -4.882363796234131
    9. '()[' → logprob: -4.882363796234131
    10. '.' → logprob: -5.007363796234131

Token 29: ',b' (ID: 17568)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3917161226272583
    2. ' =' → logprob: -1.8917161226272583
    3. 'dd' → logprob: -2.3917160034179688
    4. '=input' → logprob: -3.0167160034179688
    5. '=[]' → logprob: -5.766716003417969
    6. 'a' → logprob: -6.141716003417969
    7. '+=' → logprob: -6.141716003417969
    8. 's' → logprob: -6.391716003417969
    9. '=int' → logprob: -6.391716003417969
    10. '(' → logprob: -6.391716003417969

Token 30: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004000992048531771
    2. ' =' → logprob: -5.754001140594482
    3. '=input' → logprob: -7.254001140594482
    4. '=M' → logprob: -9.879000663757324
    5. '=x' → logprob: -10.129000663757324
    6. '=

' → logprob: -12.004000663757324
    7. '=int' → logprob: -13.129000663757324
    8. '=c' → logprob: -13.129000663757324
    9. ',' → logprob: -13.129000663757324
    10. '=a' → logprob: -13.629000663757324

Token 31: '0' (ID: 15)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0563482940196991
    2. ' y' → logprob: -3.4313483238220215
    3. 'M' → logprob: -4.0563483238220215
    4. ' M' → logprob: -6.1813483238220215
    5. 'map' → logprob: -6.3063483238220215
    6. 'x' → logprob: -8.306347846984863
    7. ' map' → logprob: -8.431347846984863
    8. '[M' → logprob: -8.556347846984863
    9. 'input' → logprob: -8.806347846984863
    10. ' ' → logprob: -9.306347846984863

Token 32: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.078406922519207
    2. 'M' → logprob: -2.953406810760498
    3. '1' → logprob: -4.078406810760498
    4. ' ' → logprob: -6.078406810760498
    5. 'len' → logprob: -6.203406810760498
    6. '100' → logprob: -7.578406810760498
    7. ' M' → logprob: -7.703406810760498
    8. '10' → logprob: -7.828406810760498
    9. '2' → logprob: -7.953406810760498
    10. ' len' → logprob: -9.953407287597656

Token 34: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.577007532119751
    2. '
' → logprob: -1.577007532119751
    3. ' for' → logprob: -2.327007532119751
    4. '<|end|>' → logprob: -2.577007532119751
    5. ' 
' → logprob: -3.327007532119751
    6. ' ' → logprob: -4.077007293701172
    7. 'while' → logprob: -6.327007293701172
    8. ' while' → logprob: -7.202007293701172
    9. ';' → logprob: -7.577007293701172
    10. 's' → logprob: -7.827007293701172

Token 35: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38661688566207886
    2. ' for' → logprob: -1.2616169452667236
    3. '
' → logprob: -3.7616169452667236
    4. ' 
' → logprob: -4.5116167068481445
    5. ' ' → logprob: -6.2616167068481445
    6. ' while' → logprob: -7.8866167068481445
    7. 'while' → logprob: -8.136616706848145
    8. '<|end|>' → logprob: -8.136616706848145
    9. '\n' → logprob: -8.636616706848145
    10. 'n' → logprob: -10.136616706848145

Token 36: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.3509897291660309
    2. '_' → logprob: -1.4759896993637085
    3. ' i' → logprob: -2.975989818572998
    4. ' M' → logprob: -4.475989818572998
    5. ' ' → logprob: -6.600989818572998
    6. ' z' → logprob: -6.725989818572998
    7. 'i' → logprob: -7.225989818572998
    8. ' c' → logprob: -7.975989818572998
    9. '_i' → logprob: -8.47598934173584
    10. 'M' → logprob: -8.60098934173584

Token 37: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009828576818108559
    2. 'in' → logprob: -4.634828567504883
    3. ' ' → logprob: -9.884828567504883
    4. '_' → logprob: -11.259828567504883
    5. ' _' → logprob: -12.259828567504883
    6. ',' → logprob: -12.884828567504883
    7. '_in' → logprob: -15.509828567504883
    8. ',in' → logprob: -15.509828567504883
    9. '	in' → logprob: -15.634828567504883
    10. ' ,' → logprob: -15.884828567504883

Token 38: '[*' (ID: 79141)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5238226056098938
    2. 'range' → logprob: -0.8988226056098938
    3. ' y' → logprob: -7.398822784423828
    4. 'y' → logprob: -9.523822784423828
    5. ' xrange' → logprob: -13.023822784423828
    6. ' ' → logprob: -13.398822784423828
    7. '(range' → logprob: -13.398822784423828
    8. 'x' → logprob: -13.523822784423828
    9. '	range' → logprob: -13.648822784423828
    10. ' M' → logprob: -13.648822784423828

Token 39: 'range' (ID: 20967)
  Prédit: 'range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00018268341955263168
    2. ' range' → logprob: -8.87518310546875
    3. 'rang' → logprob: -11.25018310546875
    4. 'ra' → logprob: -12.12518310546875
    5. 'ran' → logprob: -12.12518310546875
    6. 'r' → logprob: -12.75018310546875
    7. '```' → logprob: -12.75018310546875
    8. '   ' → logprob: -13.12518310546875
    9. ' ' → logprob: -13.25018310546875
    10. 'M' → logprob: -13.37518310546875

Token 40: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.08909758925437927
    2. '(' → logprob: -2.464097499847412
    3. ' (' → logprob: -9.08909797668457
    4. '(
' → logprob: -11.33909797668457
    5. '(m' → logprob: -11.71409797668457
    6. '((' → logprob: -12.21409797668457
    7. '(A' → logprob: -12.71409797668457
    8. '(int' → logprob: -12.71409797668457
    9. '(N' → logprob: -12.96409797668457
    10. '(K' → logprob: -13.33909797668457

Token 41: ')]' (ID: 15710)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015714768320322037
    2. ')]' → logprob: -4.390714645385742
    3. '):' → logprob: -5.765714645385742
    4. ' )' → logprob: -10.265714645385742
    5. ' ):' → logprob: -11.765714645385742
    6. ':' → logprob: -12.140714645385742
    7. ')][' → logprob: -12.390714645385742
    8. ')):' → logprob: -12.890714645385742
    9. ' ' → logprob: -13.015714645385742
    10. ')].' → logprob: -13.765714645385742

Token 42: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012638057814911008
    2. ' :' → logprob: -6.876263618469238
    3. ':
' → logprob: -8.501263618469238
    4. ',' → logprob: -11.501263618469238
    5. ':def' → logprob: -11.876263618469238
    6. ' :
' → logprob: -12.376263618469238
    7. ':int' → logprob: -14.001263618469238
    8. ':b' → logprob: -14.001263618469238
    9. ',:' → logprob: -14.126263618469238
    10. ':a' → logprob: -14.501263618469238

Token 43: ' d' (ID: 272)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.33263397216796875
    2. ' c' → logprob: -2.4576339721679688
    3. ' t' → logprob: -2.8326339721679688
    4. ' ' → logprob: -3.2076339721679688
    5. ' l' → logprob: -3.2076339721679688
    6. ' x' → logprob: -4.457633972167969
    7. ' i' → logprob: -4.582633972167969
    8. ' a' → logprob: -4.832633972167969
    9. ' v' → logprob: -5.207633972167969
    10. 's' → logprob: -5.332633972167969

Token 44: ',c' (ID: 22261)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6022563576698303
    2. '=input' → logprob: -0.8522563576698303
    3. ' =' → logprob: -4.9772562980651855
    4. 'e' → logprob: -5.1022562980651855
    5. ',e' → logprob: -5.7272562980651855
    6. '=int' → logprob: -6.1022562980651855
    7. ',' → logprob: -6.3522562980651855
    8. ' ' → logprob: -6.6022562980651855
    9. 'd' → logprob: -7.6022562980651855
    10. 'ef' → logprob: -7.8522562980651855

Token 45: '=y' (ID: 70421)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003673829138278961
    2. ' =' → logprob: -6.378674030303955
    3. '=input' → logprob: -6.378674030303955
    4. '=x' → logprob: -9.003673553466797
    5. '=d' → logprob: -9.878673553466797
    6. '=int' → logprob: -10.628673553466797
    7. '=user' → logprob: -11.253673553466797
    8. '=data' → logprob: -11.628673553466797
    9. '=line' → logprob: -11.878673553466797
    10. '=i' → logprob: -12.253673553466797

Token 46: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -6.539801688631997e-05
    2. 'input' → logprob: -10.625065803527832
    3. '(' → logprob: -10.750065803527832
    4. ' (' → logprob: -11.125065803527832
    5. ' input' → logprob: -13.250065803527832
    6. '(
' → logprob: -14.375065803527832
    7. ' ' → logprob: -14.500065803527832
    8. '(str' → logprob: -14.750065803527832
    9. '=input' → logprob: -14.750065803527832
    10. '((' → logprob: -14.875065803527832

Token 47: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.011724688112735748
    2. '()' → logprob: -4.511724472045898
    3. ' ())' → logprob: -7.511724472045898
    4. '())
' → logprob: -10.136724472045898
    5. '();)' → logprob: -10.261724472045898
    6. ')' → logprob: -11.386724472045898
    7. '());' → logprob: -11.511724472045898
    8. '()))' → logprob: -11.636724472045898
    9. '()]' → logprob: -12.511724472045898
    10. '()
' → logprob: -12.761724472045898

Token 48: ' a' (ID: 261)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.01664653792977333
    2. ' +=' → logprob: -4.141646385192871
    3. '+' → logprob: -7.891646385192871
    4. '=' → logprob: -9.516646385192871
    5. '+=(' → logprob: -9.516646385192871
    6. '+a' → logprob: -10.516646385192871
    7. ']+=' → logprob: -10.766646385192871
    8. '=a' → logprob: -11.766646385192871
    9. '+='' → logprob: -11.891646385192871
    10. '+="' → logprob: -12.141646385192871

Token 50: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.03464639186859131
    2. ' d' → logprob: -3.409646511077881
    3. 'int' → logprob: -7.034646511077881
    4. ' int' → logprob: -9.534646034240723
    5. ' ' → logprob: -10.534646034240723
    6. '1' → logprob: -12.409646034240723
    7. '	d' → logprob: -12.534646034240723
    8. 'c' → logprob: -13.034646034240723
    9. '  ' → logprob: -13.347146034240723
    10. ' ' → logprob: -13.659646034240723

Token 51: '*c' (ID: 83421)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.128109335899353
    2. ' c' → logprob: -1.253109335899353
    3. ' ' → logprob: -1.628109335899353
    4. ' b' → logprob: -2.8781094551086426
    5. '
' → logprob: -3.1281094551086426
    6. '*c' → logprob: -3.6281094551086426
    7. '<|end|>' → logprob: -3.7531094551086426
    8. '*' → logprob: -4.753109455108643
    9. '+c' → logprob: -5.003109455108643
    10. 'b' → logprob: -5.003109455108643

Token 52: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: ' b' (ID: 287)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08784650266170502
    2. ' 
' → logprob: -2.837846517562866
    3. '+' → logprob: -4.087846279144287
    4. '-' → logprob: -6.337846279144287
    5. '+
' → logprob: -6.337846279144287
    6. '\n' → logprob: -6.587846279144287
    7. '<|end|>' → logprob: -6.587846279144287
    8. ' ' → logprob: -6.837846279144287
    9. '
' → logprob: -7.962846279144287
    10. '  
' → logprob: -8.587846755981445

Token 54: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.002511093392968178
    2. ' +=' → logprob: -6.127511024475098
    3. '+' → logprob: -8.127511024475098
    4. '-=' → logprob: -11.627511024475098
    5. '+=(' → logprob: -11.752511024475098
    6. '=' → logprob: -12.252511024475098
    7. '+='' → logprob: -12.502511024475098
    8. '+="' → logprob: -13.877511024475098
    9. ' ' → logprob: -14.002511024475098
    10. '-' → logprob: -14.127511024475098

Token 55: 'c' (ID: 66)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.21466369926929474
    2. 'c' → logprob: -1.8396637439727783
    3. ' d' → logprob: -3.5896637439727783
    4. ' c' → logprob: -5.214663505554199
    5. '1' → logprob: -6.839663505554199
    6. ' ' → logprob: -9.0896635055542
    7. 'a' → logprob: -11.2146635055542
    8. 'b' → logprob: -11.2771635055542
    9. '  ' → logprob: -11.8396635055542
    10. '	d' → logprob: -11.9021635055542

Token 56: '

' (ID: 279)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.816925048828125
    2. '<|end|>' → logprob: -0.941925048828125
    3. ' 
' → logprob: -2.566925048828125
    4. '*' → logprob: -3.316925048828125
    5. '+' → logprob: -3.691925048828125
    6. '#' → logprob: -5.441925048828125
    7. '
' → logprob: -5.441925048828125
    8. '  
' → logprob: -5.566925048828125
    9. '-' → logprob: -5.566925048828125
    10. ',' → logprob: -6.441925048828125

Token 57: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3419677019119263
    2. ' if' → logprob: -1.4669677019119263
    3. '<|end|>' → logprob: -1.8419677019119263
    4. ' ' → logprob: -2.3419675827026367
    5. '+' → logprob: -2.5919675827026367
    6. ' 
' → logprob: -2.8419675827026367
    7. 'if' → logprob: -3.2169675827026367
    8. 'print' → logprob: -3.8419675827026367
    9. ' print' → logprob: -4.841967582702637
    10. '*' → logprob: -4.966967582702637

Token 58: ' f' (ID: 285)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8510776162147522
    2. ' func' → logprob: -2.4760775566101074
    3. ' total' → logprob: -2.6010775566101074
    4. ' calculate' → logprob: -2.7260775566101074
    5. ' average' → logprob: -2.8510775566101074
    6. ' f' → logprob: -3.1010775566101074
    7. ' cost' → logprob: -3.6010775566101074
    8. ' ratio' → logprob: -3.7260775566101074
    9. ' a' → logprob: -3.8510775566101074
    10. '_ratio' → logprob: -4.101077556610107

Token 59: '(s' (ID: 1858)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.5692986845970154
    2. '(' → logprob: -1.1942987442016602
    3. '(b' → logprob: -2.56929874420166
    4. '(n' → logprob: -3.94429874420166
    5. '(x' → logprob: -4.44429874420166
    6. ' (' → logprob: -4.81929874420166
    7. '(s' → logprob: -5.19429874420166
    8. '(d' → logprob: -5.56929874420166
    9. '(m' → logprob: -6.56929874420166
    10. '(M' → logprob: -6.81929874420166

Token 60: ',t' (ID: 26927)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12286730855703354
    2. ',' → logprob: -2.7478673458099365
    3. ',s' → logprob: -3.3728673458099365
    4. ' ):' → logprob: -5.372867107391357
    5. ',b' → logprob: -5.747867107391357
    6. ' ,' → logprob: -6.122867107391357
    7. ',a' → logprob: -6.372867107391357
    8. ')' → logprob: -6.622867107391357
    9. '):
' → logprob: -6.997867107391357
    10. 's' → logprob: -7.372867107391357

Token 61: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003698773914948106
    2. ')' → logprob: -6.378698825836182
    3. ' ):' → logprob: -6.878698825836182
    4. ',' → logprob: -7.753698825836182
    5. ',s' → logprob: -8.128698348999023
    6. '):
' → logprob: -9.878698348999023
    7. ' s' → logprob: -10.628698348999023
    8. '=' → logprob: -10.753698348999023
    9. 's' → logprob: -10.878698348999023
    10. ':' → logprob: -11.128698348999023

Token 62: 'return' (ID: 1034)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3327537178993225
    2. ' ' → logprob: -1.4577536582946777
    3. ' 
' → logprob: -3.5827536582946777
    4. ' if' → logprob: -4.457753658294678
    5. ' s' → logprob: -5.582753658294678
    6. '   ' → logprob: -6.082753658294678
    7. '	return' → logprob: -6.707753658294678
    8. '<|end|>' → logprob: -7.457753658294678
    9. ' r' → logprob: -7.582753658294678
    10. ' ' → logprob: -7.832753658294678

Token 63: ' t' (ID: 260)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.47956424951553345
    2. 's' → logprob: -2.1045641899108887
    3. ' a' → logprob: -2.7295641899108887
    4. ' (' → logprob: -2.8545641899108887
    5. 'a' → logprob: -3.3545641899108887
    6. ' max' → logprob: -4.104564189910889
    7. ' ' → logprob: -4.229564189910889
    8. '(s' → logprob: -4.479564189910889
    9. ' int' → logprob: -4.854564189910889
    10. ' t' → logprob: -4.979564189910889

Token 64: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.35394546389579773
    2. '<|end|>' → logprob: -2.35394549369812
    3. ' +' → logprob: -2.85394549369812
    4. '*' → logprob: -2.85394549369812
    5. ' ' → logprob: -4.103945255279541
    6. ' *' → logprob: -4.103945255279541
    7. ' if' → logprob: -4.603945255279541
    8. '
' → logprob: -5.228945255279541
    9. '**' → logprob: -5.353945255279541
    10. '>' → logprob: -5.603945255279541

Token 65: '1' (ID: 16)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05500302091240883
    2. 't' → logprob: -4.3050031661987305
    3. ' s' → logprob: -4.3050031661987305
    4. '(s' → logprob: -4.9300031661987305
    5. '(' → logprob: -5.0550031661987305
    6. 'int' → logprob: -5.8050031661987305
    7. '1' → logprob: -6.0550031661987305
    8. '((' → logprob: -6.3050031661987305
    9. 'a' → logprob: -6.6800031661987305
    10. '(t' → logprob: -6.9300031661987305

Token 66: '+(' (ID: 31717)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.846461832523346
    2. 't' → logprob: -0.846461832523346
    3. ' t' → logprob: -2.846461772918701
    4. ' s' → logprob: -2.971461772918701
    5. '(s' → logprob: -4.596461772918701
    6. '(' → logprob: -4.971461772918701
    7. '(t' → logprob: -5.471461772918701
    8. ' (' → logprob: -5.471461772918701
    9. ')' → logprob: -6.596461772918701
    10. '1' → logprob: -6.846461772918701

Token 68: '-' (ID: 12)
  Prédit: '+t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+t' → logprob: -1.0421770811080933
    2. '//' → logprob: -1.6671770811080933
    3. '-' → logprob: -1.7921770811080933
    4. '+' → logprob: -2.042177200317383
    5. '%' → logprob: -2.917177200317383
    6. '>=' → logprob: -3.917177200317383
    7. '+s' → logprob: -4.167177200317383
    8. '>' → logprob: -4.417177200317383
    9. '-t' → logprob: -4.542177200317383
    10. '*t' → logprob: -4.792177200317383

Token 69: '1' (ID: 16)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.27765071392059326
    2. '1' → logprob: -1.6526507139205933
    3. 'b' → logprob: -3.402650833129883
    4. ' t' → logprob: -5.027650833129883
    5. 's' → logprob: -6.027650833129883
    6. '(t' → logprob: -6.152650833129883
    7. ' ' → logprob: -6.777650833129883
    8. '2' → logprob: -7.027650833129883
    9. ' b' → logprob: -7.527650833129883
    10. '(' → logprob: -7.527650833129883

Token 70: ')//' (ID: 60375)
  Prédit: ')*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.5300249457359314
    2. ')//' → logprob: -1.1550250053405762
    3. ')%' → logprob: -2.905025005340576
    4. ')' → logprob: -3.280025005340576
    5. ')*(' → logprob: -5.780025005340576
    6. ')**' → logprob: -7.905025005340576
    7. '//' → logprob: -8.655024528503418
    8. ')#' → logprob: -9.280024528503418
    9. ' )' → logprob: -9.405024528503418
    10. ')t' → logprob: -10.030024528503418

Token 71: '9' (ID: 24)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.012662211433053017
    2. ' t' → logprob: -4.387662410736084
    3. '2' → logprob: -9.262661933898926
    4. 'b' → logprob: -10.887661933898926
    5. ' ' → logprob: -11.262661933898926
    6. '3' → logprob: -12.762661933898926
    7. 'c' → logprob: -12.887661933898926
    8. '10' → logprob: -13.012661933898926
    9. 's' → logprob: -13.137661933898926
    10. '7' → logprob: -13.262661933898926

Token 72: '

' (ID: 279)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3367392420768738
    2. ')' → logprob: -2.8367393016815186
    3. ' 
' → logprob: -3.0867393016815186
    4. ' s' → logprob: -3.0867393016815186
    5. ' a' → logprob: -3.5867393016815186
    6. ' d' → logprob: -3.8367393016815186
    7. 's' → logprob: -4.0867390632629395
    8. '(s' → logprob: -4.3367390632629395
    9. 'a' → logprob: -4.8367390632629395
    10. ' f' → logprob: -5.0867390632629395

Token 73: 'print' (ID: 1598)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9305592179298401
    2. 'f' → logprob: -1.1805591583251953
    3. 'print' → logprob: -1.3055591583251953
    4. ' f' → logprob: -5.055559158325195
    5. 'for' → logprob: -5.180559158325195
    6. 'if' → logprob: -5.305559158325195
    7. 'b' → logprob: -5.680559158325195
    8. ' a' → logprob: -5.930559158325195
    9. 's' → logprob: -6.805559158325195
    10. ' print' → logprob: -7.055559158325195

Token 74: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.18571648001670837
    2. '(a' → logprob: -2.060716390609741
    3. '(' → logprob: -3.185716390609741
    4. '((' → logprob: -7.43571662902832
    5. '(abs' → logprob: -10.06071662902832
    6. '(b' → logprob: -10.81071662902832
    7. '('' → logprob: -10.81071662902832
    8. '(s' → logprob: -10.81071662902832
    9. '(max' → logprob: -11.06071662902832
    10. '(x' → logprob: -11.31071662902832

Token 75: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0001789881061995402
    2. '(' → logprob: -9.125179290771484
    3. ' (' → logprob: -9.750179290771484
    4. ')' → logprob: -12.125179290771484
    5. 'a' → logprob: -12.875179290771484
    6. '(
' → logprob: -13.125179290771484
    7. '(b' → logprob: -14.500179290771484
    8. ')(' → logprob: -15.000179290771484
    9. '(abs' → logprob: -15.375179290771484
    10. '(s' → logprob: -15.500179290771484

Token 76: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.0797450840473175
    2. ',' → logprob: -2.579745054244995
    3. ' ,' → logprob: -7.079745292663574
    4. 'b' → logprob: -12.079745292663574
    5. ' b' → logprob: -13.079745292663574
    6. ',
' → logprob: -13.079745292663574
    7. ',a' → logprob: -13.579745292663574
    8. ',f' → logprob: -14.329745292663574
    9. ' ' → logprob: -14.829745292663574
    10. ')' → logprob: -15.954745292663574

Token 77: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.008624974638223648
    2. ')' → logprob: -4.758625030517578
    3. ')))' → logprob: -12.258625030517578
    4. '))
' → logprob: -12.633625030517578
    5. ' ))' → logprob: -14.008625030517578
    6. ')
' → logprob: -14.383625030517578
    7. '),' → logprob: -15.258625030517578
    8. '))

' → logprob: -16.258625030517578
    9. ' ' → logprob: -16.383625030517578
    10. ' )' → logprob: -16.508625030517578


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 75
Tokens correctement prédits (1ère position, stricte): 22
Tokens correctement prédits (1ère position, avec adaptation): 22
Tokens correctement prédits (top 10): 41
Précision stricte (1ère position): 29.33%
Précision adaptée (1ère position): 29.33%
Précision (top 10): 54.67%
================================================================================
