================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:31:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin as __s; __N=int(input());_S,_T=[],[]
for __i__ in range(__N):
    *_A,=__s.readline().split()
    _T.append(int(_A[1]))
    _S.append(_A[0])
__X=input()
def _p(a,b): return sum(b[a+1:])
print(_p(_S.index(__X), _T))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.14457781612873077
    2. ' argv' → logprob: -2.269577741622925
    3. 'exit' → logprob: -4.019577980041504
    4. ' exit' → logprob: -4.644577980041504
    5. 'stdout' → logprob: -6.269577980041504
    6. 'stdin' → logprob: -7.519577980041504
    7. 'import' → logprob: -7.894577980041504
    8. 'path' → logprob: -7.894577980041504
    9. 'stderr' → logprob: -9.019577980041504
    10. ' path' → logprob: -9.394577980041504

Token 4: ' as' (ID: 472)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0016966033726930618
    2. '.readline' → logprob: -6.876696586608887
    3. '\n' → logprob: -8.001696586608887
    4. '.read' → logprob: -9.251696586608887
    5. '.
' → logprob: -9.626696586608887
    6. 'import' → logprob: -10.001696586608887
    7. '
' → logprob: -10.501696586608887
    8. '\' → logprob: -10.876696586608887
    9. '```' → logprob: -11.001696586608887
    10. ',' → logprob: -11.626696586608887

Token 5: ' __' (ID: 2516)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.14563332498073578
    2. ' input' → logprob: -2.8956332206726074
    3. 'sys' → logprob: -3.2706332206726074
    4. 'stdin' → logprob: -3.8956332206726074
    5. 's' → logprob: -5.020633220672607
    6. 'in' → logprob: -5.395633220672607
    7. ' sys' → logprob: -5.520633220672607
    8. 'f' → logprob: -6.270633220672607
    9. 'inp' → logprob: -6.270633220672607
    10. 'r' → logprob: -7.520633220672607

Token 6: 's' (ID: 82)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.004000634420663118
    2. 'argv' → logprob: -5.879000663757324
    3. 'std' → logprob: -7.629000663757324
    4. '.stdin' → logprob: -8.004000663757324
    5. 's' → logprob: -9.129000663757324
    6. '__' → logprob: -9.379000663757324
    7. 'in' → logprob: -9.879000663757324
    8. 'st' → logprob: -10.379000663757324
    9. '(stdin' → logprob: -10.629000663757324
    10. 'sys' → logprob: -11.004000663757324

Token 7: ';' (ID: 26)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.023413995280861855
    2. 'td' → logprob: -4.023414134979248
    3. '.' → logprob: -5.773414134979248
    4. '.t' → logprob: -7.023414134979248
    5. '_t' → logprob: -7.773414134979248
    6. 'r' → logprob: -8.52341365814209
    7. '._' → logprob: -9.14841365814209
    8. '.__' → logprob: -9.64841365814209
    9. '_' → logprob: -9.77341365814209
    10. 'stdin' → logprob: -9.77341365814209

Token 8: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3517823815345764
    2. 'for' → logprob: -1.3517823219299316
    3. ' __' → logprob: -4.601782321929932
    4. '_' → logprob: -4.851782321929932
    5. ' for' → logprob: -4.851782321929932
    6. 'stdin' → logprob: -5.351782321929932
    7. '.' → logprob: -5.851782321929932
    8. 'input' → logprob: -7.601782321929932
    9. 'import' → logprob: -7.601782321929932
    10. 'argv' → logprob: -7.851782321929932

Token 9: 'N' (ID: 45)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2664456789934775e-06
    2. 'print' → logprob: -14.000000953674316
    3. '_s' → logprob: -15.750000953674316
    4. ' s' → logprob: -16.375001907348633
    5. '__' → logprob: -16.750001907348633
    6. 'stdin' → logprob: -17.250001907348633
    7. 'import' → logprob: -17.875001907348633
    8. 'p' → logprob: -17.875001907348633
    9. '<|end|>' → logprob: -17.875001907348633
    10. 'input' → logprob: -18.250001907348633

Token 10: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.671154260635376
    2. '.' → logprob: -1.296154260635376
    3. '__' → logprob: -2.296154260635376
    4. ' =' → logprob: -3.171154260635376
    5. '_' → logprob: -3.421154260635376
    6. '[' → logprob: -3.921154260635376
    7. '.__' → logprob: -4.421154022216797
    8. '.=' → logprob: -6.921154022216797
    9. ',' → logprob: -7.296154022216797
    10. '[]' → logprob: -7.796154022216797

Token 11: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9173051118850708
    2. '(input' → logprob: -1.0423051118850708
    3. '(__' → logprob: -1.4173051118850708
    4. '(stdin' → logprob: -5.667304992675781
    5. '((' → logprob: -7.292304992675781
    6. 'input' → logprob: -7.542304992675781
    7. '('' → logprob: -8.667304992675781
    8. '()' → logprob: -9.042304992675781
    9. '__' → logprob: -9.417304992675781
    10. '(
' → logprob: -9.667304992675781

Token 12: '());' (ID: 26284)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.37910881638526917
    2. '()' → logprob: -1.7541087865829468
    3. ')' → logprob: -2.0041089057922363
    4. '(' → logprob: -5.379108905792236
    5. '))' → logprob: -6.504108905792236
    6. '()))' → logprob: -7.879108905792236
    7. '().' → logprob: -8.379108428955078
    8. '')' → logprob: -8.629108428955078
    9. ' ())' → logprob: -9.004108428955078
    10. '")' → logprob: -9.254108428955078

Token 13: '_' (ID: 62)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6353294253349304
    2. '
' → logprob: -1.2603294849395752
    3. '\n' → logprob: -2.010329484939575
    4. ';' → logprob: -4.385329246520996
    5. '' → logprob: -4.635329246520996
    6. ' for' → logprob: -4.635329246520996
    7. '\' → logprob: -4.760329246520996
    8. ';
' → logprob: -5.510329246520996
    9. '
' → logprob: -6.510329246520996
    10. '```' → logprob: -6.510329246520996

Token 14: 'S' (ID: 50)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07821358740329742
    2. 's' → logprob: -3.078213691711426
    3. '=' → logprob: -4.578213691711426
    4. '_=' → logprob: -5.453213691711426
    5. '_s' → logprob: -5.578213691711426
    6. 'sum' → logprob: -5.953213691711426
    7. 'input' → logprob: -6.328213691711426
    8. 'lst' → logprob: -6.953213691711426
    9. 'data' → logprob: -7.453213691711426
    10. '_input' → logprob: -7.453213691711426

Token 15: ',_' (ID: 46431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08070842176675797
    2. '.' → logprob: -3.2057085037231445
    3. '=input' → logprob: -3.9557085037231445
    4. '_' → logprob: -4.5807085037231445
    5. ' =' → logprob: -6.3307085037231445
    6. '[' → logprob: -6.7057085037231445
    7. '_=' → logprob: -7.4557085037231445
    8. 'tring' → logprob: -7.7057085037231445
    9. ')' → logprob: -8.080708503723145
    10. 'tr' → logprob: -8.080708503723145

Token 16: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.27050167322158813
    2. 's' → logprob: -2.7705016136169434
    3. 'E' → logprob: -3.1455016136169434
    4. 'I' → logprob: -4.020501613616943
    5. 'M' → logprob: -4.520501613616943
    6. 'R' → logprob: -4.770501613616943
    7. 'A' → logprob: -4.895501613616943
    8. 'C' → logprob: -4.895501613616943
    9. 'D' → logprob: -4.895501613616943
    10. 'K' → logprob: -5.020501613616943

Token 17: '=[],' (ID: 171004)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.033808790147304535
    2. ' =' → logprob: -3.533808708190918
    3. ',' → logprob: -5.658808708190918
    4. '=[]' → logprob: -8.158808708190918
    5. '={}' → logprob: -9.158808708190918
    6. '=input' → logprob: -10.283808708190918
    7. '=[],' → logprob: -10.533808708190918
    8. '=[' → logprob: -11.158808708190918
    9. '_' → logprob: -11.533808708190918
    10. '={},' → logprob: -11.783808708190918

Token 18: '[]
' (ID: 41761)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.015837859362363815
    2. '0' → logprob: -5.640837669372559
    3. '[]
' → logprob: -5.890837669372559
    4. '_' → logprob: -6.140837669372559
    5. '[' → logprob: -6.515837669372559
    6. 'list' → logprob: -7.265837669372559
    7. ' []' → logprob: -7.515837669372559
    8. '[]}' → logprob: -7.765837669372559
    9. '```' → logprob: -8.265837669372559
    10. '<|end|>' → logprob: -8.265837669372559

Token 19: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011362100951373577
    2. ' for' → logprob: -4.636362075805664
    3. '[' → logprob: -7.886362075805664
    4. ';' → logprob: -8.761362075805664
    5. '
' → logprob: -8.886362075805664
    6. '_' → logprob: -9.011362075805664
    7. '(' → logprob: -9.136362075805664
    8. '' → logprob: -9.261362075805664
    9. '<|end|>' → logprob: -9.386362075805664
    10. '=' → logprob: -9.511362075805664

Token 20: ' __' (ID: 2516)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.1405428647994995
    2. ' _' → logprob: -1.2655428647994995
    3. '_' → logprob: -1.6405428647994995
    4. '_i' → logprob: -2.140542984008789
    5. 'i' → logprob: -2.640542984008789
    6. '__' → logprob: -5.015542984008789
    7. ' __' → logprob: -5.015542984008789
    8. ' ' → logprob: -7.390542984008789
    9. '_s' → logprob: -7.890542984008789
    10. '_S' → logprob: -8.890542984008789

Token 21: 'i' (ID: 72)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.671085774898529
    2. 'i' → logprob: -1.2960858345031738
    3. '_i' → logprob: -1.6710858345031738
    4. '_N' → logprob: -5.421085834503174
    5. '_s' → logprob: -5.546085834503174
    6. '__' → logprob: -5.796085834503174
    7. '_n' → logprob: -5.921085834503174
    8. 's' → logprob: -6.046085834503174
    9. 'N' → logprob: -6.046085834503174
    10. 'x' → logprob: -6.171085834503174

Token 22: '__' (ID: 771)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.42882606387138367
    2. 'in' → logprob: -1.053826093673706
    3. ' ' → logprob: -9.178826332092285
    4. '_' → logprob: -12.553826332092285
    5. '	in' → logprob: -12.678826332092285
    6. 'import' → logprob: -12.803826332092285
    7. 'n' → logprob: -12.928826332092285
    8. '_in' → logprob: -13.053826332092285
    9. 'range' → logprob: -13.678826332092285
    10. ' _' → logprob: -14.053826332092285

Token 23: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17981164157390594
    2. 'in' → logprob: -1.8048115968704224
    3. ' ' → logprob: -10.179811477661133
    4. 'range' → logprob: -11.679811477661133
    5. 'import' → logprob: -12.179811477661133
    6. '_in' → logprob: -12.429811477661133
    7. '_' → logprob: -12.804811477661133
    8. '__' → logprob: -13.929811477661133
    9. '	in' → logprob: -14.179811477661133
    10. ',' → logprob: -14.429811477661133

Token 24: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25205695629119873
    2. ' range' → logprob: -1.5020569562911987
    3. '__' → logprob: -9.127057075500488
    4. ' __' → logprob: -12.002057075500488
    5. '_' → logprob: -12.502057075500488
    6. '_range' → logprob: -13.002057075500488
    7. ' ' → logprob: -13.502057075500488
    8. 's' → logprob: -13.627057075500488
    9. '(range' → logprob: -14.002057075500488
    10. '	range' → logprob: -14.002057075500488

Token 25: '(__' (ID: 11782)
  Prédit: '(__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(__' → logprob: -0.16024371981620789
    2. '(' → logprob: -1.9102437496185303
    3. '($__' → logprob: -11.28524398803711
    4. '(
' → logprob: -12.78524398803711
    5. ' (__' → logprob: -13.53524398803711
    6. ' (' → logprob: -14.53524398803711
    7. '__' → logprob: -15.03524398803711
    8. ')(__' → logprob: -15.16024398803711
    9. '(`' → logprob: -15.41024398803711
    10. '(n' → logprob: -15.41024398803711

Token 26: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00025883622583933175
    2. ' N' → logprob: -9.625258445739746
    3. '_N' → logprob: -9.750258445739746
    4. 'S' → logprob: -10.250258445739746
    5. '__' → logprob: -10.500258445739746
    6. 's' → logprob: -10.750258445739746
    7. ' ' → logprob: -10.875258445739746
    8. 'i' → logprob: -11.250258445739746
    9. '1' → logprob: -12.625258445739746
    10. '0' → logprob: -12.625258445739746

Token 27: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012054694816470146
    2. ' ):' → logprob: -7.5012054443359375
    3. ')' → logprob: -8.251205444335938
    4. ':' → logprob: -8.751205444335938
    5. '):
' → logprob: -8.876205444335938
    6. '+' → logprob: -9.626205444335938
    7. ',' → logprob: -11.001205444335938
    8. ' ' → logprob: -13.376205444335938
    9. ')):' → logprob: -13.626205444335938
    10. '-' → logprob: -14.251205444335938

Token 28: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25869476795196533
    2. ' _' → logprob: -1.8836947679519653
    3. ' s' → logprob: -3.883694648742676
    4. '<|end|>' → logprob: -4.133694648742676
    5. ' 
' → logprob: -4.758694648742676
    6. '_' → logprob: -5.008694648742676
    7. '    ' → logprob: -5.258694648742676
    8. '_s' → logprob: -5.508694648742676
    9. '   ' → logprob: -5.758694648742676
    10. ' __' → logprob: -6.008694648742676

Token 29: ' *_' (ID: 48354)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -1.0572348833084106
    2. '_s' → logprob: -1.3072348833084106
    3. 's' → logprob: -2.182234764099121
    4. ' s' → logprob: -2.307234764099121
    5. '_S' → logprob: -2.557234764099121
    6. 'a' → logprob: -4.307234764099121
    7. '_' → logprob: -4.432234764099121
    8. '__' → logprob: -4.557234764099121
    9. ' __' → logprob: -4.682234764099121
    10. ' ' → logprob: -4.807234764099121

Token 30: 'A' (ID: 32)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5077314972877502
    2. 'S' → logprob: -1.1327314376831055
    3. '_s' → logprob: -3.2577314376831055
    4. 'line' → logprob: -5.1327314376831055
    5. 'a' → logprob: -5.5077314376831055
    6. '_S' → logprob: -6.0077314376831055
    7. '__' → logprob: -6.1327314376831055
    8. 'l' → logprob: -6.3827314376831055
    9. '=' → logprob: -6.5077314376831055
    10. 'input' → logprob: -6.6327314376831055

Token 31: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014436023309826851
    2. ' =' → logprob: -5.2644362449646
    3. '=input' → logprob: -5.5144362449646
    4. ',' → logprob: -6.1394362449646
    5. '=line' → logprob: -6.7644362449646
    6. ',__' → logprob: -7.5144362449646
    7. ',_' → logprob: -7.8894362449646
    8. '=_' → logprob: -8.264435768127441
    9. '_=' → logprob: -8.889435768127441
    10. '=list' → logprob: -9.389435768127441

Token 32: '=' (ID: 28)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6711316108703613
    2. 's' → logprob: -1.9211316108703613
    3. ' __' → logprob: -2.1711316108703613
    4. 'a' → logprob: -2.7961316108703613
    5. '_s' → logprob: -3.4211316108703613
    6. 'b' → logprob: -4.171131610870361
    7. 'x' → logprob: -4.296131610870361
    8. '_S' → logprob: -4.671131610870361
    9. 'c' → logprob: -4.921131610870361
    10. ' =' → logprob: -4.921131610870361

Token 33: '__' (ID: 771)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.020080475136637688
    2. '__' → logprob: -4.02008056640625
    3. ' map' → logprob: -6.39508056640625
    4. 'int' → logprob: -9.02008056640625
    5. 'list' → logprob: -9.52008056640625
    6. 'next' → logprob: -11.14508056640625
    7. ' __' → logprob: -11.39508056640625
    8. 'input' → logprob: -11.39508056640625
    9. '(map' → logprob: -11.89508056640625
    10. 'line' → logprob: -13.02008056640625

Token 34: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -3.011373155459296e-05
    2. 'S' → logprob: -11.250030517578125
    3. ''s' → logprob: -11.875030517578125
    4. '_s' → logprob: -12.750030517578125
    5. 'input' → logprob: -12.875030517578125
    6. '`s' → logprob: -14.000030517578125
    7. ' ' → logprob: -14.250030517578125
    8. 'list' → logprob: -14.750030517578125
    9. '```' → logprob: -14.750030517578125
    10. 'i' → logprob: -14.750030517578125

Token 35: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00020854694594163448
    2. 'read' → logprob: -8.625208854675293
    3. '.readlines' → logprob: -11.125208854675293
    4. ' readline' → logprob: -11.875208854675293
    5. '.' → logprob: -12.375208854675293
    6. '.read' → logprob: -14.000208854675293
    7. 'line' → logprob: -14.125208854675293
    8. 'buffer' → logprob: -14.500208854675293
    9. '__' → logprob: -15.375208854675293
    10. 'rstrip' → logprob: -15.875208854675293

Token 36: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11348094791173935
    2. '().' → logprob: -2.238481044769287
    3. '())' → logprob: -9.238480567932129
    4. '`()' → logprob: -9.363480567932129
    5. ')' → logprob: -9.738480567932129
    6. '()
' → logprob: -9.988480567932129
    7. '```' → logprob: -10.113480567932129
    8. ' ()' → logprob: -10.113480567932129
    9. '()`' → logprob: -10.488480567932129
    10. '().__' → logprob: -10.488480567932129

Token 37: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.7989327907562256
    2. 'strip' → logprob: -0.7989327907562256
    3. 'rstrip' → logprob: -2.2989327907562256
    4. 'read' → logprob: -11.923933029174805
    5. 'decode' → logprob: -12.298933029174805
    6. 'rs' → logprob: -12.298933029174805
    7. ' split' → logprob: -15.673933029174805
    8. 'rst' → logprob: -16.048933029174805
    9. 'replace' → logprob: -16.173933029174805
    10. 'spl' → logprob: -16.423933029174805

Token 38: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005326262209564447
    2. '(' → logprob: -5.255326271057129
    3. '('' → logprob: -10.755326271057129
    4. '();' → logprob: -10.880326271057129
    5. '()]' → logprob: -11.380326271057129
    6. '()
' → logprob: -11.505326271057129
    7. '())' → logprob: -11.755326271057129
    8. '(),' → logprob: -11.880326271057129
    9. '()\' → logprob: -13.005326271057129
    10. ' ()' → logprob: -13.130326271057129

Token 39: '   ' (ID: 271)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.6125880479812622
    2. '<|end|>' → logprob: -1.6125880479812622
    3. ' _' → logprob: -1.9875880479812622
    4. ' ' → logprob: -1.9875880479812622
    5. '_S' → logprob: -2.4875879287719727
    6. '   ' → logprob: -3.1125879287719727
    7. ',' → logprob: -3.3625879287719727
    8. ')' → logprob: -3.6125879287719727
    9. '_T' → logprob: -3.8625879287719727
    10. '_s' → logprob: -4.362587928771973

Token 40: ' _' (ID: 1175)
  Prédit: '_S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_S' → logprob: -0.25885793566703796
    2. '_T' → logprob: -2.3838579654693604
    3. ' _' → logprob: -2.7588579654693604
    4. 'if' → logprob: -3.3838579654693604
    5. ' if' → logprob: -4.758857727050781
    6. '   ' → logprob: -5.008857727050781
    7. 'S' → logprob: -5.633857727050781
    8. ' ' → logprob: -5.883857727050781
    9. '_' (adapté à ' _') → logprob: -6.133857727050781
    10. '_s' → logprob: -6.258857727050781

Token 41: 'T' (ID: 51)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6984418630599976
    2. 'S' → logprob: -0.6984418630599976
    3. 'T' → logprob: -5.698441982269287
    4. '_S' → logprob: -6.698441982269287
    5. '_A' → logprob: -7.323441982269287
    6. '_T' → logprob: -10.448441505432129
    7. '_s' → logprob: -12.823441505432129
    8. '_' → logprob: -13.448441505432129
    9. '```' → logprob: -14.698441505432129
    10. ' A' → logprob: -14.698441505432129

Token 42: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007451872224919498
    2. '.extend' → logprob: -7.8757452964782715
    3. '.' → logprob: -8.000744819641113
    4. '.ap' → logprob: -10.875744819641113
    5. '.app' → logprob: -12.125744819641113
    6. 'append' → logprob: -13.125744819641113
    7. '.setdefault' → logprob: -14.000744819641113
    8. '.add' → logprob: -14.625744819641113
    9. ' .' → logprob: -14.625744819641113
    10. '_append' → logprob: -14.750744819641113

Token 43: '(int' (ID: 2742)
  Prédit: '(_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.030224094167351723
    2. '(int' → logprob: -3.655224084854126
    3. '(' → logprob: -6.030224323272705
    4. '(A' → logprob: -7.405224323272705
    5. '(float' → logprob: -8.030223846435547
    6. '_A' → logprob: -8.780223846435547
    7. '(str' → logprob: -9.155223846435547
    8. '(tuple' → logprob: -9.530223846435547
    9. '((_' → logprob: -9.655223846435547
    10. '(__' → logprob: -9.905223846435547

Token 44: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.005292815156280994
    2. '(' → logprob: -5.255292892456055
    3. '(A' → logprob: -10.505292892456055
    4. '_A' → logprob: -10.880292892456055
    5. ')(_' → logprob: -12.755292892456055
    6. '(
' → logprob: -13.005292892456055
    7. ')_' → logprob: -13.505292892456055
    8. '((_' → logprob: -14.130292892456055
    9. '_' → logprob: -14.255292892456055
    10. '('' → logprob: -14.630292892456055

Token 45: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0002646735229063779
    2. '_A' → logprob: -8.250265121459961
    3. ' A' → logprob: -13.875265121459961
    4. 'А' → logprob: -14.125265121459961
    5. 'a' → logprob: -14.500265121459961
    6. '_' → logprob: -15.125265121459961
    7. '	A' → logprob: -15.875265121459961
    8. 'S' → logprob: -16.00026512145996
    9. 'T' → logprob: -16.12526512145996
    10. '__' → logprob: -16.12526512145996

Token 46: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1004655584692955
    2. '[-' → logprob: -2.3504655361175537
    3. '.pop' → logprob: -8.350465774536133
    4. '0' → logprob: -11.600465774536133
    5. '(' → logprob: -12.725465774536133
    6. '-' → logprob: -12.975465774536133
    7. '[
' → logprob: -13.475465774536133
    8. ')' → logprob: -13.725465774536133
    9. ' [' → logprob: -13.850465774536133
    10. '[_' → logprob: -13.975465774536133

Token 47: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07370372116565704
    2. '-' → logprob: -3.3237037658691406
    3. '1' → logprob: -3.4487037658691406
    4. ' ' → logprob: -6.073703765869141
    5. '2' → logprob: -7.198703765869141
    6. ' -' → logprob: -9.32370376586914
    7. '3' → logprob: -10.07370376586914
    8. '  ' → logprob: -11.44870376586914
    9. '[' → logprob: -11.57370376586914
    10. '   ' → logprob: -11.57370376586914

Token 48: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.010450361296534538
    2. '])' → logprob: -4.63545036315918
    3. ']' → logprob: -7.51045036315918
    4. '))' → logprob: -10.38545036315918
    5. '']))' → logprob: -10.51045036315918
    6. ']))
' → logprob: -10.76045036315918
    7. ')' → logprob: -10.76045036315918
    8. ')])' → logprob: -11.63545036315918
    9. '[' → logprob: -11.76045036315918
    10. '])-' → logprob: -12.38545036315918

Token 49: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: ' _' (ID: 1175)
  Prédit: '_S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_S' → logprob: -0.06426333636045456
    2. ')' → logprob: -3.189263343811035
    3. ' _' → logprob: -4.564263343811035
    4. 'if' → logprob: -5.689263343811035
    5. ')
' → logprob: -6.189263343811035
    6. '   ' → logprob: -6.439263343811035
    7. '_A' → logprob: -7.064263343811035
    8. '_' (adapté à ' _') → logprob: -7.564263343811035
    9. '_T' → logprob: -7.564263343811035
    10. ' if' → logprob: -7.814263343811035

Token 51: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -3.054500666621607e-06
    2. '_S' → logprob: -13.50000286102295
    3. 'A' → logprob: -13.62500286102295
    4. 'T' → logprob: -15.37500286102295
    5. ' S' → logprob: -16.125003814697266
    6. '_s' → logprob: -18.000003814697266
    7. '_' → logprob: -18.500003814697266
    8. ' ' → logprob: -18.625003814697266
    9. '	S' → logprob: -18.750003814697266
    10. '<|end|>' → logprob: -19.000003814697266

Token 52: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.009855722077190876
    2. '.' → logprob: -4.7598557472229
    3. '.extend' → logprob: -6.7598557472229
    4. '+=' → logprob: -10.384855270385742
    5. 'append' → logprob: -10.759855270385742
    6. ' .' → logprob: -11.634855270385742
    7. '+.' → logprob: -11.634855270385742
    8. '.app' → logprob: -12.634855270385742
    9. '+' → logprob: -13.259855270385742
    10. '.ap' → logprob: -13.384855270385742

Token 53: '(_' (ID: 4963)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.4038785696029663
    2. '(_' → logprob: -1.1538785696029663
    3. '(str' → logprob: -5.028878688812256
    4. 'int' → logprob: -5.528878688812256
    5. '(' → logprob: -5.778878688812256
    6. '(float' → logprob: -6.778878688812256
    7. '(A' → logprob: -6.778878688812256
    8. 'str' → logprob: -8.278878211975098
    9. '_A' → logprob: -8.403878211975098
    10. '_' → logprob: -9.403878211975098

Token 54: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.12481611967086792
    2. '_A' → logprob: -2.4998161792755127
    3. '0' → logprob: -3.6248161792755127
    4. 'int' → logprob: -4.874815940856934
    5. '-A' → logprob: -8.499815940856934
    6. '1' → logprob: -8.624815940856934
    7. 'a' → logprob: -8.999815940856934
    8. '(A' → logprob: -9.749815940856934
    9. '(int' → logprob: -9.999815940856934
    10. '2' → logprob: -9.999815940856934

Token 55: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004213786742184311
    2. '0' → logprob: -7.875421524047852
    3. ' [' → logprob: -10.625421524047852
    4. ')' → logprob: -11.750421524047852
    5. '[
' → logprob: -12.625421524047852
    6. '][' → logprob: -13.375421524047852
    7. ')[' → logprob: -14.375421524047852
    8. '(' → logprob: -14.500421524047852
    9. '()[' → logprob: -14.875421524047852
    10. ']' → logprob: -15.125421524047852

Token 56: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3902033970225602e-05
    2. ' ' → logprob: -11.750014305114746
    3. '[' → logprob: -12.875014305114746
    4. '1' → logprob: -13.500014305114746
    5. '2' → logprob: -14.750014305114746
    6. ']' → logprob: -15.125014305114746
    7. '   ' → logprob: -15.250014305114746
    8. '-' → logprob: -15.562514305114746
    9. '][' → logprob: -16.25001335144043
    10. '])' → logprob: -16.56251335144043

Token 57: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023470595479011536
    2. '])' → logprob: -3.773470640182495
    3. ']' → logprob: -9.148470878601074
    4. '))' → logprob: -10.398470878601074
    5. ')])' → logprob: -10.523470878601074
    6. '[' → logprob: -10.648470878601074
    7. ')]' → logprob: -10.898470878601074
    8. ''])' → logprob: -12.148470878601074
    9. ' )' → logprob: -12.773470878601074
    10. ')
' → logprob: -12.898470878601074

Token 58: '__' (ID: 771)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8953334093093872
    2. 'for' → logprob: -0.8953334093093872
    3. '_' → logprob: -3.0203332901000977
    4. 'if' → logprob: -3.8953332901000977
    5. '#' → logprob: -4.020333290100098
    6. '_
' → logprob: -4.145333290100098
    7. '' → logprob: -4.520333290100098
    8. 'max' → logprob: -5.145333290100098
    9. 's' → logprob: -5.270333290100098
    10. 'i' → logprob: -5.270333290100098

Token 59: 'X' (ID: 55)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.32139235734939575
    2. 'S' → logprob: -2.196392297744751
    3. 'T' → logprob: -2.946392297744751
    4. 'for' → logprob: -3.446392297744751
    5. 'N' → logprob: -4.19639253616333
    6. 'max' → logprob: -4.32139253616333
    7. 's' → logprob: -4.57139253616333
    8. 'M' → logprob: -5.19639253616333
    9. '_' → logprob: -5.57139253616333
    10. 't' → logprob: -5.57139253616333

Token 60: '=input' (ID: 87911)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7258514165878296
    2. '_' → logprob: -1.1008514165878296
    3. ' =' → logprob: -2.100851535797119
    4. ',' → logprob: -4.225851535797119
    5. '[' → logprob: -4.225851535797119
    6. '=[]' → logprob: -4.225851535797119
    7. '_=' → logprob: -5.600851535797119
    8. '.' → logprob: -5.725851535797119
    9. '=_' → logprob: -6.725851535797119
    10. '__' → logprob: -6.850851535797119

Token 61: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.34989356994628906
    2. '(' → logprob: -1.224893569946289
    3. '.' → logprob: -7.599893569946289
    4. ')' → logprob: -8.724893569946289
    5. '<|end|>' → logprob: -8.724893569946289
    6. '().' → logprob: -8.849893569946289
    7. '```' → logprob: -9.349893569946289
    8. '(
' → logprob: -9.599893569946289
    9. '"' → logprob: -10.099893569946289
    10. '(

' → logprob: -10.599893569946289

Token 62: 'def' (ID: 1314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2987329959869385
    2. 'for' → logprob: -1.2987329959869385
    3. 'i' → logprob: -1.7987329959869385
    4. 'if' → logprob: -2.1737329959869385
    5. 's' → logprob: -3.6737329959869385
    6. '_i' → logprob: -3.6737329959869385
    7. '__' → logprob: -3.7987329959869385
    8. '[' → logprob: -3.9237329959869385
    9. 'x' → logprob: -4.673732757568359
    10. '.' → logprob: -4.923732757568359

Token 63: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1521316021680832
    2. ' _' → logprob: -2.2771315574645996
    3. '_' → logprob: -3.4021315574645996
    4. ' space' → logprob: -6.2771315574646
    5. '_space' → logprob: -7.2771315574646
    6. ' f' → logprob: -7.5271315574646
    7. ' check' → logprob: -8.527132034301758
    8. ' find' → logprob: -8.527132034301758
    9. ' main' → logprob: -8.902132034301758
    10. ' solve' → logprob: -9.027132034301758

Token 64: 'p' (ID: 79)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.4757245779037476
    2. '_' → logprob: -2.225724697113037
    3. 'solve' → logprob: -2.975724697113037
    4. 'c' → logprob: -3.225724697113037
    5. 'm' → logprob: -3.225724697113037
    6. 's' → logprob: -3.350724697113037
    7. 'i' → logprob: -3.475724697113037
    8. 'e' → logprob: -3.725724697113037
    9. 'd' → logprob: -3.725724697113037
    10. 'a' → logprob: -3.975724697113037

Token 65: '(a' (ID: 6271)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.004920043051242828
    2. '_r' → logprob: -5.62992000579834
    3. 'rin' → logprob: -8.37992000579834
    4. 'ut' → logprob: -9.00492000579834
    5. 'rocess' → logprob: -9.00492000579834
    6. '_' → logprob: -9.25492000579834
    7. 'rim' → logprob: -9.62992000579834
    8. 'ri' → logprob: -9.87992000579834
    9. '(r' → logprob: -10.12992000579834
    10. 'lay' → logprob: -10.25492000579834

Token 66: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.688787579536438
    2. '):' → logprob: -0.813787579536438
    3. ')' → logprob: -3.0637874603271484
    4. '[' → logprob: -6.188787460327148
    5. ',a' → logprob: -6.313787460327148
    6. ',p' → logprob: -7.438787460327148
    7. ' ,' → logprob: -7.438787460327148
    8. '[]):' → logprob: -7.813787460327148
    9. ',b' → logprob: -8.313787460327148
    10. '_' → logprob: -8.438787460327148

Token 67: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009317077696323395
    2. ')' → logprob: -4.884316921234131
    3. ',' → logprob: -6.759316921234131
    4. ':' → logprob: -8.884317398071289
    5. '):
' → logprob: -8.884317398071289
    6. ' ):' → logprob: -9.259317398071289
    7. ',a' → logprob: -10.009317398071289
    8. '_' → logprob: -10.509317398071289
    9. ',b' → logprob: -11.134317398071289
    10. ',p' → logprob: -11.759317398071289

Token 68: ' return' (ID: 622)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3581596612930298
    2. ' ' → logprob: -1.4831596612930298
    3. '   ' → logprob: -1.4831596612930298
    4. ' 
' → logprob: -1.8581596612930298
    5. ' return' → logprob: -3.4831595420837402
    6. '<|end|>' → logprob: -3.9831595420837402
    7. '    
' → logprob: -4.10815954208374
    8. ':return' → logprob: -4.35815954208374
    9. '    ' → logprob: -4.48315954208374
    10. '	return' → logprob: -4.73315954208374

Token 69: ' sum' (ID: 4215)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.37070050835609436
    2. ' a' → logprob: -1.745700478553772
    3. '1' → logprob: -3.3707005977630615
    4. 'int' → logprob: -4.370700359344482
    5. '(a' → logprob: -4.370700359344482
    6. ' ' → logprob: -4.620700359344482
    7. '(' → logprob: -4.620700359344482
    8. 'abs' → logprob: -4.745700359344482
    9. 'max' → logprob: -5.245700359344482
    10. 'len' → logprob: -5.495700359344482

Token 70: '(b' (ID: 3229)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08055390417575836
    2. '((' → logprob: -2.8305540084838867
    3. '(a' → logprob: -4.080554008483887
    4. '(abs' → logprob: -7.455554008483887
    5. '([' → logprob: -8.455554008483887
    6. '(lambda' → logprob: -9.330554008483887
    7. '(
' → logprob: -9.330554008483887
    8. '(((' → logprob: -9.580554008483887
    9. ' (' → logprob: -9.705554008483887
    10. '(ord' → logprob: -9.705554008483887

Token 71: '[a' (ID: 32035)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.320710301399231
    2. '[a' → logprob: -1.445710301399231
    3. '.get' → logprob: -2.4457101821899414
    4. '.count' → logprob: -2.5707101821899414
    5. '[' → logprob: -2.9457101821899414
    6. ')' → logprob: -3.0707101821899414
    7. '.index' → logprob: -3.1957101821899414
    8. '[x' → logprob: -3.1957101821899414
    9. '[:' → logprob: -3.4457101821899414
    10. '==' → logprob: -4.070710182189941

Token 72: '+' (ID: 10)
  Prédit: ':b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':b' → logprob: -0.9450796842575073
    2. ':' → logprob: -1.0700796842575073
    3. '])' → logprob: -2.945079803466797
    4. ']' → logprob: -3.320079803466797
    5. '[b' → logprob: -3.695079803466797
    6. '][' → logprob: -3.820079803466797
    7. ':i' → logprob: -3.945079803466797
    8. '[i' → logprob: -3.945079803466797
    9. ':]' → logprob: -4.195079803466797
    10. ']==' → logprob: -4.195079803466797

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02651705965399742
    2. ':' → logprob: -4.151516914367676
    3. ':]' → logprob: -5.776516914367676
    4. ']' → logprob: -6.151516914367676
    5. ']+' → logprob: -6.401516914367676
    6. '+' → logprob: -6.776516914367676
    7. '-' → logprob: -7.526516914367676
    8. '])' → logprob: -7.776516914367676
    9. ' ' → logprob: -8.151516914367676
    10. ':].' → logprob: -8.901516914367676

Token 74: ':])
' (ID: 109592)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7066499590873718
    2. ':]' → logprob: -1.2066500186920166
    3. ']' → logprob: -1.8316500186920166
    4. '])' → logprob: -4.7066497802734375
    5. ']<' → logprob: -4.7066497802734375
    6. ']>' → logprob: -5.2066497802734375
    7. ']-' → logprob: -5.4566497802734375
    8. ':].' → logprob: -5.4566497802734375
    9. ':],' → logprob: -5.7066497802734375
    10. ']==' → logprob: -5.9566497802734375

Token 75: 'print' (ID: 1598)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5153781771659851
    2. '_' → logprob: -1.8903782367706299
    3. ' ' → logprob: -2.89037823677063
    4. '*' → logprob: -3.14037823677063
    5. '<|end|>' → logprob: -3.26537823677063
    6. '+
' → logprob: -3.64037823677063
    7. '__' → logprob: -4.140377998352051
    8. '[' → logprob: -4.265377998352051
    9. '-' → logprob: -4.765377998352051
    10. '%' → logprob: -4.765377998352051

Token 76: '(_' (ID: 4963)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1134546622633934
    2. '(_' → logprob: -2.238454580307007
    3. '(__' → logprob: -8.988454818725586
    4. '('' → logprob: -9.113454818725586
    5. '('_' → logprob: -9.488454818725586
    6. '("_' → logprob: -9.738454818725586
    7. '(p' → logprob: -9.863454818725586
    8. '()' → logprob: -10.613454818725586
    9. '((' → logprob: -10.613454818725586
    10. '(len' → logprob: -10.613454818725586

Token 77: 'p' (ID: 79)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.04613340646028519
    2. 'S' → logprob: -3.796133518218994
    3. 'p' → logprob: -3.921133518218994
    4. 'N' → logprob: -6.796133518218994
    5. 'T' → logprob: -6.921133518218994
    6. '_p' → logprob: -7.796133518218994
    7. '_X' → logprob: -8.671133041381836
    8. 'i' → logprob: -10.546133041381836
    9. '_S' → logprob: -10.796133041381836
    10. 'P' → logprob: -11.421133041381836

Token 78: '(_' (ID: 4963)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.061708491295576096
    2. '(__' → logprob: -3.811708450317383
    3. '(-' → logprob: -4.186708450317383
    4. '(len' → logprob: -4.311708450317383
    5. '(_' → logprob: -4.936708450317383
    6. '((' → logprob: -7.061708450317383
    7. '(S' → logprob: -8.811708450317383
    8. ')(__' → logprob: -8.811708450317383
    9. ' (' → logprob: -8.936708450317383
    10. '(
' → logprob: -9.311708450317383

Token 79: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6812918782234192
    2. 'X' → logprob: -1.1812918186187744
    3. 'T' → logprob: -1.8062918186187744
    4. 'N' → logprob: -3.8062918186187744
    5. '_S' → logprob: -8.431291580200195
    6. 'x' → logprob: -8.806291580200195
    7. '_T' → logprob: -9.431291580200195
    8. 'i' → logprob: -9.806291580200195
    9. 't' → logprob: -9.931291580200195
    10. '_X' → logprob: -10.931291580200195

Token 80: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.0017813296290114522
    2. '.' → logprob: -6.626781463623047
    3. ' .' → logprob: -8.626781463623047
    4. '.find' → logprob: -9.251781463623047
    5. 'index' → logprob: -9.876781463623047
    6. '.__' → logprob: -10.251781463623047
    7. ',' → logprob: -10.626781463623047
    8. '._' → logprob: -11.751781463623047
    9. '_.' → logprob: -11.751781463623047
    10. '.s' → logprob: -11.876781463623047

Token 81: '(__' (ID: 11782)
  Prédit: '(__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(__' → logprob: -0.04994752258062363
    2. '(' → logprob: -3.049947500228882
    3. ')(__' → logprob: -7.549947738647461
    4. '('' → logprob: -7.924947738647461
    5. '('__' → logprob: -9.174947738647461
    6. '(_' → logprob: -9.299947738647461
    7. '($__' → logprob: -9.674947738647461
    8. '(__('' → logprob: -9.674947738647461
    9. '((' → logprob: -10.424947738647461
    10. '(
' → logprob: -10.549947738647461

Token 82: 'X' (ID: 55)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.15299712121486664
    2. 'X' → logprob: -2.1529970169067383
    3. '_X' → logprob: -3.7779970169067383
    4. ' __' → logprob: -5.902997016906738
    5. ' X' → logprob: -9.527997016906738
    6. '(__' → logprob: -11.652997016906738
    7. ' ' → logprob: -11.902997016906738
    8. ''' → logprob: -11.902997016906738
    9. '_x' → logprob: -12.277997016906738
    10. '___' → logprob: -12.402997016906738

Token 83: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.01874784380197525
    2. ')' → logprob: -4.393747806549072
    3. ')+' → logprob: -5.143747806549072
    4. ' ),' → logprob: -9.14374828338623
    5. '),
' → logprob: -10.26874828338623
    6. '+' → logprob: -10.26874828338623
    7. '),(' → logprob: -10.26874828338623
    8. '-' → logprob: -10.51874828338623
    9. '))' → logprob: -10.89374828338623
    10. ',' → logprob: -11.01874828338623

Token 84: ' _' (ID: 1175)
  Prédit: '_T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_T' → logprob: -0.02374839596450329
    2. '_S' → logprob: -3.7737483978271484
    3. '_t' → logprob: -8.148748397827148
    4. ' ' → logprob: -9.398748397827148
    5. ' _' → logprob: -9.523748397827148
    6. '_s' → logprob: -10.398748397827148
    7. 'T' → logprob: -11.773748397827148
    8. '1' → logprob: -12.523748397827148
    9. '   ' → logprob: -12.523748397827148
    10. '  ' → logprob: -13.273748397827148

Token 85: 'T' (ID: 51)
  Prédit: '_T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_T' → logprob: -0.2813352644443512
    2. 'T' → logprob: -1.4063352346420288
    3. ' T' → logprob: -9.53133487701416
    4. 't' → logprob: -10.40633487701416
    5. '_t' → logprob: -10.40633487701416
    6. '_S' → logprob: -10.78133487701416
    7. ' _' → logprob: -11.53133487701416
    8. 'S' → logprob: -12.28133487701416
    9. ')' → logprob: -12.90633487701416
    10. ' ' → logprob: -13.28133487701416

Token 86: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0046686455607414246
    2. ')' → logprob: -5.379668712615967
    3. '))
' → logprob: -10.629668235778809
    4. ')))' → logprob: -11.254668235778809
    5. ' ))' → logprob: -12.129668235778809
    6. '),' → logprob: -13.254668235778809
    7. ')
' → logprob: -14.379668235778809
    8. '_' → logprob: -14.504668235778809
    9. ')>' → logprob: -14.629668235778809
    10. ' ' → logprob: -14.629668235778809


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 84
Tokens correctement prédits (1ère position, stricte): 24
Tokens correctement prédits (1ère position, avec adaptation): 24
Tokens correctement prédits (top 10): 56
Précision stricte (1ère position): 28.57%
Précision adaptée (1ère position): 28.57%
Précision (top 10): 66.67%
================================================================================
