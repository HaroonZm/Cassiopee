================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:41:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demande à l'utilisateur de saisir deux valeurs dans une seule ligne, séparées par un espace.
# La fonction input() récupère la chaîne de caractères saisie par l'utilisateur.
# La méthode split() divise cette chaîne de caractères en une liste basée sur les espaces.
# La fonction map(int, ...) applique la fonction int à chaque élément de la liste pour les convertir de chaînes de caractères à entiers.
# Les deux entiers obtenus sont ensuite assignés respectivement aux variables a et b en utilisant l'affectation multiple.
a, b = map(int, input().split())

# On va maintenant comparer la valeur de a avec le double de b, c'est-à-dire b multiplié par 2.
# L'opérateur <= vérifie si a est inférieur ou égal à (b * 2).
if a <= b * 2:
    # Si la condition précisée juste au-dessus est vraie, cela signifie que a est au plus égal à deux fois b.
    # On affiche alors la valeur 0 à l'aide de la fonction print().
    # print() affiche des données dans la console.
    print(0)
else:
    # Sinon, c'est-à-dire si la condition a <= b*2 n'est pas satisfaite (donc si a est strictement supérieur à 2 fois b),
    # on affiche la différence entre a et deux fois b.
    # Cette différence est calculée par a - (b*2).
    print(a - b*2)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ande' (ID: 4102)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5254546403884888
    2. ' de' → logprob: -2.025454521179199
    3. ' ' → logprob: -2.400454521179199
    4. ':' → logprob: -2.525454521179199
    5. '_' → logprob: -3.150454521179199
    6. ' :' → logprob: -3.900454521179199
    7. '```' → logprob: -4.525454521179199
    8. ' =' → logprob: -4.900454521179199
    9. ' d' → logprob: -5.025454521179199
    10. ''' → logprob: -5.150454521179199

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0062631662003695965
    2. ' l' → logprob: -5.256263256072998
    3. 'user' → logprob: -7.506263256072998
    4. 'util' → logprob: -8.63126277923584
    5. 'la' → logprob: -10.00626277923584
    6. 'un' → logprob: -10.13126277923584
    7. '`' → logprob: -10.38126277923584
    8. '#' → logprob: -10.50626277923584
    9. '```' → logprob: -10.50626277923584
    10. ' ' → logprob: -11.13126277923584

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.036522276699543
    2. ''' → logprob: -4.161522388458252
    3. 'u' → logprob: -4.661522388458252
    4. 'util' → logprob: -5.661522388458252
    5. '’utilisateur' → logprob: -5.661522388458252
    6. 'a' → logprob: -6.161522388458252
    7. ' utilisateur' → logprob: -6.786522388458252
    8. ''util' → logprob: -8.661521911621094
    9. ''user' → logprob: -9.161521911621094
    10. ''us' → logprob: -9.411521911621094

Token 6: ' de' (ID: 334)
  Prédit: 'nom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nom' → logprob: -0.41761481761932373
    2. 'name' → logprob: -1.9176148176193237
    3. 'user' → logprob: -2.4176149368286133
    4. 'input' → logprob: -3.0426149368286133
    5. 'age' → logprob: -4.292614936828613
    6. 'print' → logprob: -4.542614936828613
    7. 'username' → logprob: -5.167614936828613
    8. 's' → logprob: -5.167614936828613
    9. 'prenom' → logprob: -5.167614936828613
    10. 'n' → logprob: -5.292614936828613

Token 7: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.009183843620121479
    2. ' saisir' → logprob: -5.634183883666992
    3. 'r' → logprob: -6.009183883666992
    4. 'entr' → logprob: -6.259183883666992
    5. '```' → logprob: -7.259183883666992
    6. 'sa' → logprob: -9.009183883666992
    7. '#' → logprob: -9.384183883666992
    8. ' entrer' → logprob: -10.259183883666992
    9. ' fournir' → logprob: -10.634183883666992
    10. 'contin' → logprob: -10.759183883666992

Token 8: ' deux' (ID: 10301)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4754936993122101
    2. ' un' → logprob: -1.4754936695098877
    3. ' une' → logprob: -2.2254936695098877
    4. ''' → logprob: -4.350493907928467
    5. 's' → logprob: -5.725493907928467
    6. ''un' → logprob: -5.850493907928467
    7. ' ' → logprob: -5.850493907928467
    8. 'un' → logprob: -6.100493907928467
    9. 'une' → logprob: -6.225493907928467
    10. ''une' → logprob: -6.350493907928467

Token 9: ' valeurs' (ID: 73668)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25247228145599365
    2. ' espaces' → logprob: -2.377472400665283
    3. 's' → logprob: -2.502472400665283
    4. ' mots' → logprob: -4.252472400665283
    5. ' lignes' → logprob: -4.502472400665283
    6. ' nombres' → logprob: -5.502472400665283
    7. ' chaînes' → logprob: -5.502472400665283
    8. ' variables' → logprob: -6.377472400665283
    9. ' s' → logprob: -6.502472400665283
    10. '_' → logprob: -6.877472400665283

Token 10: ' dans' (ID: 2671)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2684125006198883
    2. '\n' → logprob: -2.3934125900268555
    3. 'x' → logprob: -2.5184125900268555
    4. 'n' → logprob: -3.6434125900268555
    5. '\' → logprob: -4.7684125900268555
    6. 'val' → logprob: -5.1434125900268555
    7. '_' → logprob: -5.5184125900268555
    8. 'a' → logprob: -5.6434125900268555
    9. 'i' → logprob: -5.8934125900268555
    10. 'value' → logprob: -6.0184125900268555

Token 11: ' une' (ID: 2463)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.2423417568206787
    2. 'l' → logprob: -1.9923417568206787
    3. 'le' → logprob: -2.1173417568206787
    4. 'une' → logprob: -2.1173417568206787
    5. 'la' → logprob: -2.3673417568206787
    6. 'les' → logprob: -2.3673417568206787
    7. ' des' → logprob: -3.1173417568206787
    8. ' la' → logprob: -3.3673417568206787
    9. 'des' → logprob: -3.7423417568206787
    10. ' une' → logprob: -4.992341995239258

Token 12: ' seule' (ID: 41983)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.2673076391220093
    2. ' phrase' → logprob: -2.267307758331299
    3. 'chaine' → logprob: -3.142307758331299
    4. ' chaine' → logprob: -3.767307758331299
    5. ' ' → logprob: -4.142307758331299
    6. ' ligne' → logprob: -4.517307758331299
    7. ' seule' → logprob: -4.767307758331299
    8. 'ligne' → logprob: -5.017307758331299
    9. ' variable' → logprob: -5.392307758331299
    10. ' string' → logprob: -5.517307758331299

Token 13: ' ligne' (ID: 19583)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07374858111143112
    2. ' input' → logprob: -2.6987485885620117
    3. '=input' → logprob: -7.198748588562012
    4. 'entrée' → logprob: -7.823748588562012
    5. 'chaine' → logprob: -7.823748588562012
    6. 's' → logprob: -7.948748588562012
    7. ' ' → logprob: -7.948748588562012
    8. ',' → logprob: -8.823748588562012
    9. 'ligne' → logprob: -8.823748588562012
    10. 'in' → logprob: -9.198748588562012

Token 14: ',' (ID: 11)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7329214215278625
    2. 'v' → logprob: -1.1079213619232178
    3. 'x' → logprob: -2.4829213619232178
    4. 'val' → logprob: -3.4829213619232178
    5. 'i' → logprob: -3.9829213619232178
    6. 'user' → logprob: -4.357921600341797
    7. 'a' → logprob: -4.732921600341797
    8. ',' → logprob: -5.232921600341797
    9. 'value' → logprob: -5.357921600341797
    10. 's' → logprob: -5.357921600341797

Token 15: ' sépar' (ID: 97160)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.43049851059913635
    2. ' input' → logprob: -1.180498480796814
    3. 'x' → logprob: -4.0554986000061035
    4. 's' → logprob: -5.4304986000061035
    5. 'val' → logprob: -5.5554986000061035
    6. 'value' → logprob: -5.9304986000061035
    7. ' x' → logprob: -6.0554986000061035
    8. ' ' → logprob: -6.3054986000061035
    9. 'a' → logprob: -6.3054986000061035
    10. 'v' → logprob: -6.6804986000061035

Token 16: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.009354520589113235
    2. 'é' → logprob: -5.009354591369629
    3. 'és' → logprob: -6.634354591369629
    4. 'ée' → logprob: -6.634354591369629
    5. 'er' → logprob: -12.884354591369629
    6. 'es' → logprob: -13.509354591369629
    7. 'è' → logprob: -14.384354591369629
    8. '&eacute' → logprob: -14.384354591369629
    9. '```' → logprob: -15.009354591369629
    10. 'e' → logprob: -15.384354591369629

Token 17: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.7469151616096497
    2. ' par' → logprob: -0.8719151616096497
    3. 'es' → logprob: -2.246915102005005
    4. 'e' → logprob: -6.871915340423584
    5. '_par' → logprob: -7.371915340423584
    6. ' ' → logprob: -8.996914863586426
    7. ',' → logprob: -9.121914863586426
    8. '(par' → logprob: -9.496914863586426
    9. 'Par' → logprob: -9.621914863586426
    10. '-par' → logprob: -9.871914863586426

Token 18: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.23153400421142578
    2. ''un' → logprob: -2.231534004211426
    3. 'une' → logprob: -3.356534004211426
    4. ' un' → logprob: -3.481534004211426
    5. ''' → logprob: -4.231534004211426
    6. 'es' → logprob: -5.481534004211426
    7. 'l' → logprob: -5.981534004211426
    8. ''une' → logprob: -5.981534004211426
    9. ''espace' → logprob: -5.981534004211426
    10. 'space' → logprob: -6.606534004211426

Token 19: ' espace' (ID: 66004)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.06405996531248093
    2. ''espace' → logprob: -3.3140599727630615
    3. ' espace' → logprob: -3.9390599727630615
    4. 'space' → logprob: -5.939059734344482
    5. 'esp' → logprob: -6.064059734344482
    6. '’espace' → logprob: -7.689059734344482
    7. ''esp' → logprob: -8.06406021118164
    8. ''' → logprob: -9.56406021118164
    9. 'e' → logprob: -9.68906021118164
    10. '```' → logprob: -10.06406021118164

Token 20: '.
' (ID: 558)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.16077390313148499
    2. 'val' → logprob: -3.285773992538452
    3. 'x' → logprob: -3.285773992538452
    4. 'input' → logprob: -3.910773992538452
    5. 'n' → logprob: -4.535773754119873
    6. 'user' → logprob: -4.910773754119873
    7. 's' → logprob: -5.035773754119873
    8. 'a' → logprob: -5.160773754119873
    9. 'u' → logprob: -5.285773754119873
    10. 'i' → logprob: -5.410773754119873

Token 21: '#' (ID: 2)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6507707238197327
    2. 'val' → logprob: -1.775770664215088
    3. 'x' → logprob: -2.525770664215088
    4. 'n' → logprob: -3.150770664215088
    5. 'input' → logprob: -3.275770664215088
    6. 's' → logprob: -3.650770664215088
    7. 'user' → logprob: -3.650770664215088
    8. '```' → logprob: -3.900770664215088
    9. 'values' → logprob: -4.150770664215088
    10. 'i' → logprob: -4.275770664215088

Token 22: ' La' (ID: 3038)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.618201494216919
    2. 'values' → logprob: -0.993201494216919
    3. 'input' → logprob: -3.243201494216919
    4. 'vals' → logprob: -3.993201494216919
    5. 's' → logprob: -4.24320125579834
    6. 'user' → logprob: -4.61820125579834
    7. 'inputs' → logprob: -5.36820125579834
    8. 'value' → logprob: -6.36820125579834
    9. '```' → logprob: -7.74320125579834
    10. 'x' → logprob: -8.11820125579834

Token 23: ' fonction' (ID: 17610)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.13287222385406494
    2. 'values' → logprob: -2.3828721046447754
    3. 'vals' → logprob: -4.382872104644775
    4. 's' → logprob: -4.882872104644775
    5. ' valeurs' → logprob: -5.257872104644775
    6. 'a' → logprob: -6.507872104644775
    7. 'x' → logprob: -6.757872104644775
    8. ' values' → logprob: -6.757872104644775
    9. ' val' → logprob: -7.507872104644775
    10. 'user' → logprob: -7.507872104644775

Token 24: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02811666764318943
    2. ' input' → logprob: -3.7781167030334473
    3. 's' → logprob: -5.903116703033447
    4. 'def' → logprob: -6.278116703033447
    5. 'val' → logprob: -9.153116226196289
    6. 'split' → logprob: -10.028116226196289
    7. 'values' → logprob: -10.153116226196289
    8. '#' → logprob: -11.028116226196289
    9. '=input' → logprob: -11.153116226196289
    10. 'user' → logprob: -11.778116226196289

Token 25: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007871478796005249
    2. '()' → logprob: -5.132871627807617
    3. '('' → logprob: -6.507871627807617
    4. '("' → logprob: -8.132871627807617
    5. '(
' → logprob: -9.757871627807617
    6. 's' → logprob: -10.632871627807617
    7. '("("' → logprob: -10.632871627807617
    8. '("""' → logprob: -11.257871627807617
    9. '("")' → logprob: -11.507871627807617
    10. '(

' → logprob: -12.132871627807617

Token 26: ' récup' (ID: 62856)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13509617745876312
    2. 's' → logprob: -3.5100960731506348
    3. ' =' → logprob: -3.6350960731506348
    4. ' ' → logprob: -3.7600960731506348
    5. '=' → logprob: -4.385096073150635
    6. '()' → logprob: -4.510096073150635
    7. ' (' → logprob: -4.885096073150635
    8. ')' → logprob: -5.635096073150635
    9. '('' → logprob: -6.135096073150635
    10. '#' → logprob: -6.510096073150635

Token 27: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.0019142382079735398
    2. 'è' → logprob: -6.501914024353027
    3. '\' → logprob: -9.126914024353027
    4. 'ére' → logprob: -9.376914024353027
    5. '`' → logprob: -9.626914024353027
    6. 'èr' → logprob: -10.001914024353027
    7. 'ere' → logprob: -10.626914024353027
    8. '#' → logprob: -11.001914024353027
    9. '[' → logprob: -11.376914024353027
    10. '```' → logprob: -11.876914024353027

Token 28: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6548335552215576
    2. ' l' → logprob: -2.1548335552215576
    3. ' les' → logprob: -2.2798335552215576
    4. ' deux' → logprob: -2.2798335552215576
    5. 'de' → logprob: -3.0298335552215576
    6. 'l' → logprob: -3.5298335552215576
    7. 's' → logprob: -3.6548335552215576
    8. ' ' → logprob: -4.154833793640137
    9. 'les' → logprob: -4.529833793640137
    10. 'la' → logprob: -5.404833793640137

Token 29: ' chaîne' (ID: 89288)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.26943573355674744
    2. 's' → logprob: -2.0194356441497803
    3. 'entrée' → logprob: -3.3944356441497803
    4. 'chaine' → logprob: -3.8944356441497803
    5. 'input' → logprob: -4.519435882568359
    6. 'ent' → logprob: -4.519435882568359
    7. ' valeur' → logprob: -4.769435882568359
    8. ' chaîne' → logprob: -6.019435882568359
    9. ' ligne' → logprob: -6.144435882568359
    10. 'ligne' → logprob: -6.144435882568359

Token 30: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3168772459030151
    2. ' d' → logprob: -2.1918773651123047
    3. ' ' → logprob: -2.1918773651123047
    4. ' )' → logprob: -2.3168773651123047
    5. ' de' → logprob: -2.6918773651123047
    6. ' =' → logprob: -2.6918773651123047
    7. ' s' → logprob: -3.0668773651123047
    8. 'd' → logprob: -3.1918773651123047
    9. 'user' → logprob: -3.4418773651123047
    10. 'de' → logprob: -3.8168773651123047

Token 31: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.034320343285799026
    2. ' caractères' → logprob: -3.40932035446167
    3. 'texte' → logprob: -7.90932035446167
    4. 's' → logprob: -9.659319877624512
    5. ' ' → logprob: -9.909319877624512
    6. '#' → logprob: -10.284319877624512
    7. ' caracteres' → logprob: -10.284319877624512
    8. ' caract' → logprob: -10.409319877624512
    9. ' caractère' → logprob: -11.034319877624512
    10. 'entrée' → logprob: -11.159319877624512

Token 32: ' sais' (ID: 30010)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9749734997749329
    2. 'val' → logprob: -1.974973440170288
    3. ',' → logprob: -2.224973440170288
    4. 'user' → logprob: -2.349973440170288
    5. 'values' → logprob: -2.599973440170288
    6. ')' → logprob: -3.224973440170288
    7. 'v' → logprob: -3.599973440170288
    8. '.' → logprob: -3.974973440170288
    9. ' =' → logprob: -3.974973440170288
    10. ' ' → logprob: -4.349973678588867

Token 33: 'ie' (ID: 396)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.31499335169792175
    2. 'es' → logprob: -1.5649933815002441
    3. 'ie' → logprob: -3.189993381500244
    4. 'ies' → logprob: -4.439993381500244
    5. 's' → logprob: -4.939993381500244
    6. 'sie' → logprob: -7.564993381500244
    7. 'i' → logprob: -9.564992904663086
    8. '#' → logprob: -10.064992904663086
    9. 'p' → logprob: -10.064992904663086
    10. '
' → logprob: -10.689992904663086

Token 34: ' par' (ID: 686)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.8569847345352173
    2. ',' → logprob: -1.6069847345352173
    3. 'v' → logprob: -1.8569847345352173
    4. 'values' → logprob: -2.9819846153259277
    5. 's' → logprob: -3.1069846153259277
    6. 'x' → logprob: -3.1069846153259277
    7. '#' → logprob: -4.356984615325928
    8. ' ' → logprob: -4.731984615325928
    9. '.' → logprob: -4.981984615325928
    10. 'n' → logprob: -5.106984615325928

Token 35: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.04349145665764809
    2. ' l' → logprob: -3.1684913635253906
    3. '	l' → logprob: -8.91849136352539
    4. 'util' → logprob: -9.16849136352539
    5. ' ' → logprob: -9.91849136352539
    6. ' défaut' → logprob: -9.91849136352539
    7. 'def' → logprob: -10.04349136352539
    8. 'lot' → logprob: -11.16849136352539
    9. 'default' → logprob: -11.29349136352539
    10. 'la' → logprob: -11.66849136352539

Token 36: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.09333375841379166
    2. ''' → logprob: -2.4683337211608887
    3. ''u' → logprob: -6.843333721160889
    4. 'u' → logprob: -6.968333721160889
    5. ''util' → logprob: -7.343333721160889
    6. ''user' → logprob: -7.718333721160889
    7. ''espace' → logprob: -8.218334197998047
    8. '’utilisateur' → logprob: -8.218334197998047
    9. ''us' → logprob: -8.843334197998047
    10. ''\' → logprob: -9.843334197998047

Token 37: '.
' (ID: 558)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.764774739742279
    2. ',' → logprob: -1.3897747993469238
    3. 'val' → logprob: -2.389774799346924
    4. 'x' → logprob: -2.639774799346924
    5. '#' → logprob: -3.389774799346924
    6. 's' → logprob: -3.764774799346924
    7. 'n' → logprob: -4.139774799346924
    8. ' ' → logprob: -4.764774799346924
    9. 'values' → logprob: -4.764774799346924
    10. 'user' → logprob: -5.139774799346924

Token 38: '#' (ID: 2)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3807717561721802
    2. 'val' → logprob: -1.6307717561721802
    3. 'x' → logprob: -3.1307716369628906
    4. '#' → logprob: -3.7557716369628906
    5. 'values' → logprob: -4.255771636962891
    6. 'n' → logprob: -4.255771636962891
    7. 's' → logprob: -4.755771636962891
    8. 'user' → logprob: -5.755771636962891
    9. 'a' → logprob: -5.880771636962891
    10. 'u' → logprob: -6.130771636962891

Token 39: ' La' (ID: 3038)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5657088160514832
    2. 'val' → logprob: -1.315708875656128
    3. '#' → logprob: -2.690708875656128
    4. 'values' → logprob: -3.315708875656128
    5. 'x' → logprob: -3.940708875656128
    6. 'n' → logprob: -4.815708637237549
    7. 'u' → logprob: -5.065708637237549
    8. 's' → logprob: -5.190708637237549
    9. 'user' → logprob: -5.440708637237549
    10. 'a' → logprob: -5.440708637237549

Token 40: ' méthode' (ID: 71490)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.6682917475700378
    2. 's' → logprob: -1.2932918071746826
    3. ' val' → logprob: -2.9182918071746826
    4. ' valeur' → logprob: -3.1682918071746826
    5. ' valeurs' → logprob: -3.4182918071746826
    6. 'chaine' → logprob: -4.1682915687561035
    7. 'values' → logprob: -4.5432915687561035
    8. ' ligne' → logprob: -4.6682915687561035
    9. ' sais' → logprob: -5.0432915687561035
    10. '#' → logprob: -5.4182915687561035

Token 41: ' split' (ID: 12648)
  Prédit: ' split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' split' → logprob: -0.38692107796669006
    2. 'split' → logprob: -1.1369210481643677
    3. '.split' → logprob: -10.136920928955078
    4. ' .' → logprob: -12.761920928955078
    5. 'strip' → logprob: -13.136920928955078
    6. ' strip' → logprob: -13.886920928955078
    7. ' ' → logprob: -13.886920928955078
    8. 'spl' → logprob: -14.136920928955078
    9. ' splits' → logprob: -14.511920928955078
    10. 's' → logprob: -14.636920928955078

Token 42: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16076619923114777
    2. '('' → logprob: -2.410766124725342
    3. '(' → logprob: -2.910766124725342
    4. '("' → logprob: -5.535766124725342
    5. '("("' → logprob: -8.4107666015625
    6. '(',' → logprob: -10.2857666015625
    7. '('.')' → logprob: -10.5357666015625
    8. '().' → logprob: -10.9107666015625
    9. ' ()' → logprob: -11.0357666015625
    10. '("")' → logprob: -11.4107666015625

Token 43: ' div' (ID: 4223)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4308319687843323
    2. '(' → logprob: -1.3058319091796875
    3. '('' → logprob: -2.6808319091796875
    4. '("' → logprob: -5.8058319091796875
    5. 'split' → logprob: -6.0558319091796875
    6. ' ()' → logprob: -6.5558319091796875
    7. ' permet' → logprob: -7.5558319091796875
    8. ' (' → logprob: -7.8058319091796875
    9. '(split' → logprob: -7.8058319091796875
    10. ' split' → logprob: -8.430831909179688

Token 44: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.00320123927667737
    2. 'ide' → logprob: -6.378201007843018
    3. '#' → logprob: -8.128201484680176
    4. '()' → logprob: -8.628201484680176
    5. '```' → logprob: -9.253201484680176
    6. '>' → logprob: -9.378201484680176
    7. 'i' → logprob: -9.753201484680176
    8. '1' → logprob: -9.753201484680176
    9. 'id' → logprob: -9.878201484680176
    10. ' ise' → logprob: -9.878201484680176

Token 45: ' cette' (ID: 7696)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4494192898273468
    2. '()' → logprob: -1.6994192600250244
    3. '('' → logprob: -2.1994192600250244
    4. ' la' → logprob: -3.3244192600250244
    5. ' ' → logprob: -4.0744194984436035
    6. ''' → logprob: -5.3244194984436035
    7. 'l' → logprob: -6.4494194984436035
    8. '("' → logprob: -6.5744194984436035
    9. 'la' → logprob: -6.6994194984436035
    10. ' (' → logprob: -6.8244194984436035

Token 46: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.019000409170985222
    2. ' chaine' → logprob: -4.89400053024292
    3. 'chaine' → logprob: -5.39400053024292
    4. ' ligne' → logprob: -6.64400053024292
    5. ' ' → logprob: -6.76900053024292
    6. ' string' → logprob: -6.76900053024292
    7. 's' → logprob: -7.14400053024292
    8. 'cha' → logprob: -7.26900053024292
    9. ' ' → logprob: -8.019000053405762
    10. ' chaînes' → logprob: -8.519000053405762

Token 47: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4306790232658386
    2. '('' → logprob: -2.1806790828704834
    3. '()' → logprob: -2.3056790828704834
    4. ' ' → logprob: -3.3056790828704834
    5. ')' → logprob: -3.9306790828704834
    6. ''' → logprob: -3.9306790828704834
    7. '[' → logprob: -4.055678844451904
    8. ' (' → logprob: -4.555678844451904
    9. '.' → logprob: -5.055678844451904
    10. '"' → logprob: -5.555678844451904

Token 48: ' caractères' (ID: 183106)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6394469738006592
    2. ' caractères' → logprob: -1.2644469738006592
    3. 'car' → logprob: -2.764446973800659
    4. ' chaînes' → logprob: -3.639446973800659
    5. 'chaine' → logprob: -4.014447212219238
    6. ' ' → logprob: -4.264447212219238
    7. 'cha' → logprob: -4.514447212219238
    8. ''espace' → logprob: -5.139447212219238
    9. 's' → logprob: -5.389447212219238
    10. ' chaîne' → logprob: -5.389447212219238

Token 49: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09719515591859818
    2. '(' → logprob: -2.8471951484680176
    3. '('' → logprob: -3.7221951484680176
    4. '[' → logprob: -5.347195148468018
    5. ''' → logprob: -6.472195148468018
    6. 'input' → logprob: -7.472195148468018
    7. '.' → logprob: -7.722195148468018
    8. ')' → logprob: -7.847195148468018
    9. '("' → logprob: -7.847195148468018
    10. '['' → logprob: -8.347195625305176

Token 50: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.4280305802822113
    2. 'une' → logprob: -1.6780306100845337
    3. ' un' → logprob: -3.053030490875244
    4. '['' → logprob: -3.553030490875244
    5. ' ['' → logprob: -3.553030490875244
    6. 'un' → logprob: -4.303030490875244
    7. ' deux' → logprob: -4.803030490875244
    8. ' des' → logprob: -5.303030490875244
    9. '[]' → logprob: -5.428030490875244
    10. ' ' → logprob: -5.428030490875244

Token 51: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.2530204951763153
    2. 'liste' → logprob: -1.5030205249786377
    3. 'list' → logprob: -7.003020286560059
    4. 's' → logprob: -9.628020286560059
    5. 'Liste' → logprob: -10.503020286560059
    6. ' list' → logprob: -10.503020286560059
    7. ' listes' → logprob: -11.128020286560059
    8. ' ' → logprob: -11.753020286560059
    9. ' Liste' → logprob: -11.878020286560059
    10. 'l' → logprob: -12.003020286560059

Token 52: ' basée' (ID: 153941)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5711698532104492
    2. '_' → logprob: -2.071169853210449
    3. '.' → logprob: -2.696169853210449
    4. 'input' → logprob: -2.696169853210449
    5. 's' → logprob: -3.071169853210449
    6. '()' → logprob: -3.946169853210449
    7. 'user' → logprob: -3.946169853210449
    8. ',' → logprob: -4.071169853210449
    9. '(' → logprob: -4.071169853210449
    10. ')' → logprob: -4.321169853210449

Token 53: ' sur' (ID: 1512)
  Prédit: ' sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.13416896760463715
    2. 'sur' → logprob: -2.509168863296509
    3. 's' → logprob: -3.134168863296509
    4. '_sur' → logprob: -8.13416862487793
    5. ' ' → logprob: -9.00916862487793
    6. '_' → logprob: -10.00916862487793
    7. ' s' → logprob: -10.13416862487793
    8. '```' → logprob: -10.50916862487793
    9. '<|end|>' → logprob: -10.88416862487793
    10. 'e' → logprob: -11.13416862487793

Token 54: ' les' (ID: 1341)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.16005399823188782
    2. 'l' → logprob: -2.1600539684295654
    3. ''' → logprob: -3.6600539684295654
    4. ''un' → logprob: -6.0350542068481445
    5. ''l' → logprob: -6.7850542068481445
    6. ' ' → logprob: -7.2850542068481445
    7. ' '' → logprob: -7.5350542068481445
    8. 'un' → logprob: -7.7850542068481445
    9. '"' → logprob: -8.035054206848145
    10. 'le' → logprob: -8.035054206848145

Token 55: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.012834874913096428
    2. ' espace' → logprob: -5.3878350257873535
    3. ''esp' → logprob: -6.0128350257873535
    4. 'esp' → logprob: -6.3878350257873535
    5. ''espace' → logprob: -6.3878350257873535
    6. ' ' → logprob: -6.7628350257873535
    7. 'es' → logprob: -8.012834548950195
    8. ''' → logprob: -8.512834548950195
    9. ' '' → logprob: -8.762834548950195
    10. 's' → logprob: -8.887834548950195

Token 56: '.
' (ID: 558)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.798793375492096
    2. ',' → logprob: -2.048793315887451
    3. 'v' → logprob: -2.048793315887451
    4. 'n' → logprob: -2.923793315887451
    5. 'values' → logprob: -3.173793315887451
    6. 'x' → logprob: -3.173793315887451
    7. '[' → logprob: -3.298793315887451
    8. 's' → logprob: -3.423793315887451
    9. '#' → logprob: -4.048793315887451
    10. 'user' → logprob: -4.173793315887451

Token 57: '#' (ID: 2)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6997371315956116
    2. 'val' → logprob: -1.6997370719909668
    3. 'values' → logprob: -2.324737071990967
    4. 'a' → logprob: -2.449737071990967
    5. 'n' → logprob: -2.824737071990967
    6. 'x' → logprob: -3.199737071990967
    7. 'vals' → logprob: -4.449737071990967
    8. '#' → logprob: -4.824737071990967
    9. '```' → logprob: -5.574737071990967
    10. 'u' → logprob: -6.199737071990967

Token 58: ' La' (ID: 3038)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.48823419213294983
    2. 'val' → logprob: -1.4882341623306274
    3. 'values' → logprob: -2.863234281539917
    4. 'x' → logprob: -3.238234281539917
    5. 'a' → logprob: -3.363234281539917
    6. 'n' → logprob: -3.988234281539917
    7. 'vals' → logprob: -5.738234043121338
    8. '#' → logprob: -6.363234043121338
    9. 'u' → logprob: -6.488234043121338
    10. 'value' → logprob: -6.988234043121338

Token 59: ' fonction' (ID: 17610)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' liste' → logprob: -1.268864393234253
    2. ' valeurs' → logprob: -1.393864393234253
    3. 'val' → logprob: -2.393864393234253
    4. 's' → logprob: -2.643864393234253
    5. ' valeur' → logprob: -3.143864393234253
    6. '#' → logprob: -3.143864393234253
    7. ' val' → logprob: -3.393864393234253
    8. 'liste' → logprob: -3.768864393234253
    9. 'values' → logprob: -4.143864631652832
    10. ' première' → logprob: -4.143864631652832

Token 60: ' map' (ID: 4014)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.08812761306762695
    2. ' map' → logprob: -2.838127613067627
    3. ' int' → logprob: -4.088127613067627
    4. 'input' → logprob: -5.588127613067627
    5. ' list' → logprob: -5.838127613067627
    6. 'map' → logprob: -6.963127613067627
    7. ' tuple' → logprob: -7.463127613067627
    8. 'int' → logprob: -7.588127613067627
    9. ' split' → logprob: -8.338127136230469
    10. 'list' → logprob: -10.213127136230469

Token 61: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.7220296263694763
    2. '(' → logprob: -0.8470296263694763
    3. '(lambda' → logprob: -2.972029685974121
    4. '(str' → logprob: -3.472029685974121
    5. '(float' → logprob: -5.972029685974121
    6. '()' → logprob: -8.347029685974121
    7. '(list' → logprob: -9.222029685974121
    8. ' (' → logprob: -9.347029685974121
    9. '(print' → logprob: -9.722029685974121
    10. '(convert' → logprob: -10.097029685974121

Token 62: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02338547073304653
    2. ',' → logprob: -3.773385524749756
    3. ' )' → logprob: -10.273385047912598
    4. '),' → logprob: -10.523385047912598
    5. ')#' → logprob: -11.398385047912598
    6. ')`' → logprob: -11.398385047912598
    7. ')">' → logprob: -11.648385047912598
    8. '))' → logprob: -11.898385047912598
    9. ')**' → logprob: -12.023385047912598
    10. ',)' → logprob: -12.148385047912598

Token 63: ' ...)' (ID: 100545)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.670493483543396
    2. ' input' → logprob: -1.045493483543396
    3. ')' → logprob: -2.0454936027526855
    4. ' )' → logprob: -5.0454936027526855
    5. 'user' → logprob: -7.5454936027526855
    6. ' user' → logprob: -8.670493125915527
    7. '(input' → logprob: -9.420493125915527
    8. '...)' → logprob: -9.545493125915527
    9. ' la' → logprob: -9.795493125915527
    10. ')>' → logprob: -10.170493125915527

Token 64: ' applique' (ID: 180579)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2524445354938507
    2. '(' → logprob: -2.5024445056915283
    3. 'convert' → logprob: -2.5024445056915283
    4. ' convert' → logprob: -4.002444744110107
    5. ' )' → logprob: -4.252444744110107
    6. ' transforme' → logprob: -4.377444744110107
    7. '()' → logprob: -6.002444744110107
    8. '(convert' → logprob: -6.002444744110107
    9. ' permet' → logprob: -6.377444744110107
    10. 'transform' → logprob: -6.502444744110107

Token 65: ' la' (ID: 557)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.6466222405433655
    2. 'int' → logprob: -0.7716222405433655
    3. '(int' → logprob: -4.896622180938721
    4. ' la' → logprob: -5.396622180938721
    5. ' ' → logprob: -7.021622180938721
    6. 'la' → logprob: -8.771622657775879
    7. ' lambda' → logprob: -9.021622657775879
    8. '	int' → logprob: -9.146622657775879
    9. 'lambda' → logprob: -9.146622657775879
    10. ' à' → logprob: -9.396622657775879

Token 66: ' fonction' (ID: 17610)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.22785739600658417
    2. 'int' → logprob: -1.6028573513031006
    3. ' split' → logprob: -6.47785758972168
    4. 'split' → logprob: -7.97785758972168
    5. ' input' → logprob: -8.35285758972168
    6. ' map' → logprob: -9.85285758972168
    7. 'input' → logprob: -10.47785758972168
    8. '(int' → logprob: -10.72785758972168
    9. '```' → logprob: -10.85285758972168
    10. ' ' → logprob: -10.97785758972168

Token 67: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.051962245255708694
    2. 'int' → logprob: -3.05196213722229
    3. '(int' → logprob: -5.801962375640869
    4. ' str' → logprob: -9.676961898803711
    5. ')' → logprob: -9.801961898803711
    6. ' ' → logprob: -9.801961898803711
    7. '=int' → logprob: -10.301961898803711
    8. ' lambda' → logprob: -10.551961898803711
    9. '[int' → logprob: -11.176961898803711
    10. ' input' → logprob: -11.301961898803711

Token 68: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38864386081695557
    2. '()' → logprob: -2.138643741607666
    3. '(' → logprob: -2.513643741607666
    4. ' à' → logprob: -2.888643741607666
    5. 'sur' → logprob: -3.763643741607666
    6. ' aux' → logprob: -4.888643741607666
    7. 'aux' → logprob: -5.013643741607666
    8. 'à' → logprob: -5.138643741607666
    9. '(aux' → logprob: -5.138643741607666
    10. ' )' → logprob: -5.263643741607666

Token 69: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.27961498498916626
    2. 'cha' → logprob: -1.5296149253845215
    3. ' chacune' → logprob: -4.4046149253845215
    4. ' chacun' → logprob: -5.2796149253845215
    5. 'ch' → logprob: -5.5296149253845215
    6. ' cha' → logprob: -5.7796149253845215
    7. ' each' → logprob: -6.9046149253845215
    8. 't' → logprob: -7.7796149253845215
    9. 'Chaque' → logprob: -8.02961540222168
    10. 'la' → logprob: -8.52961540222168

Token 70: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.002853021025657654
    2. ' élément' → logprob: -5.877852916717529
    3. 'é' → logprob: -11.127853393554688
    4. 'él' → logprob: -11.377853393554688
    5. 'element' → logprob: -12.002853393554688
    6. ' él' → logprob: -12.252853393554688
    7. ' ' → logprob: -12.752853393554688
    8. 'val' → logprob: -13.377853393554688
    9. ' Él' → logprob: -13.627853393554688
    10. ' valeur' → logprob: -13.877853393554688

Token 71: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.07064003497362137
    2. 'de' → logprob: -2.8206400871276855
    3. ')' → logprob: -4.8206400871276855
    4. 'du' → logprob: -9.195639610290527
    5. ' du' → logprob: -9.320639610290527
    6. 'sur' → logprob: -9.445639610290527
    7. ' )' → logprob: -9.570639610290527
    8. 's' → logprob: -10.195639610290527
    9. '#' → logprob: -10.570639610290527
    10. ' ' → logprob: -10.695639610290527

Token 72: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.212391197681427
    2. ' la' → logprob: -1.7123911380767822
    3. 'l' → logprob: -4.587391376495361
    4. ' l' → logprob: -7.337391376495361
    5. ' cette' → logprob: -10.462390899658203
    6. 's' → logprob: -11.337390899658203
    7. 'ma' → logprob: -11.587390899658203
    8. 'split' → logprob: -11.837390899658203
    9. 'liste' → logprob: -12.212390899658203
    10. 'spl' → logprob: -12.587390899658203

Token 73: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.5772132277488708
    2. 'liste' → logprob: -0.8272132277488708
    3. 'list' → logprob: -6.827213287353516
    4. 'split' → logprob: -10.077213287353516
    5. 'chaine' → logprob: -10.077213287353516
    6. ' chaîne' → logprob: -10.077213287353516
    7. 'entrée' → logprob: -10.827213287353516
    8. 'input' → logprob: -11.702213287353516
    9. ' list' → logprob: -11.827213287353516
    10. 'lista' → logprob: -12.702213287353516

Token 74: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0558198019862175
    2. ',' → logprob: -4.055819988250732
    3. '(' → logprob: -4.680819988250732
    4. 'a' → logprob: -4.805819988250732
    5. ' )' → logprob: -5.180819988250732
    6. 'x' → logprob: -5.555819988250732
    7. 'n' → logprob: -6.555819988250732
    8. 's' → logprob: -6.680819988250732
    9. ').' → logprob: -6.930819988250732
    10. '(
' → logprob: -7.055819988250732

Token 75: ' les' (ID: 1341)
  Prédit: ' convertir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convertir' → logprob: -0.04198488965630531
    2. ' obtenir' → logprob: -4.166985034942627
    3. ' transformer' → logprob: -4.416985034942627
    4. ' les' → logprob: -4.791985034942627
    5. 'convert' → logprob: -6.416985034942627
    6. ' convert' → logprob: -6.416985034942627
    7. 'ob' → logprob: -7.041985034942627
    8. 'transform' → logprob: -7.416985034942627
    9. ' extra' → logprob: -8.541984558105469
    10. 'les' → logprob: -9.041984558105469

Token 76: ' convertir' (ID: 79223)
  Prédit: ' convertir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convertir' → logprob: -0.5828500986099243
    2. 'convert' → logprob: -0.9578500986099243
    3. 'transform' → logprob: -3.0828499794006348
    4. ' transformer' → logprob: -4.832849979400635
    5. 'ob' → logprob: -6.082849979400635
    6. ' convert' → logprob: -6.707849979400635
    7. 'con' → logprob: -8.207850456237793
    8. ' obtenir' → logprob: -8.707850456237793
    9. 'converter' → logprob: -8.957850456237793
    10. '#' → logprob: -10.707850456237793

Token 77: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16678866744041443
    2. ' en' → logprob: -2.0417885780334473
    3. ',' → logprob: -4.916788578033447
    4. ' )' → logprob: -4.916788578033447
    5. 'en' → logprob: -5.416788578033447
    6. ' par' → logprob: -6.916788578033447
    7. 'par' → logprob: -7.416788578033447
    8. '.' → logprob: -7.666788578033447
    9. ').' → logprob: -8.416789054870605
    10. 'map' → logprob: -8.416789054870605

Token 78: ' chaînes' (ID: 179904)
  Prédit: ' chaînes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.34820955991744995
    2. ' chaîne' → logprob: -1.5982096195220947
    3. 's' → logprob: -3.2232096195220947
    4. 'chaine' → logprob: -4.348209381103516
    5. ' des' → logprob: -4.473209381103516
    6. ' chaine' → logprob: -4.723209381103516
    7. ' strings' → logprob: -5.473209381103516
    8. ' ' → logprob: -5.973209381103516
    9. ' string' → logprob: -6.098209381103516
    10. 'cha' → logprob: -6.098209381103516

Token 79: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5650814771652222
    2. 'de' → logprob: -1.3150814771652222
    3. ' en' → logprob: -2.6900815963745117
    4. ')' → logprob: -2.8150815963745117
    5. 'en' → logprob: -3.5650815963745117
    6. 'car' → logprob: -6.315081596374512
    7. ' ' → logprob: -6.815081596374512
    8. ' )' → logprob: -6.940081596374512
    9. 'ent' → logprob: -7.315081596374512
    10. 's' → logprob: -7.940081596374512

Token 80: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.020604951307177544
    2. ' caractères' → logprob: -3.8956048488616943
    3. ' caractère' → logprob: -11.020605087280273
    4. ' caract' → logprob: -11.770605087280273
    5. '```' → logprob: -11.770605087280273
    6. 'str' → logprob: -12.020605087280273
    7. 'texte' → logprob: -12.520605087280273
    8. ' caracteres' → logprob: -12.520605087280273
    9. ' car' → logprob: -12.645605087280273
    10. ' ' → logprob: -12.895605087280273

Token 81: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010051179677248001
    2. ' )' → logprob: -5.510051250457764
    3. ').' → logprob: -5.635051250457764
    4. '))' → logprob: -6.885051250457764
    5. '),' → logprob: -7.760051250457764
    6. ')`' → logprob: -8.385050773620605
    7. ',' → logprob: -9.135050773620605
    8. ')#' → logprob: -9.885050773620605
    9. ')
' → logprob: -10.010050773620605
    10. 'input' → logprob: -10.260050773620605

Token 82: ' ent' (ID: 1121)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.007422406226396561
    2. ' ent' → logprob: -5.88242244720459
    3. 'ent' → logprob: -6.00742244720459
    4. 'des' → logprob: -6.38242244720459
    5. ' integers' → logprob: -8.63242244720459
    6. 'int' → logprob: -8.88242244720459
    7. ' int' → logprob: -9.13242244720459
    8. 'inte' → logprob: -11.63242244720459
    9. ' entier' → logprob: -12.00742244720459
    10. ' ' → logprob: -12.38242244720459

Token 83: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.02520948089659214
    2. 'i' → logprob: -3.900209426879883
    3. 'ières' → logprob: -5.525209426879883
    4. 'ier' → logprob: -7.525209426879883
    5. 'ière' → logprob: -9.525209426879883
    6. '```' → logprob: -10.900209426879883
    7. 'ié' → logprob: -10.900209426879883
    8. '#' → logprob: -11.400209426879883
    9. '   ' → logprob: -12.775209426879883
    10. 'ires' → logprob: -13.150209426879883

Token 84: '.
' (ID: 558)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7251083254814148
    2. 'a' → logprob: -0.9751083254814148
    3. 'n' → logprob: -2.4751083850860596
    4. 'v' → logprob: -3.7251083850860596
    5. ':' → logprob: -4.4751081466674805
    6. ',' → logprob: -5.6001081466674805
    7. 'val' → logprob: -5.8501081466674805
    8. ' x' → logprob: -6.6001081466674805
    9. 'u' → logprob: -6.6001081466674805
    10. 's' → logprob: -6.7251081466674805

Token 85: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5174036622047424
    2. 'x' → logprob: -1.0174036026000977
    3. 'val' → logprob: -3.5174036026000977
    4. 'n' → logprob: -5.017403602600098
    5. 'v' → logprob: -6.392403602600098
    6. ' a' → logprob: -6.392403602600098
    7. ' x' → logprob: -6.767403602600098
    8. '```' → logprob: -7.767403602600098
    9. 'values' → logprob: -8.267403602600098
    10. 'ent' → logprob: -8.892403602600098

Token 86: ' Les' (ID: 7029)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3925105631351471
    2. 'x' → logprob: -1.1425105333328247
    3. 'val' → logprob: -5.267510414123535
    4. ' a' → logprob: -9.017510414123535
    5. ' x' → logprob: -9.392510414123535
    6. 'v' → logprob: -9.642510414123535
    7. 'n' → logprob: -9.642510414123535
    8. 'values' → logprob: -10.267510414123535
    9. '#' → logprob: -10.767510414123535
    10. 'value' → logprob: -10.892510414123535

Token 87: ' deux' (ID: 10301)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1835492849349976
    2. ' a' → logprob: -1.3085492849349976
    3. ' valeurs' → logprob: -1.4335492849349976
    4. 'x' → logprob: -3.058549404144287
    5. ' x' → logprob: -3.308549404144287
    6. ' deux' → logprob: -3.308549404144287
    7. 'val' → logprob: -3.433549404144287
    8. ' val' → logprob: -4.183549404144287
    9. 'de' → logprob: -5.058549404144287
    10. ' valeur' → logprob: -5.683549404144287

Token 88: ' ent' (ID: 1121)
  Prédit: ' valeurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeurs' → logprob: -0.3991890251636505
    2. ' nombres' → logprob: -1.5241889953613281
    3. 'n' → logprob: -3.399188995361328
    4. 'val' → logprob: -3.899188995361328
    5. ' val' → logprob: -4.399188995361328
    6. ' a' → logprob: -5.024188995361328
    7. ' ent' → logprob: -5.149188995361328
    8. 'a' → logprob: -5.399188995361328
    9. ' variables' → logprob: -5.774188995361328
    10. 'values' → logprob: -5.774188995361328

Token 89: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.08770795911550522
    2. 'ières' → logprob: -2.587707996368408
    3. 'i' → logprob: -6.337707996368408
    4. 'r' → logprob: -6.462707996368408
    5. 'ier' → logprob: -6.837707996368408
    6. 't' → logprob: -6.837707996368408
    7. 'ieres' → logprob: -7.337707996368408
    8. 'ière' → logprob: -7.462707996368408
    9. 'a' → logprob: -7.712707996368408
    10. 'e' → logprob: -8.46270751953125

Token 90: ' obten' (ID: 28150)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5061031579971313
    2. ' a' → logprob: -1.3811031579971313
    3. ' x' → logprob: -3.006103038787842
    4. ' =' → logprob: -3.131103038787842
    5. 'x' → logprob: -3.881103038787842
    6. ',' → logprob: -4.381103038787842
    7. ' n' → logprob: -5.256103038787842
    8. 's' → logprob: -5.631103038787842
    9. ' ' → logprob: -6.256103038787842
    10. '1' → logprob: -6.381103038787842

Token 91: 'us' (ID: 385)
  Prédit: 'us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.13461752235889435
    2. 'ient' → logprob: -3.009617567062378
    3. 'iennent' → logprob: -3.259617567062378
    4. 'es' → logprob: -4.634617328643799
    5. 'iens' → logprob: -5.259617328643799
    6. 'u' → logprob: -5.259617328643799
    7. 'ent' → logprob: -5.509617328643799
    8. ',' → logprob: -5.759617328643799
    9. 'iers' → logprob: -6.134617328643799
    10. 'ients' → logprob: -6.384617328643799

Token 92: ' sont' (ID: 5242)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5649276375770569
    2. ' ' → logprob: -1.314927577972412
    3. ',' → logprob: -2.439927577972412
    4. '=' → logprob: -4.189927577972412
    5. 's' → logprob: -4.189927577972412
    6. ' a' → logprob: -4.189927577972412
    7. ' sont' → logprob: -4.814927577972412
    8. ' ,' → logprob: -4.939927577972412
    9. ' n' → logprob: -5.314927577972412
    10. 'a' → logprob: -5.564927577972412

Token 93: ' ensuite' (ID: 39713)
  Prédit: ' ensuite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ensuite' → logprob: -0.7292776107788086
    2. ' affect' → logprob: -1.3542776107788086
    3. ' assign' → logprob: -2.3542776107788086
    4. ' stock' → logprob: -2.9792776107788086
    5. ' attrib' → logprob: -2.9792776107788086
    6. ' unpack' → logprob: -3.4792776107788086
    7. ' a' → logprob: -4.729277610778809
    8. ' assigned' → logprob: -4.854277610778809
    9. 'assign' → logprob: -5.604277610778809
    10. ' alors' → logprob: -6.354277610778809

Token 94: ' assign' (ID: 14975)
  Prédit: ' affect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' affect' → logprob: -0.6946452856063843
    2. ' assign' → logprob: -1.5696452856063843
    3. ' stock' → logprob: -1.6946452856063843
    4. ' unpack' → logprob: -2.694645404815674
    5. ' attrib' → logprob: -4.069645404815674
    6. 'assign' → logprob: -4.569645404815674
    7. ' assigned' → logprob: -4.694645404815674
    8. ' retourn' → logprob: -6.694645404815674
    9. 'aff' → logprob: -7.194645404815674
    10. 's' → logprob: -7.319645404815674

Token 95: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.05596916750073433
    2. 'é' → logprob: -2.93096923828125
    3. 'ées' → logprob: -6.93096923828125
    4. 'ée' → logprob: -9.30596923828125
    5. 'es' → logprob: -11.55596923828125
    6. ' é' → logprob: -12.68096923828125
    7. 'e' → logprob: -13.05596923828125
    8. ' és' → logprob: -13.30596923828125
    9. '```' → logprob: -15.05596923828125
    10. 'er' → logprob: -15.55596923828125

Token 96: ' respect' (ID: 5618)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.8000283241271973
    2. ' a' → logprob: -1.6750283241271973
    3. ' au' → logprob: -1.8000283241271973
    4. ' ' → logprob: -2.3000283241271973
    5. ',' → logprob: -3.0500283241271973
    6. ' ,' → logprob: -4.175028324127197
    7. ' aux' → logprob: -4.925028324127197
    8. ' en' → logprob: -5.050028324127197
    9. ' e' → logprob: -5.800028324127197
    10. 's' → logprob: -5.925028324127197

Token 97: 'ivement' (ID: 37978)
  Prédit: 'ivement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivement' → logprob: -0.00861729308962822
    2. 'ement' → logprob: -5.258617401123047
    3. 'uellement' → logprob: -7.008617401123047
    4. 'u' → logprob: -7.008617401123047
    5. 'vement' → logprob: -7.883617401123047
    6. 'ativement' → logprob: -8.008617401123047
    7. '-' → logprob: -8.508617401123047
    8. 'ue' → logprob: -8.758617401123047
    9. 'ément' → logprob: -9.133617401123047
    10. 'ument' → logprob: -9.883617401123047

Token 98: ' aux' (ID: 5850)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7575185894966125
    2. 'a' → logprob: -1.8825185298919678
    3. ' x' → logprob: -2.0075185298919678
    4. ',' → logprob: -2.2575185298919678
    5. ' à' → logprob: -2.8825185298919678
    6. 'x' → logprob: -3.0075185298919678
    7. ' ,' → logprob: -4.382518768310547
    8. ' ' → logprob: -4.882518768310547
    9. ' par' → logprob: -5.382518768310547
    10. ' aux' → logprob: -6.132518768310547

Token 99: ' variables' (ID: 13955)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4972536265850067
    2. 'a' → logprob: -1.372253656387329
    3. ' variables' → logprob: -2.747253656387329
    4. ' x' → logprob: -2.997253656387329
    5. 'x' → logprob: -4.37225341796875
    6. ' val' → logprob: -5.12225341796875
    7. 'val' → logprob: -6.74725341796875
    8. ' variable' → logprob: -6.99725341796875
    9. ' nombre' → logprob: -7.49725341796875
    10. ' nombres' → logprob: -7.49725341796875

Token 100: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.442949503660202
    2. ' a' → logprob: -1.8179495334625244
    3. 'x' → logprob: -2.0679495334625244
    4. ' x' → logprob: -2.6929495334625244
    5. ' val' → logprob: -7.317949295043945
    6. 'val' → logprob: -7.567949295043945
    7. ' nombre' → logprob: -9.942949295043945
    8. 'nombre' → logprob: -9.942949295043945
    9. ' valeur' → logprob: -10.692949295043945
    10. '`' → logprob: -11.067949295043945

Token 101: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009865755215287209
    2. ' ,' → logprob: -4.634865760803223
    3. ',b' → logprob: -10.134865760803223
    4. 'a' → logprob: -10.634865760803223
    5. ',a' → logprob: -11.009865760803223
    6. ' ' → logprob: -11.634865760803223
    7. ' et' → logprob: -11.634865760803223
    8. 'e' → logprob: -12.384865760803223
    9. 'et' → logprob: -13.384865760803223
    10. '1' → logprob: -13.759865760803223

Token 102: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.023258639499545097
    2. 'b' → logprob: -3.773258686065674
    3. ' ' → logprob: -11.273258209228516
    4. ' ' → logprob: -15.023258209228516
    5. ',' → logprob: -17.148258209228516
    6. 's' → logprob: -17.273258209228516
    7. '_b' → logprob: -17.523258209228516
    8. '	b' → logprob: -17.648258209228516
    9. ',b' → logprob: -18.023258209228516
    10. ' ' → logprob: -18.148258209228516

Token 103: ' en' (ID: 469)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -9.2576454335358e-05
    2. ',' → logprob: -10.125092506408691
    3. ' a' → logprob: -10.250092506408691
    4. ' =' → logprob: -12.875092506408691
    5. ',a' → logprob: -13.000092506408691
    6. 'x' → logprob: -13.125092506408691
    7. ':' → logprob: -13.375092506408691
    8. '=' → logprob: -13.625092506408691
    9. '(a' → logprob: -13.750092506408691
    10. '```' → logprob: -14.000092506408691

Token 104: ' utilisant' (ID: 92474)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.06141414865851402
    2. 'a' → logprob: -4.5614142417907715
    3. ' une' → logprob: -4.6864142417907715
    4. ' un' → logprob: -5.0614142417907715
    5. '_' → logprob: -5.1864142417907715
    6. ' ' → logprob: -5.5614142417907715
    7. ' ,' → logprob: -5.9364142417907715
    8. 's' → logprob: -6.1864142417907715
    9. ' Python' → logprob: -6.3114142417907715
    10. ' unpack' → logprob: -6.5614142417907715

Token 105: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.6949897408485413
    2. ' la' → logprob: -0.9449897408485413
    3. 'l' → logprob: -2.9449896812438965
    4. 'un' → logprob: -3.8199896812438965
    5. ' unpack' → logprob: -4.9449896812438965
    6. 'le' → logprob: -5.1949896812438965
    7. ' une' → logprob: -5.1949896812438965
    8. ' un' → logprob: -5.4449896812438965
    9. 'la' → logprob: -5.6949896812438965
    10. 'a' → logprob: -5.6949896812438965

Token 106: ''aff' (ID: 53397)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7097344994544983
    2. 'e' → logprob: -0.9597344994544983
    3. 'es' → logprob: -2.2097344398498535
    4. ''' → logprob: -5.3347344398498535
    5. ''a' → logprob: -5.8347344398498535
    6. ' a' → logprob: -6.7097344398498535
    7. ''aff' → logprob: -6.9597344398498535
    8. ''un' → logprob: -7.2097344398498535
    9. 'u' → logprob: -7.4597344398498535
    10. ''op' → logprob: -8.209734916687012

Token 107: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.00011903966515092179
    2. 'ection' → logprob: -9.37511920928955
    3. 'ecta' → logprob: -10.37511920928955
    4. 'ichage' → logprob: -13.75011920928955
    5. 'ected' → logprob: -14.75011920928955
    6. 'ective' → logprob: -15.00011920928955
    7. 'irm' → logprob: -15.00011920928955
    8. 'ects' → logprob: -15.25011920928955
    9. ' ect' → logprob: -15.50011920928955
    10. 'ec' → logprob: -15.62511920928955

Token 108: 'ation' (ID: 387)
  Prédit: 'ement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.36763036251068115
    2. 'nement' → logprob: -1.8676303625106812
    3. 'ation' → logprob: -2.1176304817199707
    4. 'ment' → logprob: -3.8676304817199707
    5. 'n' → logprob: -5.742630481719971
    6. 'ect' → logprob: -6.492630481719971
    7. ' a' → logprob: -6.617630481719971
    8. 'a' → logprob: -6.617630481719971
    9. ' ment' → logprob: -7.367630481719971
    10. 'ection' → logprob: -7.492630481719971

Token 109: ' multiple' (ID: 7598)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.22566835582256317
    2. ' a' → logprob: -1.9756683111190796
    3. ' =' → logprob: -2.975668430328369
    4. '=' → logprob: -4.725668430328369
    5. ',' → logprob: -5.850668430328369
    6. ' ,' → logprob: -7.975668430328369
    7. '=a' → logprob: -9.475667953491211
    8. ' ' → logprob: -9.850667953491211
    9. ',a' → logprob: -10.475667953491211
    10. 's' → logprob: -10.475667953491211

Token 110: '.
' (ID: 558)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2233183042553719e-05
    2. ' a' → logprob: -11.375012397766113
    3. ',' → logprob: -15.000012397766113
    4. '
' → logprob: -16.125011444091797
    5. ' 
' → logprob: -16.125011444091797
    6. '

' → logprob: -16.500011444091797
    7. '#' → logprob: -18.125011444091797
    8. ',a' → logprob: -18.500011444091797
    9. '  
' → logprob: -18.500011444091797
    10. '#a' → logprob: -18.750011444091797

Token 111: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -9.014684110297821e-06
    2. ' a' → logprob: -11.750008583068848
    3. '
' → logprob: -15.125008583068848
    4. '```' → logprob: -15.125008583068848
    5. ' 
' → logprob: -15.750008583068848
    6. '

' → logprob: -15.875008583068848
    7. '  
' → logprob: -16.625009536743164
    8. '    
' → logprob: -17.875009536743164
    9. '[a' → logprob: -17.875009536743164
    10. '(a' → logprob: -18.375009536743164

Token 112: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03820282593369484
    2. ' ,' → logprob: -3.2882027626037598
    3. ',b' → logprob: -9.288203239440918
    4. 'a' → logprob: -10.663203239440918
    5. ' ' → logprob: -11.163203239440918
    6. 's' → logprob: -11.913203239440918
    7. ',a' → logprob: -11.913203239440918
    8. ' =' → logprob: -12.413203239440918
    9. 'b' → logprob: -12.538203239440918
    10. '1' → logprob: -13.038203239440918

Token 113: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.10021863132715225
    2. 'b' → logprob: -2.3502185344696045
    3. ' ' → logprob: -11.725218772888184
    4. '<|end|>' → logprob: -13.225218772888184
    5. ' ' → logprob: -13.850218772888184
    6. '```' → logprob: -15.225218772888184
    7. '	b' → logprob: -15.475218772888184
    8. '=b' → logprob: -15.600218772888184
    9. ' =' → logprob: -16.225217819213867
    10. '=' → logprob: -16.225217819213867

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0009195583988912404
    2. '=' → logprob: -7.000919342041016
    3. ' =
' → logprob: -12.375919342041016
    4. '=input' → logprob: -12.875919342041016
    5. ' ' → logprob: -14.375919342041016
    6. ' ' → logprob: -15.750919342041016
    7. ' =
' → logprob: -16.000919342041016
    8. ',' → logprob: -16.625919342041016
    9. '=int' → logprob: -16.750919342041016
    10. ' =[' → logprob: -16.750919342041016

Token 115: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.06196824833750725
    2. ' map' → logprob: -2.8119683265686035
    3. 'list' → logprob: -14.936967849731445
    4. 'm' → logprob: -16.061967849731445
    5. ' ' → logprob: -16.686967849731445
    6. '	map' → logprob: -16.686967849731445
    7. ' list' → logprob: -17.561967849731445
    8. 'int' → logprob: -17.686967849731445
    9. ' ' → logprob: -18.061967849731445
    10. 'input' → logprob: -18.436967849731445

Token 116: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0029790066182613373
    2. '(' → logprob: -5.877978801727295
    3. '(input' → logprob: -9.002979278564453
    4. ' (' → logprob: -10.502979278564453
    5. '(str' → logprob: -11.252979278564453
    6. '<int' → logprob: -12.377979278564453
    7. '(in' → logprob: -12.752979278564453
    8. '(
' → logprob: -13.752979278564453
    9. '[int' → logprob: -14.252979278564453
    10. 'int' → logprob: -14.377979278564453

Token 117: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04291548952460289
    2. 'input' → logprob: -3.7929155826568604
    3. '(' → logprob: -4.917915344238281
    4. ',input' → logprob: -5.167915344238281
    5. ' (' → logprob: -5.542915344238281
    6. ',' → logprob: -6.792915344238281
    7. ')' → logprob: -6.917915344238281
    8. ' input' → logprob: -7.917915344238281
    9. '=input' → logprob: -10.917915344238281
    10. ' ,' → logprob: -11.292915344238281

Token 118: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07889199256896973
    2. ' input' → logprob: -2.5788919925689697
    3. '(input' → logprob: -13.70389175415039
    4. ' ' → logprob: -14.95389175415039
    5. ')' → logprob: -15.32889175415039
    6. '<input' → logprob: -15.45389175415039
    7. '	input' → logprob: -16.32889175415039
    8. '   ' → logprob: -16.82889175415039
    9. '=input' → logprob: -16.95389175415039
    10. ',input' → logprob: -17.20389175415039

Token 119: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8448030352592468
    2. '().' → logprob: -0.8448030352592468
    3. '())' → logprob: -1.9698030948638916
    4. '("' → logprob: -7.4698028564453125
    5. '('' → logprob: -8.469802856445312
    6. ' ())' → logprob: -9.344802856445312
    7. '(()' → logprob: -9.594802856445312
    8. '(' → logprob: -9.719802856445312
    9. ' ()' → logprob: -9.719802856445312
    10. '()).' → logprob: -10.094802856445312

Token 120: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.319370302458992e-06
    2. 'strip' → logprob: -12.250005722045898
    3. ' split' → logprob: -14.500005722045898
    4. '(split' → logprob: -20.2500057220459
    5. 'rstrip' → logprob: -21.0000057220459
    6. 'spl' → logprob: -21.1250057220459
    7. '_split' → logprob: -21.6250057220459
    8. 'plit' → logprob: -22.8750057220459
    9. ')' → logprob: -23.1250057220459
    10. '.split' → logprob: -23.2500057220459

Token 121: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.002925638109445572
    2. '()' → logprob: -6.002925872802734
    3. '()))' → logprob: -7.752925872802734
    4. ' ())' → logprob: -11.377925872802734
    5. '(' → logprob: -12.627925872802734
    6. ')' → logprob: -12.752925872802734
    7. '('' → logprob: -14.252925872802734
    8. '())
' → logprob: -14.377925872802734
    9. '());' → logprob: -15.377925872802734
    10. '()]' → logprob: -15.627925872802734

Token 122: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6518726348876953
    2. '<|end|>' → logprob: -0.7768726348876953
    3. ')' → logprob: -5.151872634887695
    4. '  
' → logprob: -5.526872634887695
    5. ' ' → logprob: -5.776872634887695
    6. '#' → logprob: -6.526872634887695
    7. ':' → logprob: -7.026872634887695
    8. '\n' → logprob: -7.276872634887695
    9. ' 
' → logprob: -7.401872634887695
    10. 'if' → logprob: -7.651872634887695

Token 123: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1747010201215744
    2. '#' → logprob: -3.299700975418091
    3. 'result' → logprob: -3.299700975418091
    4. 'if' → logprob: -3.299700975418091
    5. 's' → logprob: -4.17470121383667
    6. 'sum' → logprob: -4.29970121383667
    7. ' print' → logprob: -5.04970121383667
    8. 'c' → logprob: -5.17470121383667
    9. ' if' → logprob: -5.67470121383667
    10. ' somme' → logprob: -5.67470121383667

Token 124: ' va' (ID: 3423)
  Prédit: ' somme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' somme' → logprob: -1.0005544424057007
    2. ' if' → logprob: -1.2505544424057007
    3. ' print' → logprob: -1.3755544424057007
    4. 'print' → logprob: -4.25055456161499
    5. ' ' → logprob: -4.37555456161499
    6. 'if' → logprob: -4.50055456161499
    7. 's' → logprob: -5.00055456161499
    8. ' addition' → logprob: -5.00055456161499
    9. '#' → logprob: -5.25055456161499
    10. ' a' → logprob: -5.37555456161499

Token 125: ' maintenant' (ID: 35735)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -1.2469139099121094
    2. ' calcul' → logprob: -1.3719139099121094
    3. ' ' → logprob: -2.3719139099121094
    4. ' #' → logprob: -2.4969139099121094
    5. ' addition' → logprob: -3.2469139099121094
    6. '#' → logprob: -3.2469139099121094
    7. ' vérifier' → logprob: -3.2469139099121094
    8. ' continuer' → logprob: -3.9969139099121094
    9. ' ajouter' → logprob: -3.9969139099121094
    10. ' faire' → logprob: -3.9969139099121094

Token 126: ' comparer' (ID: 125081)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2272626161575317
    2. ' calcul' → logprob: -1.2272626161575317
    3. 'aff' → logprob: -1.7272626161575317
    4. ' effectuer' → logprob: -2.852262496948242
    5. ' afficher' → logprob: -3.227262496948242
    6. 'calcul' → logprob: -3.602262496948242
    7. ' addition' → logprob: -3.977262496948242
    8. 'faire' → logprob: -4.227262496948242
    9. ' comparer' → logprob: -4.352262496948242
    10. ' vérifier' → logprob: -4.602262496948242

Token 127: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8929230570793152
    2. ' a' → logprob: -0.8929230570793152
    3. '(a' → logprob: -2.39292311668396
    4. ' les' → logprob: -2.51792311668396
    5. '(' → logprob: -5.517922878265381
    6. 'les' → logprob: -5.767922878265381
    7. ' ' → logprob: -7.017922878265381
    8. 's' → logprob: -8.017923355102539
    9. ' ' → logprob: -9.017923355102539
    10. '	a' → logprob: -9.017923355102539

Token 128: ' valeur' (ID: 41664)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.47734424471855164
    2. 's' → logprob: -1.602344274520874
    3. ' valeur' → logprob: -1.852344274520874
    4. ' a' → logprob: -4.352344036102295
    5. 'b' → logprob: -6.477344036102295
    6. ' valeurs' → logprob: -6.477344036102295
    7. '<|end|>' → logprob: -6.477344036102295
    8. 'val' → logprob: -6.852344036102295
    9. ' ' → logprob: -7.727344036102295
    10. ' variable' → logprob: -7.727344036102295

Token 129: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0024533031973987818
    2. 'a' → logprob: -6.877453327178955
    3. ' de' → logprob: -7.002453327178955
    4. ' a' → logprob: -8.377452850341797
    5. ' s' → logprob: -9.002452850341797
    6. ' des' → logprob: -9.502452850341797
    7. ' ' → logprob: -10.002452850341797
    8. 'de' → logprob: -11.002452850341797
    9. 'des' → logprob: -12.127452850341797
    10. 'es' → logprob: -12.877452850341797

Token 130: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.42873653769493103
    2. 'a' → logprob: -1.0537365674972534
    3. ' ' → logprob: -10.553736686706543
    4. '	a' → logprob: -12.678736686706543
    5. ' b' → logprob: -12.803736686706543
    6. 'b' → logprob: -13.678736686706543
    7. ' ' → logprob: -13.928736686706543
    8. ''a' → logprob: -14.678736686706543
    9. 's' → logprob: -14.928736686706543
    10. '(a' → logprob: -15.053736686706543

Token 131: ' avec' (ID: 3937)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.04533892497420311
    2. 'et' → logprob: -3.4203388690948486
    3. ' à' → logprob: -5.170339107513428
    4. ' and' → logprob: -6.045339107513428
    5. ' avec' → logprob: -6.295339107513428
    6. ' ' → logprob: -6.795339107513428
    7. 'à' → logprob: -8.92033863067627
    8. 'avec' → logprob: -9.04533863067627
    9. ' a' → logprob: -9.29533863067627
    10. ',' → logprob: -9.29533863067627

Token 132: ' le' (ID: 505)
  Prédit: ' celle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' celle' → logprob: -0.1395055651664734
    2. 'b' → logprob: -2.764505624771118
    3. ' b' → logprob: -2.764505624771118
    4. 'celle' → logprob: -6.389505386352539
    5. ' celles' → logprob: -6.764505386352539
    6. ' ' → logprob: -7.264505386352539
    7. '<|end|>' → logprob: -8.139505386352539
    8. ' la' → logprob: -8.389505386352539
    9. 'la' → logprob: -9.889505386352539
    10. ' ' → logprob: -10.014505386352539

Token 133: ' double' (ID: 3503)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.49098697304725647
    2. 'b' → logprob: -0.9909869432449341
    3. ' valeur' → logprob: -4.9909868240356445
    4. 'a' → logprob: -5.3659868240356445
    5. 'value' → logprob: -6.4909868240356445
    6. ' value' → logprob: -6.7409868240356445
    7. 'val' → logprob: -6.8659868240356445
    8. ' code' → logprob: -7.9909868240356445
    9. ' a' → logprob: -8.615986824035645
    10. '<|end|>' → logprob: -8.615986824035645

Token 134: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.08005962520837784
    2. 'de' → logprob: -2.58005952835083
    3. 'b' → logprob: -7.20505952835083
    4. ' b' → logprob: -8.205060005187988
    5. ' of' → logprob: -9.705060005187988
    6. ' ' → logprob: -10.705060005187988
    7. '*' → logprob: -10.955060005187988
    8. 'a' → logprob: -11.080060005187988
    9. 's' → logprob: -11.705060005187988
    10. '#' → logprob: -11.955060005187988

Token 135: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10021518170833588
    2. ' b' → logprob: -2.350215196609497
    3. ' la' → logprob: -12.100214958190918
    4. 'la' → logprob: -13.225214958190918
    5. ' ' → logprob: -14.725214958190918
    6. ' celle' → logprob: -15.100214958190918
    7. ' ' → logprob: -15.475214958190918
    8. '	b' → logprob: -16.100215911865234
    9. 'a' → logprob: -16.475215911865234
    10. 'l' → logprob: -16.850215911865234

Token 136: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.30914273858070374
    2. '
' → logprob: -1.8091427087783813
    3. ' if' → logprob: -2.434142827987671
    4. '.' → logprob: -4.934142589569092
    5. '.
' → logprob: -6.559142589569092
    6. ':' → logprob: -6.684142589569092
    7. ':
' → logprob: -6.934142589569092
    8. ',' → logprob: -6.934142589569092
    9. ',
' → logprob: -7.684142589569092
    10. '
' → logprob: -7.809142589569092

Token 137: ' c' (ID: 274)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.12027689069509506
    2. ' ' → logprob: -3.620276927947998
    3. ' and' → logprob: -3.620276927947998
    4. ' afin' → logprob: -4.120276927947998
    5. 'et' → logprob: -4.620276927947998
    6. 'if' → logprob: -4.745276927947998
    7. ' if' → logprob: -5.370276927947998
    8. ',' → logprob: -5.995276927947998
    9. ' puis' → logprob: -5.995276927947998
    10. ' a' → logprob: -6.120276927947998

Token 138: ''est' (ID: 6616)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -1.1474369764328003
    2. 'e' → logprob: -1.3974369764328003
    3. 'on' → logprob: -2.02243709564209
    4. '#' → logprob: -2.77243709564209
    5. 'omme' → logprob: -2.77243709564209
    6. '```' → logprob: -3.39743709564209
    7. 'ont' → logprob: -3.77243709564209
    8. 'o' → logprob: -3.89743709564209
    9. '`' → logprob: -4.64743709564209
    10. '.' → logprob: -4.77243709564209

Token 139: '-à' (ID: 56297)
  Prédit: '-à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-à' → logprob: -0.4561029374599457
    2. 'à' → logprob: -1.331102967262268
    3. 'a' → logprob: -3.2061028480529785
    4. ' à' → logprob: -3.4561028480529785
    5. ''à' → logprob: -4.9561028480529785
    6. '#' → logprob: -5.2061028480529785
    7. ':' → logprob: -6.2061028480529785
    8. ' a' → logprob: -6.3311028480529785
    9. '```' → logprob: -6.3311028480529785
    10. '=' → logprob: -6.5811028480529785

Token 140: '-dire' (ID: 76064)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.15678827464580536
    2. 'dire' → logprob: -2.5317883491516113
    3. 'd' → logprob: -4.406788349151611
    4. 'a' → logprob: -4.906788349151611
    5. '-' → logprob: -5.156788349151611
    6. '-dire' → logprob: -5.656788349151611
    7. 'part' → logprob: -5.906788349151611
    8. 'près' → logprob: -6.156788349151611
    9. 'l' → logprob: -6.281788349151611
    10. 'direct' → logprob: -6.281788349151611

Token 141: ' b' (ID: 287)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4113178849220276
    2. ' if' → logprob: -1.6613178253173828
    3. 'a' → logprob: -2.661317825317383
    4. ' b' → logprob: -3.661317825317383
    5. ' ' → logprob: -4.286317825317383
    6. ' (' → logprob: -4.411317825317383
    7. ' si' → logprob: -4.411317825317383
    8. 'if' → logprob: -4.911317825317383
    9. ':' → logprob: -6.161317825317383
    10. 'b' → logprob: -6.911317825317383

Token 142: ' multip' (ID: 17524)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.348551869392395
    2. '*' → logprob: -1.223551869392395
    3. ' ' → logprob: -9.598551750183105
    4. '2' → logprob: -10.973551750183105
    5. ')' → logprob: -12.348551750183105
    6. '.' → logprob: -12.473551750183105
    7. ' ' → logprob: -12.848551750183105
    8. '1' → logprob: -13.473551750183105
    9. '**' → logprob: -13.598551750183105
    10. '```' → logprob: -13.723551750183105

Token 143: 'lié' (ID: 102412)
  Prédit: 'lié'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lié' → logprob: -0.00765738170593977
    2. 'li' → logprob: -4.882657527923584
    3. 'lic' → logprob: -10.882657051086426
    4. 'lé' → logprob: -11.382657051086426
    5. 'lication' → logprob: -12.257657051086426
    6. 'l' → logprob: -12.382657051086426
    7. 'liable' → logprob: -12.757657051086426
    8. '*' → logprob: -13.382657051086426
    9. 'lie' → logprob: -13.382657051086426
    10. 'lique' → logprob: -14.382657051086426

Token 144: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.038704924285411835
    2. 'par' → logprob: -3.2887048721313477
    3. '<|end|>' → logprob: -7.663704872131348
    4. ' ' → logprob: -9.413704872131348
    5. '*' → logprob: -10.163704872131348
    6. '_par' → logprob: -10.413704872131348
    7. '2' → logprob: -11.663704872131348
    8. '	par' → logprob: -12.413704872131348
    9. ' ' → logprob: -12.538704872131348
    10. ')' → logprob: -12.663704872131348

Token 145: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10022015124559402
    2. '2' → logprob: -2.350220203399658
    3. ' ' → logprob: -11.7252197265625
    4. '3' → logprob: -12.8502197265625
    5. '4' → logprob: -13.8502197265625
    6. '```' → logprob: -14.3502197265625
    7. ' deux' → logprob: -14.4752197265625
    8. '6' → logprob: -15.6002197265625
    9. '  ' → logprob: -15.9752197265625
    10. '<|end|>' → logprob: -16.8502197265625

Token 146: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03804171830415726
    2. ' ' → logprob: -3.288041830062866
    3. ' ' → logprob: -16.163042068481445
    4. ' deux' → logprob: -17.038042068481445
    5. '```' → logprob: -17.288042068481445
    6. ' two' → logprob: -18.413042068481445
    7. '  ' → logprob: -18.538042068481445
    8. '3' → logprob: -18.663042068481445
    9. '２' → logprob: -18.913042068481445
    10. '4' → logprob: -19.788042068481445

Token 147: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5483319163322449
    2. 'if' → logprob: -0.9233319163322449
    3. ' if' → logprob: -3.7983319759368896
    4. '
' → logprob: -7.2983317375183105
    5. ' 
' → logprob: -7.4233317375183105
    6. '.' → logprob: -8.298332214355469
    7. '.
' → logprob: -8.423332214355469
    8. ':
' → logprob: -8.923332214355469
    9. ',' → logprob: -9.173332214355469
    10. ':' → logprob: -9.298332214355469

Token 148: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.9743012671824545e-05
    2. ' if' → logprob: -11.000020027160645
    3. '
' → logprob: -12.875020027160645
    4. 'i' → logprob: -15.500020027160645
    5. 'If' → logprob: -16.375019073486328
    6. '```' → logprob: -16.375019073486328
    7. 'ifs' → logprob: -17.625019073486328
    8. ';if' → logprob: -18.125019073486328
    9. '#' → logprob: -19.000019073486328
    10. '  
' → logprob: -20.000019073486328

Token 149: ' L' (ID: 451)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -9.817902173381299e-05
    2. ' if' → logprob: -9.25009822845459
    3. '
' → logprob: -13.50009822845459
    4. 'i' → logprob: -14.87509822845459
    5. 'If' → logprob: -15.62509822845459
    6. '```' → logprob: -16.000097274780273
    7. ' 
' → logprob: -17.750097274780273
    8. 'ifs' → logprob: -18.125097274780273
    9. '  
' → logprob: -18.375097274780273
    10. '#' → logprob: -18.375097274780273

Token 150: ''op' (ID: 70747)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.22863182425498962
    2. 'a' → logprob: -1.603631854057312
    3. 'if' → logprob: -6.353631973266602
    4. ''' → logprob: -7.978631973266602
    5. '```' → logprob: -8.603631973266602
    6. 'es' → logprob: -8.728631973266602
    7. ' if' → logprob: -8.853631973266602
    8. '`' → logprob: -8.978631973266602
    9. ' a' → logprob: -9.228631973266602
    10. '#' → logprob: -9.353631973266602

Token 151: 'érateur' (ID: 108528)
  Prédit: 'ér'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ér' → logprob: -0.8963499069213867
    2. 'r' → logprob: -1.3963499069213867
    3. 'er' → logprob: -2.1463499069213867
    4. 'ération' → logprob: -2.3963499069213867
    5. 'ort' → logprob: -3.3963499069213867
    6. 'if' → logprob: -3.7713499069213867
    7. 'érateur' → logprob: -3.8963499069213867
    8. 'ar' → logprob: -4.521349906921387
    9. 'ré' → logprob: -4.896349906921387
    10. 'osition' → logprob: -5.521349906921387

Token 152: ' <=' (ID: 5017)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.9789038896560669
    2. '>' → logprob: -1.728903889656067
    3. ' ==' → logprob: -1.728903889656067
    4. ' <' → logprob: -2.1039037704467773
    5. '<' → logprob: -2.6039037704467773
    6. '==' → logprob: -3.3539037704467773
    7. ' <=' → logprob: -3.7289037704467773
    8. ' `' → logprob: -5.353903770446777
    9. '<=' → logprob: -6.353903770446777
    10. ' de' → logprob: -6.853903770446777

Token 153: ' vér' (ID: 42524)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.5375418066978455
    2. 'if' → logprob: -1.4125418663024902
    3. ' if' → logprob: -2.5375418663024902
    4. ' permet' → logprob: -3.0375418663024902
    5. ' ' → logprob: -4.03754186630249
    6. ' signifie' → logprob: -5.28754186630249
    7. 'est' → logprob: -5.66254186630249
    8. ' sera' → logprob: -5.78754186630249
    9. ' s' → logprob: -5.91254186630249
    10. ' is' → logprob: -6.28754186630249

Token 154: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.00010342398309148848
    2. 'if' → logprob: -9.500102996826172
    3. 'a' → logprob: -11.250102996826172
    4. 'ifié' → logprob: -12.500102996826172
    5. 'er' → logprob: -13.125102996826172
    6. 'ifi' → logprob: -13.625102996826172
    7. 'ifier' → logprob: -14.000102996826172
    8. 'иф' → logprob: -14.125102996826172
    9. 'ie' → logprob: -14.250102996826172
    10. 'ief' → logprob: -14.250102996826172

Token 155: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.1834753155708313
    2. 'si' → logprob: -1.9334752559661865
    3. ' if' → logprob: -4.058475494384766
    4. ' s' → logprob: -6.433475494384766
    5. 'if' → logprob: -6.558475494384766
    6. 's' → logprob: -6.683475494384766
    7. ' ' → logprob: -7.183475494384766
    8. ' ' → logprob: -7.933475494384766
    9. ' la' → logprob: -9.558475494384766
    10. 'a' → logprob: -9.683475494384766

Token 156: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.08898364007472992
    2. 'a' → logprob: -2.4639835357666016
    3. ' ' → logprob: -10.463983535766602
    4. ' ' → logprob: -11.713983535766602
    5. '	a' → logprob: -12.088983535766602
    6. ' ' → logprob: -14.463983535766602
    7. '(a' → logprob: -15.338983535766602
    8. '_a' → logprob: -15.713983535766602
    9. '>a' → logprob: -16.5889835357666
    10. ''a' → logprob: -16.7139835357666

Token 157: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.22117547690868378
    2. ' <=' → logprob: -1.7211754322052002
    3. '<=' → logprob: -4.471175670623779
    4. ' is' → logprob: -5.471175670623779
    5. 'est' → logprob: -6.346175670623779
    6. ' ' → logprob: -6.596175670623779
    7. ' ' → logprob: -8.846175193786621
    8. '<|end|>' → logprob: -8.971175193786621
    9. 'le' → logprob: -9.096175193786621
    10. ' ≤' → logprob: -9.846175193786621

Token 158: ' inférieur' (ID: 191498)
  Prédit: ' inférieur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inférieur' → logprob: -0.0020103605929762125
    2. 'inf' → logprob: -7.377010345458984
    3. '<=' → logprob: -7.502010345458984
    4. ' <=' → logprob: -8.002010345458984
    5. ' inf' → logprob: -8.377010345458984
    6. ' supérieur' → logprob: -9.502010345458984
    7. ' moins' → logprob: -10.002010345458984
    8. ' moindre' → logprob: -10.127010345458984
    9. '<' → logprob: -10.752010345458984
    10. 'infer' → logprob: -11.002010345458984

Token 159: ' ou' (ID: 2031)
  Prédit: ' ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.20603933930397034
    2. 'ou' → logprob: -1.706039309501648
    3. '=' → logprob: -6.0810394287109375
    4. ' ' → logprob: -7.4560394287109375
    5. 'au' → logprob: -7.4560394287109375
    6. ' or' → logprob: -7.8310394287109375
    7. '<|end|>' → logprob: -8.581039428710938
    8. 'à' → logprob: -9.206039428710938
    9. ' à' → logprob: -9.331039428710938
    10. '_' → logprob: -9.456039428710938

Token 160: ' égal' (ID: 15059)
  Prédit: ' égal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' égal' → logprob: -0.6503232717514038
    2. 'égal' → logprob: -1.2753232717514038
    3. '=' → logprob: -2.2753233909606934
    4. 'ou' → logprob: -2.9003233909606934
    5. ' ou' → logprob: -3.5253233909606934
    6. ' ég' → logprob: -5.025323390960693
    7. '```' → logprob: -7.025323390960693
    8. ' ' → logprob: -7.275323390960693
    9. 'é' → logprob: -7.400323390960693
    10. 'e' → logprob: -7.650323390960693

Token 161: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.035006407648324966
    2. ' a' → logprob: -3.910006523132324
    3. ' ' → logprob: -5.285006523132324
    4. 'à' → logprob: -6.035006523132324
    5. 'a' → logprob: -6.535006523132324
    6. '  ' → logprob: -6.535006523132324
    7. ' au' → logprob: -6.910006523132324
    8. ')' → logprob: -7.535006523132324
    9. 'au' → logprob: -7.535006523132324
    10. ' ' → logprob: -7.785006523132324

Token 162: ' (' (ID: 350)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.6131483316421509
    2. ' ' → logprob: -1.1131483316421509
    3. 'b' → logprob: -2.2381482124328613
    4. '2' → logprob: -3.8631482124328613
    5. ' (' → logprob: -6.863148212432861
    6. '(' → logprob: -7.613148212432861
    7. '  ' → logprob: -8.61314868927002
    8. ' ' → logprob: -8.86314868927002
    9. '(b' → logprob: -9.98814868927002
    10. '6' → logprob: -10.36314868927002

Token 163: 'b' (ID: 65)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.29794952273368835
    2. ' b' → logprob: -1.6729495525360107
    3. '2' → logprob: -3.1729495525360107
    4. 'b' → logprob: -3.6729495525360107
    5. ' à' → logprob: -6.672949314117432
    6. ')' → logprob: -7.547949314117432
    7. ' )' → logprob: -8.17294979095459
    8. ' ' → logprob: -8.42294979095459
    9. ' (' → logprob: -9.17294979095459
    10. ' au' → logprob: -10.17294979095459

Token 164: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.019102759659290314
    2. '*' → logprob: -4.019102573394775
    3. ' ' → logprob: -7.519102573394775
    4. ' ' → logprob: -8.019103050231934
    5. ')' → logprob: -10.019103050231934
    6. ' )' → logprob: -10.769103050231934
    7. '2' → logprob: -12.019103050231934
    8. '  ' → logprob: -12.769103050231934
    9. ' *)' → logprob: -14.019103050231934
    10. ' multiplied' → logprob: -14.269103050231934

Token 165: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3133051097393036
    2. '2' → logprob: -1.313305139541626
    3. ')' → logprob: -10.688304901123047
    4. ' ' → logprob: -11.063304901123047
    5. ' )' → logprob: -12.688304901123047
    6. '  ' → logprob: -13.688304901123047
    7. '   ' → logprob: -15.938304901123047
    8. '```' → logprob: -16.063304901123047
    9. ' *' → logprob: -16.875804901123047
    10. '3' → logprob: -17.000804901123047

Token 166: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002186545403674245
    2. ' ' → logprob: -6.1271867752075195
    3. ')' → logprob: -13.87718677520752
    4. ' ' → logprob: -15.00218677520752
    5. '```' → logprob: -16.127185821533203
    6. '  ' → logprob: -17.627185821533203
    7. '

' → logprob: -17.877185821533203
    8. ' )' → logprob: -18.127185821533203
    9. '۲' → logprob: -18.627185821533203
    10. ').' → logprob: -19.064685821533203

Token 167: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016080355271697044
    2. '):' → logprob: -4.266080379486084
    3. ' )' → logprob: -6.391080379486084
    4. ').' → logprob: -9.016079902648926
    5. ':' → logprob: -9.891079902648926
    6. ' ):' → logprob: -10.141079902648926
    7. '):
' → logprob: -12.016079902648926
    8. ')
' → logprob: -13.016079902648926
    9. ' ' → logprob: -13.266079902648926
    10. '))' → logprob: -13.391079902648926

Token 168: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.259079363080673e-05
    2. ' if' → logprob: -11.750012397766113
    3. 'i' → logprob: -12.750012397766113
    4. '
' → logprob: -13.500012397766113
    5. '```' → logprob: -15.500012397766113
    6. ':' → logprob: -16.25001335144043
    7. 'If' → logprob: -17.00001335144043
    8. ':
' → logprob: -17.75001335144043
    9. ';if' → logprob: -17.75001335144043
    10. '#' → logprob: -18.50001335144043

Token 169: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.0009433844243176281
    2. 'a' → logprob: -7.000943183898926
    3. ' ' → logprob: -11.000943183898926
    4. ' ' → logprob: -11.125943183898926
    5. '	a' → logprob: -14.875943183898926
    6. ' ' → logprob: -16.500944137573242
    7. '_a' → logprob: -17.500944137573242
    8. ' а' → logprob: -18.625944137573242
    9. '  ' → logprob: -18.625944137573242
    10. ' ‌' → logprob: -19.000944137573242

Token 170: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0006675214972347021
    2. '<=' → logprob: -7.375667572021484
    3. ' ' → logprob: -10.125667572021484
    4. ' <' → logprob: -14.750667572021484
    5. ' <=",' → logprob: -15.750667572021484
    6. ')<=' → logprob: -16.125667572021484
    7. ' ' → logprob: -16.625667572021484
    8. '  ' → logprob: -16.750667572021484
    9. ')' → logprob: -17.750667572021484
    10. 's' → logprob: -18.125667572021484

Token 171: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.02046048641204834
    2. 'b' → logprob: -4.020460605621338
    3. ' ' → logprob: -6.145460605621338
    4. ' (' → logprob: -9.02046012878418
    5. ' ' → logprob: -10.64546012878418
    6. '2' → logprob: -11.52046012878418
    7. '(b' → logprob: -12.02046012878418
    8. '(' → logprob: -13.77046012878418
    9. '  ' → logprob: -14.02046012878418
    10. '	b' → logprob: -14.64546012878418

Token 172: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.016126101836562157
    2. '*' → logprob: -4.1411261558532715
    3. ':' → logprob: -9.516125679016113
    4. ' ' → logprob: -12.016125679016113
    5. ' ' → logprob: -12.141125679016113
    6. ' :' → logprob: -12.641125679016113
    7. '*:' → logprob: -13.016125679016113
    8. '2' → logprob: -14.016125679016113
    9. '):' → logprob: -15.891125679016113
    10. '	' → logprob: -16.39112663269043

Token 173: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12692968547344208
    2. '2' → logprob: -2.126929759979248
    3. ' ' → logprob: -13.50192928314209
    4. '  ' → logprob: -15.62692928314209
    5. '<|end|>' → logprob: -17.751930236816406
    6. '۲' → logprob: -18.814430236816406
    7. ' 
' → logprob: -18.876930236816406
    8. '```' → logprob: -19.126930236816406
    9. '.' → logprob: -19.251930236816406
    10. ')' → logprob: -19.564430236816406

Token 174: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '۲' → logprob: -18.625158309936523
    4. '```' → logprob: -19.250158309936523
    5. ' ' → logprob: -19.375158309936523
    6. '２' → logprob: -19.500158309936523
    7. '  ' → logprob: -19.500158309936523
    8. '   ' → logprob: -20.875158309936523
    9. '२' → logprob: -20.937658309936523
    10. '٢' → logprob: -21.062658309936523

Token 175: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00012248923303559422
    2. ':
' → logprob: -9.1251220703125
    3. ' :' → logprob: -11.2501220703125
    4. ':
' → logprob: -15.0001220703125
    5. '):' → logprob: -16.7501220703125
    6. ':**' → logprob: -17.7501220703125
    7. ':

' → logprob: -18.1251220703125
    8. ' :
' → logprob: -18.1251220703125
    9. '：' → logprob: -18.5001220703125
    10. '():' → logprob: -18.7501220703125

Token 176: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.41361382603645325
    2. '   ' → logprob: -1.1636137962341309
    3. ':
' → logprob: -4.288613796234131
    4. 'print' → logprob: -4.663613796234131
    5. ' print' → logprob: -6.038613796234131
    6. ' :' → logprob: -8.163614273071289
    7. '
' → logprob: -8.913614273071289
    8. '    
' → logprob: -8.913614273071289
    9. '	print' → logprob: -9.413614273071289
    10. ' :
' → logprob: -10.163614273071289

Token 177: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.055297911167144775
    2. '   ' → logprob: -3.5552978515625
    3. ' print' → logprob: -3.6802978515625
    4. '
' → logprob: -12.6802978515625
    5. '	print' → logprob: -13.0552978515625
    6. ' ' → logprob: -14.3052978515625
    7. '   ' → logprob: -14.4302978515625
    8. '    
' → logprob: -14.9302978515625
    9. '```' → logprob: -15.0552978515625
    10. '#' (adapté à ' #') → logprob: -15.1802978515625

Token 178: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000630947935860604
    2. ' print' → logprob: -7.375630855560303
    3. '   ' → logprob: -12.625631332397461
    4. 'pr' → logprob: -14.375631332397461
    5. 'prin' → logprob: -14.875631332397461
    6. '	print' → logprob: -17.37563133239746
    7. 'p' → logprob: -17.37563133239746
    8. 'prit' → logprob: -17.37563133239746
    9. 'Print' → logprob: -17.50063133239746
    10. 'pass' → logprob: -17.75063133239746

Token 179: ' la' (ID: 557)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7455430030822754
    2. '    ' → logprob: -1.4955430030822754
    3. ' print' → logprob: -2.2455430030822754
    4. '   ' → logprob: -2.4955430030822754
    5. 'a' → logprob: -2.9955430030822754
    6. ' ' → logprob: -3.6205430030822754
    7. 'print' → logprob: -3.6205430030822754
    8. ' ' → logprob: -5.120543003082275
    9. ' b' → logprob: -6.370543003082275
    10. '   ' → logprob: -7.745543003082275

Token 180: ' condition' (ID: 7060)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0821642056107521
    2. '   ' → logprob: -3.3321642875671387
    3. ' print' → logprob: -3.7071642875671387
    4. ':' → logprob: -5.332164287567139
    5. ' ' → logprob: -5.457164287567139
    6. 'a' → logprob: -5.457164287567139
    7. 'condition' → logprob: -6.957164287567139
    8. ' condition' → logprob: -7.707164287567139
    9. 'r' → logprob: -7.957164287567139
    10. '    ' → logprob: -8.08216381072998

Token 181: ' préc' (ID: 20129)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14156115055084229
    2. '   ' → logprob: -2.7665610313415527
    3. ' print' → logprob: -3.3915610313415527
    4. ' :' → logprob: -4.016561031341553
    5. 'print' → logprob: -4.641561031341553
    6. '    ' → logprob: -5.016561031341553
    7. ' ' → logprob: -8.266561508178711
    8. ':
' → logprob: -8.766561508178711
    9. '	print' → logprob: -9.016561508178711
    10. ' ' → logprob: -9.016561508178711

Token 182: 'isée' (ID: 59331)
  Prédit: 'ède'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ède' → logprob: -0.0899096205830574
    2. 'ise' → logprob: -3.214909553527832
    3. 'éd' → logprob: -4.714909553527832
    4. 'ed' → logprob: -4.714909553527832
    5. 'isée' → logprob: -4.714909553527832
    6. 'd' → logprob: -5.339909553527832
    7. 'ede' → logprob: -5.339909553527832
    8. 'é' → logprob: -6.214909553527832
    9. 'isé' → logprob: -6.464909553527832
    10. 'is' → logprob: -6.589909553527832

Token 183: ' juste' (ID: 31553)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.13916000723838806
    2. ':' → logprob: -2.514159917831421
    3. '   ' → logprob: -3.764159917831421
    4. 'est' → logprob: -4.01416015625
    5. ' :' → logprob: -5.51416015625
    6. 'a' → logprob: -7.13916015625
    7. ',' → logprob: -7.38916015625
    8. ' is' → logprob: -7.76416015625
    9. 's' → logprob: -8.13916015625
    10. ' alors' → logprob: -8.13916015625

Token 184: ' au' (ID: 2791)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.3185787796974182
    2. 'au' → logprob: -1.8185787200927734
    3. 'avant' → logprob: -2.5685787200927734
    4. ':' → logprob: -4.443578720092773
    5. ' après' → logprob: -4.568578720092773
    6. 'apr' → logprob: -5.318578720092773
    7. '   ' → logprob: -5.693578720092773
    8. 'after' → logprob: -6.818578720092773
    9. ' au' → logprob: -7.193578720092773
    10. ' ' → logprob: -8.318578720092773

Token 185: '-dessus' (ID: 74812)
  Prédit: 'dess'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dess' → logprob: -0.008797031827270985
    2. '-dessus' → logprob: -4.7587971687316895
    3. ' dessus' → logprob: -9.633796691894531
    4. 'd' → logprob: -10.508796691894531
    5. '-dessous' → logprob: -10.633796691894531
    6. 'del' → logprob: -10.633796691894531
    7. '-' → logprob: -11.633796691894531
    8. 'des' → logprob: -11.758796691894531
    9. 'dé' → logprob: -11.883796691894531
    10. '#' → logprob: -12.758796691894531

Token 186: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009263569489121437
    2. ',' → logprob: -5.509263515472412
    3. ' :' → logprob: -6.134263515472412
    4. ':
' → logprob: -6.509263515472412
    5. '   ' → logprob: -6.884263515472412
    6. ' est' → logprob: -8.13426399230957
    7. ' print' → logprob: -10.00926399230957
    8. ' ,' → logprob: -10.50926399230957
    9. ' :
' → logprob: -10.63426399230957
    10. 'est' → logprob: -11.13426399230957

Token 187: ' vraie' (ID: 105841)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.35769185423851013
    2. 'True' → logprob: -1.4826918840408325
    3. ' True' → logprob: -2.857691764831543
    4. ' vraie' → logprob: -4.357691764831543
    5. 'V' → logprob: -6.607691764831543
    6. 'true' → logprob: -7.107691764831543
    7. ' respect' → logprob: -8.107691764831543
    8. ' vrai' → logprob: -8.607691764831543
    9. ' V' → logprob: -9.107691764831543
    10. 'respect' → logprob: -9.232691764831543

Token 188: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016814999282360077
    2. ':
' → logprob: -4.391815185546875
    3. '   ' → logprob: -5.766815185546875
    4. ' :' → logprob: -7.641815185546875
    5. 'print' → logprob: -8.016815185546875
    6. ',' → logprob: -8.641815185546875
    7. ' print' → logprob: -9.266815185546875
    8. ' :
' → logprob: -9.766815185546875
    9. ':
' → logprob: -12.266815185546875
    10. ':\' → logprob: -12.266815185546875

Token 189: ' cela' (ID: 17542)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.14319820702075958
    2. 'print' → logprob: -2.268198251724243
    3. '   ' → logprob: -3.518198251724243
    4. '    ' → logprob: -8.518198013305664
    5. '	print' → logprob: -10.768198013305664
    6. ' ' → logprob: -11.018198013305664
    7. ' ' → logprob: -12.268198013305664
    8. '   ' → logprob: -12.393198013305664
    9. ' prin' → logprob: -12.518198013305664
    10. '    
' → logprob: -12.893198013305664

Token 190: ' signifie' (ID: 81149)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.404899537563324
    2. 'print' → logprob: -1.2798995971679688
    3. ':' → logprob: -3.4048995971679688
    4. '   ' → logprob: -3.9048995971679688
    5. ' imprime' → logprob: -7.529899597167969
    6. ' :' → logprob: -8.029899597167969
    7. ' ' → logprob: -8.654899597167969
    8. '    ' → logprob: -8.904899597167969
    9. ' signifie' → logprob: -9.404899597167969
    10. '	print' → logprob: -9.529899597167969

Token 191: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04751210659742355
    2. ' que' → logprob: -3.2975120544433594
    3. '"' → logprob: -5.797512054443359
    4. 'print' → logprob: -6.047512054443359
    5. ' ' → logprob: -6.172512054443359
    6. '    ' → logprob: -7.422512054443359
    7. '  ' → logprob: -8.42251205444336
    8. ' print' → logprob: -8.67251205444336
    9. '("' → logprob: -8.79751205444336
    10. ' qu' → logprob: -9.29751205444336

Token 192: ' a' (ID: 261)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12739041447639465
    2. ' print' → logprob: -2.3773903846740723
    3. 'a' → logprob: -4.252390384674072
    4. ' a' → logprob: -4.877390384674072
    5. '   ' → logprob: -5.627390384674072
    6. ' ' → logprob: -7.252390384674072
    7. ' la' → logprob: -8.37739086151123
    8. 'le' → logprob: -9.62739086151123
    9. '"' → logprob: -9.62739086151123
    10. ' le' → logprob: -9.87739086151123

Token 193: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.23577304184436798
    2. 'est' → logprob: -2.7357730865478516
    3. ' print' → logprob: -2.8607730865478516
    4. 'print' → logprob: -3.6107730865478516
    5. ' vaut' → logprob: -3.9857730865478516
    6. ' ' → logprob: -4.360773086547852
    7. ' a' → logprob: -4.985773086547852
    8. '   ' → logprob: -5.235773086547852
    9. ' is' → logprob: -5.735773086547852
    10. ' sera' → logprob: -5.860773086547852

Token 194: ' au' (ID: 2791)
  Prédit: ' inférieur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' inférieur' → logprob: -0.393860399723053
    2. 'inf' → logprob: -1.2688603401184082
    3. 'plus' → logprob: -4.518860340118408
    4. 'infer' → logprob: -4.643860340118408
    5. 's' → logprob: -5.268860340118408
    6. ' inf' → logprob: -5.393860340118408
    7. 'bien' → logprob: -5.393860340118408
    8. 'dans' → logprob: -6.268860340118408
    9. 'moins' → logprob: -6.393860340118408
    10. 'correct' → logprob: -7.268860340118408

Token 195: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.029814831912517548
    2. 'maximum' → logprob: -4.154814720153809
    3. 'moins' → logprob: -4.404814720153809
    4. 'max' → logprob: -7.654814720153809
    5. 'dess' → logprob: -7.779814720153809
    6. 'minimum' → logprob: -7.779814720153809
    7. ' plus' → logprob: -9.904814720153809
    8. 'pl' → logprob: -10.029814720153809
    9. '-plus' → logprob: -11.404814720153809
    10. 'm' → logprob: -11.654814720153809

Token 196: ' égal' (ID: 15059)
  Prédit: ' égal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' égal' → logprob: -0.2802768647670746
    2. 'égal' → logprob: -1.655276894569397
    3. 'double' → logprob: -3.7802767753601074
    4. 'le' → logprob: -4.530276775360107
    5. ' ég' → logprob: -5.030276775360107
    6. ' double' → logprob: -5.530276775360107
    7. 'b' → logprob: -5.655276775360107
    8. ' le' → logprob: -5.780276775360107
    9. 'ég' → logprob: -7.155276775360107
    10. ' ' → logprob: -8.155277252197266

Token 197: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.007768343668431044
    2. 'à' → logprob: -5.382768154144287
    3. ' au' → logprob: -7.132768154144287
    4. 'e' → logprob: -7.257768154144287
    5. ' a' → logprob: -7.507768154144287
    6. ' ' → logprob: -7.507768154144287
    7. ''à' → logprob: -8.757768630981445
    8. 'a' → logprob: -8.882768630981445
    9. 'au' → logprob: -9.007768630981445
    10. '   ' → logprob: -9.632768630981445

Token 198: ' deux' (ID: 10301)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.31748315691947937
    2. 'b' → logprob: -1.3174831867218018
    3. ' ' → logprob: -5.692482948303223
    4. '2' → logprob: -8.442482948303223
    5. ' double' → logprob: -8.442482948303223
    6. ' (' → logprob: -8.942482948303223
    7. 'double' → logprob: -9.692482948303223
    8. '(b' → logprob: -10.067482948303223
    9. ' la' → logprob: -10.192482948303223
    10. '(' → logprob: -10.817482948303223

Token 199: ' fois' (ID: 14697)
  Prédit: 'fois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fois' → logprob: -0.494331032037735
    2. ' fois' → logprob: -0.9943310022354126
    3. ' ' → logprob: -4.244330883026123
    4. 'fo' → logprob: -5.994330883026123
    5. '*' → logprob: -7.244330883026123
    6. ' *' → logprob: -7.244330883026123
    7. 'f' → logprob: -7.869330883026123
    8. ' ' → logprob: -7.869330883026123
    9. ' espaces' → logprob: -8.369331359863281
    10. '   ' → logprob: -9.244331359863281

Token 200: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.2287231683731079
    2. 'b' → logprob: -1.603723168373108
    3. ' ' → logprob: -6.353723049163818
    4. ' l' → logprob: -7.353723049163818
    5. 'l' → logprob: -7.728723049163818
    6. ' la' → logprob: -8.228723526000977
    7. 'la' → logprob: -9.228723526000977
    8. ' ' → logprob: -10.103723526000977
    9. ' ' → logprob: -11.603723526000977
    10. '  ' → logprob: -11.728723526000977

Token 201: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.49314892292022705
    2. '   ' → logprob: -0.993148922920227
    3. 'print' → logprob: -4.8681488037109375
    4. '.' → logprob: -5.2431488037109375
    5. ',' → logprob: -6.1181488037109375
    6. ':
' → logprob: -6.2431488037109375
    7. ' print' → logprob: -6.9931488037109375
    8. ' :' → logprob: -7.6181488037109375
    9. '
' → logprob: -9.243148803710938
    10. '       ' → logprob: -10.243148803710938

Token 202: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022593331523239613
    2. 'print' → logprob: -6.627259254455566
    3. ' print' → logprob: -7.002259254455566
    4. '   ' → logprob: -10.877259254455566
    5. '       ' → logprob: -13.252259254455566
    6. '    ' → logprob: -14.377259254455566
    7. '
' → logprob: -15.002259254455566
    8. '	print' → logprob: -15.002259254455566
    9. '    
' → logprob: -15.002259254455566
    10. '  ' → logprob: -15.002259254455566

Token 203: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7334199547767639
    2. 'print' → logprob: -0.7334199547767639
    3. ' print' → logprob: -3.233419895172119
    4. '
' → logprob: -11.483420372009277
    5. ' ' → logprob: -11.483420372009277
    6. '	print' → logprob: -11.858420372009277
    7. '    
' → logprob: -12.108420372009277
    8. '  ' → logprob: -12.233420372009277
    9. '   ' → logprob: -12.358420372009277
    10. '    ' → logprob: -12.858420372009277

Token 204: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06244140863418579
    2. ' print' → logprob: -3.437441349029541
    3. '   ' → logprob: -3.562441349029541
    4. ' ' → logprob: -12.0624418258667
    5. '	print' → logprob: -12.8124418258667
    6. '  ' → logprob: -12.9374418258667
    7. '   ' → logprob: -13.9374418258667
    8. '    ' → logprob: -14.0624418258667
    9. '
' → logprob: -14.5624418258667
    10. '#' → logprob: -14.6874418258667

Token 205: ' affiche' (ID: 127479)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7247004508972168
    2. 'print' → logprob: -0.8497004508972168
    3. ' print' → logprob: -2.474700450897217
    4. 'pr' → logprob: -6.349700450897217
    5. ' ' → logprob: -7.724700450897217
    6. '    ' → logprob: -7.974700450897217
    7. '  ' → logprob: -8.474700927734375
    8. '.' → logprob: -8.724700927734375
    9. '   ' → logprob: -8.849700927734375
    10. '	print' → logprob: -8.974700927734375

Token 206: ' alors' (ID: 17971)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.023308604955673218
    2. '(' → logprob: -3.773308515548706
    3. '('' → logprob: -10.523308753967285
    4. '(a' → logprob: -10.648308753967285
    5. '(f' → logprob: -12.273308753967285
    6. '"' → logprob: -13.023308753967285
    7. '   ' → logprob: -13.273308753967285
    8. '(
' → logprob: -13.898308753967285
    9. '("")' → logprob: -14.148308753967285
    10. 'a' → logprob: -14.273308753967285

Token 207: ' la' (ID: 557)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.06278606504201889
    2. '(' → logprob: -2.812786102294922
    3. '"' → logprob: -7.687786102294922
    4. '(a' → logprob: -8.437786102294922
    5. '('' → logprob: -9.312786102294922
    6. '(f' → logprob: -11.187786102294922
    7. 'a' → logprob: -11.187786102294922
    8. '   ' → logprob: -11.812786102294922
    9. '"a' → logprob: -12.437786102294922
    10. 'print' → logprob: -12.687786102294922

Token 208: ' valeur' (ID: 41664)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.6808071732521057
    2. ' phrase' → logprob: -1.930807113647461
    3. 'phrase' → logprob: -2.680807113647461
    4. 'chaine' → logprob: -2.805807113647461
    5. 'string' → logprob: -2.930807113647461
    6. 'print' → logprob: -3.055807113647461
    7. ' message' → logprob: -3.305807113647461
    8. '"' → logprob: -3.430807113647461
    9. 'cha' → logprob: -4.055807113647461
    10. 'texte' → logprob: -4.430807113647461

Token 209: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9632570743560791
    2. 'de' → logprob: -0.9632570743560791
    3. ' de' → logprob: -2.463257074356079
    4. '(' → logprob: -2.838257074356079
    5. '(a' → logprob: -2.963257074356079
    6. '("' → logprob: -3.838257074356079
    7. '   ' → logprob: -4.5882568359375
    8. '"' → logprob: -5.8382568359375
    9. 'print' → logprob: -6.3382568359375
    10. ' a' → logprob: -6.7132568359375

Token 210: '0' (ID: 15)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.8239600658416748
    2. 'a' → logprob: -1.1989600658416748
    3. '("' → logprob: -2.073960065841675
    4. '(' → logprob: -2.198960065841675
    5. '1' → logprob: -4.448960304260254
    6. '"' → logprob: -5.448960304260254
    7. '0' → logprob: -6.323960304260254
    8. '(True' → logprob: -6.323960304260254
    9. 'True' → logprob: -6.948960304260254
    10. '"a' → logprob: -7.073960304260254

Token 211: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12903372943401337
    2. '
' → logprob: -2.7540338039398193
    3. ')' → logprob: -3.1290338039398193
    4. '0' → logprob: -5.25403356552124
    5. '   ' → logprob: -5.75403356552124
    6. ' print' → logprob: -5.87903356552124
    7. '    
' → logprob: -6.87903356552124
    8. ')
' → logprob: -8.754034042358398
    9. '<|end|>' → logprob: -8.879034042358398
    10. '.print' → logprob: -9.254034042358398

Token 212: ' l' (ID: 305)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.024777894839644432
    2. ' print' → logprob: -4.899777889251709
    3. '   ' → logprob: -5.649777889251709
    4. ' la' → logprob: -5.774777889251709
    5. '`' → logprob: -6.024777889251709
    6. 'la' → logprob: -6.149777889251709
    7. 'a' → logprob: -6.899777889251709
    8. 'i' → logprob: -7.399777889251709
    9. ' ' → logprob: -7.649777889251709
    10. 'l' → logprob: -7.899777889251709

Token 213: ''aide' (ID: 75684)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08074800670146942
    2. 'e' → logprob: -3.2057480812072754
    3. ''écran' → logprob: -3.4557480812072754
    4. 'print' → logprob: -6.080748081207275
    5. ''utilisateur' → logprob: -6.205748081207275
    6. 'é' → logprob: -8.455747604370117
    7. '   ' → logprob: -8.580747604370117
    8. '’écran' → logprob: -8.705747604370117
    9. ''' → logprob: -8.830747604370117
    10. 'console' → logprob: -9.955747604370117

Token 214: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6840306520462036
    2. 'print' → logprob: -0.9340306520462036
    3. ' print' → logprob: -2.434030532836914
    4. ' d' → logprob: -5.059030532836914
    5. 'de' → logprob: -5.684030532836914
    6. '   ' → logprob: -6.059030532836914
    7. 'd' → logprob: -6.809030532836914
    8. ')' → logprob: -7.184030532836914
    9. ' du' → logprob: -8.309030532836914
    10. '(print' → logprob: -8.809030532836914

Token 215: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0031784253660589457
    2. ' print' → logprob: -5.753178596496582
    3. '```' → logprob: -15.128178596496582
    4. '   ' → logprob: -15.378178596496582
    5. 'prin' → logprob: -15.628178596496582
    6. ' ' → logprob: -16.753177642822266
    7. 'pr' → logprob: -17.003177642822266
    8. '`' → logprob: -17.378177642822266
    9. ' ' → logprob: -17.503177642822266
    10. '(print' → logprob: -18.128177642822266

Token 216: ' fonction' (ID: 17610)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.941850526549388e-06
    2. ' print' → logprob: -11.750007629394531
    3. 'prin' → logprob: -17.00000762939453
    4. '```' → logprob: -18.50000762939453
    5. 'pr' → logprob: -19.00000762939453
    6. '   ' → logprob: -20.62500762939453
    7. '
' → logprob: -21.50000762939453
    8. ' ' → logprob: -21.75000762939453
    9. 'printf' → logprob: -21.75000762939453
    10. '#print' → logprob: -21.87500762939453

Token 217: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0052342405542731285
    2. ' print' → logprob: -5.255234241485596
    3. 'prin' → logprob: -15.880233764648438
    4. '(print' → logprob: -16.130233764648438
    5. '```' → logprob: -16.130233764648438
    6. '`' → logprob: -16.255233764648438
    7. '   ' → logprob: -17.130233764648438
    8. ' ' → logprob: -17.130233764648438
    9. 'pr' → logprob: -17.630233764648438
    10. 'printf' → logprob: -17.880233764648438

Token 218: '().
' (ID: 58434)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38905903697013855
    2. '()' → logprob: -1.139059066772461
    3. '0' → logprob: -6.764059066772461
    4. '()
' → logprob: -7.764059066772461
    5. '   ' → logprob: -8.389059066772461
    6. '(
' → logprob: -8.639059066772461
    7. 'print' → logprob: -9.264059066772461
    8. '("' → logprob: -10.264059066772461
    9. '('' → logprob: -10.639059066772461
    10. '(print' → logprob: -11.514059066772461

Token 219: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005338943563401699
    2. 'print' → logprob: -5.2553391456604
    3. '```' → logprob: -10.005338668823242
    4. ' print' → logprob: -10.505338668823242
    5. '
' → logprob: -10.755338668823242
    6. '       ' → logprob: -12.005338668823242
    7. '    
' → logprob: -12.755338668823242
    8. '   ' → logprob: -13.630338668823242
    9. '``' → logprob: -14.630338668823242
    10. '	print' → logprob: -15.755338668823242

Token 220: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3893241584300995
    2. '   ' → logprob: -1.1393241882324219
    3. ' print' → logprob: -6.014324188232422
    4. '```' → logprob: -12.514324188232422
    5. '       ' → logprob: -13.764324188232422
    6. '	print' → logprob: -14.389324188232422
    7. 'pr' → logprob: -14.764324188232422
    8. '   ' → logprob: -15.014324188232422
    9. '  ' → logprob: -15.764324188232422
    10. '    
' → logprob: -16.389324188232422

Token 221: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.190516859292984
    2. '   ' → logprob: -2.065516948699951
    3. ' print' → logprob: -3.065516948699951
    4. 'else' → logprob: -10.190516471862793
    5. '```' → logprob: -10.440516471862793
    6. ' else' → logprob: -12.565516471862793
    7. '    ' → logprob: -12.815516471862793
    8. '	print' → logprob: -12.815516471862793
    9. '       ' → logprob: -12.815516471862793
    10. ' ' → logprob: -13.190516471862793

Token 222: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14294292032718658
    2. '()' → logprob: -2.0179429054260254
    3. '("' → logprob: -8.642943382263184
    4. '('' → logprob: -10.142943382263184
    5. ' (' → logprob: -11.267943382263184
    6. '("")' → logprob: -11.517943382263184
    7. ' ()' → logprob: -11.767943382263184
    8. '0' → logprob: -11.892943382263184
    9. '(
' → logprob: -13.017943382263184
    10. '   ' → logprob: -13.142943382263184

Token 223: ' affiche' (ID: 127479)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06227643042802811
    2. '()' → logprob: -2.8122763633728027
    3. '0' → logprob: -8.312276840209961
    4. '("' → logprob: -10.562276840209961
    5. '('' → logprob: -10.812276840209961
    6. ' (' → logprob: -12.687276840209961
    7. '("")' → logprob: -12.937276840209961
    8. '()
' → logprob: -13.062276840209961
    9. '   ' → logprob: -13.312276840209961
    10. '(
' → logprob: -13.562276840209961

Token 224: ' des' (ID: 731)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004028533585369587
    2. '("' → logprob: -5.6290283203125
    3. '0' → logprob: -8.2540283203125
    4. '('' → logprob: -8.8790283203125
    5. '()' → logprob: -11.0040283203125
    6. '("")' → logprob: -12.1290283203125
    7. ' (' → logprob: -12.7540283203125
    8. ' ' → logprob: -13.3790283203125
    9. '(
' → logprob: -13.6290283203125
    10. '(

' → logprob: -15.7540283203125

Token 225: ' données' (ID: 30580)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1523236632347107
    2. '(' → logprob: -2.0273237228393555
    3. '()' → logprob: -5.5273237228393555
    4. '("' → logprob: -5.7773237228393555
    5. '"' → logprob: -7.2773237228393555
    6. ' ' → logprob: -7.4023237228393555
    7. '('' → logprob: -7.5273237228393555
    8. 'z' → logprob: -8.652323722839355
    9. 'la' → logprob: -8.777323722839355
    10. 'val' → logprob: -9.027323722839355

Token 226: ' dans' (ID: 2671)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.053583621978759766
    2. '()' → logprob: -3.3035836219787598
    3. '("' → logprob: -4.55358362197876
    4. '('' → logprob: -5.67858362197876
    5. '("")' → logprob: -6.67858362197876
    6. '0' → logprob: -8.803583145141602
    7. '("\' → logprob: -10.928583145141602
    8. '(
' → logprob: -11.303583145141602
    9. '("("' → logprob: -11.803583145141602
    10. ' ' → logprob: -12.553583145141602

Token 227: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10334871709346771
    2. 'la' → logprob: -2.603348731994629
    3. ' ' → logprob: -4.853348731994629
    4. ' la' → logprob: -5.478348731994629
    5. '()' → logprob: -5.728348731994629
    6. 'l' → logprob: -5.728348731994629
    7. 'le' → logprob: -6.228348731994629
    8. '(' → logprob: -6.353348731994629
    9. '   ' → logprob: -7.478348731994629
    10. ')' → logprob: -8.353348731994629

Token 228: ' console' (ID: 3887)
  Prédit: 'console'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'console' → logprob: -0.02282888814806938
    2. 'terminal' → logprob: -4.397829055786133
    3. ' console' → logprob: -4.647829055786133
    4. ' terminal' → logprob: -7.897829055786133
    5. 'con' → logprob: -8.397829055786133
    6. 'shell' → logprob: -11.272829055786133
    7. ' consola' → logprob: -11.647829055786133
    8. 'term' → logprob: -11.772829055786133
    9. 'ligne' → logprob: -11.897829055786133
    10. 'f' → logprob: -12.022829055786133

Token 229: '.
' (ID: 558)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25833404064178467
    2. '()' → logprob: -1.5083340406417847
    3. '0' → logprob: -5.133334159851074
    4. '   ' → logprob: -8.383334159851074
    5. '("' → logprob: -9.883334159851074
    6. '()
' → logprob: -9.883334159851074
    7. '('' → logprob: -10.008334159851074
    8. ' ' → logprob: -10.633334159851074
    9. ')' → logprob: -10.758334159851074
    10. '("")' → logprob: -11.383334159851074

Token 230: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12857209146022797
    2. 'print' → logprob: -2.1285719871520996
    3. ' print' → logprob: -6.6285719871521
    4. '0' → logprob: -8.128572463989258
    5. '       ' → logprob: -11.628572463989258
    6. '    
' → logprob: -12.378572463989258
    7. '   ' → logprob: -12.378572463989258
    8. '	print' → logprob: -13.128572463989258
    9. '    ' → logprob: -13.753572463989258
    10. '  ' → logprob: -13.878572463989258

Token 231: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.020916474983096123
    2. '   ' → logprob: -4.02091646194458
    3. ' print' → logprob: -5.89591646194458
    4. 'pr' → logprob: -12.395916938781738
    5. '    ' → logprob: -13.395916938781738
    6. '0' → logprob: -13.395916938781738
    7. '    
' → logprob: -13.645916938781738
    8. 'p' → logprob: -13.645916938781738
    9. '  ' → logprob: -14.145916938781738
    10. ' ' → logprob: -14.520916938781738

Token 232: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.723973582556937e-05
    2. '0' → logprob: -11.500017166137695
    3. '()' → logprob: -11.875017166137695
    4. ' (' → logprob: -16.000017166137695
    5. '(
' → logprob: -17.250017166137695
    6. '(

' → logprob: -19.500017166137695
    7. '((' → logprob: -19.750017166137695
    8. '('' → logprob: -20.000017166137695
    9. '("' → logprob: -20.250017166137695
    10. ' ' → logprob: -20.875017166137695

Token 233: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. ')' → logprob: -18.375
    4. '"' → logprob: -18.75
    5. '   ' → logprob: -20.75
    6. '(' → logprob: -21.25
    7. ''' → logprob: -22.875
    8. '  ' → logprob: -23.875
    9. '０' → logprob: -24.125
    10. ' ' → logprob: -24.25

Token 234: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -14.875000953674316
    3. ' )' → logprob: -16.25
    4. '))' → logprob: -17.125
    5. '())' → logprob: -18.5
    6. ')#' → logprob: -19.25
    7. '()' → logprob: -19.625
    8. '')' → logprob: -19.625
    9. ')`' → logprob: -19.625
    10. ')")' → logprob: -20.5

Token 235: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0007098094210959971
    2. 'elif' → logprob: -8.375709533691406
    3. 'el' → logprob: -8.625709533691406
    4. ' else' → logprob: -8.625709533691406
    5. 'e' → logprob: -9.250709533691406
    6. 'elser' → logprob: -12.125709533691406
    7. '
' → logprob: -12.375709533691406
    8. 'els' → logprob: -12.625709533691406
    9. '```' → logprob: -12.750709533691406
    10. '#else' → logprob: -13.500709533691406

Token 236: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.943783253314905e-05
    2. ':
' → logprob: -9.750059127807617
    3. ' :' → logprob: -14.000059127807617
    4. '   ' → logprob: -15.125059127807617
    5. ':
' → logprob: -17.875059127807617
    6. ':

' → logprob: -18.500059127807617
    7. '():' → logprob: -19.500059127807617
    8. '：' → logprob: -19.500059127807617
    9. '):' → logprob: -19.750059127807617
    10. ':**' → logprob: -20.125059127807617

Token 237: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005288661457598209
    2. 'print' → logprob: -5.255288600921631
    3. ' print' → logprob: -10.755289077758789
    4. '    
' → logprob: -11.130289077758789
    5. '   ' → logprob: -11.255289077758789
    6. '    ' → logprob: -13.630289077758789
    7. ':' → logprob: -14.130289077758789
    8. '       ' → logprob: -14.630289077758789
    9. '   ' → logprob: -14.630289077758789
    10. '	print' → logprob: -14.630289077758789

Token 238: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5354326963424683
    2. '   ' → logprob: -0.9104326963424683
    3. ' print' → logprob: -4.410432815551758
    4. '    ' → logprob: -10.410432815551758
    5. '   ' → logprob: -11.410432815551758
    6. '  ' → logprob: -11.660432815551758
    7. '    
' → logprob: -11.910432815551758
    8. '	print' → logprob: -11.910432815551758
    9. ' ' → logprob: -12.035432815551758
    10. '       ' → logprob: -12.535432815551758

Token 239: ' Sinon' (ID: 154924)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008801051415503025
    2. '   ' → logprob: -4.758800983428955
    3. ' print' → logprob: -8.633801460266113
    4. '#' → logprob: -13.133801460266113
    5. '  ' → logprob: -13.383801460266113
    6. 'prin' → logprob: -13.758801460266113
    7. '    ' → logprob: -14.383801460266113
    8. '	print' → logprob: -14.383801460266113
    9. ' ' → logprob: -14.383801460266113
    10. 'pr' → logprob: -14.508801460266113

Token 240: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00910800788551569
    2. '   ' → logprob: -4.759108066558838
    3. ':
' → logprob: -7.759108066558838
    4. ' :' → logprob: -9.88410758972168
    5. 'print' → logprob: -11.25910758972168
    6. ' print' → logprob: -13.63410758972168
    7. ' :
' → logprob: -15.00910758972168
    8. ',' → logprob: -15.38410758972168
    9. '    ' → logprob: -15.63410758972168
    10. '       ' → logprob: -15.75910758972168

Token 241: ' c' (ID: 274)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1992594450712204
    2. '   ' → logprob: -1.8242594003677368
    3. ' print' → logprob: -3.9492595195770264
    4. '  ' → logprob: -10.699259757995605
    5. ' ' → logprob: -11.199259757995605
    6. '	print' → logprob: -11.949259757995605
    7. '    ' → logprob: -12.074259757995605
    8. '    
' → logprob: -13.074259757995605
    9. '       ' → logprob: -13.324259757995605
    10. '   ' → logprob: -13.824259757995605

Token 242: ''est' (ID: 6616)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09345591068267822
    2. 'e' → logprob: -3.2184557914733887
    3. 'on' → logprob: -4.343455791473389
    4. 'print' → logprob: -4.593455791473389
    5. 'es' → logprob: -5.218455791473389
    6. '  ' → logprob: -5.218455791473389
    7. '#' → logprob: -5.468455791473389
    8. 'ode' → logprob: -5.468455791473389
    9. ''est' → logprob: -6.218455791473389
    10. 'ont' → logprob: -6.343455791473389

Token 243: '-à' (ID: 56297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12998118996620178
    2. ':' → logprob: -2.129981279373169
    3. 'print' → logprob: -5.87998104095459
    4. '  ' → logprob: -8.87998104095459
    5. '    ' → logprob: -10.25498104095459
    6. '#' → logprob: -10.87998104095459
    7. '    
' → logprob: -11.12998104095459
    8. ' print' → logprob: -11.37998104095459
    9. ' ' → logprob: -11.50498104095459
    10. ' :' → logprob: -11.75498104095459

Token 244: '-dire' (ID: 76064)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7993122339248657
    2. '#' → logprob: -0.9243122339248657
    3. 'print' → logprob: -3.424312114715576
    4. 'n' → logprob: -4.049312114715576
    5. 'x' → logprob: -4.674312114715576
    6. 'l' → logprob: -4.674312114715576
    7. 'que' → logprob: -4.799312114715576
    8. '-à' → logprob: -4.924312114715576
    9. 'a' → logprob: -5.049312114715576
    10. '`' → logprob: -5.049312114715576

Token 245: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011572468793019652
    2. 'print' → logprob: -7.126157283782959
    3. '  ' → logprob: -9.1261568069458
    4. '    ' → logprob: -9.3761568069458
    5. ':' → logprob: -9.8761568069458
    6. '   ' → logprob: -10.3761568069458
    7. ' print' → logprob: -10.6261568069458
    8. '    
' → logprob: -10.8761568069458
    9. ' ' → logprob: -11.1261568069458
    10. ' ' → logprob: -11.8761568069458

Token 246: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5173416137695312
    2. 'print' → logprob: -1.1423416137695312
    3. '   ' → logprob: -2.8923416137695312
    4. ' a' → logprob: -3.6423416137695312
    5. ' print' → logprob: -5.767341613769531
    6. '  ' → logprob: -10.767341613769531
    7. '    ' → logprob: -11.017341613769531
    8. '(a' → logprob: -12.017341613769531
    9. '	a' → logprob: -12.517341613769531
    10. ' ' → logprob: -12.517341613769531

Token 247: ' condition' (ID: 7060)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014499234966933727
    2. 'print' → logprob: -4.389499187469482
    3. 'else' → logprob: -7.014499187469482
    4. '   ' → logprob: -7.514499187469482
    5. ' a' → logprob: -8.51449966430664
    6. 'val' → logprob: -9.13949966430664
    7. 'b' → logprob: -10.13949966430664
    8. 'value' → logprob: -10.63949966430664
    9. 'code' → logprob: -10.63949966430664
    10. 'condition' → logprob: -10.63949966430664

Token 248: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7988615036010742
    2. ':' → logprob: -0.9238615036010742
    3. 'a' → logprob: -2.298861503601074
    4. ' a' → logprob: -3.548861503601074
    5. 'print' → logprob: -4.173861503601074
    6. ' est' → logprob: -6.798861503601074
    7. ' print' → logprob: -6.798861503601074
    8. ' True' → logprob: -6.798861503601074
    9. ' is' → logprob: -6.923861503601074
    10. 'True' → logprob: -7.173861503601074

Token 249: ' <=' (ID: 5017)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.01857222057878971
    2. '>' → logprob: -4.0185723304748535
    3. ' <=' → logprob: -7.8935723304748535
    4. ' ' → logprob: -11.393571853637695
    5. '<=' → logprob: -11.518571853637695
    6. 'a' → logprob: -11.893571853637695
    7. '   ' → logprob: -12.393571853637695
    8. ' <' → logprob: -12.518571853637695
    9. ' >=' → logprob: -13.018571853637695
    10. ' ' → logprob: -13.143571853637695

Token 250: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.026371710002422333
    2. ' b' → logprob: -3.651371717453003
    3. '2' → logprob: -9.776371955871582
    4. ' ' → logprob: -11.276371955871582
    5. '   ' → logprob: -13.776371955871582
    6. '(b' → logprob: -15.151371955871582
    7. ' ' → logprob: -15.526371955871582
    8. '  ' → logprob: -15.526371955871582
    9. '3' → logprob: -16.276371002197266
    10. '	b' → logprob: -16.276371002197266

Token 251: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.42873892188072205
    2. ' *' → logprob: -1.0537389516830444
    3. ' ' → logprob: -10.928738594055176
    4. '2' → logprob: -11.803738594055176
    5. ':' → logprob: -12.428738594055176
    6. '   ' → logprob: -12.803738594055176
    7. ' ' → logprob: -12.803738594055176
    8. 'else' → logprob: -15.116238594055176
    9. '**' → logprob: -15.178738594055176
    10. '  ' → logprob: -15.428738594055176

Token 252: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004623322281986475
    2. ' ' → logprob: -5.3796234130859375
    3. ' ' → logprob: -13.004623413085938
    4. '  ' → logprob: -15.129623413085938
    5. '   ' → logprob: -15.254623413085938
    6. '*' → logprob: -15.629623413085938
    7. '```' → logprob: -16.692123413085938
    8. '２' → logprob: -17.379623413085938
    9. ' *' → logprob: -17.567123413085938
    10. '1' → logprob: -17.879623413085938

Token 253: ' n' (ID: 297)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004001641063950956
    2. ',' → logprob: -8.87540054321289
    3. 'n' → logprob: -9.62540054321289
    4. 'print' → logprob: -9.62540054321289
    5. '   ' → logprob: -10.37540054321289
    6. 'est' → logprob: -10.62540054321289
    7. ' est' → logprob: -10.87540054321289
    8. ' is' → logprob: -10.87540054321289
    9. ':
' → logprob: -11.00040054321289
    10. ' n' → logprob: -12.25040054321289

Token 254: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.13688711822032928
    2. 'est' → logprob: -2.1368870735168457
    3. '’est' → logprob: -5.511887073516846
    4. 'n' → logprob: -5.761887073516846
    5. 'pas' → logprob: -7.011887073516846
    6. 'e' → logprob: -7.636887073516846
    7. ''était' → logprob: -8.136887550354004
    8. ' est' → logprob: -8.386887550354004
    9. 'print' → logprob: -9.136887550354004
    10. ''' → logprob: -9.386887550354004

Token 255: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.0018899721326306462
    2. ' pas' → logprob: -6.626890182495117
    3. 'v' → logprob: -7.626890182495117
    4. 'plus' → logprob: -9.626890182495117
    5. '```' → logprob: -13.001890182495117
    6. 'true' → logprob: -13.126890182495117
    7. 'p' → logprob: -13.626890182495117
    8. 'True' → logprob: -14.126890182495117
    9. '_pas' → logprob: -14.251890182495117
    10. 'pass' → logprob: -14.376890182495117

Token 256: ' satis' (ID: 56317)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.002398720709607005
    2. 'respect' → logprob: -6.627398490905762
    3. 'true' → logprob: -7.127398490905762
    4. 'rem' → logprob: -9.252398490905762
    5. 'pas' → logprob: -9.877398490905762
    6. 's' → logprob: -10.252398490905762
    7. 'True' → logprob: -10.377398490905762
    8. 'faite' → logprob: -11.502398490905762
    9. ' vraie' → logprob: -11.502398490905762
    10. 'ver' → logprob: -12.127398490905762

Token 257: 'faite' (ID: 69848)
  Prédit: 'faite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faite' → logprob: -0.0696416050195694
    2. 'f' → logprob: -2.819641590118408
    3. 'fa' → logprob: -5.694641590118408
    4. 'fait' → logprob: -6.444641590118408
    5. 'fi' → logprob: -6.444641590118408
    6. 'ait' → logprob: -7.819641590118408
    7. '   ' → logprob: -8.944642066955566
    8. 'a' → logprob: -8.944642066955566
    9. 'ef' → logprob: -9.069642066955566
    10. 'af' → logprob: -9.319642066955566

Token 258: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0164454597979784
    2. '   ' → logprob: -4.766445636749268
    3. ',' → logprob: -4.891445636749268
    4. ':
' → logprob: -9.01644515991211
    5. ' :' → logprob: -9.51644515991211
    6. 'print' → logprob: -9.64144515991211
    7. '):' → logprob: -11.76644515991211
    8. ' ,' → logprob: -11.76644515991211
    9. ' print' → logprob: -12.51644515991211
    10. '       ' → logprob: -13.39144515991211

Token 259: 'don' (ID: 22130)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008985143154859543
    2. 'print' → logprob: -5.6339850425720215
    3. ')' → logprob: -5.7589850425720215
    4. '),' → logprob: -7.2589850425720215
    5. '   ' → logprob: -7.8839850425720215
    6. ':' → logprob: -8.13398551940918
    7. ' )' → logprob: -8.38398551940918
    8. ' ' → logprob: -8.75898551940918
    9. ' print' → logprob: -9.13398551940918
    10. '#' → logprob: -9.38398551940918

Token 260: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.441862016916275
    2. 't' → logprob: -1.0668619871139526
    3. 'e' → logprob: -4.441862106323242
    4. 'nées' → logprob: -7.941862106323242
    5. 'cé' → logprob: -7.941862106323242
    6. 'é' → logprob: -8.566862106323242
    7. ''t' → logprob: -8.816862106323242
    8. 'né' → logprob: -9.316862106323242
    9. '#' → logprob: -10.066862106323242
    10. 'née' → logprob: -10.941862106323242

Token 261: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20251630246639252
    2. ':' → logprob: -2.0775163173675537
    3. 'print' → logprob: -3.2025163173675537
    4. 'a' → logprob: -4.577516078948975
    5. ')' → logprob: -6.202516078948975
    6. ' que' → logprob: -6.577516078948975
    7. '  ' → logprob: -7.077516078948975
    8. ' a' → logprob: -7.452516078948975
    9. ':)' → logprob: -8.202516555786133
    10. 'if' → logprob: -8.327516555786133

Token 262: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.003240578342229128
    2. ' a' → logprob: -5.753240585327148
    3. '   ' → logprob: -9.753240585327148
    4. '  ' → logprob: -13.753240585327148
    5. ' ' → logprob: -14.128240585327148
    6. ')' → logprob: -14.128240585327148
    7. '```' → logprob: -14.253240585327148
    8. '    ' → logprob: -15.128240585327148
    9. 'print' → logprob: -15.253240585327148
    10. ' ' → logprob: -15.503240585327148

Token 263: ' est' (ID: 893)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5759808421134949
    2. ' >' → logprob: -0.8259808421134949
    3. ')' → logprob: -11.325981140136719
    4. '   ' → logprob: -12.575981140136719
    5. ' >
' → logprob: -12.825981140136719
    6. '>a' → logprob: -12.825981140136719
    7. ' >
' → logprob: -12.950981140136719
    8. '>
' → logprob: -12.950981140136719
    9. 'print' → logprob: -13.075981140136719
    10. ' ' → logprob: -13.075981140136719

Token 264: ' strict' (ID: 12035)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.02341434918344021
    2. ' >' → logprob: -4.648414134979248
    3. 'strict' → logprob: -4.648414134979248
    4. 'sup' → logprob: -6.148414134979248
    5. ' supérieur' → logprob: -7.023414134979248
    6. 'plus' → logprob: -7.648414134979248
    7. 'greater' → logprob: -8.523414611816406
    8. '>)' → logprob: -9.273414611816406
    9. ')' → logprob: -10.273414611816406
    10. 'super' → logprob: -10.273414611816406

Token 265: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.003998972941190004
    2. '>' → logprob: -5.628998756408691
    3. 'lement' → logprob: -8.503998756408691
    4. 'ly' → logprob: -9.753998756408691
    5. 'ément' → logprob: -9.878998756408691
    6. 'ment' → logprob: -10.503998756408691
    7. ' supérieur' → logprob: -11.003998756408691
    8. ' >' → logprob: -11.503998756408691
    9. 'emen' → logprob: -12.128998756408691
    10. ' sup' → logprob: -12.378998756408691

Token 266: ' supérieur' (ID: 98491)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.03749324381351471
    2. 'sup' → logprob: -3.9124932289123535
    3. 'greater' → logprob: -4.7874932289123535
    4. ' supérieur' → logprob: -4.9124932289123535
    5. 'super' → logprob: -7.5374932289123535
    6. '>)' → logprob: -8.037493705749512
    7. ')' → logprob: -9.412493705749512
    8. ' >' → logprob: -9.912493705749512
    9. ' sup' → logprob: -10.037493705749512
    10. ' greater' → logprob: -11.162493705749512

Token 267: ' à' (ID: 1221)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2059517353773117
    2. '   ' → logprob: -2.580951690673828
    3. ' à' → logprob: -2.705951690673828
    4. '):' → logprob: -3.455951690673828
    5. ' a' → logprob: -5.705951690673828
    6. ' :' → logprob: -5.830951690673828
    7. 'à' → logprob: -5.955951690673828
    8. ')' → logprob: -6.705951690673828
    9. ' to' → logprob: -7.205951690673828
    10. ' ):' → logprob: -8.330951690673828

Token 268: ' ' (ID: 220)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.008617527782917023
    2. ' b' → logprob: -4.758617401123047
    3. ' ' → logprob: -13.258617401123047
    4. '   ' → logprob: -14.008617401123047
    5. '2' → logprob: -15.883617401123047
    6. '  ' → logprob: -16.133617401123047
    7. ' ' → logprob: -16.383617401123047
    8. '```' → logprob: -17.008617401123047
    9. ')' → logprob: -17.133617401123047
    10. '(b' → logprob: -17.383617401123047

Token 269: '2' (ID: 17)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00033665422233752906
    2. ' b' → logprob: -8.000336647033691
    3. '2' → logprob: -14.125336647033691
    4. ' ' → logprob: -14.875336647033691
    5. '   ' → logprob: -17.250337600708008
    6. '  ' → logprob: -17.750337600708008
    7. '(b' → logprob: -18.375337600708008
    8. '```' → logprob: -18.500337600708008
    9. '	b' → logprob: -19.250337600708008
    10. ')b' → logprob: -19.625337600708008

Token 270: ' fois' (ID: 14697)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.09456329792737961
    2. '*b' → logprob: -2.7195632457733154
    3. ' *' → logprob: -3.7195632457733154
    4. 'b' → logprob: -9.969563484191895
    5. ' ' → logprob: -11.844563484191895
    6. '*a' → logprob: -11.969563484191895
    7. ' b' → logprob: -11.969563484191895
    8. ')' → logprob: -12.094563484191895
    9. ' ' → logprob: -12.469563484191895
    10. '*f' → logprob: -13.969563484191895

Token 271: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.008615042082965374
    2. ' b' → logprob: -4.758615016937256
    3. ')b' → logprob: -15.133615493774414
    4. ' ' → logprob: -16.133615493774414
    5. '(b' → logprob: -16.383615493774414
    6. '   ' → logprob: -16.883615493774414
    7. ')' → logprob: -17.133615493774414
    8. '	b' → logprob: -17.633615493774414
    9. ' ' → logprob: -17.883615493774414
    10. ' (' → logprob: -18.133615493774414

Token 272: '),
' (ID: 2313)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.24132418632507324
    2. ':' → logprob: -1.7413241863250732
    3. '   ' → logprob: -4.116324424743652
    4. '):
' → logprob: -4.116324424743652
    5. '),' → logprob: -5.116324424743652
    6. ')' → logprob: -8.366324424743652
    7. ' ):' → logprob: -9.241324424743652
    8. 'print' → logprob: -9.491324424743652
    9. ',' → logprob: -10.616324424743652
    10. ':
' → logprob: -10.741324424743652

Token 273: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10055655986070633
    2. 'print' → logprob: -2.3505566120147705
    3. ' print' → logprob: -8.100556373596191
    4. '   ' → logprob: -11.475556373596191
    5. '       ' → logprob: -11.850556373596191
    6. '    
' → logprob: -12.225556373596191
    7. '
' → logprob: -12.475556373596191
    8. ')' → logprob: -12.850556373596191
    9. '```' → logprob: -12.850556373596191
    10. 'a' → logprob: -12.975556373596191

Token 274: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08990515768527985
    2. '   ' → logprob: -2.464905261993408
    3. ' print' → logprob: -6.964905261993408
    4. '       ' → logprob: -12.08990478515625
    5. '  ' → logprob: -12.58990478515625
    6. '    ' → logprob: -12.58990478515625
    7. '	print' → logprob: -12.71490478515625
    8. '    
' → logprob: -13.71490478515625
    9. ' ' → logprob: -13.96490478515625
    10. '   ' → logprob: -14.08990478515625

Token 275: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005628223530948162
    2. '   ' → logprob: -5.2556281089782715
    3. ' print' → logprob: -7.8806281089782715
    4. '#' → logprob: -11.25562858581543
    5. '  ' → logprob: -14.13062858581543
    6. '    
' → logprob: -14.88062858581543
    7. '	print' → logprob: -14.88062858581543
    8. 'pr' → logprob: -15.00562858581543
    9. 'prin' → logprob: -15.00562858581543
    10. '    ' → logprob: -15.50562858581543

Token 276: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.024616463109850883
    2. '   ' → logprob: -3.8996164798736572
    3. ' print' → logprob: -5.524616241455078
    4. '    ' → logprob: -10.399616241455078
    5. '  ' → logprob: -10.399616241455078
    6. ' ' → logprob: -12.649616241455078
    7. ' imprime' → logprob: -12.899616241455078
    8. 'printf' → logprob: -13.024616241455078
    9. 'pr' → logprob: -13.024616241455078
    10. '	print' → logprob: -13.524616241455078

Token 277: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06227743625640869
    2. '(a' → logprob: -2.812277317047119
    3. 'print' → logprob: -8.812277793884277
    4. '(' → logprob: -9.187277793884277
    5. ' a' → logprob: -10.062277793884277
    6. '1' → logprob: -11.437277793884277
    7. '   ' → logprob: -12.812277793884277
    8. '(print' → logprob: -14.437277793884277
    9. '(
' → logprob: -14.562277793884277
    10. ' ' → logprob: -15.937277793884277

Token 278: ' différence' (ID: 79196)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.027407202869653702
    2. 'print' → logprob: -3.652407169342041
    3. ' a' → logprob: -7.402407169342041
    4. '(a' → logprob: -8.2774076461792
    5. '1' → logprob: -8.6524076461792
    6. ' print' → logprob: -10.1524076461792
    7. '   ' → logprob: -11.5274076461792
    8. '0' → logprob: -12.0274076461792
    9. 'abs' → logprob: -12.9024076461792
    10. ' ' → logprob: -13.4024076461792

Token 279: ' entre' (ID: 3853)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7412371039390564
    2. '(a' → logprob: -0.8662371039390564
    3. 'a' → logprob: -2.366237163543701
    4. '(' → logprob: -4.866237163543701
    5. '(print' → logprob: -7.241237163543701
    6. '   ' → logprob: -7.491237163543701
    7. '(
' → logprob: -9.741236686706543
    8. ' print' → logprob: -10.616236686706543
    9. 'between' → logprob: -10.991236686706543
    10. 'pr' → logprob: -12.116236686706543

Token 280: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.9146995327901095e-05
    2. ' a' → logprob: -10.875019073486328
    3. '(a' → logprob: -15.625019073486328
    4. '   ' → logprob: -18.750019073486328
    5. ' ' → logprob: -19.625019073486328
    6. '```' → logprob: -19.750019073486328
    7. 'print' → logprob: -20.375019073486328
    8. '	a' → logprob: -20.625019073486328
    9. '(' → logprob: -20.875019073486328
    10. '  ' → logprob: -21.250019073486328

Token 281: ' et' (ID: 859)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20150387287139893
    2. ' -' → logprob: -1.701503872871399
    3. ' ' → logprob: -10.07650375366211
    4. ',' → logprob: -11.32650375366211
    5. ' et' → logprob: -11.57650375366211
    6. '```' → logprob: -12.07650375366211
    7. ' and' → logprob: -12.45150375366211
    8. 'a' → logprob: -12.70150375366211
    9. '-b' → logprob: -12.82650375366211
    10. '  ' → logprob: -13.32650375366211

Token 282: ' deux' (ID: 10301)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.018615640699863434
    2. '2' → logprob: -4.14361572265625
    3. ' b' → logprob: -6.64361572265625
    4. '(b' → logprob: -7.26861572265625
    5. '(' → logprob: -7.64361572265625
    6. ' (' → logprob: -9.64361572265625
    7. ' ' → logprob: -10.39361572265625
    8. 'print' → logprob: -12.89361572265625
    9. '   ' → logprob: -13.76861572265625
    10. '```' → logprob: -15.76861572265625

Token 283: ' fois' (ID: 14697)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5948402285575867
    2. '*b' → logprob: -1.0948402881622314
    3. ' *' → logprob: -2.2198402881622314
    4. 'b' → logprob: -5.469840049743652
    5. ' fois' → logprob: -7.594840049743652
    6. 'fois' → logprob: -8.469840049743652
    7. ' b' → logprob: -9.344840049743652
    8. ' times' → logprob: -10.219840049743652
    9. 'times' → logprob: -10.594840049743652
    10. ' ' → logprob: -11.219840049743652

Token 284: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.002685990883037448
    2. ' b' → logprob: -6.252686023712158
    3. '(b' → logprob: -7.252686023712158
    4. ' (' → logprob: -10.002685546875
    5. '(' → logprob: -12.627685546875
    6. '   ' → logprob: -15.877685546875
    7. ' ' → logprob: -16.502685546875
    8. '*b' → logprob: -16.752685546875
    9. '	b' → logprob: -17.377685546875
    10. '```' → logprob: -17.752685546875

Token 285: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028134629130363464
    2. 'print' → logprob: -3.65313458442688
    3. ':' → logprob: -7.028134822845459
    4. '.' → logprob: -8.1531343460083
    5. ' print' → logprob: -8.1531343460083
    6. '(' → logprob: -8.9031343460083
    7. '(print' → logprob: -9.2781343460083
    8. '```' → logprob: -10.0281343460083
    9. ',' → logprob: -10.1531343460083
    10. '.print' → logprob: -11.2781343460083

Token 286: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20149725675582886
    2. '   ' → logprob: -1.7014973163604736
    3. ' print' → logprob: -9.826497077941895
    4. '```' → logprob: -10.451497077941895
    5. '(print' → logprob: -14.826497077941895
    6. '``' → logprob: -15.326497077941895
    7. '	print' → logprob: -15.326497077941895
    8. '       ' → logprob: -16.20149803161621
    9. '.print' → logprob: -17.20149803161621
    10. '(' → logprob: -17.32649803161621

Token 287: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07916418462991714
    2. '   ' → logprob: -2.5791642665863037
    3. ' print' → logprob: -8.204164505004883
    4. '```' → logprob: -14.329164505004883
    5. '	print' → logprob: -16.204164505004883
    6. '       ' → logprob: -16.579164505004883
    7. '  ' → logprob: -17.954164505004883
    8. 'printf' → logprob: -18.079164505004883
    9. '(print' → logprob: -18.079164505004883
    10. '.print' → logprob: -18.454164505004883

Token 288: ' Cette' (ID: 27383)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03187321871519089
    2. '   ' → logprob: -3.5318732261657715
    3. ' print' → logprob: -6.1568732261657715
    4. '```' → logprob: -14.031872749328613
    5. '	print' → logprob: -15.281872749328613
    6. ' ' → logprob: -15.531872749328613
    7. '  ' → logprob: -15.906872749328613
    8. '       ' → logprob: -16.15687370300293
    9. '   ' → logprob: -16.65687370300293
    10. '
' → logprob: -17.53187370300293

Token 289: ' différence' (ID: 79196)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.018825886771082878
    2. ' print' → logprob: -4.393826007843018
    3. 'diff' → logprob: -5.643826007843018
    4. '   ' → logprob: -6.393826007843018
    5. 'difference' → logprob: -7.143826007843018
    6. ' difference' → logprob: -9.64382553100586
    7. ' différence' → logprob: -10.39382553100586
    8. 'pr' → logprob: -10.51882553100586
    9. '```' → logprob: -11.14382553100586
    10. ':' → logprob: -11.39382553100586

Token 290: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.247288703918457
    2. ' =' → logprob: -1.247288703918457
    3. 'print' → logprob: -1.247288703918457
    4. '   ' → logprob: -2.247288703918457
    5. ')' → logprob: -4.622288703918457
    6. ',' → logprob: -5.497288703918457
    7. ':' → logprob: -5.872288703918457
    8. ' est' → logprob: -5.872288703918457
    9. 'diff' → logprob: -5.872288703918457
    10. 'a' → logprob: -6.247288703918457

Token 291: ' calcul' (ID: 7559)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007044271565973759
    2. 'a' → logprob: -5.632044315338135
    3. ' print' → logprob: -6.132044315338135
    4. '   ' → logprob: -6.757044315338135
    5. ' a' → logprob: -9.632043838500977
    6. '  ' → logprob: -10.882043838500977
    7. ' ' → logprob: -11.507043838500977
    8. '    ' → logprob: -12.757043838500977
    9. '	print' → logprob: -13.757043838500977
    10. 'aff' → logprob: -15.007043838500977

Token 292: 'ée' (ID: 2894)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08428879827260971
    2. ' a' → logprob: -3.4592888355255127
    3. '   ' → logprob: -3.5842888355255127
    4. '(a' → logprob: -4.584288597106934
    5. '(' → logprob: -6.084288597106934
    6. '=' → logprob: -6.209288597106934
    7. 'e' → logprob: -6.209288597106934
    8. ')' → logprob: -6.709288597106934
    9. ',' → logprob: -7.209288597106934
    10. ' =' → logprob: -7.834288597106934

Token 293: ' par' (ID: 686)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08432703465223312
    2. 'a' → logprob: -3.209326982498169
    3. '   ' → logprob: -3.334326982498169
    4. '-' → logprob: -6.334327220916748
    5. ' print' → logprob: -7.084327220916748
    6. ',' → logprob: -7.709327220916748
    7. ')' → logprob: -7.834327220916748
    8. '    ' → logprob: -8.33432674407959
    9. ' a' → logprob: -8.45932674407959
    10. ':' → logprob: -8.70932674407959

Token 294: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5845156311988831
    2. 'print' → logprob: -0.8345156311988831
    3. ' a' → logprob: -5.209515571594238
    4. ' print' → logprob: -5.834515571594238
    5. '   ' → logprob: -9.084515571594238
    6. '(a' → logprob: -10.959515571594238
    7. 'la' → logprob: -12.334515571594238
    8. '(print' → logprob: -12.584515571594238
    9. ' ' → logprob: -13.084515571594238
    10. '  ' → logprob: -13.209515571594238

Token 295: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5759626030921936
    2. ' -' → logprob: -0.8259626030921936
    3. ' ' → logprob: -10.825963020324707
    4. ')' → logprob: -14.325963020324707
    5. '>' → logprob: -14.700963020324707
    6. ' ' → logprob: -14.825963020324707
    7. '-b' → logprob: -14.950963020324707
    8. '  ' → logprob: -15.075963020324707
    9. '```' → logprob: -15.325963020324707
    10. '   ' → logprob: -15.825963020324707

Token 296: ' (' (ID: 350)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.18543633818626404
    2. '(b' → logprob: -2.060436248779297
    3. '(' → logprob: -3.685436248779297
    4. '2' → logprob: -4.935436248779297
    5. ' b' → logprob: -5.185436248779297
    6. ' (' → logprob: -5.560436248779297
    7. ' ' → logprob: -8.935436248779297
    8. '   ' → logprob: -12.685436248779297
    9. '	b' → logprob: -13.435436248779297
    10. '```' → logprob: -13.560436248779297

Token 297: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0050993915647268295
    2. '2' → logprob: -5.880099296569824
    3. ' b' → logprob: -6.130099296569824
    4. '(b' → logprob: -9.880099296569824
    5. '(' → logprob: -10.380099296569824
    6. ' ' → logprob: -11.005099296569824
    7. ' (' → logprob: -11.630099296569824
    8. '   ' → logprob: -12.005099296569824
    9. ')' → logprob: -14.755099296569824
    10. '```' → logprob: -15.005099296569824

Token 298: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1269347220659256
    2. ' *' → logprob: -2.126934766769409
    3. '2' → logprob: -12.251935005187988
    4. ' ' → logprob: -13.876935005187988
    5. ' ' → logprob: -14.751935005187988
    6. ')' → logprob: -15.376935005187988
    7. '```' → logprob: -16.126934051513672
    8. ')*' → logprob: -16.626934051513672
    9. '**' → logprob: -17.876934051513672
    10. '*)' → logprob: -18.376934051513672

Token 299: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. ')' → logprob: -18.12506675720215
    4. '(' → logprob: -19.00006675720215
    5. '  ' → logprob: -19.12506675720215
    6. '   ' → logprob: -19.12506675720215
    7. ' ' → logprob: -19.25006675720215
    8. '۲' → logprob: -19.37506675720215
    9. '```' → logprob: -19.87506675720215
    10. '２' → logprob: -20.37506675720215

Token 300: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019159071380272508
    2. '))' → logprob: -6.37691593170166
    3. ' )' → logprob: -8.62691593170166
    4. ').' → logprob: -11.25191593170166
    5. ')))' → logprob: -11.75191593170166
    6. '   ' → logprob: -12.37691593170166
    7. ')
' → logprob: -12.50191593170166
    8. '),' → logprob: -14.50191593170166
    9. ')

' → logprob: -14.87691593170166
    10. ')a' → logprob: -15.00191593170166

Token 301: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03814052790403366
    2. 'print' → logprob: -3.2881405353546143
    3. ' print' → logprob: -9.413140296936035
    4. '```' → logprob: -11.038140296936035
    5. '       ' → logprob: -14.163140296936035
    6. '   ' → logprob: -15.163140296936035
    7. '	print' → logprob: -15.913140296936035
    8. '``' → logprob: -16.53814125061035
    9. '  ' → logprob: -17.16314125061035
    10. '    
' → logprob: -17.28814125061035

Token 302: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.38711100816726685
    2. '   ' → logprob: -1.137110948562622
    3. ' print' → logprob: -8.387110710144043
    4. '```' → logprob: -11.387110710144043
    5. '       ' → logprob: -14.887110710144043
    6. '	print' → logprob: -15.512110710144043
    7. '``' → logprob: -16.76211166381836
    8. '   ' → logprob: -17.01211166381836
    9. '  ' → logprob: -17.13711166381836
    10. 'printf' → logprob: -17.88711166381836

Token 303: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -2.8921695047756657e-05
    2. '(' → logprob: -10.500028610229492
    3. 'a' → logprob: -13.625028610229492
    4. '((' → logprob: -15.750028610229492
    5. '(
' → logprob: -18.750028610229492
    6. ' (' → logprob: -18.875028610229492
    7. '(A' → logprob: -19.750028610229492
    8. '(abs' → logprob: -20.375028610229492
    9. '(x' → logprob: -21.875028610229492
    10. '(max' → logprob: -22.250028610229492

Token 304: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.31326571106910706
    2. '-' → logprob: -1.3132656812667847
    3. ')' → logprob: -13.563265800476074
    4. ' ' → logprob: -14.063265800476074
    5. '-(' → logprob: -14.188265800476074
    6. '-b' → logprob: -14.688265800476074
    7. ' -(' → logprob: -15.313265800476074
    8. ' ' → logprob: -15.688265800476074
    9. '-)' → logprob: -15.938265800476074
    10. '   ' → logprob: -15.938265800476074

Token 305: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8081035017967224
    2. '(b' → logprob: -0.8081035017967224
    3. ' b' → logprob: -2.808103561401367
    4. ' (' → logprob: -3.058103561401367
    5. '(' → logprob: -6.683103561401367
    6. ' ' → logprob: -10.808103561401367
    7. '2' → logprob: -10.933103561401367
    8. '	b' → logprob: -12.933103561401367
    9. '   ' → logprob: -13.058103561401367
    10. ')' → logprob: -13.433103561401367

Token 306: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.016103703528642654
    2. ' *' → logprob: -4.141103744506836
    3. '2' → logprob: -10.141103744506836
    4. ')' → logprob: -10.516103744506836
    5. ' ' → logprob: -13.516103744506836
    6. ')*' → logprob: -14.266103744506836
    7. '*)' → logprob: -14.891103744506836
    8. '   ' → logprob: -15.641103744506836
    9. ' ' → logprob: -15.891103744506836
    10. '**' → logprob: -16.391103744506836

Token 307: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '```' → logprob: -20.500015258789062
    4. '   ' → logprob: -20.625015258789062
    5. '۲' → logprob: -20.625015258789062
    6. '  ' → logprob: -20.750015258789062
    7. '<|end|>' → logprob: -21.000015258789062
    8. ')' → logprob: -21.500015258789062
    9. '２' → logprob: -21.625015258789062
    10. ' ' → logprob: -22.500015258789062

Token 308: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ' )' → logprob: -13.375001907348633
    3. '))' → logprob: -15.000001907348633
    4. ')
' → logprob: -15.125001907348633
    5. ')`' → logprob: -17.375001907348633
    6. ')#' → logprob: -18.125001907348633
    7. '())' → logprob: -18.625001907348633
    8. '')' → logprob: -19.375001907348633
    9. '`)' → logprob: -19.500001907348633
    10. '()' → logprob: -19.750001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 306
Tokens correctement prédits (1ère position, stricte): 89
Tokens correctement prédits (1ère position, avec adaptation): 91
Tokens correctement prédits (top 10): 194
Précision stricte (1ère position): 29.08%
Précision adaptée (1ère position): 29.74%
Précision (top 10): 63.40%
================================================================================
