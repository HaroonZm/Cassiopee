================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:37:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n, m = (lambda: list(map(int, input().split())))()
s = input()[::-1]

def move(n, m, s):
    result = []
    pos = 0

    class BreakLoop(Exception): pass
    try:
        while pos < n:
            mx = min(m, n - pos)
            for step in range(mx, 0, -1):
                if s[pos + step] == '0':
                    pos += step
                    result.append(step)
                    break
            else:
                print(-1); raise BreakLoop
    except BreakLoop:
        return None

    return result[::-1]

if __name__ == "__main__":

    import sys

    # Une approche OOP pour imprimer
    class Printer:
        def show(self, arr):
            print(" ".join(map(str, arr)))

    res = move(n, m, s)
    if res is not None:
        p = Printer()
        p.show(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' m' (ID: 284)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2323390543460846
    2. ' =' → logprob: -1.8573390245437622
    3. ',' → logprob: -2.9823391437530518
    4. ')' → logprob: -8.107338905334473
    5. ' ' → logprob: -9.482338905334473
    6. ' ,' → logprob: -10.107338905334473
    7. ';' → logprob: -10.857338905334473
    8. '_' → logprob: -11.107338905334473
    9. '```' → logprob: -11.232338905334473
    10. '.' → logprob: -11.232338905334473

Token 4: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16286484897136688
    2. ' map' → logprob: -2.537864923477173
    3. ' input' → logprob: -3.412864923477173
    4. 'input' → logprob: -4.537864685058594
    5. 'map' → logprob: -4.537864685058594
    6. '0' → logprob: -4.662864685058594
    7. ' n' → logprob: -5.912864685058594
    8. '10' → logprob: -5.912864685058594
    9. '1' → logprob: -7.162864685058594
    10. ' int' → logprob: -7.537864685058594

Token 5: 'lambda' (ID: 35280)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.7828545570373535
    2. 'map' → logprob: -1.5328545570373535
    3. 'int' → logprob: -2.2828545570373535
    4. '10' → logprob: -2.2828545570373535
    5. '1' → logprob: -3.2828545570373535
    6. '0' → logprob: -3.5328545570373535
    7. ')' → logprob: -3.7828545570373535
    8. 'input' → logprob: -4.0328545570373535
    9. '3' → logprob: -4.7828545570373535
    10. ' map' → logprob: -6.0328545570373535

Token 6: ':' (ID: 25)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.05086793005466461
    2. 'x' → logprob: -3.550868034362793
    3. ' lambda' → logprob: -5.425868034362793
    4. ' a' → logprob: -5.550868034362793
    5. ' s' → logprob: -5.550868034362793
    6. ' n' → logprob: -6.050868034362793
    7. 'lambda' → logprob: -6.550868034362793
    8. 'a' → logprob: -6.550868034362793
    9. ' f' → logprob: -7.425868034362793
    10. ' l' → logprob: -7.675868034362793

Token 7: ' list' (ID: 1562)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.7001213431358337
    2. ' map' → logprob: -0.9501213431358337
    3. 'int' → logprob: -2.3251214027404785
    4. ' int' → logprob: -4.3251214027404785
    5. 'input' → logprob: -5.4501214027404785
    6. ' input' → logprob: -7.2001214027404785
    7. 'list' → logprob: -8.82512092590332
    8. ' list' → logprob: -9.07512092590332
    9. 'tuple' → logprob: -9.45012092590332
    10. '(map' → logprob: -9.57512092590332

Token 8: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.06404441595077515
    2. '(' → logprob: -3.43904447555542
    3. '(range' → logprob: -3.68904447555542
    4. '(input' → logprob: -5.68904447555542
    5. '(int' → logprob: -6.56404447555542
    6. '(eval' → logprob: -9.439043998718262
    7. '(filter' → logprob: -10.689043998718262
    8. '(lambda' → logprob: -11.314043998718262
    9. '(
' → logprob: -11.939043998718262
    10. '(__' → logprob: -12.064043998718262

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0022103239316493273
    2. 'int' → logprob: -6.7522101402282715
    3. '<int' → logprob: -8.00221061706543
    4. '[int' → logprob: -8.37721061706543
    5. '(lambda' → logprob: -8.50221061706543
    6. '(' → logprob: -9.12721061706543
    7. ' int' → logprob: -10.12721061706543
    8. '<|end|>' → logprob: -10.12721061706543
    9. '=int' → logprob: -10.62721061706543
    10. ',int' → logprob: -10.87721061706543

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.8229238986968994
    2. '(' → logprob: -1.3229238986968994
    3. '(lambda' → logprob: -1.8229238986968994
    4. ')' → logprob: -2.8229238986968994
    5. '<|end|>' → logprob: -4.07292366027832
    6. '(next' → logprob: -4.69792366027832
    7. '```' → logprob: -4.69792366027832
    8. '(eval' → logprob: -5.19792366027832
    9. '))' → logprob: -5.32292366027832
    10. '(int' → logprob: -5.44792366027832

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00812692753970623
    2. ' input' → logprob: -5.133126735687256
    3. '(input' → logprob: -6.133126735687256
    4. ')' → logprob: -11.633127212524414
    5. ',input' → logprob: -12.383127212524414
    6. '=input' → logprob: -13.008127212524414
    7. '<input' → logprob: -13.133127212524414
    8. '```' → logprob: -13.633127212524414
    9. '(' → logprob: -13.758127212524414
    10. 'stdin' → logprob: -14.133127212524414

Token 12: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -1.0246134996414185
    2. '(' → logprob: -1.6496134996414185
    3. '()' → logprob: -1.7746134996414185
    4. '(input' → logprob: -2.274613380432129
    5. '())))' → logprob: -2.649613380432129
    6. '(()' → logprob: -3.274613380432129
    7. '(lambda' → logprob: -3.399613380432129
    8. '())' → logprob: -5.149613380432129
    9. '()));' → logprob: -5.524613380432129
    10. ')))' → logprob: -5.524613380432129

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.000985412043519318
    2. 'strip' → logprob: -7.000985622406006
    3. 'rstrip' → logprob: -10.250985145568848
    4. 'read' → logprob: -10.750985145568848
    5. ' split' → logprob: -11.125985145568848
    6. '(split' → logprob: -13.125985145568848
    7. 'spl' → logprob: -15.250985145568848
    8. ')' → logprob: -16.875986099243164
    9. ' readline' → logprob: -17.500986099243164
    10. ' strip' → logprob: -17.750986099243164

Token 14: '())))' (ID: 168342)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.39233583211898804
    2. '())))' → logprob: -1.3923358917236328
    3. ')))' → logprob: -3.642335891723633
    4. '())' → logprob: -4.267335891723633
    5. '('' → logprob: -4.517335891723633
    6. '(' → logprob: -4.767335891723633
    7. '))' → logprob: -4.892335891723633
    8. '()' → logprob: -5.017335891723633
    9. '())))
' → logprob: -7.267335891723633
    10. '(()' → logprob: -7.392335891723633

Token 15: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0010243549477308989
    2. '(' → logprob: -7.25102424621582
    3. '()[' → logprob: -8.87602424621582
    4. '[]' → logprob: -10.62602424621582
    5. '()\' → logprob: -10.62602424621582
    6. '();' → logprob: -10.62602424621582
    7. '(n' → logprob: -10.75102424621582
    8. '()
' → logprob: -11.00102424621582
    9. ' ()' → logprob: -11.75102424621582
    10. '()<' → logprob: -11.87602424621582

Token 16: 's' (ID: 82)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.38383349776268005
    2. '
' → logprob: -2.133833408355713
    3. '<|end|>' → logprob: -3.383833408355713
    4. '\n' → logprob: -3.508833408355713
    5. 'n' → logprob: -3.633833408355713
    6. 'if' → logprob: -4.008833408355713
    7. ':' → logprob: -4.008833408355713
    8. ';' → logprob: -4.383833408355713
    9. '' → logprob: -4.758833408355713
    10. '[' → logprob: -4.883833408355713

Token 17: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13604822754859924
    2. '.' → logprob: -2.1360483169555664
    3. '=' → logprob: -5.386048316955566
    4. '[i' → logprob: -7.386048316955566
    5. '[:]' → logprob: -7.511048316955566
    6. ' =' → logprob: -7.761048316955566
    7. '[n' → logprob: -7.886048316955566
    8. '(' → logprob: -8.261048316955566
    9. '[:' → logprob: -8.511048316955566
    10. '[p' → logprob: -8.761048316955566

Token 18: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6344324946403503
    2. 'input' → logprob: -0.7594324946403503
    3. '""' → logprob: -7.759432315826416
    4. '"' → logprob: -8.509432792663574
    5. '(input' → logprob: -9.009432792663574
    6. ' list' → logprob: -9.134432792663574
    7. ''' → logprob: -9.134432792663574
    8. ' "' → logprob: -9.259432792663574
    9. ' ""' → logprob: -9.259432792663574
    10. ' ' → logprob: -9.259432792663574

Token 19: '()[' (ID: 20778)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.28143081068992615
    2. '(' → logprob: -1.4064308404922485
    3. ' ()' → logprob: -9.906431198120117
    4. ')' → logprob: -10.031431198120117
    5. '```' → logprob: -10.281431198120117
    6. '.' → logprob: -10.531431198120117
    7. '(
' → logprob: -10.781431198120117
    8. '`()' → logprob: -11.281431198120117
    9. ' (' → logprob: -11.406431198120117
    10. ' ' → logprob: -11.656431198120117

Token 20: '::-' (ID: 96612)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13044112920761108
    2. '-' → logprob: -3.005441188812256
    3. ':' → logprob: -3.005441188812256
    4. '1' → logprob: -4.630441188812256
    5. ':m' → logprob: -5.880441188812256
    6. ':n' → logprob: -6.005441188812256
    7. 'm' → logprob: -6.130441188812256
    8. 'n' → logprob: -6.255441188812256
    9. ':]' → logprob: -6.255441188812256
    10. ':-' → logprob: -7.380441188812256

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011653638648567721
    2. '-' → logprob: -9.125116348266602
    3. '::-' → logprob: -13.375116348266602
    4. '```' → logprob: -13.375116348266602
    5. ':-' → logprob: -13.500116348266602
    6. '2' → logprob: -13.750116348266602
    7. ':' → logprob: -14.500116348266602
    8. '``' → logprob: -15.000116348266602
    9. ']' → logprob: -15.125116348266602
    10. ' ' → logprob: -15.437616348266602

Token 22: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09074900299310684
    2. ']' → logprob: -2.4657490253448486
    3. '])' → logprob: -6.4657487869262695
    4. ')]' → logprob: -8.46574878692627
    5. '[' → logprob: -11.09074878692627
    6. '）' → logprob: -11.71574878692627
    7. ')])' → logprob: -11.96574878692627
    8. ' )' → logprob: -13.21574878692627
    9. '']' → logprob: -13.46574878692627
    10. '`)' → logprob: -13.84074878692627

Token 23: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7043066620826721
    2. 'i' → logprob: -1.9543066024780273
    3. 'd' → logprob: -2.4543066024780273
    4. 'dp' → logprob: -2.5793066024780273
    5. 'result' → logprob: -2.8293066024780273
    6. 'r' → logprob: -3.5793066024780273
    7. 'p' → logprob: -3.8293066024780273
    8. 'a' → logprob: -4.204306602478027
    9. 'n' → logprob: -4.579306602478027
    10. 'res' → logprob: -4.704306602478027

Token 24: ' move' (ID: 5275)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.8404096961021423
    2. ' solve' → logprob: -1.090409755706787
    3. ' reverse' → logprob: -3.090409755706787
    4. ' count' → logprob: -3.215409755706787
    5. 'f' → logprob: -3.465409755706787
    6. ' main' → logprob: -3.715409755706787
    7. 'solve' → logprob: -3.840409755706787
    8. ' dfs' → logprob: -4.340409755706787
    9. ' decode' → logprob: -4.840409755706787
    10. ' process' → logprob: -5.215409755706787

Token 25: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2362123429775238
    2. '_' → logprob: -2.4862122535705566
    3. '()' → logprob: -3.8612122535705566
    4. '(i' → logprob: -3.8612122535705566
    5. '_left' → logprob: -4.486212253570557
    6. '(pos' → logprob: -4.611212253570557
    7. '_cursor' → logprob: -4.611212253570557
    8. '_to' → logprob: -4.986212253570557
    9. '_(' → logprob: -4.986212253570557
    10. '():' → logprob: -5.111212253570557

Token 26: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24089093506336212
    2. '):' → logprob: -1.7408909797668457
    3. ')' → logprob: -3.7408909797668457
    4. '_,' → logprob: -5.115890979766846
    5. '_' → logprob: -5.365890979766846
    6. 's' → logprob: -6.365890979766846
    7. ' ,' → logprob: -7.365890979766846
    8. ')_' → logprob: -7.990890979766846
    9. 'a' → logprob: -8.990890502929688
    10. 'x' → logprob: -9.240890502929688

Token 27: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.6473649144172668
    2. 'm' → logprob: -1.022364854812622
    3. 'k' → logprob: -3.647364854812622
    4. ' k' → logprob: -3.772364854812622
    5. 'x' → logprob: -4.897365093231201
    6. ' s' → logprob: -5.022365093231201
    7. ' x' → logprob: -5.022365093231201
    8. 's' → logprob: -5.272365093231201
    9. ' direction' → logprob: -5.397365093231201
    10. ' d' → logprob: -5.397365093231201

Token 28: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5774155259132385
    2. ',' → logprob: -1.0774154663085938
    3. ')' → logprob: -2.3274154663085938
    4. ',n' → logprob: -9.202415466308594
    5. ' ,' → logprob: -9.327415466308594
    6. ' ' → logprob: -9.577415466308594
    7. ' ):' → logprob: -9.827415466308594
    8. '),' → logprob: -10.202415466308594
    9. '_' → logprob: -10.827415466308594
    10. '=' → logprob: -10.952415466308594

Token 29: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.48286548256874084
    2. 's' → logprob: -0.9828654527664185
    3. ' i' → logprob: -6.857865333557129
    4. 'd' → logprob: -7.107865333557129
    5. ' d' → logprob: -7.107865333557129
    6. ' ' → logprob: -7.232865333557129
    7. 'i' → logprob: -7.232865333557129
    8. 'k' → logprob: -7.232865333557129
    9. ' k' → logprob: -7.482865333557129
    10. 'x' → logprob: -7.732865333557129

Token 30: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0018780663376674056
    2. ')' → logprob: -6.376878261566162
    3. ',' → logprob: -9.376877784729004
    4. ':' → logprob: -9.501877784729004
    5. ' ):' → logprob: -11.501877784729004
    6. '):
' → logprob: -12.876877784729004
    7. ''):' → logprob: -14.626877784729004
    8. ']:' → logprob: -14.876877784729004
    9. '():' → logprob: -15.126877784729004
    10. '}:' → logprob: -15.126877784729004

Token 31: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23216328024864197
    2. '   ' → logprob: -2.607163190841675
    3. ' ' → logprob: -2.732163190841675
    4. ' :' → logprob: -3.857163190841675
    5. '\' → logprob: -4.357163429260254
    6. '    ' → logprob: -4.482163429260254
    7. '<|end|>' → logprob: -4.482163429260254
    8. ' 
' → logprob: -6.357163429260254
    9. ':return' → logprob: -6.732163429260254
    10. '\n' → logprob: -6.982163429260254

Token 32: ' result' (ID: 1534)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3282711505889893
    2. ' i' → logprob: -1.5782711505889893
    3. ' \' → logprob: -1.8282711505889893
    4. ' pass' → logprob: -2.5782711505889893
    5. ' if' → logprob: -2.9532711505889893
    6. 'i' → logprob: -3.2032711505889893
    7. '    ' → logprob: -3.4532711505889893
    8. ' 
' → logprob: -3.5782711505889893
    9. 'n' → logprob: -3.7032711505889893
    10. '   ' → logprob: -4.20327091217041

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03368385508656502
    2. '=' → logprob: -3.4086837768554688
    3. 's' → logprob: -11.158683776855469
    4. '_' → logprob: -11.908683776855469
    5. ' ' → logprob: -12.158683776855469
    6. ')' → logprob: -12.408683776855469
    7. '=[]' → logprob: -13.408683776855469
    8. ' =
' → logprob: -13.533683776855469
    9. '  ' → logprob: -13.783683776855469
    10. ',' → logprob: -13.908683776855469

Token 34: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.07040508091449738
    2. ' []' → logprob: -3.3204050064086914
    3. '"' → logprob: -4.070405006408691
    4. '""' → logprob: -4.945405006408691
    5. '0' → logprob: -5.945405006408691
    6. ' ' → logprob: -6.570405006408691
    7. ''' → logprob: -6.695405006408691
    8. '[' → logprob: -7.070405006408691
    9. '''' → logprob: -7.820405006408691
    10. '[]
' → logprob: -8.195405006408691

Token 35: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6555808186531067
    2. '   ' → logprob: -2.030580759048462
    3. '<|end|>' → logprob: -2.155580759048462
    4. ' for' → logprob: -2.530580759048462
    5. '    ' → logprob: -3.280580759048462
    6. 'for' → logprob: -3.530580759048462
    7. ' 
' → logprob: -3.530580759048462
    8. '    
' → logprob: -4.030580997467041
    9. '
' → logprob: -4.405580997467041
    10. ')' → logprob: -5.530580997467041

Token 36: ' pos' (ID: 1253)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.589625895023346
    2. ' for' → logprob: -1.3396258354187012
    3. 'i' → logprob: -2.714625835418701
    4. ' ' → logprob: -3.089625835418701
    5. 'for' → logprob: -3.339625835418701
    6. 'n' → logprob: -5.089625835418701
    7. ' n' → logprob: -5.089625835418701
    8. ' current' → logprob: -5.464625835418701
    9. ' indent' → logprob: -6.214625835418701
    10. '    ' → logprob: -6.339625835418701

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15068577229976654
    2. '=' → logprob: -2.0256857872009277
    3. ' ' → logprob: -5.025685787200928
    4. ',' → logprob: -7.150685787200928
    5. 's' → logprob: -8.52568531036377
    6. 'ition' → logprob: -9.15068531036377
    7. '  ' → logprob: -9.65068531036377
    8. '<|end|>' → logprob: -10.15068531036377
    9. 'ession' → logprob: -10.27568531036377
    10. ')' → logprob: -10.27568531036377

Token 38: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10100750625133514
    2. ' ' → logprob: -2.4760074615478516
    3. ' n' → logprob: -4.851007461547852
    4. 'n' → logprob: -5.851007461547852
    5. 'm' → logprob: -7.476007461547852
    6. ' m' → logprob: -7.976007461547852
    7. ' len' → logprob: -8.726007461547852
    8. 'len' → logprob: -9.101007461547852
    9. ' -' → logprob: -10.476007461547852
    10. '1' → logprob: -10.726007461547852

Token 39: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007335418835282326
    2. 'n' → logprob: -5.257335186004639
    3. 'm' → logprob: -6.757335186004639
    4. 'len' → logprob: -7.382335186004639
    5. '-' → logprob: -9.007335662841797
    6. ' ' → logprob: -9.132335662841797
    7. '1' → logprob: -10.257335662841797
    8. 's' → logprob: -11.382335662841797
    9. '[' → logprob: -11.882335662841797
    10. ' n' → logprob: -12.132335662841797

Token 40: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2759495675563812
    2. '<|end|>' → logprob: -1.7759495973587036
    3. ' while' → logprob: -3.900949478149414
    4. '   ' → logprob: -4.150949478149414
    5. ' 
' → logprob: -4.650949478149414
    6. '<|end|>' → logprob: -5.150949478149414
    7. ' ,' → logprob: -5.650949478149414
    8. ':' → logprob: -5.775949478149414
    9. '    ' → logprob: -5.775949478149414
    10. ' for' → logprob: -6.025949478149414

Token 42: ' class' (ID: 744)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.056404393166303635
    2. ' while' → logprob: -3.3064043521881104
    3. 'for' → logprob: -4.3064045906066895
    4. 'w' → logprob: -6.4314045906066895
    5. '   ' → logprob: -6.6814045906066895
    6. 'i' → logprob: -6.8064045906066895
    7. ' ' → logprob: -8.306404113769531
    8. ' for' → logprob: -8.806404113769531
    9. '	while' → logprob: -9.681404113769531
    10. 'n' → logprob: -9.806404113769531

Token 43: ' Break' (ID: 19842)
  Prédit: ' Stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Stack' → logprob: -0.5264397859573364
    2. ' Node' → logprob: -2.026439666748047
    3. ' Segment' → logprob: -2.026439666748047
    4. ' Cursor' → logprob: -2.401439666748047
    5. ' Token' → logprob: -5.026439666748047
    6. ' Solution' → logprob: -5.276439666748047
    7. 'Stack' → logprob: -5.526439666748047
    8. '_' → logprob: -5.526439666748047
    9. ' Pointer' → logprob: -6.026439666748047
    10. ' Move' → logprob: -6.026439666748047

Token 44: 'Loop' (ID: 21001)
  Prédit: '(Exception'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Exception' → logprob: -0.11918062716722488
    2. 'Exception' → logprob: -2.244180679321289
    3. 'Point' → logprob: -5.869180679321289
    4. 'Error' → logprob: -6.994180679321289
    5. 'able' → logprob: -7.744180679321289
    6. 'Continue' → logprob: -8.244180679321289
    7. 'ing' → logprob: -8.369180679321289
    8. 'Out' → logprob: -8.494180679321289
    9. 'Loop' → logprob: -8.619180679321289
    10. 'er' → logprob: -8.994180679321289

Token 45: '(Exception' (ID: 30178)
  Prédit: '(Exception'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Exception' → logprob: -3.292907877039397e-06
    2. 'Exception' → logprob: -13.75000286102295
    3. '(' → logprob: -14.12500286102295
    4. '(Runtime' → logprob: -14.50000286102295
    5. '(Value' → logprob: -14.75000286102295
    6. '   ' → logprob: -15.62500286102295
    7. ':' → logprob: -16.375003814697266
    8. '(Base' → logprob: -16.625003814697266
    9. '```' → logprob: -17.250003814697266
    10. 'ing' → logprob: -17.250003814697266

Token 46: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0031680986285209656
    2. ')' → logprob: -6.378168106079102
    3. '):
' → logprob: -6.878168106079102
    4. ':' → logprob: -7.753168106079102
    5. '(Exception' → logprob: -13.253168106079102
    6. '   ' → logprob: -14.003168106079102
    7. '):

' → logprob: -15.003168106079102
    8. ' ):' → logprob: -15.378168106079102
    9. '>:' → logprob: -15.378168106079102
    10. '}:' → logprob: -15.378168106079102

Token 47: ' pass' (ID: 1853)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6047960519790649
    2. '
' → logprob: -1.354796051979065
    3. '<|end|>' → logprob: -2.1047959327697754
    4. ' 
' → logprob: -3.4797959327697754
    5. '       ' → logprob: -4.479795932769775
    6. '' → logprob: -5.229795932769775
    7. 'newline' → logprob: -5.229795932769775
    8. ' pass' → logprob: -5.854795932769775
    9. '\
' → logprob: -5.979795932769775
    10. '<|end|>' → logprob: -6.354795932769775

Token 48: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12287921458482742
    2. '\n' → logprob: -3.3728792667388916
    3. '   ' → logprob: -3.6228792667388916
    4. ' 
' → logprob: -4.3728790283203125
    5. '    
' → logprob: -4.3728790283203125
    6. '' → logprob: -4.6228790283203125
    7. 'n' → logprob: -5.6228790283203125
    8. '<|end|>' → logprob: -5.6228790283203125
    9. '

' → logprob: -6.1228790283203125
    10. '	
' → logprob: -6.4978790283203125

Token 49: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02789735049009323
    2. ' 
' → logprob: -4.277897357940674
    3. '    
' → logprob: -5.777897357940674
    4. '

' → logprob: -6.027897357940674
    5. '\n' → logprob: -6.527897357940674
    6. '' → logprob: -6.527897357940674
    7. '<|end|>' → logprob: -6.527897357940674
    8. '  
' → logprob: -6.777897357940674
    9. '
    
' → logprob: -7.652897357940674
    10. ' 

' → logprob: -8.027896881103516

Token 50: ' try' (ID: 2075)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22469797730445862
    2. ' 
' → logprob: -2.099698066711426
    3. '' → logprob: -3.849698066711426
    4. '    
' → logprob: -3.974698066711426
    5. '\n' → logprob: -4.849698066711426
    6. '   ' → logprob: -5.224698066711426
    7. ' ' → logprob: -5.474698066711426
    8. '  
' → logprob: -5.599698066711426
    9. '<|end|>' → logprob: -5.599698066711426
    10. 'n' → logprob: -5.724698066711426

Token 51: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004164945334196091
    2. ':
' → logprob: -5.504165172576904
    3. '       ' → logprob: -10.004164695739746
    4. '   ' → logprob: -10.379164695739746
    5. ' :' → logprob: -12.254164695739746
    6. ':
' → logprob: -13.879164695739746
    7. '    ' → logprob: -14.004164695739746
    8. '):' → logprob: -14.129164695739746
    9. ':

' → logprob: -14.254164695739746
    10. ':def' → logprob: -14.879164695739746

Token 52: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012782112462446094
    2. ':' → logprob: -7.751278400421143
    3. '<|end|>' → logprob: -8.001277923583984
    4. ':
' → logprob: -9.001277923583984
    5. ' for' → logprob: -9.126277923583984
    6. '   ' → logprob: -9.251277923583984
    7. '<|end|>' → logprob: -9.876277923583984
    8. ' to' → logprob: -10.876277923583984
    9. '    ' → logprob: -11.001277923583984
    10. 'n' → logprob: -11.001277923583984

Token 53: ' while' (ID: 2049)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1686680316925049
    2. ' while' → logprob: -1.1686680316925049
    3. '           ' → logprob: -1.6686680316925049
    4. '        ' → logprob: -2.543668031692505
    5. '       ' → logprob: -2.543668031692505
    6. '    ' → logprob: -3.793668031692505
    7. 'while' (adapté à ' while') → logprob: -5.668667793273926
    8. '   ' → logprob: -5.793667793273926
    9. '            ' → logprob: -6.543667793273926
    10. 'for' → logprob: -7.043667793273926

Token 54: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.0918207168579102
    2. ' pos' → logprob: -1.0918207168579102
    3. ' True' → logprob: -1.4668207168579102
    4. 'True' → logprob: -2.34182071685791
    5. '   ' → logprob: -7.09182071685791
    6. '1' → logprob: -8.34182071685791
    7. ' s' → logprob: -8.71682071685791
    8. ' len' → logprob: -9.09182071685791
    9. ' not' → logprob: -9.21682071685791
    10. 'len' → logprob: -9.46682071685791

Token 55: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.032258227467536926
    2. '<' → logprob: -3.5322582721710205
    3. ' <=' → logprob: -6.407258033752441
    4. '<len' → logprob: -8.407258033752441
    5. '+' → logprob: -8.532258033752441
    6. '<n' → logprob: -9.032258033752441
    7. ' +' → logprob: -9.282258033752441
    8. ' ' → logprob: -9.407258033752441
    9. '<=' → logprob: -9.407258033752441
    10. '<m' → logprob: -10.782258033752441

Token 56: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.8968956470489502
    2. 'n' → logprob: -1.6468956470489502
    3. 'len' → logprob: -1.6468956470489502
    4. ' len' → logprob: -1.8968956470489502
    5. 'm' → logprob: -3.39689564704895
    6. ' m' → logprob: -3.77189564704895
    7. 'nm' → logprob: -9.396895408630371
    8. ' ' → logprob: -9.396895408630371
    9. ' nm' → logprob: -9.646895408630371
    10. '(len' → logprob: -10.896895408630371

Token 57: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012130624614655972
    2. ':
' → logprob: -5.1371307373046875
    3. ' and' → logprob: -5.1371307373046875
    4. ' :' → logprob: -8.637130737304688
    5. 'and' → logprob: -9.512130737304688
    6. '):' → logprob: -11.637130737304688
    7. '   ' → logprob: -12.137130737304688
    8. ' :
' → logprob: -12.137130737304688
    9. ':

' → logprob: -12.262130737304688
    10. '[' → logprob: -12.262130737304688

Token 58: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18858741223812103
    2. '       ' → logprob: -2.5635874271392822
    3. '<|end|>' → logprob: -3.0635874271392822
    4. ' ' → logprob: -4.063587188720703
    5. '<|end|>' → logprob: -5.188587188720703
    6. '        ' → logprob: -5.563587188720703
    7. ':' → logprob: -5.688587188720703
    8. ' 
' → logprob: -5.813587188720703
    9. '   ' → logprob: -6.063587188720703
    10. '    ' → logprob: -6.438587188720703

Token 59: ' mx' (ID: 28004)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.34527313709259033
    2. 'if' → logprob: -1.4702731370925903
    3. '           ' → logprob: -3.845273017883301
    4. '       ' → logprob: -4.095273017883301
    5. 'token' → logprob: -5.595273017883301
    6. '   ' → logprob: -6.220273017883301
    7. '    ' → logprob: -6.470273017883301
    8. 'pos' → logprob: -6.595273017883301
    9. ' ' → logprob: -6.720273017883301
    10. ' c' → logprob: -6.845273017883301

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11490831524133682
    2. '=' → logprob: -2.239908218383789
    3. ',' → logprob: -7.864908218383789
    4. 'ove' → logprob: -8.614908218383789
    5. '=max' → logprob: -8.864908218383789
    6. 'pos' → logprob: -9.114908218383789
    7. '_' → logprob: -9.239908218383789
    8. '_pos' → logprob: -9.239908218383789
    9. '_moves' → logprob: -9.239908218383789
    10. '_move' → logprob: -9.239908218383789

Token 61: ' min' (ID: 1349)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.5468072891235352
    2. 'pos' → logprob: -1.5468072891235352
    3. ' m' → logprob: -1.7968072891235352
    4. ' min' → logprob: -2.171807289123535
    5. 'min' → logprob: -2.796807289123535
    6. ' pos' → logprob: -2.796807289123535
    7. '0' → logprob: -3.046807289123535
    8. ' ' → logprob: -3.296807289123535
    9. 'max' → logprob: -4.046807289123535
    10. '-' → logprob: -4.171807289123535

Token 62: '(m' (ID: 2145)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.010190204717218876
    2. '(m' → logprob: -4.760190010070801
    3. '(' → logprob: -7.010190010070801
    4. '(n' → logprob: -7.510190010070801
    5. '(len' → logprob: -10.0101900100708
    6. '(s' → logprob: -10.1351900100708
    7. 'pos' → logprob: -10.7601900100708
    8. ' pos' → logprob: -12.5101900100708
    9. '(p' → logprob: -12.6351900100708
    10. ' (' → logprob: -12.8851900100708

Token 63: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00667724059894681
    2. ' ,' → logprob: -5.381677150726318
    3. ' +' → logprob: -7.631677150726318
    4. '+' → logprob: -7.631677150726318
    5. '-' → logprob: -8.006677627563477
    6. ' -' → logprob: -8.006677627563477
    7. ',pos' → logprob: -8.381677627563477
    8. ',n' → logprob: -9.631677627563477
    9. '   ' → logprob: -10.381677627563477
    10. '),' → logprob: -10.506677627563477

Token 64: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0760572999715805
    2. 'n' → logprob: -2.826057195663452
    3. ' pos' → logprob: -5.451057434082031
    4. 'pos' → logprob: -5.451057434082031
    5. ' len' → logprob: -5.576057434082031
    6. 'len' → logprob: -6.576057434082031
    7. ' ' → logprob: -8.951057434082031
    8. ')' → logprob: -10.576057434082031
    9. '(n' → logprob: -11.576057434082031
    10. 's' → logprob: -11.701057434082031

Token 65: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2316143959760666
    2. '-' → logprob: -1.606614351272583
    3. '-pos' → logprob: -5.106614589691162
    4. ')' → logprob: -9.606614112854004
    5. ' ' → logprob: -10.856614112854004
    6. '-position' → logprob: -11.231614112854004
    7. '   ' → logprob: -11.606614112854004
    8. ' ' → logprob: -13.356614112854004
    9. '-p' → logprob: -13.481614112854004
    10. '[pos' → logprob: -13.606614112854004

Token 66: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.062089357525110245
    2. 'pos' → logprob: -2.812089443206787
    3. '[pos' → logprob: -9.437088966369629
    4. ')' → logprob: -11.937088966369629
    5. '(pos' → logprob: -11.937088966369629
    6. ' ' → logprob: -11.937088966369629
    7. '	pos' → logprob: -11.937088966369629
    8. '_pos' → logprob: -12.437088966369629
    9. 's' → logprob: -12.937088966369629
    10. ',pos' → logprob: -13.062088966369629

Token 67: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6362515091896057
    2. ')
' → logprob: -0.7612515091896057
    3. ' )
' → logprob: -6.386251449584961
    4. ' )' → logprob: -6.886251449584961
    5. ')
' → logprob: -7.386251449584961
    6. '))' → logprob: -8.886251449584961
    7. ')

' → logprob: -9.636251449584961
    8. '))
' → logprob: -10.261251449584961
    9. '   ' → logprob: -11.136251449584961
    10. '           ' → logprob: -11.511251449584961

Token 68: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03533199802041054
    2. ')' → logprob: -4.035332202911377
    3. '<|end|>' → logprob: -4.535332202911377
    4. '            
' → logprob: -6.785332202911377
    5. '<|end|>' → logprob: -6.785332202911377
    6. ',' → logprob: -7.410332202911377
    7. '
' → logprob: -7.410332202911377
    8. '       ' → logprob: -7.660332202911377
    9. ' for' → logprob: -7.660332202911377
    10. '   ' → logprob: -7.910332202911377

Token 69: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2626827359199524
    2. ' for' → logprob: -2.0126826763153076
    3. 'for' (adapté à ' for') → logprob: -2.7626826763153076
    4. ' found' → logprob: -4.637682914733887
    5. 'found' → logprob: -5.012682914733887
    6. '            
' → logprob: -5.887682914733887
    7. '   ' → logprob: -7.137682914733887
    8. ' segment' → logprob: -7.262682914733887
    9. 'token' → logprob: -7.262682914733887
    10. 'segment' → logprob: -7.387682914733887

Token 70: ' step' (ID: 5983)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8902633786201477
    2. 'length' → logprob: -1.390263319015503
    3. 'l' → logprob: -1.515263319015503
    4. 'x' → logprob: -3.640263319015503
    5. 'step' → logprob: -4.015263557434082
    6. 'j' → logprob: -4.015263557434082
    7. 'k' → logprob: -4.140263557434082
    8. ' length' → logprob: -4.140263557434082
    9. ' i' → logprob: -5.390263557434082
    10. 'size' → logprob: -5.640263557434082

Token 71: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011092156171798706
    2. 'in' → logprob: -4.511092185974121
    3. ' ' → logprob: -10.636092185974121
    4. 'range' → logprob: -11.886092185974121
    5. 's' → logprob: -12.636092185974121
    6. '```' → logprob: -13.761092185974121
    7. '1' → logprob: -13.886092185974121
    8. 'n' → logprob: -13.886092185974121
    9. 'In' → logprob: -14.261092185974121
    10. '<|end|>' → logprob: -14.261092185974121

Token 72: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.18003889918327332
    2. ' range' → logprob: -1.8050389289855957
    3. ' reversed' → logprob: -8.430038452148438
    4. 're' → logprob: -9.805038452148438
    5. 'reverse' → logprob: -11.555038452148438
    6. ' xrange' → logprob: -13.305038452148438
    7. '	range' → logprob: -13.305038452148438
    8. '[::-' → logprob: -13.430038452148438
    9. 'mx' → logprob: -13.555038452148438
    10. '(range' → logprob: -14.055038452148438

Token 73: '(mx' (ID: 160663)
  Prédit: '(mx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mx' → logprob: -0.0005077573587186635
    2. ' mx' → logprob: -7.875507831573486
    3. '(' → logprob: -9.375507354736328
    4. 'mx' → logprob: -10.375507354736328
    5. ' (' → logprob: -11.625507354736328
    6. '.mx' → logprob: -13.125507354736328
    7. ' ' → logprob: -15.000507354736328
    8. ',' → logprob: -16.750507354736328
    9. 'Mx' → logprob: -17.000507354736328
    10. ' MX' → logprob: -17.000507354736328

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009832588955760002
    2. '-' → logprob: -5.009832382202148
    3. ' -' → logprob: -6.259832382202148
    4. ' ,' → logprob: -6.884832382202148
    5. '   ' → logprob: -9.634832382202148
    6. ',-' → logprob: -10.634832382202148
    7. '+' → logprob: -11.009832382202148
    8. '           ' → logprob: -11.509832382202148
    9. '0' → logprob: -11.634832382202148
    10. 'm' → logprob: -11.634832382202148

Token 75: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3133479654788971
    2. ' ' → logprob: -1.3133479356765747
    3. ' ' → logprob: -10.750847816467285
    4. '-' → logprob: -11.188347816467285
    5. '1' → logprob: -11.313347816467285
    6. ' -' → logprob: -11.750847816467285
    7. '```' → logprob: -11.813347816467285
    8. '>' → logprob: -11.813347816467285
    9. '`' → logprob: -13.000847816467285
    10. '  ' → logprob: -13.250847816467285

Token 76: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002312145894393325
    2. ' ' → logprob: -6.127312183380127
    3. '-' → logprob: -9.252311706542969
    4. '1' → logprob: -11.127311706542969
    5. ' -' → logprob: -11.502311706542969
    6. '```' → logprob: -13.439811706542969
    7. ' ' → logprob: -14.064811706542969
    8. '   ' → logprob: -14.252311706542969
    9. '>' → logprob: -14.627311706542969
    10. '  ' → logprob: -14.752311706542969

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006444407626986504
    2. '-' → logprob: -5.506444454193115
    3. ',-' → logprob: -6.256444454193115
    4. ' ,' → logprob: -8.006443977355957
    5. '   ' → logprob: -10.006443977355957
    6. ' -' → logprob: -10.131443977355957
    7. ' ,-' → logprob: -11.381443977355957
    8. '```' → logprob: -12.006443977355957
    9. '-,' → logprob: -12.631443977355957
    10. '0' → logprob: -13.256443977355957

Token 78: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4287499487400055
    2. ' -' → logprob: -1.053749918937683
    3. ' ' → logprob: -10.678750038146973
    4. '1' → logprob: -11.928750038146973
    5. '   ' → logprob: -12.053750038146973
    6. '  ' → logprob: -12.303750038146973
    7. '```' → logprob: -12.303750038146973
    8. '0' → logprob: -13.303750038146973
    9. ')' → logprob: -14.053750038146973
    10. '-step' → logprob: -14.428750038146973

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.584239938296378e-06
    2. ' ' → logprob: -12.000007629394531
    3. '-' → logprob: -14.750007629394531
    4. ')' → logprob: -15.375007629394531
    5. '```' → logprob: -15.375007629394531
    6. ' -' → logprob: -15.937507629394531
    7. '   ' → logprob: -16.68750762939453
    8. '):
' → logprob: -17.18750762939453
    9. '۱' → logprob: -17.56250762939453
    10. '):

' → logprob: -17.62500762939453

Token 80: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06346192955970764
    2. '):
' → logprob: -2.813462018966675
    3. ':' → logprob: -7.188461780548096
    4. ' ):' → logprob: -7.563461780548096
    5. ')' → logprob: -9.438462257385254
    6. ' ):
' → logprob: -9.813462257385254
    7. '):
' → logprob: -10.063462257385254
    8. '):

' → logprob: -10.688462257385254
    9. ',' → logprob: -12.063462257385254
    10. '   ' → logprob: -12.938462257385254

Token 81: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27534157037734985
    2. '<|end|>' → logprob: -2.650341510772705
    3. '               ' → logprob: -2.775341510772705
    4. ' ' → logprob: -2.900341510772705
    5. '):' → logprob: -4.275341510772705
    6. '       ' → logprob: -4.525341510772705
    7. '           ' → logprob: -4.775341510772705
    8. ':
' → logprob: -5.400341510772705
    9. ' :' → logprob: -5.900341510772705
    10. ',' → logprob: -6.025341510772705

Token 82: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05702400952577591
    2. '<|end|>' → logprob: -3.3070240020751953
    3. ' if' → logprob: -4.182024002075195
    4. ' 
' → logprob: -6.932024002075195
    5. '<|end|>' → logprob: -7.557024002075195
    6. ' ' → logprob: -7.682024002075195
    7. '                ' → logprob: -7.682024002075195
    8. '               ' → logprob: -8.307024002075195
    9. '                   ' → logprob: -8.432024002075195
    10. ' s' → logprob: -9.057024002075195

Token 83: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.03400203585624695
    2. 's' → logprob: -3.5340020656585693
    3. ' not' → logprob: -6.78400182723999
    4. ' step' → logprob: -6.78400182723999
    5. ' all' → logprob: -7.28400182723999
    6. ' pos' → logprob: -7.28400182723999
    7. 'pos' → logprob: -7.90900182723999
    8. 'step' → logprob: -10.034002304077148
    9. ' ' → logprob: -10.159002304077148
    10. 'all' → logprob: -10.284002304077148

Token 84: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.0026789873372763395
    2. '[' → logprob: -6.252678871154785
    3. ' [' → logprob: -7.752678871154785
    4. 'pos' → logprob: -8.877678871154785
    5. '[-' → logprob: -10.752678871154785
    6. '[position' → logprob: -11.252678871154785
    7. '[:' → logprob: -11.377678871154785
    8. '```' → logprob: -11.377678871154785
    9. '[s' → logprob: -11.502678871154785
    10. ''[' → logprob: -11.752678871154785

Token 85: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3161367177963257
    2. ' +' → logprob: -1.3161367177963257
    3. '[pos' → logprob: -6.941136837005615
    4. 'pos' → logprob: -7.191136837005615
    5. ':' → logprob: -7.441136837005615
    6. ' :' → logprob: -9.066136360168457
    7. ' ' → logprob: -9.691136360168457
    8. ']' → logprob: -9.816136360168457
    9. '...' → logprob: -9.816136360168457
    10. '[' → logprob: -9.816136360168457

Token 86: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.006716674659401178
    2. ' step' → logprob: -5.006716728210449
    3. '(step' → logprob: -14.63171672821045
    4. 's' → logprob: -15.25671672821045
    5. '	step' → logprob: -16.006715774536133
    6. '               ' → logprob: -16.131715774536133
    7. ' ' → logprob: -16.381715774536133
    8. '   ' → logprob: -16.881715774536133
    9. 'steps' → logprob: -17.631715774536133
    10. '                   ' → logprob: -17.631715774536133

Token 87: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.23048797249794006
    2. ']' → logprob: -1.9804879426956177
    3. ' -' → logprob: -2.7304880619049072
    4. '']' → logprob: -6.980487823486328
    5. ']==' → logprob: -7.480487823486328
    6. '1' → logprob: -7.605487823486328
    7. ''-' → logprob: -8.855487823486328
    8. ''' → logprob: -9.105487823486328
    9. ']=='' → logprob: -9.230487823486328
    10. ' ]' → logprob: -9.605487823486328

Token 88: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.565231442451477
    2. '==' → logprob: -1.065231442451477
    3. '-' → logprob: -3.6902313232421875
    4. '=='' → logprob: -3.6902313232421875
    5. ''' → logprob: -5.1902313232421875
    6. ')' → logprob: -5.3152313232421875
    7. ' ' → logprob: -5.9402313232421875
    8. '<=' → logprob: -6.0652313232421875
    9. ']' → logprob: -6.3152313232421875
    10. ' '' → logprob: -6.3152313232421875

Token 89: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04216467961668968
    2. ' '' → logprob: -3.2921645641326904
    3. '"' → logprob: -6.2921648025512695
    4. ''o' → logprob: -8.16716480255127
    5. ''a' → logprob: -8.29216480255127
    6. ' ' → logprob: -8.91716480255127
    7. ''l' → logprob: -9.04216480255127
    8. ''i' → logprob: -9.16716480255127
    9. ''A' → logprob: -9.16716480255127
    10. ''s' → logprob: -9.29216480255127

Token 90: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.35749292373657227
    2. '1' → logprob: -1.7324929237365723
    3. ''' → logprob: -2.2324929237365723
    4. '.' → logprob: -5.107492923736572
    5. ''.' → logprob: -5.107492923736572
    6. '#' → logprob: -6.732492923736572
    7. ''#' → logprob: -7.232492923736572
    8. ')' → logprob: -7.982492923736572
    9. 'o' → logprob: -7.982492923736572
    10. '')' → logprob: -8.232492446899414

Token 91: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.06897667795419693
    2. ''' → logprob: -2.818976640701294
    3. ':' → logprob: -5.818976879119873
    4. '':
' → logprob: -6.693976879119873
    5. ')' → logprob: -6.818976879119873
    6. '):' → logprob: -7.193976879119873
    7. ''):' → logprob: -7.943976879119873
    8. '')' → logprob: -8.443976402282715
    9. '':
' → logprob: -9.318976402282715
    10. ')':' → logprob: -9.568976402282715

Token 92: '                   ' (ID: 699)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6660210490226746
    2. '                   ' → logprob: -1.0410211086273193
    3. ':
' → logprob: -3.2910211086273193
    4. ')' → logprob: -3.5410211086273193
    5. '):' → logprob: -3.6660211086273193
    6. '               ' → logprob: -4.41602087020874
    7. '):
' → logprob: -5.04102087020874
    8. ' :' → logprob: -5.04102087020874
    9. '<|end|>' → logprob: -5.79102087020874
    10. '                    ' → logprob: -5.91602087020874

Token 93: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.5694866180419922
    2. '                   ' → logprob: -1.0694866180419922
    3. ' result' → logprob: -3.444486618041992
    4. 'pos' (adapté à ' pos') → logprob: -4.319486618041992
    5. '                    ' → logprob: -4.319486618041992
    6. ' ' → logprob: -5.069486618041992
    7. '                ' → logprob: -5.194486618041992
    8. '               ' → logprob: -5.194486618041992
    9. '                       ' → logprob: -5.194486618041992
    10. '    ' → logprob: -6.194486618041992

Token 94: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.013431969098746777
    2. ' =' → logprob: -4.763432025909424
    3. '+=' → logprob: -5.388432025909424
    4. ' +' → logprob: -8.763431549072266
    5. '=' → logprob: -9.638431549072266
    6. '+' → logprob: -11.888431549072266
    7. ' ' → logprob: -12.138431549072266
    8. '    ' → logprob: -14.388431549072266
    9. ']+=' → logprob: -14.888431549072266
    10. '   ' → logprob: -15.575931549072266

Token 95: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.1269301027059555
    2. ' step' → logprob: -2.126929998397827
    3. '	step' → logprob: -13.501930236816406
    4. '(step' → logprob: -14.376930236816406
    5. 'Step' → logprob: -16.501930236816406
    6. ' ' → logprob: -17.126930236816406
    7. 'steps' → logprob: -18.126930236816406
    8. '_step' → logprob: -18.376930236816406
    9. '.step' → logprob: -18.751930236816406
    10. '-step' → logprob: -19.126930236816406

Token 96: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0023494805209338665
    2. '               ' → logprob: -7.252349376678467
    3. '
' → logprob: -7.377349376678467
    4. '<|end|>' → logprob: -8.377349853515625
    5. '                    
' → logprob: -8.627349853515625
    6. '                       ' → logprob: -8.752349853515625
    7. '           ' → logprob: -9.002349853515625
    8. '<|end|>' → logprob: -10.002349853515625
    9. '                    ' → logprob: -10.627349853515625
    10. '				' → logprob: -10.627349853515625

Token 97: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001138431136496365
    2. '               ' → logprob: -8.001138687133789
    3. '
' → logprob: -8.751138687133789
    4. '<|end|>' → logprob: -8.751138687133789
    5. '                       ' → logprob: -9.001138687133789
    6. '                    
' → logprob: -9.626138687133789
    7. '                    ' → logprob: -10.001138687133789
    8. '           ' → logprob: -10.251138687133789
    9. '				' → logprob: -10.376138687133789
    10. ')' → logprob: -10.501138687133789

Token 98: ' result' (ID: 1534)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.6450185179710388
    2. ' break' → logprob: -1.2700185775756836
    3. '                   ' → logprob: -1.6450185775756836
    4. '   ' → logprob: -7.645018577575684
    5. '	break' → logprob: -7.645018577575684
    6. 'result' (adapté à ' result') → logprob: -8.770018577575684
    7. '               ' → logprob: -9.270018577575684
    8. '1' → logprob: -9.520018577575684
    9. ' ' → logprob: -10.145018577575684
    10. ' result' → logprob: -10.270018577575684

Token 99: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.006730526220053434
    2. '.' → logprob: -5.006730556488037
    3. '.app' → logprob: -11.756730079650879
    4. ' .' → logprob: -12.381730079650879
    5. 'append' → logprob: -14.131730079650879
    6. '.ap' → logprob: -14.256730079650879
    7. '.Append' → logprob: -14.381730079650879
    8. '.extend' → logprob: -14.631730079650879
    9. ').' → logprob: -15.131730079650879
    10. '.push' → logprob: -16.006731033325195

Token 100: '(step' (ID: 79951)
  Prédit: '(step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(step' → logprob: -0.35464584827423096
    2. '(pos' → logprob: -1.229645848274231
    3. '(str' → logprob: -5.979645729064941
    4. '(' → logprob: -6.479645729064941
    5. 'pos' → logprob: -6.979645729064941
    6. 'step' → logprob: -7.479645729064941
    7. '(chr' → logprob: -7.979645729064941
    8. '('' → logprob: -8.979645729064941
    9. '(len' → logprob: -9.229645729064941
    10. '(s' → logprob: -11.229645729064941

Token 101: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7059692144393921
    2. ')
' → logprob: -0.7059692144393921
    3. '                   ' → logprob: -4.455969333648682
    4. ')
' → logprob: -7.455969333648682
    5. '               ' → logprob: -7.705969333648682
    6. '                       ' → logprob: -10.705968856811523
    7. ')

' → logprob: -10.705968856811523
    8. '           ' → logprob: -10.830968856811523
    9. ' )
' → logprob: -12.330968856811523
    10. '       ' → logprob: -12.455968856811523

Token 102: '                   ' (ID: 699)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5850332975387573
    2. '                   ' → logprob: -1.4600332975387573
    3. '               ' → logprob: -1.7100332975387573
    4. '           ' → logprob: -4.585033416748047
    5. '<|end|>' → logprob: -4.710033416748047
    6. '                       ' → logprob: -5.710033416748047
    7. '       ' → logprob: -6.210033416748047
    8. '                ' → logprob: -6.710033416748047
    9. '<|end|>' → logprob: -7.085033416748047
    10. '```' → logprob: -8.085033416748047

Token 103: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.047778185456991196
    2. ' break' → logprob: -3.4227781295776367
    3. 'break' (adapté à ' break') → logprob: -4.297778129577637
    4. '				' → logprob: -8.922778129577637
    5. '	break' → logprob: -9.047778129577637
    6. '                       ' → logprob: -9.797778129577637
    7. '		           ' → logprob: -10.672778129577637
    8. '                    ' → logprob: -11.047778129577637
    9. '	               ' → logprob: -11.047778129577637
    10. '               ' → logprob: -11.422778129577637

Token 104: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2564953565597534
    2. 'else' → logprob: -1.2564953565597534
    3. '               ' → logprob: -1.6314953565597534
    4. ' else' → logprob: -1.8814953565597534
    5. '
' → logprob: -2.631495475769043
    6. '       ' → logprob: -5.506495475769043
    7. '                
' → logprob: -6.631495475769043
    8. '```' → logprob: -7.006495475769043
    9. '<|end|>' → logprob: -7.131495475769043
    10. '   ' → logprob: -7.506495475769043

Token 105: '           ' (ID: 352)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.7204627990722656
    2. '           ' → logprob: -1.3454627990722656
    3. ' else' → logprob: -1.5954627990722656
    4. '               ' → logprob: -3.0954627990722656
    5. '
' → logprob: -5.845462799072266
    6. '       ' → logprob: -6.845462799072266
    7. '<|end|>' → logprob: -8.470462799072266
    8. '	else' → logprob: -8.595462799072266
    9. '   ' → logprob: -9.220462799072266
    10. '```' → logprob: -9.345462799072266

Token 106: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.3141837418079376
    2. 'else' (adapté à ' else') → logprob: -1.3141837120056152
    3. '       ' → logprob: -7.439183712005615
    4. '           ' → logprob: -9.189184188842773
    5. '[' → logprob: -9.689184188842773
    6. '               ' → logprob: -9.689184188842773
    7. '   ' → logprob: -10.314184188842773
    8. ' ' → logprob: -10.814184188842773
    9. '	else' → logprob: -10.939184188842773
    10. 'Else' → logprob: -11.439184188842773

Token 107: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07891809940338135
    2. ':
' → logprob: -2.578917980194092
    3. ':

' → logprob: -11.45391845703125
    4. '           ' → logprob: -12.45391845703125
    5. ':
' → logprob: -12.57891845703125
    6. '               ' → logprob: -13.07891845703125
    7. ' :' → logprob: -13.20391845703125
    8. ':return' → logprob: -13.45391845703125
    9. ',' → logprob: -14.07891845703125
    10. '   ' → logprob: -14.20391845703125

Token 108: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03985844925045967
    2. 'raise' → logprob: -3.289858341217041
    3. ' raise' → logprob: -6.539858341217041
    4. '   ' → logprob: -9.1648588180542
    5. '           ' → logprob: -9.1648588180542
    6. '	raise' → logprob: -9.4148588180542
    7. '```' → logprob: -10.9148588180542
    8. '                   ' → logprob: -10.9148588180542
    9. '       ' → logprob: -11.5398588180542
    10. '                ' → logprob: -11.7898588180542

Token 109: ' print' (ID: 2123)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.20212319493293762
    2. ' raise' → logprob: -1.7021231651306152
    3. '               ' → logprob: -7.827123165130615
    4. '                   ' → logprob: -9.202123641967773
    5. '   ' → logprob: -9.452123641967773
    6. '```' → logprob: -10.077123641967773
    7. '                ' → logprob: -10.327123641967773
    8. 'pos' → logprob: -10.702123641967773
    9. '           ' → logprob: -11.702123641967773
    10. 'break' → logprob: -11.827123641967773

Token 110: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.2216850072145462
    2. '("' → logprob: -2.2216849327087402
    3. '(' → logprob: -2.8466849327087402
    4. '('' → logprob: -3.4716849327087402
    5. '("-' → logprob: -7.34668493270874
    6. '-' → logprob: -8.471685409545898
    7. '(pos' → logprob: -8.721685409545898
    8. '(len' → logprob: -9.346685409545898
    9. '('-' → logprob: -9.721685409545898
    10. '(False' → logprob: -10.221685409545898

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.000000953674316
    3. '
' → logprob: -16.625001907348633
    4. '2' → logprob: -16.750001907348633
    5. '   ' → logprob: -17.125001907348633
    6. '１' → logprob: -17.500001907348633
    7. ' ' → logprob: -17.500001907348633
    8. ')' → logprob: -17.687501907348633
    9. '

' → logprob: -18.062501907348633
    10. '  ' → logprob: -18.125001907348633

Token 112: ');' (ID: 2245)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3158878684043884
    2. ')' → logprob: -1.3158879280090332
    3. '               ' → logprob: -6.065887928009033
    4. ')
' → logprob: -9.190887451171875
    5. '           ' → logprob: -9.315887451171875
    6. '                   ' → logprob: -9.940887451171875
    7. ')`
' → logprob: -10.690887451171875
    8. ')return' → logprob: -11.940887451171875
    9. '       ' → logprob: -12.190887451171875
    10. ')')
' → logprob: -12.565887451171875

Token 113: ' raise' (ID: 9338)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06482647359371185
    2. ' return' → logprob: -2.814826488494873
    3. 'raise' → logprob: -6.064826488494873
    4. '               ' → logprob: -8.689826011657715
    5. '                   ' → logprob: -8.689826011657715
    6. 'break' → logprob: -9.314826011657715
    7. ' raise' → logprob: -9.689826011657715
    8. ' break' → logprob: -10.314826011657715
    9. '
' → logprob: -12.189826011657715
    10. '                ' → logprob: -13.564826011657715

Token 114: ' Break' (ID: 19842)
  Prédit: ' Break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Break' → logprob: -0.12693671882152557
    2. 'Break' → logprob: -2.126936674118042
    3. ' ' → logprob: -12.501936912536621
    4. 'System' → logprob: -13.376936912536621
    5. 'Move' → logprob: -14.126936912536621
    6. '_break' → logprob: -14.376936912536621
    7. 'break' → logprob: -15.001936912536621
    8. ' System' → logprob: -15.126936912536621
    9. '  ' → logprob: -15.501936912536621
    10. ' break' → logprob: -15.501936912536621

Token 115: 'Loop' (ID: 21001)
  Prédit: 'Loop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Loop' → logprob: -3.128163257315464e-07
    2. 'loop' → logprob: -15.5
    3. 'Move' → logprob: -17.125
    4. '_loop' → logprob: -18.75
    5. 'Lo' → logprob: -18.875
    6. ' Loop' → logprob: -19.125
    7. 'L' → logprob: -19.25
    8. '```' → logprob: -20.625
    9. '_LOOP' → logprob: -20.75
    10. 'Loops' → logprob: -20.875

Token 116: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1777835190296173
    2. '           ' → logprob: -2.177783489227295
    3. 'except' → logprob: -3.427783489227295
    4. '()' → logprob: -5.177783489227295
    5. '   ' → logprob: -5.552783489227295
    6. ')' → logprob: -6.177783489227295
    7. ' except' → logprob: -6.302783489227295
    8. '               ' → logprob: -6.552783489227295
    9. '
' → logprob: -6.927783489227295
    10. '	except' → logprob: -8.052783966064453

Token 117: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5086571574211121
    2. ')' → logprob: -1.0086572170257568
    3. '           ' → logprob: -3.758657217025757
    4. '   ' → logprob: -4.883656978607178
    5. '<|end|>' → logprob: -6.508656978607178
    6. '               ' → logprob: -7.883656978607178
    7. ')
' → logprob: -8.508657455444336
    8. 'except' → logprob: -9.008657455444336
    9. '<|end|>' → logprob: -9.008657455444336
    10. '```' → logprob: -9.383657455444336

Token 118: ' except' (ID: 6384)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.494739830493927
    2. ')' → logprob: -0.994739830493927
    3. ' except' → logprob: -5.119740009307861
    4. '   ' → logprob: -5.494740009307861
    5. '           ' → logprob: -5.619740009307861
    6. 'except' (adapté à ' except') → logprob: -5.869740009307861
    7. '               ' → logprob: -6.869740009307861
    8. ']' → logprob: -7.244740009307861
    9. ' return' → logprob: -8.119739532470703
    10. ' )' → logprob: -8.244739532470703

Token 119: ' Break' (ID: 19842)
  Prédit: ' Break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Break' → logprob: -0.000431861262768507
    2. 'Break' → logprob: -7.750432014465332
    3. ' ' → logprob: -14.125432014465332
    4. '(B' → logprob: -15.625432014465332
    5. ' ' → logprob: -16.000431060791016
    6. '  ' → logprob: -17.250431060791016
    7. '_break' → logprob: -17.875431060791016
    8. '   ' → logprob: -18.125431060791016
    9. '	' → logprob: -18.750431060791016
    10. ' Breaking' → logprob: -19.500431060791016

Token 120: 'Loop' (ID: 21001)
  Prédit: 'Loop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Loop' → logprob: -4.320199877838604e-07
    2. 'Lo' → logprob: -16.0
    3. 'loop' → logprob: -16.5
    4. 'L' → logprob: -16.5
    5. ' Loop' → logprob: -17.25
    6. 'oop' → logprob: -18.375
    7. '_loop' → logprob: -18.875
    8. 'Looper' → logprob: -19.5
    9. 'Look' → logprob: -19.625
    10. 'Loops' → logprob: -20.0

Token 121: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017585984896868467
    2. ':
' → logprob: -6.376758575439453
    3. '():' → logprob: -10.876758575439453
    4. '):' → logprob: -11.251758575439453
    5. ':return' → logprob: -11.251758575439453
    6. '       ' → logprob: -12.376758575439453
    7. '   ' → logprob: -12.751758575439453
    8. ':void' → logprob: -13.501758575439453
    9. '():
' → logprob: -14.126758575439453
    10. ':

' → logprob: -14.626758575439453

Token 122: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023687509819865227
    2. 'pass' → logprob: -4.398687362670898
    3. '   ' → logprob: -5.273687362670898
    4. 'return' → logprob: -5.398687362670898
    5. ' pass' → logprob: -6.648687362670898
    6. ' return' → logprob: -9.023687362670898
    7. '	pass' → logprob: -10.898687362670898
    8. '           ' → logprob: -11.273687362670898
    9. '```' → logprob: -11.523687362670898
    10. 'None' → logprob: -13.273687362670898

Token 123: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10975659638643265
    2. ' return' → logprob: -2.6097567081451416
    3. '       ' → logprob: -3.6097567081451416
    4. '   ' → logprob: -6.6097564697265625
    5. 'pass' → logprob: -6.6097564697265625
    6. ' pass' → logprob: -7.4847564697265625
    7. '           ' → logprob: -10.484756469726562
    8. '    ' → logprob: -10.984756469726562
    9. 'None' → logprob: -11.359756469726562
    10. 'import' → logprob: -11.859756469726562

Token 124: ' None' (ID: 4662)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7903702855110168
    2. '           ' → logprob: -0.9153702855110168
    3. '   ' → logprob: -2.665370225906372
    4. '               ' → logprob: -3.040370225906372
    5. '+' → logprob: -4.415370464324951
    6. '[' → logprob: -5.040370464324951
    7. ')' → logprob: -6.665370464324951
    8. 's' → logprob: -7.040370464324951
    9. '0' → logprob: -7.540370464324951
    10. '#' → logprob: -7.540370464324951

Token 125: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7037867903709412
    2. '       ' → logprob: -1.328786849975586
    3. '               ' → logprob: -1.953786849975586
    4. '   ' → logprob: -3.453786849975586
    5. '<|end|>' → logprob: -3.828786849975586
    6. ')' → logprob: -4.328786849975586
    7. '[' → logprob: -4.703786849975586
    8. '
' → logprob: -5.828786849975586
    9. ' ' → logprob: -6.453786849975586
    10. '            
' → logprob: -6.703786849975586

Token 126: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008275068365037441
    2. '       ' → logprob: -5.133275032043457
    3. '           ' → logprob: -6.383275032043457
    4. ' return' → logprob: -8.633275032043457
    5. '
' → logprob: -9.008275032043457
    6. 'return' → logprob: -9.383275032043457
    7. '```' → logprob: -9.383275032043457
    8. '<|end|>' → logprob: -9.758275032043457
    9. ' result' → logprob: -11.008275032043457
    10. ' ' → logprob: -11.133275032043457

Token 127: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10044033080339432
    2. 'return' (adapté à ' return') → logprob: -2.350440263748169
    3. ' return' → logprob: -8.47544002532959
    4. '
' → logprob: -11.22544002532959
    5. 'print' → logprob: -12.22544002532959
    6. '       ' → logprob: -12.85044002532959
    7. '    
' → logprob: -13.97544002532959
    8. ' ' → logprob: -14.22544002532959
    9. '```' → logprob: -14.22544002532959
    10. 'for' → logprob: -14.35044002532959

Token 128: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.029756855219602585
    2. ' result' → logprob: -3.529756784439087
    3. ' ' → logprob: -12.779756546020508
    4. '(result' → logprob: -13.154756546020508
    5. '[result' → logprob: -14.529756546020508
    6. 'list' → logprob: -15.154756546020508
    7. 're' → logprob: -15.654756546020508
    8. '   ' → logprob: -15.904756546020508
    9. 'tuple' → logprob: -16.029756546020508
    10. '	result' → logprob: -16.154756546020508

Token 129: '[::-' (ID: 159890)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 130: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2823481261730194
    2. '1' → logprob: -2.532348155975342
    3. 'list' → logprob: -2.532348155975342
    4. ']' → logprob: -3.657348155975342
    5. 'verse' → logprob: -4.782348155975342
    6. '()' → logprob: -5.032348155975342
    7. '())' → logprob: -5.157348155975342
    8. 'v' → logprob: -5.157348155975342
    9. '[::-' → logprob: -6.157348155975342
    10. 's' → logprob: -6.282348155975342

Token 131: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.36574100604048e-06
    2. ' )' → logprob: -13.250004768371582
    3. ')
' → logprob: -13.500004768371582
    4. ']' → logprob: -14.625004768371582
    5. '`)' → logprob: -15.750004768371582
    6. '<|end|>' → logprob: -15.750004768371582
    7. '）' → logprob: -16.250003814697266
    8. '   ' → logprob: -16.750003814697266
    9. ')`' → logprob: -17.000003814697266
    10. '')' → logprob: -17.000003814697266

Token 132: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38696959614753723
    2. '(' → logprob: -1.6369695663452148
    3. 'n' → logprob: -2.636969566345215
    4. '[' → logprob: -3.386969566345215
    5. '#' → logprob: -4.886969566345215
    6. '<|end|>' → logprob: -6.011969566345215
    7. ']' → logprob: -6.511969566345215
    8. 'print' → logprob: -6.511969566345215
    9. '(n' → logprob: -6.761969566345215
    10. ',' → logprob: -7.011969566345215

Token 133: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.07892008125782013
    2. '__' → logprob: -2.5789201259613037
    3. ' ' → logprob: -10.953920364379883
    4. 'name' → logprob: -12.453920364379883
    5. ' n' → logprob: -12.703920364379883
    6. ' ' → logprob: -13.203920364379883
    7. ' name' → logprob: -13.203920364379883
    8. 'n' → logprob: -13.953920364379883
    9. '_name' → logprob: -15.203920364379883
    10. '  ' → logprob: -15.828920364379883

Token 134: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3363138735294342
    2. 'name' → logprob: -1.3363138437271118
    3. ' ==' → logprob: -4.211313724517822
    4. '==' → logprob: -5.211313724517822
    5. ' __' → logprob: -6.211313724517822
    6. 'if' → logprob: -8.21131420135498
    7. '```' → logprob: -10.21131420135498
    8. ' name' → logprob: -10.83631420135498
    9. ' ' → logprob: -10.96131420135498
    10. '(name' → logprob: -11.21131420135498

Token 135: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.008129963040119e-06
    2. '==' → logprob: -13.375003814697266
    3. '__.__' → logprob: -13.375003814697266
    4. '__.' → logprob: -14.375003814697266
    5. '__
' → logprob: -15.750003814697266
    6. ' ==' → logprob: -17.250003814697266
    7. '____' → logprob: -18.000003814697266
    8. 'name' → logprob: -18.000003814697266
    9. '__":
' → logprob: -18.000003814697266
    10. '```' → logprob: -18.000003814697266

Token 136: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07246304303407669
    2. '==' → logprob: -2.822463035583496
    3. ' ==' → logprob: -4.572463035583496
    4. '=="' → logprob: -9.947463035583496
    5. '__.__' → logprob: -10.322463035583496
    6. '=='' → logprob: -12.072463035583496
    7. '_' → logprob: -12.572463035583496
    8. '===' → logprob: -12.697463035583496
    9. '==
' → logprob: -12.822463035583496
    10. '____' → logprob: -13.197463035583496

Token 137: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04879026859998703
    2. ''' → logprob: -3.048790216445923
    3. '__' → logprob: -9.173789978027344
    4. ' "__' → logprob: -9.298789978027344
    5. ' '__' → logprob: -12.298789978027344
    6. '"name' → logprob: -13.298789978027344
    7. '"_' → logprob: -14.548789978027344
    8. ''name' → logprob: -15.423789978027344
    9. '   ' → logprob: -16.048789978027344
    10. ''_' → logprob: -16.048789978027344

Token 138: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.005222494248300791
    2. '__' → logprob: -6.005222320556641
    3. '"' → logprob: -6.380222320556641
    4. 'name' → logprob: -7.005222320556641
    5. '__":
' → logprob: -9.88022232055664
    6. 'py' → logprob: -11.13022232055664
    7. '_main' → logprob: -11.13022232055664
    8. '```' → logprob: -11.75522232055664
    9. ''' → logprob: -12.25522232055664
    10. 'import' → logprob: -12.38022232055664

Token 139: '__' (ID: 771)
  Prédit: '__":
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.0797172412276268
    2. '__' → logprob: -2.5797171592712402
    3. '__':
' → logprob: -7.32971715927124
    4. '__:' → logprob: -8.704717636108398
    5. '():
' → logprob: -12.329717636108398
    6. '__()
' → logprob: -15.829717636108398
    7. '__
' → logprob: -16.0797176361084
    8. ':' → logprob: -16.2047176361084
    9. '__);
' → logprob: -16.2047176361084
    10. '():' → logprob: -16.2047176361084

Token 140: '":

' (ID: 107064)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014923986978828907
    2. ':
' → logprob: -4.389924049377441
    3. '():
' → logprob: -6.639924049377441
    4. '():' → logprob: -7.014924049377441
    5. '):' → logprob: -8.764924049377441
    6. '):
' → logprob: -10.764924049377441
    7. '__:' → logprob: -11.889924049377441
    8. '__":
' → logprob: -12.764924049377441
    9. ':

' → logprob: -12.764924049377441
    10. '>:' → logprob: -12.889924049377441

Token 141: '   ' (ID: 271)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.8218326568603516
    2. 'result' → logprob: -1.0718326568603516
    3. '   ' → logprob: -1.5718326568603516
    4. ' res' → logprob: -6.071832656860352
    5. 'ans' → logprob: -6.071832656860352
    6. 'results' → logprob: -6.196832656860352
    7. 'r' → logprob: -6.696832656860352
    8. 'steps' → logprob: -6.821832656860352
    9. 'moves' → logprob: -7.571832656860352
    10. ' result' → logprob: -8.821832656860352

Token 142: ' import' (ID: 1588)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.04256676882505417
    2. 'result' → logprob: -3.5425667762756348
    3. 'ans' → logprob: -5.417566776275635
    4. '   ' → logprob: -5.667566776275635
    5. 'ret' → logprob: -6.417566776275635
    6. 'r' → logprob: -6.417566776275635
    7. ' res' → logprob: -6.917566776275635
    8. 'steps' → logprob: -8.042566299438477
    9. 'moves' → logprob: -9.167566299438477
    10. 'answer' → logprob: -10.167566299438477

Token 143: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0008211841923184693
    2. ' sys' → logprob: -7.125821113586426
    3. 'math' → logprob: -11.250821113586426
    4. 'collections' → logprob: -14.125821113586426
    5. 'built' → logprob: -14.625821113586426
    6. 'bis' → logprob: -14.750821113586426
    7. 're' → logprob: -15.250821113586426
    8. 'io' → logprob: -15.375821113586426
    9. 'typing' → logprob: -15.500821113586426
    10. 'random' → logprob: -15.625821113586426

Token 144: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026978643611073494
    2. '
' → logprob: -4.401978492736816
    3. 'input' → logprob: -4.776978492736816
    4. '    
' → logprob: -5.401978492736816
    5. 'data' → logprob: -7.151978492736816
    6. 'n' → logprob: -8.651978492736816
    7. ' input' → logprob: -9.276978492736816
    8. 'for' → logprob: -10.026978492736816
    9. '<|end|>' → logprob: -10.026978492736816
    10. 'output' → logprob: -10.276978492736816

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8343265056610107
    2. 'result' → logprob: -1.0843265056610107
    3. 'n' → logprob: -1.5843265056610107
    4. 'data' → logprob: -4.83432674407959
    5. 'results' → logprob: -5.33432674407959
    6. 'res' → logprob: -5.70932674407959
    7. ' n' → logprob: -6.20932674407959
    8. 'output' → logprob: -6.33432674407959
    9. ' result' → logprob: -7.58432674407959
    10. 'input' → logprob: -7.83432674407959

Token 146: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.3060154914855957
    2. 'result' → logprob: -1.4310154914855957
    3. '   ' → logprob: -4.556015491485596
    4. 'ans' → logprob: -5.556015491485596
    5. 'r' → logprob: -5.931015491485596
    6. 'data' → logprob: -6.181015491485596
    7. 'answer' → logprob: -6.306015491485596
    8. 'output' → logprob: -6.931015491485596
    9. ' res' → logprob: -7.056015491485596
    10. 'ret' → logprob: -7.806015491485596

Token 147: ' Une' (ID: 19758)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5126311182975769
    2. 'res' → logprob: -1.7626311779022217
    3. 'result' → logprob: -1.8876311779022217
    4. 'steps' → logprob: -4.137630939483643
    5. 'for' → logprob: -4.262630939483643
    6. ' res' → logprob: -4.262630939483643
    7. 'moves' → logprob: -4.887630939483643
    8. ' result' → logprob: -5.137630939483643
    9. 'data' → logprob: -5.387630939483643
    10. 'r' → logprob: -6.012630939483643

Token 148: ' approche' (ID: 102373)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.15910279750823975
    2. 'val' → logprob: -3.2841029167175293
    3. 'valu' → logprob: -3.6591029167175293
    4. 'cess' → logprob: -4.159102916717529
    5. 'qual' → logprob: -4.159102916717529
    6. 'f' → logprob: -4.409102916717529
    7. 'pected' → logprob: -5.159102916717529
    8. '#' → logprob: -6.159102916717529
    9. 'ccess' → logprob: -6.159102916717529
    10. 'if' → logprob: -6.409102916717529

Token 149: ' O' (ID: 532)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7929045557975769
    2. '   ' → logprob: -1.2929046154022217
    3. ':' → logprob: -2.2929046154022217
    4. ' différente' → logprob: -3.7929046154022217
    5. 'simple' → logprob: -3.9179046154022217
    6. 'optim' → logprob: -4.042904376983643
    7. 'plus' → logprob: -4.167904376983643
    8. 'alternative' → logprob: -4.417904376983643
    9. 'gre' → logprob: -4.542904376983643
    10. 'python' → logprob: -4.667904376983643

Token 150: 'OP' (ID: 4164)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.11853919923305511
    2. 'n' → logprob: -2.3685390949249268
    3. 'r' → logprob: -5.743539333343506
    4. 'f' → logprob: -6.118539333343506
    5. 'b' → logprob: -6.368539333343506
    6. '(N' → logprob: -6.493539333343506
    7. 'pt' → logprob: -6.618539333343506
    8. 't' → logprob: -6.743539333343506
    9. 'p' → logprob: -6.743539333343506
    10. '(' → logprob: -6.993539333343506

Token 151: ' pour' (ID: 1930)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.25491344928741455
    2. ':' → logprob: -2.129913330078125
    3. '<|end|>' → logprob: -3.504913330078125
    4. '
' → logprob: -3.879913330078125
    5. ' class' → logprob: -4.254913330078125
    6. '   ' → logprob: -4.504913330078125
    7. '<|end|>' → logprob: -4.504913330078125
    8. 'def' → logprob: -4.754913330078125
    9. '```' → logprob: -6.379913330078125
    10. ' :' → logprob: -6.629913330078125

Token 152: ' impr' (ID: 30234)
  Prédit: ' résoudre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' résoudre' → logprob: -1.2075235843658447
    2. '   ' → logprob: -1.8325235843658447
    3. 'class' → logprob: -2.3325235843658447
    4. ' gérer' → logprob: -2.7075235843658447
    5. ' la' → logprob: -2.8325235843658447
    6. ' class' → logprob: -3.0825235843658447
    7. ' le' → logprob: -3.3325235843658447
    8. 'l' → logprob: -3.4575235843658447
    9. 'le' → logprob: -4.457523345947266
    10. 'r' → logprob: -4.457523345947266

Token 153: 'imer' (ID: 3747)
  Prédit: 'imer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imer' → logprob: -0.022078562527894974
    2. 'ouver' → logprob: -4.397078514099121
    3. 'import' → logprob: -5.772078514099121
    4. '#' → logprob: -6.772078514099121
    5. 'omer' → logprob: -6.772078514099121
    6. 'im' → logprob: -6.897078514099121
    7. 'ov' → logprob: -7.147078514099121
    8. 'o' → logprob: -7.397078514099121
    9. '```' → logprob: -7.897078514099121
    10. 'onter' → logprob: -8.147078514099121

Token 154: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07987254112958908
    2. 'result' → logprob: -3.0798726081848145
    3. '(' → logprob: -4.4548726081848145
    4. '(len' → logprob: -5.0798726081848145
    5. '()' → logprob: -6.3298726081848145
    6. 'def' → logprob: -6.4548726081848145
    7. '(result' → logprob: -6.4548726081848145
    8. '
' → logprob: -6.7048726081848145
    9. 'for' → logprob: -6.8298726081848145
    10. '(n' → logprob: -7.3298726081848145

Token 155: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3302478790283203
    2. ':' → logprob: -2.4552478790283203
    3. 'result' → logprob: -2.5802478790283203
    4. 'def' → logprob: -3.3302478790283203
    5. 'le' → logprob: -4.70524787902832
    6. '
' → logprob: -4.83024787902832
    7. '.' → logprob: -4.95524787902832
    8. 'class' → logprob: -5.08024787902832
    9. ' la' → logprob: -5.08024787902832
    10. 'print' → logprob: -5.33024787902832

Token 156: ' class' (ID: 744)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4779928922653198
    2. 'class' (adapté à ' class') → logprob: -0.9779928922653198
    3. ' class' → logprob: -6.227993011474609
    4. 'result' → logprob: -7.227993011474609
    5. 'n' → logprob: -8.10299301147461
    6. 'def' → logprob: -8.22799301147461
    7. '
' → logprob: -8.72799301147461
    8. '    
' → logprob: -8.85299301147461
    9. 'for' → logprob: -9.85299301147461
    10. 'output' → logprob: -10.22799301147461

Token 157: ' Printer' (ID: 71701)
  Prédit: 'Printer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Printer' → logprob: -0.3450167775154114
    2. ' Printer' → logprob: -1.3450167179107666
    3. 'Result' → logprob: -4.970016956329346
    4. 'Solution' → logprob: -4.970016956329346
    5. ' Solution' → logprob: -5.595016956329346
    6. 'Output' → logprob: -5.595016956329346
    7. 'Writer' → logprob: -5.720016956329346
    8. ' Result' → logprob: -6.095016956329346
    9. ' Solver' → logprob: -6.345016956329346
    10. 'Solver' → logprob: -7.095016956329346

Token 158: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07020162045955658
    2. ':
' → logprob: -2.6952016353607178
    3. ':

' → logprob: -9.195201873779297
    4. ' :' → logprob: -9.320201873779297
    5. '):' → logprob: -10.945201873779297
    6. ' :
' → logprob: -11.070201873779297
    7. '   ' → logprob: -11.320201873779297
    8. '):
' → logprob: -11.820201873779297
    9. '(object' → logprob: -11.945201873779297
    10. '<|end|>' → logprob: -12.320201873779297

Token 159: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3234628736972809
    2. ':
' → logprob: -1.4484628438949585
    3. '   ' → logprob: -3.948462963104248
    4. '       ' → logprob: -4.823462963104248
    5. '<|end|>' → logprob: -4.948462963104248
    6. '<|end|>' → logprob: -6.073462963104248
    7. '(object' → logprob: -6.698462963104248
    8. ':

' → logprob: -6.823462963104248
    9. '
' → logprob: -7.823462963104248
    10. '():
' → logprob: -7.948462963104248

Token 160: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.19273097813129425
    2. 'def' (adapté à ' def') → logprob: -2.3177309036254883
    3. '   ' → logprob: -2.5677309036254883
    4. '       ' → logprob: -10.317730903625488
    5. '    ' → logprob: -10.942730903625488
    6. '    
' → logprob: -11.317730903625488
    7. ' ' → logprob: -11.692730903625488
    8. '	def' → logprob: -11.692730903625488
    9. '
' → logprob: -12.817730903625488
    10. '  ' → logprob: -12.817730903625488

Token 161: ' show' (ID: 2356)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.13129203021526337
    2. '__' → logprob: -2.1312921047210693
    3. ' __' → logprob: -5.75629186630249
    4. 'print' → logprob: -6.88129186630249
    5. 'def' → logprob: -9.881292343139648
    6. ' init' → logprob: -10.006292343139648
    7. '_init' → logprob: -10.631292343139648
    8. 'int' → logprob: -11.631292343139648
    9. 'staticmethod' → logprob: -11.756292343139648
    10. 'iter' → logprob: -12.631292343139648

Token 162: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.7001518607139587
    2. '(result' → logprob: -0.8251518607139587
    3. '(' → logprob: -2.8251519203186035
    4. '(results' → logprob: -6.2001519203186035
    5. '(s' → logprob: -6.9501519203186035
    6. ':' → logprob: -7.2001519203186035
    7. '():' → logprob: -7.7001519203186035
    8. '(data' → logprob: -7.7001519203186035
    9. 'def' → logprob: -8.825151443481445
    10. 'result' → logprob: -8.825151443481445

Token 163: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010463856160640717
    2. ' ,' → logprob: -6.876046180725098
    3. ',result' → logprob: -11.876046180725098
    4. '):' → logprob: -12.626046180725098
    5. ',data' → logprob: -14.001046180725098
    6. 'self' → logprob: -14.126046180725098
    7. ',line' → logprob: -15.001046180725098
    8. ',value' → logprob: -15.376046180725098
    9. ',message' → logprob: -15.376046180725098
    10. '):
' → logprob: -15.501046180725098

Token 164: ' arr' (ID: 1724)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.0176228284835815
    2. 'lst' → logprob: -1.3926228284835815
    3. 'res' → logprob: -1.7676228284835815
    4. 'arr' → logprob: -2.267622947692871
    5. ' res' → logprob: -3.142622947692871
    6. 'data' → logprob: -3.642622947692871
    7. ' result' → logprob: -4.392622947692871
    8. ' lst' → logprob: -4.892622947692871
    9. 'steps' → logprob: -5.142622947692871
    10. 'ans' → logprob: -5.892622947692871

Token 165: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6958342790603638
    2. '):' → logprob: -0.6958342790603638
    3. ')' → logprob: -6.195834159851074
    4. '):
' → logprob: -7.570834159851074
    5. '   ' → logprob: -9.445834159851074
    6. '):

' → logprob: -10.945834159851074
    7. ' ):' → logprob: -11.695834159851074
    8. ',' → logprob: -12.195834159851074
    9. '       ' → logprob: -12.320834159851074
    10. ' ):
' → logprob: -12.695834159851074

Token 166: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00960367452353239
    2. ':' → logprob: -5.759603500366211
    3. ':
' → logprob: -6.009603500366211
    4. 'print' → logprob: -6.759603500366211
    5. '       ' → logprob: -8.009603500366211
    6. '[' → logprob: -8.009603500366211
    7. '():
' → logprob: -8.134603500366211
    8. '(' → logprob: -8.134603500366211
    9. '[]' → logprob: -8.134603500366211
    10. '():' → logprob: -8.384603500366211

Token 167: ' print' (ID: 2123)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.606902003288269
    2. ' for' → logprob: -1.106902003288269
    3. 'for' → logprob: -2.1069021224975586
    4. ' if' → logprob: -6.481902122497559
    5. 'if' → logprob: -7.106902122497559
    6. '               ' → logprob: -8.731902122497559
    7. 'print' (adapté à ' print') → logprob: -9.106902122497559
    8. ' print' → logprob: -9.481902122497559
    9. '	       ' → logprob: -10.606902122497559
    10. '       ' → logprob: -10.981902122497559

Token 168: '("' (ID: 568)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.025905083864927292
    2. '('' → logprob: -4.025905132293701
    3. '(' → logprob: -5.150905132293701
    4. '("' → logprob: -6.275905132293701
    5. '(*(' → logprob: -10.400904655456543
    6. '(len' → logprob: -11.150904655456543
    7. '()' → logprob: -13.150904655456543
    8. '('\' → logprob: -14.150904655456543
    9. '(*)' → logprob: -14.150904655456543
    10. ' (*' → logprob: -14.650904655456543

Token 169: ' ".' (ID: 11730)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.39759260416030884
    2. '*' → logprob: -1.397592544555664
    3. '"' → logprob: -3.272592544555664
    4. '("' → logprob: -4.147592544555664
    5. '(' → logprob: -4.647592544555664
    6. '(len' → logprob: -4.772592544555664
    7. '('' → logprob: -5.397592544555664
    8. ''' → logprob: -5.897592544555664
    9. 'len' → logprob: -7.272592544555664
    10. '*"' → logprob: -8.647592544555664

Token 170: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -3.292907877039397e-06
    2. ' join' → logprob: -12.75000286102295
    3. 'j' → logprob: -16.500003814697266
    4. 'jo' → logprob: -16.625003814697266
    5. 'print' → logprob: -17.250003814697266
    6. '.join' → logprob: -17.500003814697266
    7. '".' → logprob: -17.875003814697266
    8. '"' → logprob: -18.375003814697266
    9. '(join' → logprob: -19.125003814697266
    10. '*' → logprob: -19.750003814697266

Token 171: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0012953581754118204
    2. '(str' → logprob: -6.751295566558838
    3. 'map' → logprob: -9.00129508972168
    4. '(' → logprob: -14.12629508972168
    5. 'str' → logprob: -14.25129508972168
    6. '(list' → logprob: -15.00129508972168
    7. ' map' → logprob: -16.25129508972168
    8. '([' → logprob: -16.37629508972168
    9. '	map' → logprob: -17.37629508972168
    10. '[str' → logprob: -17.75129508972168

Token 172: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.0003037650021724403
    2. 'str' → logprob: -8.125304222106934
    3. '(' → logprob: -12.125304222106934
    4. ' str' → logprob: -13.750304222106934
    5. '```' → logprob: -14.750304222106934
    6. '=str' → logprob: -15.250304222106934
    7. '	str' → logprob: -15.625304222106934
    8. '   ' → logprob: -15.750304222106934
    9. '[str' → logprob: -16.000303268432617
    10. '
' → logprob: -17.000303268432617

Token 173: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13620471954345703
    2. '(arr' → logprob: -2.136204719543457
    3. 'arr' → logprob: -4.761204719543457
    4. '[arr' → logprob: -8.261204719543457
    5. '<arr' → logprob: -8.511204719543457
    6. ' ,' → logprob: -9.261204719543457
    7. ',array' → logprob: -9.886204719543457
    8. '	arr' → logprob: -10.636204719543457
    9. '<|end|>' → logprob: -11.386204719543457
    10. ' arr' → logprob: -11.386204719543457

Token 174: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.008616226725280285
    2. ' arr' → logprob: -4.7586164474487305
    3. '(arr' → logprob: -13.63361644744873
    4. '	arr' → logprob: -15.88361644744873
    5. '[arr' → logprob: -16.008615493774414
    6. '           ' → logprob: -16.383615493774414
    7. '   ' → logprob: -18.008615493774414
    8. '
' → logprob: -18.133615493774414
    9. '$arr' → logprob: -18.133615493774414
    10. '<arr' → logprob: -19.133615493774414

Token 175: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.0022408931981772184
    2. '))' → logprob: -6.1272406578063965
    3. ')))
' → logprob: -10.002241134643555
    4. ' ' → logprob: -12.752241134643555
    5. '))))' → logprob: -13.252241134643555
    6. '       ' → logprob: -13.377241134643555
    7. '   ' → logprob: -13.627241134643555
    8. ')));' → logprob: -13.752241134643555
    9. ')' → logprob: -14.252241134643555
    10. '           ' → logprob: -14.627241134643555

Token 176: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032053567469120026
    2. '    
' → logprob: -4.657053470611572
    3. 'result' → logprob: -5.157053470611572
    4. 'arr' → logprob: -5.157053470611572
    5. '
' → logprob: -5.282053470611572
    6. ' result' → logprob: -6.657053470611572
    7. '  
' → logprob: -7.032053470611572
    8. '        
' → logprob: -7.907053470611572
    9. 'res' → logprob: -8.03205394744873
    10. '       ' → logprob: -8.28205394744873

Token 177: ' res' (ID: 694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9228958487510681
    2. 'p' → logprob: -1.047895908355713
    3. 'printer' → logprob: -1.422895908355713
    4. 'pr' → logprob: -4.672895908355713
    5. ' p' → logprob: -7.297895908355713
    6. '
' → logprob: -7.922895908355713
    7. ' printer' → logprob: -9.047895431518555
    8. '    
' → logprob: -9.297895431518555
    9. 'a' → logprob: -9.922895431518555
    10. 'print' → logprob: -10.297895431518555

Token 178: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3310979902744293
    2. 'ult' → logprob: -1.581097960472107
    3. '=' → logprob: -2.5810980796813965
    4. ' ult' → logprob: -9.081097602844238
    5. '   ' → logprob: -9.581097602844238
    6. ' ' → logprob: -10.206097602844238
    7. 't' → logprob: -10.206097602844238
    8. 'u' → logprob: -10.456097602844238
    9. 'ults' → logprob: -10.581097602844238
    10. 'ault' → logprob: -10.706097602844238

Token 179: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.06994843482971191
    2. ' move' → logprob: -2.694948434829712
    3. '   ' → logprob: -12.194948196411133
    4. '(move' → logprob: -12.319948196411133
    5. ' ' → logprob: -13.569948196411133
    6. '	move' → logprob: -13.944948196411133
    7. '  ' → logprob: -15.819948196411133
    8. '.move' → logprob: -16.694948196411133
    9. 'mov' → logprob: -16.819948196411133
    10. 'mo' → logprob: -17.444948196411133

Token 180: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.650518920039758e-06
    2. '(' → logprob: -13.000003814697266
    3. ' (' → logprob: -13.625003814697266
    4. 'n' → logprob: -15.875003814697266
    5. '(
' → logprob: -17.125003814697266
    6. '
' → logprob: -19.125003814697266
    7. '```' → logprob: -19.500003814697266
    8. ' n' → logprob: -19.875003814697266
    9. '<n' → logprob: -19.875003814697266
    10. '(s' → logprob: -20.250003814697266

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017603866290301085
    2. ',m' → logprob: -6.626760482788086
    3. ' ,' → logprob: -7.751760482788086
    4. 'm' → logprob: -12.876760482788086
    5. ',
' → logprob: -14.126760482788086
    6. '   ' → logprob: -14.626760482788086
    7. ',n' → logprob: -15.251760482788086
    8. '-' → logprob: -16.001760482788086
    9. ' m' → logprob: -16.001760482788086
    10. '=' → logprob: -16.876760482788086

Token 182: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.007606747094541788
    2. ' m' → logprob: -4.8826069831848145
    3. '   ' → logprob: -14.757606506347656
    4. ' ' → logprob: -15.632606506347656
    5. '  ' → logprob: -17.257606506347656
    6. '    ' → logprob: -17.507606506347656
    7. ')' → logprob: -17.882606506347656
    8. '	m' → logprob: -18.007606506347656
    9. ',' → logprob: -18.757606506347656
    10. '```' → logprob: -19.007606506347656

Token 183: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.329167369287461e-05
    2. ' ,' → logprob: -9.375093460083008
    3. ',s' → logprob: -11.750093460083008
    4. '   ' → logprob: -15.375093460083008
    5. ',
' → logprob: -15.875093460083008
    6. ',res' → logprob: -15.875093460083008
    7. ',n' → logprob: -17.000093460083008
    8. 's' → logprob: -17.125093460083008
    9. ',m' → logprob: -18.125093460083008
    10. '```' → logprob: -18.250093460083008

Token 184: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.009758212603628635
    2. ' s' → logprob: -4.634757995605469
    3. ')' → logprob: -14.009757995605469
    4. '   ' → logprob: -14.134757995605469
    5. ' ' → logprob: -15.259757995605469
    6. ')s' → logprob: -16.13475799560547
    7. '  ' → logprob: -16.50975799560547
    8. '
' → logprob: -16.63475799560547
    9. '       ' → logprob: -17.38475799560547
    10. '(s' → logprob: -17.38475799560547

Token 185: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06198975816369057
    2. ')' → logprob: -2.8119897842407227
    3. ')

' → logprob: -11.311989784240723
    4. ')
' → logprob: -11.561989784240723
    5. ' )
' → logprob: -15.436989784240723
    6. ')`
' → logprob: -16.311988830566406
    7. 'if' → logprob: -17.311988830566406
    8. '   ' → logprob: -18.311988830566406
    9. ' )' → logprob: -18.436988830566406
    10. ')#' → logprob: -18.811988830566406

Token 186: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25889015197753906
    2. '   ' → logprob: -1.508890151977539
    3. ' if' → logprob: -5.008890151977539
    4. '
' → logprob: -8.508890151977539
    5. '<|end|>' → logprob: -10.258890151977539
    6. '    
' → logprob: -11.758890151977539
    7. ' ' → logprob: -12.883890151977539
    8. '[' → logprob: -13.133890151977539
    9. '	if' → logprob: -13.258890151977539
    10. '```' → logprob: -13.508890151977539

Token 187: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0348820798099041
    2. '   ' → logprob: -3.534882068634033
    3. ' if' → logprob: -5.284882068634033
    4. '
' → logprob: -10.534882545471191
    5. '    
' → logprob: -11.034882545471191
    6. '  
' → logprob: -13.409882545471191
    7. 'pr' → logprob: -13.909882545471191
    8. ' ' → logprob: -13.909882545471191
    9. '  ' → logprob: -14.034882545471191
    10. '	if' → logprob: -14.159882545471191

Token 188: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5759395360946655
    2. ' res' → logprob: -0.8259395360946655
    3. '(res' → logprob: -17.325939178466797
    4. ' ' → logprob: -17.450939178466797
    5. '	res' → logprob: -18.075939178466797
    6. '   ' → logprob: -18.700939178466797
    7. ' not' → logprob: -19.075939178466797
    8. ' ' → logprob: -19.450939178466797
    9. 'not' → logprob: -19.450939178466797
    10. ' isinstance' → logprob: -20.075939178466797

Token 189: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0024779161904007196
    2. 'is' → logprob: -6.002478122711182
    3. ':' → logprob: -14.002477645874023
    4. '!=' → logprob: -14.252477645874023
    5. ' ' → logprob: -14.877477645874023
    6. '==' → logprob: -15.502477645874023
    7. ' !=' → logprob: -16.127477645874023
    8. ')' → logprob: -16.502477645874023
    9. '	is' → logprob: -17.502477645874023
    10. '   ' → logprob: -18.127477645874023

Token 190: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.13822554051876068
    2. ' not' → logprob: -2.638225555419922
    3. 'None' → logprob: -2.888225555419922
    4. ' None' → logprob: -6.263225555419922
    5. '   ' → logprob: -10.638225555419922
    6. 'Not' → logprob: -13.013225555419922
    7. ' ' → logprob: -13.638225555419922
    8. 'none' → logprob: -13.888225555419922
    9. '	not' → logprob: -14.638225555419922
    10. '  ' → logprob: -15.138225555419922

Token 191: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.005241225939244032
    2. ' None' → logprob: -5.255241394042969
    3. '   ' → logprob: -12.130241394042969
    4. '(None' → logprob: -14.505241394042969
    5. '  ' → logprob: -14.630241394042969
    6. '```' → logprob: -15.255241394042969
    7. '_None' → logprob: -15.380241394042969
    8. ' ' → logprob: -15.505241394042969
    9. 'none' → logprob: -16.13024139404297
    10. '=None' → logprob: -16.25524139404297

Token 192: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3505118489265442
    2. ':' → logprob: -1.2255117893218994
    3. '       ' → logprob: -6.3505120277404785
    4. '   ' → logprob: -8.22551155090332
    5. ' and' → logprob: -10.97551155090332
    6. '):
' → logprob: -11.35051155090332
    7. ':

' → logprob: -11.47551155090332
    8. ':
' → logprob: -12.47551155090332
    9. ' :
' → logprob: -12.72551155090332
    10. '():
' → logprob: -12.97551155090332

Token 193: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017484845593571663
    2. '   ' → logprob: -6.376748561859131
    3. 'print' → logprob: -11.501748085021973
    4. ' Printer' → logprob: -11.751748085021973
    5. ' res' → logprob: -11.876748085021973
    6. ' print' → logprob: -12.001748085021973
    7. 'Printer' → logprob: -12.126748085021973
    8. '```' → logprob: -12.501748085021973
    9. '
' → logprob: -13.501748085021973
    10. '[' → logprob: -13.626748085021973

Token 194: ' p' (ID: 275)
  Prédit: 'Printer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Printer' → logprob: -0.08546612411737442
    2. ' Printer' → logprob: -2.960466146469116
    3. '   ' → logprob: -3.710466146469116
    4. '       ' → logprob: -5.585465908050537
    5. 'printer' → logprob: -6.710465908050537
    6. 'p' (adapté à ' p') → logprob: -8.210466384887695
    7. ' printer' → logprob: -9.210466384887695
    8. ' p' → logprob: -9.210466384887695
    9. 'print' → logprob: -9.335466384887695
    10. 'pr' → logprob: -9.960466384887695

Token 195: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.001170225441455841
    2. '   ' → logprob: -7.6261701583862305
    3. '=' → logprob: -8.25117015838623
    4. ' =' → logprob: -8.37617015838623
    5. 'Printer' → logprob: -8.75117015838623
    6. 'rin' → logprob: -11.50117015838623
    7. ' Printer' → logprob: -11.75117015838623
    8. '       ' → logprob: -12.75117015838623
    9. 'riter' → logprob: -12.87617015838623
    10. '
' → logprob: -13.62617015838623

Token 196: ' Printer' (ID: 71701)
  Prédit: 'Printer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Printer' → logprob: -9.65101717156358e-05
    2. ' Printer' → logprob: -9.250096321105957
    3. 'Processor' → logprob: -16.000097274780273
    4. '
' → logprob: -16.375097274780273
    5. 'printer' → logprob: -16.875097274780273
    6. 'Parser' → logprob: -17.125097274780273
    7. '   ' → logprob: -17.500097274780273
    8. 'Prin' → logprob: -17.625097274780273
    9. 'Pr' → logprob: -17.875097274780273
    10. 'Print' → logprob: -18.000097274780273

Token 197: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.05183706432580948
    2. '()' → logprob: -3.3018369674682617
    3. '.show' → logprob: -4.301836967468262
    4. '()
' → logprob: -9.051836967468262
    5. '().' → logprob: -10.426836967468262
    6. '()

' → logprob: -12.551836967468262
    7. '.' → logprob: -13.676836967468262
    8. ' ()
' → logprob: -13.926836967468262
    9. 'show' → logprob: -14.051836967468262
    10. '       ' → logprob: -14.176836967468262

Token 198: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008020033710636199
    2. 'p' → logprob: -7.375802040100098
    3. ' p' → logprob: -8.750802040100098
    4. '   ' → logprob: -11.000802040100098
    5. '           ' → logprob: -15.875802040100098
    6. '	p' → logprob: -16.50080108642578
    7. ' ' → logprob: -16.62580108642578
    8. '	' → logprob: -16.87580108642578
    9. '      ' → logprob: -17.37580108642578
    10. '
' → logprob: -17.75080108642578

Token 199: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.07152337580919266
    2. ' p' → logprob: -3.196523427963257
    3. '       ' → logprob: -3.571523427963257
    4. '   ' → logprob: -11.946523666381836
    5. ' ' → logprob: -14.696523666381836
    6. '	p' → logprob: -14.696523666381836
    7. '           ' → logprob: -15.071523666381836
    8. 'print' → logprob: -15.571523666381836
    9. '      ' → logprob: -16.196523666381836
    10. '        
' → logprob: -16.571523666381836

Token 200: '.show' (ID: 8871)
  Prédit: '.show'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.show' → logprob: -3.054500666621607e-06
    2. '.' → logprob: -13.25000286102295
    3. 'show' → logprob: -13.87500286102295
    4. ' .' → logprob: -15.37500286102295
    5. '.print' → logprob: -18.750003814697266
    6. ' show' → logprob: -19.500003814697266
    7. '.Show' → logprob: -20.625003814697266
    8. '	show' → logprob: -20.750003814697266
    9. '       ' → logprob: -20.875003814697266
    10. '   ' → logprob: -20.875003814697266

Token 201: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.500000953674316
    3. ' (' → logprob: -15.625000953674316
    4. 'res' → logprob: -16.625
    5. '(result' → logprob: -17.75
    6. '(
' → logprob: -18.375
    7. '```' → logprob: -19.375
    8. '(rest' → logprob: -19.75
    9. '=res' → logprob: -19.75
    10. ',res' → logprob: -19.875

Token 202: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018982870504260063
    2. '())' → logprob: -4.018982887268066
    3. '()' → logprob: -7.143982887268066
    4. ' )' → logprob: -10.643982887268066
    5. ')
' → logprob: -11.268982887268066
    6. '))' → logprob: -12.893982887268066
    7. '()
' → logprob: -13.268982887268066
    8. '())
' → logprob: -14.018982887268066
    9. '(' → logprob: -14.393982887268066
    10. ' ())' → logprob: -15.643982887268066


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 200
Tokens correctement prédits (1ère position, stricte): 78
Tokens correctement prédits (1ère position, avec adaptation): 81
Tokens correctement prédits (top 10): 156
Précision stricte (1ère position): 39.00%
Précision adaptée (1ère position): 40.50%
Précision (top 10): 78.00%
================================================================================
