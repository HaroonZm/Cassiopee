================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from math import ceil as flying_cow

def __quirky_input__():
    for _ in "@#$%^":
        yield int(input())
N = int(input())
__CAPACITY__ = list(__quirky_input__())
__NECK__ = sorted(__CAPACITY__)[0]
def _weird_formula(x,y):
    return flying_cow(x / y) + 4
print(_weird_formula(N, __NECK__))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' ceil' (ID: 35964)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.2518087923526764
    2. ' sqrt' → logprob: -1.751808762550354
    3. 'pow' → logprob: -4.0018086433410645
    4. 'pi' → logprob: -4.7518086433410645
    5. 'sin' → logprob: -4.7518086433410645
    6. ' pi' → logprob: -5.0018086433410645
    7. 'import' → logprob: -6.3768086433410645
    8. 'ceil' → logprob: -7.0018086433410645
    9. ' sin' → logprob: -7.1268086433410645
    10. 'log' → logprob: -7.6268086433410645

Token 4: ' as' (ID: 472)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00012201975914649665
    2. '\(' → logprob: -9.3751220703125
    3. '(
' → logprob: -11.0001220703125
    4. '\' → logprob: -12.5001220703125
    5. ' (' → logprob: -12.5001220703125
    6. ',' → logprob: -12.5001220703125
    7. ' ' → logprob: -12.8751220703125
    8. 'a' → logprob: -13.5001220703125
    9. '.' → logprob: -13.6251220703125
    10. '\n' → logprob: -13.7501220703125

Token 5: ' flying' (ID: 28022)
  Prédit: 'ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -0.2658901810646057
    2. ' ceil' → logprob: -1.640890121459961
    3. 'c' → logprob: -3.765890121459961
    4. ' c' → logprob: -5.140890121459961
    5. 'cel' → logprob: -5.390890121459961
    6. 'ce' → logprob: -5.515890121459961
    7. ' ceiling' → logprob: -7.640890121459961
    8. '`' → logprob: -8.265890121459961
    9. ' math' → logprob: -8.390890121459961
    10. '_' → logprob: -8.890890121459961

Token 6: '_c' (ID: 1303)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003966078162193298
    2. ' (' → logprob: -6.003965854644775
    3. ' ' → logprob: -7.128965854644775
    4. ',' → logprob: -7.753965854644775
    5. '\(' → logprob: -9.628966331481934
    6. '_' → logprob: -9.878966331481934
    7. 'f' → logprob: -10.878966331481934
    8. '(
' → logprob: -11.003966331481934
    9. '<|end|>' → logprob: -11.003966331481934
    10. '\' → logprob: -11.253966331481934

Token 7: 'ow' (ID: 384)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.042670272290706635
    2. '(' → logprob: -4.292670249938965
    3. 'e' → logprob: -4.542670249938965
    4. 'u' → logprob: -4.792670249938965
    5. 'o' → logprob: -5.542670249938965
    6. 'a' → logprob: -6.542670249938965
    7. 'i' → logprob: -7.167670249938965
    8. 'r' → logprob: -7.917670249938965
    9. ',' → logprob: -8.292670249938965
    10. 'h' → logprob: -8.542670249938965

Token 8: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.045391201972961426
    2. '
' → logprob: -4.545391082763672
    3. '.' → logprob: -4.670391082763672
    4. ',' → logprob: -4.670391082763672
    5. ' (' → logprob: -5.670391082763672
    6. '\(' → logprob: -6.420391082763672
    7. '\' → logprob: -6.670391082763672
    8. '(
' → logprob: -6.670391082763672
    9. '<|end|>' → logprob: -6.920391082763672
    10. ' ' → logprob: -6.920391082763672

Token 9: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0023487689904868603
    2. '\(' → logprob: -6.502348899841309
    3. ',' → logprob: -8.002348899841309
    4. '\' → logprob: -8.627348899841309
    5. '#' → logprob: -9.752348899841309
    6. ' (' → logprob: -10.002348899841309
    7. '\n' → logprob: -10.127348899841309
    8. '.' → logprob: -10.252348899841309
    9. ')' → logprob: -10.377348899841309
    10. '*' → logprob: -11.127348899841309

Token 10: ' __' (ID: 2516)
  Prédit: ' flying'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' flying' → logprob: -0.1724853664636612
    2. ' ' → logprob: -2.5474853515625
    3. ' calculate' → logprob: -2.9224853515625
    4. ' f' → logprob: -4.9224853515625
    5. '_' → logprob: -5.1724853515625
    6. ' ceil' → logprob: -6.2974853515625
    7. ' space' → logprob: -6.4224853515625
    8. ' fly' → logprob: -6.5474853515625
    9. ' my' → logprob: -6.6724853515625
    10. ' factorial' → logprob: -7.0474853515625

Token 11: 'quir' (ID: 12417)
  Prédit: 'ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -0.03929227963089943
    2. 'init' → logprob: -3.414292335510254
    3. 'floor' → logprob: -5.789292335510254
    4. 'pow' → logprob: -6.789292335510254
    5. 'flo' → logprob: -8.414292335510254
    6. 'f' → logprob: -8.664292335510254
    7. 'def' → logprob: -8.914292335510254
    8. 'call' → logprob: -9.164292335510254
    9. 'factor' → logprob: -9.164292335510254
    10. ' ceil' → logprob: -9.414292335510254

Token 12: 'ky' (ID: 5781)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3385092616081238
    2. 'ky' → logprob: -1.4635093212127686
    3. 'ks' → logprob: -3.3385093212127686
    4. '__' → logprob: -4.0885090827941895
    5. '```' → logprob: -7.4635090827941895
    6. 'kw' → logprob: -7.5885090827941895
    7. '_k' → logprob: -8.651009559631348
    8. 'ir' → logprob: -8.901009559631348
    9. '_' → logprob: -9.088509559631348
    10. 'kx' → logprob: -9.151009559631348

Token 13: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1547067165374756
    2. '_function' → logprob: -1.2797067165374756
    3. '_f' → logprob: -2.0297067165374756
    4. '__' → logprob: -2.1547067165374756
    5. '_def' → logprob: -4.029706954956055
    6. '_func' → logprob: -4.279706954956055
    7. '_fun' → logprob: -4.529706954956055
    8. '_p' → logprob: -4.654706954956055
    9. '_factor' → logprob: -4.904706954956055
    10. '_m' → logprob: -5.029706954956055

Token 14: '__' (ID: 771)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05793869122862816
    2. '(prompt' → logprob: -3.932938575744629
    3. '_' → logprob: -4.057938575744629
    4. '_line' → logprob: -5.807938575744629
    5. '(_' → logprob: -5.932938575744629
    6. '_string' → logprob: -7.182938575744629
    7. '():' → logprob: -7.307938575744629
    8. '(s' → logprob: -7.307938575744629
    9. '(f' → logprob: -7.432938575744629
    10. '_input' → logprob: -7.557938575744629

Token 15: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3522576689720154
    2. '():' → logprob: -1.2272577285766602
    3. '(prompt' → logprob: -6.10225772857666
    4. '_' → logprob: -8.22725772857666
    5. ' ():' → logprob: -8.35225772857666
    6. ' (' → logprob: -8.97725772857666
    7. ':' → logprob: -9.22725772857666
    8. '):' → logprob: -9.35225772857666
    9. '(input' → logprob: -9.72725772857666
    10. '(:' → logprob: -9.72725772857666

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6497622132301331
    2. '(' → logprob: -0.8997622132301331
    3. 'return' → logprob: -3.5247621536254883
    4. '()' → logprob: -4.274762153625488
    5. ' return' → logprob: -4.649762153625488
    6. 'input' → logprob: -5.024762153625488
    7. '():' → logprob: -6.024762153625488
    8. ' ' → logprob: -6.524762153625488
    9. ' (' → logprob: -7.274762153625488
    10. '```' → logprob: -7.274762153625488

Token 17: ' for' (ID: 395)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.057511791586875916
    2. 'input' → logprob: -3.682511806488037
    3. ' return' → logprob: -4.182511806488037
    4. '   ' → logprob: -4.557511806488037
    5. 'user' → logprob: -7.057511806488037
    6. 'x' → logprob: -7.307511806488037
    7. 'try' → logprob: -7.432511806488037
    8. 'ret' → logprob: -8.182511329650879
    9. ' input' → logprob: -8.307511329650879
    10. 'r' → logprob: -8.432511329650879

Token 18: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.6190820932388306
    2. ' ' → logprob: -1.2440820932388306
    3. ' line' → logprob: -2.369081974029541
    4. '_' → logprob: -2.994081974029541
    5. ' i' → logprob: -3.869081974029541
    6. ' item' → logprob: -5.994081974029541
    7. ' word' → logprob: -6.994081974029541
    8. '  ' → logprob: -7.119081974029541
    9. ' char' → logprob: -7.244081974029541
    10. ' token' → logprob: -7.619081974029541

Token 19: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0037466296926140785
    2. 'in' → logprob: -5.628746509552002
    3. ' ' → logprob: -9.00374698638916
    4. '  ' → logprob: -11.62874698638916
    5. '_' → logprob: -12.25374698638916
    6. ',' → logprob: -13.12874698638916
    7. 'import' → logprob: -13.37874698638916
    8. ' _' → logprob: -13.62874698638916
    9. 'range' → logprob: -13.87874698638916
    10. '    ' → logprob: -14.12874698638916

Token 20: ' "@' (ID: 14278)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3894999921321869
    2. 'range' → logprob: -1.1395000219345093
    3. ' iter' → logprob: -7.264500141143799
    4. 'iter' → logprob: -7.389500141143799
    5. 'input' → logprob: -7.889500141143799
    6. '[' → logprob: -8.38949966430664
    7. ' input' → logprob: -8.51449966430664
    8. '__' → logprob: -8.63949966430664
    9. ' ' → logprob: -10.26449966430664
    10. ' flying' → logprob: -10.51449966430664

Token 21: '#$' (ID: 108156)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.9640501737594604
    2. '":' → logprob: -1.0890501737594604
    3. 'input' → logprob: -2.33905029296875
    4. '_' → logprob: -3.08905029296875
    5. 'import' → logprob: -3.83905029296875
    6. '"' → logprob: -4.21405029296875
    7. '@@' → logprob: -4.21405029296875
    8. '__' → logprob: -4.71405029296875
    9. '@"' → logprob: -5.58905029296875
    10. '".' → logprob: -5.90155029296875

Token 22: '%^' (ID: 108254)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -1.0385361909866333
    2. '!' → logprob: -1.7885361909866333
    3. '_' → logprob: -2.6635360717773438
    4. '$' → logprob: -2.7885360717773438
    5. '%' → logprob: -3.0385360717773438
    6. '{' → logprob: -3.1635360717773438
    7. '@' → logprob: -3.2885360717773438
    8. '#' → logprob: -3.7885360717773438
    9. '%^' → logprob: -3.8510360717773438
    10. '~' → logprob: -4.351036071777344

Token 23: '":
' (ID: 9213)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.9884672164916992
    2. '":' → logprob: -1.1134672164916992
    3. '@' → logprob: -2.613467216491699
    4. '*' → logprob: -2.613467216491699
    5. '_' → logprob: -2.863467216491699
    6. '$' → logprob: -3.988467216491699
    7. '^' → logprob: -4.488467216491699
    8. '#' → logprob: -4.488467216491699
    9. '!' → logprob: -5.113467216491699
    10. '~' → logprob: -5.363467216491699

Token 24: '       ' (ID: 309)
  Prédit: ' yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' yield' → logprob: -0.836515486240387
    2. '   ' → logprob: -1.5865154266357422
    3. 'yield' → logprob: -1.9615154266357422
    4. '    ' → logprob: -1.9615154266357422
    5. '       ' → logprob: -3.086515426635742
    6. ' ' → logprob: -3.711515426635742
    7. '  ' → logprob: -5.836515426635742
    8. '	yield' → logprob: -6.336515426635742
    9. '<|end|>' → logprob: -7.211515426635742
    10. '        ' → logprob: -7.211515426635742

Token 25: ' yield' (ID: 14376)
  Prédit: ' yield'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' yield' → logprob: -0.0749877542257309
    2. 'yield' (adapté à ' yield') → logprob: -2.9499876499176025
    3. ' pass' → logprob: -4.699987888336182
    4. '   ' → logprob: -5.699987888336182
    5. '    ' → logprob: -6.074987888336182
    6. '       ' → logprob: -6.824987888336182
    7. ' input' → logprob: -6.824987888336182
    8. 'pass' → logprob: -7.324987888336182
    9. ' try' → logprob: -7.824987888336182
    10. ' _' → logprob: -8.074987411499023

Token 26: ' int' (ID: 677)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.7690371870994568
    2. 'input' → logprob: -0.8940371870994568
    3. ''' → logprob: -3.2690372467041016
    4. ' ' → logprob: -3.6440372467041016
    5. '"' → logprob: -4.019037246704102
    6. ' '' → logprob: -4.394037246704102
    7. ' "' → logprob: -4.894037246704102
    8. ' ''' → logprob: -5.019037246704102
    9. '""' → logprob: -5.644037246704102
    10. '<|end|>' → logprob: -5.769037246704102

Token 27: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.07026229798793793
    2. '(' → logprob: -2.6952621936798096
    3. 'input' → logprob: -8.69526195526123
    4. '(
' → logprob: -10.32026195526123
    5. '(f' → logprob: -10.44526195526123
    6. '()' → logprob: -10.57026195526123
    7. '(open' → logprob: -10.94526195526123
    8. '('' → logprob: -11.57026195526123
    9. '((' → logprob: -11.69526195526123
    10. '(in' → logprob: -12.32026195526123

Token 28: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6220187544822693
    2. '()' → logprob: -1.372018814086914
    3. '())' → logprob: -2.122018814086914
    4. '("("' → logprob: -3.372018814086914
    5. '()))' → logprob: -3.747018814086914
    6. '('' → logprob: -4.122018814086914
    7. '("' → logprob: -4.622018814086914
    8. '(()' → logprob: -6.372018814086914
    9. '(""))' → logprob: -6.997018814086914
    10. '().' → logprob: -7.122018814086914

Token 29: 'N' (ID: 45)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.6050695180892944
    2. 'def' → logprob: -1.6050695180892944
    3. '\n' → logprob: -1.9800695180892944
    4. '_' → logprob: -2.105069637298584
    5. ')' → logprob: -2.105069637298584
    6. '
' → logprob: -2.605069637298584
    7. '\' → logprob: -3.480069637298584
    8. '(
' → logprob: -4.605069637298584
    9. 'newline' → logprob: -4.605069637298584
    10. '  
' → logprob: -4.730069637298584

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13983607292175293
    2. '=' → logprob: -2.264836072921753
    3. ',' → logprob: -3.639836072921753
    4. ' ,' → logprob: -8.514836311340332
    5. ' ' → logprob: -9.389836311340332
    6. '(' → logprob: -10.264836311340332
    7. '_' → logprob: -10.764836311340332
    8. '  ' → logprob: -11.139836311340332
    9. ')' → logprob: -11.514836311340332
    10. 's' → logprob: -12.139836311340332

Token 31: ' int' (ID: 677)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.3184892237186432
    2. 'next' → logprob: -1.3184891939163208
    3. '(next' → logprob: -5.443489074707031
    4. 'f' → logprob: -7.443489074707031
    5. ' flying' → logprob: -8.943489074707031
    6. ' f' → logprob: -9.443489074707031
    7. '(f' → logprob: -10.818489074707031
    8. '[next' → logprob: -11.068489074707031
    9. ' (' → logprob: -11.568489074707031
    10. '__' → logprob: -11.818489074707031

Token 32: '(input' (ID: 10054)
  Prédit: '(next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.1402875930070877
    2. '(' → logprob: -2.8902876377105713
    3. '(f' → logprob: -3.3902876377105713
    4. '(input' → logprob: -3.5152876377105713
    5. '()' → logprob: -5.265287399291992
    6. '(__' → logprob: -5.265287399291992
    7. '((' → logprob: -7.515287399291992
    8. 'next' → logprob: -7.640287399291992
    9. 'input' → logprob: -9.265287399291992
    10. '().__' → logprob: -9.265287399291992

Token 33: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0068624247796833515
    2. '()' → logprob: -5.006862640380859
    3. ')' → logprob: -9.38186264038086
    4. '(' → logprob: -10.38186264038086
    5. '()))' → logprob: -11.38186264038086
    6. '())
' → logprob: -11.75686264038086
    7. ' ())' → logprob: -12.38186264038086
    8. '().' → logprob: -12.88186264038086
    9. '();)' → logprob: -13.38186264038086
    10. '()
' → logprob: -14.25686264038086

Token 34: '__' (ID: 771)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8091300129890442
    2. '(' → logprob: -1.9341299533843994
    3. '\' → logprob: -1.9341299533843994
    4. '
' → logprob: -3.1841299533843994
    5. ')' → logprob: -3.3091299533843994
    6. '*' → logprob: -3.5591299533843994
    7. '' → logprob: -3.6841299533843994
    8. '```' → logprob: -3.6841299533843994
    9. '[' → logprob: -3.8091299533843994
    10. '#' → logprob: -4.9341301918029785

Token 35: 'CAP' (ID: 56928)
  Prédit: 'quir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'quir' → logprob: -8.041768160182983e-05
    2. 'next' → logprob: -10.625080108642578
    3. 'iter' → logprob: -10.875080108642578
    4. 'quis' → logprob: -12.125080108642578
    5. 'input' → logprob: -12.250080108642578
    6. 'f' → logprob: -12.875080108642578
    7. 'quip' → logprob: -13.000080108642578
    8. 'QUI' → logprob: -13.125080108642578
    9. 'qu' → logprob: -13.250080108642578
    10. 'quiz' → logprob: -13.250080108642578

Token 36: 'ACITY' (ID: 131513)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.4828798770904541
    2. 'ITAL' → logprob: -1.107879877090454
    3. 'TION' → logprob: -3.982879877090454
    4. 'TCHA' → logprob: -4.107879638671875
    5. '__' → logprob: -4.982879638671875
    6. 'ACITY' → logprob: -5.607879638671875
    7. 'TURE' → logprob: -5.982879638671875
    8. 'T' → logprob: -6.857879638671875
    9. 'ITA' → logprob: -7.232879638671875
    10. '_' → logprob: -7.482879638671875

Token 37: '__' (ID: 771)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09892792999744415
    2. '=' → logprob: -3.4739279747009277
    3. '_' → logprob: -3.4739279747009277
    4. '__' → logprob: -4.348927974700928
    5. '_PER' → logprob: -4.473927974700928
    6. 'S' → logprob: -5.723927974700928
    7. '_CAP' → logprob: -7.473927974700928
    8. '_SPACE' → logprob: -7.473927974700928
    9. ' ' → logprob: -7.848927974700928
    10. '_MULT' → logprob: -7.848927974700928

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05680881068110466
    2. '=' → logprob: -2.9318087100982666
    3. ' ' → logprob: -6.806808948516846
    4. '  ' → logprob: -9.056808471679688
    5. ' -=' → logprob: -9.181808471679688
    6. ' +=' → logprob: -9.181808471679688
    7. '_' → logprob: -9.306808471679688
    8. '   ' → logprob: -9.431808471679688
    9. ')' → logprob: -9.556808471679688
    10. ',' → logprob: -9.556808471679688

Token 39: ' list' (ID: 1562)
  Prédit: ' flying'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' flying' → logprob: -0.9370169043540955
    2. 'f' → logprob: -1.5620169639587402
    3. ' ' → logprob: -1.6870169639587402
    4. '100' → logprob: -2.6870169639587402
    5. '10' → logprob: -3.4370169639587402
    6. ' f' → logprob: -4.06201696395874
    7. 'ceil' → logprob: -4.43701696395874
    8. '50' → logprob: -4.43701696395874
    9. ' ceil' → logprob: -4.56201696395874
    10. ' N' → logprob: -4.93701696395874

Token 40: '(__' (ID: 11782)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.5182905197143555
    2. '(' → logprob: -1.6432905197143555
    3. '()' → logprob: -2.2682905197143555
    4. '(__' → logprob: -2.2682905197143555
    5. '(map' → logprob: -6.2682905197143555
    6. '().__' → logprob: -7.6432905197143555
    7. '((' → logprob: -8.393290519714355
    8. '([' → logprob: -8.518290519714355
    9. '(range' → logprob: -8.518290519714355
    10. '(next' → logprob: -8.768290519714355

Token 41: 'quir' (ID: 12417)
  Prédit: 'quir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quir' → logprob: -0.000519312743563205
    2. '__' → logprob: -7.750519275665283
    3. '_' → logprob: -9.625519752502441
    4. '_qu' → logprob: -12.250519752502441
    5. 'quip' → logprob: -12.375519752502441
    6. 'quire' → logprob: -13.125519752502441
    7. '(' → logprob: -13.625519752502441
    8. 'quiry' → logprob: -13.625519752502441
    9. 'qu' → logprob: -13.750519752502441
    10. 'qui' → logprob: -14.250519752502441

Token 42: 'ky' (ID: 5781)
  Prédit: 'ky'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ky' → logprob: -0.0006545356009155512
    2. 'y' → logprob: -7.750654697418213
    3. '__' → logprob: -9.500654220581055
    4. 'aky' → logprob: -9.750654220581055
    5. 'ks' → logprob: -10.625654220581055
    6. 'sky' → logprob: -11.000654220581055
    7. 'iky' → logprob: -11.250654220581055
    8. 'k' → logprob: -11.500654220581055
    9. 'cky' → logprob: -11.875654220581055
    10. ' quirky' → logprob: -13.375654220581055

Token 43: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0005556552205234766
    2. '__' → logprob: -7.500555515289307
    3. '_' → logprob: -14.000555992126465
    4. 'input' → logprob: -14.500555992126465
    5. '_inputs' → logprob: -14.625555992126465
    6. '_in' → logprob: -14.875555992126465
    7. '_output' → logprob: -16.62555503845215
    8. ' _' → logprob: -17.12555503845215
    9. '_INPUT' → logprob: -17.12555503845215
    10. ' __' → logprob: -17.25055503845215

Token 44: '__' (ID: 771)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.08918264508247375
    2. '()' → logprob: -3.2141826152801514
    3. '__' → logprob: -3.5891826152801514
    4. ')' → logprob: -4.0891828536987305
    5. '()))' → logprob: -8.08918285369873
    6. '().__' → logprob: -8.08918285369873
    7. '__)' → logprob: -9.71418285369873
    8. '();)' → logprob: -11.08918285369873
    9. '`()' → logprob: -11.58918285369873
    10. '|()
' → logprob: -11.71418285369873

Token 45: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0007090978906489909
    2. ')' → logprob: -7.875709056854248
    3. '()' → logprob: -8.250709533691406
    4. '())
' → logprob: -10.125709533691406
    5. ' ())' → logprob: -11.875709533691406
    6. '()))' → logprob: -12.000709533691406
    7. '())

' → logprob: -12.500709533691406
    8. '())[' → logprob: -12.500709533691406
    9. '();)' → logprob: -13.375709533691406
    10. '());' → logprob: -13.500709533691406

Token 46: '__' (ID: 771)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8138471245765686
    2. ')' → logprob: -1.5638470649719238
    3. '_' → logprob: -3.063847064971924
    4. '*' → logprob: -3.438847064971924
    5. ' 
' → logprob: -3.688847064971924
    6. ' ' → logprob: -4.063847064971924
    7. '#' → logprob: -4.063847064971924
    8. 'n' → logprob: -4.188847064971924
    9. 'f' → logprob: -4.313847064971924
    10. 's' → logprob: -4.438847064971924

Token 47: 'NE' (ID: 8553)
  Prédit: 'CAP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'CAP' → logprob: -0.00025561772054061294
    2. '_CAP' → logprob: -9.000255584716797
    3. 'capacity' → logprob: -10.375255584716797
    4. 'import' → logprob: -11.250255584716797
    5. '_capacity' → logprob: -11.875255584716797
    6. 'C' → logprob: -11.875255584716797
    7. 'MAX' → logprob: -12.125255584716797
    8. 'SIZE' → logprob: -12.687755584716797
    9. 'f' → logprob: -12.687755584716797
    10. 'len' → logprob: -12.875255584716797

Token 48: 'CK' (ID: 5905)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -1.3763201236724854
    2. 'EDS' → logprob: -2.3763201236724854
    3. 'ED' → logprob: -2.5013201236724854
    4. '__' → logprob: -2.6263201236724854
    5. 'CESS' → logprob: -3.0013201236724854
    6. 'IGH' → logprob: -3.0013201236724854
    7. 'R' → logprob: -3.1263201236724854
    8. 'RC' → logprob: -3.2513201236724854
    9. '_capacity' → logprob: -3.2513201236724854
    10. '_CAP' → logprob: -3.5013201236724854

Token 49: '__' (ID: 771)
  Prédit: '_CAP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CAP' → logprob: -0.7130587100982666
    2. '__' → logprob: -0.9630587100982666
    3. 'L' → logprob: -2.9630587100982666
    4. 'CAP' → logprob: -3.9630587100982666
    5. '_SIZE' → logprob: -4.0880584716796875
    6. 'S' → logprob: -4.8380584716796875
    7. '_LENGTH' → logprob: -5.2130584716796875
    8. '_C' → logprob: -5.4630584716796875
    9. '___' → logprob: -5.7130584716796875
    10. '_' → logprob: -5.9630584716796875

Token 50: ' =' (ID: 314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.004840214736759663
    2. 'S' → logprob: -6.00484037399292
    3. '_CAP' → logprob: -7.12984037399292
    4. '___' → logprob: -7.37984037399292
    5. '_SIZE' → logprob: -8.629839897155762
    6. '____' → logprob: -8.754839897155762
    7. 'CAP' → logprob: -9.254839897155762
    8. '_LENGTH' → logprob: -9.254839897155762
    9. 'SIZE' → logprob: -10.379839897155762
    10. '__,' → logprob: -10.379839897155762

Token 51: ' sorted' (ID: 20099)
  Prédit: ' flying'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' flying' → logprob: -1.2712386846542358
    2. ' [' → logprob: -1.3962386846542358
    3. '[f' → logprob: -1.6462386846542358
    4. '[' → logprob: -2.5212388038635254
    5. ' ceil' → logprob: -2.7712388038635254
    6. 'f' → logprob: -3.2712388038635254
    7. '[int' → logprob: -3.7712388038635254
    8. 'ceil' → logprob: -3.8962388038635254
    9. '[N' → logprob: -4.896238803863525
    10. '[]' → logprob: -4.896238803863525

Token 52: '(__' (ID: 11782)
  Prédit: '(__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(__' → logprob: -0.03936632722616196
    2. '(' → logprob: -3.2893662452697754
    3. '(
' → logprob: -7.664366245269775
    4. '((' → logprob: -7.789366245269775
    5. '__' → logprob: -9.289366722106934
    6. '(f' → logprob: -9.664366722106934
    7. '([' → logprob: -9.789366722106934
    8. '(N' → logprob: -10.289366722106934
    9. '($__' → logprob: -10.539366722106934
    10. '(list' → logprob: -10.539366722106934

Token 53: 'CAP' (ID: 56928)
  Prédit: 'CAP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CAP' → logprob: -0.2083384245634079
    2. '_CAP' → logprob: -2.083338499069214
    3. '__' → logprob: -2.833338499069214
    4. '(C' → logprob: -5.708338260650635
    5. '(__' → logprob: -7.333338260650635
    6. 'capacity' → logprob: -8.333338737487793
    7. ' CAP' → logprob: -9.583338737487793
    8. '_C' → logprob: -9.583338737487793
    9. '(cap' → logprob: -9.833338737487793
    10. '_capacity' → logprob: -9.958338737487793

Token 54: 'ACITY' (ID: 131513)
  Prédit: 'ACITY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ACITY' → logprob: -0.007918787188827991
    2. '__' → logprob: -4.882918834686279
    3. 'CITY' → logprob: -8.757918357849121
    4. 'ITY' → logprob: -9.882918357849121
    5. '_CAP' → logprob: -10.882918357849121
    6. 'CAP' → logprob: -11.132918357849121
    7. 'AC' → logprob: -11.257918357849121
    8. 'A' → logprob: -11.257918357849121
    9. '___' → logprob: -11.257918357849121
    10. '____' → logprob: -12.257918357849121

Token 55: '__' (ID: 771)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04914964735507965
    2. ',' → logprob: -3.549149751663208
    3. '))' → logprob: -4.174149513244629
    4. '())' → logprob: -6.549149513244629
    5. '(),' → logprob: -7.299149513244629
    6. '[::-' → logprob: -8.049149513244629
    7. ')[' → logprob: -8.299149513244629
    8. ',key' → logprob: -8.424149513244629
    9. '()' → logprob: -8.799149513244629
    10. '(reverse' → logprob: -8.799149513244629

Token 56: ')[' (ID: 13637)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.238728865981102
    2. ',' → logprob: -1.6137288808822632
    3. '))' → logprob: -4.863729000091553
    4. ')[' → logprob: -6.113729000091553
    5. ' ,' → logprob: -7.238729000091553
    6. 'reverse' → logprob: -7.488729000091553
    7. ')
' → logprob: -7.863729000091553
    8. '(reverse' → logprob: -8.113728523254395
    9. ',key' → logprob: -8.363728523254395
    10. '[::-' → logprob: -8.363728523254395

Token 57: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6150533556938171
    2. '-N' → logprob: -1.990053415298462
    3. ':' → logprob: -2.240053415298462
    4. 'N' → logprob: -2.490053415298462
    5. '::-' → logprob: -3.240053415298462
    6. ':]' → logprob: -3.615053415298462
    7. '0' → logprob: -4.365053176879883
    8. '1' → logprob: -4.615053176879883
    9. ':N' → logprob: -4.615053176879883
    10. '-f' → logprob: -4.990053176879883

Token 58: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05727338790893555
    2. ':]' → logprob: -3.9322733879089355
    3. '])' → logprob: -4.0572733879089355
    4. ':' → logprob: -4.1822733879089355
    5. ')' → logprob: -6.6822733879089355
    6. '],' → logprob: -7.0572733879089355
    7. ')]' → logprob: -8.307273864746094
    8. '::' → logprob: -8.557273864746094
    9. ' ]' → logprob: -8.807273864746094
    10. '-' → logprob: -8.932273864746094

Token 59: 'def' (ID: 1314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07697206735610962
    2. '*' → logprob: -3.701972007751465
    3. '%' → logprob: -4.451972007751465
    4. '+
' → logprob: -4.826972007751465
    5. ')' → logprob: -5.076972007751465
    6. '<|end|>' → logprob: -5.326972007751465
    7. '**' → logprob: -5.826972007751465
    8. '-' → logprob: -6.076972007751465
    9. '#' → logprob: -6.326972007751465
    10. '[' → logprob: -6.451972007751465

Token 60: ' _' (ID: 1175)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.5858400464057922
    2. ' calculate' → logprob: -1.8358399868011475
    3. ' flying' → logprob: -2.5858399868011475
    4. ' find' → logprob: -2.9608399868011475
    5. ' solve' → logprob: -3.9608399868011475
    6. ' capacity' → logprob: -4.585840225219727
    7. ' maximum' → logprob: -4.710840225219727
    8. ' min' → logprob: -4.835840225219727
    9. ' main' → logprob: -5.085840225219727
    10. ' ' → logprob: -5.085840225219727

Token 61: 'we' (ID: 854)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -1.8841029405593872
    2. 'max' → logprob: -2.5091028213500977
    3. 'calculate' → logprob: -3.0716028213500977
    4. 'get' → logprob: -3.1966028213500977
    5. 'f' → logprob: -3.3841028213500977
    6. 'find' → logprob: -3.5091028213500977
    7. 'neck' → logprob: -3.5091028213500977
    8. 'solve' → logprob: -3.6341028213500977
    9. 'calc' → logprob: -3.6966028213500977
    10. 'dis' → logprob: -3.9466028213500977

Token 62: 'ird' (ID: 2716)
  Prédit: 'ight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ight' → logprob: -0.4470839202404022
    2. 'ighted' → logprob: -1.6970839500427246
    3. 'ek' → logprob: -3.6970839500427246
    4. 'igh' → logprob: -3.8220839500427246
    5. 'l' → logprob: -3.9470839500427246
    6. 'ak' → logprob: -4.197083950042725
    7. 'll' → logprob: -4.447083950042725
    8. '_' → logprob: -4.697083950042725
    9. 'ighting' → logprob: -4.697083950042725
    10. 'ig' → logprob: -4.697083950042725

Token 63: '_formula' (ID: 188631)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5869474411010742
    2. '_capacity' → logprob: -2.336947441101074
    3. '(' → logprob: -2.586947441101074
    4. '__' → logprob: -2.711947441101074
    5. '(_' → logprob: -3.211947441101074
    6. '_cap' → logprob: -3.336947441101074
    7. '_f' → logprob: -4.086947441101074
    8. '_div' → logprob: -4.836947441101074
    9. '_floor' → logprob: -5.086947441101074
    10. '_sum' → logprob: -5.336947441101074

Token 64: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9734880328178406
    2. '(x' → logprob: -1.3484880924224854
    3. '(__' → logprob: -2.3484880924224854
    4. '():' → logprob: -2.9734880924224854
    5. '(N' → logprob: -3.0984880924224854
    6. '(n' → logprob: -3.0984880924224854
    7. '(cap' → logprob: -3.4734880924224854
    8. '(s' → logprob: -3.9734880924224854
    9. '(a' → logprob: -4.348487854003906
    10. '(l' → logprob: -4.598487854003906

Token 65: ',y' (ID: 16103)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007757695857435465
    2. ',' → logprob: -5.632757663726807
    3. ')' → logprob: -6.132757663726807
    4. ':' → logprob: -6.632757663726807
    5. '):
' → logprob: -8.007758140563965
    6. ' ):' → logprob: -8.507758140563965
    7. '_' → logprob: -10.632758140563965
    8. '=' → logprob: -11.007758140563965
    9. '):
' → logprob: -11.132758140563965
    10. ' :' → logprob: -11.132758140563965

Token 66: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008339279447682202
    2. ')' → logprob: -8.250833511352539
    3. ',' → logprob: -8.500833511352539
    4. ':' → logprob: -8.625833511352539
    5. ' ):' → logprob: -9.125833511352539
    6. '):
' → logprob: -9.625833511352539
    7. '   ' → logprob: -12.875833511352539
    8. '=' → logprob: -13.000833511352539
    9. '):
' → logprob: -13.375833511352539
    10. ' :' → logprob: -13.625833511352539

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027650974690914154
    2. ' return' → logprob: -3.902651071548462
    3. ':return' → logprob: -5.902650833129883
    4. ':' → logprob: -6.152650833129883
    5. 'return' → logprob: -6.777650833129883
    6. '<|end|>' → logprob: -8.152650833129883
    7. '	return' → logprob: -8.402650833129883
    8. '    
' → logprob: -9.027650833129883
    9. ' ' → logprob: -9.152650833129883
    10. '       ' → logprob: -9.902650833129883

Token 68: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6899102330207825
    2. ' return' → logprob: -0.9399102330207825
    3. 'return' (adapté à ' return') → logprob: -2.3149101734161377
    4. 'f' → logprob: -6.689910411834717
    5. '    ' → logprob: -6.814910411834717
    6. ' if' → logprob: -6.939910411834717
    7. ' f' → logprob: -7.189910411834717
    8. ' ceil' → logprob: -7.314910411834717
    9. '       ' → logprob: -7.564910411834717
    10. ' ' → logprob: -7.564910411834717

Token 69: ' flying' (ID: 28022)
  Prédit: ' flying'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flying' → logprob: -1.5134233236312866
    2. 'f' → logprob: -1.8884233236312866
    3. '(f' → logprob: -1.8884233236312866
    4. ' (' → logprob: -1.8884233236312866
    5. 'ceil' → logprob: -2.888423442840576
    6. '(x' → logprob: -2.888423442840576
    7. '-' → logprob: -3.138423442840576
    8. '(' → logprob: -3.638423442840576
    9. ' ceil' → logprob: -3.763423442840576
    10. ' ' → logprob: -4.013423442840576

Token 70: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.2948405128554441e-05
    2. '_' → logprob: -11.50001335144043
    3. '_g' → logprob: -14.12501335144043
    4. '```' → logprob: -15.62501335144043
    5. '_f' → logprob: -15.87501335144043
    6. 'g' → logprob: -15.87501335144043
    7. ' _' → logprob: -15.87501335144043
    8. '\' → logprob: -16.12501335144043
    9. '}_' → logprob: -16.25001335144043
    10. ''_' → logprob: -16.37501335144043

Token 71: 'ow' (ID: 384)
  Prédit: 'ow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ow' → logprob: -4.47757811343763e-05
    2. 'owl' → logprob: -10.125044822692871
    3. 'o' → logprob: -13.000044822692871
    4. 'w' → logprob: -14.000044822692871
    5. ' ow' → logprob: -15.625044822692871
    6. '...' → logprob: -16.250043869018555
    7. '_' → logprob: -16.375043869018555
    8. 'ows' → logprob: -16.500043869018555
    9. 'cow' → logprob: -16.500043869018555
    10. 'owels' → logprob: -16.625043869018555

Token 72: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5142686367034912
    2. '((' → logprob: -1.1392686367034912
    3. '(x' → logprob: -2.639268636703491
    4. '(max' → logprob: -4.76426887512207
    5. '(abs' → logprob: -7.38926887512207
    6. '(-' → logprob: -7.63926887512207
    7. '(((' → logprob: -7.88926887512207
    8. '(len' → logprob: -9.26426887512207
    9. '((-' → logprob: -9.26426887512207
    10. '(f' → logprob: -9.38926887512207

Token 73: ' /' (ID: 820)
  Prédit: '/y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/y' → logprob: -0.40013524889945984
    2. '/' → logprob: -1.2751352787017822
    3. ' /' → logprob: -3.2751352787017822
    4. '+y' → logprob: -5.150135040283203
    5. ',y' → logprob: -5.775135040283203
    6. ',' → logprob: -7.025135040283203
    7. '*y' → logprob: -7.150135040283203
    8. '+' → logprob: -7.400135040283203
    9. '*' → logprob: -8.275135040283203
    10. 'y' → logprob: -8.775135040283203

Token 74: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5234285593032837
    2. ' y' → logprob: -0.8984285593032837
    3. ' ' → logprob: -8.773428916931152
    4. ' (' → logprob: -9.523428916931152
    5. '(y' → logprob: -10.148428916931152
    6. '(' → logprob: -11.773428916931152
    7. '2' → logprob: -12.148428916931152
    8. '  ' → logprob: -12.523428916931152
    9. ' max' → logprob: -12.898428916931152
    10. 'max' → logprob: -13.023428916931152

Token 75: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.469590491382405e-05
    2. '))' → logprob: -10.37507438659668
    3. ')*' → logprob: -10.50007438659668
    4. ')**' → logprob: -12.37507438659668
    5. '*' → logprob: -12.87507438659668
    6. ')}' → logprob: -13.00007438659668
    7. ')+' → logprob: -13.62507438659668
    8. ')
' → logprob: -13.87507438659668
    9. ')...' → logprob: -14.00007438659668
    10. ')))' → logprob: -14.25007438659668

Token 76: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 77: ' ' (ID: 220)
  Prédit: ' flying'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flying' → logprob: -0.3938179612159729
    2. ' ' → logprob: -1.8938179016113281
    3. '1' → logprob: -2.518817901611328
    4. ' (' → logprob: -2.768817901611328
    5. ' x' → logprob: -4.768817901611328
    6. 'f' → logprob: -5.143817901611328
    7. '(' → logprob: -5.768817901611328
    8. ' y' → logprob: -5.768817901611328
    9. 'x' → logprob: -6.143817901611328
    10. '(x' → logprob: -6.393817901611328

Token 78: '4' (ID: 19)
  Prédit: ' flying'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' flying' → logprob: -0.34092631936073303
    2. 'f' → logprob: -1.7159262895584106
    3. '1' → logprob: -2.8409264087677
    4. ' ' → logprob: -4.215926170349121
    5. ' (' → logprob: -4.840926170349121
    6. '(f' → logprob: -5.090926170349121
    7. '(' → logprob: -5.090926170349121
    8. '(x' → logprob: -5.465926170349121
    9. 'x' → logprob: -5.840926170349121
    10. '2' → logprob: -6.590926170349121

Token 79: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6364111304283142
    2. '<|end|>' → logprob: -0.8864111304283142
    3. '(' → logprob: -3.386411190032959
    4. '\n' → logprob: -4.761411190032959
    5. ' ' → logprob: -5.636411190032959
    6. '*' → logprob: -6.386411190032959
    7. '(
' → logprob: -6.511411190032959
    8. ' 
' → logprob: -6.511411190032959
    9. '<|end|>' → logprob: -6.761411190032959
    10. ')' → logprob: -6.761411190032959

Token 80: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: '(_' (ID: 4963)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0036929550115019083
    2. '(f' → logprob: -6.753693103790283
    3. '(__' → logprob: -6.753693103790283
    4. '('' → logprob: -7.128693103790283
    5. '("("' → logprob: -8.128692626953125
    6. '((' → logprob: -9.378692626953125
    7. '(_' → logprob: -10.003692626953125
    8. '(`' → logprob: -10.628692626953125
    9. '(
' → logprob: -11.503692626953125
    10. '()' → logprob: -11.628692626953125

Token 82: 'we' (ID: 854)
  Prédit: '_we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_we' → logprob: -0.3869951665401459
    2. 'we' → logprob: -1.1369951963424683
    3. '_w' → logprob: -10.261995315551758
    4. '```' → logprob: -10.761995315551758
    5. '_ne' → logprob: -11.761995315551758
    6. 'weed' → logprob: -11.761995315551758
    7. 'We' → logprob: -12.011995315551758
    8. '_' → logprob: -12.261995315551758
    9. 'wee' → logprob: -12.636995315551758
    10. 'weil' → logprob: -12.886995315551758

Token 83: 'ird' (ID: 2716)
  Prédit: 'ird'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ird' → logprob: -6.182190554682165e-05
    2. '_' → logprob: -10.875061988830566
    3. 'ir' → logprob: -11.500061988830566
    4. '__' → logprob: -11.875061988830566
    5. 'ierd' → logprob: -12.250061988830566
    6. 'irds' → logprob: -13.000061988830566
    7. '```' → logprob: -13.125061988830566
    8. 'i' → logprob: -13.250061988830566
    9. '\' → logprob: -13.500061988830566
    10. '#' → logprob: -13.875061988830566

Token 84: '_formula' (ID: 188631)
  Prédit: '_formula'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_formula' → logprob: -0.00041637211688794196
    2. '_form' → logprob: -8.12541675567627
    3. '_' → logprob: -9.37541675567627
    4. '_format' → logprob: -10.62541675567627
    5. '_f' → logprob: -12.00041675567627
    6. ' _' → logprob: -14.00041675567627
    7. '_for' → logprob: -14.25041675567627
    8. '_function' → logprob: -14.37541675567627
    9. ')_' → logprob: -14.75041675567627
    10. '_factor' → logprob: -14.87541675567627

Token 85: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.36515817046165466
    2. '(N' → logprob: -1.240158200263977
    3. '(__' → logprob: -4.2401580810546875
    4. ')(__' → logprob: -6.8651580810546875
    5. ')(' → logprob: -7.4901580810546875
    6. ')' → logprob: -7.8651580810546875
    7. '(
' → logprob: -9.990158081054688
    8. '(len' → logprob: -10.490158081054688
    9. '((' → logprob: -10.990158081054688
    10. ' (' → logprob: -11.490158081054688

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1073397845029831
    2. ',__' → logprob: -2.607339859008789
    3. ' ,' → logprob: -3.607339859008789
    4. '__' → logprob: -8.357339859008789
    5. ' __' → logprob: -8.357339859008789
    6. ',f' → logprob: -9.232339859008789
    7. '-' → logprob: -9.857339859008789
    8. ',
' → logprob: -10.232339859008789
    9. ')' → logprob: -10.357339859008789
    10. ',N' → logprob: -10.482339859008789

Token 87: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1278318464756012
    2. ' __' → logprob: -2.1278319358825684
    3. 'max' → logprob: -7.752831935882568
    4. ' max' → logprob: -8.00283145904541
    5. ' min' → logprob: -10.12783145904541
    6. 'min' → logprob: -10.12783145904541
    7. ' ' → logprob: -10.75283145904541
    8. 'len' → logprob: -12.00283145904541
    9. '___' → logprob: -12.12783145904541
    10. '10' → logprob: -13.00283145904541

Token 88: 'NE' (ID: 8553)
  Prédit: 'NE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NE' → logprob: -0.4365747570991516
    2. '_NE' → logprob: -1.0615746974945068
    3. '_CAP' → logprob: -5.436574935913086
    4. '__' → logprob: -6.436574935913086
    5. '_N' → logprob: -7.436574935913086
    6. '_ne' → logprob: -7.686574935913086
    7. 'CAP' → logprob: -8.186574935913086
    8. ' NE' → logprob: -8.186574935913086
    9. '_' → logprob: -8.936574935913086
    10. '_C' → logprob: -10.936574935913086

Token 89: 'CK' (ID: 5905)
  Prédit: 'CK'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CK' → logprob: -0.002760533709079027
    2. '__' → logprob: -6.127760410308838
    3. 'C' → logprob: -7.627760410308838
    4. '_C' → logprob: -9.627760887145996
    5. '___' → logprob: -11.752760887145996
    6. '_' → logprob: -12.627760887145996
    7. '_ck' → logprob: -12.752760887145996
    8. 'ck' → logprob: -13.002760887145996
    9. '____' → logprob: -13.627760887145996
    10. ' CK' → logprob: -13.752760887145996

Token 90: '__))' (ID: 168554)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.016184048727154732
    2. ')' → logprob: -4.141183853149414
    3. ' ))' → logprob: -9.641183853149414
    4. '),' → logprob: -10.766183853149414
    5. ')))' → logprob: -11.016183853149414
    6. '))
' → logprob: -11.266183853149414
    7. ' )' → logprob: -11.391183853149414
    8. '+' → logprob: -12.516183853149414
    9. ')>' → logprob: -13.141183853149414
    10. ')
' → logprob: -13.141183853149414


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 88
Tokens correctement prédits (1ère position, stricte): 24
Tokens correctement prédits (1ère position, avec adaptation): 24
Tokens correctement prédits (top 10): 48
Précision stricte (1ère position): 27.27%
Précision adaptée (1ère position): 27.27%
Précision (top 10): 54.55%
================================================================================
