================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin

h, w = map(int, stdin.readline().split())
a = [stdin.readline().rstrip() for _ in range(h)]

rows_with_hash = [any(char == '#' for char in row) for row in a]
cols_with_hash = [any(row[j] == '#' for row in a) for j in range(w)]

filtered_rows = (
    ''.join(a[i][j] for j, keep_col in enumerate(cols_with_hash) if keep_col)
    for i, keep_row in enumerate(rows_with_hash) if keep_row
)

print('\n'.join(filtered_rows))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.05142802372574806
    2. ' argv' → logprob: -3.4264280796051025
    3. 'exit' → logprob: -4.176427841186523
    4. ' exit' → logprob: -6.801427841186523
    5. 'stdout' → logprob: -7.301427841186523
    6. 'stdin' → logprob: -8.426427841186523
    7. 'path' → logprob: -8.801427841186523
    8. 'import' → logprob: -10.176427841186523
    9. 'stderr' → logprob: -10.426427841186523
    10. 'version' → logprob: -10.676427841186523

Token 4: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.09106673300266266
    2. '\n' → logprob: -2.841066837310791
    3. '.readline' → logprob: -3.841066837310791
    4. '\' → logprob: -6.341066837310791
    5. 'newline' → logprob: -6.716066837310791
    6. '
' → logprob: -6.966066837310791
    7. '.read' → logprob: -7.341066837310791
    8. 'for' → logprob: -7.591066837310791
    9. 'import' → logprob: -7.591066837310791
    10. '' → logprob: -7.841066837310791

Token 5: 'h' (ID: 71)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0316447988152504
    2. '.readline' → logprob: -3.781644821166992
    3. '.read' → logprob: -6.031644821166992
    4. '\n' → logprob: -6.781644821166992
    5. 'for' → logprob: -6.781644821166992
    6. 'print' → logprob: -7.156644821166992
    7. 'import' → logprob: -7.406644821166992
    8. ',' → logprob: -7.531644821166992
    9. '
' → logprob: -7.781644821166992
    10. '```' → logprob: -8.156644821166992

Token 6: ',' (ID: 11)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.04070829227566719
    2. 'a' → logprob: -3.915708303451538
    3. 'i' → logprob: -4.665708065032959
    4. '=' → logprob: -5.540708065032959
    5. ' =' → logprob: -5.665708065032959
    6. 'elp' → logprob: -7.290708065032959
    7. 't' → logprob: -8.040708541870117
    8. 'ex' → logprob: -8.415708541870117
    9. 'ello' → logprob: -8.540708541870117
    10. '   ' → logprob: -8.790708541870117

Token 7: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.16080334782600403
    2. ' w' → logprob: -1.9108033180236816
    3. 'm' → logprob: -7.535803318023682
    4. 't' → logprob: -11.28580379486084
    5. ' m' → logprob: -11.28580379486084
    6. ' ' → logprob: -12.28580379486084
    7. ' t' → logprob: -12.53580379486084
    8. 'd' → logprob: -12.53580379486084
    9. 'a' → logprob: -13.53580379486084
    10. ' =' → logprob: -13.66080379486084

Token 8: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4146323502063751
    2. ' =' → logprob: -1.2896323204040527
    3. ',' → logprob: -2.7896323204040527
    4. ' ' → logprob: -6.914632320404053
    5. ' ,' → logprob: -7.039632320404053
    6. ')' → logprob: -7.789632320404053
    7. '<|end|>' → logprob: -8.914632797241211
    8. '[' → logprob: -9.914632797241211
    9. ' =
' → logprob: -10.539632797241211
    10. '  ' → logprob: -10.914632797241211

Token 9: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.029843047261238098
    2. 'map' → logprob: -3.5298430919647217
    3. ' list' → logprob: -10.1548433303833
    4. ' stdin' → logprob: -10.1548433303833
    5. 'stdin' → logprob: -12.2798433303833
    6. 'list' → logprob: -12.4048433303833
    7. ' [' → logprob: -12.7798433303833
    8. ' ' → logprob: -13.5298433303833
    9. '[' → logprob: -13.7798433303833
    10. '	map' → logprob: -15.1548433303833

Token 10: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.29040899872779846
    2. '(int' → logprob: -1.665408968925476
    3. '(lambda' → logprob: -3.4154090881347656
    4. '(str' → logprob: -3.6654090881347656
    5. '(stdin' → logprob: -5.915409088134766
    6. '(input' → logprob: -7.665409088134766
    7. '<|end|>' → logprob: -7.915409088134766
    8. '()' → logprob: -9.040409088134766
    9. ' (' → logprob: -9.165409088134766
    10. 'int' → logprob: -9.290409088134766

Token 11: ',' (ID: 11)
  Prédit: '(stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.008777771145105362
    2. ')' → logprob: -5.508777618408203
    3. ',' → logprob: -6.258777618408203
    4. '(' → logprob: -6.633777618408203
    5. 'stdin' → logprob: -7.008777618408203
    6. '(input' → logprob: -7.883777618408203
    7. '(st' → logprob: -9.508777618408203
    8. '(std' → logprob: -10.883777618408203
    9. ' stdin' → logprob: -11.383777618408203
    10. '(str' → logprob: -11.633777618408203

Token 12: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.16101962327957153
    2. ' stdin' → logprob: -1.9110195636749268
    3. '(stdin' → logprob: -7.161019802093506
    4. 'input' → logprob: -11.786019325256348
    5. '.stdin' → logprob: -12.161019325256348
    6. ')' → logprob: -12.161019325256348
    7. 'std' → logprob: -15.661019325256348
    8. 'stdout' → logprob: -15.786019325256348
    9. ' input' → logprob: -15.911019325256348
    10. 'str' → logprob: -16.161020278930664

Token 13: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0009380202973261476
    2. '.read' → logprob: -7.0009379386901855
    3. '.' → logprob: -11.000938415527344
    4. '.readlines' → logprob: -11.750938415527344
    5. ').' → logprob: -13.500938415527344
    6. ' .' → logprob: -16.000938415527344
    7. 'read' → logprob: -16.250938415527344
    8. '.Read' → logprob: -16.875938415527344
    9. '().' → logprob: -17.125938415527344
    10. ')' → logprob: -17.250938415527344

Token 14: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07332514971494675
    2. '()' → logprob: -2.9483251571655273
    3. '().' → logprob: -4.073325157165527
    4. '()))' → logprob: -7.073325157165527
    5. ')' → logprob: -8.573325157165527
    6. '()[' → logprob: -9.823325157165527
    7. '();)' → logprob: -9.948325157165527
    8. '());' → logprob: -10.323325157165527
    9. ' ())' → logprob: -11.448325157165527
    10. '(' → logprob: -11.698325157165527

Token 15: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.10637542605400085
    2. 'split' → logprob: -2.3563754558563232
    3. 'rstrip' → logprob: -5.106375217437744
    4. 'read' → logprob: -9.731375694274902
    5. ')' → logprob: -10.606375694274902
    6. ' strip' → logprob: -12.606375694274902
    7. '```' → logprob: -13.981375694274902
    8. '())' → logprob: -13.981375694274902
    9. 'decode' → logprob: -14.481375694274902
    10. 'replace' → logprob: -14.481375694274902

Token 16: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3268674910068512
    2. ')' → logprob: -1.3268674612045288
    3. '()' → logprob: -4.451867580413818
    4. '))' → logprob: -6.701867580413818
    5. '()))' → logprob: -7.451867580413818
    6. '(' → logprob: -11.32686710357666
    7. ' ())' → logprob: -11.70186710357666
    8. '`)' → logprob: -12.32686710357666
    9. '())
' → logprob: -12.45186710357666
    10. '();)' → logprob: -12.95186710357666

Token 17: 'a' (ID: 64)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.8729519844055176
    2. 'matrix' → logprob: -0.9979519844055176
    3. 'for' → logprob: -2.7479519844055176
    4. 'a' → logprob: -2.9979519844055176
    5. 'field' → logprob: -3.9979519844055176
    6. '\n' → logprob: -4.247951984405518
    7. 'm' → logprob: -4.372951984405518
    8. 'data' → logprob: -5.247951984405518
    9. '```' → logprob: -5.372951984405518
    10. '`' → logprob: -5.747951984405518

Token 18: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04130144417285919
    2. '[h' → logprob: -3.7913014888763428
    3. '[i' → logprob: -5.541301250457764
    4. '[]' → logprob: -5.916301250457764
    5. '[][]' → logprob: -6.041301250457764
    6. ' =' → logprob: -6.666301250457764
    7. '_' → logprob: -6.666301250457764
    8. ' ' → logprob: -6.791301250457764
    9. '=' → logprob: -6.916301250457764
    10. '[a' → logprob: -7.541301250457764

Token 19: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.2553149461746216
    2. '[' → logprob: -1.3803149461746216
    3. '[]' → logprob: -1.5053149461746216
    4. ' []' → logprob: -1.6303149461746216
    5. '[int' → logprob: -3.880314826965332
    6. '[list' → logprob: -4.005314826965332
    7. '[h' → logprob: -6.130314826965332
    8. '[len' → logprob: -7.005314826965332
    9. '[input' → logprob: -7.255314826965332
    10. 'list' → logprob: -7.380314826965332

Token 20: 'stdin' (ID: 132953)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00012415809032972902
    2. 'map' → logprob: -9.125123977661133
    3. '[]' → logprob: -12.000123977661133
    4. 'tuple' → logprob: -12.125123977661133
    5. ' list' → logprob: -13.125123977661133
    6. '[' → logprob: -14.625123977661133
    7. ']' → logprob: -14.625123977661133
    8. 'stdin' → logprob: -14.875123977661133
    9. '[list' → logprob: -15.625123977661133
    10. '0' → logprob: -16.375123977661133

Token 21: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -5.200166469876422e-06
    2. '.' → logprob: -12.500004768371582
    3. '().' → logprob: -14.000004768371582
    4. '.readlines' → logprob: -14.625004768371582
    5. '.randint' → logprob: -16.5000057220459
    6. '.read' → logprob: -16.7500057220459
    7. ' readline' → logprob: -17.5000057220459
    8. '].' → logprob: -18.5000057220459
    9. ')' → logprob: -19.7500057220459
    10. '.rstrip' → logprob: -19.7500057220459

Token 22: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.026684921234846115
    2. '()' → logprob: -3.7766849994659424
    3. '())' → logprob: -6.151684761047363
    4. '()]' → logprob: -6.651684761047363
    5. '()].' → logprob: -12.526684761047363
    6. '(' → logprob: -13.151684761047363
    7. ')' → logprob: -13.776684761047363
    8. '()).' → logprob: -13.776684761047363
    9. ' ()' → logprob: -13.901684761047363
    10. ' ().' → logprob: -14.026684761047363

Token 23: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.680278480052948
    2. 'rstrip' → logprob: -1.1802785396575928
    3. 'split' → logprob: -1.6802785396575928
    4. 'rs' → logprob: -11.805278778076172
    5. 'read' → logprob: -14.305278778076172
    6. ' split' → logprob: -15.305278778076172
    7. ' strip' → logprob: -15.805278778076172
    8. 'decode' → logprob: -16.430278778076172
    9. '```' → logprob: -16.555278778076172
    10. 'str' → logprob: -16.930278778076172

Token 24: '()' (ID: 416)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6888450384140015
    2. '()' → logprob: -0.8138450384140015
    3. '()]' → logprob: -3.313845157623291
    4. '().' → logprob: -4.813845157623291
    5. ')' → logprob: -4.813845157623291
    6. '()\' → logprob: -7.063845157623291
    7. '()).' → logprob: -7.813845157623291
    8. '')' → logprob: -8.938844680786133
    9. '('\' → logprob: -9.063844680786133
    10. '()),' → logprob: -9.313844680786133

Token 25: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20542652904987335
    2. ')' → logprob: -1.705426573753357
    3. 'for' → logprob: -6.2054266929626465
    4. ' for' → logprob: -7.0804266929626465
    5. '())' → logprob: -7.0804266929626465
    6. '()]' → logprob: -8.830426216125488
    7. ']' → logprob: -10.080426216125488
    8. ' ' → logprob: -10.080426216125488
    9. ')]' → logprob: -10.080426216125488
    10. '(' → logprob: -11.830426216125488

Token 26: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.7947017550468445
    2. ' _' → logprob: -1.2947018146514893
    3. '_' → logprob: -1.4197018146514893
    4. ' ' → logprob: -3.6697018146514893
    5. ' i' → logprob: -5.16970157623291
    6. 'range' → logprob: -7.16970157623291
    7. '_range' → logprob: -7.66970157623291
    8. '(range' → logprob: -10.04470157623291
    9. ' xrange' → logprob: -11.16970157623291
    10. '	range' → logprob: -11.54470157623291

Token 27: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.8383788466453552
    2. 'range' → logprob: -1.21337890625
    3. ' in' → logprob: -1.33837890625
    4. ' range' → logprob: -4.83837890625
    5. '(range' → logprob: -10.08837890625
    6. 'n' → logprob: -10.33837890625
    7. '(' → logprob: -10.46337890625
    8. ' ' → logprob: -10.83837890625
    9. 'ange' → logprob: -10.83837890625
    10. ' xrange' → logprob: -11.71337890625

Token 28: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0013279760023579001
    2. ' range' → logprob: -6.626327991485596
    3. '(range' → logprob: -14.001327514648438
    4. '	range' → logprob: -14.001327514648438
    5. 'a' → logprob: -16.501327514648438
    6. '[' → logprob: -16.751327514648438
    7. ')' → logprob: -16.751327514648438
    8. '```' → logprob: -17.126327514648438
    9. 'ran' → logprob: -17.251327514648438
    10. '_range' → logprob: -17.376327514648438

Token 29: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0011729635298252106
    2. '(' → logprob: -6.75117301940918
    3. '(n' → logprob: -13.62617301940918
    4. '(w' → logprob: -14.62617301940918
    5. '(
' → logprob: -14.75117301940918
    6. 'h' → logprob: -15.00117301940918
    7. '(s' → logprob: -16.50117301940918
    8. ' (' → logprob: -16.75117301940918
    9. '(a' → logprob: -17.12617301940918
    10. ')' → logprob: -17.62617301940918

Token 30: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00036156410351395607
    2. ')' → logprob: -8.250361442565918
    3. ']' → logprob: -9.250361442565918
    4. ')])' → logprob: -13.625361442565918
    5. '])]' → logprob: -13.875361442565918
    6. ' )' → logprob: -14.125361442565918
    7. '')]' → logprob: -14.750361442565918
    8. ')],' → logprob: -15.250361442565918
    9. '])' → logprob: -15.875361442565918
    10. '))' → logprob: -15.875361442565918

Token 31: 'rows' (ID: 2668)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47445374727249146
    2. 'b' → logprob: -1.4744536876678467
    3. 'r' → logprob: -3.3494536876678467
    4. 'f' → logprob: -3.5994536876678467
    5. '#' → logprob: -3.7244536876678467
    6. 'm' → logprob: -4.099453926086426
    7. 'n' → logprob: -4.974453926086426
    8. 'x' → logprob: -4.974453926086426
    9. 's' → logprob: -5.349453926086426
    10. 'p' → logprob: -5.474453926086426

Token 32: '_with' (ID: 14161)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07603465020656586
    2. '_to' → logprob: -3.4510345458984375
    3. ' =' → logprob: -3.9510345458984375
    4. '_count' → logprob: -4.8260345458984375
    5. '_sum' → logprob: -5.5760345458984375
    6. '_with' → logprob: -6.4510345458984375
    7. '=' → logprob: -6.7010345458984375
    8. '_counts' → logprob: -6.9510345458984375
    9. '_s' → logprob: -7.0760345458984375
    10. '_used' → logprob: -7.0760345458984375

Token 33: '_hash' (ID: 20844)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10166340321302414
    2. '_hash' → logprob: -2.60166335105896
    3. '_a' → logprob: -5.476663589477539
    4. ''' → logprob: -5.851663589477539
    5. ''#' → logprob: -6.101663589477539
    6. 'hash' → logprob: -6.476663589477539
    7. ''_' → logprob: -6.476663589477539
    8. '_h' → logprob: -6.976663589477539
    9. '_spaces' → logprob: -6.976663589477539
    10. '_rows' → logprob: -7.101663589477539

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3980129361152649
    2. '=' → logprob: -1.1480128765106201
    3. '_' → logprob: -4.523013114929199
    4. 's' → logprob: -9.1480131149292
    5. ' ' → logprob: -10.3980131149292
    6. '=[]' → logprob: -10.5230131149292
    7. '_=' → logprob: -11.0230131149292
    8. ',' → logprob: -11.2730131149292
    9. '_space' → logprob: -12.3980131149292
    10. '[' → logprob: -12.8980131149292

Token 35: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4655855894088745
    2. '{' → logprob: -1.8405855894088745
    3. '[]' → logprob: -2.715585708618164
    4. 'set' → logprob: -2.840585708618164
    5. ' [' → logprob: -3.090585708618164
    6. '[i' → logprob: -3.715585708618164
    7. ' {' → logprob: -5.090585708618164
    8. ' []' → logprob: -5.090585708618164
    9. ' set' → logprob: -5.590585708618164
    10. '[int' → logprob: -7.465585708618164

Token 36: 'any' (ID: 1252)
  Prédit: 'any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.5866403579711914
    2. 'False' → logprob: -1.0866403579711914
    3. 'i' → logprob: -2.4616403579711914
    4. 'True' → logprob: -4.961640357971191
    5. ' any' → logprob: -5.961640357971191
    6. '0' → logprob: -5.961640357971191
    7. ''#' → logprob: -5.961640357971191
    8. ' False' → logprob: -6.961640357971191
    9. '"#' → logprob: -7.461640357971191
    10. 'r' → logprob: -7.711640357971191

Token 37: '(char' (ID: 14823)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.06401310861110687
    2. '(cell' → logprob: -3.3140130043029785
    3. '(ch' → logprob: -3.8140130043029785
    4. '('#' → logprob: -6.0640130043029785
    5. '(' → logprob: -7.6890130043029785
    6. '(x' → logprob: -7.9390130043029785
    7. '(char' → logprob: -8.439013481140137
    8. '((' → logprob: -9.314013481140137
    9. '("#' → logprob: -9.314013481140137
    10. '(lambda' → logprob: -10.564013481140137

Token 38: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.76454758644104
    2. '=='' → logprob: -1.26454758644104
    3. ' ==' → logprob: -1.38954758644104
    4. '('#' → logprob: -6.514547348022461
    5. 'for' → logprob: -7.639547348022461
    6. '=="' → logprob: -8.389547348022461
    7. ''#' → logprob: -9.264547348022461
    8. ' for' → logprob: -9.389547348022461
    9. ' =='' → logprob: -9.514547348022461
    10. '==
' → logprob: -9.639547348022461

Token 39: ' '#'' (ID: 139870)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.003414751496165991
    2. ''' → logprob: -6.128414630889893
    3. '"#' → logprob: -7.378414630889893
    4. ' '#'' → logprob: -7.503414630889893
    5. ' '#' → logprob: -11.00341510772705
    6. ''a' → logprob: -11.87841510772705
    7. '"' → logprob: -11.87841510772705
    8. ''*' → logprob: -12.12841510772705
    9. '#' → logprob: -12.25341510772705
    10. ''s' → logprob: -13.12841510772705

Token 40: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0102220568805933
    2. 'for' → logprob: -4.6352219581604
    3. ' in' → logprob: -7.8852219581604
    4. ' ' → logprob: -9.385222434997559
    5. ')' → logprob: -12.635222434997559
    6. '	for' → logprob: -13.510222434997559
    7. 'in' → logprob: -14.135222434997559
    8. '  ' → logprob: -16.010221481323242
    9. '```' → logprob: -16.885221481323242
    10. '   ' → logprob: -17.135221481323242

Token 41: ' char' (ID: 1826)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.08973167836666107
    2. 'row' → logprob: -2.7147316932678223
    3. 'char' → logprob: -4.589731693267822
    4. ' char' → logprob: -4.839731693267822
    5. ' c' → logprob: -7.839731693267822
    6. ' cell' → logprob: -8.089731216430664
    7. 'c' → logprob: -8.464731216430664
    8. ' ' → logprob: -8.589731216430664
    9. ' line' → logprob: -8.714731216430664
    10. ' in' → logprob: -9.839731216430664

Token 42: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01855139248073101
    2. 'in' → logprob: -4.018551349639893
    3. ')' → logprob: -8.26855182647705
    4. ' ' → logprob: -9.39355182647705
    5. 'row' → logprob: -10.64355182647705
    6. ' row' → logprob: -11.64355182647705
    7. 's' → logprob: -12.14355182647705
    8. ' )' → logprob: -12.14355182647705
    9. 'a' → logprob: -12.14355182647705
    10. 'n' → logprob: -13.26855182647705

Token 43: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.062123414129018784
    2. ' row' → logprob: -2.8121232986450195
    3. 'a' → logprob: -10.06212329864502
    4. 'line' → logprob: -10.06212329864502
    5. 'r' → logprob: -10.43712329864502
    6. ')' → logprob: -10.81212329864502
    7. 'rows' → logprob: -11.56212329864502
    8. ' a' → logprob: -12.81212329864502
    9. ' ' → logprob: -13.18712329864502
    10. ' line' → logprob: -13.43712329864502

Token 44: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011415231710998341
    2. ' )' → logprob: -9.250114440917969
    3. ')]' → logprob: -11.875114440917969
    4. ')
' → logprob: -13.000114440917969
    5. '   ' → logprob: -13.500114440917969
    6. 'in' → logprob: -13.625114440917969
    7. ' ' → logprob: -13.875114440917969
    8. ']' → logprob: -14.000114440917969
    9. 'a' → logprob: -14.375114440917969
    10. '))' → logprob: -14.375114440917969

Token 45: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.43691006302833557
    2. ')' → logprob: -1.1869100332260132
    3. 'for' → logprob: -3.0619101524353027
    4. ' ' → logprob: -6.561910152435303
    5. ' in' → logprob: -7.936910152435303
    6. ' )' → logprob: -9.561909675598145
    7. ']' → logprob: -9.561909675598145
    8. 'in' → logprob: -10.561909675598145
    9. '   ' → logprob: -10.936909675598145
    10. '	for' → logprob: -11.936909675598145

Token 46: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.07827454805374146
    2. 'row' → logprob: -2.7032744884490967
    3. ' a' → logprob: -5.078274726867676
    4. 'a' → logprob: -6.328274726867676
    5. ' ' → logprob: -8.328274726867676
    6. 'r' → logprob: -11.703274726867676
    7. '	row' → logprob: -11.703274726867676
    8. ' _' → logprob: -11.828274726867676
    9. ' range' → logprob: -12.453274726867676
    10. '_' → logprob: -12.578274726867676

Token 47: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.040936026722192764
    2. 'in' → logprob: -3.41593599319458
    3. ')' → logprob: -5.66593599319458
    4. ')]' → logprob: -6.29093599319458
    5. ']' → logprob: -6.79093599319458
    6. 'a' → logprob: -7.29093599319458
    7. ' )' → logprob: -10.040936470031738
    8. ' ]' → logprob: -10.540936470031738
    9. 's' → logprob: -10.790936470031738
    10. '])' → logprob: -11.790936470031738

Token 48: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.007682580966502428
    2. ' a' → logprob: -4.882682800292969
    3. ' range' → logprob: -9.882682800292969
    4. 'range' → logprob: -10.632682800292969
    5. ' ' → logprob: -14.632682800292969
    6. ')' → logprob: -15.132682800292969
    7. ')a' → logprob: -15.132682800292969
    8. '(a' → logprob: -17.00768280029297
    9. '	a' → logprob: -17.13268280029297
    10. '```' → logprob: -17.25768280029297

Token 49: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08381685614585876
    2. ')]' → logprob: -2.5838167667388916
    3. ')' → logprob: -5.458817005157471
    4. '])' → logprob: -7.708817005157471
    5. ']
' → logprob: -8.833816528320312
    6. ' ]' → logprob: -10.458816528320312
    7. '])]' → logprob: -10.958816528320312
    8. ')])' → logprob: -11.958816528320312
    9. ']

' → logprob: -13.083816528320312
    10. '`]' → logprob: -13.333816528320312

Token 50: 'cols' (ID: 44366)
  Prédit: 'cols'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cols' → logprob: -0.02344229631125927
    2. 'columns' → logprob: -3.773442268371582
    3. 'col' → logprob: -9.648442268371582
    4. 'filtered' → logprob: -9.773442268371582
    5. 'rows' → logprob: -10.398442268371582
    6. ' cols' → logprob: -10.648442268371582
    7. 'valid' → logprob: -12.648442268371582
    8. 'c' → logprob: -12.898442268371582
    9. 'new' → logprob: -13.023442268371582
    10. 'keep' → logprob: -13.148442268371582

Token 51: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -0.0011916564544662833
    2. '_' → logprob: -6.87619161605835
    3. '_w' → logprob: -9.501192092895508
    4. ' =' → logprob: -10.626192092895508
    5. 'with' → logprob: -10.751192092895508
    6. ' _' → logprob: -11.376192092895508
    7. '=' → logprob: -11.501192092895508
    8. '=_' → logprob: -12.001192092895508
    9. '_has' → logprob: -13.501192092895508
    10. '_WITH' → logprob: -13.751192092895508

Token 52: '_hash' (ID: 20844)
  Prédit: '_hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -0.04310070350766182
    2. '_' → logprob: -3.168100595474243
    3. 'hash' → logprob: -10.293100357055664
    4. '_##' → logprob: -10.918100357055664
    5. '#' → logprob: -11.293100357055664
    6. '__' → logprob: -11.918100357055664
    7. '_HASH' → logprob: -12.418100357055664
    8. '_has' → logprob: -12.668100357055664
    9. '##_' → logprob: -12.668100357055664
    10. '_h' → logprob: -12.793100357055664

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007607458624988794
    2. '=' → logprob: -4.882607460021973
    3. ' ' → logprob: -14.757607460021973
    4. ' =[' → logprob: -14.757607460021973
    5. '[' → logprob: -15.132607460021973
    6. ']' → logprob: -16.632606506347656
    7. 's' → logprob: -16.757606506347656
    8. ')' → logprob: -17.007606506347656
    9. ' ' → logprob: -17.257606506347656
    10. '=[' → logprob: -17.257606506347656

Token 54: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.062046218663454056
    2. ' [' → logprob: -2.8120462894439697
    3. ' ' → logprob: -10.31204605102539
    4. '[Any' → logprob: -10.31204605102539
    5. '[a' → logprob: -12.68704605102539
    6. '[col' → logprob: -12.68704605102539
    7. '[len' → logprob: -13.68704605102539
    8. '[int' → logprob: -14.06204605102539
    9. ' any' → logprob: -14.31204605102539
    10. 'any' → logprob: -14.43704605102539

Token 55: 'any' (ID: 1252)
  Prédit: 'any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.0001657565007917583
    2. ' any' → logprob: -8.875165939331055
    3. 'False' → logprob: -11.000165939331055
    4. ''any' → logprob: -12.875165939331055
    5. ' ' → logprob: -13.500165939331055
    6. '(any' → logprob: -13.625165939331055
    7. '
' → logprob: -13.875165939331055
    8. '   ' → logprob: -14.625165939331055
    9. 'Any' → logprob: -14.625165939331055
    10. '0' → logprob: -14.750165939331055

Token 56: '(row' (ID: 15945)
  Prédit: '(char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(char' → logprob: -0.02705105021595955
    2. '(a' → logprob: -3.6520509719848633
    3. '(row' → logprob: -8.027050971984863
    4. 'char' → logprob: -8.277050971984863
    5. '(' → logprob: -8.902050971984863
    6. 'a' → logprob: -10.902050971984863
    7. '(col' → logprob: -12.652050971984863
    8. '((' → logprob: -12.902050971984863
    9. '(any' → logprob: -13.402050971984863
    10. '(c' → logprob: -13.652050971984863

Token 57: '[j' (ID: 7895)
  Prédit: '[col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[col' → logprob: -0.7922185063362122
    2. '[j' → logprob: -0.9172185063362122
    3. '[i' → logprob: -2.0422184467315674
    4. '[' → logprob: -5.4172186851501465
    5. '[column' → logprob: -6.0422186851501465
    6. '[c' → logprob: -6.2922186851501465
    7. '(char' → logprob: -6.5422186851501465
    8. '[row' → logprob: -6.9172186851501465
    9. '[x' → logprob: -6.9172186851501465
    10. 'char' → logprob: -6.9172186851501465

Token 58: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08638918399810791
    2. ' ==' → logprob: -2.9613890647888184
    3. ']==' → logprob: -4.086389064788818
    4. '==' → logprob: -4.336389064788818
    5. ']=='' → logprob: -7.336389064788818
    6. ' ]' → logprob: -9.461389541625977
    7. ')' → logprob: -9.586389541625977
    8. '][' → logprob: -9.711389541625977
    9. '#' → logprob: -9.836389541625977
    10. '[j' → logprob: -9.961389541625977

Token 59: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.018285496160387993
    2. '==' → logprob: -4.018285274505615
    3. '=='' → logprob: -9.518285751342773
    4. ' for' → logprob: -10.393285751342773
    5. ' ' → logprob: -11.643285751342773
    6. ' =='' → logprob: -12.393285751342773
    7. ')' → logprob: -12.643285751342773
    8. 'for' → logprob: -12.643285751342773
    9. ' '#'' → logprob: -12.768285751342773
    10. ']' → logprob: -13.393285751342773

Token 60: ' '#'' (ID: 139870)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.00035155098885297775
    2. ' '#'' → logprob: -8.125351905822754
    3. ' '#' → logprob: -9.875351905822754
    4. '"#' → logprob: -13.500351905822754
    5. ''' → logprob: -14.125351905822754
    6. '#' → logprob: -14.250351905822754
    7. '('#' → logprob: -14.625351905822754
    8. '')' → logprob: -15.000351905822754
    9. '','#' → logprob: -15.875351905822754
    10. '='#' → logprob: -16.000350952148438

Token 61: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01815837249159813
    2. 'for' → logprob: -4.018158435821533
    3. ' ' → logprob: -12.268157958984375
    4. '	for' → logprob: -12.893157958984375
    5. ')' → logprob: -13.643157958984375
    6. ' or' → logprob: -17.393157958984375
    7. '
' → logprob: -17.643157958984375
    8. ' ' → logprob: -17.768157958984375
    9. ' in' → logprob: -17.893157958984375
    10. 'or' → logprob: -18.268157958984375

Token 62: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.34836345911026
    2. ' range' → logprob: -1.9733633995056152
    3. 'row' → logprob: -1.9733633995056152
    4. 'range' → logprob: -4.223363399505615
    5. 'a' → logprob: -7.223363399505615
    6. ' a' → logprob: -7.348363399505615
    7. ' ' → logprob: -9.098363876342773
    8. 'r' → logprob: -11.723363876342773
    9. '	row' → logprob: -11.723363876342773
    10. ' in' → logprob: -12.348363876342773

Token 63: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012997271493077278
    2. 'in' → logprob: -4.762997150421143
    3. 'a' → logprob: -5.637997150421143
    4. ' a' → logprob: -7.262997150421143
    5. 's' → logprob: -9.8879976272583
    6. ')' → logprob: -10.6379976272583
    7. ' ' → logprob: -11.3879976272583
    8. 'for' → logprob: -11.6379976272583
    9. ' for' → logprob: -11.7629976272583
    10. ' range' → logprob: -12.8879976272583

Token 64: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20143575966358185
    2. ' a' → logprob: -1.7014358043670654
    3. ' ' → logprob: -11.451436042785645
    4. ')' → logprob: -12.326436042785645
    5. ')a' → logprob: -13.201436042785645
    6. '	a' → logprob: -13.826436042785645
    7. '   ' → logprob: -14.263936042785645
    8. ' range' → logprob: -14.513936042785645
    9. 'range' → logprob: -14.701436042785645
    10. 's' → logprob: -14.951436042785645

Token 65: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06876670569181442
    2. ' for' → logprob: -2.8187665939331055
    3. 'for' → logprob: -5.1937665939331055
    4. ' )' → logprob: -6.8187665939331055
    5. ' in' → logprob: -9.818766593933105
    6. ' ' → logprob: -10.193766593933105
    7. ']' → logprob: -11.443766593933105
    8. '   ' → logprob: -11.943766593933105
    9. ')]' → logprob: -11.943766593933105
    10. ' range' → logprob: -12.318766593933105

Token 66: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0068575735203921795
    2. 'for' → logprob: -5.006857395172119
    3. ' in' → logprob: -9.381857872009277
    4. ' ' → logprob: -10.631857872009277
    5. ')' → logprob: -10.756857872009277
    6. '	for' → logprob: -11.631857872009277
    7. ' range' → logprob: -13.506857872009277
    8. '   ' → logprob: -13.631857872009277
    9. '```' → logprob: -15.256857872009277
    10. ' if' → logprob: -15.506857872009277

Token 67: ' j' (ID: 441)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.005233763717114925
    2. 'range' → logprob: -5.2552337646484375
    3. ' ' → logprob: -19.255233764648438
    4. '(range' → logprob: -19.505233764648438
    5. '	range' → logprob: -19.505233764648438
    6. '```' → logprob: -20.255233764648438
    7. ' j' → logprob: -20.505233764648438
    8. 'Range' → logprob: -20.630233764648438
    9. '   ' → logprob: -20.880233764648438
    10. ' ' → logprob: -20.880233764648438

Token 68: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009806263260543346
    2. 'in' → logprob: -4.634806156158447
    3. 'range' → logprob: -10.509806632995605
    4. ' range' → logprob: -10.884806632995605
    5. ' ' → logprob: -12.634806632995605
    6. ')' → logprob: -14.259806632995605
    7. '  ' → logprob: -17.25980567932129
    8. 's' → logprob: -17.25980567932129
    9. 'w' → logprob: -17.25980567932129
    10. ' i' → logprob: -17.38480567932129

Token 69: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759400129318237
    2. ' range' → logprob: -0.8259400129318237
    3. 'w' → logprob: -15.450940132141113
    4. ' ' → logprob: -16.200939178466797
    5. '(range' → logprob: -16.200939178466797
    6. '	range' → logprob: -16.450939178466797
    7. ')' → logprob: -17.075939178466797
    8. ' w' → logprob: -17.200939178466797
    9. '   ' → logprob: -17.950939178466797
    10. '```' → logprob: -19.200939178466797

Token 70: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -8.578184497309849e-05
    2. 'w' → logprob: -9.750085830688477
    3. '(' → logprob: -10.750085830688477
    4. ' (' → logprob: -12.250085830688477
    5. ' w' → logprob: -14.250085830688477
    6. '(len' → logprob: -16.375085830688477
    7. '	w' → logprob: -16.875085830688477
    8. '(h' → logprob: -16.875085830688477
    9. '(
' → logprob: -17.000085830688477
    10. '(width' → logprob: -17.000085830688477

Token 71: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.009183843620121479
    2. ']' → logprob: -4.884183883666992
    3. ')' → logprob: -6.509183883666992
    4. '])' → logprob: -10.009183883666992
    5. '])]' → logprob: -10.384183883666992
    6. ')])' → logprob: -12.009183883666992
    7. ' )' → logprob: -13.634183883666992
    8. ' ]' → logprob: -14.009183883666992
    9. '')]' → logprob: -14.634183883666992
    10. ')],' → logprob: -14.759183883666992

Token 72: 'filtered' (ID: 72386)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010859515517950058
    2. 'filtered' → logprob: -5.385859489440918
    3. 'new' → logprob: -6.010859489440918
    4. 'print' → logprob: -6.385859489440918
    5. 'result' → logprob: -6.385859489440918
    6. 'b' → logprob: -9.010859489440918
    7. 'valid' → logprob: -9.510859489440918
    8. 'rows' → logprob: -10.135859489440918
    9. 'pr' → logprob: -10.385859489440918
    10. 'a' → logprob: -10.635859489440918

Token 73: '_rows' (ID: 26013)
  Prédit: '_rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rows' → logprob: -0.13415302336215973
    2. '_a' → logprob: -2.259153127670288
    3. '_' → logprob: -3.884153127670288
    4. 'a' → logprob: -8.259153366088867
    5. ' =' → logprob: -9.509153366088867
    6. '_r' → logprob: -9.509153366088867
    7. '_row' → logprob: -10.384153366088867
    8. '_h' → logprob: -10.634153366088867
    9. '_lines' → logprob: -10.884153366088867
    10. '=' → logprob: -11.009153366088867

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10023654252290726
    2. '=' → logprob: -2.350236654281616
    3. '=[]' → logprob: -11.600236892700195
    4. ',' → logprob: -12.475236892700195
    5. '_indices' → logprob: -12.725236892700195
    6. '_' → logprob: -12.725236892700195
    7. ']' → logprob: -12.850236892700195
    8. 's' → logprob: -13.600236892700195
    9. ' =[' → logprob: -13.725236892700195
    10. '<|end|>' → logprob: -14.475236892700195

Token 75: ' (
' (ID: 4112)
  Prédit: '[row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[row' → logprob: -0.8827897310256958
    2. '[' → logprob: -1.3827897310256958
    3. ' [' → logprob: -2.1327896118164062
    4. '[i' → logprob: -2.1327896118164062
    5. '[h' → logprob: -2.8827896118164062
    6. '[a' → logprob: -3.6327896118164062
    7. '[j' → logprob: -5.257789611816406
    8. '[r' → logprob: -5.632789611816406
    9. '[list' → logprob: -6.507789611816406
    10. '[x' → logprob: -6.882789611816406

Token 76: '   ' (ID: 271)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.04889051616191864
    2. 'i' → logprob: -3.6738905906677246
    3. '[row' → logprob: -4.298890590667725
    4. '[r' → logprob: -5.923890590667725
    5. '[' → logprob: -6.173890590667725
    6. 'row' → logprob: -6.673890590667725
    7. '[
' → logprob: -7.048890590667725
    8. ' [' → logprob: -7.173890590667725
    9. '[j' → logprob: -7.923890590667725
    10. ' i' → logprob: -8.423890113830566

Token 77: ' ''.' (ID: 105941)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.32101452350616455
    2. '[row' → logprob: -2.071014404296875
    3. '[a' → logprob: -3.196014404296875
    4. 'row' → logprob: -3.821014404296875
    5. 'i' → logprob: -3.946014404296875
    6. 'a' → logprob: -3.946014404296875
    7. '[' → logprob: -4.071014404296875
    8. '[r' → logprob: -4.321014404296875
    9. '[
' → logprob: -4.446014404296875
    10. '[j' → logprob: -6.196014404296875

Token 78: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -2.2200749754119897e-06
    2. '''.' → logprob: -14.000001907348633
    3. ' ' → logprob: -15.250001907348633
    4. ' join' → logprob: -15.500001907348633
    5. '```' → logprob: -15.500001907348633
    6. '   ' → logprob: -15.750001907348633
    7. '.' → logprob: -15.875001907348633
    8. '.join' → logprob: -16.375001907348633
    9. 'jo' → logprob: -16.875001907348633
    10. 'j' → logprob: -17.000001907348633

Token 79: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.32719534635543823
    2. 'a' → logprob: -1.452195405960083
    3. '[a' → logprob: -3.452195405960083
    4. '([' → logprob: -5.452195167541504
    5. 'char' → logprob: -5.577195167541504
    6. '(row' → logprob: -6.827195167541504
    7. '(' → logprob: -7.077195167541504
    8. '(char' → logprob: -7.327195167541504
    9. '(c' → logprob: -7.702195167541504
    10. 'c' → logprob: -7.952195167541504

Token 80: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00012475410767365247
    2. '[row' → logprob: -9.87512493133545
    3. '[r' → logprob: -10.00012493133545
    4. 'i' → logprob: -10.62512493133545
    5. '```' → logprob: -14.00012493133545
    6. ')' → logprob: -14.12512493133545
    7. '[j' → logprob: -14.62512493133545
    8. '   ' → logprob: -15.00012493133545
    9. '[' → logprob: -15.87512493133545
    10. 'r' → logprob: -16.000123977661133

Token 81: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.000872274860739708
    2. '][' → logprob: -7.1258721351623535
    3. '   ' → logprob: -10.500872611999512
    4. ')[' → logprob: -11.250872611999512
    5. ')' → logprob: -11.375872611999512
    6. 'j' → logprob: -12.625872611999512
    7. '```' → logprob: -13.250872611999512
    8. '])' → logprob: -13.375872611999512
    9. '[k' → logprob: -13.500872611999512
    10. ']' → logprob: -13.750872611999512

Token 82: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0005429040757007897
    2. ' j' → logprob: -7.625543117523193
    3. '   ' → logprob: -10.625542640686035
    4. '[j' → logprob: -11.000542640686035
    5. ' ' → logprob: -12.125542640686035
    6. ':j' → logprob: -12.750542640686035
    7. '	j' → logprob: -13.250542640686035
    8. 'jj' → logprob: -14.250542640686035
    9. '    ' → logprob: -14.375542640686035
    10. '  ' → logprob: -14.375542640686035

Token 83: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.491498531133402e-06
    2. 'for' → logprob: -12.375009536743164
    3. ' ]' → logprob: -12.625009536743164
    4. ']
' → logprob: -13.750009536743164
    5. ' for' → logprob: -15.000009536743164
    6. '']' → logprob: -15.250009536743164
    7. '   ' → logprob: -15.875009536743164
    8. '])' → logprob: -16.250009536743164
    9. ']]' → logprob: -16.625009536743164
    10. 'j' → logprob: -17.250009536743164

Token 84: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5246121883392334
    2. 'for' → logprob: -0.8996121883392334
    3. ')' → logprob: -7.0246124267578125
    4. ']' → logprob: -8.524612426757812
    5. '   ' → logprob: -8.524612426757812
    6. '           ' → logprob: -10.024612426757812
    7. '[j' → logprob: -10.149612426757812
    8. ' ' → logprob: -10.649612426757812
    9. 'if' → logprob: -10.899612426757812
    10. '       ' → logprob: -11.149612426757812

Token 85: ' j' (ID: 441)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04026685655117035
    2. 'range' → logprob: -3.290266752243042
    3. 'j' → logprob: -6.540266990661621
    4. ' j' → logprob: -7.165266990661621
    5. ' ' → logprob: -12.915266990661621
    6. '   ' → logprob: -13.415266990661621
    7. ')' → logprob: -14.415266990661621
    8. '	range' → logprob: -14.915266990661621
    9. '(range' → logprob: -15.040266990661621
    10. '_range' → logprob: -15.665266990661621

Token 86: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03373502567410469
    2. 'in' → logprob: -3.4087350368499756
    3. '   ' → logprob: -10.158735275268555
    4. ' ' → logprob: -10.658735275268555
    5. 'range' → logprob: -10.908735275268555
    6. '    ' → logprob: -13.158735275268555
    7. '  ' → logprob: -13.533735275268555
    8. ')' → logprob: -14.283735275268555
    9. 's' → logprob: -14.283735275268555
    10. ',' → logprob: -14.533735275268555

Token 87: ' keep' (ID: 3357)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.7930358648300171
    2. 'valid' → logprob: -0.9180358648300171
    3. 'include' → logprob: -2.7930359840393066
    4. 'flag' → logprob: -3.6680359840393066
    5. 'col' → logprob: -4.418035984039307
    6. ' has' → logprob: -5.043035984039307
    7. ' valid' → logprob: -5.043035984039307
    8. 'in' → logprob: -5.418035984039307
    9. 'exists' → logprob: -5.418035984039307
    10. 'keep' → logprob: -5.543035984039307

Token 88: '_col' (ID: 7255)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20248788595199585
    2. 'in' → logprob: -1.7024879455566406
    3. '_in' → logprob: -8.20248794555664
    4. 's' → logprob: -8.57748794555664
    5. '```' → logprob: -9.07748794555664
    6. 'In' → logprob: -9.20248794555664
    7. ' ' → logprob: -9.32748794555664
    8. 'j' → logprob: -9.32748794555664
    9. ')' → logprob: -9.57748794555664
    10. '   ' → logprob: -11.63998794555664

Token 89: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06246492266654968
    2. 'in' → logprob: -2.812464952468872
    3. ')' → logprob: -8.812464714050293
    4. 's' → logprob: -9.062464714050293
    5. ' ' → logprob: -9.437464714050293
    6. 'In' → logprob: -10.437464714050293
    7. 'd' → logprob: -10.562464714050293
    8. '```' → logprob: -11.062464714050293
    9. 'ed' → logprob: -11.687464714050293
    10. 'a' → logprob: -11.937464714050293

Token 90: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.5759521722793579
    2. ' enumerate' → logprob: -0.8259521722793579
    3. 'zip' → logprob: -11.950952529907227
    4. ' zip' → logprob: -12.450952529907227
    5. ')' → logprob: -14.575952529907227
    6. '```' → logprob: -14.575952529907227
    7. ' enumer' → logprob: -15.075952529907227
    8. 'en' → logprob: -15.450952529907227
    9. 'Enumer' → logprob: -15.700952529907227
    10. ' en' → logprob: -15.700952529907227

Token 91: '(cols' (ID: 176200)
  Prédit: '(cols'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cols' → logprob: -0.6943411827087402
    2. 'cols' → logprob: -0.8193411827087402
    3. ' cols' → logprob: -2.8193411827087402
    4. 'enumer' → logprob: -9.194341659545898
    5. '(rows' → logprob: -10.569341659545898
    6. 'rows' → logprob: -10.694341659545898
    7. '-cols' → logprob: -11.319341659545898
    8. '_cols' → logprob: -11.319341659545898
    9. '(columns' → logprob: -11.569341659545898
    10. ' enumerate' → logprob: -11.569341659545898

Token 92: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -1.4617256056226324e-05
    2. 'with' → logprob: -11.500014305114746
    3. '   ' → logprob: -13.625014305114746
    4. '_' → logprob: -13.750014305114746
    5. ')' → logprob: -14.250014305114746
    6. '_WITH' → logprob: -15.375014305114746
    7. 's' → logprob: -15.625014305114746
    8. '_w' → logprob: -15.625014305114746
    9. ')_' → logprob: -15.750014305114746
    10. '_to' → logprob: -16.250015258789062

Token 93: '_hash' (ID: 20844)
  Prédit: '_hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -0.47608160972595215
    2. 'hash' → logprob: -0.9760816097259521
    3. 'with' → logprob: -6.351081848144531
    4. '_with' → logprob: -9.726081848144531
    5. 'has' → logprob: -10.101081848144531
    6. 's' → logprob: -10.476081848144531
    7. '_' → logprob: -10.601081848144531
    8. '```' → logprob: -11.601081848144531
    9. ')' → logprob: -11.726081848144531
    10. '   ' → logprob: -11.976081848144531

Token 94: ')' (ID: 8)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03257063403725624
    2. ')' → logprob: -4.032570838928223
    3. 'if' → logprob: -4.282570838928223
    4. '           ' → logprob: -8.782570838928223
    5. '       ' → logprob: -9.657570838928223
    6. '   ' → logprob: -9.782570838928223
    7. ' )' → logprob: -9.907570838928223
    8. '        ' → logprob: -10.157570838928223
    9. '            ' → logprob: -10.157570838928223
    10. ' ' → logprob: -10.157570838928223

Token 95: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.02120000310242176
    2. 'if' → logprob: -3.896199941635132
    3. '   ' → logprob: -7.521200180053711
    4. '    ' → logprob: -10.521200180053711
    5. '       ' → logprob: -10.771200180053711
    6. '           ' → logprob: -10.896200180053711
    7. ' ' → logprob: -11.396200180053711
    8. '  ' → logprob: -11.521200180053711
    9. ')' → logprob: -11.646200180053711
    10. '        ' → logprob: -12.146200180053711

Token 96: ' keep' (ID: 3357)
  Prédit: ' keep'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' keep' → logprob: -0.038046084344387054
    2. 'keep' → logprob: -3.28804612159729
    3. '   ' → logprob: -13.038045883178711
    4. ' ' → logprob: -13.913045883178711
    5. ' ' → logprob: -14.163045883178711
    6. '    ' → logprob: -14.913045883178711
    7. ' kee' → logprob: -15.663045883178711
    8. '  ' → logprob: -15.788045883178711
    9. '_keep' → logprob: -16.53804588317871
    10. 'ke' → logprob: -16.66304588317871

Token 97: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -2.339278580620885e-06
    2. '_row' → logprob: -14.500001907348633
    3. '_' → logprob: -14.750001907348633
    4. 'col' → logprob: -14.750001907348633
    5. '_c' → logprob: -15.125001907348633
    6. '_cols' → logprob: -15.250001907348633
    7. '_COL' → logprob: -16.625001907348633
    8. '[col' → logprob: -16.750001907348633
    9. '__' → logprob: -17.000001907348633
    10. '   ' → logprob: -17.125001907348633

Token 98: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030607668682932854
    2. ' if' → logprob: -4.1556077003479
    3. '   ' → logprob: -5.1556077003479
    4. 'if' → logprob: -5.2806077003479
    5. ')
' → logprob: -6.0306077003479
    6. ' )' → logprob: -7.7806077003479
    7. ' ' → logprob: -8.655607223510742
    8. '       ' → logprob: -8.905607223510742
    9. ' and' → logprob: -9.155607223510742
    10. '))' → logprob: -9.405607223510742

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6948952674865723
    2. 'for' → logprob: -0.9448952674865723
    3. ' for' → logprob: -2.1948952674865723
    4. '       ' → logprob: -7.694895267486572
    5. ')' → logprob: -8.444894790649414
    6. ' ' → logprob: -9.819894790649414
    7. '    ' → logprob: -11.069894790649414
    8. '           ' → logprob: -11.319894790649414
    9. '	for' → logprob: -11.819894790649414
    10. 'if' → logprob: -12.194894790649414

Token 100: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.08395454287528992
    2. ' for' → logprob: -2.8339545726776123
    3. '   ' → logprob: -3.8339545726776123
    4. ')' → logprob: -9.333954811096191
    5. ' ' → logprob: -10.708954811096191
    6. '	for' → logprob: -11.708954811096191
    7. '       ' → logprob: -13.708954811096191
    8. '
' → logprob: -13.708954811096191
    9. ')
' → logprob: -13.958954811096191
    10. '    ' → logprob: -14.833954811096191

Token 101: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10021928697824478
    2. ' i' → logprob: -2.350219249725342
    3. ' range' → logprob: -12.4752197265625
    4. ' ' → logprob: -12.9752197265625
    5. 'range' → logprob: -13.2252197265625
    6. '   ' → logprob: -13.6002197265625
    7. '	i' → logprob: -13.6002197265625
    8. ',' → logprob: -14.7252197265625
    9. '  ' → logprob: -14.8502197265625
    10. ' in' → logprob: -15.2252197265625

Token 102: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05127028748393059
    2. 'in' → logprob: -3.3012702465057373
    3. ',' → logprob: -4.426270484924316
    4. '<|end|>' → logprob: -7.926270484924316
    5. ' range' → logprob: -8.051270484924316
    6. ' ,' → logprob: -8.301270484924316
    7. 'range' → logprob: -8.926270484924316
    8. ' ' → logprob: -9.301270484924316
    9. '  ' → logprob: -12.176270484924316
    10. '<|end|>' → logprob: -12.426270484924316

Token 103: ' keep' (ID: 3357)
  Prédit: 'keep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'keep' → logprob: -0.12716947495937347
    2. ' keep' → logprob: -2.127169370651245
    3. '(' → logprob: -9.377169609069824
    4. ' (' → logprob: -9.752169609069824
    5. '_keep' → logprob: -10.252169609069824
    6. 'row' → logprob: -11.377169609069824
    7. 'ke' → logprob: -11.627169609069824
    8. ' in' → logprob: -11.877169609069824
    9. 'in' → logprob: -12.127169609069824
    10. '.keep' → logprob: -12.252169609069824

Token 104: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.000529202981851995
    2. '_col' → logprob: -8.375529289245605
    3. 'row' → logprob: -8.500529289245605
    4. '_' → logprob: -10.250529289245605
    5. ' in' → logprob: -10.250529289245605
    6. '_in' → logprob: -11.625529289245605
    7. '_rows' → logprob: -12.625529289245605
    8. 'in' → logprob: -12.875529289245605
    9. '=row' → logprob: -13.125529289245605
    10. '_Row' → logprob: -13.875529289245605

Token 105: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22542043030261993
    2. 'in' → logprob: -1.6004204750061035
    3. ' ' → logprob: -12.975419998168945
    4. ')' → logprob: -13.350419998168945
    5. '   ' → logprob: -14.225419998168945
    6. '<|end|>' → logprob: -14.225419998168945
    7. '	in' → logprob: -14.475419998168945
    8. '  ' → logprob: -14.600419998168945
    9. ',' → logprob: -14.975419998168945
    10. '_in' → logprob: -15.100419998168945

Token 106: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.38687223196029663
    2. ' enumerate' → logprob: -1.1368722915649414
    3. 'en' → logprob: -14.636872291564941
    4. '(en' → logprob: -15.386872291564941
    5. ' enumer' → logprob: -15.511872291564941
    6. 'Enumer' → logprob: -15.886872291564941
    7. ' in' → logprob: -16.011871337890625
    8. '.enumer' → logprob: -16.761871337890625
    9. 'in' → logprob: -17.011871337890625
    10. '```' → logprob: -17.136871337890625

Token 107: '(rows' (ID: 69648)
  Prédit: '(rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rows' → logprob: -0.0017613328527659178
    2. '(en' → logprob: -6.876761436462402
    3. 'rows' → logprob: -8.001761436462402
    4. '(zip' → logprob: -8.126761436462402
    5. '(filtered' → logprob: -10.001761436462402
    6. 'enumer' → logprob: -10.501761436462402
    7. '(cols' → logprob: -11.751761436462402
    8. '(range' → logprob: -11.876761436462402
    9. ' rows' → logprob: -12.751761436462402
    10. ' enumerate' → logprob: -13.376761436462402

Token 108: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -1.4378848391061183e-05
    2. 'with' → logprob: -11.875014305114746
    3. '_rows' → logprob: -12.250014305114746
    4. '   ' → logprob: -14.500014305114746
    5. '_' → logprob: -14.875014305114746
    6. 's' → logprob: -15.125014305114746
    7. ')' → logprob: -15.125014305114746
    8. '__' → logprob: -15.375014305114746
    9. 'a' → logprob: -15.750014305114746
    10. '_filtered' → logprob: -15.875014305114746

Token 109: '_hash' (ID: 20844)
  Prédit: '_hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -0.005432257894426584
    2. '_rows' → logprob: -5.88043212890625
    3. 'hash' → logprob: -6.00543212890625
    4. '_with' → logprob: -9.13043212890625
    5. 'with' → logprob: -10.88043212890625
    6. 'rows' → logprob: -11.75543212890625
    7. 's' → logprob: -12.13043212890625
    8. ')' → logprob: -12.75543212890625
    9. '_' → logprob: -13.00543212890625
    10. 'a' → logprob: -13.00543212890625

Token 110: ')' (ID: 8)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.030852550640702248
    2. ')' → logprob: -3.5308525562286377
    3. 'if' → logprob: -7.280852317810059
    4. '   ' → logprob: -7.905852317810059
    5. ' )' → logprob: -10.905852317810059
    6. ' ' → logprob: -11.405852317810059
    7. '	if' → logprob: -11.655852317810059
    8. '    ' → logprob: -13.280852317810059
    9. '()' → logprob: -13.780852317810059
    10. ')
' → logprob: -14.155852317810059

Token 111: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.013047166168689728
    2. 'if' → logprob: -5.013047218322754
    3. '   ' → logprob: -5.138047218322754
    4. ')' → logprob: -8.263047218322754
    5. ' ' → logprob: -9.263047218322754
    6. '    ' → logprob: -9.763047218322754
    7. '  ' → logprob: -11.013047218322754
    8. '	if' → logprob: -12.013047218322754
    9. ' in' → logprob: -13.263047218322754
    10. '       ' → logprob: -13.513047218322754

Token 112: ' keep' (ID: 3357)
  Prédit: 'keep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'keep' → logprob: -0.22546391189098358
    2. ' keep' → logprob: -1.6004638671875
    3. '   ' → logprob: -10.2254638671875
    4. ' ' → logprob: -11.9754638671875
    5. '  ' → logprob: -12.4754638671875
    6. 'ke' → logprob: -13.3504638671875
    7. '    ' → logprob: -14.1004638671875
    8. 'Keep' → logprob: -14.8504638671875
    9. ' kee' → logprob: -14.8504638671875
    10. ' ' → logprob: -14.9754638671875

Token 113: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.00015514736878685653
    2. 'row' → logprob: -9.250155448913574
    3. 'r' → logprob: -10.750155448913574
    4. 'w' → logprob: -11.125155448913574
    5. 'd' → logprob: -11.375155448913574
    6. '_rows' → logprob: -12.125155448913574
    7. 'ow' → logprob: -13.000155448913574
    8. 'Row' → logprob: -14.000155448913574
    9. 'p' → logprob: -14.375155448913574
    10. '_' → logprob: -14.625155448913574

Token 114: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.054500666621607e-06
    2. ')
' → logprob: -13.87500286102295
    3. ' )' → logprob: -14.25000286102295
    4. ')]' → logprob: -15.00000286102295
    5. '))' → logprob: -15.12500286102295
    6. ']' → logprob: -15.37500286102295
    7. '）' → logprob: -15.87500286102295
    8. ')`' → logprob: -16.250003814697266
    9. '   ' → logprob: -16.375003814697266
    10. ')}' → logprob: -17.125003814697266

Token 115: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. ')
' → logprob: -13.500001907348633
    3. '))' → logprob: -15.500001907348633
    4. ' )' → logprob: -15.875001907348633
    5. ')`' → logprob: -16.625001907348633
    6. ')

' → logprob: -17.500001907348633
    7. '   ' → logprob: -17.500001907348633
    8. '`)' → logprob: -17.625001907348633
    9. ']' → logprob: -17.750001907348633
    10. '）' → logprob: -18.125001907348633

Token 116: 'print' (ID: 1598)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002487787976861
    2. 'print' → logprob: -6.002487659454346
    3. ' for' → logprob: -12.127488136291504
    4. 'filtered' → logprob: -12.127488136291504
    5. 'f' → logprob: -14.627488136291504
    6. '```' → logprob: -15.502488136291504
    7. 'p' → logprob: -15.877488136291504
    8. 'b' → logprob: -16.127487182617188
    9. ')' → logprob: -16.877487182617188
    10. '#' → logprob: -16.877487182617188

Token 117: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.005602376535534859
    2. '(*' → logprob: -5.6306023597717285
    3. '(' → logprob: -6.3806023597717285
    4. '("\' → logprob: -9.130602836608887
    5. '('' → logprob: -9.380602836608887
    6. '()' → logprob: -9.755602836608887
    7. '(*(' → logprob: -10.130602836608887
    8. '(next' → logprob: -11.630602836608887
    9. '(
' → logprob: -13.130602836608887
    10. '(list' → logprob: -13.255602836608887

Token 118: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00014358828775584698
    2. '\n' → logprob: -9.375144004821777
    3. '
' → logprob: -9.750144004821777
    4. 'join' → logprob: -15.375144004821777
    5. ' n' → logprob: -16.12514305114746
    6. ''.' → logprob: -17.50014305114746
    7. '

' → logprob: -18.00014305114746
    8. '' → logprob: -18.00014305114746
    9. '
' → logprob: -18.00014305114746
    10. '\
' → logprob: -18.25014305114746

Token 119: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.044314928352832794
    2. '.' → logprob: -3.4193148612976074
    3. '.join' → logprob: -5.294314861297607
    4. 'join' → logprob: -6.169314861297607
    5. ').' → logprob: -6.919314861297607
    6. '''.' → logprob: -7.169314861297607
    7. '').' → logprob: -7.669314861297607
    8. 'print' → logprob: -7.794314861297607
    9. '')' → logprob: -7.919314861297607
    10. ')' → logprob: -8.669315338134766

Token 120: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -6.2729995988775045e-06
    2. 'print' → logprob: -12.125006675720215
    3. 'jo' → logprob: -14.875006675720215
    4. ' join' → logprob: -15.125006675720215
    5. '.join' → logprob: -16.1250057220459
    6. '(join' → logprob: -16.7500057220459
    7. ').' → logprob: -17.7500057220459
    8. 'j' → logprob: -17.8750057220459
    9. ')' → logprob: -18.6250057220459
    10. '```' → logprob: -18.8750057220459

Token 121: '(filtered' (ID: 143028)
  Prédit: '(filtered'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(filtered' → logprob: -0.003340260125696659
    2. 'filtered' → logprob: -5.753340244293213
    3. '(list' → logprob: -8.753340721130371
    4. '(filter' → logprob: -12.503340721130371
    5. 'list' → logprob: -14.503340721130371
    6. '(' → logprob: -15.378340721130371
    7. ' filtered' → logprob: -15.628340721130371
    8. '_filtered' → logprob: -16.503339767456055
    9. 'filter' → logprob: -16.878339767456055
    10. 'Filtered' → logprob: -17.253339767456055

Token 122: '_rows' (ID: 26013)
  Prédit: '_rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rows' → logprob: -5.800739018013701e-05
    2. 'rows' → logprob: -9.8750581741333
    3. '_lines' → logprob: -12.8750581741333
    4. '(rows' → logprob: -14.0000581741333
    5. 'filtered' → logprob: -14.2500581741333
    6. ')' → logprob: -14.6250581741333
    7. '_filtered' → logprob: -14.6250581741333
    8. 's' → logprob: -14.8750581741333
    9. '_ROWS' → logprob: -15.5000581741333
    10. '```' → logprob: -15.8750581741333

Token 123: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.313262403011322
    2. '))' → logprob: -1.3132624626159668
    3. ')))' → logprob: -15.313261985778809
    4. ')
' → logprob: -16.188262939453125
    5. '))
' → logprob: -16.563262939453125
    6. ' )' → logprob: -16.813262939453125
    7. '())' → logprob: -17.063262939453125
    8. ')`' → logprob: -17.188262939453125
    9. '})' → logprob: -17.438262939453125
    10. '])' → logprob: -17.688262939453125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 121
Tokens correctement prédits (1ère position, stricte): 57
Tokens correctement prédits (1ère position, avec adaptation): 58
Tokens correctement prédits (top 10): 108
Précision stricte (1ère position): 47.11%
Précision adaptée (1ère position): 47.93%
Précision (top 10): 89.26%
================================================================================
