================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:26:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

tokens = []
for line in sys.stdin:
    tokens += line.split()

S = tokens[0]
T = tokens[1]
A = int(tokens[2])
B = int(tokens[3])
U = tokens[4]

if U == S:
    A -= 1
else:
    B -= 1

print(A, B)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'tokens' (ID: 64329)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.025130433961749077
    2. '\n' → logprob: -4.400130271911621
    3. 'import' → logprob: -5.275130271911621
    4. '<|end|>' → logprob: -5.900130271911621
    5. '\' → logprob: -6.150130271911621
    6. 'newline' → logprob: -7.900130271911621
    7. '' → logprob: -8.025130271911621
    8. '
' → logprob: -8.400130271911621
    9. ';' → logprob: -8.525130271911621
    10. ',' → logprob: -8.525130271911621

Token 4: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0012447552289813757
    2. '=' → logprob: -7.12624454498291
    3. '[' → logprob: -7.87624454498291
    4. ')' → logprob: -11.50124454498291
    5. ' =' → logprob: -11.50124454498291
    6. ',' → logprob: -12.12624454498291
    7. '.tokens' → logprob: -12.25124454498291
    8. ' .' → logprob: -12.37624454498291
    9. '.token' → logprob: -12.62624454498291
    10. 'import' → logprob: -12.62624454498291

Token 5: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.48876988887786865
    2. '[' → logprob: -1.6137698888778687
    3. ' []' → logprob: -1.7387698888778687
    4. ' [' → logprob: -5.363770008087158
    5. '['' → logprob: -5.363770008087158
    6. '["' → logprob: -7.738770008087158
    7. ' ['' → logprob: -7.863770008087158
    8. ''' → logprob: -7.988770008087158
    9. '"' → logprob: -8.48876953125
    10. ' sys' → logprob: -8.48876953125

Token 6: 'for' (ID: 1938)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0010846133809536695
    2. '=' → logprob: -7.126084804534912
    3. '.append' → logprob: -9.376084327697754
    4. 'for' → logprob: -9.626084327697754
    5. 'tokens' → logprob: -10.001084327697754
    6. 'token' → logprob: -11.001084327697754
    7. '.=' → logprob: -11.251084327697754
    8. ' =' → logprob: -11.751084327697754
    9. 'import' → logprob: -12.001084327697754
    10. '[' → logprob: -12.126084327697754

Token 7: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.008918859995901585
    2. ' token' → logprob: -5.008918762207031
    3. ' i' → logprob: -6.633918762207031
    4. '  ' → logprob: -7.508918762207031
    5. ' item' → logprob: -9.383918762207031
    6. ' line' → logprob: -9.633918762207031
    7. 'token' → logprob: -9.883918762207031
    8. '_' → logprob: -10.508918762207031
    9. ' ' → logprob: -10.508918762207031
    10. ' t' → logprob: -11.383918762207031

Token 8: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003668486839160323
    2. 'in' → logprob: -5.628668308258057
    3. ' ' → logprob: -10.878668785095215
    4. 'import' → logprob: -11.003668785095215
    5. ':' → logprob: -11.753668785095215
    6. ' =' → logprob: -12.753668785095215
    7. ' :' → logprob: -13.003668785095215
    8. ',' → logprob: -13.003668785095215
    9. '```' → logprob: -13.003668785095215
    10. '[' → logprob: -13.253668785095215

Token 9: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.31338220834732056
    2. ' sys' → logprob: -1.3133821487426758
    3. 'iter' → logprob: -10.563382148742676
    4. ' iter' → logprob: -10.813382148742676
    5. '	sys' → logprob: -11.188382148742676
    6. '=sys' → logprob: -11.313382148742676
    7. '(sys' → logprob: -11.563382148742676
    8. 'range' → logprob: -11.563382148742676
    9. '```' → logprob: -12.063382148742676
    10. 'open' → logprob: -12.438382148742676

Token 10: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.003721576649695635
    2. '.' → logprob: -6.128721714019775
    3. '.argv' → logprob: -6.628721714019775
    4. '.readline' → logprob: -9.003721237182617
    5. '.stdout' → logprob: -10.003721237182617
    6. 'stdin' → logprob: -11.003721237182617
    7. 'import' → logprob: -11.878721237182617
    8. ' .' → logprob: -12.003721237182617
    9. '.readlines' → logprob: -12.503721237182617
    10. '.input' → logprob: -13.253721237182617

Token 11: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005844878032803535
    2. '.readline' → logprob: -8.250584602355957
    3. ':
' → logprob: -8.750584602355957
    4. ' :' → logprob: -9.875584602355957
    5. '.' → logprob: -10.375584602355957
    6. '[:]' → logprob: -10.625584602355957
    7. '   ' → logprob: -10.750584602355957
    8. '.readlines' → logprob: -12.125584602355957
    9. ':**' → logprob: -12.250584602355957
    10. '):' → logprob: -13.000584602355957

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005511255003511906
    2. ' tokens' → logprob: -8.000551223754883
    3. '    
' → logprob: -9.250551223754883
    4. 'tokens' → logprob: -9.250551223754883
    5. '   ' → logprob: -11.250551223754883
    6. '.tokens' → logprob: -12.750551223754883
    7. ' tokenize' → logprob: -13.500551223754883
    8. ' token' → logprob: -14.125551223754883
    9. '(tokens' → logprob: -14.250551223754883
    10. '    ' → logprob: -14.375551223754883

Token 13: ' tokens' (ID: 20290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30884602665901184
    2. ' tokens' → logprob: -1.4338459968566895
    3. 'tokens' (adapté à ' tokens') → logprob: -3.8088459968566895
    4. ' line' → logprob: -5.3088459968566895
    5. ' stripped' → logprob: -9.683846473693848
    6. ' if' → logprob: -10.433846473693848
    7. 'line' → logprob: -10.933846473693848
    8. ' for' → logprob: -10.933846473693848
    9. '    
' → logprob: -11.058846473693848
    10. ' token' → logprob: -11.433846473693848

Token 14: ' +=' (ID: 2757)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.40779590606689453
    2. '.append' → logprob: -1.4077959060668945
    3. '.' → logprob: -2.4077959060668945
    4. ' .' → logprob: -9.032795906066895
    5. '   ' → logprob: -10.407795906066895
    6. ' +=' → logprob: -11.532795906066895
    7. '.strip' → logprob: -12.032795906066895
    8. ' .=' → logprob: -12.782795906066895
    9. '.app' → logprob: -13.032795906066895
    10. '.add' → logprob: -13.032795906066895

Token 15: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.3868892788887024
    2. ' line' → logprob: -1.1368892192840576
    3. '(line' → logprob: -12.261889457702637
    4. '[line' → logprob: -12.261889457702637
    5. 'token' → logprob: -12.886889457702637
    6. 'list' → logprob: -13.136889457702637
    7. '	line' → logprob: -13.636889457702637
    8. '=line' → logprob: -13.636889457702637
    9. ' ' → logprob: -14.386889457702637
    10. '   ' → logprob: -14.636889457702637

Token 16: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.03387043997645378
    2. '.strip' → logprob: -3.5338704586029053
    3. '.' → logprob: -6.408870220184326
    4. 'tokens' → logprob: -7.283870220184326
    5. 'split' → logprob: -7.533870220184326
    6. '<|end|>' → logprob: -7.908870220184326
    7. '[:]' → logprob: -8.033870697021484
    8. '.rstrip' → logprob: -8.783870697021484
    9. '.readline' → logprob: -9.658870697021484
    10. '[' → logprob: -9.908870697021484

Token 17: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2409599870443344
    2. '('' → logprob: -2.240959882736206
    3. '()' → logprob: -2.240959882736206
    4. '("("' → logprob: -6.740960121154785
    5. ''' → logprob: -9.990960121154785
    6. '("' → logprob: -10.240960121154785
    7. '(`' → logprob: -10.365960121154785
    8. '```' → logprob: -11.365960121154785
    9. '"' → logprob: -11.615960121154785
    10. '("""' → logprob: -11.740960121154785

Token 18: 'S' (ID: 50)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21491345763206482
    2. 'if' → logprob: -2.0899133682250977
    3. 'print' → logprob: -3.2149133682250977
    4. ' for' → logprob: -4.589913368225098
    5. ' if' → logprob: -4.839913368225098
    6. '```' → logprob: -5.214913368225098
    7. '   ' → logprob: -6.589913368225098
    8. '`' → logprob: -7.089913368225098
    9. 'tokens' → logprob: -7.214913368225098
    10. '#' → logprob: -7.339913368225098

Token 19: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -1.105908751487732
    2. 'ys' → logprob: -1.355908751487732
    3. 'YS' → logprob: -2.1059088706970215
    4. 'et' → logprob: -2.8559088706970215
    5. 'ystem' → logprob: -2.9809088706970215
    6. 'Y' → logprob: -3.9809088706970215
    7. 'tr' → logprob: -4.2309088706970215
    8. ' =' → logprob: -4.2309088706970215
    9. 'UM' → logprob: -4.2309088706970215
    10. 'yntax' → logprob: -4.4809088706970215

Token 20: ' tokens' (ID: 20290)
  Prédit: ' tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tokens' → logprob: -0.7520115971565247
    2. 'tokens' → logprob: -1.1270115375518799
    3. '"' → logprob: -2.75201153755188
    4. ' input' → logprob: -3.00201153755188
    5. 'input' → logprob: -3.12701153755188
    6. ''' → logprob: -4.627011775970459
    7. ' "' → logprob: -4.627011775970459
    8. 'int' → logprob: -4.627011775970459
    9. ' int' → logprob: -5.252011775970459
    10. ' '' → logprob: -5.377011775970459

Token 21: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000250491953920573
    2. '[:]' → logprob: -9.125250816345215
    3. '[-' → logprob: -10.000250816345215
    4. '.pop' → logprob: -10.750250816345215
    5. '.' → logprob: -11.000250816345215
    6. '[int' → logprob: -11.500250816345215
    7. ' [' → logprob: -11.625250816345215
    8. '[len' → logprob: -11.625250816345215
    9. '```' → logprob: -12.000250816345215
    10. '[
' → logprob: -12.625250816345215

Token 22: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.288163083605468e-05
    2. '-' → logprob: -9.875052452087402
    3. '1' → logprob: -13.875052452087402
    4. ' ' → logprob: -15.125052452087402
    5. 'len' → logprob: -16.37505340576172
    6. '```' → logprob: -17.75005340576172
    7. '2' → logprob: -17.87505340576172
    8. ' -' → logprob: -18.12505340576172
    9. ')' → logprob: -18.37505340576172
    10. '   ' → logprob: -18.87505340576172

Token 23: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0028684698045253754
    2. ')' → logprob: -6.00286865234375
    3. '])' → logprob: -8.37786865234375
    4. ' ]' → logprob: -9.25286865234375
    5. '']' → logprob: -10.37786865234375
    6. '[' → logprob: -10.62786865234375
    7. ')]' → logprob: -11.62786865234375
    8. ' )' → logprob: -14.62786865234375
    9. '"]' → logprob: -14.75286865234375
    10. ',' → logprob: -15.62786865234375

Token 24: 'T' (ID: 51)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.63173246383667
    2. '.' → logprob: -2.00673246383667
    3. '+' → logprob: -2.13173246383667
    4. '[' → logprob: -2.25673246383667
    5. 'n' → logprob: -2.38173246383667
    6. '_' → logprob: -2.50673246383667
    7. 'a' → logprob: -2.75673246383667
    8. ')' → logprob: -3.00673246383667
    9. '#' → logprob: -3.38173246383667
    10. ''' → logprob: -4.00673246383667

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023399097844958305
    2. '=' → logprob: -3.7733991146087646
    3. '_' → logprob: -10.148399353027344
    4. ' ' → logprob: -10.648399353027344
    5. ')' → logprob: -10.648399353027344
    6. '.' → logprob: -11.273399353027344
    7. ' +=' → logprob: -11.648399353027344
    8. 's' → logprob: -12.023399353027344
    9. '_index' → logprob: -12.023399353027344
    10. '_tokens' → logprob: -12.773399353027344

Token 26: ' tokens' (ID: 20290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.10022251307964325
    2. ' tokens' → logprob: -2.350222587585449
    3. '(tokens' → logprob: -12.22522258758545
    4. 'okens' → logprob: -12.35022258758545
    5. 'token' → logprob: -12.85022258758545
    6. ' ' → logprob: -13.35022258758545
    7. '.tokens' → logprob: -13.60022258758545
    8. 't' → logprob: -14.97522258758545
    9. 'int' → logprob: -15.35022258758545
    10. '_tokens' → logprob: -15.47522258758545

Token 27: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.1782583391759545e-05
    2. '1' → logprob: -10.500031471252441
    3. '```' → logprob: -12.875031471252441
    4. ' [' → logprob: -13.750031471252441
    5. '[-' → logprob: -15.375031471252441
    6. '\[' → logprob: -15.875031471252441
    7. 's' → logprob: -17.125032424926758
    8. '[:' → logprob: -17.500032424926758
    9. '.' → logprob: -17.500032424926758
    10. '[:]' → logprob: -17.500032424926758

Token 28: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003407071635592729
    2. '0' → logprob: -8.000340461730957
    3. ']' → logprob: -13.125340461730957
    4. '])' → logprob: -14.125340461730957
    5. '```' → logprob: -14.250340461730957
    6. '-' → logprob: -14.375340461730957
    7. ' ' → logprob: -14.875340461730957
    8. '2' → logprob: -15.000340461730957
    9. '`' → logprob: -16.250341415405273
    10. '3' → logprob: -16.625341415405273

Token 29: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16032251715660095
    2. ']' → logprob: -1.9103225469589233
    3. '']' → logprob: -10.535322189331055
    4. '[' → logprob: -11.410322189331055
    5. ')]' → logprob: -11.410322189331055
    6. '])' → logprob: -11.660322189331055
    7. '}' → logprob: -11.785322189331055
    8. ' )' → logprob: -11.785322189331055
    9. '）' → logprob: -11.910322189331055
    10. ' ]' → logprob: -12.035322189331055

Token 30: 'A' (ID: 32)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6906952857971191
    2. 'if' → logprob: -1.0656952857971191
    3. 'n' → logprob: -3.065695285797119
    4. '
' → logprob: -3.190695285797119
    5. '#' → logprob: -3.815695285797119
    6. 'for' → logprob: -4.190695285797119
    7. '=' → logprob: -5.565695285797119
    8. 'a' → logprob: -5.690695285797119
    9. 'd' → logprob: -6.065695285797119
    10. '```' → logprob: -6.065695285797119

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0726314783096313
    2. '_' → logprob: -1.8226314783096313
    3. '[' → logprob: -2.072631359100342
    4. '=' → logprob: -2.322631359100342
    5. 'dd' → logprob: -2.947631359100342
    6. 'm' → logprob: -3.072631359100342
    7. 'l' → logprob: -4.572631359100342
    8. '_m' → logprob: -4.572631359100342
    9. 'B' → logprob: -4.697631359100342
    10. '_c' → logprob: -4.822631359100342

Token 32: ' int' (ID: 677)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.8628184199333191
    2. 'int' → logprob: -1.3628184795379639
    3. ' tokens' → logprob: -2.112818479537964
    4. ' []' → logprob: -2.487818479537964
    5. ' int' → logprob: -3.112818479537964
    6. '0' → logprob: -3.862818479537964
    7. '[]' → logprob: -3.862818479537964
    8. '[int' → logprob: -4.737818241119385
    9. ' ' → logprob: -5.237818241119385
    10. 'len' → logprob: -5.487818241119385

Token 33: '(tokens' (ID: 74272)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4785325527191162
    2. '(tokens' → logprob: -0.9785325527191162
    3. '(t' → logprob: -5.478532791137695
    4. '(T' → logprob: -9.478532791137695
    5. '(S' → logprob: -9.603532791137695
    6. 'tokens' → logprob: -9.728532791137695
    7. '(token' → logprob: -10.728532791137695
    8. '('' → logprob: -10.853532791137695
    9. '(s' → logprob: -12.103532791137695
    10. ' (' → logprob: -12.478532791137695

Token 34: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.45848218582978e-06
    2. ' [' → logprob: -13.62500286102295
    3. ')' → logprob: -15.00000286102295
    4. '(' → logprob: -15.62500286102295
    5. '[-' → logprob: -15.62500286102295
    6. '```' → logprob: -15.62500286102295
    7. ')[' → logprob: -16.250001907348633
    8. '[
' → logprob: -16.375001907348633
    9. '\[' → logprob: -16.375001907348633
    10. '1' → logprob: -16.750001907348633

Token 35: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1279553291387856e-05
    2. ' ' → logprob: -11.500011444091797
    3. '3' → logprob: -15.250011444091797
    4. ']' → logprob: -15.500011444091797
    5. '   ' → logprob: -15.875011444091797
    6. '  ' → logprob: -16.000011444091797
    7. '])' → logprob: -16.125011444091797
    8. '0' → logprob: -16.875011444091797
    9. '1' → logprob: -16.875011444091797
    10. '    ' → logprob: -17.375011444091797

Token 36: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.747814349073451e-05
    2. ' )' → logprob: -12.125017166137695
    3. ']' → logprob: -12.250017166137695
    4. '+' → logprob: -13.375017166137695
    5. '))' → logprob: -13.750017166137695
    6. '`)' → logprob: -14.000017166137695
    7. '）' → logprob: -14.625017166137695
    8. '*' → logprob: -14.750017166137695
    9. ')
' → logprob: -14.875017166137695
    10. '')' → logprob: -15.000017166137695

Token 37: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0009411195642314851
    2. 'D' → logprob: -7.375941276550293
    3. ' B' → logprob: -9.625941276550293
    4. 'T' → logprob: -9.750941276550293
    5. 'a' → logprob: -10.375941276550293
    6. 'b' → logprob: -10.375941276550293
    7. 'F' → logprob: -11.000941276550293
    8. 'A' → logprob: -11.000941276550293
    9. 'N' → logprob: -11.250941276550293
    10. 'C' → logprob: -11.375941276550293

Token 38: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43584394454956055
    2. ' =' → logprob: -1.0608439445495605
    3. ')' → logprob: -5.6858439445495605
    4. '+' → logprob: -6.6858439445495605
    5. '<|end|>' → logprob: -7.1858439445495605
    6. '=int' → logprob: -7.3108439445495605
    7. ' ' → logprob: -7.8108439445495605
    8. ' +=' → logprob: -8.185844421386719
    9. '.' → logprob: -9.310844421386719
    10. '+=' → logprob: -9.810844421386719

Token 39: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3132622241973877
    2. 'int' → logprob: -1.3132622241973877
    3. '=int' → logprob: -15.438261985778809
    4. '<int' → logprob: -15.688261985778809
    5. '(int' → logprob: -16.313262939453125
    6. '[int' → logprob: -16.938262939453125
    7. ' ' → logprob: -17.438262939453125
    8. ' ' → logprob: -17.938262939453125
    9. ']int' → logprob: -19.063262939453125
    10. '	int' → logprob: -19.188262939453125

Token 40: '(tokens' (ID: 74272)
  Prédit: '(tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tokens' → logprob: -0.10041391849517822
    2. '(' → logprob: -2.3504137992858887
    3. '(t' → logprob: -8.725414276123047
    4. 'tokens' → logprob: -10.600414276123047
    5. '(token' → logprob: -11.475414276123047
    6. ' (' → logprob: -12.350414276123047
    7. ')' → logprob: -13.225414276123047
    8. ' tokens' → logprob: -13.350414276123047
    9. '(tok' → logprob: -14.475414276123047
    10. '(
' → logprob: -15.350414276123047

Token 41: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. ')' → logprob: -15.500000953674316
    3. '2' → logprob: -16.125
    4. '3' → logprob: -16.5
    5. '_tokens' → logprob: -16.625
    6. '(' → logprob: -16.875
    7. 'tokens' → logprob: -17.0
    8. '[
' → logprob: -18.0
    9. ']' → logprob: -18.125
    10. 'Tokens' → logprob: -18.375

Token 42: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.02630273625254631
    2. '2' → logprob: -3.6513028144836426
    3. ' ' → logprob: -13.276302337646484
    4. '```' → logprob: -15.151302337646484
    5. '])' → logprob: -16.026302337646484
    6. '1' → logprob: -16.526302337646484
    7. '   ' → logprob: -16.776302337646484
    8. 'tokens' → logprob: -16.963802337646484
    9. '0' → logprob: -17.463802337646484
    10. '``' → logprob: -17.588802337646484

Token 43: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.375
    3. '))' → logprob: -16.625
    4. '+' → logprob: -17.375
    5. ']' → logprob: -17.5
    6. '}' → logprob: -17.875
    7. '）' → logprob: -17.875
    8. '')' → logprob: -18.0
    9. ')
' → logprob: -18.375
    10. '()' → logprob: -18.375

Token 44: 'U' (ID: 52)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.892018735408783
    2. 'if' → logprob: -0.892018735408783
    3. 'c' → logprob: -3.1420187950134277
    4. 'i' → logprob: -3.7670187950134277
    5. 'a' → logprob: -3.7670187950134277
    6. 'for' → logprob: -4.267018795013428
    7. 'x' → logprob: -4.392018795013428
    8. 'N' → logprob: -4.767018795013428
    9. 'X' → logprob: -5.017018795013428
    10. 'A' → logprob: -5.267018795013428

Token 45: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20475366711616516
    2. ' =' → logprob: -1.7047536373138428
    3. 'p' → logprob: -5.954753875732422
    4. 's' → logprob: -8.329753875732422
    5. 'ser' → logprob: -8.954753875732422
    6. 'S' → logprob: -9.329753875732422
    7. 'P' → logprob: -9.329753875732422
    8. 'se' → logprob: -9.829753875732422
    9. '=A' → logprob: -10.829753875732422
    10. 'A' → logprob: -10.954753875732422

Token 46: ' tokens' (ID: 20290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.05490248277783394
    2. ' tokens' → logprob: -2.9299025535583496
    3. 'input' → logprob: -11.929902076721191
    4. 'token' → logprob: -12.179902076721191
    5. '(tokens' → logprob: -12.429902076721191
    6. 'str' → logprob: -12.929902076721191
    7. 't' → logprob: -14.054902076721191
    8. ' input' → logprob: -14.804902076721191
    9. '.tokens' → logprob: -14.929902076721191
    10. 'okens' → logprob: -15.679902076721191

Token 47: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2961512513575144e-05
    2. '4' → logprob: -10.875022888183594
    3. '5' → logprob: -12.625022888183594
    4. '[-' → logprob: -15.250022888183594
    5. '```' → logprob: -15.625022888183594
    6. '[
' → logprob: -16.500022888183594
    7. ' [' → logprob: -16.625022888183594
    8. '(' → logprob: -17.000022888183594
    9. '6' → logprob: -17.375022888183594
    10. '\[' → logprob: -17.500022888183594

Token 48: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -7.584239938296378e-06
    2. '5' → logprob: -12.625007629394531
    3. ' ' → logprob: -12.625007629394531
    4. ']' → logprob: -14.750007629394531
    5. '-' → logprob: -16.06250762939453
    6. '   ' → logprob: -16.43750762939453
    7. '0' → logprob: -16.75000762939453
    8. '４' → logprob: -17.00000762939453
    9. '```' → logprob: -17.62500762939453
    10. '(' → logprob: -17.87500762939453

Token 49: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006463141762651503
    2. ')' → logprob: -7.750646114349365
    3. '])' → logprob: -8.750646591186523
    4. ' ]' → logprob: -10.125646591186523
    5. '[' → logprob: -11.375646591186523
    6. '}' → logprob: -13.000646591186523
    7. '']' → logprob: -13.750646591186523
    8. ')]' → logprob: -14.250646591186523
    9. ' )' → logprob: -15.375646591186523
    10. ']

' → logprob: -15.875646591186523

Token 50: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00026872646412812173
    2. 'print' → logprob: -8.250268936157227
    3. ' if' → logprob: -12.500268936157227
    4. 'i' → logprob: -13.375268936157227
    5. '#' → logprob: -14.000268936157227
    6. 'If' → logprob: -14.500268936157227
    7. 'for' → logprob: -15.125268936157227
    8. '```' → logprob: -15.750268936157227
    9. '.' → logprob: -16.250268936157227
    10. '
' → logprob: -16.875268936157227

Token 51: ' U' (ID: 601)
  Prédit: ' U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' U' → logprob: -0.38696545362472534
    2. 'U' → logprob: -1.1369655132293701
    3. ' S' → logprob: -10.63696575164795
    4. ' ' → logprob: -10.63696575164795
    5. 'S' → logprob: -11.01196575164795
    6. ' A' → logprob: -11.38696575164795
    7. 'A' → logprob: -11.76196575164795
    8. ' ' → logprob: -13.13696575164795
    9. ' T' → logprob: -13.26196575164795
    10. '	U' → logprob: -13.44946575164795

Token 52: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.011092393659055233
    2. '==' → logprob: -4.511092185974121
    3. ' =' → logprob: -11.261092185974121
    4. '=' → logprob: -11.636092185974121
    5. '[' → logprob: -12.136092185974121
    6. ' ' → logprob: -12.886092185974121
    7. ' !=' → logprob: -13.261092185974121
    8. ')' → logprob: -13.386092185974121
    9. ' "' → logprob: -13.511092185974121
    10. ' =='' → logprob: -13.511092185974121

Token 53: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.026811782270669937
    2. ''S' → logprob: -4.401811599731445
    3. '"S' → logprob: -4.401811599731445
    4. ' S' → logprob: -6.526811599731445
    5. ''' → logprob: -8.026811599731445
    6. '"' → logprob: -9.651811599731445
    7. 'T' → logprob: -10.651811599731445
    8. ''s' → logprob: -10.651811599731445
    9. ' '' → logprob: -11.276811599731445
    10. ' ' → logprob: -11.401811599731445

Token 54: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00010032468708232045
    2. ':A' → logprob: -9.750100135803223
    3. '':' → logprob: -11.250100135803223
    4. ' :' → logprob: -11.625100135803223
    5. ':S' → logprob: -12.375100135803223
    6. ':
' → logprob: -12.625100135803223
    7. '':'' → logprob: -12.750100135803223
    8. '":' → logprob: -12.750100135803223
    9. ':**' → logprob: -13.000100135803223
    10. '.' → logprob: -14.625100135803223

Token 55: '   ' (ID: 271)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -5.5577775128767826e-06
    2. 'print' → logprob: -12.625005722045898
    3. ' A' → logprob: -14.125005722045898
    4. 'str' → logprob: -15.000005722045898
    5. '=A' → logprob: -15.000005722045898
    6. 'a' → logprob: -15.250005722045898
    7. 'B' → logprob: -15.625005722045898
    8. '   ' → logprob: -15.625005722045898
    9. 'C' → logprob: -16.6250057220459
    10. '```' → logprob: -17.0000057220459

Token 56: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.11285627633333206
    2. 'print' → logprob: -2.237856388092041
    3. '   ' → logprob: -11.612855911254883
    4. ' A' → logprob: -11.862855911254883
    5. 'str' → logprob: -11.987855911254883
    6. 'a' → logprob: -12.612855911254883
    7. ' print' → logprob: -12.612855911254883
    8. 'C' → logprob: -13.112855911254883
    9. 'r' → logprob: -14.362855911254883
    10. 'B' → logprob: -15.487855911254883

Token 57: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.04135875403881073
    2. ' -=' → logprob: -3.666358709335327
    3. '-' → logprob: -4.416358947753906
    4. '=' → logprob: -6.041358947753906
    5. '+=' → logprob: -7.666358947753906
    6. '*=' → logprob: -11.916358947753906
    7. ' =' → logprob: -12.541358947753906
    8. ' +=' → logprob: -12.541358947753906
    9. '=-' → logprob: -13.666358947753906
    10. ' -' → logprob: -13.916358947753906

Token 58: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4868770196917467e-05
    2. ' ' → logprob: -10.625024795532227
    3. 'a' → logprob: -15.125024795532227
    4. '   ' → logprob: -16.375024795532227
    5. 'A' → logprob: -16.750024795532227
    6. '' → logprob: -17.500024795532227
    7. '  ' → logprob: -18.125024795532227
    8. '0' → logprob: -18.500024795532227
    9. '```' → logprob: -18.500024795532227
    10. '10' → logprob: -18.625024795532227

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -13.12500286102295
    3. 'a' → logprob: -14.12500286102295
    4. 'A' → logprob: -15.62500286102295
    5. '   ' → logprob: -16.500003814697266
    6. '' → logprob: -16.625003814697266
    7. '10' → logprob: -17.500003814697266
    8. '  ' → logprob: -17.750003814697266
    9. '```' → logprob: -17.750003814697266
    10. '5' → logprob: -18.250003814697266

Token 60: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -6.392202976712724e-06
    2. 'elif' → logprob: -12.250006675720215
    3. ' else' → logprob: -13.375006675720215
    4. '```' → logprob: -17.8750057220459
    5. 'print' → logprob: -18.2500057220459
    6. 'els' → logprob: -18.6250057220459
    7. '_else' → logprob: -19.2500057220459
    8. '#else' → logprob: -19.8750057220459
    9. '}else' → logprob: -20.5000057220459
    10. 'elses' → logprob: -20.7500057220459

Token 61: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -3.011373155459296e-05
    2. 'elif' → logprob: -10.500030517578125
    3. ' else' → logprob: -12.875030517578125
    4. '```' → logprob: -18.875030517578125
    5. 'otherwise' → logprob: -19.250030517578125
    6. '_else' → logprob: -20.125030517578125
    7. 'Else' → logprob: -20.625030517578125
    8. '#else' → logprob: -20.750030517578125
    9. 'print' → logprob: -21.125030517578125
    10. '}else' → logprob: -21.750030517578125

Token 62: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003168737457599491
    2. ':
' → logprob: -8.125316619873047
    3. '   ' → logprob: -11.750316619873047
    4. '{' → logprob: -12.750316619873047
    5. '  ' → logprob: -13.000316619873047
    6. ' :' → logprob: -13.375316619873047
    7. 'B' → logprob: -13.500316619873047
    8. ',' → logprob: -14.000316619873047
    9. ':
' → logprob: -14.250316619873047
    10. '```' → logprob: -14.500316619873047

Token 63: '   ' (ID: 271)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.28699153661727905
    2. '   ' → logprob: -1.9119915962219238
    3. ' B' → logprob: -2.286991596221924
    4. ':' → logprob: -10.536991119384766
    5. '<|end|>' → logprob: -10.536991119384766
    6. '  ' → logprob: -11.286991119384766
    7. '    ' → logprob: -11.411991119384766
    8. ' ' → logprob: -11.661991119384766
    9. '```' → logprob: -11.911991119384766
    10. '1' → logprob: -12.161991119384766

Token 64: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.0001322639436693862
    2. ' B' → logprob: -9.62513256072998
    3. '   ' → logprob: -9.62513256072998
    4. '<|end|>' → logprob: -17.500131607055664
    5. '>B' → logprob: -17.750131607055664
    6. 'b' → logprob: -17.875131607055664
    7. '  ' → logprob: -18.250131607055664
    8. '	B' → logprob: -18.625131607055664
    9. '```' → logprob: -18.625131607055664
    10. '    ' → logprob: -18.875131607055664

Token 65: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.20578524470329285
    2. ' -=' → logprob: -1.7057852745056152
    3. '-' → logprob: -5.455785274505615
    4. '=' → logprob: -9.330784797668457
    5. ' ' → logprob: -14.205784797668457
    6. ' -' → logprob: -14.580784797668457
    7. '   ' → logprob: -14.955784797668457
    8. '+=' → logprob: -15.205784797668457
    9. '```' → logprob: -15.330784797668457
    10. '<|end|>' → logprob: -16.830785751342773

Token 66: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -17.875051498413086
    4. '<|end|>' → logprob: -18.875051498413086
    5. '```' → logprob: -19.125051498413086
    6. '  ' → logprob: -19.625051498413086
    7. '１' → logprob: -20.125051498413086
    8. '0' → logprob: -20.500051498413086
    9. '2' → logprob: -21.312551498413086
    10. '-' → logprob: -21.562551498413086

Token 67: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -19.875
    4. '```' → logprob: -20.125
    5. '<|end|>' → logprob: -20.375
    6. '１' → logprob: -21.25
    7. '۱' → logprob: -21.75
    8. '-' → logprob: -22.125
    9. '১' → logprob: -22.1875
    10. '  ' → logprob: -22.375

Token 68: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001211783615872264
    2. '
' → logprob: -6.751211643218994
    3. ' print' → logprob: -10.126212120056152
    4. '

' → logprob: -14.751212120056152
    5. '  
' → logprob: -14.751212120056152
    6. '```' → logprob: -15.001212120056152
    7. ' 
' → logprob: -15.126212120056152
    8. '
' → logprob: -16.251211166381836
    9. '    
' → logprob: -16.376211166381836
    10. '``' → logprob: -17.876211166381836

Token 69: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '
' → logprob: -15.875
    3. ' print' → logprob: -17.125
    4. '```' → logprob: -17.5
    5. 'pr' → logprob: -19.375
    6. 'prin' → logprob: -20.0
    7. 'printf' → logprob: -20.125
    8. '  
' → logprob: -20.375
    9. '``' → logprob: -20.625
    10. '#print' → logprob: -20.75

Token 70: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.010843590833246708
    2. '(' → logprob: -4.635843753814697
    3. '(f' → logprob: -6.885843753814697
    4. '(a' → logprob: -10.010843276977539
    5. '("' → logprob: -11.760843276977539
    6. '('' → logprob: -12.010843276977539
    7. '((' → logprob: -13.010843276977539
    8. 'A' → logprob: -13.760843276977539
    9. '(str' → logprob: -14.510843276977539
    10. '()' → logprob: -14.635843276977539

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008707583881914616
    2. ',B' → logprob: -5.008707523345947
    3. ' ,' → logprob: -6.258707523345947
    4. ')' → logprob: -9.758708000183105
    5. ',b' → logprob: -11.508708000183105
    6. ' B' → logprob: -12.508708000183105
    7. ',end' → logprob: -13.008708000183105
    8. ' ' → logprob: -13.383708000183105
    9. 'B' → logprob: -14.383708000183105
    10. ',A' → logprob: -15.633708000183105

Token 72: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -2.7610454708337784e-05
    2. ' B' → logprob: -10.500027656555176
    3. ' ' → logprob: -19.12502670288086
    4. '   ' → logprob: -19.75002670288086
    5. ',' → logprob: -19.87502670288086
    6. ')' → logprob: -19.87502670288086
    7. '"B' → logprob: -19.87502670288086
    8. ',B' → logprob: -20.00002670288086
    9. '    ' → logprob: -20.25002670288086
    10. '  ' → logprob: -20.62502670288086

Token 73: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: 0.0
    2. ' )' → logprob: -17.75
    3. ')`' → logprob: -19.125
    4. '),' → logprob: -19.875
    5. ')
' → logprob: -20.25
    6. ',)' → logprob: -21.25
    7. ')#' → logprob: -21.5
    8. '))' → logprob: -21.75
    9. ').' → logprob: -21.875
    10. '')' → logprob: -22.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 71
Tokens correctement prédits (1ère position, stricte): 30
Tokens correctement prédits (1ère position, avec adaptation): 32
Tokens correctement prédits (top 10): 59
Précision stricte (1ère position): 42.25%
Précision adaptée (1ère position): 45.07%
Précision (top 10): 83.10%
================================================================================
