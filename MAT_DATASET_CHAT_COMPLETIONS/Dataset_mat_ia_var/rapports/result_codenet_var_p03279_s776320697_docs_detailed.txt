================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from bisect import bisect
from collections import defaultdict

class Bit:
    """
    Implementation of a Binary Indexed Tree (Fenwick Tree) to efficiently handle prefix sums and updates modulo MOD.
    
    Attributes:
        size (int): The size of the Fenwick Tree.
        tree (List[int]): Internal storage for the Fenwick Tree, 1-based index.
        depth (int): Bit length of size to facilitate efficient traversals.
        mod (int): The modulo value for all operations.
    """
    def __init__(self, n, MOD):
        """
        Initialize the BIT structure.
        
        Args:
            n (int): The maximum size of the tree.
            MOD (int): The modulo applied for every update/sum.
        """
        self.size = n
        self.tree = [0] * (n + 1)  # 1-based indexing
        self.depth = n.bit_length()  # Needed for lower_bound
        self.mod = MOD

    def sum(self, i):
        """
        Compute the prefix sum of elements from 1 to i (inclusive) with modulo.
        
        Args:
            i (int): Index up to which the prefix sum is computed.
        
        Returns:
            int: The prefix sum from 1 to i modulo self.mod.
        """
        s = 0
        while i > 0:
            s += self.tree[i]
            i -= i & -i
        return s % self.mod

    def add(self, i, x):
        """
        Add value x to element at index i.
        
        Args:
            i (int): The index to which x will be added (1-based).
            x (int): The value to add (modulo self.mod will be used).
        """
        while i <= self.size:
            self.tree[i] = (self.tree[i] + x) % self.mod
            i += i & -i

    def debug_print(self):
        """
        Print the internal state of the tree for debugging.
        Each entry is indented according to its lowest set bit.
        """
        for i in range(1, self.size + 1):
            j = (i & -i).bit_length()
            print('  ' * j, self.tree[i])

    def lower_bound(self, x):
        """
        Finds the smallest index such that the prefix sum >= x.
        
        Args:
            x (int): The threshold sum.
        
        Returns:
            tuple (int, int): Index where prefix sum first exceeds x, and sum up to just before.
        """
        sum_ = 0
        pos = 0
        for i in range(self.depth, -1, -1):
            k = pos + (1 << i)
            if k <= self.size and sum_ + self.tree[k] < x:
                sum_ += self.tree[k]
                pos += 1 << i
        return pos + 1, sum_

# Main section: reading and preprocessing inputs
n, m = map(int, input().split())
xxx = list(map(int, input().split()))  # List of n values (e.g., possible x-positions)
yyy = list(map(int, input().split()))  # List of m values (e.g., fixed y-positions)

ab = defaultdict(set)  # Mapping from a-values to a set of b-values
coordinates = set()    # Unique b-values across all entries

# Build table linking each relevant x in xxx to its neighbors in yyy
for x in xxx:
    # Skip x if it is outside the range of yyy
    if x < yyy[0] or yyy[-1] < x:
        continue
    i = bisect(yyy, x)
    a = x - yyy[i - 1]
    b = yyy[i] - x
    ab[a].add(b)        # Map distance a to set of b
    coordinates.add(b)  # Collect all b's (for coordinate compression)

# Compress b coordinates; start at index 2 to allow a zero-index entry in BIT
cor_dict = {b: i for i, b in enumerate(sorted(coordinates), start=2)}
cdg = cor_dict.get     # Shorthand for coordinate mapping

MOD = 10 ** 9 + 7      # Large prime modulo for answers

# Initialize BIT/Fenwick Tree (index 0 left unused; index 1 is intentionally used as "zero" in this logic)
bit = Bit(len(coordinates) + 1, MOD)
bit.add(1, 1)  # Initial state: one way at the first position

# Main DP-like update loop: iterate over sorted a's, for each update BIT for b's
for a in sorted(ab):
    # For each a, process its b's (sorted descending to avoid double counting)
    bbb = sorted(map(cdg, ab[a]), reverse=True)
    for b in bbb:
        # Count number of ways to reach up to (b - 1), and add that to position b
        bit.add(b, bit.sum(b - 1))

# Output the total number of ways for the largest position in BIT
print(bit.sum(bit.size))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' bis' (ID: 7204)
  → Token d'amorce (pas de prédiction)

Token 2: 'ect' (ID: 534)
  → Token d'amorce (pas de prédiction)

Token 3: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.055610984563827515
    2. 'import' → logprob: -2.9306108951568604
    3. '.' → logprob: -7.4306111335754395
    4. ' ' → logprob: -9.555610656738281
    5. '_import' → logprob: -10.805610656738281
    6. '.import' → logprob: -11.055610656738281
    7. '_' → logprob: -11.680610656738281
    8. ' .' → logprob: -11.805610656738281
    9. '```' → logprob: -12.430610656738281
    10. '	import' → logprob: -13.305610656738281

Token 4: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.043759625405073166
    2. 'ins' → logprob: -3.29375958442688
    3. ' bis' → logprob: -5.168759822845459
    4. ' ins' → logprob: -12.1687593460083
    5. 'b' → logprob: -12.9187593460083
    6. '```' → logprob: -13.7937593460083
    7. '_ins' → logprob: -14.4187593460083
    8. '*' → logprob: -15.4187593460083
    9. '.ins' → logprob: -15.5437593460083
    10. 'in' → logprob: -16.168760299682617

Token 5: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.0019508942496031523
    2. 'e' → logprob: -6.251950740814209
    3. 'ec' → logprob: -11.126951217651367
    4. 'ct' → logprob: -12.626951217651367
    5. 'ectl' → logprob: -13.626951217651367
    6. 'ext' → logprob: -14.251951217651367
    7. 't' → logprob: -14.626951217651367
    8. 'sect' → logprob: -14.626951217651367
    9. 'ected' → logprob: -14.876951217651367
    10. 'n' → logprob: -15.376951217651367

Token 6: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1965227872133255
    2. '.' → logprob: -1.821522831916809
    3. '_' → logprob: -4.1965227127075195
    4. ' (' → logprob: -7.6965227127075195
    5. '._' → logprob: -7.9465227127075195
    6. '_left' → logprob: -8.07152271270752
    7. '`' → logprob: -9.69652271270752
    8. '"' → logprob: -9.82152271270752
    9. '(_)' → logprob: -9.94652271270752
    10. '```' → logprob: -9.94652271270752

Token 7: 'from' (ID: 2845)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.29482683539390564
    2. '(' → logprob: -1.419826865196228
    3. '.' → logprob: -4.544826984405518
    4. '._' → logprob: -7.669826984405518
    5. ' (' → logprob: -7.919826984405518
    6. '"' → logprob: -8.29482650756836
    7. ',' → logprob: -8.54482650756836
    8. '_left' → logprob: -8.54482650756836
    9. '(
' → logprob: -8.79482650756836
    10. '_

' → logprob: -9.04482650756836

Token 8: ' collections' (ID: 22690)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.1334393471479416
    2. ' collections' → logprob: -3.383439302444458
    3. 'math' → logprob: -3.758439302444458
    4. ' sys' → logprob: -3.758439302444458
    5. ' itertools' → logprob: -4.008439540863037
    6. 'collections' → logprob: -4.633439540863037
    7. ' typing' → logprob: -5.508439540863037
    8. ' heap' → logprob: -5.633439540863037
    9. 'sys' → logprob: -5.633439540863037
    10. 'heap' → logprob: -6.258439540863037

Token 9: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3192615211009979
    2. ' import' → logprob: -1.3192615509033203
    3. '.' → logprob: -5.44426155090332
    4. '<|end|>' → logprob: -6.94426155090332
    5. ' ' → logprob: -7.81926155090332
    6. '```' → logprob: -8.81926155090332
    7. '.Counter' → logprob: -10.56926155090332
    8. ' defaultdict' → logprob: -10.69426155090332
    9. '.import' → logprob: -10.69426155090332
    10. '_import' → logprob: -10.94426155090332

Token 10: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.9172675609588623
    2. ' deque' → logprob: -1.5422675609588623
    3. ' abc' → logprob: -1.6672675609588623
    4. 'deque' → logprob: -1.7922675609588623
    5. 'abc' → logprob: -3.5422675609588623
    6. ' named' → logprob: -7.167267799377441
    7. ' import' → logprob: -8.292267799377441
    8. ' ' → logprob: -8.542267799377441
    9. 'import' → logprob: -8.542267799377441
    10. '```' → logprob: -8.667267799377441

Token 11: '

' (ID: 279)
  Prédit: '_

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_

' → logprob: -0.7378116846084595
    2. '

' → logprob: -1.1128116846084595
    3. '
' → logprob: -2.73781156539917
    4. '(' → logprob: -3.36281156539917
    5. '_' → logprob: -3.98781156539917
    6. '\n' → logprob: -4.48781156539917
    7. '(

' → logprob: -4.73781156539917
    8. '`

' → logprob: -4.86281156539917
    9. '_
' → logprob: -4.98781156539917
    10. '
' → logprob: -5.23781156539917

Token 12: 'class' (ID: 1444)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07307133078575134
    2. '(
' → logprob: -3.198071241378784
    3. 'def' → logprob: -4.448071479797363
    4. 'd' → logprob: -4.698071479797363
    5. '_' → logprob: -5.823071479797363
    6. '\' → logprob: -6.448071479797363
    7. '```' → logprob: -7.448071479797363
    8. 'de' → logprob: -7.573071479797363
    9. '(

' → logprob: -8.073071479797363
    10. 'default' → logprob: -8.323071479797363

Token 13: ' Bit' (ID: 9422)
  Prédit: ' Sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Sorted' → logprob: -0.8894166350364685
    2. ' ' → logprob: -1.0144166946411133
    3. ' Binary' → logprob: -3.1394166946411133
    4. ' Mult' → logprob: -3.2644166946411133
    5. ' Segment' → logprob: -3.8894166946411133
    6. ' Ordered' → logprob: -4.014416694641113
    7. ' S' → logprob: -4.139416694641113
    8. ' Default' → logprob: -4.264416694641113
    9. ' Trie' → logprob: -4.264416694641113
    10. ' Sparse' → logprob: -4.889416694641113

Token 14: ':
' (ID: 734)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.1284514218568802
    2. ':' → logprob: -2.503451347351074
    3. '   ' → logprob: -5.003451347351074
    4. 'set' → logprob: -5.253451347351074
    5. ' :' → logprob: -5.503451347351074
    6. ' ' → logprob: -5.503451347351074
    7. 'vector' → logprob: -5.628451347351074
    8. 'array' → logprob: -5.628451347351074
    9. '  ' → logprob: -6.128451347351074
    10. ' Vector' → logprob: -6.253451347351074

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036481816321611404
    2. '    ' → logprob: -4.036481857299805
    3. ':' → logprob: -4.286481857299805
    4. ' def' → logprob: -6.411481857299805
    5. '    
' → logprob: -7.161481857299805
    6. ' 
' → logprob: -7.911481857299805
    7. 'def' → logprob: -7.911481857299805
    8. '```' → logprob: -8.036481857299805
    9. ' :' → logprob: -8.661481857299805
    10. ' ' → logprob: -8.911481857299805

Token 16: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10175460577011108
    2. ':' → logprob: -2.601754665374756
    3. '(object' → logprob: -5.351754665374756
    4. '(' → logprob: -5.851754665374756
    5. '```' → logprob: -5.851754665374756
    6. '    ' → logprob: -5.976754665374756
    7. 'def' → logprob: -5.976754665374756
    8. ' ' → logprob: -6.351754665374756
    9. ' def' → logprob: -6.851754665374756
    10. '  ' → logprob: -7.101754665374756

Token 17: '   ' (ID: 271)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.5681334733963013
    2. ' Binary' → logprob: -1.5681334733963013
    3. '   ' → logprob: -1.9431334733963013
    4. ' A' → logprob: -2.3181333541870117
    5. 'Binary' → logprob: -2.4431333541870117
    6. ' """' → logprob: -2.6931333541870117
    7. 'Fen' → logprob: -3.4431333541870117
    8. 'B' → logprob: -4.443133354187012
    9. ' Fen' → logprob: -4.568133354187012
    10. ' Implements' → logprob: -4.568133354187012

Token 18: ' Implementation' (ID: 60216)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5857646465301514
    2. ' A' → logprob: -1.3357646465301514
    3. 'Fen' → logprob: -2.9607646465301514
    4. ' """' → logprob: -3.4607646465301514
    5. '   ' → logprob: -3.5857646465301514
    6. ' Fen' → logprob: -4.0857648849487305
    7. ' Binary' → logprob: -4.5857648849487305
    8. ' Implements' → logprob: -4.7107648849487305
    9. 'Binary' → logprob: -4.9607648849487305
    10. '#' → logprob: -5.2107648849487305

Token 19: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.727593719959259
    2. '<|end|>' → logprob: -1.1025936603546143
    3. '   ' → logprob: -2.4775936603546143
    4. ' ' → logprob: -2.8525936603546143
    5. '<|end|>' → logprob: -3.4775936603546143
    6. '  ' → logprob: -5.352593898773193
    7. 'of' → logprob: -6.227593898773193
    8. ' for' → logprob: -6.727593898773193
    9. '(' → logprob: -7.477593898773193
    10. ' (' → logprob: -7.602593898773193

Token 20: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.010639104060828686
    2. ' Fen' → logprob: -5.010639190673828
    3. 'Fen' → logprob: -6.510639190673828
    4. ' fen' → logprob: -6.510639190673828
    5. ' the' → logprob: -7.635639190673828
    6. ' an' → logprob: -8.510639190673828
    7. 'a' → logprob: -9.760639190673828
    8. 'fen' → logprob: -9.760639190673828
    9. ' Binary' → logprob: -10.010639190673828
    10. ' ' → logprob: -10.260639190673828

Token 21: ' Binary' (ID: 32672)
  Prédit: ' Binary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Binary' → logprob: -0.4213472008705139
    2. ' Fen' → logprob: -1.2963471412658691
    3. 'Fen' → logprob: -3.546347141265869
    4. ' fen' → logprob: -4.046347141265869
    5. ' binary' → logprob: -4.046347141265869
    6. ' ' → logprob: -5.546347141265869
    7. 'Binary' → logprob: -6.046347141265869
    8. 'fen' → logprob: -9.046347618103027
    9. '(Binary' → logprob: -10.296347618103027
    10. 'binary' → logprob: -10.921347618103027

Token 22: ' Indexed' (ID: 158810)
  Prédit: ' Indexed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Indexed' → logprob: -0.07002101838588715
    2. ' ' → logprob: -3.320020914077759
    3. 'Indexed' → logprob: -3.820020914077759
    4. ' indexed' → logprob: -5.195021152496338
    5. '  ' → logprob: -6.195021152496338
    6. ' Index' → logprob: -7.195021152496338
    7. 'Index' → logprob: -7.945021152496338
    8. '   ' → logprob: -8.44502067565918
    9. 'I' → logprob: -8.82002067565918
    10. 't' → logprob: -9.57002067565918

Token 23: ' Tree' (ID: 14224)
  Prédit: ' Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Tree' → logprob: -0.07919027656316757
    2. 'Tree' → logprob: -2.579190254211426
    3. ' ' → logprob: -8.329190254211426
    4. '  ' → logprob: -10.079190254211426
    5. ' tree' → logprob: -11.454190254211426
    6. '   ' → logprob: -12.829190254211426
    7. '	Tree' → logprob: -13.329190254211426
    8. '-' → logprob: -14.579190254211426
    9. 'tree' → logprob: -15.079190254211426
    10. '(Tree' → logprob: -15.079190254211426

Token 24: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.04533733054995537
    2. ' for' → logprob: -3.920337438583374
    3. '   ' → logprob: -4.795337200164795
    4. ' or' → logprob: -5.545337200164795
    5. '(Bit' → logprob: -6.170337200164795
    6. '(F' → logprob: -6.420337200164795
    7. '(Binary' → logprob: -6.545337200164795
    8. '<|end|>' → logprob: -6.670337200164795
    9. '```' → logprob: -6.795337200164795
    10. ' to' → logprob: -7.045337200164795

Token 25: 'Fen' (ID: 155141)
  Prédit: 'Fen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fen' → logprob: -0.015326136723160744
    2. ' Fen' → logprob: -4.265326023101807
    3. ')' → logprob: -7.515326023101807
    4. 'fen' → logprob: -9.015326499938965
    5. ' fen' → logprob: -9.390326499938965
    6. '   ' → logprob: -9.390326499938965
    7. 'or' → logprob: -9.890326499938965
    8. 'F' → logprob: -9.890326499938965
    9. '```' → logprob: -10.015326499938965
    10. ' or' → logprob: -10.140326499938965

Token 26: 'wick' (ID: 14105)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.10051148384809494
    2. 'wick' → logprob: -2.3505115509033203
    3. '   ' → logprob: -8.97551155090332
    4. '```' → logprob: -9.22551155090332
    5. '       ' → logprob: -11.35051155090332
    6. 'wik' → logprob: -11.47551155090332
    7. ' wick' → logprob: -11.60051155090332
    8. ')' → logprob: -11.72551155090332
    9. ' w' → logprob: -11.85051155090332
    10. '  ' → logprob: -12.10051155090332

Token 27: ' Tree' (ID: 14224)
  Prédit: ' Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Tree' → logprob: -0.07846743613481522
    2. 'Tree' → logprob: -2.82846736907959
    3. ')' → logprob: -4.32846736907959
    4. ' ' → logprob: -6.57846736907959
    5. '  ' → logprob: -7.07846736907959
    6. '	Tree' → logprob: -7.95346736907959
    7. '   ' → logprob: -8.57846736907959
    8. ' )' → logprob: -8.57846736907959
    9. '_T' → logprob: -10.20346736907959
    10. ' tree' → logprob: -10.20346736907959

Token 28: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016551809676457196
    2. ' for' → logprob: -9.125165939331055
    3. '   ' → logprob: -10.875165939331055
    4. ')
' → logprob: -11.250165939331055
    5. ').' → logprob: -11.375165939331055
    6. '<|end|>' → logprob: -12.875165939331055
    7. '```' → logprob: -13.125165939331055
    8. ' )' → logprob: -13.250165939331055
    9. ' ' → logprob: -14.125165939331055
    10. ' data' → logprob: -14.250165939331055

Token 29: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03258921205997467
    2. ' for' → logprob: -3.9075891971588135
    3. '   ' → logprob: -5.157589435577393
    4. '):' → logprob: -6.032589435577393
    5. '<|end|>' → logprob: -7.282589435577393
    6. '):
' → logprob: -7.407589435577393
    7. '
' → logprob: -7.657589435577393
    8. '```' → logprob: -7.657589435577393
    9. '  ' → logprob: -8.407588958740234
    10. ' ' → logprob: -8.407588958740234

Token 30: ' efficiently' (ID: 34229)
  Prédit: ' support'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' support' → logprob: -0.02118319272994995
    2. ' provide' → logprob: -5.021183013916016
    3. ' update' → logprob: -5.021183013916016
    4. ' efficiently' → logprob: -5.396183013916016
    5. ' maintain' → logprob: -6.771183013916016
    6. ' ' → logprob: -7.396183013916016
    7. ' help' → logprob: -7.896183013916016
    8. ' supports' → logprob: -8.021183013916016
    9. ' facilitate' → logprob: -8.771183013916016
    10. ' perform' → logprob: -8.896183013916016

Token 31: ' handle' (ID: 5318)
  Prédit: ' update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.16959339380264282
    2. ' support' → logprob: -2.419593334197998
    3. ' perform' → logprob: -3.794593334197998
    4. ' handle' → logprob: -4.044593334197998
    5. 'update' → logprob: -4.294593334197998
    6. ' manage' → logprob: -5.294593334197998
    7. ' maintain' → logprob: -5.919593334197998
    8. 'support' → logprob: -5.919593334197998
    9. ' ' → logprob: -6.919593334197998
    10. ' process' → logprob: -7.794593334197998

Token 32: ' prefix' (ID: 18633)
  Prédit: ' updates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' updates' → logprob: -1.0890647172927856
    2. ' range' → logprob: -1.2140647172927856
    3. ' prefix' → logprob: -1.9640647172927856
    4. ' update' → logprob: -2.339064598083496
    5. ' cumulative' → logprob: -2.714064598083496
    6. ' point' → logprob: -3.464064598083496
    7. '  ' → logprob: -4.964064598083496
    8. ' updating' → logprob: -5.589064598083496
    9. ' ' → logprob: -5.714064598083496
    10. ' queries' → logprob: -5.964064598083496

Token 33: ' sums' (ID: 73121)
  Prédit: ' sums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sums' → logprob: -0.10565932840108871
    2. ' sum' → logprob: -3.480659246444702
    3. '_sum' → logprob: -3.480659246444702
    4. '_s' → logprob: -3.855659246444702
    5. 's' → logprob: -4.730659484863281
    6. 'sum' → logprob: -5.355659484863281
    7. '_' → logprob: -5.980659484863281
    8. ' ' → logprob: -7.355659484863281
    9. ' _' → logprob: -7.605659484863281
    10. '   ' → logprob: -8.105659484863281

Token 34: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0863991379737854
    2. ' and' → logprob: -2.9613990783691406
    3. '  ' → logprob: -4.211399078369141
    4. ')' → logprob: -5.336399078369141
    5. ' ' → logprob: -5.836399078369141
    6. ' for' → logprob: -6.336399078369141
    7. 's' → logprob: -6.586399078369141
    8. '.' → logprob: -6.711399078369141
    9. 'and' → logprob: -7.211399078369141
    10. ' operations' → logprob: -7.336399078369141

Token 35: ' updates' (ID: 12663)
  Prédit: ' updates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' updates' → logprob: -0.11624915152788162
    2. ' update' → logprob: -2.2412490844726562
    3. 'updates' → logprob: -6.241249084472656
    4. ' point' → logprob: -6.866249084472656
    5. 'update' → logprob: -8.366249084472656
    6. ' range' → logprob: -8.741249084472656
    7. 'range' → logprob: -11.616249084472656
    8. ' updating' → logprob: -12.116249084472656
    9. ' queries' → logprob: -12.366249084472656
    10. '_updates' → logprob: -12.741249084472656

Token 36: ' modulo' (ID: 112372)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04823233187198639
    2. '.' → logprob: -3.673232316970825
    3. '```' → logprob: -4.923232555389404
    4. ' operations' → logprob: -5.173232555389404
    5. ' for' → logprob: -5.673232555389404
    6. '"""' → logprob: -7.423232555389404
    7. ')' → logprob: -7.548232555389404
    8. 'operations' → logprob: -7.548232555389404
    9. 's' → logprob: -7.673232555389404
    10. '  ' → logprob: -7.798232555389404

Token 37: ' MOD' (ID: 32868)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09211837500333786
    2. '10' → logprob: -3.467118263244629
    3. '100' → logprob: -3.842118263244629
    4. ' (' → logprob: -4.092118263244629
    5. ' a' → logprob: -4.717118263244629
    6. ' \(' → logprob: -5.592118263244629
    7. ' the' → logprob: -6.217118263244629
    8. ' n' → logprob: -6.717118263244629
    9. '998' → logprob: -7.092118263244629
    10. 'n' → logprob: -8.842118263244629

Token 38: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46047812700271606
    2. '```' → logprob: -1.8354780673980713
    3. '   ' → logprob: -2.3354780673980713
    4. '"""' → logprob: -3.4604780673980713
    5. '.' → logprob: -3.5854780673980713
    6. ':' → logprob: -4.08547830581665
    7. '_' → logprob: -5.08547830581665
    8. '
' → logprob: -5.08547830581665
    9. ',' → logprob: -5.46047830581665
    10. ' ' → logprob: -5.71047830581665

Token 39: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09824838489294052
    2. '"""' → logprob: -2.7232484817504883
    3. '```' → logprob: -4.473248481750488
    4. ')' → logprob: -5.223248481750488
    5. '"""
' → logprob: -5.723248481750488
    6. '_' → logprob: -6.348248481750488
    7. ' """' → logprob: -6.723248481750488
    8. '"""

' → logprob: -6.723248481750488
    9. '"' → logprob: -6.973248481750488
    10. '
' → logprob: -7.223248481750488

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05761509761214256
    2. '```' → logprob: -3.182615041732788
    3. '"""' → logprob: -4.432615280151367
    4. ' """' → logprob: -6.432615280151367
    5. '\n' → logprob: -8.182615280151367
    6. ')' → logprob: -8.557615280151367
    7. '    
' → logprob: -8.682615280151367
    8. '  ' → logprob: -9.807615280151367
    9. ':' → logprob: -9.932615280151367
    10. '"""
' → logprob: -10.057615280151367

Token 41: ' Attributes' (ID: 70472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06200823932886124
    2. '```' → logprob: -3.4370081424713135
    3. 'MOD' → logprob: -3.9370081424713135
    4. '"""' → logprob: -5.562008380889893
    5. ' MOD' → logprob: -6.562008380889893
    6. 'class' → logprob: -7.562008380889893
    7. ' ' → logprob: -7.687008380889893
    8. '    ' → logprob: -7.812008380889893
    9. '"""
' → logprob: -7.812008380889893
    10. ' """' → logprob: -8.562007904052734

Token 42: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15448404848575592
    2. '<|end|>' → logprob: -2.4044840335845947
    3. '   ' → logprob: -4.029484272003174
    4. ' =' → logprob: -4.654484272003174
    5. '<|end|>' → logprob: -4.654484272003174
    6. ':
' → logprob: -4.904484272003174
    7. '```' → logprob: -6.029484272003174
    8. '=' → logprob: -6.279484272003174
    9. '[' → logprob: -6.404484272003174
    10. '
' → logprob: -7.029484272003174

Token 43: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.4716145396232605
    2. '   ' → logprob: -1.4716145992279053
    3. '```' → logprob: -2.0966145992279053
    4. ' ' → logprob: -5.346614360809326
    5. ' ```' → logprob: -5.471614360809326
    6. ')' → logprob: -5.721614360809326
    7. '       ' → logprob: -6.471614360809326
    8. '        ' → logprob: -6.596614360809326
    9. '<|end|>' → logprob: -6.596614360809326
    10. ':' → logprob: -6.721614360809326

Token 44: ' size' (ID: 2349)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3385177552700043
    2. 'int' → logprob: -2.588517665863037
    3. 'MOD' → logprob: -2.713517665863037
    4. 'mod' → logprob: -2.838517665863037
    5. ' MOD' → logprob: -3.838517665863037
    6. '       ' → logprob: -4.338517665863037
    7. '```' → logprob: -4.463517665863037
    8. ' int' → logprob: -4.713517665863037
    9. 'dict' → logprob: -5.088517665863037
    10. '    ' → logprob: -5.213517665863037

Token 45: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14795391261577606
    2. ' =' → logprob: -2.147953987121582
    3. '_' → logprob: -5.022953987121582
    4. ':' → logprob: -5.147953987121582
    5. '<|end|>' → logprob: -5.647953987121582
    6. '   ' → logprob: -6.272953987121582
    7. '<|end|>' → logprob: -6.897953987121582
    8. ')' → logprob: -7.522953987121582
    9. ',' → logprob: -7.647953987121582
    10. ' ' → logprob: -7.897953987121582

Token 46: 'int' (ID: 491)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03532911464571953
    2. '):' → logprob: -3.6603291034698486
    3. ':' → logprob: -5.660329341888428
    4. 'int' → logprob: -5.785329341888428
    5. ' )' → logprob: -6.910329341888428
    6. ':int' → logprob: -7.660329341888428
    7. '=int' → logprob: -8.03532886505127
    8. '=' → logprob: -8.78532886505127
    9. ' int' → logprob: -9.16032886505127
    10. ',' → logprob: -9.41032886505127

Token 47: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03393993526697159
    2. '):' → logprob: -3.408939838409424
    3. '=' → logprob: -9.158940315246582
    4. '):
' → logprob: -9.658940315246582
    5. '<|end|>' → logprob: -9.908940315246582
    6. ' )' → logprob: -10.658940315246582
    7. ':' → logprob: -11.408940315246582
    8. '   ' → logprob: -12.158940315246582
    9. '<|end|>' → logprob: -12.283940315246582
    10. ' ' → logprob: -12.533940315246582

Token 48: ' The' (ID: 623)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07540007680654526
    2. ')' → logprob: -3.0754001140594482
    3. '    ' → logprob: -4.950399875640869
    4. '   ' → logprob: -5.075399875640869
    5. '<|end|>' → logprob: -5.450399875640869
    6. ' )' → logprob: -5.575399875640869
    7. 'The' → logprob: -6.950399875640869
    8. ' The' → logprob: -7.075399875640869
    9. '```' → logprob: -7.700399875640869
    10. '  ' → logprob: -7.700399875640869

Token 49: ' size' (ID: 2349)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.7727329134941101
    2. ' size' → logprob: -1.2727329730987549
    3. ' ' → logprob: -2.147732973098755
    4. ' total' → logprob: -2.647732973098755
    5. ' maximum' → logprob: -3.147732973098755
    6. ' current' → logprob: -4.397732734680176
    7. ' space' → logprob: -5.022732734680176
    8. ' next' → logprob: -5.772732734680176
    9. ' length' → logprob: -6.397732734680176
    10. ' amount' → logprob: -6.647732734680176

Token 50: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4756140112876892
    2. ' of' → logprob: -1.850614070892334
    3. '   ' → logprob: -2.350614070892334
    4. ')' → logprob: -2.600614070892334
    5. ':' → logprob: -3.725614070892334
    6. ' =' → logprob: -4.225614070892334
    7. '_' → logprob: -5.975614070892334
    8. '    ' → logprob: -6.225614070892334
    9. ' ' → logprob: -6.350614070892334
    10. '<|end|>' → logprob: -6.350614070892334

Token 51: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.016688277944922447
    2. 'the' → logprob: -4.141688346862793
    3. ' ' → logprob: -7.391688346862793
    4. ' self' → logprob: -11.391688346862793
    5. '  ' → logprob: -12.391688346862793
    6. ' bit' → logprob: -12.641688346862793
    7. '   ' → logprob: -12.891688346862793
    8. '_' → logprob: -13.516688346862793
    9. ' array' → logprob: -13.516688346862793
    10. ')' → logprob: -13.641688346862793

Token 52: ' Fen' (ID: 48230)
  Prédit: ' array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' array' → logprob: -0.7246672511100769
    2. ' tree' → logprob: -0.8496672511100769
    3. 'array' → logprob: -3.7246673107147217
    4. 'Fen' → logprob: -4.474667072296143
    5. ' fen' → logprob: -4.599667072296143
    6. ' input' → logprob: -4.724667072296143
    7. 'tree' → logprob: -4.849667072296143
    8. ' data' → logprob: -5.224667072296143
    9. ' Fen' → logprob: -5.474667072296143
    10. ' underlying' → logprob: -5.724667072296143

Token 53: 'wick' (ID: 14105)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.2357872724533081
    2. '   ' → logprob: -2.3607873916625977
    3. 't' → logprob: -3.1107873916625977
    4. '```' → logprob: -3.9857873916625977
    5. ' w' → logprob: -4.235787391662598
    6. '  ' → logprob: -4.610787391662598
    7. '       ' → logprob: -4.860787391662598
    8. '	w' → logprob: -5.735787391662598
    9. '    ' → logprob: -5.860787391662598
    10. '``' → logprob: -6.110787391662598

Token 54: ' Tree' (ID: 14224)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.06440484523773193
    2. ' Tree' → logprob: -2.8144049644470215
    3. ' tree' → logprob: -6.1894049644470215
    4. ' ' → logprob: -8.939404487609863
    5. 'Array' → logprob: -8.939404487609863
    6. '	Tree' → logprob: -10.689404487609863
    7. '   ' → logprob: -10.814404487609863
    8. '_' → logprob: -11.314404487609863
    9. '_T' → logprob: -11.314404487609863
    10. '_tree' → logprob: -11.689404487609863

Token 55: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004040287341922522
    2. '<|end|>' → logprob: -6.254040241241455
    3. '   ' → logprob: -6.379040241241455
    4. '```' → logprob: -8.879040718078613
    5. ')
' → logprob: -9.379040718078613
    6. ' )' → logprob: -9.754040718078613
    7. '<|end|>' → logprob: -10.379040718078613
    8. '),' → logprob: -11.129040718078613
    9. '):
' → logprob: -11.254040718078613
    10. '}' → logprob: -11.629040718078613

Token 56: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21826013922691345
    2. ')' → logprob: -2.4682600498199463
    3. '```' → logprob: -2.5932600498199463
    4. '"""' → logprob: -3.7182600498199463
    5. '"""
' → logprob: -6.468260288238525
    6. '``' → logprob: -6.468260288238525
    7. '`' → logprob: -6.718260288238525
    8. '"' → logprob: -6.718260288238525
    9. '    ' → logprob: -6.718260288238525
    10. '\n' → logprob: -6.843260288238525

Token 57: ' tree' (ID: 8165)
  Prédit: ' tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.672540009021759
    2. 'data' → logprob: -2.5475399494171143
    3. 'mod' → logprob: -2.6725399494171143
    4. '```' → logprob: -2.6725399494171143
    5. ' data' → logprob: -2.9225399494171143
    6. '   ' → logprob: -3.1725399494171143
    7. ' bit' → logprob: -3.2975399494171143
    8. ' mod' → logprob: -3.5475399494171143
    9. 'MOD' → logprob: -3.6725399494171143
    10. 'tree' (adapté à ' tree') → logprob: -4.172540187835693

Token 58: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.49197882413864136
    2. ' (' → logprob: -1.6169788837432861
    3. ' ' → logprob: -2.366978883743286
    4. ':' → logprob: -2.866978883743286
    5. '   ' → logprob: -4.241978645324707
    6. '[' → logprob: -4.491978645324707
    7. '=' → logprob: -5.116978645324707
    8. '```' → logprob: -6.116978645324707
    9. '(' → logprob: -6.366978645324707
    10. '  ' → logprob: -6.491978645324707

Token 59: 'List' (ID: 950)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.030291538685560226
    2. ')' → logprob: -4.155291557312012
    3. ' list' → logprob: -4.905291557312012
    4. '[int' → logprob: -6.030291557312012
    5. 'int' → logprob: -6.530291557312012
    6. 'List' → logprob: -6.530291557312012
    7. '[list' → logprob: -6.905291557312012
    8. '(list' → logprob: -9.155291557312012
    9. '_list' → logprob: -9.405291557312012
    10. '[List' → logprob: -9.780291557312012

Token 60: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.00021152703266125172
    2. '<int' → logprob: -8.625211715698242
    3. ')' → logprob: -10.500211715698242
    4. '```' → logprob: -13.000211715698242
    5. '[' → logprob: -14.125211715698242
    6. 'int' → logprob: -14.750211715698242
    7. '[Int' → logprob: -15.250211715698242
    8. '):' → logprob: -15.375211715698242
    9. ']int' → logprob: -15.625211715698242
    10. '(int' → logprob: -16.125211715698242

Token 61: ']):' (ID: 60705)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.22607845067977905
    2. ']):' → logprob: -1.6010785102844238
    3. ']' → logprob: -7.726078510284424
    4. ')' → logprob: -10.101078033447266
    5. ']):
' → logprob: -10.101078033447266
    6. '])]' → logprob: -10.226078033447266
    7. ' ])' → logprob: -10.851078033447266
    8. ')]' → logprob: -11.226078033447266
    9. ']]' → logprob: -11.226078033447266
    10. ']])' → logprob: -11.351078033447266

Token 62: ' Internal' (ID: 24798)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09501566737890244
    2. ' [' → logprob: -2.97001576423645
    3. '[' → logprob: -4.095015525817871
    4. '<|end|>' → logprob: -4.220015525817871
    5. '    ' → logprob: -5.720015525817871
    6. ' []' → logprob: -6.345015525817871
    7. '[]' → logprob: -6.970015525817871
    8. '  ' → logprob: -7.595015525817871
    9. '[int' → logprob: -8.720015525817871
    10. '   ' → logprob: -8.720015525817871

Token 63: ' storage' (ID: 7928)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.759349524974823
    2. ')' → logprob: -1.6343495845794678
    3. '[' → logprob: -2.2593495845794678
    4. ' ' → logprob: -2.2593495845794678
    5. ' list' → logprob: -2.6343495845794678
    6. ' array' → logprob: -4.259349346160889
    7. '   ' → logprob: -4.759349346160889
    8. '```' → logprob: -5.134349346160889
    9. ' _' → logprob: -5.259349346160889
    10. '[List' → logprob: -5.634349346160889

Token 64: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.723125696182251
    2. ' of' → logprob: -0.973125696182251
    3. '   ' → logprob: -2.098125696182251
    4. '```' → logprob: -5.223125457763672
    5. '  ' → logprob: -6.598125457763672
    6. '[' → logprob: -6.598125457763672
    7. ':' → logprob: -7.098125457763672
    8. ')' → logprob: -7.098125457763672
    9. ' ' → logprob: -7.348125457763672
    10. '    ' → logprob: -7.473125457763672

Token 65: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.00429149204865098
    2. ' prefix' → logprob: -5.879291534423828
    3. 'the' → logprob: -7.754291534423828
    4. ' cumulative' → logprob: -7.879291534423828
    5. ' fen' → logprob: -8.254291534423828
    6. ' tree' → logprob: -8.879291534423828
    7. ' values' → logprob: -9.129291534423828
    8. ' Fen' → logprob: -9.254291534423828
    9. ' bit' → logprob: -11.004291534423828
    10. 'prefix' → logprob: -11.379291534423828

Token 66: ' Fen' (ID: 48230)
  Prédit: ' tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.3573271632194519
    2. ' fen' → logprob: -1.4823272228240967
    3. ' Fen' → logprob: -3.3573272228240967
    4. 'Fen' → logprob: -4.232326984405518
    5. ' values' → logprob: -4.857326984405518
    6. ' data' → logprob: -5.482326984405518
    7. 'fen' → logprob: -5.857326984405518
    8. ' prefix' → logprob: -5.857326984405518
    9. 'tree' → logprob: -6.107326984405518
    10. ' bit' → logprob: -6.732326984405518

Token 67: 'wick' (ID: 14105)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.16577230393886566
    2. '```' → logprob: -2.4157721996307373
    3. '       ' → logprob: -3.5407721996307373
    4. '   ' → logprob: -3.7907721996307373
    5. '``' → logprob: -5.540772438049316
    6. '[' → logprob: -6.290772438049316
    7. ')' → logprob: -6.790772438049316
    8. ']' → logprob: -7.040772438049316
    9. 'wick' → logprob: -7.040772438049316
    10. '**' → logprob: -8.040772438049316

Token 68: ' Tree' (ID: 14224)
  Prédit: ' Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Tree' → logprob: -0.15072597563266754
    2. 'Tree' → logprob: -2.025726079940796
    3. '_tree' → logprob: -5.525725841522217
    4. ' tree' → logprob: -5.775725841522217
    5. '   ' → logprob: -8.525726318359375
    6. 'Array' → logprob: -8.775726318359375
    7. '_' → logprob: -8.900726318359375
    8. 'List' → logprob: -9.150726318359375
    9. '	Tree' → logprob: -9.275726318359375
    10. ' array' → logprob: -9.400726318359375

Token 69: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3076106905937195
    2. ']' → logprob: -1.8076107501983643
    3. '   ' → logprob: -2.6826107501983643
    4. '```' → logprob: -3.5576107501983643
    5. '`)' → logprob: -7.807610511779785
    6. 'tokens' → logprob: -7.932610511779785
    7. '）' → logprob: -8.182610511779785
    8. '_nodes' → logprob: -8.432610511779785
    9. '}' → logprob: -8.682610511779785
    10. ')
' → logprob: -8.807610511779785

Token 70: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8371449112892151
    2. '    ' → logprob: -1.8371448516845703
    3. ' ' → logprob: -2.0871448516845703
    4. '   ' → logprob: -2.2121448516845703
    5. '[' → logprob: -3.2121448516845703
    6. '```' → logprob: -3.2121448516845703
    7. ' initialized' → logprob: -3.4621448516845703
    8. ' )' → logprob: -4.33714485168457
    9. '       ' → logprob: -4.71214485168457
    10. '  ' → logprob: -5.46214485168457

Token 71: '1' (ID: 16)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.9549376368522644
    2. '   ' → logprob: -1.0799376964569092
    3. ' size' → logprob: -2.454937696456909
    4. 'self' → logprob: -3.079937696456909
    5. '       ' → logprob: -3.329937696456909
    6. ')' → logprob: -3.704937696456909
    7. '[' → logprob: -3.704937696456909
    8. '    ' → logprob: -4.70493745803833
    9. ' self' → logprob: -4.82993745803833
    10. '0' → logprob: -5.07993745803833

Token 72: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.08981221169233322
    2. '-index' → logprob: -2.8398122787475586
    3. 'based' → logprob: -4.339812278747559
    4. ' -' → logprob: -4.964812278747559
    5. '-base' → logprob: -5.214812278747559
    6. '-' → logprob: -6.839812278747559
    7. ' based' → logprob: -7.839812278747559
    8. ')-' → logprob: -8.964812278747559
    9. 'Based' → logprob: -9.339812278747559
    10. '_based' → logprob: -9.964812278747559

Token 73: ' index' (ID: 3472)
  Prédit: ' indexing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' indexing' → logprob: -0.021374467760324478
    2. ' index' → logprob: -4.146374702453613
    3. 'index' → logprob: -6.021374702453613
    4. ' indexed' → logprob: -6.521374702453613
    5. '-index' → logprob: -7.021374702453613
    6. ')' → logprob: -8.271374702453613
    7. ']' → logprob: -9.396374702453613
    8. '_index' → logprob: -9.646374702453613
    9. ' indices' → logprob: -9.646374702453613
    10. 'indexed' → logprob: -10.771374702453613

Token 74: '.
' (ID: 558)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.9253610372543335
    2. ']' → logprob: -1.0503610372543335
    3. 'ing' → logprob: -1.4253610372543335
    4. ')' → logprob: -5.050361156463623
    5. ' indexing' → logprob: -6.550361156463623
    6. 'd' → logprob: -6.800361156463623
    7. 's' → logprob: -7.175361156463623
    8. '   ' → logprob: -7.175361156463623
    9. '```' → logprob: -7.425361156463623
    10. ' array' → logprob: -7.550361156463623

Token 75: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022004511207342148
    2. ')' → logprob: -4.1470046043396
    3. '"""' → logprob: -5.5220046043396
    4. '```' → logprob: -6.7720046043396
    5. '"' → logprob: -8.022004127502441
    6. '    ' → logprob: -9.022004127502441
    7. ']' → logprob: -9.647004127502441
    8. ' """' → logprob: -9.772004127502441
    9. '       ' → logprob: -10.147004127502441
    10. '    
' → logprob: -10.147004127502441

Token 76: ' depth' (ID: 13636)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.21826742589473724
    2. ' MOD' → logprob: -1.8432674407958984
    3. 'mod' → logprob: -3.5932674407958984
    4. '   ' → logprob: -5.718267440795898
    5. ' mod' → logprob: -6.093267440795898
    6. ' modulo' → logprob: -6.968267440795898
    7. ' modulus' → logprob: -6.968267440795898
    8. ' def' → logprob: -7.093267440795898
    9. 'def' → logprob: -7.218267440795898
    10. '"""' → logprob: -7.843267440795898

Token 77: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.004854211118072271
    2. ' =' → logprob: -6.004854202270508
    3. ':' → logprob: -7.129854202270508
    4. 's' → logprob: -7.504854202270508
    5. '(int' → logprob: -7.754854202270508
    6. ' ' → logprob: -8.629854202270508
    7. '(' → logprob: -8.879854202270508
    8. '   ' → logprob: -9.504854202270508
    9. '=' → logprob: -9.879854202270508
    10. '```' → logprob: -10.379854202270508

Token 78: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6774314045906067
    2. ':int' → logprob: -1.427431344985962
    3. ')' → logprob: -2.052431344985962
    4. ' int' → logprob: -2.927431344985962
    5. ':' → logprob: -3.677431344985962
    6. '=int' → logprob: -3.927431344985962
    7. '):' → logprob: -4.802431583404541
    8. '[int' → logprob: -5.427431583404541
    9. ' =' → logprob: -5.677431583404541
    10. '   ' → logprob: -5.802431583404541

Token 79: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.41961193084716797
    2. '):' → logprob: -1.419611930847168
    3. ':' → logprob: -2.669611930847168
    4. ' )' → logprob: -4.169611930847168
    5. ' ):' → logprob: -4.544611930847168
    6. '   ' → logprob: -5.794611930847168
    7. '):
' → logprob: -7.169611930847168
    8. ' :' → logprob: -7.419611930847168
    9. ' ' → logprob: -7.544611930847168
    10. '
' → logprob: -9.419611930847168

Token 80: ' Bit' (ID: 9422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3675755560398102
    2. '    ' → logprob: -1.3675755262374878
    3. '   ' → logprob: -3.1175756454467773
    4. ' int' → logprob: -5.492575645446777
    5. ' The' → logprob: -7.117575645446777
    6. 'int' → logprob: -7.367575645446777
    7. ' calculated' → logprob: -8.117575645446777
    8. '4' → logprob: -8.242575645446777
    9. '     ' → logprob: -8.242575645446777
    10. '1' → logprob: -8.242575645446777

Token 81: ' length' (ID: 5517)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9458532333374023
    2. '_length' → logprob: -1.0708532333374023
    3. '   ' → logprob: -2.0708532333374023
    4. '_' → logprob: -2.3208532333374023
    5. '_count' → logprob: -4.570853233337402
    6. '  ' → logprob: -4.820853233337402
    7. ' _' → logprob: -5.320853233337402
    8. 'wise' → logprob: -5.320853233337402
    9. '_size' → logprob: -5.445853233337402
    10. '    ' → logprob: -5.570853233337402

Token 82: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09074943512678146
    2. ' of' → logprob: -2.840749502182007
    3. '       ' → logprob: -4.715749263763428
    4. ')' → logprob: -5.090749263763428
    5. '    ' → logprob: -5.590749263763428
    6. '  ' → logprob: -6.090749263763428
    7. '```' → logprob: -6.465749263763428
    8. ' ' → logprob: -6.965749263763428
    9. '=' → logprob: -6.965749263763428
    10. '
' → logprob: -7.465749263763428

Token 83: ' size' (ID: 2349)
  Prédit: ' size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.29573822021484375
    2. ' the' → logprob: -1.7957382202148438
    3. ' self' → logprob: -2.9207382202148438
    4. 'size' → logprob: -3.5457382202148438
    5. 'self' → logprob: -5.045738220214844
    6. 'the' → logprob: -7.295738220214844
    7. '(size' → logprob: -9.670738220214844
    8. '   ' → logprob: -10.295738220214844
    9. ' ' → logprob: -10.795738220214844
    10. '    ' → logprob: -10.920738220214844

Token 84: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05564199760556221
    2. '   ' → logprob: -3.4306418895721436
    3. ')
' → logprob: -4.180642127990723
    4. '
' → logprob: -6.180642127990723
    5. '```' → logprob: -6.305642127990723
    6. '\n' → logprob: -7.680642127990723
    7. '+' → logprob: -7.805642127990723
    8. ').' → logprob: -8.055642127990723
    9. ')

' → logprob: -8.430642127990723
    10. ' )' → logprob: -8.930642127990723

Token 85: ' facilitate' (ID: 36296)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4523420333862305
    2. ' calculate' → logprob: -1.7023420333862305
    3. ' facilitate' → logprob: -1.9523420333862305
    4. ' represent' → logprob: -2.3273420333862305
    5. ' compute' → logprob: -2.8273420333862305
    6. ' provide' → logprob: -2.9523420333862305
    7. ' enable' → logprob: -3.3273420333862305
    8. ' manage' → logprob: -3.8273420333862305
    9. ' ' → logprob: -3.9523420333862305
    10. ' handle' → logprob: -3.9523420333862305

Token 86: ' efficient' (ID: 12430)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5524142980575562
    2. ' updates' → logprob: -1.3024142980575562
    3. ' operations' → logprob: -3.3024144172668457
    4. ' update' → logprob: -3.5524144172668457
    5. ' queries' → logprob: -4.427414417266846
    6. '```' → logprob: -4.552414417266846
    7. '   ' → logprob: -4.677414417266846
    8. ' updating' → logprob: -4.802414417266846
    9. ' binary' → logprob: -5.052414417266846
    10. ' efficient' → logprob: -5.302414417266846

Token 87: ' travers' (ID: 26957)
  Prédit: ' updates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' updates' → logprob: -0.6178036332130432
    2. ' update' → logprob: -0.9928036332130432
    3. ' indexing' → logprob: -3.7428035736083984
    4. ' traversal' → logprob: -4.242803573608398
    5. ' queries' → logprob: -4.367803573608398
    6. ' updating' → logprob: -4.492803573608398
    7. ' operations' → logprob: -4.742803573608398
    8. ' index' → logprob: -5.492803573608398
    9. ' navigation' → logprob: -5.617803573608398
    10. ' query' → logprob: -5.742803573608398

Token 88: 'als' (ID: 1288)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.07164600491523743
    2. 'e' → logprob: -3.196645975112915
    3. 'es' → logprob: -4.946646213531494
    4. 'a' → logprob: -4.946646213531494
    5. 'als' → logprob: -5.071646213531494
    6. 'sal' → logprob: -5.571646213531494
    7. 's' → logprob: -6.321646213531494
    8. 'ing' → logprob: -6.571646213531494
    9. '```' → logprob: -8.321645736694336
    10. 'se' → logprob: -9.759145736694336

Token 89: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44728967547416687
    2. '   ' → logprob: -2.0722897052764893
    3. '<|end|>' → logprob: -2.3222897052764893
    4. '```' → logprob: -2.8222897052764893
    5. '
' → logprob: -3.1972897052764893
    6. '.' → logprob: -4.82228946685791
    7. '"""' → logprob: -5.07228946685791
    8. '"' → logprob: -5.07228946685791
    9. '`' → logprob: -5.57228946685791
    10. ',' → logprob: -6.19728946685791

Token 90: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1372225433588028
    2. '"""' → logprob: -2.2622225284576416
    3. '```' → logprob: -4.262222766876221
    4. '"' → logprob: -6.012222766876221
    5. '
' → logprob: -6.387222766876221
    6. ')' → logprob: -6.637222766876221
    7. '"""
' → logprob: -6.762222766876221
    8. '`' → logprob: -6.762222766876221
    9. ' """' → logprob: -7.387222766876221
    10. '    
' → logprob: -7.512222766876221

Token 91: ' mod' (ID: 1812)
  Prédit: ' MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' MOD' → logprob: -0.322231262922287
    2. '   ' → logprob: -2.0722312927246094
    3. 'MOD' → logprob: -2.5722312927246094
    4. ' def' → logprob: -3.6972312927246094
    5. '"""' → logprob: -4.822231292724609
    6. ' """' → logprob: -5.572231292724609
    7. '
' → logprob: -5.572231292724609
    8. '"""
' → logprob: -5.572231292724609
    9. ' """
' → logprob: -5.759731292724609
    10. '    ' → logprob: -5.947231292724609

Token 92: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47056883573532104
    2. ':' → logprob: -1.3455688953399658
    3. '=' → logprob: -2.345568895339966
    4. '```' → logprob: -4.720568656921387
    5. ',' → logprob: -6.220568656921387
    6. ' :' → logprob: -6.345568656921387
    7. ' ' → logprob: -6.720568656921387
    8. ' (' → logprob: -6.845568656921387
    9. '<|end|>' → logprob: -6.970568656921387
    10. '   ' → logprob: -7.345568656921387

Token 93: 'int' (ID: 491)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.16763462126255035
    2. ')' → logprob: -2.2926347255706787
    3. ' ' → logprob: -3.0426347255706787
    4. '=' → logprob: -7.0426344871521
    5. 'int' → logprob: -7.0426344871521
    6. ' ):' → logprob: -7.0426344871521
    7. '=int' → logprob: -7.2926344871521
    8. ':' → logprob: -7.4176344871521
    9. ' int' → logprob: -7.6676344871521
    10. '  ' → logprob: -8.042634963989258

Token 94: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2056117206811905
    2. '):' → logprob: -1.7056117057800293
    3. ':' → logprob: -5.705611705780029
    4. '):
' → logprob: -7.455611705780029
    5. '=' → logprob: -9.455612182617188
    6. ' )' → logprob: -9.705612182617188
    7. ')
' → logprob: -9.955612182617188
    8. ' ' → logprob: -10.455612182617188
    9. ' ):' → logprob: -10.830612182617188
    10. ',' → logprob: -10.955612182617188

Token 95: ' The' (ID: 623)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.003586414037272334
    2. ' '' → logprob: -7.128586292266846
    3. ' "' → logprob: -7.378586292266846
    4. '  ' → logprob: -7.878586292266846
    5. ' """' → logprob: -7.878586292266846
    6. '32' → logprob: -8.253586769104004
    7. ' )' → logprob: -8.253586769104004
    8. '   ' → logprob: -8.503586769104004
    9. ' None' → logprob: -8.878586769104004
    10. ' (' → logprob: -9.128586769104004

Token 96: ' modulo' (ID: 112372)
  Prédit: ' space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' space' → logprob: -0.4579675793647766
    2. ' ' → logprob: -1.0829675197601318
    3. ' modulus' → logprob: -4.832967758178711
    4. ' modulo' → logprob: -5.082967758178711
    5. ' MOD' → logprob: -5.207967758178711
    6. ' ' → logprob: -5.957967758178711
    7. '  ' → logprob: -6.457967758178711
    8. ' mod' → logprob: -6.957967758178711
    9. ' """' → logprob: -7.332967758178711
    10. ' current' → logprob: -7.957967758178711

Token 97: ' value' (ID: 1432)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 98: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0702003240585327
    2. '   ' → logprob: -1.1952003240585327
    3. '<|end|>' → logprob: -2.5702004432678223
    4. '}' → logprob: -2.6952004432678223
    5. '```' → logprob: -2.6952004432678223
    6. ':' → logprob: -2.8202004432678223
    7. ',' → logprob: -4.070200443267822
    8. '.' → logprob: -4.070200443267822
    9. '=' → logprob: -4.445200443267822
    10. ' }' → logprob: -5.070200443267822

Token 99: ' all' (ID: 722)
  Prédit: ' operations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' operations' → logprob: -0.9618695974349976
    2. ' the' → logprob: -1.0868695974349976
    3. ' arithmetic' → logprob: -1.5868695974349976
    4. ' )' → logprob: -3.711869716644287
    5. ' space' → logprob: -3.836869716644287
    6. ' calculations' → logprob: -4.461869716644287
    7. ' ' → logprob: -6.086869716644287
    8. ')' → logprob: -6.211869716644287
    9. ' modular' → logprob: -6.711869716644287
    10. ' """' → logprob: -6.711869716644287

Token 100: ' operations' (ID: 12084)
  Prédit: ' operations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operations' → logprob: -0.04169760271906853
    2. ' arithmetic' → logprob: -3.4166975021362305
    3. ' calculations' → logprob: -5.0416975021362305
    4. ' updates' → logprob: -7.6666975021362305
    5. ' ' → logprob: -8.16669750213623
    6. ' sums' → logprob: -8.54169750213623
    7. 'operations' → logprob: -8.66669750213623
    8. ')' → logprob: -8.79169750213623
    9. ' computations' → logprob: -9.54169750213623
    10. ' values' → logprob: -9.54169750213623

Token 101: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024444198235869408
    2. '}' → logprob: -4.399444103240967
    3. '   ' → logprob: -4.649444103240967
    4. '```' → logprob: -6.649444103240967
    5. '<|end|>' → logprob: -7.649444103240967
    6. '
' → logprob: -8.399444580078125
    7. ')
' → logprob: -10.024444580078125
    8. '"""' → logprob: -10.024444580078125
    9. '\n' → logprob: -10.274444580078125
    10. ',' → logprob: -10.524444580078125

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12064075469970703
    2. '"""' → logprob: -2.370640754699707
    3. '```' → logprob: -4.495640754699707
    4. '"' → logprob: -5.745640754699707
    5. ')' → logprob: -6.245640754699707
    6. '"""
' → logprob: -6.495640754699707
    7. '
' → logprob: -6.870640754699707
    8. ' """' → logprob: -8.120640754699707
    9. '<|end|>' → logprob: -8.370640754699707
    10. ' ' → logprob: -8.870640754699707

Token 103: ' """
' (ID: 7037)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.33578798174858093
    2. '   ' → logprob: -1.8357880115509033
    3. '```' → logprob: -3.3357880115509033
    4. ')' → logprob: -3.3357880115509033
    5. '"' → logprob: -3.8357880115509033
    6. '"""
' (adapté à ' """
') → logprob: -3.8357880115509033
    7. '
' → logprob: -5.210787773132324
    8. ' """' → logprob: -6.835787773132324
    9. '""' → logprob: -6.835787773132324
    10. '"""

' → logprob: -7.210787773132324

Token 104: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1337919682264328
    2. '    
' → logprob: -2.508791923522949
    3. '   ' → logprob: -3.508791923522949
    4. ' 
' → logprob: -4.758791923522949
    5. '\n' → logprob: -6.008791923522949
    6. '  
' → logprob: -6.883791923522949
    7. '   
' → logprob: -8.13379192352295
    8. '    ' → logprob: -8.25879192352295
    9. '

' → logprob: -8.38379192352295
    10. '' → logprob: -8.38379192352295

Token 105: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5511547923088074
    2. ' 
' → logprob: -1.9261548519134521
    3. '   ' → logprob: -1.9261548519134521
    4. '    
' → logprob: -2.176154851913452
    5. '\n' → logprob: -5.676154613494873
    6. '_' → logprob: -5.801154613494873
    7. ' def' → logprob: -6.051154613494873
    8. ' ' → logprob: -6.176154613494873
    9. 'def' (adapté à ' def') → logprob: -6.176154613494873
    10. '  
' → logprob: -6.426154613494873

Token 106: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.40102073550224304
    2. 'nit' → logprob: -1.7760207653045654
    3. ' __' → logprob: -2.5260207653045654
    4. 'itialize' → logprob: -3.5260207653045654
    5. '_init' → logprob: -4.526020526885986
    6. ' def' → logprob: -4.651020526885986
    7. 'def' → logprob: -4.651020526885986
    8. ' init' → logprob: -4.901020526885986
    9. '__' → logprob: -5.276020526885986
    10. '   ' → logprob: -6.401020526885986

Token 107: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'ini' → logprob: -16.75
    3. ' init' → logprob: -17.5
    4. 'i' → logprob: -17.625
    5. 'int' → logprob: -18.625
    6. 'in' → logprob: -18.875
    7. 'inite' → logprob: -19.0
    8. '```' → logprob: -19.25
    9. '_init' → logprob: -20.5
    10. '   ' → logprob: -21.375

Token 108: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.016321036964654922
    2. '(self' → logprob: -4.141321182250977
    3. '__' → logprob: -8.266321182250977
    4. ' (' → logprob: -11.141321182250977
    5. '__(
' → logprob: -11.766321182250977
    6. '(' → logprob: -12.891321182250977
    7. '_(' → logprob: -13.391321182250977
    8. '__((' → logprob: -14.016321182250977
    9. 'self' → logprob: -14.391321182250977
    10. '```' → logprob: -14.766321182250977

Token 109: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00043162284418940544
    2. ' self' → logprob: -7.750431537628174
    3. '
' → logprob: -14.625432014465332
    4. '   ' → logprob: -15.000432014465332
    5. ',' → logprob: -16.125431060791016
    6. ' ' → logprob: -16.375431060791016
    7. '       ' → logprob: -17.625431060791016
    8. '  ' → logprob: -18.125431060791016
    9. '(self' → logprob: -18.125431060791016
    10. '```' → logprob: -18.375431060791016

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013709533959627151
    2. ' ,' → logprob: -7.251370906829834
    3. 'self' → logprob: -7.376370906829834
    4. ',size' → logprob: -11.001371383666992
    5. ',self' → logprob: -11.501371383666992
    6. ' self' → logprob: -12.501371383666992
    7. 'size' → logprob: -13.626371383666992
    8. '(self' → logprob: -13.626371383666992
    9. '   ' → logprob: -14.251371383666992
    10. ' ' → logprob: -14.751371383666992

Token 111: ' n' (ID: 297)
  Prédit: ' size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.35535839200019836
    2. 'size' → logprob: -1.230358362197876
    3. ' n' → logprob: -5.855358600616455
    4. 'n' → logprob: -6.230358600616455
    5. 'self' → logprob: -6.480358600616455
    6. ' self' → logprob: -8.105358123779297
    7. '   ' → logprob: -8.855358123779297
    8. ' ' → logprob: -9.855358123779297
    9. '       ' → logprob: -12.105358123779297
    10. '    ' → logprob: -12.730358123779297

Token 112: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1189006045460701
    2. ',' → logprob: -2.2439005374908447
    3. ':' → logprob: -5.868900775909424
    4. '):
' → logprob: -6.118900775909424
    5. ')' → logprob: -7.493900775909424
    6. ' ):' → logprob: -7.743900775909424
    7. ' ,' → logprob: -11.118900299072266
    8. '   ' → logprob: -11.743900299072266
    9. ' :' → logprob: -12.243900299072266
    10. '):
' → logprob: -12.743900299072266

Token 113: ' MOD' (ID: 32868)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.4343200623989105
    2. ' mod' → logprob: -1.059320092201233
    3. 'MOD' → logprob: -5.559319972991943
    4. ' MOD' → logprob: -6.434319972991943
    5. '   ' → logprob: -9.684320449829102
    6. ' ' → logprob: -10.684320449829102
    7. '	mod' → logprob: -11.309320449829102
    8. ' modulo' → logprob: -11.809320449829102
    9. ' modulus' → logprob: -12.059320449829102
    10. 'm' → logprob: -12.184320449829102

Token 114: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000558512459974736
    2. '):
' → logprob: -8.250558853149414
    3. ')' → logprob: -8.625558853149414
    4. ' ):' → logprob: -9.125558853149414
    5. '=' → logprob: -12.875558853149414
    6. ':' → logprob: -13.000558853149414
    7. '):
' → logprob: -13.375558853149414
    8. ',' → logprob: -13.500558853149414
    9. '   ' → logprob: -14.500558853149414
    10. ' ' → logprob: -15.875558853149414

Token 115: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10166113823652267
    2. '       ' → logprob: -2.351661205291748
    3. '):' → logprob: -7.226661205291748
    4. ':
' → logprob: -7.851661205291748
    5. ',' → logprob: -8.47666072845459
    6. '):
' → logprob: -9.60166072845459
    7. ')' → logprob: -10.60166072845459
    8. '   ' → logprob: -10.97666072845459
    9. '```' → logprob: -12.47666072845459
    10. '        
' → logprob: -12.85166072845459

Token 116: ' """
' (ID: 7037)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6800032258033752
    2. '       ' → logprob: -1.0550031661987305
    3. 'self' → logprob: -1.9300031661987305
    4. '   ' → logprob: -10.55500316619873
    5. ' super' → logprob: -12.18000316619873
    6. 'n' → logprob: -12.30500316619873
    7. '	self' → logprob: -13.05500316619873
    8. 'super' → logprob: -13.05500316619873
    9. ' ' → logprob: -13.55500316619873
    10. '        ' → logprob: -13.68000316619873

Token 117: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.9281168580055237
    2. 'n' → logprob: -1.053116798400879
    3. '       ' → logprob: -2.053116798400879
    4. 'size' → logprob: -2.678116798400879
    5. ' n' → logprob: -3.428116798400879
    6. ' self' → logprob: -3.928116798400879
    7. ' size' → logprob: -5.178116798400879
    8. '   ' → logprob: -7.803116798400879
    9. ' ' → logprob: -9.303116798400879
    10. ',' → logprob: -9.428116798400879

Token 118: ' Initialize' (ID: 19496)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3380115330219269
    2. ' self' → logprob: -1.3380115032196045
    3. 'self' → logprob: -3.7130115032196045
    4. '        ' → logprob: -11.463011741638184
    5. '   ' → logprob: -11.713011741638184
    6. ' ' → logprob: -12.088011741638184
    7. 'n' → logprob: -12.213011741638184
    8. ' super' → logprob: -12.963011741638184
    9. '	self' → logprob: -13.338011741638184
    10. '    ' → logprob: -13.463011741638184

Token 119: ' the' (ID: 290)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5500547289848328
    2. '(self' → logprob: -1.0500547885894775
    3. 'self' → logprob: -3.3000547885894775
    4. '       ' → logprob: -3.4250547885894775
    5. ' the' → logprob: -5.925054550170898
    6. ':' → logprob: -8.175054550170898
    7. ' (' → logprob: -8.300054550170898
    8. ',' → logprob: -8.800054550170898
    9. '   ' → logprob: -9.050054550170898
    10. '	self' → logprob: -9.800054550170898

Token 120: ' BIT' (ID: 52185)
  Prédit: ' size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.17913758754730225
    2. 'size' → logprob: -2.054137706756592
    3. ' Bit' → logprob: -3.429137706756592
    4. 'Bit' → logprob: -5.929137706756592
    5. ' bit' → logprob: -7.804137706756592
    6. ' n' → logprob: -9.429137229919434
    7. 'bit' → logprob: -10.179137229919434
    8. 'n' → logprob: -10.304137229919434
    9. ' class' → logprob: -10.554137229919434
    10. ' tree' → logprob: -10.804137229919434

Token 121: ' structure' (ID: 8866)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1682372093200684
    2. ' with' → logprob: -1.4182372093200684
    3. '(self' → logprob: -1.6682372093200684
    4. '       ' → logprob: -2.4182372093200684
    5. ',' → logprob: -3.0432372093200684
    6. ' self' → logprob: -3.2932372093200684
    7. '   ' → logprob: -3.4182372093200684
    8. ':
' → logprob: -3.7932372093200684
    9. ' (' → logprob: -4.918237209320068
    10. 'self' → logprob: -5.418237209320068

Token 122: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13418824970722198
    2. ':
' → logprob: -2.759188175201416
    3. '       ' → logprob: -3.009188175201416
    4. ',' → logprob: -4.634188175201416
    5. '):
' → logprob: -6.759188175201416
    6. ' with' → logprob: -7.009188175201416
    7. '):' → logprob: -7.759188175201416
    8. '.' → logprob: -8.134188652038574
    9. 'self' → logprob: -9.259188652038574
    10. ')' → logprob: -9.509188652038574

Token 123: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008945476147346199
    2. '        
' → logprob: -7.750894546508789
    3. '
' → logprob: -9.250894546508789
    4. ':' → logprob: -9.250894546508789
    5. 'self' → logprob: -9.875894546508789
    6. '<|end|>' → logprob: -10.125894546508789
    7. '    
' → logprob: -10.250894546508789
    8. ' self' → logprob: -10.625894546508789
    9. ',' → logprob: -10.750894546508789
    10. '  
' → logprob: -10.875894546508789

Token 124: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00726383225992322
    2. 'self' → logprob: -5.507263660430908
    3. ' self' → logprob: -5.757263660430908
    4. '   ' → logprob: -11.507264137268066
    5. 'n' → logprob: -12.382264137268066
    6. '           ' → logprob: -13.257264137268066
    7. '      ' → logprob: -13.382264137268066
    8. '        ' → logprob: -14.132264137268066
    9. '```' → logprob: -14.382264137268066
    10. '     ' → logprob: -14.632264137268066

Token 125: ' Args' (ID: 39185)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01528257504105568
    2. ' self' → logprob: -4.76528263092041
    3. '       ' → logprob: -5.01528263092041
    4. '   ' → logprob: -11.89028263092041
    5. 'super' → logprob: -13.14028263092041
    6. 'n' → logprob: -15.51528263092041
    7. ' ' → logprob: -15.51528263092041
    8. '     ' → logprob: -15.89028263092041
    9. '        ' → logprob: -16.140281677246094
    10. '    ' → logprob: -16.140281677246094

Token 126: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44547516107559204
    2. '):' → logprob: -1.5704751014709473
    3. '=' → logprob: -2.1954751014709473
    4. '):
' → logprob: -3.8204751014709473
    5. ',' → logprob: -4.945475101470947
    6. '=None' → logprob: -5.320475101470947
    7. 'self' → logprob: -5.695475101470947
    8. '       ' → logprob: -6.695475101470947
    9. ')' → logprob: -7.945475101470947
    10. '=self' → logprob: -8.195475578308105

Token 127: '           ' (ID: 352)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.19164107739925385
    2. 'self' → logprob: -1.816641092300415
    3. '           ' → logprob: -4.566640853881836
    4. 'n' → logprob: -7.191640853881836
    5. ' n' → logprob: -8.191640853881836
    6. '       ' → logprob: -8.566640853881836
    7. '        ' → logprob: -8.566640853881836
    8. '            ' → logprob: -11.941640853881836
    9. ' ' → logprob: -12.566640853881836
    10. ' ' → logprob: -12.566640853881836

Token 128: ' n' (ID: 297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6167660355567932
    2. 'n' (adapté à ' n') → logprob: -1.6167659759521484
    3. ' self' → logprob: -1.9917659759521484
    4. ' n' → logprob: -2.1167659759521484
    5. 'size' → logprob: -5.991765975952148
    6. ' size' → logprob: -6.741765975952148
    7. '       ' → logprob: -7.491765975952148
    8. '   ' → logprob: -7.491765975952148
    9. ' ' → logprob: -10.741765975952148
    10. '           ' → logprob: -10.866765975952148

Token 129: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1568312793970108
    2. '):' → logprob: -2.1568312644958496
    3. ' :' → logprob: -3.6568312644958496
    4. ':int' → logprob: -6.28183126449585
    5. ' ):' → logprob: -6.65683126449585
    6. '):
' → logprob: -8.031831741333008
    7. ',' → logprob: -9.906831741333008
    8. '=' → logprob: -10.281831741333008
    9. '   ' → logprob: -10.406831741333008
    10. ')' → logprob: -11.406831741333008

Token 130: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0006008113850839436
    2. ' int' → logprob: -7.500600814819336
    3. '):' → logprob: -11.125600814819336
    4. ')' → logprob: -11.375600814819336
    5. ':int' → logprob: -11.750600814819336
    6. '):
' → logprob: -12.500600814819336
    7. ',int' → logprob: -12.875600814819336
    8. ',' → logprob: -13.500600814819336
    9. '[int' → logprob: -13.625600814819336
    10. '       ' → logprob: -13.625600814819336

Token 131: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004525300115346909
    2. '):
' → logprob: -5.879525184631348
    3. ')' → logprob: -6.629525184631348
    4. ' ):' → logprob: -8.754525184631348
    5. ':' → logprob: -9.129525184631348
    6. ',' → logprob: -9.629525184631348
    7. '       ' → logprob: -10.004525184631348
    8. '   ' → logprob: -12.004525184631348
    9. '):
' → logprob: -12.379525184631348
    10. '):

' → logprob: -12.629525184631348

Token 132: ' The' (ID: 623)
  Prédit: ' The'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' The' → logprob: -0.4632642865180969
    2. '       ' → logprob: -1.3382642269134521
    3. ' size' → logprob: -2.963264226913452
    4. 'size' → logprob: -3.963264226913452
    5. '        ' → logprob: -4.338264465332031
    6. ' Size' → logprob: -4.713264465332031
    7. 'The' → logprob: -4.838264465332031
    8. 'Size' → logprob: -5.588264465332031
    9. ' self' → logprob: -6.588264465332031
    10. ')' → logprob: -7.588264465332031

Token 133: ' maximum' (ID: 10562)
  Prédit: ' size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.03525052219629288
    2. ' number' → logprob: -4.410250663757324
    3. 'size' → logprob: -4.535250663757324
    4. ' maximum' → logprob: -4.535250663757324
    5. ' length' → logprob: -8.285250663757324
    6. 'number' → logprob: -9.035250663757324
    7. 'max' → logprob: -9.035250663757324
    8. 'maximum' → logprob: -9.160250663757324
    9. ' ' → logprob: -9.410250663757324
    10. ' total' → logprob: -9.410250663757324

Token 134: ' size' (ID: 2349)
  Prédit: ' size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.3448964059352875
    2. ' index' → logprob: -1.3448964357376099
    3. ' value' → logprob: -4.46989631652832
    4. 'size' → logprob: -5.34489631652832
    5. 'index' → logprob: -5.46989631652832
    6. '_size' → logprob: -5.84489631652832
    7. ' length' → logprob: -6.09489631652832
    8. ' ' → logprob: -6.59489631652832
    9. '_' → logprob: -6.71989631652832
    10. '_index' → logprob: -7.59489631652832

Token 135: ' of' (ID: 328)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -1.0941503047943115
    2. ':' → logprob: -1.5941503047943115
    3. '   ' → logprob: -1.7191503047943115
    4. '       ' → logprob: -1.9691503047943115
    5. ')' → logprob: -2.3441503047943115
    6. '):
' → logprob: -4.469150543212891
    7. ',' → logprob: -4.594150543212891
    8. ' of' → logprob: -4.719150543212891
    9. ' ):' → logprob: -5.219150543212891
    10. '=None' → logprob: -5.844150543212891

Token 136: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.006381148938089609
    2. 'the' → logprob: -5.131381034851074
    3. ' n' → logprob: -7.881381034851074
    4. 'n' → logprob: -10.381381034851074
    5. ' tree' → logprob: -11.131381034851074
    6. ')' → logprob: -11.756381034851074
    7. ' t' → logprob: -12.256381034851074
    8. '   ' → logprob: -12.756381034851074
    9. ' ' → logprob: -12.756381034851074
    10. ' self' → logprob: -13.256381034851074

Token 137: ' tree' (ID: 8165)
  Prédit: ' tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.10507729649543762
    2. ' fen' → logprob: -2.9800772666931152
    3. ' Fen' → logprob: -3.4800772666931152
    4. 'Fen' → logprob: -4.730077266693115
    5. ' array' → logprob: -5.605077266693115
    6. ' BIT' → logprob: -6.355077266693115
    7. ' structure' → logprob: -6.730077266693115
    8. ' bit' → logprob: -6.980077266693115
    9. ' data' → logprob: -7.730077266693115
    10. ' Binary' → logprob: -8.105077743530273

Token 138: '.
' (ID: 558)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12228011339902878
    2. '):
' → logprob: -2.4972801208496094
    3. ')' → logprob: -3.7472801208496094
    4. '       ' → logprob: -4.872280120849609
    5. ':' → logprob: -7.372280120849609
    6. '   ' → logprob: -7.747280120849609
    7. '.' → logprob: -9.12228012084961
    8. ',' → logprob: -9.12228012084961
    9. '
' → logprob: -9.74728012084961
    10. '):
' → logprob: -9.74728012084961

Token 139: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3275218605995178
    2. ')' → logprob: -1.702521800994873
    3. '):' → logprob: -3.577521800994873
    4. ',' → logprob: -3.952521800994873
    5. ':' → logprob: -4.077521800994873
    6. '
' → logprob: -4.452521800994873
    7. '        
' → logprob: -4.452521800994873
    8. '   ' → logprob: -5.952521800994873
    9. '):
' → logprob: -6.077521800994873
    10. '    
' → logprob: -6.327521800994873

Token 140: ' MOD' (ID: 32868)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.0268027782440186
    2. ' self' → logprob: -1.6518027782440186
    3. 'self' → logprob: -1.6518027782440186
    4. ' mod' → logprob: -1.6518027782440186
    5. 'MOD' (adapté à ' MOD') → logprob: -3.5268027782440186
    6. ' MOD' → logprob: -3.9018027782440186
    7. '       ' → logprob: -4.776803016662598
    8. '           ' → logprob: -5.026803016662598
    9. '
' → logprob: -7.651803016662598
    10. '```' → logprob: -7.901803016662598

Token 141: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002772666746750474
    2. '):
' → logprob: -6.752772808074951
    3. ':' → logprob: -7.252772808074951
    4. ' ):' → logprob: -7.502772808074951
    5. ')' → logprob: -8.127772331237793
    6. '   ' → logprob: -10.502772331237793
    7. ',' → logprob: -11.752772331237793
    8. '=' → logprob: -12.502772331237793
    9. ' ' → logprob: -13.502772331237793
    10. '):

' → logprob: -13.752772331237793

Token 142: 'int' (ID: 491)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2938317358493805
    2. 'int' → logprob: -1.543831706047058
    3. ')' → logprob: -3.5438318252563477
    4. 'n' → logprob: -5.293831825256348
    5. '):
' → logprob: -5.793831825256348
    6. ':int' → logprob: -7.293831825256348
    7. ' ):' → logprob: -7.293831825256348
    8. '   ' → logprob: -7.418831825256348
    9. '       ' → logprob: -7.418831825256348
    10. 'MOD' → logprob: -7.793831825256348

Token 143: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004598280414938927
    2. ')' → logprob: -5.879598140716553
    3. ' ):' → logprob: -6.754598140716553
    4. '):
' → logprob: -8.004598617553711
    5. ':' → logprob: -8.254598617553711
    6. '=' → logprob: -10.754598617553711
    7. '   ' → logprob: -13.254598617553711
    8. '):

' → logprob: -13.379598617553711
    9. ',' → logprob: -13.504598617553711
    10. ' ' → logprob: -13.629598617553711

Token 144: ' The' (ID: 623)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 145: ' modulo' (ID: 112372)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.7384621500968933
    2. ' modulo' → logprob: -1.363462209701538
    3. 'mod' → logprob: -2.113462209701538
    4. ' modulus' → logprob: -2.238462209701538
    5. ' MOD' → logprob: -3.738462209701538
    6. 'MOD' → logprob: -4.363461971282959
    7. '_MOD' → logprob: -7.613461971282959
    8. ')' → logprob: -7.988461971282959
    9. '_mod' → logprob: -8.613462448120117
    10. ' ' → logprob: -8.613462448120117

Token 146: ' applied' (ID: 13335)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.036595944315195084
    2. '):' → logprob: -3.6615960597991943
    3. ':' → logprob: -5.661595821380615
    4. ')' → logprob: -5.911595821380615
    5. ' ):' → logprob: -6.786595821380615
    6. '):
' → logprob: -7.161595821380615
    7. ' ' → logprob: -7.286595821380615
    8. '<|end|>' → logprob: -7.661595821380615
    9. 'value' → logprob: -8.161596298217773
    10. '   ' → logprob: -9.036596298217773

Token 147: ' for' (ID: 395)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.004661642014980316
    2. ' ' → logprob: -6.504661560058594
    3. 'to' → logprob: -6.879661560058594
    4. ' during' → logprob: -7.004661560058594
    5. ' for' → logprob: -8.379661560058594
    6. ')' → logprob: -8.629661560058594
    7. ' on' → logprob: -8.754661560058594
    8. '.' → logprob: -8.754661560058594
    9. ' )' → logprob: -8.879661560058594
    10. ' at' → logprob: -9.504661560058594

Token 148: ' every' (ID: 1753)
  Prédit: ' operations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' operations' → logprob: -0.08005489408969879
    2. ' all' → logprob: -3.080054998397827
    3. ' the' → logprob: -4.580054759979248
    4. ' calculations' → logprob: -4.955054759979248
    5. ' arithmetic' → logprob: -5.080054759979248
    6. ' updates' → logprob: -6.705054759979248
    7. ' values' → logprob: -6.705054759979248
    8. ' operation' → logprob: -6.830054759979248
    9. ' ' → logprob: -6.830054759979248
    10. ')' → logprob: -7.830054759979248

Token 149: ' update' (ID: 4027)
  Prédit: ' operation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operation' → logprob: -0.004927158355712891
    2. ' arithmetic' → logprob: -6.129927158355713
    3. 'operation' → logprob: -6.754927158355713
    4. ' update' → logprob: -6.754927158355713
    5. ' addition' → logprob: -8.504926681518555
    6. ' sum' → logprob: -9.379926681518555
    7. ' ' → logprob: -9.379926681518555
    8. ')' → logprob: -11.754926681518555
    9. ' operations' → logprob: -11.879926681518555
    10. ' add' → logprob: -12.254926681518555

Token 150: '/s' (ID: 5031)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3833199441432953
    2. ')' → logprob: -2.008319854736328
    3. ' operation' → logprob: -2.383319854736328
    4. '):' → logprob: -3.383319854736328
    5. '       ' → logprob: -3.758319854736328
    6. '):
' → logprob: -5.008319854736328
    7. '.' → logprob: -5.133319854736328
    8. '   ' → logprob: -5.133319854736328
    9. ' operations' → logprob: -5.133319854736328
    10. ' )' → logprob: -5.883319854736328

Token 151: 'um' (ID: 394)
  Prédit: ' operation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operation' → logprob: -1.143660068511963
    2. 'um' → logprob: -1.268660068511963
    3. ')' → logprob: -1.893660068511963
    4. ' )' → logprob: -2.143660068511963
    5. ' ' → logprob: -2.393660068511963
    6. ' update' → logprob: -4.268660068511963
    7. ' and' → logprob: -6.018660068511963
    8. '   ' → logprob: -6.018660068511963
    9. ',' → logprob: -6.268660068511963
    10. ' sum' → logprob: -6.393660068511963

Token 152: '.
' (ID: 558)
  Prédit: ' operation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' operation' → logprob: -0.20905344188213348
    2. '):
' → logprob: -2.7090535163879395
    3. ')' → logprob: -2.9590535163879395
    4. '):' → logprob: -3.3340535163879395
    5. 'operation' → logprob: -4.3340535163879395
    6. ' ):
' → logprob: -5.3340535163879395
    7. '   ' → logprob: -5.4590535163879395
    8. ' )' → logprob: -6.2090535163879395
    9. ' ' → logprob: -6.3340535163879395
    10. ' value' → logprob: -6.5840535163879395

Token 153: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12101863324642181
    2. '):' → logprob: -2.996018648147583
    3. ')' → logprob: -3.371018648147583
    4. '   ' → logprob: -3.621018648147583
    5. '):
' → logprob: -6.496018409729004
    6. '        
' → logprob: -7.621018409729004
    7. '
' → logprob: -7.621018409729004
    8. '    
' → logprob: -9.121018409729004
    9. '```' → logprob: -9.621018409729004
    10. '"""' → logprob: -10.121018409729004

Token 154: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013880894985049963
    2. '
' → logprob: -7.126388072967529
    3. '        
' → logprob: -8.251388549804688
    4. ')' → logprob: -9.376388549804688
    5. '):
' → logprob: -9.376388549804688
    6. '):' → logprob: -9.626388549804688
    7. ':' → logprob: -11.001388549804688
    8. '   ' → logprob: -11.126388549804688
    9. 'self' → logprob: -11.126388549804688
    10. '```' → logprob: -11.626388549804688

Token 155: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010795372509164736
    2. 'self' → logprob: -9.875107765197754
    3. ' self' → logprob: -9.875107765197754
    4. '   ' → logprob: -12.625107765197754
    5. '        
' → logprob: -14.375107765197754
    6. '```' → logprob: -15.625107765197754
    7. '	self' → logprob: -16.12510871887207
    8. '    
' → logprob: -16.12510871887207
    9. '      ' → logprob: -16.25010871887207
    10. '           ' → logprob: -16.25010871887207

Token 156: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.04048049822449684
    2. '       ' → logprob: -3.540480613708496
    3. ' self' → logprob: -4.540480613708496
    4. '   ' → logprob: -13.290480613708496
    5. 'super' → logprob: -13.415480613708496
    6. '	self' → logprob: -14.915480613708496
    7. ' ' → logprob: -15.040480613708496
    8. '        
' → logprob: -16.29047966003418
    9. '      ' → logprob: -16.66547966003418
    10. ' super' → logprob: -16.79047966003418

Token 157: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.0015606891829520464
    2. '.n' → logprob: -7.126560688018799
    3. '.' → logprob: -7.376560688018799
    4. '.mod' → logprob: -9.626561164855957
    5. ' .' → logprob: -10.501561164855957
    6. '.s' → logprob: -11.251561164855957
    7. '.depth' → logprob: -12.126561164855957
    8. '._' → logprob: -13.001561164855957
    9. '.type' → logprob: -13.126561164855957
    10. '.sz' → logprob: -13.376561164855957

Token 158: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931508183479309
    2. ' =' → logprob: -0.6931508183479309
    3. '=n' → logprob: -12.693150520324707
    4. ')' → logprob: -15.568150520324707
    5. ' ' → logprob: -15.568150520324707
    6. '=int' → logprob: -16.818151473999023
    7. ',' → logprob: -17.318151473999023
    8. '   ' → logprob: -17.818151473999023
    9. '＝' → logprob: -18.193151473999023
    10. ' =
' → logprob: -18.318151473999023

Token 159: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.02630099281668663
    2. 'n' → logprob: -3.6513009071350098
    3. '	n' → logprob: -15.276301383972168
    4. ' ' → logprob: -15.401301383972168
    5. '1' → logprob: -16.40130043029785
    6. '   ' → logprob: -16.65130043029785
    7. ' ' → logprob: -16.90130043029785
    8. '    ' → logprob: -17.27630043029785
    9. ' [' → logprob: -18.40130043029785
    10. '  ' → logprob: -18.40130043029785

Token 160: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07235493510961533
    2. '+' → logprob: -2.697355031967163
    3. ' +' → logprob: -6.572354793548584
    4. '       ' → logprob: -7.197354793548584
    5. '        
' → logprob: -8.947355270385742
    6. ' 
' → logprob: -9.822355270385742
    7. '
' → logprob: -10.572355270385742
    8. '+
' → logprob: -11.197355270385742
    9. 'self' → logprob: -11.447355270385742
    10. '  
' → logprob: -11.572355270385742

Token 161: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38879862427711487
    2. '       ' → logprob: -1.1387985944747925
    3. '+' → logprob: -6.763798713684082
    4. '<|end|>' → logprob: -7.888798713684082
    5. ' +' → logprob: -8.513798713684082
    6. '        
' → logprob: -9.638798713684082
    7. 'self' → logprob: -9.763798713684082
    8. '
' → logprob: -10.763798713684082
    9. '```' → logprob: -11.763798713684082
    10. '   ' → logprob: -12.263798713684082

Token 162: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15534253418445587
    2. '+' → logprob: -3.0303425788879395
    3. 'self' (adapté à ' self') → logprob: -3.1553425788879395
    4. 'mod' → logprob: -3.2803425788879395
    5. 'MOD' → logprob: -4.6553425788879395
    6. '       ' → logprob: -5.6553425788879395
    7. '
' → logprob: -7.7803425788879395
    8. ' +' → logprob: -7.9053425788879395
    9. ' MOD' → logprob: -8.280342102050781
    10. ' 
' → logprob: -8.655342102050781

Token 163: '.tree' (ID: 49211)
  Prédit: '.mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -0.29255029559135437
    2. '.tree' → logprob: -1.4175503253936768
    3. '.' → logprob: -4.917550086975098
    4. '.MOD' → logprob: -6.292550086975098
    5. '.depth' → logprob: -6.917550086975098
    6. ' .' → logprob: -6.917550086975098
    7. 'MOD' → logprob: -10.167550086975098
    8. ' ' → logprob: -11.042550086975098
    9. '._' → logprob: -11.167550086975098
    10. '.bit' → logprob: -11.167550086975098

Token 164: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197508051991463
    2. '=' → logprob: -2.8119750022888184
    3. '[' → logprob: -12.561975479125977
    4. ' ' → logprob: -12.811975479125977
    5. ' =[' → logprob: -14.936975479125977
    6. '   ' → logprob: -15.311975479125977
    7. ']' → logprob: -15.686975479125977
    8. ')' → logprob: -16.061975479125977
    9. '  ' → logprob: -16.186975479125977
    10. '=[' → logprob: -16.686975479125977

Token 165: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.029751067981123924
    2. '[' → logprob: -3.5297510623931885
    3. ' ' → logprob: -15.02975082397461
    4. '[int' → logprob: -16.40475082397461
    5. '[n' → logprob: -16.77975082397461
    6. '   ' → logprob: -17.77975082397461
    7. '[self' → logprob: -17.77975082397461
    8. '[class' → logprob: -18.77975082397461
    9. '[len' → logprob: -19.15475082397461
    10. ' ' → logprob: -19.15475082397461

Token 166: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '۰' → logprob: -19.25010871887207
    4. '   ' → logprob: -19.37510871887207
    5. '00' → logprob: -20.37510871887207
    6. '000' → logprob: -20.50010871887207
    7. '  ' → logprob: -21.12510871887207
    8. '０' → logprob: -21.50010871887207
    9. '    ' → logprob: -21.87510871887207
    10. ' ' → logprob: -22.50010871887207

Token 167: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001064963056705892
    2. ']*(' → logprob: -6.876064777374268
    3. ']*' → logprob: -10.876065254211426
    4. ' ]' → logprob: -11.376065254211426
    5. ']+' → logprob: -13.626065254211426
    6. ' for' → logprob: -15.376065254211426
    7. ',' → logprob: -16.12606430053711
    8. ')' → logprob: -16.25106430053711
    9. '   ' → logprob: -17.00106430053711
    10. 'for' → logprob: -17.62606430053711

Token 168: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.19125470519065857
    2. ']*(' → logprob: -2.1912546157836914
    3. ' *' → logprob: -3.1912546157836914
    4. '*' → logprob: -4.441254615783691
    5. '*(' → logprob: -5.566254615783691
    6. ' for' → logprob: -6.066254615783691
    7. ']*' → logprob: -6.191254615783691
    8. ')' → logprob: -7.566254615783691
    9. ',' → logprob: -7.816254615783691
    10. 'for' → logprob: -8.816254615783691

Token 169: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004144288133829832
    2. ' (' → logprob: -5.504144191741943
    3. '(self' → logprob: -9.754144668579102
    4. '(' → logprob: -12.754144668579102
    5. '((' → logprob: -12.754144668579102
    6. '   ' → logprob: -13.754144668579102
    7. '(size' → logprob: -14.879144668579102
    8. '  ' → logprob: -16.0041446685791
    9. '(nn' → logprob: -16.0041446685791
    10. ' ' → logprob: -16.6291446685791

Token 170: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.05041678622364998
    2. 'n' → logprob: -3.0504167079925537
    3. ' (' → logprob: -6.675416946411133
    4. '(self' → logprob: -8.425416946411133
    5. 'self' → logprob: -8.550416946411133
    6. ' n' → logprob: -9.300416946411133
    7. '(' → logprob: -9.925416946411133
    8. '   ' → logprob: -11.800416946411133
    9. '[n' → logprob: -13.550416946411133
    10. ' self' → logprob: -13.550416946411133

Token 171: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20141461491584778
    2. ' +' → logprob: -1.7014145851135254
    3. ' ' → logprob: -14.701415061950684
    4. ' +
' → logprob: -14.701415061950684
    5. '+
' → logprob: -15.076415061950684
    6. ' plus' → logprob: -17.076414108276367
    7. '+n' → logprob: -17.076414108276367
    8. '1' → logprob: -18.076414108276367
    9. ')' → logprob: -18.826414108276367
    10. ' +
' → logprob: -18.826414108276367

Token 172: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011248346709180623
    2. ' ' → logprob: -9.125112533569336
    3. '2' → logprob: -12.625112533569336
    4. '   ' → logprob: -16.375112533569336
    5. '  ' → logprob: -18.000112533569336
    6. '```' → logprob: -18.312612533569336
    7. '5' → logprob: -19.187612533569336
    8. '１' → logprob: -19.687612533569336
    9. '7' → logprob: -19.812612533569336
    10. '10' → logprob: -20.062612533569336

Token 173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2233183042553719e-05
    2. '2' → logprob: -11.375012397766113
    3. ' ' → logprob: -14.125012397766113
    4. '
' → logprob: -17.125011444091797
    5. '5' → logprob: -17.500011444091797
    6. '   ' → logprob: -17.500011444091797
    7. '```' → logprob: -17.937511444091797
    8. '10' → logprob: -18.062511444091797
    9. '  ' → logprob: -18.875011444091797
    10. '

' → logprob: -19.125011444091797

Token 174: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003827676991932094
    2. ')
' → logprob: -7.875382900238037
    3. ' )' → logprob: -13.875382423400879
    4. '<|end|>' → logprob: -14.000382423400879
    5. ')

' → logprob: -14.875382423400879
    6. ')
' → logprob: -15.375382423400879
    7. '       ' → logprob: -16.000383377075195
    8. '),' → logprob: -16.625383377075195
    9. ')#' → logprob: -17.625383377075195
    10. '```' → logprob: -18.250383377075195

Token 175: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014585580676794052
    2. '
' → logprob: -4.889585494995117
    3. '<|end|>' → logprob: -5.014585494995117
    4. ',' → logprob: -8.764585494995117
    5. 'self' → logprob: -9.639585494995117
    6. ')' → logprob: -10.764585494995117
    7. '```' → logprob: -10.889585494995117
    8. '        
' → logprob: -11.139585494995117
    9. '<|end|>' → logprob: -11.389585494995117
    10. ',
' → logprob: -12.264585494995117

Token 176: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09046526253223419
    2. '
' → logprob: -3.0904653072357178
    3. 'self' → logprob: -3.2154653072357178
    4. '<|end|>' → logprob: -7.715465068817139
    5. '        
' → logprob: -9.340465545654297
    6. ' self' → logprob: -9.340465545654297
    7. ',' → logprob: -9.340465545654297
    8. '   ' → logprob: -10.465465545654297
    9. '
' → logprob: -10.590465545654297
    10. ' 
' → logprob: -10.840465545654297

Token 177: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 178: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6952551603317261
    2. 'self' → logprob: -0.6952551603317261
    3. '#' → logprob: -6.945255279541016
    4. '0' → logprob: -8.070255279541016
    5. '       ' → logprob: -8.070255279541016
    6. '[' → logprob: -8.195255279541016
    7. '   ' → logprob: -10.195255279541016
    8. 'def' → logprob: -10.195255279541016
    9. 'One' → logprob: -10.320255279541016
    10. ' self' → logprob: -10.570255279541016

Token 179: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.08289787918329239
    2. '-index' → logprob: -3.207897901535034
    3. ' -' → logprob: -4.207897663116455
    4. ')' → logprob: -4.332897663116455
    5. ')-' → logprob: -5.082897663116455
    6. '-' → logprob: -6.082897663116455
    7. ' )' → logprob: -7.332897663116455
    8. 'based' → logprob: -7.457897663116455
    9. '_based' → logprob: -7.832897663116455
    10. ' ' → logprob: -8.707898139953613

Token 180: ' indexing' (ID: 105989)
  Prédit: ' indexing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' indexing' → logprob: -0.8006433844566345
    2. ' index' → logprob: -1.0506434440612793
    3. 'index' → logprob: -1.9256434440612793
    4. '<|end|>' → logprob: -2.9256434440612793
    5. '
' → logprob: -7.175643444061279
    6. ' indices' → logprob: -8.175642967224121
    7. ' indexed' → logprob: -8.800642967224121
    8. 'indices' → logprob: -8.925642967224121
    9. 'indexed' → logprob: -9.050642967224121
    10. '-index' → logprob: -9.175642967224121

Token 181: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01585792563855648
    2. '<|end|>' → logprob: -4.390857696533203
    3. '
' → logprob: -5.765857696533203
    4. ',' → logprob: -9.515857696533203
    5. 'self' → logprob: -9.640857696533203
    6. '<|end|>' → logprob: -10.765857696533203
    7. ',
' → logprob: -11.265857696533203
    8. '        
' → logprob: -11.640857696533203
    9. ')' → logprob: -11.640857696533203
    10. '   ' → logprob: -12.640857696533203

Token 182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009944960474967957
    2. '
' → logprob: -4.634944915771484
    3. 'self' → logprob: -9.759944915771484
    4. '<|end|>' → logprob: -9.884944915771484
    5. '        
' → logprob: -10.259944915771484
    6. '```' → logprob: -11.009944915771484
    7. ',' → logprob: -11.509944915771484
    8. '   ' → logprob: -12.884944915771484
    9. '           ' → logprob: -13.384944915771484
    10. '  
' → logprob: -13.384944915771484

Token 183: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03391699865460396
    2. ' self' → logprob: -4.03391695022583
    3. '       ' → logprob: -4.15891695022583
    4. '   ' → logprob: -11.658917427062988
    5. 'import' → logprob: -13.033917427062988
    6. 'from' → logprob: -13.158917427062988
    7. ' ' → logprob: -13.283917427062988
    8. '	self' → logprob: -13.783917427062988
    9. '
' → logprob: -14.033917427062988
    10. '      ' → logprob: -14.908917427062988

Token 184: '.depth' (ID: 89791)
  Prédit: '.depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.depth' → logprob: -0.20301134884357452
    2. '.mod' → logprob: -1.703011393547058
    3. '.' → logprob: -6.578011512756348
    4. '.dep' → logprob: -8.953011512756348
    5. '.deep' → logprob: -10.578011512756348
    6. 'depth' → logprob: -11.078011512756348
    7. ' .' → logprob: -11.328011512756348
    8. '.MOD' → logprob: -11.953011512756348
    9. 'mod' → logprob: -12.578011512756348
    10. '.mods' → logprob: -13.453011512756348

Token 185: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804366663098335
    2. '=' → logprob: -3.288043737411499
    3. ' ' → logprob: -13.038043975830078
    4. '=len' → logprob: -16.913043975830078
    5. '=int' → logprob: -18.288043975830078
    6. '  ' → logprob: -18.663043975830078
    7. '=n' → logprob: -19.163043975830078
    8. '   ' → logprob: -19.288043975830078
    9. ' =(' → logprob: -19.788043975830078
    10. ',' → logprob: -19.913043975830078

Token 186: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4942816495895386
    2. ' (' → logprob: -1.4942816495895386
    3. 'n' → logprob: -2.119281768798828
    4. '(n' → logprob: -3.119281768798828
    5. '(' → logprob: -7.994281768798828
    6. 'self' → logprob: -8.119281768798828
    7. ' self' → logprob: -8.244281768798828
    8. ' ' → logprob: -8.744281768798828
    9. '(self' → logprob: -9.869281768798828
    10. 'len' → logprob: -9.994281768798828

Token 187: '.bit' (ID: 61866)
  Prédit: '.bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bit' → logprob: -0.0015070053050294518
    2. '.' → logprob: -6.501506805419922
    3. ' .' → logprob: -12.501506805419922
    4. ').' → logprob: -15.001506805419922
    5. '
' → logprob: -15.126506805419922
    6. '.to' → logprob: -16.001506805419922
    7. '.
' → logprob: -16.126506805419922
    8. '   ' → logprob: -16.251506805419922
    9. 'bit' → logprob: -17.501506805419922
    10. ' ' → logprob: -18.001506805419922

Token 188: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -9.088346359931165e-07
    2. 'length' → logprob: -14.875000953674316
    3. '_l' → logprob: -15.250000953674316
    4. 'ength' → logprob: -16.25
    5. '_' → logprob: -16.375
    6. '_LENGTH' → logprob: -17.625
    7. '_le' → logprob: -19.25
    8. '_width' → logprob: -19.375
    9. '_len' → logprob: -19.75
    10. '_leg' → logprob: -19.75

Token 189: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.9040898880339228e-05
    2. '()
' → logprob: -11.125028610229492
    3. ' ()' → logprob: -11.500028610229492
    4. '(' → logprob: -13.125028610229492
    5. '()+' → logprob: -14.500028610229492
    6. '()

' → logprob: -15.250028610229492
    7. '()>' → logprob: -15.250028610229492
    8. '()<<' → logprob: -15.500028610229492
    9. '()`' → logprob: -15.500028610229492
    10. '(),' → logprob: -15.750028610229492

Token 190: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007261329446919262
    2. '
' → logprob: -7.250726222991943
    3. ' self' → logprob: -12.500725746154785
    4. ',' → logprob: -12.625725746154785
    5. '   ' → logprob: -13.125725746154785
    6. 'self' → logprob: -13.250725746154785
    7. '<|end|>' → logprob: -13.875725746154785
    8. '        
' → logprob: -14.125725746154785
    9. ')' → logprob: -14.375725746154785
    10. '      ' → logprob: -14.750725746154785

Token 191: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32539722323417664
    2. '       ' → logprob: -1.325397253036499
    3. 'self' → logprob: -4.45039701461792
    4. ',' → logprob: -8.700397491455078
    5. ' self' → logprob: -9.825397491455078
    6. '   ' → logprob: -9.950397491455078
    7. '
' → logprob: -10.325397491455078
    8. ',
' → logprob: -10.950397491455078
    9. '+' → logprob: -11.200397491455078
    10. '        
' → logprob: -11.450397491455078

Token 192: ' Needed' (ID: 96324)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09651313722133636
    2. '<|end|>' → logprob: -3.471513032913208
    3. '
' → logprob: -3.721513032913208
    4. ' ' → logprob: -4.346513271331787
    5. '        ' → logprob: -5.221513271331787
    6. ' self' → logprob: -5.471513271331787
    7. '   ' → logprob: -5.596513271331787
    8. ' 
' → logprob: -6.096513271331787
    9. 'self' → logprob: -6.221513271331787
    10. 'mod' → logprob: -6.596513271331787

Token 193: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47702476382255554
    2. '<|end|>' → logprob: -1.102024793624878
    3. 'for' → logprob: -3.602024793624878
    4. ' to' → logprob: -4.227024555206299
    5. '<|end|>' → logprob: -6.227024555206299
    6. '
' → logprob: -6.602024555206299
    7. '       ' → logprob: -7.602024555206299
    8. ' ' → logprob: -7.602024555206299
    9. 'to' → logprob: -7.977024555206299
    10. '        ' → logprob: -9.477025032043457

Token 194: ' lower' (ID: 6931)
  Prédit: ' efficient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' efficient' → logprob: -0.6482028365135193
    2. ' self' → logprob: -2.148202896118164
    3. 'self' → logprob: -2.523202896118164
    4. ' traversal' → logprob: -2.898202896118164
    5. ' range' → logprob: -3.273202896118164
    6. 'efficient' → logprob: -3.398202896118164
    7. ' binary' → logprob: -3.523202896118164
    8. ' the' → logprob: -4.023202896118164
    9. ' travers' → logprob: -4.898202896118164
    10. ' log' → logprob: -4.898202896118164

Token 195: '_bound' (ID: 47558)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.8182281851768494
    2. '_bound' → logprob: -0.8182281851768494
    3. '_bit' → logprob: -2.568228244781494
    4. '_' → logprob: -4.318228244781494
    5. 'bound' → logprob: -4.693228244781494
    6. '_bits' → logprob: -5.568228244781494
    7. '_mask' → logprob: -6.318228244781494
    8. '_level' → logprob: -6.443228244781494
    9. '```' → logprob: -6.568228244781494
    10. '_update' → logprob: -6.818228244781494

Token 196: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021505001932382584
    2. '
' → logprob: -6.252150535583496
    3. '<|end|>' → logprob: -8.627150535583496
    4. ',' → logprob: -11.002150535583496
    5. 'self' → logprob: -11.752150535583496
    6. '   ' → logprob: -11.877150535583496
    7. ' self' → logprob: -13.127150535583496
    8. ',
' → logprob: -13.377150535583496
    9. '
' → logprob: -13.502150535583496
    10. '<|end|>' → logprob: -13.752150535583496

Token 197: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.580929347255733e-05
    2. '<|end|>' → logprob: -11.875016212463379
    3. ',' → logprob: -12.250016212463379
    4. 'self' → logprob: -13.250016212463379
    5. '
' → logprob: -14.000016212463379
    6. ' self' → logprob: -14.875016212463379
    7. '```' → logprob: -15.375016212463379
    8. '   ' → logprob: -15.375016212463379
    9. '        
' → logprob: -15.875016212463379
    10. ',
' → logprob: -16.375015258789062

Token 198: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033645043149590492
    2. ' self' → logprob: -6.128364562988281
    3. 'self' (adapté à ' self') → logprob: -6.753364562988281
    4. '   ' → logprob: -12.378364562988281
    5. '
' → logprob: -12.878364562988281
    6. ' ' → logprob: -13.753364562988281
    7. '	self' → logprob: -13.753364562988281
    8. '```' → logprob: -14.378364562988281
    9. '	' → logprob: -14.503364562988281
    10. '           ' → logprob: -14.878364562988281

Token 199: '.mod' (ID: 19046)
  Prédit: '.mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -0.0009289718000218272
    2. '.' → logprob: -7.75092887878418
    3. ' .' → logprob: -7.75092887878418
    4. '.MOD' → logprob: -9.62592887878418
    5. '.m' → logprob: -14.62592887878418
    6. '.Mod' → logprob: -14.87592887878418
    7. 'mod' → logprob: -15.25092887878418
    8. 'MOD' → logprob: -15.62592887878418
    9. '.mods' → logprob: -15.75092887878418
    10. '.mode' → logprob: -16.37592887878418

Token 200: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029754776507616043
    2. '=' → logprob: -3.529754877090454
    3. ' ' → logprob: -12.404754638671875
    4. '  ' → logprob: -16.529754638671875
    5. '   ' → logprob: -18.404754638671875
    6. '=int' → logprob: -18.654754638671875
    7. '＝' → logprob: -19.904754638671875
    8. ')' → logprob: -19.904754638671875
    9. ',' → logprob: -20.154754638671875
    10. '<|end|>' → logprob: -20.529754638671875

Token 201: ' MOD' (ID: 32868)
  Prédit: ' MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' MOD' → logprob: -0.023246178403496742
    2. 'MOD' → logprob: -3.7732462882995605
    3. '_MOD' → logprob: -15.023245811462402
    4. ' ' → logprob: -15.523245811462402
    5. ' MODE' → logprob: -17.52324676513672
    6. '   ' → logprob: -17.52324676513672
    7. '.MOD' → logprob: -18.02324676513672
    8. ' ' → logprob: -18.52324676513672
    9. 'M' → logprob: -18.64824676513672
    10. ' M' → logprob: -18.64824676513672

Token 202: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21194235980510712
    2. '<|end|>' → logprob: -1.7119423151016235
    3. '    
' → logprob: -5.211942195892334
    4. '<|end|>' → logprob: -6.086942195892334
    5. '

' → logprob: -6.961942195892334
    6. '   ' → logprob: -7.211942195892334
    7. 'def' → logprob: -7.836942195892334
    8. '  
' → logprob: -8.336942672729492
    9. ' 
' → logprob: -9.086942672729492
    10. '        
' → logprob: -9.461942672729492

Token 203: '   ' (ID: 271)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.5662596821784973
    2. '
' → logprob: -1.1912596225738525
    3. '<|end|>' → logprob: -2.9412596225738525
    4. '   ' → logprob: -3.3162596225738525
    5. '  
' → logprob: -3.6912596225738525
    6. '        
' → logprob: -5.441259860992432
    7. '<|end|>' → logprob: -5.691259860992432
    8. 'def' → logprob: -5.941259860992432
    9. ' 
' → logprob: -6.441259860992432
    10. '   
' → logprob: -6.566259860992432

Token 204: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46125778555870056
    2. 'def' (adapté à ' def') → logprob: -1.836257815361023
    3. '
' → logprob: -2.2112576961517334
    4. '    
' → logprob: -2.4612576961517334
    5. ' def' → logprob: -4.5862579345703125
    6. ' 
' → logprob: -5.5862579345703125
    7. '        
' → logprob: -7.8362579345703125
    8. '  
' → logprob: -7.8362579345703125
    9. '	def' → logprob: -8.836257934570312
    10. '   
' → logprob: -9.086257934570312

Token 205: ' sum' (ID: 4215)
  Prédit: ' update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.28915920853614807
    2. '_update' → logprob: -1.9141591787338257
    3. ' add' → logprob: -3.0391592979431152
    4. 'update' → logprob: -3.6641592979431152
    5. ' _' → logprob: -4.289159297943115
    6. '_add' → logprob: -4.789159297943115
    7. ' sum' → logprob: -5.914159297943115
    8. '_' → logprob: -6.664159297943115
    9. '_sum' → logprob: -6.664159297943115
    10. 'add' → logprob: -6.664159297943115

Token 206: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.013315049931406975
    2. '(' → logprob: -4.513315200805664
    3. '_' → logprob: -6.888315200805664
    4. ' (' → logprob: -7.513315200805664
    5. '_up' → logprob: -8.263315200805664
    6. '_prefix' → logprob: -8.638315200805664
    7. '_(' → logprob: -9.263315200805664
    8. '_query' → logprob: -9.888315200805664
    9. '_until' → logprob: -11.138315200805664
    10. ')' → logprob: -11.263315200805664

Token 207: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09539772570133209
    2. '(self' → logprob: -2.470397710800171
    3. ')' → logprob: -6.09539794921875
    4. 'self' → logprob: -6.34539794921875
    5. '   ' → logprob: -7.34539794921875
    6. '_,' → logprob: -7.84539794921875
    7. ' ,' → logprob: -8.22039794921875
    8. '       ' → logprob: -8.59539794921875
    9. ',self' → logprob: -9.22039794921875
    10. ',
' → logprob: -9.34539794921875

Token 208: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.38732588291168213
    2. 'i' → logprob: -1.2623258829116821
    3. 'idx' → logprob: -4.012325763702393
    4. ' idx' → logprob: -4.387325763702393
    5. ' r' → logprob: -6.387325763702393
    6. 'index' → logprob: -6.387325763702393
    7. 'r' → logprob: -6.512325763702393
    8. 'self' → logprob: -7.137325763702393
    9. '   ' → logprob: -7.512325763702393
    10. ' index' → logprob: -8.13732624053955

Token 209: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009411202743649483
    2. ')' → logprob: -5.384411334991455
    3. '):
' → logprob: -5.509411334991455
    4. ':' → logprob: -7.384411334991455
    5. ' ):' → logprob: -9.384410858154297
    6. '   ' → logprob: -11.134410858154297
    7. '):
' → logprob: -12.009410858154297
    8. ' )' → logprob: -13.634410858154297
    9. '  ' → logprob: -14.384410858154297
    10. ' ' → logprob: -14.384410858154297

Token 210: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6816863417625427
    2. '(self' → logprob: -1.1816864013671875
    3. ':' → logprob: -1.8066864013671875
    4. '   ' → logprob: -4.5566864013671875
    5. ',' → logprob: -5.6816864013671875
    6. 'self' → logprob: -6.0566864013671875
    7. '):' → logprob: -6.0566864013671875
    8. '(' → logprob: -6.3066864013671875
    9. ')' → logprob: -7.9316864013671875
    10. '    ' → logprob: -8.181686401367188

Token 211: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05081251636147499
    2. ':' → logprob: -3.4258124828338623
    3. '=' → logprob: -5.425812721252441
    4. 'result' → logprob: -5.800812721252441
    5. '   ' → logprob: -5.800812721252441
    6. 's' → logprob: -6.675812721252441
    7. 'total' → logprob: -7.175812721252441
    8. ' s' → logprob: -7.675812721252441
    9. ' =' → logprob: -7.925812721252441
    10. '        
' → logprob: -7.925812721252441

Token 212: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005092748906463385
    2. '   ' → logprob: -6.130092620849609
    3. '    ' → logprob: -6.380092620849609
    4. 'int' → logprob: -8.50509262084961
    5. '     ' → logprob: -8.63009262084961
    6. 's' → logprob: -8.75509262084961
    7. '      ' → logprob: -8.88009262084961
    8. '        ' → logprob: -9.13009262084961
    9. '"""' → logprob: -9.13009262084961
    10. ' s' → logprob: -9.63009262084961

Token 213: ' Compute' (ID: 45438)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.7486705183982849
    2. ' result' → logprob: -1.6236705780029297
    3. 'result' → logprob: -1.9986705780029297
    4. ' s' → logprob: -2.3736705780029297
    5. 'res' → logprob: -2.9986705780029297
    6. ' total' → logprob: -3.9986705780029297
    7. '       ' → logprob: -3.9986705780029297
    8. 'total' → logprob: -5.37367057800293
    9. 's' → logprob: -5.49867057800293
    10. '    ' → logprob: -6.37367057800293

Token 214: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.06490177661180496
    2. ' s' → logprob: -3.689901828765869
    3. 'the' → logprob: -4.689901828765869
    4. 'prefix' → logprob: -5.064901828765869
    5. 's' → logprob: -5.189901828765869
    6. ' prefix' → logprob: -5.439901828765869
    7. '       ' → logprob: -5.814901828765869
    8. ' self' → logprob: -6.064901828765869
    9. '   ' → logprob: -6.189901828765869
    10. 'self' → logprob: -6.814901828765869

Token 215: ' prefix' (ID: 18633)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.7053672671318054
    2. 'result' → logprob: -1.7053673267364502
    3. ' res' → logprob: -2.08036732673645
    4. 'res' → logprob: -2.33036732673645
    5. ' s' → logprob: -2.45536732673645
    6. 's' → logprob: -4.330367088317871
    7. ' total' → logprob: -6.330367088317871
    8. '   ' → logprob: -8.080367088317871
    9. ' ' → logprob: -8.205367088317871
    10. 'total' → logprob: -8.205367088317871

Token 216: ' sum' (ID: 4215)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10270769149065018
    2. '_sum' → logprob: -3.102707624435425
    3. ' ' → logprob: -3.602707624435425
    4. ' _' → logprob: -4.352707862854004
    5. ' sum' → logprob: -5.352707862854004
    6. 'sum' → logprob: -5.727707862854004
    7. '   ' → logprob: -6.227707862854004
    8. '  ' → logprob: -6.852707862854004
    9. ' up' → logprob: -7.977707862854004
    10. 's' → logprob: -8.477707862854004

Token 217: ' of' (ID: 328)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2767821252346039
    2. '       ' → logprob: -1.5267821550369263
    3. '   ' → logprob: -4.901782035827637
    4. '(' → logprob: -5.151782035827637
    5. ' up' → logprob: -5.151782035827637
    6. '_up' → logprob: -6.026782035827637
    7. 'self' → logprob: -6.651782035827637
    8. 'Up' → logprob: -8.276782035827637
    9. '_' → logprob: -8.526782035827637
    10. '        
' → logprob: -8.651782035827637

Token 218: ' elements' (ID: 8632)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.013546522706747055
    2. 'i' → logprob: -5.013546466827393
    3. ' self' → logprob: -5.388546466827393
    4. ' up' → logprob: -7.013546466827393
    5. 'self' → logprob: -7.138546466827393
    6. '   ' → logprob: -8.26354694366455
    7. '       ' → logprob: -9.13854694366455
    8. ' def' → logprob: -10.01354694366455
    9. 'def' → logprob: -10.13854694366455
    10. ' all' → logprob: -10.88854694366455

Token 219: ' from' (ID: 591)
  Prédit: ' up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' up' → logprob: -0.5878231525421143
    2. '       ' → logprob: -0.8378231525421143
    3. '   ' → logprob: -5.212822914123535
    4. '_up' → logprob: -6.962822914123535
    5. '        ' → logprob: -7.212822914123535
    6. '    ' → logprob: -7.212822914123535
    7. 'up' → logprob: -7.337822914123535
    8. ' upto' → logprob: -7.837822914123535
    9. '[' → logprob: -8.212822914123535
    10. '_' → logprob: -8.212822914123535

Token 220: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05533400550484657
    2. ' ' → logprob: -3.0553340911865234
    3. '0' → logprob: -5.055334091186523
    4. '       ' → logprob: -8.430334091186523
    5. '   ' → logprob: -9.305334091186523
    6. ' index' → logprob: -11.430334091186523
    7. '[' → logprob: -11.555334091186523
    8. 'index' → logprob: -11.680334091186523
    9. 'def' → logprob: -12.555334091186523
    10. '```' → logprob: -13.430334091186523

Token 221: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003709338838234544
    2. '0' → logprob: -5.628709316253662
    3. 'index' → logprob: -9.37870979309082
    4. '   ' → logprob: -11.37870979309082
    5. ' ' → logprob: -12.00370979309082
    6. '       ' → logprob: -12.12870979309082
    7. '           ' → logprob: -14.75370979309082
    8. ' index' → logprob: -15.00370979309082
    9. '[' → logprob: -15.50370979309082
    10. 'def' → logprob: -15.62870979309082

Token 222: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.06197698414325714
    2. 'to' → logprob: -3.311976909637451
    3. '       ' → logprob: -3.936976909637451
    4. ' through' → logprob: -5.936976909637451
    5. '        ' → logprob: -7.561976909637451
    6. ' up' → logprob: -8.06197738647461
    7. '   ' → logprob: -8.06197738647461
    8. '    ' → logprob: -9.31197738647461
    9. ')' → logprob: -9.81197738647461
    10. 'through' → logprob: -9.81197738647461

Token 223: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2519468665122986
    2. 'i' → logprob: -1.5019469261169434
    3. '   ' → logprob: -11.376946449279785
    4. '       ' → logprob: -12.376946449279785
    5. '	i' → logprob: -13.501946449279785
    6. 'index' → logprob: -15.751946449279785
    7. ' ' → logprob: -16.0019474029541
    8. '```' → logprob: -16.5019474029541
    9. ' index' → logprob: -16.6269474029541
    10. '    ' → logprob: -16.6269474029541

Token 224: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05670328065752983
    2. ':' → logprob: -3.5567033290863037
    3. ',' → logprob: -4.806703090667725
    4. '   ' → logprob: -5.056703090667725
    5. '+' → logprob: -5.181703090667725
    6. ':
' → logprob: -6.431703090667725
    7. ' +' → logprob: -7.306703090667725
    8. '=' → logprob: -7.681703090667725
    9. '        ' → logprob: -7.681703090667725
    10. ' (' → logprob: -7.681703090667725

Token 225: 'inclusive' (ID: 186093)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0108726024627686
    2. '       ' → logprob: -1.2608726024627686
    3. ' inclusive' → logprob: -2.0108726024627686
    4. '):
' → logprob: -2.6358726024627686
    5. 'inclusive' → logprob: -2.8858726024627686
    6. '+' → logprob: -3.7608726024627686
    7. '   ' → logprob: -4.010872840881348
    8. ' i' → logprob: -4.510872840881348
    9. 'def' → logprob: -4.885872840881348
    10. '):' → logprob: -5.135872840881348

Token 226: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.423794150352478
    2. '):
' → logprob: -1.548794150352478
    3. '       ' → logprob: -2.6737942695617676
    4. ')' → logprob: -2.7987942695617676
    5. '   ' → logprob: -7.173794269561768
    6. '+' → logprob: -7.173794269561768
    7. ',' → logprob: -7.298794269561768
    8. ')
' → logprob: -8.17379379272461
    9. '):
' → logprob: -8.54879379272461
    10. 'def' → logprob: -9.42379379272461

Token 227: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05511392280459404
    2. ':' → logprob: -3.5551140308380127
    3. ',' → logprob: -3.9301140308380127
    4. '.' → logprob: -5.555113792419434
    5. '   ' → logprob: -7.930113792419434
    6. ':
' → logprob: -8.555113792419434
    7. '
' → logprob: -8.930113792419434
    8. '<|end|>' → logprob: -9.180113792419434
    9. '+' → logprob: -9.430113792419434
    10. '=' → logprob: -9.555113792419434

Token 228: ' modulo' (ID: 112372)
  Prédit: ' modulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -0.9947210550308228
    2. ' mod' → logprob: -1.6197210550308228
    3. 'in' → logprob: -1.8697210550308228
    4. 'mod' → logprob: -2.244720935821533
    5. ' self' → logprob: -3.119720935821533
    6. ' modular' → logprob: -3.619720935821533
    7. ' modulus' → logprob: -4.119720935821533
    8. 'i' → logprob: -4.369720935821533
    9. ' i' → logprob: -4.494720935821533
    10. ' the' → logprob: -4.619720935821533

Token 229: '.
' (ID: 558)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.40274059772491455
    2. '       ' → logprob: -1.9027405977249146
    3. '   ' → logprob: -3.152740478515625
    4. ' self' → logprob: -3.277740478515625
    5. '.' → logprob: -3.777740478515625
    6. '_' → logprob: -4.152740478515625
    7. ' (' → logprob: -4.402740478515625
    8. ',' → logprob: -4.777740478515625
    9. '    ' → logprob: -4.777740478515625
    10. '  ' → logprob: -4.902740478515625

Token 230: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08540932834148407
    2. ':' → logprob: -2.96040940284729
    3. '        
' → logprob: -4.835409164428711
    4. '   ' → logprob: -5.210409164428711
    5. '
' → logprob: -5.585409164428711
    6. ')' → logprob: -6.335409164428711
    7. '    
' → logprob: -6.460409164428711
    8. ' 
' → logprob: -6.710409164428711
    9. '  
' → logprob: -6.710409164428711
    10. '\n' → logprob: -7.085409164428711

Token 231: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005948548787273467
    2. '   ' → logprob: -8.750595092773438
    3. ' result' → logprob: -9.125595092773438
    4. '        
' → logprob: -9.375595092773438
    5. 'result' → logprob: -9.750595092773438
    6. '=' → logprob: -10.125595092773438
    7. 's' → logprob: -10.375595092773438
    8. ' i' → logprob: -10.750595092773438
    9. '#' → logprob: -10.750595092773438
    10. 'i' → logprob: -11.500595092773438

Token 232: ' Args' (ID: 39185)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8606838583946228
    2. 'res' → logprob: -0.8606838583946228
    3. ' res' → logprob: -2.1106839179992676
    4. 'result' → logprob: -3.8606839179992676
    5. ' result' → logprob: -4.735683917999268
    6. ' s' → logprob: -6.485683917999268
    7. 's' → logprob: -6.610683917999268
    8. '   ' → logprob: -8.48568344116211
    9. 'r' → logprob: -9.61068344116211
    10. 'ret' → logprob: -10.36068344116211

Token 233: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3685387670993805
    2. ':' → logprob: -1.368538737297058
    3. ',' → logprob: -4.368538856506348
    4. '   ' → logprob: -4.493538856506348
    5. '):' → logprob: -4.618538856506348
    6. '=' → logprob: -5.243538856506348
    7. ')' → logprob: -5.868538856506348
    8. '):
' → logprob: -5.993538856506348
    9. 'self' → logprob: -6.243538856506348
    10. '<|end|>' → logprob: -6.368538856506348

Token 234: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25740766525268555
    2. ' i' → logprob: -1.7574076652526855
    3. 'i' → logprob: -3.3824076652526855
    4. '   ' → logprob: -4.3824076652526855
    5. '    ' → logprob: -5.7574076652526855
    6. '        ' → logprob: -5.8824076652526855
    7. '        
' → logprob: -7.8824076652526855
    8. ')' → logprob: -8.257408142089844
    9. '           ' → logprob: -8.632408142089844
    10. '):
' → logprob: -8.757408142089844

Token 235: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.10057293623685837
    2. ' i' → logprob: -2.3505728244781494
    3. '       ' → logprob: -8.10057258605957
    4. '   ' → logprob: -10.47557258605957
    5. 'self' → logprob: -10.60057258605957
    6. ' self' → logprob: -11.72557258605957
    7. ' ' → logprob: -14.22557258605957
    8. '  ' → logprob: -15.47557258605957
    9. '    ' → logprob: -15.47557258605957
    10. '	i' → logprob: -15.47557258605957

Token 236: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.30077841877937317
    2. ':' → logprob: -2.050778388977051
    3. ')' → logprob: -3.175778388977051
    4. '):
' → logprob: -3.425778388977051
    5. '<|end|>' → logprob: -3.550778388977051
    6. '   ' → logprob: -5.050778388977051
    7. '<|end|>' → logprob: -5.175778388977051
    8. '=' → logprob: -5.425778388977051
    9. ':int' → logprob: -5.800778388977051
    10. '       ' → logprob: -6.425778388977051

Token 237: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0007161272224038839
    2. ' int' → logprob: -7.250716209411621
    3. '       ' → logprob: -12.750716209411621
    4. ')' → logprob: -13.250716209411621
    5. 'self' → logprob: -14.000716209411621
    6. ':int' → logprob: -15.375716209411621
    7. '   ' → logprob: -15.875716209411621
    8. '[int' → logprob: -16.125715255737305
    9. '):' → logprob: -16.250715255737305
    10. '(int' → logprob: -16.875715255737305

Token 238: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008747059851884842
    2. '):
' → logprob: -5.383747100830078
    3. ')' → logprob: -5.508747100830078
    4. ':' → logprob: -10.008747100830078
    5. ' ):' → logprob: -11.258747100830078
    6. '   ' → logprob: -12.383747100830078
    7. '):
' → logprob: -13.258747100830078
    8. '):

' → logprob: -14.008747100830078
    9. '       ' → logprob: -14.383747100830078
    10. '=' → logprob: -14.758747100830078

Token 239: ' Index' (ID: 14580)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8329935669898987
    2. '       ' → logprob: -1.707993507385254
    3. ' ' → logprob: -1.832993507385254
    4. '        ' → logprob: -1.957993507385254
    5. '    ' → logprob: -3.582993507385254
    6. '<|end|>' → logprob: -3.582993507385254
    7. ' )' → logprob: -5.332993507385254
    8. ' The' → logprob: -5.832993507385254
    9. ' i' → logprob: -6.082993507385254
    10. 'The' → logprob: -6.332993507385254

Token 240: ' up' (ID: 869)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -1.020254135131836
    2. ':' → logprob: -1.395254135131836
    3. '       ' → logprob: -1.645254135131836
    4. '):
' → logprob: -2.395254135131836
    5. '=' → logprob: -3.145254135131836
    6. '   ' → logprob: -3.395254135131836
    7. ')' → logprob: -4.145254135131836
    8. '        ' → logprob: -6.270254135131836
    9. ' :' → logprob: -6.395254135131836
    10. '+' → logprob: -6.395254135131836

Token 241: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.5730705857276917
    2. '=' → logprob: -1.6980705261230469
    3. ' to' → logprob: -2.323070526123047
    4. '       ' → logprob: -2.573070526123047
    5. '_to' → logprob: -3.823070526123047
    6. '   ' → logprob: -4.073070526123047
    7. '_' → logprob: -5.198070526123047
    8. '0' → logprob: -5.323070526123047
    9. '-' → logprob: -5.448070526123047
    10. ')' → logprob: -5.573070526123047

Token 242: ' which' (ID: 1118)
  Prédit: 'which'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'which' → logprob: -0.10021605342626572
    2. ' which' → logprob: -2.3502161502838135
    3. 'Which' → logprob: -12.725215911865234
    4. '<|end|>' → logprob: -12.975215911865234
    5. 'and' → logprob: -13.225215911865234
    6. '(which' → logprob: -14.100215911865234
    7. 'where' → logprob: -14.350215911865234
    8. ' ' → logprob: -15.225215911865234
    9. ' wich' → logprob: -15.850215911865234
    10. ' and' → logprob: -15.975215911865234

Token 243: ' the' (ID: 290)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.06225750222802162
    2. ' the' → logprob: -3.1872575283050537
    3. '   ' → logprob: -4.937257289886475
    4. '       ' → logprob: -5.687257289886475
    5. 'to' → logprob: -5.937257289886475
    6. ' sum' → logprob: -6.187257289886475
    7. 'sum' → logprob: -6.312257289886475
    8. ' in' → logprob: -7.687257289886475
    9. 'the' → logprob: -8.187257766723633
    10. '_sum' → logprob: -8.562257766723633

Token 244: ' prefix' (ID: 18633)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.23990951478481293
    2. ' prefix' → logprob: -2.1149094104766846
    3. 'sum' → logprob: -2.4899094104766846
    4. 'prefix' → logprob: -4.989909648895264
    5. ' result' → logprob: -6.364909648895264
    6. '   ' → logprob: -8.364909172058105
    7. '_sum' → logprob: -8.614909172058105
    8. ' summ' → logprob: -8.864909172058105
    9. ' total' → logprob: -8.989909172058105
    10. 'result' → logprob: -9.114909172058105

Token 245: ' sum' (ID: 4215)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.49162039160728455
    2. ' _' → logprob: -1.616620421409607
    3. ' sum' → logprob: -1.991620421409607
    4. 'sum' → logprob: -3.2416203022003174
    5. '   ' → logprob: -5.4916205406188965
    6. '_' → logprob: -5.8666205406188965
    7. '       ' → logprob: -5.9916205406188965
    8. ' ' → logprob: -5.9916205406188965
    9. ' is' → logprob: -6.8666205406188965
    10. '  ' → logprob: -8.491620063781738

Token 246: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.08155524730682373
    2. '       ' → logprob: -2.8315553665161133
    3. 'is' → logprob: -5.081555366516113
    4. ' to' → logprob: -5.581555366516113
    5. '   ' → logprob: -5.956555366516113
    6. ')' → logprob: -6.331555366516113
    7. ' should' → logprob: -6.581555366516113
    8. '=' → logprob: -7.206555366516113
    9. 's' → logprob: -8.081555366516113
    10. ' =' → logprob: -8.206555366516113

Token 247: ' computed' (ID: 46716)
  Prédit: ' computed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' computed' → logprob: -0.3216113746166229
    2. 'computed' → logprob: -1.6966114044189453
    3. ' calculated' → logprob: -2.4466114044189453
    4. 'cal' → logprob: -5.696611404418945
    5. '   ' → logprob: -6.821611404418945
    6. '       ' → logprob: -8.821611404418945
    7. ' taken' → logprob: -9.446611404418945
    8. ' to' → logprob: -9.571611404418945
    9. ' queried' → logprob: -9.571611404418945
    10. 'taken' → logprob: -9.821611404418945

Token 248: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7802144885063171
    2. '):' → logprob: -1.280214548110962
    3. '):
' → logprob: -2.030214548110962
    4. ')' → logprob: -2.280214548110962
    5. ':' → logprob: -4.280214309692383
    6. '.' → logprob: -4.780214309692383
    7. '   ' → logprob: -5.530214309692383
    8. ',' → logprob: -6.780214309692383
    9. '```' → logprob: -7.530214309692383
    10. ').' → logprob: -7.655214309692383

Token 249: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003679767018184066
    2. '        
' → logprob: -6.0036797523498535
    3. ')' → logprob: -8.253680229187012
    4. '    
' → logprob: -8.503680229187012
    5. '\n' → logprob: -8.878680229187012
    6. '
' → logprob: -9.003680229187012
    7. '  
' → logprob: -9.503680229187012
    8. ':' → logprob: -9.753680229187012
    9. ' 
' → logprob: -9.753680229187012
    10. '   ' → logprob: -9.878680229187012

Token 250: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00091217877343297
    2. '   ' → logprob: -8.125911712646484
    3. '        
' → logprob: -8.250911712646484
    4. ':' → logprob: -8.750911712646484
    5. '
' → logprob: -10.500911712646484
    6. ')' → logprob: -10.625911712646484
    7. '    
' → logprob: -10.625911712646484
    8. '           ' → logprob: -10.875911712646484
    9. '    ' → logprob: -10.875911712646484
    10. '        ' → logprob: -10.875911712646484

Token 251: ' Returns' (ID: 9609)
  Prédit: 'Returns'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Returns' (adapté à ' Returns') → logprob: -0.321664959192276
    2. '       ' → logprob: -1.3216649293899536
    3. ' Returns' → logprob: -5.196664810180664
    4. '   ' → logprob: -6.446664810180664
    5. 'Return' → logprob: -7.321664810180664
    6. 'returns' → logprob: -8.571664810180664
    7. '"""
' → logprob: -8.821664810180664
    8. 'return' → logprob: -9.071664810180664
    9. '"""' → logprob: -9.571664810180664
    10. '
' → logprob: -10.946664810180664

Token 252: ':
' (ID: 734)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.0501512810587883
    2. ' (' → logprob: -3.9251513481140137
    3. ' ' → logprob: -4.300151348114014
    4. 'self' → logprob: -4.550151348114014
    5. '        ' → logprob: -6.175151348114014
    6. '0' → logprob: -7.050151348114014
    7. '(self' → logprob: -7.550151348114014
    8. '       ' → logprob: -7.550151348114014
    9. ':' → logprob: -7.675151348114014
    10. '    ' → logprob: -8.925150871276855

Token 253: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22551564872264862
    2. ' (' → logprob: -2.225515604019165
    3. '        ' → logprob: -3.225515604019165
    4. '0' → logprob: -3.475515604019165
    5. ' self' → logprob: -3.975515604019165
    6. ' ' → logprob: -6.350515842437744
    7. 'self' → logprob: -6.850515842437744
    8. ' int' → logprob: -7.600515842437744
    9. ' result' → logprob: -7.850515842437744
    10. 'int' → logprob: -8.850515365600586

Token 254: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.0019289902411401272
    2. ' int' → logprob: -6.251928806304932
    3. '       ' → logprob: -15.62692928314209
    4. '(int' → logprob: -15.62692928314209
    5. '   ' → logprob: -16.626928329467773
    6. '[int' → logprob: -18.001928329467773
    7. 'The' → logprob: -18.376928329467773
    8. 'Int' → logprob: -18.751928329467773
    9. '<int' → logprob: -18.876928329467773
    10. '	int' → logprob: -19.876928329467773

Token 255: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00418168306350708
    2. '       ' → logprob: -6.504181861877441
    3. ':
' → logprob: -6.879181861877441
    4. '(self' → logprob: -7.254181861877441
    5. ')' → logprob: -8.129181861877441
    6. '
' → logprob: -8.879181861877441
    7. '):' → logprob: -9.004181861877441
    8. ':return' → logprob: -9.129181861877441
    9. '```' → logprob: -9.879181861877441
    10. '):
' → logprob: -10.379181861877441

Token 256: ' The' (ID: 623)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.2481795847415924
    2. '       ' → logprob: -2.8731796741485596
    3. ' The' → logprob: -3.2481796741485596
    4. '        ' → logprob: -3.3731796741485596
    5. 'result' → logprob: -3.9981796741485596
    6. ' ' → logprob: -4.3731794357299805
    7. ' res' → logprob: -4.3731794357299805
    8. ' sum' → logprob: -4.3731794357299805
    9. ' (' → logprob: -5.1231794357299805
    10. ' self' → logprob: -5.2481794357299805

Token 257: ' prefix' (ID: 18633)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.9886270761489868
    2. ' prefix' → logprob: -0.9886270761489868
    3. 'prefix' → logprob: -1.9886270761489868
    4. 'sum' → logprob: -2.3636269569396973
    5. ' cumulative' → logprob: -4.488626956939697
    6. ' result' → logprob: -4.613626956939697
    7. 'result' → logprob: -6.988626956939697
    8. ' current' → logprob: -7.613626956939697
    9. '_prefix' → logprob: -7.738626956939697
    10. ' accumulated' → logprob: -7.863626956939697

Token 258: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.5681713223457336
    2. '_' → logprob: -1.5681712627410889
    3. ' _' → logprob: -2.068171262741089
    4. ' ' → logprob: -3.068171262741089
    5. '_sum' → logprob: -3.068171262741089
    6. 'sum' → logprob: -5.443171501159668
    7. '    ' → logprob: -8.318171501159668
    8. '_s' → logprob: -8.818171501159668
    9. '  ' → logprob: -8.818171501159668
    10. '        ' → logprob: -8.943171501159668

Token 259: ' from' (ID: 591)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.4207499623298645
    2. '       ' → logprob: -1.5457499027252197
    3. ' modulo' → logprob: -2.6707499027252197
    4. '%' → logprob: -3.0457499027252197
    5. ' up' → logprob: -5.045750141143799
    6. ' mod' → logprob: -5.795750141143799
    7. '   ' → logprob: -6.420750141143799
    8. 'mod' → logprob: -7.295750141143799
    9. '        ' → logprob: -7.545750141143799
    10. ' ' → logprob: -8.67074966430664

Token 260: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1617385298013687
    2. '1' → logprob: -2.536738634109497
    3. '0' → logprob: -2.661738634109497
    4. '       ' → logprob: -8.911738395690918
    5. '   ' → logprob: -9.911738395690918
    6. '        ' → logprob: -9.911738395690918
    7. ' zero' → logprob: -10.661738395690918
    8. '           ' → logprob: -10.786738395690918
    9. ' index' → logprob: -10.911738395690918
    10. ' start' → logprob: -11.036738395690918

Token 261: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006080718245357275
    2. '0' → logprob: -5.131080627441406
    3. ' ' → logprob: -8.881080627441406
    4. 'self' → logprob: -12.006080627441406
    5. '   ' → logprob: -13.006080627441406
    6. 'index' → logprob: -13.131080627441406
    7. 'start' → logprob: -14.131080627441406
    8. '[' → logprob: -15.006080627441406
    9. 'the' → logprob: -15.131080627441406
    10. '       ' → logprob: -15.381080627441406

Token 262: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.04047923535108566
    2. 'to' → logprob: -3.4154791831970215
    3. '       ' → logprob: -5.2904791831970215
    4. '   ' → logprob: -7.1654791831970215
    5. '           ' → logprob: -7.1654791831970215
    6. '        ' → logprob: -9.16547966003418
    7. ' through' → logprob: -10.66547966003418
    8. '    ' → logprob: -10.79047966003418
    9. ' up' → logprob: -11.16547966003418
    10. ' ' → logprob: -11.41547966003418

Token 263: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06197093799710274
    2. 'i' → logprob: -2.8119709491729736
    3. '   ' → logprob: -13.061970710754395
    4. '	i' → logprob: -15.061970710754395
    5. 'index' → logprob: -15.686970710754395
    6. ' index' → logprob: -15.811970710754395
    7. ' ' → logprob: -15.811970710754395
    8. '       ' → logprob: -15.936970710754395
    9. '```' → logprob: -16.18697166442871
    10. '_i' → logprob: -17.18697166442871

Token 264: ' modulo' (ID: 112372)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26965588331222534
    2. ')' → logprob: -2.76965594291687
    3. ' %' → logprob: -3.14465594291687
    4. ' +' → logprob: -3.26965594291687
    5. ' (' → logprob: -3.89465594291687
    6. ' modulo' → logprob: -4.144655704498291
    7. ' inclusive' → logprob: -4.394655704498291
    8. ',' → logprob: -4.394655704498291
    9. '+' → logprob: -4.519655704498291
    10. ' with' → logprob: -4.894655704498291

Token 265: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.1269593983888626
    2. 'self' → logprob: -2.1269593238830566
    3. '(self' → logprob: -11.376959800720215
    4. '       ' → logprob: -11.626959800720215
    5. ' ' → logprob: -12.001959800720215
    6. ' ' → logprob: -14.126959800720215
    7. '	self' → logprob: -14.251959800720215
    8. '=self' → logprob: -14.751959800720215
    9. '```' → logprob: -14.876959800720215
    10. ',' → logprob: -15.001959800720215

Token 266: '.mod' (ID: 19046)
  Prédit: '.mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -4.246537173457909e-06
    2. '.' → logprob: -12.625003814697266
    3. ' .' → logprob: -14.000003814697266
    4. 'mod' → logprob: -18.750003814697266
    5. '	mod' → logprob: -19.750003814697266
    6. '.MOD' → logprob: -19.875003814697266
    7. ' ' → logprob: -19.875003814697266
    8. '.mods' → logprob: -21.375003814697266
    9. ' mod' → logprob: -21.875003814697266
    10. 'MOD' → logprob: -22.125003814697266

Token 267: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13845402002334595
    2. '
' → logprob: -2.763453960418701
    3. ':' → logprob: -3.763453960418701
    4. '   ' → logprob: -4.013453960418701
    5. ')' → logprob: -5.013453960418701
    6. '.' → logprob: -5.138453960418701
    7. ',' → logprob: -5.638453960418701
    8. ':
' → logprob: -5.763453960418701
    9. '        
' → logprob: -6.388453960418701
    10. '):
' → logprob: -6.763453960418701

Token 268: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02499045990407467
    2. '   ' → logprob: -4.899990558624268
    3. ':' → logprob: -5.024990558624268
    4. '        
' → logprob: -5.649990558624268
    5. ')' → logprob: -6.024990558624268
    6. '    
' → logprob: -6.524990558624268
    7. '
' → logprob: -6.774990558624268
    8. '```' → logprob: -7.649990558624268
    9. '  
' → logprob: -8.27499008178711
    10. '\n' → logprob: -8.52499008178711

Token 269: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006152392830699682
    2. '   ' → logprob: -6.256152629852295
    3. '
' → logprob: -6.381152629852295
    4. '        
' → logprob: -7.131152629852295
    5. ':' → logprob: -7.631152629852295
    6. ')' → logprob: -7.881152629852295
    7. ',' → logprob: -8.506152153015137
    8. '<|end|>' → logprob: -9.006152153015137
    9. '```' → logprob: -9.006152153015137
    10. '    
' → logprob: -9.381152153015137

Token 270: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0071940007619559765
    2. 'res' → logprob: -5.5071940422058105
    3. 'result' → logprob: -6.5071940422058105
    4. 's' → logprob: -7.0071940422058105
    5. '   ' → logprob: -7.5071940422058105
    6. ' res' → logprob: -9.507193565368652
    7. 'r' → logprob: -10.882193565368652
    8. ' result' → logprob: -11.257193565368652
    9. ' s' → logprob: -11.382193565368652
    10. 'total' → logprob: -11.382193565368652

Token 271: ' s' (ID: 265)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.22958865761756897
    2. 's' (adapté à ' s') → logprob: -1.9795886278152466
    3. 'result' → logprob: -2.729588747024536
    4. '       ' → logprob: -6.604588508605957
    5. '   ' → logprob: -8.979588508605957
    6. ' res' → logprob: -9.479588508605957
    7. 'r' → logprob: -9.604588508605957
    8. ' s' → logprob: -9.854588508605957
    9. 'ret' → logprob: -9.979588508605957
    10. 'ans' → logprob: -10.729588508605957

Token 272: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05014481768012047
    2. '=' → logprob: -3.050144910812378
    3. ' ' → logprob: -6.550144672393799
    4. 'um' → logprob: -9.800145149230957
    5. '       ' → logprob: -10.550145149230957
    6. '   ' → logprob: -10.675145149230957
    7. '	' → logprob: -11.925145149230957
    8. '    ' → logprob: -12.425145149230957
    9. '  ' → logprob: -12.675145149230957
    10. 'elf' → logprob: -12.925145149230957

Token 273: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009115827269852161
    2. ' ' → logprob: -7.000911712646484
    3. '   ' → logprob: -16.625911712646484
    4. '۰' → logprob: -18.250911712646484
    5. 'self' → logprob: -19.000911712646484
    6. '       ' → logprob: -19.125911712646484
    7. '  ' → logprob: -19.250911712646484
    8. '=' → logprob: -19.938411712646484
    9. '(' → logprob: -20.438411712646484
    10. '```' → logprob: -20.688411712646484

Token 274: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -20.750003814697266
    4. '۰' → logprob: -20.750003814697266
    5. 'self' → logprob: -21.375003814697266
    6. 's' → logprob: -22.750003814697266
    7. '０' → logprob: -23.000003814697266
    8. '  ' → logprob: -23.312503814697266
    9. '=' → logprob: -23.312503814697266
    10. '000' → logprob: -23.625003814697266

Token 275: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025175778195261955
    2. '
' → logprob: -3.7751758098602295
    3. ',' → logprob: -7.77517557144165
    4. '        
' → logprob: -7.90017557144165
    5. '<|end|>' → logprob: -8.025176048278809
    6. '	' → logprob: -8.775176048278809
    7. '   ' → logprob: -9.025176048278809
    8. 'while' → logprob: -9.150176048278809
    9. '        ' → logprob: -9.900176048278809
    10. 'i' → logprob: -10.025176048278809

Token 276: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00021486106561496854
    2. ',' → logprob: -9.125214576721191
    3. '   ' → logprob: -10.500214576721191
    4. '	' → logprob: -10.875214576721191
    5. ' i' → logprob: -11.500214576721191
    6. '      ' → logprob: -11.750214576721191
    7. '
' → logprob: -11.750214576721191
    8. '        
' → logprob: -12.250214576721191
    9. ' while' → logprob: -12.375214576721191
    10. 'i' → logprob: -12.375214576721191

Token 277: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41740792989730835
    2. 'while' (adapté à ' while') → logprob: -1.1674079895019531
    3. ' while' → logprob: -4.042407989501953
    4. 'i' → logprob: -4.417407989501953
    5. ' i' → logprob: -8.167407989501953
    6. '   ' → logprob: -8.917407989501953
    7. '	while' → logprob: -11.167407989501953
    8. 'idx' → logprob: -11.917407989501953
    9. '      ' → logprob: -12.667407989501953
    10. '        ' → logprob: -12.792407989501953

Token 278: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31326326727867126
    2. ' i' → logprob: -1.3132632970809937
    3. '   ' → logprob: -13.813262939453125
    4. '	i' → logprob: -15.063262939453125
    5. ' ' → logprob: -15.813262939453125
    6. '(i' → logprob: -17.313262939453125
    7. '  ' → logprob: -17.438262939453125
    8. '    ' → logprob: -18.438262939453125
    9. ' ' → logprob: -18.813262939453125
    10. '_i' → logprob: -18.813262939453125

Token 279: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.16044102609157562
    2. ' >' → logprob: -1.9104410409927368
    3. '>=' → logprob: -9.035441398620605
    4. ' >=' → logprob: -9.410441398620605
    5. ':' → logprob: -11.660441398620605
    6. '&gt' → logprob: -13.160441398620605
    7. '   ' → logprob: -14.160441398620605
    8. '">' → logprob: -14.285441398620605
    9. '>:' → logprob: -14.285441398620605
    10. ':
' → logprob: -14.410441398620605

Token 280: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018292054533958435
    2. ' ' → logprob: -4.01829195022583
    3. '=' → logprob: -8.893292427062988
    4. '       ' → logprob: -13.393292427062988
    5. '   ' → logprob: -13.643292427062988
    6. '<|end|>' → logprob: -14.518292427062988
    7. 's' → logprob: -14.643292427062988
    8. '  ' → logprob: -15.893292427062988
    9. '           ' → logprob: -16.018291473388672
    10. ' =' → logprob: -16.143291473388672

Token 281: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -18.000085830688477
    4. '=' → logprob: -19.125085830688477
    5. '       ' → logprob: -19.625085830688477
    6. 's' → logprob: -20.125085830688477
    7. '  ' → logprob: -20.250085830688477
    8. 'i' → logprob: -20.750085830688477
    9. '.' → logprob: -21.125085830688477
    10. '     ' → logprob: -21.250085830688477

Token 282: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.47429588437080383
    2. ':' → logprob: -0.9742958545684814
    3. '           ' → logprob: -8.724295616149902
    4. '       ' → logprob: -10.724295616149902
    5. ',' → logprob: -11.224295616149902
    6. ':
' → logprob: -11.974295616149902
    7. ' and' → logprob: -12.349295616149902
    8. '):
' → logprob: -12.474295616149902
    9. ':

' → logprob: -13.099295616149902
    10. 's' → logprob: -14.099295616149902

Token 283: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011712553910911083
    2. '
' → logprob: -4.761712551116943
    3. ' s' → logprob: -6.261712551116943
    4. '       ' → logprob: -7.386712551116943
    5. ' 
' → logprob: -9.136713027954102
    6. 's' → logprob: -9.761713027954102
    7. '<|end|>' → logprob: -9.761713027954102
    8. ' ' → logprob: -10.011713027954102
    9. '            
' → logprob: -10.011713027954102
    10. '          ' → logprob: -10.136713027954102

Token 284: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.05158450827002525
    2. ' s' → logprob: -3.426584482192993
    3. '           ' → logprob: -4.051584720611572
    4. '       ' → logprob: -7.926584720611572
    5. '               ' → logprob: -11.801584243774414
    6. '   ' → logprob: -12.426584243774414
    7. '```' → logprob: -12.426584243774414
    8. ' ' → logprob: -13.426584243774414
    9. '	       ' → logprob: -13.676584243774414
    10. '
' → logprob: -13.801584243774414

Token 285: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.09351963549852371
    2. ' +=' → logprob: -2.968519687652588
    3. '=' → logprob: -3.343519687652588
    4. ' =' → logprob: -5.968519687652588
    5. '   ' → logprob: -11.71851921081543
    6. '%=' → logprob: -11.84351921081543
    7. '+' → logprob: -11.96851921081543
    8. '+=(' → logprob: -13.21851921081543
    9. '       ' → logprob: -13.34351921081543
    10. ']+=' → logprob: -13.46851921081543

Token 286: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0031784253660589457
    2. ' self' → logprob: -5.753178596496582
    3. '(self' → logprob: -15.003178596496582
    4. '[self' → logprob: -15.503178596496582
    5. '	self' → logprob: -15.628178596496582
    6. '=self' → logprob: -17.378177642822266
    7. '       ' → logprob: -17.753177642822266
    8. '   ' → logprob: -18.128177642822266
    9. '           ' → logprob: -18.378177642822266
    10. '```' → logprob: -19.128177642822266

Token 287: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.0010630595497786999
    2. '.' → logprob: -6.876062870025635
    3. 'tree' → logprob: -11.126063346862793
    4. ' .' → logprob: -11.251063346862793
    5. '	tree' → logprob: -13.376063346862793
    6. '.table' → logprob: -15.251063346862793
    7. '.t' → logprob: -15.376063346862793
    8. ' tree' → logprob: -15.501063346862793
    9. '\.' → logprob: -16.751062393188477
    10. '.Tree' → logprob: -17.251062393188477

Token 288: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.203409844194539e-05
    2. '[' → logprob: -10.125041961669922
    3. 'i' → logprob: -13.250041961669922
    4. ' i' → logprob: -16.500041961669922
    5. '[
' → logprob: -17.875041961669922
    6. ' [' → logprob: -18.000041961669922
    7. 's' → logprob: -18.625041961669922
    8. '{i' → logprob: -20.000041961669922
    9. '	i' → logprob: -20.125041961669922
    10. '(i' → logprob: -20.250041961669922

Token 289: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.041877783834934235
    2. ')' → logprob: -3.7918777465820312
    3. '%' → logprob: -4.166877746582031
    4. ']%' → logprob: -6.666877746582031
    5. ' ]' → logprob: -7.166877746582031
    6. ' %' → logprob: -7.666877746582031
    7. ')%' → logprob: -9.041877746582031
    8. '}' → logprob: -9.166877746582031
    9. ']
' → logprob: -9.791877746582031
    10. '
' → logprob: -9.791877746582031

Token 290: '           ' (ID: 352)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.7006404399871826
    2. ' %' → logprob: -0.7006404399871826
    3. '           ' → logprob: -5.575640678405762
    4. '%s' → logprob: -6.700640678405762
    5. '
' → logprob: -6.825640678405762
    6. '       ' → logprob: -7.325640678405762
    7. ' s' → logprob: -8.325640678405762
    8. '%i' → logprob: -8.825640678405762
    9. ' %=' → logprob: -9.200640678405762
    10. '%n' → logprob: -9.825640678405762

Token 291: ' i' (ID: 575)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6934418678283691
    2. ' s' → logprob: -0.6934418678283691
    3. ' i' → logprob: -9.318441390991211
    4. ' ' → logprob: -9.443441390991211
    5. ' 
' → logprob: -9.443441390991211
    6. 'i' (adapté à ' i') → logprob: -10.818441390991211
    7. '           ' → logprob: -11.068441390991211
    8. '       ' → logprob: -12.943441390991211
    9. '            
' → logprob: -13.068441390991211
    10. '
' → logprob: -14.193441390991211

Token 292: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.49397188425064087
    2. '-=' → logprob: -0.9939718842506409
    3. '&' → logprob: -4.243971824645996
    4. '-' → logprob: -5.493971824645996
    5. ' &=' → logprob: -6.868971824645996
    6. ' &' → logprob: -8.993971824645996
    7. '=' → logprob: -10.743971824645996
    8. '   ' → logprob: -10.868971824645996
    9. ' ' → logprob: -11.493971824645996
    10. '    ' → logprob: -12.493971824645996

Token 293: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007164848502725363
    2. ' i' → logprob: -7.250716686248779
    3. '(i' → logprob: -12.250716209411621
    4. ' (' → logprob: -13.875716209411621
    5. '	i' → logprob: -15.000716209411621
    6. '   ' → logprob: -15.750716209411621
    7. '(' → logprob: -16.125717163085938
    8. ' ' → logprob: -16.375717163085938
    9. '  ' → logprob: -17.000717163085938
    10. '{i' → logprob: -19.375717163085938

Token 294: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.03805044665932655
    2. ' &' → logprob: -3.288050413131714
    3. '&i' → logprob: -11.913050651550293
    4. '&amp' → logprob: -13.538050651550293
    5. '&t' → logprob: -15.038050651550293
    6. '&r' → logprob: -15.913050651550293
    7. ' ' → logprob: -16.538049697875977
    8. '&nbsp' → logprob: -16.913049697875977
    9. '＆' → logprob: -16.913049697875977
    10. '&B' → logprob: -17.288049697875977

Token 295: ' -' (ID: 533)
  Prédit: '-i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.6030042767524719
    2. '-' → logprob: -0.8530042767524719
    3. 'i' → logprob: -4.228004455566406
    4. ' -' → logprob: -4.478004455566406
    5. '(-' → logprob: -7.603004455566406
    6. ' i' → logprob: -8.353004455566406
    7. '(i' → logprob: -11.228004455566406
    8. ' (-' → logprob: -12.353004455566406
    9. '_i' → logprob: -12.978004455566406
    10. '	i' → logprob: -13.353004455566406

Token 296: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.7697225252486533e-06
    2. ' i' → logprob: -12.500003814697266
    3. '	i' → logprob: -17.750003814697266
    4. ' ' → logprob: -18.875003814697266
    5. '   ' → logprob: -19.375003814697266
    6. '_i' → logprob: -19.500003814697266
    7. '```' → logprob: -20.000003814697266
    8. '(i' → logprob: -20.625003814697266
    9. ''i' → logprob: -20.875003814697266
    10. '  ' → logprob: -20.875003814697266

Token 297: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45809170603752136
    2. '       ' → logprob: -1.8330917358398438
    3. '<|end|>' → logprob: -2.3330917358398438
    4. 's' → logprob: -3.3330917358398438
    5. ' ' → logprob: -3.8330917358398438
    6. '1' → logprob: -4.208091735839844
    7. '           ' → logprob: -4.833091735839844
    8. ' 
' → logprob: -4.958091735839844
    9. '[' → logprob: -5.958091735839844
    10. '```' → logprob: -6.083091735839844

Token 298: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17193876206874847
    2. '           ' → logprob: -1.9219387769699097
    3. '
' → logprob: -5.546938896179199
    4. 's' → logprob: -6.421938896179199
    5. '```' → logprob: -6.421938896179199
    6. ' s' → logprob: -6.671938896179199
    7. '<|end|>' → logprob: -6.921938896179199
    8. '   ' → logprob: -7.296938896179199
    9. '[' → logprob: -7.796938896179199
    10. '        
' → logprob: -8.1719388961792

Token 299: ' return' (ID: 622)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.24670125544071198
    2. '       ' → logprob: -1.9967012405395508
    3. 's' → logprob: -2.496701240539551
    4. ' return' → logprob: -8.12170124053955
    5. 'return' (adapté à ' return') → logprob: -9.99670124053955
    6. '           ' → logprob: -10.37170124053955
    7. '
' → logprob: -10.62170124053955
    8. ' ' → logprob: -10.74670124053955
    9. '   ' → logprob: -10.99670124053955
    10. '        ' → logprob: -10.99670124053955

Token 300: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.25193047523498535
    2. ' s' → logprob: -1.5019304752349854
    3. '(s' → logprob: -14.001930236816406
    4. ' ' → logprob: -15.626930236816406
    5. ' ' → logprob: -16.126930236816406
    6. '	s' → logprob: -16.126930236816406
    7. '{s' → logprob: -17.001930236816406
    8. '   ' → logprob: -17.126930236816406
    9. '`s' → logprob: -17.626930236816406
    10. 'self' → logprob: -18.626930236816406

Token 301: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.011051236651837826
    2. '%' → logprob: -4.511051177978516
    3. ' ' → logprob: -13.011051177978516
    4. ' ' → logprob: -14.511051177978516
    5. ' %=' → logprob: -15.011051177978516
    6. ')' → logprob: -15.386051177978516
    7. '%s' → logprob: -16.136051177978516
    8. '%i' → logprob: -17.136051177978516
    9. ' ' → logprob: -18.636051177978516
    10. ' %
' → logprob: -18.761051177978516

Token 302: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014163628220558167
    2. ' self' → logprob: -4.264163494110107
    3. '(self' → logprob: -15.639163970947266
    4. '	self' → logprob: -18.889163970947266
    5. '[self' → logprob: -19.889163970947266
    6. ' ' → logprob: -21.014163970947266
    7. '       ' → logprob: -21.139163970947266
    8. '=self' → logprob: -21.764163970947266
    9. '_self' → logprob: -22.264163970947266
    10. '$self' → logprob: -22.264163970947266

Token 303: '.mod' (ID: 19046)
  Prédit: '.mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -1.5048530030981055e-06
    2. 'mod' → logprob: -13.500001907348633
    3. '.' → logprob: -17.125001907348633
    4. '	mod' → logprob: -19.250001907348633
    5. ' mod' → logprob: -19.500001907348633
    6. ' .' → logprob: -20.125001907348633
    7. '.cod' → logprob: -21.875001907348633
    8. '_mod' → logprob: -22.375001907348633
    9. '(mod' → logprob: -22.375001907348633
    10. '.MOD' → logprob: -22.875001907348633

Token 304: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 305: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11344081908464432
    2. '<|end|>' → logprob: -2.863440752029419
    3. ' 
' → logprob: -3.738440752029419
    4. '    
' → logprob: -4.113440990447998
    5. '   ' → logprob: -5.363440990447998
    6. '  
' → logprob: -5.613440990447998
    7. '   
' → logprob: -7.863440990447998
    8. '<|end|>' → logprob: -7.988440990447998
    9. '```' → logprob: -8.11344051361084
    10. '

' → logprob: -8.73844051361084

Token 306: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5321147441864014
    2. '   ' → logprob: -1.2821147441864014
    3. 'def' (adapté à ' def') → logprob: -2.7821147441864014
    4. '    
' → logprob: -3.0321147441864014
    5. ' 
' → logprob: -3.9071147441864014
    6. '  
' → logprob: -6.2821149826049805
    7. ' def' → logprob: -6.4071149826049805
    8. '        
' → logprob: -7.0321149826049805
    9. '   
' → logprob: -7.9071149826049805
    10. ' ' → logprob: -9.78211498260498

Token 307: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.7106369733810425
    2. 'add' → logprob: -1.0856369733810425
    3. 'update' → logprob: -2.085637092590332
    4. ' update' → logprob: -3.210637092590332
    5. '_add' → logprob: -5.460637092590332
    6. '_update' → logprob: -6.710637092590332
    7. ' ' → logprob: -7.585637092590332
    8. 'sum' → logprob: -9.210637092590332
    9. ' modify' → logprob: -9.710637092590332
    10. 'modify' → logprob: -9.710637092590332

Token 308: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4398880898952484
    2. '(' → logprob: -1.0648881196975708
    3. ' (' → logprob: -4.564888000488281
    4. '(i' → logprob: -8.064888000488281
    5. '<|end|>' → logprob: -8.814888000488281
    6. '(s' → logprob: -9.189888000488281
    7. '(
' → logprob: -10.064888000488281
    8. ',' → logprob: -10.439888000488281
    9. ' ' → logprob: -10.689888000488281
    10. ')' → logprob: -11.439888000488281

Token 309: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.14641961455345154
    2. ',' → logprob: -2.0214195251464844
    3. ')' → logprob: -6.521419525146484
    4. '(' → logprob: -6.521419525146484
    5. ' (' → logprob: -7.896419525146484
    6. 'self' → logprob: -8.521419525146484
    7. '   ' → logprob: -9.896419525146484
    8. '       ' → logprob: -9.896419525146484
    9. ' ,' → logprob: -10.021419525146484
    10. ',self' → logprob: -10.646419525146484

Token 310: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5769562125205994
    2. ' i' → logprob: -0.8269562125205994
    3. 'index' → logprob: -7.326956272125244
    4. 'self' → logprob: -9.076955795288086
    5. 'idx' → logprob: -9.201955795288086
    6. ' index' → logprob: -9.951955795288086
    7. ' idx' → logprob: -10.076955795288086
    8. ' self' → logprob: -10.951955795288086
    9. ')' → logprob: -11.076955795288086
    10. ' ' → logprob: -11.576955795288086

Token 311: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010998018842656165
    2. ' ,' → logprob: -9.125109672546387
    3. ',i' → logprob: -14.750109672546387
    4. ',value' → logprob: -15.250109672546387
    5. 'self' → logprob: -16.750110626220703
    6. ',
' → logprob: -16.750110626220703
    7. ',self' → logprob: -16.875110626220703
    8. ',val' → logprob: -17.000110626220703
    9. ',int' → logprob: -17.500110626220703
    10. '   ' → logprob: -17.750110626220703

Token 312: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6999092698097229
    2. ' val' → logprob: -1.5749092102050781
    3. 'x' → logprob: -1.9499092102050781
    4. ' v' → logprob: -2.449909210205078
    5. 'v' → logprob: -3.449909210205078
    6. 'val' → logprob: -3.574909210205078
    7. 'value' → logprob: -5.449909210205078
    8. ' value' → logprob: -6.574909210205078
    9. ' delta' → logprob: -7.074909210205078
    10. ' ' → logprob: -7.199909210205078

Token 313: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12706953287124634
    2. '):
' → logprob: -2.1270694732666016
    3. '):
' → logprob: -9.002069473266602
    4. ',' → logprob: -12.127069473266602
    5. ' ):' → logprob: -12.252069473266602
    6. ':' → logprob: -13.002069473266602
    7. '       ' → logprob: -13.377069473266602
    8. '):

' → logprob: -13.502069473266602
    9. '   ' → logprob: -13.877069473266602
    10. ')' → logprob: -13.877069473266602

Token 314: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.454803466796875
    2. ':' → logprob: -1.079803466796875
    3. ':
' → logprob: -4.579803466796875
    4. '):
' → logprob: -5.079803466796875
    5. '):' → logprob: -5.704803466796875
    6. '   ' → logprob: -5.829803466796875
    7. '<|end|>' → logprob: -6.329803466796875
    8. ')' → logprob: -7.704803466796875
    9. '<|end|>' → logprob: -8.579803466796875
    10. '```' → logprob: -8.954803466796875

Token 315: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07383892685174942
    2. '<|end|>' → logprob: -3.323838949203491
    3. '   ' → logprob: -4.073838710784912
    4. ':' → logprob: -4.823838710784912
    5. ' ' → logprob: -5.698838710784912
    6. ':
' → logprob: -6.323838710784912
    7. '        ' → logprob: -6.698838710784912
    8. ' 
' → logprob: -7.323838710784912
    9. '```' → logprob: -7.573838710784912
    10. '        
' → logprob: -7.948838710784912

Token 316: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010604370618239045
    2. '        ' → logprob: -7.126060485839844
    3. '   ' → logprob: -9.501060485839844
    4. ' x' → logprob: -10.126060485839844
    5. ' ' → logprob: -10.376060485839844
    6. ' 
' → logprob: -11.001060485839844
    7. ' i' → logprob: -11.126060485839844
    8. '    ' → logprob: -11.251060485839844
    9. '        
' → logprob: -11.376060485839844
    10. '           ' → logprob: -12.001060485839844

Token 317: ' Add' (ID: 4063)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.17940184473991394
    2. ' i' → logprob: -2.4294018745422363
    3. '       ' → logprob: -3.0544018745422363
    4. 'while' → logprob: -4.179401874542236
    5. ' while' → logprob: -4.804401874542236
    6. '   ' → logprob: -5.929401874542236
    7. 'x' → logprob: -6.429401874542236
    8. '
' → logprob: -7.179401874542236
    9. ' x' → logprob: -8.304401397705078
    10. ' 
' → logprob: -10.054401397705078

Token 318: ' value' (ID: 1432)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.21372568607330322
    2. ' ' → logprob: -2.2137255668640137
    3. '<|end|>' → logprob: -3.2137255668640137
    4. ' i' → logprob: -3.3387255668640137
    5. 'x' → logprob: -5.838725566864014
    6. '<|end|>' → logprob: -6.713725566864014
    7. '    ' → logprob: -7.213725566864014
    8. ' a' → logprob: -7.338725566864014
    9. ')' → logprob: -7.713725566864014
    10. ' 
' → logprob: -8.338726043701172

Token 319: ' x' (ID: 1215)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.336746335029602
    2. ' (' → logprob: -1.336746335029602
    3. '<|end|>' → logprob: -1.336746335029602
    4. ' ' → logprob: -3.0867462158203125
    5. '(i' → logprob: -3.4617462158203125
    6. '   ' → logprob: -3.4617462158203125
    7. '(' → logprob: -3.8367462158203125
    8. ' to' → logprob: -3.8367462158203125
    9. '(self' → logprob: -3.9617462158203125
    10. '<|end|>' → logprob: -4.9617462158203125

Token 320: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.012292534112930298
    2. 'to' → logprob: -5.137292385101318
    3. '<|end|>' → logprob: -5.762292385101318
    4. ' at' → logprob: -6.262292385101318
    5. '%' → logprob: -8.137292861938477
    6. ' %=' → logprob: -8.512292861938477
    7. '<|end|>' → logprob: -8.637292861938477
    8. ')' → logprob: -8.762292861938477
    9. ' ' → logprob: -8.887292861938477
    10. ' %' → logprob: -9.137292861938477

Token 321: ' element' (ID: 3577)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.12801331281661987
    2. 'i' → logprob: -2.1280133724212646
    3. 'self' → logprob: -7.7530131340026855
    4. ' self' → logprob: -7.7530131340026855
    5. '[i' → logprob: -9.753013610839844
    6. ' ' → logprob: -9.753013610839844
    7. ' the' → logprob: -10.003013610839844
    8. '       ' → logprob: -10.628013610839844
    9. '   ' → logprob: -11.253013610839844
    10. '(i' → logprob: -12.003013610839844

Token 322: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.083868607878685
    2. ' i' → logprob: -2.9588685035705566
    3. ' ' → logprob: -4.458868503570557
    4. '[i' → logprob: -5.083868503570557
    5. '   ' → logprob: -5.458868503570557
    6. '       ' → logprob: -5.583868503570557
    7. ' self' → logprob: -7.708868503570557
    8. 's' → logprob: -7.958868503570557
    9. 'self' → logprob: -8.083868980407715
    10. 'i' → logprob: -8.333868980407715

Token 323: ' index' (ID: 3472)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.002523222705349326
    2. 'i' → logprob: -6.002523422241211
    3. ' ' → logprob: -10.502523422241211
    4. ' index' → logprob: -11.627523422241211
    5. '   ' → logprob: -13.627523422241211
    6. '[i' → logprob: -13.627523422241211
    7. '(i' → logprob: -13.752523422241211
    8. ' a' → logprob: -13.752523422241211
    9. '	i' → logprob: -13.752523422241211
    10. '`' → logprob: -14.002523422241211

Token 324: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.000730185944121331
    2. 'i' → logprob: -7.625730037689209
    3. ' ' → logprob: -8.375730514526367
    4. ' `' → logprob: -12.375730514526367
    5. ' a' → logprob: -13.250730514526367
    6. '```' → logprob: -13.375730514526367
    7. '`' → logprob: -14.000730514526367
    8. ',' → logprob: -14.000730514526367
    9. '	i' → logprob: -14.875730514526367
    10. '  ' → logprob: -15.125730514526367

Token 325: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018556546419858932
    2. ',' → logprob: -4.893556594848633
    3. ':
' → logprob: -6.018556594848633
    4. ':' → logprob: -6.143556594848633
    5. '   ' → logprob: -6.268556594848633
    6. '<|end|>' → logprob: -6.518556594848633
    7. '        ' → logprob: -7.893556594848633
    8. '.' → logprob: -7.893556594848633
    9. ' at' → logprob: -8.018556594848633
    10. '           ' → logprob: -8.268556594848633

Token 326: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06451739370822906
    2. '<|end|>' → logprob: -2.9395174980163574
    3. '        
' → logprob: -5.314517498016357
    4. '
' → logprob: -6.689517498016357
    5. ' 
' → logprob: -6.814517498016357
    6. '  
' → logprob: -7.439517498016357
    7. '<|end|>' → logprob: -7.564517498016357
    8. ' ' → logprob: -7.939517498016357
    9. '   ' → logprob: -8.9395170211792
    10. '        ' → logprob: -8.9395170211792

Token 327: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039371028542518616
    2. '<|end|>' → logprob: -3.4143710136413574
    3. '
' → logprob: -6.164371013641357
    4. ' 
' → logprob: -6.914371013641357
    5. '        ' → logprob: -7.414371013641357
    6. '        
' → logprob: -7.664371013641357
    7. ' ' → logprob: -7.789371013641357
    8. '<|end|>' → logprob: -8.164371490478516
    9. '```' → logprob: -8.539371490478516
    10. '   ' → logprob: -8.664371490478516

Token 328: ' Args' (ID: 39185)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16231650114059448
    2. ' while' → logprob: -2.5373165607452393
    3. 'while' → logprob: -2.7873165607452393
    4. 'i' → logprob: -6.16231632232666
    5. ' i' → logprob: -6.16231632232666
    6. '   ' → logprob: -6.41231632232666
    7. '        
' → logprob: -7.53731632232666
    8. '```' → logprob: -7.53731632232666
    9. 'While' → logprob: -7.78731632232666
    10. 'x' → logprob: -8.03731632232666

Token 329: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3491511940956116
    2. '):' → logprob: -1.9741511344909668
    3. '<|end|>' → logprob: -2.474151134490967
    4. '):
' → logprob: -3.349151134490967
    5. ',' → logprob: -4.099151134490967
    6. '=i' → logprob: -5.224151134490967
    7. '<|end|>' → logprob: -5.224151134490967
    8. '       ' → logprob: -6.099151134490967
    9. ')' → logprob: -6.349151134490967
    10. '=' → logprob: -7.099151134490967

Token 330: '           ' (ID: 352)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.09461253881454468
    2. 'i' → logprob: -2.9696125984191895
    3. '       ' → logprob: -3.4696125984191895
    4. '        ' → logprob: -5.0946125984191895
    5. '           ' → logprob: -6.7196125984191895
    6. ' ' → logprob: -9.469612121582031
    7. '   ' → logprob: -9.594612121582031
    8. '(i' → logprob: -9.969612121582031
    9. ' 
' → logprob: -9.969612121582031
    10. '{i' → logprob: -10.219612121582031

Token 331: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.25192955136299133
    2. ' i' → logprob: -1.501929521560669
    3. 'int' → logprob: -15.00192928314209
    4. '   ' → logprob: -16.626930236816406
    5. ' ' → logprob: -17.126930236816406
    6. '       ' → logprob: -17.501930236816406
    7. '	i' → logprob: -17.626930236816406
    8. ' int' → logprob: -17.751930236816406
    9. '  ' → logprob: -19.876930236816406
    10. '_i' → logprob: -20.001930236816406

Token 332: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2549552023410797
    2. '<|end|>' → logprob: -1.5049551725387573
    3. '<|end|>' → logprob: -6.879955291748047
    4. ' ,' → logprob: -7.129955291748047
    5. ')' → logprob: -7.879955291748047
    6. ' i' → logprob: -8.129955291748047
    7. ' +=' → logprob: -8.629955291748047
    8. ',i' → logprob: -9.629955291748047
    9. '=' → logprob: -10.004955291748047
    10. ':' → logprob: -10.129955291748047

Token 333: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.961759259458631e-06
    2. ' int' → logprob: -12.250004768371582
    3. ':int' → logprob: -17.7500057220459
    4. '=int' → logprob: -17.7500057220459
    5. ',int' → logprob: -18.0000057220459
    6. 'i' → logprob: -18.1250057220459
    7. '<int' → logprob: -18.8750057220459
    8. '[int' → logprob: -19.7500057220459
    9. ')' → logprob: -20.2500057220459
    10. '           ' → logprob: -20.5000057220459

Token 334: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015903194434940815
    2. ' ,' → logprob: -6.626590251922607
    3. ',int' → logprob: -9.001590728759766
    4. '):' → logprob: -9.626590728759766
    5. ':' → logprob: -10.126590728759766
    6. '   ' → logprob: -12.001590728759766
    7. ':int' → logprob: -12.001590728759766
    8. 'int' → logprob: -12.126590728759766
    9. '<|end|>' → logprob: -12.251590728759766
    10. '):
' → logprob: -12.876590728759766

Token 335: ' The' (ID: 623)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16259172558784485
    2. 'int' → logprob: -2.5375916957855225
    3. ' int' → logprob: -2.7875916957855225
    4. 'i' → logprob: -5.287591934204102
    5. ' ' → logprob: -6.037591934204102
    6. '<|end|>' → logprob: -7.412591934204102
    7. ' index' → logprob: -7.912591934204102
    8. '[int' → logprob: -8.662591934204102
    9. 'index' → logprob: -9.037591934204102
    10. ' The' → logprob: -9.287591934204102

Token 336: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.13771958649158478
    2. 'index' → logprob: -2.3877196311950684
    3. ' i' → logprob: -3.3877196311950684
    4. 'i' → logprob: -5.887719631195068
    5. ' ' → logprob: -9.13771915435791
    6. ' position' → logprob: -9.76271915435791
    7. 'int' → logprob: -10.38771915435791
    8. 'Index' → logprob: -11.63771915435791
    9. ' int' → logprob: -11.88771915435791
    10. 'position' → logprob: -11.88771915435791

Token 337: ' to' (ID: 316)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 338: ' which' (ID: 1118)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.1896938979625702
    2. ' update' → logprob: -1.8146939277648926
    3. 'add' → logprob: -4.939693927764893
    4. 'update' → logprob: -6.064693927764893
    5. '   ' → logprob: -9.314693450927734
    6. ' ' → logprob: -9.439693450927734
    7. ' be' → logprob: -9.689693450927734
    8. ' increment' → logprob: -9.689693450927734
    9. ' i' → logprob: -10.439693450927734
    10. 'increment' → logprob: -10.689693450927734

Token 339: ' x' (ID: 1215)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.34763360023498535
    2. ' ' → logprob: -1.4726336002349854
    3. '<|end|>' → logprob: -3.8476336002349854
    4. ' x' → logprob: -3.9726336002349854
    5. ')' → logprob: -4.722633361816406
    6. '  ' → logprob: -5.847633361816406
    7. ' a' → logprob: -5.972633361816406
    8. '    ' → logprob: -6.222633361816406
    9. ' )' → logprob: -6.722633361816406
    10. 'i' → logprob: -6.722633361816406

Token 340: ' will' (ID: 738)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.18262052536010742
    2. '+=' → logprob: -2.4326205253601074
    3. ')' → logprob: -3.0576205253601074
    4. ' is' → logprob: -4.057620525360107
    5. ' should' → logprob: -4.682620525360107
    6. ']+=' → logprob: -6.307620525360107
    7. '       ' → logprob: -6.932620525360107
    8. '<|end|>' → logprob: -7.182620525360107
    9. 'should' → logprob: -8.182621002197266
    10. '   ' → logprob: -8.307621002197266

Token 341: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.0001673061487963423
    2. 'be' → logprob: -8.750166893005371
    3. '<|end|>' → logprob: -12.125166893005371
    4. ')' → logprob: -13.625166893005371
    5. ' add' → logprob: -13.875166893005371
    6. '	be' → logprob: -14.750166893005371
    7. ' is' → logprob: -14.875166893005371
    8. 'add' → logprob: -15.375166893005371
    9. ')add' → logprob: -16.625167846679688
    10. '+' → logprob: -17.000167846679688

Token 342: ' added' (ID: 5768)
  Prédit: 'added'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'added' → logprob: -0.04876915365457535
    2. ' added' → logprob: -3.048769235610962
    3. 'add' → logprob: -8.798768997192383
    4. '-added' → logprob: -11.298768997192383
    5. '   ' → logprob: -11.423768997192383
    6. '_added' → logprob: -12.298768997192383
    7. 'Added' → logprob: -13.923768997192383
    8. ' applied' → logprob: -15.048768997192383
    9. 'ap' → logprob: -15.298768997192383
    10. '       ' → logprob: -15.423768997192383

Token 343: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3489741086959839
    2. ')' → logprob: -1.5989741086959839
    3. '<|end|>' → logprob: -2.5989742279052734
    4. ',' → logprob: -4.598974227905273
    5. '.' → logprob: -5.848974227905273
    6. '<|end|>' → logprob: -6.098974227905273
    7. '):
' → logprob: -6.723974227905273
    8. '           ' → logprob: -8.223974227905273
    9. ')
' → logprob: -8.223974227905273
    10. ',
' → logprob: -8.598974227905273

Token 344: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1487869769334793
    2. '<|end|>' → logprob: -2.648787021636963
    3. ' )' → logprob: -3.398787021636963
    4. ' i' → logprob: -3.773787021636963
    5. '   ' → logprob: -5.898787021636963
    6. ' ' → logprob: -6.148787021636963
    7. '       ' → logprob: -6.398787021636963
    8. ' 
' → logprob: -6.898787021636963
    9. ' )
' → logprob: -8.023786544799805
    10. '  ' → logprob: -8.023786544799805

Token 345: '-based' (ID: 8235)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024844877421855927
    2. ' )' → logprob: -4.149844646453857
    3. '):
' → logprob: -6.399844646453857
    4. '       ' → logprob: -6.649844646453857
    5. '   ' → logprob: -6.774844646453857
    6. '           ' → logprob: -6.899844646453857
    7. '):' → logprob: -7.149844646453857
    8. ',' → logprob: -7.524844646453857
    9. '        ' → logprob: -8.274845123291016
    10. ' ' → logprob: -8.399845123291016

Token 346: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016419768799096346
    2. 'index' → logprob: -7.001641750335693
    3. ' index' → logprob: -7.751641750335693
    4. ')
' → logprob: -8.626642227172852
    5. ').' → logprob: -9.501642227172852
    6. '<|end|>' → logprob: -11.251642227172852
    7. ' indexing' → logprob: -11.626642227172852
    8. ' )' → logprob: -12.251642227172852
    9. '):
' → logprob: -12.251642227172852
    10. '   ' → logprob: -12.626642227172852

Token 347: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006080791936255991
    2. '        
' → logprob: -8.500608444213867
    3. '<|end|>' → logprob: -8.625608444213867
    4. ')' → logprob: -9.375608444213867
    5. '
' → logprob: -10.000608444213867
    6. '      ' → logprob: -11.000608444213867
    7. '        ' → logprob: -11.250608444213867
    8. '  
' → logprob: -11.375608444213867
    9. '   ' → logprob: -11.500608444213867
    10. '           ' → logprob: -11.625608444213867

Token 348: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.5789144039154053
    2. ' x' → logprob: -0.8289144039154053
    3. '       ' → logprob: -5.828914642333984
    4. '   ' → logprob: -10.828914642333984
    5. '           ' → logprob: -12.578914642333984
    6. ' ' → logprob: -12.703914642333984
    7. '	x' → logprob: -13.453914642333984
    8. '```' → logprob: -14.578914642333984
    9. '
' → logprob: -15.203914642333984
    10. ' ' → logprob: -15.578914642333984

Token 349: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 350: 'int' (ID: 491)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.17129561305046082
    2. ')' → logprob: -1.9212956428527832
    3. 'x' → logprob: -5.171295642852783
    4. ')x' → logprob: -6.296295642852783
    5. '%' → logprob: -7.671295642852783
    6. '=' → logprob: -7.921295642852783
    7. ':' → logprob: -8.171295166015625
    8. '):
' → logprob: -8.296295166015625
    9. ' )' → logprob: -8.296295166015625
    10. ')%' → logprob: -8.421295166015625

Token 351: '):' (ID: 3127)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2080509215593338
    2. '):' → logprob: -1.7080509662628174
    3. ')' → logprob: -5.708050727844238
    4. '%' → logprob: -6.458050727844238
    5. '   ' → logprob: -7.583050727844238
    6. ':' → logprob: -7.958050727844238
    7. ')%' → logprob: -8.333050727844238
    8. '):

' → logprob: -8.708050727844238
    9. '):
' → logprob: -8.958050727844238
    10. ' ):
' → logprob: -9.208050727844238

Token 352: ' The' (ID: 623)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0034730788320302963
    2. 'x' → logprob: -6.003473281860352
    3. ')' → logprob: -7.628473281860352
    4. '<|end|>' → logprob: -8.503473281860352
    5. ' the' → logprob: -9.503473281860352
    6. ' The' → logprob: -9.628473281860352
    7. ' ' → logprob: -9.753473281860352
    8. ' int' → logprob: -10.003473281860352
    9. '<|end|>' → logprob: -11.628473281860352
    10. ' (' → logprob: -11.753473281860352

Token 353: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.023679010570049286
    2. 'value' → logprob: -4.023678779602051
    3. ')' → logprob: -5.273678779602051
    4. ' amount' → logprob: -9.39867877960205
    5. ' )' → logprob: -9.89867877960205
    6. '):
' → logprob: -10.14867877960205
    7. ' add' → logprob: -10.77367877960205
    8. '
' → logprob: -10.89867877960205
    9. ' x' → logprob: -11.02367877960205
    10. ' new' → logprob: -11.39867877960205

Token 354: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04251479357481003
    2. '%' → logprob: -4.167514801025391
    3. ' %' → logprob: -4.417514801025391
    4. '):' → logprob: -4.542514801025391
    5. '   ' → logprob: -7.167514801025391
    6. ')%' → logprob: -7.292514801025391
    7. '       ' → logprob: -7.542514801025391
    8. ' )' → logprob: -7.667514801025391
    9. '):
' → logprob: -7.917514801025391
    10. '```' → logprob: -8.54251480102539

Token 355: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.029825463891029358
    2. ' add' → logprob: -3.529825448989868
    3. 'be' → logprob: -10.154825210571289
    4. ' be' → logprob: -10.404825210571289
    5. '_add' → logprob: -12.404825210571289
    6. '   ' → logprob: -13.904825210571289
    7. ')add' → logprob: -14.904825210571289
    8. '	add' → logprob: -15.654825210571289
    9. '       ' → logprob: -16.02982521057129
    10. 'Add' → logprob: -16.15482521057129

Token 356: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028648171573877335
    2. '       ' → logprob: -3.6536481380462646
    3. '   ' → logprob: -7.778648376464844
    4. '%' → logprob: -7.903648376464844
    5. ')
' → logprob: -8.278648376464844
    6. ' %' → logprob: -8.278648376464844
    7. '):
' → logprob: -8.528648376464844
    8. ' )' → logprob: -8.528648376464844
    9. '<|end|>' → logprob: -8.653648376464844
    10. '           ' → logprob: -9.028648376464844

Token 357: 'mod' (ID: 4847)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0753834918141365
    2. ' )' → logprob: -3.575383424758911
    3. '%' → logprob: -4.07538366317749
    4. ' modulo' → logprob: -4.45038366317749
    5. ' x' → logprob: -5.20038366317749
    6. ')%' → logprob: -6.07538366317749
    7. ' %' → logprob: -6.20038366317749
    8. 'int' → logprob: -6.32538366317749
    9. 'x' → logprob: -6.95038366317749
    10. ' mod' → logprob: -7.45038366317749

Token 358: 'ulo' (ID: 5953)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8542263507843018
    2. ' x' → logprob: -1.2292263507843018
    3. ' )' → logprob: -1.6042263507843018
    4. 'ulo' → logprob: -3.3542263507843018
    5. '           ' → logprob: -4.354226112365723
    6. 'ULO' → logprob: -4.854226112365723
    7. '   ' → logprob: -4.979226112365723
    8. '       ' → logprob: -5.229226112365723
    9. ' ' → logprob: -5.354226112365723
    10. ' self' → logprob: -5.604226112365723

Token 359: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3896137773990631
    2. ')' → logprob: -1.5146137475967407
    3. 'self' → logprob: -2.5146138668060303
    4. ' )' → logprob: -4.014613628387451
    5. ').' → logprob: -6.639613628387451
    6. '       ' → logprob: -7.764613628387451
    7. ' ' → logprob: -7.764613628387451
    8. ' x' → logprob: -7.889613628387451
    9. ' ).' → logprob: -8.26461410522461
    10. '```' → logprob: -8.88961410522461

Token 360: '.mod' (ID: 19046)
  Prédit: '.mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -4.668304245569743e-05
    2. '.' → logprob: -10.750046730041504
    3. ')' → logprob: -10.875046730041504
    4. ' )' → logprob: -13.000046730041504
    5. '	mod' → logprob: -13.875046730041504
    6. 'mod' → logprob: -14.500046730041504
    7. ' .' → logprob: -14.500046730041504
    8. '   ' → logprob: -14.750046730041504
    9. ' mod' → logprob: -14.750046730041504
    10. '.MOD' → logprob: -15.000046730041504

Token 361: ' will' (ID: 738)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021240918431431055
    2. ').' → logprob: -6.627124309539795
    3. ' )' → logprob: -7.877124309539795
    4. ')
' → logprob: -8.252123832702637
    5. ')`' → logprob: -10.127123832702637
    6. '       ' → logprob: -10.377123832702637
    7. '):
' → logprob: -10.502123832702637
    8. '):' → logprob: -11.127123832702637
    9. ')%' → logprob: -11.252123832702637
    10. '   ' → logprob: -11.752123832702637

Token 362: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.005095476284623146
    2. ' apply' → logprob: -5.880095481872559
    3. 'be' → logprob: -6.505095481872559
    4. ')' → logprob: -7.755095481872559
    5. 'apply' → logprob: -8.505095481872559
    6. ').' → logprob: -9.380095481872559
    7. ' applied' → logprob: -10.255095481872559
    8. ' )' → logprob: -10.880095481872559
    9. ' ).' → logprob: -12.755095481872559
    10. ' not' → logprob: -12.755095481872559

Token 363: ' used' (ID: 2061)
  Prédit: ' applied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' applied' → logprob: -0.010986634530127048
    2. ' x' → logprob: -5.510986804962158
    3. 'ap' → logprob: -5.885986804962158
    4. ' taken' → logprob: -6.385986804962158
    5. 'x' → logprob: -6.635986804962158
    6. ')' → logprob: -7.385986804962158
    7. ' )' → logprob: -8.635986328125
    8. ' used' → logprob: -9.635986328125
    9. ')x' → logprob: -10.135986328125
    10. '   ' → logprob: -10.135986328125

Token 364: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16239139437675476
    2. ').' → logprob: -1.9123914241790771
    3. ')
' → logprob: -6.662391185760498
    4. ').
' → logprob: -7.912391185760498
    5. '           ' → logprob: -8.537391662597656
    6. '       ' → logprob: -10.037391662597656
    7. ' )' → logprob: -10.162391662597656
    8. '),' → logprob: -10.412391662597656
    9. 'ed' → logprob: -10.537391662597656
    10. '```' → logprob: -10.787391662597656

Token 365: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004097396973520517
    2. '
' → logprob: -6.1290974617004395
    3. '        
' → logprob: -6.8790974617004395
    4. '<|end|>' → logprob: -7.8790974617004395
    5. ')' → logprob: -8.504096984863281
    6. ' 
' → logprob: -9.504096984863281
    7. '  
' → logprob: -9.879096984863281
    8. '```' → logprob: -10.379096984863281
    9. '   ' → logprob: -10.629096984863281
    10. ' ' → logprob: -10.879096984863281

Token 366: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02199086733162403
    2. '
' → logprob: -4.021990776062012
    3. '        
' → logprob: -5.771990776062012
    4. '<|end|>' → logprob: -8.396990776062012
    5. '  
' → logprob: -8.896990776062012
    6. ' 
' → logprob: -9.396990776062012
    7. ')' → logprob: -9.521990776062012
    8. '```' → logprob: -10.146990776062012
    9. '    
' → logprob: -10.271990776062012
    10. '   ' → logprob: -10.646990776062012

Token 367: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.256334695033729e-05
    2. ' i' → logprob: -10.500082969665527
    3. '   ' → logprob: -10.625082969665527
    4. ' x' → logprob: -11.000082969665527
    5. 'i' → logprob: -13.375082969665527
    6. '```' → logprob: -13.375082969665527
    7. '        
' → logprob: -13.500082969665527
    8. ',' → logprob: -13.500082969665527
    9. '           ' → logprob: -13.625082969665527
    10. 'x' → logprob: -13.750082969665527

Token 368: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.18007801473140717
    2. 'x' → logprob: -2.6800780296325684
    3. '       ' → logprob: -2.9300780296325684
    4. ' while' → logprob: -3.1800780296325684
    5. ' x' → logprob: -6.805078029632568
    6. '   ' → logprob: -9.18007755279541
    7. 'i' → logprob: -10.30507755279541
    8. '	while' → logprob: -11.30507755279541
    9. 'While' → logprob: -13.68007755279541
    10. ' ' → logprob: -13.93007755279541

Token 369: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.12693145871162415
    2. 'i' → logprob: -2.1269314289093018
    3. '   ' → logprob: -13.251931190490723
    4. '(i' → logprob: -13.876931190490723
    5. '	i' → logprob: -15.001931190490723
    6. ' ' → logprob: -16.12693214416504
    7. '    ' → logprob: -16.75193214416504
    8. '  ' → logprob: -16.75193214416504
    9. '[i' → logprob: -16.75193214416504
    10. '       ' → logprob: -17.12693214416504

Token 370: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.014881947077810764
    2. '<=' → logprob: -4.2648820877075195
    3. ' <' → logprob: -7.2648820877075195
    4. '<' → logprob: -12.01488208770752
    5. ' +=' → logprob: -12.01488208770752
    6. ' ≤' → logprob: -12.26488208770752
    7. '   ' → logprob: -14.13988208770752
    8. ' <<=' → logprob: -15.01488208770752
    9. '+=' → logprob: -15.51488208770752
    10. '≤' → logprob: -15.76488208770752

Token 371: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0325924449716695e-05
    2. ' self' → logprob: -11.50001049041748
    3. '[self' → logprob: -17.500009536743164
    4. '(self' → logprob: -17.500009536743164
    5. '```' → logprob: -18.375009536743164
    6. '	self' → logprob: -19.000009536743164
    7. '   ' → logprob: -19.000009536743164
    8. '       ' → logprob: -19.250009536743164
    9. '
' → logprob: -19.250009536743164
    10. '=self' → logprob: -19.875009536743164

Token 372: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.00014013137842994183
    2. 'size' → logprob: -8.875140190124512
    3. '.' → logprob: -15.625140190124512
    4. ' size' → logprob: -16.750139236450195
    5. 'self' → logprob: -17.500139236450195
    6. '	size' → logprob: -17.875139236450195
    7. 'ize' → logprob: -18.375139236450195
    8. '<size' → logprob: -18.875139236450195
    9. '_size' → logprob: -19.750139236450195
    10. ':size' → logprob: -20.125139236450195

Token 373: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.17990854382514954
    2. ':' → logprob: -1.8049085140228271
    3. ':
' → logprob: -9.929908752441406
    4. '           ' → logprob: -10.054908752441406
    5. '):
' → logprob: -10.179908752441406
    6. ' and' → logprob: -11.304908752441406
    7. '       ' → logprob: -11.429908752441406
    8. '():
' → logprob: -12.929908752441406
    9. ',' → logprob: -13.304908752441406
    10. ':

' → logprob: -13.304908752441406

Token 374: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.780830830801278e-05
    2. 'self' → logprob: -10.75008773803711
    3. '```' → logprob: -10.87508773803711
    4. '<|end|>' → logprob: -11.25008773803711
    5. ' self' → logprob: -11.37508773803711
    6. ',' → logprob: -12.25008773803711
    7. '            
' → logprob: -13.25008773803711
    8. '+' → logprob: -13.37508773803711
    9. '   ' → logprob: -13.50008773803711
    10. '               ' → logprob: -13.75008773803711

Token 375: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.10506666451692581
    2. '           ' → logprob: -2.3550667762756348
    3. ' self' → logprob: -5.355066776275635
    4. '	self' → logprob: -9.980066299438477
    5. '(self' → logprob: -10.355066299438477
    6. '```' → logprob: -10.855066299438477
    7. '   ' → logprob: -11.230066299438477
    8. '               ' → logprob: -11.605066299438477
    9. '[self' → logprob: -13.105066299438477
    10. '       ' → logprob: -14.730066299438477

Token 376: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -3.380904672667384e-05
    2. '.' → logprob: -10.750033378601074
    3. ' .' → logprob: -11.625033378601074
    4. '	tree' → logprob: -13.500033378601074
    5. 'tree' → logprob: -14.500033378601074
    6. '.table' → logprob: -14.625033378601074
    7. '.thread' → logprob: -15.125033378601074
    8. '`.' → logprob: -16.37503433227539
    9. '>.' → logprob: -16.50003433227539
    10. '}.' → logprob: -16.75003433227539

Token 377: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -15.875
    3. '```' → logprob: -18.0
    4. '[I' → logprob: -18.375
    5. 'i' → logprob: -19.875
    6. '[self' → logprob: -20.125
    7. ' [' → logprob: -20.875
    8. '[
' → logprob: -21.125
    9. '[index' → logprob: -21.625
    10. '\[' → logprob: -21.875

Token 378: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05583997815847397
    2. '+=' → logprob: -3.305840015411377
    3. ' =' → logprob: -4.055840015411377
    4. ' +=' → logprob: -8.055839538574219
    5. ']+=' → logprob: -13.555839538574219
    6. '%=' → logprob: -14.055839538574219
    7. '=(' → logprob: -14.305839538574219
    8. '+=(' → logprob: -16.68083953857422
    9. '.=' → logprob: -16.80583953857422
    10. '＝' → logprob: -17.80583953857422

Token 379: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011251410469412804
    2. '+=' → logprob: -4.511251449584961
    3. ' =' → logprob: -8.511251449584961
    4. ' +=' → logprob: -13.386251449584961
    5. '%=' → logprob: -14.386251449584961
    6. '=(' → logprob: -15.386251449584961
    7. '.=' → logprob: -18.63625144958496
    8. '+=(' → logprob: -19.01125144958496
    9. '*=' → logprob: -19.26125144958496
    10. '＝' → logprob: -20.01125144958496

Token 380: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009269453585147858
    2. ' (' → logprob: -7.000926971435547
    3. '(x' → logprob: -12.375926971435547
    4. '(value' → logprob: -12.875926971435547
    5. '(this' → logprob: -13.375926971435547
    6. '   ' → logprob: -14.500926971435547
    7. '(input' → logprob: -14.750926971435547
    8. '(s' → logprob: -14.750926971435547
    9. '(ans' → logprob: -14.750926971435547
    10. '(state' → logprob: -14.875926971435547

Token 381: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.537868779967539e-06
    2. '(self' → logprob: -12.250008583068848
    3. ' self' → logprob: -12.500008583068848
    4. '           ' → logprob: -17.62500762939453
    5. '[self' → logprob: -18.87500762939453
    6. '   ' → logprob: -20.25000762939453
    7. '	self' → logprob: -20.87500762939453
    8. '```' → logprob: -22.25000762939453
    9. '
' → logprob: -22.50000762939453
    10. '       ' → logprob: -22.75000762939453

Token 382: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -2.165027217415627e-05
    2. 'tree' → logprob: -11.250021934509277
    3. '.' → logprob: -12.250021934509277
    4. '	tree' → logprob: -12.625021934509277
    5. '(tree' → logprob: -16.00002098083496
    6. '.mod' → logprob: -16.62502098083496
    7. 'TREE' → logprob: -17.00002098083496
    8. ').' → logprob: -17.12502098083496
    9. '[' → logprob: -17.37502098083496
    10. '.t' → logprob: -17.37502098083496

Token 383: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. 'i' → logprob: -16.25
    3. '[self' → logprob: -18.125
    4. '[' → logprob: -19.125
    5. '```' → logprob: -20.25
    6. '{i' → logprob: -20.5
    7. '(i' → logprob: -21.125
    8. '[
' → logprob: -21.625
    9. '   ' → logprob: -21.625
    10. '[I' → logprob: -22.125

Token 384: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2520950436592102
    2. ' +' → logprob: -1.5020949840545654
    3. ']' → logprob: -10.127095222473145
    4. '[i' → logprob: -10.252095222473145
    5. '+x' → logprob: -10.252095222473145
    6. '+i' → logprob: -10.502095222473145
    7. ']+' → logprob: -10.877095222473145
    8. '[' → logprob: -12.502095222473145
    9. '+[' → logprob: -13.627095222473145
    10. ' ' → logprob: -14.127095222473145

Token 385: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47632157802581787
    2. ' +' → logprob: -0.9763215780258179
    3. '+x' → logprob: -6.101321697235107
    4. '+i' → logprob: -14.60132122039795
    5. '+[' → logprob: -14.72632122039795
    6. '+self' → logprob: -14.97632122039795
    7. '＋' → logprob: -15.47632122039795
    8. '+s' → logprob: -15.97632122039795
    9. '+
' → logprob: -16.226322174072266
    10. '+y' → logprob: -16.601322174072266

Token 386: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01416350994259119
    2. ' x' → logprob: -4.264163494110107
    3. '	x' → logprob: -18.264163970947266
    4. ')x' → logprob: -19.639163970947266
    5. '$x' → logprob: -21.639163970947266
    6. '(x' → logprob: -21.639163970947266
    7. '_x' → logprob: -22.139163970947266
    8. '"x' → logprob: -22.514163970947266
    9. '{x' → logprob: -22.764163970947266
    10. '%x' → logprob: -22.764163970947266

Token 387: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. ')%' → logprob: -13.25000286102295
    3. ' )' → logprob: -14.37500286102295
    4. ')
' → logprob: -19.875001907348633
    5. '）' → logprob: -20.250001907348633
    6. '       ' → logprob: -20.500001907348633
    7. '%' → logprob: -20.500001907348633
    8. '   ' → logprob: -20.625001907348633
    9. '```' → logprob: -21.750001907348633
    10. ']' → logprob: -22.250001907348633

Token 388: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.1112900897860527
    2. '%' → logprob: -2.7362899780273438
    3. ')' → logprob: -3.2362899780273438
    4. ')%' → logprob: -6.736289978027344
    5. '       ' → logprob: -12.986289978027344
    6. '%i' → logprob: -12.986289978027344
    7. ']' → logprob: -13.361289978027344
    8. ' )' → logprob: -13.736289978027344
    9. ' ' → logprob: -13.986289978027344
    10. '           ' → logprob: -13.986289978027344

Token 389: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0040785204619169235
    2. ' self' → logprob: -5.504078388214111
    3. '(self' → logprob: -16.629077911376953
    4. '       ' → logprob: -17.879077911376953
    5. '	self' → logprob: -18.129077911376953
    6. '   ' → logprob: -18.379077911376953
    7. '[self' → logprob: -19.504077911376953
    8. '
' → logprob: -19.754077911376953
    9. '```' → logprob: -19.754077911376953
    10. '           ' → logprob: -20.379077911376953

Token 390: '.mod' (ID: 19046)
  Prédit: '.mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -9.088346359931165e-07
    2. 'mod' → logprob: -14.500000953674316
    3. '.' → logprob: -14.875000953674316
    4. '	mod' → logprob: -19.375
    5. ' .' → logprob: -20.0
    6. '_mod' → logprob: -20.5
    7. ' mod' → logprob: -20.875
    8. 'MOD' → logprob: -22.25
    9. '.MOD' → logprob: -22.875
    10. '```' → logprob: -23.0

Token 391: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010930694406852126
    2. 'i' → logprob: -7.751092910766602
    3. '
' → logprob: -7.876092910766602
    4. '       ' → logprob: -9.376092910766602
    5. '   ' → logprob: -10.126092910766602
    6. ' i' → logprob: -10.126092910766602
    7. ',i' → logprob: -10.126092910766602
    8. '               ' → logprob: -10.626092910766602
    9. '```' → logprob: -10.751092910766602
    10. '            
' → logprob: -11.251092910766602

Token 392: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.690834273584187e-05
    2. 'i' → logprob: -10.37503719329834
    3. ' i' → logprob: -13.25003719329834
    4. '       ' → logprob: -13.87503719329834
    5. ',i' → logprob: -14.37503719329834
    6. '   ' → logprob: -14.62503719329834
    7. '
' → logprob: -14.75003719329834
    8. '            
' → logprob: -15.00003719329834
    9. '          ' → logprob: -15.12503719329834
    10. ',' → logprob: -15.25003719329834

Token 393: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.1005108430981636
    2. ' i' → logprob: -2.350510835647583
    3. '           ' → logprob: -8.100510597229004
    4. '   ' → logprob: -14.475510597229004
    5. '       ' → logprob: -15.725510597229004
    6. '	i' → logprob: -16.60051155090332
    7. '               ' → logprob: -17.60051155090332
    8. '  ' → logprob: -17.85051155090332
    9. ' ' → logprob: -18.35051155090332
    10. '    ' → logprob: -18.97551155090332

Token 394: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3132651150226593
    2. ' +=' → logprob: -1.313265085220337
    3. ' <<=' → logprob: -12.938264846801758
    4. '=' → logprob: -14.438264846801758
    5. ']+=' → logprob: -15.813264846801758
    6. '    ' → logprob: -16.313264846801758
    7. '   ' → logprob: -17.063264846801758
    8. '+' → logprob: -17.688264846801758
    9. '```' → logprob: -17.813264846801758
    10. '+=(' → logprob: -17.938264846801758

Token 395: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0019291093340143561
    2. ' i' → logprob: -6.25192928314209
    3. '(i' → logprob: -15.37692928314209
    4. '	i' → logprob: -15.75192928314209
    5. ' (' → logprob: -17.001928329467773
    6. '   ' → logprob: -18.126928329467773
    7. '  ' → logprob: -19.251928329467773
    8. '{i' → logprob: -19.251928329467773
    9. '(' → logprob: -20.251928329467773
    10. ',i' → logprob: -21.001928329467773

Token 396: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.038163360208272934
    2. ' &' → logprob: -3.288163423538208
    3. '&i' → logprob: -9.038163185119629
    4. '&amp' → logprob: -13.288163185119629
    5. '&t' → logprob: -14.413163185119629
    6. '&id' → logprob: -15.413163185119629
    7. '&r' → logprob: -15.788163185119629
    8. '"&' → logprob: -16.663164138793945
    9. '&a' → logprob: -16.788164138793945
    10. '＆' → logprob: -17.163164138793945

Token 397: ' -' (ID: 533)
  Prédit: '-i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.4507107734680176
    2. 'i' → logprob: -1.3257107734680176
    3. ' i' → logprob: -3.2007107734680176
    4. ' -' → logprob: -3.4507107734680176
    5. '-' → logprob: -3.7007107734680176
    6. '	i' → logprob: -10.57571029663086
    7. '(-' → logprob: -12.32571029663086
    8. ' ' → logprob: -12.70071029663086
    9. '_i' → logprob: -12.82571029663086
    10. '(i' → logprob: -13.32571029663086

Token 398: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.8624639324116288e-06
    2. ' i' → logprob: -13.250001907348633
    3. '	i' → logprob: -19.375001907348633
    4. '<|end|>' → logprob: -20.125001907348633
    5. '-i' → logprob: -20.250001907348633
    6. '[i' → logprob: -20.750001907348633
    7. '_i' → logprob: -21.125001907348633
    8. '{i' → logprob: -21.750001907348633
    9. ' ' → logprob: -22.000001907348633
    10. '[' → logprob: -22.250001907348633

Token 399: '

' (ID: 279)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -7.588793960167095e-05
    2. ' i' → logprob: -9.500076293945312
    3. '-i' → logprob: -14.375076293945312
    4. '-' → logprob: -16.125076293945312
    5. '	i' → logprob: -16.375076293945312
    6. ' -' → logprob: -16.625076293945312
    7. ' ' → logprob: -16.875076293945312
    8. '_i' → logprob: -17.375076293945312
    9. '   ' → logprob: -18.875076293945312
    10. ''i' → logprob: -19.125076293945312

Token 400: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4974607527256012
    2. '
' → logprob: -1.2474607229232788
    3. '    
' → logprob: -2.6224608421325684
    4. '<|end|>' → logprob: -4.622460842132568
    5. '```' → logprob: -4.997460842132568
    6. 'def' → logprob: -5.122460842132568
    7. '  
' → logprob: -5.497460842132568
    8. ' 
' → logprob: -6.122460842132568
    9. ' ' → logprob: -7.122460842132568
    10. '        
' → logprob: -7.747460842132568

Token 401: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.032682545483112335
    2. '
' → logprob: -3.7826826572418213
    3. '   ' → logprob: -4.782682418823242
    4. ' def' → logprob: -7.407682418823242
    5. '    
' → logprob: -8.157682418823242
    6. '```' → logprob: -9.157682418823242
    7. '  
' → logprob: -11.782682418823242
    8. '        
' → logprob: -12.032682418823242
    9. '

' → logprob: -13.032682418823242
    10. ' 
' → logprob: -13.157682418823242

Token 402: ' debug' (ID: 15199)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.029932603240013123
    2. ' lower' → logprob: -3.5299324989318848
    3. '_lower' → logprob: -8.654932975769043
    4. 'bit' → logprob: -13.029932975769043
    5. 'def' → logprob: -13.904932975769043
    6. ' ' → logprob: -14.279932975769043
    7. '   ' → logprob: -14.404932975769043
    8. 'upper' → logprob: -14.529932975769043
    9. '.lower' → logprob: -14.529932975769043
    10. 'max' → logprob: -15.029932975769043

Token 403: '_print' (ID: 31509)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.08388176560401917
    2. '(' → logprob: -2.5838818550109863
    3. 'self' → logprob: -5.958881855010986
    4. '_' → logprob: -6.458881855010986
    5. '()' → logprob: -8.458881378173828
    6. '_(' → logprob: -8.458881378173828
    7. '():' → logprob: -9.208881378173828
    8. '_print' → logprob: -9.583881378173828
    9. '_sum' → logprob: -9.583881378173828
    10. 'print' → logprob: -10.583881378173828

Token 404: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005941121373325586
    2. '(' → logprob: -5.130940914154053
    3. 'self' → logprob: -12.380941390991211
    4. '()' → logprob: -13.005941390991211
    5. ' (' → logprob: -13.005941390991211
    6. '(s' → logprob: -13.130941390991211
    7. '(
' → logprob: -13.755941390991211
    8. '(this' → logprob: -16.63094139099121
    9. '(Self' → logprob: -16.63094139099121
    10. '(`' → logprob: -16.75594139099121

Token 405: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.043527062982320786
    2. 'self' → logprob: -3.543527126312256
    3. '):
' → logprob: -4.543527126312256
    4. ',' → logprob: -6.293527126312256
    5. '(self' → logprob: -6.918527126312256
    6. ')' → logprob: -8.918526649475098
    7. ' ):' → logprob: -10.793526649475098
    8. ' self' → logprob: -11.418526649475098
    9. '):

' → logprob: -11.418526649475098
    10. ')(' → logprob: -11.668526649475098

Token 406: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4932252764701843
    2. '(self' → logprob: -1.118225336074829
    3. '   ' → logprob: -3.118225336074829
    4. '(' → logprob: -4.24322509765625
    5. '(
' → logprob: -6.36822509765625
    6. '():
' → logprob: -7.24322509765625
    7. '():' → logprob: -8.49322509765625
    8. 'self' → logprob: -8.74322509765625
    9. ':
' → logprob: -8.86822509765625
    10. '[' → logprob: -8.86822509765625

Token 407: ' """
' (ID: 7037)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3879850506782532
    2. '       ' → logprob: -1.1379849910736084
    3. 'for' → logprob: -7.6379852294921875
    4. ' print' → logprob: -7.8879852294921875
    5. 'def' → logprob: -9.012985229492188
    6. '   ' → logprob: -9.762985229492188
    7. 'self' → logprob: -10.762985229492188
    8. ' for' → logprob: -10.887985229492188
    9. '```' → logprob: -11.012985229492188
    10. '(' → logprob: -11.887985229492188

Token 408: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.049755782238208e-05
    2. 'print' → logprob: -11.00005054473877
    3. '"""' → logprob: -11.62505054473877
    4. '"' → logprob: -12.00005054473877
    5. '"""
' → logprob: -12.12505054473877
    6. '           ' → logprob: -12.37505054473877
    7. '   ' → logprob: -12.37505054473877
    8. '        ' → logprob: -14.00005054473877
    9. ' print' → logprob: -14.50005054473877
    10. 'self' → logprob: -14.62505054473877

Token 409: ' Print' (ID: 13103)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.392757773399353
    2. ' print' → logprob: -1.142757773399353
    3. '       ' → logprob: -5.892757892608643
    4. ' for' → logprob: -6.267757892608643
    5. 'def' → logprob: -7.517757892608643
    6. '   ' → logprob: -7.892757892608643
    7. 'for' → logprob: -8.642757415771484
    8. ' def' → logprob: -9.892757415771484
    9. 'Print' (adapté à ' Print') → logprob: -10.267757415771484
    10. '    ' → logprob: -11.517757415771484

Token 410: ' the' (ID: 290)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2615574300289154
    2. '(' → logprob: -1.5115574598312378
    3. ' (' → logprob: -5.886557579040527
    4. '(
' → logprob: -5.886557579040527
    5. 'self' → logprob: -6.136557579040527
    6. '()' → logprob: -7.511557579040527
    7. ' the' → logprob: -7.886557579040527
    8. ' self' → logprob: -8.636557579040527
    9. '('' → logprob: -8.886557579040527
    10. 's' → logprob: -9.011557579040527

Token 411: ' internal' (ID: 8812)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7234140634536743
    2. ' current' → logprob: -1.2234140634536743
    3. 'tree' → logprob: -2.3484139442443848
    4. 'current' → logprob: -2.8484139442443848
    5. ' self' → logprob: -3.4734139442443848
    6. ' tree' → logprob: -3.5984139442443848
    7. ' internal' → logprob: -5.098413944244385
    8. 'internal' → logprob: -6.598413944244385
    9. 'state' → logprob: -7.848413944244385
    10. ' contents' → logprob: -7.973413944244385

Token 412: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.06642212718725204
    2. ' state' → logprob: -3.5664222240448
    3. 'tree' → logprob: -3.6914222240448
    4. ' tree' → logprob: -4.941421985626221
    5. 'self' → logprob: -5.691421985626221
    6. '   ' → logprob: -8.066422462463379
    7. '       ' → logprob: -9.316422462463379
    8. ' self' → logprob: -9.816422462463379
    9. 'status' → logprob: -10.441422462463379
    10. 'array' → logprob: -11.066422462463379

Token 413: ' of' (ID: 328)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.22110247611999512
    2. '       ' → logprob: -2.221102476119995
    3. '(' → logprob: -2.971102476119995
    4. '()' → logprob: -4.221102714538574
    5. ' of' → logprob: -4.846102714538574
    6. '   ' → logprob: -4.846102714538574
    7. '(
' → logprob: -5.846102714538574
    8. 'self' → logprob: -5.846102714538574
    9. ' (' → logprob: -7.346102714538574
    10. 'def' → logprob: -7.596102714538574

Token 414: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8784978985786438
    2. 'self' → logprob: -1.128497838973999
    3. 'the' → logprob: -1.378497838973999
    4. ' self' → logprob: -4.753498077392578
    5. 'def' → logprob: -7.628498077392578
    6. '   ' → logprob: -12.878498077392578
    7. ' def' → logprob: -13.003498077392578
    8. '(self' → logprob: -13.253498077392578
    9. 'tree' → logprob: -14.003498077392578
    10. ' ' → logprob: -14.128498077392578

Token 415: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.02263941429555416
    2. ' tree' → logprob: -4.022639274597168
    3. 'self' → logprob: -5.522639274597168
    4. 'bit' → logprob: -8.147639274597168
    5. 'Fen' → logprob: -9.397639274597168
    6. 'BIT' → logprob: -10.522639274597168
    7. 'Bit' → logprob: -10.897639274597168
    8. 'fen' → logprob: -11.147639274597168
    9. ' Fen' → logprob: -11.272639274597168
    10. ' self' → logprob: -11.647639274597168

Token 416: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08697409182786942
    2. '(self' → logprob: -3.4619741439819336
    3. '   ' → logprob: -3.5869741439819336
    4. ':' → logprob: -4.836974143981934
    5. 'self' → logprob: -5.086974143981934
    6. ' for' → logprob: -5.711974143981934
    7. ')' → logprob: -6.461974143981934
    8. ',' → logprob: -6.711974143981934
    9. '.' → logprob: -6.961974143981934
    10. ' self' → logprob: -7.211974143981934

Token 417: ' debugging' (ID: 64667)
  Prédit: ' debugging'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' debugging' → logprob: -0.5776862502098083
    2. 'debug' → logprob: -0.8276862502098083
    3. ' debug' → logprob: -6.952686309814453
    4. 'd' → logprob: -7.952686309814453
    5. 'i' → logprob: -8.452686309814453
    6. '_debug' → logprob: -8.827686309814453
    7. '   ' → logprob: -10.577686309814453
    8. 'inspection' → logprob: -10.952686309814453
    9. ' i' → logprob: -11.827686309814453
    10. 'Debug' → logprob: -12.202686309814453

Token 418: '.
' (ID: 558)
  Prédit: ' purposes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' purposes' → logprob: -0.47598695755004883
    2. ':' → logprob: -2.350986957550049
    3. '(self' → logprob: -2.350986957550049
    4. '.' → logprob: -2.975986957550049
    5. '   ' → logprob: -3.225986957550049
    6. ':
' → logprob: -3.225986957550049
    7. 'self' → logprob: -3.475986957550049
    8. '       ' → logprob: -4.850986957550049
    9. ')' → logprob: -4.850986957550049
    10. 'def' → logprob: -5.475986957550049

Token 419: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20276851952075958
    2. '   ' → logprob: -1.7027685642242432
    3. '
' → logprob: -7.577768325805664
    4. 'def' → logprob: -7.827768325805664
    5. '<|end|>' → logprob: -9.202768325805664
    6. '    
' → logprob: -9.327768325805664
    7. ' def' → logprob: -9.577768325805664
    8. ')' → logprob: -10.327768325805664
    9. '        
' → logprob: -10.827768325805664
    10. ' 
' → logprob: -11.077768325805664

Token 420: ' Each' (ID: 11555)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5383825898170471
    2. '
' → logprob: -1.6633825302124023
    3. '   ' → logprob: -1.6633825302124023
    4. '\n' → logprob: -4.788382530212402
    5. '  
' → logprob: -5.163382530212402
    6. '    
' → logprob: -5.413382530212402
    7. '```' → logprob: -5.413382530212402
    8. 'def' → logprob: -5.538382530212402
    9. '<|end|>' → logprob: -5.663382530212402
    10. ')' → logprob: -6.163382530212402

Token 421: ' entry' (ID: 7251)
  Prédit: ' index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.9578685760498047
    2. ' line' → logprob: -1.7078685760498047
    3. 'index' → logprob: -2.4578685760498047
    4. ' level' → logprob: -2.4578685760498047
    5. ' element' → logprob: -2.7078685760498047
    6. 'line' → logprob: -2.8328685760498047
    7. ' call' → logprob: -3.0828685760498047
    8. 'level' → logprob: -3.9578685760498047
    9. 'print' → logprob: -4.207868576049805
    10. ' print' → logprob: -4.332868576049805

Token 422: ' is' (ID: 382)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01647031120955944
    2. ' is' → logprob: -4.766470432281494
    3. 'print' → logprob: -6.141470432281494
    4. 'self' → logprob: -6.766470432281494
    5. ' print' → logprob: -6.766470432281494
    6. ' of' → logprob: -7.141470432281494
    7. ':' → logprob: -7.141470432281494
    8. '(self' → logprob: -8.016469955444336
    9. ' def' → logprob: -8.891469955444336
    10. ' ' → logprob: -8.891469955444336

Token 423: ' ind' (ID: 1383)
  Prédit: ' printed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' printed' → logprob: -0.31392958760261536
    2. 'print' → logprob: -1.688929557800293
    3. ' separated' → logprob: -4.063929557800293
    4. ' print' → logprob: -4.063929557800293
    5. 'printed' → logprob: -4.313929557800293
    6. ' displayed' → logprob: -4.563929557800293
    7. 'self' → logprob: -4.938929557800293
    8. ' shown' → logprob: -5.563929557800293
    9. ' self' → logprob: -5.813929557800293
    10. 'shown' → logprob: -5.938929557800293

Token 424: 'ented' (ID: 23537)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.0032197798136621714
    2. 'ented' → logprob: -5.7532196044921875
    3. 'ent' → logprob: -10.628219604492188
    4. 'e' → logprob: -11.253219604492188
    5. 'eed' → logprob: -14.003219604492188
    6. '
' → logprob: -14.003219604492188
    7. 'efined' → logprob: -14.128219604492188
    8. '```' → logprob: -14.503219604492188
    9. '   ' → logprob: -14.628219604492188
    10. 'expl' → logprob: -15.253219604492188

Token 425: ' according' (ID: 7065)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21031898260116577
    2. ' by' → logprob: -2.2103190422058105
    3. ' with' → logprob: -3.3353190422058105
    4. '   ' → logprob: -3.3353190422058105
    5. '           ' → logprob: -6.0853190422058105
    6. '        ' → logprob: -6.5853190422058105
    7. ' ' → logprob: -6.7103190422058105
    8. '        
' → logprob: -7.4603190422058105
    9. ' and' → logprob: -7.5853190422058105
    10. '    ' → logprob: -7.5853190422058105

Token 426: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.34855616092681885
    2. ' to' → logprob: -1.2235561609268188
    3. '   ' → logprob: -9.723556518554688
    4. 'def' → logprob: -11.098556518554688
    5. '_to' → logprob: -12.223556518554688
    6. '<|end|>' → logprob: -12.223556518554688
    7. ' ' → logprob: -12.348556518554688
    8. '```' → logprob: -12.723556518554688
    9. '       ' → logprob: -13.223556518554688
    10. '0' → logprob: -13.223556518554688

Token 427: ' its' (ID: 1617)
  Prédit: ' its'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' its' → logprob: -0.0027639830950647593
    2. ' the' → logprob: -6.502763748168945
    3. 'its' → logprob: -7.377763748168945
    4. ' ' → logprob: -8.377763748168945
    5. ' self' → logprob: -8.752763748168945
    6. 'self' → logprob: -8.752763748168945
    7. 'the' → logprob: -10.377763748168945
    8. '4' → logprob: -11.252763748168945
    9. ' depth' → logprob: -11.252763748168945
    10. ' their' → logprob: -11.877763748168945

Token 428: ' lowest' (ID: 23120)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.6320448517799377
    2. 'index' → logprob: -1.757044792175293
    3. 'level' → logprob: -1.882044792175293
    4. ' depth' → logprob: -2.632044792175293
    5. 'bit' → logprob: -3.382044792175293
    6. ' level' → logprob: -4.257044792175293
    7. ' index' → logprob: -4.382044792175293
    8. 'position' → logprob: -5.132044792175293
    9. ' bit' → logprob: -5.757044792175293
    10. ' position' → logprob: -7.132044792175293

Token 429: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.027999594807624817
    2. 'bit' → logprob: -3.7779996395111084
    3. ' set' → logprob: -5.902999401092529
    4. '_set' → logprob: -6.277999401092529
    5. '1' → logprob: -9.652999877929688
    6. 'one' → logprob: -10.152999877929688
    7. '_one' → logprob: -11.027999877929688
    8. '_bit' → logprob: -12.152999877929688
    9. '-set' → logprob: -12.402999877929688
    10. '```' → logprob: -13.402999877929688

Token 430: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.022194819524884224
    2. ' bit' → logprob: -4.022194862365723
    3. '_bit' → logprob: -5.522194862365723
    4. '1' → logprob: -10.647194862365723
    5. '_' → logprob: -12.022194862365723
    6. 'Bit' → logprob: -12.647194862365723
    7. 'set' → logprob: -13.522194862365723
    8. '```' → logprob: -13.647194862365723
    9. ' set' → logprob: -14.022194862365723
    10. '(bit' → logprob: -14.272194862365723

Token 431: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17312800884246826
    2. ':' → logprob: -2.173128128051758
    3. ':
' → logprob: -4.548128128051758
    4. '(' → logprob: -5.173128128051758
    5. '   ' → logprob: -5.298128128051758
    6. '           ' → logprob: -5.548128128051758
    7. '[' → logprob: -5.673128128051758
    8. ' (' → logprob: -6.048128128051758
    9. '\t' → logprob: -6.048128128051758
    10. ',' → logprob: -6.173128128051758

Token 432: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2016158550977707
    2. '   ' → logprob: -1.701615810394287
    3. '```' → logprob: -8.701616287231445
    4. '    
' → logprob: -11.576616287231445
    5. '        
' → logprob: -12.076616287231445
    6. '    ' → logprob: -12.451616287231445
    7. '           ' → logprob: -12.826616287231445
    8. '	   ' → logprob: -12.951616287231445
    9. '     ' → logprob: -13.076616287231445
    10. '
' → logprob: -13.326616287231445

Token 433: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037585131358355284
    2. '
' → logprob: -6.003758430480957
    3. '   ' → logprob: -6.878758430480957
    4. '```' → logprob: -9.503758430480957
    5. 'def' → logprob: -9.628758430480957
    6. '        
' → logprob: -10.503758430480957
    7. '           ' → logprob: -10.753758430480957
    8. '    
' → logprob: -10.878758430480957
    9. '  
' → logprob: -11.628758430480957
    10. '\' → logprob: -12.128758430480957

Token 434: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004764287732541561
    2. ' for' → logprob: -8.125476837158203
    3. '   ' → logprob: -9.125476837158203
    4. 'for' → logprob: -10.250476837158203
    5. '	' → logprob: -11.000476837158203
    6. 'def' → logprob: -11.750476837158203
    7. '	   ' → logprob: -12.375476837158203
    8. '           ' → logprob: -13.625476837158203
    9. '```' → logprob: -13.625476837158203
    10. ' def' → logprob: -13.750476837158203

Token 435: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06556930392980576
    2. ' for' → logprob: -2.8155694007873535
    3. '       ' → logprob: -5.9405694007873535
    4. 'def' → logprob: -7.9405694007873535
    5. 'i' → logprob: -8.190568923950195
    6. 'print' → logprob: -9.565568923950195
    7. 'indent' → logprob: -9.565568923950195
    8. 'level' → logprob: -10.315568923950195
    9. ' i' → logprob: -10.565568923950195
    10. '   ' → logprob: -10.690568923950195

Token 436: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04422540217638016
    2. ' i' → logprob: -3.1692254543304443
    3. 'idx' → logprob: -7.669225215911865
    4. 'j' → logprob: -8.169225692749023
    5. 'index' → logprob: -8.419225692749023
    6. ' idx' → logprob: -8.669225692749023
    7. 'k' → logprob: -10.669225692749023
    8. ' index' → logprob: -11.044225692749023
    9. ' j' → logprob: -11.419225692749023
    10. 'x' → logprob: -11.794225692749023

Token 437: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0251579862087965
    2. 'in' → logprob: -3.775157928466797
    3. ',' → logprob: -6.400157928466797
    4. ' ' → logprob: -8.775157928466797
    5. ' ,' → logprob: -9.775157928466797
    6. '  ' → logprob: -11.650157928466797
    7. '   ' → logprob: -11.900157928466797
    8. '	in' → logprob: -11.900157928466797
    9. '    ' → logprob: -12.150157928466797
    10. '        ' → logprob: -12.900157928466797

Token 438: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.615255839889869e-05
    2. ' range' → logprob: -9.250096321105957
    3. '   ' → logprob: -17.25009536743164
    4. '1' → logprob: -17.50009536743164
    5. '(range' → logprob: -18.12509536743164
    6. '  ' → logprob: -18.75009536743164
    7. ' ' → logprob: -19.25009536743164
    8. '[' → logprob: -19.37509536743164
    9. '```' → logprob: -19.62509536743164
    10. 'rang' → logprob: -20.00009536743164

Token 439: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00018006093159783632
    2. '1' → logprob: -8.6251802444458
    3. '(self' → logprob: -15.2501802444458
    4. 'self' → logprob: -16.375179290771484
    5. '   ' → logprob: -16.875179290771484
    6. '       ' → logprob: -17.875179290771484
    7. ' (' → logprob: -18.125179290771484
    8. '(
' → logprob: -18.250179290771484
    9. '[' → logprob: -18.625179290771484
    10. ',' → logprob: -18.750179290771484

Token 440: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.248469718324486e-05
    2. 'self' → logprob: -10.875022888183594
    3. '   ' → logprob: -13.375022888183594
    4. ' ' → logprob: -13.375022888183594
    5. '2' → logprob: -15.625022888183594
    6. '0' → logprob: -16.250022888183594
    7. '(' → logprob: -17.000022888183594
    8. '       ' → logprob: -17.250022888183594
    9. 'len' → logprob: -17.562522888183594
    10. '
' → logprob: -17.937522888183594

Token 441: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005019682459533215
    2. ' ,' → logprob: -5.380019664764404
    3. ',len' → logprob: -8.130020141601562
    4. ',n' → logprob: -10.630020141601562
    5. ',
' → logprob: -11.005020141601562
    6. '   ' → logprob: -11.005020141601562
    7. ',length' → logprob: -11.130020141601562
    8. '       ' → logprob: -12.130020141601562
    9. ',self' → logprob: -12.505020141601562
    10. ',size' → logprob: -13.130020141601562

Token 442: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.3663626305060461e-05
    2. 'len' → logprob: -11.62501335144043
    3. ' self' → logprob: -12.62501335144043
    4. '   ' → logprob: -13.87501335144043
    5. '       ' → logprob: -15.37501335144043
    6. '
' → logprob: -16.87501335144043
    7. '           ' → logprob: -16.87501335144043
    8. '(self' → logprob: -17.00001335144043
    9. '    ' → logprob: -18.62501335144043
    10. '[self' → logprob: -18.62501335144043

Token 443: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -2.3199920178740285e-05
    2. 'size' → logprob: -11.000022888183594
    3. '.' → logprob: -13.500022888183594
    4. '.length' → logprob: -13.500022888183594
    5. '+' → logprob: -13.625022888183594
    6. '   ' → logprob: -14.500022888183594
    7. '.len' → logprob: -14.500022888183594
    8. ' size' → logprob: -15.000022888183594
    9. '.n' → logprob: -15.625022888183594
    10. '.depth' → logprob: -15.875022888183594

Token 444: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04859304800629616
    2. ' +' → logprob: -3.048593044281006
    3. '):
' → logprob: -13.548593521118164
    4. '+
' → logprob: -13.548593521118164
    5. '):' → logprob: -13.798593521118164
    6. '()+' → logprob: -14.673593521118164
    7. '   ' → logprob: -14.673593521118164
    8. ' ' → logprob: -15.298593521118164
    9. ',' → logprob: -15.548593521118164
    10. '```' → logprob: -15.923593521118164

Token 445: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5094070477061905e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -15.625015258789062
    4. '2' → logprob: -18.250015258789062
    5. '
' → logprob: -18.625015258789062
    6. 'self' → logprob: -18.625015258789062
    7. '```' → logprob: -19.000015258789062
    8. '  ' → logprob: -19.375015258789062
    9. '11' → logprob: -19.500015258789062
    10. '       ' → logprob: -20.000015258789062

Token 446: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.236549335066229e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -14.625021934509277
    4. '
' → logprob: -16.500022888183594
    5. '2' → logprob: -16.500022888183594
    6. '```' → logprob: -16.875022888183594
    7. 'self' → logprob: -17.625022888183594
    8. '11' → logprob: -17.750022888183594
    9. ')' → logprob: -17.812522888183594
    10. '10' → logprob: -18.000022888183594

Token 447: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.08147350698709488
    2. '):' → logprob: -2.5814735889434814
    3. ',' → logprob: -6.456473350524902
    4. ':' → logprob: -7.331473350524902
    5. '       ' → logprob: -8.831473350524902
    6. '):
' → logprob: -9.081473350524902
    7. ':
' → logprob: -9.581473350524902
    8. '           ' → logprob: -12.081473350524902
    9. ')' → logprob: -12.206473350524902
    10. '   ' → logprob: -12.581473350524902

Token 448: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005186012131161988
    2. ' print' → logprob: -8.125518798828125
    3. 'print' → logprob: -9.500518798828125
    4. ':' → logprob: -10.500518798828125
    5. '          ' → logprob: -10.750518798828125
    6. ',' → logprob: -10.875518798828125
    7. '	       ' → logprob: -11.125518798828125
    8. '            ' → logprob: -11.250518798828125
    9. '       ' → logprob: -11.500518798828125
    10. '```' → logprob: -11.500518798828125

Token 449: ' j' (ID: 441)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.13005143404006958
    2. ' print' → logprob: -2.255051374435425
    3. 'indent' → logprob: -4.755051612854004
    4. ' indent' → logprob: -5.255051612854004
    5. '           ' → logprob: -6.380051612854004
    6. 'depth' → logprob: -6.880051612854004
    7. 'level' → logprob: -8.880051612854004
    8. ' indentation' → logprob: -9.380051612854004
    9. 'offset' → logprob: -10.130051612854004
    10. 'spaces' → logprob: -10.255051612854004

Token 450: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3894360363483429
    2. ' =' → logprob: -1.1394360065460205
    3. ',' → logprob: -6.6394362449646
    4. '   ' → logprob: -7.6394362449646
    5. 'in' → logprob: -8.764435768127441
    6. 'bit' → logprob: -9.889435768127441
    7. '=len' → logprob: -9.889435768127441
    8. '=i' → logprob: -10.014435768127441
    9. ' ' → logprob: -10.139435768127441
    10. '    ' → logprob: -10.389435768127441

Token 451: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0010518652852624655
    2. '(i' → logprob: -7.251051902770996
    3. ' i' → logprob: -8.501051902770996
    4. '1' → logprob: -9.001051902770996
    5. 'self' → logprob: -12.626051902770996
    6. '(' → logprob: -12.876051902770996
    7. ' (' → logprob: -13.126051902770996
    8. '((' → logprob: -13.876051902770996
    9. '2' → logprob: -14.001051902770996
    10. '0' → logprob: -14.126051902770996

Token 452: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002371521550230682
    2. ' i' → logprob: -8.625237464904785
    3. '(i' → logprob: -10.375237464904785
    4. '   ' → logprob: -11.875237464904785
    5. 'self' → logprob: -12.500237464904785
    6. '-i' → logprob: -12.875237464904785
    7. ' ' → logprob: -13.125237464904785
    8. ')' → logprob: -13.125237464904785
    9. ')i' → logprob: -13.500237464904785
    10. '1' → logprob: -13.750237464904785

Token 453: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.014636924490332603
    2. ' &' → logprob: -4.389636993408203
    3. '&i' → logprob: -7.014636993408203
    4. '^' → logprob: -7.264636993408203
    5. '&amp' → logprob: -8.264636993408203
    6. '-' → logprob: -9.389636993408203
    7. ')' → logprob: -9.514636993408203
    8. '&t' → logprob: -11.264636993408203
    9. ')&' → logprob: -11.264636993408203
    10. '&
' → logprob: -11.264636993408203

Token 454: ' -' (ID: 533)
  Prédit: '-i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.2157689779996872
    2. '-' → logprob: -2.090769052505493
    3. '(-' → logprob: -2.840769052505493
    4. ' -' → logprob: -4.840768814086914
    5. '-j' → logprob: -6.590768814086914
    6. '-x' → logprob: -7.590768814086914
    7. '-in' → logprob: -7.965768814086914
    8. '-f' → logprob: -8.215768814086914
    9. '-t' → logprob: -8.590768814086914
    10. '-int' → logprob: -8.715768814086914

Token 455: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.306760805164231e-05
    2. 'j' → logprob: -11.75001335144043
    3. ' i' → logprob: -12.50001335144043
    4. ')i' → logprob: -14.25001335144043
    5. ')' → logprob: -14.87501335144043
    6. '	i' → logprob: -16.37501335144043
    7. '   ' → logprob: -16.62501335144043
    8. ''i' → logprob: -16.62501335144043
    9. '-i' → logprob: -16.87501335144043
    10. '_i' → logprob: -17.25001335144043

Token 456: ').' (ID: 741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12349723279476166
    2. ')
' → logprob: -2.373497247695923
    3. ')>>' → logprob: -4.248497009277344
    4. ').' → logprob: -4.873497009277344
    5. ')#' → logprob: -7.998497009277344
    6. '           ' → logprob: -8.623497009277344
    7. '       ' → logprob: -9.248497009277344
    8. ')<<' → logprob: -9.248497009277344
    9. ')

' → logprob: -9.748497009277344
    10. ')>' → logprob: -9.998497009277344

Token 457: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.001370357465930283
    2. '.bit' → logprob: -6.626370429992676
    3. ' bit' → logprob: -10.251370429992676
    4. '```' → logprob: -12.751370429992676
    5. '__' → logprob: -13.876370429992676
    6. 'j' → logprob: -14.126370429992676
    7. '_bit' → logprob: -14.251370429992676
    8. '-bit' → logprob: -14.501370429992676
    9. ' ' → logprob: -14.501370429992676
    10. 'hex' → logprob: -14.501370429992676

Token 458: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -3.054500666621607e-06
    2. 'length' → logprob: -13.37500286102295
    3. '_' → logprob: -14.75000286102295
    4. '_count' → logprob: -15.12500286102295
    5. '_width' → logprob: -15.50000286102295
    6. '_size' → logprob: -16.375003814697266
    7. '```' → logprob: -16.375003814697266
    8. '_value' → logprob: -16.500003814697266
    9. 'mask' → logprob: -16.750003814697266
    10. '_position' → logprob: -16.875003814697266

Token 459: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006651374278590083
    2. '()-' → logprob: -7.375665187835693
    3. '()
' → logprob: -10.500664710998535
    4. ' ()' → logprob: -12.750664710998535
    5. '()+' → logprob: -12.875664710998535
    6. '())' → logprob: -13.750664710998535
    7. '(),' → logprob: -14.125664710998535
    8. '()>' → logprob: -14.125664710998535
    9. '()[' → logprob: -14.125664710998535
    10. '()]' → logprob: -14.875664710998535

Token 460: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005818653153255582
    2. '       ' → logprob: -8.000581741333008
    3. '	       ' → logprob: -9.625581741333008
    4. '-' → logprob: -10.625581741333008
    5. ',' → logprob: -10.875581741333008
    6. '	   ' → logprob: -11.000581741333008
    7. '<|end|>' → logprob: -11.000581741333008
    8. '          ' → logprob: -11.125581741333008
    9. ':' → logprob: -11.625581741333008
    10. '               ' → logprob: -11.750581741333008

Token 461: ' print' (ID: 2123)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.42137277126312256
    2. ' print' → logprob: -1.5463727712631226
    3. 'print' (adapté à ' print') → logprob: -2.046372890472412
    4. '       ' → logprob: -6.671372890472412
    5. '   ' → logprob: -8.796372413635254
    6. '        ' → logprob: -9.671372413635254
    7. '```' → logprob: -10.046372413635254
    8. '    ' → logprob: -10.421372413635254
    9. '            ' → logprob: -10.671372413635254
    10. '         ' → logprob: -11.171372413635254

Token 462: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.5969248414039612
    2. '('' → logprob: -0.8469248414039612
    3. '(' → logprob: -4.346924781799316
    4. '(f' → logprob: -4.971924781799316
    5. '(i' → logprob: -7.346924781799316
    6. '(
' → logprob: -9.346924781799316
    7. '(("' → logprob: -10.346924781799316
    8. '((' → logprob: -10.596924781799316
    9. '("("' → logprob: -10.971924781799316
    10. '(('' → logprob: -10.971924781799316

Token 463: ' ' (ID: 220)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.01721544936299324
    2. ''i' → logprob: -4.642215251922607
    3. '   ' → logprob: -5.767215251922607
    4. '(i' → logprob: -6.142215251922607
    5. ' '' → logprob: -7.392215251922607
    6. '"' → logprob: -7.892215251922607
    7. ' ' → logprob: -8.517215728759766
    8. ''\' → logprob: -8.767215728759766
    9. '('' → logprob: -8.892215728759766
    10. 'j' → logprob: -9.267215728759766

Token 464: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.05720234662294388
    2. '(i' → logprob: -3.8072023391723633
    3. ''i' → logprob: -3.9322023391723633
    4. 'i' → logprob: -4.682202339172363
    5. ''*' → logprob: -5.807202339172363
    6. '('' → logprob: -8.057202339172363
    7. 'j' → logprob: -8.307202339172363
    8. '   ' → logprob: -8.807202339172363
    9. '"' → logprob: -8.807202339172363
    10. '(' → logprob: -9.057202339172363

Token 465: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.05115000158548355
    2. '*(' → logprob: -3.17615008354187
    3. '*i' → logprob: -5.051149845123291
    4. '*j' → logprob: -6.676149845123291
    5. ' *' → logprob: -7.926149845123291
    6. ')' → logprob: -10.05115032196045
    7. '"' → logprob: -11.30115032196045
    8. ''*' → logprob: -11.92615032196045
    9. '(i' → logprob: -11.92615032196045
    10. ''' → logprob: -12.17615032196045

Token 466: ' j' (ID: 441)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.0034134439192712307
    2. 'j' → logprob: -6.128413677215576
    3. '(i' → logprob: -7.253413677215576
    4. '(' → logprob: -7.628413677215576
    5. ' (' → logprob: -10.628413200378418
    6. '(self' → logprob: -12.128413200378418
    7. '(
' → logprob: -13.753413200378418
    8. 'i' → logprob: -14.628413200378418
    9. '(max' → logprob: -14.753413200378418
    10. '[j' → logprob: -14.878413200378418

Token 467: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2332860231399536
    2. ',' → logprob: -1.7332860231399536
    3. '+i' → logprob: -4.233285903930664
    4. ' +' → logprob: -4.733285903930664
    5. ',i' → logprob: -4.983285903930664
    6. ',end' → logprob: -6.858285903930664
    7. '+,' → logprob: -9.608285903930664
    8. ' ,' → logprob: -10.108285903930664
    9. '+'' → logprob: -11.608285903930664
    10. '+"' → logprob: -11.858285903930664

Token 468: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029932256788015366
    2. 'i' → logprob: -3.7799322605133057
    3. 'f' → logprob: -5.029932022094727
    4. 'str' → logprob: -9.654932022094727
    5. ' self' → logprob: -10.654932022094727
    6. 'repr' → logprob: -10.779932022094727
    7. 'j' → logprob: -12.654932022094727
    8. '(self' → logprob: -13.029932022094727
    9. ''i' → logprob: -13.279932022094727
    10. '[self' → logprob: -13.279932022094727

Token 469: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -1.4498052223643754e-05
    2. '.' → logprob: -11.625014305114746
    3. ' .' → logprob: -12.875014305114746
    4. 'tree' → logprob: -13.250014305114746
    5. '.i' → logprob: -15.000014305114746
    6. ').' → logprob: -15.250014305114746
    7. '.t' → logprob: -15.500014305114746
    8. '.table' → logprob: -16.250015258789062
    9. '	tree' → logprob: -16.250015258789062
    10. '.size' → logprob: -17.000015258789062

Token 470: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.945094355614856e-05
    2. '[' → logprob: -9.625069618225098
    3. ')' → logprob: -13.000069618225098
    4. '[I' → logprob: -14.875069618225098
    5. '[
' → logprob: -15.500069618225098
    6. '[j' → logprob: -15.500069618225098
    7. ')[' → logprob: -16.37506866455078
    8. 'i' → logprob: -16.75006866455078
    9. '```' → logprob: -16.75006866455078
    10. ']' → logprob: -17.62506866455078

Token 471: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002398938377154991
    2. ',' → logprob: -8.500240325927734
    3. ' )' → logprob: -10.500240325927734
    4. ')
' → logprob: -12.875240325927734
    5. ',)' → logprob: -12.875240325927734
    6. ',end' → logprob: -13.875240325927734
    7. ')}' → logprob: -14.250240325927734
    8. ')`' → logprob: -15.000240325927734
    9. '<|end|>' → logprob: -15.125240325927734
    10. '))' → logprob: -15.125240325927734

Token 472: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09556566923856735
    2. 'def' → logprob: -2.5955655574798584
    3. '
' → logprob: -4.8455657958984375
    4. ' def' → logprob: -5.2205657958984375
    5. ' ' → logprob: -6.4705657958984375
    6. '```' → logprob: -7.5955657958984375
    7. '    
' → logprob: -7.9705657958984375
    8. '	def' → logprob: -8.220565795898438
    9. '    ' → logprob: -8.845565795898438
    10. ' 
' → logprob: -9.095565795898438

Token 473: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.004521504044532776
    2. '   ' → logprob: -5.504521369934082
    3. ' def' → logprob: -7.754521369934082
    4. '
' → logprob: -11.754521369934082
    5. '    
' → logprob: -12.254521369934082
    6. '```' → logprob: -14.504521369934082
    7. ' ' → logprob: -15.129521369934082
    8. '	def' → logprob: -15.254521369934082
    9. '        
' → logprob: -15.754521369934082
    10. '  ' → logprob: -16.0045223236084

Token 474: ' lower' (ID: 6931)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.011109127663075924
    2. ' lower' → logprob: -4.511109352111816
    3. '_lower' → logprob: -9.886109352111816
    4. 'upper' → logprob: -13.261109352111816
    5. 'find' → logprob: -13.636109352111816
    6. 'def' → logprob: -13.886109352111816
    7. '.lower' → logprob: -14.386109352111816
    8. 'low' → logprob: -14.511109352111816
    9. 'bit' → logprob: -14.511109352111816
    10. '   ' → logprob: -14.636109352111816

Token 475: '_bound' (ID: 47558)
  Prédit: '_bound'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bound' → logprob: -9.13388703338569e-06
    2. '_' → logprob: -12.000009536743164
    3. '_lower' → logprob: -13.750009536743164
    4. '_bounds' → logprob: -14.375009536743164
    5. ' _' → logprob: -14.875009536743164
    6. '_find' → logprob: -15.625009536743164
    7. '_limit' → logprob: -16.000009536743164
    8. '_case' → logprob: -16.000009536743164
    9. '_upper' → logprob: -16.625009536743164
    10. '##_' → logprob: -16.750009536743164

Token 476: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.000651793903671205
    2. '(' → logprob: -7.625651836395264
    3. ' (' → logprob: -8.750651359558105
    4. 'self' → logprob: -12.875651359558105
    5. '(
' → logprob: -13.500651359558105
    6. '   ' → logprob: -14.750651359558105
    7. ' self' → logprob: -15.125651359558105
    8. '(s' → logprob: -15.500651359558105
    9. ' ' → logprob: -15.875651359558105
    10. '       ' → logprob: -15.875651359558105

Token 477: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.30975836515426636
    2. ',' → logprob: -1.8097584247589111
    3. 'self' → logprob: -2.309758424758911
    4. ',self' → logprob: -6.309758186340332
    5. '(' → logprob: -7.809758186340332
    6. ' self' → logprob: -7.934758186340332
    7. '   ' → logprob: -8.559758186340332
    8. 'def' → logprob: -8.684758186340332
    9. ' (' → logprob: -8.684758186340332
    10. '       ' → logprob: -9.559758186340332

Token 478: ' x' (ID: 1215)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.010231143794953823
    2. ' self' → logprob: -5.135231018066406
    3. 'w' → logprob: -5.885231018066406
    4. 'x' → logprob: -6.635231018066406
    5. 'val' → logprob: -10.010231018066406
    6. ' w' → logprob: -10.010231018066406
    7. 'value' → logprob: -10.760231018066406
    8. 's' → logprob: -11.010231018066406
    9. ' x' → logprob: -11.135231018066406
    10. '(self' → logprob: -11.385231018066406

Token 479: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07186191529035568
    2. '):
' → logprob: -3.071861982345581
    3. ',' → logprob: -3.821861982345581
    4. 'self' → logprob: -7.321861743927002
    5. ')' → logprob: -8.44686222076416
    6. '       ' → logprob: -9.32186222076416
    7. '   ' → logprob: -9.57186222076416
    8. '):
' → logprob: -9.82186222076416
    9. '(self' → logprob: -11.69686222076416
    10. ' ):' → logprob: -12.07186222076416

Token 480: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01610264740884304
    2. '(self' → logprob: -4.2661027908325195
    3. ':' → logprob: -6.8911027908325195
    4. '(' → logprob: -7.6411027908325195
    5. '   ' → logprob: -8.64110279083252
    6. 'self' → logprob: -9.89110279083252
    7. ':
' → logprob: -10.01610279083252
    8. '```' → logprob: -10.64110279083252
    9. ',' → logprob: -10.76610279083252
    10. '        
' → logprob: -10.76610279083252

Token 481: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031535925809293985
    2. ':' → logprob: -7.1281538009643555
    3. 'def' → logprob: -7.6281538009643555
    4. '   ' → logprob: -7.6281538009643555
    5. 'i' → logprob: -7.8781538009643555
    6. ':
' → logprob: -8.253153800964355
    7. '```' → logprob: -8.878153800964355
    8. ' i' → logprob: -9.003153800964355
    9. '#' → logprob: -9.503153800964355
    10. '    ' → logprob: -10.253153800964355

Token 482: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036710910499095917
    2. '"""
' → logprob: -5.628671169281006
    3. '"""' → logprob: -10.503670692443848
    4. '   ' → logprob: -10.878670692443848
    5. ' """
' → logprob: -12.003670692443848
    6. '      ' → logprob: -12.253670692443848
    7. '        ' → logprob: -12.878670692443848
    8. '           ' → logprob: -13.128670692443848
    9. '```' → logprob: -13.128670692443848
    10. '
' → logprob: -13.378670692443848

Token 483: ' Finds' (ID: 113426)
  Prédit: 'Find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Find' → logprob: -0.7461974620819092
    2. 'pos' → logprob: -1.1211974620819092
    3. 'res' → logprob: -2.871197462081909
    4. 'i' → logprob: -2.871197462081909
    5. 'idx' → logprob: -3.621197462081909
    6. '"""
' → logprob: -4.246197700500488
    7. ' pos' → logprob: -4.871197700500488
    8. ' Find' → logprob: -4.996197700500488
    9. 'def' → logprob: -5.121197700500488
    10. '
' → logprob: -5.371197700500488

Token 484: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.022167541086673737
    2. 'the' → logprob: -3.897167444229126
    3. '       ' → logprob: -7.272167682647705
    4. '   ' → logprob: -7.647167682647705
    5. 'def' → logprob: -9.272167205810547
    6. ' smallest' → logprob: -9.397167205810547
    7. 'index' → logprob: -9.522167205810547
    8. 'pos' → logprob: -9.647167205810547
    9. 'idx' → logprob: -10.397167205810547
    10. 'i' → logprob: -11.272167205810547

Token 485: ' smallest' (ID: 42173)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.31438180804252625
    2. 'index' → logprob: -1.6893818378448486
    3. 'idx' → logprob: -2.6893818378448486
    4. 'position' → logprob: -4.1893815994262695
    5. '"""' → logprob: -7.8143815994262695
    6. 'minimum' → logprob: -7.9393815994262695
    7. 'def' → logprob: -8.31438159942627
    8. 'largest' → logprob: -8.43938159942627
    9. 'x' → logprob: -8.93938159942627
    10. 'prefix' → logprob: -9.18938159942627

Token 486: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.317999005317688
    2. 'i' → logprob: -1.567999005317688
    3. ' index' → logprob: -3.0679988861083984
    4. 'idx' → logprob: -4.442998886108398
    5. ' i' → logprob: -5.442998886108398
    6. 'pos' → logprob: -7.567998886108398
    7. ' idx' → logprob: -8.442998886108398
    8. 'prefix' → logprob: -8.817998886108398
    9. ' ' → logprob: -9.192998886108398
    10. '   ' → logprob: -9.567998886108398

Token 487: ' such' (ID: 2238)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.41675621271133423
    2. ' i' → logprob: -1.4167561531066895
    3. ' such' → logprob: -2.6667561531066895
    4. 'i' → logprob: -5.4167561531066895
    5. 'j' → logprob: -5.4167561531066895
    6. '   ' → logprob: -5.5417561531066895
    7. ' `' → logprob: -5.5417561531066895
    8. ' k' → logprob: -5.9167561531066895
    9. ' idx' → logprob: -6.5417561531066895
    10. ' at' → logprob: -6.6667561531066895

Token 488: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.02214992791414261
    2. 'hat' → logprob: -4.647150039672852
    3. ' that' → logprob: -4.772150039672852
    4. '       ' → logprob: -6.522150039672852
    5. '_that' → logprob: -6.522150039672852
    6. 'at' → logprob: -7.397150039672852
    7. 'That' → logprob: -8.522150039672852
    8. '=' → logprob: -10.772150039672852
    9. 'def' → logprob: -10.897150039672852
    10. 'x' → logprob: -11.022150039672852

Token 489: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10668502002954483
    2. ' self' → logprob: -3.356684923171997
    3. '       ' → logprob: -3.981684923171997
    4. ' the' → logprob: -4.106685161590576
    5. 'sum' → logprob: -4.481685161590576
    6. 's' → logprob: -4.606685161590576
    7. 'the' → logprob: -5.856685161590576
    8. ' s' → logprob: -5.981685161590576
    9. '   ' → logprob: -6.481685161590576
    10. 'prefix' → logprob: -6.606685161590576

Token 490: ' prefix' (ID: 18633)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.0375903844833374
    2. 'prefix' → logprob: -1.2875903844833374
    3. ' prefix' → logprob: -1.6625903844833374
    4. 'self' → logprob: -2.787590503692627
    5. ' sum' → logprob: -3.037590503692627
    6. 's' → logprob: -3.287590503692627
    7. ' cumulative' → logprob: -4.412590503692627
    8. ' s' → logprob: -5.287590503692627
    9. 'def' → logprob: -5.912590503692627
    10. 'c' → logprob: -5.912590503692627

Token 491: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.5669491291046143
    2. '_sum' → logprob: -1.3169491291046143
    3. ' sum' → logprob: -1.8169491291046143
    4. '       ' → logprob: -6.691948890686035
    5. '_' → logprob: -7.066948890686035
    6. '   ' → logprob: -9.441948890686035
    7. '_s' → logprob: -9.941948890686035
    8. ' _' → logprob: -10.691948890686035
    9. 's' → logprob: -11.066948890686035
    10. ' ' → logprob: -12.816948890686035

Token 492: ' >=' (ID: 5064)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.06014443188905716
    2. ' >=' → logprob: -3.8101444244384766
    3. 'is' → logprob: -4.060144424438477
    4. '>=' → logprob: -4.435144424438477
    5. '   ' → logprob: -5.685144424438477
    6. '(' → logprob: -7.685144424438477
    7. ' at' → logprob: -7.685144424438477
    8. ' of' → logprob: -7.810144424438477
    9. '```' → logprob: -7.810144424438477
    10. ' ' → logprob: -7.935144424438477

Token 493: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3868999183177948
    2. ' x' → logprob: -1.1368999481201172
    3. '       ' → logprob: -10.511899948120117
    4. '   ' → logprob: -14.386899948120117
    5. '```' → logprob: -14.386899948120117
    6. '(x' → logprob: -15.761899948120117
    7. '
' → logprob: -16.261899948120117
    8. '`' → logprob: -16.386899948120117
    9. '	x' → logprob: -16.511899948120117
    10. '        ' → logprob: -16.636899948120117

Token 494: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006179999094456434
    2. ':' → logprob: -6.5061798095703125
    3. '
' → logprob: -6.5061798095703125
    4. ',' → logprob: -7.0061798095703125
    5. ':
' → logprob: -7.1311798095703125
    6. '(' → logprob: -8.006179809570312
    7. '   ' → logprob: -8.006179809570312
    8. '        
' → logprob: -8.381179809570312
    9. ' (' → logprob: -8.756179809570312
    10. '.' → logprob: -8.881179809570312

Token 495: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020527164451777935
    2. '        
' → logprob: -7.2520527839660645
    3. '
' → logprob: -7.7520527839660645
    4. '\' → logprob: -8.377052307128906
    5. '```' → logprob: -8.627052307128906
    6. '   ' → logprob: -9.127052307128906
    7. '\n' → logprob: -9.752052307128906
    8. '  
' → logprob: -9.752052307128906
    9. ' 
' → logprob: -10.002052307128906
    10. '    
' → logprob: -10.002052307128906

Token 496: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.111979357432574e-05
    2. '   ' → logprob: -10.25007152557373
    3. '
' → logprob: -10.62507152557373
    4. '        
' → logprob: -13.00007152557373
    5. '```' → logprob: -13.25007152557373
    6. '           ' → logprob: -13.50007152557373
    7. ' if' → logprob: -13.75007152557373
    8. '      ' → logprob: -13.87507152557373
    9. 'def' → logprob: -14.12507152557373
    10. '        ' → logprob: -14.50007152557373

Token 497: ' Args' (ID: 39185)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5940192937850952
    2. '       ' → logprob: -1.5940192937850952
    3. 'idx' → logprob: -1.9690192937850952
    4. 'def' → logprob: -3.4690194129943848
    5. 'res' → logprob: -3.7190194129943848
    6. 'pos' → logprob: -3.8440194129943848
    7. 'index' → logprob: -3.9690194129943848
    8. '   ' → logprob: -5.469019412994385
    9. 's' → logprob: -6.469019412994385
    10. 'cur' → logprob: -7.344019412994385

Token 498: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25276464223861694
    2. '       ' → logprob: -1.8777647018432617
    3. '):' → logprob: -3.0027647018432617
    4. ',' → logprob: -4.752764701843262
    5. ')' → logprob: -5.377764701843262
    6. '(self' → logprob: -5.877764701843262
    7. '   ' → logprob: -6.627764701843262
    8. '```' → logprob: -7.502764701843262
    9. '):
' → logprob: -7.627764701843262
    10. '<|end|>' → logprob: -7.877764701843262

Token 499: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008741820929571986
    2. '           ' → logprob: -7.375874042510986
    3. 'self' → logprob: -8.375874519348145
    4. '   ' → logprob: -12.625874519348145
    5. 'x' → logprob: -12.750874519348145
    6. '```' → logprob: -12.875874519348145
    7. ' self' → logprob: -13.250874519348145
    8. '
' → logprob: -13.250874519348145
    9. '        ' → logprob: -13.500874519348145
    10. 'def' → logprob: -14.875874519348145

Token 500: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.011551840230822563
    2. ' x' → logprob: -4.761551856994629
    3. '       ' → logprob: -6.011551856994629
    4. 'self' → logprob: -7.761551856994629
    5. 'int' → logprob: -10.386551856994629
    6. '   ' → logprob: -11.011551856994629
    7. 'def' → logprob: -12.761551856994629
    8. ' self' → logprob: -12.761551856994629
    9. '        ' → logprob: -14.386551856994629
    10. ')' → logprob: -14.386551856994629

Token 501: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7581585049629211
    2. '):' → logprob: -0.7581585049629211
    3. '):
' → logprob: -3.0081584453582764
    4. '=' → logprob: -5.2581586837768555
    5. ' :' → logprob: -5.3831586837768555
    6. ' ):' → logprob: -6.8831586837768555
    7. '   ' → logprob: -7.2581586837768555
    8. '<|end|>' → logprob: -7.8831586837768555
    9. '       ' → logprob: -8.258158683776855
    10. ' ):
' → logprob: -8.258158683776855

Token 502: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0008439337252639234
    2. ' int' → logprob: -7.2508440017700195
    3. ')' → logprob: -9.00084400177002
    4. ':int' → logprob: -12.00084400177002
    5. '):' → logprob: -12.75084400177002
    6. '[int' → logprob: -13.87584400177002
    7. '):
' → logprob: -14.87584400177002
    8. '(int' → logprob: -16.250843048095703
    9. ' )' → logprob: -16.625843048095703
    10. '=int' → logprob: -17.000843048095703

Token 503: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5766379237174988
    2. '):
' → logprob: -0.8266379237174988
    3. '       ' → logprob: -8.701638221740723
    4. ' ):' → logprob: -8.951638221740723
    5. ' ):
' → logprob: -8.951638221740723
    6. ':' → logprob: -9.076638221740723
    7. ')' → logprob: -9.326638221740723
    8. '):
' → logprob: -10.326638221740723
    9. '   ' → logprob: -11.076638221740723
    10. '):

' → logprob: -12.076638221740723

Token 504: ' The' (ID: 623)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2774474620819092
    2. 'target' → logprob: -1.7774474620819092
    3. ' target' → logprob: -2.027447462081909
    4. ' s' → logprob: -2.402447462081909
    5. 'sum' → logprob: -3.027447462081909
    6. '       ' → logprob: -3.277447462081909
    7. ' The' → logprob: -3.527447462081909
    8. ' ' → logprob: -3.527447462081909
    9. 'The' → logprob: -3.527447462081909
    10. 's' → logprob: -3.777447462081909

Token 505: ' threshold' (ID: 24313)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8322985172271729
    2. 'target' → logprob: -1.0822985172271729
    3. ' target' → logprob: -2.207298517227173
    4. 'value' → logprob: -3.332298517227173
    5. 'prefix' → logprob: -3.832298517227173
    6. 'sum' → logprob: -3.957298517227173
    7. 'desired' → logprob: -4.332298278808594
    8. ' value' → logprob: -4.582298278808594
    9. ' x' → logprob: -5.707298278808594
    10. 'val' → logprob: -5.832298278808594

Token 506: ' sum' (ID: 4215)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5382761359214783
    2. '       ' → logprob: -1.538276195526123
    3. ' to' → logprob: -2.288276195526123
    4. '):' → logprob: -3.038276195526123
    5. ')' → logprob: -4.413276195526123
    6. '```' → logprob: -4.788276195526123
    7. ':' → logprob: -5.038276195526123
    8. '   ' → logprob: -5.163276195526123
    9. '        
' → logprob: -5.288276195526123
    10. '
' → logprob: -6.038276195526123

Token 507: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16869470477104187
    2. ')' → logprob: -2.4186947345733643
    3. '):
' → logprob: -3.2936947345733643
    4. '):' → logprob: -4.168694496154785
    5. ')
' → logprob: -4.793694496154785
    6. '
' → logprob: -5.668694496154785
    7. ':
' → logprob: -7.918694496154785
    8. ':' → logprob: -7.918694496154785
    9. ',' → logprob: -8.668694496154785
    10. '.
' → logprob: -9.043694496154785

Token 508: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005741306114941835
    2. '
' → logprob: -5.880741119384766
    3. '        
' → logprob: -5.880741119384766
    4. '    
' → logprob: -10.005741119384766
    5. ')' → logprob: -10.630741119384766
    6. '"""
' → logprob: -10.630741119384766
    7. '"""' → logprob: -11.255741119384766
    8. '            
' → logprob: -12.255741119384766
    9. '  
' → logprob: -12.255741119384766
    10. '```' → logprob: -12.380741119384766

Token 509: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005159631837159395
    2. '
' → logprob: -5.755159854888916
    3. 'Returns' → logprob: -6.380159854888916
    4. '        
' → logprob: -8.755159378051758
    5. '"""
' → logprob: -9.880159378051758
    6. '   ' → logprob: -10.630159378051758
    7. '"""' → logprob: -11.130159378051758
    8. '           ' → logprob: -11.380159378051758
    9. ' Returns' → logprob: -11.505159378051758
    10. '```' → logprob: -12.755159378051758

Token 510: ' Returns' (ID: 9609)
  Prédit: 'Returns'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Returns' (adapté à ' Returns') → logprob: -0.0001984146365430206
    2. '"""
' → logprob: -9.500198364257812
    3. 'If' → logprob: -9.625198364257812
    4. '"""' → logprob: -11.125198364257812
    5. ' Returns' → logprob: -11.625198364257812
    6. '       ' → logprob: -11.625198364257812
    7. 'if' → logprob: -11.750198364257812
    8. 'returns' → logprob: -11.750198364257812
    9. '   ' → logprob: -13.000198364257812
    10. 'Raises' → logprob: -13.000198364257812

Token 511: ':
' (ID: 734)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.22383332252502441
    2. '       ' → logprob: -2.4738333225250244
    3. ' ' → logprob: -3.4738333225250244
    4. '
' → logprob: -3.9738333225250244
    5. '0' → logprob: -4.223833084106445
    6. '        ' → logprob: -4.473833084106445
    7. ' 
' → logprob: -5.098833084106445
    8. '        
' → logprob: -5.348833084106445
    9. ' -' → logprob: -5.473833084106445
    10. 'self' → logprob: -5.473833084106445

Token 512: '           ' (ID: 352)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.48353341221809387
    2. '       ' → logprob: -1.4835333824157715
    3. ' ' → logprob: -2.7335333824157715
    4. ' self' → logprob: -3.1085333824157715
    5. 'self' → logprob: -3.3585333824157715
    6. 'int' → logprob: -5.6085333824157715
    7. '1' → logprob: -5.9835333824157715
    8. 'def' → logprob: -6.3585333824157715
    9. ' -' → logprob: -6.9835333824157715
    10. '```' → logprob: -7.6085333824157715

Token 513: ' tuple' (ID: 31311)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.15310683415737e-05
    2. ' int' → logprob: -10.750021934509277
    3. '[int' → logprob: -17.37502098083496
    4. '       ' → logprob: -19.00002098083496
    5. '```' → logprob: -19.25002098083496
    6. '(int' → logprob: -19.62502098083496
    7. '`' → logprob: -19.75002098083496
    8. '   ' → logprob: -19.87502098083496
    9. '
' → logprob: -20.25002098083496
    10. ':int' → logprob: -20.50002098083496

Token 514: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28471639752388
    2. ' (' → logprob: -1.9097163677215576
    3. '(int' → logprob: -3.0347163677215576
    4. '[int' → logprob: -3.4097163677215576
    5. ',' → logprob: -4.784716606140137
    6. ':
' → logprob: -6.284716606140137
    7. '(' → logprob: -6.284716606140137
    8. '[' → logprob: -6.409716606140137
    9. '(self' → logprob: -6.784716606140137
    10. '   ' → logprob: -6.909716606140137

Token 515: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.010016955435276031
    2. 'bool' → logprob: -5.010016918182373
    3. '(int' → logprob: -5.760016918182373
    4. '[int' → logprob: -9.885017395019531
    5. '(bool' → logprob: -10.510017395019531
    6. ')' → logprob: -10.760017395019531
    7. '   ' → logprob: -11.135017395019531
    8. ' int' → logprob: -12.010017395019531
    9. 'index' → logprob: -12.260017395019531
    10. 'Optional' → logprob: -12.885017395019531

Token 516: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3795937522663735e-05
    2. ',int' → logprob: -10.75002384185791
    3. ' ,' → logprob: -13.37502384185791
    4. ',
' → logprob: -14.87502384185791
    5. '[int' → logprob: -15.87502384185791
    6. ',bool' → logprob: -16.125022888183594
    7. 'int' → logprob: -16.750022888183594
    8. '[' → logprob: -17.125022888183594
    9. ',None' → logprob: -17.375022888183594
    10. ',

' → logprob: -17.500022888183594

Token 517: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04927357658743858
    2. 'bool' → logprob: -3.0492734909057617
    3. ' int' → logprob: -7.674273490905762
    4. ' bool' → logprob: -9.424273490905762
    5. 'Optional' → logprob: -9.924273490905762
    6. ')' → logprob: -10.174273490905762
    7. 'list' → logprob: -11.424273490905762
    8. 'List' → logprob: -11.424273490905762
    9. '[int' → logprob: -11.799273490905762
    10. 'Any' → logprob: -12.549273490905762

Token 518: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14593356847763062
    2. '):' → logprob: -2.1459336280822754
    3. '):
' → logprob: -4.020933628082275
    4. ')' → logprob: -7.270933628082275
    5. '       ' → logprob: -9.520933151245117
    6. '   ' → logprob: -10.270933151245117
    7. '):

' → logprob: -10.770933151245117
    8. '):
' → logprob: -10.770933151245117
    9. ' ,' → logprob: -11.145933151245117
    10. ',
' → logprob: -11.520933151245117

Token 519: ' Index' (ID: 14580)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.10098432749509811
    2. '(index' → logprob: -3.1009843349456787
    3. '       ' → logprob: -4.4759840965271
    4. '(i' → logprob: -5.1009840965271
    5. 'The' → logprob: -5.4759840965271
    6. '(prefix' → logprob: -5.6009840965271
    7. '(current' → logprob: -5.9759840965271
    8. '(' → logprob: -6.1009840965271
    9. '(sum' → logprob: -6.1009840965271
    10. '(found' → logprob: -6.2259840965271

Token 520: ' where' (ID: 1919)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002668046159669757
    2. ' ,' → logprob: -6.2526679039001465
    3. ' and' → logprob: -8.127668380737305
    4. ',
' → logprob: -8.752668380737305
    5. 'and' → logprob: -9.002668380737305
    6. '       ' → logprob: -11.252668380737305
    7. ',n' → logprob: -11.377668380737305
    8. ' that' → logprob: -11.502668380737305
    9. ',value' → logprob: -11.627668380737305
    10. 'The' → logprob: -11.752668380737305

Token 521: ' prefix' (ID: 18633)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5441577434539795
    2. 'the' → logprob: -1.0441577434539795
    3. 'prefix' → logprob: -3.1691577434539795
    4. ' prefix' → logprob: -4.544157981872559
    5. 'sum' → logprob: -4.919157981872559
    6. 'self' → logprob: -5.794157981872559
    7. '(prefix' → logprob: -7.169157981872559
    8. ' sum' → logprob: -7.294157981872559
    9. ' self' → logprob: -7.544157981872559
    10. ' cumulative' → logprob: -7.794157981872559

Token 522: ' sum' (ID: 4215)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.1942209005355835
    2. 'sum' → logprob: -2.444221019744873
    3. ' _' → logprob: -3.569221019744873
    4. ' sum' → logprob: -3.569221019744873
    5. '       ' → logprob: -3.694221019744873
    6. '_' → logprob: -6.319221019744873
    7. ',' → logprob: -6.444221019744873
    8. ' +' → logprob: -6.444221019744873
    9. '_s' → logprob: -6.819221019744873
    10. '   ' → logprob: -6.944221019744873

Token 523: ' first' (ID: 1577)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029647845774888992
    2. '       ' → logprob: -4.2796478271484375
    3. ' >=' → logprob: -5.1546478271484375
    4. ' is' → logprob: -5.7796478271484375
    5. '>=' → logprob: -6.2796478271484375
    6. ' ,' → logprob: -6.2796478271484375
    7. 'is' → logprob: -7.1546478271484375
    8. '_,' → logprob: -7.5296478271484375
    9. '(),' → logprob: -8.529647827148438
    10. '```' → logprob: -8.529647827148438

Token 524: ' exceeds' (ID: 63152)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.1477699726819992
    2. ' >=' → logprob: -2.2727699279785156
    3. '       ' → logprob: -5.022769927978516
    4. 'ex' → logprob: -5.147769927978516
    5. '   ' → logprob: -5.397769927978516
    6. '```' → logprob: -5.647769927978516
    7. ' exceeds' → logprob: -5.772769927978516
    8. 'is' → logprob: -5.772769927978516
    9. 'greater' → logprob: -5.897769927978516
    10. ' is' → logprob: -6.147769927978516

Token 525: ' x' (ID: 1215)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -1.1612368822097778
    2. 'x' → logprob: -1.2862368822097778
    3. 'or' → logprob: -1.4112368822097778
    4. '=' → logprob: -2.0362367630004883
    5. ' x' → logprob: -3.5362367630004883
    6. ' =' → logprob: -6.536236763000488
    7. ',' → logprob: -6.786236763000488
    8. ' the' → logprob: -7.411236763000488
    9. '>=' → logprob: -7.536236763000488
    10. '==' → logprob: -7.786236763000488

Token 526: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02841588482260704
    2. '+' → logprob: -3.7784159183502197
    3. ' +' → logprob: -6.153415679931641
    4. ' ,' → logprob: -6.778415679931641
    5. ',
' → logprob: -7.653415679931641
    6. ' plus' → logprob: -8.15341567993164
    7. ' or' → logprob: -8.27841567993164
    8. '       ' → logprob: -8.40341567993164
    9. '+,' → logprob: -8.65341567993164
    10. ')' → logprob: -9.02841567993164

Token 527: ' and' (ID: 326)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.0187541246414185
    2. ' prefix' → logprob: -1.0187541246414185
    3. ' sum' → logprob: -2.518754005432129
    4. ' self' → logprob: -2.893754005432129
    5. ' current' → logprob: -3.018754005432129
    6. ' cum' → logprob: -3.893754005432129
    7. ' cumulative' → logprob: -3.893754005432129
    8. ' total' → logprob: -4.893754005432129
    9. ' x' → logprob: -5.018754005432129
    10. ',' → logprob: -5.518754005432129

Token 528: ' sum' (ID: 4215)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.14506782591342926
    2. 'the' → logprob: -2.2700679302215576
    3. ' prefix' → logprob: -4.1450676918029785
    4. ' current' → logprob: -4.6450676918029785
    5. 'prefix' → logprob: -6.3950676918029785
    6. ' sum' → logprob: -6.8950676918029785
    7. 'current' → logprob: -7.0200676918029785
    8. ' cumulative' → logprob: -7.1450676918029785
    9. 'sum' → logprob: -7.6450676918029785
    10. ' total' → logprob: -8.270068168640137

Token 529: ' up' (ID: 869)
  Prédit: '_so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_so' → logprob: -1.0264370441436768
    2. '       ' → logprob: -1.9014370441436768
    3. ' =' → logprob: -2.0264370441436768
    4. ',' → logprob: -2.2764370441436768
    5. '   ' → logprob: -3.0264370441436768
    6. '_value' → logprob: -3.1514370441436768
    7. '_before' → logprob: -4.026436805725098
    8. '_' → logprob: -4.026436805725098
    9. ' up' → logprob: -4.276436805725098
    10. '_up' → logprob: -4.276436805725098

Token 530: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.020413417369127274
    2. '   ' → logprob: -5.145413398742676
    3. '_to' → logprob: -5.145413398742676
    4. ' to' → logprob: -5.395413398742676
    5. '       ' → logprob: -5.770413398742676
    6. '    ' → logprob: -8.770413398742676
    7. '```' → logprob: -8.770413398742676
    8. 'To' → logprob: -9.395413398742676
    9. '           ' → logprob: -9.770413398742676
    10. '  ' → logprob: -9.770413398742676

Token 531: ' just' (ID: 1327)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.24489612877368927
    2. 'index' → logprob: -2.244896173477173
    3. ' that' → logprob: -2.619896173477173
    4. 'i' → logprob: -3.619896173477173
    5. '(i' → logprob: -5.994895935058594
    6. ' index' → logprob: -6.244895935058594
    7. '(index' → logprob: -6.369895935058594
    8. 'the' → logprob: -6.619895935058594
    9. 'this' → logprob: -6.869895935058594
    10. 'and' → logprob: -7.494895935058594

Token 532: ' before' (ID: 2254)
  Prédit: 'before'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'before' → logprob: -0.09930577874183655
    2. 'to' → logprob: -2.4743058681488037
    3. '_before' → logprob: -5.349305629730225
    4. 'below' → logprob: -6.474305629730225
    5. '(i' → logprob: -6.724305629730225
    6. ' before' → logprob: -6.849305629730225
    7. 'i' → logprob: -7.849305629730225
    8. 'previous' → logprob: -8.349306106567383
    9. '_to' → logprob: -8.474306106567383
    10. ' to' → logprob: -8.849306106567383

Token 533: '.
' (ID: 558)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.31197139620780945
    2. ' that' → logprob: -2.061971426010132
    3. 'i' → logprob: -3.186971426010132
    4. 'the' → logprob: -3.436971426010132
    5. 'x' → logprob: -3.936971426010132
    6. '(i' → logprob: -4.186971187591553
    7. 'index' → logprob: -4.311971187591553
    8. ' the' → logprob: -5.311971187591553
    9. 'it' → logprob: -5.936971187591553
    10. '(' → logprob: -6.061971187591553

Token 534: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7839563488960266
    2. '       ' → logprob: -1.0339562892913818
    3. '()
' → logprob: -3.033956289291382
    4. '```' → logprob: -3.033956289291382
    5. '()' → logprob: -3.408956289291382
    6. ',' → logprob: -3.908956289291382
    7. '(' → logprob: -4.533956527709961
    8. ')' → logprob: -5.033956527709961
    9. '
' → logprob: -5.408956527709961
    10. '"""
' → logprob: -5.533956527709961

Token 535: ' """
' (ID: 7037)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3458530306816101
    2. '       ' → logprob: -1.3458530902862549
    3. '        
' → logprob: -3.720853090286255
    4. '```' → logprob: -5.970852851867676
    5. '    
' → logprob: -6.095852851867676
    6. '   ' → logprob: -7.220852851867676
    7. '  
' → logprob: -7.220852851867676
    8. ' 
' → logprob: -7.595852851867676
    9. '\n' → logprob: -8.095852851867676
    10. 'def' → logprob: -8.720852851867676

Token 536: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005776511505246162
    2. '   ' → logprob: -5.630776405334473
    3. 'i' → logprob: -6.380776405334473
    4. 'idx' → logprob: -8.755776405334473
    5. ' i' → logprob: -9.380776405334473
    6. 'def' → logprob: -9.880776405334473
    7. '```' → logprob: -10.005776405334473
    8. 'index' → logprob: -10.130776405334473
    9. 'pos' → logprob: -10.630776405334473
    10. '
' → logprob: -10.880776405334473

Token 537: ' sum' (ID: 4215)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5275460481643677
    2. 'idx' → logprob: -1.2775460481643677
    3. 'i' → logprob: -2.277545928955078
    4. 's' → logprob: -4.152545928955078
    5. 'sum' (adapté à ' sum') → logprob: -5.027545928955078
    6. 'cur' → logprob: -6.277545928955078
    7. 'index' → logprob: -6.902545928955078
    8. 'p' → logprob: -7.277545928955078
    9. 'res' → logprob: -7.527545928955078
    10. 'ind' → logprob: -7.777545928955078

Token 538: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.45705822110176086
    2. ' =' → logprob: -1.4570581912994385
    3. '_,' → logprob: -2.7070581912994385
    4. '=' → logprob: -3.2070581912994385
    5. '_=' → logprob: -4.457058429718018
    6. ',' → logprob: -4.707058429718018
    7. '_val' → logprob: -5.457058429718018
    8. 'val' → logprob: -6.832058429718018
    9. '_value' → logprob: -8.83205795288086
    10. '   ' → logprob: -8.95705795288086

Token 539: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3622896075248718
    2. ' =' → logprob: -1.4872896671295166
    3. ',' → logprob: -2.6122896671295166
    4. '_,' → logprob: -6.2372894287109375
    5. '_' → logprob: -6.3622894287109375
    6. '_=' → logprob: -7.3622894287109375
    7. ' ' → logprob: -9.362289428710938
    8. '   ' → logprob: -10.237289428710938
    9. ' ,' → logprob: -10.612289428710938
    10. 's' → logprob: -10.612289428710938

Token 540: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.12127808178775e-05
    2. ' ' → logprob: -10.000051498413086
    3. 'idx' → logprob: -12.625051498413086
    4. 'pos' → logprob: -13.250051498413086
    5. 'index' → logprob: -15.375051498413086
    6. 'prev' → logprob: -16.250051498413086
    7. 'res' → logprob: -16.375051498413086
    8. 'j' → logprob: -16.625051498413086
    9. '   ' → logprob: -16.750051498413086
    10. 'i' → logprob: -16.875051498413086

Token 541: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.968312951968983e-06
    2. ' ' → logprob: -11.750009536743164
    3. 'idx' → logprob: -13.875009536743164
    4. 'pos' → logprob: -14.000009536743164
    5. 'res' → logprob: -16.125009536743164
    6. 'index' → logprob: -16.125009536743164
    7. 'result' → logprob: -16.625009536743164
    8. 'val' → logprob: -17.500009536743164
    9. 'prev' → logprob: -17.625009536743164
    10. 'ans' → logprob: -17.875009536743164

Token 542: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1291576772928238
    2. ',' → logprob: -2.879157781600952
    3. 'pos' → logprob: -3.254157781600952
    4. 'idx' → logprob: -4.254157543182373
    5. 'index' → logprob: -5.129157543182373
    6. ' index' → logprob: -6.629157543182373
    7. ' idx' → logprob: -7.004157543182373
    8. 'i' → logprob: -7.004157543182373
    9. '
' → logprob: -7.379157543182373
    10. '   ' → logprob: -7.629157543182373

Token 543: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.637504518032074
    2. '       ' → logprob: -1.1375045776367188
    3. 'pos' → logprob: -2.0125045776367188
    4. 'idx' → logprob: -5.262504577636719
    5. ' pos' → logprob: -5.262504577636719
    6. 'i' → logprob: -5.762504577636719
    7. ',pos' → logprob: -6.512504577636719
    8. 'index' → logprob: -7.137504577636719
    9. ' idx' → logprob: -7.762504577636719
    10. '   ' → logprob: -8.387504577636719

Token 544: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.004265965893864632
    2. 'idx' → logprob: -5.504265785217285
    3. 'index' → logprob: -9.504265785217285
    4. 'i' → logprob: -9.504265785217285
    5. 'res' → logprob: -11.629265785217285
    6. 'ind' → logprob: -12.004265785217285
    7. 'k' → logprob: -12.504265785217285
    8. 'position' → logprob: -12.879265785217285
    9. ' pos' → logprob: -13.004265785217285
    10. 'id' → logprob: -13.004265785217285

Token 545: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687863945961
    2. '=' → logprob: -1.1368786096572876
    3. ' ' → logprob: -12.761878967285156
    4. '       ' → logprob: -13.511878967285156
    5. '        ' → logprob: -13.636878967285156
    6. '    ' → logprob: -14.136878967285156
    7. '   ' → logprob: -14.511878967285156
    8. '	' → logprob: -15.511878967285156
    9. ',' → logprob: -15.636878967285156
    10. ' +=' → logprob: -16.386878967285156

Token 546: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '000' → logprob: -20.000001907348633
    4. '00' → logprob: -20.125001907348633
    5. '   ' → logprob: -20.250001907348633
    6. '۰' → logprob: -20.750001907348633
    7. '```' → logprob: -21.125001907348633
    8. '=' → logprob: -22.500001907348633
    9. '  ' → logprob: -23.500001907348633
    10. '1' → logprob: -23.625001907348633

Token 547: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '000' → logprob: -21.75
    4. '1' → logprob: -21.875
    5. '۰' → logprob: -22.0
    6. '```' → logprob: -22.25
    7. '00' → logprob: -22.5
    8. '-' → logprob: -22.75
    9. '   ' → logprob: -23.375
    10. '=' → logprob: -23.625

Token 548: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00601056357845664
    2. '
' → logprob: -5.25601053237915
    3. ' for' → logprob: -7.75601053237915
    4. '        
' → logprob: -8.756011009216309
    5. ',' → logprob: -9.256011009216309
    6. '   ' → logprob: -10.506011009216309
    7. 'for' → logprob: -10.756011009216309
    8. '#' → logprob: -12.006011009216309
    9. ',
' → logprob: -12.506011009216309
    10. '[' → logprob: -12.631011009216309

Token 549: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01441417820751667
    2. ' for' → logprob: -4.764414310455322
    3. 'for' → logprob: -5.514414310455322
    4. '   ' → logprob: -6.389414310455322
    5. '
' → logprob: -10.889413833618164
    6. ' bit' → logprob: -11.264413833618164
    7. 'i' → logprob: -11.389413833618164
    8. 'bit' → logprob: -12.514413833618164
    9. '	for' → logprob: -12.764413833618164
    10. ' ' → logprob: -12.764413833618164

Token 550: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.000869413954205811
    2. ' for' → logprob: -7.500869274139404
    3. '   ' → logprob: -8.625869750976562
    4. '       ' → logprob: -9.500869750976562
    5. 'i' → logprob: -10.375869750976562
    6. 'bit' → logprob: -11.125869750976562
    7. 'k' → logprob: -12.250869750976562
    8. 'd' → logprob: -12.250869750976562
    9. 'mask' → logprob: -12.750869750976562
    10. '```' → logprob: -13.500869750976562

Token 551: ' i' (ID: 575)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.38861146569252014
    2. 'i' → logprob: -1.3886114358901978
    3. 'k' → logprob: -2.6386115550994873
    4. 'j' → logprob: -7.263611316680908
    5. 'bit' → logprob: -9.013611793518066
    6. 'h' → logprob: -9.513611793518066
    7. 'p' → logprob: -9.888611793518066
    8. ' d' → logprob: -10.138611793518066
    9. 'shift' → logprob: -10.388611793518066
    10. ' i' → logprob: -10.388611793518066

Token 552: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003195066237822175
    2. 'in' → logprob: -5.753195285797119
    3. '   ' → logprob: -11.753194808959961
    4. 's' → logprob: -13.003194808959961
    5. 'self' → logprob: -13.128194808959961
    6. 'd' → logprob: -14.253194808959961
    7. '=' → logprob: -14.378194808959961
    8. '       ' → logprob: -14.628194808959961
    9. ',' → logprob: -14.753194808959961
    10. '```' → logprob: -15.003194808959961

Token 553: ' range' (ID: 3352)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.6933202147483826
    2. 'range' → logprob: -0.6933202147483826
    3. ' reversed' → logprob: -8.693320274353027
    4. ' range' → logprob: -12.568320274353027
    5. '[' → logprob: -13.693320274353027
    6. 'reverse' → logprob: -14.568320274353027
    7. '[::-' → logprob: -16.19331932067871
    8. '(re' → logprob: -16.44331932067871
    9. '(range' → logprob: -16.56831932067871
    10. '   ' → logprob: -16.69331932067871

Token 554: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0017081368714571
    2. 'self' → logprob: -6.376708030700684
    3. '[self' → logprob: -13.001708030700684
    4. '(' → logprob: -13.626708030700684
    5. 's' → logprob: -13.626708030700684
    6. '   ' → logprob: -14.751708030700684
    7. '=self' → logprob: -14.751708030700684
    8. '	self' → logprob: -15.751708030700684
    9. '1' → logprob: -16.501708984375
    10. ' self' → logprob: -16.876708984375

Token 555: '.depth' (ID: 89791)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011529101990163326
    2. '[self' → logprob: -5.511528968811035
    3. '(self' → logprob: -5.761528968811035
    4. ' self' → logprob: -6.261528968811035
    5. '   ' → logprob: -7.386528968811035
    6. '.depth' → logprob: -8.011528968811035
    7. 'depth' → logprob: -8.011528968811035
    8. '=self' → logprob: -8.386528968811035
    9. ' ' → logprob: -8.636528968811035
    10. ',' → logprob: -9.011528968811035

Token 556: ',' (ID: 11)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6125287413597107
    2. '-' → logprob: -1.3625288009643555
    3. ',' → logprob: -1.6125288009643555
    4. ' ,' → logprob: -5.9875288009643555
    5. '       ' → logprob: -9.862528800964355
    6. '   ' → logprob: -10.987528800964355
    7. ',-' → logprob: -10.987528800964355
    8. ' ' → logprob: -11.862528800964355
    9. '  ' → logprob: -11.987528800964355
    10. '-,' → logprob: -12.487528800964355

Token 557: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.249780638725497e-05
    2. ' -' → logprob: -10.375032424926758
    3. '0' → logprob: -13.625032424926758
    4. ' ' → logprob: -18.750032424926758
    5. '   ' → logprob: -20.500032424926758
    6. '```' → logprob: -21.125032424926758
    7. '
' → logprob: -21.625032424926758
    8. '−' → logprob: -21.625032424926758
    9. '  ' → logprob: -21.875032424926758
    10. '1' → logprob: -22.375032424926758

Token 558: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '-' → logprob: -16.5
    4. '
' → logprob: -17.625
    5. '   ' → logprob: -18.625
    6. '```' → logprob: -18.75
    7. '2' → logprob: -19.375
    8. ' -' → logprob: -19.5
    9. '１' → logprob: -20.125
    10. 'self' → logprob: -20.375

Token 559: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019451212137937546
    2. ',-' → logprob: -4.144451141357422
    3. '-' → logprob: -6.519451141357422
    4. ' ,' → logprob: -6.894451141357422
    5. ' -' → logprob: -7.144451141357422
    6. '   ' → logprob: -10.019451141357422
    7. ' ,-' → logprob: -10.394451141357422
    8. '       ' → logprob: -10.644451141357422
    9. ',
' → logprob: -11.019451141357422
    10. '  ' → logprob: -12.644451141357422

Token 560: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001398929744027555
    2. ' -' → logprob: -8.875140190124512
    3. ' ' → logprob: -18.000139236450195
    4. '1' → logprob: -18.375139236450195
    5. '   ' → logprob: -18.500139236450195
    6. '  ' → logprob: -18.875139236450195
    7. '0' → logprob: -19.625139236450195
    8. '-
' → logprob: -19.625139236450195
    9. '```' → logprob: -19.750139236450195
    10. ')' → logprob: -20.125139236450195

Token 561: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '   ' → logprob: -18.25
    4. '
' → logprob: -19.75
    5. '```' → logprob: -21.0
    6. '  ' → logprob: -21.25
    7. '2' → logprob: -21.5
    8. ',' → logprob: -21.75
    9. ')' → logprob: -21.75
    10. '-' → logprob: -22.75

Token 562: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06950827687978745
    2. '):' → logprob: -3.0695083141326904
    3. '   ' → logprob: -4.694508075714111
    4. ',' → logprob: -4.819508075714111
    5. '       ' → logprob: -6.069508075714111
    6. '           ' → logprob: -7.819508075714111
    7. ':' → logprob: -8.56950855255127
    8. '1' → logprob: -8.56950855255127
    9. ':
' → logprob: -9.19450855255127
    10. ' ):
' → logprob: -9.69450855255127

Token 563: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02174616977572441
    2. '    ' → logprob: -4.5217461585998535
    3. '        ' → logprob: -5.8967461585998535
    4. ' ' → logprob: -6.1467461585998535
    5. '   ' → logprob: -6.1467461585998535
    6. '            ' → logprob: -7.0217461585998535
    7. ' if' → logprob: -7.1467461585998535
    8. '1' → logprob: -7.6467461585998535
    9. ' 
' → logprob: -8.146746635437012
    10. ' s' → logprob: -8.521746635437012

Token 564: ' k' (ID: 372)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.6882475018501282
    2. 'k' (adapté à ' k') → logprob: -0.9382475018501282
    3. '   ' → logprob: -3.6882474422454834
    4. '       ' → logprob: -3.8132474422454834
    5. ' bit' → logprob: -4.1882476806640625
    6. 'mask' → logprob: -4.3132476806640625
    7. 'b' → logprob: -4.9382476806640625
    8. ' k' → logprob: -4.9382476806640625
    9. 'step' → logprob: -5.3132476806640625
    10. 'next' → logprob: -5.5632476806640625

Token 565: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22613179683685303
    2. '=' → logprob: -1.601131796836853
    3. ' ' → logprob: -7.851131916046143
    4. '   ' → logprob: -8.851131439208984
    5. '1' → logprob: -9.476131439208984
    6. 'w' → logprob: -10.601131439208984
    7. ' <<=' → logprob: -10.601131439208984
    8. '  ' → logprob: -11.476131439208984
    9. '=(' → logprob: -11.976131439208984
    10. '    ' → logprob: -12.101131439208984

Token 566: ' pos' (ID: 1253)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016061468049883842
    2. 'pos' → logprob: -4.141061305999756
    3. '(' → logprob: -10.766061782836914
    4. '(pos' → logprob: -12.391061782836914
    5. ' ' → logprob: -13.641061782836914
    6. ' pos' → logprob: -14.266061782836914
    7. '0' → logprob: -16.641061782836914
    8. '   ' → logprob: -17.016061782836914
    9. '[pos' → logprob: -17.016061782836914
    10. '((' → logprob: -17.766061782836914

Token 567: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.019065681844949722
    2. ' +' → logprob: -4.144065856933594
    3. '|' → logprob: -5.894065856933594
    4. '+(' → logprob: -8.269065856933594
    5. '   ' → logprob: -12.269065856933594
    6. ' |' → logprob: -12.394065856933594
    7. '+k' → logprob: -13.519065856933594
    8. '|(' → logprob: -13.644065856933594
    9. ' ' → logprob: -14.019065856933594
    10. '+=' → logprob: -14.019065856933594

Token 568: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.704273118884885e-07
    2. '((' → logprob: -15.250000953674316
    3. ' (' → logprob: -15.250000953674316
    4. '(i' → logprob: -16.5
    5. '1' → logprob: -17.625
    6. '   ' → logprob: -18.0
    7. '(self' → logprob: -19.0
    8. '[' → logprob: -19.125
    9. '(a' → logprob: -19.75
    10. '(k' → logprob: -19.875

Token 569: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.0
    3. ' ' → logprob: -19.0
    4. '   ' → logprob: -20.25
    5. '```' → logprob: -22.25
    6. '[' → logprob: -22.625
    7. ')' → logprob: -22.625
    8. '
' → logprob: -24.125
    9. '2' → logprob: -24.25
    10. '`' → logprob: -24.25

Token 570: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.005233882926404476
    2. ' <<' → logprob: -5.2552337646484375
    3. '<<<' → logprob: -17.505233764648438
    4. '<' → logprob: -17.630233764648438
    5. '<<(' → logprob: -17.755233764648438
    6. ' ' → logprob: -19.755233764648438
    7. ')<<' → logprob: -19.880233764648438
    8. '()<<' → logprob: -20.380233764648438
    9. '<<"' → logprob: -20.630233764648438
    10. '&lt' → logprob: -20.755233764648438

Token 571: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.6240566083070007e-06
    2. ' i' → logprob: -13.375001907348633
    3. ')i' → logprob: -18.375001907348633
    4. '	i' → logprob: -18.500001907348633
    5. '{i' → logprob: -20.250001907348633
    6. '(i' → logprob: -20.500001907348633
    7. '[i' → logprob: -20.625001907348633
    8. '*i' → logprob: -21.625001907348633
    9. '%i' → logprob: -22.125001907348633
    10. '$i' → logprob: -22.250001907348633

Token 572: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1269473135471344
    2. ')
' → logprob: -2.1269474029541016
    3. ' )' → logprob: -11.751947402954102
    4. ' )
' → logprob: -12.126947402954102
    5. '           ' → logprob: -13.876947402954102
    6. 'if' → logprob: -14.251947402954102
    7. ')
' → logprob: -14.251947402954102
    8. ')

' → logprob: -14.626947402954102
    9. '<|end|>' → logprob: -14.626947402954102
    10. ')>
' → logprob: -14.876947402954102

Token 573: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4147596061229706
    2. '<|end|>' → logprob: -1.539759635925293
    3. ' ' → logprob: -3.664759635925293
    4. '       ' → logprob: -3.789759635925293
    5. '<|end|>' → logprob: -3.914759635925293
    6. ' if' → logprob: -4.039759635925293
    7. '
' → logprob: -4.664759635925293
    8. '            
' → logprob: -5.289759635925293
    9. '        
' → logprob: -5.539759635925293
    10. ',' → logprob: -5.789759635925293

Token 574: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.41758936643600464
    2. ' if' → logprob: -1.1675894260406494
    3. '           ' → logprob: -3.5425894260406494
    4. '
' → logprob: -6.66758918762207
    5. '            
' → logprob: -10.66758918762207
    6. ' 
' → logprob: -12.66758918762207
    7. '               ' → logprob: -13.16758918762207
    8. ',' → logprob: -13.29258918762207
    9. ' ' → logprob: -13.54258918762207
    10. '       ' → logprob: -13.54258918762207

Token 575: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0002967320033349097
    2. ' k' → logprob: -8.125296592712402
    3. '           ' → logprob: -15.250296592712402
    4. '   ' → logprob: -15.375296592712402
    5. '	k' → logprob: -15.625296592712402
    6. ' ' → logprob: -16.87529754638672
    7. '(k' → logprob: -17.12529754638672
    8. '  ' → logprob: -17.37529754638672
    9. '               ' → logprob: -18.00029754638672
    10. '    ' → logprob: -18.25029754638672

Token 576: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.10021518170833588
    2. ' <=' → logprob: -2.350215196609497
    3. '<' → logprob: -11.850214958190918
    4. ' <' → logprob: -14.850214958190918
    5. ')<=' → logprob: -15.225214958190918
    6. '```' → logprob: -15.600214958190918
    7. ' ' → logprob: -15.850214958190918
    8. '[' → logprob: -15.975214958190918
    9. '<len' → logprob: -16.225215911865234
    10. '<size' → logprob: -16.350215911865234

Token 577: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.676292231422849e-05
    2. ' self' → logprob: -11.000017166137695
    3. '       ' → logprob: -20.250017166137695
    4. '   ' → logprob: -20.750017166137695
    5. '	self' → logprob: -21.000017166137695
    6. '(self' → logprob: -21.375017166137695
    7. '[self' → logprob: -21.500017166137695
    8. '           ' → logprob: -21.875017166137695
    9. '=self' → logprob: -22.375017166137695
    10. '
' → logprob: -22.625017166137695

Token 578: '.size' (ID: 4463)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.16142606735229492
    2. 'self' → logprob: -2.161426067352295
    3. '.size' → logprob: -3.411426067352295
    4. ' size' → logprob: -7.036426067352295
    5. ' self' → logprob: -10.786426544189453
    6. '       ' → logprob: -12.161426544189453
    7. '   ' → logprob: -13.161426544189453
    8. 's' → logprob: -13.286426544189453
    9. '_size' → logprob: -13.411426544189453
    10. '<size' → logprob: -13.911426544189453

Token 579: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.011048054322600365
    2. 'and' → logprob: -4.511047840118408
    3. '           ' → logprob: -15.136048316955566
    4. '	and' → logprob: -17.38604736328125
    5. ' ' → logprob: -17.88604736328125
    6. '          ' → logprob: -18.63604736328125
    7. ',' → logprob: -18.88604736328125
    8. ' и' → logprob: -19.01104736328125
    9. '        ' → logprob: -19.13604736328125
    10. ':
' → logprob: -19.13604736328125

Token 580: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.018253426998853683
    2. 'self' → logprob: -4.018253326416016
    3. '(sum' → logprob: -9.768253326416016
    4. ' sum' → logprob: -10.143253326416016
    5. '   ' → logprob: -12.268253326416016
    6. '(self' → logprob: -13.643253326416016
    7. ' self' → logprob: -14.643253326416016
    8. '	sum' → logprob: -16.268253326416016
    9. '  ' → logprob: -16.643253326416016
    10. '       ' → logprob: -16.643253326416016

Token 581: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004345260094851255
    2. ' +' → logprob: -5.879345417022705
    3. '+' → logprob: -6.504345417022705
    4. '_[' → logprob: -10.754344940185547
    5. '_<' → logprob: -11.754344940185547
    6. '   ' → logprob: -12.254344940185547
    7. '_
' → logprob: -13.754344940185547
    8. '```' → logprob: -13.879344940185547
    9. '_=' → logprob: -14.129344940185547
    10. ' _' → logprob: -14.379344940185547

Token 582: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3896331489086151
    2. ' +' → logprob: -1.1396331787109375
    3. '+x' → logprob: -6.8896331787109375
    4. '+k' → logprob: -7.3896331787109375
    5. '+self' → logprob: -7.3896331787109375
    6. '+s' → logprob: -7.7646331787109375
    7. '+c' → logprob: -11.264633178710938
    8. '+r' → logprob: -11.389633178710938
    9. '+p' → logprob: -12.014633178710938
    10. '
' → logprob: -12.139633178710938

Token 583: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0564331205387134e-05
    2. ' self' → logprob: -11.50001049041748
    3. '(self' → logprob: -15.25001049041748
    4. '[self' → logprob: -15.87501049041748
    5. '=self' → logprob: -17.500011444091797
    6. '   ' → logprob: -18.375011444091797
    7. '       ' → logprob: -18.625011444091797
    8. '           ' → logprob: -18.750011444091797
    9. '	self' → logprob: -19.000011444091797
    10. '```' → logprob: -19.875011444091797

Token 584: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.006717974785715342
    2. 'tree' → logprob: -5.006718158721924
    3. '.' → logprob: -13.881717681884766
    4. ' tree' → logprob: -14.631717681884766
    5. '	tree' → logprob: -14.756717681884766
    6. 'self' → logprob: -14.881717681884766
    7. 'Tree' → logprob: -15.631717681884766
    8. ' .' → logprob: -16.006717681884766
    9. '.t' → logprob: -17.256717681884766
    10. '(tree' → logprob: -17.381717681884766

Token 585: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.2664456789934775e-06
    2. 'k' → logprob: -13.750000953674316
    3. '[' → logprob: -16.000001907348633
    4. '[
' → logprob: -17.250001907348633
    5. '(k' → logprob: -19.125001907348633
    6. '{k' → logprob: -20.000001907348633
    7. '```' → logprob: -20.875001907348633
    8. '[j' → logprob: -21.500001907348633
    9. '[i' → logprob: -21.625001907348633
    10. ' [' → logprob: -21.750001907348633

Token 586: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.7680367827415466
    2. '<' → logprob: -0.8930367827415466
    3. ' <=' → logprob: -2.6430368423461914
    4. '<=' → logprob: -2.8930368423461914
    5. '<x' → logprob: -10.143036842346191
    6. '[' → logprob: -10.893036842346191
    7. ' ' → logprob: -10.893036842346191
    8. '<len' → logprob: -12.643036842346191
    9. '<s' → logprob: -12.768036842346191
    10. '```' → logprob: -12.893036842346191

Token 587: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.07401561737060547
    2. ' <' → logprob: -2.6990156173706055
    3. '<=' → logprob: -5.6990156173706055
    4. '<x' → logprob: -7.6990156173706055
    5. ' <=' → logprob: -8.449015617370605
    6. '<num' → logprob: -11.699015617370605
    7. '<
' → logprob: -11.824015617370605
    8. '<int' → logprob: -11.824015617370605
    9. '<len' → logprob: -12.199015617370605
    10. '<n' → logprob: -12.324015617370605

Token 588: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00015860427811276168
    2. ' x' → logprob: -8.750158309936523
    3. 'self' → logprob: -17.250158309936523
    4. '	x' → logprob: -18.250158309936523
    5. '   ' → logprob: -18.750158309936523
    6. '
' → logprob: -20.625158309936523
    7. '       ' → logprob: -20.750158309936523
    8. ' ' → logprob: -21.625158309936523
    9. '           ' → logprob: -21.750158309936523
    10. '```' → logprob: -22.375158309936523

Token 589: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.04860156774520874
    2. ':' → logprob: -3.0486016273498535
    3. '           ' → logprob: -12.173601150512695
    4. ':
' → logprob: -12.298601150512695
    5. '):
' → logprob: -12.798601150512695
    6. ':

' → logprob: -14.423601150512695
    7. ' :
' → logprob: -14.798601150512695
    8. '               ' → logprob: -15.048601150512695
    9. '       ' → logprob: -15.423601150512695
    10. ',' → logprob: -16.423601150512695

Token 590: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09273580461740494
    2. ':
' → logprob: -2.842735767364502
    3. ':' → logprob: -3.842735767364502
    4. '           ' → logprob: -4.967735767364502
    5. '):
' → logprob: -7.217735767364502
    6. '```' → logprob: -8.34273624420166
    7. ' :
' → logprob: -8.59273624420166
    8. '                
' → logprob: -9.34273624420166
    9. '            ' → logprob: -9.59273624420166
    10. ' :' → logprob: -9.84273624420166

Token 591: ' sum' (ID: 4215)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.4503154158592224
    2. 'sum' (adapté à ' sum') → logprob: -1.3253154754638672
    3. ' sum' → logprob: -3.075315475463867
    4. ' pos' → logprob: -3.075315475463867
    5. '               ' → logprob: -5.450315475463867
    6. '                   ' → logprob: -9.200315475463867
    7. '           ' → logprob: -9.700315475463867
    8. '   ' → logprob: -10.825315475463867
    9. '	pos' → logprob: -12.450315475463867
    10. '```' → logprob: -12.450315475463867

Token 592: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -9.849109119386412e-06
    2. '+=' → logprob: -12.000009536743164
    3. '_=' → logprob: -12.750009536743164
    4. '_
' → logprob: -15.125009536743164
    5. '_,' → logprob: -15.250009536743164
    6. ' +=' → logprob: -16.250009536743164
    7. '+' → logprob: -16.625009536743164
    8. '_

' → logprob: -17.625009536743164
    9. '```' → logprob: -17.750009536743164
    10. ']+=' → logprob: -18.375009536743164

Token 593: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3166138529777527
    2. '+=' → logprob: -1.3166139125823975
    3. '               ' → logprob: -5.941613674163818
    4. ',' → logprob: -8.191614151000977
    5. '                   ' → logprob: -8.566614151000977
    6. '                ' → logprob: -9.066614151000977
    7. '=' → logprob: -10.191614151000977
    8. '           ' → logprob: -10.566614151000977
    9. '+' → logprob: -11.066614151000977
    10. '   ' → logprob: -11.441614151000977

Token 594: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004890497075393796
    2. ' self' → logprob: -7.625489234924316
    3. '               ' → logprob: -14.125489234924316
    4. '(self' → logprob: -15.625489234924316
    5. '[self' → logprob: -16.00048828125
    6. '                   ' → logprob: -17.50048828125
    7. '	self' → logprob: -17.50048828125
    8. '           ' → logprob: -17.75048828125
    9. '   ' → logprob: -19.75048828125
    10. ' ' → logprob: -19.87548828125

Token 595: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -2.927930654550437e-05
    2. 'tree' → logprob: -11.000029563903809
    3. '.' → logprob: -12.250029563903809
    4. 'self' → logprob: -12.375029563903809
    5. '[self' → logprob: -13.750029563903809
    6. '	tree' → logprob: -13.750029563903809
    7. ' .' → logprob: -14.875029563903809
    8. '```' → logprob: -15.875029563903809
    9. '.t' → logprob: -16.000028610229492
    10. '   ' → logprob: -16.125028610229492

Token 596: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -7.226628895296017e-06
    2. 'k' → logprob: -11.875007629394531
    3. '[' → logprob: -16.25000762939453
    4. '{k' → logprob: -16.50000762939453
    5. '(k' → logprob: -17.87500762939453
    6. '```' → logprob: -19.62500762939453
    7. '[j' → logprob: -19.75000762939453
    8. '[key' → logprob: -19.75000762939453
    9. ',k' → logprob: -19.87500762939453
    10. '[i' → logprob: -20.00000762939453

Token 597: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002771712839603424
    2. ',' → logprob: -6.502771854400635
    3. '           ' → logprob: -7.252771854400635
    4. ')' → logprob: -8.877771377563477
    5. '<|end|>' → logprob: -8.877771377563477
    6. '                   ' → logprob: -9.127771377563477
    7. '
' → logprob: -10.002771377563477
    8. ')
' → logprob: -10.502771377563477
    9. '```' → logprob: -11.002771377563477
    10. '       ' → logprob: -11.377771377563477

Token 598: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00014251544780563563
    2. '```' → logprob: -9.625142097473145
    3. 'pos' → logprob: -9.750142097473145
    4. ',' → logprob: -12.250142097473145
    5. '``' → logprob: -12.500142097473145
    6. ',pos' → logprob: -12.750142097473145
    7. '                
' → logprob: -13.625142097473145
    8. '                   ' → logprob: -14.000142097473145
    9. ' pos' → logprob: -14.000142097473145
    10. '
' → logprob: -14.250142097473145

Token 599: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.0003357006062287837
    2. ' pos' → logprob: -8.000335693359375
    3. '               ' → logprob: -15.500335693359375
    4. '	pos' → logprob: -20.250335693359375
    5. ',pos' → logprob: -21.250335693359375
    6. '[pos' → logprob: -21.750335693359375
    7. '_pos' → logprob: -22.000335693359375
    8. '                   ' → logprob: -22.250335693359375
    9. '(pos' → logprob: -22.375335693359375
    10. 'position' → logprob: -22.500335693359375

Token 600: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16151998937129974
    2. ' =' → logprob: -1.911520004272461
    3. '+=' → logprob: -7.036520004272461
    4. ' +=' → logprob: -7.786520004272461
    5. '=k' → logprob: -14.911520004272461
    6. '+' → logprob: -16.41152000427246
    7. ' ' → logprob: -17.03652000427246
    8. ' |=' → logprob: -17.03652000427246
    9. '.=' → logprob: -17.28652000427246
    10. '＝' → logprob: -18.03652000427246

Token 601: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008621551096439362
    2. '(' → logprob: -4.758621692657471
    3. ' ' → logprob: -12.508621215820312
    4. ' (' → logprob: -12.633621215820312
    5. '(k' → logprob: -18.383621215820312
    6. '```' → logprob: -18.383621215820312
    7. '   ' → logprob: -19.258621215820312
    8. '[' → logprob: -19.883621215820312
    9. '`' → logprob: -19.883621215820312
    10. '{' → logprob: -20.008621215820312

Token 602: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011049113236367702
    2. '(' → logprob: -4.511049270629883
    3. ' (' → logprob: -14.261049270629883
    4. ' ' → logprob: -14.386049270629883
    5. '{' → logprob: -18.136049270629883
    6. '[' → logprob: -18.636049270629883
    7. '(k' → logprob: -18.636049270629883
    8. '```' → logprob: -18.636049270629883
    9. '`' → logprob: -20.011049270629883
    10. 'k' → logprob: -20.261049270629883

Token 603: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.4741443395614624
    2. ' <<' → logprob: -0.9741443395614624
    3. '<' → logprob: -10.474143981933594
    4. '<<(' → logprob: -11.099143981933594
    5. ' <<=' → logprob: -11.099143981933594
    6. ' <' → logprob: -12.974143981933594
    7. '<<<' → logprob: -13.724143981933594
    8. '0' → logprob: -14.224143981933594
    9. '```' → logprob: -14.349143981933594
    10. '(' → logprob: -14.349143981933594

Token 604: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.4974866644479334e-05
    2. ' i' → logprob: -11.125015258789062
    3. '	i' → logprob: -16.500015258789062
    4. '<|end|>' → logprob: -18.625015258789062
    5. '*i' → logprob: -18.875015258789062
    6. '<|end|>' → logprob: -19.500015258789062
    7. '{i' → logprob: -20.000015258789062
    8. ')i' → logprob: -20.750015258789062
    9. '[i' → logprob: -20.750015258789062
    10. '```' → logprob: -20.750015258789062

Token 605: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 606: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5595834851264954
    2. '               ' → logprob: -1.3095834255218506
    3. '<|end|>' → logprob: -1.9345834255218506
    4. '```' → logprob: -4.80958366394043
    5. '<|end|>' → logprob: -7.30958366394043
    6. ')' → logprob: -7.68458366394043
    7. '       ' → logprob: -7.68458366394043
    8. '0' → logprob: -7.93458366394043
    9. '          ' → logprob: -8.05958366394043
    10. '[' → logprob: -8.18458366394043

Token 607: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6564533114433289
    2. '<|end|>' → logprob: -1.6564533710479736
    3. '               ' → logprob: -2.0314533710479736
    4. '       ' → logprob: -2.2814533710479736
    5. '          ' → logprob: -4.7814531326293945
    6. '```' → logprob: -4.9064531326293945
    7. 'k' → logprob: -5.2814531326293945
    8. ')' → logprob: -5.4064531326293945
    9. '+' → logprob: -5.5314531326293945
    10. '        ' → logprob: -5.5314531326293945

Token 608: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.021285662427544594
    2. '(pos' → logprob: -4.021285533905029
    3. ' pos' → logprob: -5.771285533905029
    4. ' (' → logprob: -11.146286010742188
    5. '[pos' → logprob: -14.521286010742188
    6. '	pos' → logprob: -16.771286010742188
    7. ',pos' → logprob: -17.896286010742188
    8. '(' → logprob: -18.021286010742188
    9. '   ' → logprob: -18.146286010742188
    10. '_pos' → logprob: -18.396286010742188

Token 609: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5375555753707886
    2. '<|end|>' → logprob: -1.1625555753707886
    3. '+' → logprob: -2.662555694580078
    4. ' <<' → logprob: -3.662555694580078
    5. '<<' → logprob: -5.662555694580078
    6. ' <<=' → logprob: -6.912555694580078
    7. '       ' → logprob: -7.037555694580078
    8. ' ' → logprob: -7.287555694580078
    9. '        ' → logprob: -7.662555694580078
    10. ',' → logprob: -8.787555694580078

Token 610: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -17.750001907348633
    4. '0' → logprob: -19.125001907348633
    5. '   ' → logprob: -20.250001907348633
    6. '`' → logprob: -21.000001907348633
    7. '2' → logprob: -21.500001907348633
    8. '(' → logprob: -21.750001907348633
    9. '
' → logprob: -21.812501907348633
    10. 'def' → logprob: -22.062501907348633

Token 611: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.875
    3. '0' → logprob: -16.125
    4. '```' → logprob: -16.875
    5. '2' → logprob: -19.625
    6. '`' → logprob: -20.0625
    7. '(' → logprob: -20.75
    8. '-' → logprob: -21.1875
    9. '１' → logprob: -21.5625
    10. '' → logprob: -21.5625

Token 612: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 613: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.00020354038861114532
    2. ' sum' → logprob: -8.500203132629395
    3. '(sum' → logprob: -17.75020408630371
    4. 's' → logprob: -18.50020408630371
    5. '	sum' → logprob: -19.00020408630371
    6. 'x' → logprob: -20.87520408630371
    7. '0' → logprob: -20.87520408630371
    8. '   ' → logprob: -21.12520408630371
    9. '.sum' → logprob: -21.37520408630371
    10. ' ' → logprob: -21.50020408630371

Token 614: '_

' (ID: 44557)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.8312570318812504e-05
    2. ' _' → logprob: -12.375018119812012
    3. '<|end|>' → logprob: -12.375018119812012
    4. '_
' → logprob: -12.625018119812012
    5. '_)' → logprob: -13.000018119812012
    6. '_,' → logprob: -13.375018119812012
    7. '_

' → logprob: -13.625018119812012
    8. '_
' → logprob: -14.625018119812012
    9. '_]' → logprob: -15.875018119812012
    10. '_;' → logprob: -15.875018119812012

Token 615: '#' (ID: 2)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5138193368911743
    2. '               ' → logprob: -1.7638193368911743
    3. '<|end|>' → logprob: -2.1388192176818848
    4. '```' → logprob: -3.3888192176818848
    5. '+' → logprob: -3.7638192176818848
    6. '       ' → logprob: -4.138819217681885
    7. '          ' → logprob: -4.763819217681885
    8. '              ' → logprob: -5.763819217681885
    9. '=' → logprob: -5.763819217681885
    10. '            ' → logprob: -5.888819217681885

Token 616: ' Main' (ID: 7956)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3005814254283905
    2. '<|end|>' → logprob: -2.050581455230713
    3. '       ' → logprob: -2.925581455230713
    4. '               ' → logprob: -3.050581455230713
    5. '+' → logprob: -5.550581455230713
    6. '          ' → logprob: -5.675581455230713
    7. '```' → logprob: -5.675581455230713
    8. '   ' → logprob: -5.925581455230713
    9. '        ' → logprob: -6.050581455230713
    10. '            ' → logprob: -6.300581455230713

Token 617: ' section' (ID: 7102)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 618: ':' (ID: 25)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 619: ' reading' (ID: 6085)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.53069669008255
    2. '           ' → logprob: -1.9056966304779053
    3. '<|end|>' → logprob: -2.0306966304779053
    4. '   ' → logprob: -3.4056966304779053
    5. '	' → logprob: -4.030696868896484
    6. 'def' → logprob: -4.530696868896484
    7. '\t' → logprob: -4.655696868896484
    8. '[' → logprob: -4.655696868896484
    9. '		' → logprob: -4.780696868896484
    10. ' ' → logprob: -5.280696868896484

Token 620: ' and' (ID: 326)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.33679065108299255
    2. 'import' → logprob: -2.2117905616760254
    3. 'input' → logprob: -2.4617905616760254
    4. 'x' → logprob: -4.211790561676025
    5. ',' → logprob: -4.461790561676025
    6. ' =' → logprob: -4.711790561676025
    7. '
' → logprob: -4.961790561676025
    8. '=' → logprob: -5.086790561676025
    9. '_' → logprob: -5.211790561676025
    10. 'i' → logprob: -5.461790561676025

Token 621: ' preprocessing' (ID: 162206)
  Prédit: 'processing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'processing' → logprob: -0.49080827832221985
    2. 'writing' → logprob: -0.9908082485198975
    3. ' processing' → logprob: -4.615808486938477
    4. ' writing' → logprob: -5.615808486938477
    5. 'par' → logprob: -6.990808486938477
    6. '#' → logprob: -7.490808486938477
    7. 'sol' → logprob: -7.740808486938477
    8. 'process' → logprob: -8.740808486938477
    9. 'using' → logprob: -8.865808486938477
    10. '...' → logprob: -9.240808486938477

Token 622: ' inputs' (ID: 21963)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06475965678691864
    2. 'i' → logprob: -3.1897597312927246
    3. 'x' → logprob: -4.689759731292725
    4. '
' → logprob: -5.439759731292725
    5. 'import' → logprob: -6.189759731292725
    6. ',' → logprob: -7.314759731292725
    7. 'N' → logprob: -7.439759731292725
    8. '#' → logprob: -7.439759731292725
    9. 'a' → logprob: -7.564759731292725
    10. 't' → logprob: -7.689759731292725

Token 623: '
' (ID: 198)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.2144442796707153
    2. '
' → logprob: -1.3394442796707153
    3. 'n' → logprob: -1.8394442796707153
    4. '<|end|>' → logprob: -2.214444160461426
    5. 'i' → logprob: -3.089444160461426
    6. '<|end|>' → logprob: -3.589444160461426
    7. 'for' → logprob: -3.964444160461426
    8. '#' → logprob: -4.589444160461426
    9. 'data' → logprob: -4.839444160461426
    10. 'import' → logprob: -4.839444160461426

Token 624: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6162376999855042
    2. 'i' → logprob: -1.4912376403808594
    3. 'x' → logprob: -2.6162376403808594
    4. '#' → logprob: -3.2412376403808594
    5. '
' → logprob: -3.4912376403808594
    6. '[' → logprob: -4.241237640380859
    7. '<|end|>' → logprob: -4.616237640380859
    8. 's' → logprob: -4.866237640380859
    9. '   ' → logprob: -4.991237640380859
    10. ' ' → logprob: -5.241237640380859

Token 625: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.49077579379081726
    2. ' =' → logprob: -0.9907758235931396
    3. '=' → logprob: -4.1157755851745605
    4. ' ,' → logprob: -8.865776062011719
    5. ',n' → logprob: -10.615776062011719
    6. '=int' → logprob: -11.115776062011719
    7. ' ' → logprob: -11.490776062011719
    8. '   ' → logprob: -11.615776062011719
    9. ' =
' → logprob: -11.865776062011719
    10. ',k' → logprob: -12.365776062011719

Token 626: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.2689395546913147
    2. 'k' → logprob: -1.64393949508667
    3. ' m' → logprob: -3.51893949508667
    4. ' k' → logprob: -4.39393949508667
    5. 'q' → logprob: -8.268939971923828
    6. 'mod' → logprob: -9.768939971923828
    7. 'M' → logprob: -10.143939971923828
    8. 'MOD' → logprob: -10.268939971923828
    9. 'p' → logprob: -10.393939971923828
    10. 'K' → logprob: -10.643939971923828

Token 627: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07917673885822296
    2. ' =' → logprob: -2.579176664352417
    3. ',' → logprob: -8.204176902770996
    4. '=input' → logprob: -11.329176902770996
    5. '=int' → logprob: -14.329176902770996
    6. '=n' → logprob: -15.954176902770996
    7. ')' → logprob: -16.45417594909668
    8. 'import' → logprob: -16.82917594909668
    9. '=list' → logprob: -16.82917594909668
    10. 'input' → logprob: -16.95417594909668

Token 628: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.07902859151363373
    2. ' map' → logprob: -2.579028606414795
    3. '0' → logprob: -10.329028129577637
    4. ' ' → logprob: -10.454028129577637
    5. 'list' → logprob: -10.704028129577637
    6. '[' → logprob: -11.204028129577637
    7. '10' → logprob: -11.454028129577637
    8. '5' → logprob: -11.704028129577637
    9. ' [' → logprob: -12.704028129577637
    10. '	map' → logprob: -12.829028129577637

Token 629: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0005287261446937919
    2. 'int' → logprob: -7.625528812408447
    3. '(input' → logprob: -10.875528335571289
    4. '(' → logprob: -11.625528335571289
    5. 'input' → logprob: -12.250528335571289
    6. '(str' → logprob: -12.625528335571289
    7. '[int' → logprob: -12.875528335571289
    8. '=int' → logprob: -13.875528335571289
    9. '(
' → logprob: -15.250528335571289
    10. '<int' → logprob: -15.625528335571289

Token 630: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17461304366588593
    2. ',input' → logprob: -1.9246129989624023
    3. 'input' → logprob: -4.424612998962402
    4. ',int' → logprob: -6.299612998962402
    5. '(input' → logprob: -8.299612998962402
    6. '(),' → logprob: -9.424612998962402
    7. '().' → logprob: -10.049612998962402
    8. '(int' → logprob: -10.549612998962402
    9. ' input' → logprob: -10.549612998962402
    10. 'int' → logprob: -11.674612998962402

Token 631: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00317783304490149
    2. ' input' → logprob: -5.753177642822266
    3. 'int' → logprob: -17.378177642822266
    4. 'str' → logprob: -18.628177642822266
    5. '=input' → logprob: -18.628177642822266
    6. 'open' → logprob: -18.878177642822266
    7. '(input' → logprob: -19.253177642822266
    8. ' ' → logprob: -20.253177642822266
    9. ',input' → logprob: -20.378177642822266
    10. '<input' → logprob: -20.628177642822266

Token 632: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0001843485952122137
    2. '()' → logprob: -8.625184059143066
    3. '())' → logprob: -12.375184059143066
    4. '(' → logprob: -15.000184059143066
    5. ' ().' → logprob: -16.000185012817383
    6. '()
' → logprob: -16.750185012817383
    7. '(),' → logprob: -16.750185012817383
    8. '()[' → logprob: -17.875185012817383
    9. ')' → logprob: -18.375185012817383
    10. '()]' → logprob: -18.750185012817383

Token 633: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.620622712536715e-05
    2. 'strip' → logprob: -10.000045776367188
    3. 'rstrip' → logprob: -14.625045776367188
    4. '(split' → logprob: -15.875045776367188
    5. ' split' → logprob: -16.000045776367188
    6. 'spl' → logprob: -17.250045776367188
    7. '_split' → logprob: -19.250045776367188
    8. 'read' → logprob: -20.000045776367188
    9. '().' → logprob: -20.125045776367188
    10. ')' → logprob: -20.875045776367188

Token 634: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6111942529678345
    2. ')' → logprob: -0.8611942529678345
    3. '()' → logprob: -3.486194133758545
    4. '())
' → logprob: -5.736194133758545
    5. ')
' → logprob: -7.486194133758545
    6. '()
' → logprob: -9.111194610595703
    7. '(' → logprob: -9.361194610595703
    8. '().' → logprob: -10.986194610595703
    9. '(),' → logprob: -12.111194610595703
    10. '())
' → logprob: -12.111194610595703

Token 635: 'xxx' (ID: 49993)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.19649241864681244
    2. 'p' → logprob: -2.1964924335479736
    3. 'l' → logprob: -4.3214921951293945
    4. 'A' → logprob: -4.4464921951293945
    5. 'arr' → logprob: -4.9464921951293945
    6. 's' → logprob: -5.1964921951293945
    7. 'd' → logprob: -5.4464921951293945
    8. 'cards' → logprob: -5.8214921951293945
    9. 'x' → logprob: -6.0714921951293945
    10. 'k' → logprob: -6.0714921951293945

Token 636: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7233756184577942
    2. ' =' → logprob: -0.9733756184577942
    3. '_values' → logprob: -3.0983755588531494
    4. 's' → logprob: -4.3483757972717285
    5. 'arr' → logprob: -4.7233757972717285
    6. '_arr' → logprob: -4.8483757972717285
    7. 'a' → logprob: -4.9733757972717285
    8. '_numbers' → logprob: -4.9733757972717285
    9. '_list' → logprob: -5.0983757972717285
    10. ',' → logprob: -5.0983757972717285

Token 637: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.29930391907691956
    2. 'list' → logprob: -2.0493040084838867
    3. '[' → logprob: -2.2993040084838867
    4. '[list' → logprob: -4.299304008483887
    5. '[input' → logprob: -5.549304008483887
    6. '[n' → logprob: -5.674304008483887
    7. '[]
' → logprob: -5.924304008483887
    8. '[int' → logprob: -6.799304008483887
    9. 'sorted' → logprob: -6.799304008483887
    10. '[x' → logprob: -6.924304008483887

Token 638: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00024192029377445579
    2. '(' → logprob: -8.625242233276367
    3. '(int' → logprob: -10.500242233276367
    4. '()' → logprob: -10.875242233276367
    5. '(range' → logprob: -12.000242233276367
    6. '(input' → logprob: -12.625242233276367
    7. 'map' → logprob: -12.625242233276367
    8. '(
' → logprob: -13.125242233276367
    9. '(...)' → logprob: -15.125242233276367
    10. '[int' → logprob: -15.375242233276367

Token 639: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.04865583777427673
    2. 'int' → logprob: -3.0486557483673096
    3. '[int' → logprob: -10.17365550994873
    4. ',int' → logprob: -11.54865550994873
    5. '```' → logprob: -11.67365550994873
    6. '=int' → logprob: -12.17365550994873
    7. '(' → logprob: -13.29865550994873
    8. '<int' → logprob: -13.67365550994873
    9. ']int' → logprob: -13.79865550994873
    10. ')' → logprob: -14.79865550994873

Token 640: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.8127874732017517
    2. ',' → logprob: -1.0627875328063965
    3. '(input' → logprob: -1.5627875328063965
    4. 'input' → logprob: -7.1877875328063965
    5. '(' → logprob: -7.6877875328063965
    6. '=input' → logprob: -10.062787055969238
    7. '(),' → logprob: -10.312787055969238
    8. ' ,' → logprob: -11.437787055969238
    9. '   ' → logprob: -11.562787055969238
    10. ' (' → logprob: -11.562787055969238

Token 641: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -4.5491004129871726e-05
    2. ' input' → logprob: -10.000045776367188
    3. '(input' → logprob: -18.000045776367188
    4. '<input' → logprob: -18.500045776367188
    5. ' ' → logprob: -18.875045776367188
    6. 'lambda' → logprob: -20.125045776367188
    7. '=input' → logprob: -20.125045776367188
    8. 'int' → logprob: -20.625045776367188
    9. ',input' → logprob: -20.875045776367188
    10. '   ' → logprob: -20.875045776367188

Token 642: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.723352049040841e-06
    2. '()' → logprob: -12.375004768371582
    3. ' ().' → logprob: -15.250004768371582
    4. '(' → logprob: -16.500003814697266
    5. '()
' → logprob: -17.875003814697266
    6. '.' → logprob: -18.500003814697266
    7. '()[' → logprob: -19.250003814697266
    8. ' .' → logprob: -19.625003814697266
    9. '.split' → logprob: -19.750003814697266
    10. '()))' → logprob: -19.875003814697266

Token 643: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.676292231422849e-05
    2. 'strip' → logprob: -11.125017166137695
    3. '(split' → logprob: -13.375017166137695
    4. 'rstrip' → logprob: -15.375017166137695
    5. ' split' → logprob: -15.625017166137695
    6. 's' → logprob: -18.000017166137695
    7. 'spl' → logprob: -18.750017166137695
    8. '.split' → logprob: -19.250017166137695
    9. 'input' → logprob: -19.500017166137695
    10. 'read' → logprob: -20.000017166137695

Token 644: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.00450050039216876
    2. '))' → logprob: -6.004500389099121
    3. '()' → logprob: -6.754500389099121
    4. '()))
' → logprob: -7.129500389099121
    5. '())' → logprob: -10.754500389099121
    6. '(' → logprob: -10.879500389099121
    7. '()));' → logprob: -11.504500389099121
    8. '().' → logprob: -13.254500389099121
    9. '()))

' → logprob: -13.754500389099121
    10. '()))
' → logprob: -14.129500389099121

Token 645: ' ' (ID: 220)
  Prédit: 'xxx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xxx' → logprob: -1.2627912759780884
    2. 'm' → logprob: -1.8877912759780884
    3. 'pos' → logprob: -2.637791156768799
    4. 'idx' → logprob: -2.887791156768799
    5. 'x' → logprob: -3.012791156768799
    6. 'positions' → logprob: -3.137791156768799
    7. 'indices' → logprob: -3.387791156768799
    8. 'indexes' → logprob: -3.762791156768799
    9. 'k' → logprob: -3.887791156768799
    10. 'p' → logprob: -4.012791156768799

Token 646: ' #' (ID: 1069)
  Prédit: 'xxx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xxx' → logprob: -1.2191494703292847
    2. 'compressed' → logprob: -1.9691494703292847
    3. ')' → logprob: -2.719149589538574
    4. 'a' → logprob: -2.719149589538574
    5. 'x' → logprob: -2.844149589538574
    6. 'dp' → logprob: -2.969149589538574
    7. 'm' → logprob: -3.094149589538574
    8. 'pos' → logprob: -3.594149589538574
    9. 'positions' → logprob: -3.594149589538574
    10. 'idx' → logprob: -4.094149589538574

Token 647: ' List' (ID: 2655)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.37002938985824585
    2. 'xxx' → logprob: -1.7450294494628906
    3. '(x' → logprob: -2.9950294494628906
    4. '())' → logprob: -3.8700294494628906
    5. 'input' → logprob: -3.9950294494628906
    6. '(' → logprob: -4.620029449462891
    7. ')' → logprob: -4.745029449462891
    8. 'range' → logprob: -5.495029449462891
    9. 'sorted' → logprob: -5.495029449462891
    10. 'map' → logprob: -5.745029449462891

Token 648: ' of' (ID: 328)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(
' → logprob: -1.024957299232483
    2. '(' → logprob: -1.899957299232483
    3. 'of' → logprob: -2.3999571800231934
    4. ' of' → logprob: -2.8999571800231934
    5. '=' → logprob: -3.0249571800231934
    6. ')' → logprob: -3.0249571800231934
    7. '<|end|>' → logprob: -3.0249571800231934
    8. '...' → logprob: -3.2749571800231934
    9. '[' → logprob: -3.3999571800231934
    10. ' =' → logprob: -3.6499571800231934

Token 649: ' n' (ID: 297)
  Prédit: 'xxx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xxx' → logprob: -0.527578592300415
    2. 'int' → logprob: -1.027578592300415
    3. 'map' → logprob: -4.027578353881836
    4. 'sorted' → logprob: -4.152578353881836
    5. 'ints' → logprob: -4.527578353881836
    6. 'set' → logprob: -6.027578353881836
    7. 'm' → logprob: -6.652578353881836
    8. 'x' → logprob: -7.527578353881836
    9. 'range' → logprob: -7.652578353881836
    10. 'input' → logprob: -7.652578353881836

Token 650: ' values' (ID: 4824)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elements' → logprob: -1.2061158418655396
    2. 'inte' → logprob: -1.7061158418655396
    3. 'values' → logprob: -1.9561158418655396
    4. 'numbers' → logprob: -2.20611572265625
    5. ' integers' → logprob: -2.33111572265625
    6. ')' → logprob: -2.83111572265625
    7. 'xxx' → logprob: -3.70611572265625
    8. 'tokens' → logprob: -4.20611572265625
    9. 'x' → logprob: -4.33111572265625
    10. 'items' → logprob: -4.95611572265625

Token 651: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2952275276184082
    2. ')' → logprob: -1.5452275276184082
    3. 'xxx' → logprob: -1.6702275276184082
    4. 'm' → logprob: -2.420227527618408
    5. '#' → logprob: -3.295227527618408
    6. 'x' → logprob: -3.420227527618408
    7. 'idx' → logprob: -4.170227527618408
    8. '
' → logprob: -4.420227527618408
    9. 'pos' → logprob: -4.545227527618408
    10. 'indices' → logprob: -4.670227527618408

Token 652: 'e' (ID: 68)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03261759877204895
    2. '))
' → logprob: -4.407617568969727
    3. ')' → logprob: -4.907617568969727
    4. ')))' → logprob: -5.282617568969727
    5. '()))' → logprob: -6.157617568969727
    6. ' ))' → logprob: -6.782617568969727
    7. 'xxx' → logprob: -7.157617568969727
    8. '()' → logprob: -7.657617568969727
    9. 'm' → logprob: -7.907617568969727
    10. 'n' → logprob: -8.282617568969727

Token 653: '.g' (ID: 1940)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9195387959480286
    2. ')' → logprob: -1.7945387363433838
    3. 'x' → logprob: -2.544538736343384
    4. 'm' → logprob: -3.169538736343384
    5. 'lement' → logprob: -3.419538736343384
    6. 'rror' → logprob: -3.544538736343384
    7. 'n' → logprob: -3.794538736343384
    8. 'lements' → logprob: -3.794538736343384
    9. '[x' → logprob: -3.919538736343384
    10. 'lems' → logprob: -4.044538974761963

Token 654: '.,' (ID: 4213)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22265180945396423
    2. '...' → logprob: -2.472651720046997
    3. '[' → logprob: -2.847651720046997
    4. ',' → logprob: -3.597651720046997
    5. '=' → logprob: -5.097651958465576
    6. '])' → logprob: -5.722651958465576
    7. '))' → logprob: -5.722651958465576
    8. 'n' → logprob: -5.972651958465576
    9. '.' → logprob: -6.222651958465576
    10. 'x' → logprob: -6.722651958465576

Token 655: ' possible' (ID: 4149)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8440137505531311
    2. 'xxx' → logprob: -1.2190136909484863
    3. '))' → logprob: -2.3440136909484863
    4. 'int' → logprob: -2.8440136909484863
    5. ')))' → logprob: -4.094013690948486
    6. 'input' → logprob: -4.094013690948486
    7. '...' → logprob: -4.719013690948486
    8. 'm' → logprob: -4.844013690948486
    9. 'range' → logprob: -4.969013690948486
    10. 'ints' → logprob: -4.969013690948486

Token 656: ' x' (ID: 1215)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.769287645816803
    2. 'weights' → logprob: -1.5192875862121582
    3. 'values' → logprob: -2.894287586212158
    4. 'indices' → logprob: -3.519287586212158
    5. 'scores' → logprob: -3.894287586212158
    6. 'elements' → logprob: -4.144287586212158
    7. 'coordinates' → logprob: -4.144287586212158
    8. 'colors' → logprob: -4.144287586212158
    9. 'prices' → logprob: -4.644287586212158
    10. 'steps' → logprob: -4.769287586212158

Token 657: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6225077509880066
    2. 'xx' → logprob: -1.3725078105926514
    3. 's' → logprob: -2.8725078105926514
    4. '))' → logprob: -2.9975078105926514
    5. 'xxx' → logprob: -2.9975078105926514
    6. 'positions' → logprob: -4.497507572174072
    7. 'coordinates' → logprob: -4.747507572174072
    8. 'x' → logprob: -4.997507572174072
    9. '_positions' → logprob: -5.497507572174072
    10. '```' → logprob: -5.747507572174072

Token 658: 'positions' (ID: 32297)
  Prédit: 'xx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xx' → logprob: -0.7499368190765381
    2. 's' → logprob: -1.874936819076538
    3. ')' → logprob: -2.499936819076538
    4. 'coordinates' → logprob: -2.499936819076538
    5. 'positions' → logprob: -2.624936819076538
    6. 'xxx' → logprob: -2.999936819076538
    7. 'indexes' → logprob: -4.249937057495117
    8. 'x' → logprob: -4.374937057495117
    9. 'coords' → logprob: -4.624937057495117
    10. 'values' → logprob: -4.624937057495117

Token 659: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024311232846230268
    2. ' )' → logprob: -9.000243186950684
    3. '))' → logprob: -9.750243186950684
    4. ')
' → logprob: -11.125243186950684
    5. '[' → logprob: -11.375243186950684
    6. ')))' → logprob: -11.500243186950684
    7. '<|end|>' → logprob: -11.875243186950684
    8. ',' → logprob: -12.750243186950684
    9. ')#' → logprob: -13.375243186950684
    10. '   ' → logprob: -13.375243186950684

Token 660: 'yyy' (ID: 77541)
  Prédit: 'xxx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xxx' → logprob: -1.2199209928512573
    2. 'positions' → logprob: -2.594921112060547
    3. 'for' → logprob: -2.719921112060547
    4. 'sorted' → logprob: -2.719921112060547
    5. 'pos' → logprob: -2.969921112060547
    6. 'compressed' → logprob: -3.094921112060547
    7. 'x' → logprob: -3.344921112060547
    8. 'y' → logprob: -3.469921112060547
    9. 'a' → logprob: -3.719921112060547
    10. 'm' → logprob: -3.844921112060547

Token 661: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023302895948290825
    2. ' =' → logprob: -3.7733027935028076
    3. ',' → logprob: -9.773303031921387
    4. ')' → logprob: -15.398303031921387
    5. '=[]' → logprob: -16.52330207824707
    6. '=list' → logprob: -17.02330207824707
    7. ')=' → logprob: -17.14830207824707
    8. '[' → logprob: -18.02330207824707
    9. '=input' → logprob: -18.02330207824707
    10. '＝' → logprob: -18.27330207824707

Token 662: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -2.176947600673884e-05
    2. ' list' → logprob: -10.750021934509277
    3. '[' → logprob: -16.62502098083496
    4. '[list' → logprob: -16.75002098083496
    5. '[]' → logprob: -17.50002098083496
    6. 'map' → logprob: -19.00002098083496
    7. ' [' → logprob: -20.75002098083496
    8. 'List' → logprob: -21.25002098083496
    9. '=list' → logprob: -21.62502098083496
    10. '(list' → logprob: -21.62502098083496

Token 663: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -1.7954958821064793e-05
    2. 'map' → logprob: -11.000018119812012
    3. '(int' → logprob: -13.625018119812012
    4. '(' → logprob: -16.875017166137695
    5. ',map' → logprob: -17.000017166137695
    6. ' map' → logprob: -17.875017166137695
    7. '.map' → logprob: -18.250017166137695
    8. '	map' → logprob: -18.875017166137695
    9. '_map' → logprob: -20.000017166137695
    10. 'int' → logprob: -20.000017166137695

Token 664: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004261346068233252
    2. 'int' → logprob: -5.504261493682861
    3. '=int' → logprob: -8.754261016845703
    4. '[int' → logprob: -10.754261016845703
    5. '<int' → logprob: -13.254261016845703
    6. ',int' → logprob: -14.129261016845703
    7. '```' → logprob: -14.379261016845703
    8. ']int' → logprob: -15.879261016845703
    9. ' int' → logprob: -16.129261016845703
    10. ':int' → logprob: -16.379261016845703

Token 665: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.015091557055711746
    2. ',int' → logprob: -5.140091419219971
    3. '=int' → logprob: -5.265091419219971
    4. 'int' → logprob: -5.765091419219971
    5. ',' → logprob: -7.390091419219971
    6. '[int' → logprob: -9.890091896057129
    7. '(' → logprob: -10.015091896057129
    8. '(input' → logprob: -10.640091896057129
    9. '<int' → logprob: -10.765091896057129
    10. ' (' → logprob: -11.265091896057129

Token 666: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.7146746763028204e-05
    2. 'input' → logprob: -10.25003719329834
    3. '(int' → logprob: -13.37503719329834
    4. ' int' → logprob: -15.87503719329834
    5. '[int' → logprob: -16.500036239624023
    6. '=int' → logprob: -19.250036239624023
    7. '<int' → logprob: -19.375036239624023
    8. 'ints' → logprob: -19.500036239624023
    9. '   ' → logprob: -19.625036239624023
    10. '```' → logprob: -20.625036239624023

Token 667: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.3856492842023727e-06
    2. ' ().' → logprob: -13.875000953674316
    3. '.split' → logprob: -15.875000953674316
    4. '()' → logprob: -16.250001907348633
    5. ').' → logprob: -16.375001907348633
    6. '.' → logprob: -16.750001907348633
    7. '()).' → logprob: -18.000001907348633
    8. 'split' → logprob: -19.125001907348633
    9. '[].' → logprob: -19.250001907348633
    10. '```' → logprob: -19.500001907348633

Token 668: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.1888679839321412e-05
    2. 'input' → logprob: -11.125021934509277
    3. 'int' → logprob: -12.500021934509277
    4. 'skip' → logprob: -13.875021934509277
    5. ' split' → logprob: -14.375021934509277
    6. 'print' → logprob: -14.875021934509277
    7. 'plit' → logprob: -15.250021934509277
    8. 'strip' → logprob: -15.500021934509277
    9. 'index' → logprob: -16.00002098083496
    10. 'sp' → logprob: -16.12502098083496

Token 669: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0025722100399434566
    2. '()' → logprob: -6.502572059631348
    3. '))' → logprob: -7.252572059631348
    4. '()))
' → logprob: -8.002572059631348
    5. '()))

' → logprob: -12.002572059631348
    6. '()));' → logprob: -12.002572059631348
    7. '(' → logprob: -12.752572059631348
    8. '())).' → logprob: -12.752572059631348
    9. '())' → logprob: -12.877572059631348
    10. '()))
' → logprob: -13.252572059631348

Token 670: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3114606142044067
    2. 'mod' → logprob: -1.6864606142044067
    3. '
' → logprob: -2.061460494995117
    4. 'dp' → logprob: -2.436460494995117
    5. 'for' → logprob: -2.686460494995117
    6. 'm' → logprob: -3.061460494995117
    7. 'positions' → logprob: -3.186460494995117
    8. 'x' → logprob: -3.186460494995117
    9. 'n' → logprob: -4.686460494995117
    10. 'k' → logprob: -4.811460494995117

Token 671: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.008044379763305187
    2. ')' → logprob: -6.383044242858887
    3. '
' → logprob: -6.508044242858887
    4. 'for' → logprob: -6.508044242858887
    5. 'm' → logprob: -7.633044242858887
    6. 'x' → logprob: -7.758044242858887
    7. 'positions' → logprob: -8.008044242858887
    8. '()' → logprob: -8.633044242858887
    9. ' #' → logprob: -8.633044242858887
    10. 'mod' → logprob: -8.758044242858887

Token 672: ' List' (ID: 2655)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04246040806174278
    2. 'list' → logprob: -3.2924604415893555
    3. 'map' → logprob: -5.6674604415893555
    4. '[int' → logprob: -7.5424604415893555
    5. '(int' → logprob: -8.292460441589355
    6. 'input' → logprob: -8.792460441589355
    7. '(map' → logprob: -11.792460441589355
    8. '(list' → logprob: -12.292460441589355
    9. 'ints' → logprob: -12.792460441589355
    10. '<int' → logprob: -13.417460441589355

Token 673: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.20901824533939362
    2. ' of' → logprob: -2.4590182304382324
    3. '(map' → logprob: -2.4590182304382324
    4. '=' → logprob: -4.584018230438232
    5. '(' → logprob: -6.459018230438232
    6. '(n' → logprob: -6.959018230438232
    7. '```' → logprob: -7.334018230438232
    8. '(len' → logprob: -7.459018230438232
    9. ' =' → logprob: -7.709018230438232
    10. 's' → logprob: -7.709018230438232

Token 674: ' m' (ID: 284)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0030460467096418142
    2. 'm' → logprob: -6.003046035766602
    3. 'ints' → logprob: -7.628046035766602
    4. '[int' → logprob: -10.378046035766602
    5. 'n' → logprob: -10.503046035766602
    6. '(int' → logprob: -11.253046035766602
    7. 'y' → logprob: -12.003046035766602
    8. ' int' → logprob: -12.878046035766602
    9. '<int' → logprob: -14.128046035766602
    10. 'positions' → logprob: -14.503046035766602

Token 675: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.29787227511405945
    2. ' values' → logprob: -1.4228723049163818
    3. '(values' → logprob: -5.422872066497803
    4. 'positions' → logprob: -5.922872066497803
    5. ')' → logprob: -6.172872066497803
    6. '(' → logprob: -6.172872066497803
    7. 's' → logprob: -6.672872066497803
    8. '()' → logprob: -6.797872066497803
    9. '_values' → logprob: -6.797872066497803
    10. ' positions' → logprob: -7.047872066497803

Token 676: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 677: 'e' (ID: 68)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07041696459054947
    2. '))' → logprob: -2.9454169273376465
    3. ')))' → logprob: -4.1954169273376465
    4. 'int' → logprob: -10.070417404174805
    5. '[int' → logprob: -10.070417404174805
    6. '#' → logprob: -10.320417404174805
    7. ')
' → logprob: -10.570417404174805
    8. ')])' → logprob: -10.695417404174805
    9. ')),' → logprob: -11.195417404174805
    10. ')))
' → logprob: -11.320417404174805

Token 678: '.g' (ID: 1940)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9377667903900146
    2. '[' → logprob: -1.4377667903900146
    3. '#' → logprob: -1.8127667903900146
    4. '=' → logprob: -3.3127667903900146
    5. 'n' → logprob: -3.6877667903900146
    6. ',' → logprob: -3.8127667903900146
    7. 'x' → logprob: -3.9377667903900146
    8. '...' → logprob: -3.9377667903900146
    9. '```' → logprob: -4.437767028808594
    10. ')])' → logprob: -4.687767028808594

Token 679: '.,' (ID: 4213)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4691416919231415
    2. ')' → logprob: -1.5941417217254639
    3. '):' → logprob: -3.344141721725464
    4. '[' → logprob: -3.594141721725464
    5. ')])' → logprob: -3.844141721725464
    6. '])' → logprob: -3.969141721725464
    7. 'n' → logprob: -3.969141721725464
    8. ')]' → logprob: -4.969141483306885
    9. ']' → logprob: -5.219141483306885
    10. '))' → logprob: -5.594141483306885

Token 680: ' fixed' (ID: 13213)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.039784904569387436
    2. ' y' → logprob: -4.164784908294678
    3. 'possible' → logprob: -5.164784908294678
    4. 'positions' → logprob: -5.164784908294678
    5. 'int' → logprob: -5.914784908294678
    6. 'indices' → logprob: -6.914784908294678
    7. 'yyy' → logprob: -6.914784908294678
    8. 'x' → logprob: -7.039784908294678
    9. '0' → logprob: -7.539784908294678
    10. ' possible' → logprob: -7.789784908294678

Token 681: ' y' (ID: 342)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.7907558679580688
    2. 'positions' → logprob: -1.2907558679580688
    3. 'y' → logprob: -1.5407558679580688
    4. ' points' → logprob: -3.7907557487487793
    5. ')' → logprob: -4.040755748748779
    6. 'x' → logprob: -4.915755748748779
    7. ' positions' → logprob: -5.665755748748779
    8. '_positions' → logprob: -7.415755748748779
    9. '_points' → logprob: -7.665755748748779
    10. 'point' → logprob: -7.915755748748779

Token 682: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4900085926055908
    2. '))' → logprob: -1.9900085926055908
    3. '_positions' → logprob: -2.240008592605591
    4. 'positions' → logprob: -2.365008592605591
    5. ')_' → logprob: -3.365008592605591
    6. 's' → logprob: -5.115008354187012
    7. ')-' → logprob: -6.365008354187012
    8. ' positions' → logprob: -6.365008354187012
    9. ')))' → logprob: -7.115008354187012
    10. '-' → logprob: -7.365008354187012

Token 683: 'positions' (ID: 32297)
  Prédit: 'positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.9728497266769409
    2. '_positions' → logprob: -0.9728497266769409
    3. ')' → logprob: -1.597849726676941
    4. ')_' → logprob: -3.4728498458862305
    5. ')-' → logprob: -5.4728498458862305
    6. '-' → logprob: -6.4728498458862305
    7. ' positions' → logprob: -7.2228498458862305
    8. '_' → logprob: -7.7228498458862305
    9. 'pos' → logprob: -7.8478498458862305
    10. 'indexes' → logprob: -7.9728498458862305

Token 684: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000662280130200088
    2. ')
' → logprob: -7.625662326812744
    3. '))' → logprob: -10.375661849975586
    4. '<|end|>' → logprob: -10.750661849975586
    5. ' )' → logprob: -11.125661849975586
    6. '[' → logprob: -11.125661849975586
    7. 'for' → logprob: -11.250661849975586
    8. '#' → logprob: -11.375661849975586
    9. '])' → logprob: -11.750661849975586
    10. ')#' → logprob: -12.000661849975586

Token 685: 'ab' (ID: 378)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4465760588645935
    2. '           ' → logprob: -1.1965761184692383
    3. '   ' → logprob: -3.5715761184692383
    4. '<|end|>' → logprob: -4.071576118469238
    5. '               ' → logprob: -5.446576118469238
    6. '```' → logprob: -6.196576118469238
    7. '[' → logprob: -7.071576118469238
    8. '#' → logprob: -7.321576118469238
    9. '+' → logprob: -7.446576118469238
    10. '<|end|>' → logprob: -7.821576118469238

Token 686: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4269915819168091
    2. '=' → logprob: -1.551991581916809
    3. ',' → logprob: -2.0519914627075195
    4. 's' → logprob: -5.1769914627075195
    5. 'a' → logprob: -7.6769914627075195
    6. '_' → logprob: -8.17699146270752
    7. '=[]' → logprob: -8.80199146270752
    8. ',a' → logprob: -8.92699146270752
    9. 'x' → logprob: -9.67699146270752
    10. 'i' → logprob: -9.92699146270752

Token 687: ' defaultdict' (ID: 107098)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.025632521137595177
    2. '[list' → logprob: -4.400632381439209
    3. '[]' → logprob: -4.900632381439209
    4. ' [' → logprob: -6.025632381439209
    5. 'default' → logprob: -6.525632381439209
    6. '[int' → logprob: -7.150632381439209
    7. '[n' → logprob: -8.400632858276367
    8. '[input' → logprob: -9.150632858276367
    9. '[d' → logprob: -9.775632858276367
    10. '[index' → logprob: -10.150632858276367

Token 688: '(set' (ID: 25904)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5795767903327942
    2. '(list' → logprob: -1.3295767307281494
    3. '(int' → logprob: -2.4545767307281494
    4. '(lambda' → logprob: -2.9545767307281494
    5. 'int' → logprob: -3.3295767307281494
    6. 'lambda' → logprob: -6.7045769691467285
    7. 'tuple' → logprob: -9.70457649230957
    8. '<int' → logprob: -10.20457649230957
    9. '[int' → logprob: -10.20457649230957
    10. '(tuple' → logprob: -10.95457649230957

Token 689: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012987985974177718
    2. ')
' → logprob: -9.000129699707031
    3. ')

' → logprob: -13.125129699707031
    4. '())' → logprob: -13.250129699707031
    5. ')`' → logprob: -13.875129699707031
    6. ')
' → logprob: -15.000129699707031
    7. ')#' → logprob: -15.000129699707031
    8. '))' → logprob: -15.375129699707031
    9. '()' → logprob: -16.12512969970703
    10. '[int' → logprob: -16.37512969970703

Token 690: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1870821714401245
    2. '<|end|>' → logprob: -1.8120821714401245
    3. '
' → logprob: -5.687082290649414
    4. ' for' → logprob: -6.437082290649414
    5. 'n' → logprob: -7.062082290649414
    6. '<|end|>' → logprob: -7.687082290649414
    7. ')' → logprob: -8.437082290649414
    8. 'x' → logprob: -8.812082290649414
    9. '[]' → logprob: -9.062082290649414
    10. '```' → logprob: -9.312082290649414

Token 691: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3048878014087677
    2. '
' → logprob: -2.0548877716064453
    3. '<|end|>' → logprob: -2.3048877716064453
    4. '()' → logprob: -4.429887771606445
    5. '()
' → logprob: -4.804887771606445
    6. '[]
' → logprob: -5.679887771606445
    7. ')' → logprob: -5.929887771606445
    8. '[]' → logprob: -6.054887771606445
    9. ' for' → logprob: -7.054887771606445
    10. '<|end|>' → logprob: -7.054887771606445

Token 692: ' Mapping' (ID: 69243)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3407735526561737
    2. '[]' → logprob: -2.090773582458496
    3. ')' → logprob: -2.840773582458496
    4. 'n' → logprob: -3.090773582458496
    5. '()' → logprob: -4.590773582458496
    6. 'int' → logprob: -4.840773582458496
    7. ']' → logprob: -5.465773582458496
    8. '_' → logprob: -5.465773582458496
    9. '[int' → logprob: -5.590773582458496
    10. 'ab' → logprob: -5.715773582458496

Token 693: ' from' (ID: 591)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4326834976673126
    2. 'from' → logprob: -1.1826834678649902
    3. ' for' → logprob: -3.3076834678649902
    4. '   ' → logprob: -6.43268346786499
    5. '[int' → logprob: -6.80768346786499
    6. 'of' → logprob: -7.18268346786499
    7. ' of' → logprob: -7.30768346786499
    8. ' =' → logprob: -7.43268346786499
    9. ' from' → logprob: -7.68268346786499
    10. '=' → logprob: -7.68268346786499

Token 694: ' a' (ID: 261)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0020474824123084545
    2. 'tuple' → logprob: -6.877047538757324
    3. '(int' → logprob: -8.002047538757324
    4. 'ab' → logprob: -8.252047538757324
    5. ''ab' → logprob: -9.127047538757324
    6. '[int' → logprob: -9.377047538757324
    7. 'a' → logprob: -9.877047538757324
    8. ' int' → logprob: -10.127047538757324
    9. 'str' → logprob: -10.377047538757324
    10. 'x' → logprob: -10.627047538757324

Token 695: '-values' (ID: 159509)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5150877237319946
    2. 'b' → logprob: -1.3900877237319946
    3. '=int' → logprob: -2.265087604522705
    4. ']' → logprob: -4.515087604522705
    5. ' for' → logprob: -4.765087604522705
    6. '[int' → logprob: -5.140087604522705
    7. 'int' → logprob: -5.265087604522705
    8. '   ' → logprob: -5.515087604522705
    9. '=' → logprob: -6.015087604522705
    10. ')' → logprob: -6.015087604522705

Token 696: ' to' (ID: 316)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.42125561833381653
    2. '
' → logprob: -2.546255588531494
    3. '<|end|>' → logprob: -2.671255588531494
    4. ' =' → logprob: -3.296255588531494
    5. 'a' → logprob: -3.421255588531494
    6. '=' → logprob: -3.796255588531494
    7. ' for' → logprob: -3.921255588531494
    8. ' to' → logprob: -4.171255588531494
    9. '[a' → logprob: -4.296255588531494
    10. ',' → logprob: -4.421255588531494

Token 697: ' a' (ID: 261)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.04648713394999504
    2. 'list' → logprob: -4.546487331390381
    3. ' set' → logprob: -4.671487331390381
    4. ')' → logprob: -4.796487331390381
    5. '[]' → logprob: -5.046487331390381
    6. 'b' → logprob: -6.421487331390381
    7. '0' → logprob: -6.546487331390381
    8. 'indices' → logprob: -6.546487331390381
    9. 'positions' → logprob: -7.546487331390381
    10. 'sets' → logprob: -7.796487331390381

Token 698: ' set' (ID: 920)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005458105355501175
    2. 'bs' → logprob: -6.380457878112793
    3. 'default' → logprob: -6.880457878112793
    4. 'bb' → logprob: -7.380457878112793
    5. 'bbb' → logprob: -7.380457878112793
    6. 'set' → logprob: -8.005457878112793
    7. ' b' → logprob: -8.630457878112793
    8. 'ab' → logprob: -9.255457878112793
    9. ')' → logprob: -9.380457878112793
    10. '...' → logprob: -9.630457878112793

Token 699: ' of' (ID: 328)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12928506731987
    2. ' of' → logprob: -2.8792850971221924
    3. '()
' → logprob: -4.004284858703613
    4. 'of' → logprob: -4.629284858703613
    5. '<|end|>' → logprob: -5.129284858703613
    6. '[]' → logprob: -5.254284858703613
    7. 'for' → logprob: -5.629284858703613
    8. ' for' → logprob: -5.879284858703613
    9. ' =' → logprob: -5.879284858703613
    10. 's' → logprob: -6.379284858703613

Token 700: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0008703675703145564
    2. 'positions' → logprob: -7.625870227813721
    3. 'bs' → logprob: -8.375870704650879
    4. 'indices' → logprob: -9.875870704650879
    5. 'values' → logprob: -10.125870704650879
    6. ' b' → logprob: -10.375870704650879
    7. ' positions' → logprob: -12.000870704650879
    8. 'inte' → logprob: -12.125870704650879
    9. 'ints' → logprob: -12.500870704650879
    10. 'associated' → logprob: -12.625870704650879

Token 701: '-values' (ID: 159509)
  Prédit: '_values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.1443435102701187
    2. 'values' → logprob: -3.144343614578247
    3. 's' → logprob: -3.269343614578247
    4. ')' → logprob: -3.644343614578247
    5. ')_' → logprob: -4.144343376159668
    6. '])' → logprob: -5.519343376159668
    7. '-values' → logprob: -6.269343376159668
    8. ']_' → logprob: -6.519343376159668
    9. ')s' → logprob: -6.894343376159668
    10. ' values' → logprob: -7.269343376159668

Token 702: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05061841383576393
    2. '<|end|>' → logprob: -3.6756184101104736
    3. ' for' → logprob: -5.300618648529053
    4. '
' → logprob: -5.675618648529053
    5. 'while' → logprob: -5.675618648529053
    6. '<|end|>' → logprob: -5.800618648529053
    7. 'a' → logprob: -5.925618648529053
    8. 'n' → logprob: -6.050618648529053
    9. 'x' → logprob: -6.175618648529053
    10. ')' → logprob: -7.925618648529053

Token 703: 'coordinates' (ID: 74508)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03037838079035282
    2. ' for' → logprob: -3.7803783416748047
    3. '<|end|>' → logprob: -6.155378341674805
    4. 'a' → logprob: -6.405378341674805
    5. '   ' → logprob: -7.280378341674805
    6. '#' → logprob: -7.280378341674805
    7. 'i' → logprob: -7.530378341674805
    8. 'x' → logprob: -8.280378341674805
    9. '       ' → logprob: -8.405378341674805
    10. ' ' → logprob: -8.655378341674805

Token 704: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5232882499694824
    2. ' =' → logprob: -0.8982882499694824
    3. ',' → logprob: -9.39828872680664
    4. '[' → logprob: -10.02328872680664
    5. '.' → logprob: -11.77328872680664
    6. '<|end|>' → logprob: -11.77328872680664
    7. ')' → logprob: -12.14828872680664
    8. '.setdefault' → logprob: -12.89828872680664
    9. ' ' → logprob: -13.27328872680664
    10. ']' → logprob: -13.64828872680664

Token 705: ' set' (ID: 920)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.016237059608101845
    2. ' []' → logprob: -4.516237258911133
    3. 'default' → logprob: -5.641237258911133
    4. 'set' → logprob: -6.641237258911133
    5. ' defaultdict' → logprob: -8.766237258911133
    6. '[' → logprob: -9.516237258911133
    7. '{}' → logprob: -10.766237258911133
    8. '[]
' → logprob: -10.891237258911133
    9. '[][]' → logprob: -11.016237258911133
    10. ' set' → logprob: -11.266237258911133

Token 706: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0017394359456375241
    2. '()
' → logprob: -6.376739501953125
    3. '()

' → logprob: -10.626739501953125
    4. '=' → logprob: -12.626739501953125
    5. '()\' → logprob: -12.626739501953125
    6. ' =' → logprob: -12.876739501953125
    7. '()
' → logprob: -13.501739501953125
    8. '()]' → logprob: -14.501739501953125
    9. '();' → logprob: -14.876739501953125
    10. '(' → logprob: -15.376739501953125

Token 707: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07160726934671402
    2. '<|end|>' → logprob: -3.3216073513031006
    3. ' for' → logprob: -4.3216071128845215
    4. '()
' → logprob: -5.0716071128845215
    5. '()' → logprob: -5.5716071128845215
    6. '
' → logprob: -5.5716071128845215
    7. ')' → logprob: -6.9466071128845215
    8. 'x' → logprob: -7.0716071128845215
    9. '<|end|>' → logprob: -7.3216071128845215
    10. ' =' → logprob: -7.3216071128845215

Token 708: ' #' (ID: 1069)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3956640064716339
    2. '()
' → logprob: -1.1456639766693115
    3. 'for' → logprob: -4.895664215087891
    4. '()

' → logprob: -7.520664215087891
    5. ' =' → logprob: -8.64566421508789
    6. '()\' → logprob: -9.14566421508789
    7. 'x' → logprob: -9.64566421508789
    8. '<|end|>' → logprob: -9.77066421508789
    9. 'coordinates' → logprob: -9.89566421508789
    10. '=' → logprob: -10.02066421508789

Token 709: ' Unique' (ID: 42417)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.49844878911972046
    2. '()' → logprob: -1.1234488487243652
    3. 'for' → logprob: -3.8734488487243652
    4. '[]' → logprob: -4.123448848724365
    5. 'coordinates' → logprob: -4.248448848724365
    6. 'Coordinates' → logprob: -5.248448848724365
    7. '{}' → logprob: -6.623448848724365
    8. ' set' → logprob: -6.998448848724365
    9. '(' → logprob: -7.248448848724365
    10. '()
' → logprob: -7.498448848724365

Token 710: ' b' (ID: 287)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12429756671190262
    2. 'coordinates' → logprob: -2.749297618865967
    3. '()
' → logprob: -3.124297618865967
    4. 'points' → logprob: -5.749297618865967
    5. 'positions' → logprob: -6.874297618865967
    6. ' coordinates' → logprob: -6.874297618865967
    7. ' points' → logprob: -7.249297618865967
    8. 'ab' → logprob: -7.499297618865967
    9. '(x' → logprob: -7.999297618865967
    10. 'elements' → logprob: -8.124297142028809

Token 711: '-values' (ID: 159509)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.7471139430999756
    2. '_values' → logprob: -0.8721139430999756
    3. 's' → logprob: -2.6221139430999756
    4. ')' → logprob: -3.8721139430999756
    5. '-values' → logprob: -5.247114181518555
    6. 'coordinates' → logprob: -5.747114181518555
    7. ' values' → logprob: -6.372114181518555
    8. '_coordinates' → logprob: -6.372114181518555
    9. '.values' → logprob: -7.247114181518555
    10. ')s' → logprob: -8.497114181518555

Token 712: ' across' (ID: 5251)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14062590897083282
    2. '<|end|>' → logprob: -2.3906259536743164
    3. ' =' → logprob: -5.015625953674316
    4. '=' → logprob: -5.015625953674316
    5. 'coordinates' → logprob: -5.015625953674316
    6. ' for' → logprob: -5.265625953674316
    7. '<|end|>' → logprob: -5.640625953674316
    8. 'ab' → logprob: -6.015625953674316
    9. ')' → logprob: -6.265625953674316
    10. '#' → logprob: -6.765625953674316

Token 713: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.0039863851852715015
    2. 'ab' → logprob: -6.003986358642578
    3. ' all' → logprob: -6.878986358642578
    4. 'lines' → logprob: -8.378986358642578
    5. 'the' → logprob: -10.003986358642578
    6. 'keys' → logprob: -10.128986358642578
    7. 'entries' → logprob: -10.253986358642578
    8. 'a' → logprob: -10.378986358642578
    9. 'sets' → logprob: -11.253986358642578
    10. 'coordinates' → logprob: -11.253986358642578

Token 714: ' entries' (ID: 18614)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.20717540383338928
    2. 'a' → logprob: -1.832175374031067
    3. 'keys' → logprob: -4.707175254821777
    4. 'coordinates' → logprob: -5.457175254821777
    5. 'lines' → logprob: -5.582175254821777
    6. 'values' → logprob: -6.082175254821777
    7. 'entries' → logprob: -6.082175254821777
    8. ' ab' → logprob: -6.957175254821777
    9. 'ranges' → logprob: -7.457175254821777
    10. 'sets' → logprob: -7.457175254821777

Token 715: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 716: '#' (ID: 2)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8702263236045837
    2. 'for' → logprob: -1.1202263832092285
    3. '   ' → logprob: -1.4952263832092285
    4. ' for' → logprob: -3.7452263832092285
    5. '           ' → logprob: -6.1202263832092285
    6. '<|end|>' → logprob: -6.2452263832092285
    7. ' ' → logprob: -7.1202263832092285
    8. '    
' → logprob: -7.7452263832092285
    9. '
' → logprob: -7.8702263832092285
    10. '        
' → logprob: -8.12022590637207

Token 717: ' Build' (ID: 10885)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0280383548888494e-06
    2. ' for' → logprob: -14.375000953674316
    3. '
' → logprob: -15.250000953674316
    4. 'while' → logprob: -16.500001907348633
    5. '```' → logprob: -17.125001907348633
    6. '#' → logprob: -17.500001907348633
    7. 'import' → logprob: -18.875001907348633
    8. 'n' → logprob: -19.250001907348633
    9. 'For' → logprob: -19.250001907348633
    10. '``' → logprob: -19.375001907348633

Token 718: ' table' (ID: 3293)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006135568488389254
    2. ' for' → logprob: -5.1311354637146
    3. 'range' → logprob: -9.506135940551758
    4. 'coordinates' → logprob: -9.881135940551758
    5. 'n' → logprob: -11.506135940551758
    6. '_' → logprob: -11.631135940551758
    7. '#' → logprob: -11.631135940551758
    8. 'a' → logprob: -11.756135940551758
    9. ' coordinates' → logprob: -11.881135940551758
    10. '   ' → logprob: -12.006135940551758

Token 719: ' linking' (ID: 48160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00016074994346126914
    2. ' for' → logprob: -8.750161170959473
    3. 'range' → logprob: -14.000161170959473
    4. '```' → logprob: -15.000161170959473
    5. '#' → logprob: -15.250161170959473
    6. '   ' → logprob: -15.750161170959473
    7. '
' → logprob: -15.750161170959473
    8. '=' → logprob: -16.125160217285156
    9. 'n' → logprob: -16.250160217285156
    10. 'in' → logprob: -17.000160217285156

Token 720: ' each' (ID: 2454)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9230775237083435
    2. 'k' → logprob: -0.9230775237083435
    3. 'ab' → logprob: -2.7980775833129883
    4. 'v' → logprob: -3.2980775833129883
    5. 'key' → logprob: -4.048077583312988
    6. 'pos' → logprob: -4.298077583312988
    7. 'for' → logprob: -4.423077583312988
    8. ' a' → logprob: -4.798077583312988
    9. 'x' → logprob: -4.923077583312988
    10. 'i' → logprob: -5.298077583312988

Token 721: ' relevant' (ID: 12331)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6077505350112915
    2. 'ab' → logprob: -2.107750415802002
    3. 'a' → logprob: -2.232750415802002
    4. 'pos' → logprob: -2.607750415802002
    5. '<<' → logprob: -3.482750415802002
    6. '1' → logprob: -4.107750415802002
    7. 'coordinates' → logprob: -4.357750415802002
    8. ' ab' → logprob: -4.857750415802002
    9. 'x' → logprob: -4.982750415802002
    10. ' k' → logprob: -5.232750415802002

Token 722: ' x' (ID: 1215)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.032137028872966766
    2. ' a' → logprob: -4.407136917114258
    3. 'b' → logprob: -5.157136917114258
    4. 'k' → logprob: -5.532136917114258
    5. 'key' → logprob: -6.032136917114258
    6. 'ab' → logprob: -6.282136917114258
    7. 'i' → logprob: -6.782136917114258
    8. 'x' → logprob: -7.032136917114258
    9. 'coordinate' → logprob: -7.407136917114258
    10. 'value' → logprob: -7.532136917114258

Token 723: ' in' (ID: 306)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.10008879005908966
    2. ' and' → logprob: -3.3500888347625732
    3. 'to' → logprob: -3.6000888347625732
    4. 'value' → logprob: -4.850088596343994
    5. ',' → logprob: -5.100088596343994
    6. 'and' → logprob: -5.600088596343994
    7. ' value' → logprob: -5.725088596343994
    8. '-coordinate' → logprob: -5.975088596343994
    9. 'coordinate' → logprob: -6.100088596343994
    10. ' with' → logprob: -6.475088596343994

Token 724: ' xxx' (ID: 33484)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.019859619438648224
    2. 'xxx' → logprob: -4.019859790802002
    3. ' ab' → logprob: -7.394859790802002
    4. 'range' → logprob: -7.519859790802002
    5. 'abc' → logprob: -8.394859313964844
    6. ' xxx' → logprob: -9.144859313964844
    7. 'a' → logprob: -9.769859313964844
    8. 'x' → logprob: -10.144859313964844
    9. 'aaa' → logprob: -10.894859313964844
    10. '[' → logprob: -11.394859313964844

Token 725: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.8619266152381897
    2. 'for' → logprob: -0.9869266152381897
    3. ' for' → logprob: -1.861926555633545
    4. 'to' → logprob: -3.236926555633545
    5. ' and' → logprob: -5.236926555633545
    6. 'and' → logprob: -6.611926555633545
    7. ',' → logprob: -6.736926555633545
    8. '   ' → logprob: -7.111926555633545
    9. ' with' → logprob: -7.736926555633545
    10. 'with' → logprob: -7.861926555633545

Token 726: ' its' (ID: 1617)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.3173600137233734
    2. ' its' → logprob: -2.4423599243164062
    3. 'the' → logprob: -2.8173599243164062
    4. ' the' → logprob: -3.9423599243164062
    5. ' ab' → logprob: -4.067359924316406
    6. 'each' → logprob: -4.192359924316406
    7. 'b' → logprob: -4.317359924316406
    8. 'its' → logprob: -4.442359924316406
    9. 'coordinates' → logprob: -5.067359924316406
    10. 'y' → logprob: -5.192359924316406

Token 727: ' neighbors' (ID: 31655)
  Prédit: 'cor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cor' → logprob: -0.5290608406066895
    2. 'b' → logprob: -1.9040608406066895
    3. ' corresponding' → logprob: -2.4040608406066895
    4. 'associated' → logprob: -2.6540608406066895
    5. 'ab' → logprob: -3.1540608406066895
    6. 'a' → logprob: -3.7790608406066895
    7. 'possible' → logprob: -4.9040608406066895
    8. 'y' → logprob: -5.0290608406066895
    9. 'values' → logprob: -5.2790608406066895
    10. ' associated' → logprob: -5.5290608406066895

Token 728: ' in' (ID: 306)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012668101117014885
    2. ' for' → logprob: -4.512668132781982
    3. '   ' → logprob: -7.262668132781982
    4. '
' → logprob: -8.762667655944824
    5. '       ' → logprob: -8.762667655944824
    6. '#' → logprob: -9.137667655944824
    7. ' =' → logprob: -9.637667655944824
    8. '=' → logprob: -10.012667655944824
    9. ':' → logprob: -10.262667655944824
    10. 'x' → logprob: -10.512667655944824

Token 729: ' y' (ID: 342)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.30221983790397644
    2. ' ab' → logprob: -2.177219867706299
    3. 'yyy' → logprob: -2.302219867706299
    4. 'xxx' → logprob: -3.677219867706299
    5. ' y' → logprob: -4.927219867706299
    6. 'coordinates' → logprob: -5.927219867706299
    7. ' xxx' → logprob: -6.052219867706299
    8. 'y' → logprob: -6.552219867706299
    9. 'abc' → logprob: -6.802219867706299
    10. 'xy' → logprob: -6.927219867706299

Token 730: 'yy' (ID: 7496)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5718422532081604
    2. 'yy' → logprob: -1.5718421936035156
    3. 'y' → logprob: -2.0718421936035156
    4. 'values' → logprob: -3.8218421936035156
    5. ' for' → logprob: -4.196842193603516
    6. '_values' → logprob: -4.696842193603516
    7. 'i' → logprob: -5.571842193603516
    8. '#' → logprob: -5.696842193603516
    9. 'ab' → logprob: -5.821842193603516
    10. 'vals' → logprob: -5.821842193603516

Token 731: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0022582602687180042
    2. ' for' → logprob: -6.87725830078125
    3. 'prev' → logprob: -8.37725830078125
    4. '#' → logprob: -8.87725830078125
    5. 'i' → logprob: -9.12725830078125
    6. 'x' → logprob: -9.37725830078125
    7. 'y' → logprob: -9.50225830078125
    8. '
' → logprob: -9.62725830078125
    9. 'idx' → logprob: -9.62725830078125
    10. '```' → logprob: -9.62725830078125

Token 732: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0035660925786942244
    2. ' for' → logprob: -5.753566265106201
    3. '```' → logprob: -9.378565788269043
    4. 'x' → logprob: -9.503565788269043
    5. 'i' → logprob: -9.878565788269043
    6. 'y' → logprob: -10.253565788269043
    7. 'prev' → logprob: -10.253565788269043
    8. 'idx' → logprob: -11.253565788269043
    9. '#' → logprob: -11.253565788269043
    10. 'a' → logprob: -11.878565788269043

Token 733: ' x' (ID: 1215)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.39230647683143616
    2. 'x' → logprob: -1.2673064470291138
    3. 'i' → logprob: -4.392306327819824
    4. '_' → logprob: -4.892306327819824
    5. '_x' → logprob: -4.892306327819824
    6. ' a' → logprob: -5.517306327819824
    7. '_a' → logprob: -5.517306327819824
    8. ' x' → logprob: -6.142306327819824
    9. 'b' → logprob: -7.392306327819824
    10. 'v' → logprob: -7.642306327819824

Token 734: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.062342409044504166
    2. 'in' → logprob: -2.812342405319214
    3. '_in' → logprob: -8.562342643737793
    4. ',' → logprob: -9.812342643737793
    5. '_' → logprob: -10.937342643737793
    6. 's' → logprob: -11.437342643737793
    7. 'x' → logprob: -11.437342643737793
    8. 'not' → logprob: -11.687342643737793
    9. '   ' → logprob: -11.874842643737793
    10. 'In' → logprob: -11.874842643737793

Token 735: ' xxx' (ID: 33484)
  Prédit: 'xxx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xxx' → logprob: -0.007213410921394825
    2. ' xxx' → logprob: -5.132213592529297
    3. 'range' → logprob: -7.007213592529297
    4. 'sorted' → logprob: -9.132213592529297
    5. 'ab' → logprob: -9.257213592529297
    6. ' range' → logprob: -9.757213592529297
    7. 'yyy' → logprob: -10.257213592529297
    8. 'set' → logprob: -10.382213592529297
    9. 'xx' → logprob: -11.382213592529297
    10. '[' → logprob: -11.632213592529297

Token 736: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11353714764118195
    2. ':
' → logprob: -2.238537073135376
    3. '   ' → logprob: -7.363537311553955
    4. ',' → logprob: -10.613536834716797
    5. ':
' → logprob: -11.113536834716797
    6. '       ' → logprob: -11.738536834716797
    7. '=' → logprob: -11.863536834716797
    8. '):
' → logprob: -12.488536834716797
    9. 'in' → logprob: -12.988536834716797
    10. '.' → logprob: -13.238536834716797

Token 737: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07332294434309006
    2. ' idx' → logprob: -3.0733230113983154
    3. 'idx' → logprob: -4.698322772979736
    4. ' pos' → logprob: -5.073322772979736
    5. 'pos' → logprob: -6.073322772979736
    6. ' for' → logprob: -6.323322772979736
    7. 'for' → logprob: -6.948322772979736
    8. ' ind' → logprob: -7.698322772979736
    9. 'l' → logprob: -7.823322772979736
    10. ' i' → logprob: -7.948322772979736

Token 738: ' #' (ID: 1069)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.2743295431137085
    2. 'pos' → logprob: -1.8993295431137085
    3. 'l' → logprob: -3.649329662322998
    4. 'j' → logprob: -4.149329662322998
    5. 'i' → logprob: -4.399329662322998
    6. 'index' → logprob: -4.899329662322998
    7. 'p' → logprob: -5.149329662322998
    8. 'for' → logprob: -5.274329662322998
    9. 'left' → logprob: -5.649329662322998
    10. 'ind' → logprob: -5.774329662322998

Token 739: ' Skip' (ID: 47626)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.23104342818260193
    2. 'pos' → logprob: -1.7310434579849243
    3. 'index' → logprob: -4.981043338775635
    4. 'j' → logprob: -5.106043338775635
    5. 'l' → logprob: -5.606043338775635
    6. 'left' → logprob: -5.981043338775635
    7. 'i' → logprob: -6.231043338775635
    8. 'ind' → logprob: -6.356043338775635
    9. 'import' → logprob: -6.731043338775635
    10. 'p' → logprob: -6.981043338775635

Token 740: ' x' (ID: 1215)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.48616108298301697
    2. ' if' → logprob: -2.11116099357605
    3. '   ' → logprob: -2.86116099357605
    4. 'import' → logprob: -2.98616099357605
    5. '       ' → logprob: -3.11116099357605
    6. 'continue' → logprob: -3.73616099357605
    7. 'idx' → logprob: -4.111161231994629
    8. '_' → logprob: -4.486161231994629
    9. 'from' → logprob: -4.611161231994629
    10. 'y' → logprob: -4.986161231994629

Token 741: ' if' (ID: 538)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.2456082105636597
    2. ' if' → logprob: -1.3706082105636597
    3. '   ' → logprob: -1.4956082105636597
    4. 'if' → logprob: -1.8706082105636597
    5. '	continue' → logprob: -4.620608329772949
    6. ',' → logprob: -4.620608329772949
    7. ' continue' → logprob: -4.745608329772949
    8. '       ' → logprob: -4.995608329772949
    9. '=' → logprob: -5.245608329772949
    10. '_continue' → logprob: -5.245608329772949

Token 742: ' it' (ID: 480)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01868993230164051
    2. 'not' → logprob: -5.01869010925293
    3. 'bis' → logprob: -5.14369010925293
    4. ' x' → logprob: -5.39369010925293
    5. ' not' → logprob: -7.76869010925293
    6. '(x' → logprob: -7.89369010925293
    7. 'len' → logprob: -8.51869010925293
    8. ' bis' → logprob: -8.76869010925293
    9. '(not' → logprob: -9.76869010925293
    10. 'xxx' → logprob: -9.76869010925293

Token 743: ' is' (ID: 382)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1279197633266449
    2. 'not' → logprob: -2.2529196739196777
    3. '>' → logprob: -5.127919673919678
    4. ' in' → logprob: -6.002919673919678
    5. ' <' → logprob: -6.127919673919678
    6. '<' → logprob: -6.502919673919678
    7. 'in' → logprob: -6.752919673919678
    8. '<=' → logprob: -7.627919673919678
    9. ' >' → logprob: -7.752919673919678
    10. ' is' → logprob: -8.127920150756836

Token 744: ' outside' (ID: 7539)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.2529698610305786
    2. 'in' → logprob: -2.127969741821289
    3. ' not' → logprob: -2.752969741821289
    4. '0' → logprob: -3.752969741821289
    5. ' in' → logprob: -4.627969741821289
    6. 'yyy' → logprob: -5.502969741821289
    7. 'y' → logprob: -6.252969741821289
    8. '...' → logprob: -8.627969741821289
    9. ' y' → logprob: -8.877969741821289
    10. 'bis' → logprob: -9.002969741821289

Token 745: ' the' (ID: 290)
  Prédit: 'yyy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yyy' → logprob: -0.36068201065063477
    2. ' y' → logprob: -1.4856820106506348
    3. '(' → logprob: -3.4856820106506348
    4. '   ' → logprob: -3.7356820106506348
    5. ' (' → logprob: -5.235682010650635
    6. '0' → logprob: -5.360682010650635
    7. ')' → logprob: -6.360682010650635
    8. ' ' → logprob: -6.985682010650635
    9. 'y' → logprob: -7.235682010650635
    10. '1' → logprob: -7.360682010650635

Token 746: ' range' (ID: 3352)
  Prédit: 'yyy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yyy' → logprob: -0.0028061794582754374
    2. '[' → logprob: -6.752806186676025
    3. '0' → logprob: -7.252806186676025
    4. 'min' → logprob: -8.377805709838867
    5. ' y' → logprob: -8.502805709838867
    6. '(' → logprob: -8.752805709838867
    7. ' ' → logprob: -9.627805709838867
    8. '[y' → logprob: -10.627805709838867
    9. ' min' → logprob: -10.627805709838867
    10. 'xxx' → logprob: -10.752805709838867

Token 747: ' of' (ID: 328)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.43366801738739014
    2. ' or' → logprob: -1.8086680173873901
    3. ' of' → logprob: -2.5586681365966797
    4. 'if' → logprob: -2.6836681365966797
    5. 'or' → logprob: -4.55866813659668
    6. 'of' → logprob: -4.93366813659668
    7. ' (' → logprob: -5.30866813659668
    8. '   ' → logprob: -5.43366813659668
    9. '(' → logprob: -5.55866813659668
    10. '       ' → logprob: -6.43366813659668

Token 748: ' y' (ID: 342)
  Prédit: 'yyy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yyy' → logprob: -0.002821635687723756
    2. ' y' → logprob: -5.877821445465088
    3. 'yy' → logprob: -12.127821922302246
    4. '   ' → logprob: -13.252821922302246
    5. 'yyyy' → logprob: -13.627821922302246
    6. 'min' → logprob: -13.752821922302246
    7. '```' → logprob: -13.877821922302246
    8. '  ' → logprob: -14.377821922302246
    9. '
' → logprob: -14.502821922302246
    10. 'bbb' → logprob: -14.627821922302246

Token 749: 'yy' (ID: 7496)
  Prédit: 'yy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yy' → logprob: -2.8444881536415778e-05
    2. 'y' → logprob: -10.750028610229492
    3. 'yyy' → logprob: -12.125028610229492
    4. 'YY' → logprob: -14.625028610229492
    5. ' yy' → logprob: -16.250028610229492
    6. '[' → logprob: -16.250028610229492
    7. '
' → logprob: -16.375028610229492
    8. '#' → logprob: -16.375028610229492
    9. '```' → logprob: -16.375028610229492
    10. '	yy' → logprob: -16.500028610229492

Token 750: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09631860256195068
    2. 'if' → logprob: -2.5963187217712402
    3. ' if' → logprob: -4.22131872177124
    4. '       ' → logprob: -6.59631872177124
    5. 'continue' → logprob: -6.84631872177124
    6. '```' → logprob: -10.221318244934082
    7. ' continue' → logprob: -10.471318244934082
    8. ':' → logprob: -11.096318244934082
    9. 'and' → logprob: -11.346318244934082
    10. ' ' → logprob: -11.596318244934082

Token 751: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012018488720059395
    2. ' if' → logprob: -4.88701868057251
    3. 'if' → logprob: -6.01201868057251
    4. '       ' → logprob: -6.51201868057251
    5. ' continue' → logprob: -8.262018203735352
    6. 'continue' → logprob: -8.637018203735352
    7. ',' → logprob: -11.637018203735352
    8. '	continue' → logprob: -12.762018203735352
    9. '   ' → logprob: -12.762018203735352
    10. '```' → logprob: -13.012018203735352

Token 752: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.01350006740540266
    2. ' if' → logprob: -4.888500213623047
    3. '   ' → logprob: -5.138500213623047
    4. 'continue' → logprob: -12.513500213623047
    5. ' ' → logprob: -12.638500213623047
    6. '       ' → logprob: -14.138500213623047
    7. '	if' → logprob: -14.263500213623047
    8. '  ' → logprob: -15.013500213623047
    9. 'i' → logprob: -15.013500213623047
    10. 'while' → logprob: -15.263500213623047

Token 753: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.014479736797511578
    2. ' x' → logprob: -4.264479637145996
    3. 'yyy' → logprob: -9.139479637145996
    4. 'xxx' → logprob: -9.639479637145996
    5. 'y' → logprob: -10.389479637145996
    6. '   ' → logprob: -10.514479637145996
    7. 'not' → logprob: -10.639479637145996
    8. '(x' → logprob: -11.139479637145996
    9. ' not' → logprob: -11.139479637145996
    10. ' y' → logprob: -12.139479637145996

Token 754: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.42924854159355164
    2. ' <' → logprob: -1.054248571395874
    3. '<x' → logprob: -8.679248809814453
    4. '>' → logprob: -8.804248809814453
    5. ' >' → logprob: -9.929248809814453
    6. '<int' → logprob: -10.554248809814453
    7. '<=' → logprob: -10.679248809814453
    8. '[' → logprob: -10.929248809814453
    9. ' <=' → logprob: -11.179248809814453
    10. '<class' → logprob: -11.179248809814453

Token 755: ' y' (ID: 342)
  Prédit: 'yyy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yyy' → logprob: -0.00040695868665352464
    2. ' y' → logprob: -7.875406742095947
    3. 'min' → logprob: -10.750407218933105
    4. ' min' → logprob: -13.000407218933105
    5. '0' → logprob: -13.375407218933105
    6. 'yy' → logprob: -14.625407218933105
    7. ' ' → logprob: -14.875407218933105
    8. '

' → logprob: -16.37540626525879
    9. '  ' → logprob: -16.50040626525879
    10. '
' → logprob: -16.62540626525879

Token 756: 'yy' (ID: 7496)
  Prédit: 'yy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yy' → logprob: -1.5928495486150496e-05
    2. 'y' → logprob: -11.125016212463379
    3. 'yyy' → logprob: -14.000016212463379
    4. 'YY' → logprob: -16.250015258789062
    5. '
' → logprob: -17.375015258789062
    6. '-' → logprob: -17.500015258789062
    7. '[' → logprob: -17.750015258789062
    8. '	yy' → logprob: -18.250015258789062
    9. '   ' → logprob: -18.500015258789062
    10. 'xx' → logprob: -18.750015258789062

Token 757: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0036440188996493816
    2. '0' → logprob: -5.628643989562988
    3. '.' → logprob: -11.378643989562988
    4. '   ' → logprob: -12.253643989562988
    5. '1' → logprob: -12.378643989562988
    6. ':' → logprob: -12.628643989562988
    7. 'and' → logprob: -12.753643989562988
    8. ' ' → logprob: -12.878643989562988
    9. ')' → logprob: -13.253643989562988
    10. ' [' → logprob: -13.253643989562988

Token 758: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6286106983898208e-05
    2. ' ' → logprob: -11.250016212463379
    3. '   ' → logprob: -14.062516212463379
    4. '1' → logprob: -14.187516212463379
    5. '-' → logprob: -14.687516212463379
    6. '[' → logprob: -15.500016212463379
    7. '
' → logprob: -15.687516212463379
    8. '#' → logprob: -15.875016212463379
    9. '000' → logprob: -16.500017166137695
    10. '  ' → logprob: -16.625017166137695

Token 759: ']' (ID: 60)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.022202052175998688
    2. 'or' → logprob: -4.147202014923096
    3. ')' → logprob: -5.272202014923096
    4. ']' → logprob: -7.397202014923096
    5. ':' → logprob: -8.647202491760254
    6. '       ' → logprob: -9.647202491760254
    7. '):' → logprob: -9.647202491760254
    8. '   ' → logprob: -9.772202491760254
    9. '):
' → logprob: -11.022202491760254
    10. ':
' → logprob: -12.147202491760254

Token 760: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.4187983274459839
    2. '       ' → logprob: -1.4187983274459839
    3. ':' → logprob: -3.0437984466552734
    4. 'or' → logprob: -3.6687984466552734
    5. 'continue' → logprob: -4.168798446655273
    6. '   ' → logprob: -4.918798446655273
    7. ':
' → logprob: -5.918798446655273
    8. ' continue' → logprob: -6.668798446655273
    9. '	continue' → logprob: -9.918798446655273
    10. '	or' → logprob: -9.918798446655273

Token 761: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06997378170490265
    2. ' x' → logprob: -2.6949737071990967
    3. 'y' → logprob: -11.194973945617676
    4. '   ' → logprob: -11.819973945617676
    5. 'yyy' → logprob: -11.944973945617676
    6. ' y' → logprob: -12.819973945617676
    7. ' ' → logprob: -13.194973945617676
    8. 'xxx' → logprob: -13.632473945617676
    9. '  ' → logprob: -14.069973945617676
    10. '	x' → logprob: -14.382473945617676

Token 762: 'yy' (ID: 7496)
  Prédit: 'yy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yy' → logprob: -0.008066733367741108
    2. 'yyy' → logprob: -5.133066654205322
    3. 'xx' → logprob: -7.508066654205322
    4. '>' → logprob: -7.883066654205322
    5. 'x' → logprob: -7.883066654205322
    6. ' >' → logprob: -8.00806713104248
    7. 'y' → logprob: -8.13306713104248
    8. '>x' → logprob: -10.38306713104248
    9. '[' → logprob: -10.63306713104248
    10. 'yyyy' → logprob: -10.88306713104248

Token 763: '[-' (ID: 17503)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6997082233428955
    2. '[-' → logprob: -0.6997082233428955
    3. '>' → logprob: -5.074707984924316
    4. '[len' → logprob: -9.574707984924316
    5. '>-' → logprob: -9.949707984924316
    6. '   ' → logprob: -10.074707984924316
    7. 'len' → logprob: -10.199707984924316
    8. '0' → logprob: -10.574707984924316
    9. '-' → logprob: -11.199707984924316
    10. '>[' → logprob: -11.449707984924316

Token 764: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7120533811976202e-05
    2. '-' → logprob: -11.000017166137695
    3. '```' → logprob: -16.500017166137695
    4. '0' → logprob: -16.750017166137695
    5. ' ' → logprob: -17.000017166137695
    6. ' -' → logprob: -17.062517166137695
    7. '   ' → logprob: -17.437517166137695
    8. '2' → logprob: -17.562517166137695
    9. '
' → logprob: -17.937517166137695
    10. '#' → logprob: -18.000017166137695

Token 765: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1006656363606453
    2. ' >' → logprob: -3.10066556930542
    3. '>:' → logprob: -3.97566556930542
    4. ':' → logprob: -4.35066556930542
    5. ']>' → logprob: -4.97566556930542
    6. '>x' → logprob: -4.97566556930542
    7. ']:' → logprob: -7.35066556930542
    8. ']' → logprob: -7.47566556930542
    9. '<x' → logprob: -7.60066556930542
    10. '   ' → logprob: -7.72566556930542

Token 766: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.08985656499862671
    2. ' >' → logprob: -2.4648566246032715
    3. '<' → logprob: -7.7148566246032715
    4. ' <' → logprob: -8.714856147766113
    5. ':' → logprob: -8.964856147766113
    6. '>x' → logprob: -8.964856147766113
    7. '>:' → logprob: -11.589856147766113
    8. '   ' → logprob: -11.964856147766113
    9. '<x' → logprob: -12.214856147766113
    10. ')>' → logprob: -12.464856147766113

Token 767: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.026301106438040733
    2. ' x' → logprob: -3.651301145553589
    3. '	x' → logprob: -15.651301383972168
    4. ')x' → logprob: -15.776301383972168
    5. ' ' → logprob: -15.901301383972168
    6. '<|end|>' → logprob: -16.40130043029785
    7. '   ' → logprob: -16.65130043029785
    8. '=' → logprob: -17.02630043029785
    9. '=x' → logprob: -17.15130043029785
    10. ')' → logprob: -17.15130043029785

Token 768: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5592352151870728
    2. ':' → logprob: -1.4342352151870728
    3. ':
' → logprob: -1.6842352151870728
    4. '   ' → logprob: -5.934235095977783
    5. 'continue' → logprob: -6.559235095977783
    6. ' continue' → logprob: -8.559235572814941
    7. '	continue' → logprob: -9.684235572814941
    8. ':
' → logprob: -9.809235572814941
    9. '):
' → logprob: -10.184235572814941
    10. '	' → logprob: -11.184235572814941

Token 769: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0040497868321835995
    2. 'continue' → logprob: -5.879049777984619
    3. ' continue' → logprob: -7.129049777984619
    4. '   ' → logprob: -8.004050254821777
    5. '	continue' → logprob: -9.254050254821777
    6. '	' → logprob: -12.254050254821777
    7. '_continue' → logprob: -12.754050254821777
    8. '           ' → logprob: -13.129050254821777
    9. 'Continue' → logprob: -14.004050254821777
    10. '	   ' → logprob: -14.629050254821777

Token 770: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.02950248494744301
    2. '   ' → logprob: -3.7795023918151855
    3. ' continue' → logprob: -5.7795023918151855
    4. '       ' → logprob: -5.7795023918151855
    5. '	continue' → logprob: -10.154502868652344
    6. '           ' → logprob: -11.029502868652344
    7. 'contin' → logprob: -14.029502868652344
    8. ' ' → logprob: -15.279502868652344
    9. 'continu' → logprob: -15.404502868652344
    10. '_continue' → logprob: -15.904502868652344

Token 771: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029801984783262014
    2. '
' → logprob: -7.2529802322387695
    3. 'for' → logprob: -7.2529802322387695
    4. '    
' → logprob: -7.6279802322387695
    5. '       ' → logprob: -7.6279802322387695
    6. 'continue' → logprob: -9.12798023223877
    7. ' for' → logprob: -9.75298023223877
    8. '<|end|>' → logprob: -10.12798023223877
    9. '  
' → logprob: -10.25298023223877
    10. '        
' → logprob: -10.62798023223877

Token 772: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003932237159460783
    2. 'for' → logprob: -6.003931999206543
    3. ' for' → logprob: -8.378931999206543
    4. 'continue' → logprob: -8.378931999206543
    5. 'b' → logprob: -8.878931999206543
    6. '       ' → logprob: -9.003931999206543
    7. 'next' → logprob: -9.253931999206543
    8. 'i' → logprob: -9.503931999206543
    9. '    
' → logprob: -9.503931999206543
    10. ' continue' → logprob: -9.753931999206543

Token 773: ' i' (ID: 575)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.511259913444519
    2. 'idx' → logprob: -2.0112600326538086
    3. 'left' → logprob: -2.6362600326538086
    4. 'pos' → logprob: -3.3862600326538086
    5. 'i' (adapté à ' i') → logprob: -3.5112600326538086
    6. 'li' → logprob: -3.8862600326538086
    7. 'lo' → logprob: -4.136260032653809
    8. 'j' → logprob: -4.261260032653809
    9. 'low' → logprob: -4.386260032653809
    10. '   ' → logprob: -4.636260032653809

Token 774: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01601336896419525
    2. '=' → logprob: -4.266013145446777
    3. 'x' → logprob: -6.516013145446777
    4. 'nd' → logprob: -8.141013145446777
    5. 'dx' → logprob: -10.516013145446777
    6. 'idx' → logprob: -11.266013145446777
    7. 'n' → logprob: -11.391013145446777
    8. 'f' → logprob: -12.141013145446777
    9. '   ' → logprob: -12.516013145446777
    10. '_idx' → logprob: -12.641013145446777

Token 775: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.00038336371653713286
    2. ' bis' → logprob: -7.875383377075195
    3. '0' → logprob: -13.500383377075195
    4. '   ' → logprob: -14.875383377075195
    5. '	b' → logprob: -15.000383377075195
    6. 'bi' → logprob: -15.000383377075195
    7. 'b' → logprob: -15.125383377075195
    8. ' ' → logprob: -16.000383377075195
    9. 'bs' → logprob: -16.000383377075195
    10. '
' → logprob: -17.375383377075195

Token 776: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.9361264946837764e-07
    2. 'e' → logprob: -16.75
    3. 'sect' → logprob: -17.5
    4. '```' → logprob: -17.625
    5. '[i' → logprob: -18.5
    6. '<' → logprob: -18.75
    7. '\' → logprob: -18.875
    8. 'ec' → logprob: -19.0
    9. '#' → logprob: -19.25
    10. '
' → logprob: -19.375

Token 777: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12194819003343582
    2. '_right' → logprob: -2.7469482421875
    3. '_left' → logprob: -2.9969482421875
    4. 'Right' → logprob: -7.9969482421875
    5. 'right' → logprob: -8.1219482421875
    6. 'left' → logprob: -9.7469482421875
    7. 'Left' → logprob: -10.4969482421875
    8. '(right' → logprob: -12.1219482421875
    9. '-right' → logprob: -12.4969482421875
    10. 'import' → logprob: -13.3719482421875

Token 778: 'yyy' (ID: 77541)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0028801187872886658
    2. 'right' → logprob: -6.252880096435547
    3. '_right' → logprob: -7.502880096435547
    4. 'Right' → logprob: -8.502880096435547
    5. '_left' → logprob: -9.627880096435547
    6. 'yyy' → logprob: -9.752880096435547
    7. 'left' → logprob: -10.002880096435547
    8. '```' → logprob: -11.752880096435547
    9. 'import' → logprob: -12.252880096435547
    10. 'Left' → logprob: -12.877880096435547

Token 779: ',' (ID: 11)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.12035278975963593
    2. '(i' → logprob: -2.8703527450561523
    3. '(' → logprob: -3.2453527450561523
    4. '_left' → logprob: -5.120352745056152
    5. ',' → logprob: -5.370352745056152
    6. ')' → logprob: -5.995352745056152
    7. '_right' → logprob: -6.370352745056152
    8. '(y' → logprob: -6.870352745056152
    9. ')(' → logprob: -7.995352745056152
    10. ',i' → logprob: -8.620352745056152

Token 780: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0032472279854118824
    2. ' x' → logprob: -5.753247261047363
    3. '(x' → logprob: -10.128247261047363
    4. ')' → logprob: -11.503247261047363
    5. ')x' → logprob: -12.003247261047363
    6. 'i' → logprob: -12.128247261047363
    7. '	x' → logprob: -13.003247261047363
    8. ',x' → logprob: -13.753247261047363
    9. '   ' → logprob: -14.003247261047363
    10. '[x' → logprob: -14.628247261047363

Token 781: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012887592427432537
    2. ')-' → logprob: -5.137887477874756
    3. ')
' → logprob: -5.637887477874756
    4. '-' → logprob: -5.887887477874756
    5. ' -' → logprob: -7.762887477874756
    6. '   ' → logprob: -9.637887954711914
    7. '+' → logprob: -10.262887954711914
    8. ' )' → logprob: -11.262887954711914
    9. ')i' → logprob: -11.762887954711914
    10. '[' → logprob: -12.012887954711914

Token 782: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027038637548685074
    2. '
' → logprob: -4.15203857421875
    3. ' if' → logprob: -5.27703857421875
    4. '    
' → logprob: -5.90203857421875
    5. '-' → logprob: -6.77703857421875
    6. '+' → logprob: -7.40203857421875
    7. 'if' → logprob: -8.02703857421875
    8. '    ' → logprob: -8.77703857421875
    9. ' i' → logprob: -8.90203857421875
    10. '[i' → logprob: -9.27703857421875

Token 783: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.938998281955719
    2. 'pos' → logprob: -1.1889982223510742
    3. 'if' → logprob: -1.3139982223510742
    4. 'j' → logprob: -3.813998222351074
    5. 'coordinates' → logprob: -6.063998222351074
    6. ' if' → logprob: -6.313998222351074
    7. ' pos' → logprob: -6.563998222351074
    8. 'for' → logprob: -6.938998222351074
    9. '```' → logprob: -6.938998222351074
    10. 'left' → logprob: -7.063998222351074

Token 784: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00761455949395895
    2. '=' → logprob: -5.257614612579346
    3. ',' → logprob: -7.507614612579346
    4. ' +=' → logprob: -7.507614612579346
    5. '=i' → logprob: -7.882614612579346
    6. ' -=' → logprob: -8.257614135742188
    7. '+=' → logprob: -8.507614135742188
    8. '-' → logprob: -9.007614135742188
    9. '-=' → logprob: -9.507614135742188
    10. 'b' → logprob: -10.257614135742188

Token 785: ' x' (ID: 1215)
  Prédit: 'yyy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yyy' → logprob: -0.14000201225280762
    2. ' y' → logprob: -2.1400020122528076
    3. 'y' → logprob: -5.640002250671387
    4. 'i' → logprob: -6.015002250671387
    5. ' i' → logprob: -6.265002250671387
    6. '(' → logprob: -6.515002250671387
    7. 'xxx' → logprob: -6.765002250671387
    8. ' ' → logprob: -7.765002250671387
    9. ' (' → logprob: -8.265002250671387
    10. 'yy' → logprob: -8.890002250671387

Token 786: ' -' (ID: 533)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1804699897766113
    2. '-' → logprob: -1.3054699897766113
    3. '=' → logprob: -1.6804699897766113
    4. 'if' → logprob: -2.5554699897766113
    5. ',' → logprob: -3.3054699897766113
    6. '   ' → logprob: -3.5554699897766113
    7. ' -' → logprob: -3.6804699897766113
    8. ' if' → logprob: -4.180469989776611
    9. 'b' → logprob: -4.305469989776611
    10. '
' → logprob: -4.430469989776611

Token 787: ' y' (ID: 342)
  Prédit: 'yyy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yyy' → logprob: -0.000453910295618698
    2. '1' → logprob: -8.25045394897461
    3. ' y' → logprob: -8.87545394897461
    4. 'yy' → logprob: -10.37545394897461
    5. '(' → logprob: -11.87545394897461
    6. ' ' → logprob: -13.12545394897461
    7. '   ' → logprob: -13.12545394897461
    8. ' (' → logprob: -13.37545394897461
    9. 'yyyy' → logprob: -13.50045394897461
    10. 'y' → logprob: -13.62545394897461

Token 788: 'yy' (ID: 7496)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5594836473464966
    2. 'y' → logprob: -1.5594836473464966
    3. '[i' → logprob: -2.559483528137207
    4. 'yyy' → logprob: -2.684483528137207
    5. 'yy' → logprob: -3.434483528137207
    6. '0' → logprob: -4.309483528137207
    7. '1' → logprob: -4.559483528137207
    8. '   ' → logprob: -5.059483528137207
    9. ' ' → logprob: -5.934483528137207
    10. ' i' → logprob: -6.559483528137207

Token 789: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001060198643244803
    2. 'i' → logprob: -6.8760600090026855
    3. '[' → logprob: -10.876060485839844
    4. '   ' → logprob: -13.376060485839844
    5. '1' → logprob: -13.626060485839844
    6. '
' → logprob: -13.626060485839844
    7. '```' → logprob: -14.251060485839844
    8. ' i' → logprob: -14.376060485839844
    9. '[
' → logprob: -14.626060485839844
    10. 'a' → logprob: -14.626060485839844

Token 790: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0006638261256739497
    2. ' -' → logprob: -7.875663757324219
    3. '])' → logprob: -9.000663757324219
    4. '[i' → logprob: -9.750663757324219
    5. '[' → logprob: -10.000663757324219
    6. ']' → logprob: -10.125663757324219
    7. ')' → logprob: -11.375663757324219
    8. '[-' → logprob: -13.625663757324219
    9. '   ' → logprob: -13.625663757324219
    10. '1' → logprob: -14.000663757324219

Token 791: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6047699318733066e-05
    2. ' ' → logprob: -11.125016212463379
    3. '2' → logprob: -14.500016212463379
    4. '   ' → logprob: -15.062516212463379
    5. '-' → logprob: -15.812516212463379
    6. '  ' → logprob: -16.375015258789062
    7. '```' → logprob: -16.375015258789062
    8. ']' → logprob: -16.750015258789062
    9. '۱' → logprob: -18.250015258789062
    10. ')' → logprob: -18.250015258789062

Token 792: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3782830137643032e-05
    2. ' ' → logprob: -11.50001335144043
    3. '2' → logprob: -12.87501335144043
    4. '   ' → logprob: -15.37501335144043
    5. '0' → logprob: -15.75001335144043
    6. '```' → logprob: -15.75001335144043
    7. ']' → logprob: -16.62501335144043
    8. '  ' → logprob: -17.00001335144043
    9. '[' → logprob: -17.12501335144043
    10. '-' → logprob: -17.18751335144043

Token 793: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37582558393478394
    2. ')
' → logprob: -1.2508256435394287
    3. ']' → logprob: -3.8758256435394287
    4. ']
' → logprob: -5.25082540512085
    5. '   ' → logprob: -7.75082540512085
    6. '-' → logprob: -9.000825881958008
    7. ')
' → logprob: -9.000825881958008
    8. '<|end|>' → logprob: -9.000825881958008
    9. '])' → logprob: -10.000825881958008
    10. '])
' → logprob: -10.625825881958008

Token 794: '   ' (ID: 271)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.016498688608407974
    2. '   ' → logprob: -4.141498565673828
    3. ' b' → logprob: -8.141498565673828
    4. 'c' → logprob: -10.266498565673828
    5. 'if' → logprob: -10.391498565673828
    6. 'a' → logprob: -10.516498565673828
    7. 'd' → logprob: -11.641498565673828
    8. 'l' → logprob: -11.766498565673828
    9. '#' → logprob: -11.766498565673828
    10. '	b' → logprob: -11.766498565673828

Token 795: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.008996950462460518
    2. 'ab' → logprob: -5.133996963500977
    3. 'for' → logprob: -7.133996963500977
    4. 'if' → logprob: -7.258996963500977
    5. 'coordinates' → logprob: -7.383996963500977
    6. 'c' → logprob: -8.508996963500977
    7. 'pos' → logprob: -9.508996963500977
    8. 'j' → logprob: -9.758996963500977
    9. '   ' → logprob: -10.008996963500977
    10. 'coordinate' → logprob: -10.008996963500977

Token 796: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08894132822751999
    2. ' =' → logprob: -2.4639413356781006
    3. ',' → logprob: -14.46394157409668
    4. 'b' → logprob: -14.71394157409668
    5. ' ' → logprob: -14.96394157409668
    6. 'a' → logprob: -15.58894157409668
    7. ')' → logprob: -16.58894157409668
    8. 'x' → logprob: -16.58894157409668
    9. 's' → logprob: -16.83894157409668
    10. '=
' → logprob: -16.96394157409668

Token 797: ' y' (ID: 342)
  Prédit: 'yyy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yyy' → logprob: -0.00730690686032176
    2. ' y' → logprob: -5.132307052612305
    3. ' ' → logprob: -8.382307052612305
    4. '  ' → logprob: -8.507307052612305
    5. '   ' → logprob: -8.632307052612305
    6. 'xxx' → logprob: -8.757307052612305
    7. 'x' → logprob: -9.007307052612305
    8. 'i' → logprob: -9.007307052612305
    9. ' x' → logprob: -9.382307052612305
    10. ' i' → logprob: -9.882307052612305

Token 798: 'yy' (ID: 7496)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.006168743595480919
    2. 'y' → logprob: -5.631168842315674
    3. 'i' → logprob: -6.006168842315674
    4. '[' → logprob: -10.256168365478516
    5. '[y' → logprob: -10.631168365478516
    6. 'yy' → logprob: -11.506168365478516
    7. 'yyy' → logprob: -11.631168365478516
    8. '[ii' → logprob: -12.256168365478516
    9. '[j' → logprob: -12.631168365478516
    10. '   ' → logprob: -12.756168365478516

Token 799: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.014684110297821e-06
    2. 'i' → logprob: -12.000008583068848
    3. '[' → logprob: -13.000008583068848
    4. '   ' → logprob: -16.000009536743164
    5. '[j' → logprob: -16.125009536743164
    6. '[
' → logprob: -16.750009536743164
    7. '[k' → logprob: -16.750009536743164
    8. '(i' → logprob: -17.375009536743164
    9. '[min' → logprob: -17.875009536743164
    10. ' [' → logprob: -18.000009536743164

Token 800: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05149290710687637
    2. '-' → logprob: -3.051492929458618
    3. ']-' → logprob: -5.926492691040039
    4. ' -' → logprob: -9.301492691040039
    5. 'i' → logprob: -9.426492691040039
    6. '   ' → logprob: -11.051492691040039
    7. '#' → logprob: -11.426492691040039
    8. '[i' → logprob: -12.051492691040039
    9. ']
' → logprob: -12.176492691040039
    10. '1' → logprob: -12.301492691040039

Token 801: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.42897361516952515
    2. ' -' → logprob: -1.05397367477417
    3. '-a' → logprob: -8.678973197937012
    4. '-x' → logprob: -9.803973197937012
    5. '-i' → logprob: -11.428973197937012
    6. '-
' → logprob: -11.678973197937012
    7. '
' → logprob: -12.303973197937012
    8. '   ' → logprob: -12.303973197937012
    9. '-ai' → logprob: -12.553973197937012
    10. '-b' → logprob: -13.053973197937012

Token 802: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -9.078839502763003e-05
    2. ' x' → logprob: -9.750090599060059
    3. 'a' → logprob: -10.375090599060059
    4. '_x' → logprob: -15.750090599060059
    5. 'y' → logprob: -15.875090599060059
    6. '   ' → logprob: -16.062591552734375
    7. '1' → logprob: -16.250091552734375
    8. '	x' → logprob: -16.312591552734375
    9. 'xxx' → logprob: -16.375091552734375
    10. '0' → logprob: -16.937591552734375

Token 803: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008881403133273125
    2. '
' → logprob: -4.758881568908691
    3. '
' → logprob: -9.883881568908691
    4. 'ab' → logprob: -9.883881568908691
    5. '    
' → logprob: -10.133881568908691
    6. '<|end|>' → logprob: -10.258881568908691
    7. ' ' → logprob: -10.508881568908691
    8. '  ' → logprob: -11.633881568908691
    9. ' ab' → logprob: -11.758881568908691
    10. ')' → logprob: -12.133881568908691

Token 804: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003900177078321576
    2. 'ab' → logprob: -5.628900051116943
    3. ' ab' → logprob: -8.378900527954102
    4. 'if' → logprob: -10.503900527954102
    5. '       ' → logprob: -12.128900527954102
    6. '
' → logprob: -12.128900527954102
    7. '_ab' → logprob: -12.378900527954102
    8. ' if' → logprob: -12.628900527954102
    9. '#ab' → logprob: -12.753900527954102
    10. '   ' → logprob: -12.878900527954102

Token 805: ' ab' (ID: 692)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' (adapté à ' ab') → logprob: -0.056353699415922165
    2. '   ' → logprob: -2.931353807449341
    3. ' ab' → logprob: -6.931353569030762
    4. 'if' → logprob: -7.806353569030762
    5. 'for' → logprob: -10.431353569030762
    6. '#ab' → logprob: -11.431353569030762
    7. '       ' → logprob: -11.806353569030762
    8. '_ab' → logprob: -12.181353569030762
    9. ' if' → logprob: -12.681353569030762
    10. 'abc' → logprob: -12.681353569030762

Token 806: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0007229181355796754
    2. '[x' → logprob: -7.250722885131836
    3. '[' → logprob: -11.500722885131836
    4. 'a' → logprob: -13.125722885131836
    5. '[b' → logprob: -15.375722885131836
    6. '[i' → logprob: -15.625722885131836
    7. '\[' → logprob: -16.000722885131836
    8. '   ' → logprob: -16.500722885131836
    9. '```' → logprob: -16.625722885131836
    10. '[A' → logprob: -17.375722885131836

Token 807: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0002135534887202084
    2. '.add' → logprob: -8.750213623046875
    3. '.' → logprob: -10.375213623046875
    4. ']' → logprob: -11.125213623046875
    5. '   ' → logprob: -12.750213623046875
    6. '[' → logprob: -12.875213623046875
    7. '][' → logprob: -13.625213623046875
    8. ' ].' → logprob: -14.250213623046875
    9. 'add' → logprob: -14.750213623046875
    10. ').' → logprob: -14.750213623046875

Token 808: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -1.9361264946837764e-07
    2. '.add' → logprob: -16.125
    3. ' add' → logprob: -17.125
    4. 'append' → logprob: -19.125
    5. '_add' → logprob: -21.5
    6. 'update' → logprob: -21.875
    7. ')add' → logprob: -22.0
    8. '	add' → logprob: -22.375
    9. 'insert' → logprob: -23.25
    10. '(add' → logprob: -23.625

Token 809: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0005530327325686812
    2. 'b' → logprob: -7.500553131103516
    3. '(' → logprob: -17.500553131103516
    4. '	b' → logprob: -19.250553131103516
    5. ' b' → logprob: -19.750553131103516
    6. '(
' → logprob: -19.750553131103516
    7. ')b' → logprob: -21.000553131103516
    8. ' (' → logprob: -21.500553131103516
    9. '((' → logprob: -22.875553131103516
    10. '[b' → logprob: -23.000553131103516

Token 810: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5451681974809617e-05
    2. ')
' → logprob: -11.375015258789062
    3. ' )' → logprob: -13.250015258789062
    4. '<|end|>' → logprob: -14.125015258789062
    5. '   ' → logprob: -14.500015258789062
    6. ')return' → logprob: -15.250015258789062
    7. '       ' → logprob: -15.750015258789062
    8. ')}' → logprob: -15.750015258789062
    9. '())' → logprob: -16.125015258789062
    10. '))' → logprob: -16.750015258789062

Token 811: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 812: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 813: ' Map' (ID: 7343)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 814: ' distance' (ID: 9324)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9601346254348755
    2. '<|end|>' → logprob: -1.3351346254348755
    3. ' x' → logprob: -2.335134506225586
    4. ' a' → logprob: -2.585134506225586
    5. 'b' → logprob: -2.585134506225586
    6. 'x' → logprob: -3.210134506225586
    7. '       ' → logprob: -3.710134506225586
    8. '           ' → logprob: -3.960134506225586
    9. '   ' → logprob: -4.710134506225586
    10. ' b' → logprob: -5.460134506225586

Token 815: ' a' (ID: 261)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 816: ' to' (ID: 316)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 817: ' set' (ID: 920)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.001910788589157164
    2. ' b' → logprob: -6.37691068649292
    3. 'ab' → logprob: -8.626911163330078
    4. '   ' → logprob: -11.376911163330078
    5. ' ab' → logprob: -12.501911163330078
    6. 'the' → logprob: -12.751911163330078
    7. '       ' → logprob: -13.001911163330078
    8. 'set' → logprob: -13.376911163330078
    9. '{' → logprob: -13.751911163330078
    10. ' the' → logprob: -13.876911163330078

Token 818: ' of' (ID: 328)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0028287696186453104
    2. 'b' → logprob: -6.252828598022461
    3. '{' → logprob: -8.377828598022461
    4. '(' → logprob: -8.877828598022461
    5. 'of' → logprob: -9.002828598022461
    6. '(ab' → logprob: -9.377828598022461
    7. '       ' → logprob: -10.002828598022461
    8. '(
' → logprob: -10.252828598022461
    9. '```' → logprob: -10.252828598022461
    10. ' of' → logprob: -10.502828598022461

Token 819: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.08663386106491089
    2. 'values' → logprob: -2.5866339206695557
    3. 'bs' → logprob: -6.211633682250977
    4. 'dist' → logprob: -6.336633682250977
    5. 'coordinates' → logprob: -6.586633682250977
    6. 'neighbors' → logprob: -7.336633682250977
    7. 'cor' → logprob: -7.836633682250977
    8. 'all' → logprob: -7.961633682250977
    9. 'adj' → logprob: -8.711633682250977
    10. ' b' → logprob: -8.836633682250977

Token 820: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 821: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 822: ' coordinates' (ID: 27933)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.49956580996513367
    2. '       ' → logprob: -1.249565839767456
    3. '   ' → logprob: -3.374565839767456
    4. 'pos' → logprob: -3.374565839767456
    5. 'ab' → logprob: -4.249565601348877
    6. '               ' → logprob: -4.499565601348877
    7. '```' → logprob: -5.749565601348877
    8. 'b' → logprob: -6.124565601348877
    9. 'i' → logprob: -6.874565601348877
    10. '                   ' → logprob: -6.999565601348877

Token 823: '.add' (ID: 1950)
  Prédit: '.update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.11890282481908798
    2. '.add' → logprob: -2.6189029216766357
    3. '.' → logprob: -3.2439029216766357
    4. '|' → logprob: -9.493903160095215
    5. '.union' → logprob: -9.493903160095215
    6. 'update' → logprob: -10.743903160095215
    7. ' |=' → logprob: -10.868903160095215
    8. ').' → logprob: -12.368903160095215
    9. ' .' → logprob: -12.743903160095215
    10. '   ' → logprob: -12.743903160095215

Token 824: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -2.236549335066229e-05
    2. 'b' → logprob: -10.750021934509277
    3. '(' → logprob: -14.000021934509277
    4. '(a' → logprob: -17.625022888183594
    5. '((' → logprob: -17.625022888183594
    6. ' (' → logprob: -17.875022888183594
    7. '(x' → logprob: -18.250022888183594
    8. '(
' → logprob: -18.375022888183594
    9. '	b' → logprob: -18.375022888183594
    10. '('' → logprob: -18.625022888183594

Token 825: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014036978245712817
    2. ')
' → logprob: -9.000140190124512
    3. '   ' → logprob: -11.500140190124512
    4. ' )' → logprob: -12.375140190124512
    5. '<|end|>' → logprob: -14.125140190124512
    6. ')}' → logprob: -14.500140190124512
    7. '       ' → logprob: -15.125140190124512
    8. ')

' → logprob: -15.750140190124512
    9. '}' → logprob: -16.000141143798828
    10. ')
' → logprob: -16.250141143798828

Token 826: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 827: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 828: ' Collect' (ID: 30483)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 829: ' all' (ID: 722)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0024700670037418604
    2. ' b' → logprob: -6.877470016479492
    3. '<|end|>' → logprob: -7.002470016479492
    4. '   ' → logprob: -8.627470016479492
    5. 'coordinates' → logprob: -8.752470016479492
    6. ' ' → logprob: -10.252470016479492
    7. '<|end|>' → logprob: -10.377470016479492
    8. ' coordinates' → logprob: -10.627470016479492
    9. '    ' → logprob: -10.877470016479492
    10. 'x' → logprob: -11.002470016479492

Token 830: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.38895782828330994
    2. 'coordinates' → logprob: -1.8889578580856323
    3. ')' → logprob: -2.3889577388763428
    4. '<|end|>' → logprob: -2.8889577388763428
    5. ' ' → logprob: -4.638957977294922
    6. ' b' → logprob: -5.763957977294922
    7. ' coordinates' → logprob: -6.263957977294922
    8. '   ' → logprob: -6.763957977294922
    9. '<|end|>' → logprob: -6.763957977294922
    10. '```' → logprob: -6.888957977294922

Token 831: ''s' (ID: 885)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 832: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 833: 'for' (ID: 1938)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6386699676513672
    2. '<|end|>' → logprob: -0.7636699676513672
    3. ' )' → logprob: -5.888669967651367
    4. '<|end|>' → logprob: -6.388669967651367
    5. ' ' → logprob: -7.263669967651367
    6. '
' → logprob: -8.138669967651367
    7. ')
' → logprob: -8.638669967651367
    8. 'coordinates' → logprob: -9.513669967651367
    9. ' coordinates' → logprob: -9.513669967651367
    10. ' 
' → logprob: -9.888669967651367

Token 834: ' coordinate' (ID: 30380)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27162498235702515
    2. 'coordinate' → logprob: -2.64662504196167
    3. 'coordinates' → logprob: -3.39662504196167
    4. ' )' → logprob: -3.89662504196167
    5. ' coordinate' → logprob: -4.02162504196167
    6. 'mapping' → logprob: -4.02162504196167
    7. 'b' → logprob: -4.14662504196167
    8. 'sorting' → logprob: -4.77162504196167
    9. 'compression' → logprob: -4.89662504196167
    10. ' indexing' → logprob: -5.14662504196167

Token 835: ' compression' (ID: 41811)
  Prédit: 'compression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compression' → logprob: -0.012683634646236897
    2. ' compression' → logprob: -4.762683868408203
    3. 'compress' → logprob: -5.512683868408203
    4. 'compressed' → logprob: -11.262683868408203
    5. ' compress' → logprob: -12.512683868408203
    6. '
' → logprob: -12.637683868408203
    7. 'dis' → logprob: -13.137683868408203
    8. '_com' → logprob: -13.387683868408203
    9. ')' → logprob: -14.012683868408203
    10. 'coordinate' → logprob: -14.887683868408203

Token 836: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.433829159708694e-05
    2. '<|end|>' → logprob: -10.00007438659668
    3. ')
' → logprob: -11.12507438659668
    4. ' )' → logprob: -11.62507438659668
    5. '<|end|>' → logprob: -13.87507438659668
    6. '   ' → logprob: -14.37507438659668
    7. '
' → logprob: -14.37507438659668
    8. ')}' → logprob: -14.87507438659668
    9. ').' → logprob: -15.00007438659668
    10. ')#' → logprob: -15.25007438659668

Token 837: '#' (ID: 2)
  Prédit: 'coordinates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coordinates' → logprob: -0.43677398562431335
    2. 'coords' → logprob: -2.3117740154266357
    3. '#' → logprob: -2.6867740154266357
    4. 'compressed' → logprob: -2.9367740154266357
    5. 'coordinate' → logprob: -3.3117740154266357
    6. 'sorted' → logprob: -3.4367740154266357
    7. 'coord' → logprob: -3.5617740154266357
    8. 'co' → logprob: -3.9367740154266357
    9. 'b' → logprob: -4.936773777008057
    10. 'ab' → logprob: -6.186773777008057

Token 838: ' Compress' (ID: 188934)
  Prédit: 'coordinates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coordinates' → logprob: -1.0577759742736816
    2. 'coords' → logprob: -1.8077759742736816
    3. '#' → logprob: -1.9327759742736816
    4. 'coord' → logprob: -2.4327759742736816
    5. 'compressed' → logprob: -2.5577759742736816
    6. 'sorted' → logprob: -2.9327759742736816
    7. 'b' → logprob: -2.9327759742736816
    8. 'coordinate' → logprob: -3.8077759742736816
    9. 'co' → logprob: -4.432775974273682
    10. 'cs' → logprob: -5.557775974273682

Token 839: ' b' (ID: 287)
  Prédit: 'coordinates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coordinates' → logprob: -0.10444758087396622
    2. 'b' → logprob: -2.354447603225708
    3. 'coords' → logprob: -6.229447364807129
    4. '#' → logprob: -6.854447364807129
    5. 'coordinate' → logprob: -7.729447364807129
    6. 'co' → logprob: -7.979447364807129
    7. 'coord' → logprob: -8.854447364807129
    8. 'all' → logprob: -9.229447364807129
    9. 'compressed' → logprob: -9.979447364807129
    10. 'indices' → logprob: -10.479447364807129

Token 840: ' coordinates' (ID: 27933)
  Prédit: '_coordinates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_coordinates' → logprob: -0.956170380115509
    2. '_coords' → logprob: -1.4561703205108643
    3. 'coordinates' → logprob: -1.7061703205108643
    4. '_values' → logprob: -2.0811703205108643
    5. 'coords' → logprob: -3.5811703205108643
    6. 'values' → logprob: -3.7061703205108643
    7. '_map' → logprob: -4.706170558929443
    8. '_list' → logprob: -5.706170558929443
    9. ' =' → logprob: -5.831170558929443
    10. '_mapping' → logprob: -6.706170558929443

Token 841: ';' (ID: 26)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5772079229354858
    2. 'coordinates' → logprob: -1.7022079229354858
    3. 'coords' → logprob: -2.3272080421447754
    4. 'sorted' → logprob: -2.3272080421447754
    5. 'coord' → logprob: -3.4522080421447754
    6. 'coordinate' → logprob: -4.577208042144775
    7. 'compressed' → logprob: -5.202208042144775
    8. 'bs' → logprob: -5.452208042144775
    9. 'co' → logprob: -5.452208042144775
    10. 'all' → logprob: -7.327208042144775

Token 842: ' start' (ID: 1604)
  Prédit: 'coordinates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coordinates' → logprob: -1.1871294975280762
    2. 'coords' → logprob: -1.3121294975280762
    3. 'b' → logprob: -1.8121294975280762
    4. 'coord' → logprob: -2.312129497528076
    5. 'compressed' → logprob: -3.062129497528076
    6. 'sorted' → logprob: -3.062129497528076
    7. 'coordinate' → logprob: -3.937129497528076
    8. 'co' → logprob: -4.687129497528076
    9. 'compress' → logprob: -4.812129497528076
    10. 'comp' → logprob: -5.312129497528076

Token 843: ' at' (ID: 540)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8593535423278809
    2. '=' → logprob: -1.2343535423278809
    3. 'coords' → logprob: -1.9843535423278809
    4. 'coordinates' → logprob: -2.734353542327881
    5. 'from' → logprob: -3.984353542327881
    6. 'with' → logprob: -4.359353542327881
    7. 'coord' → logprob: -4.609353542327881
    8. 'compressed' → logprob: -4.734353542327881
    9. 'sorted' → logprob: -5.109353542327881
    10. 'co' → logprob: -5.359353542327881

Token 844: ' index' (ID: 3472)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.061742786318063736
    2. '0' → logprob: -2.9367427825927734
    3. 'index' → logprob: -5.311742782592773
    4. 'b' → logprob: -7.811742782592773
    5. ' ' → logprob: -7.811742782592773
    6. 'compressed' → logprob: -8.311742782592773
    7. '[' → logprob: -8.436742782592773
    8. 'idx' → logprob: -8.811742782592773
    9. 'coordinate' → logprob: -8.936742782592773
    10. 'coord' → logprob: -9.311742782592773

Token 845: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5304074883460999
    2. '1' → logprob: -0.9054074883460999
    3. 'b' → logprob: -5.780407428741455
    4. ' =' → logprob: -6.530407428741455
    5. 'compressed' → logprob: -6.905407428741455
    6. 'from' → logprob: -7.405407428741455
    7. 'idx' → logprob: -8.030407905578613
    8. 'coord' → logprob: -8.155407905578613
    9. ' ' → logprob: -9.280407905578613
    10. 'coordinates' → logprob: -9.530407905578613

Token 846: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07110556960105896
    2. '=' → logprob: -2.696105480194092
    3. '0' → logprob: -8.07110595703125
    4. 'from' → logprob: -8.19610595703125
    5. 'b' → logprob: -8.44610595703125
    6. ' =' → logprob: -8.69610595703125
    7. ' ' → logprob: -10.07110595703125
    8. 'coordinates' → logprob: -10.19610595703125
    9. '```' → logprob: -11.07110595703125
    10. 'coord' → logprob: -11.19610595703125

Token 847: ' to' (ID: 316)
  Prédit: 'compressed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compressed' → logprob: -0.6295984387397766
    2. 'coordinates' → logprob: -1.5045983791351318
    3. 'coords' → logprob: -2.629598379135132
    4. 'b' → logprob: -2.629598379135132
    5. 'coord' → logprob: -3.379598379135132
    6. '
' → logprob: -3.379598379135132
    7. 'coordinate' → logprob: -4.629598617553711
    8. 'comp' → logprob: -5.254598617553711
    9. 'co' → logprob: -5.629598617553711
    10. 'c' → logprob: -6.004598617553711

Token 848: ' allow' (ID: 3763)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.096515417098999
    2. 'len' → logprob: -2.096515417098999
    3. 'allow' → logprob: -2.221515417098999
    4. '
' → logprob: -2.221515417098999
    5. ' allow' → logprob: -2.471515417098999
    6. '2' → logprob: -2.721515417098999
    7. 'b' → logprob: -2.846515417098999
    8. ' accommodate' → logprob: -2.846515417098999
    9. ' account' → logprob: -3.221515417098999
    10. '#' → logprob: -3.221515417098999

Token 849: ' a' (ID: 261)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22684960067272186
    2. '#' → logprob: -2.6018495559692383
    3. ' for' → logprob: -3.6018495559692383
    4. 'offset' → logprob: -3.8518495559692383
    5. 'reserved' → logprob: -4.101849555969238
    6. '```' → logprob: -4.476849555969238
    7. '   ' → logprob: -4.601849555969238
    8. '2' → logprob: -5.351849555969238
    9. '
' → logprob: -5.476849555969238
    10. 'safe' → logprob: -5.601849555969238

Token 850: ' zero' (ID: 12421)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.6397310495376587
    2. '2' → logprob: -2.389730930328369
    3. '+' → logprob: -2.639730930328369
    4. '=' → logprob: -3.014730930328369
    5. 'for' → logprob: -3.014730930328369
    6. 'nd' → logprob: -3.264730930328369
    7. ' =' → logprob: -3.389730930328369
    8. '[' → logprob: -3.514730930328369
    9. 'll' → logprob: -3.639730930328369
    10. 'dd' → logprob: -3.639730930328369

Token 851: '-index' (ID: 45533)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6022881269454956
    2. 'b' → logprob: -1.8522881269454956
    3. '
' → logprob: -2.102288246154785
    4. 'coordinates' → logprob: -3.227288246154785
    5. 'compressed' → logprob: -3.727288246154785
    6. ',' → logprob: -3.727288246154785
    7. '=' → logprob: -4.227288246154785
    8. ' b' → logprob: -4.602288246154785
    9. 'coords' → logprob: -4.602288246154785
    10. ' ' → logprob: -5.102288246154785

Token 852: ' entry' (ID: 7251)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.7009499669075012
    2. 'ing' → logprob: -0.8259499669075012
    3. '=' → logprob: -3.9509499073028564
    4. ',' → logprob: -5.3259501457214355
    5. 'ation' → logprob: -5.4509501457214355
    6. ' =' → logprob: -5.4509501457214355
    7. 'offset' → logprob: -5.4509501457214355
    8. 'd' → logprob: -5.5759501457214355
    9. '0' → logprob: -5.7009501457214355
    10. 'for' → logprob: -5.8259501457214355

Token 853: ' in' (ID: 306)
  Prédit: 'compressed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compressed' → logprob: -0.5939957499504089
    2. 'b' → logprob: -1.9689958095550537
    3. 'coord' → logprob: -2.5939958095550537
    4. 'comp' → logprob: -2.7189958095550537
    5. 'coordinates' → logprob: -2.9689958095550537
    6. 'coordinate' → logprob: -3.4689958095550537
    7. 'coords' → logprob: -3.5939958095550537
    8. 'idx' → logprob: -4.968995571136475
    9. 'compress' → logprob: -5.093995571136475
    10. '
' → logprob: -5.093995571136475

Token 854: ' BIT' (ID: 52185)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ab' → logprob: -1.349725604057312
    2. 'the' → logprob: -1.349725604057312
    3. 'coordinates' → logprob: -2.2247257232666016
    4. 'compressed' → logprob: -2.3497257232666016
    5. '`' → logprob: -2.9747257232666016
    6. 'bit' → logprob: -3.0997257232666016
    7. 'b' → logprob: -4.224725723266602
    8. 'array' → logprob: -4.224725723266602
    9. 'coords' → logprob: -4.349725723266602
    10. 'arr' → logprob: -4.349725723266602

Token 855: '
' (ID: 198)
  Prédit: 'compressed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compressed' → logprob: -1.008105754852295
    2. 'b' → logprob: -1.758105754852295
    3. 'coordinates' → logprob: -2.008105754852295
    4. 'coord' → logprob: -2.383105754852295
    5. 'coords' → logprob: -2.758105754852295
    6. 'comp' → logprob: -3.258105754852295
    7. 'coordinate' → logprob: -3.883105754852295
    8. 'idx' → logprob: -4.133105754852295
    9. '
' → logprob: -4.133105754852295
    10. 'c' → logprob: -4.133105754852295

Token 856: 'cor' (ID: 11111)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.0994186401367188
    2. 'compressed' → logprob: -1.8494186401367188
    3. 'coord' → logprob: -2.0994186401367188
    4. 'comp' → logprob: -2.8494186401367188
    5. 'coordinates' → logprob: -2.8494186401367188
    6. 'coords' → logprob: -2.8494186401367188
    7. 'idx' → logprob: -3.0994186401367188
    8. 'compress' → logprob: -3.3494186401367188
    9. 'c' → logprob: -3.7244186401367188
    10. 'coordinate' → logprob: -3.8494186401367188

Token 857: '_dict' (ID: 11295)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.49292224645614624
    2. 'din' → logprob: -0.9929222464561462
    3. 'ordinates' → logprob: -4.367922306060791
    4. 'ds' → logprob: -5.242922306060791
    5. 'coordinates' → logprob: -7.742922306060791
    6. 'rd' → logprob: -9.367921829223633
    7. 'ordinate' → logprob: -9.742921829223633
    8. 'di' → logprob: -11.117921829223633
    9. 'dis' → logprob: -11.117921829223633
    10. '_coordinates' → logprob: -11.242921829223633

Token 858: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693724036216736
    2. ' =' → logprob: -2.1269371509552
    3. '={}' → logprob: -12.376936912536621
    4. '={' → logprob: -12.876936912536621
    5. '={'' → logprob: -14.001936912536621
    6. ',' → logprob: -15.001936912536621
    7. '={"' → logprob: -15.376936912536621
    8. ' ' → logprob: -15.626936912536621
    9. '＝' → logprob: -15.626936912536621
    10. '{' → logprob: -15.751936912536621

Token 859: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.0010472200810909271
    2. 'default' → logprob: -6.876047134399414
    3. ' {' → logprob: -12.126047134399414
    4. 'dict' → logprob: -12.251047134399414
    5. '{}' → logprob: -13.251047134399414
    6. ' defaultdict' → logprob: -14.126047134399414
    7. '{x' → logprob: -14.626047134399414
    8. '{-' → logprob: -14.876047134399414
    9. '{
' → logprob: -15.501047134399414
    10. '[' → logprob: -15.751047134399414

Token 860: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7114327549934387
    2. 'v' → logprob: -0.7114327549934387
    3. 'val' → logprob: -4.961432933807373
    4. 'c' → logprob: -5.086432933807373
    5. 'k' → logprob: -6.211432933807373
    6. 'x' → logprob: -7.086432933807373
    7. 'y' → logprob: -7.211432933807373
    8. 'e' → logprob: -7.711432933807373
    9. 'coord' → logprob: -7.961432933807373
    10. 'value' → logprob: -9.211432456970215

Token 861: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011447775177657604
    2. ':b' → logprob: -4.511447906494141
    3. ':i' → logprob: -8.13644790649414
    4. ' :' → logprob: -9.51144790649414
    5. '   ' → logprob: -11.01144790649414
    6. ':k' → logprob: -11.88644790649414
    7. 'b' → logprob: -12.26144790649414
    8. ':index' → logprob: -13.38644790649414
    9. '2' → logprob: -14.01144790649414
    10. '       ' → logprob: -14.63644790649414

Token 862: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9679110646247864
    2. 'idx' → logprob: -1.0929110050201416
    3. '2' → logprob: -1.3429110050201416
    4. 'index' → logprob: -4.717911243438721
    5. '0' → logprob: -5.592911243438721
    6. 'b' → logprob: -5.592911243438721
    7. ' idx' → logprob: -5.717911243438721
    8. '1' → logprob: -6.217911243438721
    9. ' i' → logprob: -7.217911243438721
    10. ' ' → logprob: -7.217911243438721

Token 863: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11915205419063568
    2. ' for' → logprob: -2.369152069091797
    3. '+' → logprob: -3.994152069091797
    4. ':' → logprob: -8.994152069091797
    5. '2' → logprob: -9.369152069091797
    6. '   ' → logprob: -9.994152069091797
    7. ' +' → logprob: -10.244152069091797
    8. ' ' → logprob: -10.744152069091797
    9. '+b' → logprob: -11.244152069091797
    10. 'b' → logprob: -11.369152069091797

Token 864: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.000194361709873192
    2. 'b' → logprob: -8.875194549560547
    3. ' i' → logprob: -9.875194549560547
    4. ',' → logprob: -13.750194549560547
    5. '(i' → logprob: -14.750194549560547
    6. ',i' → logprob: -14.750194549560547
    7. '2' → logprob: -15.625194549560547
    8. '   ' → logprob: -16.000194549560547
    9. '```' → logprob: -16.125194549560547
    10. '	i' → logprob: -16.125194549560547

Token 865: ',' (ID: 11)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1898757964372635
    2. ',' → logprob: -2.314875841140747
    3. 'i' → logprob: -2.689875841140747
    4. 'in' → logprob: -6.439875602722168
    5. ' b' → logprob: -6.564875602722168
    6. ',b' → logprob: -6.689875602722168
    7. ' i' → logprob: -7.189875602722168
    8. ' in' → logprob: -7.314875602722168
    9. 'enumer' → logprob: -7.939875602722168
    10. ',i' → logprob: -8.564875602722168

Token 866: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -5.200166469876422e-06
    2. ' b' → logprob: -12.250004768371582
    3. '(b' → logprob: -15.875004768371582
    4. '```' → logprob: -16.1250057220459
    5. '	b' → logprob: -16.6250057220459
    6. 'in' → logprob: -17.8750057220459
    7. 'enumer' → logprob: -19.0000057220459
    8. '_b' → logprob: -19.2500057220459
    9. ',b' → logprob: -19.6250057220459
    10. '>b' → logprob: -19.8750057220459

Token 867: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.07890278846025467
    2. ' in' → logprob: -2.5789027214050293
    3. ',' → logprob: -11.578903198242188
    4. 'enumer' → logprob: -13.078903198242188
    5. ' ' → logprob: -14.578903198242188
    6. 'b' → logprob: -15.078903198242188
    7. ')' → logprob: -15.453903198242188
    8. 'n' → logprob: -16.078903198242188
    9. '	in' → logprob: -16.078903198242188
    10. '<|end|>' → logprob: -16.453903198242188

Token 868: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0010374527191743255
    2. ' enumerate' → logprob: -6.87603759765625
    3. 'b' → logprob: -12.50103759765625
    4. '```' → logprob: -15.37603759765625
    5. 'enum' → logprob: -15.50103759765625
    6. 'range' → logprob: -15.62603759765625
    7. '
' → logprob: -16.12603759765625
    8. 'en' → logprob: -16.50103759765625
    9. 'in' → logprob: -16.62603759765625
    10. 'value' → logprob: -16.75103759765625

Token 869: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.016108855605125427
    2. '(co' → logprob: -4.266108989715576
    3. 'sorted' → logprob: -6.266108989715576
    4. '([' → logprob: -11.141108512878418
    5. 'coordinates' → logprob: -11.266108512878418
    6. '(' → logprob: -11.516108512878418
    7. 'co' → logprob: -12.891108512878418
    8. '(Co' → logprob: -13.641108512878418
    9. '(coord' → logprob: -14.266108512878418
    10. '(coords' → logprob: -14.891108512878418

Token 870: '(co' (ID: 41772)
  Prédit: '(co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(co' → logprob: -0.0009126556105911732
    2. 'coordinates' → logprob: -7.000912666320801
    3. 'co' → logprob: -14.0009126663208
    4. '(list' → logprob: -15.5009126663208
    5. ')' → logprob: -16.875911712646484
    6. 'list' → logprob: -17.500911712646484
    7. '```' → logprob: -17.625911712646484
    8. '(coords' → logprob: -18.250911712646484
    9. ' coordinates' → logprob: -18.375911712646484
    10. '   ' → logprob: -18.375911712646484

Token 871: 'ordinates' (ID: 15343)
  Prédit: 'ordinates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ordinates' → logprob: -0.00010008628305513412
    2. 'rd' → logprob: -9.500100135803223
    3. 'coordinates' → logprob: -11.500100135803223
    4. 'ordin' → logprob: -12.500100135803223
    5. 'ord' → logprob: -12.750100135803223
    6. 'ordinate' → logprob: -12.750100135803223
    7. 'or' → logprob: -13.125100135803223
    8. 'ordi' → logprob: -14.125100135803223
    9. '{' → logprob: -14.625100135803223
    10. 'r' → logprob: -14.625100135803223

Token 872: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015038289711810648
    2. '2' → logprob: -9.250150680541992
    3. ',start' → logprob: -10.250150680541992
    4. ' ,' → logprob: -12.000150680541992
    5. '(),' → logprob: -12.125150680541992
    6. 'start' → logprob: -13.125150680541992
    7. '),' → logprob: -13.250150680541992
    8. ')}' → logprob: -13.625150680541992
    9. '[' → logprob: -14.500150680541992
    10. '1' → logprob: -14.750150680541992

Token 873: ' start' (ID: 1604)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1602409929037094
    2. 'start' → logprob: -1.9102410078048706
    3. ' start' → logprob: -11.28524112701416
    4. ' ' → logprob: -12.91024112701416
    5. '   ' → logprob: -13.28524112701416
    6. '       ' → logprob: -17.285240173339844
    7. '  ' → logprob: -17.410240173339844
    8. '	start' → logprob: -17.410240173339844
    9. '(start' → logprob: -17.535240173339844
    10. '1' → logprob: -18.535240173339844

Token 874: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07704700529575348
    2. '(' → logprob: -2.827047109603882
    3. '2' → logprob: -4.202046871185303
    4. '   ' → logprob: -14.702047348022461
    5. '(
' → logprob: -15.077047348022461
    6. ' =' → logprob: -15.327047348022461
    7. '```' → logprob: -15.827047348022461
    8. ' ' → logprob: -16.57704734802246
    9. 'def' → logprob: -16.95204734802246
    10. ' (' → logprob: -17.57704734802246

Token 875: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -15.750000953674316
    4. '```' → logprob: -17.75
    5. '=' → logprob: -19.0625
    6. '(' → logprob: -19.3125
    7. '۲' → logprob: -19.375
    8. '
' → logprob: -19.5625
    9. '  ' → logprob: -19.625
    10. '       ' → logprob: -20.0625

Token 876: ')}
' (ID: 19324)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.0024849306792020798
    2. ')' → logprob: -6.0024847984313965
    3. '}' → logprob: -12.002485275268555
    4. ');}' → logprob: -13.002485275268555
    5. ')}
' → logprob: -15.502485275268555
    6. ' )' → logprob: -15.877485275268555
    7. ')}}' → logprob: -16.002485275268555
    8. '})' → logprob: -16.252485275268555
    9. '")}' → logprob: -16.377485275268555
    10. ')},' → logprob: -17.127485275268555

Token 877: 'cd' (ID: 8301)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.998989999294281
    2. 'for' → logprob: -1.7489900588989258
    3. '<|end|>' → logprob: -1.9989900588989258
    4. '   ' → logprob: -2.498990058898926
    5. '       ' → logprob: -2.623990058898926
    6. 'def' → logprob: -2.873990058898926
    7. '#' → logprob: -3.748990058898926
    8. '<|end|>' → logprob: -4.373990058898926
    9. 'i' → logprob: -4.623990058898926
    10. ' for' → logprob: -4.623990058898926

Token 878: 'g' (ID: 70)
  Prédit: '_keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_keys' → logprob: -1.7451878786087036
    2. 'ict' → logprob: -2.120187759399414
    3. ' =' → logprob: -2.370187759399414
    4. '2' → logprob: -2.620187759399414
    5. '_values' → logprob: -2.870187759399414
    6. '_len' → logprob: -3.370187759399414
    7. 'd' → logprob: -3.495187759399414
    8. 'b' → logprob: -3.495187759399414
    9. '_inv' → logprob: -3.495187759399414
    10. 'c' → logprob: -3.620187759399414

Token 879: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5504010319709778
    2. 'ict' → logprob: -1.675400972366333
    3. '=' → logprob: -2.425400972366333
    4. 't' → logprob: -4.175401210784912
    5. 's' → logprob: -4.175401210784912
    6. 'ct' → logprob: -4.175401210784912
    7. 'e' → logprob: -4.425401210784912
    8. '_counts' → logprob: -4.425401210784912
    9. '_dict' → logprob: -4.675401210784912
    10. '_count' → logprob: -5.050401210784912

Token 880: ' cor' (ID: 1907)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5518238544464111
    2. 'default' → logprob: -1.6768238544464111
    3. 'sorted' → logprob: -2.551823854446411
    4. 'len' → logprob: -2.926823854446411
    5. '[len' → logprob: -3.176823854446411
    6. '{' → logprob: -3.301823854446411
    7. 'list' → logprob: -4.676823616027832
    8. 'cor' → logprob: -5.551823616027832
    9. '[list' → logprob: -5.801823616027832
    10. '[]' → logprob: -6.551823616027832

Token 881: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.004175391048192978
    2. 'ict' → logprob: -6.254175186157227
    3. 't' → logprob: -7.629175186157227
    4. 'sorted' → logprob: -7.879175186157227
    5. 'ect' → logprob: -8.129175186157227
    6. 'dict' → logprob: -8.629175186157227
    7. 'ct' → logprob: -8.879175186157227
    8. 'f' → logprob: -9.379175186157227
    9. '_list' → logprob: -9.504175186157227
    10. 'edict' → logprob: -9.629175186157227

Token 882: '.get' (ID: 775)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 883: '    ' (ID: 257)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 884: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 885: ' Sh' (ID: 1955)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.058294571936130524
    2. '<|end|>' → logprob: -3.3082945346832275
    3. '#' → logprob: -4.683294773101807
    4. '```' → logprob: -5.808294773101807
    5. 'b' → logprob: -6.558294773101807
    6. 'ab' → logprob: -6.683294773101807
    7. 'cor' → logprob: -7.058294773101807
    8. '<|end|>' → logprob: -7.058294773101807
    9. 'coordinates' → logprob: -7.308294773101807
    10. '
' → logprob: -7.308294773101807

Token 886: 'orthand' (ID: 132166)
  Prédit: 'ort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ort' → logprob: -0.7551316022872925
    2. 'ould' → logprob: -0.7551316022872925
    3. 'orthand' → logprob: -3.130131721496582
    4. 'orth' → logprob: -5.505131721496582
    5. '<|end|>' → logprob: -5.630131721496582
    6. 'ure' → logprob: -5.755131721496582
    7. 'arp' → logprob: -7.005131721496582
    8. 'orter' → logprob: -7.005131721496582
    9. 'a' → logprob: -7.380131721496582
    10. '#' → logprob: -7.880131721496582

Token 887: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3549380898475647
    2. 'def' → logprob: -1.60493803024292
    3. '#' → logprob: -3.47993803024292
    4. ')' → logprob: -4.85493803024292
    5. 'i' → logprob: -5.22993803024292
    6. ' for' → logprob: -5.35493803024292
    7. '   ' → logprob: -5.47993803024292
    8. 'while' → logprob: -5.47993803024292
    9. 'if' → logprob: -5.60493803024292
    10. 'a' → logprob: -5.60493803024292

Token 888: ' coordinate' (ID: 30380)
  Prédit: 'cor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cor' → logprob: -0.0015078396536409855
    2. 'coordinates' → logprob: -7.001507759094238
    3. 'lambda' → logprob: -7.501507759094238
    4. '(lambda' → logprob: -10.126507759094238
    5. 'coord' → logprob: -13.251507759094238
    6. 'coords' → logprob: -14.126507759094238
    7. 'coordinate' → logprob: -14.501507759094238
    8. 'cd' → logprob: -15.501507759094238
    9. 'get' → logprob: -15.626507759094238
    10. ' cor' → logprob: -15.876507759094238

Token 889: ' mapping' (ID: 22573)
  Prédit: 'compression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compression' → logprob: -0.7771037817001343
    2. 'dictionary' → logprob: -1.6521037817001343
    3. 'get' → logprob: -1.7771037817001343
    4. 'mapping' → logprob: -2.902103900909424
    5. 'dict' → logprob: -3.652103900909424
    6. 'compressed' → logprob: -3.652103900909424
    7. 'def' → logprob: -3.652103900909424
    8. 'compress' → logprob: -4.152103900909424
    9. 'getter' → logprob: -5.027103900909424
    10. 'com' → logprob: -5.277103900909424

Token 890: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18114617466926575
    2. ' for' → logprob: -2.3061461448669434
    3. '       ' → logprob: -3.5561461448669434
    4. '   ' → logprob: -3.6811461448669434
    5. '
' → logprob: -5.306146144866943
    6. 'i' → logprob: -5.806146144866943
    7. 'def' → logprob: -7.056146144866943
    8. '#' → logprob: -7.306146144866943
    9. 'pos' → logprob: -7.431146144866943
    10. ')' → logprob: -8.431146621704102

Token 891: 'MOD' (ID: 52135)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1724871397018433
    2. 'def' → logprob: -2.547487258911133
    3. 'max' → logprob: -2.672487258911133
    4. '#' → logprob: -2.797487258911133
    5. 'count' → logprob: -2.922487258911133
    6. 'cur' → logprob: -3.047487258911133
    7. 'res' → logprob: -3.547487258911133
    8. 'a' → logprob: -3.672487258911133
    9. 'class' → logprob: -3.672487258911133
    10. 'cnt' → logprob: -3.672487258911133

Token 892: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022686660289764
    2. '=' → logprob: -1.910226821899414
    3. ',' → logprob: -12.910226821899414
    4. ' =
' → logprob: -15.910226821899414
    5. ':' → logprob: -16.660226821899414
    6. '=int' → logprob: -17.660226821899414
    7. '=
' → logprob: -17.660226821899414
    8. ')' → logprob: -17.660226821899414
    9. '=

' → logprob: -17.660226821899414
    10. ' =)' → logprob: -18.410226821899414

Token 893: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.08129888027906418
    2. '998' → logprob: -2.831298828125
    3. '100' → logprob: -3.956298828125
    4. '1' → logprob: -12.581298828125
    5. '999' → logprob: -12.581298828125
    6. '200' → logprob: -14.331298828125
    7. '123' → logprob: -14.331298828125
    8. ' ' → logprob: -14.331298828125
    9. 'int' → logprob: -14.706298828125
    10. '400' → logprob: -15.081298828125

Token 894: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10272425413131714
    2. '998' → logprob: -2.852724313735962
    3. '100' → logprob: -3.227724313735962
    4. '1' → logprob: -8.352724075317383
    5. 'int' → logprob: -11.102724075317383
    6. '999' → logprob: -11.352724075317383
    7. '2' → logprob: -11.727724075317383
    8. '200' → logprob: -12.852724075317383
    9. '123' → logprob: -12.977724075317383
    10. ' ' → logprob: -13.352724075317383

Token 895: ' **' (ID: 6240)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.5291084051132202
    2. '**' → logprob: -1.5291084051132202
    3. '9' → logprob: -1.7791084051132202
    4. '000' → logprob: -4.02910852432251
    5. '6' → logprob: -5.15410852432251
    6. '00' → logprob: -7.40410852432251
    7. '0' → logprob: -7.52910852432251
    8. '09' → logprob: -8.654108047485352
    9. '07' → logprob: -8.904108047485352
    10. '007' → logprob: -8.904108047485352

Token 896: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.9361264946837764e-07
    2. '09' → logprob: -16.875
    3. '18' → logprob: -17.5
    4. '+' → logprob: -17.5
    5. '15' → logprob: -18.0
    6. ' ' → logprob: -18.625
    7. '
' → logprob: -18.875
    8. '   ' → logprob: -19.125
    9. '```' → logprob: -19.5
    10. '6' → logprob: -19.625

Token 897: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -4.320199877838604e-07
    2. '18' → logprob: -16.375
    3. '09' → logprob: -16.625
    4. '15' → logprob: -16.875
    5. '8' → logprob: -17.0
    6. '6' → logprob: -17.875
    7. '12' → logprob: -18.375
    8. '+' → logprob: -18.5
    9. '```' → logprob: -18.5
    10. '10' → logprob: -18.75

Token 898: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01418442651629448
    2. ' +' → logprob: -4.264184474945068
    3. '7' → logprob: -11.63918399810791
    4. '+
' → logprob: -11.76418399810791
    5. ' +
' → logprob: -13.51418399810791
    6. ' ' → logprob: -14.38918399810791
    7. '```' → logprob: -14.38918399810791
    8. '＋' → logprob: -15.01418399810791
    9. ' plus' → logprob: -15.13918399810791
    10. 'plus' → logprob: -15.63918399810791

Token 899: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -16.875
    3. '9' → logprob: -19.5
    4. '```' → logprob: -19.5
    5. '07' → logprob: -20.25
    6. '   ' → logprob: -21.0
    7. ' ' → logprob: -21.0
    8. '
' → logprob: -21.875
    9. '

' → logprob: -21.875
    10. '``' → logprob: -22.75

Token 900: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '9' → logprob: -17.25
    3. '```' → logprob: -20.25
    4. '+' → logprob: -20.5
    5. '07' → logprob: -21.0
    6. '   ' → logprob: -22.625
    7. ' ' → logprob: -23.625
    8. '79' → logprob: -24.0
    9. '
' → logprob: -24.5
    10. '77' → logprob: -24.625

Token 901: '     ' (ID: 530)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4318108856678009
    2. 'class' → logprob: -2.4318108558654785
    3. '#' → logprob: -2.8068108558654785
    4. 'ans' → logprob: -3.1818108558654785
    5. 'for' → logprob: -3.9318108558654785
    6. 'bit' → logprob: -3.9318108558654785
    7. 'def' → logprob: -4.0568108558654785
    8. 'res' → logprob: -4.0568108558654785
    9. 'result' → logprob: -4.9318108558654785
    10. 'cnt' → logprob: -5.1818108558654785

Token 902: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5335045456886292
    2. 'def' → logprob: -2.6585044860839844
    3. '#' (adapté à ' #') → logprob: -3.1585044860839844
    4. 'bit' → logprob: -3.2835044860839844
    5. 'for' → logprob: -3.2835044860839844
    6. 'class' → logprob: -3.6585044860839844
    7. ')' → logprob: -3.9085044860839844
    8. 'res' → logprob: -4.408504486083984
    9. '
' → logprob: -4.408504486083984
    10. 'max' → logprob: -4.408504486083984

Token 903: ' Large' (ID: 27976)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.7837612628936768
    2. '#' → logprob: -1.4087612628936768
    3. 'def' → logprob: -1.5337612628936768
    4. 'n' → logprob: -3.4087612628936768
    5. 'MOD' → logprob: -3.9087612628936768
    6. '```' → logprob: -4.908761024475098
    7. 'from' → logprob: -5.408761024475098
    8. 'd' → logprob: -6.408761024475098
    9. 'bit' → logprob: -7.033761024475098
    10. 'a' → logprob: -7.033761024475098

Token 904: ' prime' (ID: 9197)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.5086536407470703
    2. '
' → logprob: -1.2586536407470703
    3. 'mod' → logprob: -3.5086536407470703
    4. '<|end|>' → logprob: -3.5086536407470703
    5. '```' → logprob: -3.7586536407470703
    6. '+' → logprob: -5.00865364074707
    7. '#' → logprob: -5.13365364074707
    8. ' MOD' → logprob: -5.50865364074707
    9. '
' → logprob: -5.75865364074707
    10. '=' → logprob: -6.50865364074707

Token 905: ' modulo' (ID: 112372)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2910834848880768
    2. '<|end|>' → logprob: -2.166083574295044
    3. 'class' → logprob: -3.541083574295044
    4. '#' → logprob: -3.541083574295044
    5. 'for' → logprob: -4.166083335876465
    6. 'def' → logprob: -4.166083335876465
    7. ')' → logprob: -4.416083335876465
    8. 'n' → logprob: -4.666083335876465
    9. '```' → logprob: -4.791083335876465
    10. '<|end|>' → logprob: -5.416083335876465

Token 906: ' for' (ID: 395)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.5352976322174072
    2. 'for' → logprob: -1.9102976322174072
    3. '#' → logprob: -2.4102976322174072
    4. 'class' → logprob: -3.1602976322174072
    5. ')' → logprob: -3.1602976322174072
    6. 'n' → logprob: -3.2852976322174072
    7. 'cur' → logprob: -3.2852976322174072
    8. 'cd' → logprob: -3.4102976322174072
    9. 'def' → logprob: -3.4102976322174072
    10. 'res' → logprob: -3.7852976322174072

Token 907: ' answers' (ID: 14716)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.8074007630348206
    2. 'operations' → logprob: -1.9324007034301758
    3. 'MOD' → logprob: -2.057400703430176
    4. 'calcul' → logprob: -2.182400703430176
    5. '#' → logprob: -3.182400703430176
    6. 'the' → logprob: -3.182400703430176
    7. 'ar' → logprob: -3.807400703430176
    8. 'int' → logprob: -4.057400703430176
    9. 'pow' → logprob: -4.557400703430176
    10. 'updates' → logprob: -5.557400703430176

Token 908: '

' (ID: 279)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.0471159219741821
    2. 'dp' → logprob: -1.2971159219741821
    3. 'answer' → logprob: -2.0471158027648926
    4. 'res' → logprob: -3.1721158027648926
    5. 'for' → logprob: -3.4221158027648926
    6. 'answers' → logprob: -4.172115802764893
    7. 'cur' → logprob: -4.297115802764893
    8. 'def' → logprob: -4.547115802764893
    9. 'result' → logprob: -4.547115802764893
    10. '#' → logprob: -4.547115802764893

Token 909: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5821850895881653
    2. 'ans' → logprob: -1.8321850299835205
    3. 'answer' → logprob: -2.8321850299835205
    4. 'res' → logprob: -3.0821850299835205
    5. '#' → logprob: -3.5821850299835205
    6. 'for' → logprob: -3.9571850299835205
    7. 'cnt' → logprob: -4.2071852684021
    8. 'cur' → logprob: -4.5821852684021
    9. 'f' → logprob: -4.7071852684021
    10. 'result' → logprob: -4.7071852684021

Token 910: ' Initialize' (ID: 19496)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.49073049426078796
    2. 'ans' → logprob: -2.1157305240631104
    3. 'bit' → logprob: -3.2407305240631104
    4. 'class' → logprob: -3.3657305240631104
    5. 'f' → logprob: -3.4907305240631104
    6. '#' → logprob: -4.115730285644531
    7. 'answer' → logprob: -4.115730285644531
    8. 'def' → logprob: -4.490730285644531
    9. 'cnt' → logprob: -4.490730285644531
    10. 'res' → logprob: -4.615730285644531

Token 911: ' BIT' (ID: 52185)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.028539856895804405
    2. 'dp' → logprob: -3.9035398960113525
    3. 'ans' → logprob: -5.903539657592773
    4. 'BIT' → logprob: -6.778539657592773
    5. 'bt' → logprob: -7.653539657592773
    6. 'fen' → logprob: -7.903539657592773
    7. 'answer' → logprob: -8.028539657592773
    8. 'res' → logprob: -8.153539657592773
    9. 'tree' → logprob: -8.403539657592773
    10. 'f' → logprob: -8.528539657592773

Token 912: '/F' (ID: 27092)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.004004315007477999
    2. 'bt' → logprob: -7.00400447845459
    3. 'BIT' → logprob: -7.12900447845459
    4. 'b' → logprob: -7.37900447845459
    5. 'size' → logprob: -7.37900447845459
    6. 'tree' → logprob: -8.37900447845459
    7. 'B' → logprob: -9.37900447845459
    8. 'dp' → logprob: -9.75400447845459
    9. 'L' → logprob: -10.12900447845459
    10. 'bits' → logprob: -10.12900447845459

Token 913: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.1732495129108429
    2. 't' → logprob: -3.4232494831085205
    3. 'it' → logprob: -3.6732494831085205
    4. 'Bit' → logprob: -4.2982497215271
    5. 'bit' → logprob: -4.4232497215271
    6. 'tree' → logprob: -4.4232497215271
    7. 'T' → logprob: -4.6732497215271
    8. 'size' → logprob: -4.7982497215271
    9. '#' → logprob: -4.9232497215271
    10. '=' → logprob: -5.2982497215271

Token 914: 'wick' (ID: 14105)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.2322220504283905
    2. 'wick' → logprob: -1.732222080230713
    3. '```' → logprob: -3.982222080230713
    4. '
' → logprob: -5.482222080230713
    5. 'ick' → logprob: -5.732222080230713
    6. '   ' → logprob: -7.357222080230713
    7. '       ' → logprob: -7.482222080230713
    8. 'wt' → logprob: -7.607222080230713
    9. '``' → logprob: -7.607222080230713
    10. '
' → logprob: -8.357221603393555

Token 915: ' Tree' (ID: 14224)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.27361273765563965
    2. 'bit' → logprob: -1.6486127376556396
    3. 'size' → logprob: -3.7736127376556396
    4. ' =' → logprob: -4.773612976074219
    5. 'n' → logprob: -5.648612976074219
    6. ' tree' → logprob: -6.148612976074219
    7. 't' → logprob: -6.273612976074219
    8. '=' → logprob: -6.398612976074219
    9. 'ree' → logprob: -6.523612976074219
    10. 'Tree' → logprob: -7.023612976074219

Token 916: ' (' (ID: 350)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.011206616647541523
    2. 'bt' → logprob: -6.38620662689209
    3. 'tree' → logprob: -6.38620662689209
    4. 'b' → logprob: -6.51120662689209
    5. 'BIT' → logprob: -6.76120662689209
    6. 'ft' → logprob: -6.88620662689209
    7. 'f' → logprob: -6.88620662689209
    8. 'B' → logprob: -7.26120662689209
    9. 'fen' → logprob: -7.38620662689209
    10. 'fw' → logprob: -8.13620662689209

Token 917: 'index' (ID: 2257)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.4302048981189728
    2. 'max' → logprob: -2.5552048683166504
    3. 'bit' → logprob: -2.6802048683166504
    4. 'n' → logprob: -2.9302048683166504
    5. 'Bit' → logprob: -3.5552048683166504
    6. 'm' → logprob: -3.5552048683166504
    7. 'BIT' → logprob: -3.9302048683166504
    8. 'cd' → logprob: -4.30520486831665
    9. 'cor' → logprob: -4.68020486831665
    10. 'size' → logprob: -4.93020486831665

Token 918: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5761173367500305
    2. '=' → logprob: -0.9511173367500305
    3. ')' → logprob: -3.4511172771453857
    4. 'size' → logprob: -4.701117515563965
    5. 's' → logprob: -6.326117515563965
    6. '_size' → logprob: -6.451117515563965
    7. '=len' → logprob: -6.576117515563965
    8. ',' → logprob: -7.201117515563965
    9. '<|end|>' → logprob: -7.326117515563965
    10. '=size' → logprob: -7.576117515563965

Token 919: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.013288934715092182
    2. ' =' → logprob: -4.763288974761963
    3. 'len' → logprob: -6.763288974761963
    4. '0' → logprob: -6.763288974761963
    5. '=len' → logprob: -6.888288974761963
    6. 'size' → logprob: -7.263288974761963
    7. ')' → logprob: -9.013288497924805
    8. 'max' → logprob: -9.263288497924805
    9. '1' → logprob: -9.263288497924805
    10. '=size' → logprob: -9.763288497924805

Token 920: ' left' (ID: 3561)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19025887548923492
    2. ' =' → logprob: -2.3152589797973633
    3. ')' → logprob: -2.8152589797973633
    4. '#' → logprob: -5.565258979797363
    5. ',' → logprob: -6.690258979797363
    6. 'size' → logprob: -6.690258979797363
    7. '=len' → logprob: -6.690258979797363
    8. '+' → logprob: -6.815258979797363
    9. '=n' → logprob: -7.065258979797363
    10. ')
' → logprob: -7.565258979797363

Token 921: ' unused' (ID: 38192)
  Prédit: 'unused'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unused' → logprob: -0.14601588249206543
    2. '=' → logprob: -2.7710158824920654
    3. ' unused' → logprob: -3.0210158824920654
    4. 'empty' → logprob: -4.8960161209106445
    5. '0' → logprob: -5.0210161209106445
    6. 'blank' → logprob: -5.7710161209106445
    7. ' =' → logprob: -6.6460161209106445
    8. 'out' → logprob: -6.6460161209106445
    9. ')' → logprob: -7.0210161209106445
    10. 'reserved' → logprob: -7.0210161209106445

Token 922: ';' (ID: 26)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07078887522220612
    2. ',' → logprob: -2.695788860321045
    3. ')
' → logprob: -8.195789337158203
    4. 'n' → logprob: -8.445789337158203
    5. ',n' → logprob: -9.445789337158203
    6. ')n' → logprob: -9.945789337158203
    7. '#' → logprob: -10.195789337158203
    8. 'size' → logprob: -10.195789337158203
    9. 'for' → logprob: -10.695789337158203
    10. ',
' → logprob: -10.945789337158203

Token 923: ' index' (ID: 3472)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.20088748633861542
    2. 'n' → logprob: -2.200887441635132
    3. ')' → logprob: -3.075887441635132
    4. 'len' → logprob: -4.575887680053711
    5. 'cd' → logprob: -5.325887680053711
    6. '2' → logprob: -6.075887680053711
    7. 'cor' → logprob: -6.200887680053711
    8. 'self' → logprob: -7.075887680053711
    9. '#' → logprob: -7.200887680053711
    10. '0' → logprob: -7.575887680053711

Token 924: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1261579543352127
    2. '1' → logprob: -3.1261579990386963
    3. ' =' → logprob: -3.3761579990386963
    4. '0' → logprob: -4.251157760620117
    5. '2' → logprob: -4.501157760620117
    6. 'size' → logprob: -5.751157760620117
    7. 'import' → logprob: -5.751157760620117
    8. 'from' → logprob: -6.876157760620117
    9. '#' → logprob: -7.001157760620117
    10. 'cd' → logprob: -7.376157760620117

Token 925: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1978694051504135
    2. '1' → logprob: -2.197869300842285
    3. '2' → logprob: -3.447869300842285
    4. '0' → logprob: -3.822869300842285
    5. ' =' → logprob: -5.322869300842285
    6. 'def' → logprob: -6.697869300842285
    7. '   ' → logprob: -6.947869300842285
    8. 'size' → logprob: -7.072869300842285
    9. '+=' → logprob: -7.072869300842285
    10. 'len' → logprob: -7.197869300842285

Token 926: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.318026065826416
    2. 'unused' → logprob: -1.943026065826416
    3. ' not' → logprob: -3.568026065826416
    4. 'is' → logprob: -3.818026065826416
    5. ' unused' → logprob: -4.068026065826416
    6. 'not' → logprob: -4.068026065826416
    7. 'reserved' → logprob: -4.318026065826416
    8. ' remains' → logprob: -4.943026065826416
    9. ')' → logprob: -4.943026065826416
    10. '<|end|>' → logprob: -5.818026065826416

Token 927: ' intentionally' (ID: 76052)
  Prédit: 'reserved'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reserved' → logprob: -0.20105841755867004
    2. 'unused' → logprob: -2.0760583877563477
    3. '0' → logprob: -3.4510583877563477
    4. ' reserved' → logprob: -4.076058387756348
    5. '1' → logprob: -5.951058387756348
    6. 'always' → logprob: -6.201058387756348
    7. 'empty' → logprob: -7.576058387756348
    8. 'not' → logprob: -7.826058387756348
    9. 'used' → logprob: -7.951058387756348
    10. 'ignored' → logprob: -8.076058387756348

Token 928: ' used' (ID: 2061)
  Prédit: 'unused'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unused' → logprob: -0.21059516072273254
    2. 'left' → logprob: -2.08559513092041
    3. '0' → logprob: -3.33559513092041
    4. 'reserved' → logprob: -3.71059513092041
    5. ' left' → logprob: -5.96059513092041
    6. ' unused' → logprob: -6.83559513092041
    7. 'empty' → logprob: -7.21059513092041
    8. 'not' → logprob: -8.08559513092041
    9. 'ignored' → logprob: -8.21059513092041
    10. 'None' → logprob: -8.33559513092041

Token 929: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -1.0868407487869263
    2. 'for' → logprob: -1.2118407487869263
    3. ')' → logprob: -1.9618407487869263
    4. ' for' → logprob: -2.2118406295776367
    5. 'as' → logprob: -2.2118406295776367
    6. ',' → logprob: -6.586840629577637
    7. '<|end|>' → logprob: -6.961840629577637
    8. '=' → logprob: -7.336840629577637
    9. ' to' → logprob: -7.586840629577637
    10. 'unused' → logprob: -7.711840629577637

Token 930: ' "' (ID: 392)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4525459408760071
    2. 'a' → logprob: -1.7025458812713623
    3. 'dummy' → logprob: -2.2025458812713623
    4. '1' → logprob: -3.9525458812713623
    5. 'sent' → logprob: -4.202546119689941
    6. 'placeholder' → logprob: -4.452546119689941
    7. 'unused' → logprob: -5.327546119689941
    8. 'an' → logprob: -5.452546119689941
    9. 'zero' → logprob: -5.702546119689941
    10. 'anchor' → logprob: -6.327546119689941

Token 931: 'zero' (ID: 29221)
  Prédit: 'dummy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dummy' → logprob: -0.8879918456077576
    2. '0' → logprob: -1.0129919052124023
    3. 'sent' → logprob: -2.2629919052124023
    4. 'a' → logprob: -3.1379919052124023
    5. 'placeholder' → logprob: -4.012991905212402
    6. '1' → logprob: -4.012991905212402
    7. 'padding' → logprob: -4.637991905212402
    8. 'buffer' → logprob: -5.137991905212402
    9. 'anchor' → logprob: -5.262991905212402
    10. 'reserved' → logprob: -5.637991905212402

Token 932: '"' (ID: 1)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0318513922393322
    2. '"' → logprob: -3.781851291656494
    3. ')' → logprob: -5.281851291656494
    4. '-based' → logprob: -6.656851291656494
    5. 'index' → logprob: -7.656851291656494
    6. '<|end|>' → logprob: -8.156851768493652
    7. '">' → logprob: -8.406851768493652
    8. '")
' → logprob: -8.531851768493652
    9. 'based' → logprob: -8.656851768493652
    10. ')")' → logprob: -9.281851768493652

Token 933: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006069221533834934
    2. ')
' → logprob: -6.506069183349609
    3. ' for' → logprob: -6.881069183349609
    4. 'position' → logprob: -8.13106918334961
    5. ',' → logprob: -8.25606918334961
    6. '#' → logprob: -8.50606918334961
    7. 'size' → logprob: -8.50606918334961
    8. 'index' → logprob: -8.50606918334961
    9. ' )' → logprob: -8.50606918334961
    10. 'element' → logprob: -8.50606918334961

Token 934: ' this' (ID: 495)
  Prédit: 'this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'this' → logprob: -0.7170647978782654
    2. 'the' → logprob: -1.3420648574829102
    3. 'Fen' → logprob: -2.09206485748291
    4. 'BIT' → logprob: -3.46706485748291
    5. 'self' → logprob: -3.84206485748291
    6. 'bit' → logprob: -3.96706485748291
    7. 'code' → logprob: -4.21706485748291
    8. 'add' → logprob: -4.84206485748291
    9. '#' → logprob: -4.84206485748291
    10. '1' → logprob: -5.59206485748291

Token 935: ' logic' (ID: 18485)
  Prédit: 'context'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'context' → logprob: -1.5163816213607788
    2. 'class' → logprob: -1.7663816213607788
    3. ')' → logprob: -2.1413817405700684
    4. 'BIT' → logprob: -2.1413817405700684
    5. 'code' → logprob: -2.8913817405700684
    6. ' context' → logprob: -3.0163817405700684
    7. 'structure' → logprob: -3.2663817405700684
    8. ' code' → logprob: -3.3913817405700684
    9. 'bit' → logprob: -3.6413817405700684
    10. 'implementation' → logprob: -3.7663817405700684

Token 936: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006066487403586507
    2. ')
' → logprob: -8.000606536865234
    3. ' for' → logprob: -9.500606536865234
    4. ',' → logprob: -10.125606536865234
    5. ' )' → logprob: -10.375606536865234
    6. '#' → logprob: -10.750606536865234
    7. 'for' → logprob: -10.875606536865234
    8. ').' → logprob: -11.625606536865234
    9. ')

' → logprob: -11.875606536865234
    10. '   ' → logprob: -11.875606536865234

Token 937: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.0135665163397789
    2. 'tree' → logprob: -5.638566493988037
    3. 'BIT' → logprob: -6.013566493988037
    4. 'bt' → logprob: -6.263566493988037
    5. 'ft' → logprob: -6.638566493988037
    6. 'b' → logprob: -6.763566493988037
    7. 'f' → logprob: -7.638566493988037
    8. 't' → logprob: -8.013566970825195
    9. 'size' → logprob: -8.138566970825195
    10. 'fw' → logprob: -8.138566970825195

Token 938: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08901515603065491
    2. '=' → logprob: -2.464015245437622
    3. 'size' → logprob: -10.714015007019043
    4. '(' → logprob: -10.714015007019043
    5. ',' → logprob: -11.589015007019043
    6. '_size' → logprob: -12.089015007019043
    7. ')' → logprob: -12.214015007019043
    8. '   ' → logprob: -12.464015007019043
    9. ' ' → logprob: -13.589015007019043
    10. '.' → logprob: -13.964015007019043

Token 939: ' Bit' (ID: 9422)
  Prédit: 'Bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bit' → logprob: -4.084206375409849e-05
    2. ' Bit' → logprob: -10.125041007995605
    3. 'Bi' → logprob: -14.875041007995605
    4. '(Bit' → logprob: -16.00004005432129
    5. 'bit' → logprob: -16.50004005432129
    6. 'BIT' → logprob: -16.75004005432129
    7. ' ' → logprob: -17.25004005432129
    8. 'Bin' → logprob: -17.75004005432129
    9. 'Bits' → logprob: -18.37504005432129
    10. '   ' → logprob: -18.37504005432129

Token 940: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0033736536279320717
    2. '(max' → logprob: -6.378373622894287
    3. '(' → logprob: -6.628373622894287
    4. '(n' → logprob: -8.628374099731445
    5. '(m' → logprob: -9.628374099731445
    6. 'len' → logprob: -9.753374099731445
    7. '(c' → logprob: -11.128374099731445
    8. '((' → logprob: -11.378374099731445
    9. '(co' → logprob: -12.128374099731445
    10. '(cd' → logprob: -12.503374099731445

Token 941: '(co' (ID: 41772)
  Prédit: '(co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(co' → logprob: -0.585599958896637
    2. '(c' → logprob: -0.835599958896637
    3. 'cor' → logprob: -4.835599899291992
    4. 'coordinates' → logprob: -6.585599899291992
    5. '(coord' → logprob: -9.335599899291992
    6. 'c' → logprob: -9.710599899291992
    7. '(' → logprob: -9.960599899291992
    8. 'co' → logprob: -10.210599899291992
    9. '(coords' → logprob: -11.335599899291992
    10. '(sorted' → logprob: -11.460599899291992

Token 942: 'ordinates' (ID: 15343)
  Prédit: 'ordinates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ordinates' → logprob: -0.0011187844211235642
    2. 'rd' → logprob: -7.7511186599731445
    3. 'r' → logprob: -8.126118659973145
    4. 'coordinates' → logprob: -8.876118659973145
    5. 'ordinate' → logprob: -9.251118659973145
    6. 'or' → logprob: -9.251118659973145
    7. 'ord' → logprob: -10.626118659973145
    8. 'ordin' → logprob: -10.626118659973145
    9. 'cor' → logprob: -11.751118659973145
    10. 'd' → logprob: -14.376118659973145

Token 943: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7815173864364624
    2. '+' → logprob: -0.7815173864364624
    3. ' +' → logprob: -3.031517505645752
    4. ',' → logprob: -3.656517505645752
    5. '),' → logprob: -5.406517505645752
    6. ')+' → logprob: -5.781517505645752
    7. '))' → logprob: -5.906517505645752
    8. '+)' → logprob: -10.031517028808594
    9. '   ' → logprob: -10.531517028808594
    10. '+,' → logprob: -10.781517028808594

Token 944: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18325471878051758
    2. ')' → logprob: -1.9332547187805176
    3. ' +' → logprob: -3.8082547187805176
    4. ',' → logprob: -7.558254718780518
    5. '+)' → logprob: -10.18325424194336
    6. '))' → logprob: -12.30825424194336
    7. ')+' → logprob: -12.80825424194336
    8. '*' → logprob: -13.43325424194336
    9. '```' → logprob: -13.55825424194336
    10. ')
' → logprob: -13.93325424194336

Token 945: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.29264265298843384
    2. '2' → logprob: -1.792642593383789
    3. '5' → logprob: -2.917642593383789
    4. '4' → logprob: -3.667642593383789
    5. '10' → logprob: -4.917642593383789
    6. '1' → logprob: -9.542642593383789
    7. '100' → logprob: -10.292642593383789
    8. '6' → logprob: -10.292642593383789
    9. '20' → logprob: -10.292642593383789
    10. '7' → logprob: -10.542642593383789

Token 946: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.6049202084541321
    2. '2' → logprob: -0.9799202084541321
    3. '5' → logprob: -3.1049201488494873
    4. '4' → logprob: -3.9799201488494873
    5. '10' → logprob: -4.229920387268066
    6. '1' → logprob: -8.479920387268066
    7. '20' → logprob: -9.729920387268066
    8. '6' → logprob: -9.854920387268066
    9. '100' → logprob: -10.104920387268066
    10. '7' → logprob: -10.417420387268066

Token 947: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006370236515067518
    2. ',' → logprob: -7.500637054443359
    3. ')
' → logprob: -9.62563705444336
    4. '+' → logprob: -11.25063705444336
    5. ' )' → logprob: -14.25063705444336
    6. ')
' → logprob: -14.25063705444336
    7. ' +' → logprob: -14.75063705444336
    8. '),' → logprob: -14.75063705444336
    9. ')

' → logprob: -14.75063705444336
    10. '))' → logprob: -14.87563705444336

Token 948: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: 0.0
    2. ' MOD' → logprob: -17.625
    3. '10' → logprob: -18.375
    4. '   ' → logprob: -20.375
    5. '_MOD' → logprob: -21.125
    6. '100' → logprob: -21.25
    7. 'mod' → logprob: -21.75
    8. 'Mod' → logprob: -22.25
    9. '```' → logprob: -23.375
    10. 'MO' → logprob: -23.5

Token 949: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.968312951968983e-06
    2. ')
' → logprob: -11.625009536743164
    3. ' )' → logprob: -14.625009536743164
    4. ')

' → logprob: -15.250009536743164
    5. ')#' → logprob: -16.375009536743164
    6. ')
' → logprob: -16.750009536743164
    7. ')`' → logprob: -17.375009536743164
    8. '))' → logprob: -17.500009536743164
    9. ').' → logprob: -17.500009536743164
    10. '),' → logprob: -18.000009536743164

Token 950: 'bit' (ID: 6516)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6282809376716614
    2. '           ' → logprob: -0.8782809376716614
    3. 'for' → logprob: -3.6282808780670166
    4. '   ' → logprob: -4.003281116485596
    5. '```' → logprob: -6.253281116485596
    6. '               ' → logprob: -6.753281116485596
    7. 'if' → logprob: -7.003281116485596
    8. ' for' → logprob: -7.003281116485596
    9. '          ' → logprob: -8.003280639648438
    10. '        ' → logprob: -8.628280639648438

Token 951: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0003436872211750597
    2. '.' → logprob: -8.000343322753906
    3. '.debug' → logprob: -12.500343322753906
    4. '.lower' → logprob: -13.625343322753906
    5. ' .' → logprob: -13.875343322753906
    6. ').' → logprob: -14.625343322753906
    7. 'add' → logprob: -15.000343322753906
    8. '   ' → logprob: -15.125343322753906
    9. '.bit' → logprob: -15.875343322753906
    10. '```' → logprob: -16.000343322753906

Token 952: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00014036978245712817
    2. '1' → logprob: -8.875140190124512
    3. ' (' → logprob: -15.500140190124512
    4. '2' → logprob: -16.500141143798828
    5. '(
' → logprob: -16.625141143798828
    6. '<|end|>' → logprob: -18.000141143798828
    7. '((' → logprob: -18.250141143798828
    8. '(c' → logprob: -18.625141143798828
    9. '(cd' → logprob: -18.875141143798828
    10. '```' → logprob: -19.000141143798828

Token 953: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004282851587049663
    2. '0' → logprob: -8.375428199768066
    3. '2' → logprob: -8.625428199768066
    4. ' ' → logprob: -11.750428199768066
    5. '   ' → logprob: -12.250428199768066
    6. '3' → logprob: -13.250428199768066
    7. 'cor' → logprob: -13.750428199768066
    8. 'cd' → logprob: -13.875428199768066
    9. '  ' → logprob: -14.437928199768066
    10. '(' → logprob: -15.500428199768066

Token 954: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010592726175673306
    2. '1' → logprob: -9.500105857849121
    3. '0' → logprob: -10.500105857849121
    4. ',
' → logprob: -13.500105857849121
    5. '2' → logprob: -14.125105857849121
    6. ' ,' → logprob: -14.750105857849121
    7. ')' → logprob: -15.375105857849121
    8. '7' → logprob: -16.375106811523438
    9. '(' → logprob: -16.500106811523438
    10. ',
' → logprob: -16.875106811523438

Token 955: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.41866585687967e-06
    2. '2' → logprob: -12.625008583068848
    3. '0' → logprob: -13.000008583068848
    4. ' ' → logprob: -13.750008583068848
    5. '   ' → logprob: -14.750008583068848
    6. '3' → logprob: -15.687508583068848
    7. ')' → logprob: -15.937508583068848
    8. '100' → logprob: -16.31250762939453
    9. '10' → logprob: -16.56250762939453
    10. '```' → logprob: -16.75000762939453

Token 956: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9385402993066236e-05
    2. '0' → logprob: -11.750019073486328
    3. '2' → logprob: -12.250019073486328
    4. ' ' → logprob: -13.125019073486328
    5. '3' → logprob: -14.437519073486328
    6. '(' → logprob: -14.625019073486328
    7. '   ' → logprob: -15.062519073486328
    8. '100' → logprob: -15.125019073486328
    9. 'int' → logprob: -15.250019073486328
    10. 'pow' → logprob: -15.437519073486328

Token 957: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3425219549390022e-05
    2. ')
' → logprob: -11.25001335144043
    3. ' )' → logprob: -16.50001335144043
    4. ')#' → logprob: -17.25001335144043
    5. ')

' → logprob: -17.50001335144043
    6. '),' → logprob: -17.50001335144043
    7. ')`' → logprob: -17.62501335144043
    8. ')
' → logprob: -17.62501335144043
    9. ')}' → logprob: -17.87501335144043
    10. '))' → logprob: -17.87501335144043

Token 958: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 959: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 960: ' Initial' (ID: 9209)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2757342457771301
    2. '#' → logprob: -2.2757341861724854
    3. '<|end|>' → logprob: -2.9007341861724854
    4. ')' → logprob: -4.2757344245910645
    5. ' for' → logprob: -4.5257344245910645
    6. '0' → logprob: -4.7757344245910645
    7. 'x' → logprob: -5.0257344245910645
    8. '```' → logprob: -5.1507344245910645
    9. '
' → logprob: -5.2757344245910645
    10. 'def' → logprob: -5.6507344245910645

Token 961: ' state' (ID: 2608)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 962: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.332694411277771
    2. '       ' → logprob: -1.582694411277771
    3. '               ' → logprob: -3.0826945304870605
    4. '<|end|>' → logprob: -5.0826945304870605
    5. '   ' → logprob: -5.3326945304870605
    6. 'elif' → logprob: -6.2076945304870605
    7. '          ' → logprob: -6.4576945304870605
    8. '        ' → logprob: -6.5826945304870605
    9. '                   ' → logprob: -6.7076945304870605
    10. '+' → logprob: -6.8326945304870605

Token 963: ' one' (ID: 1001)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 964: ' way' (ID: 2006)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 965: ' at' (ID: 540)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 966: ' the' (ID: 290)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02150164730846882
    2. 'index' → logprob: -4.021501541137695
    3. 'position' → logprob: -6.271501541137695
    4. '0' → logprob: -6.771501541137695
    5. 'bit' → logprob: -8.271501541137695
    6. 'coordinate' → logprob: -11.146501541137695
    7. ' ' → logprob: -11.396501541137695
    8. ' index' → logprob: -11.646501541137695
    9. 'pos' → logprob: -12.021501541137695
    10. 'cor' → logprob: -12.146501541137695

Token 967: ' first' (ID: 1577)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7916163802146912
    2. '0' → logprob: -1.291616439819336
    3. '"' → logprob: -1.916616439819336
    4. 'lowest' → logprob: -3.416616439819336
    5. 'position' → logprob: -3.541616439819336
    6. 'index' → logprob: -3.791616439819336
    7. 'zero' → logprob: -3.916616439819336
    8. 'bit' → logprob: -4.791616439819336
    9. 'starting' → logprob: -6.166616439819336
    10. 'base' → logprob: -6.166616439819336

Token 968: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.6048955917358398
    2. 'index' → logprob: -0.9798955917358398
    3. 'coordinate' → logprob: -3.22989559173584
    4. 'bit' → logprob: -3.60489559173584
    5. 'b' → logprob: -5.60489559173584
    6. '1' → logprob: -6.72989559173584
    7. 'compressed' → logprob: -6.85489559173584
    8. '0' → logprob: -6.97989559173584
    9. 'entry' → logprob: -7.10489559173584
    10. 'step' → logprob: -7.35489559173584

Token 969: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09681335091590881
    2. '       ' → logprob: -2.971813440322876
    3. 'elif' → logprob: -4.471813201904297
    4. '               ' → logprob: -4.596813201904297
    5. 'if' → logprob: -4.971813201904297
    6. 'for' → logprob: -5.721813201904297
    7. 'i' → logprob: -6.096813201904297
    8. '   ' → logprob: -6.346813201904297
    9. 'else' → logprob: -6.971813201904297
    10. 'return' → logprob: -7.471813201904297

Token 970: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003416607796680182
    2. '#' → logprob: -9.000341415405273
    3. 'cur' → logprob: -10.125341415405273
    4. 'prev' → logprob: -10.375341415405273
    5. 'def' → logprob: -10.500341415405273
    6. 'current' → logprob: -10.625341415405273
    7. 'max' → logprob: -10.625341415405273
    8. '```' → logprob: -10.625341415405273
    9. 'last' → logprob: -11.750341415405273
    10. 'keys' → logprob: -12.625341415405273

Token 971: ' Main' (ID: 7956)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.034037988632917404
    2. '#' → logprob: -4.909038066864014
    3. 'ans' → logprob: -5.284038066864014
    4. 'dp' → logprob: -6.034038066864014
    5. 'sorted' → logprob: -6.159038066864014
    6. 'max' → logprob: -6.284038066864014
    7. 'def' → logprob: -6.284038066864014
    8. 'last' → logprob: -6.409038066864014
    9. 'keys' → logprob: -6.659038066864014
    10. 'cur' → logprob: -6.659038066864014

Token 972: ' DP' (ID: 51992)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002888682996854186
    2. ' for' → logprob: -6.6278886795043945
    3. 'x' → logprob: -7.5028886795043945
    4. 'a' → logprob: -7.6278886795043945
    5. 'def' → logprob: -9.752888679504395
    6. 'i' → logprob: -9.752888679504395
    7. '=' → logprob: -9.877888679504395
    8. 'ab' → logprob: -10.002888679504395
    9. ')' → logprob: -10.252888679504395
    10. '#' → logprob: -10.252888679504395

Token 973: '-like' (ID: 22085)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05794116482138634
    2. 'dp' → logprob: -3.182941198348999
    3. 'ans' → logprob: -5.55794095993042
    4. 'cur' → logprob: -5.93294095993042
    5. 'res' → logprob: -6.30794095993042
    6. 'a' → logprob: -7.18294095993042
    7. 'ab' → logprob: -7.18294095993042
    8. 'result' → logprob: -7.30794095993042
    9. '#' → logprob: -7.43294095993042
    10. 'from' → logprob: -7.68294095993042

Token 974: ' update' (ID: 4027)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3055376708507538
    2. 'loop' → logprob: -1.4305377006530762
    3. ' loop' → logprob: -3.930537700653076
    4. ' for' → logprob: -6.430537700653076
    5. 'code' → logprob: -6.680537700653076
    6. 'logic' → logprob: -8.055537223815918
    7. '#' → logprob: -8.305537223815918
    8. 'process' → logprob: -9.055537223815918
    9. 'section' → logprob: -9.055537223815918
    10. '_loop' → logprob: -9.180537223815918

Token 975: ' loop' (ID: 11453)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.404745439183898e-05
    2. '
' → logprob: -10.87503433227539
    3. ' for' → logprob: -12.50003433227539
    4. 'keys' → logprob: -12.75003433227539
    5. '```' → logprob: -12.87503433227539
    6. 'a' → logprob: -13.25003433227539
    7. 'prev' → logprob: -14.37503433227539
    8. 'ab' → logprob: -14.37503433227539
    9. 'def' → logprob: -14.62503433227539
    10. 'sorted' → logprob: -14.75003433227539

Token 976: ':' (ID: 25)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.130576806142926e-05
    2. '
' → logprob: -11.375031471252441
    3. '```' → logprob: -11.750031471252441
    4. 'keys' → logprob: -12.375031471252441
    5. 'a' → logprob: -13.250031471252441
    6. ' for' → logprob: -13.375031471252441
    7. 'sorted' → logprob: -13.625031471252441
    8. '   ' → logprob: -13.875031471252441
    9. 'prev' → logprob: -14.875031471252441
    10. 'from' → logprob: -15.000031471252441

Token 977: ' iterate' (ID: 63166)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00025275684311054647
    2. 'keys' → logprob: -8.750252723693848
    3. 'a' → logprob: -10.500252723693848
    4. 'sorted' → logprob: -10.500252723693848
    5. 'prev' → logprob: -11.625252723693848
    6. 'ab' → logprob: -11.875252723693848
    7. ' for' → logprob: -12.250252723693848
    8. 'last' → logprob: -13.250252723693848
    9. 'ans' → logprob: -13.250252723693848
    10. 'items' → logprob: -13.375252723693848

Token 978: ' over' (ID: 1072)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47515955567359924
    2. 'over' → logprob: -0.9751595258712769
    3. ' over' → logprob: -6.975159645080566
    4. 'through' → logprob: -9.350159645080566
    5. '   ' → logprob: -10.600159645080566
    6. ' for' → logprob: -11.350159645080566
    7. 'in' → logprob: -11.600159645080566
    8. 'from' → logprob: -12.475159645080566
    9. 'sorted' → logprob: -12.725159645080566
    10. '
' → logprob: -13.100159645080566

Token 979: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.00016825977945700288
    2. 'a' → logprob: -8.750167846679688
    3. 'range' → logprob: -12.375167846679688
    4. 'ab' → logprob: -12.625167846679688
    5. 'enumer' → logprob: -13.750167846679688
    6. '(sorted' → logprob: -14.625167846679688
    7. ' sorted' → logprob: -16.000167846679688
    8. 'for' → logprob: -16.000167846679688
    9. 'i' → logprob: -16.750167846679688
    10. 're' → logprob: -16.750167846679688

Token 980: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7222836017608643
    2. 'sorted' → logprob: -0.9722836017608643
    3. 'ab' → logprob: -2.0972836017608643
    4. '(sorted' → logprob: -4.847283363342285
    5. 'keys' → logprob: -5.472283363342285
    6. '(ab' → logprob: -7.597283363342285
    7. '(a' → logprob: -7.597283363342285
    8. 'for' → logprob: -8.472283363342285
    9. 'key' → logprob: -11.097283363342285
    10. ' sorted' → logprob: -11.597283363342285

Token 981: ''s' (ID: 885)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0832619667053223
    2. ',' → logprob: -2.2082619667053223
    3. 'for' → logprob: -2.4582619667053223
    4. '_keys' → logprob: -2.5832619667053223
    5. '_items' → logprob: -2.7082619667053223
    6. '_values' → logprob: -2.8332619667053223
    7. ' =' → logprob: -3.0832619667053223
    8. 'in' → logprob: -3.3332619667053223
    9. 's' → logprob: -3.7082619667053223
    10. 'items' → logprob: -3.8332619667053223

Token 982: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0014397578779608011
    2. ' for' → logprob: -7.001439571380615
    3. '
' → logprob: -7.751439571380615
    4. '   ' → logprob: -9.626440048217773
    5. 'prev' → logprob: -11.126440048217773
    6. '       ' → logprob: -12.626440048217773
    7. '```' → logprob: -13.001440048217773
    8. ',' → logprob: -13.251440048217773
    9. ':' → logprob: -13.376440048217773
    10. 'sorted' → logprob: -13.501440048217773

Token 983: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5030383467674255
    2. '   ' → logprob: -1.6280384063720703
    3. '       ' → logprob: -1.8780384063720703
    4. ' for' → logprob: -3.3780384063720703
    5. '           ' → logprob: -5.37803840637207
    6. 'b' → logprob: -6.00303840637207
    7. 'sorted' → logprob: -6.87803840637207
    8. '    ' → logprob: -7.25303840637207
    9. 'keys' → logprob: -7.50303840637207
    10. '```' → logprob: -8.25303840637207

Token 984: ' each' (ID: 2454)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0001761272142175585
    2. ' a' → logprob: -9.375176429748535
    3. 'key' → logprob: -10.750176429748535
    4. 'b' → logprob: -10.875176429748535
    5. 'k' → logprob: -11.500176429748535
    6. '_a' → logprob: -11.500176429748535
    7. 'i' → logprob: -12.250176429748535
    8. 'x' → logprob: -12.375176429748535
    9. 'each' → logprob: -12.625176429748535
    10. '```' → logprob: -13.000176429748535

Token 985: ' update' (ID: 4027)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.012735904194414616
    2. ' a' → logprob: -4.387735843658447
    3. 'k' → logprob: -9.637736320495605
    4. 'b' → logprob: -9.887736320495605
    5. 'key' → logprob: -10.012736320495605
    6. '_a' → logprob: -11.262736320495605
    7. '   ' → logprob: -11.387736320495605
    8. ' key' → logprob: -12.012736320495605
    9. '```' → logprob: -12.137736320495605
    10. 'ab' → logprob: -12.637736320495605

Token 986: ' BIT' (ID: 52185)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0986674353480339
    2. '   ' → logprob: -3.2236673831939697
    3. 'in' → logprob: -3.7236673831939697
    4. ' for' → logprob: -3.8486673831939697
    5. ',' → logprob: -5.848667621612549
    6. 'a' → logprob: -6.098667621612549
    7. ' in' → logprob: -6.223667621612549
    8. '       ' → logprob: -7.473667621612549
    9. '_,' → logprob: -8.34866714477539
    10. 'sorted' → logprob: -8.72366714477539

Token 987: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12231513857841492
    2. '   ' → logprob: -2.6223151683807373
    3. 'in' → logprob: -3.9973151683807373
    4. ':' → logprob: -4.247314929962158
    5. ' for' → logprob: -5.872314929962158
    6. 'keys' → logprob: -6.622314929962158
    7. ',' → logprob: -7.247314929962158
    8. '=' → logprob: -7.372314929962158
    9. '
' → logprob: -7.372314929962158
    10. 'sorted' → logprob: -7.497314929962158

Token 988: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10016913712024689
    2. 'b' → logprob: -2.4751691818237305
    3. 'ab' → logprob: -4.6001691818237305
    4. 'key' → logprob: -8.10016918182373
    5. 'k' → logprob: -8.35016918182373
    6. ' a' → logprob: -9.22516918182373
    7. 'aa' → logprob: -9.72516918182373
    8. 'sorted' → logprob: -9.72516918182373
    9. ' b' → logprob: -10.22516918182373
    10. 'v' → logprob: -10.35016918182373

Token 989: ''s' (ID: 885)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00073197390884161
    2. ' for' → logprob: -8.000732421875
    3. '
' → logprob: -8.375732421875
    4. 'prev' → logprob: -9.375732421875
    5. '   ' → logprob: -10.375732421875
    6. 'sorted' → logprob: -11.750732421875
    7. '=' → logprob: -11.875732421875
    8. ':' → logprob: -12.000732421875
    9. '```' → logprob: -12.500732421875
    10. 'a' → logprob: -12.625732421875

Token 990: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.022315485402941704
    2. '   ' → logprob: -4.147315502166748
    3. ' for' → logprob: -5.272315502166748
    4. '
' → logprob: -7.397315502166748
    5. 'prev' → logprob: -8.39731502532959
    6. 'a' → logprob: -9.27231502532959
    7. '    
' → logprob: -9.52231502532959
    8. ',' → logprob: -10.27231502532959
    9. 'sorted' → logprob: -11.14731502532959
    10. '```' → logprob: -11.14731502532959

Token 991: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.983476436696947e-05
    2. '
' → logprob: -10.125089645385742
    3. 'prev' → logprob: -10.250089645385742
    4. 'last' → logprob: -12.000089645385742
    5. '```' → logprob: -13.375089645385742
    6. 'previous' → logprob: -13.625089645385742
    7. 'sorted' → logprob: -13.625089645385742
    8. 'cur' → logprob: -14.250089645385742
    9. 'a' → logprob: -14.625089645385742
    10. 'current' → logprob: -14.750089645385742

Token 992: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00033677343162707984
    2. ' a' → logprob: -8.375336647033691
    3. 'aa' → logprob: -10.500336647033691
    4. 'key' → logprob: -10.750336647033691
    5. 'A' → logprob: -11.375336647033691
    6. 'k' → logprob: -11.500336647033691
    7. '_a' → logprob: -11.875336647033691
    8. 'i' → logprob: -11.875336647033691
    9. 'x' → logprob: -12.750336647033691
    10. 'cur' → logprob: -13.250336647033691

Token 993: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.055488407611846924
    2. 'in' → logprob: -2.930488348007202
    3. ',' → logprob: -7.555488586425781
    4. 'a' → logprob: -9.930488586425781
    5. '   ' → logprob: -11.055488586425781
    6. '_in' → logprob: -12.180488586425781
    7. ',in' → logprob: -13.305488586425781
    8. 's' → logprob: -13.680488586425781
    9. 'sorted' → logprob: -13.680488586425781
    10. ' ' → logprob: -13.680488586425781

Token 994: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -1.1472419600977446e-06
    2. ' sorted' → logprob: -13.875000953674316
    3. '   ' → logprob: -17.000001907348633
    4. 'ab' → logprob: -17.000001907348633
    5. 'range' → logprob: -17.250001907348633
    6. '(sorted' → logprob: -18.000001907348633
    7. '.sorted' → logprob: -20.750001907348633
    8. 'Sorted' → logprob: -20.875001907348633
    9. '
' → logprob: -21.125001907348633
    10. 'sort' → logprob: -21.250001907348633

Token 995: '(ab' (ID: 115191)
  Prédit: '(ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ab' → logprob: -0.005233763717114925
    2. 'ab' → logprob: -5.2552337646484375
    3. '#ab' → logprob: -16.755233764648438
    4. '_ab' → logprob: -16.880233764648438
    5. '(a' → logprob: -17.630233764648438
    6. 'list' → logprob: -19.130233764648438
    7. '(
' → logprob: -19.130233764648438
    8. ' ab' → logprob: -19.505233764648438
    9. '.ab' → logprob: -20.130233764648438
    10. '(list' → logprob: -20.630233764648438

Token 996: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6349581480026245
    2. '):' → logprob: -0.7599581480026245
    3. '):
' → logprob: -6.759958267211914
    4. '.keys' → logprob: -7.759958267211914
    5. '(ab' → logprob: -8.634958267211914
    6. '   ' → logprob: -8.759958267211914
    7. ')' → logprob: -8.884958267211914
    8. '()):
' → logprob: -9.509958267211914
    9. '):

' → logprob: -9.634958267211914
    10. '(a' → logprob: -10.259958267211914

Token 997: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015203376533463597
    2. ' for' → logprob: -7.501520156860352
    3. 'for' → logprob: -8.001520156860352
    4. '```' → logprob: -8.626520156860352
    5. 'b' → logprob: -9.376520156860352
    6. '       ' → logprob: -10.001520156860352
    7. '#' → logprob: -10.626520156860352
    8. ' b' → logprob: -10.751520156860352
    9. '    
' → logprob: -10.876520156860352
    10. ' ind' → logprob: -11.001520156860352

Token 998: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3761250972747803
    2. 'sum' → logprob: -2.3761250972747803
    3. 'total' → logprob: -2.5011250972747803
    4. 's' → logprob: -2.8761250972747803
    5. 'cur' → logprob: -3.2511250972747803
    6. 'tmp' → logprob: -3.2511250972747803
    7. 'dp' → logprob: -3.5011250972747803
    8. '#' (adapté à ' #') → logprob: -3.6261250972747803
    9. 'prev' → logprob: -3.8761250972747803
    10. 'x' → logprob: -3.8761250972747803

Token 999: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3553930521011353
    2. 'tmp' → logprob: -2.1053929328918457
    3. 'dp' → logprob: -2.4803929328918457
    4. 'sum' → logprob: -2.8553929328918457
    5. 'cur' → logprob: -2.8553929328918457
    6. 's' → logprob: -3.1053929328918457
    7. 'now' → logprob: -3.4803929328918457
    8. 'total' → logprob: -3.4803929328918457
    9. '#' → logprob: -3.8553929328918457
    10. 'temp' → logprob: -3.9803929328918457

Token 1000: ' each' (ID: 2454)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0002390594017924741
    2. 'a' → logprob: -9.250239372253418
    3. 'bb' → logprob: -10.000239372253418
    4. 'ab' → logprob: -10.625239372253418
    5. 'x' → logprob: -11.125239372253418
    6. '_b' → logprob: -11.750239372253418
    7. 'i' → logprob: -11.875239372253418
    8. 'c' → logprob: -12.000239372253418
    9. 'key' → logprob: -12.000239372253418
    10. ' b' → logprob: -12.375239372253418

Token 1001: ' a' (ID: 261)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00029351349803619087
    2. '   ' → logprob: -8.750293731689453
    3. ' b' → logprob: -9.000293731689453
    4. '       ' → logprob: -12.500293731689453
    5. 'a' → logprob: -13.125293731689453
    6. 'bb' → logprob: -13.125293731689453
    7. ' ' → logprob: -14.500293731689453
    8. '           ' → logprob: -14.500293731689453
    9. '```' → logprob: -14.625293731689453
    10. 'ab' → logprob: -15.250293731689453

Token 1002: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2923814058303833
    2. ',' → logprob: -2.2923812866210938
    3. ':' → logprob: -2.5423812866210938
    4. 'in' → logprob: -3.4173812866210938
    5. ' in' → logprob: -3.6673812866210938
    6. ':
' → logprob: -4.917381286621094
    7. '       ' → logprob: -5.042381286621094
    8. 'b' → logprob: -7.167381286621094
    9. 'a' → logprob: -8.292381286621094
    10. '):
' → logprob: -9.542381286621094

Token 1003: ' process' (ID: 2273)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20204411447048187
    2. '   ' → logprob: -1.952044129371643
    3. ' for' → logprob: -4.3270440101623535
    4. 'bs' → logprob: -4.5770440101623535
    5. 'b' → logprob: -5.5770440101623535
    6. 's' → logprob: -6.2020440101623535
    7. 'dp' → logprob: -6.2020440101623535
    8. 'ways' → logprob: -6.2020440101623535
    9. 'vals' → logprob: -6.9520440101623535
    10. 'sum' → logprob: -7.0770440101623535

Token 1004: ' its' (ID: 1617)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.000588417868129909
    2. ' b' → logprob: -7.500588417053223
    3. '   ' → logprob: -10.500588417053223
    4. '       ' → logprob: -12.750588417053223
    5. 'ab' → logprob: -13.125588417053223
    6. '```' → logprob: -14.000588417053223
    7. 'for' → logprob: -14.500588417053223
    8. '
' → logprob: -14.750588417053223
    9. '           ' → logprob: -15.000588417053223
    10. 'bb' → logprob: -15.375588417053223

Token 1005: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.09307517856359482
    2. 'bs' → logprob: -2.4680752754211426
    3. 'set' → logprob: -6.093075275421143
    4. 'values' → logprob: -6.718075275421143
    5. 'sorted' → logprob: -7.718075275421143
    6. 'associated' → logprob: -9.843074798583984
    7. 'cor' → logprob: -10.593074798583984
    8. 'list' → logprob: -10.718074798583984
    9. 'bst' → logprob: -10.843074798583984
    10. ' b' → logprob: -10.968074798583984

Token 1006: ''s' (ID: 885)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.26520836353302
    2. 'in' → logprob: -2.2652082443237305
    3. 'set' → logprob: -2.2652082443237305
    4. '_set' → logprob: -4.1402082443237305
    5. ' in' → logprob: -5.5152082443237305
    6. '_values' → logprob: -6.3902082443237305
    7. 'for' → logprob: -6.7652082443237305
    8. '_list' → logprob: -6.8902082443237305
    9. 'values' → logprob: -7.0152082443237305
    10. 'list' → logprob: -9.01520824432373

Token 1007: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015711134299635887
    2. '       ' → logprob: -4.640711307525635
    3. 'for' → logprob: -5.515711307525635
    4. ':' → logprob: -6.640711307525635
    5. ':
' → logprob: -8.765710830688477
    6. 'b' → logprob: -8.765710830688477
    7. ',' → logprob: -9.140710830688477
    8. ' for' → logprob: -9.890710830688477
    9. '```' → logprob: -10.265710830688477
    10. '    
' → logprob: -11.015710830688477

Token 1008: 'sorted' (ID: 64288)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.14947554469108582
    2. 'for' → logprob: -3.149475574493408
    3. '   ' → logprob: -3.274475574493408
    4. '       ' → logprob: -3.524475574493408
    5. 'in' → logprob: -4.899475574493408
    6. 'ab' → logprob: -5.524475574493408
    7. ')' → logprob: -5.524475574493408
    8. 'sorted' → logprob: -5.524475574493408
    9. '           ' → logprob: -6.649475574493408
    10. ' in' → logprob: -6.649475574493408

Token 1009: ' descending' (ID: 89489)
  Prédit: '()):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()):
' → logprob: -0.936394214630127
    2. '):' → logprob: -1.311394214630127
    3. '()' → logprob: -1.561394214630127
    4. '):
' → logprob: -2.061394214630127
    5. '():' → logprob: -7.936394214630127
    6. '():
' → logprob: -8.311393737792969
    7. '```' → logprob: -8.686393737792969
    8. ')' → logprob: -9.061393737792969
    9. '   ' → logprob: -9.561393737792969
    10. '(b' → logprob: -9.686393737792969

Token 1010: ' to' (ID: 316)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1570141762495041
    2. '   ' → logprob: -2.2820141315460205
    3. '):' → logprob: -4.1570143699646
    4. '()):
' → logprob: -4.1570143699646
    5. '       ' → logprob: -5.2820143699646
    6. '[::-' → logprob: -6.4070143699646
    7. ',' → logprob: -6.6570143699646
    8. '()' → logprob: -6.7820143699646
    9. 'for' → logprob: -7.4070143699646
    10. '```' → logprob: -7.7820143699646

Token 1011: ' avoid' (ID: 8397)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -1.3351391553878784
    2. 'reverse' → logprob: -1.4601391553878784
    3. '   ' → logprob: -1.8351391553878784
    4. 'for' → logprob: -2.460139274597168
    5. '       ' → logprob: -2.585139274597168
    6. '1' → logprob: -3.710139274597168
    7. 'sorted' → logprob: -4.085139274597168
    8. '           ' → logprob: -4.085139274597168
    9. ')' → logprob: -4.335139274597168
    10. ':' → logprob: -4.460139274597168

Token 1012: ' double' (ID: 3503)
  Prédit: ' off'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' off' → logprob: -0.4044530987739563
    2. 'off' → logprob: -1.5294530391693115
    3. '1' → logprob: -3.2794530391693115
    4. 'pos' → logprob: -4.154453277587891
    5. '0' → logprob: -4.279453277587891
    6. 'index' → logprob: -4.904453277587891
    7. 'over' → logprob: -5.029453277587891
    8. 'increment' → logprob: -5.154453277587891
    9. 'len' → logprob: -5.404453277587891
    10. 'offs' → logprob: -6.029453277587891

Token 1013: ' counting' (ID: 43276)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13753385841846466
    2. 'count' → logprob: -2.7625339031219482
    3. '   ' → logprob: -3.1375339031219482
    4. ' for' → logprob: -5.762533664703369
    5. 'loop' → logprob: -5.887533664703369
    6. 'increment' → logprob: -5.887533664703369
    7. 'i' → logprob: -6.137533664703369
    8. 'ind' → logprob: -6.512533664703369
    9. '+=' → logprob: -6.762533664703369
    10. '       ' → logprob: -6.762533664703369

Token 1014: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.11180734634399414
    2. '   ' → logprob: -2.861807346343994
    3. 'for' → logprob: -3.736807346343994
    4. '):' → logprob: -4.111807346343994
    5. '[::-' → logprob: -5.861807346343994
    6. '       ' → logprob: -6.236807346343994
    7. ' for' → logprob: -7.236807346343994
    8. ':' → logprob: -7.736807346343994
    9. ')' → logprob: -7.736807346343994
    10. '():
' → logprob: -8.361806869506836

Token 1015: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015650922432541847
    2. 'for' → logprob: -6.501564979553223
    3. '```' → logprob: -9.876564979553223
    4. ' for' → logprob: -11.876564979553223
    5. '       ' → logprob: -13.001564979553223
    6. 'b' → logprob: -13.376564979553223
    7. ':' → logprob: -15.876564979553223
    8. ',' → logprob: -16.75156593322754
    9. '  ' → logprob: -16.75156593322754
    10. '`' → logprob: -17.00156593322754

Token 1016: ' b' (ID: 287)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09452273696660995
    2. 'bs' → logprob: -3.094522714614868
    3. 'b' (adapté à ' b') → logprob: -4.094522953033447
    4. 'prev' → logprob: -4.594522953033447
    5. '   ' → logprob: -5.094522953033447
    6. 'cur' → logprob: -6.094522953033447
    7. 'last' → logprob: -6.594522953033447
    8. 'lst' → logprob: -7.469522953033447
    9. 'l' → logprob: -7.594522953033447
    10. 'dp' → logprob: -7.719522953033447

Token 1017: 'bb' (ID: 10029)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2137913554906845
    2. 'for' → logprob: -1.8387913703918457
    3. 'in' → logprob: -3.7137913703918457
    4. ' in' → logprob: -5.463791370391846
    5. '=' → logprob: -6.588791370391846
    6. '_list' → logprob: -6.838791370391846
    7. ':' → logprob: -7.713791370391846
    8. ')' → logprob: -7.713791370391846
    9. ',' → logprob: -7.963791370391846
    10. ' for' → logprob: -8.463790893554688

Token 1018: ' =' (ID: 314)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7449803948402405
    2. '=' → logprob: -1.1199803352355957
    3. ' in' → logprob: -1.8699803352355957
    4. ' =' → logprob: -3.3699803352355957
    5. 'for' → logprob: -5.244980335235596
    6. '   ' → logprob: -5.994980335235596
    7. ')' → logprob: -7.244980335235596
    8. 's' → logprob: -7.494980335235596
    9. ',' → logprob: -8.244980812072754
    10. 'b' → logprob: -8.744980812072754

Token 1019: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -5.438573680294212e-06
    2. ' sorted' → logprob: -12.750005722045898
    3. 'list' → logprob: -13.125005722045898
    4. '   ' → logprob: -15.250005722045898
    5. '(sorted' → logprob: -16.2500057220459
    6. '[' → logprob: -17.3750057220459
    7. 'tuple' → logprob: -18.0000057220459
    8. 'sort' → logprob: -19.2500057220459
    9. ' ' → logprob: -20.0000057220459
    10. 're' → logprob: -20.0000057220459

Token 1020: '(map' (ID: 16946)
  Prédit: '(ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ab' → logprob: -0.00408397801220417
    2. 'ab' → logprob: -5.50408411026001
    3. '#ab' → logprob: -12.754083633422852
    4. '_ab' → logprob: -13.129083633422852
    5. ''ab' → logprob: -15.879083633422852
    6. 'list' → logprob: -16.00408363342285
    7. '(
' → logprob: -16.00408363342285
    8. '(list' → logprob: -16.37908363342285
    9. ' ab' → logprob: -16.75408363342285
    10. 'abcd' → logprob: -17.12908363342285

Token 1021: '(c' (ID: 2410)
  Prédit: '(ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ab' → logprob: -0.002164063509553671
    2. 'ab' → logprob: -6.627163887023926
    3. '(c' → logprob: -7.752163887023926
    4. '(cd' → logprob: -8.127163887023926
    5. '(int' → logprob: -10.127163887023926
    6. 'int' → logprob: -11.252163887023926
    7. '#ab' → logprob: -11.502163887023926
    8. '(str' → logprob: -11.627163887023926
    9. '(lambda' → logprob: -11.627163887023926
    10. 'cd' → logprob: -11.627163887023926

Token 1022: 'dg' (ID: 49449)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.21566233038902283
    2. 'cd' → logprob: -1.8406623601913452
    3. 'cor' → logprob: -3.5906622409820557
    4. 'int' → logprob: -5.465662479400635
    5. '(ab' → logprob: -6.340662479400635
    6. 'd' → logprob: -7.590662479400635
    7. 'lambda' → logprob: -7.965662479400635
    8. '(cd' → logprob: -9.090662002563477
    9. 'bb' → logprob: -9.215662002563477
    10. '-ab' → logprob: -9.465662002563477

Token 1023: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.053991321474313736
    2. '(ab' → logprob: -3.5539913177490234
    3. '),' → logprob: -4.178991317749023
    4. 'ab' → logprob: -5.428991317749023
    5. ',b' → logprob: -6.178991317749023
    6. '#ab' → logprob: -7.678991317749023
    7. '   ' → logprob: -8.053991317749023
    8. 'b' → logprob: -8.178991317749023
    9. ' ,' → logprob: -8.303991317749023
    10. '))' → logprob: -8.678991317749023

Token 1024: ' ab' (ID: 692)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -9.960946772480384e-05
    2. ' ab' → logprob: -9.500099182128906
    3. 'list' → logprob: -11.125099182128906
    4. '(ab' → logprob: -12.500099182128906
    5. '#ab' → logprob: -13.125099182128906
    6. '-ab' → logprob: -14.000099182128906
    7. '   ' → logprob: -14.000099182128906
    8. 'sorted' → logprob: -14.375099182128906
    9. '_ab' → logprob: -14.500099182128906
    10. ''ab' → logprob: -15.000099182128906

Token 1025: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -5.466968650580384e-05
    2. 'a' → logprob: -10.125054359436035
    3. '[b' → logprob: -12.125054359436035
    4. ')[' → logprob: -12.625054359436035
    5. '),' → logprob: -13.625054359436035
    6. '(a' → logprob: -13.625054359436035
    7. '   ' → logprob: -13.625054359436035
    8. ')' → logprob: -14.250054359436035
    9. ',' → logprob: -15.625054359436035
    10. 'b' → logprob: -15.750054359436035

Token 1026: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.7058014869689941
    2. ']),' → logprob: -0.7058014869689941
    3. ')),' → logprob: -5.205801486968994
    4. '],' → logprob: -5.330801486968994
    5. ')],' → logprob: -6.830801486968994
    6. ',' → logprob: -7.330801486968994
    7. '   ' → logprob: -8.455801010131836
    8. '       ' → logprob: -9.455801010131836
    9. '']),' → logprob: -9.705801010131836
    10. '           ' → logprob: -10.705801010131836

Token 1027: ' reverse' (ID: 18199)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -4.5491004129871726e-05
    2. ' reverse' → logprob: -10.000045776367188
    3. '   ' → logprob: -17.125045776367188
    4. '(reverse' → logprob: -17.500045776367188
    5. '           ' → logprob: -18.625045776367188
    6. 'Reverse' → logprob: -18.875045776367188
    7. '       ' → logprob: -19.125045776367188
    8. '_reverse' → logprob: -20.250045776367188
    9. '               ' → logprob: -20.500045776367188
    10. '#' → logprob: -21.375045776367188

Token 1028: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.00015824666479602456
    2. '(True' → logprob: -9.375158309936523
    3. 'True' → logprob: -9.750158309936523
    4. '=' → logprob: -11.125158309936523
    5. ' =' → logprob: -16.875158309936523
    6. ')' → logprob: -17.000158309936523
    7. '()' → logprob: -17.000158309936523
    8. '1' → logprob: -17.125158309936523
    9. '```' → logprob: -17.375158309936523
    10. ' True' → logprob: -17.875158309936523

Token 1029: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.7714130282402039
    2. '):
' → logprob: -1.2714130878448486
    3. ')' → logprob: -1.3964130878448486
    4. '):' → logprob: -4.7714128494262695
    5. '   ' → logprob: -6.8964128494262695
    6. ')
' → logprob: -9.52141284942627
    7. '):
' → logprob: -9.64641284942627
    8. '       ' → logprob: -10.39641284942627
    9. ',' → logprob: -10.52141284942627
    10. ':' → logprob: -11.89641284942627

Token 1030: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10562339425086975
    2. 'for' → logprob: -2.480623483657837
    3. ' for' → logprob: -4.355623245239258
    4. '```' → logprob: -5.855623245239258
    5. '       ' → logprob: -7.230623245239258
    6. '
' → logprob: -10.105623245239258
    7. '	for' → logprob: -10.730623245239258
    8. '``' → logprob: -10.730623245239258
    9. '    
' → logprob: -11.605623245239258
    10. ',' → logprob: -12.230623245239258

Token 1031: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.009334789589047432
    2. 'pos' → logprob: -4.884334564208984
    3. '   ' → logprob: -8.134334564208984
    4. '       ' → logprob: -8.134334564208984
    5. 'idx' → logprob: -8.509334564208984
    6. 'cur' → logprob: -8.759334564208984
    7. ' for' → logprob: -8.759334564208984
    8. 'i' → logprob: -8.759334564208984
    9. 'j' → logprob: -9.009334564208984
    10. 'prev' → logprob: -9.509334564208984

Token 1032: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.08674118667840958
    2. 'bb' → logprob: -3.0867412090301514
    3. 'x' → logprob: -4.336740970611572
    4. 'pos' → logprob: -4.961740970611572
    5. 'j' → logprob: -5.711740970611572
    6. 'v' → logprob: -5.961740970611572
    7. 'c' → logprob: -6.086740970611572
    8. 'i' → logprob: -6.211740970611572
    9. 'bbb' → logprob: -6.336740970611572
    10. 'y' → logprob: -6.836740970611572

Token 1033: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14798733592033386
    2. 'in' → logprob: -2.0229873657226562
    3. ')' → logprob: -5.647987365722656
    4. 'b' → logprob: -7.397987365722656
    5. '   ' → logprob: -7.897987365722656
    6. ',' → logprob: -8.272987365722656
    7. ' ' → logprob: -9.022987365722656
    8. '    ' → logprob: -9.647987365722656
    9. '_in' → logprob: -9.897987365722656
    10. '_' → logprob: -10.147987365722656

Token 1034: ' b' (ID: 287)
  Prédit: 'bbb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bbb' → logprob: -0.002286098897457123
    2. 'bit' → logprob: -6.502285957336426
    3. 'b' → logprob: -7.752285957336426
    4. 'bb' → logprob: -8.752285957336426
    5. ' b' → logprob: -9.377285957336426
    6. 'range' → logprob: -9.502285957336426
    7. 'bbbb' → logprob: -10.627285957336426
    8. '   ' → logprob: -12.502285957336426
    9. ' bit' → logprob: -13.627285957336426
    10. 'aaa' → logprob: -13.877285957336426

Token 1035: 'bb' (ID: 10029)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1321122646331787
    2. 'in' → logprob: -1.3821122646331787
    3. ' in' → logprob: -1.6321122646331787
    4. '       ' → logprob: -2.6321122646331787
    5. ':' → logprob: -2.7571122646331787
    6. '   ' → logprob: -3.1321122646331787
    7. ':
' → logprob: -4.007112503051758
    8. '+' → logprob: -5.132112503051758
    9. '1' → logprob: -5.257112503051758
    10. ' ' → logprob: -5.882112503051758

Token 1036: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8391737937927246
    2. ':
' → logprob: -1.0891737937927246
    3. '       ' → logprob: -1.5891737937927246
    4. '):
' → logprob: -4.464173793792725
    5. ',' → logprob: -4.714173793792725
    6. '   ' → logprob: -5.339173793792725
    7. '<|end|>' → logprob: -7.464173793792725
    8. '+' → logprob: -8.214174270629883
    9. '):' → logprob: -8.214174270629883
    10. '.' → logprob: -9.089174270629883

Token 1037: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03677407279610634
    2. 'sum' → logprob: -4.286774158477783
    3. 's' → logprob: -4.786774158477783
    4. 'x' → logprob: -4.911774158477783
    5. 'count' → logprob: -6.161774158477783
    6. 'val' → logprob: -7.286774158477783
    7. 'prev' → logprob: -7.661774158477783
    8. 'r' → logprob: -8.036773681640625
    9. 'cnt' → logprob: -8.036773681640625
    10. 'v' → logprob: -8.161773681640625

Token 1038: ' #' (ID: 1069)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.531205177307129
    2. 's' → logprob: -1.656205177307129
    3. 'v' → logprob: -2.281205177307129
    4. 'cur' → logprob: -2.531205177307129
    5. 'sum' → logprob: -2.781205177307129
    6. 'ways' → logprob: -2.906205177307129
    7. 'dp' → logprob: -2.906205177307129
    8. 'x' → logprob: -3.281205177307129
    9. 'tmp' → logprob: -3.656205177307129
    10. 'now' → logprob: -4.031205177307129

Token 1039: ' Count' (ID: 6789)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0361324548721313
    2. 'x' → logprob: -2.536132335662842
    3. 'v' → logprob: -2.536132335662842
    4. 'cur' → logprob: -2.661132335662842
    5. 'val' → logprob: -2.661132335662842
    6. 'sum' → logprob: -2.661132335662842
    7. 'now' → logprob: -3.411132335662842
    8. 'tmp' → logprob: -3.536132335662842
    9. 'ways' → logprob: -3.661132335662842
    10. 'bit' → logprob: -3.911132335662842

Token 1040: ' number' (ID: 2086)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.9328104853630066
    2. '=' → logprob: -1.6828105449676514
    3. ' =' → logprob: -1.9328105449676514
    4. 'cur' → logprob: -3.1828105449676514
    5. ' ways' → logprob: -3.1828105449676514
    6. 'cnt' → logprob: -3.5578105449676514
    7. 's' → logprob: -3.6828105449676514
    8. 'sum' → logprob: -3.9328105449676514
    9. 'res' → logprob: -4.307810306549072
    10. 'dp' → logprob: -4.432810306549072

Token 1041: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06259717792272568
    2. ' =' → logprob: -3.5625972747802734
    3. '       ' → logprob: -3.6875972747802734
    4. ')' → logprob: -6.562597274780273
    5. '(' → logprob: -7.187597274780273
    6. '           ' → logprob: -7.312597274780273
    7. '        ' → logprob: -7.437597274780273
    8. '(bit' → logprob: -7.687597274780273
    9. 'of' → logprob: -7.812597274780273
    10. '   ' → logprob: -8.187597274780273

Token 1042: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.009784892201423645
    2. ' ways' → logprob: -4.759784698486328
    3. 'res' → logprob: -7.884784698486328
    4. 'w' → logprob: -8.759784698486328
    5. 's' → logprob: -8.884784698486328
    6. 'pos' → logprob: -8.884784698486328
    7. 'way' → logprob: -9.884784698486328
    8. 'idx' → logprob: -10.259784698486328
    9. 'x' → logprob: -10.384784698486328
    10. 'dp' → logprob: -10.759784698486328

Token 1043: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01276214700192213
    2. ' =' → logprob: -4.387762069702148
    3. '       ' → logprob: -9.012762069702148
    4. ',' → logprob: -10.137762069702148
    5. 'to' → logprob: -10.387762069702148
    6. 'ways' → logprob: -10.762762069702148
    7. ')' → logprob: -11.887762069702148
    8. 'way' → logprob: -12.762762069702148
    9. 'count' → logprob: -12.762762069702148
    10. 'from' → logprob: -13.012762069702148

Token 1044: ' reach' (ID: 7627)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.17716428637504578
    2. 'add' → logprob: -2.677164316177368
    3. 'pos' → logprob: -3.677164316177368
    4. 'b' → logprob: -3.802164316177368
    5. 'find' → logprob: -4.427164077758789
    6. 'get' → logprob: -4.427164077758789
    7. 'query' → logprob: -4.677164077758789
    8. 'sum' → logprob: -5.177164077758789
    9. '
' → logprob: -7.302164077758789
    10. ' bit' → logprob: -7.427164077758789

Token 1045: ' up' (ID: 869)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0031963700894266367
    2. 'bit' → logprob: -6.2531962394714355
    3. ' b' → logprob: -6.8781962394714355
    4. '1' → logprob: -9.628196716308594
    5. 'pos' → logprob: -9.878196716308594
    6. ' bit' → logprob: -10.628196716308594
    7. '(b' → logprob: -11.128196716308594
    8. '       ' → logprob: -11.378196716308594
    9. 'next' → logprob: -11.503196716308594
    10. 'the' → logprob: -11.628196716308594

Token 1046: ' to' (ID: 316)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.08784618228673935
    2. 'os' → logprob: -3.587846279144287
    3. '       ' → logprob: -3.587846279144287
    4. 'to' → logprob: -4.212846279144287
    5. 'pos' → logprob: -4.962846279144287
    6. 'bit' → logprob: -6.337846279144287
    7. '+=' → logprob: -7.087846279144287
    8. ' b' → logprob: -7.462846279144287
    9. '=' → logprob: -7.837846279144287
    10. 'o' → logprob: -8.212845802307129

Token 1047: ' (' (ID: 350)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.000146687583765015
    2. 'bit' → logprob: -9.500146865844727
    3. ' b' → logprob: -9.625146865844727
    4. '       ' → logprob: -12.750146865844727
    5. '           ' → logprob: -14.375146865844727
    6. '   ' → logprob: -14.375146865844727
    7. '(b' → logprob: -14.875146865844727
    8. ' bit' → logprob: -15.500146865844727
    9. '```' → logprob: -15.625146865844727
    10. '`' → logprob: -15.750146865844727

Token 1048: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.000264315924141556
    2. 'bit' → logprob: -8.250264167785645
    3. ' b' → logprob: -13.375264167785645
    4. 'a' → logprob: -14.500264167785645
    5. '   ' → logprob: -16.25026512145996
    6. ')b' → logprob: -16.25026512145996
    7. '```' → logprob: -16.25026512145996
    8. '
' → logprob: -16.50026512145996
    9. ')' → logprob: -16.62526512145996
    10. '(b' → logprob: -17.00026512145996

Token 1049: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.28415021300315857
    2. '-' → logprob: -1.409150242805481
    3. ')' → logprob: -5.909150123596191
    4. '       ' → logprob: -9.284150123596191
    5. '           ' → logprob: -9.659150123596191
    6. '```' → logprob: -11.159150123596191
    7. '1' → logprob: -11.284150123596191
    8. 'b' → logprob: -11.409150123596191
    9. ' )' → logprob: -11.409150123596191
    10. ' ' → logprob: -11.409150123596191

Token 1050: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. '2' → logprob: -13.000003814697266
    3. ' ' → logprob: -13.750003814697266
    4. '```' → logprob: -16.500003814697266
    5. '   ' → logprob: -16.625003814697266
    6. '           ' → logprob: -17.375003814697266
    7. ')' → logprob: -18.250003814697266
    8. '       ' → logprob: -18.375003814697266
    9. '`' → logprob: -19.500003814697266
    10. '
' → logprob: -19.875003814697266

Token 1051: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7954958821064793e-05
    2. '2' → logprob: -11.125018119812012
    3. ' ' → logprob: -12.875018119812012
    4. '```' → logprob: -15.875018119812012
    5. '   ' → logprob: -16.000017166137695
    6. '3' → logprob: -16.625017166137695
    7. '           ' → logprob: -17.375017166137695
    8. ')' → logprob: -17.437517166137695
    9. '       ' → logprob: -17.875017166137695
    10. '0' → logprob: -18.250017166137695

Token 1052: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006382926367223263
    2. ')
' → logprob: -6.006382942199707
    3. '+' → logprob: -7.131382942199707
    4. ')+' → logprob: -7.131382942199707
    5. '       ' → logprob: -7.506382942199707
    6. '):
' → logprob: -7.881382942199707
    7. '           ' → logprob: -8.006382942199707
    8. ' +' → logprob: -8.381382942199707
    9. ')<<' → logprob: -8.381382942199707
    10. '):' → logprob: -8.756382942199707

Token 1053: ' and' (ID: 326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9748511910438538
    2. '1' → logprob: -1.474851131439209
    3. ' s' → logprob: -2.474851131439209
    4. ' bit' → logprob: -2.599851131439209
    5. '       ' → logprob: -2.849851131439209
    6. '0' → logprob: -2.974851131439209
    7. 'bit' → logprob: -3.224851131439209
    8. ' ' → logprob: -3.224851131439209
    9. 's' → logprob: -4.474851131439209
    10. 'sum' → logprob: -4.974851131439209

Token 1054: ' add' (ID: 1147)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.1301133930683136
    2. 'add' → logprob: -2.255113363265991
    3. 'x' → logprob: -5.50511360168457
    4. '#' → logprob: -5.75511360168457
    5. '       ' → logprob: -5.88011360168457
    6. 'b' → logprob: -6.75511360168457
    7. 'then' → logprob: -6.88011360168457
    8. 'val' → logprob: -7.25511360168457
    9. 'increment' → logprob: -7.50511360168457
    10. '           ' → logprob: -7.63011360168457

Token 1055: ' that' (ID: 484)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.2321041077375412
    2. ' bit' → logprob: -2.7321040630340576
    3. '1' → logprob: -2.8571040630340576
    4. '(' → logprob: -3.2321040630340576
    5. '(bit' → logprob: -3.6071040630340576
    6. ' (' → logprob: -5.357104301452637
    7. '       ' → logprob: -5.482104301452637
    8. ')' → logprob: -6.107104301452637
    9. 'b' → logprob: -6.232104301452637
    10. '           ' → logprob: -6.607104301452637

Token 1056: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4034744203090668
    2. ' to' → logprob: -1.9034744501113892
    3. ',' → logprob: -2.7784743309020996
    4. 'to' → logprob: -2.9034743309020996
    5. 'token' → logprob: -4.5284743309021
    6. '       ' → logprob: -4.9034743309021
    7. ')
' → logprob: -5.1534743309021
    8. 'tokens' → logprob: -5.5284743309021
    9. '*' → logprob: -5.6534743309021
    10. '+' → logprob: -5.6534743309021

Token 1057: ' position' (ID: 4010)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.0343405045568943
    2. 'b' → logprob: -3.4093406200408936
    3. 'the' → logprob: -7.9093403816223145
    4. ' bit' → logprob: -8.159340858459473
    5. 'self' → logprob: -11.284340858459473
    6. ' b' → logprob: -12.034340858459473
    7. 'position' → logprob: -12.034340858459473
    8. '1' → logprob: -12.909340858459473
    9. '   ' → logprob: -13.159340858459473
    10. 'pos' → logprob: -13.284340858459473

Token 1058: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0019181682728230953
    2. '(b' → logprob: -6.626918315887451
    3. ' b' → logprob: -7.501918315887451
    4. '(' → logprob: -10.751917839050293
    5. '(
' → logprob: -12.376917839050293
    6. ' (' → logprob: -12.751917839050293
    7. '   ' → logprob: -13.001917839050293
    8. ')b' → logprob: -13.376917839050293
    9. '       ' → logprob: -13.501917839050293
    10. '```' → logprob: -13.626917839050293

Token 1059: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007300279103219509
    2. 'bit' → logprob: -5.75730037689209
    3. '(bit' → logprob: -7.13230037689209
    4. ' bit' → logprob: -7.25730037689209
    5. ',' → logprob: -7.38230037689209
    6. '):
' → logprob: -8.00730037689209
    7. ')' → logprob: -8.00730037689209
    8. '        
' → logprob: -8.75730037689209
    9. ' in' → logprob: -9.00730037689209
    10. ':' → logprob: -9.00730037689209

Token 1060: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29343554377555847
    2. 'bit' → logprob: -1.4184355735778809
    3. ' bit' → logprob: -5.293435573577881
    4. '```' → logprob: -5.918435573577881
    5. '           ' → logprob: -6.543435573577881
    6. 'ways' → logprob: -7.168435573577881
    7. 'count' → logprob: -7.293435573577881
    8. '(bit' → logprob: -7.918435573577881
    9. 'sum' → logprob: -8.418435096740723
    10. 's' → logprob: -8.668435096740723

Token 1061: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' (adapté à ' bit') → logprob: -0.19271042943000793
    2. 'ways' → logprob: -2.5677103996276855
    3. 's' → logprob: -3.4427103996276855
    4. 'sum' → logprob: -3.6927103996276855
    5. 'count' → logprob: -4.0677103996276855
    6. 'cnt' → logprob: -5.1927103996276855
    7. 'dp' → logprob: -5.9427103996276855
    8. 'b' → logprob: -5.9427103996276855
    9. ' bit' → logprob: -6.0677103996276855
    10. 'val' → logprob: -6.4427103996276855

Token 1062: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.000797119690105319
    2. '.sum' → logprob: -7.750797271728516
    3. 'sum' → logprob: -8.125797271728516
    4. '.' → logprob: -9.875797271728516
    5. 'add' → logprob: -11.750797271728516
    6. ').' → logprob: -12.625797271728516
    7. '`.' → logprob: -13.500797271728516
    8. ' .' → logprob: -13.625797271728516
    9. '```' → logprob: -13.625797271728516
    10. '   ' → logprob: -13.875797271728516

Token 1063: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.00015121731848921627
    2. '(' → logprob: -9.000151634216309
    3. 'b' → logprob: -10.625151634216309
    4. '(
' → logprob: -13.250151634216309
    5. ' b' → logprob: -13.875151634216309
    6. '	b' → logprob: -15.250151634216309
    7. ',b' → logprob: -15.625151634216309
    8. ')b' → logprob: -15.750151634216309
    9. '```' → logprob: -16.375150680541992
    10. ' (' → logprob: -16.750150680541992

Token 1064: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6484114527702332
    2. ',' → logprob: -1.023411512374878
    3. ' -' → logprob: -2.148411512374878
    4. ' ,' → logprob: -7.523411273956299
    5. ',b' → logprob: -7.898411273956299
    6. 'b' → logprob: -9.148411750793457
    7. '   ' → logprob: -10.898411750793457
    8. ',
' → logprob: -11.273411750793457
    9. '       ' → logprob: -11.398411750793457
    10. '           ' → logprob: -12.023411750793457

Token 1065: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.0003034074034076184
    2. ' bit' → logprob: -8.625303268432617
    3. '(bit' → logprob: -9.000303268432617
    4. '   ' → logprob: -16.250303268432617
    5. '-bit' → logprob: -17.125303268432617
    6. 'bits' → logprob: -17.375303268432617
    7. '.bit' → logprob: -17.375303268432617
    8. '(' → logprob: -17.500303268432617
    9. '_bit' → logprob: -18.000303268432617
    10. '           ' → logprob: -18.375303268432617

Token 1066: '.sum' (ID: 35381)
  Prédit: '.sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sum' → logprob: -5.438573680294212e-06
    2. 'sum' → logprob: -12.875005722045898
    3. '.' → logprob: -13.000005722045898
    4. ').' → logprob: -15.500005722045898
    5. ' .' → logprob: -15.875005722045898
    6. ' sum' → logprob: -16.6250057220459
    7. '(sum' → logprob: -16.8750057220459
    8. '.add' → logprob: -17.0000057220459
    9. '	sum' → logprob: -17.5000057220459
    10. '.bit' → logprob: -17.7500057220459

Token 1067: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.000146687583765015
    2. 'b' → logprob: -9.250146865844727
    3. '(' → logprob: -10.375146865844727
    4. ')' → logprob: -11.625146865844727
    5. ' b' → logprob: -12.375146865844727
    6. ' (' → logprob: -12.750146865844727
    7. ')b' → logprob: -13.000146865844727
    8. '```' → logprob: -15.000146865844727
    9. '(
' → logprob: -15.375146865844727
    10. '((' → logprob: -16.000146865844727

Token 1068: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07724035531282425
    2. ' -' → logprob: -3.077240467071533
    3. 'b' → logprob: -3.577240467071533
    4. ')' → logprob: -8.702239990234375
    5. ' b' → logprob: -9.202239990234375
    6. '1' → logprob: -11.577239990234375
    7. ')-' → logprob: -12.327239990234375
    8. '-)' → logprob: -12.827239990234375
    9. '-b' → logprob: -13.702239990234375
    10. '```' → logprob: -13.827239990234375

Token 1069: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.62500286102295
    3. '2' → logprob: -14.75000286102295
    4. '```' → logprob: -14.75000286102295
    5. ')' → logprob: -15.43750286102295
    6. '   ' → logprob: -16.062501907348633
    7. '0' → logprob: -17.250001907348633
    8. '       ' → logprob: -17.687501907348633
    9. '`' → logprob: -17.812501907348633
    10. '<|end|>' → logprob: -18.062501907348633

Token 1070: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.25
    3. '```' → logprob: -16.875
    4. '2' → logprob: -17.375
    5. ')' → logprob: -17.75
    6. '0' → logprob: -18.25
    7. '<|end|>' → logprob: -18.625
    8. '   ' → logprob: -18.6875
    9. '[' → logprob: -20.0625
    10. '  ' → logprob: -20.4375

Token 1071: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.017278965562582016
    2. ')' → logprob: -4.142279148101807
    3. '+' → logprob: -7.392279148101807
    4. '))
' → logprob: -8.017278671264648
    5. ' +' → logprob: -8.642278671264648
    6. ')+' → logprob: -9.767278671264648
    7. ')))' → logprob: -10.892278671264648
    8. '       ' → logprob: -11.392278671264648
    9. ')
' → logprob: -11.392278671264648
    10. ' ))' → logprob: -11.517278671264648

Token 1072: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1073: ' Output' (ID: 18315)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.012315735220909119
    2. 'result' → logprob: -5.38731575012207
    3. 'ans' → logprob: -5.63731575012207
    4. 'answer' → logprob: -5.76231575012207
    5. 'res' → logprob: -7.13731575012207
    6. '```' → logprob: -9.13731575012207
    7. '#' → logprob: -10.76231575012207
    8. 'total' → logprob: -11.76231575012207
    9. 'r' → logprob: -11.88731575012207
    10. 'ret' → logprob: -12.01231575012207

Token 1074: ' the' (ID: 290)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00016706773021724075
    2. '```' → logprob: -8.875166893005371
    3. '
' → logprob: -11.000166893005371
    4. '``' → logprob: -11.500166893005371
    5. ' print' → logprob: -16.000167846679688
    6. '#' → logprob: -17.250167846679688
    7. '`
' → logprob: -17.750167846679688
    8. '#print' → logprob: -18.000167846679688
    9. '  
' → logprob: -18.125167846679688
    10. '`' → logprob: -18.500167846679688

Token 1075: ' total' (ID: 3609)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002977941185235977
    2. 'result' → logprob: -5.8779778480529785
    3. 'answer' → logprob: -8.877978324890137
    4. '```' → logprob: -11.127978324890137
    5. 'ans' → logprob: -11.877978324890137
    6. 'res' → logprob: -12.377978324890137
    7. ' print' → logprob: -13.002978324890137
    8. 'total' → logprob: -13.502978324890137
    9. '#' → logprob: -13.627978324890137
    10. 'final' → logprob: -14.127978324890137

Token 1076: ' number' (ID: 2086)
  Prédit: '(bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(bit' → logprob: -0.3153209090232849
    2. 'bit' → logprob: -1.8153209686279297
    3. 'print' → logprob: -2.5653209686279297
    4. '```' → logprob: -3.5653209686279297
    5. '(len' → logprob: -6.81532096862793
    6. '``' → logprob: -7.94032096862793
    7. 'sum' → logprob: -8.56532096862793
    8. '(sum' → logprob: -8.69032096862793
    9. '(' → logprob: -9.31532096862793
    10. '(
' → logprob: -9.44032096862793

Token 1077: ' of' (ID: 328)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0020735294092446566
    2. '(print' → logprob: -7.377073764801025
    3. '```' → logprob: -7.752073764801025
    4. '(' → logprob: -8.127073287963867
    5. ' =' → logprob: -8.502073287963867
    6. '=' → logprob: -8.502073287963867
    7. '
' → logprob: -8.502073287963867
    8. '(
' → logprob: -9.877073287963867
    9. 'result' → logprob: -11.502073287963867
    10. '()
' → logprob: -11.877073287963867

Token 1078: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -2.696889623621246e-06
    2. ' ways' → logprob: -12.87500286102295
    3. '```' → logprob: -18.125001907348633
    4. '#' → logprob: -18.375001907348633
    5. 'paths' → logprob: -19.250001907348633
    6. 'valid' → logprob: -19.375001907348633
    7. 'answers' → logprob: -19.875001907348633
    8. 'way' → logprob: -20.125001907348633
    9. 'possible' → logprob: -20.250001907348633
    10. 'WAYS' → logprob: -20.250001907348633

Token 1079: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005934013053774834
    2. '```' → logprob: -5.130934238433838
    3. '``' → logprob: -12.88093376159668
    4. ' print' → logprob: -13.13093376159668
    5. '
' → logprob: -15.00593376159668
    6. ',' → logprob: -15.50593376159668
    7. '`' → logprob: -16.00593376159668
    8. 'result' → logprob: -17.25593376159668
    9. '\' → logprob: -17.75593376159668
    10. '(print' → logprob: -17.75593376159668

Token 1080: ' the' (ID: 290)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.08243945986032486
    2. 'print' → logprob: -2.582439422607422
    3. 'coordinates' → logprob: -6.332439422607422
    4. 'b' → logprob: -7.582439422607422
    5. 'ways' → logprob: -7.957439422607422
    6. 'len' → logprob: -8.457439422607422
    7. 'n' → logprob: -8.457439422607422
    8. 'positions' → logprob: -8.832439422607422
    9. 'coordinate' → logprob: -9.457439422607422
    10. '#' → logprob: -9.957439422607422

Token 1081: ' largest' (ID: 10574)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.625442624092102
    2. 'len' → logprob: -1.000442624092102
    3. 'max' → logprob: -2.6254425048828125
    4. 'last' → logprob: -4.7504425048828125
    5. 'largest' → logprob: -5.1254425048828125
    6. 'print' → logprob: -5.8754425048828125
    7. 'maximum' → logprob: -6.1254425048828125
    8. 'full' → logprob: -7.0004425048828125
    9. 'coordinates' → logprob: -7.0004425048828125
    10. 'n' → logprob: -7.1254425048828125

Token 1082: ' position' (ID: 4010)
  Prédit: 'coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coordinate' → logprob: -0.2786850333213806
    2. 'cor' → logprob: -2.2786850929260254
    3. 'coordinates' → logprob: -2.2786850929260254
    4. 'b' → logprob: -3.5286850929260254
    5. 'bit' → logprob: -5.153685092926025
    6. 'co' → logprob: -6.028685092926025
    7. '
' → logprob: -8.278684616088867
    8. 'index' → logprob: -8.903684616088867
    9. '```' → logprob: -9.028684616088867
    10. '(co' → logprob: -9.403684616088867

Token 1083: ' in' (ID: 306)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008622255176305771
    2. '```' → logprob: -4.758622169494629
    3. '
' → logprob: -12.633622169494629
    4. '``' → logprob: -13.258622169494629
    5. ' print' → logprob: -14.008622169494629
    6. ',' → logprob: -14.633622169494629
    7. '(print' → logprob: -14.883622169494629
    8. '1' → logprob: -15.008622169494629
    9. 'bit' → logprob: -15.383622169494629
    10. '`' → logprob: -16.133623123168945

Token 1084: ' BIT' (ID: 52185)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.009814172983169556
    2. 'coordinates' → logprob: -4.759814262390137
    3. 'the' → logprob: -6.759814262390137
    4. 'cor' → logprob: -10.884814262390137
    5. '`' → logprob: -11.259814262390137
    6. '```' → logprob: -12.884814262390137
    7. 'coordinate' → logprob: -13.134814262390137
    8. 'bits' → logprob: -13.884814262390137
    9. 'bitr' → logprob: -14.259814262390137
    10. 'BIT' → logprob: -14.884814262390137

Token 1085: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0015448570484295487
    2. '```' → logprob: -6.501544952392578
    3. '
' → logprob: -10.126544952392578
    4. '``' → logprob: -13.001544952392578
    5. ' print' → logprob: -16.251544952392578
    6. '(print' → logprob: -16.876544952392578
    7. '  
' → logprob: -17.126544952392578
    8. '`' → logprob: -17.626544952392578
    9. 'printf' → logprob: -17.876544952392578
    10. '
' → logprob: -17.876544952392578

Token 1086: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003361774142831564
    2. '```' → logprob: -8.000336647033691
    3. '``' → logprob: -14.375336647033691
    4. ' print' → logprob: -16.375335693359375
    5. '
' → logprob: -17.250335693359375
    6. '`' → logprob: -19.750335693359375
    7. '  
' → logprob: -20.500335693359375
    8. '    
' → logprob: -21.000335693359375
    9. '#print' → logprob: -22.250335693359375
    10. 'printf' → logprob: -22.250335693359375

Token 1087: '(bit' (ID: 123258)
  Prédit: '(bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bit' → logprob: -0.03804229199886322
    2. 'bit' → logprob: -3.2880423069000244
    3. '((' → logprob: -15.163042068481445
    4. '```' → logprob: -16.038042068481445
    5. ' bit' → logprob: -16.163042068481445
    6. '.bit' → logprob: -16.413042068481445
    7. '(bits' → logprob: -17.288042068481445
    8. '_bit' → logprob: -17.538042068481445
    9. '(b' → logprob: -17.538042068481445
    10. '(' → logprob: -17.538042068481445

Token 1088: '.sum' (ID: 35381)
  Prédit: '.size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.00020115631923545152
    2. '.sum' → logprob: -9.375201225280762
    3. ').' → logprob: -10.000201225280762
    4. '.bit' → logprob: -10.500201225280762
    5. '.' → logprob: -11.375201225280762
    6. '.length' → logprob: -12.000201225280762
    7. '.len' → logprob: -12.000201225280762
    8. ')' → logprob: -12.125201225280762
    9. '.tree' → logprob: -12.500201225280762
    10. ' .' → logprob: -12.625201225280762

Token 1089: '(bit' (ID: 123258)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.3905116319656372
    2. '(bit' → logprob: -1.1405116319656372
    3. 'bit' → logprob: -6.015511512756348
    4. 'len' → logprob: -6.765511512756348
    5. ')' → logprob: -10.515511512756348
    6. '[len' → logprob: -12.890511512756348
    7. '(' → logprob: -13.140511512756348
    8. ' bit' → logprob: -13.265511512756348
    9. ' len' → logprob: -13.265511512756348
    10. '```' → logprob: -13.390511512756348

Token 1090: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -2.935296834039036e-06
    2. 'size' → logprob: -12.87500286102295
    3. '.bit' → logprob: -15.12500286102295
    4. '.length' → logprob: -16.625003814697266
    5. ' .' → logprob: -17.500003814697266
    6. '.' → logprob: -17.500003814697266
    7. ').' → logprob: -17.875003814697266
    8. '.tree' → logprob: -18.250003814697266
    9. ' size' → logprob: -18.750003814697266
    10. '.count' → logprob: -19.000003814697266

Token 1091: '))' (ID: 915)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6208616495132446
    2. ')' → logprob: -1.8708616495132446
    3. '))' → logprob: -1.8708616495132446
    4. '-' → logprob: -1.8708616495132446
    5. ')-' → logprob: -7.870861530303955
    6. ' ))' → logprob: -9.620862007141113
    7. ' )' → logprob: -10.245862007141113
    8. '),' → logprob: -11.620862007141113
    9. ')))' → logprob: -11.745862007141113
    10. '-)' → logprob: -11.995862007141113


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1089
Tokens correctement prédits (1ère position, stricte): 312
Tokens correctement prédits (1ère position, avec adaptation): 338
Tokens correctement prédits (top 10): 729
Précision stricte (1ère position): 28.65%
Précision adaptée (1ère position): 31.04%
Précision (top 10): 66.94%
================================================================================
