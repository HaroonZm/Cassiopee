================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:39:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def EcHo(MESSAGE):
    sys.stdout.write(str(MESSAGE) + '\n')

def Ψ():
    return int(sys.stdin.readline())

def ɴum_cruncher(z):
    if z & 1 ^ 1:
        EcHo(z >> 1 - 1)
    else:
        EcHo((z - 1) // 2)

def __wner():
    fancy_num = Ψ()
    ɴum_cruncher(fancy_num)

__name__ == "__main__" and __wner()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.044441498816013336
    2. '\n' → logprob: -3.9194414615631104
    3. 'import' → logprob: -4.5444416999816895
    4. '<|end|>' → logprob: -5.0444416999816895
    5. '\' → logprob: -6.4194416999816895
    6. 'newline' → logprob: -6.7944416999816895
    7. '<|end|>' → logprob: -7.2944416999816895
    8. '' → logprob: -7.6694416999816895
    9. '[' → logprob: -7.6694416999816895
    10. ',' → logprob: -7.9194416999816895

Token 4: ' Ec' (ID: 40226)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.27202650904655457
    2. ' process' → logprob: -2.647026538848877
    3. ' read' → logprob: -3.022026538848877
    4. ' space' → logprob: -3.397026538848877
    5. ' main' → logprob: -3.772026538848877
    6. ' calculate' → logprob: -4.772026538848877
    7. ' my' → logprob: -5.022026538848877
    8. ' sys' → logprob: -5.272026538848877
    9. ' ' → logprob: -5.522026538848877
    10. ' def' → logprob: -5.772026538848877

Token 5: 'Ho' (ID: 26597)
  Prédit: 'ho'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ho' → logprob: -0.24618053436279297
    2. 'o' → logprob: -2.996180534362793
    3. ' def' → logprob: -3.121180534362793
    4. 'ode' → logprob: -3.371180534362793
    5. 'def' → logprob: -3.371180534362793
    6. 'h' → logprob: -4.121180534362793
    7. '_' → logprob: -5.246180534362793
    8. ' o' → logprob: -5.621180534362793
    9. 'e' → logprob: -5.871180534362793
    10. 'x' → logprob: -5.996180534362793

Token 6: '(M' (ID: 6103)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004943170119076967
    2. ' (' → logprob: -5.504943370819092
    3. ':' → logprob: -8.379942893981934
    4. '):' → logprob: -8.629942893981934
    5. '():' → logprob: -9.004942893981934
    6. '('' → logprob: -9.629942893981934
    7. ' ' → logprob: -10.004942893981934
    8. ' :' → logprob: -10.504942893981934
    9. '```' → logprob: -10.504942893981934
    10. '("' → logprob: -10.754942893981934

Token 7: 'ESSAGE' (ID: 21074)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06972099095582962
    2. ')' → logprob: -3.444720983505249
    3. 's' → logprob: -3.569720983505249
    4. 'a' → logprob: -5.569721221923828
    5. 'u' → logprob: -7.819721221923828
    6. 'o' → logprob: -7.819721221923828
    7. ' ):' → logprob: -7.944721221923828
    8. ',' → logprob: -8.194721221923828
    9. ':' → logprob: -8.194721221923828
    10. '_' → logprob: -8.444721221923828

Token 8: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004369478672742844
    2. ')' → logprob: -5.504369258880615
    3. ':' → logprob: -8.254369735717773
    4. ' ):' → logprob: -11.504369735717773
    5. ',' → logprob: -12.254369735717773
    6. '):
' → logprob: -12.629369735717773
    7. '   ' → logprob: -12.754369735717773
    8. '=' → logprob: -13.129369735717773
    9. '[' → logprob: -13.254369735717773
    10. ' ' → logprob: -14.004369735717773

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011618424206972122
    2. '(' → logprob: -5.011618614196777
    3. ' return' → logprob: -6.511618614196777
    4. ')' → logprob: -6.636618614196777
    5. ':' → logprob: -7.886618614196777
    6. ' ' → logprob: -8.011618614196777
    7. ' )' → logprob: -8.136618614196777
    8. ' print' → logprob: -8.386618614196777
    9. '    
' → logprob: -8.511618614196777
    10. '    ' → logprob: -9.011618614196777

Token 10: ' sys' (ID: 12228)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.11265445500612259
    2. '   ' → logprob: -2.362654447555542
    3. 'print' → logprob: -5.112654685974121
    4. ' return' → logprob: -5.487654685974121
    5. ' sys' → logprob: -6.487654685974121
    6. '    ' → logprob: -8.362654685974121
    7. ' prin' → logprob: -9.237654685974121
    8. '```' → logprob: -9.237654685974121
    9. ')' → logprob: -10.112654685974121
    10. ' message' → logprob: -10.362654685974121

Token 11: '.stdout' (ID: 59462)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -4.215330409351736e-05
    2. '.stdout' → logprob: -10.875041961669922
    3. '.exit' → logprob: -12.375041961669922
    4. '.print' → logprob: -12.625041961669922
    5. '.import' → logprob: -12.625041961669922
    6. '.write' → logprob: -13.000041961669922
    7. '.stdin' → logprob: -13.375041961669922
    8. ' .' → logprob: -13.875041961669922
    9. '.echo' → logprob: -13.875041961669922
    10. '.append' → logprob: -14.125041961669922

Token 12: '.write' (ID: 6765)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.16023357212543488
    2. '.write' → logprob: -1.9102336168289185
    3. '.append' → logprob: -13.035233497619629
    4. '.print' → logprob: -13.910233497619629
    5. '.​' → logprob: -14.035233497619629
    6. '.Write' → logprob: -14.160233497619629
    7. '.
' → logprob: -14.285233497619629
    8. '.readline' → logprob: -14.785233497619629
    9. '.`' → logprob: -14.785233497619629
    10. ' .' → logprob: -15.035233497619629

Token 13: '(str' (ID: 7946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09095887094736099
    2. '(M' → logprob: -2.715958833694458
    3. '('' → logprob: -3.965958833694458
    4. '(message' → logprob: -6.590959072113037
    5. '("("' → logprob: -8.715958595275879
    6. '((' → logprob: -9.215958595275879
    7. '(Message' → logprob: -9.715958595275879
    8. '(f' → logprob: -10.090958595275879
    9. '("""' → logprob: -10.215958595275879
    10. '(MSG' → logprob: -10.840958595275879

Token 14: '(M' (ID: 6103)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3871249258518219
    2. '(M' → logprob: -1.1371248960494995
    3. '(message' → logprob: -9.637125015258789
    4. '('' → logprob: -10.137125015258789
    5. '(MSG' → logprob: -10.137125015258789
    6. '(
' → logprob: -10.262125015258789
    7. ')' → logprob: -10.262125015258789
    8. '((' → logprob: -11.387125015258789
    9. '(

' → logprob: -11.887125015258789
    10. ' (' → logprob: -13.012125015258789

Token 15: 'ESSAGE' (ID: 21074)
  Prédit: 'ESSAGE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ESSAGE' → logprob: -6.0033853515051305e-05
    2. 'ESS' → logprob: -9.750060081481934
    3. 'ESSAGES' → logprob: -14.125060081481934
    4. 'MESSAGE' → logprob: -14.500060081481934
    5. 'ESSION' → logprob: -15.875060081481934
    6. 'ES' → logprob: -16.000059127807617
    7. 'essage' → logprob: -16.625059127807617
    8. 'SS' → logprob: -16.750059127807617
    9. 'S' → logprob: -17.125059127807617
    10. 'Ess' → logprob: -17.250059127807617

Token 16: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3133174777030945
    2. '))' → logprob: -1.3133175373077393
    3. ')+' → logprob: -10.81331729888916
    4. ')))' → logprob: -10.93831729888916
    5. ')
' → logprob: -11.93831729888916
    6. '))
' → logprob: -12.43831729888916
    7. ')\' → logprob: -13.18831729888916
    8. ' )' → logprob: -14.56331729888916
    9. ' ))' → logprob: -14.56331729888916
    10. '),' → logprob: -14.68831729888916

Token 17: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016107330098748207
    2. '))' → logprob: -4.141107559204102
    3. ')+' → logprob: -10.266107559204102
    4. ')
' → logprob: -11.016107559204102
    5. ')))' → logprob: -11.641107559204102
    6. '+' → logprob: -12.266107559204102
    7. ' )' → logprob: -13.766107559204102
    8. ')`' → logprob: -13.766107559204102
    9. '))
' → logprob: -14.141107559204102
    10. '+)' → logprob: -14.141107559204102

Token 18: ' '\' (ID: 10855)
  Prédit: ''\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''\' → logprob: -0.31462448835372925
    2. '"\' → logprob: -1.439624547958374
    3. '\n' → logprob: -4.439624309539795
    4. ''' → logprob: -4.564624309539795
    5. ')' → logprob: -4.814624309539795
    6. '"' → logprob: -6.564624309539795
    7. ' '\' → logprob: -7.689624309539795
    8. ' "\' → logprob: -8.064624786376953
    9. ')\' → logprob: -8.814624786376953
    10. ' ' → logprob: -9.314624786376953

Token 19: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.1008713702030946e-06
    2. '\n' → logprob: -13.125001907348633
    3. ' n' → logprob: -17.500001907348633
    4. 'r' → logprob: -20.375001907348633
    5. '	n' → logprob: -20.625001907348633
    6. ')n' → logprob: -22.375001907348633
    7. '_n' → logprob: -22.500001907348633
    8. 'x' → logprob: -22.625001907348633
    9. 'newline' → logprob: -22.625001907348633
    10. 'ndef' → logprob: -22.750001907348633

Token 20: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.02975349873304367
    2. ')' → logprob: -3.5297534465789795
    3. '")' → logprob: -13.529753684997559
    4. ''' → logprob: -13.779753684997559
    5. '')
' → logprob: -14.904753684997559
    6. ''))' → logprob: -16.654752731323242
    7. '’)' → logprob: -16.654752731323242
    8. ')'' → logprob: -16.904752731323242
    9. '}')' → logprob: -16.904752731323242
    10. '`)' → logprob: -16.904752731323242

Token 21: 'def' (ID: 1314)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.015355725772678852
    2. '#' → logprob: -4.640355587005615
    3. 'Ec' → logprob: -5.390355587005615
    4. '
' → logprob: -8.515356063842773
    5. '(' → logprob: -8.640356063842773
    6. '```' → logprob: -9.015356063842773
    7. '' → logprob: -9.140356063842773
    8. ')' → logprob: -10.265356063842773
    9. '(E' → logprob: -10.390356063842773
    10. '\E' → logprob: -10.390356063842773

Token 22: ' �' (ID: 1091)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.4278930425643921
    2. ' Ec' → logprob: -1.427893042564392
    3. ' Ma' → logprob: -3.6778931617736816
    4. ' Fo' → logprob: -4.677893161773682
    5. ' Fa' → logprob: -4.927893161773682
    6. ' Em' → logprob: -5.052893161773682
    7. ' Pr' → logprob: -5.177893161773682
    8. ' Re' → logprob: -5.427893161773682
    9. ' Echo' → logprob: -5.677893161773682
    10. ' My' → logprob: -5.927893161773682

Token 23: '�' (ID: 101)
  Prédit: 'Ec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Ec' → logprob: -0.013716202229261398
    2. 'E' → logprob: -4.763716220855713
    3. 'c' → logprob: -6.888716220855713
    4. 'ec' → logprob: -7.888716220855713
    5. 'Echo' → logprob: -8.013715744018555
    6. 'Pr' → logprob: -8.013715744018555
    7. 'e' → logprob: -8.451215744018555
    8. 'd' → logprob: -8.513715744018555
    9. 'main' → logprob: -8.576215744018555
    10. 'print' → logprob: -8.701215744018555

Token 24: '():
' (ID: 8595)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.39915943145751953
    2. 'Ec' → logprob: -1.5241594314575195
    3. 'd' → logprob: -3.8991594314575195
    4. 'e' → logprob: -3.8991594314575195
    5. 'f' → logprob: -4.6491594314575195
    6. '_' → logprob: -5.0241594314575195
    7. 'r' → logprob: -5.5241594314575195
    8. 'F' → logprob: -5.5241594314575195
    9. 'c' → logprob: -5.7116594314575195
    10. 'def' → logprob: -5.8366594314575195

Token 25: '   ' (ID: 271)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -1.1511131525039673
    2. 'pass' → logprob: -1.7761131525039673
    3. 'p' → logprob: -1.9011131525039673
    4. 'print' → logprob: -2.7761130332946777
    5. 'def' → logprob: -2.7761130332946777
    6. 'd' → logprob: -3.1511130332946777
    7. '_' → logprob: -3.7761130332946777
    8. '(' → logprob: -3.9011130332946777
    9. 'main' → logprob: -3.9011130332946777
    10. 's' → logprob: -4.026113033294678

Token 26: ' return' (ID: 622)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.9618585109710693
    2. 'E' → logprob: -1.5868585109710693
    3. 'def' → logprob: -1.5868585109710693
    4. 'p' → logprob: -3.0868585109710693
    5. 'print' → logprob: -3.2118585109710693
    6. 'd' → logprob: -3.3368585109710693
    7. ' pass' → logprob: -3.8368585109710693
    8. 'P' → logprob: -4.211858749389648
    9. 'Ec' → logprob: -5.336858749389648
    10. 'D' → logprob: -5.524358749389648

Token 27: ' int' (ID: 677)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.553880512714386
    2. 'None' → logprob: -1.3038804531097412
    3. '42' → logprob: -3.178880453109741
    4. ' ' → logprob: -3.428880453109741
    5. '__' → logprob: -4.05388069152832
    6. '()' → logprob: -4.42888069152832
    7. '0' → logprob: -5.55388069152832
    8. ' __' → logprob: -5.55388069152832
    9. '���' → logprob: -5.55388069152832
    10. ' True' → logprob: -5.80388069152832

Token 28: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008656173013150692
    2. '()' → logprob: -5.383656024932861
    3. ' ' → logprob: -6.633656024932861
    4. '(input' → logprob: -6.633656024932861
    5. '(
' → logprob: -8.25865650177002
    6. 'input' → logprob: -8.63365650177002
    7. ' (' → logprob: -8.88365650177002
    8. 'def' → logprob: -9.00865650177002
    9. '(int' → logprob: -9.25865650177002
    10. '('' → logprob: -9.50865650177002

Token 29: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.06003745272755623
    2. '.argv' → logprob: -2.93503737449646
    3. '.' → logprob: -5.560037612915039
    4. '.stdout' → logprob: -7.435037612915039
    5. '.readline' → logprob: -8.310037612915039
    6. '.version' → logprob: -8.560037612915039
    7. '.max' → logprob: -9.685037612915039
    8. ' .' → logprob: -10.060037612915039
    9. '.std' → logprob: -10.310037612915039
    10. '.exit' → logprob: -10.310037612915039

Token 30: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.001516768941655755
    2. '.read' → logprob: -7.126516819000244
    3. '.' → logprob: -7.251516819000244
    4. ' .' → logprob: -13.626516342163086
    5. ' readline' → logprob: -14.251516342163086
    6. '.)' → logprob: -14.751516342163086
    7. ')' → logprob: -15.001516342163086
    8. '.Read' → logprob: -16.126516342163086
    9. '.readlines' → logprob: -16.501516342163086
    10. '.')' → logprob: -17.126516342163086

Token 31: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.010194333270192146
    2. '()' → logprob: -4.760194301605225
    3. '().' → logprob: -6.510194301605225
    4. ' ())' → logprob: -9.510194778442383
    5. '()))' → logprob: -12.510194778442383
    6. '())
' → logprob: -12.510194778442383
    7. ')' → logprob: -12.885194778442383
    8. '(' → logprob: -13.010194778442383
    9. '();)' → logprob: -13.260194778442383
    10. '())

' → logprob: -14.885194778442383

Token 32: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.2572966814041138
    2. 'I' → logprob: -1.8822966814041138
    3. 'def' → logprob: -2.007296562194824
    4. 'n' → logprob: -2.257296562194824
    5. 'D' → logprob: -2.257296562194824
    6. 'i' → logprob: -2.382296562194824
    7. 'N' → logprob: -3.757296562194824
    8. 'input' → logprob: -4.257296562194824
    9. 'A' → logprob: -4.382296562194824
    10. 'r' → logprob: -4.507296562194824

Token 33: ' ' (ID: 220)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.05065479129552841
    2. ' ma' → logprob: -4.550654888153076
    3. 'main' → logprob: -4.675654888153076
    4. ' m' → logprob: -4.925654888153076
    5. ' ' → logprob: -5.300654888153076
    6. ' Ma' → logprob: -5.300654888153076
    7. ' __' → logprob: -5.800654888153076
    8. ' mai' → logprob: -6.300654888153076
    9. ' M' → logprob: -6.425654888153076
    10. ' MAIN' → logprob: -7.800654888153076

Token 34: '�' (ID: 133)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.0009031295776367
    2. 'input' → logprob: -2.1259031295776367
    3. 'i' → logprob: -2.2509031295776367
    4. 'in' → logprob: -2.6259031295776367
    5. 'm' → logprob: -2.6259031295776367
    6. 'read' → logprob: -2.6259031295776367
    7. 'I' → logprob: -3.2509031295776367
    8. 'r' → logprob: -3.3759031295776367
    9. 'int' → logprob: -4.125903129577637
    10. 'mai' → logprob: -4.375903129577637

Token 35: '�' (ID: 112)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.26844877004623413
    2. '(' → logprob: -1.893448829650879
    3. 'def' → logprob: -4.268448829650879
    4. 'input' → logprob: -4.643448829650879
    5. '�' → logprob: -4.643448829650879
    6. 'n' → logprob: -4.643448829650879
    7. 'I' → logprob: -4.893448829650879
    8. 'i' → logprob: -5.518448829650879
    9. 'int' → logprob: -5.768448829650879
    10. 'd' → logprob: -5.893448829650879

Token 36: 'um' (ID: 394)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.26810628175735474
    2. '()' → logprob: -1.51810622215271
    3. '(' → logprob: -4.518106460571289
    4. '():
' → logprob: -6.268106460571289
    5. '�' → logprob: -6.768106460571289
    6. '��' → logprob: -7.893106460571289
    7. '())' → logprob: -8.018106460571289
    8. '（）' → logprob: -8.393106460571289
    9. '���' → logprob: -9.268106460571289
    10. '_' → logprob: -9.393106460571289

Token 37: '_cr' (ID: 41408)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2629340589046478
    2. '()' → logprob: -2.0129339694976807
    3. 'ber' → logprob: -2.7629339694976807
    4. 'r' → logprob: -5.13793420791626
    5. 'm' → logprob: -5.13793420791626
    6. '_' → logprob: -5.63793420791626
    7. 'i' → logprob: -6.01293420791626
    8. 'int' → logprob: -6.38793420791626
    9. 'bers' → logprob: -6.88793420791626
    10. 's' → logprob: -6.88793420791626

Token 38: 'unch' (ID: 4446)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.23069149255752563
    2. 'ea' → logprob: -1.8556914329528809
    3. 'eat' → logprob: -3.480691432952881
    4. 'eam' → logprob: -5.730691432952881
    5. 'ead' → logprob: -6.605691432952881
    6. 'ef' → logprob: -6.730691432952881
    7. 'o' → logprob: -6.855691432952881
    8. 'ed' → logprob: -6.980691432952881
    9. 'eo' → logprob: -6.980691432952881
    10. 'edit' → logprob: -7.355691432952881

Token 39: 'er' (ID: 259)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2876606583595276
    2. '():' → logprob: -2.787660598754883
    3. 'e' → logprob: -3.037660598754883
    4. '(' → logprob: -3.537660598754883
    5. 'a' → logprob: -4.037660598754883
    6. '_' → logprob: -4.037660598754883
    7. 'er' → logprob: -4.787660598754883
    8. 't' → logprob: -4.787660598754883
    9. 'N' → logprob: -4.912660598754883
    10. 'b' → logprob: -5.037660598754883

Token 40: '(z' (ID: 27674)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.21511191129684448
    2. '_' → logprob: -3.0901119709014893
    3. '(' → logprob: -3.2151119709014893
    4. '_n' → logprob: -3.3401119709014893
    5. '():' → logprob: -4.71511173248291
    6. '(n' → logprob: -5.15261173248291
    7. 'a' → logprob: -5.40261173248291
    8. 'n' → logprob: -5.46511173248291
    9. 'def' → logprob: -5.65261173248291
    10. 's' → logprob: -6.09011173248291

Token 41: '):
' (ID: 1883)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8136418461799622
    2. 'u' → logprob: -1.3136417865753174
    3. 'i' → logprob: -3.0636417865753174
    4. 'o' → logprob: -3.0636417865753174
    5. '```' → logprob: -3.4386417865753174
    6. 'er' → logprob: -4.2511420249938965
    7. 'um' → logprob: -4.3136420249938965
    8. '   ' → logprob: -4.8761420249938965
    9. 'int' → logprob: -5.0011420249938965
    10. 'umber' → logprob: -5.1261420249938965

Token 42: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.155133843421936
    2. ' ' → logprob: -1.780133843421936
    3. 'd' → logprob: -2.2801337242126465
    4. ' def' → logprob: -2.6551337242126465
    5. 'r' → logprob: -2.6551337242126465
    6. 'n' → logprob: -3.1551337242126465
    7. 'c' → logprob: -3.2801337242126465
    8. '   ' → logprob: -3.6551337242126465
    9. 's' → logprob: -3.7801337242126465
    10. ' for' → logprob: -4.1551337242126465

Token 43: ' if' (ID: 538)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9392918944358826
    2. 'n' → logprob: -0.9392918944358826
    3. 'def' → logprob: -2.5642919540405273
    4. 'r' → logprob: -2.9392919540405273
    5. 's' → logprob: -3.3142919540405273
    6. 'm' → logprob: -4.314291954040527
    7. 'c' → logprob: -4.939291954040527
    8. 'num' → logprob: -5.314291954040527
    9. 'de' → logprob: -5.439291954040527
    10. 'l' → logprob: -5.564291954040527

Token 44: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.082195945084095
    2. 'z' → logprob: -2.582195997238159
    3. 'num' → logprob: -6.58219575881958
    4. ' num' → logprob: -6.95719575881958
    5. ' not' → logprob: -8.082196235656738
    6. ' ' → logprob: -8.707196235656738
    7. ' sum' → logprob: -9.457196235656738
    8. ' isinstance' → logprob: -9.582196235656738
    9. 'sum' → logprob: -9.582196235656738
    10. ' n' → logprob: -9.832196235656738

Token 45: ' &' (ID: 827)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -1.0436500310897827
    2. ' <=' → logprob: -1.6686500310897827
    3. ' >' → logprob: -1.9186500310897827
    4. ' ' → logprob: -2.6686501502990723
    5. ' >=' → logprob: -2.6686501502990723
    6. '<' → logprob: -2.9186501502990723
    7. '>' → logprob: -2.9186501502990723
    8. '<=' → logprob: -4.168650150299072
    9. '_' → logprob: -4.793650150299072
    10. '>=' → logprob: -4.918650150299072

Token 46: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.71064293384552
    2. ' ' → logprob: -0.71064293384552
    3. ' (' → logprob: -4.9606428146362305
    4. '(' → logprob: -4.9606428146362305
    5. 'z' → logprob: -6.7106428146362305
    6. ' z' → logprob: -7.3356428146362305
    7. 'nbsp' → logprob: -8.33564281463623
    8. '0' → logprob: -8.83564281463623
    9. '  ' → logprob: -9.08564281463623
    10. '#' → logprob: -9.33564281463623

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01727696880698204
    2. ' ' → logprob: -5.017276763916016
    3. '(' → logprob: -5.267276763916016
    4. 'z' → logprob: -6.017276763916016
    5. '(z' → logprob: -6.767276763916016
    6. ' (' → logprob: -6.892276763916016
    7. '-' → logprob: -8.017276763916016
    8. '0' → logprob: -9.329776763916016
    9. ' z' → logprob: -9.642276763916016
    10. ' -' → logprob: -10.892276763916016

Token 48: ' ^' (ID: 7602)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.561229407787323
    2. '==' → logprob: -1.4362294673919678
    3. ':' → logprob: -1.8112294673919678
    4. ')' → logprob: -4.186229228973389
    5. '):' → logprob: -5.436229228973389
    6. ' ' → logprob: -5.936229228973389
    7. '=' → logprob: -6.186229228973389
    8. ' :' → logprob: -6.936229228973389
    9. '0' → logprob: -7.311229228973389
    10. ')==' → logprob: -7.311229228973389

Token 49: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.42251327633857727
    2. ' ' → logprob: -1.1725132465362549
    3. ' z' → logprob: -3.672513246536255
    4. ' (' → logprob: -5.547513484954834
    5. 'z' → logprob: -5.672513484954834
    6. '0' → logprob: -6.922513484954834
    7. '(' → logprob: -7.422513484954834
    8. ' True' → logprob: -8.047513008117676
    9. '(z' → logprob: -9.610013008117676
    10. 'True' → logprob: -9.797513008117676

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.054983608424663544
    2. 'z' → logprob: -3.429983615875244
    3. ' ' → logprob: -4.304983615875244
    4. '0' → logprob: -5.304983615875244
    5. ' z' → logprob: -6.554983615875244
    6. '(' → logprob: -7.429983615875244
    7. ' (' → logprob: -8.179983139038086
    8. '(z' → logprob: -9.054983139038086
    9. 'True' → logprob: -9.867483139038086
    10. ' True' → logprob: -9.867483139038086

Token 51: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02923554554581642
    2. ' :' → logprob: -3.779235601425171
    3. ' ==' → logprob: -5.654235363006592
    4. '==' → logprob: -6.404235363006592
    5. '):' → logprob: -8.27923583984375
    6. ' and' → logprob: -8.65423583984375
    7. ' ' → logprob: -9.40423583984375
    8. '=' → logprob: -9.40423583984375
    9. ':
' → logprob: -10.15423583984375
    10. ' ):' → logprob: -10.27923583984375

Token 52: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23528161644935608
    2. ':' → logprob: -2.4852817058563232
    3. ' :' → logprob: -2.4852817058563232
    4. '   ' → logprob: -4.735281467437744
    5. '    ' → logprob: -4.985281467437744
    6. '0' → logprob: -4.985281467437744
    7. '  ' → logprob: -5.610281467437744
    8. '=' → logprob: -6.235281467437744
    9. ' ' → logprob: -6.360281467437744
    10. ')' → logprob: -6.485281467437744

Token 53: ' Ec' (ID: 40226)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2680862247943878
    2. ' return' → logprob: -2.2680861949920654
    3. ' z' → logprob: -3.5180861949920654
    4. '    ' → logprob: -3.6430861949920654
    5. '   ' → logprob: -4.3930864334106445
    6. 'return' → logprob: -4.7680864334106445
    7. ' ' → logprob: -4.7680864334106445
    8. '       ' → logprob: -4.8930864334106445
    9. '        ' → logprob: -5.2680864334106445
    10. 'z' → logprob: -5.3930864334106445

Token 54: 'Ho' (ID: 26597)
  Prédit: 'Ho'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ho' → logprob: -0.001268089865334332
    2. 'O' → logprob: -7.751267910003662
    3. 'HO' → logprob: -7.751267910003662
    4. 'ho' → logprob: -8.87626838684082
    5. 'Oh' → logprob: -8.87626838684082
    6. 'o' → logprob: -10.12626838684082
    7. 'H' → logprob: -10.25126838684082
    8. 'Hz' → logprob: -12.00126838684082
    9. 'Ha' → logprob: -12.50126838684082
    10. ' Ho' → logprob: -12.75126838684082

Token 55: '(z' (ID: 27674)
  Prédit: '(z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.33771970868110657
    2. '(' → logprob: -1.5877196788787842
    3. '('' → logprob: -2.712719678878784
    4. '("' → logprob: -5.212719917297363
    5. '(str' → logprob: -5.462719917297363
    6. '(int' → logprob: -6.087719917297363
    7. '((' → logprob: -6.587719917297363
    8. '("("' → logprob: -6.712719917297363
    9. '(sum' → logprob: -7.337719917297363
    10. '(s' → logprob: -8.962719917297363

Token 56: ' >>' (ID: 6832)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.8136472105979919
    2. '*' → logprob: -0.9386472105979919
    3. ')' → logprob: -2.4386472702026367
    4. ' //' → logprob: -3.6886472702026367
    5. ' ' → logprob: -4.438647270202637
    6. '**' → logprob: -4.563647270202637
    7. ' +' → logprob: -4.813647270202637
    8. '+' → logprob: -4.813647270202637
    9. ' **' → logprob: -5.188647270202637
    10. '//' → logprob: -6.063647270202637

Token 57: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002528456738218665
    2. ' ' → logprob: -6.002528667449951
    3. '```' → logprob: -11.002528190612793
    4. '2' → logprob: -12.002528190612793
    5. '' → logprob: -12.440028190612793
    6. '0' → logprob: -12.815028190612793
    7. '   ' → logprob: -12.877528190612793
    8. ' ' → logprob: -13.002528190612793
    9. 'one' → logprob: -13.565028190612793
    10. '`' → logprob: -13.565028190612793

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.860340752406046e-05
    2. ' ' → logprob: -10.2500581741333
    3. '2' → logprob: -11.7500581741333
    4. '' → logprob: -12.9375581741333
    5. '0' → logprob: -13.2500581741333
    6. '```' → logprob: -13.3125581741333
    7. '   ' → logprob: -13.7500581741333
    8. '' → logprob: -14.0625581741333
    9. '１' → logprob: -14.6250581741333
    10. '3' → logprob: -14.6250581741333

Token 59: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06234408915042877
    2. ')
' → logprob: -3.1873440742492676
    3. ' )' → logprob: -4.187344074249268
    4. ' )
' → logprob: -6.687344074249268
    5. ' ' → logprob: -6.812344074249268
    6. '   ' → logprob: -8.062344551086426
    7. ')

' → logprob: -8.562344551086426
    8. ',' → logprob: -9.062344551086426
    9. '))' → logprob: -9.187344551086426
    10. ')
' → logprob: -9.437344551086426

Token 60: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03461552783846855
    2. ' ' → logprob: -3.4096155166625977
    3. '0' → logprob: -7.659615516662598
    4. '2' → logprob: -7.784615516662598
    5. '3' → logprob: -10.409615516662598
    6. '4' → logprob: -11.534615516662598
    7. ' z' → logprob: -11.659615516662598
    8. ' ' → logprob: -11.909615516662598
    9. ' (' → logprob: -12.034615516662598
    10. 'z' → logprob: -12.847115516662598

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003689270466566086
    2. ' ' → logprob: -6.253689289093018
    3. '0' → logprob: -6.753689289093018
    4. '2' → logprob: -8.12868881225586
    5. 'z' → logprob: -9.25368881225586
    6. '(' → logprob: -9.75368881225586
    7. '3' → logprob: -10.37868881225586
    8. ' z' → logprob: -10.37868881225586
    9. ' (' → logprob: -11.06618881225586
    10. ')' → logprob: -11.19118881225586

Token 62: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002971995621919632
    2. ' )' → logprob: -6.00297212600708
    3. ')
' → logprob: -8.877971649169922
    4. ')>>' → logprob: -8.877971649169922
    5. '<|end|>' → logprob: -10.002971649169922
    6. ' ' → logprob: -10.377971649169922
    7. ')<<' → logprob: -10.877971649169922
    8. ')

' → logprob: -10.877971649169922
    9. '))' → logprob: -11.502971649169922
    10. '```' → logprob: -11.752971649169922

Token 63: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.44145673513412476
    2. 'def' → logprob: -1.3164567947387695
    3. '�' → logprob: -3.9414567947387695
    4. '��' → logprob: -4.3164567947387695
    5. '���' → logprob: -4.8164567947387695
    6. 'de' → logprob: -5.0664567947387695
    7. '����' → logprob: -5.3164567947387695
    8. 's' → logprob: -5.3164567947387695
    9. '_' → logprob: -5.9414567947387695
    10. 'z' → logprob: -6.0664567947387695

Token 64: ' else' (ID: 1203)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3975110650062561
    2. ' ' → logprob: -1.7725110054016113
    3. ':' → logprob: -2.3975110054016113
    4. '_' → logprob: -4.397511005401611
    5. ' )' → logprob: -4.772511005401611
    6. '   ' → logprob: -4.772511005401611
    7. 'u' → logprob: -5.147511005401611
    8. ' :' → logprob: -5.397511005401611
    9. '  ' → logprob: -5.522511005401611
    10. '4' → logprob: -6.147511005401611

Token 65: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13075612485408783
    2. ':
' → logprob: -2.380756139755249
    3. '       ' → logprob: -4.00575590133667
    4. '(' → logprob: -5.38075590133667
    5. ' :' → logprob: -6.25575590133667
    6. '        ' → logprob: -7.13075590133667
    7. ' (' → logprob: -7.38075590133667
    8. '    ' → logprob: -7.38075590133667
    9. '   ' → logprob: -7.50575590133667
    10. ' :
' → logprob: -7.63075590133667

Token 66: '       ' (ID: 309)
  Prédit: ' Ec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Ec' → logprob: -0.5377421975135803
    2. '       ' → logprob: -1.6627421379089355
    3. 'Ec' → logprob: -2.5377421379089355
    4. ' ' → logprob: -3.2877421379089355
    5. '        ' → logprob: -3.2877421379089355
    6. '    ' → logprob: -4.1627421379089355
    7. '   ' → logprob: -4.1627421379089355
    8. ' ' → logprob: -4.4127421379089355
    9. ' 
' → logprob: -5.5377421379089355
    10. '<|end|>' → logprob: -5.5377421379089355

Token 67: ' Ec' (ID: 40226)
  Prédit: 'Ec'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ec' (adapté à ' Ec') → logprob: -0.05533310025930405
    2. ' Ec' → logprob: -3.055333137512207
    3. 'z' → logprob: -5.930333137512207
    4. ' z' → logprob: -6.805333137512207
    5. 'num' → logprob: -7.555333137512207
    6. 'sum' → logprob: -7.680333137512207
    7. 'um' → logprob: -7.930333137512207
    8. '��' → logprob: -8.180333137512207
    9. ' ' → logprob: -8.555333137512207
    10. 'ec' → logprob: -8.680333137512207

Token 68: 'Ho' (ID: 26597)
  Prédit: 'Ho'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ho' → logprob: -0.0010648438474163413
    2. 'o' → logprob: -6.876064777374268
    3. 'Oh' → logprob: -10.876065254211426
    4. 'ho' → logprob: -12.501065254211426
    5. ' Ho' → logprob: -12.876065254211426
    6. 'O' → logprob: -14.001065254211426
    7. 'Ha' → logprob: -14.501065254211426
    8. '$o' → logprob: -14.501065254211426
    9. '	o' → logprob: -15.001065254211426
    10. '(o' → logprob: -15.001065254211426

Token 69: '((' (ID: 2054)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.01638096012175083
    2. '(' → logprob: -4.141380786895752
    3. '((' → logprob: -8.51638126373291
    4. '('' → logprob: -9.51638126373291
    5. '(str' → logprob: -10.51638126373291
    6. '(s' → logprob: -11.14138126373291
    7. ' (' → logprob: -12.01638126373291
    8. '(int' → logprob: -12.14138126373291
    9. 'z' → logprob: -12.89138126373291
    10. '(x' → logprob: -13.01638126373291

Token 70: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.11467364430427551
    2. ' z' → logprob: -2.239673614501953
    3. ' (' → logprob: -7.489673614501953
    4. '(z' → logprob: -7.739673614501953
    5. '(' → logprob: -8.239673614501953
    6. '2' → logprob: -9.239673614501953
    7. ' ' → logprob: -9.239673614501953
    8. 'num' → logprob: -9.614673614501953
    9. '1' → logprob: -9.614673614501953
    10. ')' → logprob: -10.114673614501953

Token 71: ' -' (ID: 533)
  Prédit: ' >>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >>' → logprob: -0.5388811230659485
    2. '>>' → logprob: -1.7888810634613037
    3. ' ' → logprob: -2.6638810634613037
    4. ' +' → logprob: -3.0388810634613037
    5. ' -' → logprob: -3.2888810634613037
    6. '+' → logprob: -3.9138810634613037
    7. ')' → logprob: -4.163881301879883
    8. '-' → logprob: -4.413881301879883
    9. ' //' → logprob: -4.538881301879883
    10. ' <<' → logprob: -4.663881301879883

Token 72: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5243943333625793
    2. ' ' → logprob: -1.1493942737579346
    3. '2' → logprob: -2.3993942737579346
    4. ')' → logprob: -9.024394035339355
    5. '  ' → logprob: -9.524394035339355
    6. '4' → logprob: -10.336894035339355
    7. ' (' → logprob: -10.524394035339355
    8. '3' → logprob: -10.774394035339355
    9. '10' → logprob: -10.836894035339355
    10. '<|end|>' → logprob: -10.836894035339355

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008736773394048214
    2. '2' → logprob: -4.883736610412598
    3. ' ' → logprob: -7.633736610412598
    4. '3' → logprob: -8.883736610412598
    5. '(' → logprob: -9.258736610412598
    6. ')' → logprob: -9.508736610412598
    7. '4' → logprob: -9.946236610412598
    8. 'z' → logprob: -10.696236610412598
    9. '0' → logprob: -10.758736610412598
    10. '5' → logprob: -11.008736610412598

Token 74: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019770495127886534
    2. ')>>' → logprob: -7.25197696685791
    3. ')//' → logprob: -7.37697696685791
    4. ' )' → logprob: -7.62697696685791
    5. '))' → logprob: -9.25197696685791
    6. '>>' → logprob: -11.25197696685791
    7. ' ' → logprob: -12.25197696685791
    8. ')/' → logprob: -12.75197696685791
    9. ' ' → logprob: -12.87697696685791
    10. '**' → logprob: -13.00197696685791

Token 75: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028178444132208824
    2. ')>>' → logprob: -4.2781782150268555
    3. '>>' → logprob: -5.0281782150268555
    4. ')//' → logprob: -6.4031782150268555
    5. ' )' → logprob: -6.5281782150268555
    6. '))' → logprob: -6.6531782150268555
    7. ' >>' → logprob: -7.1531782150268555
    8. '**' → logprob: -7.5281782150268555
    9. '*' → logprob: -8.028178215026855
    10. ')))' → logprob: -8.778178215026855

Token 76: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11290279775857925
    2. ' ' → logprob: -2.237902879714966
    3. ' ' → logprob: -10.237902641296387
    4. '3' → logprob: -10.987902641296387
    5. '4' → logprob: -12.175402641296387
    6. ')' → logprob: -12.425402641296387
    7. '```' → logprob: -12.550402641296387
    8. '1' → logprob: -12.925402641296387
    9. '    ' → logprob: -13.737902641296387
    10. '   ' → logprob: -13.800402641296387

Token 77: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007732972735539079
    2. ' ' → logprob: -7.2507734298706055
    3. '3' → logprob: -10.000773429870605
    4. '1' → logprob: -12.500773429870605
    5. '10' → logprob: -12.750773429870605
    6. '4' → logprob: -12.938273429870605
    7. ')' → logprob: -13.188273429870605
    8. '```' → logprob: -13.938273429870605
    9. '5' → logprob: -14.500773429870605
    10. '6' → logprob: -14.813273429870605

Token 78: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002278542669955641
    2. '))' → logprob: -9.500227928161621
    3. ')))' → logprob: -9.625227928161621
    4. '+' → logprob: -9.875227928161621
    5. '*' → logprob: -11.250227928161621
    6. ' )' → logprob: -11.875227928161621
    7. ')
' → logprob: -12.125227928161621
    8. '**' → logprob: -12.500227928161621
    9. ' +' → logprob: -13.750227928161621
    10. '}' → logprob: -13.875227928161621

Token 79: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.17629626393318176
    2. 'def' → logprob: -1.9262962341308594
    3. 'de' → logprob: -4.676296234130859
    4. 'n' → logprob: -5.426296234130859
    5. 's' → logprob: -7.051296234130859
    6. 'r' → logprob: -8.05129623413086
    7. 'num' → logprob: -8.42629623413086
    8. 'D' → logprob: -9.55129623413086
    9. 'nu' → logprob: -9.80129623413086
    10. '#' → logprob: -9.80129623413086

Token 80: ' __' (ID: 2516)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.4931909143924713
    2. ' n' → logprob: -2.1181910037994385
    3. 'num' → logprob: -2.3681910037994385
    4. ' nu' → logprob: -3.2431910037994385
    5. ' main' → logprob: -3.4931910037994385
    6. ' s' → logprob: -3.4931910037994385
    7. 'n' → logprob: -3.6181910037994385
    8. ' sum' → logprob: -4.368190765380859
    9. ' z' → logprob: -5.243190765380859
    10. ' ' → logprob: -5.368190765380859

Token 81: 'wner' (ID: 5986)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6926757097244263
    2. 'name' → logprob: -1.0676757097244263
    3. 'main' → logprob: -2.3176755905151367
    4. 'def' → logprob: -3.6926755905151367
    5. 'na' → logprob: -4.692675590515137
    6. 'init' → logprob: -4.942675590515137
    7. 'nam' → logprob: -5.442675590515137
    8. 'n' → logprob: -5.692675590515137
    9. 'sum' → logprob: -6.317675590515137
    10. 'd' → logprob: -7.067675590515137

Token 82: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.5842908620834351
    2. '_' → logprob: -1.334290862083435
    3. '__' → logprob: -2.5842909812927246
    4. '()' → logprob: -2.7092909812927246
    5. '(' → logprob: -4.209290981292725
    6. ':' → logprob: -5.709290981292725
    7. '_:' → logprob: -6.334290981292725
    8. 'def' → logprob: -6.459290981292725
    9. '_name' → logprob: -6.709290981292725
    10. '_owner' → logprob: -6.709290981292725

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16741806268692017
    2. '    ' → logprob: -3.1674180030822754
    3. ' ' → logprob: -3.2924180030822754
    4. 'n' → logprob: -4.417418003082275
    5. 'i' → logprob: -4.542418003082275
    6. 'z' → logprob: -5.417418003082275
    7. ' :' → logprob: -5.417418003082275
    8. ' i' → logprob: -5.667418003082275
    9. '  ' → logprob: -5.792418003082275
    10. 'x' → logprob: -5.792418003082275

Token 84: ' fancy' (ID: 39357)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.7169486880302429
    2. 'n' → logprob: -0.9669486880302429
    3. 'x' → logprob: -3.2169487476348877
    4. 'try' → logprob: -3.5919487476348877
    5. 'num' → logprob: -3.8419487476348877
    6. 'while' → logprob: -4.341948509216309
    7. 'i' → logprob: -4.466948509216309
    8. 'return' → logprob: -6.216948509216309
    9. 'number' → logprob: -6.216948509216309
    10. '   ' → logprob: -6.591948509216309

Token 85: '_num' (ID: 9834)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.022644542157649994
    2. '_n' → logprob: -5.272644519805908
    3. ' _' → logprob: -5.272644519805908
    4. '(' → logprob: -6.147644519805908
    5. '_name' → logprob: -7.022644519805908
    6. ' =' → logprob: -7.397644519805908
    7. ' ' → logprob: -7.522644519805908
    8. 's' → logprob: -7.522644519805908
    9. '_s' → logprob: -7.522644519805908
    10. '_f' → logprob: -7.522644519805908

Token 86: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5339349508285522
    2. '=' → logprob: -1.6589349508285522
    3. ' =' → logprob: -1.9089349508285522
    4. '_' → logprob: -2.783935070037842
    5. '(' → logprob: -5.408935070037842
    6. '(s' → logprob: -6.783935070037842
    7. ',' → logprob: -7.158935070037842
    8. '_s' → logprob: -7.408935070037842
    9. ')' → logprob: -7.533935070037842
    10. '   ' → logprob: -7.908935070037842

Token 87: ' �' (ID: 1091)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.8388223052024841
    2. ' int' → logprob: -1.338822364807129
    3. '0' → logprob: -2.463822364807129
    4. '42' → logprob: -2.588822364807129
    5. ' ' → logprob: -3.463822364807129
    6. '��' → logprob: -4.088822364807129
    7. '1' → logprob: -4.588822364807129
    8. '__' → logprob: -4.588822364807129
    9. '10' → logprob: -4.838822364807129
    10. ' __' → logprob: -5.151322364807129

Token 88: '�' (ID: 101)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0557447150349617
    2. 'i' → logprob: -4.555744647979736
    3. 'read' → logprob: -4.805744647979736
    4. '__' → logprob: -4.805744647979736
    5. 'z' → logprob: -5.180744647979736
    6. 's' → logprob: -5.180744647979736
    7. '0' → logprob: -5.805744647979736
    8. 'input' → logprob: -6.430744647979736
    9. 'in' → logprob: -6.555744647979736
    10. 'u' → logprob: -6.930744647979736

Token 89: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003892946057021618
    2. '<|end|>' → logprob: -7.12889289855957
    3. '(' → logprob: -7.75389289855957
    4. '()
' → logprob: -8.37889289855957
    5. '()]' → logprob: -8.37889289855957
    6. 'read' → logprob: -8.50389289855957
    7. '()>' → logprob: -8.62889289855957
    8. '();' → logprob: -8.75389289855957
    9. '().__' → logprob: -8.75389289855957
    10. '())' → logprob: -8.87889289855957

Token 90: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5960103869438171
    2. '_' → logprob: -1.596010446548462
    3. '#' → logprob: -2.596010446548462
    4. 'd' → logprob: -2.971010446548462
    5. ')' → logprob: -3.471010446548462
    6. 'u' → logprob: -3.596010446548462
    7. 'n' → logprob: -4.596010208129883
    8. '\' → logprob: -4.971010208129883
    9. ':' → logprob: -5.346010208129883
    10. ' def' → logprob: -5.971010208129883

Token 91: ' ' (ID: 220)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.20643353462219238
    2. 'for' → logprob: -2.5814335346221924
    3. 'sum' → logprob: -2.5814335346221924
    4. 'um' → logprob: -3.9564335346221924
    5. 'while' → logprob: -4.706433296203613
    6. 'if' → logprob: -5.831433296203613
    7. ' for' → logprob: -7.456433296203613
    8. 'return' → logprob: -7.893933296203613
    9. 'n' → logprob: -8.081433296203613
    10. ' num' → logprob: -8.581433296203613

Token 92: '�' (ID: 133)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -1.0291039943695068
    2. 'for' → logprob: -1.2791039943695068
    3. 'while' → logprob: -2.529103994369507
    4. 'f' → logprob: -2.779103994369507
    5. 'sum' → logprob: -2.904103994369507
    6. 'n' → logprob: -3.029103994369507
    7. 'z' → logprob: -3.654103994369507
    8. 'i' → logprob: -4.529104232788086
    9. 'if' → logprob: -4.529104232788086
    10. 's' → logprob: -4.529104232788086

Token 93: '�' (ID: 112)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.4081369638442993
    2. 'z' → logprob: -1.9081369638442993
    3. 'for' → logprob: -2.0331368446350098
    4. '_' → logprob: -2.2831368446350098
    5. 'num' → logprob: -2.5331368446350098
    6. '=' → logprob: -2.9081368446350098
    7. 'f' → logprob: -3.4081368446350098
    8. ' ' → logprob: -3.4081368446350098
    9. 'um' → logprob: -3.4081368446350098
    10. ')' → logprob: -3.4081368446350098

Token 94: 'um' (ID: 394)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6645679473876953
    2. 'f' → logprob: -1.9145679473876953
    3. 'num' → logprob: -2.0395679473876953
    4. 'um' → logprob: -2.0395679473876953
    5. 'while' → logprob: -3.4145679473876953
    6. 'sum' → logprob: -4.164567947387695
    7. ' for' → logprob: -4.414567947387695
    8. 'range' → logprob: -5.039567947387695
    9. '   ' → logprob: -6.414567947387695
    10. ' fancy' → logprob: -6.914567947387695

Token 95: '_cr' (ID: 41408)
  Prédit: '_cr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cr' → logprob: -0.011301157996058464
    2. '_' → logprob: -4.636301040649414
    3. '_c' → logprob: -6.511301040649414
    4. '_CR' → logprob: -12.136301040649414
    5. '```' → logprob: -12.136301040649414
    6. '_crc' → logprob: -12.261301040649414
    7. '<|end|>' → logprob: -12.511301040649414
    8. '__' → logprob: -12.761301040649414
    9. '	cr' → logprob: -13.136301040649414
    10. '_cre' → logprob: -13.136301040649414

Token 96: 'unch' (ID: 4446)
  Prédit: 'ucher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ucher' → logprob: -0.31444552540779114
    2. 'u' → logprob: -2.0644454956054688
    3. 'uch' → logprob: -2.6894454956054688
    4. 'ch' → logprob: -4.064445495605469
    5. 'chunk' → logprob: -5.189445495605469
    6. 'unch' → logprob: -5.689445495605469
    7. '<|end|>' → logprob: -5.689445495605469
    8. 'ucker' → logprob: -5.814445495605469
    9. 'uc' → logprob: -5.814445495605469
    10. '```' → logprob: -5.939445495605469

Token 97: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0008704868378117681
    2. '_er' → logprob: -8.000870704650879
    3. '```' → logprob: -9.000870704650879
    4. '_cr' → logprob: -9.375870704650879
    5. '_' → logprob: -9.500870704650879
    6. 'cr' → logprob: -10.625870704650879
    7. 'e' → logprob: -11.000870704650879
    8. 'r' → logprob: -11.125870704650879
    9. '' → logprob: -11.375870704650879
    10. ' ' → logprob: -11.625870704650879

Token 98: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.04301311820745468
    2. '(' → logprob: -3.168013095855713
    3. '('' → logprob: -12.543013572692871
    4. ' (' → logprob: -12.668013572692871
    5. '(
' → logprob: -12.793013572692871
    6. '(s' → logprob: -13.293013572692871
    7. '((' → logprob: -14.543013572692871
    8. '("("' → logprob: -14.543013572692871
    9. '(F' → logprob: -15.293013572692871
    10. '(z' → logprob: -15.668013572692871

Token 99: 'ancy' (ID: 8830)
  Prédit: 'ancy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ancy' → logprob: -9.968312951968983e-06
    2. 'a' → logprob: -12.500009536743164
    3. 'an' → logprob: -12.750009536743164
    4. 'anc' → logprob: -14.500009536743164
    5. '**' → logprob: -14.875009536743164
    6. 'ancybox' → logprob: -15.250009536743164
    7. '(' → logprob: -15.500009536743164
    8. ' fancy' → logprob: -15.500009536743164
    9. '```' → logprob: -15.750009536743164
    10. 'f' → logprob: -15.875009536743164

Token 100: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -4.0484450437361374e-05
    2. '_' → logprob: -10.375040054321289
    3. '_n' → logprob: -12.250040054321289
    4. 'num' → logprob: -12.750040054321289
    5. ')' → logprob: -15.500040054321289
    6. '_NUM' → logprob: -15.500040054321289
    7. '```' → logprob: -15.750040054321289
    8. '__' → logprob: -16.12504005432129
    9. '_Num' → logprob: -16.12504005432129
    10. ' _' → logprob: -16.12504005432129

Token 101: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.0259150157216936e-05
    2. ')
' → logprob: -10.37505054473877
    3. '(' → logprob: -11.62505054473877
    4. ' )' → logprob: -12.00005054473877
    5. '())' → logprob: -13.75005054473877
    6. ')

' → logprob: -14.37505054473877
    7. '))' → logprob: -14.75005054473877
    8. '()' → logprob: -15.00005054473877
    9. ')`' → logprob: -15.12505054473877
    10. '#' → logprob: -15.75005054473877

Token 102: '__' (ID: 771)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.38021552562713623
    2. '#' → logprob: -1.8802155256271362
    3. 'def' → logprob: -2.130215644836426
    4. '_' → logprob: -3.505215644836426
    5. '__' → logprob: -5.755215644836426
    6. 'de' → logprob: -6.255215644836426
    7. '�' → logprob: -6.380215644836426
    8. 'e' → logprob: -7.505215644836426
    9. '_d' → logprob: -7.505215644836426
    10. '\' → logprob: -7.755215644836426

Token 103: 'name' (ID: 897)
  Prédit: 'name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.18365290760993958
    2. 'main' → logprob: -2.308652877807617
    3. 'owner' → logprob: -2.933652877807617
    4. 'w' → logprob: -5.058652877807617
    5. 'n' → logprob: -5.433652877807617
    6. 'wner' → logprob: -6.933652877807617
    7. 'own' → logprob: -6.933652877807617
    8. 'na' → logprob: -7.183652877807617
    9. 'ow' → logprob: -7.433652877807617
    10. 'nam' → logprob: -7.808652877807617

Token 104: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0015866279136389494
    2. '==' → logprob: -7.001586437225342
    3. '_' → logprob: -7.376586437225342
    4. ' ==' → logprob: -10.5015869140625
    5. '___' → logprob: -11.2515869140625
    6. '=' → logprob: -12.0015869140625
    7. '____' → logprob: -14.1265869140625
    8. ' __' → logprob: -15.0015869140625
    9. '__

' → logprob: -15.6265869140625
    10. '_____' → logprob: -15.6265869140625

Token 105: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.29399606585502625
    2. ' ==' → logprob: -1.4189960956573486
    3. '__' → logprob: -4.5439958572387695
    4. '=='' → logprob: -7.0439958572387695
    5. '=="' → logprob: -7.4189958572387695
    6. '<|end|>' → logprob: -8.41899585723877
    7. '=' → logprob: -9.04399585723877
    8. ''' → logprob: -9.91899585723877
    9. ' ' → logprob: -10.04399585723877
    10. '==
' → logprob: -10.16899585723877

Token 106: ' "__' (ID: 27367)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.15118777751922607
    2. '"' → logprob: -2.0261878967285156
    3. ' '' → logprob: -4.901187896728516
    4. ' "' → logprob: -7.026187896728516
    5. ' '__' → logprob: -9.526187896728516
    6. ' "__' → logprob: -10.401187896728516
    7. ' ' → logprob: -10.901187896728516
    8. '`' → logprob: -11.901187896728516
    9. '__' → logprob: -12.026187896728516
    10. ' ' → logprob: -12.026187896728516

Token 107: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -5.200166469876422e-06
    2. 'name' → logprob: -12.250004768371582
    3. ' main' → logprob: -15.125004768371582
    4. 'ma' → logprob: -17.1250057220459
    5. 'm' → logprob: -17.7500057220459
    6. '_main' → logprob: -18.1250057220459
    7. '	main' → logprob: -18.3750057220459
    8. 'mai' → logprob: -18.7500057220459
    9. ' ' → logprob: -19.2500057220459
    10. 'maine' → logprob: -19.5000057220459

Token 108: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00038479414070025086
    2. '__":
' → logprob: -7.87538480758667
    3. '_"' → logprob: -13.125384330749512
    4. '"' → logprob: -13.375384330749512
    5. '__",' → logprob: -14.875384330749512
    6. '__:' → logprob: -15.125384330749512
    7. '_' → logprob: -15.625384330749512
    8. '__["' → logprob: -15.875384330749512
    9. '___' → logprob: -16.500385284423828
    10. '__
' → logprob: -16.625385284423828

Token 109: '"' (ID: 1)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.28189000487327576
    2. 'and' → logprob: -1.4068900346755981
    3. ':' → logprob: -7.531889915466309
    4. 'if' → logprob: -8.781889915466309
    5. ':
' → logprob: -11.531889915466309
    6. '   ' → logprob: -12.031889915466309
    7. '	and' → logprob: -12.031889915466309
    8. ' if' → logprob: -12.031889915466309
    9. '<|end|>' → logprob: -12.281889915466309
    10. ' ' → logprob: -12.531889915466309

Token 110: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8064380288124084
    2. ' and' → logprob: -1.1814379692077637
    3. 'and' → logprob: -1.4314379692077637
    4. 'if' → logprob: -5.181437969207764
    5. ':
' → logprob: -6.556437969207764
    6. ' if' → logprob: -8.931438446044922
    7. '   ' → logprob: -9.056438446044922
    8. ' :' → logprob: -9.056438446044922
    9. ' ' → logprob: -9.931438446044922
    10. '```' → logprob: -9.931438446044922

Token 111: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5231627225875854
    2. ' __' → logprob: -0.8981627225875854
    3. ' ' → logprob: -10.523162841796875
    4. '___' → logprob: -11.898162841796875
    5. ' ' → logprob: -13.148162841796875
    6. '____' → logprob: -14.273162841796875
    7. '.__' → logprob: -14.398162841796875
    8. ' _' → logprob: -14.648162841796875
    9. '   ' → logprob: -14.773162841796875
    10. ' ___' → logprob: -15.023162841796875

Token 112: 'wner' (ID: 5986)
  Prédit: 'owner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'owner' → logprob: -0.6394438743591309
    2. 'wner' → logprob: -0.8894438743591309
    3. 'name' → logprob: -3.264443874359131
    4. '_owner' → logprob: -4.014443874359131
    5. '__' → logprob: -5.889443874359131
    6. 'w' → logprob: -7.639443874359131
    7. '()' → logprob: -7.889443874359131
    8. 'main' → logprob: -8.389444351196289
    9. '_name' → logprob: -8.514444351196289
    10. 'own' → logprob: -8.639444351196289

Token 113: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -8.947715832618997e-05
    2. '()
' → logprob: -9.750089645385742
    3. '`()' → logprob: -11.500089645385742
    4. '()`' → logprob: -12.125089645385742
    5. '()?' → logprob: -12.750089645385742
    6. ' ()' → logprob: -13.125089645385742
    7. '|()
' → logprob: -13.500089645385742
    8. '()(' → logprob: -13.500089645385742
    9. '()<' → logprob: -14.000089645385742
    10. '();' → logprob: -14.000089645385742


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 111
Tokens correctement prédits (1ère position, stricte): 29
Tokens correctement prédits (1ère position, avec adaptation): 30
Tokens correctement prédits (top 10): 66
Précision stricte (1ère position): 26.13%
Précision adaptée (1ère position): 27.03%
Précision (top 10): 59.46%
================================================================================
