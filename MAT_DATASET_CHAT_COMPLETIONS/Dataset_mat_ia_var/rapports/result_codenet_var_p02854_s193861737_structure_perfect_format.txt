================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:37:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
a = list(map(int, input().split()))
x = sum(a)
i = ans1 = 0
while True:
    if ans1 < x / 2 and i < n:
        ans1 += a[i]
        i += 1
    else:
        break
i -= 1
ans2 = x - ans1
ans1 -= a[i]
print(a[i] - abs(ans1 - ans2))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004278083215467632
    2. ''' → logprob: -8.625428199768066
    3. '('' → logprob: -9.375428199768066
    4. '(n' → logprob: -9.875428199768066
    5. '```' → logprob: -10.375428199768066
    6. '`' → logprob: -10.750428199768066
    7. '("("' → logprob: -11.125428199768066
    8. '(
' → logprob: -11.125428199768066
    9. ')' → logprob: -11.750428199768066
    10. '()' → logprob: -12.250428199768066

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0733630508184433
    2. ')' → logprob: -2.8233630657196045
    3. '()' → logprob: -4.698362827301025
    4. '())' → logprob: -6.948362827301025
    5. '```' → logprob: -8.198363304138184
    6. '(
' → logprob: -8.448363304138184
    7. '('' → logprob: -8.948363304138184
    8. '(()' → logprob: -9.073363304138184
    9. '`' → logprob: -9.198363304138184
    10. '("("' → logprob: -9.698363304138184

Token 5: 'a' (ID: 64)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9191706776618958
    2. 'i' → logprob: -1.169170618057251
    3. 'for' → logprob: -1.669170618057251
    4. 's' → logprob: -3.169170618057251
    5. '*' → logprob: -4.66917085647583
    6. ')' → logprob: -4.91917085647583
    7. 'x' → logprob: -5.04417085647583
    8. '#' → logprob: -5.16917085647583
    9. '`' → logprob: -5.16917085647583
    10. 'a' → logprob: -5.54417085647583

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.030097683891654015
    2. ' =' → logprob: -4.405097484588623
    3. '=' → logprob: -5.405097484588623
    4. '[i' → logprob: -5.905097484588623
    5. 'r' → logprob: -6.030097484588623
    6. '.' → logprob: -6.655097484588623
    7. 'a' → logprob: -6.780097484588623
    8. '[a' → logprob: -7.030097484588623
    9. 'rray' → logprob: -7.280097484588623
    10. '[:]' → logprob: -7.530097484588623

Token 7: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6180571913719177
    2. ' []' → logprob: -1.1180572509765625
    3. 'list' → logprob: -2.7430572509765625
    4. ' [' → logprob: -3.4930572509765625
    5. ' list' → logprob: -4.1180572509765625
    6. '[' → logprob: -4.6180572509765625
    7. '[input' → logprob: -5.6180572509765625
    8. '[int' → logprob: -6.1180572509765625
    9. '[n' → logprob: -6.3680572509765625
    10. 'input' → logprob: -6.3680572509765625

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003273600013926625
    2. '()' → logprob: -9.000327110290527
    3. '(a' → logprob: -9.000327110290527
    4. '(range' → logprob: -10.250327110290527
    5. '(input' → logprob: -11.250327110290527
    6. '(`' → logprob: -12.500327110290527
    7. '(
' → logprob: -12.625327110290527
    8. '((' → logprob: -13.125327110290527
    9. '(n' → logprob: -13.125327110290527
    10. 'a' → logprob: -13.125327110290527

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.1174561157822609
    2. '(' → logprob: -2.3674561977386475
    3. '(str' → logprob: -4.242455959320068
    4. '(lambda' → logprob: -6.867455959320068
    5. '(input' → logprob: -7.242455959320068
    6. 'int' → logprob: -8.117456436157227
    7. ')' → logprob: -8.867456436157227
    8. '```' → logprob: -8.867456436157227
    9. '<int' → logprob: -9.367456436157227
    10. '(eval' → logprob: -9.617456436157227

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.009679481387138367
    2. '(' → logprob: -4.884679317474365
    3. ',input' → logprob: -7.134679317474365
    4. '))' → logprob: -7.134679317474365
    5. ')' → logprob: -8.634679794311523
    6. 'input' → logprob: -9.134679794311523
    7. '=input' → logprob: -9.759679794311523
    8. ',' → logprob: -11.134679794311523
    9. '[input' → logprob: -11.634679794311523
    10. ')))' → logprob: -11.759679794311523

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02977536804974079
    2. ' input' → logprob: -3.529775381088257
    3. '(input' → logprob: -10.654775619506836
    4. ',input' → logprob: -14.654775619506836
    5. ')' → logprob: -15.029775619506836
    6. '=input' → logprob: -15.279775619506836
    7. '	input' → logprob: -15.779775619506836
    8. '<input' → logprob: -16.529775619506836
    9. '[input' → logprob: -17.029775619506836
    10. ' ' → logprob: -17.779775619506836

Token 12: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.860352635383606
    2. '()))' → logprob: -0.860352635383606
    3. '()' → logprob: -1.985352635383606
    4. '().' → logprob: -4.235352516174316
    5. ')' → logprob: -7.235352516174316
    6. '()));' → logprob: -7.485352516174316
    7. '(' → logprob: -7.985352516174316
    8. '))' → logprob: -8.985352516174316
    9. '())))' → logprob: -9.235352516174316
    10. '());' → logprob: -9.235352516174316

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007378002628684044
    2. 'strip' → logprob: -7.25073766708374
    3. 'rstrip' → logprob: -10.625738143920898
    4. ' split' → logprob: -12.750738143920898
    5. '(split' → logprob: -14.750738143920898
    6. ')' → logprob: -16.1257381439209
    7. 'spl' → logprob: -16.5007381439209
    8. 's' → logprob: -17.5007381439209
    9. ' strip' → logprob: -18.2507381439209
    10. '.split' → logprob: -18.5007381439209

Token 14: '()))
' (ID: 24521)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0026971101760864
    2. '))' → logprob: -1.0026971101760864
    3. '()))' → logprob: -2.002696990966797
    4. '(' → logprob: -2.627696990966797
    5. '())' → logprob: -2.877696990966797
    6. '()' → logprob: -6.127696990966797
    7. '('' → logprob: -8.252696990966797
    8. ')))' → logprob: -9.877696990966797
    9. ''))' → logprob: -9.877696990966797
    10. '`' → logprob: -10.877696990966797

Token 15: 'x' (ID: 87)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5533328056335449
    2. 's' → logprob: -1.178332805633545
    3. 'c' → logprob: -3.178332805633545
    4. 'for' → logprob: -3.553332805633545
    5. 'sum' → logprob: -3.928332805633545
    6. 'b' → logprob: -5.303332805633545
    7. 'm' → logprob: -5.303332805633545
    8. 'count' → logprob: -5.678332805633545
    9. 'max' → logprob: -5.803332805633545
    10. 'd' → logprob: -6.303332805633545

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7333893775939941
    2. '=' → logprob: -1.3583893775939941
    3. '_' → logprob: -1.6083893775939941
    4. '[' → logprob: -3.358389377593994
    5. '.' → logprob: -4.858389377593994
    6. ',' → logprob: -4.858389377593994
    7. ')' → logprob: -4.983389377593994
    8. 'a' → logprob: -6.983389377593994
    9. ' ' → logprob: -7.233389377593994
    10. '[:]' → logprob: -7.233389377593994

Token 17: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.352456659078598
    2. 'a' → logprob: -1.6024566888809204
    3. ' ' → logprob: -2.852456569671631
    4. ' a' → logprob: -3.852456569671631
    5. 'sum' → logprob: -5.602456569671631
    6. ' max' → logprob: -5.852456569671631
    7. 'max' → logprob: -5.977456569671631
    8. ' sum' → logprob: -6.227456569671631
    9. '[]' → logprob: -6.477456569671631
    10. ' []' → logprob: -7.102456569671631

Token 18: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4741310179233551
    2. '(a' → logprob: -0.9741309881210327
    3. '(x' → logprob: -10.599130630493164
    4. '((' → logprob: -11.099130630493164
    5. '(
' → logprob: -12.474130630493164
    6. '(+' → logprob: -13.349130630493164
    7. '('' → logprob: -13.849130630493164
    8. '(sum' → logprob: -13.974130630493164
    9. '("("' → logprob: -14.224130630493164
    10. '(ai' → logprob: -14.349130630493164

Token 19: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022316172253340483
    2. '))' → logprob: -6.377231597900391
    3. '[' → logprob: -8.50223159790039
    4. ' )' → logprob: -8.62723159790039
    5. ' -' → logprob: -10.75223159790039
    6. '-' → logprob: -10.87723159790039
    7. 'a' → logprob: -10.87723159790039
    8. '+' → logprob: -11.00223159790039
    9. '[a' → logprob: -11.37723159790039
    10. ')))' → logprob: -12.12723159790039

Token 20: 'i' (ID: 72)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1394344568252563
    2. '%' → logprob: -1.6394344568252563
    3. '>' → logprob: -2.014434337615967
    4. '/' → logprob: -2.639434337615967
    5. 'print' → logprob: -2.764434337615967
    6. ')' → logprob: -3.139434337615967
    7. '+' → logprob: -3.514434337615967
    8. '#' → logprob: -3.889434337615967
    9. ' if' → logprob: -3.889434337615967
    10. 'x' → logprob: -4.139434337615967

Token 21: ' =' (ID: 314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.09422779083251953
    2. '+' → logprob: -3.5942277908325195
    3. '=' → logprob: -3.5942277908325195
    4. 'n' → logprob: -3.9692277908325195
    5. ' =' → logprob: -4.9692277908325195
    6. ' +=' → logprob: -5.7192277908325195
    7. 's' → logprob: -6.3442277908325195
    8. 'nd' → logprob: -6.8442277908325195
    9. ' ' → logprob: -7.7192277908325195
    10. '[' → logprob: -7.7192277908325195

Token 22: ' ans' (ID: 3345)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4289683401584625
    2. ' ' → logprob: -1.0539683103561401
    3. ' x' → logprob: -9.17896842956543
    4. '1' → logprob: -9.30396842956543
    5. 'x' → logprob: -9.92896842956543
    6. ' n' → logprob: -11.67896842956543
    7. 'n' → logprob: -12.42896842956543
    8. ' -' → logprob: -12.92896842956543
    9. ' ' → logprob: -13.05396842956543
    10. ' len' → logprob: -13.74146842956543

Token 23: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6512587070465088
    2. ' =' → logprob: -1.6512587070465088
    3. '=' → logprob: -2.276258707046509
    4. ' +' → logprob: -2.401258707046509
    5. ' ' → logprob: -3.526258707046509
    6. '_' → logprob: -3.526258707046509
    7. '[' → logprob: -5.02625846862793
    8. ' +=' → logprob: -5.15125846862793
    9. 'n' → logprob: -5.52625846862793
    10. 's' → logprob: -5.52625846862793

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1817808896303177
    2. '=' → logprob: -2.0567808151245117
    3. ',' → logprob: -3.8067808151245117
    4. 'x' → logprob: -5.556780815124512
    5. 's' → logprob: -5.681780815124512
    6. ' ' → logprob: -6.056780815124512
    7. 'dx' → logprob: -6.056780815124512
    8. '+' → logprob: -6.806780815124512
    9. ' +' → logprob: -7.306780815124512
    10. 'n' → logprob: -7.556780815124512

Token 25: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08115313947200775
    2. ' ' → logprob: -2.581153154373169
    3. '1' → logprob: -7.33115291595459
    4. 'ans' → logprob: -7.58115291595459
    5. 'x' → logprob: -7.95615291595459
    6. ' ans' → logprob: -8.33115291595459
    7. ' x' → logprob: -8.83115291595459
    8. '-' → logprob: -8.95615291595459
    9. 'i' → logprob: -9.70615291595459
    10. ' -' → logprob: -9.83115291595459

Token 26: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013047521933913231
    2. 'ans' → logprob: -5.138047695159912
    3. '1' → logprob: -6.013047695159912
    4. '-' → logprob: -6.263047695159912
    5. 'x' → logprob: -6.513047695159912
    6. 'i' → logprob: -7.138047695159912
    7. 'a' → logprob: -8.763047218322754
    8. ' ' → logprob: -8.763047218322754
    9. 'j' → logprob: -10.388047218322754
    10. 'n' → logprob: -10.388047218322754

Token 27: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4351440370082855
    2. '<|end|>' → logprob: -1.060144066810608
    3. ' ,' → logprob: -6.435143947601318
    4. '<|end|>' → logprob: -6.810143947601318
    5. '  ' → logprob: -6.935143947601318
    6. ',' → logprob: -6.935143947601318
    7. ' 
' → logprob: -8.185144424438477
    8. 'while' → logprob: -8.310144424438477
    9. '+' → logprob: -8.685144424438477
    10. ')' → logprob: -8.810144424438477

Token 28: 'while' (ID: 7032)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.37817972898483276
    2. '<|end|>' → logprob: -2.2531797885894775
    3. ' ans' → logprob: -2.2531797885894775
    4. 'ans' → logprob: -3.7531797885894775
    5. ',' → logprob: -4.128179550170898
    6. 'for' → logprob: -4.378179550170898
    7. ' for' → logprob: -4.878179550170898
    8. 'while' → logprob: -4.878179550170898
    9. ' while' → logprob: -5.003179550170898
    10. ' ,' → logprob: -5.253179550170898

Token 29: ' True' (ID: 6432)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.632685124874115
    2. ' i' → logprob: -0.757685124874115
    3. 'x' → logprob: -10.257684707641602
    4. ' ' → logprob: -11.507684707641602
    5. '(i' → logprob: -11.507684707641602
    6. ' x' → logprob: -11.507684707641602
    7. ' ans' → logprob: -12.632684707641602
    8. 'True' → logprob: -12.757684707641602
    9. 'ans' → logprob: -12.757684707641602
    10. '	i' → logprob: -12.882684707641602

Token 30: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02716023102402687
    2. ' :' → logprob: -4.027160167694092
    3. '   ' → logprob: -5.027160167694092
    4. ' ' → logprob: -6.652160167694092
    5. '<|end|>' → logprob: -8.02716064453125
    6. ':
' → logprob: -8.40216064453125
    7. '  ' → logprob: -8.65216064453125
    8. ',' → logprob: -9.27716064453125
    9. ' and' → logprob: -9.52716064453125
    10. ' :
' → logprob: -10.15216064453125

Token 31: '   ' (ID: 271)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.30105695128440857
    2. 'i' → logprob: -1.676056981086731
    3. '<|end|>' → logprob: -3.6760568618774414
    4. '   ' → logprob: -3.9260568618774414
    5. ' x' → logprob: -4.051056861877441
    6. 'x' → logprob: -5.176056861877441
    7. ' ' → logprob: -6.176056861877441
    8. '    ' → logprob: -7.301056861877441
    9. ' ans' → logprob: -8.051056861877441
    10. 'a' → logprob: -8.176056861877441

Token 32: ' if' (ID: 538)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.35878103971481323
    2. ' i' → logprob: -1.358781099319458
    3. 'a' → logprob: -4.108780860900879
    4. 'x' → logprob: -4.358780860900879
    5. ' x' → logprob: -5.233780860900879
    6. ' a' → logprob: -5.733780860900879
    7. '   ' → logprob: -5.983780860900879
    8. ' ans' → logprob: -6.358780860900879
    9. 'ans' → logprob: -6.608780860900879
    10. ' True' → logprob: -8.233780860900879

Token 33: ' ans' (ID: 3345)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4676242768764496
    2. 'i' → logprob: -1.092624306678772
    3. ' x' → logprob: -4.217624187469482
    4. 'x' → logprob: -4.217624187469482
    5. ' ans' → logprob: -5.842624187469482
    6. 'a' → logprob: -5.967624187469482
    7. ' a' → logprob: -6.217624187469482
    8. 'ans' → logprob: -7.467624187469482
    9. ' ' → logprob: -8.59262466430664
    10. '(i' → logprob: -8.84262466430664

Token 34: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.990154047845863e-05
    2. '2' → logprob: -10.125049591064453
    3. '0' → logprob: -13.125049591064453
    4. '+' → logprob: -13.250049591064453
    5. ' ' → logprob: -13.562549591064453
    6. '```' → logprob: -13.875049591064453
    7. '>' → logprob: -14.625049591064453
    8. '<x' → logprob: -14.750049591064453
    9. '<' → logprob: -14.812549591064453
    10. ' <' → logprob: -15.312549591064453

Token 35: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -1.5256030559539795
    2. ' >' → logprob: -1.6506030559539795
    3. ' <=' → logprob: -1.9006030559539795
    4. ' +' → logprob: -2.1506030559539795
    5. ' >=' → logprob: -2.1506030559539795
    6. '+' → logprob: -2.4006030559539795
    7. '>' → logprob: -3.5256030559539795
    8. '<' → logprob: -3.9006030559539795
    9. '*' → logprob: -3.9006030559539795
    10. '>=' → logprob: -4.275603294372559

Token 36: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3123681843280792
    2. 'x' → logprob: -1.4373681545257568
    3. ' a' → logprob: -4.062368392944336
    4. 'a' → logprob: -4.687368392944336
    5. ' n' → logprob: -6.312368392944336
    6. ' ' → logprob: -7.187368392944336
    7. ' (' → logprob: -7.437368392944336
    8. 'n' → logprob: -8.187368392944336
    9. ' max' → logprob: -8.437368392944336
    10. '(' → logprob: -8.937368392944336

Token 37: ' /' (ID: 820)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03416667878627777
    2. ' and' → logprob: -3.9091665744781494
    3. ' -' → logprob: -5.6591668128967285
    4. '[i' → logprob: -6.1591668128967285
    5. '-' → logprob: -6.2841668128967285
    6. ' :' → logprob: -6.4091668128967285
    7. 'and' → logprob: -6.5341668128967285
    8. ':
' → logprob: -7.1591668128967285
    9. ' or' → logprob: -7.5341668128967285
    10. '   ' → logprob: -7.7841668128967285

Token 38: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.015310870483517647
    2. ' ' → logprob: -4.265310764312744
    3. '3' → logprob: -7.015310764312744
    4. '10' → logprob: -9.515311241149902
    5. '4' → logprob: -9.640311241149902
    6. 'n' → logprob: -10.015311241149902
    7. '  ' → logprob: -11.452811241149902
    8. '1' → logprob: -11.577811241149902
    9. '   ' → logprob: -12.452811241149902
    10. '5' → logprob: -12.640311241149902

Token 39: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007451872224919498
    2. '3' → logprob: -7.6257452964782715
    3. '10' → logprob: -9.000744819641113
    4. ' ' → logprob: -9.750744819641113
    5. '4' → logprob: -10.250744819641113
    6. '1' → logprob: -11.375744819641113
    7. 'n' → logprob: -11.875744819641113
    8. '5' → logprob: -12.938244819641113
    9. 'i' → logprob: -13.438244819641113
    10. '  ' → logprob: -13.813244819641113

Token 40: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12069622427225113
    2. ' and' → logprob: -2.2456963062286377
    3. 'and' → logprob: -5.370696067810059
    4. ' :' → logprob: -6.870696067810059
    5. ':
' → logprob: -6.995696067810059
    6. ' or' → logprob: -6.995696067810059
    7. '   ' → logprob: -8.495696067810059
    8. '):' → logprob: -10.495696067810059
    9. ',' → logprob: -10.995696067810059
    10. '.' → logprob: -11.120696067810059

Token 41: ' i' (ID: 575)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.899484395980835
    2. 'i' → logprob: -1.024484395980835
    3. ' i' → logprob: -2.274484395980835
    4. ' a' → logprob: -2.524484395980835
    5. 'ans' → logprob: -3.274484395980835
    6. ' ans' → logprob: -4.399484634399414
    7. '(ans' → logprob: -8.399484634399414
    8. 'x' → logprob: -8.774484634399414
    9. ' ' → logprob: -8.899484634399414
    10. '   ' → logprob: -9.024484634399414

Token 42: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.043641071766614914
    2. '<' → logprob: -3.1686410903930664
    3. '<len' → logprob: -8.168641090393066
    4. '<n' → logprob: -8.543641090393066
    5. ' ' → logprob: -9.668641090393066
    6. '+' → logprob: -9.918641090393066
    7. ' +' → logprob: -11.668641090393066
    8. '<size' → logprob: -11.793641090393066
    9. '   ' → logprob: -12.293641090393066
    10. '[' → logprob: -12.793641090393066

Token 43: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6395645141601562
    2. 'n' → logprob: -0.7645645141601562
    3. 'len' → logprob: -5.139564514160156
    4. ' len' → logprob: -6.889564514160156
    5. ' ' → logprob: -10.264564514160156
    6. '	n' → logprob: -11.764564514160156
    7. '<|end|>' → logprob: -12.139564514160156
    8. '  ' → logprob: -12.889564514160156
    9. '<n' → logprob: -13.014564514160156
    10. '   ' → logprob: -13.139564514160156

Token 44: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008735007606446743
    2. ' and' → logprob: -5.258735179901123
    3. ' :' → logprob: -5.883735179901123
    4. 'and' → logprob: -7.883735179901123
    5. ':
' → logprob: -8.383734703063965
    6. '):' → logprob: -10.258734703063965
    7. '   ' → logprob: -10.258734703063965
    8. '+:' → logprob: -12.258734703063965
    9. ' :
' → logprob: -12.633734703063965
    10. ':**' → logprob: -12.633734703063965

Token 45: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7009978890419006
    2. ':' → logprob: -0.8259978890419006
    3. '       ' → logprob: -3.075997829437256
    4. ':
' → logprob: -4.450997829437256
    5. '+' → logprob: -5.200997829437256
    6. '<|end|>' → logprob: -6.950997829437256
    7. 'ans' → logprob: -8.325998306274414
    8. '):' → logprob: -8.700998306274414
    9. ' ans' → logprob: -8.825998306274414
    10. '	ans' → logprob: -8.825998306274414

Token 46: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.5130059123039246
    2. 'ans' (adapté à ' ans') → logprob: -1.3880059719085693
    3. '   ' → logprob: -2.0130059719085693
    4. '	ans' → logprob: -4.76300573348999
    5. '       ' → logprob: -4.88800573348999
    6. ' ' → logprob: -7.26300573348999
    7. '  ' → logprob: -8.388006210327148
    8. '    ' → logprob: -8.513006210327148
    9. '+' → logprob: -8.513006210327148
    10. '```' → logprob: -8.888006210327148

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.618001053633634e-05
    2. '+=' → logprob: -11.500025749206543
    3. '0' → logprob: -12.375025749206543
    4. ' +=' → logprob: -12.625025749206543
    5. '=' → logprob: -13.000025749206543
    6. ' ' → logprob: -13.750025749206543
    7. '+' → logprob: -14.187525749206543
    8. ' =' → logprob: -14.750025749206543
    9. '<|end|>' → logprob: -14.812525749206543
    10. '```' → logprob: -14.875025749206543

Token 48: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4742080271244049
    2. ' +=' → logprob: -0.9742079973220825
    3. '=' → logprob: -9.724207878112793
    4. '+' → logprob: -10.224207878112793
    5. ' =' → logprob: -10.974207878112793
    6. ']+=' → logprob: -11.599207878112793
    7. '+=(' → logprob: -12.974207878112793
    8. '   ' → logprob: -13.474207878112793
    9. ' +' → logprob: -13.474207878112793
    10. '```' → logprob: -13.599207878112793

Token 49: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1269298940896988
    2. ' a' → logprob: -2.126929998397827
    3. '	a' → logprob: -13.376930236816406
    4. ' ' → logprob: -15.751930236816406
    5. ' ' → logprob: -16.876930236816406
    6. '   ' → logprob: -17.126930236816406
    7. '>a' → logprob: -17.126930236816406
    8. '+a' → logprob: -17.126930236816406
    9. '#a' → logprob: -17.626930236816406
    10. 'а' → logprob: -17.751930236816406

Token 50: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.7120533811976202e-05
    2. '[' → logprob: -11.000017166137695
    3. 'i' → logprob: -15.250017166137695
    4. '```' → logprob: -15.875017166137695
    5. ' [' → logprob: -18.000017166137695
    6. ' ' → logprob: -18.125017166137695
    7. '[I' → logprob: -18.125017166137695
    8. '[j' → logprob: -18.750017166137695
    9. '\[' → logprob: -18.875017166137695
    10. '[s' → logprob: -19.125017166137695

Token 51: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.021100562065839767
    2. ']
' → logprob: -3.8961005210876465
    3. ')' → logprob: -8.646100997924805
    4. ']
' → logprob: -8.771100997924805
    5. '])' → logprob: -8.896100997924805
    6. '])
' → logprob: -10.646100997924805
    7. ' ]' → logprob: -10.896100997924805
    8. ')
' → logprob: -11.271100997924805
    9. ')]' → logprob: -11.271100997924805
    10. ']

' → logprob: -11.646100997924805

Token 52: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5782801508903503
    2. 'i' → logprob: -0.9532801508903503
    3. ' i' → logprob: -3.453280210494995
    4. '<|end|>' → logprob: -5.453279972076416
    5. '[i' → logprob: -5.703279972076416
    6. '
' → logprob: -5.828279972076416
    7. '	i' → logprob: -6.203279972076416
    8. '       ' → logprob: -6.328279972076416
    9. '    
' → logprob: -6.453279972076416
    10. ' ' → logprob: -6.828279972076416

Token 53: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.6932306289672852
    2. ' i' → logprob: -0.6932306289672852
    3. '   ' → logprob: -9.568230628967285
    4. '	i' → logprob: -11.943230628967285
    5. '```' → logprob: -12.943230628967285
    6. ' ' → logprob: -13.443230628967285
    7. '       ' → logprob: -13.443230628967285
    8. '    ' → logprob: -15.068230628967285
    9. ' ' → logprob: -15.443230628967285
    10. ',i' → logprob: -15.568230628967285

Token 54: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0797027125954628
    2. '+=' → logprob: -2.579702615737915
    3. ' +=' → logprob: -7.204702854156494
    4. '++' → logprob: -9.954702377319336
    5. '+++' → logprob: -11.704702377319336
    6. '=' → logprob: -12.454702377319336
    7. '<|end|>' → logprob: -12.579702377319336
    8. ' +' → logprob: -12.829702377319336
    9. '+i' → logprob: -13.579702377319336
    10. '+='' → logprob: -13.954702377319336

Token 55: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028048718813806772
    2. ' ' → logprob: -5.877804756164551
    3. '```' → logprob: -17.377805709838867
    4. ' ' → logprob: -18.127805709838867
    5. '   ' → logprob: -18.252805709838867
    6. '１' → logprob: -18.377805709838867
    7. '+' → logprob: -19.627805709838867
    8. '0' → logprob: -19.940305709838867
    9. '۱' → logprob: -20.315305709838867
    10. '`' → logprob: -20.440305709838867

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -18.25000762939453
    4. '```' → logprob: -18.25000762939453
    5. '１' → logprob: -19.43750762939453
    6. '  ' → logprob: -19.87500762939453
    7. '+' → logprob: -20.12500762939453
    8. '१' → logprob: -20.37500762939453
    9. '۱' → logprob: -20.50000762939453
    10. '<|end|>' → logprob: -20.62500762939453

Token 57: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026001954451203346
    2. ' else' → logprob: -3.7760019302368164
    3. 'else' → logprob: -6.026001930236816
    4. '<|end|>' → logprob: -8.276001930236816
    5. '	else' → logprob: -10.776001930236816
    6. '```' → logprob: -11.026001930236816
    7. '\n' → logprob: -11.276001930236816
    8. '<|end|>' → logprob: -11.776001930236816
    9. ')' → logprob: -12.401001930236816
    10. '       ' → logprob: -12.526001930236816

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04834046959877014
    2. ' else' → logprob: -3.1733405590057373
    3. 'else' → logprob: -5.298340320587158
    4. '<|end|>' → logprob: -8.423340797424316
    5. '	else' → logprob: -10.548340797424316
    6. '```' → logprob: -10.673340797424316
    7. ' elif' → logprob: -10.923340797424316
    8. 'elif' → logprob: -11.048340797424316
    9. ')' → logprob: -12.048340797424316
    10. '<|end|>' → logprob: -12.173340797424316

Token 59: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.47702157497406006
    2. '   ' → logprob: -1.60202157497406
    3. 'else' (adapté à ' else') → logprob: -1.72702157497406
    4. '	else' → logprob: -10.477021217346191
    5. 'elif' → logprob: -10.977021217346191
    6. ' elif' → logprob: -11.227021217346191
    7. '  ' → logprob: -12.852021217346191
    8. ' ' → logprob: -12.977021217346191
    9. '```' → logprob: -13.477021217346191
    10. '    ' → logprob: -13.977021217346191

Token 60: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12029317021369934
    2. '       ' → logprob: -2.245293140411377
    3. '   ' → logprob: -5.245293140411377
    4. ':
' → logprob: -6.370293140411377
    5. '    ' → logprob: -8.745293617248535
    6. ' :' → logprob: -8.745293617248535
    7. '           ' → logprob: -10.120293617248535
    8. '     ' → logprob: -10.370293617248535
    9. '      ' → logprob: -10.995293617248535
    10. ' ' → logprob: -11.745293617248535

Token 61: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010449681576574221
    2. '   ' → logprob: -10.000104904174805
    3. ' break' → logprob: -10.000104904174805
    4. 'break' → logprob: -12.125104904174805
    5. '```' → logprob: -12.875104904174805
    6. '           ' → logprob: -13.875104904174805
    7. '    ' → logprob: -14.125104904174805
    8. '	' → logprob: -14.375104904174805
    9. ' ' → logprob: -14.375104904174805
    10. ' ' → logprob: -14.375104904174805

Token 62: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08652202785015106
    2. ' break' → logprob: -2.961522102355957
    3. 'break' (adapté à ' break') → logprob: -3.586522102355957
    4. '   ' → logprob: -5.711522102355957
    5. '```' → logprob: -9.461522102355957
    6. '	break' → logprob: -10.336522102355957
    7. ' ' → logprob: -11.586522102355957
    8. '           ' → logprob: -11.836522102355957
    9. '    ' → logprob: -12.461522102355957
    10. ' ' → logprob: -13.086522102355957

Token 63: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.009359706193208694
    2. '
' → logprob: -5.384359836578369
    3. ' print' → logprob: -6.509359836578369
    4. ')' → logprob: -6.884359836578369
    5. 'i' → logprob: -7.384359836578369
    6. '<|end|>' → logprob: -7.884359836578369
    7. ' 
' → logprob: -8.009359359741211
    8. '\n' → logprob: -8.759359359741211
    9. '  
' → logprob: -8.759359359741211
    10. ')
' → logprob: -9.384359359741211

Token 64: 'i' (ID: 72)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.824579784530215e-05
    2. '
' → logprob: -9.8750581741333
    3. 'if' → logprob: -12.7500581741333
    4. ' print' → logprob: -13.0000581741333
    5. '```' → logprob: -14.2500581741333
    6. 'i' → logprob: -15.8750581741333
    7. '  
' → logprob: -15.8750581741333
    8. ')' → logprob: -16.375059127807617
    9. '<|end|>' → logprob: -16.500059127807617
    10. 'ans' → logprob: -16.625059127807617

Token 65: ' -=' (ID: 12583)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '<|end|>' → logprob: -18.000003814697266
    4. '0' → logprob: -19.375003814697266
    5. '```' → logprob: -19.750003814697266
    6. '2' → logprob: -20.500003814697266
    7. '１' → logprob: -21.125003814697266
    8. '   ' → logprob: -21.625003814697266
    9. '۱' → logprob: -22.187503814697266
    10. '१' → logprob: -22.437503814697266

Token 67: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '0' → logprob: -17.500001907348633
    4. '<|end|>' → logprob: -18.500001907348633
    5. '１' → logprob: -19.125001907348633
    6. '```' → logprob: -19.500001907348633
    7. '2' → logprob: -20.125001907348633
    8. '১' → logprob: -20.437501907348633
    9. '۱' → logprob: -20.562501907348633
    10. '१' → logprob: -20.562501907348633

Token 68: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6936933398246765
    2. 'print' → logprob: -0.8186933398246765
    3. '<|end|>' → logprob: -2.9436933994293213
    4. '\n' → logprob: -5.193693161010742
    5. ' print' → logprob: -8.193693161010742
    6. '  
' → logprob: -8.818693161010742
    7. '<|end|>' → logprob: -9.193693161010742
    8. '#' → logprob: -9.693693161010742
    9. '```' → logprob: -9.693693161010742
    10. '\' → logprob: -9.818693161010742

Token 69: 'ans' (ID: 616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00466923788189888
    2. '
' → logprob: -6.129669189453125
    3. '<|end|>' → logprob: -6.254669189453125
    4. ' print' → logprob: -8.004669189453125
    5. '\n' → logprob: -9.004669189453125
    6. '#' → logprob: -10.879669189453125
    7. ')' → logprob: -11.004669189453125
    8. 'if' → logprob: -11.129669189453125
    9. '\' → logprob: -11.754669189453125
    10. '```' → logprob: -12.004669189453125

Token 70: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.09525054693222046
    2. ' =' → logprob: -2.7202506065368652
    3. '1' → logprob: -3.8452506065368652
    4. '=' → logprob: -5.970250606536865
    5. '0' → logprob: -7.845250606536865
    6. 's' → logprob: -8.095250129699707
    7. ' ' → logprob: -9.345250129699707
    8. ' +=' → logprob: -9.470250129699707
    9. '_' → logprob: -10.095250129699707
    10. '<|end|>' → logprob: -10.720250129699707

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804941102862358
    2. '=' → logprob: -3.2880494594573975
    3. ' +=' → logprob: -13.038049697875977
    4. ' ' → logprob: -13.288049697875977
    5. ',' → logprob: -13.538049697875977
    6. '=sum' → logprob: -14.538049697875977
    7. '+=' → logprob: -14.663049697875977
    8. '=a' → logprob: -14.663049697875977
    9. '=i' → logprob: -15.163049697875977
    10. '＝' → logprob: -15.413049697875977

Token 72: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04552743211388588
    2. ' x' → logprob: -3.670527458190918
    3. 'a' → logprob: -4.420527458190918
    4. 'sum' → logprob: -5.295527458190918
    5. 'n' → logprob: -6.795527458190918
    6. ' sum' → logprob: -8.295527458190918
    7. ' a' → logprob: -8.545527458190918
    8. 'i' → logprob: -8.545527458190918
    9. ' n' → logprob: -9.545527458190918
    10. ' ' → logprob: -10.045527458190918

Token 73: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4331856369972229
    2. ' -' → logprob: -1.0581855773925781
    3. '<|end|>' → logprob: -5.558185577392578
    4. '-a' → logprob: -8.183185577392578
    5. '<|end|>' → logprob: -9.183185577392578
    6. '-s' → logprob: -9.808185577392578
    7. '-ai' → logprob: -10.058185577392578
    8. '-i' → logprob: -10.183185577392578
    9. '-n' → logprob: -10.808185577392578
    10. ' ' → logprob: -10.933185577392578

Token 74: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0005051348707638681
    2. ' ans' → logprob: -7.875504970550537
    3. 'a' → logprob: -9.000505447387695
    4. '(ans' → logprob: -14.250505447387695
    5. '	ans' → logprob: -14.250505447387695
    6. ' a' → logprob: -15.375505447387695
    7. '1' → logprob: -16.750505447387695
    8. '_ans' → logprob: -16.875505447387695
    9. ' ' → logprob: -17.000505447387695
    10. 'an' → logprob: -17.875505447387695

Token 75: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023166877508629113
    2. '2' → logprob: -9.000231742858887
    3. '[i' → logprob: -9.250231742858887
    4. 'i' → logprob: -13.062731742858887
    5. ' ' → logprob: -13.437731742858887
    6. '```' → logprob: -13.625231742858887
    7. '[' → logprob: -13.812731742858887
    8. '-' → logprob: -14.812731742858887
    9. 'a' → logprob: -14.812731742858887
    10. 'ans' → logprob: -14.937731742858887

Token 76: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005686311051249504
    2. '<|end|>' → logprob: -6.130686283111572
    3. ' print' → logprob: -6.505686283111572
    4. '
' → logprob: -6.505686283111572
    5. '+' → logprob: -8.75568675994873
    6. '\n' → logprob: -9.00568675994873
    7. '```' → logprob: -10.00568675994873
    8. 'if' → logprob: -10.25568675994873
    9. '\' → logprob: -10.25568675994873
    10. '
' → logprob: -11.00568675994873

Token 77: 'ans' (ID: 616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006562008056789637
    2. 'if' → logprob: -7.3756561279296875
    3. 'i' → logprob: -11.500656127929688
    4. ' print' → logprob: -11.625656127929688
    5. ' if' → logprob: -12.875656127929688
    6. '#' → logprob: -13.375656127929688
    7. 'for' → logprob: -13.625656127929688
    8. 'pr' → logprob: -14.000656127929688
    9. '```' → logprob: -14.375656127929688
    10. '<|end|>' → logprob: -14.375656127929688

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007801214698702097
    2. '2' → logprob: -5.007801055908203
    3. '=' → logprob: -7.507801055908203
    4. ' =' → logprob: -8.382801055908203
    5. ' ' → logprob: -9.382801055908203
    6. '_' → logprob: -9.757801055908203
    7. 'i' → logprob: -10.382801055908203
    8. ',' → logprob: -10.882801055908203
    9. '3' → logprob: -11.132801055908203
    10. '_=' → logprob: -11.132801055908203

Token 79: ' -=' (ID: 12583)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -7.493430894101039e-05
    2. ' a' → logprob: -9.500075340270996
    3. '	a' → logprob: -19.12507438659668
    4. '>a' → logprob: -20.00007438659668
    5. 'а' → logprob: -20.37507438659668
    6. '```' → logprob: -20.62507438659668
    7. '#a' → logprob: -21.12507438659668
    8. ' ' → logprob: -21.62507438659668
    9. ')a' → logprob: -21.75007438659668
    10. '   ' → logprob: -22.00007438659668

Token 81: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004645622801035643
    2. 'i' → logprob: -5.379645824432373
    3. '[' → logprob: -10.629645347595215
    4. '	i' → logprob: -14.879645347595215
    5. ' i' → logprob: -15.004645347595215
    6. '```' → logprob: -15.754645347595215
    7. '[index' → logprob: -17.50464630126953
    8. ' ' → logprob: -17.75464630126953
    9. '   ' → logprob: -17.75464630126953
    10. '[int' → logprob: -17.87964630126953

Token 82: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020440327934920788
    2. ')
' → logprob: -6.252044200897217
    3. ']' → logprob: -9.752043724060059
    4. '<|end|>' → logprob: -11.002043724060059
    5. '```' → logprob: -11.002043724060059
    6. '}' → logprob: -12.127043724060059
    7. '
' → logprob: -12.502043724060059
    8. ')i' → logprob: -13.127043724060059
    9. '[i' → logprob: -13.377043724060059
    10. ')
' → logprob: -13.502043724060059

Token 83: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.25737982988357544
    2. 'i' → logprob: -1.5073797702789307
    3. 'if' → logprob: -5.63238000869751
    4. 'while' → logprob: -7.13238000869751
    5. 'for' → logprob: -7.25738000869751
    6. 'ans' → logprob: -9.132379531860352
    7. '```' → logprob: -9.257379531860352
    8. 'n' → logprob: -9.507379531860352
    9. 'a' → logprob: -11.132379531860352
    10. 'j' → logprob: -11.757379531860352

Token 84: '(a' (ID: 6271)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.3386039137840271
    2. '(i' → logprob: -1.7136039733886719
    3. '(' → logprob: -2.338603973388672
    4. '(a' → logprob: -4.838603973388672
    5. '(abs' → logprob: -6.838603973388672
    6. '((' → logprob: -7.088603973388672
    7. '(max' → logprob: -8.713603973388672
    8. '()' → logprob: -8.838603973388672
    9. '(x' → logprob: -9.213603973388672
    10. 'ans' → logprob: -9.463603973388672

Token 85: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.482821431243792e-05
    2. '[' → logprob: -9.50008487701416
    3. ')' → logprob: -12.50008487701416
    4. '[j' → logprob: -12.75008487701416
    5. 'i' → logprob: -13.37508487701416
    6. '[a' → logprob: -13.75008487701416
    7. '[n' → logprob: -15.25008487701416
    8. ',i' → logprob: -16.750083923339844
    9. '[index' → logprob: -17.000083923339844
    10. '[x' → logprob: -17.000083923339844

Token 86: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3874899744987488
    2. ',' → logprob: -1.3874900341033936
    3. '])' → logprob: -3.6374900341033936
    4. ' )' → logprob: -3.8874900341033936
    5. ' ,' → logprob: -4.0124897956848145
    6. '+' → logprob: -5.5124897956848145
    7. ' ])' → logprob: -7.3874897956848145
    8. ']' → logprob: -7.5124897956848145
    9. ',i' → logprob: -7.7624897956848145
    10. ' +' → logprob: -8.762490272521973

Token 87: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07837474346160889
    2. ',' → logprob: -2.7033748626708984
    3. '+' → logprob: -5.078374862670898
    4. ',i' → logprob: -7.703374862670898
    5. ' ,' → logprob: -7.828374862670898
    6. ' )' → logprob: -7.953374862670898
    7. '*' → logprob: -8.453374862670898
    8. ',a' → logprob: -8.703374862670898
    9. ' if' → logprob: -9.328374862670898
    10. ' +' → logprob: -9.328374862670898

Token 88: ' abs' (ID: 8443)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.029145583510398865
    2. ' ans' → logprob: -4.27914571762085
    3. 'abs' → logprob: -4.65414571762085
    4. '(ans' → logprob: -5.65414571762085
    5. 'min' → logprob: -7.15414571762085
    6. 'max' → logprob: -7.52914571762085
    7. '1' → logprob: -8.529145240783691
    8. ' abs' → logprob: -8.904145240783691
    9. ' min' → logprob: -10.029145240783691
    10. ' max' → logprob: -10.404145240783691

Token 89: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -2.7968066206085496e-05
    2. '(' → logprob: -11.375027656555176
    3. '(abs' → logprob: -11.625027656555176
    4. '(a' → logprob: -12.750027656555176
    5. 'ans' → logprob: -12.875027656555176
    6. '((' → logprob: -13.625027656555176
    7. '(an' → logprob: -15.500027656555176
    8. '(x' → logprob: -15.625027656555176
    9. ' (' → logprob: -16.125028610229492
    10. '	ans' → logprob: -16.250028610229492

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06197217106819153
    2. '2' → logprob: -2.811972141265869
    3. '12' → logprob: -13.624472618103027
    4. '   ' → logprob: -14.749472618103027
    5. '```' → logprob: -14.936972618103027
    6. ' ' → logprob: -15.061972618103027
    7. '[' → logprob: -15.374472618103027
    8. ' -' → logprob: -15.999472618103027
    9. '  ' → logprob: -16.06197166442871
    10. ')' → logprob: -16.18697166442871

Token 91: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6330700516700745
    2. '-' → logprob: -0.7580700516700745
    3. ')' → logprob: -7.75806999206543
    4. '+' → logprob: -11.13306999206543
    5. ' ' → logprob: -11.38306999206543
    6. '))' → logprob: -12.75806999206543
    7. '),' → logprob: -12.88306999206543
    8. '-ex' → logprob: -13.00806999206543
    9. '  ' → logprob: -13.25806999206543
    10. '   ' → logprob: -13.38306999206543

Token 92: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0013866664376109838
    2. ' ans' → logprob: -6.626386642456055
    3. '(ans' → logprob: -9.751386642456055
    4. '	ans' → logprob: -13.501386642456055
    5. ' ' → logprob: -15.001386642456055
    6. 'abs' → logprob: -15.126386642456055
    7. '(' → logprob: -16.126386642456055
    8. '   ' → logprob: -16.376386642456055
    9. 'a' → logprob: -16.501386642456055
    10. '  ' → logprob: -16.751386642456055

Token 93: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4736459888808895e-05
    2. ' ' → logprob: -11.750014305114746
    3. 's' → logprob: -12.250014305114746
    4. '[' → logprob: -14.125014305114746
    5. 'user' → logprob: -16.000015258789062
    6. '   ' → logprob: -16.062515258789062
    7. '1' → logprob: -16.500015258789062
    8. '२' → logprob: -16.750015258789062
    9. ' ans' → logprob: -16.812515258789062
    10. 'a' → logprob: -16.875015258789062

Token 94: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2520454525947571
    2. ')' → logprob: -1.5020453929901123
    3. ')))' → logprob: -9.127045631408691
    4. '),' → logprob: -13.127045631408691
    5. ' ))' → logprob: -13.377045631408691
    6. '))
' → logprob: -14.002045631408691
    7. ' )' → logprob: -14.252045631408691
    8. ')")' → logprob: -14.877045631408691
    9. '])' → logprob: -15.252045631408691
    10. ')
' → logprob: -15.752045631408691


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 92
Tokens correctement prédits (1ère position, stricte): 32
Tokens correctement prédits (1ère position, avec adaptation): 33
Tokens correctement prédits (top 10): 72
Précision stricte (1ère position): 34.78%
Précision adaptée (1ère position): 35.87%
Précision (top 10): 78.26%
================================================================================
