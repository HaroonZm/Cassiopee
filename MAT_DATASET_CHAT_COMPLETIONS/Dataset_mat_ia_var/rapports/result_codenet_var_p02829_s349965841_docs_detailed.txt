================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:33:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_input():
    """
    Lit deux entiers depuis l'entrée standard.

    Returns:
        tuple: Un tuple contenant deux entiers lus à partir de l'entrée utilisateur.
    """
    A = int(input())
    B = int(input())
    return A, B

def find_missing_number(A, B):
    """
    Trouve et retourne le nombre manquant parmi les entiers 1, 2 et 3, sachant que A et B sont deux d'entre eux.

    Args:
        A (int): Premier nombre donné (doit être soit 1, 2 ou 3).
        B (int): Deuxième nombre donné (doit être soit 1, 2 ou 3).

    Returns:
        int: Le nombre manquant parmi 1, 2 et 3.
    """
    # La somme des nombres 1, 2 et 3 est toujours égale à 6.
    # Donc, le nombre manquant peut être trouvé par 6 - (A + B).
    return 6 - (A + B)

def main():
    """
    Fonction principale du programme. Lit deux entiers de l'utilisateur
    et affiche le nombre manquant parmi 1, 2 et 3.
    """
    # Lire les deux entrées utilisateur
    A, B = read_input()
    # Calculer le nombre manquant
    missing = find_missing_number(A, B)
    # Afficher le résultat
    print(missing)

# Appeler la fonction principale si ce script est exécuté
if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004457178059965372
    2. '_' → logprob: -5.754456996917725
    3. '():' → logprob: -7.629456996917725
    4. '(:' → logprob: -8.004457473754883
    5. '```' → logprob: -9.004457473754883
    6. '(_:' → logprob: -9.004457473754883
    7. ':' → logprob: -9.504457473754883
    8. ' (' → logprob: -9.879457473754883
    9. '(_' → logprob: -10.629457473754883
    10. '_:' → logprob: -12.004457473754883

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7243372797966003
    2. '\n' → logprob: -0.9743372797966003
    3. '\' → logprob: -2.599337339401245
    4. '   ' → logprob: -3.224337339401245
    5. ':' → logprob: -5.224337100982666
    6. '``' → logprob: -5.974337100982666
    7. ''\' → logprob: -5.974337100982666
    8. '    
' → logprob: -5.974337100982666
    9. '
' → logprob: -6.349337100982666
    10. 'newline' → logprob: -6.474337100982666

Token 5: ' """
' (ID: 7037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.618809163570404
    2. '   ' → logprob: -1.3688092231750488
    3. 'input' → logprob: -2.493809223175049
    4. 'r' → logprob: -3.618809223175049
    5. 'data' → logprob: -3.743809223175049
    6. 'x' → logprob: -4.118809223175049
    7. '```' → logprob: -4.493809223175049
    8. 'i' → logprob: -4.868809223175049
    9. 'user' → logprob: -4.993809223175049
    10. 'n' → logprob: -5.118809223175049

Token 6: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.34103673696517944
    2. '   ' → logprob: -1.8410367965698242
    3. 'Reads' → logprob: -2.591036796569824
    4. 'Read' → logprob: -3.341036796569824
    5. ' Reads' → logprob: -5.591036796569824
    6. '""' → logprob: -5.591036796569824
    7. ' reads' → logprob: -5.841036796569824
    8. 'Returns' → logprob: -6.091036796569824
    9. ''''' → logprob: -6.841036796569824
    10. '       ' → logprob: -6.841036796569824

Token 7: ' Lit' (ID: 45595)
  Prédit: 'Read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Read' → logprob: -0.45470184087753296
    2. 'Reads' → logprob: -1.0797019004821777
    3. '   ' → logprob: -4.329701900482178
    4. '"""' → logprob: -5.454701900482178
    5. 'Get' → logprob: -6.579701900482178
    6. 'Return' → logprob: -6.704701900482178
    7. '       ' → logprob: -6.829701900482178
    8. 'Returns' → logprob: -6.829701900482178
    9. 'reads' → logprob: -6.954701900482178
    10. 'return' → logprob: -7.829701900482178

Token 8: ' deux' (ID: 10301)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6095138192176819
    2. 'er' → logprob: -0.9845138192176819
    3. '   ' → logprob: -4.109513759613037
    4. ' les' → logprob: -4.609513759613037
    5. '()' → logprob: -4.859513759613037
    6. '_' → logprob: -5.109513759613037
    7. ' ' → logprob: -5.234513759613037
    8. ' le' → logprob: -5.359513759613037
    9. ' input' → logprob: -5.609513759613037
    10. ' e' → logprob: -5.859513759613037

Token 9: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3683754801750183
    2. ' lignes' → logprob: -1.368375539779663
    3. 'l' → logprob: -3.618375539779663
    4. ' espaces' → logprob: -3.993375539779663
    5. ' lines' → logprob: -6.743375301361084
    6. '\' → logprob: -6.868375301361084
    7. ' caractères' → logprob: -7.118375301361084
    8. ' ' → logprob: -7.368375301361084
    9. '   ' → logprob: -7.743375301361084
    10. '  
' → logprob: -7.993375301361084

Token 10: 'iers' (ID: 11012)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01651451550424099
    2. 'ières' → logprob: -5.141514301300049
    3. 'êtes' → logprob: -5.516514301300049
    4. 'iers' → logprob: -5.641514301300049
    5. 'rée' → logprob: -7.016514301300049
    6. 'l' → logprob: -7.516514301300049
    7. 'ré' → logprob: -7.641514301300049
    8. 'rès' → logprob: -7.641514301300049
    9. 're' → logprob: -9.516514778137207
    10. 'ri' → logprob: -9.641514778137207

Token 11: ' depuis' (ID: 16277)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.126853346824646
    2. ' et' → logprob: -1.126853346824646
    3. ' ' → logprob: -1.751853346824646
    4. '\n' → logprob: -3.2518534660339355
    5. 's' → logprob: -3.5018534660339355
    6. ' à' → logprob: -3.8768534660339355
    7. ' (' → logprob: -4.3768534660339355
    8. ' en' → logprob: -4.6268534660339355
    9. ',' → logprob: -4.7518534660339355
    10. ' ,' → logprob: -5.3768534660339355

Token 12: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3769383132457733
    2. ' l' → logprob: -1.5019383430480957
    3. ' input' → logprob: -3.1269383430480957
    4. 'input' → logprob: -4.501938343048096
    5. '   ' → logprob: -4.751938343048096
    6. ' ' → logprob: -4.751938343048096
    7. ' stdin' → logprob: -5.251938343048096
    8. ' la' → logprob: -5.501938343048096
    9. 'le' → logprob: -5.751938343048096
    10. ' le' → logprob: -6.126938343048096

Token 13: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.06500031054019928
    2. ''' → logprob: -3.815000295639038
    3. 'entrée' → logprob: -3.940000295639038
    4. 'e' → logprob: -4.565000534057617
    5. 'a' → logprob: -5.440000534057617
    6. '_' → logprob: -5.940000534057617
    7. ' input' → logprob: -7.065000534057617
    8. ' entrée' → logprob: -7.190000534057617
    9. ''ent' → logprob: -7.440000534057617
    10. 'input' → logprob: -7.690000534057617

Token 14: ' standard' (ID: 7024)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2683268189430237
    2. '   ' → logprob: -2.018326759338379
    3. '.' → logprob: -3.893326759338379
    4. '`' → logprob: -4.393326759338379
    5. '\' → logprob: -4.768326759338379
    6. ' en' → logprob: -4.893326759338379
    7. ' \' → logprob: -4.893326759338379
    8. ',' → logprob: -5.018326759338379
    9. ' ' → logprob: -5.268326759338379
    10. 's' → logprob: -5.393326759338379

Token 15: '.

' (ID: 364)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4473024904727936
    2. '   ' → logprob: -1.0723024606704712
    3. ' ' → logprob: -4.947302341461182
    4. '
' → logprob: -5.822302341461182
    5. '\' → logprob: -6.322302341461182
    6. '    ' → logprob: -6.697302341461182
    7. '    
' → logprob: -7.322302341461182
    8. '  ' → logprob: -7.572302341461182
    9. ',' → logprob: -7.697302341461182
    10. '  
' → logprob: -7.822302341461182

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032949901651591063
    2. '    ' → logprob: -6.253294944763184
    3. ' ' → logprob: -8.128294944763184
    4. 'return' → logprob: -8.378294944763184
    5. '"""' → logprob: -8.378294944763184
    6. '       ' → logprob: -8.878294944763184
    7. '```' → logprob: -9.003294944763184
    8. ')' → logprob: -9.753294944763184
    9. ' return' → logprob: -10.003294944763184
    10. '`' → logprob: -10.003294944763184

Token 17: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06754224002361298
    2. 'return' → logprob: -3.567542314529419
    3. 'n' → logprob: -4.06754207611084
    4. 'a' → logprob: -4.94254207611084
    5. 'x' → logprob: -5.69254207611084
    6. '```' → logprob: -5.69254207611084
    7. '"""' → logprob: -6.31754207611084
    8. '       ' → logprob: -6.44254207611084
    9. ' return' → logprob: -7.56754207611084
    10. 'r' → logprob: -8.06754207611084

Token 18: ':
' (ID: 734)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.9491986632347107
    2. '   ' → logprob: -1.3241987228393555
    3. ' ' → logprob: -2.3241987228393555
    4. ' `' → logprob: -3.0741987228393555
    5. '    ' → logprob: -3.1991987228393555
    6. ' int' → logprob: -3.3241987228393555
    7. ':' → logprob: -3.8241987228393555
    8. ' ,' → logprob: -3.9491987228393555
    9. '```' → logprob: -4.0741987228393555
    10. ' ' → logprob: -4.1991987228393555

Token 19: '       ' (ID: 309)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.6755249500274658
    2. ' tuple' → logprob: -1.0505249500274658
    3. '    ' → logprob: -3.050524950027466
    4. 'int' → logprob: -3.300524950027466
    5. '   ' → logprob: -3.550524950027466
    6. ' Tuple' → logprob: -4.175524711608887
    7. 'tuple' → logprob: -5.300524711608887
    8. ' (' → logprob: -5.925524711608887
    9. ' two' → logprob: -6.925524711608887
    10. '(int' → logprob: -7.050524711608887

Token 20: ' tuple' (ID: 31311)
  Prédit: ' tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.5256524682044983
    2. 'tuple' (adapté à ' tuple') → logprob: -1.7756524085998535
    3. 'Tuple' → logprob: -2.0256524085998535
    4. ' Tuple' → logprob: -2.4006524085998535
    5. 'int' → logprob: -4.4006524085998535
    6. ' int' → logprob: -6.2756524085998535
    7. '   ' → logprob: -6.6506524085998535
    8. '(tuple' → logprob: -7.4006524085998535
    9. '       ' → logprob: -7.6506524085998535
    10. 'tu' → logprob: -9.900652885437012

Token 21: ':' (ID: 25)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.04707322269678116
    2. '[int' → logprob: -3.5470731258392334
    3. '<int' → logprob: -5.2970733642578125
    4. ' (' → logprob: -5.2970733642578125
    5. ':' → logprob: -5.6720733642578125
    6. 'int' → logprob: -5.7970733642578125
    7. ' of' → logprob: -7.9220733642578125
    8. '   ' → logprob: -8.922073364257812
    9. ' int' → logprob: -9.672073364257812
    10. '(' → logprob: -10.047073364257812

Token 22: ' Un' (ID: 1367)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.05720921605825424
    2. ' (' → logprob: -2.9322092533111572
    3. 'int' → logprob: -7.307209014892578
    4. ' int' → logprob: -7.432209014892578
    5. '[int' → logprob: -8.057209014892578
    6. '   ' → logprob: -8.432209014892578
    7. '<int' → logprob: -8.557209014892578
    8. '(tuple' → logprob: -8.682209014892578
    9. '       ' → logprob: -9.932209014892578
    10. '(n' → logprob: -10.932209014892578

Token 23: ' tuple' (ID: 31311)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9628923535346985
    2. ' tuple' → logprob: -0.9628923535346985
    3. ' des' → logprob: -2.7128922939300537
    4. ' ' → logprob: -3.3378922939300537
    5. '(int' → logprob: -3.4628922939300537
    6. ' int' → logprob: -3.4628922939300537
    7. 'de' → logprob: -4.337892532348633
    8. 's' → logprob: -4.462892532348633
    9. ' entier' → logprob: -4.462892532348633
    10. '(' → logprob: -5.087892532348633

Token 24: ' contenant' (ID: 131049)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8081374168395996
    2. ' des' → logprob: -1.0581374168395996
    3. '(int' → logprob: -1.9331374168395996
    4. '<int' → logprob: -4.0581374168396
    5. '<|end|>' → logprob: -4.3081374168396
    6. ' de' → logprob: -5.1831374168396
    7. ' contenant' → logprob: -5.3081374168396
    8. '(' → logprob: -5.4331374168396
    9. '[int' → logprob: -5.4331374168396
    10. ' of' → logprob: -5.5581374168396

Token 25: ' deux' (ID: 10301)
  Prédit: ' deux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.7011144161224365
    2. 'de' → logprob: -1.3261144161224365
    3. ' (' → logprob: -1.7011144161224365
    4. '   ' → logprob: -4.451114654541016
    5. ' two' → logprob: -4.701114654541016
    6. ' ' → logprob: -4.701114654541016
    7. '(' → logprob: -5.076114654541016
    8. ' les' → logprob: -5.076114654541016
    9. '(int' → logprob: -5.951114654541016
    10. '(de' → logprob: -6.076114654541016

Token 26: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.042568255215883255
    2. ' int' → logprob: -3.2925682067871094
    3. ' entier' → logprob: -6.292568206787109
    4. 'ent' → logprob: -7.042568206787109
    5. ' integers' → logprob: -7.417568206787109
    6. ' ' → logprob: -7.667568206787109
    7. ' espaces' → logprob: -8.04256820678711
    8. ' nombres' → logprob: -9.16756820678711
    9. '_ent' → logprob: -9.16756820678711
    10. ' ' → logprob: -9.79256820678711

Token 27: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.00015586259542033076
    2. 'i' → logprob: -9.000155448913574
    3. 'ier' → logprob: -10.750155448913574
    4. '```' → logprob: -12.625155448913574
    5. 'ers' → logprob: -12.750155448913574
    6. '   ' → logprob: -13.250155448913574
    7. 'ières' → logprob: -14.125155448913574
    8. 't' → logprob: -14.875155448913574
    9. ' i' → logprob: -15.125155448913574
    10. 'er' → logprob: -15.375155448913574

Token 28: ' lus' (ID: 54762)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5479164123535156
    2. ',' → logprob: -1.0479164123535156
    3. '   ' → logprob: -4.172916412353516
    4. '(' → logprob: -4.172916412353516
    5. ')' → logprob: -4.422916412353516
    6. '(int' → logprob: -5.047916412353516
    7. ' ,' → logprob: -5.047916412353516
    8. '.' → logprob: -5.922916412353516
    9. ' ' → logprob: -6.047916412353516
    10. ' integers' → logprob: -6.547916412353516

Token 29: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09595596045255661
    2. '   ' → logprob: -2.4709558486938477
    3. '(' → logprob: -5.970955848693848
    4. ' ,' → logprob: -6.220955848693848
    5. ' (' → logprob: -7.595955848693848
    6. '.' → logprob: -7.720955848693848
    7. ')' → logprob: -8.095955848693848
    8. '```' → logprob: -8.220955848693848
    9. '    ' → logprob: -8.845955848693848
    10. '       ' → logprob: -8.970955848693848

Token 30: ' partir' (ID: 12100)
  Prédit: ' partir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partir' → logprob: -0.006183910183608532
    2. 'part' → logprob: -5.506184101104736
    3. '   ' → logprob: -7.756184101104736
    4. 'l' → logprob: -7.881184101104736
    5. ' ' → logprob: -8.006183624267578
    6. 'dep' → logprob: -8.381183624267578
    7. '_' → logprob: -9.006183624267578
    8. 'la' → logprob: -9.256183624267578
    9. ' ' → logprob: -9.256183624267578
    10. ' la' → logprob: -9.631183624267578

Token 31: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5446567535400391
    2. ' de' → logprob: -1.294656753540039
    3. ' d' → logprob: -2.169656753540039
    4. ' ' → logprob: -4.669656753540039
    5. '   ' → logprob: -4.919656753540039
    6. ' (' → logprob: -5.294656753540039
    7. ''' → logprob: -6.544656753540039
    8. ')' → logprob: -6.669656753540039
    9. ' du' → logprob: -7.044656753540039
    10. 'de' → logprob: -7.169656753540039

Token 32: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.2702285945415497
    2. 'l' → logprob: -1.520228624343872
    3. ' input' → logprob: -4.270228385925293
    4. ' ' → logprob: -6.520228385925293
    5. 'input' → logprob: -7.270228385925293
    6. ' la' → logprob: -7.270228385925293
    7. ' standard' → logprob: -7.770228385925293
    8. ' stdin' → logprob: -8.020228385925293
    9. '_l' → logprob: -9.145228385925293
    10. 'la' → logprob: -9.395228385925293

Token 33: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.10538771003484726
    2. ''' → logprob: -2.6053876876831055
    3. 'e' → logprob: -4.2303876876831055
    4. '_' → logprob: -5.4803876876831055
    5. ''_' → logprob: -6.1053876876831055
    6. ''ent' → logprob: -6.6053876876831055
    7. 'entrée' → logprob: -6.9803876876831055
    8. 'a' → logprob: -7.8553876876831055
    9. 'es' → logprob: -7.9803876876831055
    10. '_ent' → logprob: -8.105387687683105

Token 34: ' utilisateur' (ID: 115595)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10042253881692886
    2. ' standard' → logprob: -2.8504226207733154
    3. 'standard' → logprob: -3.6004226207733154
    4. ',' → logprob: -5.975422382354736
    5. '    ' → logprob: -5.975422382354736
    6. ')' → logprob: -6.350422382354736
    7. '    
' → logprob: -7.350422382354736
    8. ' ' → logprob: -7.475422382354736
    9. '```' → logprob: -8.100422859191895
    10. '       ' → logprob: -8.350422859191895

Token 35: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009946378879249096
    2. '\n' → logprob: -5.259946346282959
    3. ')' → logprob: -6.509946346282959
    4. '```' → logprob: -7.009946346282959
    5. '       ' → logprob: -7.509946346282959
    6. '\' → logprob: -8.259946823120117
    7. '    
' → logprob: -8.259946823120117
    8. '):' → logprob: -8.759946823120117
    9. '.' → logprob: -8.759946823120117
    10. '
' → logprob: -9.009946823120117

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008427576161921024
    2. '"""
' → logprob: -5.633427619934082
    3. '"""' → logprob: -6.133427619934082
    4. '```' → logprob: -6.133427619934082
    5. '\n' → logprob: -8.758427619934082
    6. '
' → logprob: -8.883427619934082
    7. '""' → logprob: -10.258427619934082
    8. '    
' → logprob: -10.383427619934082
    9. '``' → logprob: -10.633427619934082
    10. ')' → logprob: -10.883427619934082

Token 37: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10124388337135315
    2. '"""
' (adapté à ' """
') → logprob: -2.4762439727783203
    3. '"""' → logprob: -4.60124397277832
    4. '```' → logprob: -7.22624397277832
    5. '\n' → logprob: -7.60124397277832
    6. '       ' → logprob: -8.10124397277832
    7. '""' → logprob: -8.35124397277832
    8. ')' → logprob: -9.10124397277832
    9. ')
' → logprob: -9.60124397277832
    10. '"""

' → logprob: -10.47624397277832

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002910102193709463
    2. 'return' → logprob: -8.750290870666504
    3. 'input' → logprob: -9.625290870666504
    4. '       ' → logprob: -10.250290870666504
    5. ' return' → logprob: -11.750290870666504
    6. 'try' → logprob: -12.750290870666504
    7. 'n' → logprob: -12.875290870666504
    8. '    
' → logprob: -13.000290870666504
    9. 'line' → logprob: -13.000290870666504
    10. '    ' → logprob: -13.000290870666504

Token 39: ' A' (ID: 355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41351962089538574
    2. 'line' → logprob: -1.9135196208953857
    3. 'return' → logprob: -2.9135196208953857
    4. 'input' → logprob: -2.9135196208953857
    5. 'n' → logprob: -3.2885196208953857
    6. 'ligne' → logprob: -4.663519859313965
    7. 'try' → logprob: -4.788519859313965
    8. 'user' → logprob: -5.163519859313965
    9. 'a' → logprob: -5.288519859313965
    10. 'ent' → logprob: -5.788519859313965

Token 40: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2164095789194107
    2. ' =' → logprob: -1.8414095640182495
    3. '=' → logprob: -3.341409683227539
    4. ' ,' → logprob: -7.966409683227539
    5. ' ' → logprob: -9.341409683227539
    6. '=input' → logprob: -9.716409683227539
    7. '=int' → logprob: -9.716409683227539
    8. '   ' → logprob: -10.841409683227539
    9. 'input' → logprob: -11.841409683227539
    10. '  ' → logprob: -12.466409683227539

Token 41: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.1130816861987114
    2. 'int' → logprob: -2.238081693649292
    3. ' map' → logprob: -8.363081932067871
    4. '   ' → logprob: -11.488081932067871
    5. 'map' → logprob: -11.863081932067871
    6. ' input' → logprob: -12.863081932067871
    7. ' ' → logprob: -12.988081932067871
    8. '[int' → logprob: -14.363081932067871
    9. 'input' → logprob: -14.488081932067871
    10. ' ' → logprob: -14.613081932067871

Token 42: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6933026313781738
    2. '(input' → logprob: -0.6933026313781738
    3. 'input' → logprob: -8.818302154541016
    4. ' (' → logprob: -12.943302154541016
    5. '()' → logprob: -13.568302154541016
    6. ' input' → logprob: -13.693302154541016
    7. '(
' → logprob: -13.943302154541016
    8. '('' → logprob: -15.193302154541016
    9. '(int' → logprob: -15.568302154541016
    10. '(eval' → logprob: -15.693302154541016

Token 43: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.011443066410720348
    2. '()' → logprob: -4.511443138122559
    3. '()))' → logprob: -8.136443138122559
    4. '(' → logprob: -10.136443138122559
    5. ')' → logprob: -10.511443138122559
    6. ' ())' → logprob: -11.136443138122559
    7. '().' → logprob: -12.011443138122559
    8. '())
' → logprob: -12.136443138122559
    9. '();)' → logprob: -13.636443138122559
    10. '()),' → logprob: -13.886443138122559

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015555632300674915
    2. '    
' → logprob: -4.8905558586120605
    3. '\n' → logprob: -5.6405558586120605
    4. 'B' → logprob: -6.8905558586120605
    5. '  
' → logprob: -7.3905558586120605
    6. ')' → logprob: -7.7655558586120605
    7. ',' → logprob: -7.8905558586120605
    8. ' B' → logprob: -7.8905558586120605
    9. ' ' → logprob: -8.390555381774902
    10. '
' → logprob: -8.515555381774902

Token 45: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.8725799918174744
    2. '   ' → logprob: -0.8725799918174744
    3. ' B' → logprob: -2.247580051422119
    4. ' ' → logprob: -3.747580051422119
    5. '\n' → logprob: -4.622580051422119
    6. '    
' → logprob: -4.747580051422119
    7. ' 
' → logprob: -5.122580051422119
    8. '  
' → logprob: -5.247580051422119
    9. '  ' → logprob: -7.497580051422119
    10. ' \' → logprob: -7.497580051422119

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002818312495946884
    2. '=' → logprob: -5.8778181076049805
    3. ')' → logprob: -12.00281810760498
    4. ' ' → logprob: -13.12781810760498
    5. '(' → logprob: -13.12781810760498
    6. '()' → logprob: -13.25281810760498
    7. '  ' → logprob: -15.00281810760498
    8. '   ' → logprob: -15.00281810760498
    9. ' )' → logprob: -15.25281810760498
    10. '_' → logprob: -15.62781810760498

Token 47: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.00861729308962822
    2. 'int' → logprob: -4.758617401123047
    3. '=int' → logprob: -13.633617401123047
    4. '(int' → logprob: -13.883617401123047
    5. ' ' → logprob: -15.633617401123047
    6. ' ' → logprob: -15.758617401123047
    7. '<int' → logprob: -15.758617401123047
    8. '[int' → logprob: -15.758617401123047
    9. ' input' → logprob: -17.258617401123047
    10. ':int' → logprob: -17.633617401123047

Token 48: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.003203138941898942
    2. '(' → logprob: -5.75320291519165
    3. ' (' → logprob: -11.378203392028809
    4. '()' → logprob: -11.378203392028809
    5. 'input' → logprob: -13.378203392028809
    6. '(
' → logprob: -14.628203392028809
    7. '=input' → logprob: -15.753203392028809
    8. '   ' → logprob: -16.503202438354492
    9. ' ' → logprob: -16.628202438354492
    10. '<input' → logprob: -16.753202438354492

Token 49: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.018336646258831024
    2. '()' → logprob: -4.018336772918701
    3. ')' → logprob: -9.018336296081543
    4. '()))' → logprob: -10.518336296081543
    5. '())
' → logprob: -10.768336296081543
    6. ' ())' → logprob: -11.393336296081543
    7. '()
' → logprob: -12.518336296081543
    8. '(' → logprob: -13.893336296081543
    9. '())

' → logprob: -14.518336296081543
    10. '();)' → logprob: -15.018336296081543

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004731299355626106
    2. '    
' → logprob: -6.004731178283691
    3. '
' → logprob: -6.379731178283691
    4. 'return' → logprob: -7.754731178283691
    5. ' return' → logprob: -9.879731178283691
    6. '	return' → logprob: -10.129731178283691
    7. '  
' → logprob: -11.879731178283691
    8. '       ' → logprob: -12.004731178283691
    9. '<|end|>' → logprob: -12.004731178283691
    10. '```' → logprob: -12.379731178283691

Token 51: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07973881810903549
    2. 'return' (adapté à ' return') → logprob: -2.7047388553619385
    3. '
' → logprob: -5.204738616943359
    4. ' return' → logprob: -5.704738616943359
    5. '    
' → logprob: -7.829738616943359
    6. '	return' → logprob: -7.829738616943359
    7. '```' → logprob: -10.32973861694336
    8. '<|end|>' → logprob: -10.45473861694336
    9. ' ' → logprob: -11.07973861694336
    10. '    ' → logprob: -11.57973861694336

Token 52: ' A' (ID: 355)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5825367569923401
    2. ' A' → logprob: -0.9575367569923401
    3. '(A' → logprob: -3.3325366973876953
    4. '(' → logprob: -4.082536697387695
    5. 'A' → logprob: -5.332536697387695
    6. ' ' → logprob: -8.207536697387695
    7. ' ' → logprob: -12.582536697387695
    8. '  ' → logprob: -13.207536697387695
    9. '	A' → logprob: -13.207536697387695
    10. ' А' → logprob: -14.457536697387695

Token 53: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016611411410849541
    2. ',B' → logprob: -9.375165939331055
    3. ' ,' → logprob: -9.500165939331055
    4. ',
' → logprob: -12.500165939331055
    5. ',A' → logprob: -13.625165939331055
    6. '`,' → logprob: -14.375165939331055
    7. ',b' → logprob: -15.875165939331055
    8. '   ' → logprob: -16.000165939331055
    9. ',
' → logprob: -16.375165939331055
    10. '',' → logprob: -16.625165939331055

Token 54: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.002698474330827594
    2. 'B' → logprob: -6.0026984214782715
    3. ' ' → logprob: -8.50269889831543
    4. ' ' → logprob: -10.87769889831543
    5. ''' → logprob: -15.25269889831543
    6. '`' → logprob: -15.37769889831543
    7. ')' → logprob: -16.50269889831543
    8. '    ' → logprob: -16.50269889831543
    9. ' `' → logprob: -16.62769889831543
    10. '```' → logprob: -16.87769889831543

Token 55: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2671408951282501
    2. '<|end|>' → logprob: -1.6421408653259277
    3. 'def' → logprob: -4.517140865325928
    4. '#' → logprob: -4.767140865325928
    5. '

' → logprob: -5.017140865325928
    6. '```' → logprob: -5.267140865325928
    7. '\n' → logprob: -5.517140865325928
    8. 'newline' → logprob: -6.767140865325928
    9. '<|end|>' → logprob: -7.267140865325928
    10. '[' → logprob: -7.517140865325928

Token 56: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.115059733390808
    2. '
' → logprob: -1.240059733390808
    3. '<|end|>' → logprob: -1.615059733390808
    4. '#' → logprob: -1.990059733390808
    5. 'A' → logprob: -4.240059852600098
    6. '```' → logprob: -5.365059852600098
    7. '\n' → logprob: -5.865059852600098
    8. 'a' → logprob: -5.990059852600098
    9. '

' → logprob: -6.115059852600098
    10. '\' → logprob: -6.365059852600098

Token 57: ' find' (ID: 1646)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.1304713785648346
    2. ' compute' → logprob: -2.6304714679718018
    3. ' sum' → logprob: -3.7554714679718018
    4. ' add' → logprob: -5.130471229553223
    5. ' solve' → logprob: -5.505471229553223
    6. ' read' → logprob: -5.755471229553223
    7. ' main' → logprob: -5.880471229553223
    8. ' process' → logprob: -6.005471229553223
    9. ' multiply' → logprob: -6.005471229553223
    10. ' space' → logprob: -6.630471229553223

Token 58: '_missing' (ID: 99060)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.09737556427717209
    2. '_' → logprob: -2.8473756313323975
    3. '_min' → logprob: -4.472375392913818
    4. '_sum' → logprob: -5.097375392913818
    5. '_l' → logprob: -5.722375392913818
    6. '_div' → logprob: -6.097375392913818
    7. '_best' → logprob: -6.472375392913818
    8. '_small' → logprob: -6.972375392913818
    9. '_missing' → logprob: -7.347375392913818
    10. '_f' → logprob: -7.347375392913818

Token 59: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.010953021235764027
    2. '_numbers' → logprob: -5.260952949523926
    3. '_element' → logprob: -6.010952949523926
    4. '_digit' → logprob: -7.260952949523926
    5. '_value' → logprob: -7.760952949523926
    6. '_integer' → logprob: -7.760952949523926
    7. '_' → logprob: -7.885952949523926
    8. '_square' → logprob: -8.760952949523926
    9. '_sum' → logprob: -8.885952949523926
    10. '_pair' → logprob: -8.885952949523926

Token 60: '(A' (ID: 10706)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.33507710695266724
    2. '(' → logprob: -1.3350770473480225
    3. '(A' → logprob: -4.085077285766602
    4. '(N' → logprob: -6.335077285766602
    5. '(n' → logprob: -6.710077285766602
    6. '(a' → logprob: -7.085077285766602
    7. '()' → logprob: -8.710077285766602
    8. '((' → logprob: -9.585077285766602
    9. '(first' → logprob: -9.960077285766602
    10. '(s' → logprob: -9.960077285766602

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002518031978979707
    2. ' ,' → logprob: -8.375251770019531
    3. ',B' → logprob: -11.375251770019531
    4. '):' → logprob: -12.250251770019531
    5. ')' → logprob: -13.500251770019531
    6. ',
' → logprob: -14.000251770019531
    7. ',n' → logprob: -14.625251770019531
    8. ':' → logprob: -14.625251770019531
    9. 's' → logprob: -14.750251770019531
    10. ',N' → logprob: -14.875251770019531

Token 62: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.388303279876709
    2. ' B' → logprob: -1.138303279876709
    3. 'N' → logprob: -7.013303279876709
    4. ' N' → logprob: -8.388303756713867
    5. ' ' → logprob: -8.638303756713867
    6. 'n' → logprob: -10.263303756713867
    7. '   ' → logprob: -10.263303756713867
    8. ' n' → logprob: -10.638303756713867
    9. ' ' → logprob: -12.325803756713867
    10. '  ' → logprob: -12.450803756713867

Token 63: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0022907331585884094
    2. ',' → logprob: -6.127290725708008
    3. ':' → logprob: -9.752290725708008
    4. '):
' → logprob: -10.502290725708008
    5. ')' → logprob: -11.502290725708008
    6. '   ' → logprob: -11.877290725708008
    7. ' ):' → logprob: -14.127290725708008
    8. '=' → logprob: -14.377290725708008
    9. '():' → logprob: -14.752290725708008
    10. '):
' → logprob: -15.127290725708008

Token 64: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06848755478858948
    2. ':
' → logprob: -3.1934876441955566
    3. '   ' → logprob: -3.6934876441955566
    4. ',' → logprob: -9.818487167358398
    5. ' :' → logprob: -10.193487167358398
    6. '
' → logprob: -10.318487167358398
    7. '    ' → logprob: -10.443487167358398
    8. ' :
' → logprob: -10.693487167358398
    9. '    
' → logprob: -10.818487167358398
    10. ' 
' → logprob: -11.318487167358398

Token 65: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05165820196270943
    2. ' if' → logprob: -3.6766581535339355
    3. ' for' → logprob: -5.4266581535339355
    4. ' return' → logprob: -5.5516581535339355
    5. '    
' → logprob: -5.9266581535339355
    6. ' n' → logprob: -5.9266581535339355
    7. 'if' → logprob: -6.5516581535339355
    8. '
' → logprob: -6.5516581535339355
    9. '```' → logprob: -6.6766581535339355
    10. ' numbers' → logprob: -7.0516581535339355

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059554073959589005
    2. '    ' → logprob: -3.434554100036621
    3. ' """
' → logprob: -4.684554100036621
    4. '"""
' → logprob: -4.809554100036621
    5. ' if' → logprob: -5.934554100036621
    6. '"""' → logprob: -6.809554100036621
    7. '"' → logprob: -7.309554100036621
    8. '```' → logprob: -7.559554100036621
    9. ' """' → logprob: -7.684554100036621
    10. 'if' → logprob: -8.184554100036621

Token 67: ' Trou' (ID: 58947)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18671353161334991
    2. ' """
' → logprob: -2.436713457107544
    3. '"""
' → logprob: -3.686713457107544
    4. '
' → logprob: -3.936713457107544
    5. ' if' → logprob: -4.561713695526123
    6. 'if' → logprob: -5.311713695526123
    7. ' 
' → logprob: -5.686713695526123
    8. '    
' → logprob: -6.311713695526123
    9. ' missing' → logprob: -6.561713695526123
    10. ' for' → logprob: -6.561713695526123

Token 68: 've' (ID: 737)
  Prédit: 've'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 've' → logprob: -0.00040910433745011687
    2. 'ver' → logprob: -8.000409126281738
    3. '   ' → logprob: -11.125409126281738
    4. 'v' → logprob: -11.500409126281738
    5. '\' → logprob: -12.125409126281738
    6. '       ' → logprob: -12.625409126281738
    7. '

' → logprob: -12.625409126281738
    8. '>' → logprob: -12.750409126281738
    9. '	' → logprob: -13.375409126281738
    10. '_' → logprob: -13.375409126281738

Token 69: ' et' (ID: 859)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.6088021993637085
    2. ' l' → logprob: -1.3588021993637085
    3. ' the' → logprob: -2.483802318572998
    4. ' la' → logprob: -3.608802318572998
    5. '_missing' → logprob: -3.733802318572998
    6. 'le' → logprob: -3.983802318572998
    7. '_le' → logprob: -4.358802318572998
    8. ' missing' → logprob: -4.733802318572998
    9. ' ' → logprob: -5.233802318572998
    10. 'l' → logprob: -5.233802318572998

Token 70: ' retourne' (ID: 178818)
  Prédit: ' ren'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ren' → logprob: -0.1718451827764511
    2. ' retourne' → logprob: -2.2968451976776123
    3. ' return' → logprob: -3.5468451976776123
    4. 'ren' → logprob: -5.296844959259033
    5. ' affiche' → logprob: -5.296844959259033
    6. 'return' → logprob: -5.546844959259033
    7. ' le' → logprob: -5.671844959259033
    8. ' ' → logprob: -5.796844959259033
    9. '   ' → logprob: -6.546844959259033
    10. ' returns' → logprob: -6.796844959259033

Token 71: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.7172195911407471
    2. ' l' → logprob: -1.342219591140747
    3. ' the' → logprob: -1.967219591140747
    4. ' la' → logprob: -2.967219591140747
    5. 'le' → logprob: -3.467219591140747
    6. ' ' → logprob: -4.342219352722168
    7. 'the' → logprob: -5.217219352722168
    8. 'l' → logprob: -5.717219352722168
    9. '<|end|>' → logprob: -6.592219352722168
    10. ' ' → logprob: -6.717219352722168

Token 72: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.07950598001480103
    2. ' missing' → logprob: -3.8295059204101562
    3. 'nombre' → logprob: -3.9545059204101562
    4. ' ' → logprob: -4.454505920410156
    5. ' troisième' → logprob: -4.454505920410156
    6. ' numéro' → logprob: -5.579505920410156
    7. ' number' → logprob: -6.079505920410156
    8. ' entier' → logprob: -6.954505920410156
    9. ' premier' → logprob: -7.204505920410156
    10. '   ' → logprob: -7.329505920410156

Token 73: ' man' (ID: 873)
  Prédit: ' man'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' man' → logprob: -0.02753465808928013
    2. 'man' → logprob: -3.6525347232818604
    3. ' missing' → logprob: -7.152534484863281
    4. ' manc' → logprob: -9.152534484863281
    5. 'missing' → logprob: -9.527534484863281
    6. '_missing' → logprob: -9.777534484863281
    7. '   ' → logprob: -9.902534484863281
    8. '_man' → logprob: -10.652534484863281
    9. ' qui' → logprob: -10.777534484863281
    10. ' absent' → logprob: -10.777534484863281

Token 74: 'quant' (ID: 39719)
  Prédit: 'quant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quant' → logprob: -0.014989874325692654
    2. 'que' → logprob: -4.639989852905273
    3. 'q' → logprob: -6.264989852905273
    4. 'qu' → logprob: -7.264989852905273
    5. 'ant' → logprob: -7.514989852905273
    6. 'quent' → logprob: -7.639989852905273
    7. '   ' → logprob: -8.014989852905273
    8. '_' → logprob: -8.514989852905273
    9. '```' → logprob: -8.639989852905273
    10. '_quant' → logprob: -8.764989852905273

Token 75: ' parmi' (ID: 51713)
  Prédit: ' entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.04982934519648552
    2. ' between' → logprob: -4.049829483032227
    3. ' dans' → logprob: -4.299829483032227
    4. 'entre' → logprob: -5.299829483032227
    5. '   ' → logprob: -5.799829483032227
    6. '_between' → logprob: -6.424829483032227
    7. ' ' → logprob: -6.674829483032227
    8. '_' → logprob: -7.049829483032227
    9. ' qui' → logprob: -7.049829483032227
    10. ' des' → logprob: -7.049829483032227

Token 76: ' les' (ID: 1341)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.925339937210083
    2. '[' → logprob: -2.175339937210083
    3. ' ' → logprob: -2.175339937210083
    4. ' A' → logprob: -2.300339937210083
    5. '1' → logprob: -2.800339937210083
    6. ' les' → logprob: -3.050339937210083
    7. '3' → logprob: -3.550339937210083
    8. '0' → logprob: -3.550339937210083
    9. 'A' → logprob: -3.550339937210083
    10. '   ' → logprob: -3.675339937210083

Token 77: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0384318828582764
    2. '1' → logprob: -1.5384318828582764
    3. '0' → logprob: -2.2884318828582764
    4. ' [' → logprob: -2.4134318828582764
    5. '3' → logprob: -2.6634318828582764
    6. ' trois' → logprob: -2.7884318828582764
    7. ' A' → logprob: -3.2884318828582764
    8. '[' → logprob: -3.6634318828582764
    9. 'A' → logprob: -4.4134321212768555
    10. ' les' → logprob: -5.0384321212768555

Token 78: 'iers' (ID: 11012)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.017619384452700615
    2. 'ti' → logprob: -4.142619609832764
    3. 'tiers' → logprob: -6.767619609832764
    4. 'tier' → logprob: -9.267619132995605
    5. 'i' → logprob: -9.392619132995605
    6. '```' → logprob: -10.017619132995605
    7. 'u' → logprob: -10.142619132995605
    8. 'iers' → logprob: -10.267619132995605
    9. 'tı' → logprob: -10.517619132995605
    10. 'tir' → logprob: -10.767619132995605

Token 79: ' ' (ID: 220)
  Prédit: ' compris'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' compris' → logprob: -1.1543974876403809
    2. 's' → logprob: -1.4043974876403809
    3. ' entre' → logprob: -1.7793974876403809
    4. ' dans' → logprob: -2.654397487640381
    5. 'dans' → logprob: -3.029397487640381
    6. 'entre' → logprob: -3.404397487640381
    7. ' de' → logprob: -4.029397487640381
    8. '   ' → logprob: -4.279397487640381
    9. ' d' → logprob: -4.279397487640381
    10. '[' → logprob: -4.279397487640381

Token 80: '1' (ID: 16)
  Prédit: ' entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -1.184043526649475
    2. ' compris' → logprob: -1.184043526649475
    3. 'entre' → logprob: -1.934043526649475
    4. 'dans' → logprob: -2.6840434074401855
    5. ' dans' → logprob: -3.1840434074401855
    6. ' de' → logprob: -3.3090434074401855
    7. 'de' → logprob: -4.0590434074401855
    8. 's' → logprob: -4.1840434074401855
    9. '   ' → logprob: -4.3090434074401855
    10. '1' → logprob: -4.5590434074401855

Token 81: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04338520020246506
    2. '  ' → logprob: -4.043385028839111
    3. ' à' → logprob: -4.793385028839111
    4. ',' → logprob: -4.918385028839111
    5. ' ,' → logprob: -5.043385028839111
    6. '   ' → logprob: -6.543385028839111
    7. 's' → logprob: -8.66838550567627
    8. ' et' → logprob: -8.91838550567627
    9. '<|end|>' → logprob: -8.91838550567627
    10. ' a' → logprob: -9.04338550567627

Token 82: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.044628825038671494
    2. '2' → logprob: -3.169628858566284
    3. ' ,' → logprob: -6.669628620147705
    4. ',' → logprob: -8.294629096984863
    5. '  ' → logprob: -9.794629096984863
    6. '3' → logprob: -10.419629096984863
    7. ' 
' → logprob: -12.294629096984863
    8. '0' → logprob: -12.544629096984863
    9. ' A' → logprob: -12.794629096984863
    10. ' ```' → logprob: -12.919629096984863

Token 83: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1377658247947693
    2. ' ' → logprob: -2.137765884399414
    3. '3' → logprob: -4.887765884399414
    4. '9' → logprob: -7.137765884399414
    5. ' N' → logprob: -7.887765884399414
    6. '10' → logprob: -7.887765884399414
    7. 'n' → logprob: -8.012765884399414
    8. ' n' → logprob: -8.262765884399414
    9. 'N' → logprob: -8.262765884399414
    10. '4' → logprob: -8.262765884399414

Token 84: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.033717624843120575
    2. ' ,' → logprob: -3.408717632293701
    3. ' ' → logprob: -10.158717155456543
    4. '3' → logprob: -11.408717155456543
    5. ',...' → logprob: -11.533717155456543
    6. ',
' → logprob: -12.033717155456543
    7. '  ' → logprob: -13.533717155456543
    8. '   ' → logprob: -14.283717155456543
    9. '0' → logprob: -14.533717155456543
    10. '...' → logprob: -14.658717155456543

Token 85: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.3868839740753174
    2. ' ' → logprob: -1.1368839740753174
    3. ' ' → logprob: -11.511883735656738
    4. '  ' → logprob: -14.636883735656738
    5. ' trois' → logprob: -14.636883735656738
    6. '```' → logprob: -14.636883735656738
    7. '' → logprob: -15.136883735656738
    8. '{' → logprob: -15.261883735656738
    9. ' ' → logprob: -15.386883735656738
    10. '۳' → logprob: -15.636883735656738

Token 86: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00861528143286705
    2. ' ' → logprob: -4.758615493774414
    3. '  ' → logprob: -15.383615493774414
    4. '```' → logprob: -15.758615493774414
    5. '۳' → logprob: -16.133615493774414
    6. ' ' → logprob: -16.633615493774414
    7. '   ' → logprob: -17.008615493774414
    8. '{' → logprob: -17.133615493774414
    9. '' → logprob: -17.258615493774414
    10. '³' → logprob: -17.508615493774414

Token 87: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4932071268558502
    2. ',' → logprob: -1.9932070970535278
    3. ':' → logprob: -2.1182072162628174
    4. '   ' → logprob: -2.1182072162628174
    5. ' :' → logprob: -5.243206977844238
    6. ' ' → logprob: -6.868206977844238
    7. ' entre' → logprob: -6.868206977844238
    8. ' ,' → logprob: -7.118206977844238
    9. '  ' → logprob: -7.493206977844238
    10. '```' → logprob: -7.493206977844238

Token 88: ' sachant' (ID: 174239)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2121383100748062
    2. ' en' → logprob: -2.0871384143829346
    3. ',' → logprob: -4.2121381759643555
    4. ' 
' → logprob: -5.0871381759643555
    5. ' entre' → logprob: -5.2121381759643555
    6. '    
' → logprob: -5.2121381759643555
    7. '.' → logprob: -5.2121381759643555
    8. ' ,' → logprob: -5.5871381759643555
    9. '
' → logprob: -5.7121381759643555
    10. '    ' → logprob: -5.7121381759643555

Token 89: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.47835952043533325
    2. ' ' → logprob: -1.2283594608306885
    3. ' that' → logprob: -3.1033594608306885
    4. ' qu' → logprob: -4.228359699249268
    5. ' les' → logprob: -4.603359699249268
    6. ' ' → logprob: -5.853359699249268
    7. '<|end|>' → logprob: -5.978359699249268
    8. 's' → logprob: -6.353359699249268
    9. ' A' → logprob: -6.478359699249268
    10. 'que' → logprob: -6.603359699249268

Token 90: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.06003251299262047
    2. 'A' → logprob: -3.310032606124878
    3. ' ' → logprob: -4.560032367706299
    4. ' B' → logprob: -5.310032367706299
    5. ' les' → logprob: -6.185032367706299
    6. '   ' → logprob: -6.310032367706299
    7. 'B' → logprob: -7.810032367706299
    8. ' que' → logprob: -7.810032367706299
    9. ' l' → logprob: -7.935032367706299
    10. ' (' → logprob: -8.310032844543457

Token 91: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16613684594631195
    2. ' et' → logprob: -2.6661367416381836
    3. ' and' → logprob: -2.6661367416381836
    4. ' ,' → logprob: -5.291136741638184
    5. ' est' → logprob: -6.291136741638184
    6. '<|end|>' → logprob: -6.416136741638184
    7. ' ' → logprob: -6.541136741638184
    8. ' is' → logprob: -7.166136741638184
    9. 'et' → logprob: -7.291136741638184
    10. ' a' → logprob: -7.416136741638184

Token 92: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.10042200237512589
    2. 'B' → logprob: -2.350421905517578
    3. '<|end|>' → logprob: -8.600421905517578
    4. ' ' → logprob: -10.600421905517578
    5. '<|end|>' → logprob: -12.725421905517578
    6. ' ' → logprob: -14.600421905517578
    7. '  ' → logprob: -14.600421905517578
    8. '   ' → logprob: -15.100421905517578
    9. ',' → logprob: -15.100421905517578
    10. '```' → logprob: -15.350421905517578

Token 93: ' sont' (ID: 5242)
  Prédit: ' sont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.10306669026613235
    2. 's' → logprob: -2.4780666828155518
    3. ' ont' → logprob: -5.478066921234131
    4. ' are' → logprob: -5.978066921234131
    5. ' ne' → logprob: -6.353066921234131
    6. ' ' → logprob: -6.978066921234131
    7. ' man' → logprob: -7.103066921234131
    8. ' couvr' → logprob: -7.478066921234131
    9. ' )' → logprob: -7.853066921234131
    10. ' seront' → logprob: -7.978066921234131

Token 94: ' deux' (ID: 10301)
  Prédit: ' deux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.7086634635925293
    2. ' distinct' → logprob: -1.7086634635925293
    3. 'de' → logprob: -1.9586634635925293
    4. 'distinct' → logprob: -2.0836634635925293
    5. 'diff' → logprob: -3.9586634635925293
    6. ' différents' → logprob: -4.208663463592529
    7. 'd' → logprob: -4.833663463592529
    8. ' two' → logprob: -4.833663463592529
    9. ' ' → logprob: -6.333663463592529
    10. ' les' → logprob: -7.083663463592529

Token 95: ' d' (ID: 272)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.019198883324861526
    2. ' numbers' → logprob: -5.269198894500732
    3. ' nombres' → logprob: -5.394198894500732
    4. '<|end|>' → logprob: -5.769198894500732
    5. ' of' → logprob: -6.019198894500732
    6. ' ent' → logprob: -7.394198894500732
    7. ' parmi' → logprob: -7.394198894500732
    8. '<|end|>' → logprob: -7.519198894500732
    9. 'des' → logprob: -7.644198894500732
    10. ' valeurs' → logprob: -8.019198417663574

Token 96: ''entre' (ID: 54527)
  Prédit: 'eux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eux' → logprob: -0.12803564965724945
    2. ''entre' → logprob: -2.253035545349121
    3. 'e' → logprob: -5.003035545349121
    4. 'es' → logprob: -5.878035545349121
    5. ''e' → logprob: -6.503035545349121
    6. '’entre' → logprob: -6.878035545349121
    7. ' entre' → logprob: -6.878035545349121
    8. ' eux' → logprob: -7.253035545349121
    9. ''ent' → logprob: -7.878035545349121
    10. 'entre' → logprob: -8.003035545349121

Token 97: ' eux' (ID: 36371)
  Prédit: ' eux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' eux' → logprob: -0.12047389894723892
    2. 'eux' → logprob: -3.120473861694336
    3. ' les' → logprob: -3.620473861694336
    4. 'les' → logprob: -3.745473861694336
    5. 'ces' → logprob: -4.995473861694336
    6. '```' → logprob: -5.495473861694336
    7. ' ces' → logprob: -5.870473861694336
    8. ' ' → logprob: -6.245473861694336
    9. '3' → logprob: -6.495473861694336
    10. 'e' → logprob: -7.620473861694336

Token 98: '.

' (ID: 364)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5406988859176636
    2. '   ' → logprob: -1.4156988859176636
    3. ',' → logprob: -2.290699005126953
    4. ')' → logprob: -2.665699005126953
    5. ':' → logprob: -6.165699005126953
    6. 'def' → logprob: -7.415699005126953
    7. ').' → logprob: -8.040699005126953
    8. '  ' → logprob: -9.040699005126953
    9. '...' → logprob: -9.290699005126953
    10. '<|end|>' → logprob: -9.290699005126953

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007244533859193325
    2. '```' → logprob: -6.13224458694458
    3. '
' → logprob: -6.75724458694458
    4. 'def' → logprob: -6.88224458694458
    5. ' 
' → logprob: -7.63224458694458
    6. 'n' → logprob: -7.88224458694458
    7. '"""
' → logprob: -7.88224458694458
    8. '    
' → logprob: -8.257244110107422
    9. ')' → logprob: -8.257244110107422
    10. '"""' → logprob: -8.382244110107422

Token 100: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037522208876907825
    2. '
' → logprob: -6.5037522315979
    3. '```' → logprob: -6.5037522315979
    4. 'def' → logprob: -8.378751754760742
    5. '    
' → logprob: -8.878751754760742
    6. '    ' → logprob: -9.503751754760742
    7. 'n' → logprob: -9.878751754760742
    8. ' 
' → logprob: -10.128751754760742
    9. ' indentation' → logprob: -10.128751754760742
    10. '"""
' → logprob: -10.878751754760742

Token 101: ':
' (ID: 734)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5389031767845154
    2. ',' → logprob: -1.6639032363891602
    3. '(' → logprob: -2.78890323638916
    4. '   ' → logprob: -3.03890323638916
    5. '.' → logprob: -3.16390323638916
    6. '_' → logprob: -3.53890323638916
    7. ':' → logprob: -3.78890323638916
    8. ')' → logprob: -4.53890323638916
    9. '=' → logprob: -5.41390323638916
    10. ' (' → logprob: -6.28890323638916

Token 102: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006737153977155685
    2. ' A' → logprob: -5.756737232208252
    3. 'A' → logprob: -6.381737232208252
    4. ' self' → logprob: -6.756737232208252
    5. 'self' → logprob: -7.631737232208252
    6. ' ' → logprob: -9.631736755371094
    7. '       ' → logprob: -9.756736755371094
    8. '    ' → logprob: -10.131736755371094
    9. '  ' → logprob: -10.506736755371094
    10. '    
' → logprob: -11.631736755371094

Token 103: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.012301607057452202
    2. '   ' → logprob: -4.637301445007324
    3. ' A' → logprob: -6.637301445007324
    4. 'self' → logprob: -7.512301445007324
    5. 'int' → logprob: -7.512301445007324
    6. '
' → logprob: -10.137301445007324
    7. 'Two' → logprob: -10.637301445007324
    8. ' ' → logprob: -11.137301445007324
    9. '```' → logprob: -11.137301445007324
    10. '  ' → logprob: -11.262301445007324

Token 104: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027718624914996326
    2. ' ,' → logprob: -8.250277519226074
    3. '<|end|>' → logprob: -11.875277519226074
    4. ',
' → logprob: -12.250277519226074
    5. ':' → logprob: -13.375277519226074
    6. ',int' → logprob: -14.250277519226074
    7. ')' → logprob: -14.375277519226074
    8. '<|end|>' → logprob: -15.250277519226074
    9. ',

' → logprob: -15.625277519226074
    10. '   ' → logprob: -16.000276565551758

Token 105: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00015419373812619597
    2. ' int' → logprob: -8.875154495239258
    3. '   ' → logprob: -11.375154495239258
    4. ')' → logprob: -13.750154495239258
    5. '):' → logprob: -13.875154495239258
    6. ',' → logprob: -15.125154495239258
    7. '):
' → logprob: -16.000154495239258
    8. '[int' → logprob: -16.625154495239258
    9. ':int' → logprob: -16.625154495239258
    10. ',int' → logprob: -16.750154495239258

Token 106: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0027523303870111704
    2. '):' → logprob: -6.002752304077148
    3. ')' → logprob: -8.377752304077148
    4. '),' → logprob: -11.127752304077148
    5. '):
' → logprob: -11.127752304077148
    6. '   ' → logprob: -11.877752304077148
    7. ',
' → logprob: -12.252752304077148
    8. ' ,' → logprob: -13.002752304077148
    9. ',int' → logprob: -13.877752304077148
    10. '```' → logprob: -15.002752304077148

Token 107: ' Premier' (ID: 27686)
  Prédit: ' Le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Le' → logprob: -1.3275489807128906
    2. ' Un' → logprob: -1.5775489807128906
    3. ' int' → logprob: -1.5775489807128906
    4. ' The' → logprob: -1.8275489807128906
    5. ' Premier' → logprob: -3.5775489807128906
    6. '       ' → logprob: -3.7025489807128906
    7. 'int' → logprob: -3.8275489807128906
    8. ' un' → logprob: -4.327548980712891
    9. 'Un' → logprob: -4.452548980712891
    10. ' ' → logprob: -4.452548980712891

Token 108: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.3086116909980774
    2. ' des' → logprob: -1.9336116313934326
    3. ' entier' → logprob: -3.0586116313934326
    4. ' ent' → logprob: -3.9336116313934326
    5. ',' → logprob: -4.058611869812012
    6. 'nombre' → logprob: -4.433611869812012
    7. 'ent' → logprob: -4.433611869812012
    8. ' ,' → logprob: -4.933611869812012
    9. ' nombres' → logprob: -6.058611869812012
    10. ' number' → logprob: -7.058611869812012

Token 109: ' donné' (ID: 52079)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16547945141792297
    2. ',' → logprob: -1.9154794216156006
    3. '   ' → logprob: -5.66547966003418
    4. '<|end|>' → logprob: -6.91547966003418
    5. '),' → logprob: -7.91547966003418
    6. ',
' → logprob: -8.91547966003418
    7. ')
' → logprob: -9.41547966003418
    8. '<|end|>' → logprob: -9.66547966003418
    9. ' ,' → logprob: -10.29047966003418
    10. '```' → logprob: -10.91547966003418

Token 110: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37510237097740173
    2. '   ' → logprob: -1.7501024007797241
    3. ',' → logprob: -2.0001022815704346
    4. '```' → logprob: -6.250102519989014
    5. '    
' → logprob: -8.250102043151855
    6. ')
' → logprob: -8.500102043151855
    7. '  
' → logprob: -8.750102043151855
    8. ' )' → logprob: -8.750102043151855
    9. '<|end|>' → logprob: -8.875102043151855
    10. ',
' → logprob: -9.000102043151855

Token 111: 'do' (ID: 2408)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02553236484527588
    2. ',' → logprob: -4.275532245635986
    3. ')
' → logprob: -4.525532245635986
    4. '),' → logprob: -9.025532722473145
    5. '):
' → logprob: -9.525532722473145
    6. ')
' → logprob: -9.525532722473145
    7. '   ' → logprob: -9.900532722473145
    8. '):' → logprob: -10.275532722473145
    9. '1' → logprob: -10.525532722473145
    10. '2' → logprob: -10.900532722473145

Token 112: 'it' (ID: 278)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.6493198871612549
    2. 'it' → logprob: -0.8993198871612549
    3. 'nc' → logprob: -4.399319648742676
    4. 'c' → logprob: -4.399319648742676
    5. '   ' → logprob: -4.524319648742676
    6. '```' → logprob: -4.649319648742676
    7. 'i' → logprob: -5.149319648742676
    8. 't' → logprob: -5.524319648742676
    9. 'ct' → logprob: -6.149319648742676
    10. 'n' → logprob: -6.149319648742676

Token 113: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.4458460211753845
    2. 'être' → logprob: -1.0708460807800293
    3. ' etre' → logprob: -5.445846080780029
    4. 'ê' → logprob: -5.945846080780029
    5. '<|end|>' → logprob: -6.070846080780029
    6. ''être' → logprob: -6.320846080780029
    7. 'êt' → logprob: -6.570846080780029
    8. ' ê' → logprob: -6.695846080780029
    9. '’être' → logprob: -7.070846080780029
    10. 'êtres' → logprob: -7.820846080780029

Token 114: ' soit' (ID: 17293)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4089481830596924
    2. 'diff' → logprob: -2.1589481830596924
    3. 'dans' → logprob: -2.5339481830596924
    4. 'par' → logprob: -2.6589481830596924
    5. ' ' → logprob: -3.4089481830596924
    6. 'so' → logprob: -5.283947944641113
    7. 'un' → logprob: -5.283947944641113
    8. 'entre' → logprob: -5.408947944641113
    9. ' différent' → logprob: -5.783947944641113
    10. 'distinct' → logprob: -5.783947944641113

Token 115: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007099074311554432
    2. ' ' → logprob: -5.007099151611328
    3. 'par' → logprob: -8.132099151611328
    4. '2' → logprob: -10.507099151611328
    5. 'un' → logprob: -10.632099151611328
    6. '```' → logprob: -11.882099151611328
    7. 'dans' → logprob: -12.007099151611328
    8. '   ' → logprob: -12.007099151611328
    9. ' parmi' → logprob: -12.382099151611328
    10. ' par' → logprob: -12.507099151611328

Token 116: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.745069499127567e-05
    2. ' ' → logprob: -9.62508773803711
    3. 'par' → logprob: -11.62508773803711
    4. '```' → logprob: -12.00008773803711
    5. 'un' → logprob: -13.12508773803711
    6. '2' → logprob: -13.50008773803711
    7. '   ' → logprob: -14.12508773803711
    8. 'entre' → logprob: -14.75008773803711
    9. 'dans' → logprob: -15.12508773803711
    10. 'l' → logprob: -15.75008773803711

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002909250557422638
    2. ' ,' → logprob: -5.877909183502197
    3. ' soit' → logprob: -9.752909660339355
    4. ' ou' → logprob: -11.002909660339355
    5. ')' → logprob: -11.502909660339355
    6. '),' → logprob: -11.627909660339355
    7. ',
' → logprob: -13.252909660339355
    8. 'ou' → logprob: -13.252909660339355
    9. ' or' → logprob: -13.377909660339355
    10. '```' → logprob: -13.627909660339355

Token 118: ' ' (ID: 220)
  Prédit: ' soit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' soit' → logprob: -0.2565709352493286
    2. '2' → logprob: -1.7565709352493286
    3. ',' → logprob: -3.006570816040039
    4. 'so' → logprob: -6.756570816040039
    5. '       ' → logprob: -7.131570816040039
    6. ' ' → logprob: -7.631570816040039
    7. ' either' → logprob: -8.256570816040039
    8. ' ou' → logprob: -8.256570816040039
    9. 'either' → logprob: -8.256570816040039
    10. ' ,' → logprob: -8.381570816040039

Token 119: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0832563042640686
    2. 'so' → logprob: -2.708256244659424
    3. ' soit' → logprob: -5.583256244659424
    4. ' ' → logprob: -5.833256244659424
    5. '       ' → logprob: -6.083256244659424
    6. '   ' → logprob: -6.333256244659424
    7. 'either' → logprob: -7.083256244659424
    8. ',' → logprob: -7.958256244659424
    9. 'ou' → logprob: -8.083256721496582
    10. '    ' → logprob: -8.583256721496582

Token 120: ' ou' (ID: 2031)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000742207164876163
    2. 'ou' → logprob: -8.125741958618164
    3. ' ou' → logprob: -8.250741958618164
    4. ' ,' → logprob: -9.125741958618164
    5. 'or' → logprob: -10.250741958618164
    6. ')' → logprob: -10.750741958618164
    7. '   ' → logprob: -11.750741958618164
    8. '```' → logprob: -13.000741958618164
    9. ' soit' → logprob: -13.000741958618164
    10. ' or' → logprob: -13.125741958618164

Token 121: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.22551605105400085
    2. ' ' → logprob: -1.6005160808563232
    3. '  ' → logprob: -9.725516319274902
    4. '2' → logprob: -10.850516319274902
    5. ' either' → logprob: -12.475516319274902
    6. ' )' → logprob: -12.725516319274902
    7. '    ' → logprob: -12.850516319274902
    8. '<|end|>' → logprob: -12.850516319274902
    9. '```' → logprob: -12.975516319274902
    10. ' or' → logprob: -13.225516319274902

Token 122: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.023246875032782555
    2. ' ' → logprob: -3.7732467651367188
    3. '   ' → logprob: -14.273246765136719
    4. '  ' → logprob: -14.898246765136719
    5. ')' → logprob: -15.648246765136719
    6. '```' → logprob: -15.898246765136719
    7. ' ' → logprob: -17.14824676513672
    8. '۳' → logprob: -17.27324676513672
    9. '    ' → logprob: -17.39824676513672
    10. ' trois' → logprob: -18.08574676513672

Token 123: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018944834591820836
    2. ')
' → logprob: -6.376894474029541
    3. '   ' → logprob: -9.3768949508667
    4. '):' → logprob: -10.2518949508667
    5. ',' → logprob: -10.3768949508667
    6. '):
' → logprob: -10.8768949508667
    7. ').' → logprob: -11.2518949508667
    8. '),' → logprob: -13.1268949508667
    9. ')
' → logprob: -13.2518949508667
    10. '```' → logprob: -13.2518949508667

Token 124: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048089075833559036
    2. ' ' → logprob: -3.298089027404785
    3. 'B' → logprob: -5.923089027404785
    4. '```' → logprob: -5.923089027404785
    5. ' 
' → logprob: -6.298089027404785
    6. '<|end|>' → logprob: -7.548089027404785
    7. ' B' → logprob: -7.798089027404785
    8. '  ' → logprob: -7.923089027404785
    9. ')' → logprob: -8.298089027404785
    10. '    
' → logprob: -8.423089027404785

Token 125: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.4810107350349426
    2. 'B' (adapté à ' B') → logprob: -0.9810107350349426
    3. '   ' → logprob: -4.981010913848877
    4. ' ' → logprob: -10.481010437011719
    5. '  ' → logprob: -12.606010437011719
    6. '
' → logprob: -12.856010437011719
    7. ' ' → logprob: -12.856010437011719
    8. '    ' → logprob: -13.481010437011719
    9. '	B' → logprob: -13.606010437011719
    10. '```' → logprob: -13.981010437011719

Token 126: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.005888383369892836
    2. '(int' → logprob: -5.75588846206665
    3. '<|end|>' → logprob: -6.25588846206665
    4. ' ' → logprob: -8.880887985229492
    5. ')' → logprob: -8.880887985229492
    6. ' =' → logprob: -9.005887985229492
    7. '(space' → logprob: -9.130887985229492
    8. '(' → logprob: -9.630887985229492
    9. '=int' → logprob: -9.880887985229492
    10. '<|end|>' → logprob: -10.005887985229492

Token 127: 'int' (ID: 491)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4098765552043915
    2. 'int' → logprob: -1.4098765850067139
    3. ' (' → logprob: -3.159876585006714
    4. '(int' → logprob: -3.284876585006714
    5. ' ' → logprob: -5.659876346588135
    6. ')' → logprob: -6.284876346588135
    7. '[int' → logprob: -6.659876346588135
    8. ' )' → logprob: -6.784876346588135
    9. ' ' → logprob: -6.784876346588135
    10. '=int' → logprob: -6.909876346588135

Token 128: '):' (ID: 3127)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.1300886869430542
    2. '(int' → logprob: -1.5050886869430542
    3. ':int' → logprob: -1.8800886869430542
    4. ':' → logprob: -1.8800886869430542
    5. ')' → logprob: -2.6300888061523438
    6. '):' → logprob: -3.2550888061523438
    7. 'int' → logprob: -4.630088806152344
    8. '=int' → logprob: -4.630088806152344
    9. ' :' → logprob: -5.005088806152344
    10. ' ):' → logprob: -5.505088806152344

Token 129: ' Deux' (ID: 92086)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.01678018644452095
    2. 'int' → logprob: -4.266780376434326
    3. '(int' → logprob: -6.141780376434326
    4. ' (' → logprob: -7.891780376434326
    5. ' ' → logprob: -9.891779899597168
    6. ' 
' → logprob: -11.141779899597168
    7. '[int' → logprob: -11.391779899597168
    8. ' def' → logprob: -12.891779899597168
    9. '<int' → logprob: -12.891779899597168
    10. ' ' → logprob: -13.266779899597168

Token 130: 'ième' (ID: 41126)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.39367911219596863
    2. ' int' → logprob: -2.893679141998291
    3. 'int' → logprob: -3.393679141998291
    4. ')' → logprob: -3.393679141998291
    5. '(int' → logprob: -3.393679141998291
    6. '<|end|>' → logprob: -3.393679141998291
    7. ' espaces' → logprob: -3.643679141998291
    8. ':' → logprob: -3.893679141998291
    9. ' )' → logprob: -4.893679141998291
    10. ' :' → logprob: -4.893679141998291

Token 131: ' nombre' (ID: 9733)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.1511874198913574
    2. '<|end|>' → logprob: -1.2761874198913574
    3. ' ' → logprob: -2.2761874198913574
    4. ' int' → logprob: -2.6511874198913574
    5. 'int' → logprob: -2.6511874198913574
    6. ' space' → logprob: -3.7761874198913574
    7. ' )' → logprob: -4.026187419891357
    8. '  ' → logprob: -4.401187419891357
    9. '<|end|>' → logprob: -4.401187419891357
    10. '(int' → logprob: -4.401187419891357

Token 132: ' donné' (ID: 52079)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.007859412580728531
    2. '(int' → logprob: -5.757859230041504
    3. ')' → logprob: -5.882859230041504
    4. '<|end|>' → logprob: -6.882859230041504
    5. ':' → logprob: -8.632859230041504
    6. '   ' → logprob: -9.007859230041504
    7. ',' → logprob: -9.382859230041504
    8. '):' → logprob: -9.757859230041504
    9. '```' → logprob: -9.757859230041504
    10. '(' → logprob: -10.007859230041504

Token 133: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.918823778629303
    2. '):' → logprob: -1.1688237190246582
    3. '):
' → logprob: -1.5438237190246582
    4. '```' → logprob: -4.043823719024658
    5. ' (' → logprob: -4.293823719024658
    6. '(int' → logprob: -4.418823719024658
    7. ')' → logprob: -4.543823719024658
    8. ':' → logprob: -4.918823719024658
    9. '<|end|>' → logprob: -4.918823719024658
    10. ':int' → logprob: -6.543823719024658

Token 134: 'do' (ID: 2408)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.003611355321481824
    2. ' int' → logprob: -5.6286115646362305
    3. '   ' → logprob: -11.87861156463623
    4. ')' → logprob: -13.50361156463623
    5. '[int' → logprob: -14.12861156463623
    6. '(int' → logprob: -14.25361156463623
    7. ':int' → logprob: -14.75361156463623
    8. '):' → logprob: -14.87861156463623
    9. '):
' → logprob: -15.87861156463623
    10. '  ' → logprob: -15.87861156463623

Token 135: 'it' (ID: 278)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5530236959457397
    2. ')' → logprob: -1.8030236959457397
    3. 'int' → logprob: -2.8030238151550293
    4. 'it' → logprob: -2.9280238151550293
    5. 's' → logprob: -3.1780238151550293
    6. 'i' → logprob: -3.9280238151550293
    7. '   ' → logprob: -4.303023815155029
    8. ' ' → logprob: -4.428023815155029
    9. 'ct' → logprob: -4.428023815155029
    10. 'c' → logprob: -4.678023815155029

Token 136: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.15132682025432587
    2. ')' → logprob: -2.901326894760132
    3. '<|end|>' → logprob: -3.276326894760132
    4. ' be' → logprob: -3.776326894760132
    5. ' soit' → logprob: -4.401326656341553
    6. ' ' → logprob: -5.651326656341553
    7. ' etre' → logprob: -5.776326656341553
    8. ':' → logprob: -6.776326656341553
    9. 'être' → logprob: -6.901326656341553
    10. ' )' → logprob: -7.151326656341553

Token 137: ' soit' (ID: 17293)
  Prédit: ' soit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' soit' → logprob: -0.008434790186583996
    2. ' either' → logprob: -5.633434772491455
    3. 'either' → logprob: -6.133434772491455
    4. 'so' → logprob: -6.508434772491455
    5. ' aussi' → logprob: -8.008435249328613
    6. ' ' → logprob: -8.258435249328613
    7. 'int' → logprob: -8.758435249328613
    8. '```' → logprob: -9.008435249328613
    9. '<|end|>' → logprob: -9.758435249328613
    10. 'also' → logprob: -9.883435249328613

Token 138: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3871268630027771
    2. '1' → logprob: -1.1371269226074219
    3. ' one' → logprob: -9.887126922607422
    4. ' either' → logprob: -9.887126922607422
    5. ' soit' → logprob: -9.887126922607422
    6. '3' → logprob: -10.387126922607422
    7. ')' → logprob: -11.137126922607422
    8. 'either' → logprob: -11.512126922607422
    9. '```' → logprob: -11.637126922607422
    10. '<|end|>' → logprob: -12.012126922607422

Token 139: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02324955351650715
    2. ' ' → logprob: -3.773249626159668
    3. '  ' → logprob: -13.773249626159668
    4. '```' → logprob: -14.148249626159668
    5. 'either' → logprob: -14.398249626159668
    6. '   ' → logprob: -14.773249626159668
    7. ' either' → logprob: -14.898249626159668
    8. 'int' → logprob: -15.210749626159668
    9. '3' → logprob: -15.210749626159668
    10. ' ' → logprob: -15.898249626159668

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006975017488002777
    2. ' ,' → logprob: -5.006975173950195
    3. ' or' → logprob: -9.006975173950195
    4. ')' → logprob: -9.631975173950195
    5. ' ou' → logprob: -10.756975173950195
    6. '```' → logprob: -11.381975173950195
    7. ' ' → logprob: -11.631975173950195
    8. '   ' → logprob: -12.381975173950195
    9. '),' → logprob: -12.381975173950195
    10. '3' → logprob: -12.381975173950195

Token 141: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.429531455039978
    2. '2' → logprob: -1.054531455039978
    3. '3' → logprob: -8.17953109741211
    4. 'int' → logprob: -8.17953109741211
    5. ' int' → logprob: -8.92953109741211
    6. '   ' → logprob: -10.55453109741211
    7. ' or' → logprob: -10.55453109741211
    8. ')' → logprob: -10.55453109741211
    9. '    ' → logprob: -10.80453109741211
    10. '  ' → logprob: -11.55453109741211

Token 142: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.14688697457313538
    2. ' ' → logprob: -2.0218870639801025
    3. ',' → logprob: -5.646886825561523
    4. ' ,' → logprob: -7.646886825561523
    5. '3' → logprob: -8.896886825561523
    6. ')' → logprob: -10.771886825561523
    7. '  ' → logprob: -11.021886825561523
    8. ' )' → logprob: -12.021886825561523
    9. '   ' → logprob: -12.396886825561523
    10. ' or' → logprob: -12.521886825561523

Token 143: ' ou' (ID: 2031)
  Prédit: ' ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.5873019695281982
    2. ',' → logprob: -1.3373019695281982
    3. ' or' → logprob: -2.3373019695281982
    4. 'ou' → logprob: -3.2123019695281982
    5. 'or' → logprob: -3.4623019695281982
    6. ')' → logprob: -4.712302207946777
    7. ' ,' → logprob: -6.212302207946777
    8. ' ' → logprob: -6.462302207946777
    9. ' )' → logprob: -8.587302207946777
    10. '3' → logprob: -8.837302207946777

Token 144: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.16056884825229645
    2. ' ' → logprob: -1.9105688333511353
    3. ' ou' → logprob: -8.535569190979004
    4. ' or' → logprob: -9.660569190979004
    5. '```' → logprob: -10.535569190979004
    6. ')' → logprob: -10.660569190979004
    7. 'or' → logprob: -11.035569190979004
    8. 'ou' → logprob: -11.660569190979004
    9. '   ' → logprob: -12.785569190979004
    10. ' ' → logprob: -13.035569190979004

Token 145: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0005555360112339258
    2. ' ' → logprob: -7.500555515289307
    3. 'or' → logprob: -13.875555992126465
    4. ')' → logprob: -13.875555992126465
    5. ' or' → logprob: -14.875555992126465
    6. '```' → logprob: -15.875555992126465
    7. ' ou' → logprob: -16.50055503845215
    8. '   ' → logprob: -16.87555503845215
    9. 'ou' → logprob: -17.12555503845215
    10. ' ' → logprob: -17.50055503845215

Token 146: ').

' (ID: 3991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0723925232887268
    2. '):' → logprob: -2.822392463684082
    3. '):
' → logprob: -4.697392463684082
    4. ').' → logprob: -7.072392463684082
    5. ')
' → logprob: -8.072392463684082
    6. '   ' → logprob: -9.947392463684082
    7. '):

' → logprob: -11.447392463684082
    8. ')**' → logprob: -12.072392463684082
    9. '),' → logprob: -12.197392463684082
    10. ')`' → logprob: -12.322392463684082

Token 147: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4632585048675537
    2. ')' → logprob: -1.0882585048675537
    3. ')
' → logprob: -4.338258743286133
    4. '"""
' → logprob: -5.338258743286133
    5. '"""' → logprob: -5.713258743286133
    6. ' 
' → logprob: -6.088258743286133
    7. '    
' → logprob: -6.088258743286133
    8. '
' → logprob: -6.213258743286133
    9. '  
' → logprob: -6.463258743286133
    10. ' """
' → logprob: -6.588258743286133

Token 148: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2719192504882812
    2. 'present' → logprob: -1.3969192504882812
    3. 'missing' → logprob: -1.8969192504882812
    4. ' present' → logprob: -2.3969192504882812
    5. 'def' → logprob: -3.3969192504882812
    6. ' missing' → logprob: -3.3969192504882812
    7. 'existing' → logprob: -3.6469192504882812
    8. ' existing' → logprob: -4.021919250488281
    9. 'possible' → logprob: -4.021919250488281
    10. 'numbers' → logprob: -4.146919250488281

Token 149: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26896849274635315
    2. '1' → logprob: -2.8939685821533203
    3. '3' → logprob: -2.8939685821533203
    4. ':
' → logprob: -2.8939685821533203
    5. '   ' → logprob: -3.7689685821533203
    6. 'A' → logprob: -4.26896858215332
    7. ' ' → logprob: -4.89396858215332
    8. ' (' → logprob: -5.51896858215332
    9. ' A' → logprob: -5.89396858215332
    10. 'int' → logprob: -5.89396858215332

Token 150: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2571268379688263
    2. ' int' → logprob: -1.632126808166504
    3. 'int' → logprob: -3.632126808166504
    4. '    ' → logprob: -6.007126808166504
    5. '3' → logprob: -6.757126808166504
    6. '1' → logprob: -7.507126808166504
    7. ' next' → logprob: -8.507126808166504
    8. '  ' → logprob: -9.507126808166504
    9. '(int' → logprob: -9.757126808166504
    10. ' ' → logprob: -10.007126808166504

Token 151: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.00017147827020380646
    2. ' int' → logprob: -8.750171661376953
    3. '   ' → logprob: -11.500171661376953
    4. '
' → logprob: -12.875171661376953
    5. '```' → logprob: -16.375171661376953
    6. '[int' → logprob: -16.875171661376953
    7. '(int' → logprob: -17.375171661376953
    8. '  ' → logprob: -17.750171661376953
    9. '    
' → logprob: -18.000171661376953
    10. ':int' → logprob: -18.375171661376953

Token 152: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09157104045152664
    2. ' :' → logprob: -3.216571092605591
    3. '<|end|>' → logprob: -3.716571092605591
    4. '3' → logprob: -5.091570854187012
    5. ')' → logprob: -5.216570854187012
    6. ' ' → logprob: -6.216570854187012
    7. '   ' → logprob: -6.216570854187012
    8. ' )' → logprob: -6.716570854187012
    9. 'The' → logprob: -7.216570854187012
    10. '  ' → logprob: -7.341570854187012

Token 153: ' Le' (ID: 2018)
  Prédit: 'Le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Le' → logprob: -0.1314781904220581
    2. ' Le' → logprob: -2.3814783096313477
    3. 'L' → logprob: -4.006478309631348
    4. ' L' → logprob: -5.506478309631348
    5. 'int' → logprob: -6.131478309631348
    6. ' int' → logprob: -6.256478309631348
    7. ' le' → logprob: -6.506478309631348
    8. 'le' → logprob: -6.506478309631348
    9. '3' → logprob: -7.256478309631348
    10. 'The' → logprob: -8.756478309631348

Token 154: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.5808001756668091
    2. ' nombre' → logprob: -0.9558001756668091
    3. 'ent' → logprob: -3.8308000564575195
    4. ' troisième' → logprob: -3.8308000564575195
    5. ' entier' → logprob: -5.0808000564575195
    6. 'num' → logprob: -6.5808000564575195
    7. ' ' → logprob: -6.8308000564575195
    8. 'tro' → logprob: -6.8308000564575195
    9. '3' → logprob: -7.4558000564575195
    10. '```' → logprob: -8.08080005645752

Token 155: ' man' (ID: 873)
  Prédit: ' man'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' man' → logprob: -0.011987987905740738
    2. 'man' → logprob: -4.636988162994385
    3. ' missing' → logprob: -6.261988162994385
    4. ' absent' → logprob: -8.636987686157227
    5. ' qui' → logprob: -10.511987686157227
    6. ' manc' → logprob: -10.636987686157227
    7. ' manque' → logprob: -10.761987686157227
    8. 'missing' → logprob: -11.011987686157227
    9. ' parmi' → logprob: -11.136987686157227
    10. ' manquer' → logprob: -11.261987686157227

Token 156: 'quant' (ID: 39719)
  Prédit: 'quant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quant' → logprob: -0.0039872159250080585
    2. 'a' → logprob: -6.5039873123168945
    3. 'que' → logprob: -7.1289873123168945
    4. 'iquant' → logprob: -8.003987312316895
    5. '```' → logprob: -8.503987312316895
    6. 'qu' → logprob: -8.628987312316895
    7. 'ant' → logprob: -8.628987312316895
    8. '   ' → logprob: -8.878987312316895
    9. 'q' → logprob: -9.003987312316895
    10. 'cant' → logprob: -9.128987312316895

Token 157: ' parmi' (ID: 51713)
  Prédit: ' parmi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parmi' → logprob: -0.3892787992954254
    2. '<|end|>' → logprob: -2.0142788887023926
    3. ' man' → logprob: -2.6392788887023926
    4. ')' → logprob: -3.3892788887023926
    5. ' entre' → logprob: -3.6392788887023926
    6. '   ' → logprob: -3.7642788887023926
    7. ' among' → logprob: -4.764278888702393
    8. ' des' → logprob: -5.389278888702393
    9. '```' → logprob: -5.764278888702393
    10. 'entre' → logprob: -6.389278888702393

Token 158: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2062881588935852
    2. ' ' → logprob: -2.5812880992889404
    3. '[' → logprob: -2.7062880992889404
    4. ' [' → logprob: -3.7062880992889404
    5. '{' → logprob: -4.3312883377075195
    6. ' {' → logprob: -6.2062883377075195
    7. '3' → logprob: -6.3312883377075195
    8. ' les' → logprob: -6.3312883377075195
    9. 'les' → logprob: -8.08128833770752
    10. '```' → logprob: -9.58128833770752

Token 159: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8342845439910889
    2. '[' → logprob: -0.9592845439910889
    3. '{' → logprob: -1.7092845439910889
    4. ' [' → logprob: -7.459284782409668
    5. '(' → logprob: -7.584284782409668
    6. ' {' → logprob: -8.084284782409668
    7. ' ' → logprob: -9.334284782409668
    8. 'les' → logprob: -9.334284782409668
    9. 'la' → logprob: -10.959284782409668
    10. 'le' → logprob: -11.209284782409668

Token 160: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.392824874026701e-05
    2. ' ,' → logprob: -10.50003433227539
    3. ',
' → logprob: -12.37503433227539
    4. '3' → logprob: -14.12503433227539
    5. ',

' → logprob: -14.37503433227539
    6. '2' → logprob: -15.00003433227539
    7. ',\
' → logprob: -15.50003433227539
    8. '1' → logprob: -15.62503433227539
    9. '<|end|>' → logprob: -16.62503433227539
    10. ' ' → logprob: -17.00003433227539

Token 161: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20142902433872223
    2. ' ' → logprob: -1.701429009437561
    3. ',' → logprob: -11.45142936706543
    4. '  ' → logprob: -12.95142936706543
    5. '   ' → logprob: -14.45142936706543
    6. '  
' → logprob: -14.45142936706543
    7. '
' → logprob: -14.95142936706543
    8. '```' → logprob: -15.07642936706543
    9. '

' → logprob: -15.57642936706543
    10. '    ' → logprob: -15.82642936706543

Token 162: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.043001484125852585
    2. ' ' → logprob: -3.168001413345337
    3. ',' → logprob: -13.668001174926758
    4. '  ' → logprob: -14.918001174926758
    5. '
' → logprob: -15.668001174926758
    6. '   ' → logprob: -15.793001174926758
    7. '  
' → logprob: -16.293001174926758
    8. '```' → logprob: -16.480501174926758
    9. '

' → logprob: -16.543001174926758
    10. '3' → logprob: -17.168001174926758

Token 163: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08986876159906387
    2. ' et' → logprob: -2.7148687839508057
    3. 'et' → logprob: -4.214868545532227
    4. ' ,' → logprob: -5.589868545532227
    5. ' ou' → logprob: -7.214868545532227
    6. '3' → logprob: -9.089868545532227
    7. ',
' → logprob: -9.214868545532227
    8. ' ' → logprob: -9.214868545532227
    9. 'ou' → logprob: -10.089868545532227
    10. '   ' → logprob: -10.339868545532227

Token 164: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0549309179186821
    2. ' ' → logprob: -2.9299309253692627
    3. '[' → logprob: -11.054930686950684
    4. ' [' → logprob: -11.429930686950684
    5. '{' → logprob: -11.929930686950684
    6. '  ' → logprob: -12.804930686950684
    7. ' et' → logprob: -12.804930686950684
    8. '```' → logprob: -13.179930686950684
    9. 'les' → logprob: -13.429930686950684
    10. 'et' → logprob: -13.679930686950684

Token 165: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00011021859245374799
    2. ' ' → logprob: -9.125110626220703
    3. '```' → logprob: -14.500110626220703
    4. '<|end|>' → logprob: -15.125110626220703
    5. '۳' → logprob: -16.375110626220703
    6. ' trois' → logprob: -16.375110626220703
    7. '.' → logprob: -17.000110626220703
    8. '  ' → logprob: -17.250110626220703
    9. '３' → logprob: -17.375110626220703
    10. '³' → logprob: -17.437610626220703

Token 166: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.42006897926330566
    2. '   ' → logprob: -1.4200689792633057
    3. ')' → logprob: -2.6700689792633057
    4. ',' → logprob: -4.545068740844727
    5. '
' → logprob: -4.795068740844727
    6. '3' → logprob: -5.295068740844727
    7. '```' → logprob: -5.795068740844727
    8. '<|end|>' → logprob: -6.795068740844727
    9. '}' → logprob: -7.045068740844727
    10. ':' → logprob: -7.670068740844727

Token 167: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002771593863144517
    2. '    
' → logprob: -6.502771377563477
    3. ' 
' → logprob: -8.002771377563477
    4. '
' → logprob: -8.127771377563477
    5. ')' → logprob: -8.377771377563477
    6. ' missing' → logprob: -9.502771377563477
    7. 'def' → logprob: -9.502771377563477
    8. '   
' → logprob: -9.752771377563477
    9. '    ' → logprob: -10.627771377563477
    10. '     
' → logprob: -10.627771377563477

Token 168: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004132780246436596
    2. ' missing' → logprob: -6.0041327476501465
    3. '    
' → logprob: -7.1291327476501465
    4. 'missing' → logprob: -7.8791327476501465
    5. '
' → logprob: -9.129133224487305
    6. ')' → logprob: -9.754133224487305
    7. 'def' → logprob: -10.129133224487305
    8. ' all' → logprob: -10.504133224487305
    9. ' for' → logprob: -10.629133224487305
    10. '    ' → logprob: -10.754133224487305

Token 169: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8392436504364014
    2. ' for' → logprob: -1.0892436504364014
    3. 'for' → logprob: -1.5892436504364014
    4. ' missing' → logprob: -4.9642438888549805
    5. 'missing' → logprob: -5.3392438888549805
    6. ' all' → logprob: -6.3392438888549805
    7. 'all' → logprob: -6.7142438888549805
    8. 's' → logprob: -6.7142438888549805
    9. 'numbers' → logprob: -6.7142438888549805
    10. ' present' → logprob: -6.8392438888549805

Token 170: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13028502464294434
    2. 'return' → logprob: -2.8802850246429443
    3. 'all' → logprob: -4.130285263061523
    4. 'missing' → logprob: -4.255285263061523
    5. ' for' → logprob: -4.380285263061523
    6. 'numbers' → logprob: -4.880285263061523
    7. '   ' → logprob: -5.005285263061523
    8. 's' → logprob: -5.755285263061523
    9. 'nums' → logprob: -6.755285263061523
    10. ' return' → logprob: -6.880285263061523

Token 171: ' La' (ID: 3038)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.8010650873184204
    2. 'present' → logprob: -2.051064968109131
    3. ' for' → logprob: -2.426064968109131
    4. ' missing' → logprob: -2.551064968109131
    5. ' present' → logprob: -2.801064968109131
    6. 'missing' → logprob: -2.801064968109131
    7. ' all' → logprob: -2.926064968109131
    8. ' given' → logprob: -3.051064968109131
    9. ' numbers' → logprob: -3.176064968109131
    10. '   ' → logprob: -3.176064968109131

Token 172: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.47084248065948486
    2. '   ' → logprob: -2.2208423614501953
    3. ' all' → logprob: -2.4708423614501953
    4. 'all' → logprob: -3.8458423614501953
    5. 'def' → logprob: -4.095842361450195
    6. ' return' → logprob: -4.220842361450195
    7. 'for' → logprob: -4.220842361450195
    8. ' for' → logprob: -4.470842361450195
    9. ' set' → logprob: -4.470842361450195
    10. 'set' → logprob: -4.845842361450195

Token 173: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.9794307351112366
    2. '_des' → logprob: -1.3544306755065918
    3. '_tot' → logprob: -2.104430675506592
    4. 'tot' → logprob: -2.854430675506592
    5. ' =' → logprob: -2.979430675506592
    6. '_expected' → logprob: -3.229430675506592
    7. '_' → logprob: -3.604430675506592
    8. '_total' → logprob: -3.979430675506592
    9. '_att' → logprob: -4.729430675506592
    10. 'att' → logprob: -4.854430675506592

Token 174: ' nombres' (ID: 76205)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.35466864705085754
    2. '[' → logprob: -1.3546686172485352
    3. '1' → logprob: -3.729668617248535
    4. ' {' → logprob: -4.729668617248535
    5. ' [' → logprob: -5.604668617248535
    6. '(' → logprob: -6.479668617248535
    7. ' ' → logprob: -6.479668617248535
    8. '3' → logprob: -7.229668617248535
    9. '123' → logprob: -9.229668617248535
    10. 'set' → logprob: -9.854668617248535

Token 175: ' ' (ID: 220)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.7277226448059082
    2. '1' → logprob: -0.9777226448059082
    3. '(' → logprob: -2.977722644805908
    4. 'des' → logprob: -3.477722644805908
    5. ' ' → logprob: -4.102722644805908
    6. ' {' → logprob: -4.477722644805908
    7. 'man' → logprob: -4.727722644805908
    8. 'de' → logprob: -5.602722644805908
    9. '   ' → logprob: -5.727722644805908
    10. 'att' → logprob: -5.852722644805908

Token 176: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.32927218079566956
    2. '{' → logprob: -1.4542721509933472
    3. 'de' → logprob: -3.8292722702026367
    4. ' ' → logprob: -4.454272270202637
    5. '(' → logprob: -4.704272270202637
    6. ' {' → logprob: -6.204272270202637
    7. 'range' → logprob: -7.579272270202637
    8. ' de' → logprob: -7.954272270202637
    9. '123' → logprob: -8.204272270202637
    10. '[' → logprob: -8.204272270202637

Token 177: ',' (ID: 11)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3112965524196625
    2. '+' → logprob: -1.5612965822219849
    3. ',' → logprob: -2.9362964630126953
    4. '1' → logprob: -5.686296463012695
    5. ' ' → logprob: -7.686296463012695
    6. ' ,' → logprob: -8.436296463012695
    7. '   ' → logprob: -8.936296463012695
    8. '3' → logprob: -9.061296463012695
    9. ' plus' → logprob: -9.811296463012695
    10. '=' → logprob: -10.186296463012695

Token 178: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0205825287848711
    2. ' ' → logprob: -3.895582437515259
    3. '   ' → logprob: -10.77058219909668
    4. ',' → logprob: -11.89558219909668
    5. '  ' → logprob: -12.02058219909668
    6. '    ' → logprob: -12.64558219909668
    7. '```' → logprob: -14.20808219909668
    8. '+' → logprob: -14.95808219909668
    9. '3' → logprob: -15.77058219909668
    10. '`' → logprob: -15.83308219909668

Token 179: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003184244269505143
    2. ' ' → logprob: -5.7531843185424805
    3. '   ' → logprob: -13.00318431854248
    4. '  ' → logprob: -13.50318431854248
    5. ',' → logprob: -13.87818431854248
    6. '<|end|>' → logprob: -14.12818431854248
    7. '```' → logprob: -14.75318431854248
    8. '    ' → logprob: -15.12818431854248
    9. '3' → logprob: -16.190683364868164
    10. '.' → logprob: -16.565683364868164

Token 180: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7122213244438171
    2. ' et' → logprob: -1.337221384048462
    3. 'et' → logprob: -2.087221384048462
    4. '+' → logprob: -2.837221384048462
    5. ' +' → logprob: -3.212221384048462
    6. '   ' → logprob: -4.212221145629883
    7. ' ,' → logprob: -5.837221145629883
    8. ' ' → logprob: -6.087221145629883
    9. ' and' → logprob: -6.462221145629883
    10. '3' → logprob: -7.087221145629883

Token 181: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.012524253688752651
    2. ' ' → logprob: -4.387524127960205
    3. '<|end|>' → logprob: -12.512524604797363
    4. '```' → logprob: -13.012524604797363
    5. '  ' → logprob: -13.137524604797363
    6. ' et' → logprob: -13.137524604797363
    7. 'et' → logprob: -13.637524604797363
    8. '   ' → logprob: -14.200024604797363
    9. '    ' → logprob: -14.950024604797363
    10. '
' → logprob: -15.137524604797363

Token 182: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0015121236210688949
    2. ' ' → logprob: -6.501512050628662
    3. '<|end|>' → logprob: -12.00151252746582
    4. '  ' → logprob: -13.50151252746582
    5. '```' → logprob: -14.25151252746582
    6. ',' → logprob: -15.12651252746582
    7. '   ' → logprob: -15.12651252746582
    8. '
' → logprob: -15.93901252746582
    9. '    ' → logprob: -15.93901252746582
    10. '.' → logprob: -16.43901252746582

Token 183: ' est' (ID: 893)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.05941377952694893
    2. '-' → logprob: -2.9344136714935303
    3. '   ' → logprob: -6.559413909912109
    4. ' est' → logprob: -6.809413909912109
    5. ' =' → logprob: -6.934413909912109
    6. '=' → logprob: -7.684413909912109
    7. ' ' → logprob: -8.30941390991211
    8. ' is' → logprob: -9.30941390991211
    9. '_' → logprob: -9.68441390991211
    10. 'est' → logprob: -9.93441390991211

Token 184: ' toujours' (ID: 16867)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.032544560730457306
    2. ' ' → logprob: -3.5325446128845215
    3. '   ' → logprob: -6.0325446128845215
    4. '    ' → logprob: -8.782544136047363
    5. '```' → logprob: -8.907544136047363
    6. '1' → logprob: -10.032544136047363
    7. ' (' → logprob: -11.595044136047363
    8. '  ' → logprob: -11.845044136047363
    9. '(' → logprob: -11.970044136047363
    10. '`' → logprob: -12.032544136047363

Token 185: ' ég' (ID: 33150)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.006029164884239435
    2. ' ' → logprob: -5.13102912902832
    3. '```' → logprob: -9.75602912902832
    4. '   ' → logprob: -10.63102912902832
    5. '    ' → logprob: -12.44352912902832
    6. ' (' → logprob: -13.06852912902832
    7. '1' → logprob: -13.19352912902832
    8. '(' → logprob: -13.44352912902832
    9. '  ' → logprob: -13.56852912902832
    10. '`' → logprob: -13.63102912902832

Token 186: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.0569145530462265
    2. 'al' → logprob: -2.9319145679473877
    3. 'a' → logprob: -6.306914329528809
    4. '```' → logprob: -9.681914329528809
    5. '   ' → logprob: -11.056914329528809
    6. '1' → logprob: -11.056914329528809
    7. 'alee' → logprob: -11.306914329528809
    8. '3' → logprob: -11.556914329528809
    9. 'alez' → logprob: -11.931914329528809
    10. '

' → logprob: -12.181914329528809

Token 187: ' à' (ID: 1221)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.6157267689704895
    2. 'à' → logprob: -1.2407267093658447
    3. ' à' → logprob: -1.8657267093658447
    4. ' ' → logprob: -4.865726947784424
    5. 'a' → logprob: -5.490726947784424
    6. ' a' → logprob: -6.240726947784424
    7. '```' → logprob: -7.490726947784424
    8. ''à' → logprob: -7.615726947784424
    9. '   ' → logprob: -8.615726470947266
    10. ' to' → logprob: -8.740726470947266

Token 188: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0019639628008008003
    2. ' ' → logprob: -6.251964092254639
    3. '```' → logprob: -10.62696361541748
    4. '   ' → logprob: -12.25196361541748
    5. '    ' → logprob: -13.56446361541748
    6. '(' → logprob: -14.00196361541748
    7. '٦' → logprob: -14.37696361541748
    8. '  ' → logprob: -14.50196361541748
    9. ' (' → logprob: -14.75196361541748
    10. '`' → logprob: -15.00196361541748

Token 189: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0001848254178185016
    2. ' ' → logprob: -8.625185012817383
    3. '```' → logprob: -12.375185012817383
    4. '(' → logprob: -15.125185012817383
    5. '٦' → logprob: -15.250185012817383
    6. '   ' → logprob: -15.750185012817383
    7. '۶' → logprob: -16.625185012817383
    8. '    ' → logprob: -17.187685012817383
    9. '1' → logprob: -17.250185012817383
    10. '`' → logprob: -17.312685012817383

Token 190: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020144738256931305
    2. '    
' → logprob: -4.270144939422607
    3. '
' → logprob: -5.270144939422607
    4. 'return' → logprob: -8.52014446258545
    5. '  
' → logprob: -8.89514446258545
    6. '   
' → logprob: -9.02014446258545
    7. '.' → logprob: -9.02014446258545
    8. ',' → logprob: -9.52014446258545
    9. ' return' → logprob: -9.77014446258545
    10. '    ' → logprob: -10.39514446258545

Token 191: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0057422565296292305
    2. 'return' → logprob: -5.380742073059082
    3. ' return' → logprob: -7.005742073059082
    4. '6' → logprob: -9.505742073059082
    5. '    
' → logprob: -9.630742073059082
    6. '
' → logprob: -10.630742073059082
    7. '    ' → logprob: -11.380742073059082
    8. 'missing' → logprob: -11.505742073059082
    9. ' missing' → logprob: -11.880742073059082
    10. '  ' → logprob: -12.255742073059082

Token 192: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.453366219997406
    2. 'return' → logprob: -1.0783662796020508
    3. ' return' → logprob: -4.328366279602051
    4. 'missing' → logprob: -4.578366279602051
    5. ' missing' → logprob: -7.453366279602051
    6. '6' → logprob: -8.82836627960205
    7. 'result' → logprob: -10.07836627960205
    8. 'total' → logprob: -11.07836627960205
    9. '	return' → logprob: -11.07836627960205
    10. 's' → logprob: -11.07836627960205

Token 193: ' Donc' (ID: 88837)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.543684720993042
    2. 'missing' → logprob: -1.043684720993042
    3. ' return' → logprob: -3.168684720993042
    4. ' missing' → logprob: -3.918684720993042
    5. '   ' → logprob: -6.168684959411621
    6. 'sum' → logprob: -6.293684959411621
    7. 'total' → logprob: -7.293684959411621
    8. 'result' → logprob: -8.793684959411621
    9. ' sum' → logprob: -9.543684959411621
    10. ' total' → logprob: -9.918684959411621

Token 194: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5877097249031067
    2. ' return' → logprob: -1.337709665298462
    3. 'return' → logprob: -1.712709665298462
    4. ' missing' → logprob: -8.337709426879883
    5. ' le' → logprob: -8.712709426879883
    6. ' ' → logprob: -8.712709426879883
    7. ' la' → logprob: -8.837709426879883
    8. 'missing' → logprob: -9.087709426879883
    9. '    ' → logprob: -9.212709426879883
    10. ' retour' → logprob: -9.337709426879883

Token 195: ' le' (ID: 505)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.17363950610160828
    2. ' return' → logprob: -2.0486395359039307
    3. '   ' → logprob: -3.9236395359039307
    4. 'missing' → logprob: -4.673639297485352
    5. ' missing' → logprob: -6.798639297485352
    6. 'result' → logprob: -9.548639297485352
    7. 'ret' → logprob: -9.673639297485352
    8. '
' → logprob: -10.798639297485352
    9. 'le' → logprob: -11.173639297485352
    10. '	return' → logprob: -11.173639297485352

Token 196: ' nombre' (ID: 9733)
  Prédit: 'missing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'missing' → logprob: -0.5967034101486206
    2. 'nombre' → logprob: -1.4717034101486206
    3. 'return' → logprob: -2.59670352935791
    4. ' missing' → logprob: -2.84670352935791
    5. ' nombre' → logprob: -2.84670352935791
    6. 'number' → logprob: -4.72170352935791
    7. ' return' → logprob: -4.72170352935791
    8. '3' → logprob: -5.84670352935791
    9. 'num' → logprob: -5.97170352935791
    10. 'man' → logprob: -6.59670352935791

Token 197: ' man' (ID: 873)
  Prédit: 'man'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'man' → logprob: -0.0204940065741539
    2. '_man' → logprob: -4.895493984222412
    3. '_missing' → logprob: -5.395493984222412
    4. ' man' → logprob: -5.520493984222412
    5. 'missing' → logprob: -5.895493984222412
    6. '_' → logprob: -6.895493984222412
    7. ' missing' → logprob: -9.39549446105957
    8. '_m' → logprob: -9.39549446105957
    9. '```' → logprob: -9.52049446105957
    10. ' ' → logprob: -10.39549446105957

Token 198: 'quant' (ID: 39719)
  Prédit: 'quant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quant' → logprob: -0.19759826362133026
    2. 'que' → logprob: -1.9475982189178467
    3. 'qu' → logprob: -4.447598457336426
    4. 'quent' → logprob: -4.572598457336426
    5. 'cant' → logprob: -5.322598457336426
    6. '   ' → logprob: -5.822598457336426
    7. 'q' → logprob: -6.447598457336426
    8. 'ques' → logprob: -6.822598457336426
    9. 'ant' → logprob: -7.322598457336426
    10. 'quait' → logprob: -7.697598457336426

Token 199: ' peut' (ID: 9216)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.4964449107646942
    2. ' =' → logprob: -0.9964449405670166
    3. '=' → logprob: -4.3714447021484375
    4. 'est' → logprob: -4.8714447021484375
    5. 's' → logprob: -6.8714447021484375
    6. ' vaut' → logprob: -8.371444702148438
    7. ' ' → logprob: -8.496444702148438
    8. ' is' → logprob: -8.621444702148438
    9. ' sera' → logprob: -9.746444702148438
    10. ' ' → logprob: -10.621444702148438

Token 200: ' être' (ID: 9104)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6788071393966675
    2. '=' → logprob: -0.9288071393966675
    3. ' be' → logprob: -3.303807258605957
    4. ' être' → logprob: -3.678807258605957
    5. 'être' → logprob: -4.678807258605957
    6. ' ' → logprob: -5.178807258605957
    7. 'be' → logprob: -5.928807258605957
    8. ' etre' → logprob: -5.928807258605957
    9. '<|end|>' → logprob: -6.053807258605957
    10. 'etre' → logprob: -6.303807258605957

Token 201: ' trouvé' (ID: 60081)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.23326732218265533
    2. ' ' → logprob: -2.733267307281494
    3. ' calcul' → logprob: -2.983267307281494
    4. ' trouvé' → logprob: -3.108267307281494
    5. ' found' → logprob: -3.733267307281494
    6. ' calculated' → logprob: -4.483267307281494
    7. ' obtenu' → logprob: -5.358267307281494
    8. 'calcul' → logprob: -5.983267307281494
    9. ' trouv' → logprob: -6.108267307281494
    10. 'cal' → logprob: -6.733267307281494

Token 202: ' par' (ID: 686)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.1182994544506073
    2. ' par' → logprob: -2.2432994842529297
    3. 'en' → logprob: -5.61829948425293
    4. '   ' → logprob: -7.36829948425293
    5. ' simplement' → logprob: -7.86829948425293
    6. ' =' → logprob: -8.61829948425293
    7. ' by' → logprob: -8.86829948425293
    8. ' ' → logprob: -8.86829948425293
    9. ' avec' → logprob: -9.36829948425293
    10. 'par' → logprob: -9.61829948425293

Token 203: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.09717892855405807
    2. ' ' → logprob: -2.7221789360046387
    3. '   ' → logprob: -4.222178936004639
    4. 'return' → logprob: -4.972178936004639
    5. ' return' → logprob: -5.347178936004639
    6. ' la' → logprob: -8.34717845916748
    7. ' subtract' → logprob: -10.22217845916748
    8. ' retour' → logprob: -10.34717845916748
    9. 'subtract' → logprob: -10.34717845916748
    10. '```' → logprob: -10.59717845916748

Token 204: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.006485742051154375
    2. 'return' → logprob: -5.506485939025879
    3. ' ' → logprob: -6.131485939025879
    4. ' return' → logprob: -8.631485939025879
    5. '   ' → logprob: -10.131485939025879
    6. '
' → logprob: -12.631485939025879
    7. '```' → logprob: -13.006485939025879
    8. '`' → logprob: -13.506485939025879
    9. 'subtract' → logprob: -13.756485939025879
    10. '  ' → logprob: -13.756485939025879

Token 205: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.17978784441947937
    2. '-' → logprob: -1.8047878742218018
    3. '   ' → logprob: -10.679787635803223
    4. ' ' → logprob: -11.304787635803223
    5. ' ' → logprob: -12.804787635803223
    6. ' minus' → logprob: -13.054787635803223
    7. '-A' → logprob: -13.929787635803223
    8. ')' → logprob: -14.804787635803223
    9. '-(' → logprob: -14.929787635803223
    10. '  ' → logprob: -15.054787635803223

Token 206: ' (' (ID: 350)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.30582815408706665
    2. 'A' → logprob: -2.180828094482422
    3. ' (' → logprob: -2.305828094482422
    4. '(' → logprob: -3.180828094482422
    5. ' A' → logprob: -4.680828094482422
    6. '   ' → logprob: -11.680828094482422
    7. ' ' → logprob: -12.430828094482422
    8. '(
' → logprob: -12.555828094482422
    9. '_A' → logprob: -12.743328094482422
    10. '（' → logprob: -12.805828094482422

Token 207: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0007636455120518804
    2. ' A' → logprob: -7.250763416290283
    3. '(A' → logprob: -9.875763893127441
    4. ' (' → logprob: -13.250763893127441
    5. '(' → logprob: -14.875763893127441
    6. '   ' → logprob: -15.750763893127441
    7. ')' → logprob: -17.125762939453125
    8. '	A' → logprob: -17.625762939453125
    9. ' ' → logprob: -18.250762939453125
    10. 'a' → logprob: -19.000762939453125

Token 208: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.0789366066455841
    2. '+' → logprob: -2.5789365768432617
    3. '+B' → logprob: -10.703936576843262
    4. ' ' → logprob: -11.328936576843262
    5. '   ' → logprob: -12.203936576843262
    6. ' -' → logprob: -13.203936576843262
    7. ' plus' → logprob: -13.453936576843262
    8. ')' → logprob: -13.828936576843262
    9. '+A' → logprob: -13.953936576843262
    10. ' ' → logprob: -14.328936576843262

Token 209: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.5231364369392395
    2. 'B' → logprob: -0.8981364369392395
    3. ' ' → logprob: -11.398136138916016
    4. ')' → logprob: -14.023136138916016
    5. ' )' → logprob: -15.023136138916016
    6. '	B' → logprob: -16.148136138916016
    7. ' ' → logprob: -16.148136138916016
    8. ',' → logprob: -16.210636138916016
    9. ' 
' → logprob: -16.398136138916016
    10. '

' → logprob: -16.523136138916016

Token 210: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009801707929000258
    2. ' )' → logprob: -7.125980377197266
    3. '))' → logprob: -8.875980377197266
    4. ')
' → logprob: -10.500980377197266
    5. '   ' → logprob: -13.375980377197266
    6. ')`' → logprob: -13.500980377197266
    7. ').' → logprob: -14.250980377197266
    8. ' ' → logprob: -14.250980377197266
    9. ')))' → logprob: -14.500980377197266
    10. '.' → logprob: -14.500980377197266

Token 211: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002717141527682543
    2. '
' → logprob: -6.127717018127441
    3. 'return' → logprob: -7.752717018127441
    4. ' return' → logprob: -9.627717018127441
    5. '    
' → logprob: -10.377717018127441
    6. 'def' → logprob: -12.877717018127441
    7. '```' → logprob: -14.252717018127441
    8. '	return' → logprob: -14.502717018127441
    9. '  
' → logprob: -14.627717018127441
    10. '6' → logprob: -15.377717018127441

Token 212: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1835152804851532
    2. 'return' (adapté à ' return') → logprob: -1.8085153102874756
    3. ' return' → logprob: -5.6835150718688965
    4. 'missing' → logprob: -8.183515548706055
    5. '
' → logprob: -10.183515548706055
    6. ' missing' → logprob: -11.183515548706055
    7. '```' → logprob: -11.558515548706055
    8. '    
' → logprob: -11.808515548706055
    9. 'result' → logprob: -11.808515548706055
    10. 'def' → logprob: -13.308515548706055

Token 213: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.011048170737922192
    2. '6' → logprob: -4.511048316955566
    3. ' ' → logprob: -15.761048316955566
    4. '   ' → logprob: -16.26104736328125
    5. ' (' → logprob: -16.51104736328125
    6. '  ' → logprob: -17.13604736328125
    7. '(' → logprob: -17.38604736328125
    8. '    ' → logprob: -19.13604736328125
    9. '```' → logprob: -19.13604736328125
    10. '	' → logprob: -19.26104736328125

Token 214: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -18.250009536743164
    4. '(' → logprob: -19.000009536743164
    5. '```' → logprob: -19.375009536743164
    6. '  ' → logprob: -20.625009536743164
    7. '
' → logprob: -22.000009536743164
    8. '    ' → logprob: -22.000009536743164
    9. '６' → logprob: -22.250009536743164
    10. '۶' → logprob: -22.625009536743164

Token 215: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.005949302110821009
    2. '-' → logprob: -5.1309494972229
    3. ' ' → logprob: -12.005949020385742
    4. ' -(' → logprob: -12.380949020385742
    5. '   ' → logprob: -12.505949020385742
    6. '-A' → logprob: -13.005949020385742
    7. '    ' → logprob: -13.380949020385742
    8. '-(' → logprob: -14.005949020385742
    9. ' ' → logprob: -14.255949020385742
    10. '  ' → logprob: -14.380949020385742

Token 216: ' (' (ID: 350)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.08921141922473907
    2. ' (' → logprob: -2.5892114639282227
    3. '(' → logprob: -4.714211463928223
    4. ' A' → logprob: -7.339211463928223
    5. 'A' → logprob: -7.339211463928223
    6. '(B' → logprob: -13.589211463928223
    7. ' ' → logprob: -14.464211463928223
    8. '(
' → logprob: -14.714211463928223
    9. '   ' → logprob: -15.964211463928223
    10. '  ' → logprob: -17.214210510253906

Token 217: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00317783304490149
    2. ' A' → logprob: -5.753177642822266
    3. '   ' → logprob: -15.878177642822266
    4. ' ' → logprob: -17.378177642822266
    5. ')' → logprob: -18.753177642822266
    6. '(A' → logprob: -18.753177642822266
    7. '	A' → logprob: -18.753177642822266
    8. '  ' → logprob: -19.628177642822266
    9. '    ' → logprob: -19.878177642822266
    10. '_A' → logprob: -20.753177642822266

Token 218: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.005451466888189316
    2. '+' → logprob: -5.255451679229736
    3. ' ' → logprob: -8.505451202392578
    4. '+B' → logprob: -11.380451202392578
    5. ')' → logprob: -14.005451202392578
    6. ' +
' → logprob: -14.130451202392578
    7. '   ' → logprob: -14.255451202392578
    8. ' B' → logprob: -14.630451202392578
    9. ' ,' → logprob: -15.005451202392578
    10. ' )' → logprob: -15.380451202392578

Token 219: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.3132634460926056
    2. 'B' → logprob: -1.3132634162902832
    3. ' ' → logprob: -13.313263893127441
    4. ')' → logprob: -17.688262939453125
    5. '   ' → logprob: -18.563262939453125
    6. '    ' → logprob: -18.938262939453125
    7. '	B' → logprob: -18.938262939453125
    8. '  ' → logprob: -19.063262939453125
    9. ',' → logprob: -19.313262939453125
    10. ' )' → logprob: -20.188262939453125

Token 220: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ')
' → logprob: -13.375001907348633
    3. ' )' → logprob: -14.250001907348633
    4. '))' → logprob: -18.875001907348633
    5. ')`' → logprob: -19.250001907348633
    6. ')

' → logprob: -19.375001907348633
    7. '<|end|>' → logprob: -19.500001907348633
    8. ')}' → logprob: -19.625001907348633
    9. '}' → logprob: -19.875001907348633
    10. ')return' → logprob: -20.125001907348633

Token 221: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006133131100796163
    2. '
' → logprob: -7.500613212585449
    3. 'if' → logprob: -11.25061321258545
    4. '```' → logprob: -11.37561321258545
    5. '<|end|>' → logprob: -11.62561321258545
    6. '#' → logprob: -11.75061321258545
    7. '  
' → logprob: -12.00061321258545
    8. 'print' → logprob: -12.37561321258545
    9. '    
' → logprob: -13.37561321258545
    10. '

' → logprob: -13.37561321258545

Token 222: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0020548582542687654
    2. 'main' → logprob: -6.252054691314697
    3. ' solve' → logprob: -9.252055168151855
    4. ' def' → logprob: -11.627055168151855
    5. ' write' → logprob: -11.627055168151855
    6. 'def' → logprob: -12.252055168151855
    7. 'solve' → logprob: -12.752055168151855
    8. ' print' → logprob: -13.502055168151855
    9. ' solution' → logprob: -13.752055168151855
    10. ' process' → logprob: -14.002055168151855

Token 223: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.15310683415737e-05
    2. '():
' → logprob: -11.000021934509277
    3. ' ():' → logprob: -12.625021934509277
    4. '()' → logprob: -13.500021934509277
    5. '():
' → logprob: -16.50002098083496
    6. '(' → logprob: -17.62502098083496
    7. ':' → logprob: -18.87502098083496
    8. '_' → logprob: -19.37502098083496
    9. '():

' → logprob: -19.37502098083496
    10. '()>' → logprob: -19.75002098083496

Token 224: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015609274851158261
    2. '
' → logprob: -7.126561164855957
    3. 'A' → logprob: -7.376561164855957
    4. '    
' → logprob: -9.376561164855957
    5. '()' → logprob: -11.001561164855957
    6. '(A' → logprob: -11.251561164855957
    7. ' A' → logprob: -11.626561164855957
    8. '	A' → logprob: -13.501561164855957
    9. ':' → logprob: -13.751561164855957
    10. '():' → logprob: -14.501561164855957

Token 225: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16857928037643433
    2. 'A' → logprob: -1.918579339981079
    3. ' A' → logprob: -4.7935791015625
    4. '    
' → logprob: -11.1685791015625
    5. '
' → logprob: -11.5435791015625
    6. '	A' → logprob: -12.0435791015625
    7. ' ' → logprob: -12.9185791015625
    8. '  ' → logprob: -13.2935791015625
    9. '(A' → logprob: -14.2935791015625
    10. '   ' → logprob: -14.4185791015625

Token 226: '   ' (ID: 271)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.05761329457163811
    2. '   ' → logprob: -2.9326133728027344
    3. ' A' → logprob: -5.932613372802734
    4. ' ' → logprob: -10.432613372802734
    5. '  ' → logprob: -10.682613372802734
    6. 'def' → logprob: -11.057613372802734
    7. '    
' → logprob: -13.182613372802734
    8. '#' → logprob: -13.557613372802734
    9. '       ' → logprob: -13.557613372802734
    10. '
' → logprob: -13.807613372802734

Token 227: ' Fonction' (ID: 189149)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.24751995503902435
    2. ' A' → logprob: -1.9975199699401855
    3. '   ' → logprob: -2.4975199699401855
    4. '#' → logprob: -6.8725199699401855
    5. 'def' → logprob: -9.497519493103027
    6. ' ' → logprob: -9.997519493103027
    7. '
' → logprob: -10.247519493103027
    8. ' #' → logprob: -10.372519493103027
    9. '    
' → logprob: -10.747519493103027
    10. '  ' → logprob: -11.372519493103027

Token 228: ' principale' (ID: 68926)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5260836482048035
    2. ' principale' → logprob: -1.1510837078094482
    3. ' de' → logprob: -3.5260837078094482
    4. 'def' → logprob: -4.151083469390869
    5. ' complète' → logprob: -4.901083469390869
    6. ' principal' → logprob: -5.026083469390869
    7. '    ' → logprob: -5.026083469390869
    8. ' read' → logprob: -5.276083469390869
    9. ' d' → logprob: -5.651083469390869
    10. ' main' → logprob: -5.776083469390869

Token 229: ' du' (ID: 1462)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.05571179464459419
    2. '():
' → logprob: -2.9307117462158203
    3. ':' → logprob: -7.43071174621582
    4. '()' → logprob: -8.93071174621582
    5. '   ' → logprob: -9.43071174621582
    6. 'def' → logprob: -11.55571174621582
    7. ':
' → logprob: -11.68071174621582
    8. '():
' → logprob: -13.30571174621582
    9. '):' → logprob: -13.43071174621582
    10. ' :' → logprob: -13.55571174621582

Token 230: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.231207013130188
    2. ' programme' → logprob: -2.2312068939208984
    3. 'program' → logprob: -2.6062068939208984
    4. ' script' → logprob: -4.606206893920898
    5. 'script' → logprob: -4.981206893920898
    6. ' program' → logprob: -4.981206893920898
    7. 'code' → logprob: -7.981206893920898
    8. ' code' → logprob: -7.981206893920898
    9. '__' → logprob: -8.606206893920898
    10. 'programm' → logprob: -8.981206893920898

Token 231: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.453654021024704
    2. '():' → logprob: -1.5786540508270264
    3. ':' → logprob: -2.5786540508270264
    4. '():
' → logprob: -2.7036540508270264
    5. ':
' → logprob: -4.703653812408447
    6. 'def' → logprob: -5.578653812408447
    7. '()' → logprob: -6.578653812408447
    8. '):' → logprob: -7.828653812408447
    9. '
' → logprob: -7.953653812408447
    10. '):
' → logprob: -8.078654289245605

Token 232: ' Lit' (ID: 45595)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006614241749048233
    2. '
' → logprob: -5.3816142082214355
    3. '    
' → logprob: -6.2566142082214355
    4. 'A' → logprob: -10.006614685058594
    5. '  
' → logprob: -11.381614685058594
    6. ' 
' → logprob: -12.756614685058594
    7. '```' → logprob: -13.006614685058594
    8. 'def' → logprob: -13.131614685058594
    9. '   
' → logprob: -13.256614685058594
    10. ' A' → logprob: -13.256614685058594

Token 233: ' deux' (ID: 10301)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20328231155872345
    2. '()' → logprob: -2.078282356262207
    3. ' les' → logprob: -3.578282356262207
    4. 'A' → logprob: -4.328282356262207
    5. ' A' → logprob: -5.328282356262207
    6. ' ' → logprob: -5.578282356262207
    7. ' ()' → logprob: -6.328282356262207
    8. ' deux' → logprob: -6.328282356262207
    9. 'les' → logprob: -6.953282356262207
    10. '  ' → logprob: -6.953282356262207

Token 234: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.005064872093498707
    2. ' nombres' → logprob: -5.505064964294434
    3. 'ent' → logprob: -7.130064964294434
    4. ' integers' → logprob: -9.255064964294434
    5. ' numbers' → logprob: -11.380064964294434
    6. ' espaces' → logprob: -11.380064964294434
    7. ' A' → logprob: -11.630064964294434
    8. '   ' → logprob: -12.130064964294434
    9. ' ' → logprob: -12.255064964294434
    10. ' entier' → logprob: -12.255064964294434

Token 235: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0020795976743102074
    2. 'rees' → logprob: -7.002079486846924
    3. 'ier' → logprob: -7.877079486846924
    4. 'ières' → logprob: -8.752079963684082
    5. 'tes' → logprob: -9.002079963684082
    6. '   ' → logprob: -9.252079963684082
    7. 'rée' → logprob: -9.502079963684082
    8. 'r' → logprob: -9.627079963684082
    9. 't' → logprob: -9.752079963684082
    10. 'res' → logprob: -10.377079963684082

Token 236: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5130887031555176
    2. '()' → logprob: -1.2630887031555176
    3. '   ' → logprob: -2.2630887031555176
    4. '(),' → logprob: -5.763088703155518
    5. ' ,' → logprob: -5.888088703155518
    6. 'from' → logprob: -6.138088703155518
    7. ' et' → logprob: -6.513088703155518
    8. ' ()' → logprob: -6.888088703155518
    9. '(' → logprob: -7.138088703155518
    10. '(A' → logprob: -7.263088703155518

Token 237: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.013440672308206558
    2. ' l' → logprob: -4.3884406089782715
    3. 'input' → logprob: -7.6384406089782715
    4. 'entrée' → logprob: -8.63844108581543
    5. ' input' → logprob: -9.63844108581543
    6. ' ' → logprob: -10.26344108581543
    7. '_l' → logprob: -10.63844108581543
    8. '_' → logprob: -11.13844108581543
    9. '   ' → logprob: -11.26344108581543
    10. '
' → logprob: -11.26344108581543

Token 238: ''utilisateur' (ID: 140803)
  Prédit: ''entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.22217312455177307
    2. 'entrée' → logprob: -2.2221732139587402
    3. ''utilisateur' → logprob: -2.4721732139587402
    4. 'a' → logprob: -5.59717321395874
    5. 'input' → logprob: -7.34717321395874
    6. ''' → logprob: -7.59717321395874
    7. '   ' → logprob: -7.97217321395874
    8. 'e' → logprob: -8.847172737121582
    9. ' entrée' → logprob: -9.222172737121582
    10. 'é' → logprob: -9.347172737121582

Token 239: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.577082633972168
    2. '   ' → logprob: -0.827082633972168
    3. ' et' → logprob: -7.452082633972168
    4. ' ,' → logprob: -8.202082633972168
    5. ')' → logprob: -9.202082633972168
    6. '()' → logprob: -9.452082633972168
    7. '    
' → logprob: -10.952082633972168
    8. '    ' → logprob: -11.077082633972168
    9. ',
' → logprob: -11.577082633972168
    10. '.' → logprob: -11.827082633972168

Token 240: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5314128398895264
    2. ',' → logprob: -0.9064128398895264
    3. ')' → logprob: -5.5314130783081055
    4. '()' → logprob: -6.2814130783081055
    5. ' et' → logprob: -6.6564130783081055
    6. '(),' → logprob: -7.5314130783081055
    7. ' ,' → logprob: -8.156413078308105
    8. '),' → logprob: -9.406413078308105
    9. ' )' → logprob: -10.531413078308105
    10. '  ' → logprob: -10.656413078308105

Token 241: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3925231993198395
    2. ',' → logprob: -1.142523169517517
    3. ' et' → logprob: -5.392523288726807
    4. ' ,' → logprob: -7.142523288726807
    5. ')' → logprob: -9.642522811889648
    6. ',
' → logprob: -9.892522811889648
    7. '    
' → logprob: -10.017522811889648
    8. 'et' (adapté à ' et') → logprob: -10.142522811889648
    9. ' puis' → logprob: -10.392522811889648
    10. '.' → logprob: -10.892522811889648

Token 242: ' affiche' (ID: 127479)
  Prédit: ' appelle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' appelle' → logprob: -0.9407369494438171
    2. ' affiche' → logprob: -0.9407369494438171
    3. ' trouve' → logprob: -2.190737009048462
    4. 'print' → logprob: -3.690737009048462
    5. ' print' → logprob: -3.815737009048462
    6. 'aff' → logprob: -3.940737009048462
    7. ' imprime' → logprob: -4.315736770629883
    8. ' calc' → logprob: -4.690736770629883
    9. '   ' → logprob: -4.940736770629883
    10. ' utilise' → logprob: -6.065736770629883

Token 243: ' le' (ID: 505)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03508777916431427
    2. ' le' → logprob: -4.035087585449219
    3. '()' → logprob: -4.910087585449219
    4. '("' → logprob: -5.535087585449219
    5. '(
' → logprob: -6.410087585449219
    6. ' la' → logprob: -6.535087585449219
    7. ' ' → logprob: -7.785087585449219
    8. ' (' → logprob: -7.910087585449219
    9. '   ' → logprob: -8.035087585449219
    10. '('' → logprob: -8.035087585449219

Token 244: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.08296360820531845
    2. 'nombre' → logprob: -2.582963705062866
    3. ' number' → logprob: -6.582963466644287
    4. ' résultat' → logprob: -7.082963466644287
    5. ' numéro' → logprob: -7.332963466644287
    6. 'number' → logprob: -7.332963466644287
    7. ' find' → logprob: -9.207963943481445
    8. 'find' → logprob: -9.582963943481445
    9. 'result' → logprob: -9.707963943481445
    10. ' ' → logprob: -9.707963943481445

Token 245: ' man' (ID: 873)
  Prédit: ' man'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' man' → logprob: -0.5966930389404297
    2. 'man' → logprob: -1.0966930389404297
    3. ' missing' → logprob: -2.4716930389404297
    4. '_missing' → logprob: -4.34669303894043
    5. '_man' → logprob: -5.22169303894043
    6. '_' → logprob: -5.34669303894043
    7. ' absent' → logprob: -5.59669303894043
    8. 'missing' → logprob: -6.09669303894043
    9. ' ' → logprob: -7.22169303894043
    10. '_m' → logprob: -7.97169303894043

Token 246: 'quant' (ID: 39719)
  Prédit: 'quant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quant' → logprob: -0.011585659347474575
    2. '   ' → logprob: -5.761585712432861
    3. 'qu' → logprob: -6.136585712432861
    4. 's' → logprob: -6.511585712432861
    5. 'iquant' → logprob: -6.511585712432861
    6. '```' → logprob: -6.886585712432861
    7. 'cant' → logprob: -7.886585712432861
    8. 'que' → logprob: -8.136585235595703
    9. 'ant' → logprob: -8.261585235595703
    10. '_quant' → logprob: -8.636585235595703

Token 247: ' parmi' (ID: 51713)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7152540683746338
    2. '()' → logprob: -0.8402540683746338
    3. '(' → logprob: -2.840254068374634
    4. ')' → logprob: -4.840253829956055
    5. 'def' → logprob: -5.340253829956055
    6. '().' → logprob: -6.340253829956055
    7. '   ' → logprob: -6.465253829956055
    8. '(
' → logprob: -6.840253829956055
    9. ',' → logprob: -7.340253829956055
    10. ':' → logprob: -7.590253829956055

Token 248: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.022718070074915886
    2. ' ' → logprob: -4.0227179527282715
    3. ' les' → logprob: -5.7727179527282715
    4. 'les' → logprob: -6.8977179527282715
    5. '   ' → logprob: -8.27271842956543
    6. 'le' → logprob: -10.14771842956543
    7. '{' → logprob: -10.27271842956543
    8. ' le' → logprob: -10.27271842956543
    9. 'l' → logprob: -11.27271842956543
    10. ' ceux' → logprob: -11.52271842956543

Token 249: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003190193965565413
    2. '{' → logprob: -9.000319480895996
    3. '[' → logprob: -9.250319480895996
    4. 'les' → logprob: -9.500319480895996
    5. ' ' → logprob: -11.375319480895996
    6. '(' → logprob: -12.125319480895996
    7. 'le' → logprob: -12.875319480895996
    8. 'l' → logprob: -13.250319480895996
    9. '3' → logprob: -14.000319480895996
    10. 'la' → logprob: -14.250319480895996

Token 250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001669485354796052
    2. ' ,' → logprob: -8.750166893005371
    3. ',
' → logprob: -12.500166893005371
    4. '   ' → logprob: -13.125166893005371
    5. '2' → logprob: -14.000166893005371
    6. '3' → logprob: -14.375166893005371
    7. ' ' → logprob: -14.625166893005371
    8. ',

' → logprob: -15.375166893005371
    9. 'and' → logprob: -15.750166893005371
    10. 'import' → logprob: -16.375167846679688

Token 251: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11324892193078995
    2. ' ' → logprob: -2.238248825073242
    3. '   ' → logprob: -7.988248825073242
    4. ',' → logprob: -9.613248825073242
    5. '  ' → logprob: -11.613248825073242
    6. ' ,' → logprob: -12.988248825073242
    7. 'et' → logprob: -13.113248825073242
    8. '    ' → logprob: -13.550748825073242
    9. ' deux' → logprob: -13.800748825073242
    10. ' et' → logprob: -14.050748825073242

Token 252: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.17980089783668518
    2. ' ' → logprob: -1.8048008680343628
    3. ',' → logprob: -10.054800987243652
    4. '   ' → logprob: -12.179800987243652
    5. '3' → logprob: -12.429800987243652
    6. '  ' → logprob: -13.054800987243652
    7. ' ,' → logprob: -14.742300987243652
    8. ' deux' → logprob: -15.617300987243652
    9. ' ' → logprob: -15.929800987243652
    10. '    ' → logprob: -16.054800033569336

Token 253: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3536940813064575
    2. ' et' → logprob: -1.6036940813064575
    3. 'et' → logprob: -2.728693962097168
    4. '   ' → logprob: -3.478693962097168
    5. ' ,' → logprob: -7.978693962097168
    6. ' and' → logprob: -9.603693962097168
    7. 'and' → logprob: -9.978693962097168
    8. ',
' → logprob: -10.478693962097168
    9. '```' → logprob: -10.603693962097168
    10. '    ' → logprob: -11.103693962097168

Token 254: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5761069059371948
    2. ' ' → logprob: -0.8261069059371948
    3. '   ' → logprob: -8.951107025146484
    4. '  ' → logprob: -11.451107025146484
    5. ' et' → logprob: -11.576107025146484
    6. ' ' → logprob: -12.326107025146484
    7. ' les' → logprob: -13.201107025146484
    8. ' trois' → logprob: -13.326107025146484
    9. '```' → logprob: -13.451107025146484
    10. ',' → logprob: -13.576107025146484

Token 255: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0006311862962320447
    2. ' ' → logprob: -7.375631332397461
    3. '   ' → logprob: -12.625631332397461
    4. '```' → logprob: -14.375631332397461
    5. '  ' → logprob: -15.438131332397461
    6. ' ' → logprob: -15.938131332397461
    7. ' trois' → logprob: -16.93813133239746
    8. 'def' → logprob: -17.06313133239746
    9. ',' → logprob: -17.12563133239746
    10. 'et' → logprob: -17.62563133239746

Token 256: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03160113841295242
    2. '.' → logprob: -3.7816011905670166
    3. ')' → logprob: -5.2816009521484375
    4. ':' → logprob: -6.1566009521484375
    5. ',' → logprob: -7.2816009521484375
    6. '    
' → logprob: -9.031600952148438
    7. '):' → logprob: -9.156600952148438
    8. '()' → logprob: -9.406600952148438
    9. '.
' → logprob: -10.656600952148438
    10. '(' → logprob: -11.156600952148438

Token 257: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035688269417732954
    2. '
' → logprob: -5.753568649291992
    3. '    
' → logprob: -8.003568649291992
    4. 'A' → logprob: -10.128568649291992
    5. '  
' → logprob: -12.003568649291992
    6. 'if' → logprob: -12.253568649291992
    7. '   
' → logprob: -13.378568649291992
    8. ' A' → logprob: -14.003568649291992
    9. '```' → logprob: -14.003568649291992
    10. ' 
' → logprob: -14.628568649291992

Token 258: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00020783171930816025
    2. 'A' → logprob: -9.375207901000977
    3. '
' → logprob: -9.375207901000977
    4. '    
' → logprob: -10.250207901000977
    5. ' A' → logprob: -13.625207901000977
    6. '  
' → logprob: -15.250207901000977
    7. 'def' → logprob: -15.875207901000977
    8. '```' → logprob: -15.875207901000977
    9. ')' → logprob: -16.000207901000977
    10. 'if' → logprob: -16.125207901000977

Token 259: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007231564959511161
    2. 'A' → logprob: -7.250723361968994
    3. ' A' → logprob: -11.250722885131836
    4. '	A' → logprob: -16.250722885131836
    5. '(A' → logprob: -16.875722885131836
    6. '    
' → logprob: -17.375722885131836
    7. '  ' → logprob: -18.625722885131836
    8. '       ' → logprob: -18.750722885131836
    9. '   ' → logprob: -19.250722885131836
    10. 'if' → logprob: -19.500722885131836

Token 260: ' #' (ID: 1069)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -7.982165698194876e-05
    2. '   ' → logprob: -9.750080108642578
    3. ' A' → logprob: -10.750080108642578
    4. '	A' → logprob: -19.000080108642578
    5. ' ' → logprob: -19.875080108642578
    6. '  ' → logprob: -19.875080108642578
    7. 'if' → logprob: -21.875080108642578
    8. 'def' → logprob: -22.000080108642578
    9. '```' → logprob: -22.000080108642578
    10. '(A' → logprob: -22.250080108642578

Token 261: ' Lire' (ID: 57624)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0025222692638635635
    2. ' A' → logprob: -6.0025224685668945
    3. '   ' → logprob: -10.002522468566895
    4. ' ' → logprob: -14.752522468566895
    5. 'def' → logprob: -15.252522468566895
    6. '  ' → logprob: -15.627522468566895
    7. '#' → logprob: -16.127521514892578
    8. 'try' → logprob: -16.127521514892578
    9. 'input' → logprob: -16.752521514892578
    10. 'a' → logprob: -16.877521514892578

Token 262: ' les' (ID: 1341)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.02859744057059288
    2. ' A' → logprob: -3.653597354888916
    3. '   ' → logprob: -6.153597354888916
    4. '()' → logprob: -9.653597831726074
    5. '(A' → logprob: -9.778597831726074
    6. ' ' → logprob: -10.903597831726074
    7. '  ' → logprob: -11.028597831726074
    8. 'def' → logprob: -12.403597831726074
    9. '(' → logprob: -12.528597831726074
    10. '	A' → logprob: -12.903597831726074

Token 263: ' deux' (ID: 10301)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.003711719298735261
    2. ' A' → logprob: -5.628711700439453
    3. ' ' → logprob: -10.128711700439453
    4. '   ' → logprob: -10.253711700439453
    5. '  ' → logprob: -11.628711700439453
    6. ' inputs' → logprob: -12.003711700439453
    7. ',' → logprob: -12.628711700439453
    8. 'inputs' → logprob: -12.878711700439453
    9. 'def' → logprob: -13.128711700439453
    10. '(A' → logprob: -13.128711700439453

Token 264: ' entr' (ID: 7072)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.18091709911823273
    2. ' A' → logprob: -2.5559170246124268
    3. 'ent' → logprob: -3.0559170246124268
    4. ' ent' → logprob: -3.3059170246124268
    5. 'n' → logprob: -6.555917263031006
    6. ' nombres' → logprob: -6.555917263031006
    7. '   ' → logprob: -7.680917263031006
    8. ',' → logprob: -8.680916786193848
    9. 'val' → logprob: -9.180916786193848
    10. ' numbers' → logprob: -9.180916786193848

Token 265: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.5827405452728271
    2. 'ees' → logprob: -1.5827405452728271
    3. 'iers' → logprob: -2.332740545272827
    4. 'ée' → logprob: -2.457740545272827
    5. 'es' → logprob: -3.457740545272827
    6. 'és' → logprob: -5.207740783691406
    7. 'er' → logprob: -5.457740783691406
    8. 'e' → logprob: -5.457740783691406
    9. 'ies' → logprob: -5.707740783691406
    10. 'ers' → logprob: -6.832740783691406

Token 266: ' utilisateur' (ID: 115595)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006209258921444416
    2. 'A' → logprob: -5.131209373474121
    3. ' A' → logprob: -8.381209373474121
    4. ',' → logprob: -10.756209373474121
    5. '(A' → logprob: -11.256209373474121
    6. '    
' → logprob: -12.131209373474121
    7. ' (' → logprob: -12.756209373474121
    8. '	A' → logprob: -13.506209373474121
    9. '  ' → logprob: -13.631209373474121
    10. '()' → logprob: -13.881209373474121

Token 267: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026874213945120573
    2. 'A' → logprob: -6.127687454223633
    3. '
' → logprob: -8.502687454223633
    4. '    
' → logprob: -8.627687454223633
    5. ' A' → logprob: -9.502687454223633
    6. ',' → logprob: -11.502687454223633
    7. '(A' → logprob: -11.627687454223633
    8. '  ' → logprob: -11.877687454223633
    9. '  
' → logprob: -12.502687454223633
    10. ' ' → logprob: -13.127687454223633

Token 268: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004464654717594385
    2. 'A' → logprob: -5.504464626312256
    3. ' A' → logprob: -7.879464626312256
    4. ',' → logprob: -12.754465103149414
    5. '    
' → logprob: -13.754465103149414
    6. '  ' → logprob: -13.879465103149414
    7. '	A' → logprob: -14.254465103149414
    8. ' ' → logprob: -14.629465103149414
    9. '(A' → logprob: -14.754465103149414
    10. ' (' → logprob: -14.754465103149414

Token 269: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.005244429688900709
    2. ' A' → logprob: -5.505244255065918
    3. '   ' → logprob: -6.755244255065918
    4. '	A' → logprob: -15.005244255065918
    5. ' ' → logprob: -15.755244255065918
    6. '  ' → logprob: -16.380245208740234
    7. '(A' → logprob: -19.255245208740234
    8. '       ' → logprob: -19.630245208740234
    9. '    
' → logprob: -19.880245208740234
    10. '```' → logprob: -20.005245208740234

Token 270: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014323067443910986
    2. ' ,' → logprob: -9.000143051147461
    3. ',B' → logprob: -10.875143051147461
    4. ',A' → logprob: -14.625143051147461
    5. '   ' → logprob: -15.250143051147461
    6. ' B' → logprob: -16.50014305114746
    7. 'A' → logprob: -17.62514305114746
    8. 'B' → logprob: -17.75014305114746
    9. '<|end|>' → logprob: -17.75014305114746
    10. ' A' → logprob: -18.00014305114746

Token 271: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.006851889193058014
    2. 'B' → logprob: -5.006851673126221
    3. ' ' → logprob: -9.006852149963379
    4. '<|end|>' → logprob: -11.506852149963379
    5. '    ' → logprob: -13.256852149963379
    6. ' ' → logprob: -13.881852149963379
    7. '  ' → logprob: -14.256852149963379
    8. '   ' → logprob: -15.256852149963379
    9. 'space' → logprob: -16.131851196289062
    10. '	B' → logprob: -16.631851196289062

Token 272: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197608634829521
    2. '=' → logprob: -2.811976194381714
    3. '   ' → logprob: -12.311976432800293
    4. ')' → logprob: -13.186976432800293
    5. ',' → logprob: -13.311976432800293
    6. ' =)' → logprob: -16.311975479125977
    7. '<|end|>' → logprob: -16.311975479125977
    8. '=input' → logprob: -16.811975479125977
    9. ' =
' → logprob: -16.936975479125977
    10. ')=' → logprob: -16.936975479125977

Token 273: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.002475777640938759
    2. 'read' → logprob: -6.002475738525391
    3. '	read' → logprob: -17.37747573852539
    4. ' write' → logprob: -20.12747573852539
    5. ' find' → logprob: -20.37747573852539
    6. '(read' → logprob: -21.00247573852539
    7. '_read' → logprob: -21.37747573852539
    8. ' reads' → logprob: -22.00247573852539
    9. ' reading' → logprob: -22.25247573852539
    10. '.read' → logprob: -22.62747573852539

Token 274: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.00014132341311778873
    2. '_' → logprob: -8.875141143798828
    3. '_inputs' → logprob: -14.750141143798828
    4. '_output' → logprob: -15.000141143798828
    5. 'input' → logprob: -15.375141143798828
    6. '_user' → logprob: -16.250141143798828
    7. ')' → logprob: -16.500141143798828
    8. ' _' → logprob: -16.625141143798828
    9. '_in' → logprob: -17.000141143798828
    10. '_Input' → logprob: -17.125141143798828

Token 275: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00012606535165105015
    2. '()
' → logprob: -9.000125885009766
    3. '()

' → logprob: -13.125125885009766
    4. '()
' → logprob: -15.000125885009766
    5. '()\' → logprob: -15.750125885009766
    6. '   ' → logprob: -16.875125885009766
    7. '(' → logprob: -17.000125885009766
    8. ')' → logprob: -17.250125885009766
    9. '()`' → logprob: -18.000125885009766
    10. '())' → logprob: -18.125125885009766

Token 276: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3987713158130646
    2. '   ' → logprob: -1.1487712860107422
    3. '    
' → logprob: -5.398771286010742
    4. 'result' → logprob: -5.773771286010742
    5. 'print' → logprob: -5.773771286010742
    6. 'missing' → logprob: -8.023771286010742
    7. '
' → logprob: -8.523771286010742
    8. 'C' → logprob: -8.898771286010742
    9. '  
' → logprob: -9.023771286010742
    10. '```' → logprob: -9.648771286010742

Token 277: ' #' (ID: 1069)
  Prédit: 'missing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'missing' → logprob: -0.2004508227109909
    2. '   ' → logprob: -1.9504507780075073
    3. ' missing' → logprob: -3.950450897216797
    4. 'C' → logprob: -4.700450897216797
    5. '
' → logprob: -5.325450897216797
    6. 'result' → logprob: -5.950450897216797
    7. '    
' → logprob: -6.325450897216797
    8. ' C' → logprob: -6.700450897216797
    9. '#' (adapté à ' #') → logprob: -8.450450897216797
    10. 'number' → logprob: -9.575450897216797

Token 278: ' Calcul' (ID: 57243)
  Prédit: 'missing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'missing' → logprob: -0.372532457113266
    2. ' missing' → logprob: -1.2475324869155884
    3. 'result' → logprob: -4.747532367706299
    4. 'print' → logprob: -5.247532367706299
    5. ' result' → logprob: -5.747532367706299
    6. ' C' → logprob: -5.872532367706299
    7. ' print' → logprob: -6.247532367706299
    8. 'C' → logprob: -6.997532367706299
    9. 'number' → logprob: -7.872532367706299
    10. '   ' → logprob: -8.497532844543457

Token 279: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.005702669732272625
    2. 'ate' → logprob: -5.505702495574951
    3. '   ' → logprob: -7.255702495574951
    4. ' missing' → logprob: -7.380702495574951
    5. '_missing' → logprob: -8.38070297241211
    6. ' =' → logprob: -11.13070297241211
    7. 'missing' → logprob: -11.13070297241211
    8. ' Missing' → logprob: -12.00570297241211
    9. 'ateur' → logprob: -12.63070297241211
    10. 'Missing' → logprob: -12.75570297241211

Token 280: ' le' (ID: 505)
  Prédit: 'missing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'missing' → logprob: -0.04035536199808121
    2. ' missing' → logprob: -3.9153554439544678
    3. '   ' → logprob: -4.290355205535889
    4. 'result' → logprob: -5.665355205535889
    5. 'le' → logprob: -7.040355205535889
    6. ' C' → logprob: -8.040355682373047
    7. 'C' → logprob: -8.165355682373047
    8. 'number' → logprob: -8.290355682373047
    9. 'm' → logprob: -8.665355682373047
    10. ' le' → logprob: -9.290355682373047

Token 281: ' nombre' (ID: 9733)
  Prédit: 'missing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'missing' → logprob: -0.0011622462188825011
    2. 'result' → logprob: -7.376162052154541
    3. ' missing' → logprob: -8.2511625289917
    4. 'C' → logprob: -9.2511625289917
    5. 'nombre' → logprob: -10.0011625289917
    6. 'number' → logprob: -10.0011625289917
    7. 'miss' → logprob: -10.6261625289917
    8. 'man' → logprob: -11.0011625289917
    9. 'num' → logprob: -11.1261625289917
    10. 'answer' → logprob: -11.5011625289917

Token 282: ' man' (ID: 873)
  Prédit: 'man'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'man' → logprob: -0.13528111577033997
    2. ' man' → logprob: -2.7602810859680176
    3. '_man' → logprob: -3.0102810859680176
    4. '_missing' → logprob: -4.635281085968018
    5. 'missing' → logprob: -5.885281085968018
    6. ' missing' → logprob: -7.260281085968018
    7. '   ' → logprob: -8.010281562805176
    8. '_' → logprob: -8.510281562805176
    9. '_m' → logprob: -8.760281562805176
    10. '_c' → logprob: -10.510281562805176

Token 283: 'quant' (ID: 39719)
  Prédit: 'issing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issing' → logprob: -1.1701380014419556
    2. 'quant' → logprob: -1.2951380014419556
    3. 's' → logprob: -1.6701380014419556
    4. 'sing' → logprob: -2.045137882232666
    5. 'sur' → logprob: -3.795137882232666
    6. 'nant' → logprob: -3.920137882232666
    7. 'missing' → logprob: -4.295137882232666
    8. '_missing' → logprob: -5.045137882232666
    9. 'issant' → logprob: -5.170137882232666
    10. 'sic' → logprob: -5.670137882232666

Token 284: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08444240689277649
    2. 'missing' → logprob: -2.709442377090454
    3. ' missing' → logprob: -4.459442615509033
    4. 'C' → logprob: -6.584442615509033
    5. ' C' → logprob: -6.959442615509033
    6. '    
' → logprob: -9.334442138671875
    7. '
' → logprob: -9.584442138671875
    8. 'm' → logprob: -9.709442138671875
    9. 'number' → logprob: -9.834442138671875
    10. '_missing' → logprob: -9.834442138671875

Token 285: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25990530848503113
    2. 'missing' → logprob: -1.5099053382873535
    3. ' missing' → logprob: -5.1349053382873535
    4. 'C' → logprob: -6.6349053382873535
    5. ' C' → logprob: -7.6349053382873535
    6. 'number' → logprob: -9.384904861450195
    7. 'result' → logprob: -9.634904861450195
    8. 'miss' → logprob: -10.634904861450195
    9. 'm' → logprob: -10.759904861450195
    10. '    
' → logprob: -11.134904861450195

Token 286: ' missing' (ID: 12486)
  Prédit: 'missing'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'missing' (adapté à ' missing') → logprob: -0.007041074801236391
    2. ' missing' → logprob: -5.257040977478027
    3. 'C' → logprob: -6.757040977478027
    4. 'result' → logprob: -7.757040977478027
    5. ' C' → logprob: -8.882040977478027
    6. '   ' → logprob: -10.257040977478027
    7. 'miss' → logprob: -10.632040977478027
    8. 'm' → logprob: -12.132040977478027
    9. ' result' → logprob: -12.507040977478027
    10. 'number' → logprob: -12.757040977478027

Token 287: ' =' (ID: 314)
  Prédit: '_number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.029323650524020195
    2. '_' → logprob: -4.029323577880859
    3. '_num' → logprob: -4.529323577880859
    4. ' =' → logprob: -8.65432357788086
    5. '_token' → logprob: -9.15432357788086
    6. '_value' → logprob: -11.65432357788086
    7. '_numbers' → logprob: -11.65432357788086
    8. '_n' → logprob: -12.15432357788086
    9. '=' → logprob: -12.27932357788086
    10. ' _' → logprob: -12.90432357788086

Token 288: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.20141363143920898
    2. 'find' → logprob: -1.701413631439209
    3. '	find' → logprob: -15.701414108276367
    4. '(find' → logprob: -15.826414108276367
    5. '=find' → logprob: -16.826414108276367
    6. '_find' → logprob: -18.451414108276367
    7. ' ' → logprob: -18.951414108276367
    8. '   ' → logprob: -18.951414108276367
    9. '.find' → logprob: -19.701414108276367
    10. ' ' → logprob: -19.701414108276367

Token 289: '_missing' (ID: 99060)
  Prédit: '_missing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_missing' → logprob: -0.000912774819880724
    2. '_' → logprob: -7.000912666320801
    3. '_m' → logprob: -14.0009126663208
    4. ' _' → logprob: -15.1259126663208
    5. '_number' → logprob: -17.125913619995117
    6. 'missing' → logprob: -17.375913619995117
    7. '_remaining' → logprob: -18.500913619995117
    8. '__' → logprob: -18.625913619995117
    9. '_unused' → logprob: -18.625913619995117
    10. 'Missing' → logprob: -18.625913619995117

Token 290: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.00038348292582668364
    2. '_' → logprob: -8.000383377075195
    3. '_num' → logprob: -10.875383377075195
    4. ' _' → logprob: -11.125383377075195
    5. '_numbers' → logprob: -12.250383377075195
    6. '_token' → logprob: -12.875383377075195
    7. '_name' → logprob: -13.375383377075195
    8. '_missing' → logprob: -13.500383377075195
    9. '```' → logprob: -14.375383377075195
    10. 'number' → logprob: -14.625383377075195

Token 291: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.00026169343618676066
    2. '(' → logprob: -8.250261306762695
    3. '(B' → logprob: -15.375261306762695
    4. '(
' → logprob: -16.250261306762695
    5. ' (' → logprob: -16.375261306762695
    6. '(I' → logprob: -17.875261306762695
    7. '(E' → logprob: -18.875261306762695
    8. '(C' → logprob: -19.000261306762695
    9. '(F' → logprob: -19.375261306762695
    10. 'A' → logprob: -19.625261306762695

Token 292: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.194110756041482e-05
    2. ',B' → logprob: -10.250061988830566
    3. ' ,' → logprob: -10.625061988830566
    4. ',
' → logprob: -13.250061988830566
    5. ')' → logprob: -15.125061988830566
    6. '   ' → logprob: -16.25006103515625
    7. ',A' → logprob: -17.12506103515625
    8. ',b' → logprob: -17.37506103515625
    9. ',

' → logprob: -17.62506103515625
    10. '‌,' → logprob: -17.75006103515625

Token 293: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.16022422909736633
    2. ' B' → logprob: -1.910224199295044
    3. '   ' → logprob: -16.91022491455078
    4. ' ' → logprob: -17.53522491455078
    5. ')' → logprob: -18.28522491455078
    6. 'b' → logprob: -19.41022491455078
    7. ' ' → logprob: -19.53522491455078
    8. '    ' → logprob: -19.53522491455078
    9. '	B' → logprob: -19.78522491455078
    10. '>B' → logprob: -20.28522491455078

Token 294: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007111206650733948
    2. ')
' → logprob: -7.250710964202881
    3. ')
' → logprob: -14.375711441040039
    4. ' )' → logprob: -14.875711441040039
    5. '   ' → logprob: -15.375711441040039
    6. ')

' → logprob: -16.75071144104004
    7. ' ' → logprob: -18.37571144104004
    8. ')`' → logprob: -19.25071144104004
    9. ' )
' → logprob: -19.37571144104004
    10. '),' → logprob: -19.87571144104004

Token 295: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05317462608218193
    2. 'print' → logprob: -3.0531747341156006
    3. '
' → logprob: -5.5531744956970215
    4. '    
' → logprob: -7.3031744956970215
    5. ' print' → logprob: -10.92817497253418
    6. '```' → logprob: -11.92817497253418
    7. '  
' → logprob: -13.67817497253418
    8. '
' → logprob: -14.55317497253418
    9. '' → logprob: -14.80317497253418
    10. '\n' → logprob: -15.17817497253418

Token 296: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.17631855607032776
    2. '   ' → logprob: -1.9263185262680054
    3. '
' → logprob: -4.176318645477295
    4. ' print' → logprob: -8.051318168640137
    5. '    
' → logprob: -8.176318168640137
    6. '  
' → logprob: -12.801318168640137
    7. ' 
' → logprob: -13.176318168640137
    8. '```' → logprob: -13.551318168640137
    9. '
' → logprob: -13.676318168640137
    10. '\n' → logprob: -14.051318168640137

Token 297: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.023247340694069862
    2. ' print' → logprob: -3.773247241973877
    3. '   ' → logprob: -13.273247718811035
    4. 'pr' → logprob: -16.64824676513672
    5. 'prin' → logprob: -18.64824676513672
    6. '	print' → logprob: -19.27324676513672
    7. '```' → logprob: -19.39824676513672
    8. 'Print' → logprob: -19.52324676513672
    9. '
' → logprob: -19.52324676513672
    10. ' prin' → logprob: -19.89824676513672

Token 298: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.0023183224257081747
    2. 'iche' → logprob: -6.377318382263184
    3. 'ic' → logprob: -8.252318382263184
    4. 'ich' → logprob: -8.377318382263184
    5. '   ' → logprob: -10.002318382263184
    6. '#' → logprob: -10.127318382263184
    7. 'ichage' → logprob: -10.502318382263184
    8. 'i' → logprob: -12.377318382263184
    9. 'ichier' → logprob: -13.627318382263184
    10. '

' → logprob: -13.752318382263184

Token 299: ' le' (ID: 505)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.1274534910917282
    2. '(' → logprob: -2.127453565597534
    3. '(f' → logprob: -7.877453327178955
    4. '("' → logprob: -9.127453804016113
    5. 'missing' → logprob: -10.627453804016113
    6. ' missing' → logprob: -11.877453804016113
    7. '(
' → logprob: -12.752453804016113
    8. ' (' → logprob: -13.877453804016113
    9. '()' → logprob: -13.877453804016113
    10. '('' → logprob: -14.502453804016113

Token 300: ' résultat' (ID: 62556)
  Prédit: 'missing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'missing' → logprob: -0.3685495853424072
    2. ' missing' → logprob: -1.3685495853424072
    3. '(' → logprob: -2.9935495853424072
    4. '(m' → logprob: -5.618549346923828
    5. '("' → logprob: -10.993549346923828
    6. '_missing' → logprob: -11.493549346923828
    7. ' (' → logprob: -11.618549346923828
    8. '(
' → logprob: -12.118549346923828
    9. '()' → logprob: -13.618549346923828
    10. ' ' → logprob: -13.868549346923828

Token 301: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01880202256143093
    2. '
' → logprob: -4.893802165985107
    3. 'print' → logprob: -5.018802165985107
    4. '(' → logprob: -6.393802165985107
    5. '(m' → logprob: -6.518802165985107
    6. '    
' → logprob: -7.518802165985107
    7. '(print' → logprob: -7.768802165985107
    8. ' print' → logprob: -8.51880168914795
    9. 'missing' → logprob: -9.76880168914795
    10. '(
' → logprob: -9.89380168914795

Token 302: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015880679711699486
    2. 'print' → logprob: -4.265880584716797
    3. ' print' → logprob: -6.390880584716797
    4. '
' → logprob: -10.265880584716797
    5. '    
' → logprob: -13.140880584716797
    6. '```' → logprob: -13.765880584716797
    7. '(print' → logprob: -15.015880584716797
    8. '	print' → logprob: -15.265880584716797
    9. '   ' → logprob: -15.390880584716797
    10. '.print' → logprob: -17.140880584716797

Token 303: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.7968066206085496e-05
    2. ' print' → logprob: -10.500027656555176
    3. '   ' → logprob: -14.750027656555176
    4. 'pr' → logprob: -19.500028610229492
    5. '```' → logprob: -19.500028610229492
    6. 'prin' → logprob: -21.625028610229492
    7. '	print' → logprob: -23.375028610229492
    8. 'printf' → logprob: -23.375028610229492
    9. '`' → logprob: -24.125028610229492
    10. '    
' → logprob: -24.375028610229492

Token 304: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.20143350958824158
    2. '(' → logprob: -1.701433539390564
    3. '(f' → logprob: -11.201433181762695
    4. '()' → logprob: -12.576433181762695
    5. ' (' → logprob: -13.701433181762695
    6. '("("' → logprob: -14.326433181762695
    7. '('' → logprob: -14.826433181762695
    8. '((' → logprob: -15.326433181762695
    9. '(
' → logprob: -15.451433181762695
    10. '("' → logprob: -16.076433181762695

Token 305: 'issing' (ID: 20125)
  Prédit: 'issing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issing' → logprob: -1.0280383548888494e-06
    2. 'iss' → logprob: -14.625000953674316
    3. 'ISSING' → logprob: -15.250000953674316
    4. 'ising' → logprob: -15.875000953674316
    5. 'ss' → logprob: -16.875001907348633
    6. 'ing' → logprob: -17.125001907348633
    7. 'itting' → logprob: -17.750001907348633
    8. 'i' → logprob: -18.125001907348633
    9. ')' → logprob: -18.125001907348633
    10. 'issi' → logprob: -18.375001907348633

Token 306: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.125
    3. ')
' → logprob: -16.375
    4. ')`' → logprob: -19.0
    5. '()' → logprob: -19.125
    6. '))' → logprob: -19.625
    7. '())' → logprob: -20.625
    8. '')' → logprob: -21.125
    9. '}' → logprob: -21.5
    10. '）' → logprob: -21.625

Token 307: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0006881289882585406
    2. '
' → logprob: -7.375688076019287
    3. '\n' → logprob: -10.000688552856445
    4. ' if' → logprob: -11.250688552856445
    5. '```' → logprob: -13.375688552856445
    6. '#' → logprob: -14.375688552856445
    7. '\' → logprob: -14.625688552856445
    8. '\
' → logprob: -15.875688552856445
    9. '  
' → logprob: -16.000688552856445
    10. '

' → logprob: -16.125688552856445

Token 308: ' App' (ID: 2583)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -4.961759259458631e-06
    2. ' if' → logprob: -12.250004768371582
    3. 'If' → logprob: -16.3750057220459
    4. '__' → logprob: -16.8750057220459
    5. 'main' → logprob: -19.5000057220459
    6. 'i' → logprob: -20.2500057220459
    7. '_' → logprob: -20.5000057220459
    8. '_if' → logprob: -21.6250057220459
    9. 'run' → logprob: -22.2500057220459
    10. ' If' → logprob: -22.2500057220459

Token 309: 'eler' (ID: 6998)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.10962007194757462
    2. 'if' → logprob: -2.6096200942993164
    3. 'ly' → logprob: -5.234620094299316
    4. 'ear' → logprob: -5.484620094299316
    5. 'le' → logprob: -5.859620094299316
    6. '__' → logprob: -5.859620094299316
    7. 'e' → logprob: -5.859620094299316
    8. 'er' → logprob: -5.859620094299316
    9. 'elif' → logprob: -5.859620094299316
    10. '_' → logprob: -6.609620094299316

Token 310: ' la' (ID: 557)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.4133991599082947
    2. 'if' → logprob: -1.1633992195129395
    3. ' main' → logprob: -3.6633992195129395
    4. ' if' → logprob: -7.5383992195129395
    5. '_main' → logprob: -13.913398742675781
    6. '(main' → logprob: -14.538398742675781
    7. '__' → logprob: -15.288398742675781
    8. '	main' → logprob: -15.913398742675781
    9. 'def' → logprob: -16.41339874267578
    10. '.main' → logprob: -17.28839874267578

Token 311: ' fonction' (ID: 17610)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.101750947535038
    2. ' main' → logprob: -2.3517508506774902
    3. 'if' → logprob: -6.47675085067749
    4. ' if' → logprob: -13.101751327514648
    5. '(main' → logprob: -14.351751327514648
    6. 'def' → logprob: -14.351751327514648
    7. '```' → logprob: -15.101751327514648
    8. '`' → logprob: -15.351751327514648
    9. '__' → logprob: -15.351751327514648
    10. '	main' → logprob: -15.726751327514648

Token 312: ' principale' (ID: 68926)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.014365050941705704
    2. ' main' → logprob: -4.264365196228027
    3. 'if' → logprob: -8.514365196228027
    4. ' if' → logprob: -14.514365196228027
    5. '(main' → logprob: -15.389365196228027
    6. '_main' → logprob: -15.514365196228027
    7. '	main' → logprob: -16.63936424255371
    8. '.main' → logprob: -18.88936424255371
    9. '```' → logprob: -19.51436424255371
    10. '
' → logprob: -20.63936424255371

Token 313: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3421434760093689
    2. '
' → logprob: -1.3421435356140137
    3. 'main' → logprob: -3.5921435356140137
    4. '

' → logprob: -7.217143535614014
    5. '(main' → logprob: -8.967143058776855
    6. ' if' → logprob: -10.842143058776855
    7. '
' → logprob: -11.217143058776855
    8. '()
' → logprob: -11.467143058776855
    9. ' main' → logprob: -11.592143058776855
    10. '\' → logprob: -13.092143058776855

Token 314: ' ce' (ID: 2357)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.38688066601753235
    2. ' __' → logprob: -1.13688063621521
    3. 'name' → logprob: -12.136880874633789
    4. ' ' → logprob: -12.511880874633789
    5. '_' → logprob: -15.511880874633789
    6. '_name' → logprob: -16.13688087463379
    7. 'if' → logprob: -17.01188087463379
    8. '/__' → logprob: -17.01188087463379
    9. '___' → logprob: -17.13688087463379
    10. 'Name' → logprob: -17.38688087463379

Token 315: ' script' (ID: 11713)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.09326153993606567
    2. ' __' → logprob: -2.718261480331421
    3. '_' → logprob: -5.21826171875
    4. 'n' → logprob: -5.21826171875
    5. ' n' → logprob: -5.84326171875
    6. 'est' → logprob: -6.21826171875
    7. ' script' → logprob: -6.46826171875
    8. '```' → logprob: -6.84326171875
    9. ' ' → logprob: -7.09326171875
    10. ' est' → logprob: -7.34326171875

Token 316: ' est' (ID: 893)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.30537518858909607
    2. ' __' → logprob: -1.4303752183914185
    3. ' ==' → logprob: -4.430375099182129
    4. 'est' → logprob: -5.680375099182129
    5. '==' → logprob: -6.180375099182129
    6. ' est' → logprob: -6.305375099182129
    7. 'name' → logprob: -6.680375099182129
    8. ' is' → logprob: -6.930375099182129
    9. 'if' → logprob: -7.555375099182129
    10. 's' → logprob: -7.805375099182129

Token 317: ' exécut' (ID: 165350)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.31343555450439453
    2. ' __' → logprob: -1.3134355545043945
    3. 'name' → logprob: -8.938435554504395
    4. ' exécut' → logprob: -11.063435554504395
    5. '_name' → logprob: -11.938435554504395
    6. ' "__' → logprob: -12.688435554504395
    7. ' executed' → logprob: -12.813435554504395
    8. 'execut' → logprob: -12.938435554504395
    9. '_' → logprob: -13.313435554504395
    10. ' ' → logprob: -13.688435554504395

Token 318: 'é' (ID: 377)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06631592661142349
    2. 'é' → logprob: -2.9413158893585205
    3. ' __' → logprob: -4.9413161277771
    4. ' en' → logprob: -6.3163161277771
    5. '_' → logprob: -6.9413161277771
    6. 'e' → logprob: -7.5663161277771
    7. 'ed' → logprob: -8.316315650939941
    8. 'd' → logprob: -8.816315650939941
    9. '   ' → logprob: -8.941315650939941
    10. 'er' → logprob: -9.316315650939941

Token 319: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14777213335037231
    2. ' if' → logprob: -2.3977720737457275
    3. ' en' → logprob: -4.272772312164307
    4. '```' → logprob: -4.272772312164307
    5. ' under' → logprob: -4.772772312164307
    6. '__' → logprob: -5.147772312164307
    7. ' as' → logprob: -8.147771835327148
    8. 'en' → logprob: -8.272771835327148
    9. ' __' → logprob: -8.272771835327148
    10. 'import' → logprob: -8.272771835327148

Token 320: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -4.596781946020201e-05
    2. ' if' → logprob: -10.000045776367188
    3. '__' → logprob: -15.500045776367188
    4. '
' → logprob: -16.250045776367188
    5. '```' → logprob: -16.625045776367188
    6. 'i' → logprob: -18.750045776367188
    7. '_if' → logprob: -19.500045776367188
    8. '_' → logprob: -19.500045776367188
    9. '\
' → logprob: -19.625045776367188
    10. '_
' → logprob: -20.875045776367188

Token 321: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.023292528465390205
    2. '__' → logprob: -3.7732925415039062
    3. ' ' → logprob: -10.148292541503906
    4. ' ' → logprob: -12.773292541503906
    5. '_' → logprob: -13.148292541503906
    6. '___' → logprob: -13.648292541503906
    7. ' _' → logprob: -14.773292541503906
    8. ' ___' → logprob: -15.148292541503906
    9. '​' → logprob: -15.398292541503906
    10. ' ‌' → logprob: -15.523292541503906

Token 322: 'name' (ID: 897)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.29811713099479675
    2. '__' → logprob: -1.7981171607971191
    3. '==' → logprob: -2.423117160797119
    4. ' __' → logprob: -6.173117160797119
    5. 'name' → logprob: -6.798117160797119
    6. '=' → logprob: -9.173116683959961
    7. '_' → logprob: -9.173116683959961
    8. '=="' → logprob: -9.923116683959961
    9. '=='' → logprob: -11.048116683959961
    10. '_name' → logprob: -11.048116683959961

Token 323: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.0
    3. '____' → logprob: -17.75
    4. '__.__' → logprob: -18.125
    5. '==' → logprob: -18.5
    6. '___' → logprob: -18.75
    7. '__
' → logprob: -18.875
    8. '__

' → logprob: -20.5
    9. '______' → logprob: -20.5
    10. '__,' → logprob: -20.75

Token 324: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00043805985478684306
    2. '==' → logprob: -7.750438213348389
    3. '=="' → logprob: -12.75043773651123
    4. ' ==' → logprob: -13.00043773651123
    5. '_' → logprob: -14.12543773651123
    6. '=' → logprob: -14.62543773651123
    7. '___' → logprob: -15.12543773651123
    8. '__.__' → logprob: -15.62543773651123
    9. '=='' → logprob: -16.000438690185547
    10. '____' → logprob: -16.125438690185547

Token 325: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.014461050741374493
    2. ''' → logprob: -4.264461040496826
    3. ' "__' → logprob: -8.139461517333984
    4. ' '__' → logprob: -12.639461517333984
    5. '__' → logprob: -13.014461517333984
    6. '"user' → logprob: -16.139461517333984
    7. ' "' → logprob: -16.764461517333984
    8. '"name' → logprob: -17.014461517333984
    9. '"_' → logprob: -17.389461517333984
    10. '("__' → logprob: -17.889461517333984

Token 326: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -4.320199877838604e-07
    2. '_main' → logprob: -15.5
    3. 'name' → logprob: -16.5
    4. ' main' → logprob: -17.125
    5. 'ma' → logprob: -19.375
    6. '__' → logprob: -20.375
    7. 'm' → logprob: -20.5
    8. '	main' → logprob: -21.875
    9. '_MAIN' → logprob: -22.5
    10. 'mai' → logprob: -22.625

Token 327: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.062048014253377914
    2. '__' → logprob: -2.8120479583740234
    3. '_' → logprob: -9.437047958374023
    4. '__":
' → logprob: -14.687047958374023
    5. '_'' → logprob: -16.187047958374023
    6. '___' → logprob: -17.312047958374023
    7. '__:' → logprob: -18.062047958374023
    8. ''' → logprob: -19.312047958374023
    9. '':' → logprob: -19.687047958374023
    10. '__('' → logprob: -19.687047958374023

Token 328: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.7484227418899536
    2. ''' → logprob: -1.2484227418899536
    3. ' main' → logprob: -1.4984227418899536
    4. '__' → logprob: -4.748422622680664
    5. '"' → logprob: -5.998422622680664
    6. ' '__' → logprob: -6.123422622680664
    7. ' __' → logprob: -6.373422622680664
    8. '   ' → logprob: -7.373422622680664
    9. '_main' → logprob: -8.248422622680664
    10. '	main' → logprob: -8.623422622680664

Token 329: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.0
    3. '	main' → logprob: -22.625
    4. '   ' → logprob: -24.625
    5. 'mai' → logprob: -25.25
    6. '_main' → logprob: -25.375
    7. 'ma' → logprob: -25.5
    8. '.main' → logprob: -25.625
    9. '(main' → logprob: -25.75
    10. 'm' → logprob: -26.375

Token 330: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 328
Tokens correctement prédits (1ère position, stricte): 125
Tokens correctement prédits (1ère position, avec adaptation): 132
Tokens correctement prédits (top 10): 236
Précision stricte (1ère position): 38.11%
Précision adaptée (1ère position): 40.24%
Précision (top 10): 71.95%
================================================================================
