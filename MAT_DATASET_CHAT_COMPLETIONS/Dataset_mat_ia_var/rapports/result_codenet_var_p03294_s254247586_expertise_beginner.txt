================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
a = input().split()
total = 0
for i in range(len(a)):
    total = total + int(a[i])
result = total - n
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004278083215467632
    2. ''' → logprob: -8.625428199768066
    3. '('' → logprob: -9.375428199768066
    4. '(n' → logprob: -9.875428199768066
    5. '```' → logprob: -10.375428199768066
    6. '`' → logprob: -10.750428199768066
    7. '("("' → logprob: -11.125428199768066
    8. '(
' → logprob: -11.125428199768066
    9. ')' → logprob: -11.750428199768066
    10. '()' → logprob: -12.250428199768066

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11869344860315323
    2. ')' → logprob: -2.2436933517456055
    3. '()' → logprob: -5.3686933517456055
    4. '())' → logprob: -7.4936933517456055
    5. '(
' → logprob: -8.243693351745605
    6. '```' → logprob: -9.993693351745605
    7. '(

' → logprob: -10.368693351745605
    8. '('' → logprob: -10.493693351745605
    9. ''' → logprob: -10.618693351745605
    10. '(n' → logprob: -10.868693351745605

Token 5: 'a' (ID: 64)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7038187384605408
    2. 'if' → logprob: -1.4538187980651855
    3. 'for' → logprob: -2.3288187980651855
    4. 's' → logprob: -2.4538187980651855
    5. 'f' → logprob: -4.3288187980651855
    6. ' ' → logprob: -4.4538187980651855
    7. 'x' → logprob: -4.8288187980651855
    8. ')' → logprob: -4.9538187980651855
    9. 'a' → logprob: -4.9538187980651855
    10. ''' → logprob: -5.0788187980651855

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0034043090417981148
    2. '[a' → logprob: -6.503404140472412
    3. 'a' → logprob: -7.753404140472412
    4. '[i' → logprob: -7.878404140472412
    5. '+' → logprob: -8.25340461730957
    6. '[n' → logprob: -8.37840461730957
    7. '.' → logprob: -9.50340461730957
    8. '\[' → logprob: -9.50340461730957
    9. '[:]' → logprob: -9.50340461730957
    10. '=' → logprob: -9.62840461730957

Token 7: ' input' (ID: 3422)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.9408794045448303
    2. '[]' → logprob: -1.0658793449401855
    3. 'list' → logprob: -1.8158793449401855
    4. ' list' → logprob: -2.9408793449401855
    5. ' [' → logprob: -4.1908793449401855
    6. 'input' → logprob: -4.4408793449401855
    7. '[input' → logprob: -5.0658793449401855
    8. '[' → logprob: -5.4408793449401855
    9. '0' → logprob: -5.5658793449401855
    10. '[int' → logprob: -5.6908793449401855

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0014305938966572285
    2. ''' → logprob: -7.751430511474609
    3. '()' → logprob: -8.00143051147461
    4. '('' → logprob: -8.12643051147461
    5. ')' → logprob: -8.75143051147461
    6. '(
' → logprob: -9.62643051147461
    7. '"' → logprob: -10.12643051147461
    8. '```' → logprob: -10.62643051147461
    9. '(

' → logprob: -10.87643051147461
    10. '`' → logprob: -11.00143051147461

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.005590176209807396
    2. 'strip' → logprob: -5.255589962005615
    3. 's' → logprob: -8.380590438842773
    4. 'spl' → logprob: -9.380590438842773
    5. 'sp' → logprob: -10.880590438842773
    6. 'rstrip' → logprob: -11.505590438842773
    7. 'replace' → logprob: -11.630590438842773
    8. 'r' → logprob: -13.005590438842773
    9. 'rs' → logprob: -13.255590438842773
    10. ' split' → logprob: -14.630590438842773

Token 10: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05253734067082405
    2. '()' → logprob: -3.052537441253662
    3. '('' → logprob: -5.927537441253662
    4. '("("' → logprob: -7.052537441253662
    5. '"' → logprob: -8.802536964416504
    6. '("' → logprob: -9.802536964416504
    7. '(
' → logprob: -10.302536964416504
    8. '(

' → logprob: -10.302536964416504
    9. '((' → logprob: -10.552536964416504
    10. ''' → logprob: -10.927536964416504

Token 11: 'total' (ID: 9577)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1333942711353302
    2. 'for' → logprob: -2.508394241333008
    3. 'b' → logprob: -3.883394241333008
    4. 'c' → logprob: -4.633394241333008
    5. 'n' → logprob: -5.883394241333008
    6. 's' → logprob: -5.883394241333008
    7. 'result' → logprob: -5.883394241333008
    8. '[' → logprob: -6.758394241333008
    9. 'm' → logprob: -6.883394241333008
    10. 'count' → logprob: -7.633394241333008

Token 12: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.025989526882767677
    2. '+' → logprob: -4.775989532470703
    3. '[' → logprob: -5.025989532470703
    4. '(' → logprob: -5.775989532470703
    5. '_space' → logprob: -6.150989532470703
    6. '=' → logprob: -6.525989532470703
    7. ' +=' → logprob: -7.150989532470703
    8. '()' → logprob: -8.025989532470703
    9. '[:]' → logprob: -8.150989532470703
    10. ' =' → logprob: -8.150989532470703

Token 13: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07179679721593857
    2. ' ' → logprob: -2.6967968940734863
    3. 'len' → logprob: -7.571796894073486
    4. 'sum' → logprob: -7.696796894073486
    5. 'int' → logprob: -8.571796417236328
    6. ' len' → logprob: -8.821796417236328
    7. '"' → logprob: -8.946796417236328
    8. ' sum' → logprob: -8.946796417236328
    9. ' int' → logprob: -9.196796417236328
    10. 'a' → logprob: -9.446796417236328

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.022993525490164757
    2. 'sum' → logprob: -4.022993564605713
    3. 'int' → logprob: -5.522993564605713
    4. '"' → logprob: -8.022993087768555
    5. ''' → logprob: -8.397993087768555
    6. 'len' → logprob: -8.647993087768555
    7. ' ' → logprob: -10.147993087768555
    8. 'a' → logprob: -11.272993087768555
    9. ''int' → logprob: -11.272993087768555
    10. ''s' → logprob: -11.272993087768555

Token 15: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0027025199960917234
    2. ' for' → logprob: -6.002702713012695
    3. '\n' → logprob: -8.752702713012695
    4. '
' → logprob: -10.752702713012695
    5. '```' → logprob: -11.252702713012695
    6. '\' → logprob: -11.627702713012695
    7. ')' → logprob: -12.252702713012695
    8. '.for' → logprob: -13.002702713012695
    9. ' ' → logprob: -13.252702713012695
    10. '<|end|>' → logprob: -13.377702713012695

Token 16: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004595055361278355
    2. ' for' → logprob: -7.750459671020508
    3. '```' → logprob: -11.250459671020508
    4. '\n' → logprob: -11.750459671020508
    5. ')' → logprob: -13.375459671020508
    6. '`' → logprob: -13.500459671020508
    7. '=' → logprob: -14.125459671020508
    8. '\' → logprob: -14.250459671020508
    9. '.for' → logprob: -14.375459671020508
    10. ''' → logprob: -14.625459671020508

Token 17: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.39168086647987366
    2. ' i' → logprob: -1.1416808366775513
    3. '  ' → logprob: -5.516680717468262
    4. ' _' → logprob: -8.266680717468262
    5. '_' → logprob: -8.516680717468262
    6. 'i' → logprob: -9.016680717468262
    7. ' ‌' → logprob: -9.266680717468262
    8. ' item' → logprob: -11.141680717468262
    9. ' )' → logprob: -11.266680717468262
    10. ' x' → logprob: -11.266680717468262

Token 18: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.027536515146493912
    2. 'in' → logprob: -3.902536630630493
    3. ' ' → logprob: -5.152536392211914
    4. '  ' → logprob: -7.277536392211914
    5. 'n' → logprob: -9.152536392211914
    6. '_' → logprob: -9.277536392211914
    7. '[' → logprob: -10.027536392211914
    8. '<|end|>' → logprob: -10.027536392211914
    9. ',' → logprob: -10.402536392211914
    10. ')' → logprob: -10.527536392211914

Token 19: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.083761066198349
    2. 'range' → logprob: -3.083760976791382
    3. ' a' → logprob: -3.458760976791382
    4. 'a' → logprob: -5.958761215209961
    5. ' ' → logprob: -7.708761215209961
    6. ' n' → logprob: -10.708761215209961
    7. 'n' → logprob: -10.958761215209961
    8. '	range' → logprob: -12.083761215209961
    9. ' xrange' → logprob: -12.333761215209961
    10. '(range' → logprob: -12.833761215209961

Token 20: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3956783711910248
    2. '(n' → logprob: -1.1456784009933472
    3. ' (' → logprob: -4.770678520202637
    4. '(len' → logprob: -8.270678520202637
    5. ' ' → logprob: -11.020678520202637
    6. ' n' → logprob: -11.520678520202637
    7. '(i' → logprob: -12.270678520202637
    8. '(range' → logprob: -13.395678520202637
    9. '(
' → logprob: -13.895678520202637
    10. 'n' → logprob: -14.395678520202637

Token 21: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0025751865468919277
    2. '(' → logprob: -6.002575397491455
    3. '(n' → logprob: -9.252574920654297
    4. 'a' → logprob: -13.002574920654297
    5. '(s' → logprob: -14.502574920654297
    6. '(
' → logprob: -15.502574920654297
    7. ' (' → logprob: -15.752574920654297
    8. '(i' → logprob: -15.877574920654297
    9. '(

' → logprob: -16.127574920654297
    10. '(ai' → logprob: -16.252574920654297

Token 22: ')):
' (ID: 22530)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.8538393378257751
    2. ')):' → logprob: -1.22883939743042
    3. '):' → logprob: -2.22883939743042
    4. ')' → logprob: -2.35383939743042
    5. '[' → logprob: -2.97883939743042
    6. '[i' → logprob: -3.72883939743042
    7. '[a' → logprob: -6.35383939743042
    8. ')[' → logprob: -7.35383939743042
    9. ')):
' → logprob: -8.228838920593262
    10. ')))' → logprob: -8.603838920593262

Token 23: '   ' (ID: 271)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.4819445312023163
    2. '    ' → logprob: -1.9819445610046387
    3. ' ' → logprob: -2.2319445610046387
    4. '   ' → logprob: -2.4819445610046387
    5. 'total' → logprob: -3.1069445610046387
    6. ' if' → logprob: -6.106944561004639
    7. '     
' → logprob: -6.231944561004639
    8. '    
' → logprob: -6.856944561004639
    9. '<|end|>' → logprob: -7.356944561004639
    10. '	total' → logprob: -7.606944561004639

Token 24: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.18386250734329224
    2. 'total' (adapté à ' total') → logprob: -1.8088624477386475
    3. '   ' → logprob: -6.183862686157227
    4. ' if' → logprob: -6.558862686157227
    5. 'if' → logprob: -7.933862686157227
    6. '    ' → logprob: -8.933862686157227
    7. ' ' → logprob: -9.683862686157227
    8. '	total' → logprob: -10.808862686157227
    9. ' a' → logprob: -11.308862686157227
    10. '(total' → logprob: -11.933862686157227

Token 25: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0039036190137267113
    2. '+=' → logprob: -6.128903388977051
    3. '+' → logprob: -6.628903388977051
    4. ' ' → logprob: -8.62890338897705
    5. ' +' → logprob: -8.75390338897705
    6. '<|end|>' → logprob: -10.00390338897705
    7. '+='' → logprob: -12.25390338897705
    8. ')' → logprob: -13.00390338897705
    9. '+="' → logprob: -13.75390338897705
    10. ' =' → logprob: -14.12890338897705

Token 26: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.026453331112861633
    2. 'total' → logprob: -3.6514532566070557
    3. ' int' → logprob: -9.401453018188477
    4. 'int' → logprob: -10.901453018188477
    5. '+' → logprob: -11.151453018188477
    6. ' ' → logprob: -11.151453018188477
    7. '(total' → logprob: -11.651453018188477
    8. '	total' → logprob: -12.651453018188477
    9. '0' → logprob: -12.776453018188477
    10. ' tot' → logprob: -13.026453018188477

Token 27: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31328487396240234
    2. ' +' → logprob: -1.3132848739624023
    3. '+i' → logprob: -11.563284873962402
    4. '<|end|>' → logprob: -12.563284873962402
    5. ' ' → logprob: -12.813284873962402
    6. ' plus' → logprob: -12.938284873962402
    7. ' +=' → logprob: -14.063284873962402
    8. '+a' → logprob: -14.188284873962402
    9. '+=' → logprob: -14.938284873962402
    10. ' +
' → logprob: -15.063284873962402

Token 28: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.17977957427501678
    2. ' int' → logprob: -1.8047795295715332
    3. 'a' → logprob: -10.804780006408691
    4. ' a' → logprob: -12.554780006408691
    5. '(int' → logprob: -12.804780006408691
    6. 'float' → logprob: -12.804780006408691
    7. 'i' → logprob: -13.429780006408691
    8. ' ' → logprob: -13.679780006408691
    9. '   ' → logprob: -14.429780006408691
    10. ' float' → logprob: -14.429780006408691

Token 29: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6931529641151428
    2. '(a' → logprob: -0.6931529641151428
    3. '(
' → logprob: -12.943153381347656
    4. '('' → logprob: -13.818153381347656
    5. '(i' → logprob: -14.443153381347656
    6. '(

' → logprob: -14.568153381347656
    7. '(A' → logprob: -15.068153381347656
    8. 'a' → logprob: -15.193153381347656
    9. '(ai' → logprob: -15.693153381347656
    10. ' (' → logprob: -15.818153381347656

Token 30: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0791289284825325
    2. '[' → logprob: -2.5791289806365967
    3. ')' → logprob: -8.579129219055176
    4. ' [' → logprob: -11.079129219055176
    5. '[a' → logprob: -11.579129219055176
    6. ')[' → logprob: -12.329129219055176
    7. '[
' → logprob: -12.329129219055176
    8. '[I' → logprob: -12.829129219055176
    9. '[x' → logprob: -13.329129219055176
    10. '[j' → logprob: -13.454129219055176

Token 31: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.011000901460647583
    2. ')' → logprob: -4.886001110076904
    3. ']))' → logprob: -6.511001110076904
    4. ')])' → logprob: -6.761001110076904
    5. ']' → logprob: -8.011000633239746
    6. '))' → logprob: -8.136000633239746
    7. ''])' → logprob: -10.386000633239746
    8. ')]' → logprob: -10.386000633239746
    9. '])]' → logprob: -10.386000633239746
    10. ' ])' → logprob: -12.261000633239746

Token 32: 'result' (ID: 2521)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.324686050415039
    2. '
' → logprob: -1.949686050415039
    3. 'print' → logprob: -2.074686050415039
    4. '\n' → logprob: -2.324686050415039
    5. '\' → logprob: -2.449686050415039
    6. ' 
' → logprob: -2.699686050415039
    7. '  
' → logprob: -3.074686050415039
    8. ' if' → logprob: -3.449686050415039
    9. 'if' → logprob: -3.824686050415039
    10. '#' → logprob: -4.074686050415039

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7441132068634033
    2. '=' → logprob: -1.4941132068634033
    3. ' ' → logprob: -1.4941132068634033
    4. '_' → logprob: -3.7441132068634033
    5. '<|end|>' → logprob: -4.244112968444824
    6. ')' → logprob: -4.369112968444824
    7. '[' → logprob: -5.119112968444824
    8. 's' → logprob: -5.244112968444824
    9. '[:]' → logprob: -6.244112968444824
    10. ',' → logprob: -6.494112968444824

Token 34: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.003644138341769576
    2. 'total' → logprob: -5.878643989562988
    3. ' ' → logprob: -7.378643989562988
    4. ''' → logprob: -9.753643989562988
    5. '"' → logprob: -10.378643989562988
    6. ' str' → logprob: -11.003643989562988
    7. ' ' → logprob: -11.128643989562988
    8. ' f' → logprob: -11.128643989562988
    9. ' tot' → logprob: -11.128643989562988
    10. '(total' → logprob: -11.128643989562988

Token 35: ' -' (ID: 533)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.11439415067434311
    2. '/' → logprob: -2.489394187927246
    3. ' //' → logprob: -4.239394187927246
    4. ' ' → logprob: -5.489394187927246
    5. '/n' → logprob: -6.489394187927246
    6. '%' → logprob: -6.614394187927246
    7. '<|end|>' → logprob: -6.739394187927246
    8. ' %' → logprob: -7.614394187927246
    9. '//' → logprob: -8.114394187927246
    10. 'print' → logprob: -8.239394187927246

Token 36: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.0263866186141968
    2. '1' → logprob: -1.1513866186141968
    3. ' ' → logprob: -1.6513866186141968
    4. 'n' → logprob: -2.9013867378234863
    5. ' int' → logprob: -3.9013867378234863
    6. ' max' → logprob: -4.151386737823486
    7. 'int' → logprob: -4.526386737823486
    8. ' min' → logprob: -4.776386737823486
    9. 'max' → logprob: -5.026386737823486
    10. 'min' → logprob: -5.276386737823486

Token 37: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5771842002868652
    2. '*' → logprob: -1.7021842002868652
    3. '<|end|>' → logprob: -2.2021842002868652
    4. '\' → logprob: -3.5771842002868652
    5. '```' → logprob: -3.8271842002868652
    6. ')' → logprob: -3.8271842002868652
    7. 'print' → logprob: -4.077184200286865
    8. '%' → logprob: -4.202184200286865
    9. '.' → logprob: -4.327184200286865
    10. '
' → logprob: -4.452184200286865

Token 38: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.14068783819675446
    2. '<|end|>' → logprob: -2.515687942504883
    3. ')' → logprob: -3.265687942504883
    4. ' print' → logprob: -5.390687942504883
    5. '
' → logprob: -5.765687942504883
    6. '\n' → logprob: -6.890687942504883
    7. '*' → logprob: -7.140687942504883
    8. '#' → logprob: -7.265687942504883
    9. '```' → logprob: -7.890687942504883
    10. '\' → logprob: -7.890687942504883

Token 39: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005371895618736744
    2. '(result' → logprob: -5.255372047424316
    3. '(total' → logprob: -9.005372047424316
    4. '("("' → logprob: -12.255372047424316
    5. ' (' → logprob: -12.505372047424316
    6. '('' → logprob: -12.755372047424316
    7. '()' → logprob: -13.630372047424316
    8. '(sum' → logprob: -14.755372047424316
    9. '((' → logprob: -15.255372047424316
    10. '(res' → logprob: -15.380372047424316

Token 40: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.173704271830502e-06
    2. '))' → logprob: -13.12500286102295
    3. ' )' → logprob: -14.12500286102295
    4. ')`' → logprob: -15.62500286102295
    5. '')' → logprob: -16.875003814697266
    6. '`)' → logprob: -16.875003814697266
    7. ')
' → logprob: -17.500003814697266
    8. '*' → logprob: -17.500003814697266
    9. '#' → logprob: -17.625003814697266
    10. '(' → logprob: -18.000003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 38
Tokens correctement prédits (1ère position, stricte): 14
Tokens correctement prédits (1ère position, avec adaptation): 14
Tokens correctement prédits (top 10): 28
Précision stricte (1ère position): 36.84%
Précision adaptée (1ère position): 36.84%
Précision (top 10): 73.68%
================================================================================
