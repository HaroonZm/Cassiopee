================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

# Style non-conventionnel : variables tout en majuscule, indentation d'une tabulation, pas d'espaces après les virgules
N,K=[int(x)for x in sys.stdin.readline().split()]
BUCKETS=[0]*K
for X in range(1,N+1):BUCKETS[X%K]+=1

rEsUlT=0

for FIRST in range(K):
	SECOND=(K-FIRST)%K
	THIRD=(K-FIRST)%K
	# (b+c)%k==0, mais b et c sont pris égaux ici, style non-classique
	if (SECOND+THIRD)%K<1:
		rEsUlT+=BUCKETS[FIRST]*BUCKETS[SECOND]*BUCKETS[THIRD]

print(   rEsUlT )
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0347585454583168
    2. '\n' → logprob: -4.034758567810059
    3. 'import' → logprob: -4.909758567810059
    4. '<|end|>' → logprob: -5.284758567810059
    5. '\' → logprob: -7.159758567810059
    6. '<|end|>' → logprob: -7.534758567810059
    7. 'newline' → logprob: -7.909758567810059
    8. ',' → logprob: -8.159758567810059
    9. '[' → logprob: -8.284758567810059
    10. '' → logprob: -8.284758567810059

Token 4: ' Style' (ID: 17602)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24100935459136963
    2. ' This' → logprob: -2.86600923538208
    3. ' The' → logprob: -3.74100923538208
    4. ' argparse' → logprob: -3.99100923538208
    5. ' is' → logprob: -4.61600923538208
    6. 'def' → logprob: -4.61600923538208
    7. ' argv' → logprob: -4.86600923538208
    8. ' def' → logprob: -4.99100923538208
    9. 'argv' → logprob: -4.99100923538208
    10. 'This' → logprob: -4.99100923538208

Token 5: ' non' (ID: 2893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.44172388315200806
    2. '_' → logprob: -1.6917238235473633
    3. '.' → logprob: -2.1917238235473633
    4. ' =' → logprob: -3.6917238235473633
    5. '#' → logprob: -4.566723823547363
    6. ':' → logprob: -4.941723823547363
    7. '```' → logprob: -4.941723823547363
    8. '\' → logprob: -5.566723823547363
    9. ' ' → logprob: -6.191723823547363
    10. ''' → logprob: -6.941723823547363

Token 6: '-con' (ID: 21675)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.407794713973999
    2. '=' → logprob: -1.657794713973999
    3. 'e' → logprob: -2.032794713973999
    4. '_' → logprob: -2.282794713973999
    5. '-def' → logprob: -2.782794713973999
    6. 'def' → logprob: -3.032794713973999
    7. 'import' → logprob: -3.282794713973999
    8. '#' → logprob: -4.032794952392578
    9. '-import' → logprob: -4.032794952392578
    10. '-block' → logprob: -4.032794952392578

Token 7: 'vention' (ID: 9584)
  Prédit: 'tent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tent' → logprob: -0.9094618558883667
    2. 't' → logprob: -1.0344618558883667
    3. 'forming' → logprob: -1.6594618558883667
    4. 'form' → logprob: -3.6594619750976562
    5. 'formed' → logprob: -4.159461975097656
    6. 'fig' → logprob: -6.284461975097656
    7. 'stant' → logprob: -6.534461975097656
    8. 'f' → logprob: -6.659461975097656
    9. 'strained' → logprob: -6.909461975097656
    10. 'formance' → logprob: -7.284461975097656

Token 8: 'nel' (ID: 10085)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.32058680057525635
    2. 'al' → logprob: -1.5705868005752563
    3. 'a' → logprob: -3.820586681365967
    4. '=' → logprob: -3.945586681365967
    5. ' =' → logprob: -4.695586681365967
    6. 'def' → logprob: -5.695586681365967
    7. 'ally' → logprob: -5.820586681365967
    8. 'd' → logprob: -6.195586681365967
    9. '_=' → logprob: -6.445586681365967
    10. ':' → logprob: -7.070586681365967

Token 9: ' :' (ID: 712)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8192293643951416
    2. '_' → logprob: -1.0692293643951416
    3. ':' → logprob: -2.6942293643951416
    4. '#' → logprob: -2.9442293643951416
    5. '=' → logprob: -3.0692293643951416
    6. '-' → logprob: -4.4442291259765625
    7. ' ' → logprob: -4.5692291259765625
    8. 'd' → logprob: -5.3192291259765625
    9. 'de' → logprob: -5.6942291259765625
    10. '```' → logprob: -5.9442291259765625

Token 10: ' variables' (ID: 13955)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.8239734172821045
    2. 'def' → logprob: -1.1989734172821045
    3. ' sys' → logprob: -2.1989734172821045
    4. ' ' → logprob: -2.5739734172821045
    5. 'sys' → logprob: -4.073973655700684
    6. ' #' → logprob: -4.698973655700684
    7. '#' → logprob: -4.698973655700684
    8. 'class' → logprob: -4.823973655700684
    9. 'print' → logprob: -5.323973655700684
    10. '_' → logprob: -5.698973655700684

Token 11: ' tout' (ID: 5501)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.007147487252950668
    2. ' ' → logprob: -5.882147312164307
    3. 's' → logprob: -6.507147312164307
    4. ' =' → logprob: -7.007147312164307
    5. '=' → logprob: -7.632147312164307
    6. '_=' → logprob: -8.007147789001465
    7. '_lower' → logprob: -8.382147789001465
    8. ' _' → logprob: -9.382147789001465
    9. 'a' → logprob: -9.507147789001465
    10. '_s' → logprob: -9.632147789001465

Token 12: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.8783896565437317
    2. '_' → logprob: -1.003389596939087
    3. '```' → logprob: -2.628389596939087
    4. '_en' → logprob: -3.628389596939087
    5. ' en' → logprob: -4.003389835357666
    6. 'esp' → logprob: -4.128389835357666
    7. '_le' → logprob: -4.378389835357666
    8. 'es' → logprob: -4.503389835357666
    9. 'au' → logprob: -4.628389835357666
    10. 'à' → logprob: -4.753389835357666

Token 13: ' maj' (ID: 15575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2047111988067627
    2. 'ma' → logprob: -1.9547111988067627
    3. 'min' → logprob: -2.0797111988067627
    4. 'minus' → logprob: -2.0797111988067627
    5. '_min' → logprob: -2.2047111988067627
    6. '_minus' → logprob: -2.8297111988067627
    7. 'es' → logprob: -3.2047111988067627
    8. '_ma' → logprob: -3.5797111988067627
    9. 'e' → logprob: -4.579710960388184
    10. '_lower' → logprob: -4.579710960388184

Token 14: 'usc' (ID: 30081)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2824169993400574
    2. 'E' → logprob: -2.657417058944702
    3. 'S' → logprob: -3.032417058944702
    4. '=' → logprob: -3.407417058944702
    5. 'A' → logprob: -3.407417058944702
    6. 'ES' → logprob: -4.282416820526123
    7. '```' → logprob: -4.782416820526123
    8. ' ' → logprob: -5.407416820526123
    9. 'LET' → logprob: -5.907416820526123
    10. ',' → logprob: -6.282416820526123

Token 15: 'ule' (ID: 1601)
  Prédit: 'ules'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ules' → logprob: -0.25333118438720703
    2. 'ULE' → logprob: -2.128331184387207
    3. 'ule' → logprob: -2.378331184387207
    4. 'ales' → logprob: -4.503331184387207
    5. 'ale' → logprob: -8.003331184387207
    6. 'U' → logprob: -8.753331184387207
    7. '#' → logprob: -9.753331184387207
    8. 'les' → logprob: -9.878331184387207
    9. 'I' → logprob: -10.253331184387207
    10. '```' → logprob: -10.253331184387207

Token 16: ',' (ID: 11)
  Prédit: 'MA'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MA' → logprob: -1.6494431495666504
    2. '\' → logprob: -2.0244431495666504
    3. '_' → logprob: -2.1494431495666504
    4. 'MY' → logprob: -2.1494431495666504
    5. 'S' → logprob: -2.6494431495666504
    6. 'N' → logprob: -2.7744431495666504
    7. '```' → logprob: -3.1494431495666504
    8. 'MON' → logprob: -3.7744431495666504
    9. 'VARIABLE' → logprob: -4.02444314956665
    10. 'D' → logprob: -4.02444314956665

Token 17: ' indentation' (ID: 170733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22292742133140564
    2. '_' → logprob: -1.722927451133728
    3. '#' → logprob: -5.222927570343018
    4. 'import' → logprob: -6.097927570343018
    5. ' ,' → logprob: -6.347927570343018
    6. ' 
' → logprob: -6.472927570343018
    7. ',' → logprob: -6.722927570343018
    8. ' mais' → logprob: -6.972927570343018
    9. 's' → logprob: -7.097927570343018
    10. ' #' → logprob: -7.097927570343018

Token 18: ' d' (ID: 272)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1382043361663818
    2. '=' → logprob: -1.3882043361663818
    3. ',' → logprob: -2.388204336166382
    4. 'import' → logprob: -2.888204336166382
    5. ' ' → logprob: -3.013204336166382
    6. '.' → logprob: -3.263204336166382
    7. '```' → logprob: -3.638204336166382
    8. '<|end|>' → logprob: -3.888204336166382
    9. 's' → logprob: -4.263204574584961
    10. 'de' → logprob: -4.263204574584961

Token 19: ''une' (ID: 13337)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.02231828309595585
    2. 'u' → logprob: -4.772318363189697
    3. ''espace' → logprob: -5.522318363189697
    4. ''' → logprob: -6.522318363189697
    5. ''esp' → logprob: -6.772318363189697
    6. ''un' → logprob: -6.772318363189697
    7. 'esp' → logprob: -6.897318363189697
    8. 'eux' → logprob: -7.272318363189697
    9. 'es' → logprob: -7.522318363189697
    10. ''une' → logprob: -7.772318363189697

Token 20: ' tab' (ID: 6842)
  Prédit: 'tab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tab' → logprob: -0.4815239906311035
    2. 'es' → logprob: -1.9815239906311035
    3. 'esp' → logprob: -2.2315239906311035
    4. 'ligne' → logprob: -2.8565239906311035
    5. ' tab' → logprob: -3.2315239906311035
    6. ' ' → logprob: -5.1065239906311035
    7. ' espace' → logprob: -5.2315239906311035
    8. 'space' → logprob: -5.3565239906311035
    9. '   ' → logprob: -5.3565239906311035
    10. 'se' → logprob: -5.8565239906311035

Token 21: 'ulation' (ID: 4672)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.1053801029920578
    2. 'D' → logprob: -3.605380058288574
    3. '\' → logprob: -3.605380058288574
    4. 'A' → logprob: -4.480380058288574
    5. 'S' → logprob: -5.605380058288574
    6. 'T' → logprob: -5.980380058288574
    7. 'N' → logprob: -5.980380058288574
    8. '\r' → logprob: -6.230380058288574
    9. 'TAB' → logprob: -6.480380058288574
    10. '```' → logprob: -6.480380058288574

Token 22: ',' (ID: 11)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.19969360530376434
    2. 'D' → logprob: -3.0746936798095703
    3. '\' → logprob: -3.0746936798095703
    4. '
' → logprob: -4.69969367980957
    5. '' → logprob: -4.69969367980957
    6. 'A' → logprob: -4.82469367980957
    7. '

' → logprob: -4.82469367980957
    8. 'S' → logprob: -5.32469367980957
    9. 'T' → logprob: -5.57469367980957
    10. 'X' → logprob: -5.69969367980957

Token 23: ' pas' (ID: 2173)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7366242408752441
    2. '\' → logprob: -1.9866242408752441
    3. '#' → logprob: -2.361624240875244
    4. 'd' → logprob: -2.861624240875244
    5. 'a' → logprob: -3.236624240875244
    6. 'D' → logprob: -3.486624240875244
    7. 'n' → logprob: -3.736624240875244
    8. 'A' → logprob: -4.236624240875244
    9. 'def' → logprob: -4.361624240875244
    10. 'I' → logprob: -4.611624240875244

Token 24: ' d' (ID: 272)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.7022240161895752
    2. ' de' → logprob: -1.7022240161895752
    3. 'd' → logprob: -1.9522240161895752
    4. ' d' → logprob: -2.702224016189575
    5. 's' → logprob: -2.952224016189575
    6. ' ' → logprob: -3.452224016189575
    7. '#' → logprob: -4.077223777770996
    8. 'des' → logprob: -5.577223777770996
    9. 'space' → logprob: -6.077223777770996
    10. 'es' → logprob: -6.827223777770996

Token 25: ''esp' (ID: 73244)
  Prédit: ''espace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''espace' → logprob: -0.10601919889450073
    2. ''esp' → logprob: -2.9810192584991455
    3. ''' → logprob: -3.3560192584991455
    4. 'e' → logprob: -4.981019020080566
    5. 'es' → logprob: -6.481019020080566
    6. ''é' → logprob: -6.981019020080566
    7. ''import' → logprob: -6.981019020080566
    8. ''\' → logprob: -7.356019020080566
    9. '’espace' → logprob: -7.356019020080566
    10. ''e' → logprob: -7.481019020080566

Token 26: 'aces' (ID: 3247)
  Prédit: 'ace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ace' → logprob: -0.04289664328098297
    2. 'aces' → logprob: -4.292896747589111
    3. 'a' → logprob: -4.542896747589111
    4. '   ' → logprob: -5.167896747589111
    5. 'acer' → logprob: -6.667896747589111
    6. '```' → logprob: -6.792896747589111
    7. 'acement' → logprob: -6.792896747589111
    8. '#' → logprob: -6.917896747589111
    9. '	' → logprob: -7.042896747589111
    10. '' → logprob: -7.042896747589111

Token 27: ' après' (ID: 16460)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.6607610583305359
    2. 'def' → logprob: -2.0357611179351807
    3. '\' → logprob: -2.4107611179351807
    4. '\n' → logprob: -2.5357611179351807
    5. 'A' → logprob: -2.9107611179351807
    6. 'd' → logprob: -4.035760879516602
    7. '
' → logprob: -4.035760879516602
    8. 'I' → logprob: -4.410760879516602
    9. '' → logprob: -4.535760879516602
    10. 'T' → logprob: -5.035760879516602

Token 28: ' les' (ID: 1341)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6290751099586487
    2. 'D' → logprob: -1.879075050354004
    3. 'd' → logprob: -1.879075050354004
    4. 'I' → logprob: -3.754075050354004
    5. 'import' → logprob: -4.129075050354004
    6. '_' → logprob: -4.129075050354004
    7. '=' → logprob: -4.254075050354004
    8. 'M' → logprob: -4.504075050354004
    9. '\' → logprob: -4.629075050354004
    10. '\n' → logprob: -4.879075050354004

Token 29: ' virg' (ID: 165362)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05238870531320572
    2. ':' → logprob: -3.8023886680603027
    3. '#' → logprob: -4.052388668060303
    4. '.' → logprob: -5.552388668060303
    5. '(' → logprob: -6.177388668060303
    6. '_' → logprob: -6.302388668060303
    7. ')' → logprob: -7.052388668060303
    8. 'import' → logprob: -7.052388668060303
    9. ',' → logprob: -7.302388668060303
    10. ';' → logprob: -8.427389144897461

Token 30: 'ules' (ID: 3787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014037039130926132
    2. 'ales' → logprob: -4.389037132263184
    3. 'a' → logprob: -7.764037132263184
    4. ';' → logprob: -8.139037132263184
    5. 'ale' → logprob: -8.639037132263184
    6. ',a' → logprob: -9.264037132263184
    7. '```' → logprob: -9.514037132263184
    8. ',<' → logprob: -9.764037132263184
    9. 'g' → logprob: -10.389037132263184
    10. 'al' → logprob: -10.389037132263184

Token 31: '
' (ID: 198)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.220534086227417
    2. '\n' → logprob: -1.345534086227417
    3. 'def' → logprob: -1.970534086227417
    4. 'D' → logprob: -2.720534086227417
    5. 'A' → logprob: -2.970534086227417
    6. '
' → logprob: -3.720534086227417
    7. '' → logprob: -3.845534086227417
    8. '=' → logprob: -4.470534324645996
    9. 'M' → logprob: -4.595534324645996
    10. 'I' → logprob: -4.720534324645996

Token 32: 'N' (ID: 45)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.562771201133728
    2. 'A' → logprob: -1.687771201133728
    3. 'def' → logprob: -1.812771201133728
    4. 'D' → logprob: -2.0627713203430176
    5. '\n' → logprob: -2.3127713203430176
    6. 'M' → logprob: -3.6877713203430176
    7. 'T' → logprob: -3.8127713203430176
    8. 'S' → logprob: -4.062771320343018
    9. 'DE' → logprob: -4.437771320343018
    10. 'TAB' → logprob: -4.562771320343018

Token 33: ',K' (ID: 107147)
  Prédit: 'AME'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'AME' → logprob: -0.628341794013977
    2. 'UM' → logprob: -1.378341794013977
    3. 'OMBRE' → logprob: -2.3783416748046875
    4. '=' → logprob: -3.3783416748046875
    5. 'OM' → logprob: -3.8783416748046875
    6. 'U' → logprob: -4.5033416748046875
    7. '_' → logprob: -4.6283416748046875
    8. ' =' → logprob: -4.8783416748046875
    9. 'B' → logprob: -5.0033416748046875
    10. 'A' → logprob: -5.1283416748046875

Token 34: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02342470921576023
    2. ' =' → logprob: -3.7734246253967285
    3. '=sys' → logprob: -9.148425102233887
    4. '=input' → logprob: -10.898425102233887
    5. '=N' → logprob: -11.148425102233887
    6. '=int' → logprob: -11.398425102233887
    7. ',' → logprob: -11.898425102233887
    8. '=

' → logprob: -12.148425102233887
    9. '	' → logprob: -13.273425102233887
    10. '=[' → logprob: -13.523425102233887

Token 35: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12574921548366547
    2. ' int' → logprob: -2.625749111175537
    3. ' ' → logprob: -4.750749111175537
    4. ' map' → logprob: -4.875749111175537
    5. 'map' → logprob: -5.000749111175537
    6. '1' → logprob: -5.000749111175537
    7. '0' → logprob: -5.500749111175537
    8. '10' → logprob: -5.625749111175537
    9. '5' → logprob: -6.125749111175537
    10. 'i' → logprob: -6.500749111175537

Token 36: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.05763309448957443
    2. '(i' → logprob: -3.0576331615448
    3. '(sys' → logprob: -5.807632923126221
    4. '(' → logprob: -5.932632923126221
    5. '(s' → logprob: -6.182632923126221
    6. '(a' → logprob: -7.307632923126221
    7. ']' → logprob: -8.307633399963379
    8. '(input' → logprob: -9.557633399963379
    9. '(v' → logprob: -9.932633399963379
    10. '(n' → logprob: -10.057633399963379

Token 37: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.727905979962088e-05
    2. 'for' → logprob: -10.87504768371582
    3. ' )' → logprob: -11.12504768371582
    4. 'sys' → logprob: -12.87504768371582
    5. '(sys' → logprob: -13.50004768371582
    6. '(x' → logprob: -13.62504768371582
    7. ' for' → logprob: -13.75004768371582
    8. '(' → logprob: -13.75004768371582
    9. ')
' → logprob: -14.00004768371582
    10. ')x' → logprob: -14.37504768371582

Token 38: 'for' (ID: 1938)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20249079167842865
    2. 'for' → logprob: -1.8274908065795898
    3. ')' → logprob: -3.95249080657959
    4. ' sys' → logprob: -6.20249080657959
    5. ' ' → logprob: -7.20249080657959
    6. '(sys' → logprob: -8.45249080657959
    7. ' )' → logprob: -9.07749080657959
    8. '(' → logprob: -9.45249080657959
    9. 'sys' → logprob: -10.07749080657959
    10. ' (' → logprob: -10.95249080657959

Token 39: ' x' (ID: 1215)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.3504387438297272
    2. 'sys' → logprob: -1.3504387140274048
    3. ' input' → logprob: -4.100438594818115
    4. 'input' → logprob: -4.475438594818115
    5. ' ' → logprob: -5.600438594818115
    6. 'x' → logprob: -6.100438594818115
    7. '=sys' → logprob: -6.600438594818115
    8. ' x' → logprob: -7.225438594818115
    9. '	sys' → logprob: -7.975438594818115
    10. '(sys' → logprob: -10.475439071655273

Token 40: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.634897768497467
    2. 'in' → logprob: -0.759897768497467
    3. ' ' → logprob: -6.384897708892822
    4. ' sys' → logprob: -8.75989818572998
    5. 'input' → logprob: -9.00989818572998
    6. 'x' → logprob: -9.38489818572998
    7. 'sys' → logprob: -9.50989818572998
    8. ' input' → logprob: -9.50989818572998
    9. ' x' → logprob: -10.25989818572998
    10. '=sys' → logprob: -11.38489818572998

Token 41: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.3911631107330322
    2. 'sys' → logprob: -1.7661631107330322
    3. ' input' → logprob: -2.2661631107330322
    4. 'input' → logprob: -3.0161631107330322
    5. '=sys' → logprob: -10.641162872314453
    6. '	sys' → logprob: -12.016162872314453
    7. ' ' → logprob: -12.016162872314453
    8. '(sys' → logprob: -12.516162872314453
    9. ' range' → logprob: -13.891162872314453
    10. 'range' → logprob: -14.141162872314453

Token 42: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.35106396675109863
    2. '.argv' → logprob: -1.2260639667510986
    3. '.' → logprob: -5.9760637283325195
    4. ' .' → logprob: -10.60106372833252
    5. '.readline' → logprob: -10.85106372833252
    6. '.stdout' → logprob: -11.60106372833252
    7. '.input' → logprob: -12.72606372833252
    8. 'argv' → logprob: -12.72606372833252
    9. '.import' → logprob: -13.22606372833252
    10. '.std' → logprob: -13.22606372833252

Token 43: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -5.7053759519476444e-05
    2. '.' → logprob: -9.875057220458984
    3. '.read' → logprob: -12.250057220458984
    4. '.readlines' → logprob: -14.375057220458984
    5. ' .' → logprob: -16.375057220458984
    6. ' readline' → logprob: -18.500057220458984
    7. '.]' → logprob: -19.000057220458984
    8. '].' → logprob: -19.375057220458984
    9. '.re' → logprob: -19.750057220458984
    10. ']' → logprob: -19.750057220458984

Token 44: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.011146623641252518
    2. '().' → logprob: -4.761146545410156
    3. '()' → logprob: -6.011146545410156
    4. '()].' → logprob: -10.011146545410156
    5. '())' → logprob: -11.136146545410156
    6. '()][' → logprob: -11.636146545410156
    7. '()],' → logprob: -12.386146545410156
    8. ' ()' → logprob: -14.011146545410156
    9. '()[' → logprob: -14.261146545410156
    10. '()>' → logprob: -14.261146545410156

Token 45: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.21627956628799438
    2. 'strip' → logprob: -1.7162795066833496
    3. 'rstrip' → logprob: -4.21627950668335
    4. ' split' → logprob: -13.091279983520508
    5. ' strip' → logprob: -14.716279983520508
    6. 'rs' → logprob: -16.216279983520508
    7. 'decode' → logprob: -16.716279983520508
    8. '(split' → logprob: -16.966279983520508
    9. ' ' → logprob: -17.591279983520508
    10. 'spl' → logprob: -17.716279983520508

Token 46: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0010660359403118491
    2. '()' → logprob: -7.626066207885742
    3. ']' → logprob: -7.876066207885742
    4. '(' → logprob: -9.126066207885742
    5. '())' → logprob: -10.126066207885742
    6. ')]' → logprob: -10.501066207885742
    7. ']()' → logprob: -11.751066207885742
    8. '()],' → logprob: -12.751066207885742
    9. '('' → logprob: -12.876066207885742
    10. '()][' → logprob: -13.001066207885742

Token 47: 'BU' (ID: 18641)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.6491987705230713
    2. '' → logprob: -2.3991987705230713
    3. 'A' → logprob: -2.7741987705230713
    4. 'T' → logprob: -2.8991987705230713
    5. 'for' → logprob: -2.8991987705230713
    6. '	T' → logprob: -2.8991987705230713
    7. '	
' → logprob: -3.0241987705230713
    8. '	A' → logprob: -3.1491987705230713
    9. 'R' → logprob: -3.2741987705230713
    10. 'D' → logprob: -3.3991987705230713

Token 48: 'CKET' (ID: 64388)
  Prédit: 'FFER'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'FFER' → logprob: -0.08656127750873566
    2. 'F' → logprob: -2.8365612030029297
    3. 'FER' → logprob: -4.83656120300293
    4. 'FF' → logprob: -4.83656120300293
    5. 'FFE' → logprob: -4.96156120300293
    6. 'ffer' → logprob: -7.46156120300293
    7. 'FS' → logprob: -7.96156120300293
    8. '_F' → logprob: -9.71156120300293
    9. 'FR' → logprob: -9.71156120300293
    10. 'C' → logprob: -9.83656120300293

Token 49: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.24287453293800354
    2. '_SIZE' → logprob: -1.7428745031356812
    3. '_S' → logprob: -3.4928746223449707
    4. '_' → logprob: -5.367874622344971
    5. '_COUNT' → logprob: -5.492874622344971
    6. '_CAP' → logprob: -8.117874145507812
    7. 'SIZE' → logprob: -8.242874145507812
    8. '=' → logprob: -8.367874145507812
    9. '_SZ' → logprob: -9.492874145507812
    10. '_NUM' → logprob: -9.617874145507812

Token 50: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.035669323056936264
    2. '=[' → logprob: -3.7856693267822266
    3. ' =' → logprob: -5.160669326782227
    4. '=[]' → logprob: -5.410669326782227
    5. '_' → logprob: -6.910669326782227
    6. '={}' → logprob: -7.910669326782227
    7. ' =[' → logprob: -9.035669326782227
    8. ',' → logprob: -9.035669326782227
    9. '_=' → logprob: -9.285669326782227
    10. '_SIZE' → logprob: -9.535669326782227

Token 51: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04089071974158287
    2. '[]' → logprob: -3.540890693664551
    3. ']' → logprob: -5.165890693664551
    4. '{}' → logprob: -6.165890693664551
    5. '[' → logprob: -6.915890693664551
    6. 'int' → logprob: -7.040890693664551
    7. '{' → logprob: -7.915890693664551
    8. '[int' → logprob: -8.16589069366455
    9. ' ' → logprob: -8.41589069366455
    10. '(' → logprob: -8.91589069366455

Token 52: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.20770086348056793
    2. ']' → logprob: -1.7077008485794067
    3. ',' → logprob: -5.207700729370117
    4. ']*(' → logprob: -7.832700729370117
    5. ' for' → logprob: -8.582700729370117
    6. ' ]' → logprob: -8.707700729370117
    7. ']+' → logprob: -10.457700729370117
    8. 'for' → logprob: -11.582700729370117
    9. '*' → logprob: -13.957700729370117
    10. '	for' → logprob: -14.457700729370117

Token 53: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.5563983917236328
    2. 'N' → logprob: -0.9313983917236328
    3. '100' → logprob: -3.806398391723633
    4. '10' → logprob: -5.556398391723633
    5. '(' → logprob: -5.931398391723633
    6. '(K' → logprob: -6.806398391723633
    7. '101' → logprob: -7.431398391723633
    8. '(N' → logprob: -7.556398391723633
    9. '20' → logprob: -8.306398391723633
    10. '1' → logprob: -8.931398391723633

Token 54: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.042648687958717346
    2. '
' → logprob: -4.042648792266846
    3. 'for' → logprob: -4.292648792266846
    4. '' → logprob: -5.042648792266846
    5. '	
' → logprob: -6.292648792266846
    6. '	for' → logprob: -6.792648792266846
    7. ' for' → logprob: -7.417648792266846
    8. ' 
' → logprob: -9.292648315429688
    9. '  
' → logprob: -9.542648315429688
    10. '

' → logprob: -9.792648315429688

Token 55: 'for' (ID: 1938)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21931874752044678
    2. 'for' → logprob: -1.7193187475204468
    3. '' → logprob: -4.844318866729736
    4. '
' → logprob: -5.469318866729736
    5. ' for' → logprob: -5.844318866729736
    6. '	for' → logprob: -6.719318866729736
    7. '	
' → logprob: -6.844318866729736
    8. '\n' → logprob: -9.219318389892578
    9. ' 
' → logprob: -9.344318389892578
    10. '

' → logprob: -9.844318389892578

Token 56: ' X' (ID: 2127)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.2390916347503662
    2. '_' → logprob: -1.6140916347503662
    3. 'i' → logprob: -1.6140916347503662
    4. ' _' → logprob: -1.8640916347503662
    5. 'I' → logprob: -2.364091634750366
    6. '_i' → logprob: -3.489091634750366
    7. ' I' → logprob: -3.989091634750366
    8. ' ' → logprob: -4.864091873168945
    9. '	i' → logprob: -6.239091873168945
    10. 'N' → logprob: -7.364091873168945

Token 57: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.47636348009109497
    2. ' in' → logprob: -0.976363480091095
    3. '	in' → logprob: -6.226363658905029
    4. ' ' → logprob: -8.726363182067871
    5. '_in' → logprob: -9.601363182067871
    6. '  ' → logprob: -11.101363182067871
    7. ' ' → logprob: -11.601363182067871
    8. '   ' → logprob: -11.601363182067871
    9. 'i' → logprob: -12.101363182067871
    10. 'int' → logprob: -12.226363182067871

Token 58: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6329710483551025
    2. 'range' → logprob: -0.7579710483551025
    3. ' ' → logprob: -9.632970809936523
    4. '(range' → logprob: -9.757970809936523
    5. '[' → logprob: -9.882970809936523
    6. ' sys' → logprob: -10.507970809936523
    7. ' xrange' → logprob: -10.507970809936523
    8. ' N' → logprob: -10.757970809936523
    9. '	range' → logprob: -10.757970809936523
    10. 'N' → logprob: -11.007970809936523

Token 59: '(' (ID: 7)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.10030846297740936
    2. '(' → logprob: -2.350308418273926
    3. '(
' → logprob: -9.725308418273926
    4. '	' → logprob: -10.850308418273926
    5. ' (' → logprob: -12.100308418273926
    6. '(n' → logprob: -12.225308418273926
    7. '	N' → logprob: -12.350308418273926
    8. 'N' → logprob: -12.725308418273926
    9. '(K' → logprob: -13.100308418273926
    10. '(

' → logprob: -14.100308418273926

Token 60: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0014177382690832019
    2. '	N' → logprob: -6.876417636871338
    3. ' N' → logprob: -8.251418113708496
    4. '1' → logprob: -9.251418113708496
    5. '0' → logprob: -11.876418113708496
    6. '   ' → logprob: -12.251418113708496
    7. 'K' → logprob: -12.376418113708496
    8. ' ' → logprob: -12.626418113708496
    9. '9' → logprob: -12.876418113708496
    10. '10' → logprob: -13.376418113708496

Token 61: ',N' (ID: 49539)
  Prédit: ',N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',N' → logprob: -0.5794458985328674
    2. ',' → logprob: -0.8294458985328674
    3. ',K' → logprob: -6.079445838928223
    4. ' ,' → logprob: -6.829445838928223
    5. ',n' → logprob: -9.454445838928223
    6. '	' → logprob: -10.704445838928223
    7. ',len' → logprob: -12.204445838928223
    8. ',int' → logprob: -12.829445838928223
    9. ',X' → logprob: -12.954445838928223
    10. ' ' → logprob: -13.329445838928223

Token 62: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00027599421446211636
    2. ' +' → logprob: -9.125275611877441
    3. '	' → logprob: -9.375275611877441
    4. ')' → logprob: -10.250275611877441
    5. '):' → logprob: -10.250275611877441
    6. ':' → logprob: -13.375275611877441
    7. '):
' → logprob: -13.500275611877441
    8. ')+' → logprob: -13.625275611877441
    9. '+)' → logprob: -13.625275611877441
    10. '-' → logprob: -13.875275611877441

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004311460361350328
    2. ' ' → logprob: -7.750431060791016
    3. ')' → logprob: -15.625431060791016
    4. '   ' → logprob: -16.875431060791016
    5. '	' → logprob: -17.000431060791016
    6. '  ' → logprob: -17.125431060791016
    7. '１' → logprob: -17.250431060791016
    8. ' ' → logprob: -17.500431060791016
    9. '' → logprob: -17.625431060791016
    10. '۱' → logprob: -17.625431060791016

Token 64: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2836420238018036
    2. ')' → logprob: -1.783642053604126
    3. '	' → logprob: -3.033642053604126
    4. ':' → logprob: -3.533642053604126
    5. '\t' → logprob: -6.908641815185547
    6. '):
' → logprob: -8.033641815185547
    7. '):
' → logprob: -9.908641815185547
    8. ',' → logprob: -9.908641815185547
    9. '	tab' → logprob: -10.408641815185547
    10. ' :' → logprob: -10.783641815185547

Token 65: 'BU' (ID: 18641)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	' → logprob: -0.5117941498756409
    2. '	B' → logprob: -1.636794090270996
    3. '\t' → logprob: -2.386794090270996
    4. '	if' → logprob: -3.011794090270996
    5. '	I' → logprob: -4.011794090270996
    6. '	
' → logprob: -4.011794090270996
    7. '	T' → logprob: -4.886794090270996
    8. '	X' → logprob: -5.636794090270996
    9. '	A' → logprob: -5.636794090270996
    10. '	for' → logprob: -6.136794090270996

Token 66: 'CKET' (ID: 64388)
  Prédit: 'CKET'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CKET' → logprob: -0.023383839055895805
    2. 'CK' → logprob: -3.773383855819702
    3. 'C' → logprob: -8.898384094238281
    4. 'CKER' → logprob: -14.773384094238281
    5. '```' → logprob: -15.148384094238281
    6. '_C' → logprob: -15.273384094238281
    7. '
' → logprob: -15.398384094238281
    8. '#' → logprob: -16.27338409423828
    9. ' CK' → logprob: -16.39838409423828
    10. 'K' → logprob: -16.89838409423828

Token 67: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0002631238894537091
    2. '[S' → logprob: -8.625263214111328
    3. 's' → logprob: -10.500263214111328
    4. '[' → logprob: -10.750263214111328
    5. ' S' → logprob: -11.375263214111328
    6. '=S' → logprob: -12.625263214111328
    7. '=' → logprob: -13.625263214111328
    8. '   ' → logprob: -13.687763214111328
    9. '[]' → logprob: -13.687763214111328
    10. '[
' → logprob: -13.937763214111328

Token 68: '[X' (ID: 118621)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.023230450227856636
    2. '[X' → logprob: -3.89823055267334
    3. '[B' → logprob: -6.52323055267334
    4. '[(' → logprob: -7.77323055267334
    5. '[[' → logprob: -8.64823055267334
    6. '[K' → logprob: -8.77323055267334
    7. '[int' → logprob: -9.14823055267334
    8. '[T' → logprob: -9.64823055267334
    9. ' [' → logprob: -10.02323055267334
    10. '[N' → logprob: -10.02323055267334

Token 69: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.018830563873052597
    2. ' %' → logprob: -4.0188307762146
    3. '%B' → logprob: -7.6438307762146
    4. '	' → logprob: -10.268830299377441
    5. ' ' → logprob: -10.518830299377441
    6. '-' → logprob: -10.893830299377441
    7. '%A' → logprob: -10.893830299377441
    8. '%
' → logprob: -11.018830299377441
    9. '%C' → logprob: -11.643830299377441
    10. '%x' → logprob: -12.018830299377441

Token 70: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0011714138090610504
    2. ' K' → logprob: -6.751171588897705
    3. '	K' → logprob: -14.126171112060547
    4. ' ' → logprob: -15.001171112060547
    5. '  ' → logprob: -17.376171112060547
    6. '>K' → logprob: -17.501171112060547
    7. 'k' → logprob: -18.001171112060547
    8. '   ' → logprob: -18.501171112060547
    9. 'Ｋ' → logprob: -18.876171112060547
    10. '`' → logprob: -19.876171112060547

Token 71: ']+=' (ID: 123635)
  Prédit: ']+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.15934789180755615
    2. ']' → logprob: -2.0343480110168457
    3. '+=' → logprob: -4.159348011016846
    4. ' +=' → logprob: -7.534348011016846
    5. '+' → logprob: -8.784347534179688
    6. ' ]' → logprob: -9.284347534179688
    7. ']+' → logprob: -9.909347534179688
    8. '+]' → logprob: -10.409347534179688
    9. '++' → logprob: -10.659347534179688
    10. '	' → logprob: -11.659347534179688

Token 72: '1' (ID: 16)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.1800970435142517
    2. '1' → logprob: -1.8050971031188965
    3. ' X' → logprob: -8.430096626281738
    4. ' ' → logprob: -9.055096626281738
    5. 'x' → logprob: -11.305096626281738
    6. '	X' → logprob: -13.430096626281738
    7. '2' → logprob: -13.930096626281738
    8. '0' → logprob: -14.680096626281738
    9. '   ' → logprob: -15.430096626281738
    10. 'I' → logprob: -15.430096626281738

Token 73: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.091436468064785
    2. '<|end|>' → logprob: -2.5914363861083984
    3. '\n' → logprob: -5.341436386108398
    4. ' ' → logprob: -5.716436386108398
    5. ' 
' → logprob: -6.341436386108398
    6. '  
' → logprob: -7.216436386108398
    7. '

' → logprob: -7.716436386108398
    8. '' → logprob: -7.966436386108398
    9. '```' → logprob: -8.341436386108398
    10. '
' → logprob: -8.466436386108398

Token 74: 'r' (ID: 81)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05161043256521225
    2. '<|end|>' → logprob: -3.4266104698181152
    3. '\n' → logprob: -5.426610469818115
    4. '#' → logprob: -5.551610469818115
    5. 'for' → logprob: -5.801610469818115
    6. ' ' → logprob: -6.551610469818115
    7. 'print' → logprob: -6.926610469818115
    8. ' 
' → logprob: -7.051610469818115
    9. '  
' → logprob: -7.301610469818115
    10. '

' → logprob: -7.426610469818115

Token 75: 'Es' (ID: 9960)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.028024286031723022
    2. 'e' → logprob: -4.153024196624756
    3. 'eturn' → logprob: -4.653024196624756
    4. '=' → logprob: -6.903024196624756
    5. 'esu' → logprob: -8.028024673461914
    6. ' =' → logprob: -8.903024673461914
    7. 'ES' → logprob: -9.028024673461914
    8. 'a' → logprob: -9.153024673461914
    9. '' → logprob: -9.403024673461914
    10. '#' → logprob: -9.528024673461914

Token 76: 'Ul' (ID: 49103)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0031355321407318115
    2. 'su' → logprob: -5.878135681152344
    3. 'sum' → logprob: -8.378135681152344
    4. 'r' → logprob: -10.003135681152344
    5. 'ult' → logprob: -10.878135681152344
    6. 'S' → logprob: -12.003135681152344
    7. 'ULT' → logprob: -12.628135681152344
    8. 'ul' → logprob: -12.753135681152344
    9. 'SU' → logprob: -12.878135681152344
    10. 'Su' → logprob: -13.003135681152344

Token 77: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.029864691197872162
    2. 't' → logprob: -3.52986478805542
    3. 'TS' → logprob: -9.904864311218262
    4. '```' → logprob: -10.779864311218262
    5. 'tat' → logprob: -11.279864311218262
    6. 'TA' → logprob: -12.404864311218262
    7. 'Ts' → logprob: -12.404864311218262
    8. 'Tat' → logprob: -12.904864311218262
    9. 'ts' → logprob: -13.154864311218262
    10. 'Ta' → logprob: -13.154864311218262

Token 78: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11668947339057922
    2. ' =' → logprob: -2.241689443588257
    3. '+' → logprob: -6.616689682006836
    4. ' ' → logprob: -7.366689682006836
    5. '+=' → logprob: -7.491689682006836
    6. ' +=' → logprob: -7.866689682006836
    7. '.' → logprob: -8.491689682006836
    8. ',' → logprob: -8.741689682006836
    9. '=sum' → logprob: -8.991689682006836
    10. '=[' → logprob: -9.366689682006836

Token 79: '0' (ID: 15)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8144901990890503
    2. 'sum' → logprob: -1.1894901990890503
    3. '1' → logprob: -2.06449031829834
    4. 'BU' → logprob: -2.81449031829834
    5. '0' → logprob: -3.93949031829834
    6. 'min' → logprob: -4.18949031829834
    7. 'N' → logprob: -4.43949031829834
    8. ' max' → logprob: -5.18949031829834
    9. ' sum' → logprob: -5.81449031829834
    10. ' ' → logprob: -6.06449031829834

Token 80: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08213972300291061
    2. 'for' → logprob: -2.832139730453491
    3. '<|end|>' → logprob: -4.207139492034912
    4. ' for' → logprob: -5.707139492034912
    5. '' → logprob: -7.707139492034912
    6. '

' → logprob: -7.832139492034912
    7. '
' → logprob: -8.08213996887207
    8. '\n' → logprob: -8.45713996887207
    9. '	for' → logprob: -8.58213996887207
    10. ' 
' → logprob: -9.70713996887207

Token 81: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06496735662221909
    2. '
' → logprob: -2.814967393875122
    3. ' for' → logprob: -6.064967155456543
    4. '	for' → logprob: -7.814967155456543
    5. '<|end|>' → logprob: -9.064967155456543
    6. '' → logprob: -9.439967155456543
    7. '
' → logprob: -10.064967155456543
    8. '	
' → logprob: -11.689967155456543
    9. '

' → logprob: -12.064967155456543
    10. '\n' → logprob: -12.314967155456543

Token 82: ' FIRST' (ID: 61090)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6258453130722046
    2. ' B' → logprob: -1.6258453130722046
    3. ' I' → logprob: -2.000845432281494
    4. ' b' → logprob: -2.500845432281494
    5. ' R' → logprob: -4.875845432281494
    6. ' X' → logprob: -4.875845432281494
    7. 'I' → logprob: -5.125845432281494
    8. 'i' → logprob: -5.250845432281494
    9. ' ' → logprob: -5.375845432281494
    10. ' V' → logprob: -5.875845432281494

Token 83: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.539602518081665
    2. ' in' → logprob: -0.914602518081665
    3. ' i' → logprob: -5.914602279663086
    4. ',in' → logprob: -6.039602279663086
    5. ',' → logprob: -6.164602279663086
    6. ' ' → logprob: -6.414602279663086
    7. 'i' → logprob: -6.539602279663086
    8. 'IN' → logprob: -6.789602279663086
    9. ',i' → logprob: -6.914602279663086
    10. '	in' → logprob: -7.039602279663086

Token 84: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2524166405200958
    2. 'range' → logprob: -1.5024166107177734
    3. 'BU' → logprob: -8.377416610717773
    4. ' BU' → logprob: -9.002416610717773
    5. '(range' → logprob: -9.502416610717773
    6. ' ' → logprob: -10.627416610717773
    7. '	range' → logprob: -11.002416610717773
    8. ' xrange' → logprob: -12.252416610717773
    9. '  ' → logprob: -12.377416610717773
    10. '[' → logprob: -13.627416610717773

Token 85: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.009053658694028854
    2. '(' → logprob: -4.759053707122803
    3. 'K' → logprob: -8.634053230285645
    4. '(B' → logprob: -8.759053230285645
    5. '(k' → logprob: -9.384053230285645
    6. '(N' → logprob: -11.509053230285645
    7. '(M' → logprob: -13.634053230285645
    8. ' K' → logprob: -13.759053230285645
    9. '(
' → logprob: -13.759053230285645
    10. '()' → logprob: -14.134053230285645

Token 86: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0033182844053953886
    2. '-' → logprob: -6.3783183097839355
    3. '):
' → logprob: -6.6283183097839355
    4. ' ):' → logprob: -9.003317832946777
    5. '+' → logprob: -9.628317832946777
    6. '):
' → logprob: -9.753317832946777
    7. ')' → logprob: -10.878317832946777
    8. '//' → logprob: -11.378317832946777
    9. ' -' → logprob: -12.753317832946777
    10. '*' → logprob: -12.878317832946777

Token 87: '	' (ID: 197)
  Prédit: '	for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	for' → logprob: -0.000580792548134923
    2. 'for' → logprob: -8.250580787658691
    3. ' for' → logprob: -8.375580787658691
    4. '	' → logprob: -10.250580787658691
    5. '	tab' → logprob: -11.500580787658691
    6. '	if' → logprob: -11.625580787658691
    7. '	second' → logprob: -12.250580787658691
    8. '	f' → logprob: -12.500580787658691
    9. '	F' → logprob: -12.625580787658691
    10. '	first' → logprob: -12.625580787658691

Token 88: 'SECOND' (ID: 162338)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.040431953966617584
    2. '	for' → logprob: -3.9154319763183594
    3. 'BU' → logprob: -4.915431976318359
    4. ' for' → logprob: -5.040431976318359
    5. 'r' → logprob: -6.165431976318359
    6. '   ' → logprob: -7.290431976318359
    7. 'f' → logprob: -7.790431976318359
    8. 'count' → logprob: -8.16543197631836
    9. ' ' → logprob: -8.54043197631836
    10. 'range' → logprob: -8.54043197631836

Token 89: '=(' (ID: 9893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09951548278331757
    2. ' in' → logprob: -3.099515438079834
    3. 'for' → logprob: -3.849515438079834
    4. 'in' → logprob: -4.224515438079834
    5. ' =' → logprob: -5.474515438079834
    6. ' for' → logprob: -5.974515438079834
    7. '=in' → logprob: -6.349515438079834
    8. '=int' → logprob: -6.474515438079834
    9. '=i' → logprob: -6.974515438079834
    10. '=r' → logprob: -7.224515438079834

Token 90: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.09796804934740067
    2. 'FIRST' → logprob: -3.222968101501465
    3. ' K' → logprob: -3.347968101501465
    4. '-K' → logprob: -5.847968101501465
    5. 'F' → logprob: -5.972968101501465
    6. '(K' → logprob: -6.222968101501465
    7. ' (' → logprob: -6.347968101501465
    8. '-FIRST' → logprob: -6.347968101501465
    9. ' FIRST' → logprob: -6.472968101501465
    10. '-' → logprob: -6.722968101501465

Token 91: '-FIRST' (ID: 45468)
  Prédit: '-FIRST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-FIRST' → logprob: -0.04451049119234085
    2. '-' → logprob: -3.66951060295105
    3. ' -' → logprob: -4.044510364532471
    4. '-F' → logprob: -7.794510364532471
    5. '-first' → logprob: -9.794510841369629
    6. '	' → logprob: -10.294510841369629
    7. 'FIRST' → logprob: -11.794510841369629
    8. '-f' → logprob: -11.794510841369629
    9. ' ' → logprob: -12.294510841369629
    10. '-LAST' → logprob: -12.919510841369629

Token 92: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.079023078083992
    2. ')%' → logprob: -2.5790231227874756
    3. ' )' → logprob: -9.329023361206055
    4. '-' → logprob: -10.204023361206055
    5. ' if' → logprob: -13.704023361206055
    6. ')&' → logprob: -13.704023361206055
    7. 'if' → logprob: -13.829023361206055
    8. '）' → logprob: -14.329023361206055
    9. '	' → logprob: -14.704023361206055
    10. '%' → logprob: -15.204023361206055

Token 93: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -4.6087021473795176e-05
    2. ' K' → logprob: -10.000045776367188
    3. '	K' → logprob: -15.125045776367188
    4. '>K' → logprob: -15.625045776367188
    5. ' ' → logprob: -16.125045776367188
    6. '<|end|>' → logprob: -16.750045776367188
    7. 'k' → logprob: -18.500045776367188
    8. '*K' → logprob: -19.125045776367188
    9. '  ' → logprob: -19.125045776367188
    10. '```' → logprob: -19.250045776367188

Token 94: '
' (ID: 198)
  Prédit: '	for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	for' → logprob: -0.009117921814322472
    2. '
' → logprob: -5.38411808013916
    3. '	
' → logprob: -6.38411808013916
    4. '	if' → logprob: -7.13411808013916
    5. ' for' → logprob: -7.63411808013916
    6. '	r' → logprob: -7.63411808013916
    7. '	' → logprob: -8.38411808013916
    8. '<|end|>' → logprob: -8.50911808013916
    9. '	s' → logprob: -9.13411808013916
    10. 'for' → logprob: -9.75911808013916

Token 95: '	' (ID: 197)
  Prédit: '	r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	r' → logprob: -0.4828629791736603
    2. '	for' → logprob: -0.9828629493713379
    3. '	if' → logprob: -5.732862949371338
    4. '	
' → logprob: -6.357862949371338
    5. 'r' → logprob: -6.607862949371338
    6. '	s' → logprob: -7.357862949371338
    7. '	' → logprob: -7.732862949371338
    8. '	result' → logprob: -8.482863426208496
    9. '	while' → logprob: -8.732863426208496
    10. '
' → logprob: -8.732863426208496

Token 96: 'TH' (ID: 4867)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.008443417958915234
    2. 'if' → logprob: -5.258443355560303
    3. 'for' → logprob: -6.758443355560303
    4. '	r' → logprob: -7.258443355560303
    5. '	if' → logprob: -7.633443355560303
    6. ' if' → logprob: -8.383443832397461
    7. ' r' → logprob: -8.633443832397461
    8. 'i' → logprob: -9.008443832397461
    9. '	for' → logprob: -9.133443832397461
    10. ' ' → logprob: -9.883443832397461

Token 97: 'IRD' (ID: 86609)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.5155409574508667
    2. 'IR' → logprob: -1.8905409574508667
    3. 'IRD' → logprob: -1.8905409574508667
    4. 'RESH' → logprob: -2.3905410766601562
    5. 'E' → logprob: -2.5155410766601562
    6. 'IRST' → logprob: -2.7655410766601562
    7. 'R' → logprob: -3.5155410766601562
    8. 'REE' → logprob: -3.6405410766601562
    9. 'if' → logprob: -3.7655410766601562
    10. '_BUCKET' → logprob: -3.8905410766601562

Token 98: '=(' (ID: 9893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20075201988220215
    2. ' =' → logprob: -2.200752019882202
    3. '=(' → logprob: -2.700752019882202
    4. ' =(' → logprob: -5.575752258300781
    5. ' in' → logprob: -9.950752258300781
    6. ' ' → logprob: -10.325752258300781
    7. '=k' → logprob: -10.325752258300781
    8. '=int' → logprob: -10.325752258300781
    9. '=[' → logprob: -11.575752258300781
    10. '=len' → logprob: -11.700752258300781

Token 99: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.23134589195251465
    2. '(K' → logprob: -1.8563458919525146
    3. '(' → logprob: -3.2313458919525146
    4. ' (' → logprob: -5.481346130371094
    5. ' K' → logprob: -5.731346130371094
    6. '(-' → logprob: -6.856346130371094
    7. '-K' → logprob: -7.356346130371094
    8. ' ' → logprob: -8.106346130371094
    9. '	K' → logprob: -8.356346130371094
    10. '0' → logprob: -8.606346130371094

Token 100: '-FIRST' (ID: 45468)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16540226340293884
    2. '-FIRST' → logprob: -2.1654021739959717
    3. ' -' → logprob: -3.2904021739959717
    4. '	' → logprob: -8.29040241241455
    5. '-second' → logprob: -9.66540241241455
    6. '_SECOND' → logprob: -10.16540241241455
    7. 'SECOND' → logprob: -10.16540241241455
    8. '-first' → logprob: -10.41540241241455
    9. ')' → logprob: -10.66540241241455
    10. '-LAST' → logprob: -11.54040241241455

Token 101: ')%' (ID: 57656)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6257104277610779
    2. ')' → logprob: -1.1257104873657227
    3. ' -' → logprob: -2.2507104873657227
    4. ')%' → logprob: -4.000710487365723
    5. '	' → logprob: -5.375710487365723
    6. '-second' → logprob: -5.750710487365723
    7. '-FIRST' → logprob: -6.125710487365723
    8. '+' → logprob: -6.375710487365723
    9. '-S' → logprob: -6.750710487365723
    10. '*' → logprob: -7.000710487365723

Token 102: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -2.618001053633634e-05
    2. ' K' → logprob: -10.625025749206543
    3. '	K' → logprob: -13.625025749206543
    4. '<|end|>' → logprob: -14.875025749206543
    5. ' ' → logprob: -16.12502670288086
    6. '>K' → logprob: -17.00002670288086
    7. ')' → logprob: -17.00002670288086
    8. 'k' → logprob: -17.50002670288086
    9. '```' → logprob: -17.87502670288086
    10. '<|end|>' → logprob: -17.87502670288086

Token 103: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: '	' (ID: 197)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8286956548690796
    2. '<|end|>' → logprob: -0.9536956548690796
    3. '	if' → logprob: -2.328695774078369
    4. '+' → logprob: -3.328695774078369
    5. ' if' → logprob: -3.828695774078369
    6. '	
' → logprob: -4.828695774078369
    7. ' ' → logprob: -5.203695774078369
    8. '	for' → logprob: -6.453695774078369
    9. '	' → logprob: -6.578695774078369
    10. 'if' → logprob: -6.953695774078369

Token 105: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6941546201705933
    2. '<|end|>' → logprob: -1.0691546201705933
    3. '	if' → logprob: -3.194154739379883
    4. ' if' → logprob: -3.569154739379883
    5. '+' → logprob: -3.819154739379883
    6. 'if' → logprob: -4.194154739379883
    7. ' ' → logprob: -4.444154739379883
    8. '	
' → logprob: -4.444154739379883
    9. ':' → logprob: -5.319154739379883
    10. ' 
' → logprob: -5.694154739379883

Token 106: ' (' (ID: 350)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.128308653831482
    2. 'if' → logprob: -1.253308653831482
    3. 'for' → logprob: -1.628308653831482
    4. ' for' → logprob: -2.0033087730407715
    5. 'r' → logprob: -3.8783087730407715
    6. '	if' → logprob: -3.8783087730407715
    7. '	for' → logprob: -4.7533087730407715
    8. ' r' → logprob: -5.6283087730407715
    9. ' ' → logprob: -5.7533087730407715
    10. 'i' → logprob: -7.2533087730407715

Token 107: 'b' (ID: 65)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0485128164291382
    2. ' if' → logprob: -1.0485128164291382
    3. ' )' → logprob: -2.4235129356384277
    4. 'if' → logprob: -2.5485129356384277
    5. ' ' → logprob: -3.0485129356384277
    6. 'FIRST' → logprob: -3.9235129356384277
    7. '	if' → logprob: -4.173512935638428
    8. ' for' → logprob: -4.548512935638428
    9. '<|end|>' → logprob: -5.048512935638428
    10. ' FIRST' → logprob: -5.298512935638428

Token 108: '+c' (ID: 114860)
  Prédit: 'U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.01315787248313427
    2. 'u' → logprob: -5.513157844543457
    3. 'uckets' → logprob: -5.513157844543457
    4. ')' → logprob: -6.263157844543457
    5. '[' → logprob: -7.263157844543457
    6. '**' → logprob: -7.888157844543457
    7. 'ucket' → logprob: -7.888157844543457
    8. ']' → logprob: -7.888157844543457
    9. 'UCK' → logprob: -8.388157844543457
    10. 'uc' → logprob: -8.888157844543457

Token 109: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16554391384124756
    2. ')-' → logprob: -3.790544033050537
    3. '-' → logprob: -3.915544033050537
    4. '<|end|>' → logprob: -3.915544033050537
    5. '-b' → logprob: -4.165544033050537
    6. ')+' → logprob: -4.540544033050537
    7. ')*' → logprob: -4.790544033050537
    8. ')>' → logprob: -4.915544033050537
    9. ')>=' → logprob: -4.915544033050537
    10. ' )' → logprob: -4.915544033050537

Token 110: 'k' (ID: 74)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6897839307785034
    2. 'K' → logprob: -1.0647839307785034
    3. '=' → logprob: -2.314784049987793
    4. ' ==' → logprob: -3.564784049987793
    5. '0' → logprob: -4.564784049987793
    6. ' K' → logprob: -5.064784049987793
    7. ' ' → logprob: -5.314784049987793
    8. '!=' → logprob: -6.814784049987793
    9. ' =' → logprob: -7.439784049987793
    10. '2' → logprob: -7.689784049987793

Token 111: '==' (ID: 560)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 112: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04859089106321335
    2. ' ' → logprob: -3.673590898513794
    3. '(' → logprob: -4.298590660095215
    4. 'K' → logprob: -5.298590660095215
    5. ' (' → logprob: -6.048590660095215
    6. 'FIRST' → logprob: -7.298590660095215
    7. ' K' → logprob: -8.673590660095215
    8. '(K' → logprob: -9.548590660095215
    9. '(first' → logprob: -10.673590660095215
    10. ' FIRST' → logprob: -10.798590660095215

Token 113: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 114: ' mais' (ID: 2899)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 115: ' b' (ID: 287)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 116: ' et' (ID: 859)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 117: ' c' (ID: 274)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.13310034573078156
    2. ' a' → logprob: -2.3831002712249756
    3. '	a' → logprob: -4.258100509643555
    4. 'c' → logprob: -4.508100509643555
    5. ' c' → logprob: -5.383100509643555
    6. ' ' → logprob: -6.883100509643555
    7. '	' → logprob: -7.508100509643555
    8. '	c' → logprob: -7.758100509643555
    9. '  ' → logprob: -9.133100509643555
    10. ' ' → logprob: -9.133100509643555

Token 118: ' sont' (ID: 5242)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 119: ' pris' (ID: 17549)
  Prédit: ' ég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ég' → logprob: -0.6748714447021484
    2. 'distinct' → logprob: -2.6748714447021484
    3. '	' → logprob: -2.7998714447021484
    4. ' distinct' → logprob: -3.0498714447021484
    5. 'ident' → logprob: -3.1748714447021484
    6. 'diff' → logprob: -3.2998714447021484
    7. ' ident' → logprob: -3.4248714447021484
    8. 'égal' → logprob: -3.9248714447021484
    9. 'de' → logprob: -4.299871444702148
    10. ' différents' → logprob: -4.424871444702148

Token 120: ' ég' (ID: 33150)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 121: 'aux' (ID: 5454)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: ' ici' (ID: 27994)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: ',' (ID: 11)
  Prédit: '	for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	for' → logprob: -0.40072351694107056
    2. '	if' → logprob: -1.5257234573364258
    3. '	' → logprob: -2.650723457336426
    4. '<|end|>' → logprob: -3.650723457336426
    5. '	while' → logprob: -5.275723457336426
    6. '	continue' → logprob: -5.525723457336426
    7. '	
' → logprob: -6.775723457336426
    8. '   ' → logprob: -7.150723457336426
    9. '
' → logprob: -7.150723457336426
    10. ' ' → logprob: -7.275723457336426

Token 124: ' style' (ID: 2713)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 125: ' non' (ID: 2893)
  Prédit: '	for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	for' → logprob: -0.5264478921890259
    2. '	if' → logprob: -1.4014478921890259
    3. '<|end|>' → logprob: -2.1514477729797363
    4. '	' → logprob: -4.026447772979736
    5. '
' → logprob: -4.651447772979736
    6. '	
' → logprob: -5.401447772979736
    7. '	while' → logprob: -5.526447772979736
    8. '	return' → logprob: -5.901447772979736
    9. '	tab' → logprob: -6.526447772979736
    10. ' ' → logprob: -6.651447772979736

Token 126: '-class' (ID: 25429)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 127: 'ique' (ID: 2222)
  Prédit: 'ique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ique' → logprob: -0.005987219978123903
    2. 'iqu' → logprob: -6.255987167358398
    3. 'ic' → logprob: -6.880987167358398
    4. 'ical' → logprob: -6.880987167358398
    5. 'iq' → logprob: -8.005987167358398
    6. 'iquement' → logprob: -8.005987167358398
    7. 'iques' → logprob: -8.505987167358398
    8. '```' → logprob: -8.630987167358398
    9. 'IQUE' → logprob: -8.755987167358398
    10. '

' → logprob: -8.880987167358398

Token 128: '
' (ID: 198)
  Prédit: '	for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	for' → logprob: -0.44211727380752563
    2. '	if' → logprob: -1.4421172142028809
    3. '<|end|>' → logprob: -2.942117214202881
    4. '	' → logprob: -3.442117214202881
    5. '	
' → logprob: -4.442117214202881
    6. '
' → logprob: -4.567117214202881
    7. '	tab' → logprob: -5.692117214202881
    8. '	while' → logprob: -6.067117214202881
    9. ' ' → logprob: -6.567117214202881
    10. '	return' → logprob: -6.692117214202881

Token 129: '	if' (ID: 1224)
  Prédit: '	for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	for' → logprob: -0.057825520634651184
    2. '	if' → logprob: -3.5578255653381348
    3. '	' → logprob: -4.807825565338135
    4. '<|end|>' → logprob: -4.807825565338135
    5. '	
' → logprob: -5.307825565338135
    6. '
' → logprob: -6.057825565338135
    7. '	tab' → logprob: -6.557825565338135
    8. '	while' → logprob: -7.307825565338135
    9. ' for' → logprob: -7.807825565338135
    10. '	B' → logprob: -8.807825088500977

Token 130: ' (' (ID: 350)
  Prédit: ' BU'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' BU' → logprob: -0.20968647301197052
    2. 'BU' → logprob: -1.834686517715454
    3. ' FIRST' → logprob: -4.334686279296875
    4. 'FIRST' → logprob: -5.459686279296875
    5. '(B' → logprob: -5.709686279296875
    6. ' ' → logprob: -6.084686279296875
    7. ' SECOND' → logprob: -6.334686279296875
    8. '(' → logprob: -6.709686279296875
    9. ' (' → logprob: -6.834686279296875
    10. 'SECOND' → logprob: -6.959686279296875

Token 131: 'SECOND' (ID: 162338)
  Prédit: 'BU'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BU' → logprob: -0.054494813084602356
    2. ' BU' → logprob: -3.054494857788086
    3. ')' → logprob: -5.929494857788086
    4. ' ' → logprob: -7.179494857788086
    5. '(B' → logprob: -7.304494857788086
    6. 'SECOND' → logprob: -7.679494857788086
    7. '	B' → logprob: -8.429494857788086
    8. 'FIRST' → logprob: -8.679494857788086
    9. '(' → logprob: -9.054494857788086
    10. '	' → logprob: -9.179494857788086

Token 132: '+' (ID: 10)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.21606484055519104
    2. ' ==' → logprob: -2.091064929962158
    3. '+' → logprob: -3.216064929962158
    4. ')==' → logprob: -4.466064929962158
    5. ')' → logprob: -4.716064929962158
    6. ' +' → logprob: -5.591064929962158
    7. '!=' → logprob: -5.591064929962158
    8. ' !=' → logprob: -7.216064929962158
    9. ' )' → logprob: -7.591064929962158
    10. ' ' → logprob: -7.841064929962158

Token 133: 'TH' (ID: 4867)
  Prédit: 'TH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TH' → logprob: -0.052191730588674545
    2. ' THIRD' → logprob: -3.052191734313965
    3. ' TH' → logprob: -6.052191734313965
    4. ')' → logprob: -7.552191734313965
    5. 'FIRST' → logprob: -7.927191734313965
    6. ' ' → logprob: -9.552191734313965
    7. '0' → logprob: -9.927191734313965
    8. 'SECOND' → logprob: -10.177191734313965
    9. 'Third' → logprob: -10.302191734313965
    10. '_TH' → logprob: -10.677191734313965

Token 134: 'IRD' (ID: 86609)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.03856729343533516
    2. 'IRST' → logprob: -4.163567066192627
    3. 'e' → logprob: -5.163567066192627
    4. 'IR' → logprob: -5.538567066192627
    5. 'INK' → logprob: -6.288567066192627
    6. ')' → logprob: -6.788567066192627
    7. 'FIRST' → logprob: -6.913567066192627
    8. 'EY' → logprob: -6.913567066192627
    9. 'IRD' → logprob: -7.038567066192627
    10. 'OUGH' → logprob: -7.288567066192627

Token 135: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.048957712948322296
    2. ')' → logprob: -3.0489578247070312
    3. ' )' → logprob: -8.548957824707031
    4. ')==' → logprob: -8.673957824707031
    5. ')
' → logprob: -13.048957824707031
    6. ')!=' → logprob: -14.173957824707031
    7. ')<=' → logprob: -14.298957824707031
    8. ')>=' → logprob: -14.673957824707031
    9. '==' → logprob: -15.048957824707031
    10. ' ' → logprob: -15.173957824707031

Token 136: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0040939548052847385
    2. ' K' → logprob: -5.504094123840332
    3. 'k' → logprob: -12.004094123840332
    4. ' ' → logprob: -12.254094123840332
    5. '	K' → logprob: -12.504094123840332
    6. ' ' → logprob: -14.629094123840332
    7. '```' → logprob: -16.504093170166016
    8. '0' → logprob: -16.754093170166016
    9. '  ' → logprob: -16.879093170166016
    10. '   ' → logprob: -17.254093170166016

Token 137: '<' (ID: 27)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00113176298327744
    2. ' ==' → logprob: -6.876131534576416
    3. '==
' → logprob: -10.001132011413574
    4. ')==' → logprob: -10.376132011413574
    5. '=' → logprob: -11.376132011413574
    6. ']==' → logprob: -11.876132011413574
    7. ':' → logprob: -13.626132011413574
    8. '()==' → logprob: -14.001132011413574
    9. '	' → logprob: -14.626132011413574
    10. '===' → logprob: -14.751132011413574

Token 138: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4878162741661072
    2. '=' → logprob: -1.237816333770752
    3. ' ' → logprob: -2.737816333770752
    4. '==' → logprob: -4.112816333770752
    5. '2' → logprob: -4.862816333770752
    6. 'BU' → logprob: -5.987816333770752
    7. ':' → logprob: -6.987816333770752
    8. '```' → logprob: -7.487816333770752
    9. 'N' → logprob: -8.112815856933594
    10. 'K' → logprob: -8.112815856933594

Token 139: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03180671110749245
    2. ':
' → logprob: -3.531806707382202
    3. '	' → logprob: -6.406806945800781
    4. ' :' → logprob: -8.031806945800781
    5. ' :
' → logprob: -9.781806945800781
    6. ':

' → logprob: -12.281806945800781
    7. ':
' → logprob: -12.531806945800781
    8. '	continue' → logprob: -12.781806945800781
    9. ':return' → logprob: -12.906806945800781
    10. ' ' → logprob: -13.406806945800781

Token 140: '	' (ID: 197)
  Prédit: '	'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.03150920197367668
    2. ':' → logprob: -4.0315093994140625
    3. '	r' → logprob: -5.4065093994140625
    4. '		
' → logprob: -6.4065093994140625
    5. ' 	' → logprob: -6.4065093994140625
    6. ' ' → logprob: -7.0315093994140625
    7. '	
' → logprob: -7.2815093994140625
    8. ':
' → logprob: -7.5315093994140625
    9. '		' → logprob: -7.5315093994140625
    10. ',' → logprob: -7.9065093994140625

Token 141: '	r' (ID: 11694)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.19475555419921875
    2. '	r' → logprob: -1.8197555541992188
    3. ' r' → logprob: -4.319755554199219
    4. ' 	' → logprob: -7.944755554199219
    5. '		' → logprob: -8.444755554199219
    6. 'r' → logprob: -8.444755554199219
    7. ' ' → logprob: -8.569755554199219
    8. '	
' → logprob: -8.819755554199219
    9. '		
' → logprob: -9.569755554199219
    10. ' ' → logprob: -10.194755554199219

Token 142: 'Es' (ID: 9960)
  Prédit: 'Es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Es' → logprob: -1.5048530030981055e-06
    2. 'es' → logprob: -15.000001907348633
    3. '=' → logprob: -15.125001907348633
    4. 'e' → logprob: -15.500001907348633
    5. ' Es' → logprob: -15.750001907348633
    6. 's' → logprob: -15.750001907348633
    7. 'E' → logprob: -16.375001907348633
    8. 'Eu' → logprob: -16.500001907348633
    9. 'Ee' → logprob: -16.625001907348633
    10. 'Us' → logprob: -17.500001907348633

Token 143: 'Ul' (ID: 49103)
  Prédit: 'Ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ul' → logprob: -0.001248089363798499
    2. 'ULT' → logprob: -6.876247882843018
    3. 'u' → logprob: -9.626248359680176
    4. 'UL' → logprob: -10.126248359680176
    5. 'Ult' → logprob: -10.126248359680176
    6. 'ul' → logprob: -10.751248359680176
    7. 'Ut' → logprob: -10.751248359680176
    8. 'U' → logprob: -11.626248359680176
    9. 'Us' → logprob: -11.751248359680176
    10. 'Ur' → logprob: -13.501248359680176

Token 144: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.000263481488218531
    2. 't' → logprob: -8.250263214111328
    3. '=' → logprob: -14.750263214111328
    4. '=T' → logprob: -14.750263214111328
    5. '	T' → logprob: -14.875263214111328
    6. 'Т' → logprob: -15.000263214111328
    7. ' T' → logprob: -15.125263214111328
    8. '"T' → logprob: -16.875263214111328
    9. '_T' → logprob: -17.250263214111328
    10. '>T' → logprob: -17.375263214111328

Token 145: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16085420548915863
    2. ' +=' → logprob: -1.9108542203903198
    3. '+=(' → logprob: -8.03585433959961
    4. '	' → logprob: -8.41085433959961
    5. ']+=' → logprob: -10.28585433959961
    6. '+' → logprob: -10.78585433959961
    7. '+='' → logprob: -11.66085433959961
    8. '+="' → logprob: -11.91085433959961
    9. ' ' → logprob: -12.03585433959961
    10. ' ' → logprob: -12.91085433959961

Token 146: 'BU' (ID: 18641)
  Prédit: 'BU'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BU' → logprob: -0.0024817234370857477
    2. ' BU' → logprob: -6.377481937408447
    3. '(B' → logprob: -8.377481460571289
    4. '	' → logprob: -8.377481460571289
    5. 'B' → logprob: -9.752481460571289
    6. '1' → logprob: -10.002481460571289
    7. ' ' → logprob: -10.127481460571289
    8. '(' → logprob: -10.252481460571289
    9. '	B' → logprob: -10.502481460571289
    10. '   ' → logprob: -10.627481460571289

Token 147: 'CKET' (ID: 64388)
  Prédit: 'CKET'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CKET' → logprob: -0.019167302176356316
    2. 'CK' → logprob: -4.019167423248291
    3. 'C' → logprob: -6.894167423248291
    4. 'CT' → logprob: -13.894166946411133
    5. 'ck' → logprob: -14.769166946411133
    6. 'T' → logprob: -14.894166946411133
    7. 'CKER' → logprob: -14.894166946411133
    8. '
' → logprob: -15.394166946411133
    9. '```' → logprob: -15.519166946411133
    10. 'TS' → logprob: -16.144166946411133

Token 148: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0011166424956172705
    2. '[S' → logprob: -6.876116752624512
    3. '[' → logprob: -10.501116752624512
    4. 's' → logprob: -11.001116752624512
    5. 'FIRST' → logprob: -11.251116752624512
    6. '[first' → logprob: -11.751116752624512
    7. 'SECOND' → logprob: -11.876116752624512
    8. ' S' → logprob: -13.001116752624512
    9. 'Ｓ' → logprob: -14.376116752624512
    10. '	S' → logprob: -14.563616752624512

Token 149: '[F' (ID: 97945)
  Prédit: '[F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[F' → logprob: -0.00032402228680439293
    2. 'FIRST' → logprob: -8.500324249267578
    3. 'F' → logprob: -10.000324249267578
    4. '[first' → logprob: -10.875324249267578
    5. '	F' → logprob: -11.250324249267578
    6. ' [' → logprob: -11.750324249267578
    7. '[' → logprob: -11.750324249267578
    8. '	' → logprob: -12.125324249267578
    9. ' FIRST' → logprob: -12.375324249267578
    10. ' ' → logprob: -12.750324249267578

Token 150: 'IRST' (ID: 23467)
  Prédit: 'IRST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IRST' → logprob: -5.512236498361744e-07
    2. 'IRS' → logprob: -15.500000953674316
    3. 'irst' → logprob: -15.875000953674316
    4. 'IR' → logprob: -16.0
    5. 'RST' → logprob: -16.875
    6. 'FIRST' → logprob: -17.75
    7. '1' → logprob: -19.75
    8. '
' → logprob: -20.25
    9. '

' → logprob: -21.0
    10. 'I' → logprob: -21.75

Token 151: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.029803721234202385
    2. ']' → logprob: -3.52980375289917
    3. ']*(' → logprob: -10.154803276062012
    4. ']+' → logprob: -12.029803276062012
    5. '	' → logprob: -12.779803276062012
    6. ' ]' → logprob: -13.029803276062012
    7. '*' → logprob: -14.029803276062012
    8. ']
' → logprob: -14.279803276062012
    9. '])*' → logprob: -15.279803276062012
    10. ' ' → logprob: -15.279803276062012

Token 152: 'BU' (ID: 18641)
  Prédit: 'BU'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BU' → logprob: -0.07146201282739639
    2. '(B' → logprob: -2.6964619159698486
    3. '(' → logprob: -7.946462154388428
    4. ' BU' → logprob: -7.946462154388428
    5. ' (' → logprob: -8.32146167755127
    6. '	' → logprob: -8.44646167755127
    7. '   ' → logprob: -9.44646167755127
    8. '((' → logprob: -9.82146167755127
    9. ' ' → logprob: -10.07146167755127
    10. '	B' → logprob: -11.13396167755127

Token 153: 'CKET' (ID: 64388)
  Prédit: 'CKET'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CKET' → logprob: -0.003302358789369464
    2. 'CK' → logprob: -5.753302574157715
    3. 'C' → logprob: -9.003302574157715
    4. '
' → logprob: -14.003302574157715
    5. 'ck' → logprob: -15.753302574157715
    6. '```' → logprob: -15.753302574157715
    7. 'CKER' → logprob: -15.878302574157715
    8. '

' → logprob: -16.1283016204834
    9. '﻿' → logprob: -17.2533016204834
    10. 'RK' → logprob: -17.6283016204834

Token 154: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.00013893934374209493
    2. '[S' → logprob: -9.125139236450195
    3. '[' → logprob: -11.000139236450195
    4. ' S' → logprob: -13.250139236450195
    5. 's' → logprob: -13.562639236450195
    6. 'TS' → logprob: -13.687639236450195
    7. 'SECOND' → logprob: -13.812639236450195
    8. '```' → logprob: -14.312639236450195
    9. '(S' → logprob: -14.812639236450195
    10. '	S' → logprob: -14.875139236450195

Token 155: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.253090865968261e-06
    2. '	' → logprob: -12.250009536743164
    3. '[F' → logprob: -13.500009536743164
    4. '[S' → logprob: -14.000009536743164
    5. '[(' → logprob: -14.125009536743164
    6. 'SECOND' → logprob: -14.500009536743164
    7. ' [' → logprob: -14.750009536743164
    8. '[
' → logprob: -15.875009536743164
    9. '```' → logprob: -16.375009536743164
    10. '   ' → logprob: -16.500009536743164

Token 156: 'SECOND' (ID: 162338)
  Prédit: 'SECOND'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SECOND' → logprob: -0.00020568605395965278
    2. '[' → logprob: -9.750205993652344
    3. 'SE' → logprob: -9.875205993652344
    4. ' SECOND' → logprob: -10.000205993652344
    5. 'SEC' → logprob: -10.500205993652344
    6. 'FIRST' → logprob: -12.125205993652344
    7. '	' → logprob: -12.250205993652344
    8. 'SECONDS' → logprob: -12.375205993652344
    9. 'S' → logprob: -13.375205993652344
    10. '(' → logprob: -13.625205993652344

Token 157: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11861002445220947
    2. ']*' → logprob: -2.49360990524292
    3. '*' → logprob: -3.61860990524292
    4. ' ]' → logprob: -6.24360990524292
    5. '<|end|>' → logprob: -8.118610382080078
    6. '	' → logprob: -10.118610382080078
    7. ' ' → logprob: -10.243610382080078
    8. ' *' → logprob: -10.243610382080078
    9. ']*(' → logprob: -11.243610382080078
    10. '']' → logprob: -12.243610382080078

Token 158: 'BU' (ID: 18641)
  Prédit: 'BU'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BU' → logprob: -3.173704271830502e-06
    2. ' BU' → logprob: -12.75000286102295
    3. '	' → logprob: -16.250003814697266
    4. '_BU' → logprob: -16.750003814697266
    5. ' ' → logprob: -17.250003814697266
    6. '   ' → logprob: -17.875003814697266
    7. 'BUS' → logprob: -18.750003814697266
    8. '  ' → logprob: -18.875003814697266
    9. 'BUFF' → logprob: -19.000003814697266
    10. '```' → logprob: -19.000003814697266

Token 159: 'CKET' (ID: 64388)
  Prédit: 'CKET'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CKET' → logprob: -0.13452373445034027
    2. 'CK' → logprob: -2.134523630142212
    3. 'C' → logprob: -4.884523868560791
    4. 'CKER' → logprob: -13.634523391723633
    5. '```' → logprob: -14.259523391723633
    6. '
' → logprob: -14.509523391723633
    7. 'ck' → logprob: -14.634523391723633
    8. '_C' → logprob: -15.509523391723633
    9. 'K' → logprob: -15.634523391723633
    10. '﻿' → logprob: -16.259523391723633

Token 160: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.00040993880247697234
    2. '[S' → logprob: -8.000410079956055
    3. '[' → logprob: -9.625410079956055
    4. 's' → logprob: -13.625410079956055
    5. 'TS' → logprob: -13.875410079956055
    6. ' S' → logprob: -14.500410079956055
    7. '```' → logprob: -14.500410079956055
    8. 'SOR' → logprob: -14.562910079956055
    9. 'OS' → logprob: -14.687910079956055
    10. '	S' → logprob: -14.750410079956055

Token 161: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.981667537620524e-06
    2. '[T' → logprob: -14.250001907348633
    3. '[F' → logprob: -14.625001907348633
    4. '	' → logprob: -15.500001907348633
    5. ' [' → logprob: -15.500001907348633
    6. 'TH' → logprob: -16.125001907348633
    7. '```' → logprob: -16.375001907348633
    8. '[X' → logprob: -17.000001907348633
    9. '[
' → logprob: -18.125001907348633
    10. '[(' → logprob: -18.250001907348633

Token 162: 'TH' (ID: 4867)
  Prédit: 'TH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TH' → logprob: -1.8193366486229934e-05
    2. 'FIRST' → logprob: -11.625018119812012
    3. ' THIRD' → logprob: -11.875018119812012
    4. ' ' → logprob: -14.375018119812012
    5. 'SECOND' → logprob: -14.625018119812012
    6. ' TH' → logprob: -14.875018119812012
    7. 'third' → logprob: -15.125018119812012
    8. '_TH' → logprob: -15.875018119812012
    9. 'Third' → logprob: -16.125019073486328
    10. '	' → logprob: -16.250019073486328

Token 163: 'IRD' (ID: 86609)
  Prédit: 'IRD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IRD' → logprob: -0.0013859511818736792
    2. 'IR' → logprob: -7.1263861656188965
    3. 'I' → logprob: -8.001385688781738
    4. 'ird' → logprob: -8.751385688781738
    5. 'IRS' → logprob: -11.126385688781738
    6. 'i' → logprob: -11.251385688781738
    7. 'RD' → logprob: -11.251385688781738
    8. 'RID' → logprob: -11.501385688781738
    9. 'ID' → logprob: -11.876385688781738
    10. 'IRC' → logprob: -12.376385688781738

Token 164: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5262250304222107
    2. ')' → logprob: -0.9012250304222107
    3. '<|end|>' → logprob: -6.6512250900268555
    4. '])' → logprob: -7.1512250900268555
    5. ' )' → logprob: -8.026225090026855
    6. '	' → logprob: -8.401225090026855
    7. ' ]' → logprob: -8.776225090026855
    8. '}' → logprob: -9.276225090026855
    9. '）' → logprob: -9.526225090026855
    10. ' ' → logprob: -9.901225090026855

Token 165: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 166: '(' (ID: 7)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.387117862701416
    2. '(' → logprob: -1.137117862701416
    3. ' (' → logprob: -8.762117385864258
    4. '("' → logprob: -9.887117385864258
    5. '()' → logprob: -10.887117385864258
    6. '('' → logprob: -11.262117385864258
    7. '(
' → logprob: -12.762117385864258
    8. 'r' → logprob: -13.012117385864258
    9. '("("' → logprob: -14.512117385864258
    10. ' ' → logprob: -15.012117385864258

Token 167: '  ' (ID: 256)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.15310683415737e-05
    2. ' r' → logprob: -10.750021934509277
    3. '
' → logprob: -18.12502098083496
    4. ' ' → logprob: -18.25002098083496
    5. '	r' → logprob: -18.25002098083496
    6. 'result' → logprob: -19.75002098083496
    7. ')' → logprob: -19.87502098083496
    8. ''r' → logprob: -20.00002098083496
    9. '(r' → logprob: -20.25002098083496
    10. ' ' → logprob: -20.37502098083496

Token 168: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -2.451116051815916e-05
    2. ' r' → logprob: -10.625024795532227
    3. ' ' → logprob: -16.625024795532227
    4. '(r' → logprob: -17.500024795532227
    5. '	r' → logprob: -18.125024795532227
    6. '   ' → logprob: -18.500024795532227
    7. '  ' → logprob: -19.125024795532227
    8. 'result' → logprob: -20.000024795532227
    9. '
' → logprob: -20.250024795532227
    10. ')' → logprob: -21.750024795532227

Token 169: 'Es' (ID: 9960)
  Prédit: 'Es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Es' → logprob: -8.537868779967539e-06
    2. 's' → logprob: -11.750008583068848
    3. ' Es' → logprob: -15.750008583068848
    4. 'Su' → logprob: -16.25000762939453
    5. 'E' → logprob: -16.37500762939453
    6. 'Ec' → logprob: -16.50000762939453
    7. 'Ee' → logprob: -17.00000762939453
    8. 'e' → logprob: -17.25000762939453
    9. 'es' → logprob: -18.00000762939453
    10. 'Eu' → logprob: -18.62500762939453

Token 170: 'Ul' (ID: 49103)
  Prédit: 'Ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ul' → logprob: -5.288163083605468e-05
    2. 'Ult' → logprob: -10.000052452087402
    3. 'u' → logprob: -12.625052452087402
    4. 'ULT' → logprob: -13.750052452087402
    5. 'ul' → logprob: -14.250052452087402
    6. 'U' → logprob: -14.500052452087402
    7. 'Ut' → logprob: -14.750052452087402
    8. 'Us' → logprob: -15.125052452087402
    9. '<ul' → logprob: -15.125052452087402
    10. ' Ul' → logprob: -15.250052452087402

Token 171: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -7.584239938296378e-06
    2. 't' → logprob: -11.875007629394531
    3. ' T' → logprob: -14.375007629394531
    4. 'LT' → logprob: -17.50000762939453
    5. '	T' → logprob: -17.75000762939453
    6. 'Т' → logprob: -18.12500762939453
    7. 'TT' → logprob: -18.87500762939453
    8. '   ' → logprob: -19.75000762939453
    9. '"T' → logprob: -19.87500762939453
    10. '[T' → logprob: -20.37500762939453

Token 172: ' )' (ID: 1546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.517272024415433e-05
    2. ' )' → logprob: -9.500075340270996
    3. ' ' → logprob: -15.750075340270996
    4. ')
' → logprob: -16.62507438659668
    5. '))' → logprob: -17.50007438659668
    6. ')`' → logprob: -17.75007438659668
    7. '）' → logprob: -17.87507438659668
    8. '()' → logprob: -18.00007438659668
    9. '+' → logprob: -18.12507438659668
    10. '  ' → logprob: -18.37507438659668


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 170
Tokens correctement prédits (1ère position, stricte): 64
Tokens correctement prédits (1ère position, avec adaptation): 65
Tokens correctement prédits (top 10): 110
Précision stricte (1ère position): 37.65%
Précision adaptée (1ère position): 38.24%
Précision (top 10): 64.71%
================================================================================
