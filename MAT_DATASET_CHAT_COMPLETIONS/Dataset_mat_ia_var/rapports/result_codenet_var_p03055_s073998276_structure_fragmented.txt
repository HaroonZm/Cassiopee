================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from bisect import bisect_left as binl

def read_input():
    return input()

def split_input(s):
    return s.split()

def convert_to_int_list(str_list):
    return [int(i) for i in str_list]

def tuple_or_int(lst):
    if len(lst) <= 1:
        return int(lst[0])
    return tuple(map(int, lst))

def intin():
    input_str = read_input()
    input_split = split_input(input_str)
    return tuple_or_int(input_split)

def intina():
    input_str = read_input()
    input_split = split_input(input_str)
    return convert_to_int_list(input_split)

def intinl(count):
    return [intin() for _ in range(count)]

def get_mod():
    global mod
    return mod

def modadd(x, y):
    m = get_mod()
    return (x + y) % m

def modmlt_product(x, y):
    return x * y

def modmlt_modulo(prod):
    global mod
    return prod % mod

def modmlt(x, y):
    prod = modmlt_product(x, y)
    return modmlt_modulo(prod)

def lcm_gcd_inner(x, y):
    while y != 0:
        z = x % y
        x, y = y, z
    return x

def lcm(x, y):
    return lcm_gcd_inner(x, y)

def empty_linklist():
    return {}

def linklist_setdefault(linklist, key):
    linklist.setdefault(key, [])

def linklist_append(linklist, a, b):
    linklist[a].append(b)

def linklist_add(linklist, a, b):
    linklist_setdefault(linklist, a)
    linklist_setdefault(linklist, b)
    linklist_append(linklist, a, b)
    linklist_append(linklist, b, a)

def make_linklist(xylist):
    linklist = empty_linklist()
    for a, b in xylist:
        linklist_add(linklist, a, b)
    return linklist

def calc_init_linklist_vars():
    return {}, 0, 0, [], []

def get_linklist_nodecount(linklist):
    return len(linklist)

def update_vlist_next(linklist, v, vlist_next):
    vlist_next.extend(linklist[v])

def set_distance(distance_list, v, distance):
    distance_list[v] = distance

def increase_distance_count(distance_count):
    return distance_count + 1

def set_vlist_state(vlist_previous, vlist, vlist_next):
    return vlist, list(set(vlist_next) - set(vlist_previous))

def calc_loop(
    linklist, distance_list, distance_count, distance, vlist_previous, vlist, nodecount
):
    while distance_count < nodecount:
        vlist_next = []
        for v in vlist:
            set_distance(distance_list, v, distance)
            distance_count += 1
            update_vlist_next(linklist, v, vlist_next)
        distance += 1
        vlist_to_del = vlist_previous
        vlist_previous, vlist = set_vlist_state(vlist_previous, vlist, vlist_next)
    return distance_list

def find_max_distance(distance_list):
    max_distance = -1
    max_v = None
    for v, d in distance_list.items():
        if d > max_distance:
            max_distance = d
            max_v = v
    return max_distance, max_v

def calc_longest_distance(linklist, v=1):
    distance_list, distance_count, distance, vlist_previous, vlist = calc_init_linklist_vars()
    vlist = [v]
    nodecount = get_linklist_nodecount(linklist)
    while distance_count < nodecount:
        vlist_next = []
        for p in vlist:
            set_distance(distance_list, p, distance)
            distance_count += 1
            update_vlist_next(linklist, p, vlist_next)
        distance += 1
        vlist_to_del = vlist_previous
        vlist_previous = vlist
        vlist = list(set(vlist_next) - set(vlist_to_del))
    return find_max_distance(distance_list)

def calc_tree_diameter_get_u(linklist, v):
    _, u = calc_longest_distance(linklist, v)
    return u

def calc_tree_diameter_get_distance(linklist, u):
    distance, _ = calc_longest_distance(linklist, u)
    return distance

def calc_tree_diameter(linklist, v=1):
    u = calc_tree_diameter_get_u(linklist, v)
    distance = calc_tree_diameter_get_distance(linklist, u)
    return distance

def decide_winner(diameter):
    if diameter % 3 == 1:
        return 'Second'
    else:
        return 'First'

def main_get_n():
    return intin()

def main_get_ablist(n):
    return intinl(n-1)

def main_make_linklist(ablist):
    return make_linklist(ablist)

def main_calc_diameter(linklist):
    return calc_tree_diameter(linklist)

def main_print_winner(diameter):
    print(decide_winner(diameter))

def main():
    n = main_get_n()
    ablist = main_get_ablist(n)
    linklist = main_make_linklist(ablist)
    diameter = main_calc_diameter(linklist)
    main_print_winner(diameter)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' bis' (ID: 7204)
  → Token d'amorce (pas de prédiction)

Token 2: 'ect' (ID: 534)
  → Token d'amorce (pas de prédiction)

Token 3: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.009850294329226017
    2. 'import' → logprob: -4.63485050201416
    3. ' ' → logprob: -9.75985050201416
    4. '.' → logprob: -10.50985050201416
    5. ' .' → logprob: -13.13485050201416
    6. '_import' → logprob: -13.25985050201416
    7. '.import' → logprob: -13.50985050201416
    8. '```' → logprob: -14.13485050201416
    9. ' ```' → logprob: -14.25985050201416
    10. '	import' → logprob: -14.38485050201416

Token 4: ' bis' (ID: 7204)
  Prédit: 'ins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.3885584771633148
    2. 'bis' → logprob: -1.1385585069656372
    3. ' bis' → logprob: -6.513558387756348
    4. '_ins' → logprob: -8.888558387756348
    5. '_right' → logprob: -10.513558387756348
    6. '```' → logprob: -11.263558387756348
    7. ' ins' → logprob: -11.513558387756348
    8. '_left' → logprob: -12.263558387756348
    9. 'right' → logprob: -12.763558387756348
    10. '.ins' → logprob: -13.388558387756348

Token 5: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.0019542062655091286
    2. 'e' → logprob: -6.251954078674316
    3. 'ec' → logprob: -10.876954078674316
    4. 'ct' → logprob: -13.126954078674316
    5. 'ext' → logprob: -13.126954078674316
    6. 'ex' → logprob: -14.001954078674316
    7. 'ectl' → logprob: -14.501954078674316
    8. 't' → logprob: -14.751954078674316
    9. 'ected' → logprob: -15.251954078674316
    10. 'et' → logprob: -15.501954078674316

Token 6: '_left' (ID: 22189)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05772572010755539
    2. '.' → logprob: -3.307725667953491
    3. '_' → logprob: -4.05772590637207
    4. '_left' → logprob: -7.43272590637207
    5. '```' → logprob: -7.55772590637207
    6. '`' → logprob: -8.80772590637207
    7. '\(' → logprob: -9.18272590637207
    8. '._' → logprob: -9.30772590637207
    9. '.b' → logprob: -9.43272590637207
    10. '"' → logprob: -9.55772590637207

Token 7: ' as' (ID: 472)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00031294001382775605
    2. '(
' → logprob: -8.750312805175781
    3. '\(' → logprob: -9.000312805175781
    4. '\n' → logprob: -11.125312805175781
    5. '(

' → logprob: -12.125312805175781
    6. '\' → logprob: -12.625312805175781
    7. 'newline' → logprob: -13.750312805175781
    8. ' (' → logprob: -14.125312805175781
    9. '"' → logprob: -14.375312805175781
    10. '`' → logprob: -14.375312805175781

Token 8: ' bin' (ID: 6958)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.7727328538894653
    2. 'bis' → logprob: -0.7727328538894653
    3. '`' → logprob: -3.522732734680176
    4. 'b' → logprob: -3.897732734680176
    5. ' bis' → logprob: -4.022732734680176
    6. 'index' → logprob: -5.647732734680176
    7. 'ins' → logprob: -7.272732734680176
    8. '```' → logprob: -7.397732734680176
    9. ' ' → logprob: -7.522732734680176
    10. ' bl' → logprob: -7.647732734680176

Token 9: 'l' (ID: 75)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011334630660712719
    2. ')' → logprob: -5.261334419250488
    3. '[' → logprob: -6.136334419250488
    4. '_' → logprob: -6.386334419250488
    5. ' (' → logprob: -7.511334419250488
    6. 's' → logprob: -7.886334419250488
    7. '\(' → logprob: -8.011334419250488
    8. '\' → logprob: -9.011334419250488
    9. '(
' → logprob: -9.011334419250488
    10. '\[' → logprob: -9.136334419250488

Token 10: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0020533124916255474
    2. '\(' → logprob: -7.127053260803223
    3. '(
' → logprob: -7.377053260803223
    4. ' (' → logprob: -7.752053260803223
    5. ',' → logprob: -9.877053260803223
    6. ')' → logprob: -10.752053260803223
    7. '`' → logprob: -10.877053260803223
    8. '(

' → logprob: -11.377053260803223
    9. '\' → logprob: -11.502053260803223
    10. '#' → logprob: -11.502053260803223

Token 11: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0025222692638635635
    2. '(
' → logprob: -6.1275224685668945
    3. ',' → logprob: -9.127522468566895
    4. '\(' → logprob: -9.502522468566895
    5. '(

' → logprob: -10.377522468566895
    6. '.' → logprob: -11.002522468566895
    7. '```' → logprob: -11.127522468566895
    8. ''' → logprob: -11.252522468566895
    9. '#' → logprob: -11.252522468566895
    10. ' (' → logprob: -11.377522468566895

Token 12: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0600658543407917
    2. '_' → logprob: -3.685065746307373
    3. ' find' → logprob: -4.935065746307373
    4. ' bin' → logprob: -5.060065746307373
    5. ' _' → logprob: -5.435065746307373
    6. ' ' → logprob: -5.935065746307373
    7. ' binary' → logprob: -6.185065746307373
    8. ' f' → logprob: -6.560065746307373
    9. ' insert' → logprob: -6.685065746307373
    10. ' search' → logprob: -6.810065746307373

Token 13: '_input' (ID: 12507)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020059451460838318
    2. '_' → logprob: -4.020059585571289
    3. '_line' → logprob: -6.520059585571289
    4. '_input' → logprob: -9.895059585571289
    5. '_data' → logprob: -10.270059585571289
    6. ':' → logprob: -10.520059585571289
    7. ')' → logprob: -10.520059585571289
    8. ' (' → logprob: -10.645059585571289
    9. '_text' → logprob: -10.895059585571289
    10. '(
' → logprob: -11.145059585571289

Token 14: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.026162225753068924
    2. '():' → logprob: -3.7761621475219727
    3. '_' → logprob: -6.526162147521973
    4. '(:' → logprob: -7.776162147521973
    5. ':' → logprob: -8.651162147521973
    6. '):' → logprob: -8.901162147521973
    7. ' (' → logprob: -9.026162147521973
    8. '(_:' → logprob: -9.526162147521973
    9. '(_' → logprob: -9.651162147521973
    10. '```' → logprob: -10.026162147521973

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02950618788599968
    2. '()' → logprob: -4.529506206512451
    3. '<|end|>' → logprob: -5.029506206512451
    4. '```' → logprob: -5.529506206512451
    5. '    
' → logprob: -6.529506206512451
    6. ' return' → logprob: -6.654506206512451
    7. '\' → logprob: -7.279506206512451
    8. '\n' → logprob: -7.279506206512451
    9. ' 
' → logprob: -7.779506206512451
    10. ' ' → logprob: -7.779506206512451

Token 16: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.8038753867149353
    2. 'data' → logprob: -0.9288753867149353
    3. '   ' → logprob: -2.92887544631958
    4. 'input' → logprob: -2.92887544631958
    5. 'n' → logprob: -3.80387544631958
    6. 'line' → logprob: -4.42887544631958
    7. ' return' → logprob: -5.30387544631958
    8. ' ' → logprob: -6.55387544631958
    9. ' line' → logprob: -6.67887544631958
    10. ' data' → logprob: -6.67887544631958

Token 17: ' input' (ID: 3422)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.05116131901741028
    2. ' input' → logprob: -4.051161289215088
    3. ' map' → logprob: -4.676161289215088
    4. ' ' → logprob: -5.051161289215088
    5. 'list' → logprob: -5.051161289215088
    6. ' []' → logprob: -5.301161289215088
    7. ' int' → logprob: -5.551161289215088
    8. ' [' → logprob: -7.676161289215088
    9. 'input' → logprob: -7.926161289215088
    10. '  ' → logprob: -8.801161766052246

Token 18: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.020292293280363083
    2. '(' → logprob: -4.270292282104492
    3. '().' → logprob: -5.145292282104492
    4. ' ()' → logprob: -8.770292282104492
    5. '()
' → logprob: -11.020292282104492
    6. '()

' → logprob: -11.145292282104492
    7. ')' → logprob: -11.395292282104492
    8. '(
' → logprob: -11.395292282104492
    9. '())' → logprob: -11.395292282104492
    10. '("")' → logprob: -11.520292282104492

Token 19: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014881711453199387
    2. '\n' → logprob: -5.389881610870361
    3. '\' → logprob: -5.639881610870361
    4. 'x' → logprob: -6.639881610870361
    5. '
' → logprob: -6.889881610870361
    6. 'data' → logprob: -7.514881610870361
    7. 'n' → logprob: -7.764881610870361
    8. '#' → logprob: -8.01488208770752
    9. '```' → logprob: -8.26488208770752
    10. '<|end|>' → logprob: -8.38988208770752

Token 20: ' split' (ID: 12648)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6583940386772156
    2. ' bin' → logprob: -1.2833940982818604
    3. '_' → logprob: -2.5333940982818604
    4. ' binary' → logprob: -3.9083940982818604
    5. ' process' → logprob: -4.033393859863281
    6. ' split' → logprob: -4.283393859863281
    7. ' find' → logprob: -4.408393859863281
    8. ' parse' → logprob: -4.533393859863281
    9. ' search' → logprob: -5.033393859863281
    10. ' sort' → logprob: -5.408393859863281

Token 21: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4957060217857361
    2. '(' → logprob: -0.9957060217857361
    3. '('_' → logprob: -5.120706081390381
    4. '_text' → logprob: -5.745706081390381
    5. '_line' → logprob: -6.245706081390381
    6. '_string' → logprob: -6.495706081390381
    7. '()' → logprob: -7.120706081390381
    8. '_words' → logprob: -7.245706081390381
    9. '("_' → logprob: -7.370706081390381
    10. '_list' → logprob: -7.370706081390381

Token 22: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11013520509004593
    2. '()' → logprob: -2.860135316848755
    3. '():' → logprob: -3.985135316848755
    4. '('' → logprob: -5.110135078430176
    5. '(line' → logprob: -5.110135078430176
    6. '(input' → logprob: -5.860135078430176
    7. '('_' → logprob: -5.985135078430176
    8. '_line' → logprob: -5.985135078430176
    9. '("("' → logprob: -5.985135078430176
    10. '_' → logprob: -6.860135078430176

Token 23: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023896699771285057
    2. '):
' → logprob: -4.39889669418335
    3. ',' → logprob: -4.77389669418335
    4. ')' → logprob: -6.02389669418335
    5. ' ):' → logprob: -8.273897171020508
    6. '):
' → logprob: -9.273897171020508
    7. '):

' → logprob: -10.773897171020508
    8. ':' → logprob: -11.648897171020508
    9. '   ' → logprob: -11.648897171020508
    10. ' ,' → logprob: -12.023897171020508

Token 24: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5012051463127136
    2. ' s' → logprob: -1.3762052059173584
    3. 's' → logprob: -2.3762052059173584
    4. '   ' → logprob: -3.5012052059173584
    5. 'return' → logprob: -4.376204967498779
    6. '(s' → logprob: -5.376204967498779
    7. '(' → logprob: -7.876204967498779
    8. '    ' → logprob: -8.751205444335938
    9. ''s' → logprob: -8.876205444335938
    10. '_s' → logprob: -9.126205444335938

Token 25: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.26481005549430847
    2. ' s' → logprob: -1.8898100852966309
    3. 's' → logprob: -3.139810085296631
    4. 'return' (adapté à ' return') → logprob: -3.264810085296631
    5. '   ' → logprob: -10.014809608459473
    6. '(s' → logprob: -13.264809608459473
    7. '_s' → logprob: -14.014809608459473
    8. ' ' → logprob: -14.514809608459473
    9. '	return' → logprob: -14.639809608459473
    10. 'eturn' → logprob: -14.764809608459473

Token 26: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.42872145771980286
    2. 's' → logprob: -1.0537214279174805
    3. ' list' → logprob: -11.67872142791748
    4. 'list' → logprob: -12.80372142791748
    5. '[' → logprob: -13.42872142791748
    6. '(s' → logprob: -13.42872142791748
    7. ' [' → logprob: -13.55372142791748
    8. '[]' → logprob: -14.17872142791748
    9. ''s' → logprob: -14.30372142791748
    10. ' ' → logprob: -14.30372142791748

Token 27: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.0701575055718422
    2. '.' → logprob: -2.695157527923584
    3. '.strip' → logprob: -8.570157051086426
    4. ' .' → logprob: -11.320157051086426
    5. '.s' → logprob: -12.320157051086426
    6. '.readline' → logprob: -12.695157051086426
    7. '.replace' → logprob: -12.820157051086426
    8. 'split' → logprob: -13.195157051086426
    9. '.lower' → logprob: -13.320157051086426
    10. '().' → logprob: -14.445157051086426

Token 28: '()

' (ID: 5874)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.20494434237480164
    2. '(' → logprob: -2.454944372177124
    3. '()' → logprob: -2.454944372177124
    4. '("("' → logprob: -4.329944133758545
    5. ''' → logprob: -8.454944610595703
    6. '("' → logprob: -9.954944610595703
    7. '('.')' → logprob: -9.954944610595703
    8. '(',' → logprob: -11.204944610595703
    9. '(`' → logprob: -11.204944610595703
    10. '```' → logprob: -11.829944610595703

Token 29: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00040219054790213704
    2. '\' → logprob: -8.750402450561523
    3. '<|end|>' → logprob: -9.750402450561523
    4. '
' → logprob: -10.375402450561523
    5. ' def' → logprob: -10.500402450561523
    6. '```' → logprob: -10.625402450561523
    7. 'de' → logprob: -10.875402450561523
    8. '#' → logprob: -10.875402450561523
    9. '\n' → logprob: -11.125402450561523
    10. '<|end|>' → logprob: -11.250402450561523

Token 30: ' convert' (ID: 8452)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -1.547204613685608
    2. ' map' → logprob: -1.797204613685608
    3. 'parse' → logprob: -1.922204613685608
    4. ' parse' → logprob: -2.7972044944763184
    5. ' main' → logprob: -2.9222044944763184
    6. ' to' → logprob: -2.9222044944763184
    7. 'bin' → logprob: -2.9222044944763184
    8. 'map' → logprob: -3.0472044944763184
    9. 'convert' → logprob: -3.7972044944763184
    10. 'main' → logprob: -3.9222044944763184

Token 31: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.36524498462677
    2. '_' → logprob: -1.61524498462677
    3. '_tokens' → logprob: -3.1152448654174805
    4. 'to' → logprob: -4.4902448654174805
    5. '_token' → logprob: -4.4902448654174805
    6. '_input' → logprob: -4.7402448654174805
    7. '(' → logprob: -5.1152448654174805
    8. '(s' → logprob: -5.4902448654174805
    9. '_s' → logprob: -5.6152448654174805
    10. '_int' → logprob: -5.7402448654174805

Token 32: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.011097338981926441
    2. 'int' → logprob: -4.511097431182861
    3. '_list' → logprob: -10.636096954345703
    4. '_tokens' → logprob: -12.511096954345703
    5. '_numbers' → logprob: -12.511096954345703
    6. '_' → logprob: -12.636096954345703
    7. ' int' → logprob: -12.761096954345703
    8. 'ints' → logprob: -13.136096954345703
    9. '=int' → logprob: -13.261096954345703
    10. 'Int' → logprob: -13.261096954345703

Token 33: '_list' (ID: 4162)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.2070845067501068
    2. 's' → logprob: -2.2070844173431396
    3. '(' → logprob: -2.5820844173431396
    4. ' (' → logprob: -7.082084655761719
    5. '_list' → logprob: -8.832084655761719
    6. '(x' → logprob: -8.957084655761719
    7. '(n' → logprob: -10.207084655761719
    8. '(token' → logprob: -10.582084655761719
    9. '(list' → logprob: -10.957084655761719
    10. '(line' → logprob: -10.957084655761719

Token 34: '(str' (ID: 7946)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.4853953421115875
    2. '(' → logprob: -0.9853953123092651
    3. ' (' → logprob: -4.610395431518555
    4. '(line' → logprob: -7.485395431518555
    5. '(lst' → logprob: -8.735395431518555
    6. '(ls' → logprob: -8.985395431518555
    7. 's' → logprob: -9.860395431518555
    8. '(l' → logprob: -10.110395431518555
    9. '("("' → logprob: -10.235395431518555
    10. '(ss' → logprob: -10.360395431518555

Token 35: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5697330236434937
    2. '_list' → logprob: -1.5697330236434937
    3. 'ings' → logprob: -2.069733142852783
    4. 'ing' → logprob: -2.319733142852783
    5. 'List' → logprob: -7.694733142852783
    6. '_lst' → logprob: -7.819733142852783
    7. 'list' → logprob: -8.194732666015625
    8. ')' → logprob: -8.944732666015625
    9. '):
' → logprob: -9.194732666015625
    10. '):' → logprob: -9.819732666015625

Token 36: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013493946753442287
    2. ')' → logprob: -4.38849401473999
    3. '):
' → logprob: -7.63849401473999
    4. '(' → logprob: -8.638493537902832
    5. ' ):' → logprob: -8.763493537902832
    6. ',' → logprob: -9.888493537902832
    7. '   ' → logprob: -10.388493537902832
    8. '):

' → logprob: -11.388493537902832
    9. ':' → logprob: -11.513493537902832
    10. '=' → logprob: -11.638493537902832

Token 37: '   ' (ID: 271)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.6288191676139832
    2. '[' → logprob: -1.003819227218628
    3. '   ' → logprob: -3.003819227218628
    4. ' [' → logprob: -4.003818988800049
    5. ' return' → logprob: -4.128818988800049
    6. 'return' → logprob: -5.128818988800049
    7. '[list' → logprob: -5.628818988800049
    8. ' list' → logprob: -5.753818988800049
    9. '[
' → logprob: -7.003818988800049
    10. '[i' → logprob: -7.378818988800049

Token 38: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1947990357875824
    2. ' return' → logprob: -1.9447990655899048
    3. '[int' → logprob: -3.9447989463806152
    4. '   ' → logprob: -4.944798946380615
    5. '[' → logprob: -5.319798946380615
    6. '[list' → logprob: -6.444798946380615
    7. 'list' → logprob: -7.819798946380615
    8. ' list' → logprob: -8.069799423217773
    9. ' [' → logprob: -8.444799423217773
    10. '```' → logprob: -10.319799423217773

Token 39: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.39092954993247986
    2. ' list' → logprob: -1.6409295797348022
    3. '[list' → logprob: -2.1409294605255127
    4. '[' → logprob: -4.890929698944092
    5. 'list' → logprob: -5.390929698944092
    6. '[int' → logprob: -9.390929222106934
    7. '[List' → logprob: -9.890929222106934
    8. '(list' → logprob: -12.015929222106934
    9. '[len' → logprob: -12.515929222106934
    10. '   ' → logprob: -12.890929222106934

Token 40: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.306760805164231e-05
    2. ' int' → logprob: -11.25001335144043
    3. '   ' → logprob: -18.25001335144043
    4. '(int' → logprob: -18.62501335144043
    5. '```' → logprob: -18.87501335144043
    6. ':int' → logprob: -19.12501335144043
    7. '  ' → logprob: -19.50001335144043
    8. '=int' → logprob: -19.62501335144043
    9. ']int' → logprob: -19.62501335144043
    10. '<int' → logprob: -19.75001335144043

Token 41: '(i' (ID: 3649)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.06339166313409805
    2. '(s' → logprob: -2.81339168548584
    3. '(i' → logprob: -7.31339168548584
    4. '(item' → logprob: -7.93839168548584
    5. '(' → logprob: -8.06339168548584
    6. '(elem' → logprob: -10.06339168548584
    7. ']' → logprob: -11.56339168548584
    8. '(token' → logprob: -11.68839168548584
    9. '(element' → logprob: -12.56339168548584
    10. 'x' → logprob: -12.56339168548584

Token 42: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.008129963040119e-06
    2. ' )' → logprob: -13.250003814697266
    3. ')]' → logprob: -14.500003814697266
    4. 'for' → logprob: -15.000003814697266
    5. 's' → logprob: -15.375003814697266
    6. 'str' → logprob: -15.500003814697266
    7. '))' → logprob: -16.500003814697266
    8. ')s' → logprob: -16.500003814697266
    9. 'or' → logprob: -16.750003814697266
    10. '(x' → logprob: -16.750003814697266

Token 43: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1496916264295578
    2. 'for' → logprob: -2.024691581726074
    3. ')' → logprob: -5.024691581726074
    4. ' str' → logprob: -8.649691581726074
    5. ' in' → logprob: -8.774691581726074
    6. ' ' → logprob: -10.649691581726074
    7. 'str' → logprob: -10.649691581726074
    8. ' )' → logprob: -11.899691581726074
    9. ']' → logprob: -12.024691581726074
    10. 'in' → logprob: -12.274691581726074

Token 44: ' i' (ID: 575)
  Prédit: ' str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.008674376644194126
    2. 'str' → logprob: -4.758674144744873
    3. '	str' → logprob: -10.758674621582031
    4. 's' → logprob: -11.508674621582031
    5. ' ' → logprob: -11.633674621582031
    6. ' s' → logprob: -11.758674621582031
    7. '(str' → logprob: -12.008674621582031
    8. '_str' → logprob: -13.008674621582031
    9. '[str' → logprob: -14.133674621582031
    10. ':str' → logprob: -14.383674621582031

Token 45: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07973837852478027
    2. 'in' → logprob: -2.5797383785247803
    3. 'str' → logprob: -7.579738616943359
    4. ' str' → logprob: -8.45473861694336
    5. 's' → logprob: -9.95473861694336
    6. ' ' → logprob: -10.32973861694336
    7. 'i' → logprob: -11.20473861694336
    8. '<|end|>' → logprob: -11.57973861694336
    9. ' i' → logprob: -12.45473861694336
    10. '_str' → logprob: -12.95473861694336

Token 46: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0017042214749380946
    2. ' str' → logprob: -6.376704216003418
    3. 's' → logprob: -13.751704216003418
    4. '	str' → logprob: -14.501704216003418
    5. '(str' → logprob: -15.376704216003418
    6. ' ' → logprob: -16.126705169677734
    7. ':str' → logprob: -16.751705169677734
    8. '[str' → logprob: -17.001705169677734
    9. '   ' → logprob: -17.376705169677734
    10. '_str' → logprob: -17.501705169677734

Token 47: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.4378848391061183e-05
    2. 'list' → logprob: -11.375014305114746
    3. 'lst' → logprob: -14.375014305114746
    4. '_lst' → logprob: -14.750014305114746
    5. 'List' → logprob: -14.875014305114746
    6. '_' → logprob: -14.875014305114746
    7. 'l' → logprob: -15.125014305114746
    8. '_l' → logprob: -15.750014305114746
    9. ')' → logprob: -15.875014305114746
    10. 'ist' → logprob: -16.000015258789062

Token 48: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001209518639370799
    2. ')]' → logprob: -6.751209735870361
    3. ' ]' → logprob: -10.626209259033203
    4. '])' → logprob: -11.626209259033203
    5. '()]' → logprob: -13.251209259033203
    6. ']
' → logprob: -13.251209259033203
    7. ')' → logprob: -14.001209259033203
    8. '])]' → logprob: -14.126209259033203
    9. '   ' → logprob: -15.126209259033203
    10. '`]' → logprob: -15.751209259033203

Token 49: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0008118899422697723
    2. '\' → logprob: -7.62581205368042
    3. '
' → logprob: -9.375811576843262
    4. '```' → logprob: -9.875811576843262
    5. 'd' → logprob: -10.000811576843262
    6. '<|end|>' → logprob: -10.375811576843262
    7. '<|end|>' → logprob: -10.500811576843262
    8. '#' → logprob: -10.750811576843262
    9. 'de' → logprob: -11.250811576843262
    10. '

' → logprob: -11.750811576843262

Token 50: ' tuple' (ID: 31311)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -1.3955408334732056
    2. ' main' → logprob: -1.5205408334732056
    3. ' find' → logprob: -1.6455408334732056
    4. ' binary' → logprob: -2.645540714263916
    5. ' count' → logprob: -2.645540714263916
    6. ' bin' → logprob: -2.645540714263916
    7. ' process' → logprob: -3.895540714263916
    8. ' merge' → logprob: -4.145540714263916
    9. 'solve' → logprob: -4.270540714263916
    10. ' calculate' → logprob: -4.520540714263916

Token 51: '_or' (ID: 15400)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7155085802078247
    2. 's' → logprob: -0.9655085802078247
    3. '(' → logprob: -2.590508460998535
    4. '(s' → logprob: -4.465508460998535
    5. '_split' → logprob: -4.715508460998535
    6. '_s' → logprob: -4.715508460998535
    7. 'd' → logprob: -5.090508460998535
    8. '_append' → logprob: -5.340508460998535
    9. ' _' → logprob: -6.215508460998535
    10. '_to' → logprob: -6.465508460998535

Token 52: '_int' (ID: 12285)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.2706623077392578
    2. 'tuple' → logprob: -1.6456623077392578
    3. '_tuple' → logprob: -1.8956623077392578
    4. '_list' → logprob: -2.020662307739258
    5. '_none' → logprob: -2.520662307739258
    6. 'd' → logprob: -3.145662307739258
    7. '_int' → logprob: -3.895662307739258
    8. 'None' → logprob: -4.020662307739258
    9. ' tuple' → logprob: -4.395662307739258
    10. 't' → logprob: -4.520662307739258

Token 53: '(lst' (ID: 95688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7201676964759827
    2. '(s' → logprob: -0.9701676964759827
    3. '(x' → logprob: -3.095167636871338
    4. '(arg' → logprob: -3.720167636871338
    5. '(param' → logprob: -4.095167636871338
    6. '():' → logprob: -4.720167636871338
    7. '(token' → logprob: -4.845167636871338
    8. '(name' → logprob: -4.970167636871338
    9. '(value' → logprob: -5.220167636871338
    10. '(argument' → logprob: -5.970167636871338

Token 54: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011681685224175453
    2. '):
' → logprob: -4.51168155670166
    3. ',' → logprob: -8.38668155670166
    4. ' ):' → logprob: -8.38668155670166
    5. '   ' → logprob: -9.63668155670166
    6. '):
' → logprob: -10.01168155670166
    7. ')' → logprob: -10.76168155670166
    8. '=None' → logprob: -11.63668155670166
    9. 's' → logprob: -12.26168155670166
    10. ' ,' → logprob: -12.51168155670166

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005374983884394169
    2. ' if' → logprob: -5.630374908447266
    3. ':' → logprob: -7.380374908447266
    4. '(lst' → logprob: -7.755374908447266
    5. ':
' → logprob: -8.255374908447266
    6. 'if' → logprob: -9.255374908447266
    7. ' def' → logprob: -9.630374908447266
    8. ' lst' → logprob: -9.755374908447266
    9. 'def' → logprob: -10.005374908447266
    10. ' return' → logprob: -10.005374908447266

Token 56: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037443749606609344
    2. ' if' → logprob: -3.7874436378479004
    3. 'if' (adapté à ' if') → logprob: -4.4124436378479
    4. ' return' → logprob: -6.7874436378479
    5. 'return' → logprob: -7.1624436378479
    6. '```' → logprob: -10.662444114685059
    7. '       ' → logprob: -11.662444114685059
    8. 'def' → logprob: -11.787444114685059
    9. '  ' → logprob: -11.787444114685059
    10. ' ' → logprob: -12.412444114685059

Token 57: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.007890759035944939
    2. ' isinstance' → logprob: -5.007890701293945
    3. 'len' → logprob: -7.132890701293945
    4. ' lst' → logprob: -8.007890701293945
    5. ' not' → logprob: -10.507890701293945
    6. '(len' → logprob: -12.257890701293945
    7. ' all' → logprob: -12.757890701293945
    8. ' ' → logprob: -12.882890701293945
    9. 'lst' → logprob: -12.882890701293945
    10. ' type' → logprob: -13.757890701293945

Token 58: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.0017131395870819688
    2. '(' → logprob: -6.376713275909424
    3. '(l' → logprob: -12.126712799072266
    4. '(s' → logprob: -12.751712799072266
    5. '(ls' → logprob: -14.626712799072266
    6. 'lst' → logprob: -14.626712799072266
    7. ' (' → logprob: -15.251712799072266
    8. '(lhs' → logprob: -15.251712799072266
    9. '(
' → logprob: -15.751712799072266
    10. ' lst' → logprob: -15.876712799072266

Token 59: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04819631576538086
    2. '==' → logprob: -3.923196315765381
    3. ')==' → logprob: -4.298196315765381
    4. ' ==' → logprob: -4.798196315765381
    5. ' )' → logprob: -5.423196315765381
    6. '()' → logprob: -7.298196315765381
    7. '()==' → logprob: -8.923196792602539
    8. '>' → logprob: -9.548196792602539
    9. ')>' → logprob: -9.548196792602539
    10. '())' → logprob: -11.548196792602539

Token 60: ' <=' (ID: 5017)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5912031531333923
    2. '==' → logprob: -0.8412031531333923
    3. '>' → logprob: -4.716203212738037
    4. ' >' → logprob: -5.216203212738037
    5. ' <=' → logprob: -8.591202735900879
    6. ' ' → logprob: -8.716202735900879
    7. '<' → logprob: -9.091202735900879
    8. '<=' → logprob: -9.091202735900879
    9. ' <' → logprob: -9.341202735900879
    10. '1' → logprob: -10.966202735900879

Token 61: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012555881403386593
    2. ' ' → logprob: -7.001255512237549
    3. '2' → logprob: -8.001255989074707
    4. '   ' → logprob: -12.126255989074707
    5. '  ' → logprob: -13.376255989074707
    6. '0' → logprob: -14.313755989074707
    7. '3' → logprob: -14.438755989074707
    8. '```' → logprob: -16.06375503540039
    9. '4' → logprob: -16.31375503540039
    10. '    ' → logprob: -16.37625503540039

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038682064041495323
    2. '2' → logprob: -8.500387191772461
    3. ' ' → logprob: -8.625387191772461
    4. '0' → logprob: -12.875387191772461
    5. '3' → logprob: -14.250387191772461
    6. '   ' → logprob: -16.12538719177246
    7. '10' → logprob: -16.18788719177246
    8. '4' → logprob: -16.25038719177246
    9. '```' → logprob: -16.37538719177246
    10. '5' → logprob: -16.68788719177246

Token 63: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009760221466422081
    2. ':return' → logprob: -5.25976037979126
    3. ':
' → logprob: -5.75976037979126
    4. ' :' → logprob: -6.63476037979126
    5. '   ' → logprob: -10.884759902954102
    6. ' :
' → logprob: -11.134759902954102
    7. ' return' → logprob: -11.884759902954102
    8. 'return' → logprob: -12.884759902954102
    9. ' else' → logprob: -13.884759902954102
    10. ',' → logprob: -13.884759902954102

Token 64: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5289527177810669
    2. '       ' → logprob: -1.028952717781067
    3. '   ' → logprob: -3.7789525985717773
    4. ':return' → logprob: -4.403952598571777
    5. ' return' → logprob: -4.528952598571777
    6. ' :' → logprob: -5.903952598571777
    7. ':
' → logprob: -6.153952598571777
    8. '    ' → logprob: -6.903952598571777
    9. 'return' → logprob: -6.903952598571777
    10. ',' → logprob: -8.653952598571777

Token 65: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.046915583312511444
    2. 'return' (adapté à ' return') → logprob: -3.1719155311584473
    3. '   ' → logprob: -5.796915531158447
    4. '
' → logprob: -7.921915531158447
    5. ':return' → logprob: -8.046916007995605
    6. ' lst' → logprob: -10.046916007995605
    7. ' ' → logprob: -10.421916007995605
    8. '	return' → logprob: -10.546916007995605
    9. ' 
' → logprob: -10.671916007995605
    10. '       ' → logprob: -11.046916007995605

Token 66: ' int' (ID: 677)
  Prédit: ' lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.1475316882133484
    2. 'lst' → logprob: -2.022531747817993
    3. ' int' → logprob: -5.522531509399414
    4. 'int' → logprob: -7.522531509399414
    5. ' None' → logprob: -8.897531509399414
    6. '0' → logprob: -9.397531509399414
    7. '(lst' → logprob: -10.272531509399414
    8. ' ' → logprob: -10.647531509399414
    9. 'None' → logprob: -10.897531509399414
    10. '_lst' → logprob: -12.772531509399414

Token 67: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.0040818434208631516
    2. '(' → logprob: -5.504081726074219
    3. '(s' → logprob: -13.504081726074219
    4. 'lst' → logprob: -13.629081726074219
    5. '(ls' → logprob: -14.504081726074219
    6. '(
' → logprob: -16.62908172607422
    7. '(l' → logprob: -16.75408172607422
    8. '('' → logprob: -17.12908172607422
    9. ' lst' → logprob: -17.37908172607422
    10. '("("' → logprob: -17.50408172607422

Token 68: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02979874238371849
    2. ')' → logprob: -3.529798746109009
    3. ' )' → logprob: -10.27979850769043
    4. ' [' → logprob: -13.27979850769043
    5. '   ' → logprob: -13.27979850769043
    6. ')
' → logprob: -13.40479850769043
    7. ')-' → logprob: -13.40479850769043
    8. '0' → logprob: -13.52979850769043
    9. ')+' → logprob: -13.52979850769043
    10. ' ' → logprob: -13.77979850769043

Token 69: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -13.125006675720215
    3. ')' → logprob: -13.250006675720215
    4. '[' → logprob: -13.875006675720215
    5. '])' → logprob: -14.125006675720215
    6. ')]' → logprob: -15.000006675720215
    7. '-' → logprob: -15.375006675720215
    8. ']' → logprob: -15.500006675720215
    9. ')])' → logprob: -17.2500057220459
    10. '])]' → logprob: -17.5625057220459

Token 70: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.062443990260362625
    2. '])' → logprob: -2.812443971633911
    3. ']' → logprob: -8.187443733215332
    4. ')]' → logprob: -9.812443733215332
    5. ' )' → logprob: -9.937443733215332
    6. ')])' → logprob: -9.937443733215332
    7. ')
' → logprob: -10.812443733215332
    8. '))' → logprob: -12.437443733215332
    9. ' ])' → logprob: -12.437443733215332
    10. '[' → logprob: -12.562443733215332

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.053793538361787796
    2. ' else' → logprob: -3.678793430328369
    3. 'else' → logprob: -3.928793430328369
    4. '    
' → logprob: -6.053793430328369
    5. '	else' → logprob: -6.053793430328369
    6. '
' → logprob: -6.428793430328369
    7. 's' → logprob: -8.803793907165527
    8. '  ' → logprob: -9.053793907165527
    9. '   
' → logprob: -9.053793907165527
    10. ' ' → logprob: -9.178793907165527

Token 72: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29168039560317993
    2. ' else' → logprob: -1.6666803359985352
    3. 'else' → logprob: -3.041680335998535
    4. 'return' (adapté à ' return') → logprob: -4.666680335998535
    5. ' return' → logprob: -5.041680335998535
    6. '
' → logprob: -8.666680335998535
    7. ',' → logprob: -9.416680335998535
    8. '	else' → logprob: -9.916680335998535
    9. '  ' → logprob: -10.416680335998535
    10. '	return' → logprob: -10.416680335998535

Token 73: ' tuple' (ID: 31311)
  Prédit: ' tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.05023495480418205
    2. 'tuple' → logprob: -3.0502350330352783
    3. '(tuple' → logprob: -6.425234794616699
    4. ' (' → logprob: -10.6752347946167
    5. '(' → logprob: -13.0502347946167
    6. ' ' → logprob: -15.4252347946167
    7. '_tuple' → logprob: -15.5502347946167
    8. ' tuples' → logprob: -16.050235748291016
    9. ' ' → logprob: -16.300235748291016
    10. ' tup' → logprob: -16.550235748291016

Token 74: '(map' (ID: 16946)
  Prédit: '(lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.0005942588322795928
    2. '(' → logprob: -7.875594139099121
    3. '(tuple' → logprob: -9.500594139099121
    4. '([' → logprob: -9.625594139099121
    5. '(map' → logprob: -10.125594139099121
    6. '(l' → logprob: -10.750594139099121
    7. '(list' → logprob: -12.500594139099121
    8. '((' → logprob: -13.250594139099121
    9. '(ls' → logprob: -13.500594139099121
    10. '(
' → logprob: -13.750594139099121

Token 75: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00013083349040243775
    2. '(' → logprob: -9.250130653381348
    3. 'int' → logprob: -11.375130653381348
    4. '(lambda' → logprob: -11.625130653381348
    5. ',int' → logprob: -12.625130653381348
    6. '<int' → logprob: -12.875130653381348
    7. '=int' → logprob: -12.875130653381348
    8. '(convert' → logprob: -13.500130653381348
    9. '(tuple' → logprob: -13.750130653381348
    10. '[int' → logprob: -14.375130653381348

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.48102155327796936
    2. '(lst' → logprob: -1.106021523475647
    3. ',l' → logprob: -3.1060216426849365
    4. ' ,' → logprob: -6.356021404266357
    5. '(' → logprob: -6.481021404266357
    6. 'lst' → logprob: -6.731021404266357
    7. ',(' → logprob: -6.731021404266357
    8. ')' → logprob: -8.981021881103516
    9. '(l' → logprob: -9.106021881103516
    10. ' lst' → logprob: -9.731021881103516

Token 77: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.5231517553329468
    2. ' lst' → logprob: -0.8981517553329468
    3. '(lst' → logprob: -10.773151397705078
    4. '_lst' → logprob: -12.773151397705078
    5. '.lst' → logprob: -13.523151397705078
    6. ' ' → logprob: -13.773151397705078
    7. 'Lst' → logprob: -14.398151397705078
    8. 's' → logprob: -14.898151397705078
    9. 'str' → logprob: -15.148151397705078
    10. 'list' → logprob: -15.148151397705078

Token 78: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0004436587623786181
    2. ' ))' → logprob: -8.500443458557129
    3. '[' → logprob: -9.375443458557129
    4. ')))' → logprob: -9.500443458557129
    5. ')' → logprob: -9.875443458557129
    6. '))
' → logprob: -11.375443458557129
    7. '()))' → logprob: -11.625443458557129
    8. '[:' → logprob: -13.500443458557129
    9. ' ' → logprob: -13.750443458557129
    10. '[:-' → logprob: -14.375443458557129

Token 79: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013863875530660152
    2. '<|end|>' → logprob: -4.638864040374756
    3. '#' → logprob: -6.638864040374756
    4. '<|end|>' → logprob: -6.888864040374756
    5. '
' → logprob: -7.513864040374756
    6. '\' → logprob: -8.013863563537598
    7. '[' → logprob: -8.138863563537598
    8. '```' → logprob: -8.263863563537598
    9. '\n' → logprob: -9.763863563537598
    10. ' def' → logprob: -9.888863563537598

Token 80: ' int' (ID: 677)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.7584419250488281
    2. ' process' → logprob: -1.3834419250488281
    3. ' solve' → logprob: -2.258441925048828
    4. ' find' → logprob: -2.633441925048828
    5. ' bin' → logprob: -3.508441925048828
    6. ' read' → logprob: -4.258441925048828
    7. ' parse' → logprob: -4.383441925048828
    8. ' get' → logprob: -5.258441925048828
    9. ' binary' → logprob: -5.383441925048828
    10. ' calculate' → logprob: -5.383441925048828

Token 81: 'in' (ID: 258)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.6923268437385559
    2. 'er' → logprob: -1.5673267841339111
    3. 'o' → logprob: -2.567326784133911
    4. 's' → logprob: -2.817326784133911
    5. '_to' → logprob: -3.317326784133911
    6. 'eger' → logprob: -3.942326784133911
    7. 'erval' → logprob: -4.31732702255249
    8. '_array' → logprob: -4.56732702255249
    9. '(s' → logprob: -4.81732702255249
    10. 'ent' → logprob: -4.81732702255249

Token 82: '():
' (ID: 8595)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.13329870998859406
    2. 't' → logprob: -2.133298635482788
    3. '_put' → logprob: -5.508298873901367
    4. '(t' → logprob: -7.133298873901367
    5. 'p' → logprob: -7.758298873901367
    6. '_t' → logprob: -8.383298873901367
    7. 'ut' → logprob: -8.633298873901367
    8. 'e' → logprob: -8.758298873901367
    9. 'puts' → logprob: -8.758298873901367
    10. 'pt' → logprob: -9.008298873901367

Token 83: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.017277086153626442
    2. 'int' → logprob: -5.392277240753174
    3. '(int' → logprob: -5.517277240753174
    4. ' ()' → logprob: -5.517277240753174
    5. '()
' → logprob: -6.017277240753174
    6. ' int' → logprob: -7.517277240753174
    7. '=int' → logprob: -8.017276763916016
    8. '   ' → logprob: -8.267276763916016
    9. ' return' → logprob: -8.767276763916016
    10. '():' → logprob: -9.142276763916016

Token 84: ' input' (ID: 3422)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.18752126395702362
    2. 'convert' → logprob: -2.43752121925354
    3. 'int' → logprob: -2.56252121925354
    4. ' tuple' → logprob: -6.062521457672119
    5. 'list' → logprob: -6.062521457672119
    6. 'return' → logprob: -7.437521457672119
    7. 'map' → logprob: -7.562521457672119
    8. 'split' → logprob: -8.187520980834961
    9. ' convert' → logprob: -8.687520980834961
    10. ' int' → logprob: -9.062520980834961

Token 85: '_str' (ID: 6182)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0011041370453312993
    2. ' ()' → logprob: -7.626104354858398
    3. '().' → logprob: -8.251104354858398
    4. '(' → logprob: -9.001104354858398
    5. 'put' → logprob: -9.376104354858398
    6. '())' → logprob: -10.126104354858398
    7. '_' → logprob: -10.376104354858398
    8. '()`' → logprob: -11.001104354858398
    9. '("")' → logprob: -12.001104354858398
    10. '().__' → logprob: -12.251104354858398

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6605241894721985
    2. '=' → logprob: -0.7855241894721985
    3. '()' → logprob: -3.6605241298675537
    4. '=input' → logprob: -7.535524368286133
    5. 'put' → logprob: -7.660524368286133
    6. '   ' → logprob: -7.910524368286133
    7. 't' → logprob: -8.410524368286133
    8. ' ' → logprob: -10.035524368286133
    9. 'puts' → logprob: -10.910524368286133
    10. 'ut' → logprob: -10.910524368286133

Token 87: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.03937949985265732
    2. 'read' → logprob: -3.289379596710205
    3. ' input' → logprob: -7.039379596710205
    4. ' split' → logprob: -8.039379119873047
    5. 'split' → logprob: -9.789379119873047
    6. 'input' → logprob: -9.914379119873047
    7. ' readline' → logprob: -11.164379119873047
    8. '	read' → logprob: -11.414379119873047
    9. ' ' → logprob: -13.289379119873047
    10. '(read' → logprob: -13.539379119873047

Token 88: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.022732054814696312
    2. '()' → logprob: -3.8977320194244385
    3. '_' → logprob: -6.147732257843018
    4. '()
' → logprob: -11.89773178100586
    5. '_line' → logprob: -11.89773178100586
    6. '_in' → logprob: -12.64773178100586
    7. ')' → logprob: -12.77273178100586
    8. 'input' → logprob: -12.77273178100586
    9. '())' → logprob: -12.89773178100586
    10. '__' → logprob: -12.89773178100586

Token 89: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005475530633702874
    2. '()
' → logprob: -7.625547409057617
    3. '().' → logprob: -9.875547409057617
    4. '()

' → logprob: -12.750547409057617
    5. '(' → logprob: -12.875547409057617
    6. ' ()' → logprob: -13.500547409057617
    7. '())' → logprob: -15.000547409057617
    8. '();' → logprob: -15.375547409057617
    9. '()`' → logprob: -15.625547409057617
    10. '()\' → logprob: -16.125547409057617

Token 90: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: ' input' (ID: 3422)
  Prédit: ' splitted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' splitted' → logprob: -1.6462280750274658
    2. ' return' → logprob: -1.7712280750274658
    3. ' split' → logprob: -1.7712280750274658
    4. ' parts' → logprob: -1.7712280750274658
    5. 'split' → logprob: -2.646228075027466
    6. 'return' → logprob: -3.021228075027466
    7. 'str' → logprob: -3.396228075027466
    8. ' str' → logprob: -3.521228075027466
    9. ' tokens' → logprob: -3.771228075027466
    10. 'lst' → logprob: -4.021227836608887

Token 92: '_split' (ID: 39921)
  Prédit: '_str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.697957456111908
    2. '_list' → logprob: -1.0729575157165527
    3. '_tokens' → logprob: -2.4479575157165527
    4. '_lst' → logprob: -2.9479575157165527
    5. '_parts' → logprob: -4.447957515716553
    6. '_vals' → logprob: -5.697957515716553
    7. '_values' → logprob: -6.072957515716553
    8. '_s' → logprob: -6.322957515716553
    9. '_' → logprob: -6.947957515716553
    10. '_data' → logprob: -8.447957038879395

Token 93: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5439309477806091
    2. '()' → logprob: -1.918931007385254
    3. 'ed' → logprob: -2.043931007385254
    4. ' =' → logprob: -2.043931007385254
    5. 'ted' → logprob: -5.043931007385254
    6. '_' → logprob: -6.043931007385254
    7. '_str' → logprob: -6.418931007385254
    8. 's' → logprob: -6.543931007385254
    9. ')' → logprob: -7.793931007385254
    10. '   ' → logprob: -8.168931007385254

Token 94: ' split' (ID: 12648)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.2519986927509308
    2. ' split' → logprob: -1.5019986629486084
    3. '(split' → logprob: -9.626998901367188
    4. 'input' → logprob: -13.001998901367188
    5. ' ' → logprob: -14.626998901367188
    6. ' input' → logprob: -14.876998901367188
    7. '.split' → logprob: -15.751998901367188
    8. '   ' → logprob: -16.126998901367188
    9. 'spl' → logprob: -16.251998901367188
    10. 's' → logprob: -17.001998901367188

Token 95: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.00013440960901789367
    2. 'input' → logprob: -9.375134468078613
    3. '(input' → logprob: -10.125134468078613
    4. '_' → logprob: -12.750134468078613
    5. '```' → logprob: -12.750134468078613
    6. '(' → logprob: -13.375134468078613
    7. '_output' → logprob: -14.875134468078613
    8. ' input' → logprob: -15.250134468078613
    9. '_INPUT' → logprob: -15.500134468078613
    10. '(_' → logprob: -15.875134468078613

Token 96: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -4.246537173457909e-06
    2. '(' → logprob: -12.500003814697266
    3. ' (' → logprob: -14.875003814697266
    4. ',input' → logprob: -16.375003814697266
    5. 'input' → logprob: -17.250003814697266
    6. '=input' → logprob: -18.125003814697266
    7. '(s' → logprob: -19.625003814697266
    8. '```' → logprob: -19.750003814697266
    9. '(output' → logprob: -20.125003814697266
    10. '(
' → logprob: -20.625003814697266

Token 97: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -1.676292231422849e-05
    2. ')' → logprob: -11.375017166137695
    3. '_s' → logprob: -13.250017166137695
    4. 'str' → logprob: -13.750017166137695
    5. 's' → logprob: -14.125017166137695
    6. '(str' → logprob: -14.500017166137695
    7. '(s' → logprob: -14.750017166137695
    8. '(' → logprob: -15.250017166137695
    9. '_' → logprob: -16.000017166137695
    10. 'Str' → logprob: -16.375017166137695

Token 98: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.1424973713001236e-05
    2. ')
' → logprob: -10.500031471252441
    3. ' )' → logprob: -13.250031471252441
    4. '()' → logprob: -13.500031471252441
    5. '())' → logprob: -14.750031471252441
    6. ' ' → logprob: -16.250030517578125
    7. '))' → logprob: -16.375030517578125
    8. '   ' → logprob: -16.500030517578125
    9. ')

' → logprob: -17.000030517578125
    10. '[' → logprob: -17.250030517578125

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011442946270108223
    2. '<|end|>' → logprob: -5.761443138122559
    3. 'return' → logprob: -6.136443138122559
    4. '    
' → logprob: -6.386443138122559
    5. ' return' → logprob: -6.511443138122559
    6. '
' → logprob: -6.511443138122559
    7. '<|end|>' → logprob: -8.136443138122559
    8. '[' → logprob: -8.136443138122559
    9. '	return' → logprob: -8.761443138122559
    10. ' ' → logprob: -8.761443138122559

Token 100: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.09173887223005295
    2. ' return' → logprob: -2.4667389392852783
    3. 'result' → logprob: -6.716738700866699
    4. 'int' → logprob: -7.716738700866699
    5. 'lst' → logprob: -8.4667387008667
    6. '   ' → logprob: -8.7167387008667
    7. 'res' → logprob: -9.0917387008667
    8. 'converted' → logprob: -9.2167387008667
    9. ' lst' → logprob: -9.5917387008667
    10. 'def' → logprob: -9.7167387008667

Token 101: ' tuple' (ID: 31311)
  Prédit: 'convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'convert' → logprob: -0.07532689720392227
    2. ' convert' → logprob: -2.700326919555664
    3. 'tuple' → logprob: -5.825326919555664
    4. ' tuple' → logprob: -6.075326919555664
    5. 'int' → logprob: -9.700326919555664
    6. ' int' → logprob: -9.825326919555664
    7. '(convert' → logprob: -12.075326919555664
    8. ' ' → logprob: -14.200326919555664
    9. 'list' → logprob: -14.575326919555664
    10. 'bin' → logprob: -15.012826919555664

Token 102: '_or' (ID: 15400)
  Prédit: '_or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_or' → logprob: -0.0022148462012410164
    2. '(convert' → logprob: -6.6272149085998535
    3. '(tuple' → logprob: -7.3772149085998535
    4. '(int' → logprob: -9.252214431762695
    5. '(map' → logprob: -9.377214431762695
    6. '(' → logprob: -9.877214431762695
    7. 'Or' → logprob: -11.627214431762695
    8. '_of' → logprob: -12.377214431762695
    9. '(_' → logprob: -12.627214431762695
    10. 'convert' → logprob: -12.877214431762695

Token 103: '_int' (ID: 12285)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1004212498664856
    2. '_int' → logprob: -2.350421190261841
    3. 't' → logprob: -9.350420951843262
    4. 'in' → logprob: -10.225420951843262
    5. 'Int' → logprob: -10.600420951843262
    6. '(int' → logprob: -10.850420951843262
    7. 'nt' → logprob: -10.850420951843262
    8. 'ints' → logprob: -11.975420951843262
    9. 'input' → logprob: -12.100420951843262
    10. 'i' → logprob: -12.725420951843262

Token 104: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00032163821742869914
    2. ' (' → logprob: -8.375321388244629
    3. '(' → logprob: -9.375321388244629
    4. '(import' → logprob: -13.375321388244629
    5. '(convert' → logprob: -13.500321388244629
    6. '(split' → logprob: -14.625321388244629
    7. '(output' → logprob: -14.750321388244629
    8. '(open' → logprob: -14.875321388244629
    9. '(eval' → logprob: -15.500321388244629
    10. '(inputs' → logprob: -15.750321388244629

Token 105: '_split' (ID: 39921)
  Prédit: '_split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_split' → logprob: -3.054500666621607e-06
    2. '_s' → logprob: -13.37500286102295
    3. ')' → logprob: -14.37500286102295
    4. 'split' → logprob: -15.12500286102295
    5. '_' → logprob: -15.37500286102295
    6. '_str' → logprob: -16.250003814697266
    7. 'Split' → logprob: -16.625003814697266
    8. ')_' → logprob: -17.250003814697266
    9. '_)' → logprob: -17.625003814697266
    10. 's' → logprob: -18.000003814697266

Token 106: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ')
' → logprob: -14.250000953674316
    3. ' )' → logprob: -16.25
    4. '))' → logprob: -16.5
    5. ')return' → logprob: -18.625
    6. ')`' → logprob: -19.125
    7. ')

' → logprob: -19.25
    8. ')}' → logprob: -19.375
    9. ')#' → logprob: -19.5
    10. '}' → logprob: -19.625

Token 107: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.025170082226395607
    2. '
' → logprob: -4.525169849395752
    3. '\' → logprob: -5.900169849395752
    4. '\n' → logprob: -5.900169849395752
    5. ':' → logprob: -6.150169849395752
    6. '#' → logprob: -6.775169849395752
    7. '

' → logprob: -7.025169849395752
    8. '(' → logprob: -7.025169849395752
    9. '[' → logprob: -7.775169849395752
    10. '```' → logprob: -8.40017032623291

Token 108: ' int' (ID: 677)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.28777259588241577
    2. ' int' → logprob: -1.9127726554870605
    3. ' solve' → logprob: -2.9127726554870605
    4. ' bin' → logprob: -4.4127726554870605
    5. ' process' → logprob: -5.2877726554870605
    6. 'int' → logprob: -5.2877726554870605
    7. 'main' → logprob: -5.5377726554870605
    8. ' read' → logprob: -6.0377726554870605
    9. ' find' → logprob: -6.5377726554870605
    10. ' run' → logprob: -6.7877726554870605

Token 109: 'ina' (ID: 1522)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0013776143314316869
    2. '()' → logprob: -6.876377582550049
    3. 'n' → logprob: -8.251378059387207
    4. '():' → logprob: -11.126378059387207
    5. '_list' → logprob: -11.376378059387207
    6. '():
' → logprob: -11.751378059387207
    7. '_in' → logprob: -12.126378059387207
    8. 's' → logprob: -12.251378059387207
    9. 'out' → logprob: -12.251378059387207
    10. 'inue' → logprob: -12.626378059387207

Token 110: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.04661092907190323
    2. '(n' → logprob: -3.5466108322143555
    3. '()' → logprob: -4.7966108322143555
    4. '():
' → logprob: -5.5466108322143555
    5. '(' → logprob: -6.6716108322143555
    6. '(t' → logprob: -7.5466108322143555
    7. 't' → logprob: -7.6716108322143555
    8. '(length' → logprob: -7.7966108322143555
    9. '(size' → logprob: -7.9216108322143555
    10. 'put' → logprob: -8.296610832214355

Token 111: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016494467854499817
    2. 'return' → logprob: -4.641494274139404
    3. ' return' → logprob: -5.516494274139404
    4. 'def' → logprob: -6.266494274139404
    5. 'input' → logprob: -8.141494750976562
    6. 'int' → logprob: -9.016494750976562
    7. ' input' → logprob: -9.516494750976562
    8. 'while' → logprob: -9.766494750976562
    9. 'n' → logprob: -10.266494750976562
    10. '[]' → logprob: -10.391494750976562

Token 112: ' input' (ID: 3422)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8384419679641724
    2. 'input' (adapté à ' input') → logprob: -0.8384419679641724
    3. 'return' → logprob: -2.338441848754883
    4. 'str' → logprob: -4.463441848754883
    5. '   ' → logprob: -5.338441848754883
    6. ' input' → logprob: -5.463441848754883
    7. 'n' → logprob: -5.713441848754883
    8. 'read' → logprob: -5.838441848754883
    9. 'lst' → logprob: -5.838441848754883
    10. ' return' → logprob: -6.463441848754883

Token 113: '_str' (ID: 6182)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04937570169568062
    2. '_str' → logprob: -3.6743757724761963
    3. '().' → logprob: -4.424375534057617
    4. '():' → logprob: -4.674375534057617
    5. '()
' → logprob: -7.674375534057617
    6. ' ()' → logprob: -8.549375534057617
    7. '_' → logprob: -8.799375534057617
    8. '()[' → logprob: -8.924375534057617
    9. '())' → logprob: -9.674375534057617
    10. 'str' → logprob: -9.674375534057617

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030074194073677063
    2. '=' → logprob: -3.530074119567871
    3. '()' → logprob: -8.530074119567871
    4. '   ' → logprob: -9.030074119567871
    5. '_' → logprob: -13.405074119567871
    6. ' ' → logprob: -13.530074119567871
    7. ' ()' → logprob: -13.905074119567871
    8. 'def' → logprob: -14.780074119567871
    9. '=input' → logprob: -14.905074119567871
    10. '    ' → logprob: -15.030074119567871

Token 115: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.5761726498603821
    2. 'read' → logprob: -0.8261726498603821
    3. ' input' → logprob: -8.951172828674316
    4. 'input' → logprob: -9.326172828674316
    5. '	read' → logprob: -11.826172828674316
    6. 'split' → logprob: -12.201172828674316
    7. ' split' → logprob: -14.201172828674316
    8. ' ' → logprob: -14.576172828674316
    9. '(read' → logprob: -15.201172828674316
    10. ' readline' → logprob: -15.576172828674316

Token 116: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.00012689977302215993
    2. 'input' → logprob: -9.000126838684082
    3. 'put' → logprob: -13.625126838684082
    4. 'Input' → logprob: -13.875126838684082
    5. 'str' → logprob: -15.000126838684082
    6. '_str' → logprob: -15.750126838684082
    7. '_' → logprob: -16.1251277923584
    8. '_INPUT' → logprob: -16.1251277923584
    9. '()
' → logprob: -16.3751277923584
    10. 'in' → logprob: -16.5001277923584

Token 117: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18015506863594055
    2. '()
' → logprob: -1.8051550388336182
    3. '   ' → logprob: -8.555154800415039
    4. '():
' → logprob: -9.930154800415039
    5. ')' → logprob: -10.180154800415039
    6. '().' → logprob: -10.305154800415039
    7. '():' → logprob: -10.555154800415039
    8. 'def' → logprob: -11.055154800415039
    9. ' ()' → logprob: -11.305154800415039
    10. '()
' → logprob: -11.305154800415039

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007609586231410503
    2. 'input' → logprob: -5.3826093673706055
    3. '
' → logprob: -6.3826093673706055
    4. 'def' → logprob: -7.7576093673706055
    5. 's' → logprob: -8.757609367370605
    6. '    
' → logprob: -8.882609367370605
    7. '_input' → logprob: -9.507609367370605
    8. 'str' → logprob: -9.632609367370605
    9. 'split' → logprob: -9.757609367370605
    10. '<|end|>' → logprob: -9.757609367370605

Token 119: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8928433656692505
    2. ' input' → logprob: -1.0178433656692505
    3. 'input' (adapté à ' input') → logprob: -1.5178433656692505
    4. ' return' → logprob: -5.267843246459961
    5. 'return' → logprob: -5.767843246459961
    6. ' str' → logprob: -7.642843246459961
    7. 'str' → logprob: -8.392843246459961
    8. 'split' → logprob: -8.392843246459961
    9. ' split' → logprob: -8.642843246459961
    10. ' s' → logprob: -9.267843246459961

Token 120: '_split' (ID: 39921)
  Prédit: '_split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_split' → logprob: -0.0007505440153181553
    2. '_s' → logprob: -8.500750541687012
    3. '_list' → logprob: -8.500750541687012
    4. '_' → logprob: -9.000750541687012
    5. '_str' → logprob: -9.000750541687012
    6. 'split' → logprob: -9.500750541687012
    7. '   ' → logprob: -12.625750541687012
    8. '_strip' → logprob: -12.750750541687012
    9. '_arr' → logprob: -13.250750541687012
    10. '_sp' → logprob: -13.250750541687012

Token 121: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6327015161514282
    2. ' =' → logprob: -0.7577015161514282
    3. '=input' → logprob: -10.257701873779297
    4. '(' → logprob: -10.632701873779297
    5. '(input' → logprob: -11.382701873779297
    6. ')' → logprob: -11.382701873779297
    7. ',' → logprob: -12.382701873779297
    8. 's' → logprob: -12.632701873779297
    9. '(s' → logprob: -12.882701873779297
    10. '   ' → logprob: -13.007701873779297

Token 122: ' split' (ID: 12648)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0053020622581243515
    2. ' split' → logprob: -5.5053019523620605
    3. 'input' → logprob: -6.7553019523620605
    4. ' input' → logprob: -10.505302429199219
    5. 's' → logprob: -11.630302429199219
    6. '(split' → logprob: -12.130302429199219
    7. 'strip' → logprob: -12.505302429199219
    8. 'convert' → logprob: -13.255302429199219
    9. '.split' → logprob: -13.380302429199219
    10. '[]' → logprob: -13.505302429199219

Token 123: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -2.2127087504486553e-05
    2. '_output' → logprob: -11.375021934509277
    3. 's' → logprob: -12.875021934509277
    4. '(input' → logprob: -13.125021934509277
    5. '_INPUT' → logprob: -14.000021934509277
    6. 'input' → logprob: -14.125021934509277
    7. '```' → logprob: -14.250021934509277
    8. '_inputs' → logprob: -14.750021934509277
    9. ')' → logprob: -14.875021934509277
    10. '('_' → logprob: -15.000021934509277

Token 124: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00017529279284644872
    2. '=input' → logprob: -9.500175476074219
    3. '(' → logprob: -9.875175476074219
    4. ',input' → logprob: -10.875175476074219
    5. ',' → logprob: -11.750175476074219
    6. 'input' → logprob: -11.875175476074219
    7. ' (' → logprob: -12.250175476074219
    8. '[input' → logprob: -12.625175476074219
    9. ')' → logprob: -13.625175476074219
    10. '   ' → logprob: -14.000175476074219

Token 125: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.006870594806969166
    2. ')' → logprob: -5.631870746612549
    3. '(input' → logprob: -6.131870746612549
    4. 'input' → logprob: -7.256870746612549
    5. 'str' → logprob: -8.63187026977539
    6. 's' → logprob: -9.38187026977539
    7. '_input' → logprob: -10.50687026977539
    8. '(s' → logprob: -10.88187026977539
    9. '_' → logprob: -11.00687026977539
    10. '(' → logprob: -11.25687026977539

Token 126: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0258797537535429
    2. ')
' → logprob: -3.7758798599243164
    3. '   ' → logprob: -6.025879859924316
    4. 'return' → logprob: -9.025879859924316
    5. ')return' → logprob: -10.650879859924316
    6. 'def' → logprob: -11.025879859924316
    7. ' ' → logprob: -11.150879859924316
    8. ' )' → logprob: -11.150879859924316
    9. ',' → logprob: -12.150879859924316
    10. '))' → logprob: -12.650879859924316

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4744136929512024
    2. 'return' → logprob: -0.9744136929512024
    3. ' return' → logprob: -8.599413871765137
    4. 'def' → logprob: -8.849413871765137
    5. '	return' → logprob: -12.099413871765137
    6. '       ' → logprob: -14.099413871765137
    7. '```' → logprob: -14.224413871765137
    8. ' ' → logprob: -14.724413871765137
    9. '  ' → logprob: -14.974413871765137
    10. '
' → logprob: -15.224413871765137

Token 128: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0008910943870432675
    2. ' return' → logprob: -7.500891208648682
    3. '   ' → logprob: -8.000890731811523
    4. '
' → logprob: -14.375890731811523
    5. '	return' → logprob: -14.375890731811523
    6. 'def' → logprob: -14.625890731811523
    7. ' ' → logprob: -14.750890731811523
    8. 'convert' → logprob: -15.750890731811523
    9. '  ' → logprob: -15.875890731811523
    10. '```' → logprob: -15.875890731811523

Token 129: ' convert' (ID: 8452)
  Prédit: 'convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'convert' → logprob: -0.001081756199710071
    2. ' convert' → logprob: -7.001081943511963
    3. '[' → logprob: -8.751081466674805
    4. ' [' → logprob: -12.376081466674805
    5. 'list' → logprob: -12.376081466674805
    6. '(convert' → logprob: -13.376081466674805
    7. 'tuple' → logprob: -13.751081466674805
    8. '[int' → logprob: -15.126081466674805
    9. '[list' → logprob: -15.626081466674805
    10. '.convert' → logprob: -15.751081466674805

Token 130: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -2.696889623621246e-06
    2. '_' → logprob: -12.87500286102295
    3. ' _' → logprob: -16.625001907348633
    4. 'to' → logprob: -17.125001907348633
    5. '_t' → logprob: -18.250001907348633
    6. '_into' → logprob: -18.375001907348633
    7. '##_' → logprob: -18.500001907348633
    8. 'To' → logprob: -18.750001907348633
    9. '```' → logprob: -19.125001907348633
    10. '_of' → logprob: -19.250001907348633

Token 131: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.0036012595519423485
    2. 'int' → logprob: -5.62860107421875
    3. '_list' → logprob: -15.00360107421875
    4. 't' → logprob: -15.50360107421875
    5. 'list' → logprob: -16.12860107421875
    6. '_in' → logprob: -16.37860107421875
    7. 'Int' → logprob: -16.37860107421875
    8. '<int' → logprob: -16.50360107421875
    9. 'nt' → logprob: -16.62860107421875
    10. ' int' → logprob: -16.75360107421875

Token 132: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0005940204137004912
    2. 'int' → logprob: -7.500594139099121
    3. '_int' → logprob: -10.250594139099121
    4. 'list' → logprob: -12.500594139099121
    5. 'List' → logprob: -14.000594139099121
    6. 'a' → logprob: -15.500594139099121
    7. '_' → logprob: -15.500594139099121
    8. '_to' → logprob: -15.625594139099121
    9. 't' → logprob: -16.125593185424805
    10. 's' → logprob: -16.750593185424805

Token 133: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -5.319370302458992e-06
    2. '(' → logprob: -12.250005722045898
    3. ' (' → logprob: -14.875005722045898
    4. 'input' → logprob: -16.8750057220459
    5. ',input' → logprob: -17.2500057220459
    6. '(output' → logprob: -18.3750057220459
    7. '=input' → logprob: -18.7500057220459
    8. '[input' → logprob: -18.7500057220459
    9. '(return' → logprob: -19.6250057220459
    10. '<input' → logprob: -19.6250057220459

Token 134: '_split' (ID: 39921)
  Prédit: '_split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_split' → logprob: -1.0802738870552275e-05
    2. 'split' → logprob: -11.50001049041748
    3. ')' → logprob: -15.50001049041748
    4. 'Split' → logprob: -15.75001049041748
    5. '_' → logprob: -15.87501049041748
    6. '_s' → logprob: -16.250011444091797
    7. 's' → logprob: -17.500011444091797
    8. '(split' → logprob: -17.750011444091797
    9. ')_' → logprob: -17.875011444091797
    10. '_str' → logprob: -18.000011444091797

Token 135: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. '())' → logprob: -14.750000953674316
    3. ')
' → logprob: -15.250000953674316
    4. '))' → logprob: -15.375000953674316
    5. ' )' → logprob: -15.625000953674316
    6. '()' → logprob: -16.375001907348633
    7. ')return' → logprob: -16.625001907348633
    8. '   ' → logprob: -18.375001907348633
    9. ')))' → logprob: -18.375001907348633
    10. '）' → logprob: -19.000001907348633

Token 136: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0015769980382174253
    2. '#' → logprob: -7.251576900482178
    3. '
' → logprob: -7.501576900482178
    4. 'd' → logprob: -9.626577377319336
    5. '<|end|>' → logprob: -9.876577377319336
    6. '\' → logprob: -10.001577377319336
    7. '```' → logprob: -10.501577377319336
    8. 'n' → logprob: -10.626577377319336
    9. 'class' → logprob: -10.876577377319336
    10. 'de' → logprob: -10.876577377319336

Token 137: ' int' (ID: 677)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5367616415023804
    2. 'main' → logprob: -1.7867616415023804
    3. 'int' → logprob: -2.53676176071167
    4. ' int' → logprob: -3.03676176071167
    5. ' solve' → logprob: -3.41176176071167
    6. 'solve' → logprob: -3.78676176071167
    7. ' bin' → logprob: -4.41176176071167
    8. 'bin' → logprob: -4.41176176071167
    9. ' process' → logprob: -5.66176176071167
    10. ' read' → logprob: -5.78676176071167

Token 138: 'in' (ID: 258)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7304646968841553
    2. '():' → logprob: -1.1054646968841553
    3. 'in' → logprob: -2.4804646968841553
    4. 'n' → logprob: -3.6054646968841553
    5. 's' → logprob: -3.6054646968841553
    6. 'a' → logprob: -3.6054646968841553
    7. '():
' → logprob: -4.355464935302734
    8. 'out' → logprob: -6.605464935302734
    9. '(' → logprob: -7.105464935302734
    10. 't' → logprob: -7.230464935302734

Token 139: 'l' (ID: 75)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04553165286779404
    2. '()' → logprob: -3.420531749725342
    3. 'n' → logprob: -5.670531749725342
    4. 'put' → logprob: -5.670531749725342
    5. '(' → logprob: -6.420531749725342
    6. '(a' → logprob: -7.670531749725342
    7. 'line' → logprob: -7.920531749725342
    8. '1' → logprob: -8.045531272888184
    9. 'l' → logprob: -8.170531272888184
    10. 'arr' → logprob: -8.795531272888184

Token 140: '(count' (ID: 25892)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0050269137136638165
    2. '():
' → logprob: -5.505026817321777
    3. '()' → logprob: -7.755026817321777
    4. 'ine' → logprob: -7.880026817321777
    5. 'n' → logprob: -9.130026817321777
    6. 'ne' → logprob: -11.755026817321777
    7. ' ():' → logprob: -11.755026817321777
    8. 'ines' → logprob: -12.630026817321777
    9. '(' → logprob: -12.755026817321777
    10. '():

' → logprob: -12.880026817321777

Token 141: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0014128545299172401
    2. ')' → logprob: -6.751412868499756
    3. ' ):' → logprob: -9.251412391662598
    4. '):
' → logprob: -9.876412391662598
    5. '=' → logprob: -10.126412391662598
    6. '():' → logprob: -10.501412391662598
    7. '(' → logprob: -11.251412391662598
    8. ':' → logprob: -11.876412391662598
    9. '()' → logprob: -12.876412391662598
    10. 's' → logprob: -14.251412391662598

Token 142: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0251638013869524
    2. ' return' → logprob: -3.9001638889312744
    3. 'return' → logprob: -6.275163650512695
    4. ' lst' → logprob: -7.400163650512695
    5. ' lines' → logprob: -8.275163650512695
    6. 'lst' → logprob: -8.400163650512695
    7. '    ' → logprob: -8.400163650512695
    8. 'result' → logprob: -8.775163650512695
    9. ':
' → logprob: -8.775163650512695
    10. ' input' → logprob: -9.150163650512695

Token 143: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3474768102169037
    2. 'result' → logprob: -1.847476840019226
    3. 'res' → logprob: -2.5974767208099365
    4. 'lst' → logprob: -3.4724767208099365
    5. 'arr' → logprob: -4.722476959228516
    6. 'results' → logprob: -4.722476959228516
    7. ' return' → logprob: -5.597476959228516
    8. '   ' → logprob: -5.972476959228516
    9. '[' → logprob: -6.347476959228516
    10. ' res' → logprob: -6.597476959228516

Token 144: ' [' (ID: 723)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.20496414601802826
    2. '[' → logprob: -2.0799641609191895
    3. ' [' → logprob: -2.8299641609191895
    4. 'tuple' → logprob: -7.4549641609191895
    5. '[input' → logprob: -8.204963684082031
    6. 'int' → logprob: -8.829963684082031
    7. '[t' → logprob: -9.079963684082031
    8. ' tuple' → logprob: -9.329963684082031
    9. '[Int' → logprob: -10.329963684082031
    10. 'convert' → logprob: -10.829963684082031

Token 145: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.8550976164988242e-05
    2. ' int' → logprob: -11.125018119812012
    3. '   ' → logprob: -13.875018119812012
    4. '(int' → logprob: -14.125018119812012
    5. 'inta' → logprob: -14.750018119812012
    6. 'inti' → logprob: -15.125018119812012
    7. '
' → logprob: -15.375018119812012
    8. 'in' → logprob: -15.375018119812012
    9. 'intval' → logprob: -16.250019073486328
    10. ']int' → logprob: -16.500019073486328

Token 146: 'in' (ID: 258)
  Prédit: 'in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1600807011127472
    2. '(input' → logprob: -2.910080671310425
    3. '(in' → logprob: -3.285080671310425
    4. 'ina' → logprob: -3.285080671310425
    5. '(read' → logprob: -4.035080909729004
    6. 'input' → logprob: -8.160080909729004
    7. 'read' → logprob: -8.160080909729004
    8. '(' → logprob: -8.535080909729004
    9. 'inas' → logprob: -10.035080909729004
    10. '(int' → logprob: -10.535080909729004

Token 147: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.908022285439074e-05
    2. '()]' → logprob: -9.750059127807617
    3. '()
' → logprob: -14.875059127807617
    4. '())' → logprob: -15.875059127807617
    5. '（）' → logprob: -16.000059127807617
    6. ' ()' → logprob: -16.750059127807617
    7. ']()' → logprob: -17.375059127807617
    8. '(' → logprob: -17.750059127807617
    9. '()"' → logprob: -18.125059127807617
    10. '()`' → logprob: -18.500059127807617

Token 148: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.5451681974809617e-05
    2. 'for' → logprob: -11.125015258789062
    3. ' for' → logprob: -14.750015258789062
    4. '()]' → logprob: -15.875015258789062
    5. ' ()' → logprob: -16.625015258789062
    6. '(' → logprob: -16.750015258789062
    7. '_' → logprob: -17.000015258789062
    8. '()
' → logprob: -18.375015258789062
    9. ')' → logprob: -18.875015258789062
    10. ']' → logprob: -19.000015258789062

Token 149: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.27792027592658997
    2. ' _' → logprob: -1.9029202461242676
    3. '_' → logprob: -2.4029202461242676
    4. 'range' → logprob: -6.027920246124268
    5. ' ' → logprob: -7.777920246124268
    6. '_range' → logprob: -8.777920722961426
    7. '(range' → logprob: -10.027920722961426
    8. ' in' → logprob: -11.902920722961426
    9. ' i' → logprob: -11.902920722961426
    10. ' xrange' → logprob: -12.027920722961426

Token 150: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0015711607411503792
    2. 'in' → logprob: -7.126571178436279
    3. ' range' → logprob: -7.876571178436279
    4. 'range' → logprob: -8.251570701599121
    5. ' ' → logprob: -9.001570701599121
    6. ' _' → logprob: -13.001570701599121
    7. '  ' → logprob: -15.251570701599121
    8. '_' → logprob: -15.751570701599121
    9. ',' → logprob: -17.626571655273438
    10. ')' → logprob: -17.626571655273438

Token 151: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014163628220558167
    2. ' range' → logprob: -4.264163494110107
    3. '	range' → logprob: -16.139163970947266
    4. '(range' → logprob: -16.764163970947266
    5. '_range' → logprob: -17.389163970947266
    6. '   ' → logprob: -19.014163970947266
    7. '_' → logprob: -19.264163970947266
    8. 'rang' → logprob: -19.264163970947266
    9. ' ' → logprob: -19.264163970947266
    10. 'count' → logprob: -20.389163970947266

Token 152: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -6.706686690449715e-05
    2. '(' → logprob: -9.750066757202148
    3. 'count' → logprob: -11.750066757202148
    4. ' (' → logprob: -14.375066757202148
    5. ' count' → logprob: -15.500066757202148
    6. '	count' → logprob: -18.62506675720215
    7. '<count' → logprob: -18.75006675720215
    8. '(
' → logprob: -19.00006675720215
    9. ',count' → logprob: -19.37506675720215
    10. '=count' → logprob: -19.62506675720215

Token 153: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.000410415610531345
    2. ')' → logprob: -8.375410079956055
    3. ']' → logprob: -8.625410079956055
    4. ')])' → logprob: -16.250410079956055
    5. ')]
' → logprob: -16.750410079956055
    6. ')}' → logprob: -16.875410079956055
    7. '])' → logprob: -17.000410079956055
    8. ')],' → logprob: -17.000410079956055
    9. '}]' → logprob: -17.125410079956055
    10. ' )' → logprob: -17.125410079956055

Token 154: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001816790085285902
    2. '<|end|>' → logprob: -6.376816749572754
    3. '<|end|>' → logprob: -9.376816749572754
    4. '```' → logprob: -11.126816749572754
    5. ' def' → logprob: -12.376816749572754
    6. '#' → logprob: -12.751816749572754
    7. '[' → logprob: -12.876816749572754
    8. '
' → logprob: -13.126816749572754
    9. '[]' → logprob: -14.501816749572754
    10. 'ndef' → logprob: -14.626816749572754

Token 155: ' get' (ID: 717)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01820121519267559
    2. ' int' → logprob: -4.0182013511657715
    3. 'inta' → logprob: -10.643200874328613
    4. 'ints' → logprob: -12.830700874328613
    5. 'in' → logprob: -13.268200874328613
    6. 'def' → logprob: -13.330700874328613
    7. '(int' → logprob: -13.580700874328613
    8. 'main' → logprob: -13.705700874328613
    9. ' ' → logprob: -13.830700874328613
    10. 'split' → logprob: -13.955700874328613

Token 156: '_mod' (ID: 15325)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.4546027183532715
    2. '_max' → logprob: -1.5796027183532715
    3. '_next' → logprob: -2.0796027183532715
    4. '_sorted' → logprob: -2.7046027183532715
    5. '_array' → logprob: -2.9546027183532715
    6. '_count' → logprob: -3.9546027183532715
    7. '_indices' → logprob: -3.9546027183532715
    8. '_min' → logprob: -4.0796027183532715
    9. '_possible' → logprob: -4.0796027183532715
    10. '_bin' → logprob: -4.2046027183532715

Token 157: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.04126952961087227
    2. '_' → logprob: -4.166269302368164
    3. '_value' → logprob: -4.791269302368164
    4. '():
' → logprob: -5.541269302368164
    5. 'ulus' → logprob: -5.541269302368164
    6. '()' → logprob: -6.041269302368164
    7. '_val' → logprob: -6.916269302368164
    8. '(' → logprob: -7.166269302368164
    9. '_factor' → logprob: -7.291269302368164
    10. 'ULO' → logprob: -7.666269302368164

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006441685254685581
    2. ' return' → logprob: -7.500644207000732
    3. 'return' → logprob: -9.625643730163574
    4. '(' → logprob: -11.750643730163574
    5. '   ' → logprob: -12.375643730163574
    6. '	return' → logprob: -12.625643730163574
    7. '()' → logprob: -12.750643730163574
    8. 'def' → logprob: -13.750643730163574
    9. ':' → logprob: -13.875643730163574
    10. '       ' → logprob: -14.375643730163574

Token 159: ' global' (ID: 5466)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.41863828897476196
    2. ' return' → logprob: -1.1686382293701172
    3. '   ' → logprob: -3.543638229370117
    4. 'try' → logprob: -6.543638229370117
    5. ' try' → logprob: -8.168638229370117
    6. 'input' → logprob: -8.543638229370117
    7. ' input' → logprob: -8.918638229370117
    8. 'MOD' → logprob: -9.418638229370117
    9. ' MOD' → logprob: -9.668638229370117
    10. ' ' → logprob: -9.793638229370117

Token 160: ' mod' (ID: 1812)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.4485514163970947
    2. 'mod' → logprob: -1.0735514163970947
    3. ' MOD' → logprob: -4.198551177978516
    4. ' mod' → logprob: -5.823551177978516
    5. '_mod' → logprob: -7.198551177978516
    6. 'M' → logprob: -7.698551177978516
    7. '_MOD' → logprob: -7.948551177978516
    8. 'Mod' → logprob: -10.073551177978516
    9. 'm' → logprob: -10.698551177978516
    10. ' M' → logprob: -11.198551177978516

Token 161: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.33795931935310364
    2. '=' → logprob: -1.4629592895507812
    3. '<|end|>' → logprob: -4.462959289550781
    4. '
' → logprob: -4.587959289550781
    5. 'mod' → logprob: -4.587959289550781
    6. '()' → logprob: -5.462959289550781
    7. 'def' → logprob: -5.712959289550781
    8. ' =
' → logprob: -5.962959289550781
    9. '<|end|>' → logprob: -6.087959289550781
    10. '=
' → logprob: -6.212959289550781

Token 162: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9263839721679688
    2. ' =' → logprob: -0.9263839721679688
    3. '=' → logprob: -2.1763839721679688
    4. '
' → logprob: -3.8013839721679688
    5. 'mod' → logprob: -4.051383972167969
    6. '()' → logprob: -4.051383972167969
    7. '()
' → logprob: -4.426383972167969
    8. '    
' → logprob: -5.051383972167969
    9. ' 
' → logprob: -5.176383972167969
    10. '=
' → logprob: -5.301383972167969

Token 163: ' return' (ID: 622)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.14001548290252686
    2. '   ' → logprob: -2.3900156021118164
    3. ' mod' → logprob: -3.2650156021118164
    4. 'try' → logprob: -7.390015602111816
    5. 'return' (adapté à ' return') → logprob: -9.140015602111816
    6. ' try' → logprob: -10.015015602111816
    7. ' return' → logprob: -10.765015602111816
    8. '	mod' → logprob: -10.765015602111816
    9. 'import' → logprob: -11.140015602111816
    10. '(mod' → logprob: -14.515015602111816

Token 164: ' mod' (ID: 1812)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.21116262674331665
    2. '10' → logprob: -2.711162567138672
    3. ' ' → logprob: -2.836162567138672
    4. 'mod' → logprob: -2.836162567138672
    5. ' mod' → logprob: -5.086162567138672
    6. '1' → logprob: -9.211162567138672
    7. '(' → logprob: -9.336162567138672
    8. '(mod' → logprob: -9.336162567138672
    9. '998' → logprob: -9.836162567138672
    10. 'int' → logprob: -10.711162567138672

Token 165: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6743456721305847
    2. 'def' → logprob: -1.6743457317352295
    3. 'mod' → logprob: -1.7993457317352295
    4. '<|end|>' → logprob: -2.0493457317352295
    5. '

' → logprob: -5.29934549331665
    6. ' mod' → logprob: -7.17434549331665
    7. '  
' → logprob: -7.79934549331665
    8. '(mod' → logprob: -7.79934549331665
    9. '<|end|>' → logprob: -7.79934549331665
    10. ' 
' → logprob: -8.049345970153809

Token 166: 'def' (ID: 1314)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.1427636295557022
    2. 'def' → logprob: -2.017763614654541
    3. '<|end|>' → logprob: -10.8927640914917
    4. ' mod' → logprob: -11.1427640914917
    5. '#' → logprob: -11.5177640914917
    6. '    
' → logprob: -11.6427640914917
    7. '
' → logprob: -11.6427640914917
    8. '```' → logprob: -12.2677640914917
    9. '(mod' → logprob: -12.6427640914917
    10. '  
' → logprob: -12.7677640914917

Token 167: ' mod' (ID: 1812)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -1.5007108449935913
    2. ' main' → logprob: -1.5007108449935913
    3. 'mod' → logprob: -1.6257108449935913
    4. ' mod' → logprob: -2.000710964202881
    5. 'main' → logprob: -2.125710964202881
    6. 'set' → logprob: -2.375710964202881
    7. 'def' → logprob: -6.125710964202881
    8. 'solve' → logprob: -6.375710964202881
    9. ' solve' → logprob: -6.375710964202881
    10. 'pow' → logprob: -6.875710964202881

Token 168: 'add' (ID: 964)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47472554445266724
    2. '=' → logprob: -0.9747255444526672
    3. ' ' → logprob: -8.474725723266602
    4. ':' → logprob: -8.974725723266602
    5. 'def' → logprob: -9.724725723266602
    6. ',' → logprob: -9.724725723266602
    7. '=None' → logprob: -9.974725723266602
    8. '   ' → logprob: -10.599725723266602
    9. '_' → logprob: -11.099725723266602
    10. ' :' → logprob: -11.349725723266602

Token 169: '(x' (ID: 4061)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.3133057951927185
    2. '(' → logprob: -1.3133058547973633
    3. '(x' → logprob: -10.563305854797363
    4. ' (' → logprob: -11.313305854797363
    5. '(
' → logprob: -12.813305854797363
    6. '(A' → logprob: -13.563305854797363
    7. '(n' → logprob: -14.813305854797363
    8. '(lhs' → logprob: -14.813305854797363
    9. '(i' → logprob: -15.438305854797363
    10. '(

' → logprob: -15.563305854797363

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.388769103679806e-05
    2. ' ,' → logprob: -9.500093460083008
    3. ',y' → logprob: -11.000093460083008
    4. ',
' → logprob: -14.625093460083008
    5. ',x' → logprob: -14.625093460083008
    6. ',a' → logprob: -15.000093460083008
    7. ')' → logprob: -15.125093460083008
    8. '):' → logprob: -15.375093460083008
    9. 'y' → logprob: -15.750093460083008
    10. 'a' → logprob: -16.125093460083008

Token 171: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07889022678136826
    2. ' y' → logprob: -2.578890323638916
    3. ' ' → logprob: -15.828889846801758
    4. '	y' → logprob: -15.953889846801758
    5. ',y' → logprob: -16.453889846801758
    6. '   ' → logprob: -16.578889846801758
    7. '  ' → logprob: -17.078889846801758
    8. '    ' → logprob: -17.453889846801758
    9. ')' → logprob: -17.828889846801758
    10. ''y' → logprob: -17.828889846801758

Token 172: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006882481975480914
    2. ')' → logprob: -7.875688076019287
    3. '):
' → logprob: -8.250688552856445
    4. ',' → logprob: -10.375688552856445
    5. ' ):' → logprob: -11.250688552856445
    6. ':' → logprob: -13.250688552856445
    7. '):

' → logprob: -14.625688552856445
    8. '):
' → logprob: -14.750688552856445
    9. '),' → logprob: -16.750688552856445
    10. '}:' → logprob: -16.875688552856445

Token 173: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7968149781227112
    2. '(' → logprob: -1.6718149185180664
    3. ' (' → logprob: -1.6718149185180664
    4. ' return' → logprob: -2.2968149185180664
    5. '(x' → logprob: -3.1718149185180664
    6. '   ' → logprob: -4.796814918518066
    7. ':
' → logprob: -4.796814918518066
    8. 'return' → logprob: -4.796814918518066
    9. ':return' → logprob: -6.171814918518066
    10. '):' → logprob: -7.046814918518066

Token 174: ' m' (ID: 284)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.1276522874832153
    2. '(x' → logprob: -1.1276522874832153
    3. ' (' → logprob: -1.6276522874832153
    4. ' return' → logprob: -1.8776522874832153
    5. '(return' → logprob: -6.002652168273926
    6. '(' → logprob: -7.752652168273926
    7. '   ' → logprob: -8.752652168273926
    8. ' ' → logprob: -12.627652168273926
    9. '((' → logprob: -12.752652168273926
    10. '	return' → logprob: -13.002652168273926

Token 175: ' =' (ID: 314)
  Prédit: 'od'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'od' → logprob: -0.010574573650956154
    2. ' =' → logprob: -4.7605743408203125
    3. '=' → logprob: -6.3855743408203125
    4. 'o' → logprob: -9.010574340820312
    5. 'odu' → logprob: -9.635574340820312
    6. ',' → logprob: -10.760574340820312
    7. 'odule' → logprob: -10.885574340820312
    8. 'odel' → logprob: -11.385574340820312
    9. 'ods' → logprob: -12.135574340820312
    10. 'd' → logprob: -12.135574340820312

Token 176: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.640451967716217
    2. ' get' → logprob: -1.0154519081115723
    3. 'mod' → logprob: -2.5154519081115723
    4. ' mod' → logprob: -3.5154519081115723
    5. '(get' → logprob: -9.26545238494873
    6. '(mod' → logprob: -10.39045238494873
    7. ' (' → logprob: -11.64045238494873
    8. '	get' → logprob: -13.39045238494873
    9. '	mod' → logprob: -13.51545238494873
    10. 'x' → logprob: -13.89045238494873

Token 177: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.0009551709517836571
    2. 'od' → logprob: -7.625955104827881
    3. 'mod' → logprob: -7.750955104827881
    4. '()' → logprob: -10.500955581665039
    5. '(mod' → logprob: -13.375955581665039
    6. 'ods' → logprob: -13.375955581665039
    7. 'omod' → logprob: -13.625955581665039
    8. '_' → logprob: -13.875955581665039
    9. '_MOD' → logprob: -14.500955581665039
    10. '	mod' → logprob: -14.875955581665039

Token 178: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.027831850573420525
    2. '()' → logprob: -3.902831792831421
    3. ')
' → logprob: -5.52783203125
    4. '
' → logprob: -6.27783203125
    5. 'def' → logprob: -6.90283203125
    6. ')' → logprob: -8.52783203125
    7. 'mod' → logprob: -9.65283203125
    8. 'return' → logprob: -9.77783203125
    9. '()
' → logprob: -10.40283203125
    10. '   ' → logprob: -10.52783203125

Token 179: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.027787793427705765
    2. '   ' → logprob: -4.277787685394287
    3. ' 
' → logprob: -5.277787685394287
    4. ' return' → logprob: -5.402787685394287
    5. 'return' → logprob: -6.902787685394287
    6. '%' → logprob: -7.152787685394287
    7. ' ' → logprob: -7.652787685394287
    8. '  
' → logprob: -7.652787685394287
    9. ' %' → logprob: -7.902787685394287
    10. ')' → logprob: -8.777788162231445

Token 180: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.25961893796920776
    2. ' return' → logprob: -1.5096189975738525
    3. '   ' → logprob: -4.884618759155273
    4. '
' → logprob: -9.634618759155273
    5. 'result' → logprob: -11.134618759155273
    6. '	return' → logprob: -11.634618759155273
    7. ' (' → logprob: -12.384618759155273
    8. ' ' → logprob: -14.134618759155273
    9. '(return' → logprob: -14.384618759155273
    10. ' 
' → logprob: -14.634618759155273

Token 181: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.10021896660327911
    2. ' (' → logprob: -2.3502190113067627
    3. '(' → logprob: -11.475218772888184
    4. '((' → logprob: -13.350218772888184
    5. '(X' → logprob: -15.600218772888184
    6. '(a' → logprob: -17.4752197265625
    7. '(xs' → logprob: -17.4752197265625
    8. ' ' → logprob: -17.9752197265625
    9. '(abs' → logprob: -18.1002197265625
    10. '(int' → logprob: -18.2252197265625

Token 182: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00020866614067927003
    2. '(x' → logprob: -9.000208854675293
    3. ' x' → logprob: -9.375208854675293
    4. ' (' → logprob: -15.125208854675293
    5. '(' → logprob: -18.125207901000977
    6. '	x' → logprob: -18.250207901000977
    7. ')x' → logprob: -18.625207901000977
    8. '   ' → logprob: -18.750207901000977
    9. '_x' → logprob: -20.125207901000977
    10. '
' → logprob: -21.000207901000977

Token 183: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07947240024805069
    2. '+' → logprob: -2.579472303390503
    3. '+y' → logprob: -7.454472541809082
    4. '+x' → logprob: -13.579472541809082
    5. '+m' → logprob: -13.579472541809082
    6. ' ' → logprob: -15.329472541809082
    7. ' y' → logprob: -15.579472541809082
    8. ' ' → logprob: -15.954472541809082
    9. ' +
' → logprob: -16.079471588134766
    10. ' plus' → logprob: -16.204471588134766

Token 184: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.2519298195838928
    2. 'y' → logprob: -1.501929759979248
    3. ')' → logprob: -14.751930236816406
    4. ' ' → logprob: -16.501930236816406
    5. '	y' → logprob: -17.001930236816406
    6. ''y' → logprob: -17.251930236816406
    7. ')y' → logprob: -17.376930236816406
    8. ' (' → logprob: -17.501930236816406
    9. '   ' → logprob: -17.501930236816406
    10. '(y' → logprob: -17.751930236816406

Token 185: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9266199160483666e-05
    2. ')%' → logprob: -11.250019073486328
    3. ' )' → logprob: -12.000019073486328
    4. '%' → logprob: -18.625019073486328
    5. ')
' → logprob: -18.625019073486328
    6. ')m' → logprob: -19.125019073486328
    7. '）' → logprob: -20.125019073486328
    8. ')

' → logprob: -20.625019073486328
    9. '),' → logprob: -21.125019073486328
    10. ')#' → logprob: -21.375019073486328

Token 186: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.31329602003097534
    2. '%' → logprob: -1.3132960796356201
    3. '%m' → logprob: -10.3132963180542
    4. ')' → logprob: -15.1882963180542
    5. '%c' → logprob: -15.6882963180542
    6. '%x' → logprob: -16.188295364379883
    7. '%d' → logprob: -16.188295364379883
    8. ' ' → logprob: -16.188295364379883
    9. '%s' → logprob: -16.313295364379883
    10. 'mod' → logprob: -16.438295364379883

Token 187: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.12692810595035553
    2. ' m' → logprob: -2.1269280910491943
    3. 'mod' → logprob: -16.876928329467773
    4. ' ' → logprob: -17.126928329467773
    5. '	m' → logprob: -18.251928329467773
    6. '(m' → logprob: -18.751928329467773
    7. ' м' → logprob: -19.001928329467773
    8. ' ' → logprob: -19.876928329467773
    9. '   ' → logprob: -20.626928329467773
    10. '```' → logprob: -21.126928329467773

Token 188: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 189: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.022265348583459854
    2. '
' → logprob: -3.8972654342651367
    3. '

' → logprob: -6.397265434265137
    4. ' def' → logprob: -10.522265434265137
    5. '<|end|>' → logprob: -12.147265434265137
    6. '```' → logprob: -12.397265434265137
    7. '  
' → logprob: -12.647265434265137
    8. '
' → logprob: -13.522265434265137
    9. 'd' → logprob: -13.522265434265137
    10. ' 

' → logprob: -13.772265434265137

Token 190: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0002334568416699767
    2. ' mod' → logprob: -8.37523365020752
    3. 'mods' → logprob: -13.75023365020752
    4. '	mod' → logprob: -13.87523365020752
    5. 'def' → logprob: -14.75023365020752
    6. '(mod' → logprob: -16.500232696533203
    7. 'm' → logprob: -16.625232696533203
    8. 'Mod' → logprob: -17.125232696533203
    9. '_mod' → logprob: -17.125232696533203
    10. 'omod' → logprob: -17.250232696533203

Token 191: 'ml' (ID: 1560)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.02649814821779728
    2. 'mul' → logprob: -3.7764980792999268
    3. '_sub' → logprob: -6.401498317718506
    4. 'subtract' → logprob: -6.651498317718506
    5. 'mult' → logprob: -9.151497840881348
    6. '_mul' → logprob: -9.401497840881348
    7. '(sub' → logprob: -10.401497840881348
    8. 'add' → logprob: -10.526497840881348
    9. 'multiply' → logprob: -10.651497840881348
    10. ' sub' → logprob: -11.526497840881348

Token 192: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.020196489989757538
    2. 'def' → logprob: -4.645196437835693
    3. 'tip' → logprob: -5.770196437835693
    4. 'y' → logprob: -6.020196437835693
    5. 'py' → logprob: -6.645196437835693
    6. 'ip' → logprob: -6.770196437835693
    7. 'ul' → logprob: -7.145196437835693
    8. '```' → logprob: -7.645196437835693
    9. 'ultiply' → logprob: -8.645196914672852
    10. 'us' → logprob: -8.770196914672852

Token 193: '_product' (ID: 21247)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.005266245920211077
    2. 'ip' → logprob: -5.255266189575195
    3. 'p' → logprob: -10.880266189575195
    4. ' (' → logprob: -12.005266189575195
    5. '(' → logprob: -12.380266189575195
    6. '(y' → logprob: -13.880266189575195
    7. 'pl' → logprob: -14.505266189575195
    8. 'ipl' → logprob: -14.630266189575195
    9. 'def' → logprob: -15.380266189575195
    10. '(a' → logprob: -15.630266189575195

Token 194: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.11366961151361465
    2. '(' → logprob: -2.2386696338653564
    3. '(*' → logprob: -8.238669395446777
    4. '(a' → logprob: -8.363669395446777
    5. ' (' → logprob: -8.488669395446777
    6. 'ip' → logprob: -10.363669395446777
    7. 'def' → logprob: -10.613669395446777
    8. '*(' → logprob: -10.988669395446777
    9. '(p' → logprob: -11.613669395446777
    10. '(
' → logprob: -11.613669395446777

Token 195: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0056418548338115215
    2. ',y' → logprob: -5.505641937255859
    3. ' ,' → logprob: -6.505641937255859
    4. ',x' → logprob: -11.25564193725586
    5. ')' → logprob: -11.50564193725586
    6. ',n' → logprob: -12.25564193725586
    7. ',s' → logprob: -12.38064193725586
    8. '_,' → logprob: -12.63064193725586
    9. '(' → logprob: -12.75564193725586
    10. 's' → logprob: -12.75564193725586

Token 196: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.048608142882585526
    2. ' y' → logprob: -3.0486080646514893
    3. '*y' → logprob: -11.79860782623291
    4. ' ' → logprob: -12.67360782623291
    5. '<|end|>' → logprob: -13.04860782623291
    6. '...' → logprob: -13.67360782623291
    7. 'def' → logprob: -13.67360782623291
    8. '   ' → logprob: -13.67360782623291
    9. '*' → logprob: -14.42360782623291
    10. '  ' → logprob: -14.67360782623291

Token 197: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008118526078760624
    2. '):
' → logprob: -5.008118629455566
    3. ')' → logprob: -6.633118629455566
    4. ' ):' → logprob: -10.258118629455566
    5. '):
' → logprob: -10.383118629455566
    6. ',' → logprob: -11.633118629455566
    7. '):

' → logprob: -11.883118629455566
    8. ':' → logprob: -13.758118629455566
    9. 's' → logprob: -13.883118629455566
    10. 'def' → logprob: -15.008118629455566

Token 198: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06651771813631058
    2. '(x' → logprob: -2.9415178298950195
    3. '   ' → logprob: -5.3165178298950195
    4. ':
' → logprob: -6.1915178298950195
    5. 'def' → logprob: -6.3165178298950195
    6. '(' → logprob: -7.0665178298950195
    7. '):' → logprob: -7.3165178298950195
    8. ',' → logprob: -7.6915178298950195
    9. ' (' → logprob: -7.9415178298950195
    10. ' :' → logprob: -8.56651782989502

Token 199: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5325920581817627
    2. 'm' → logprob: -2.0325920581817627
    3. ' m' → logprob: -2.0325920581817627
    4. 'return' (adapté à ' return') → logprob: -2.9075920581817627
    5. 'def' → logprob: -3.2825920581817627
    6. '   ' → logprob: -3.4075920581817627
    7. ' (' → logprob: -4.407591819763184
    8. ' def' → logprob: -4.782591819763184
    9. '(x' → logprob: -5.532591819763184
    10. '(' → logprob: -8.157591819763184

Token 200: ' x' (ID: 1215)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.01417373027652502
    2. ' (' → logprob: -4.26417350769043
    3. '(mod' → logprob: -11.88917350769043
    4. 'mod' → logprob: -13.76417350769043
    5. '((' → logprob: -13.76417350769043
    6. '(' → logprob: -14.13917350769043
    7. '(int' → logprob: -15.51417350769043
    8. '
' → logprob: -16.26417350769043
    9. 'x' → logprob: -16.26417350769043
    10. ' ' → logprob: -16.51417350769043

Token 201: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.202782541513443
    2. '*' → logprob: -1.7027825117111206
    3. '*y' → logprob: -6.95278263092041
    4. '%' → logprob: -8.20278263092041
    5. ' %' → logprob: -8.95278263092041
    6. ' ' → logprob: -12.07778263092041
    7. '*x' → logprob: -13.82778263092041
    8. ' ' → logprob: -14.20278263092041
    9. '*m' → logprob: -14.20278263092041
    10. '*object' → logprob: -15.57778263092041

Token 202: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3868737816810608
    2. ' y' → logprob: -1.136873722076416
    3. '(y' → logprob: -13.511874198913574
    4. ' ' → logprob: -14.761874198913574
    5. '	y' → logprob: -15.011874198913574
    6. ' (' → logprob: -15.636874198913574
    7. 'mod' → logprob: -16.261873245239258
    8. '   ' → logprob: -16.386873245239258
    9. ' mod' → logprob: -16.761873245239258
    10. '*y' → logprob: -16.886873245239258

Token 203: '

' (ID: 279)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.06997600197792053
    2. '%' → logprob: -2.6949760913848877
    3. '<|end|>' → logprob: -10.819975852966309
    4. ')' → logprob: -11.944975852966309
    5. ' mod' → logprob: -12.819975852966309
    6. ' ' → logprob: -12.819975852966309
    7. 'mod' → logprob: -13.444975852966309
    8. '%n' → logprob: -13.694975852966309
    9. ' %=' → logprob: -13.819975852966309
    10. 'def' → logprob: -13.819975852966309

Token 204: 'def' (ID: 1314)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.38971462845802307
    2. '%' → logprob: -1.1397145986557007
    3. 'def' → logprob: -7.13971471786499
    4. '<|end|>' → logprob: -7.26471471786499
    5. ' mod' → logprob: -7.63971471786499
    6. ')' → logprob: -7.88971471786499
    7. 'mod' → logprob: -8.764714241027832
    8. ' ' → logprob: -9.514714241027832
    9. ')%' → logprob: -9.764714241027832
    10. '%n' → logprob: -10.514714241027832

Token 205: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.041599493473768234
    2. ' mod' → logprob: -3.2915995121002197
    3. 'def' → logprob: -5.791599273681641
    4. 'get' → logprob: -8.54159927368164
    5. '(x' → logprob: -8.91659927368164
    6. '_mod' → logprob: -9.29159927368164
    7. '(mod' → logprob: -10.54159927368164
    8. ' get' → logprob: -11.54159927368164
    9. '(' → logprob: -12.04159927368164
    10. ' def' → logprob: -12.16659927368164

Token 206: 'ml' (ID: 1560)
  Prédit: 'ml'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ml' → logprob: -0.007815763354301453
    2. 'mul' → logprob: -5.632815837860107
    3. 'multiply' → logprob: -6.382815837860107
    4. '_mul' → logprob: -7.382815837860107
    5. '_' → logprob: -7.632815837860107
    6. 'mult' → logprob: -7.757815837860107
    7. '_ml' → logprob: -8.38281536102295
    8. '_m' → logprob: -8.75781536102295
    9. '_mult' → logprob: -9.00781536102295
    10. '(' → logprob: -9.00781536102295

Token 207: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -6.754368223482743e-05
    2. '_product' → logprob: -11.750067710876465
    3. 'tp' → logprob: -12.000067710876465
    4. 'm' → logprob: -12.000067710876465
    5. 'tml' → logprob: -12.250067710876465
    6. '```' → logprob: -12.250067710876465
    7. 'т' → logprob: -12.375067710876465
    8. 'p' → logprob: -12.500067710876465
    9. '_mul' → logprob: -12.625067710876465
    10. '_mult' → logprob: -12.750067710876465

Token 208: '_mod' (ID: 15325)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.08457813411951065
    2. '_product' → logprob: -2.584578037261963
    3. '(' → logprob: -5.709578037261963
    4. '_' → logprob: -7.209578037261963
    5. '_mod' → logprob: -7.834578037261963
    6. '(a' → logprob: -7.834578037261963
    7. '_add' → logprob: -8.584578514099121
    8. '_(' → logprob: -8.834578514099121
    9. 'product' → logprob: -8.959578514099121
    10. ' (' → logprob: -8.959578514099121

Token 209: 'ulo' (ID: 5953)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00020210994989611208
    2. 'def' → logprob: -9.625202178955078
    3. '(' → logprob: -10.375202178955078
    4. 'if' → logprob: -10.875202178955078
    5. '_product' → logprob: -11.375202178955078
    6. 'ulo' → logprob: -11.500202178955078
    7. '=lambda' → logprob: -11.875202178955078
    8. 'ulus' → logprob: -12.000202178955078
    9. 'ul' → logprob: -12.125202178955078
    10. 'product' → logprob: -12.125202178955078

Token 210: '(prod' (ID: 129733)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0015761636896058917
    2. '(' → logprob: -7.001575946807861
    3. ' (' → logprob: -7.876575946807861
    4. 'def' → logprob: -8.25157642364502
    5. '(a' → logprob: -12.37657642364502
    6. '_mod' → logprob: -13.12657642364502
    7. 'import' → logprob: -13.62657642364502
    8. ':' → logprob: -13.75157642364502
    9. '_ml' → logprob: -13.87657642364502
    10. '_' → logprob: -13.87657642364502

Token 211: '):
' (ID: 1883)
  Prédit: 'uct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uct' → logprob: -0.026540279388427734
    2. ')' → logprob: -3.7765402793884277
    3. '):' → logprob: -6.526540279388428
    4. '(' → logprob: -6.776540279388428
    5. 'ct' → logprob: -8.401540756225586
    6. '(x' → logprob: -9.276540756225586
    7. 'u' → logprob: -9.651540756225586
    8. ':' → logprob: -9.776540756225586
    9. '(product' → logprob: -10.276540756225586
    10. '=' → logprob: -10.401540756225586

Token 212: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28314730525016785
    2. ':' → logprob: -1.5331473350524902
    3. ':
' → logprob: -3.6581473350524902
    4. ' =' → logprob: -6.28314733505249
    5. 'def' → logprob: -6.65814733505249
    6. '=' → logprob: -6.78314733505249
    7. ' return' → logprob: -8.908146858215332
    8. ' :' → logprob: -9.408146858215332
    9. ',' → logprob: -9.783146858215332
    10. '():' → logprob: -9.908146858215332

Token 213: ' global' (ID: 5466)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3559146523475647
    2. 'return' → logprob: -1.48091459274292
    3. '   ' → logprob: -2.73091459274292
    4. ' prod' → logprob: -6.10591459274292
    5. ' global' → logprob: -6.23091459274292
    6. 'global' (adapté à ' global') → logprob: -6.60591459274292
    7. 'prod' → logprob: -7.73091459274292
    8. ' m' → logprob: -7.98091459274292
    9. ' mod' → logprob: -8.355915069580078
    10. 'mod' → logprob: -8.980915069580078

Token 214: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.0031797364354133606
    2. 'mod' → logprob: -5.753179550170898
    3. '	mod' → logprob: -14.003179550170898
    4. ' prod' → logprob: -14.503179550170898
    5. '_mod' → logprob: -14.753179550170898
    6. '(mod' → logprob: -16.2531795501709
    7. ' ' → logprob: -16.5031795501709
    8. 'prod' → logprob: -16.8781795501709
    9. ' product' → logprob: -17.0031795501709
    10. ' ' → logprob: -17.8781795501709

Token 215: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03320598602294922
    2. '
' → logprob: -3.533205986022949
    3. 'return' → logprob: -6.283205986022949
    4. 'mod' → logprob: -7.533205986022949
    5. ' return' → logprob: -8.15820598602295
    6. '=' → logprob: -8.15820598602295
    7. ' =' → logprob: -9.40820598602295
    8. ' mod' → logprob: -9.53320598602295
    9. '    
' → logprob: -9.65820598602295
    10. ',' → logprob: -10.15820598602295

Token 216: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016882737400010228
    2. '
' → logprob: -6.751688480377197
    3. ' return' → logprob: -8.376688003540039
    4. 'return' → logprob: -8.376688003540039
    5. 'mod' → logprob: -10.876688003540039
    6. ' mod' → logprob: -11.001688003540039
    7. '    
' → logprob: -12.251688003540039
    8. '	return' → logprob: -12.376688003540039
    9. ' =' → logprob: -13.001688003540039
    10. ',' → logprob: -13.501688003540039

Token 217: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06049312278628349
    2. ' return' → logprob: -3.310493230819702
    3. 'return' (adapté à ' return') → logprob: -3.810493230819702
    4. ' mod' → logprob: -10.685493469238281
    5. 'mod' → logprob: -10.810493469238281
    6. '	return' → logprob: -11.310493469238281
    7. '
' → logprob: -13.310493469238281
    8. 'def' → logprob: -13.560493469238281
    9. ' ' → logprob: -14.185493469238281
    10. 'prod' → logprob: -14.185493469238281

Token 218: ' prod' (ID: 10207)
  Prédit: ' prod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prod' → logprob: -0.2014472484588623
    2. 'prod' → logprob: -1.7014472484588623
    3. '(prod' → logprob: -10.326447486877441
    4. ' product' → logprob: -14.451447486877441
    5. 'product' → logprob: -15.326447486877441
    6. '.prod' → logprob: -15.701447486877441
    7. ' ' → logprob: -16.576446533203125
    8. 'pro' → logprob: -16.701446533203125
    9. ' (' → logprob: -16.951446533203125
    10. ' mod' → logprob: -17.201446533203125

Token 219: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.16022473573684692
    2. '%' → logprob: -1.9102246761322021
    3. ' ' → logprob: -15.160224914550781
    4. ' ' → logprob: -17.03522491455078
    5. '%s' → logprob: -17.28522491455078
    6. '%n' → logprob: -17.41022491455078
    7. ' %=' → logprob: -17.41022491455078
    8. 'mod' → logprob: -17.53522491455078
    9. '%i' → logprob: -17.53522491455078
    10. '%x' → logprob: -17.78522491455078

Token 220: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.10020699352025986
    2. ' mod' → logprob: -2.3502070903778076
    3. '(mod' → logprob: -15.850207328796387
    4. '	mod' → logprob: -16.47520637512207
    5. 'm' → logprob: -16.60020637512207
    6. ' ' → logprob: -17.72520637512207
    7. ' m' → logprob: -18.60020637512207
    8. ' ' → logprob: -18.72520637512207
    9. ' мод' → logprob: -20.10020637512207
    10. '_mod' → logprob: -20.22520637512207

Token 221: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00081796565791592
    2. '
' → logprob: -8.250818252563477
    3. '<|end|>' → logprob: -8.500818252563477
    4. ' def' → logprob: -9.250818252563477
    5. '*' → logprob: -9.375818252563477
    6. '_def' → logprob: -9.750818252563477
    7. '_' → logprob: -10.250818252563477
    8. '\' → logprob: -11.125818252563477
    9. '#' → logprob: -11.250818252563477
    10. '```' → logprob: -11.625818252563477

Token 222: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0020799553021788597
    2. 'd' → logprob: -6.627079963684082
    3. '
' → logprob: -8.002079963684082
    4. '*' → logprob: -8.752079963684082
    5. '_' → logprob: -9.502079963684082
    6. '\' → logprob: -9.752079963684082
    7. '#' → logprob: -10.877079963684082
    8. ' def' → logprob: -11.002079963684082
    9. '_def' → logprob: -11.127079963684082
    10. '<|end|>' → logprob: -11.502079963684082

Token 223: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.6941180229187012
    2. 'mod' → logprob: -0.6941180229187012
    3. 'def' → logprob: -7.319118022918701
    4. ' def' → logprob: -9.94411849975586
    5. 'multiply' → logprob: -10.56911849975586
    6. ' modular' → logprob: -10.69411849975586
    7. 'mult' → logprob: -10.75661849975586
    8. 'main' → logprob: -11.06911849975586
    9. ' main' → logprob: -11.25661849975586
    10. ' mul' → logprob: -11.31911849975586

Token 224: 'ml' (ID: 1560)
  Prédit: 'ml'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ml' → logprob: -0.006244802847504616
    2. 'mul' → logprob: -5.256244659423828
    3. 'mult' → logprob: -7.506244659423828
    4. 'multiply' → logprob: -8.131244659423828
    5. '_mul' → logprob: -9.256244659423828
    6. '_mult' → logprob: -10.631244659423828
    7. 'add' → logprob: -11.006244659423828
    8. '_m' → logprob: -11.131244659423828
    9. 'mlu' → logprob: -11.881244659423828
    10. '_ml' → logprob: -13.381244659423828

Token 225: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.2233183042553719e-05
    2. 'tml' → logprob: -12.625012397766113
    3. 'т' → logprob: -13.500012397766113
    4. '_t' → logprob: -13.750012397766113
    5. 'tpl' → logprob: -13.750012397766113
    6. 'tl' → logprob: -14.250012397766113
    7. '```' → logprob: -14.750012397766113
    8. 'm' → logprob: -14.875012397766113
    9. 'tp' → logprob: -14.875012397766113
    10. 'tm' → logprob: -15.000012397766113

Token 226: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00642024353146553
    2. '(' → logprob: -5.881420135498047
    3. '(a' → logprob: -6.131420135498047
    4. '_(' → logprob: -8.006420135498047
    5. '_' → logprob: -8.131420135498047
    6. ' (' → logprob: -8.506420135498047
    7. '_mul' → logprob: -8.631420135498047
    8. '_product' → logprob: -9.381420135498047
    9. '_mod' → logprob: -9.631420135498047
    10. '_mult' → logprob: -9.756420135498047

Token 227: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005330163054168224
    2. ' ,' → logprob: -5.2553300857543945
    3. ',y' → logprob: -9.255330085754395
    4. '_,' → logprob: -15.755330085754395
    5. ' ' → logprob: -16.00533103942871
    6. ',
' → logprob: -16.13033103942871
    7. ',x' → logprob: -16.25533103942871
    8. ' y' → logprob: -16.63033103942871
    9. ')' → logprob: -17.38033103942871
    10. '*,' → logprob: -17.75533103942871

Token 228: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.16022534668445587
    2. 'y' → logprob: -1.9102253913879395
    3. '	y' → logprob: -14.410224914550781
    4. ' ' → logprob: -15.285224914550781
    5. ')' → logprob: -16.03522491455078
    6. '<|end|>' → logprob: -16.78522491455078
    7. ')y' → logprob: -17.03522491455078
    8. ',' → logprob: -17.16022491455078
    9. ' ' → logprob: -17.28522491455078
    10. ',y' → logprob: -17.41022491455078

Token 229: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00010700009443098679
    2. '):
' → logprob: -9.250106811523438
    3. ')' → logprob: -11.875106811523438
    4. ' ):' → logprob: -12.625106811523438
    5. ',' → logprob: -15.625106811523438
    6. '):
' → logprob: -15.875106811523438
    7. ':' → logprob: -16.375106811523438
    8. '   ' → logprob: -16.500106811523438
    9. '):

' → logprob: -17.750106811523438
    10. '}:' → logprob: -18.375106811523438

Token 230: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07604469358921051
    2. ':' → logprob: -2.701044797897339
    3. ' return' → logprob: -5.45104455947876
    4. ':
' → logprob: -7.57604455947876
    5. ' mod' → logprob: -8.326045036315918
    6. '(x' → logprob: -8.826045036315918
    7. '):' → logprob: -8.826045036315918
    8. ' x' → logprob: -8.951045036315918
    9. ' (' → logprob: -9.326045036315918
    10. ' m' → logprob: -9.451045036315918

Token 231: ' prod' (ID: 10207)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.1029159426689148
    2. ' mod' → logprob: -2.3529160022735596
    3. '(mod' → logprob: -6.6029157638549805
    4. '   ' → logprob: -7.1029157638549805
    5. '(x' → logprob: -8.22791576385498
    6. 'get' → logprob: -9.35291576385498
    7. ' (' → logprob: -9.72791576385498
    8. 'x' → logprob: -10.47791576385498
    9. 'return' → logprob: -10.72791576385498
    10. ' get' → logprob: -11.35291576385498

Token 232: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033647309988737106
    2. '=' → logprob: -3.408647298812866
    3. ',' → logprob: -13.783647537231445
    4. '_' → logprob: -15.908647537231445
    5. ')' → logprob: -16.158647537231445
    6. ' ' → logprob: -16.283647537231445
    7. ' =
' → logprob: -16.783647537231445
    8. ' ' → logprob: -16.908647537231445
    9. '   ' → logprob: -17.158647537231445
    10. '  ' → logprob: -17.408647537231445

Token 233: ' mod' (ID: 1812)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2332863062620163
    2. 'mod' → logprob: -1.9832862615585327
    3. ' x' → logprob: -2.7332863807678223
    4. ' mod' → logprob: -5.233286380767822
    5. '(x' → logprob: -9.233285903930664
    6. '(mod' → logprob: -11.733285903930664
    7. ' ' → logprob: -12.858285903930664
    8. '(' → logprob: -12.858285903930664
    9. ' (' → logprob: -13.108285903930664
    10. '   ' → logprob: -13.983285903930664

Token 234: 'ml' (ID: 1560)
  Prédit: 'ml'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ml' → logprob: -2.8325677703833207e-05
    2. '*' → logprob: -11.250028610229492
    3. 'prod' → logprob: -11.875028610229492
    4. 'x' → logprob: -12.375028610229492
    5. ' *' → logprob: -14.125028610229492
    6. ' ml' → logprob: -14.125028610229492
    7. '*x' → logprob: -14.125028610229492
    8. '_product' → logprob: -14.875028610229492
    9. 'mul' → logprob: -14.875028610229492
    10. '(x' → logprob: -15.500028610229492

Token 235: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.4498052223643754e-05
    2. 'т' → logprob: -12.125014305114746
    3. '_t' → logprob: -13.750014305114746
    4. '   ' → logprob: -14.500014305114746
    5. 'tpl' → logprob: -14.500014305114746
    6. '```' → logprob: -14.500014305114746
    7. ' t' → logprob: -14.625014305114746
    8. 'tp' → logprob: -14.750014305114746
    9. '_product' → logprob: -14.875014305114746
    10. 'mult' → logprob: -15.000014305114746

Token 236: '_product' (ID: 21247)
  Prédit: '_product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_product' → logprob: -6.825890159234405e-05
    2. '(x' → logprob: -9.875068664550781
    3. '_prod' → logprob: -11.500068664550781
    4. 'product' → logprob: -12.375068664550781
    5. '_' → logprob: -13.875068664550781
    6. 'x' → logprob: -14.625068664550781
    7. 'Product' → logprob: -15.250068664550781
    8. '_pro' → logprob: -15.625068664550781
    9. '_products' → logprob: -15.625068664550781
    10. ' product' → logprob: -16.50006866455078

Token 237: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00020509003661572933
    2. '(' → logprob: -8.500205039978027
    3. ' (' → logprob: -13.625205039978027
    4. 'x' → logprob: -15.125205039978027
    5. '(
' → logprob: -15.750205039978027
    6. ' ' → logprob: -19.500205993652344
    7. ')' → logprob: -20.750205993652344
    8. ' x' → logprob: -21.000205993652344
    9. ',' → logprob: -21.625205993652344
    10. '((' → logprob: -22.250205993652344

Token 238: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003206592286005616
    2. ' ,' → logprob: -5.753206729888916
    3. ',y' → logprob: -10.503206253051758
    4. '   ' → logprob: -14.378206253051758
    5. ',
' → logprob: -14.878206253051758
    6. ' y' → logprob: -15.628206253051758
    7. 'y' → logprob: -15.753206253051758
    8. ' ' → logprob: -16.253206253051758
    9. '_,' → logprob: -16.878206253051758
    10. ')' → logprob: -17.128206253051758

Token 239: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.16022524237632751
    2. ' y' → logprob: -1.91022527217865
    3. '   ' → logprob: -14.785224914550781
    4. ' ' → logprob: -15.410224914550781
    5. '	y' → logprob: -16.03522491455078
    6. '    ' → logprob: -16.53522491455078
    7. ')y' → logprob: -16.53522491455078
    8. ')' → logprob: -16.66022491455078
    9. '(y' → logprob: -17.28522491455078
    10. '  ' → logprob: -17.78522491455078

Token 240: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1002560630440712
    2. ')
' → logprob: -2.3502559661865234
    3. '   ' → logprob: -10.100255966186523
    4. ')
' → logprob: -12.350255966186523
    5. ' )' → logprob: -13.350255966186523
    6. ' )
' → logprob: -13.475255966186523
    7. ')

' → logprob: -14.225255966186523
    8. ')return' → logprob: -15.475255966186523
    9. ',' → logprob: -16.725255966186523
    10. ' ' → logprob: -17.100255966186523

Token 241: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8737648725509644
    2. ' return' → logprob: -0.8737648725509644
    3. 'return' → logprob: -2.248764991760254
    4. '
' → logprob: -2.873764991760254
    5. '	return' → logprob: -6.748764991760254
    6. '<|end|>' → logprob: -7.123764991760254
    7. '    
' → logprob: -7.873764991760254
    8. ' 
' → logprob: -8.498764991760254
    9. ' ' → logprob: -8.748764991760254
    10. ')' → logprob: -9.123764991760254

Token 242: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02900443784892559
    2. ' return' → logprob: -4.0290045738220215
    3. '   ' → logprob: -4.5290045738220215
    4. '	return' → logprob: -13.279004096984863
    5. 'mod' → logprob: -14.029004096984863
    6. '
' → logprob: -14.154004096984863
    7. ' ' → logprob: -14.154004096984863
    8. '  ' → logprob: -15.154004096984863
    9. 'result' → logprob: -17.52900505065918
    10. '```' → logprob: -17.90400505065918

Token 243: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.16022422909736633
    2. ' mod' → logprob: -1.910224199295044
    3. '(mod' → logprob: -17.16022491455078
    4. '	mod' → logprob: -17.41022491455078
    5. '_mod' → logprob: -19.91022491455078
    6. '   ' → logprob: -20.78522491455078
    7. ' modul' → logprob: -21.16022491455078
    8. ' ' → logprob: -21.28522491455078
    9. '.mod' → logprob: -21.66022491455078
    10. ' мод' → logprob: -22.16022491455078

Token 244: 'ml' (ID: 1560)
  Prédit: 'ml'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ml' → logprob: -0.011491270735859871
    2. 'mod' → logprob: -4.511491298675537
    3. '_mod' → logprob: -8.136490821838379
    4. '%' → logprob: -9.386490821838379
    5. 'od' → logprob: -10.136490821838379
    6. 'add' → logprob: -12.261490821838379
    7. '(mod' → logprob: -12.261490821838379
    8. '_ml' → logprob: -12.511490821838379
    9. ' ml' → logprob: -13.136490821838379
    10. '(x' → logprob: -13.386490821838379

Token 245: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -7.255023956531659e-05
    2. '_t' → logprob: -11.125072479248047
    3. 'tml' → logprob: -11.250072479248047
    4. 'mod' → logprob: -11.375072479248047
    5. '_mod' → logprob: -11.750072479248047
    6. 'm' → logprob: -12.375072479248047
    7. '(mod' → logprob: -12.500072479248047
    8. 'tl' → logprob: -12.625072479248047
    9. 'т' → logprob: -13.000072479248047
    10. 'ml' → logprob: -13.125072479248047

Token 246: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -1.9146995327901095e-05
    2. '_prod' → logprob: -11.000019073486328
    3. '_product' → logprob: -14.125019073486328
    4. '_modify' → logprob: -15.250019073486328
    5. '_' → logprob: -16.000019073486328
    6. '_MOD' → logprob: -16.125019073486328
    7. '_func' → logprob: -16.125019073486328
    8. '(x' → logprob: -16.125019073486328
    9. '_modified' → logprob: -16.125019073486328
    10. '_pro' → logprob: -16.625019073486328

Token 247: 'ulo' (ID: 5953)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0012298731599003077
    2. '(x' → logprob: -7.126229763031006
    3. 'od' → logprob: -8.001230239868164
    4. '_t' → logprob: -9.876230239868164
    5. '   ' → logprob: -11.626230239868164
    6. 'ot' → logprob: -11.876230239868164
    7. '(t' → logprob: -12.251230239868164
    8. 'prod' → logprob: -12.876230239868164
    9. 'ult' → logprob: -13.376230239868164
    10. 'x' → logprob: -13.626230239868164

Token 248: '(prod' (ID: 129733)
  Prédit: '(prod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prod' → logprob: -0.0019430378451943398
    2. '(' → logprob: -6.251943111419678
    3. ' (' → logprob: -12.00194263458252
    4. '(product' → logprob: -12.12694263458252
    5. '(pro' → logprob: -13.50194263458252
    6. '(proc' → logprob: -13.62694263458252
    7. '(pred' → logprob: -15.87694263458252
    8. '(
' → logprob: -16.501943588256836
    9. 'prod' → logprob: -17.251943588256836
    10. '(prob' → logprob: -17.376943588256836

Token 249: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: 0.0
    2. ' )' → logprob: -17.125
    3. ')
' → logprob: -17.625
    4. ')x' → logprob: -17.875
    5. '))' → logprob: -18.625
    6. '   ' → logprob: -19.875
    7. ')`' → logprob: -19.875
    8. ')}' → logprob: -19.875
    9. '),' → logprob: -20.125
    10. ')#' → logprob: -20.25

Token 250: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0011732018319889903
    2. 'mod' → logprob: -7.00117301940918
    3. '#' → logprob: -8.37617301940918
    4. 'from' → logprob: -12.25117301940918
    5. ')' → logprob: -12.75117301940918
    6. '<|end|>' → logprob: -12.87617301940918
    7. 'max' → logprob: -13.00117301940918
    8. '```' → logprob: -13.37617301940918
    9. 'class' → logprob: -13.50117301940918
    10. 'import' → logprob: -13.62617301940918

Token 251: ' l' (ID: 305)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.021989934146404266
    2. 'bin' → logprob: -4.271989822387695
    3. 'pow' → logprob: -5.521989822387695
    4. 'main' → logprob: -6.521989822387695
    5. 'binary' → logprob: -6.896989822387695
    6. ' mod' → logprob: -7.521989822387695
    7. 'bis' → logprob: -9.146989822387695
    8. 'max' → logprob: -9.396989822387695
    9. 'solve' → logprob: -9.396989822387695
    10. 'mp' → logprob: -10.021989822387695

Token 252: 'cm' (ID: 7871)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.13423505425453186
    2. 'ist' → logprob: -2.134235143661499
    3. 'eft' → logprob: -5.25923490524292
    4. 'ength' → logprob: -7.63423490524292
    5. 'ambda' → logprob: -8.009235382080078
    6. 'ine' → logprob: -8.259235382080078
    7. 'og' → logprob: -8.634235382080078
    8. 'def' → logprob: -9.009235382080078
    9. 'is' → logprob: -9.384235382080078
    10. 'cm' → logprob: -9.634235382080078

Token 253: '_g' (ID: 5439)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.05538239702582359
    2. '(' → logprob: -3.180382490158081
    3. '(x' → logprob: -4.430382251739502
    4. 'def' → logprob: -9.18038272857666
    5. '_' → logprob: -9.68038272857666
    6. ' (' → logprob: -9.80538272857666
    7. '_(' → logprob: -10.18038272857666
    8. 'a' → logprob: -10.93038272857666
    9. '(*' → logprob: -11.05538272857666
    10. '_two' → logprob: -11.43038272857666

Token 254: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.0003902775060851127
    2. 'lobal' → logprob: -8.87539005279541
    3. 'eneral' → logprob: -9.12539005279541
    4. '(a' → logprob: -10.12539005279541
    5. 'CD' → logprob: -11.12539005279541
    6. 'enerate' → logprob: -11.37539005279541
    7. '(x' → logprob: -11.62539005279541
    8. 'cm' → logprob: -12.00039005279541
    9. '_cd' → logprob: -12.00039005279541
    10. 'reat' → logprob: -12.12539005279541

Token 255: '_inner' (ID: 81672)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.21513161063194275
    2. '(x' → logprob: -2.0901315212249756
    3. '_(' → logprob: -3.5901315212249756
    4. '(_' → logprob: -3.8401315212249756
    5. '(' → logprob: -4.590131759643555
    6. '_' → logprob: -4.715131759643555
    7. 'def' → logprob: -7.340131759643555
    8. ' (' → logprob: -7.715131759643555
    9. '(s' → logprob: -9.840131759643555
    10. '(l' → logprob: -10.090131759643555

Token 256: '(x' (ID: 4061)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.18339493870735168
    2. '(x' → logprob: -1.8083949089050293
    3. '(' → logprob: -6.308394908905029
    4. ' (' → logprob: -6.683394908905029
    5. '(_' → logprob: -8.808395385742188
    6. '_(' → logprob: -9.183395385742188
    7. '(l' → logprob: -9.183395385742188
    8. '(n' → logprob: -9.308395385742188
    9. '(s' → logprob: -10.933395385742188
    10. 'def' → logprob: -10.933395385742188

Token 257: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002737330214586109
    2. ',y' → logprob: -8.500273704528809
    3. '):' → logprob: -10.250273704528809
    4. ' ,' → logprob: -11.000273704528809
    5. 'y' → logprob: -11.500273704528809
    6. ',
' → logprob: -12.875273704528809
    7. '):
' → logprob: -12.875273704528809
    8. '1' → logprob: -14.625273704528809
    9. '_,' → logprob: -15.125273704528809
    10. ':' → logprob: -15.312773704528809

Token 258: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07890377938747406
    2. ' y' → logprob: -2.5789036750793457
    3. '<|end|>' → logprob: -12.828904151916504
    4. 'def' → logprob: -13.078904151916504
    5. '	y' → logprob: -13.453904151916504
    6. ' ' → logprob: -13.453904151916504
    7. '   ' → logprob: -13.578904151916504
    8. ',y' → logprob: -13.828904151916504
    9. ',' → logprob: -14.078904151916504
    10. ')' → logprob: -14.078904151916504

Token 259: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20201732218265533
    2. '):
' → logprob: -1.7020173072814941
    3. ',' → logprob: -7.952017307281494
    4. '):
' → logprob: -8.702017784118652
    5. ')' → logprob: -9.952017784118652
    6. ':' → logprob: -10.952017784118652
    7. ' ):' → logprob: -11.577017784118652
    8. '   ' → logprob: -11.952017784118652
    9. ' ):
' → logprob: -13.327017784118652
    10. '):

' → logprob: -13.577017784118652

Token 260: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12805359065532684
    2. 'import' → logprob: -2.503053665161133
    3. ':
' → logprob: -4.378053665161133
    4. 'from' → logprob: -4.378053665161133
    5. 'g' → logprob: -5.503053665161133
    6. ' from' → logprob: -5.878053665161133
    7. ':' → logprob: -6.628053665161133
    8. 'def' → logprob: -6.878053665161133
    9. 'while' → logprob: -7.378053665161133
    10. ' import' → logprob: -7.503053665161133

Token 261: ' while' (ID: 2049)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7018914818763733
    2. 'g' → logprob: -1.5768914222717285
    3. 'import' → logprob: -2.3268914222717285
    4. '   ' → logprob: -2.4518914222717285
    5. ' from' → logprob: -3.2018914222717285
    6. 'if' → logprob: -3.8268914222717285
    7. 'def' → logprob: -3.8268914222717285
    8. 'a' → logprob: -4.2018914222717285
    9. 'while' (adapté à ' while') → logprob: -5.0768914222717285
    10. '
' → logprob: -5.9518914222717285

Token 262: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.029847679659724236
    2. ' y' → logprob: -3.5298476219177246
    3. 'x' → logprob: -9.404848098754883
    4. '(y' → logprob: -11.404848098754883
    5. '	y' → logprob: -13.029848098754883
    6. ' x' → logprob: -14.279848098754883
    7. '   ' → logprob: -14.404848098754883
    8. ' ' → logprob: -15.779848098754883
    9. '_y' → logprob: -16.029848098754883
    10. 'b' → logprob: -17.404848098754883

Token 263: ' !=' (ID: 1666)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3856390118598938
    2. '!=' → logprob: -1.885638952255249
    3. ' !=' → logprob: -2.260638952255249
    4. ':
' → logprob: -2.760638952255249
    5. '>' → logprob: -7.510639190673828
    6. 'and' → logprob: -10.510639190673828
    7. ',' → logprob: -11.010639190673828
    8. ' and' → logprob: -11.260639190673828
    9. '   ' → logprob: -11.260639190673828
    10. ')!=' → logprob: -11.260639190673828

Token 264: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007100477814674377
    2. ' ' → logprob: -7.2507100105285645
    3. '   ' → logprob: -16.000709533691406
    4. '```' → logprob: -17.625709533691406
    5. '
' → logprob: -19.063209533691406
    6. '  ' → logprob: -19.313209533691406
    7. '۰' → logprob: -19.750709533691406
    8. '    ' → logprob: -19.875709533691406
    9. 'x' → logprob: -20.250709533691406
    10. '``' → logprob: -20.563209533691406

Token 265: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -18.8750057220459
    4. 'x' → logprob: -19.2500057220459
    5. '۰' → logprob: -19.7500057220459
    6. '```' → logprob: -19.8750057220459
    7. '00' → logprob: -20.6250057220459
    8. '
' → logprob: -20.9375057220459
    9. '000' → logprob: -20.9375057220459
    10. 'zero' → logprob: -21.1875057220459

Token 266: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.14283761382102966
    2. ':' → logprob: -2.0178375244140625
    3. ',' → logprob: -10.017837524414062
    4. '   ' → logprob: -10.392837524414062
    5. '):
' → logprob: -10.892837524414062
    6. ' :
' → logprob: -11.142837524414062
    7. '<|end|>' → logprob: -11.392837524414062
    8. ':

' → logprob: -11.392837524414062
    9. ' and' → logprob: -11.517837524414062
    10. '       ' → logprob: -11.642837524414062

Token 267: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006275132764130831
    2. ' x' → logprob: -5.131275177001953
    3. 'x' → logprob: -8.756275177001953
    4. ',' → logprob: -9.506275177001953
    5. '<|end|>' → logprob: -9.756275177001953
    6. '	x' → logprob: -11.131275177001953
    7. '   ' → logprob: -11.381275177001953
    8. '	' → logprob: -11.631275177001953
    9. ',x' → logprob: -11.881275177001953
    10. '	   ' → logprob: -13.381275177001953

Token 268: ' z' (ID: 579)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12693829834461212
    2. ' x' → logprob: -2.1269383430480957
    3. '   ' → logprob: -12.376937866210938
    4. '	x' → logprob: -12.876937866210938
    5. '       ' → logprob: -13.626937866210938
    6. '(x' → logprob: -14.376937866210938
    7. 't' → logprob: -14.501937866210938
    8. '    ' → logprob: -15.126937866210938
    9. ' ' → logprob: -15.251937866210938
    10. 'r' → logprob: -15.751937866210938

Token 269: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03046891838312149
    2. ' =' → logprob: -3.5304689407348633
    3. ',' → logprob: -7.280468940734863
    4. '=y' → logprob: -11.030468940734863
    5. '=x' → logprob: -11.655468940734863
    6. '   ' → logprob: -13.405468940734863
    7. ' ' → logprob: -13.655468940734863
    8. 'x' → logprob: -14.530468940734863
    9. '=z' → logprob: -14.905468940734863
    10. '=
' → logprob: -15.030468940734863

Token 270: ' x' (ID: 1215)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.038126640021800995
    2. 'x' → logprob: -3.5381267070770264
    3. ' y' → logprob: -4.788126468658447
    4. ' x' → logprob: -11.288126945495605
    5. '	y' → logprob: -14.413126945495605
    6. '   ' → logprob: -16.91312599182129
    7. ' ' → logprob: -17.78812599182129
    8. '	x' → logprob: -17.91312599182129
    9. '%x' → logprob: -18.41312599182129
    10. '_y' → logprob: -18.66312599182129

Token 271: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.07965031266212463
    2. ' %' → logprob: -2.579650402069092
    3. '
' → logprob: -7.329650402069092
    4. 'y' → logprob: -10.079649925231934
    5. '%
' → logprob: -10.329649925231934
    6. '%x' → logprob: -10.829649925231934
    7. ' y' → logprob: -12.579649925231934
    8. ',' → logprob: -13.704649925231934
    9. '%b' → logprob: -13.829649925231934
    10. ' %
' → logprob: -13.829649925231934

Token 272: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -4.5491004129871726e-05
    2. ' y' → logprob: -10.000045776367188
    3. ' ' → logprob: -18.625045776367188
    4. '   ' → logprob: -19.250045776367188
    5. '	y' → logprob: -19.625045776367188
    6. ''y' → logprob: -20.375045776367188
    7. '<|end|>' → logprob: -20.875045776367188
    8. '  ' → logprob: -21.250045776367188
    9. '    ' → logprob: -21.750045776367188
    10. ',' → logprob: -22.000045776367188

Token 273: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9750150442123413
    2. '       ' → logprob: -0.9750150442123413
    3. 'x' → logprob: -1.6000150442123413
    4. ' x' → logprob: -3.725015163421631
    5. '<|end|>' → logprob: -4.225015163421631
    6. '<|end|>' → logprob: -6.850015163421631
    7. '\n' → logprob: -7.100015163421631
    8. ',' → logprob: -7.600015163421631
    9. '   ' → logprob: -7.725015163421631
    10. ' ' → logprob: -7.975015163421631

Token 274: '       ' (ID: 309)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6700044870376587
    2. '       ' → logprob: -1.0450044870376587
    3. ' x' → logprob: -2.045004367828369
    4. '   ' → logprob: -5.170004367828369
    5. '
' → logprob: -7.045004367828369
    6. '	x' → logprob: -7.795004367828369
    7. ',' → logprob: -9.045004844665527
    8. ' ' → logprob: -9.795004844665527
    9. '<|end|>' → logprob: -10.420004844665527
    10. ',x' → logprob: -11.420004844665527

Token 275: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.00525747612118721
    2. ' x' → logprob: -5.255257606506348
    3. '       ' → logprob: -10.755257606506348
    4. '	x' → logprob: -13.505257606506348
    5. '   ' → logprob: -14.005257606506348
    6. ' ' → logprob: -16.75525665283203
    7. '           ' → logprob: -16.88025665283203
    8. ',x' → logprob: -17.88025665283203
    9. 's' → logprob: -18.50525665283203
    10. '
' → logprob: -18.63025665283203

Token 276: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22134162485599518
    2. ' =' → logprob: -2.096341609954834
    3. '=' → logprob: -2.596341609954834
    4. ',y' → logprob: -7.221341609954834
    5. '=y' → logprob: -8.346342086791992
    6. ' ,' → logprob: -9.096342086791992
    7. ' y' → logprob: -11.221342086791992
    8. 'y' → logprob: -11.971342086791992
    9. ' ' → logprob: -12.971342086791992
    10. ' =
' → logprob: -14.221342086791992

Token 277: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.31326285004615784
    2. ' y' → logprob: -1.3132628202438354
    3. '<|end|>' → logprob: -14.813262939453125
    4. '	y' → logprob: -15.313262939453125
    5. ' ' → logprob: -15.688262939453125
    6. ' =' → logprob: -16.313262939453125
    7. '(y' → logprob: -16.688262939453125
    8. '=y' → logprob: -16.938262939453125
    9. ',y' → logprob: -17.063262939453125
    10. '=' → logprob: -17.188262939453125

Token 278: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519322335720062
    2. '=' → logprob: -1.5019322633743286
    3. ',' → logprob: -12.751932144165039
    4. ' =
' → logprob: -16.25193214416504
    5. '=y' → logprob: -16.62693214416504
    6. '=

' → logprob: -17.00193214416504
    7. '<|end|>' → logprob: -17.50193214416504
    8. '=
' → logprob: -17.62693214416504
    9. ' ' → logprob: -17.87693214416504
    10. ' =(' → logprob: -18.75193214416504

Token 279: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07889683544635773
    2. ' y' → logprob: -2.5788967609405518
    3. '(y' → logprob: -11.953896522521973
    4. '	y' → logprob: -14.703896522521973
    5. ',y' → logprob: -16.57889747619629
    6. ''y' → logprob: -16.82889747619629
    7. ' (' → logprob: -17.45389747619629
    8. '   ' → logprob: -17.70389747619629
    9. '_y' → logprob: -18.82889747619629
    10. ' ' → logprob: -19.07889747619629

Token 280: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013405199570115656
    2. ' ,' → logprob: -9.250134468078613
    3. ',z' → logprob: -10.875134468078613
    4. ',y' → logprob: -11.000134468078613
    5. ',x' → logprob: -13.500134468078613
    6. ',
' → logprob: -14.000134468078613
    7. ' z' → logprob: -17.250133514404297
    8. 'z' → logprob: -18.125133514404297
    9. 'x' → logprob: -18.250133514404297
    10. ' ' → logprob: -18.750133514404297

Token 281: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.06196802109479904
    2. ' z' → logprob: -2.8119680881500244
    3. '	z' → logprob: -15.811967849731445
    4. 'x' → logprob: -15.936967849731445
    5. ' ' → logprob: -17.186967849731445
    6. '   ' → logprob: -17.311967849731445
    7. ' x' → logprob: -19.186967849731445
    8. '    ' → logprob: -19.311967849731445
    9. '       ' → logprob: -19.686967849731445
    10. ',z' → logprob: -19.936967849731445

Token 282: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00012987985974177718
    2. '
' → logprob: -9.125129699707031
    3. '<|end|>' → logprob: -11.875129699707031
    4. '    
' → logprob: -12.000129699707031
    5. ' return' → logprob: -13.375129699707031
    6. '       ' → logprob: -13.625129699707031
    7. '  
' → logprob: -13.875129699707031
    8. 'return' → logprob: -13.875129699707031
    9. ',' → logprob: -14.125129699707031
    10. '	return' → logprob: -14.250129699707031

Token 283: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00011534435179783031
    2. 'return' → logprob: -9.125115394592285
    3. ' return' → logprob: -12.375115394592285
    4. 'def' → logprob: -13.625115394592285
    5. '
' → logprob: -15.125115394592285
    6. '    
' → logprob: -15.500115394592285
    7. '<|end|>' → logprob: -16.00011444091797
    8. '	return' → logprob: -16.12511444091797
    9. '       ' → logprob: -16.50011444091797
    10. '```' → logprob: -17.37511444091797

Token 284: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.009883344173431396
    2. '   ' → logprob: -5.009883403778076
    3. ' return' → logprob: -5.759883403778076
    4. 'def' → logprob: -11.759882926940918
    5. '	return' → logprob: -12.759882926940918
    6. '    
' → logprob: -15.134882926940918
    7. ' ' → logprob: -15.134882926940918
    8. '  ' → logprob: -16.759883880615234
    9. 'x' → logprob: -17.009883880615234
    10. 'eturn' → logprob: -17.009883880615234

Token 285: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00861528143286705
    2. ' x' → logprob: -4.758615493774414
    3. 'abs' → logprob: -14.258615493774414
    4. ' ' → logprob: -16.883615493774414
    5. ' abs' → logprob: -17.008615493774414
    6. '	x' → logprob: -17.133615493774414
    7. '(x' → logprob: -19.008615493774414
    8. ' ' → logprob: -19.133615493774414
    9. 'int' → logprob: -20.258615493774414
    10. '   ' → logprob: -20.508615493774414

Token 286: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11950034648180008
    2. '<|end|>' → logprob: -2.2445003986358643
    3. '
' → logprob: -5.119500160217285
    4. ' def' → logprob: -8.494500160217285
    5. '

' → logprob: -8.744500160217285
    6. '<|end|>' → logprob: -9.244500160217285
    7. ')' → logprob: -9.494500160217285
    8. '```' → logprob: -9.744500160217285
    9. '#' → logprob: -10.494500160217285
    10. '  
' → logprob: -11.119500160217285

Token 287: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003956697881221771
    2. '<|end|>' → logprob: -5.8789567947387695
    3. '
' → logprob: -7.1289567947387695
    4. ' def' → logprob: -8.37895679473877
    5. '  
' → logprob: -10.50395679473877
    6. '```' → logprob: -10.75395679473877
    7. '

' → logprob: -11.25395679473877
    8. ')' → logprob: -11.75395679473877
    9. '\' → logprob: -11.87895679473877
    10. 'x' → logprob: -12.00395679473877

Token 288: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.004834515042603016
    2. ' l' → logprob: -5.6298346519470215
    3. 'g' → logprob: -7.0048346519470215
    4. 'def' → logprob: -9.129834175109863
    5. 'lc' → logprob: -10.379834175109863
    6. ' gcd' → logprob: -10.629834175109863
    7. 'main' → logprob: -11.129834175109863
    8. 'get' → logprob: -11.129834175109863
    9. 'compute' → logprob: -11.504834175109863
    10. '_l' → logprob: -11.879834175109863

Token 289: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -6.611323624383658e-05
    2. 'c' → logprob: -9.875065803527832
    3. 'cms' → logprob: -11.375065803527832
    4. 'def' → logprob: -14.250065803527832
    5. 'cd' → logprob: -14.875065803527832
    6. 'cmd' → logprob: -14.875065803527832
    7. 'cmb' → logprob: -14.875065803527832
    8. 'l' → logprob: -15.000065803527832
    9. 'cmp' → logprob: -15.000065803527832
    10. 'm' → logprob: -15.250065803527832

Token 290: '(x' (ID: 4061)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.76146399974823
    2. '_inner' → logprob: -0.88646399974823
    3. '_g' → logprob: -2.5114641189575195
    4. '(x' → logprob: -3.6364641189575195
    5. '_(' → logprob: -4.8864641189575195
    6. '_outer' → logprob: -6.0114641189575195
    7. '(a' → logprob: -7.0114641189575195
    8. '_a' → logprob: -7.1364641189575195
    9. '(' → logprob: -7.6364641189575195
    10. '_x' → logprob: -8.51146411895752

Token 291: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.531813702778891e-05
    2. ' ,' → logprob: -9.37509536743164
    3. ',y' → logprob: -11.75009536743164
    4. ',x' → logprob: -13.75009536743164
    5. '_,' → logprob: -13.75009536743164
    6. ',
' → logprob: -15.12509536743164
    7. '   ' → logprob: -16.12509536743164
    8. '(x' → logprob: -17.37509536743164
    9. '‌,' → logprob: -17.75009536743164
    10. ' ' → logprob: -18.12509536743164

Token 292: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.005235190503299236
    2. ' y' → logprob: -5.255235195159912
    3. '<|end|>' → logprob: -13.630234718322754
    4. ' ' → logprob: -15.880234718322754
    5. ')' → logprob: -17.38023567199707
    6. '	y' → logprob: -17.75523567199707
    7. 'x' → logprob: -18.25523567199707
    8. ',y' → logprob: -18.75523567199707
    9. ',' → logprob: -18.88023567199707
    10. ')y' → logprob: -19.13023567199707

Token 293: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0020189285278320312
    2. '):
' → logprob: -6.877018928527832
    3. ',' → logprob: -7.002018928527832
    4. ')' → logprob: -9.877018928527832
    5. ' ):' → logprob: -11.002018928527832
    6. ':' → logprob: -12.627018928527832
    7. '   ' → logprob: -13.002018928527832
    8. '):
' → logprob: -13.252018928527832
    9. '):

' → logprob: -16.252017974853516
    10. '=' → logprob: -17.127017974853516

Token 294: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05084356665611267
    2. ' return' → logprob: -3.0508434772491455
    3. ' x' → logprob: -6.300843715667725
    4. 'return' → logprob: -8.175843238830566
    5. ' (' → logprob: -9.800843238830566
    6. '    ' → logprob: -10.300843238830566
    7. 'x' → logprob: -10.675843238830566
    8. ' if' → logprob: -11.800843238830566
    9. '    
' → logprob: -11.925843238830566
    10. '(x' → logprob: -12.550843238830566

Token 295: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.14971275627613068
    2. 'x' → logprob: -2.1497128009796143
    3. ' return' → logprob: -3.8997128009796143
    4. ' x' → logprob: -6.774712562561035
    5. '(x' → logprob: -6.899712562561035
    6. '   ' → logprob: -9.149712562561035
    7. ' (' → logprob: -11.524712562561035
    8. 'abs' → logprob: -12.024712562561035
    9. 'if' → logprob: -12.774712562561035
    10. ' ' → logprob: -14.024712562561035

Token 296: ' l' (ID: 305)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.15652672946453094
    2. '(x' → logprob: -2.031526803970337
    3. ' x' → logprob: -4.406526565551758
    4. ' (' → logprob: -6.531526565551758
    5. '(' → logprob: -10.156526565551758
    6. '   ' → logprob: -10.406526565551758
    7. 'abs' → logprob: -11.406526565551758
    8. ' ' → logprob: -11.656526565551758
    9. '(abs' → logprob: -11.906526565551758
    10. '  ' → logprob: -12.906526565551758

Token 297: 'cm' (ID: 7871)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.685969352722168
    2. 'x' → logprob: -1.435969352722168
    3. ' x' → logprob: -1.685969352722168
    4. ' (' → logprob: -2.685969352722168
    5. '(' → logprob: -6.185969352722168
    6. 'cm' → logprob: -6.185969352722168
    7. ' *' → logprob: -8.435969352722168
    8. '   ' → logprob: -8.435969352722168
    9. '//' → logprob: -8.560969352722168
    10. '*' → logprob: -9.060969352722168

Token 298: '_g' (ID: 5439)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.013603313826024532
    2. '_' → logprob: -4.763603210449219
    3. '(' → logprob: -5.888603210449219
    4. 'x' → logprob: -7.388603210449219
    5. '_g' → logprob: -7.388603210449219
    6. '_(' → logprob: -8.138603210449219
    7. '*' → logprob: -8.388603210449219
    8. ' (' → logprob: -9.388603210449219
    9. '```' → logprob: -9.513603210449219
    10. '*(' → logprob: -9.763603210449219

Token 299: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.007615271024405956
    2. '(x' → logprob: -5.007615089416504
    3. 'x' → logprob: -7.382615089416504
    4. 'c' → logprob: -9.257615089416504
    5. '[x' → logprob: -9.882615089416504
    6. 'cm' → logprob: -10.257615089416504
    7. '_cd' → logprob: -11.007615089416504
    8. '   ' → logprob: -11.632615089416504
    9. 'cf' → logprob: -11.632615089416504
    10. 'd' → logprob: -11.632615089416504

Token 300: '_inner' (ID: 81672)
  Prédit: '_inner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inner' → logprob: -0.00015347852604463696
    2. '(x' → logprob: -9.500153541564941
    3. 'inner' → logprob: -9.500153541564941
    4. '_outer' → logprob: -13.250153541564941
    5. 'x' → logprob: -14.750153541564941
    6. 'Inner' → logprob: -14.750153541564941
    7. 'l' → logprob: -15.750153541564941
    8. '
' → logprob: -16.000152587890625
    9. 'g' → logprob: -16.250152587890625
    10. '_(' → logprob: -16.375152587890625

Token 301: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -8.685467764735222e-05
    2. ' (' → logprob: -10.000086784362793
    3. '(' → logprob: -10.125086784362793
    4. '```' → logprob: -13.875086784362793
    5. 'def' → logprob: -15.750086784362793
    6. '((' → logprob: -16.62508773803711
    7. '   ' → logprob: -17.00008773803711
    8. '*(' → logprob: -17.62508773803711
    9. '(int' → logprob: -17.62508773803711
    10. ' ' → logprob: -17.75008773803711

Token 302: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00039468807517550886
    2. ',y' → logprob: -8.125394821166992
    3. ' ,' → logprob: -9.750394821166992
    4. ')' → logprob: -10.625394821166992
    5. 'y' → logprob: -12.125394821166992
    6. '[' → logprob: -12.500394821166992
    7. '),' → logprob: -13.125394821166992
    8. ',
' → logprob: -13.500394821166992
    9. '[y' → logprob: -14.000394821166992
    10. '   ' → logprob: -14.250394821166992

Token 303: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.02324780821800232
    2. ' y' → logprob: -3.773247718811035
    3. 'x' → logprob: -13.898247718811035
    4. ' ' → logprob: -14.648247718811035
    5. ')' → logprob: -15.023247718811035
    6. '   ' → logprob: -15.398247718811035
    7. '  ' → logprob: -16.52324867248535
    8. ')y' → logprob: -16.64824867248535
    9. '	y' → logprob: -16.77324867248535
    10. '    ' → logprob: -16.77324867248535

Token 304: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004931312054395676
    2. ',' → logprob: -6.254931449890137
    3. ' )' → logprob: -6.379931449890137
    4. ')*' → logprob: -7.754931449890137
    5. ')*(' → logprob: -8.504931449890137
    6. '))' → logprob: -8.504931449890137
    7. '),' → logprob: -9.504931449890137
    8. '(x' → logprob: -9.879931449890137
    9. ' and' → logprob: -9.879931449890137
    10. '*' → logprob: -10.129931449890137

Token 305: 'def' (ID: 1314)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.040867485105991364
    2. '*' → logprob: -3.540867567062378
    3. '*x' → logprob: -5.540867328643799
    4. 'x' → logprob: -6.165867328643799
    5. '*(' → logprob: -6.540867328643799
    6. 'def' → logprob: -6.915867328643799
    7. '(x' → logprob: -7.415867328643799
    8. '<|end|>' → logprob: -7.415867328643799
    9. ' x' → logprob: -8.040867805480957
    10. '*y' → logprob: -8.165867805480957

Token 306: ' empty' (ID: 8213)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.22189319133758545
    2. 'l' → logprob: -1.8468931913375854
    3. ' gcd' → logprob: -3.471893310546875
    4. ' l' → logprob: -5.596893310546875
    5. 'def' → logprob: -6.471893310546875
    6. 'main' → logprob: -6.596893310546875
    7. 'lc' → logprob: -7.346893310546875
    8. ' g' → logprob: -8.096893310546875
    9. 'solve' → logprob: -8.221893310546875
    10. ' main' → logprob: -8.471893310546875

Token 307: '_link' (ID: 16227)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.2502332329750061
    2. '_line' → logprob: -1.7502331733703613
    3. '_' → logprob: -3.5002331733703613
    4. '()' → logprob: -5.375233173370361
    5. 'list' → logprob: -5.625233173370361
    6. '_set' → logprob: -6.125233173370361
    7. 'line' → logprob: -6.375233173370361
    8. '_string' → logprob: -6.375233173370361
    9. 'def' → logprob: -7.125233173370361
    10. '(' → logprob: -7.750233173370361

Token 308: 'list' (ID: 2641)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.27092617750167847
    2. '=' → logprob: -2.6459262371063232
    3. '=[]' → logprob: -2.7709262371063232
    4. ' =' → logprob: -3.3959262371063232
    5. '_list' → logprob: -3.8959262371063232
    6. '():' → logprob: -3.8959262371063232
    7. 'def' → logprob: -4.770925998687744
    8. 'list' → logprob: -4.895925998687744
    9. '_' → logprob: -5.270925998687744
    10. '[]' → logprob: -5.645925998687744

Token 309: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0008166544139385223
    2. '()' → logprob: -7.500816822052002
    3. ':' → logprob: -9.375816345214844
    4. '():
' → logprob: -9.500816345214844
    5. ' ():' → logprob: -10.625816345214844
    6. '_list' → logprob: -10.750816345214844
    7. 'def' → logprob: -11.000816345214844
    8. '=' → logprob: -11.875816345214844
    9. '=[]' → logprob: -11.875816345214844
    10. ' =' → logprob: -12.250816345214844

Token 310: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.21901024878025055
    2. '   ' → logprob: -2.469010353088379
    3. 'class' → logprob: -3.219010353088379
    4. ' return' → logprob: -3.344010353088379
    5. 'None' → logprob: -3.844010353088379
    6. '[]' → logprob: -4.594010353088379
    7. ' None' → logprob: -6.969010353088379
    8. '(None' → logprob: -6.969010353088379
    9. '[]
' → logprob: -7.219010353088379
    10. '{return' → logprob: -7.469010353088379

Token 311: ' return' (ID: 622)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.25367552042007446
    2. 'None' → logprob: -1.5036754608154297
    3. ' None' → logprob: -7.12867546081543
    4. ' []' → logprob: -8.00367546081543
    5. '(None' → logprob: -8.75367546081543
    6. '[]
' → logprob: -9.12867546081543
    7. 'class' → logprob: -9.37867546081543
    8. 'return' (adapté à ' return') → logprob: -9.37867546081543
    9. '{}' → logprob: -9.50367546081543
    10. '[' → logprob: -10.75367546081543

Token 312: ' {}

' (ID: 21724)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5760862231254578
    2. 'None' → logprob: -0.8260862231254578
    3. ' None' → logprob: -9.451086044311523
    4. ' []' → logprob: -10.576086044311523
    5. '[]
' → logprob: -10.951086044311523
    6. '(None' → logprob: -11.076086044311523
    7. '[' → logprob: -13.076086044311523
    8. '[]}' → logprob: -13.076086044311523
    9. 'deque' → logprob: -14.076086044311523
    10. '[]

' → logprob: -14.326086044311523

Token 313: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010084343142807484
    2. '{}' → logprob: -5.63508415222168
    3. '<|end|>' → logprob: -6.01008415222168
    4. 'class' → logprob: -6.63508415222168
    5. '[]' → logprob: -7.26008415222168
    6. '{' → logprob: -7.51008415222168
    7. ')' → logprob: -7.76008415222168
    8. '#' → logprob: -7.88508415222168
    9. '```' → logprob: -9.26008415222168
    10. 'empty' → logprob: -9.38508415222168

Token 314: ' link' (ID: 3461)
  Prédit: ' empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' empty' → logprob: -0.7641895413398743
    2. ' add' → logprob: -2.1391894817352295
    3. 'empty' → logprob: -2.3891894817352295
    4. ' linked' → logprob: -2.5141894817352295
    5. ' append' → logprob: -2.8891894817352295
    6. 'linked' → logprob: -3.6391894817352295
    7. 'append' → logprob: -3.8891894817352295
    8. ' link' → logprob: -4.014189720153809
    9. 'add' → logprob: -4.264189720153809
    10. ' insert' → logprob: -4.764189720153809

Token 315: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0008470293832942843
    2. '_list' → logprob: -7.125846862792969
    3. 'link' → logprob: -11.000846862792969
    4. 'lists' → logprob: -11.125846862792969
    5. 'liste' → logprob: -13.000846862792969
    6. '_' → logprob: -13.500846862792969
    7. 'lst' → logprob: -13.500846862792969
    8. '_link' → logprob: -14.000846862792969
    9. 'ed' → logprob: -14.000846862792969
    10. ' list' → logprob: -14.375846862792969

Token 316: '_set' (ID: 5451)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.05635414645075798
    2. ' =' → logprob: -3.93135404586792
    3. '()' → logprob: -4.93135404586792
    4. '=' → logprob: -5.05635404586792
    5. '_' → logprob: -5.55635404586792
    6. '_add' → logprob: -5.68135404586792
    7. '_append' → logprob: -6.05635404586792
    8. '_node' → logprob: -6.30635404586792
    9. '_empty' → logprob: -6.30635404586792
    10. '():
' → logprob: -6.68135404586792

Token 317: 'default' (ID: 4211)
  Prédit: '(link'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(link' → logprob: -0.6097790002822876
    2. '(key' → logprob: -1.1097790002822876
    3. '(ll' → logprob: -2.859778881072998
    4. '(l' → logprob: -4.234778881072998
    5. '(' → logprob: -4.234778881072998
    6. '(k' → logprob: -4.734778881072998
    7. '(lst' → logprob: -4.859778881072998
    8. '(node' → logprob: -5.234778881072998
    9. '(dict' → logprob: -5.609778881072998
    10. '(d' → logprob: -5.859778881072998

Token 318: '(link' (ID: 51236)
  Prédit: '(key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.29647114872932434
    2. '(link' → logprob: -2.421471118927002
    3. '(' → logprob: -2.921471118927002
    4. '(dict' → logprob: -2.921471118927002
    5. '()' → logprob: -3.546471118927002
    6. '(obj' → logprob: -5.046471118927002
    7. '(d' → logprob: -5.171471118927002
    8. '(name' → logprob: -5.796471118927002
    9. '(l' → logprob: -6.046471118927002
    10. '(ll' → logprob: -6.046471118927002

Token 319: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.282920129597187e-05
    2. '_list' → logprob: -11.750012397766113
    3. 'lst' → logprob: -13.125012397766113
    4. 'lists' → logprob: -13.625012397766113
    5. 'link' → logprob: -14.750012397766113
    6. ' list' → logprob: -14.875012397766113
    7. 'li' → logprob: -15.500012397766113
    8. 'ed' → logprob: -15.625012397766113
    9. 'l' → logprob: -15.875012397766113
    10. 'ist' → logprob: -16.37501335144043

Token 320: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016420960891991854
    2. '(),' → logprob: -7.001642227172852
    3. ',key' → logprob: -7.376642227172852
    4. ' ,' → logprob: -10.251642227172852
    5. ',k' → logprob: -11.126642227172852
    6. ')' → logprob: -11.251642227172852
    7. '):' → logprob: -12.376642227172852
    8. ',n' → logprob: -12.376642227172852
    9. ',l' → logprob: -12.501642227172852
    10. ',
' → logprob: -12.626642227172852

Token 321: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.06201978027820587
    2. ' key' → logprob: -2.8120198249816895
    3. 'node' → logprob: -10.187019348144531
    4. 'k' → logprob: -12.062019348144531
    5. ' node' → logprob: -13.062019348144531
    6. 'keys' → logprob: -13.312019348144531
    7. 'index' → logprob: -14.312019348144531
    8. '	key' → logprob: -14.437019348144531
    9. '
' → logprob: -14.562019348144531
    10. 'link' → logprob: -14.562019348144531

Token 322: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016407696530222893
    2. '):' → logprob: -4.141407489776611
    3. '):
' → logprob: -8.01640796661377
    4. ',key' → logprob: -10.76640796661377
    5. '   ' → logprob: -12.01640796661377
    6. ' ,' → logprob: -12.01640796661377
    7. ')' → logprob: -12.01640796661377
    8. ' ):' → logprob: -13.39140796661377
    9. ' ' → logprob: -14.14140796661377
    10. 'def' → logprob: -14.76640796661377

Token 323: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00724856136366725
    2. ' if' → logprob: -5.507248401641846
    3. 'if' → logprob: -5.757248401641846
    4. '	if' → logprob: -12.382248878479004
    5. 'return' → logprob: -14.632248878479004
    6. 'link' → logprob: -15.382248878479004
    7. ' return' → logprob: -15.757248878479004
    8. ' link' → logprob: -16.132247924804688
    9. '   ' → logprob: -16.382247924804688
    10. '    
' → logprob: -17.132247924804688

Token 324: ' link' (ID: 3461)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0007964044925756752
    2. '   ' → logprob: -7.500796318054199
    3. ' if' → logprob: -8.7507963180542
    4. 'link' (adapté à ' link') → logprob: -9.5007963180542
    5. 'return' → logprob: -11.5007963180542
    6. ' link' → logprob: -16.125797271728516
    7. '```' → logprob: -18.375797271728516
    8. '	if' → logprob: -18.875797271728516
    9. '_link' → logprob: -19.125797271728516
    10. ' return' → logprob: -19.250797271728516

Token 325: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -5.512236498361744e-07
    2. '_list' → logprob: -15.500000953674316
    3. 'lists' → logprob: -15.875000953674316
    4. 'ist' → logprob: -17.0
    5. 'set' → logprob: -17.0
    6. ' =' → logprob: -17.75
    7. '   ' → logprob: -18.0
    8. 'lst' → logprob: -18.0
    9. '=' → logprob: -18.125
    10. ' list' → logprob: -18.25

Token 326: '.setdefault' (ID: 113053)
  Prédit: '.setdefault'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.setdefault' → logprob: -8.888114098226652e-05
    2. '.' → logprob: -9.375088691711426
    3. '[key' → logprob: -12.875088691711426
    4. '.set' → logprob: -14.625088691711426
    5. '{}.' → logprob: -15.375088691711426
    6. '   ' → logprob: -15.750088691711426
    7. ',' → logprob: -16.000089645385742
    8. '].' → logprob: -16.125089645385742
    9. ' .' → logprob: -16.250089645385742
    10. ',key' → logprob: -16.625089645385742

Token 327: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -1.3856492842023727e-06
    2. '(' → logprob: -13.625000953674316
    3. 'key' → logprob: -16.375001907348633
    4. '(
' → logprob: -17.000001907348633
    5. ',key' → logprob: -17.250001907348633
    6. ' (' → logprob: -18.125001907348633
    7. ' key' → logprob: -19.250001907348633
    8. '[key' → logprob: -19.375001907348633
    9. '(keys' → logprob: -19.750001907348633
    10. ':key' → logprob: -21.375001907348633

Token 328: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.5577775128767826e-06
    2. ')' → logprob: -13.000005722045898
    3. ' ,' → logprob: -13.500005722045898
    4. ',)' → logprob: -14.000005722045898
    5. '[],' → logprob: -14.625005722045898
    6. '[])' → logprob: -15.875005722045898
    7. ',{' → logprob: -16.2500057220459
    8. '   ' → logprob: -16.3750057220459
    9. ',
' → logprob: -16.6250057220459
    10. '<|end|>' → logprob: -16.7500057220459

Token 329: ' [])

' (ID: 124233)
  Prédit: '[])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[])' → logprob: -0.2709214389324188
    2. '0' → logprob: -1.8959214687347412
    3. '{})' → logprob: -2.520921468734741
    4. '[]' → logprob: -5.270921230316162
    5. ')' → logprob: -7.395921230316162
    6. '[])
' → logprob: -8.02092170715332
    7. ' [])' → logprob: -8.14592170715332
    8. 'empty' → logprob: -9.02092170715332
    9. '{})
' → logprob: -9.77092170715332
    10. '{}' → logprob: -9.89592170715332

Token 330: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 331: ' link' (ID: 3461)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8995247483253479
    2. ' link' → logprob: -1.0245246887207031
    3. ' def' → logprob: -1.8995246887207031
    4. 'link' → logprob: -2.649524688720703
    5. ' empty' → logprob: -5.899524688720703
    6. 'empty' → logprob: -6.274524688720703
    7. 'list' → logprob: -7.587024688720703
    8. ' defaultdict' → logprob: -7.712024688720703
    9. 'from' → logprob: -7.774524688720703
    10. ' list' → logprob: -7.899524688720703

Token 332: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.2233183042553719e-05
    2. 'li' → logprob: -12.250012397766113
    3. '_list' → logprob: -13.125012397766113
    4. 'l' → logprob: -13.500012397766113
    5. 'link' → logprob: -13.500012397766113
    6. 'lists' → logprob: -14.000012397766113
    7. 'lis' → logprob: -15.000012397766113
    8. 'liste' → logprob: -15.000012397766113
    9. 'lst' → logprob: -15.125012397766113
    10. 'll' → logprob: -15.625012397766113

Token 333: '_append' (ID: 69293)
  Prédit: '_set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.2050209492444992
    2. '_get' → logprob: -2.5800209045410156
    3. '_add' → logprob: -2.8300209045410156
    4. '_append' → logprob: -3.4550209045410156
    5. '_insert' → logprob: -4.955020904541016
    6. '_pop' → logprob: -5.205020904541016
    7. '_' → logprob: -6.330020904541016
    8. '_remove' → logprob: -6.955020904541016
    9. '_put' → logprob: -6.955020904541016
    10. '_update' → logprob: -7.705020904541016

Token 334: '(link' (ID: 51236)
  Prédit: '(link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(link' → logprob: -0.011098993010818958
    2. '(' → logprob: -4.511098861694336
    3. ' (' → logprob: -10.136098861694336
    4. ',' → logprob: -12.761098861694336
    5. '(line' → logprob: -12.761098861694336
    6. '(ll' → logprob: -13.136098861694336
    7. '(l' → logprob: -14.011098861694336
    8. '(
' → logprob: -14.386098861694336
    9. '(Link' → logprob: -15.011098861694336
    10. '(lock' → logprob: -15.386098861694336

Token 335: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -2.339278580620885e-06
    2. 'link' → logprob: -14.250001907348633
    3. '(list' → logprob: -14.500001907348633
    4. '(link' → logprob: -14.750001907348633
    5. 'set' → logprob: -15.000001907348633
    6. '(' → logprob: -15.875001907348633
    7. ' list' → logprob: -16.125001907348633
    8. 'ist' → logprob: -16.625001907348633
    9. 'lists' → logprob: -17.750001907348633
    10. 'li' → logprob: -18.125001907348633

Token 336: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.080963092041202e-06
    2. '(link' → logprob: -13.000004768371582
    3. ' ,' → logprob: -13.250004768371582
    4. ',
' → logprob: -14.500004768371582
    5. ',key' → logprob: -15.750004768371582
    6. ',

' → logprob: -16.3750057220459
    7. ')' → logprob: -16.5000057220459
    8. ',line' → logprob: -16.8750057220459
    9. '   ' → logprob: -17.3750057220459
    10. ',ll' → logprob: -17.7500057220459

Token 337: ' a' (ID: 261)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.474082350730896
    2. ' key' → logprob: -0.974082350730896
    3. '   ' → logprob: -13.349081993103027
    4. ' ' → logprob: -13.849081993103027
    5. '	key' → logprob: -13.849081993103027
    6. '    ' → logprob: -14.849081993103027
    7. '_key' → logprob: -15.224081993103027
    8. '  ' → logprob: -15.349081993103027
    9. 'Key' → logprob: -16.099082946777344
    10. '       ' → logprob: -16.474082946777344

Token 338: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025845777709037066
    2. '[key' → logprob: -7.127584457397461
    3. ',key' → logprob: -7.377584457397461
    4. 'rg' → logprob: -8.377584457397461
    5. 'nd' → logprob: -8.877584457397461
    6. ' ,' → logprob: -8.877584457397461
    7. 'key' → logprob: -8.877584457397461
    8. 'r' → logprob: -9.502584457397461
    9. 's' → logprob: -9.502584457397461
    10. 'rray' → logprob: -9.752584457397461

Token 339: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0005034659989178181
    2. ' b' → logprob: -7.7505035400390625
    3. 'v' → logprob: -9.625503540039062
    4. 'val' → logprob: -12.625503540039062
    5. 'value' → logprob: -13.125503540039062
    6. 'item' → logprob: -15.250503540039062
    7. 'x' → logprob: -15.250503540039062
    8. 'elem' → logprob: -15.625503540039062
    9. 'e' → logprob: -15.750503540039062
    10. ' v' → logprob: -16.000503540039062

Token 340: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17193253338336945
    2. '):' → logprob: -2.4219324588775635
    3. '):
' → logprob: -2.6719324588775635
    4. ')
' → logprob: -10.296932220458984
    5. '):

' → logprob: -10.921932220458984
    6. '):
' → logprob: -11.296932220458984
    7. ',' → logprob: -11.421932220458984
    8. ' )' → logprob: -11.421932220458984
    9. ' ):' → logprob: -13.046932220458984
    10. ')`' → logprob: -13.546932220458984

Token 341: '   ' (ID: 271)
  Prédit: 'link'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'link' → logprob: -0.11621200293302536
    2. '   ' → logprob: -2.3662118911743164
    3. ' link' → logprob: -4.491211891174316
    4. 'if' → logprob: -5.491211891174316
    5. ' if' → logprob: -7.616211891174316
    6. '	link' → logprob: -10.491211891174316
    7. '
' → logprob: -11.491211891174316
    8. '(link' → logprob: -11.616211891174316
    9. '_link' → logprob: -12.741211891174316
    10. '    
' → logprob: -13.616211891174316

Token 342: ' link' (ID: 3461)
  Prédit: 'link'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'link' (adapté à ' link') → logprob: -0.024018555879592896
    2. ' link' → logprob: -3.8990185260772705
    3. 'if' → logprob: -5.77401876449585
    4. ' if' → logprob: -8.649018287658691
    5. '   ' → logprob: -8.774018287658691
    6. '(link' → logprob: -10.899018287658691
    7. '	link' → logprob: -11.899018287658691
    8. 'list' → logprob: -13.274018287658691
    9. 'try' → logprob: -13.774018287658691
    10. ' ' → logprob: -13.899018287658691

Token 343: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: 0.0
    2. '_list' → logprob: -17.125
    3. 'set' → logprob: -17.875
    4. 'ist' → logprob: -18.5
    5. 'append' → logprob: -18.625
    6. ' list' → logprob: -18.875
    7. '.append' → logprob: -20.0
    8. 'lists' → logprob: -20.125
    9. 'List' → logprob: -21.0
    10. '[' → logprob: -21.375

Token 344: '[a' (ID: 32035)
  Prédit: '.setdefault'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.setdefault' → logprob: -0.029868848621845245
    2. '_set' → logprob: -3.5298688411712646
    3. '.set' → logprob: -9.904869079589844
    4. 'set' → logprob: -9.904869079589844
    5. '[key' → logprob: -11.654869079589844
    6. '[a' → logprob: -12.279869079589844
    7. '_sets' → logprob: -13.904869079589844
    8. 'a' → logprob: -14.154869079589844
    9. '.append' → logprob: -14.404869079589844
    10. '   ' → logprob: -14.779869079589844

Token 345: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -2.451116051815916e-05
    2. ']' → logprob: -10.875024795532227
    3. ' ].' → logprob: -12.125024795532227
    4. 'append' → logprob: -17.000024795532227
    5. '][' → logprob: -17.750024795532227
    6. ']).' → logprob: -18.000024795532227
    7. '.append' → logprob: -18.125024795532227
    8. '],' → logprob: -18.375024795532227
    9. ':].' → logprob: -18.500024795532227
    10. ']?.' → logprob: -18.750024795532227

Token 346: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: 0.0
    2. '.append' → logprob: -18.5
    3. ' append' → logprob: -18.5
    4. '_append' → logprob: -22.25
    5. '	append' → logprob: -22.75
    6. 'app' → logprob: -23.0
    7. 'appen' → logprob: -23.25
    8. 'Append' → logprob: -24.0
    9. 'add' → logprob: -25.375
    10. 'appe' → logprob: -27.625

Token 347: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -2.2200749754119897e-06
    2. '(' → logprob: -13.500001907348633
    3. 'b' → logprob: -14.125001907348633
    4. ' (' → logprob: -19.250001907348633
    5. '	b' → logprob: -20.250001907348633
    6. ' b' → logprob: -21.000001907348633
    7. '(
' → logprob: -21.250001907348633
    8. '((' → logprob: -21.750001907348633
    9. ',b' → logprob: -22.625001907348633
    10. ')b' → logprob: -23.250001907348633

Token 348: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -14.125000953674316
    3. ')
' → logprob: -15.250000953674316
    4. '')' → logprob: -19.000001907348633
    5. '))' → logprob: -19.500001907348633
    6. '())' → logprob: -19.500001907348633
    7. ')return' → logprob: -19.625001907348633
    8. '),' → logprob: -19.625001907348633
    9. '`)' → logprob: -19.750001907348633
    10. ')`' → logprob: -19.750001907348633

Token 349: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011594727635383606
    2. '<|end|>' → logprob: -4.511594772338867
    3. '
' → logprob: -8.011594772338867
    4. '```' → logprob: -9.636594772338867
    5. '<|end|>' → logprob: -10.136594772338867
    6. '#' → logprob: -10.261594772338867
    7. ')' → logprob: -10.636594772338867
    8. '  
' → logprob: -11.511594772338867
    9. 'newline' → logprob: -11.761594772338867
    10. '\' → logprob: -12.261594772338867

Token 350: ' link' (ID: 3461)
  Prédit: ' link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' link' → logprob: -0.8498323559761047
    2. 'link' → logprob: -0.8498323559761047
    3. 'main' → logprob: -3.09983229637146
    4. ' main' → logprob: -3.09983229637146
    5. ' empty' → logprob: -5.224832534790039
    6. 'empty' → logprob: -5.599832534790039
    7. ' solve' → logprob: -5.724832534790039
    8. ' add' → logprob: -5.849832534790039
    9. 'solve' → logprob: -5.849832534790039
    10. 'add' → logprob: -5.974832534790039

Token 351: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.3306015716807451e-05
    2. 'ist' → logprob: -11.50001335144043
    3. 'link' → logprob: -13.25001335144043
    4. '_list' → logprob: -14.12501335144043
    5. 'lst' → logprob: -15.12501335144043
    6. ' list' → logprob: -16.25001335144043
    7. 'ilst' → logprob: -17.00001335144043
    8. 'lists' → logprob: -17.12501335144043
    9. 'set' → logprob: -17.12501335144043
    10. 'k' → logprob: -17.50001335144043

Token 352: '_add' (ID: 8390)
  Prédit: '_set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.4888986647129059
    2. '_get' → logprob: -1.6138986349105835
    3. '_pop' → logprob: -2.363898754119873
    4. '_clear' → logprob: -3.238898754119873
    5. '_append' → logprob: -4.113898754119873
    6. '_keys' → logprob: -4.988898754119873
    7. '_add' → logprob: -5.113898754119873
    8. '_insert' → logprob: -5.238898754119873
    9. '_has' → logprob: -5.613898754119873
    10. '_create' → logprob: -5.988898754119873

Token 353: '(link' (ID: 51236)
  Prédit: '(link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(link' → logprob: -0.004785038065165281
    2. '(' → logprob: -5.379785060882568
    3. '_append' → logprob: -10.62978458404541
    4. '_(' → logprob: -10.62978458404541
    5. '(line' → logprob: -10.62978458404541
    6. '_' → logprob: -11.00478458404541
    7. '(ll' → logprob: -11.25478458404541
    8. '_set' → logprob: -11.50478458404541
    9. ' (' → logprob: -11.62978458404541
    10. '(_' → logprob: -11.75478458404541

Token 354: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -3.5120287066092715e-05
    2. 'set' → logprob: -10.375035285949707
    3. 'ist' → logprob: -12.875035285949707
    4. '(list' → logprob: -14.500035285949707
    5. 'def' → logprob: -15.375035285949707
    6. '(' → logprob: -15.375035285949707
    7. '_list' → logprob: -16.12503433227539
    8. 'default' → logprob: -16.62503433227539
    9. 'link' → logprob: -17.50003433227539
    10. ' list' → logprob: -17.62503433227539

Token 355: ',' (ID: 11)
  Prédit: '(link'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(link' → logprob: -0.37029188871383667
    2. ',' → logprob: -1.2452919483184814
    3. '_set' → logprob: -4.495291709899902
    4. '_,' → logprob: -5.995291709899902
    5. '_link' → logprob: -6.620291709899902
    6. ')(' → logprob: -6.620291709899902
    7. '_key' → logprob: -6.745291709899902
    8. ')' → logprob: -6.745291709899902
    9. ' (' → logprob: -7.245291709899902
    10. '(' → logprob: -7.245291709899902

Token 356: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12491070479154587
    2. ' a' → logprob: -2.249910593032837
    3. ' key' → logprob: -4.999910831451416
    4. 'key' → logprob: -5.249910831451416
    5. 'k' → logprob: -12.124910354614258
    6. ' ' → logprob: -12.499910354614258
    7. '	a' → logprob: -12.499910354614258
    8. '   ' → logprob: -12.749910354614258
    9. 'link' → logprob: -12.874910354614258
    10. ' link' → logprob: -13.249910354614258

Token 357: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012511172099038959
    2. ',a' → logprob: -9.62512493133545
    3. ' ,' → logprob: -9.87512493133545
    4. ',key' → logprob: -12.37512493133545
    5. ',b' → logprob: -12.87512493133545
    6. 'a' → logprob: -14.87512493133545
    7. ',k' → logprob: -15.75012493133545
    8. '   ' → logprob: -17.000125885009766
    9. ',
' → logprob: -17.250125885009766
    10. ')' → logprob: -18.375125885009766

Token 358: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0004306692280806601
    2. ' b' → logprob: -7.750430583953857
    3. 'key' → logprob: -18.750431060791016
    4. ')b' → logprob: -18.875431060791016
    5. 'a' → logprob: -19.125431060791016
    6. ' ' → logprob: -19.375431060791016
    7. '	b' → logprob: -20.375431060791016
    8. ',b' → logprob: -20.375431060791016
    9. '   ' → logprob: -20.875431060791016
    10. ')' → logprob: -20.875431060791016

Token 359: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5777885317802429
    2. '):
' → logprob: -0.8277885317802429
    3. ')' → logprob: -6.327788352966309
    4. '):
' → logprob: -10.327788352966309
    5. '):

' → logprob: -11.077788352966309
    6. ',' → logprob: -11.702788352966309
    7. ' ):' → logprob: -13.202788352966309
    8. '   ' → logprob: -13.577788352966309
    9. ' ):
' → logprob: -14.702788352966309
    10. ')
' → logprob: -15.827788352966309

Token 360: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025932377204298973
    2. ' if' → logprob: -3.7759323120117188
    3. 'if' → logprob: -6.025932312011719
    4. ' link' → logprob: -8.525932312011719
    5. 'link' → logprob: -10.275932312011719
    6. '
' → logprob: -10.775932312011719
    7. '```' → logprob: -12.275932312011719
    8. 'def' → logprob: -12.400932312011719
    9. '   ' → logprob: -13.275932312011719
    10. '(link' → logprob: -14.150932312011719

Token 361: ' link' (ID: 3461)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06321452558040619
    2. ' if' → logprob: -3.3132145404815674
    3. '   ' → logprob: -3.8132145404815674
    4. 'link' (adapté à ' link') → logprob: -5.938214302062988
    5. ' link' → logprob: -9.313214302062988
    6. '
' → logprob: -10.813214302062988
    7. 'def' → logprob: -11.188214302062988
    8. '```' → logprob: -11.313214302062988
    9. 'try' → logprob: -13.188214302062988
    10. '``' → logprob: -13.438214302062988

Token 362: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -5.512236498361744e-07
    2. '[a' → logprob: -15.000000953674316
    3. 'link' → logprob: -16.5
    4. '[' → logprob: -16.875
    5. '_list' → logprob: -17.375
    6. 'lists' → logprob: -17.625
    7. ' list' → logprob: -19.375
    8. 'a' → logprob: -19.75
    9. '[
' → logprob: -19.75
    10. '[list' → logprob: -20.25

Token 363: '_set' (ID: 5451)
  Prédit: '.setdefault'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.setdefault' → logprob: -0.3150438070297241
    2. '_set' → logprob: -1.3150438070297241
    3. 'set' → logprob: -6.440043926239014
    4. '[a' → logprob: -9.940043449401855
    5. 'a' → logprob: -10.690043449401855
    6. '=' → logprob: -11.190043449401855
    7. 'link' → logprob: -11.190043449401855
    8. '.set' → logprob: -11.565043449401855
    9. '_sets' → logprob: -11.565043449401855
    10. '_append' → logprob: -11.690043449401855

Token 364: 'default' (ID: 4211)
  Prédit: 'default'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.00021915239631198347
    2. 'def' → logprob: -8.500219345092773
    3. '_default' → logprob: -11.125219345092773
    4. '```' → logprob: -15.250219345092773
    5. '(default' → logprob: -15.375219345092773
    6. ' default' → logprob: -16.500219345092773
    7. '(link' → logprob: -16.750219345092773
    8. 'Default' → logprob: -17.125219345092773
    9. ''default' → logprob: -17.250219345092773
    10. 'link' → logprob: -17.250219345092773

Token 365: '(link' (ID: 51236)
  Prédit: '(link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(link' → logprob: -0.0001239196863025427
    2. '(' → logprob: -9.000123977661133
    3. ' link' → logprob: -16.250123977661133
    4. 'link' → logprob: -16.250123977661133
    5. '(
' → logprob: -16.500123977661133
    6. '$link' → logprob: -16.625123977661133
    7. ' (' → logprob: -16.750123977661133
    8. '(lock' → logprob: -17.250123977661133
    9. '(line' → logprob: -17.500123977661133
    10. '<link' → logprob: -18.375123977661133

Token 366: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -3.893480243277736e-05
    2. 'link' → logprob: -10.250039100646973
    3. 'ist' → logprob: -12.750039100646973
    4. '(link' → logprob: -15.125039100646973
    5. 'lists' → logprob: -15.625039100646973
    6. ' list' → logprob: -17.625038146972656
    7. ',' → logprob: -18.000038146972656
    8. 'List' → logprob: -18.000038146972656
    9. 'lista' → logprob: -18.125038146972656
    10. '_list' → logprob: -18.375038146972656

Token 367: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.822646693966817e-06
    2. ',a' → logprob: -13.000007629394531
    3. '(link' → logprob: -13.250007629394531
    4. ' ,' → logprob: -13.375007629394531
    5. ',
' → logprob: -14.250007629394531
    6. ')' → logprob: -14.875007629394531
    7. ',key' → logprob: -15.125007629394531
    8. ',line' → logprob: -15.125007629394531
    9. 'a' → logprob: -15.750007629394531
    10. ',l' → logprob: -16.37500762939453

Token 368: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00033546582562848926
    2. ' a' → logprob: -8.000335693359375
    3. ')a' → logprob: -18.500335693359375
    4. ')' → logprob: -20.375335693359375
    5. '	a' → logprob: -20.625335693359375
    6. '   ' → logprob: -21.000335693359375
    7. '_a' → logprob: -21.250335693359375
    8. '(a' → logprob: -21.750335693359375
    9. '#a' → logprob: -22.500335693359375
    10. ' ' → logprob: -22.875335693359375

Token 369: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.05242897570133209
    2. ',' → logprob: -3.552428960800171
    3. ')' → logprob: -3.802428960800171
    4. ' )
' → logprob: -9.42742919921875
    5. ')
' → logprob: -11.42742919921875
    6. ',b' → logprob: -12.67742919921875
    7. '   ' → logprob: -12.67742919921875
    8. ',a' → logprob: -13.55242919921875
    9. ')b' → logprob: -13.55242919921875
    10. ')a' → logprob: -13.80242919921875

Token 370: '   ' (ID: 271)
  Prédit: 'link'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'link' → logprob: -0.180247962474823
    2. '   ' → logprob: -1.8052480220794678
    3. ' link' → logprob: -7.930247783660889
    4. '```' → logprob: -9.680248260498047
    5. '<link' → logprob: -10.930248260498047
    6. '(link' → logprob: -11.055248260498047
    7. '	link' → logprob: -11.430248260498047
    8. '
' → logprob: -11.555248260498047
    9. '_link' → logprob: -12.055248260498047
    10. '.link' → logprob: -12.055248260498047

Token 371: ' link' (ID: 3461)
  Prédit: 'link'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'link' (adapté à ' link') → logprob: -2.5776860184123507e-06
    2. '   ' → logprob: -13.37500286102295
    3. ' link' → logprob: -14.00000286102295
    4. '```' → logprob: -16.875001907348633
    5. 'if' → logprob: -17.750001907348633
    6. '    
' → logprob: -18.500001907348633
    7. '	link' → logprob: -18.500001907348633
    8. 'list' → logprob: -19.375001907348633
    9. '<link' → logprob: -19.500001907348633
    10. '
' → logprob: -19.625001907348633

Token 372: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.9361264946837764e-07
    2. 'ist' → logprob: -16.125
    3. '_list' → logprob: -18.875
    4. 'set' → logprob: -19.875
    5. ' list' → logprob: -19.875
    6. 'link' → logprob: -21.0
    7. 'lists' → logprob: -21.25
    8. 'lst' → logprob: -21.75
    9. 'li' → logprob: -22.125
    10. '[' → logprob: -22.125

Token 373: '_set' (ID: 5451)
  Prédit: '_append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_append' → logprob: -0.16068682074546814
    2. '[a' → logprob: -1.9106868505477905
    3. '_add' → logprob: -8.660686492919922
    4. 'append' → logprob: -9.160686492919922
    5. '.append' → logprob: -9.910686492919922
    6. 'a' → logprob: -10.160686492919922
    7. '[' → logprob: -10.535686492919922
    8. '_set' → logprob: -10.785686492919922
    9. 'Append' → logprob: -11.160686492919922
    10. '[_' → logprob: -11.410686492919922

Token 374: 'default' (ID: 4211)
  Prédit: 'default'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -2.165027217415627e-05
    2. '```' → logprob: -12.000021934509277
    3. 'def' → logprob: -12.250021934509277
    4. 'key' → logprob: -12.750021934509277
    5. '_default' → logprob: -13.250021934509277
    6. '(default' → logprob: -13.250021934509277
    7. '   ' → logprob: -13.500021934509277
    8. '(key' → logprob: -13.875021934509277
    9. '(' → logprob: -15.250021934509277
    10. 'DEFAULT' → logprob: -15.375021934509277

Token 375: '(link' (ID: 51236)
  Prédit: '(link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(link' → logprob: -3.9888433093437925e-05
    2. '(' → logprob: -10.375040054321289
    3. 'link' → logprob: -11.875040054321289
    4. '(
' → logprob: -14.500040054321289
    5. '```' → logprob: -14.875040054321289
    6. '$link' → logprob: -14.875040054321289
    7. '<link' → logprob: -16.12504005432129
    8. ' link' → logprob: -16.25004005432129
    9. '_link' → logprob: -16.87504005432129
    10. ' (' → logprob: -17.12504005432129

Token 376: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -2.8087270038668066e-05
    2. 'link' → logprob: -10.500027656555176
    3. 'lists' → logprob: -14.750027656555176
    4. 'ist' → logprob: -16.000028610229492
    5. '(link' → logprob: -17.875028610229492
    6. ',' → logprob: -18.125028610229492
    7. ' list' → logprob: -20.000028610229492
    8. '(list' → logprob: -20.000028610229492
    9. 'lista' → logprob: -20.625028610229492
    10. 'lst' → logprob: -21.375028610229492

Token 377: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.676981345459353e-06
    2. ',b' → logprob: -12.500005722045898
    3. '(link' → logprob: -14.000005722045898
    4. 'b' → logprob: -14.500005722045898
    5. ' ,' → logprob: -14.750005722045898
    6. 'link' → logprob: -16.6250057220459
    7. ',
' → logprob: -16.6250057220459
    8. '   ' → logprob: -16.8750057220459
    9. ')' → logprob: -17.6250057220459
    10. ',key' → logprob: -17.6250057220459

Token 378: ' b' (ID: 287)
  Prédit: 'link'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'link' → logprob: -0.0011774895247071981
    2. 'b' → logprob: -6.7511773109436035
    3. ' link' → logprob: -12.251177787780762
    4. '(link' → logprob: -13.001177787780762
    5. 'list' → logprob: -16.126176834106445
    6. ')' → logprob: -16.126176834106445
    7. 'a' → logprob: -17.126176834106445
    8. 'linked' → logprob: -17.876176834106445
    9. ' b' → logprob: -18.001176834106445
    10. '   ' → logprob: -18.376176834106445

Token 379: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5761693716049194
    2. ')
' → logprob: -0.8261693716049194
    3. '   ' → logprob: -8.45116901397705
    4. ')

' → logprob: -11.45116901397705
    5. ' )
' → logprob: -12.95116901397705
    6. ')
' → logprob: -13.95116901397705
    7. ' )' → logprob: -14.32616901397705
    8. 'def' → logprob: -14.32616901397705
    9. ' ' → logprob: -14.45116901397705
    10. ',' → logprob: -16.076169967651367

Token 380: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001059486996382475
    2. 'link' → logprob: -7.876059532165527
    3. '(link' → logprob: -8.376059532165527
    4. '
' → logprob: -8.626059532165527
    5. ')' → logprob: -9.126059532165527
    6. '```' → logprob: -9.751059532165527
    7. '    
' → logprob: -10.126059532165527
    8. '	link' → logprob: -11.251059532165527
    9. ' link' → logprob: -11.376059532165527
    10. '<|end|>' → logprob: -11.626059532165527

Token 381: ' link' (ID: 3461)
  Prédit: 'link'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'link' (adapté à ' link') → logprob: -2.3319124011322856e-05
    2. 'if' → logprob: -10.750022888183594
    3. ' link' → logprob: -13.500022888183594
    4. '```' → logprob: -15.250022888183594
    5. 'try' → logprob: -16.000022888183594
    6. '   ' → logprob: -16.375022888183594
    7. '	link' → logprob: -18.000022888183594
    8. 'list' → logprob: -18.000022888183594
    9. '(link' → logprob: -18.875022888183594
    10. 'line' → logprob: -19.000022888183594

Token 382: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: 0.0
    2. '_list' → logprob: -18.5
    3. 'lists' → logprob: -18.75
    4. '[' → logprob: -19.5
    5. ' list' → logprob: -20.0
    6. '[list' → logprob: -22.125
    7. 'append' → logprob: -23.0
    8. 'link' → logprob: -23.125
    9. 'ist' → logprob: -23.5
    10. '[a' → logprob: -23.75

Token 383: '_append' (ID: 69293)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.10860763490200043
    2. '_add' → logprob: -2.358607530593872
    3. '_append' → logprob: -5.108607769012451
    4. '_set' → logprob: -6.108607769012451
    5. '[' → logprob: -10.233607292175293
    6. 'a' → logprob: -11.108607292175293
    7. '_get' → logprob: -11.483607292175293
    8. '.setdefault' → logprob: -11.483607292175293
    9. '[b' → logprob: -11.983607292175293
    10. 'append' → logprob: -12.233607292175293

Token 384: '(link' (ID: 51236)
  Prédit: '(link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(link' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -14.000000953674316
    3. '$link' → logprob: -16.000001907348633
    4. '```' → logprob: -16.750001907348633
    5. 'link' → logprob: -16.875001907348633
    6. ' link' → logprob: -17.875001907348633
    7. '_link' → logprob: -18.250001907348633
    8. ' (' → logprob: -18.375001907348633
    9. '(line' → logprob: -18.375001907348633
    10. '<link' → logprob: -18.625001907348633

Token 385: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.9623810658231378e-05
    2. 'link' → logprob: -10.875020027160645
    3. 'ist' → logprob: -14.625020027160645
    4. 'lists' → logprob: -16.375019073486328
    5. ' list' → logprob: -16.875019073486328
    6. ',' → logprob: -17.000019073486328
    7. '_list' → logprob: -18.125019073486328
    8. 'li' → logprob: -18.750019073486328
    9. 'lis' → logprob: -19.000019073486328
    10. 'lst' → logprob: -19.000019073486328

Token 386: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03374562785029411
    2. '(link' → logprob: -3.408745527267456
    3. ' ,' → logprob: -10.158745765686035
    4. ')' → logprob: -10.658745765686035
    5. 'link' → logprob: -11.158745765686035
    6. ' link' → logprob: -11.408745765686035
    7. '(' → logprob: -12.408745765686035
    8. '```' → logprob: -12.908745765686035
    9. ',line' → logprob: -13.033745765686035
    10. ',
' → logprob: -13.908745765686035

Token 387: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005678841378539801
    2. ' a' → logprob: -5.255678653717041
    3. 'link' → logprob: -7.755678653717041
    4. ' link' → logprob: -11.0056791305542
    5. ')a' → logprob: -17.380678176879883
    6. '```' → logprob: -17.630678176879883
    7. ')' → logprob: -17.755678176879883
    8. ' ' → logprob: -17.755678176879883
    9. 'b' → logprob: -18.005678176879883
    10. '   ' → logprob: -18.380678176879883

Token 388: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016172155737876892
    2. ',b' → logprob: -6.501617431640625
    3. ' ,' → logprob: -9.126617431640625
    4. 'b' → logprob: -12.126617431640625
    5. ',
' → logprob: -15.126617431640625
    6. ')' → logprob: -15.376617431640625
    7. ' b' → logprob: -15.626617431640625
    8. '[' → logprob: -18.251617431640625
    9. ',a' → logprob: -18.376617431640625
    10. '   ' → logprob: -18.376617431640625

Token 389: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.006715370807796717
    2. ' b' → logprob: -5.006715297698975
    3. ' ' → logprob: -17.631715774536133
    4. '   ' → logprob: -19.131715774536133
    5. '	b' → logprob: -19.256715774536133
    6. ')b' → logprob: -20.381715774536133
    7. '[b' → logprob: -22.131715774536133
    8. '  ' → logprob: -22.381715774536133
    9. '    ' → logprob: -22.756715774536133
    10. '_b' → logprob: -23.006715774536133

Token 390: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.6656825866666622e-05
    2. ')
' → logprob: -10.62502670288086
    3. ')return' → logprob: -13.62502670288086
    4. ' )' → logprob: -14.37502670288086
    5. ')

' → logprob: -16.00002670288086
    6. '<|end|>' → logprob: -16.25002670288086
    7. '())' → logprob: -16.75002670288086
    8. ')#' → logprob: -16.87502670288086
    9. '))' → logprob: -16.87502670288086
    10. '   ' → logprob: -17.25002670288086

Token 391: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 392: ' link' (ID: 3461)
  Prédit: 'link'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'link' (adapté à ' link') → logprob: -0.0004839385801460594
    2. ' link' → logprob: -7.750483989715576
    3. '<|end|>' → logprob: -10.625483512878418
    4. 'def' → logprob: -11.125483512878418
    5. '	link' → logprob: -12.375483512878418
    6. '(link' → logprob: -13.125483512878418
    7. '_link' → logprob: -13.125483512878418
    8. '   ' → logprob: -13.750483512878418
    9. '-link' → logprob: -13.750483512878418
    10. '```' → logprob: -13.875483512878418

Token 393: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: 0.0
    2. 'ist' → logprob: -17.75
    3. 'lst' → logprob: -18.125
    4. 'link' → logprob: -18.875
    5. '_list' → logprob: -19.5
    6. 'l' → logprob: -20.0
    7. ' list' → logprob: -20.25
    8. 'set' → logprob: -20.375
    9. 'lists' → logprob: -20.375
    10. 'List' → logprob: -21.25

Token 394: '_append' (ID: 69293)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.3235468864440918
    2. '[' → logprob: -1.4485468864440918
    3. '<|end|>' → logprob: -3.948546886444092
    4. '_add' → logprob: -4.573546886444092
    5. '.setdefault' → logprob: -5.323546886444092
    6. 'return' → logprob: -6.448546886444092
    7. '[]' → logprob: -6.948546886444092
    8. ')' → logprob: -7.198546886444092
    9. '_set' → logprob: -7.573546886444092
    10. '[key' → logprob: -7.698546886444092

Token 395: '(link' (ID: 51236)
  Prédit: '(link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(link' → logprob: -2.3438327843905427e-05
    2. '(' → logprob: -10.75002384185791
    3. 'link' → logprob: -14.12502384185791
    4. '(
' → logprob: -15.12502384185791
    5. '$link' → logprob: -15.37502384185791
    6. ' (' → logprob: -15.62502384185791
    7. ' link' → logprob: -16.125022888183594
    8. '```' → logprob: -16.375022888183594
    9. '(lock' → logprob: -16.500022888183594
    10. '<link' → logprob: -17.250022888183594

Token 396: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.02325444668531418
    2. 'link' → logprob: -3.77325439453125
    3. '(link' → logprob: -11.89825439453125
    4. 'lists' → logprob: -13.14825439453125
    5. '[' → logprob: -15.77325439453125
    6. ')' → logprob: -17.52325439453125
    7. '(list' → logprob: -18.14825439453125
    8. 'links' → logprob: -18.14825439453125
    9. ',' → logprob: -18.27325439453125
    10. '(' → logprob: -18.39825439453125

Token 397: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.281546413898468
    2. '(link' → logprob: -1.4065463542938232
    3. '[' → logprob: -8.906546592712402
    4. 'link' → logprob: -9.156546592712402
    5. ')' → logprob: -9.531546592712402
    6. '```' → logprob: -10.531546592712402
    7. '(' → logprob: -11.156546592712402
    8. ' (' → logprob: -12.031546592712402
    9. ' ,' → logprob: -12.156546592712402
    10. ',
' → logprob: -12.281546592712402

Token 398: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4382302165031433
    2. 'link' → logprob: -1.188230276107788
    3. ' b' → logprob: -3.688230276107788
    4. ' link' → logprob: -3.688230276107788
    5. '(link' → logprob: -10.688230514526367
    6. '(b' → logprob: -12.563230514526367
    7. ')b' → logprob: -13.938230514526367
    8. ')' → logprob: -14.563230514526367
    9. '[b' → logprob: -14.563230514526367
    10. 'a' → logprob: -14.938230514526367

Token 399: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003066222125198692
    2. ',a' → logprob: -8.125307083129883
    3. ' ,' → logprob: -12.250307083129883
    4. '[a' → logprob: -12.500307083129883
    5. 'a' → logprob: -13.375307083129883
    6. '(a' → logprob: -15.375307083129883
    7. ' a' → logprob: -16.000307083129883
    8. ',[' → logprob: -16.375307083129883
    9. '   ' → logprob: -16.625307083129883
    10. '[' → logprob: -19.250307083129883

Token 400: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0015023599844425917
    2. ' a' → logprob: -6.501502513885498
    3. '   ' → logprob: -18.376502990722656
    4. ' ' → logprob: -18.751502990722656
    5. '	a' → logprob: -19.001502990722656
    6. ')a' → logprob: -19.751502990722656
    7. '  ' → logprob: -20.751502990722656
    8. ')' → logprob: -21.251502990722656
    9. '[a' → logprob: -21.876502990722656
    10. '    ' → logprob: -22.001502990722656

Token 401: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.796184723294573e-06
    2. ')
' → logprob: -12.125005722045898
    3. ')

' → logprob: -16.3750057220459
    4. ' )' → logprob: -16.6250057220459
    5. ')return' → logprob: -18.3750057220459
    6. ')`' → logprob: -18.3750057220459
    7. '   ' → logprob: -18.5000057220459
    8. '))' → logprob: -18.7500057220459
    9. ')}' → logprob: -19.7500057220459
    10. ')#' → logprob: -20.0000057220459

Token 402: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02306237816810608
    2. '#' → logprob: -4.523062229156494
    3. '<|end|>' → logprob: -5.523062229156494
    4. ')' → logprob: -5.773062229156494
    5. '
' → logprob: -6.523062229156494
    6. '```' → logprob: -6.898062229156494
    7. 'n' → logprob: -8.273062705993652
    8. 'from' → logprob: -8.273062705993652
    9. '.' → logprob: -8.898062705993652
    10. '[' → logprob: -9.148062705993652

Token 403: ' make' (ID: 1520)
  Prédit: 'link'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'link' → logprob: -1.444355845451355
    2. 'pow' → logprob: -1.569355845451355
    3. 'main' → logprob: -2.1943559646606445
    4. ' link' → logprob: -3.3193559646606445
    5. 'empty' → logprob: -3.4443559646606445
    6. 'int' → logprob: -3.5693559646606445
    7. 'max' → logprob: -3.6943559646606445
    8. 'factor' → logprob: -3.9443559646606445
    9. 'l' → logprob: -4.0693559646606445
    10. 'range' → logprob: -4.1943559646606445

Token 404: '_link' (ID: 16227)
  Prédit: '_link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_link' → logprob: -0.10674726963043213
    2. '_list' → logprob: -3.3567471504211426
    3. '_array' → logprob: -3.7317471504211426
    4. '_empty' → logprob: -4.231747150421143
    5. 'def' → logprob: -4.731747150421143
    6. '_dict' → logprob: -5.856747150421143
    7. '_sorted' → logprob: -6.356747150421143
    8. '_set' → logprob: -6.606747150421143
    9. '_tuple' → logprob: -6.731747150421143
    10. '_graph' → logprob: -6.731747150421143

Token 405: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -6.921253225300461e-05
    2. '_list' → logprob: -10.000069618225098
    3. 'link' → logprob: -11.125069618225098
    4. 'lists' → logprob: -12.000069618225098
    5. 'lst' → logprob: -13.750069618225098
    6. 'li' → logprob: -15.125069618225098
    7. 'ist' → logprob: -15.250069618225098
    8. 'l' → logprob: -15.375069618225098
    9. ' list' → logprob: -15.875069618225098
    10. 'liste' → logprob: -16.12506866455078

Token 406: '(x' (ID: 4061)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.07455258816480637
    2. '(size' → logprob: -3.199552536010742
    3. '():
' → logprob: -4.574552536010742
    4. '(n' → logprob: -4.574552536010742
    5. '(link' → logprob: -5.074552536010742
    6. '(depth' → logprob: -6.699552536010742
    7. '(keys' → logprob: -7.574552536010742
    8. '(length' → logprob: -7.824552536010742
    9. '(count' → logprob: -7.949552536010742
    10. '(key' → logprob: -7.949552536010742

Token 407: 'y' (ID: 88)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2351115494966507
    2. '):
' → logprob: -1.6101115942001343
    3. ',' → logprob: -5.110111713409424
    4. '_list' → logprob: -6.485111713409424
    5. ')' → logprob: -7.235111713409424
    6. 'list' → logprob: -7.860111713409424
    7. ':' → logprob: -8.110111236572266
    8. '):
' → logprob: -8.485111236572266
    9. '[]):' → logprob: -9.235111236572266
    10. ':list' → logprob: -9.360111236572266

Token 408: 'list' (ID: 2641)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16982336342334747
    2. '):
' → logprob: -2.169823408126831
    3. 's' → logprob: -3.294823408126831
    4. '_list' → logprob: -6.294823169708252
    5. ')' → logprob: -6.669823169708252
    6. '_pairs' → logprob: -6.669823169708252
    7. ',' → logprob: -8.66982364654541
    8. 'list' → logprob: -8.91982364654541
    9. 'pairs' → logprob: -9.54482364654541
    10. 'es' → logprob: -10.29482364654541

Token 409: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.027210699394345284
    2. ',' → logprob: -4.152210712432861
    3. '):
' → logprob: -4.527210712432861
    4. ')' → logprob: -8.527210235595703
    5. ':' → logprob: -10.777210235595703
    6. ' ):' → logprob: -11.277210235595703
    7. '):
' → logprob: -11.277210235595703
    8. ':list' → logprob: -11.277210235595703
    9. '   ' → logprob: -11.527210235595703
    10. '_list' → logprob: -11.777210235595703

Token 410: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00045498309191316366
    2. ' link' → logprob: -8.000454902648926
    3. 'link' → logprob: -9.750454902648926
    4. '	link' → logprob: -10.000454902648926
    5. '   ' → logprob: -12.125454902648926
    6. '(link' → logprob: -13.250454902648926
    7. ' ll' → logprob: -13.250454902648926
    8. '
' → logprob: -13.250454902648926
    9. '```' → logprob: -13.375454902648926
    10. '    
' → logprob: -13.625454902648926

Token 411: ' link' (ID: 3461)
  Prédit: 'link'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'link' (adapté à ' link') → logprob: -0.12248506397008896
    2. 'll' → logprob: -2.2474851608276367
    3. 'l' → logprob: -5.122485160827637
    4. ' link' → logprob: -6.122485160827637
    5. '   ' → logprob: -7.747485160827637
    6. 'd' → logprob: -7.997485160827637
    7. ' ll' → logprob: -8.497485160827637
    8. 'ln' → logprob: -8.747485160827637
    9. 'res' → logprob: -10.247485160827637
    10. 'ret' → logprob: -10.247485160827637

Token 412: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -3.583550642360933e-05
    2. ' =' → logprob: -10.750036239624023
    3. '=[]' → logprob: -12.125036239624023
    4. '=' → logprob: -12.875036239624023
    5. '=[]
' → logprob: -13.500036239624023
    6. 'link' → logprob: -13.500036239624023
    7. 'ist' → logprob: -13.625036239624023
    8. '={}
' → logprob: -14.500036239624023
    9. '={}' → logprob: -14.625036239624023
    10. 'lists' → logprob: -14.625036239624023

Token 413: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31368228793144226
    2. ' =' → logprob: -1.3136823177337646
    3. '={}' → logprob: -7.8136820793151855
    4. '={}
' → logprob: -11.563682556152344
    5. '={' → logprob: -13.188682556152344
    6. '{}' → logprob: -13.563682556152344
    7. '=[]' → logprob: -13.688682556152344
    8. ',' → logprob: -14.063682556152344
    9. '={},' → logprob: -15.063682556152344
    10. '=set' → logprob: -15.063682556152344

Token 414: ' empty' (ID: 8213)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0006079599261283875
    2. 'empty' → logprob: -7.500607967376709
    3. '{}
' → logprob: -10.12560749053955
    4. '{}

' → logprob: -11.87560749053955
    5. ' {}' → logprob: -12.25060749053955
    6. 'default' → logprob: -13.00060749053955
    7. ' empty' → logprob: -14.62560749053955
    8. 'dict' → logprob: -15.00060749053955
    9. '{})' → logprob: -16.500608444213867
    10. '={}' → logprob: -17.125608444213867

Token 415: '_link' (ID: 16227)
  Prédit: '_link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_link' → logprob: -0.0030676720198243856
    2. 'link' → logprob: -6.503067493438721
    3. 'dict' → logprob: -7.503067493438721
    4. '_' → logprob: -7.878067493438721
    5. '{}' → logprob: -8.128067970275879
    6. '_dict' → logprob: -9.003067970275879
    7. '{}_' → logprob: -9.628067970275879
    8. '{' → logprob: -9.878067970275879
    9. '(x' → logprob: -10.503067970275879
    10. '(link' → logprob: -10.628067970275879

Token 416: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -4.320199877838604e-07
    2. 'dict' → logprob: -14.875
    3. '{}' → logprob: -17.75
    4. '_list' → logprob: -19.5
    5. '{' → logprob: -20.625
    6. ' list' → logprob: -21.0
    7. 'link' → logprob: -21.25
    8. 'ist' → logprob: -22.125
    9. 'lists' → logprob: -22.125
    10. '{
' → logprob: -23.5

Token 417: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.38737761974334717
    2. '()
' → logprob: -1.1373776197433472
    3. '   ' → logprob: -7.762377738952637
    4. 'for' → logprob: -10.012377738952637
    5. '()\' → logprob: -11.137377738952637
    6. '()

' → logprob: -11.887377738952637
    7. '()
' → logprob: -12.262377738952637
    8. '
' → logprob: -12.512377738952637
    9. ' for' → logprob: -13.012377738952637
    10. 'def' → logprob: -14.512377738952637

Token 418: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08796026557683945
    2. 'for' → logprob: -2.5879602432250977
    3. ' for' → logprob: -4.712960243225098
    4. '<|end|>' → logprob: -10.712960243225098
    5. '	for' → logprob: -11.337960243225098
    6. '    
' → logprob: -11.337960243225098
    7. 'def' → logprob: -13.837960243225098
    8. ')' → logprob: -13.962960243225098
    9. '
' → logprob: -14.337960243225098
    10. ' ' → logprob: -14.587960243225098

Token 419: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -5.3358446166384965e-05
    2. ' for' → logprob: -10.000053405761719
    3. '   ' → logprob: -11.750053405761719
    4. '
' → logprob: -17.00005340576172
    5. '	for' → logprob: -18.12505340576172
    6. '```' → logprob: -19.12505340576172
    7. '    
' → logprob: -19.50005340576172
    8. ' 
' → logprob: -22.12505340576172
    9. '``' → logprob: -22.37505340576172
    10. '  
' → logprob: -23.00005340576172

Token 420: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7862468361854553
    2. 'x' → logprob: -1.0362467765808105
    3. ' a' → logprob: -2.1612467765808105
    4. ' x' → logprob: -2.7862467765808105
    5. '(x' → logprob: -5.1612467765808105
    6. 'xy' → logprob: -6.0362467765808105
    7. '(a' → logprob: -6.4112467765808105
    8. ' xy' → logprob: -6.7862467765808105
    9. ' (' → logprob: -6.9112467765808105
    10. '   ' → logprob: -7.5362467765808105

Token 421: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026417719200253487
    2. ',b' → logprob: -6.127641677856445
    3. ' ,' → logprob: -7.752641677856445
    4. 'b' → logprob: -11.502641677856445
    5. '_,' → logprob: -11.752641677856445
    6. ',
' → logprob: -13.502641677856445
    7. ',_' → logprob: -13.502641677856445
    8. ' in' → logprob: -14.127641677856445
    9. ',x' → logprob: -14.502641677856445
    10. ',y' → logprob: -14.752641677856445

Token 422: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00861456897109747
    2. ' b' → logprob: -4.758614540100098
    3. '	b' → logprob: -17.508615493774414
    4. '   ' → logprob: -17.633615493774414
    5. ' ' → logprob: -17.758615493774414
    6. '    ' → logprob: -19.383615493774414
    7. '  ' → logprob: -19.633615493774414
    8. '_b' → logprob: -20.008615493774414
    9. ',b' → logprob: -20.258615493774414
    10. ')b' → logprob: -20.758615493774414

Token 423: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026303434744477272
    2. 'in' → logprob: -3.65130352973938
    3. ',' → logprob: -14.0263032913208
    4. '	in' → logprob: -14.1513032913208
    5. ' ' → logprob: -15.2763032913208
    6. 'inthe' → logprob: -15.4013032913208
    7. '   ' → logprob: -15.5263032913208
    8. '_in' → logprob: -16.026304244995117
    9. 's' → logprob: -16.276304244995117
    10. 'inth' → logprob: -16.276304244995117

Token 424: ' xy' (ID: 53634)
  Prédit: 'xy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xy' → logprob: -0.0007113590254448354
    2. ' xy' → logprob: -7.250711441040039
    3. '.xy' → logprob: -14.875711441040039
    4. 'xyz' → logprob: -14.875711441040039
    5. '_xy' → logprob: -15.000711441040039
    6. 'x' → logprob: -15.750711441040039
    7. '(x' → logprob: -16.62571144104004
    8. '
' → logprob: -16.62571144104004
    9. ' ' → logprob: -18.00071144104004
    10. 'axy' → logprob: -18.87571144104004

Token 425: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00016218038217630237
    2. '_list' → logprob: -8.750162124633789
    3. 'ist' → logprob: -13.375162124633789
    4. ')' → logprob: -14.375162124633789
    5. ' in' → logprob: -15.250162124633789
    6. 'lst' → logprob: -15.250162124633789
    7. 'lists' → logprob: -15.375162124633789
    8. ' list' → logprob: -15.500162124633789
    9. 'in' → logprob: -15.750162124633789
    10. 's' → logprob: -16.25016212463379

Token 426: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013738033594563603
    2. ':
' → logprob: -6.751373767852783
    3. '):' → logprob: -9.501374244689941
    4. ' in' → logprob: -10.126374244689941
    5. ' :' → logprob: -10.376374244689941
    6. '   ' → logprob: -10.376374244689941
    7. ',' → logprob: -11.376374244689941
    8. ':**' → logprob: -12.751374244689941
    9. ']:' → logprob: -13.251374244689941
    10. '):
' → logprob: -13.501374244689941

Token 427: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005848454311490059
    2. ' link' → logprob: -8.125584602355957
    3. 'link' → logprob: -8.625584602355957
    4. '   ' → logprob: -9.250584602355957
    5. '```' → logprob: -12.125584602355957
    6. '        
' → logprob: -12.875584602355957
    7. '	link' → logprob: -13.250584602355957
    8. '
' → logprob: -13.875584602355957
    9. '_link' → logprob: -14.750584602355957
    10. '(link' → logprob: -15.000584602355957

Token 428: ' link' (ID: 3461)
  Prédit: ' link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' link' → logprob: -0.2135702222585678
    2. 'link' (adapté à ' link') → logprob: -2.2135701179504395
    3. '   ' → logprob: -2.9635701179504395
    4. '       ' → logprob: -3.4635701179504395
    5. '	link' → logprob: -10.338570594787598
    6. '
' → logprob: -12.588570594787598
    7. '    ' → logprob: -12.963570594787598
    8. '(link' → logprob: -13.713570594787598
    9. ' ' → logprob: -14.338570594787598
    10. '_link' → logprob: -14.463570594787598

Token 429: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: 0.0
    2. 'link' → logprob: -21.625
    3. ' list' → logprob: -22.0
    4. 'lists' → logprob: -22.125
    5. '_list' → logprob: -22.375
    6. 'ist' → logprob: -22.5
    7. 'll' → logprob: -24.75
    8. 'lis' → logprob: -25.0
    9. 'lst' → logprob: -25.0
    10. 'ilist' → logprob: -25.0

Token 430: '_add' (ID: 8390)
  Prédit: '_add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -1.3856492842023727e-06
    2. 'add' → logprob: -13.625000953674316
    3. 'Add' → logprob: -16.875001907348633
    4. '_set' → logprob: -17.250001907348633
    5. '_append' → logprob: -17.250001907348633
    6. '_Add' → logprob: -20.000001907348633
    7. '.add' → logprob: -20.625001907348633
    8. '_ad' → logprob: -20.750001907348633
    9. '_make' → logprob: -21.125001907348633
    10. '_get' → logprob: -21.250001907348633

Token 431: '(link' (ID: 51236)
  Prédit: '(link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(link' → logprob: -1.700132997939363e-05
    2. '(' → logprob: -11.000017166137695
    3. '(
' → logprob: -16.250017166137695
    4. 'link' → logprob: -17.000017166137695
    5. ' (' → logprob: -17.125017166137695
    6. ' link' → logprob: -18.000017166137695
    7. '$link' → logprob: -18.125017166137695
    8. '<link' → logprob: -19.500017166137695
    9. '(Link' → logprob: -19.500017166137695
    10. '	link' → logprob: -19.625017166137695

Token 432: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0001593195047462359
    2. 'link' → logprob: -8.75015926361084
    3. 'ist' → logprob: -14.00015926361084
    4. '(link' → logprob: -17.500160217285156
    5. 'lists' → logprob: -18.750160217285156
    6. ' list' → logprob: -20.250160217285156
    7. 'List' → logprob: -20.250160217285156
    8. ',' → logprob: -21.125160217285156
    9. 'li' → logprob: -21.125160217285156
    10. '```' → logprob: -21.625160217285156

Token 433: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.32654589228332e-05
    2. '(link' → logprob: -9.625073432922363
    3. ' ,' → logprob: -12.375073432922363
    4. ')' → logprob: -13.000073432922363
    5. '(' → logprob: -15.125073432922363
    6. ',
' → logprob: -15.375073432922363
    7. ' link' → logprob: -16.625072479248047
    8. 'link' → logprob: -17.500072479248047
    9. '<|end|>' → logprob: -17.750072479248047
    10. '	link' → logprob: -18.000072479248047

Token 434: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.47407835721969604
    2. ' a' → logprob: -0.974078357219696
    3. ')a' → logprob: -13.849078178405762
    4. '	a' → logprob: -15.974078178405762
    5. ')' → logprob: -16.349079132080078
    6. '   ' → logprob: -16.599079132080078
    7. '#a' → logprob: -17.349079132080078
    8. ',a' → logprob: -17.849079132080078
    9. '>a' → logprob: -18.099079132080078
    10. '    ' → logprob: -18.099079132080078

Token 435: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028397070709615946
    2. ',b' → logprob: -6.2528395652771
    3. ' ,' → logprob: -7.0028395652771
    4. ',
' → logprob: -14.502840042114258
    5. '   ' → logprob: -14.627840042114258
    6. 'b' → logprob: -14.752840042114258
    7. '```' → logprob: -17.502840042114258
    8. ')' → logprob: -17.877840042114258
    9. ' b' → logprob: -18.502840042114258
    10. '_,' → logprob: -19.002840042114258

Token 436: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.474077433347702
    2. ' b' → logprob: -0.9740774631500244
    3. '   ' → logprob: -16.474077224731445
    4. ' ' → logprob: -16.474077224731445
    5. ')b' → logprob: -16.474077224731445
    6. '    ' → logprob: -16.724077224731445
    7. '	b' → logprob: -16.849077224731445
    8. ' б' → logprob: -18.349077224731445
    9. '       ' → logprob: -18.474077224731445
    10. ')' → logprob: -18.599077224731445

Token 437: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00471100676804781
    2. ')
' → logprob: -5.379711151123047
    3. '   ' → logprob: -9.504711151123047
    4. ')return' → logprob: -11.129711151123047
    5. ' )' → logprob: -14.254711151123047
    6. ')

' → logprob: -14.879711151123047
    7. ')
' → logprob: -16.004711151123047
    8. '       ' → logprob: -16.629711151123047
    9. '`)' → logprob: -17.129711151123047
    10. 'return' → logprob: -17.129711151123047

Token 438: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00026538874953985214
    2. 'return' → logprob: -8.500265121459961
    3. ' return' → logprob: -10.125265121459961
    4. '
' → logprob: -11.875265121459961
    5. '<|end|>' → logprob: -11.875265121459961
    6. '    
' → logprob: -12.500265121459961
    7. '	return' → logprob: -13.375265121459961
    8. ':return' → logprob: -13.875265121459961
    9. ',' → logprob: -15.125265121459961
    10. '```' → logprob: -15.250265121459961

Token 439: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.16100358963012695
    2. '   ' → logprob: -1.911003589630127
    3. ' return' → logprob: -7.161003589630127
    4. '	return' → logprob: -13.411003112792969
    5. ':return' → logprob: -14.536003112792969
    6. '```' → logprob: -15.411003112792969
    7. '
' → logprob: -15.786003112792969
    8. '    
' → logprob: -16.28600311279297
    9. '       ' → logprob: -16.78600311279297
    10. 'eturn' → logprob: -16.78600311279297

Token 440: ' link' (ID: 3461)
  Prédit: 'link'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'link' → logprob: -0.20141352713108063
    2. ' link' → logprob: -1.7014135122299194
    3. '(link' → logprob: -15.95141315460205
    4. '	link' → logprob: -17.326414108276367
    5. '_link' → logprob: -17.701414108276367
    6. '<link' → logprob: -19.451414108276367
    7. '$link' → logprob: -19.576414108276367
    8. 'Link' → logprob: -21.451414108276367
    9. 'linky' → logprob: -21.701414108276367
    10. ' lien' → logprob: -21.951414108276367

Token 441: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -2.15310683415737e-05
    2. 'link' → logprob: -10.750021934509277
    3. 'ist' → logprob: -17.87502098083496
    4. ' list' → logprob: -18.62502098083496
    5. 'lists' → logprob: -21.75002098083496
    6. 'lst' → logprob: -22.12502098083496
    7. '_list' → logprob: -22.37502098083496
    8. 'li' → logprob: -22.50002098083496
    9. 'k' → logprob: -23.12502098083496
    10. 'List' → logprob: -23.25002098083496

Token 442: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4338321387767792
    2. '<|end|>' → logprob: -1.1838321685791016
    3. '
' → logprob: -3.3088321685791016
    4. '#' → logprob: -5.933832168579102
    5. '<|end|>' → logprob: -5.933832168579102
    6. '```' → logprob: -6.933832168579102
    7. ')' → logprob: -7.308832168579102
    8. '[' → logprob: -7.683832168579102
    9. '

' → logprob: -8.308832168579102
    10. '[]' → logprob: -8.433832168579102

Token 443: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003782500745728612
    2. 'mod' → logprob: -6.628782272338867
    3. '#' → logprob: -6.753782272338867
    4. 'from' → logprob: -7.253782272338867
    5. 'class' → logprob: -8.003782272338867
    6. 'import' → logprob: -9.503782272338867
    7. 'for' → logprob: -10.878782272338867
    8. 'if' → logprob: -11.003782272338867
    9. 'data' → logprob: -11.378782272338867
    10. ')' → logprob: -11.378782272338867

Token 444: ' calc' (ID: 25691)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3593904376029968
    2. 'main' → logprob: -1.8593904972076416
    3. ' dfs' → logprob: -4.3593902587890625
    4. ' make' → logprob: -4.4843902587890625
    5. ' solve' → logprob: -4.4843902587890625
    6. ' binary' → logprob: -4.7343902587890625
    7. ' mod' → logprob: -4.9843902587890625
    8. 'dfs' → logprob: -4.9843902587890625
    9. 'make' → logprob: -5.3593902587890625
    10. 'mod' → logprob: -5.3593902587890625

Token 445: '_init' (ID: 13909)
  Prédit: '_l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.13130059838294983
    2. '_max' → logprob: -4.006300449371338
    3. '_g' → logprob: -4.256300449371338
    4. '_factor' → logprob: -4.381300449371338
    5. '_' → logprob: -4.506300449371338
    6. '_distance' → logprob: -4.631300449371338
    7. '_sum' → logprob: -4.881300449371338
    8. '_dist' → logprob: -5.131300449371338
    9. '_depth' → logprob: -5.256300449371338
    10. '_neighbors' → logprob: -5.631300449371338

Token 446: '_link' (ID: 16227)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -1.7645928859710693
    2. '_value' → logprob: -2.2645928859710693
    3. '_distance' → logprob: -2.3895928859710693
    4. '()' → logprob: -2.7645928859710693
    5. '_val' → logprob: -2.8895928859710693
    6. '_link' → logprob: -3.3895928859710693
    7. '_max' → logprob: -3.3895928859710693
    8. '_sum' → logprob: -3.6395928859710693
    9. '_state' → logprob: -3.7645928859710693
    10. 'dist' → logprob: -3.8895928859710693

Token 447: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.004001703578978777
    2. 'link' → logprob: -5.629001617431641
    3. 'lists' → logprob: -8.87900161743164
    4. 'ist' → logprob: -9.25400161743164
    5. '_list' → logprob: -9.75400161743164
    6. 'lst' → logprob: -10.12900161743164
    7. 'def' → logprob: -10.50400161743164
    8. '_link' → logprob: -12.00400161743164
    9. 'count' → logprob: -12.25400161743164
    10. 'st' → logprob: -12.50400161743164

Token 448: '_vars' (ID: 25901)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.1946527361869812
    2. '(x' → logprob: -2.694652795791626
    3. '(link' → logprob: -3.694652795791626
    4. '(depth' → logprob: -4.194652557373047
    5. '(count' → logprob: -4.694652557373047
    6. '(n' → logprob: -4.819652557373047
    7. '():
' → logprob: -4.819652557373047
    8. '(size' → logprob: -4.944652557373047
    9. '(' → logprob: -5.319652557373047
    10. '_count' → logprob: -5.569652557373047

Token 449: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3128439784049988
    2. '(x' → logprob: -2.1878440380096436
    3. '(link' → logprob: -2.5628440380096436
    4. '(n' → logprob: -3.6878440380096436
    5. '():
' → logprob: -4.9378437995910645
    6. '(s' → logprob: -4.9378437995910645
    7. '(' → logprob: -5.0628437995910645
    8. '(size' → logprob: -5.1878437995910645
    9. '(node' → logprob: -5.5628437995910645
    10. '(graph' → logprob: -5.9378437995910645

Token 450: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008713211864233017
    2. 'return' → logprob: -7.750871181488037
    3. 'pass' → logprob: -8.500871658325195
    4. '    
' → logprob: -9.625871658325195
    5. ' pass' → logprob: -10.500871658325195
    6. ' return' → logprob: -10.750871658325195
    7. 'n' → logprob: -11.000871658325195
    8. 'def' → logprob: -11.250871658325195
    9. '   ' → logprob: -11.250871658325195
    10. '    ' → logprob: -11.500871658325195

Token 451: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016059592366218567
    2. 'return' (adapté à ' return') → logprob: -4.516059398651123
    3. 'n' → logprob: -5.891059398651123
    4. 'pass' → logprob: -8.016059875488281
    5. ' return' → logprob: -8.141059875488281
    6. 'max' → logprob: -8.766059875488281
    7. 'global' → logprob: -8.766059875488281
    8. 'mod' → logprob: -8.891059875488281
    9. 'N' → logprob: -9.141059875488281
    10. 'count' → logprob: -9.391059875488281

Token 452: ' {},' (ID: 32178)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.20866572856903076
    2. '0' → logprob: -2.4586658477783203
    3. '[]' → logprob: -3.0836658477783203
    4. '{},' → logprob: -4.08366584777832
    5. ' {}' → logprob: -4.20866584777832
    6. '()' → logprob: -5.20866584777832
    7. ' ' → logprob: -5.58366584777832
    8. ' {},' → logprob: -5.83366584777832
    9. '({},' → logprob: -5.83366584777832
    10. '[],' → logprob: -5.95866584777832

Token 453: ' ' (ID: 220)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.7047274112701416
    2. '[]' → logprob: -0.9547274112701416
    3. '0' → logprob: -2.2047274112701416
    4. '()' → logprob: -6.0797271728515625
    5. ' []' → logprob: -6.3297271728515625
    6. 'False' → logprob: -6.3297271728515625
    7. '[],' → logprob: -7.0797271728515625
    8. 'set' → logprob: -7.0797271728515625
    9. ' ' → logprob: -7.3297271728515625
    10. 'None' → logprob: -7.4547271728515625

Token 454: '0' (ID: 15)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5114887952804565
    2. '{}' → logprob: -1.1364887952804565
    3. 'set' → logprob: -3.011488914489746
    4. '[],' → logprob: -4.261488914489746
    5. '0' → logprob: -4.386488914489746
    6. '{},' → logprob: -5.761488914489746
    7. 'default' → logprob: -8.511488914489746
    8. '{' → logprob: -9.386488914489746
    9. '[]}' → logprob: -9.886488914489746
    10. 'deque' → logprob: -10.136488914489746

Token 455: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5246976017951965
    2. '<|end|>' → logprob: -0.8996976017951965
    3. 'def' → logprob: -7.524697780609131
    4. '<|end|>' → logprob: -7.774697780609131
    5. '
' → logprob: -8.149697303771973
    6. ' ,' → logprob: -9.024697303771973
    7. ',
' → logprob: -10.149697303771973
    8. ',n' → logprob: -10.399697303771973
    9. '0' → logprob: -10.899697303771973
    10. ',None' → logprob: -11.399697303771973

Token 456: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21471180021762848
    2. '{}' → logprob: -2.214711904525757
    3. '[]' → logprob: -3.214711904525757
    4. ' ' → logprob: -3.464711904525757
    5. ' []' → logprob: -5.339711666107178
    6. 'set' → logprob: -5.589711666107178
    7. ' {}' → logprob: -6.089711666107178
    8. ' set' → logprob: -7.464711666107178
    9. 'False' → logprob: -7.964711666107178
    10. 'None' → logprob: -8.964712142944336

Token 457: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.45371854305267334
    2. '[]' → logprob: -1.3287185430526733
    3. '{}' → logprob: -2.453718662261963
    4. 'set' → logprob: -4.578718662261963
    5. 'False' → logprob: -6.828718662261963
    6. 'None' → logprob: -7.203718662261963
    7. '1' → logprob: -7.203718662261963
    8. '-' → logprob: -8.203718185424805
    9. '{' → logprob: -8.578718185424805
    10. '[],' → logprob: -8.828718185424805

Token 458: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 459: ' [],' (ID: 22188)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5852643847465515
    2. '0' → logprob: -1.3352644443511963
    3. '{}' → logprob: -2.3352644443511963
    4. 'set' → logprob: -3.3352644443511963
    5. 'False' → logprob: -3.8352644443511963
    6. ' []' → logprob: -4.335264205932617
    7. ' ' → logprob: -5.335264205932617
    8. ' set' → logprob: -6.210264205932617
    9. ' {}' → logprob: -6.210264205932617
    10. '[],' → logprob: -6.960264205932617

Token 460: ' []

' (ID: 32833)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.7685019969940186
    2. '0' → logprob: -1.5185019969940186
    3. '[]' → logprob: -1.5185019969940186
    4. 'set' → logprob: -3.1435019969940186
    5. 'False' → logprob: -3.6435019969940186
    6. '[],' → logprob: -4.518502235412598
    7. 'None' → logprob: -5.268502235412598
    8. '{},' → logprob: -5.893502235412598
    9. 'True' → logprob: -6.393502235412598
    10. ' ' → logprob: -6.768502235412598

Token 461: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01851184293627739
    2. '<|end|>' → logprob: -4.018511772155762
    3. '```' → logprob: -9.143511772155762
    4. '#' → logprob: -9.643511772155762
    5. '<|end|>' → logprob: -9.643511772155762
    6. ')' → logprob: -10.393511772155762
    7. ' def' → logprob: -11.893511772155762
    8. 'link' → logprob: -12.143511772155762
    9. '
' → logprob: -12.268511772155762
    10. '[]' → logprob: -12.268511772155762

Token 462: ' get' (ID: 717)
  Prédit: ' calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.2134643942117691
    2. 'calc' → logprob: -1.838464379310608
    3. ' def' → logprob: -4.963464260101318
    4. 'def' → logprob: -4.963464260101318
    5. ' dfs' → logprob: -5.713464260101318
    6. ' solve' → logprob: -6.088464260101318
    7. ' main' → logprob: -6.088464260101318
    8. ' link' → logprob: -6.713464260101318
    9. 'dfs' → logprob: -6.963464260101318
    10. ' build' → logprob: -7.088464260101318

Token 463: '_link' (ID: 16227)
  Prédit: '_link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_link' → logprob: -0.3489718437194824
    2. '_max' → logprob: -3.0989718437194824
    3. 'link' → logprob: -3.4739718437194824
    4. '_init' → logprob: -4.098971843719482
    5. '_input' → logprob: -4.598971843719482
    6. '_empty' → logprob: -4.848971843719482
    7. '_current' → logprob: -4.848971843719482
    8. '_key' → logprob: -4.973971843719482
    9. '_next' → logprob: -4.973971843719482
    10. '_min' → logprob: -4.973971843719482

Token 464: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -2.7014437364414334e-05
    2. 'lists' → logprob: -11.75002670288086
    3. 'link' → logprob: -12.25002670288086
    4. 'count' → logprob: -12.25002670288086
    5. '_list' → logprob: -12.37502670288086
    6. 'ist' → logprob: -13.75002670288086
    7. 'vars' → logprob: -14.00002670288086
    8. 'length' → logprob: -14.87502670288086
    9. 'var' → logprob: -15.12502670288086
    10. 'set' → logprob: -15.12502670288086

Token 465: '_node' (ID: 11390)
  Prédit: '(link'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(link' → logprob: -0.17836244404315948
    2. '(' → logprob: -3.8033623695373535
    3. '_keys' → logprob: -3.8033623695373535
    4. ',' → logprob: -4.1783623695373535
    5. '_vars' → logprob: -4.3033623695373535
    6. '_link' → logprob: -4.5533623695373535
    7. '_key' → logprob: -4.5533623695373535
    8. '(node' → logprob: -4.6783623695373535
    9. '_nodes' → logprob: -4.6783623695373535
    10. '_parent' → logprob: -5.1783623695373535

Token 466: 'count' (ID: 5420)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4449910521507263
    2. '_count' → logprob: -1.694991111755371
    3. '_degree' → logprob: -3.694991111755371
    4. '_list' → logprob: -3.819991111755371
    5. 'count' → logprob: -4.069991111755371
    6. '_values' → logprob: -4.694991111755371
    7. '(link' → logprob: -4.694991111755371
    8. '_data' → logprob: -5.069991111755371
    9. '_value' → logprob: -5.069991111755371
    10. '_size' → logprob: -5.194991111755371

Token 467: '(link' (ID: 51236)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.11390441656112671
    2. '():
' → logprob: -2.8639044761657715
    3. '(link' → logprob: -3.4889044761657715
    4. '()' → logprob: -3.9889044761657715
    5. ' ():' → logprob: -7.4889044761657715
    6. '(' → logprob: -7.8639044761657715
    7. ' ()' → logprob: -8.113903999328613
    8. '():

' → logprob: -9.613903999328613
    9. '(),' → logprob: -10.238903999328613
    10. '()(' → logprob: -10.238903999328613

Token 468: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.9361264946837764e-07
    2. 'ist' → logprob: -16.25
    3. 'link' → logprob: -16.75
    4. ' list' → logprob: -20.625
    5. 'lists' → logprob: -21.0
    6. 'count' → logprob: -22.0
    7. '_list' → logprob: -22.125
    8. 'def' → logprob: -24.0
    9. 'lst' → logprob: -24.0
    10. '```' → logprob: -24.5

Token 469: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.28389257192611694
    2. '):
' → logprob: -1.4088926315307617
    3. ')' → logprob: -6.158892631530762
    4. '():' → logprob: -8.408892631530762
    5. '():
' → logprob: -8.783892631530762
    6. '()' → logprob: -9.408892631530762
    7. '):
' → logprob: -9.658892631530762
    8. ' ):' → logprob: -10.158892631530762
    9. '()):
' → logprob: -10.658892631530762
    10. '):

' → logprob: -11.408892631530762

Token 470: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.05233100429177284
    2. '   ' → logprob: -3.55233097076416
    3. ' return' → logprob: -3.80233097076416
    4. 'len' → logprob: -11.67733097076416
    5. '
' → logprob: -16.552331924438477
    6. ' ' → logprob: -16.677331924438477
    7. ' len' → logprob: -17.177331924438477
    8. '```' → logprob: -17.802331924438477
    9. '	return' → logprob: -17.927331924438477
    10. '  ' → logprob: -18.177331924438477

Token 471: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -9.233804303221405e-05
    2. 'len' → logprob: -9.500092506408691
    3. ' return' → logprob: -11.000092506408691
    4. '   ' → logprob: -14.125092506408691
    5. '    
' → logprob: -18.875091552734375
    6. 'sum' → logprob: -19.375091552734375
    7. '
' → logprob: -19.500091552734375
    8. 'count' → logprob: -20.250091552734375
    9. 'for' → logprob: -20.625091552734375
    10. '	return' → logprob: -20.750091552734375

Token 472: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.018150296062231064
    2. ' len' → logprob: -4.018150329589844
    3. '(len' → logprob: -14.643150329589844
    4. 'sum' → logprob: -18.518150329589844
    5. '   ' → logprob: -19.018150329589844
    6. '	len' → logprob: -19.643150329589844
    7. '=len' → logprob: -20.268150329589844
    8. ' ' → logprob: -20.393150329589844
    9. '[len' → logprob: -20.643150329589844
    10. '  ' → logprob: -21.393150329589844

Token 473: '(link' (ID: 51236)
  Prédit: '(link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(link' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -13.750000953674316
    3. 'link' → logprob: -17.875001907348633
    4. '(Link' → logprob: -20.875001907348633
    5. '$link' → logprob: -21.250001907348633
    6. '(lock' → logprob: -21.500001907348633
    7. '(list' → logprob: -21.500001907348633
    8. '_link' → logprob: -21.625001907348633
    9. ' (' → logprob: -22.000001907348633
    10. '	link' → logprob: -22.125001907348633

Token 474: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00013452880375552922
    2. 'ist' → logprob: -9.000134468078613
    3. 'link' → logprob: -11.625134468078613
    4. '(link' → logprob: -13.125134468078613
    5. '(list' → logprob: -16.12513542175293
    6. ' list' → logprob: -17.75013542175293
    7. ')' → logprob: -17.87513542175293
    8. '_list' → logprob: -18.00013542175293
    9. 'List' → logprob: -18.37513542175293
    10. '[' → logprob: -19.12513542175293

Token 475: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009217040496878326
    2. '())' → logprob: -7.000921726226807
    3. '()' → logprob: -11.625921249389648
    4. ')
' → logprob: -14.250921249389648
    5. ' )' → logprob: -14.500921249389648
    6. '))' → logprob: -16.62592124938965
    7. '}' → logprob: -17.87592124938965
    8. ')

' → logprob: -17.87592124938965
    9. '(' → logprob: -18.25092124938965
    10. '())
' → logprob: -18.37592124938965

Token 476: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6358262896537781
    2. '<|end|>' → logprob: -0.7608262896537781
    3. '<|end|>' → logprob: -6.510826110839844
    4. ')' → logprob: -7.260826110839844
    5. '
' → logprob: -7.635826110839844
    6. '#' → logprob: -8.760826110839844
    7. '```' → logprob: -9.510826110839844
    8. '...' → logprob: -9.635826110839844
    9. '[]' → logprob: -10.260826110839844
    10. ' ' → logprob: -10.385826110839844

Token 477: ' update' (ID: 4027)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.3872847855091095
    2. 'def' → logprob: -1.762284755706787
    3. 'len' → logprob: -2.637284755706787
    4. 'link' → logprob: -3.387284755706787
    5. 'max' → logprob: -4.387284755706787
    6. 'calc' → logprob: -4.637284755706787
    7. 'empty' → logprob: -5.512284755706787
    8. 'list' → logprob: -5.887284755706787
    9. ' get' → logprob: -6.012284755706787
    10. 'is' → logprob: -6.387284755706787

Token 478: '_v' (ID: 5390)
  Prédit: '(link'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(link' → logprob: -1.2951476573944092
    2. 'visited' → logprob: -1.7951476573944092
    3. '(node' → logprob: -2.045147657394409
    4. 'link' → logprob: -2.795147657394409
    5. 'count' → logprob: -3.295147657394409
    6. '(count' → logprob: -3.545147657394409
    7. 'def' → logprob: -3.670147657394409
    8. '(ans' → logprob: -4.045147895812988
    9. '(' → logprob: -4.170147895812988
    10. '(distance' → logprob: -4.170147895812988

Token 479: 'list' (ID: 2641)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.09570769965648651
    2. 'al' → logprob: -3.720707654953003
    3. 'isted' → logprob: -4.095707893371582
    4. 'isit' → logprob: -4.095707893371582
    5. 'alue' → logprob: -4.720707893371582
    6. 'isible' → logprob: -5.345707893371582
    7. 'alid' → logprob: -5.470707893371582
    8. 'ist' → logprob: -5.720707893371582
    9. 'visited' → logprob: -5.845707893371582
    10. 'iew' → logprob: -6.720707893371582

Token 480: '_next' (ID: 25436)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0030683837831020355
    2. '(l' → logprob: -7.378068447113037
    3. '(' → logprob: -7.503068447113037
    4. '(link' → logprob: -7.753068447113037
    5. '_v' → logprob: -9.003067970275879
    6. '(vis' → logprob: -9.128067970275879
    7. '(lst' → logprob: -9.128067970275879
    8. '(list' → logprob: -9.378067970275879
    9. '(node' → logprob: -9.628067970275879
    10. '_count' → logprob: -9.628067970275879

Token 481: '(link' (ID: 51236)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0038535131607204676
    2. '_v' → logprob: -7.2538533210754395
    3. '(link' → logprob: -7.7538533210754395
    4. '(l' → logprob: -7.8788533210754395
    5. 's' → logprob: -7.8788533210754395
    6. '_(' → logprob: -8.503853797912598
    7. '(node' → logprob: -8.503853797912598
    8. '(next' → logprob: -8.628853797912598
    9. '(' → logprob: -8.753853797912598
    10. 'v' → logprob: -8.878853797912598

Token 482: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.002548316027969122
    2. 'ist' → logprob: -6.0025482177734375
    3. '_list' → logprob: -9.877548217773438
    4. 'link' → logprob: -11.627548217773438
    5. 'st' → logprob: -12.877548217773438
    6. '```' → logprob: -13.627548217773438
    7. 'next' → logprob: -13.752548217773438
    8. ')' → logprob: -13.877548217773438
    9. '(list' → logprob: -14.377548217773438
    10. 'lst' → logprob: -14.752548217773438

Token 483: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00782711897045374
    2. ',v' → logprob: -5.132827281951904
    3. '(v' → logprob: -6.382827281951904
    4. '(link' → logprob: -9.757826805114746
    5. '   ' → logprob: -9.882826805114746
    6. ' ,' → logprob: -10.007826805114746
    7. ',
' → logprob: -11.132826805114746
    8. 'v' → logprob: -11.757826805114746
    9. '(' → logprob: -12.632826805114746
    10. ',node' → logprob: -12.757826805114746

Token 484: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.07401970773935318
    2. ' v' → logprob: -3.07401967048645
    3. 'visited' → logprob: -4.699019908905029
    4. 'node' → logprob: -5.449019908905029
    5. 'index' → logprob: -6.324019908905029
    6. 'current' → logprob: -6.449019908905029
    7. 'link' → logprob: -7.199019908905029
    8. ' node' → logprob: -7.199019908905029
    9. ' visited' → logprob: -7.324019908905029
    10. 'vl' → logprob: -7.449019908905029

Token 485: ',' (ID: 11)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.05125182121992111
    2. '_list' → logprob: -3.1762518882751465
    3. ',' → logprob: -5.0512518882751465
    4. 'ist' → logprob: -7.1762518882751465
    5. 'alist' → logprob: -8.551251411437988
    6. 'link' → logprob: -8.676251411437988
    7. 'al' → logprob: -8.801251411437988
    8. ')' → logprob: -9.551251411437988
    9. 'alue' → logprob: -9.676251411437988
    10. 'l' → logprob: -10.051251411437988

Token 486: ' v' (ID: 323)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.052869439125061
    2. 'n' → logprob: -1.677869439125061
    3. 'v' → logprob: -1.677869439125061
    4. 'index' → logprob: -3.4278693199157715
    5. 'idx' → logprob: -3.5528693199157715
    6. ' nxt' → logprob: -3.6778693199157715
    7. 'i' → logprob: -3.8028693199157715
    8. 'node' → logprob: -3.8028693199157715
    9. ' v' → logprob: -3.9278693199157715
    10. 'u' → logprob: -4.0528693199157715

Token 487: 'list' (ID: 2641)
  Prédit: '_next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.46817538142204285
    2. '+' → logprob: -1.5931754112243652
    3. 'next' → logprob: -2.7181754112243652
    4. ')' → logprob: -3.7181754112243652
    5. '):' → logprob: -4.218175411224365
    6. '[' → logprob: -4.718175411224365
    7. 'list' → logprob: -4.968175411224365
    8. '   ' → logprob: -5.218175411224365
    9. '_list' → logprob: -5.218175411224365
    10. ',' → logprob: -5.218175411224365

Token 488: '_next' (ID: 25436)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.056518975645303726
    2. '):' → logprob: -2.931519031524658
    3. '):
' → logprob: -6.806519031524658
    4. ')' → logprob: -8.0565185546875
    5. '   ' → logprob: -9.3065185546875
    6. ' ,' → logprob: -9.9315185546875
    7. ' ):' → logprob: -11.0565185546875
    8. ',v' → logprob: -11.6815185546875
    9. ',
' → logprob: -11.8065185546875
    10. ' ' → logprob: -12.0565185546875

Token 489: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1474875509738922
    2. '):' → logprob: -2.0224876403808594
    3. '):
' → logprob: -5.397487640380859
    4. ')' → logprob: -8.52248764038086
    5. '   ' → logprob: -10.52248764038086
    6. 'v' → logprob: -11.64748764038086
    7. ' ,' → logprob: -12.02248764038086
    8. ' ):' → logprob: -12.02248764038086
    9. ',v' → logprob: -12.14748764038086
    10. ',
' → logprob: -12.27248764038086

Token 490: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00027337539358995855
    2. 'for' → logprob: -9.500273704528809
    3. ' for' → logprob: -9.875273704528809
    4. ')' → logprob: -10.375273704528809
    5. 'v' → logprob: -10.375273704528809
    6. ',' → logprob: -10.750273704528809
    7. ':' → logprob: -10.875273704528809
    8. ' v' → logprob: -11.875273704528809
    9. '):' → logprob: -11.875273704528809
    10. '):
' → logprob: -12.000273704528809

Token 491: ' v' (ID: 323)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10590533167123795
    2. '   ' → logprob: -2.605905294418335
    3. 'v' (adapté à ' v') → logprob: -3.730905294418335
    4. ' for' → logprob: -7.230905532836914
    5. 'if' → logprob: -7.730905532836914
    6. 'link' → logprob: -7.980905532836914
    7. 'queue' → logprob: -8.355905532836914
    8. 'stack' → logprob: -8.480905532836914
    9. 'q' → logprob: -8.980905532836914
    10. 'next' → logprob: -9.105905532836914

Token 492: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2750827372074127
    2. '_list' → logprob: -2.02508282661438
    3. '_next' → logprob: -2.40008282661438
    4. ' =' → logprob: -5.400082588195801
    5. 'next' → logprob: -6.025082588195801
    6. 'v' → logprob: -6.150082588195801
    7. '_' → logprob: -6.150082588195801
    8. ',' → logprob: -6.650082588195801
    9. '[v' → logprob: -6.775082588195801
    10. '   ' → logprob: -7.275082588195801

Token 493: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.0003166353271808475
    2. 'next' → logprob: -8.875316619873047
    3. '[v' → logprob: -9.750316619873047
    4. '.append' → logprob: -9.875316619873047
    5. '[next' → logprob: -10.500316619873047
    6. '[' → logprob: -10.875316619873047
    7. 'append' → logprob: -12.500316619873047
    8. '=' → logprob: -12.625316619873047
    9. '   ' → logprob: -12.750316619873047
    10. 'Next' → logprob: -13.250316619873047

Token 494: '.extend' (ID: 34151)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.02589126117527485
    2. '[:]' → logprob: -3.9008913040161133
    3. '.append' → logprob: -5.775891304016113
    4. '.extend' → logprob: -7.400891304016113
    5. '[' → logprob: -7.525891304016113
    6. '.clear' → logprob: -8.025891304016113
    7. ' =' → logprob: -8.400891304016113
    8. '=' → logprob: -8.900891304016113
    9. 'v' → logprob: -9.400891304016113
    10. '.' → logprob: -9.650891304016113

Token 495: '(link' (ID: 51236)
  Prédit: '(link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(link' → logprob: -0.0008409536094404757
    2. '([' → logprob: -7.25084114074707
    3. '(' → logprob: -9.50084114074707
    4. '(sorted' → logprob: -10.62584114074707
    5. '((' → logprob: -11.50084114074707
    6. '(v' → logprob: -11.75084114074707
    7. 'link' → logprob: -12.62584114074707
    8. '(list' → logprob: -12.87584114074707
    9. '([(' → logprob: -12.87584114074707
    10. '([]' → logprob: -13.75084114074707

Token 496: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0003123439964838326
    2. 'link' → logprob: -8.250312805175781
    3. 'ist' → logprob: -10.250312805175781
    4. '[' → logprob: -12.375312805175781
    5. '(v' → logprob: -12.375312805175781
    6. '(link' → logprob: -12.875312805175781
    7. '[v' → logprob: -14.125312805175781
    8. '(list' → logprob: -14.250312805175781
    9. '(' → logprob: -14.250312805175781
    10. 'lists' → logprob: -14.625312805175781

Token 497: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.7968066206085496e-05
    2. '.get' → logprob: -10.500027656555176
    3. '(v' → logprob: -15.750027656555176
    4. 'v' → logprob: -16.000028610229492
    5. '[get' → logprob: -17.500028610229492
    6. '[' → logprob: -17.875028610229492
    7. 'get' → logprob: -18.375028610229492
    8. '[u' → logprob: -18.625028610229492
    9. ')' → logprob: -19.000028610229492
    10. ',v' → logprob: -19.125028610229492

Token 498: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0004967942950315773
    2. ']' → logprob: -7.750496864318848
    3. '])
' → logprob: -10.625496864318848
    4. '[v' → logprob: -11.500496864318848
    5. ' ])' → logprob: -12.000496864318848
    6. ')' → logprob: -12.250496864318848
    7. '[' → logprob: -12.625496864318848
    8. ']))' → logprob: -12.875496864318848
    9. '][' → logprob: -12.875496864318848
    10. ')])' → logprob: -13.125496864318848

Token 499: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19904933869838715
    2. '<|end|>' → logprob: -1.8240493535995483
    3. '\n' → logprob: -5.074049472808838
    4. 'def' → logprob: -5.324049472808838
    5. 'v' → logprob: -6.074049472808838
    6. '  
' → logprob: -7.199049472808838
    7. '   ' → logprob: -7.324049472808838
    8. '    
' → logprob: -7.324049472808838
    9. '<|end|>' → logprob: -7.449049472808838
    10. '[' → logprob: -7.824049472808838

Token 500: ' set' (ID: 920)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.725289523601532
    2. ' def' → logprob: -1.6002895832061768
    3. ' update' → logprob: -2.3502895832061768
    4. 'update' → logprob: -3.1002895832061768
    5. ' get' → logprob: -3.2252895832061768
    6. ' calc' → logprob: -3.4752895832061768
    7. 'v' → logprob: -3.6002895832061768
    8. ' link' → logprob: -4.100289344787598
    9. 'calc' → logprob: -4.225289344787598
    10. 'get' → logprob: -4.725289344787598

Token 501: '_distance' (ID: 45537)
  Prédit: '_v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_v' → logprob: -1.005306363105774
    2. '(v' → logprob: -1.005306363105774
    3. 'v' → logprob: -1.380306363105774
    4. 'link' → logprob: -5.630306243896484
    5. 'def' → logprob: -5.755306243896484
    6. 'item' → logprob: -6.380306243896484
    7. 'default' → logprob: -6.630306243896484
    8. '_link' → logprob: -6.755306243896484
    9. 'attr' → logprob: -7.255306243896484
    10. '_' → logprob: -7.380306243896484

Token 502: '(distance' (ID: 105203)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.790075957775116
    2. '(link' → logprob: -0.790075957775116
    3. '(distance' → logprob: -2.9150760173797607
    4. '(' → logprob: -3.2900760173797607
    5. '(dist' → logprob: -7.665075778961182
    6. '(d' → logprob: -8.79007625579834
    7. '_distance' → logprob: -9.79007625579834
    8. '(parent' → logprob: -10.79007625579834
    9. ' (' → logprob: -10.79007625579834
    10. '(depth' → logprob: -11.04007625579834

Token 503: '_list' (ID: 4162)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4972865581512451
    2. '[' → logprob: -1.6222865581512451
    3. ')' → logprob: -1.8722865581512451
    4. '[v' → logprob: -4.622286796569824
    5. '(' → logprob: -4.997286796569824
    6. 's' → logprob: -5.372286796569824
    7. ',[' → logprob: -5.497286796569824
    8. ',v' → logprob: -5.747286796569824
    9. '_,' → logprob: -5.872286796569824
    10. '(link' → logprob: -5.997286796569824

Token 504: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004960970021784306
    2. '(distance' → logprob: -6.004961013793945
    3. '[' → logprob: -7.504961013793945
    4. ',d' → logprob: -7.754961013793945
    5. ')' → logprob: -8.379961013793945
    6. 'distance' → logprob: -8.504961013793945
    7. '(v' → logprob: -8.504961013793945
    8. ',v' → logprob: -8.629961013793945
    9. ',index' → logprob: -9.254961013793945
    10. '(' → logprob: -9.254961013793945

Token 505: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.20959338545799255
    2. ' v' → logprob: -1.834593415260315
    3. 'index' → logprob: -3.9595932960510254
    4. ')' → logprob: -5.834593296051025
    5. ' index' → logprob: -6.084593296051025
    6. '0' → logprob: -6.459593296051025
    7. 'idx' → logprob: -6.834593296051025
    8. ' idx' → logprob: -7.084593296051025
    9. ')v' → logprob: -8.459593772888184
    10. ' ' → logprob: -8.959593772888184

Token 506: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008748973486945033
    2. ' ,' → logprob: -7.875874996185303
    3. ',v' → logprob: -8.375874519348145
    4. '[' → logprob: -8.625874519348145
    5. '[v' → logprob: -10.250874519348145
    6. ')' → logprob: -11.125874519348145
    7. 'v' → logprob: -11.375874519348145
    8. 'index' → logprob: -12.500874519348145
    9. ',value' → logprob: -12.500874519348145
    10. '   ' → logprob: -12.625874519348145

Token 507: ' distance' (ID: 9324)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12756629288196564
    2. ' ' → logprob: -2.627566337585449
    3. '1' → logprob: -3.877566337585449
    4. 'distance' → logprob: -4.377566337585449
    5. 'v' → logprob: -4.877566337585449
    6. ' distance' → logprob: -6.252566337585449
    7. ' v' → logprob: -6.752566337585449
    8. 'value' → logprob: -6.752566337585449
    9. '-' → logprob: -7.002566337585449
    10. 'd' → logprob: -8.12756633758545

Token 508: '):
' (ID: 1883)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.37640827894210815
    2. ',' → logprob: -1.876408338546753
    3. '[v' → logprob: -1.876408338546753
    4. '):
' → logprob: -5.751408100128174
    5. 'list' → logprob: -6.876408100128174
    6. ',v' → logprob: -7.376408100128174
    7. '):' → logprob: -7.626408100128174
    8. 's' → logprob: -7.626408100128174
    9. '   ' → logprob: -8.001408576965332
    10. ')' → logprob: -8.251408576965332

Token 509: '   ' (ID: 271)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -1.5313327312469482
    2. ' distance' → logprob: -1.6563327312469482
    3. '   ' → logprob: -1.7813327312469482
    4. ' =' → logprob: -1.7813327312469482
    5. '[' → logprob: -1.9063327312469482
    6. '=' → logprob: -2.6563327312469482
    7. '(distance' → logprob: -3.4063327312469482
    8. ')' → logprob: -7.281332969665527
    9. '    
' → logprob: -7.656332969665527
    10. '
' → logprob: -7.656332969665527

Token 510: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' (adapté à ' distance') → logprob: -0.06263703852891922
    2. ' distance' → logprob: -2.8126370906829834
    3. '   ' → logprob: -7.312636852264404
    4. '(distance' → logprob: -14.062637329101562
    5. '_distance' → logprob: -14.312637329101562
    6. ' ' → logprob: -15.687637329101562
    7. '```' → logprob: -16.312637329101562
    8. '  ' → logprob: -16.437637329101562
    9. '.distance' → logprob: -16.562637329101562
    10. '    ' → logprob: -16.812637329101562

Token 511: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.002066398970782757
    2. '[v' → logprob: -6.252066612243652
    3. '[' → logprob: -9.377066612243652
    4. '[_' → logprob: -10.002066612243652
    5. '[s' → logprob: -13.002066612243652
    6. 'list' → logprob: -13.627066612243652
    7. '```' → logprob: -14.252066612243652
    8. 's' → logprob: -14.377066612243652
    9. '[List' → logprob: -14.752066612243652
    10. '[
' → logprob: -14.752066612243652

Token 512: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.173704271830502e-06
    2. '[' → logprob: -12.75000286102295
    3. ' [' → logprob: -17.375003814697266
    4. '   ' → logprob: -17.500003814697266
    5. 'v' → logprob: -18.125003814697266
    6. '\[' → logprob: -18.375003814697266
    7. '```' → logprob: -18.625003814697266
    8. '=v' → logprob: -18.625003814697266
    9. '[len' → logprob: -19.000003814697266
    10. '[val' → logprob: -19.000003814697266

Token 513: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002096197713399306
    2. ']=' → logprob: -8.50020980834961
    3. ' ]' → logprob: -12.25020980834961
    4. '=' → logprob: -14.12520980834961
    5. ')' → logprob: -14.62520980834961
    6. '[' → logprob: -16.62520980834961
    7. ' =' → logprob: -17.62520980834961
    8. '   ' → logprob: -18.25020980834961
    9. '])' → logprob: -18.62520980834961
    10. ']
' → logprob: -19.00020980834961

Token 514: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011047814972698689
    2. ' =' → logprob: -4.511047840118408
    3. '=v' → logprob: -17.63604736328125
    4. '   ' → logprob: -18.26104736328125
    5. '+=' → logprob: -19.01104736328125
    6. '＝' → logprob: -19.13604736328125
    7. ')=' → logprob: -19.26104736328125
    8. ')' → logprob: -19.51104736328125
    9. '=
' → logprob: -20.13604736328125
    10. ' ' → logprob: -20.13604736328125

Token 515: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.029750484973192215
    2. ' distance' → logprob: -3.5297505855560303
    3. '   ' → logprob: -17.27975082397461
    4. '(distance' → logprob: -18.27975082397461
    5. 'dist' → logprob: -19.65475082397461
    6. ' ' → logprob: -20.02975082397461
    7. '  ' → logprob: -20.40475082397461
    8. '_distance' → logprob: -21.02975082397461
    9. ' ' → logprob: -21.02975082397461
    10. 'Distance' → logprob: -21.40475082397461

Token 516: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 517: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 518: ' increase' (ID: 7064)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3847019672393799
    2. 'get' → logprob: -1.6347019672393799
    3. 'b' → logprob: -2.13470196723938
    4. 'distance' → logprob: -2.25970196723938
    5. 'set' → logprob: -2.50970196723938
    6. ' bfs' → logprob: -2.88470196723938
    7. 'update' → logprob: -3.50970196723938
    8. ' get' → logprob: -3.50970196723938
    9. 'deque' → logprob: -4.134701728820801
    10. 'calc' → logprob: -4.134701728820801

Token 519: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.01466311514377594
    2. '_' → logprob: -4.639663219451904
    3. '_v' → logprob: -7.139663219451904
    4. '_count' → logprob: -7.389663219451904
    5. '_counter' → logprob: -7.639663219451904
    6. '_dist' → logprob: -7.764663219451904
    7. '_length' → logprob: -8.014662742614746
    8. '_depth' → logprob: -8.139662742614746
    9. '_value' → logprob: -8.514662742614746
    10. '(' → logprob: -8.639662742614746

Token 520: '_count' (ID: 7536)
  Prédit: '(distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(distance' → logprob: -3.392824874026701e-05
    2. '_list' → logprob: -11.25003433227539
    3. '(' → logprob: -11.50003433227539
    4. 'distance' → logprob: -12.50003433227539
    5. ' (' → logprob: -12.62503433227539
    6. '_distance' → logprob: -13.50003433227539
    7. ',' → logprob: -14.37503433227539
    8. '(dis' → logprob: -15.25003433227539
    9. '   ' → logprob: -15.62503433227539
    10. '(list' → logprob: -16.00003433227539

Token 521: '(distance' (ID: 105203)
  Prédit: '(distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(distance' → logprob: -0.0113065792247653
    2. '(' → logprob: -4.7613067626953125
    3. '(count' → logprob: -6.7613067626953125
    4. ',' → logprob: -7.7613067626953125
    5. '[' → logprob: -8.386306762695312
    6. '()' → logprob: -8.886306762695312
    7. ' (' → logprob: -9.386306762695312
    8. '(
' → logprob: -9.511306762695312
    9. '(dist' → logprob: -9.636306762695312
    10. 'distance' → logprob: -9.636306762695312

Token 522: '_count' (ID: 7536)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0005589892389252782
    2. '_count' → logprob: -8.375558853149414
    3. 'list' → logprob: -8.625558853149414
    4. 's' → logprob: -9.500558853149414
    5. 'count' → logprob: -10.500558853149414
    6. '[' → logprob: -11.375558853149414
    7. ')' → logprob: -11.750558853149414
    8. 'List' → logprob: -11.875558853149414
    9. '[_' → logprob: -12.375558853149414
    10. ')_' → logprob: -12.500558853149414

Token 523: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.036790162324905396
    2. '_list' → logprob: -4.161790370941162
    3. ',d' → logprob: -5.036790370941162
    4. ')' → logprob: -5.411790370941162
    5. ' ,' → logprob: -5.911790370941162
    6. '(distance' → logprob: -6.161790370941162
    7. '[' → logprob: -6.536790370941162
    8. 'list' → logprob: -7.286790370941162
    9. '):' → logprob: -7.536790370941162
    10. '(' → logprob: -7.661790370941162

Token 524: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.652332603931427
    2. 'distance' → logprob: -0.777332603931427
    3. 'def' → logprob: -5.152332782745361
    4. '[' → logprob: -5.277332782745361
    5. 'for' → logprob: -5.652332782745361
    6. ' distance' → logprob: -5.902332782745361
    7. '(distance' → logprob: -6.777332782745361
    8. ' for' → logprob: -7.527332782745361
    9. '    ' → logprob: -8.027332305908203
    10. 'return' → logprob: -9.027332305908203

Token 525: ' return' (ID: 622)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.013843651860952377
    2. '   ' → logprob: -4.513843536376953
    3. ' distance' → logprob: -5.888843536376953
    4. '(distance' → logprob: -11.888843536376953
    5. 'return' (adapté à ' return') → logprob: -12.138843536376953
    6. 'def' → logprob: -12.513843536376953
    7. '  ' → logprob: -13.513843536376953
    8. ' ' → logprob: -13.763843536376953
    9. '    ' → logprob: -14.263843536376953
    10. '[' → logprob: -14.263843536376953

Token 526: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.009907185100018978
    2. ' distance' → logprob: -5.134907245635986
    3. '1' → logprob: -6.509907245635986
    4. '{' → logprob: -6.759907245635986
    5. 'sum' → logprob: -7.384907245635986
    6. ' ' → logprob: -8.259906768798828
    7. 'len' → logprob: -8.634906768798828
    8. '(distance' → logprob: -8.634906768798828
    9. 'None' → logprob: -10.259906768798828
    10. '   ' → logprob: -11.384906768798828

Token 527: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.3213847279548645
    2. ' +' → logprob: -1.6963846683502197
    3. '+' → logprob: -2.5713846683502197
    4. '_list' → logprob: -4.821384906768799
    5. '_distance' → logprob: -6.071384906768799
    6. 'distance' → logprob: -7.196384906768799
    7. ' ' → logprob: -7.196384906768799
    8. 'count' → logprob: -7.321384906768799
    9. '[' → logprob: -8.19638442993164
    10. 'd' → logprob: -8.44638442993164

Token 528: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759437680244446
    2. ' +' → logprob: -0.8259437680244446
    3. '()+' → logprob: -13.450943946838379
    4. '[' → logprob: -14.325943946838379
    5. '<|end|>' → logprob: -14.325943946838379
    6. ' plus' → logprob: -14.950943946838379
    7. '+=' → logprob: -14.950943946838379
    8. ' ' → logprob: -14.950943946838379
    9. '+[' → logprob: -15.825943946838379
    10. ' +=' → logprob: -15.950943946838379

Token 529: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -17.500009536743164
    4. 'def' → logprob: -18.750009536743164
    5. '  ' → logprob: -19.125009536743164
    6. '```' → logprob: -20.625009536743164
    7. '[' → logprob: -20.875009536743164
    8. '+' → logprob: -21.375009536743164
    9. '<|end|>' → logprob: -21.750009536743164
    10. '=' → logprob: -22.125009536743164

Token 530: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. 'def' → logprob: -18.25
    4. '   ' → logprob: -19.875
    5. '[' → logprob: -20.0
    6. '```' → logprob: -20.5
    7. '+' → logprob: -22.125
    8. 'one' → logprob: -22.125
    9. '<|end|>' → logprob: -22.25
    10. 'int' → logprob: -22.25

Token 531: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6983531713485718
    2. '<|end|>' → logprob: -0.6983531713485718
    3. '
' → logprob: -6.073353290557861
    4. '<|end|>' → logprob: -7.198353290557861
    5. '```' → logprob: -7.573353290557861
    6. '#' → logprob: -7.948353290557861
    7. '.' → logprob: -7.948353290557861
    8. ')' → logprob: -8.198352813720703
    9. '...' → logprob: -9.323352813720703
    10. ' def' → logprob: -9.573352813720703

Token 532: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13269048929214478
    2. '<|end|>' → logprob: -2.1326904296875
    3. '
' → logprob: -5.6326904296875
    4. '<|end|>' → logprob: -7.1326904296875
    5. '#' → logprob: -7.7576904296875
    6. '```' → logprob: -7.7576904296875
    7. ' def' → logprob: -9.1326904296875
    8. ')' → logprob: -9.5076904296875
    9. 'de' → logprob: -10.6326904296875
    10. ' ' → logprob: -10.6326904296875

Token 533: ' set' (ID: 920)
  Prédit: ' bfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -1.0433871746063232
    2. 'def' → logprob: -1.9183871746063232
    3. 'b' → logprob: -2.2933871746063232
    4. 'distance' → logprob: -3.1683871746063232
    5. 'increase' → logprob: -3.1683871746063232
    6. 'calc' → logprob: -3.6683871746063232
    7. 'get' → logprob: -3.9183871746063232
    8. ' get' → logprob: -4.168387413024902
    9. 'set' → logprob: -4.168387413024902
    10. 'dfs' → logprob: -4.293387413024902

Token 534: '_v' (ID: 5390)
  Prédit: '_distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.06905579566955566
    2. 'distance' → logprob: -2.8190557956695557
    3. '_link' → logprob: -7.194055557250977
    4. 'def' → logprob: -7.194055557250977
    5. '_dist' → logprob: -7.819055557250977
    6. '_' → logprob: -7.819055557250977
    7. 'v' → logprob: -7.944055557250977
    8. '_max' → logprob: -7.944055557250977
    9. 'visited' → logprob: -8.194055557250977
    10. '_current' → logprob: -8.319055557250977

Token 535: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0011880877427756786
    2. 'distance' → logprob: -7.251188278198242
    3. '_list' → logprob: -8.001188278198242
    4. 'count' → logprob: -9.751188278198242
    5. 'alue' → logprob: -10.376188278198242
    6. 'ist' → logprob: -11.251188278198242
    7. '_distance' → logprob: -12.126188278198242
    8. 'alist' → logprob: -12.126188278198242
    9. 'index' → logprob: -12.251188278198242
    10. 'istance' → logprob: -12.501188278198242

Token 536: '_state' (ID: 9479)
  Prédit: '_next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.02215610444545746
    2. 'next' → logprob: -4.022156238555908
    3. '_' → logprob: -6.272156238555908
    4. '(' → logprob: -7.897156238555908
    5. 'distance' → logprob: -8.14715576171875
    6. '(v' → logprob: -8.39715576171875
    7. '_distance' → logprob: -8.64715576171875
    8. '_current' → logprob: -8.77215576171875
    9. '(distance' → logprob: -8.77215576171875
    10. '(next' → logprob: -9.14715576171875

Token 537: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0051644970662891865
    2. '(' → logprob: -5.755164623260498
    3. '(state' → logprob: -6.755164623260498
    4. '(distance' → logprob: -7.630164623260498
    5. '(link' → logprob: -10.00516414642334
    6. '(states' → logprob: -10.00516414642334
    7. '<|end|>' → logprob: -10.13016414642334
    8. '(value' → logprob: -10.13016414642334
    9. '(lambda' → logprob: -10.25516414642334
    10. '(
' → logprob: -11.25516414642334

Token 538: 'list' (ID: 2641)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.24831406772136688
    2. '_next' → logprob: -2.248314142227173
    3. ',' → logprob: -2.998314142227173
    4. 'list' → logprob: -3.123314142227173
    5. '_state' → logprob: -4.123313903808594
    6. '[' → logprob: -7.123313903808594
    7. ')' → logprob: -7.248313903808594
    8. 'state' → logprob: -7.873313903808594
    9. '[v' → logprob: -7.998313903808594
    10. '_states' → logprob: -8.123313903808594

Token 539: '_previous' (ID: 126212)
  Prédit: '_next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.011606277897953987
    2. '_state' → logprob: -4.636606216430664
    3. ',' → logprob: -6.386606216430664
    4. '_,' → logprob: -10.511606216430664
    5. '_states' → logprob: -10.761606216430664
    6. 'next' → logprob: -10.886606216430664
    7. ',_' → logprob: -11.011606216430664
    8. '_' → logprob: -11.136606216430664
    9. 'state' → logprob: -11.261606216430664
    10. ',state' → logprob: -11.386606216430664

Token 540: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00035751116229221225
    2. ',v' → logprob: -8.125357627868652
    3. ' ,' → logprob: -10.000357627868652
    4. '[v' → logprob: -12.250357627868652
    5. ')' → logprob: -13.125357627868652
    6. ',
' → logprob: -13.375357627868652
    7. '[' → logprob: -13.625357627868652
    8. '   ' → logprob: -13.750357627868652
    9. 'v' → logprob: -14.000357627868652
    10. ',state' → logprob: -14.250357627868652

Token 541: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6476378440856934
    2. ' v' → logprob: -1.1476378440856934
    3. 'state' → logprob: -2.6476378440856934
    4. ' state' → logprob: -3.1476378440856934
    5. 'index' → logprob: -4.022637844085693
    6. ' index' → logprob: -4.647637844085693
    7. 'True' → logprob: -5.647637844085693
    8. ' True' → logprob: -6.272637844085693
    9. ' idx' → logprob: -6.647637844085693
    10. 'idx' → logprob: -6.710137844085693

Token 542: 'list' (ID: 2641)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031072497367858887
    2. '_next' → logprob: -7.128107070922852
    3. ')' → logprob: -7.878107070922852
    4. ' ,' → logprob: -8.003107070922852
    5. '[v' → logprob: -8.003107070922852
    6. '[],' → logprob: -8.128107070922852
    7. '   ' → logprob: -8.628107070922852
    8. '_list' → logprob: -8.878107070922852
    9. 'list' → logprob: -9.378107070922852
    10. '[' → logprob: -9.378107070922852

Token 543: ',' (ID: 11)
  Prédit: '_next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.30049535632133484
    2. '_state' → logprob: -2.1754953861236572
    3. '_previous' → logprob: -2.8004953861236572
    4. ',' → logprob: -3.0504953861236572
    5. '_current' → logprob: -3.6754953861236572
    6. '_,' → logprob: -4.800495147705078
    7. '_' → logprob: -6.550495147705078
    8. ' ,' → logprob: -7.300495147705078
    9. '_new' → logprob: -7.925495147705078
    10. ')' → logprob: -8.050495147705078

Token 544: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.161363884806633
    2. ' v' → logprob: -2.4113638401031494
    3. 'state' → logprob: -3.6613638401031494
    4. 'True' → logprob: -4.9113640785217285
    5. 'visited' → logprob: -5.4113640785217285
    6. ' state' → logprob: -5.5363640785217285
    7. 'False' → logprob: -5.5363640785217285
    8. '0' → logprob: -5.9113640785217285
    9. ' True' → logprob: -6.2863640785217285
    10. ')' → logprob: -6.6613640785217285

Token 545: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.006220874842256308
    2. ')' → logprob: -5.631220817565918
    3. '_previous' → logprob: -7.006220817565918
    4. '_list' → logprob: -8.006220817565918
    5. 'previous' → logprob: -8.131220817565918
    6. 'state' → logprob: -8.256220817565918
    7. ',' → logprob: -8.756220817565918
    8. '_next' → logprob: -8.756220817565918
    9. 'next' → logprob: -9.256220817565918
    10. '_prev' → logprob: -9.631220817565918

Token 546: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.40803954005241394
    2. '_previous' → logprob: -1.2830395698547363
    3. '_current' → logprob: -4.283039569854736
    4. '_state' → logprob: -4.283039569854736
    5. ')' → logprob: -4.408039569854736
    6. '_' → logprob: -4.908039569854736
    7. ',' → logprob: -5.783039569854736
    8. '_)' → logprob: -6.533039569854736
    9. '_,' → logprob: -6.533039569854736
    10. '_prev' → logprob: -6.783039569854736

Token 547: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.745380163192749
    2. '):
' → logprob: -0.995380163192749
    3. ',' → logprob: -1.870380163192749
    4. ')' → logprob: -6.495380401611328
    5. '   ' → logprob: -9.620380401611328
    6. '):
' → logprob: -9.745380401611328
    7. ',
' → logprob: -9.870380401611328
    8. ' ):' → logprob: -10.245380401611328
    9. '):

' → logprob: -10.870380401611328
    10. ' ,' → logprob: -11.620380401611328

Token 548: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6384106278419495
    2. 'v' → logprob: -0.7634106278419495
    3. 'for' → logprob: -5.388410568237305
    4. ' v' → logprob: -7.013410568237305
    5. ' for' → logprob: -8.388410568237305
    6. 'def' → logprob: -10.138410568237305
    7. '	v' → logprob: -10.763410568237305
    8. 'return' → logprob: -11.513410568237305
    9. 'del' → logprob: -11.638410568237305
    10. '[:]' → logprob: -11.888410568237305

Token 549: ' return' (ID: 622)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0021341985557228327
    2. ' v' → logprob: -6.627134323120117
    3. '   ' → logprob: -7.752134323120117
    4. 'for' → logprob: -8.502134323120117
    5. 'del' → logprob: -9.002134323120117
    6. 'return' (adapté à ' return') → logprob: -10.752134323120117
    7. '[:]' → logprob: -11.252134323120117
    8. ' for' → logprob: -12.252134323120117
    9. '	v' → logprob: -13.002134323120117
    10. ' del' → logprob: -13.002134323120117

Token 550: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.04618667811155319
    2. ' v' → logprob: -3.671186685562134
    3. '[]' → logprob: -4.546186447143555
    4. '[v' → logprob: -5.546186447143555
    5. 'list' → logprob: -5.671186447143555
    6. ' []' → logprob: -7.421186447143555
    7. '(v' → logprob: -7.671186447143555
    8. ' list' → logprob: -9.171186447143555
    9. '[],' → logprob: -9.171186447143555
    10. '   ' → logprob: -9.796186447143555

Token 551: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.10847961902618408
    2. '_list' → logprob: -2.7334794998168945
    3. ',' → logprob: -4.2334794998168945
    4. '<|end|>' → logprob: -4.8584794998168945
    5. 's' → logprob: -5.8584794998168945
    6. 'l' → logprob: -6.1084794998168945
    7. 'lst' → logprob: -6.3584794998168945
    8. 'alue' → logprob: -6.7334794998168945
    9. 'alist' → logprob: -7.2334794998168945
    10. '[' → logprob: -7.7334794998168945

Token 552: ',' (ID: 11)
  Prédit: '_next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.2282174527645111
    2. '_' → logprob: -2.353217363357544
    3. '_previous' → logprob: -2.478217363357544
    4. '[:]' → logprob: -5.103217601776123
    5. '_list' → logprob: -5.353217601776123
    6. '_prev' → logprob: -5.853217601776123
    7. '.copy' → logprob: -6.603217601776123
    8. '[' → logprob: -6.728217601776123
    9. '<|end|>' → logprob: -6.978217601776123
    10. ',' → logprob: -7.103217601776123

Token 553: ' list' (ID: 1562)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0019389885710552335
    2. ' v' → logprob: -6.251938819885254
    3. '[]' → logprob: -12.376938819885254
    4. '	v' → logprob: -13.126938819885254
    5. '[v' → logprob: -14.501938819885254
    6. '[],' → logprob: -14.876938819885254
    7. '(v' → logprob: -15.001938819885254
    8. '   ' → logprob: -15.126938819885254
    9. ' ' → logprob: -15.126938819885254
    10. ' []' → logprob: -15.376938819885254

Token 554: '(set' (ID: 25904)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.00048107770271599293
    2. '()' → logprob: -8.125480651855469
    3. '(set' → logprob: -9.375480651855469
    4. '(' → logprob: -10.000480651855469
    5. 'v' → logprob: -10.000480651855469
    6. '(
' → logprob: -12.875480651855469
    7. '()
' → logprob: -13.125480651855469
    8. 'set' → logprob: -13.375480651855469
    9. '([]' → logprob: -14.875480651855469
    10. '	v' → logprob: -14.875480651855469

Token 555: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -8.65707261255011e-06
    2. '(' → logprob: -12.250008583068848
    3. '(
' → logprob: -12.875008583068848
    4. 'v' → logprob: -13.750008583068848
    5. '(list' → logprob: -16.750009536743164
    6. '(

' → logprob: -17.250009536743164
    7. '()' → logprob: -17.375009536743164
    8. '	v' → logprob: -17.375009536743164
    9. '().' → logprob: -17.875009536743164
    10. '((' → logprob: -18.375009536743164

Token 556: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.03834864869713783
    2. '(v' → logprob: -3.28834867477417
    3. 'v' → logprob: -8.163348197937012
    4. 'next' → logprob: -12.038348197937012
    5. '(list' → logprob: -12.413348197937012
    6. 'ist' → logprob: -12.913348197937012
    7. 'l' → logprob: -13.163348197937012
    8. ')' → logprob: -13.163348197937012
    9. '(' → logprob: -13.538348197937012
    10. '_list' → logprob: -14.413348197937012

Token 557: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.008094876073300838
    2. 'next' → logprob: -5.383094787597656
    3. '(v' → logprob: -6.133094787597656
    4. '(next' → logprob: -6.758094787597656
    5. 'Next' → logprob: -10.133094787597656
    6. '_previous' → logprob: -10.633094787597656
    7. '(' → logprob: -10.758094787597656
    8. '   ' → logprob: -11.258094787597656
    9. ')' → logprob: -11.758094787597656
    10. ' next' → logprob: -12.133094787597656

Token 558: ')' (ID: 8)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.16842114925384521
    2. '()))' → logprob: -1.9184211492538452
    3. ')' → logprob: -5.168421268463135
    4. '()' → logprob: -6.793421268463135
    5. '())' → logprob: -7.043421268463135
    6. ' ))' → logprob: -8.543420791625977
    7. ')),' → logprob: -8.918420791625977
    8. ' ' → logprob: -9.918420791625977
    9. '),' → logprob: -10.543420791625977
    10. '))
' → logprob: -11.293420791625977

Token 559: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.860340752406046e-05
    2. '))' → logprob: -10.1250581741333
    3. '),' → logprob: -11.7500581741333
    4. '())' → logprob: -12.2500581741333
    5. ' )' → logprob: -13.2500581741333
    6. ')
' → logprob: -13.3750581741333
    7. ')))' → logprob: -14.2500581741333
    8. '()' → logprob: -15.1250581741333
    9. ')}' → logprob: -15.2500581741333
    10. '<|end|>' → logprob: -15.3750581741333

Token 560: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0015111699467524886
    2. ' set' → logprob: -6.501511096954346
    3. '   ' → logprob: -12.001511573791504
    4. '	set' → logprob: -13.876511573791504
    5. ' ' → logprob: -14.626511573791504
    6. 'v' → logprob: -14.751511573791504
    7. '{' → logprob: -15.126511573791504
    8. '(set' → logprob: -15.376511573791504
    9. '=set' → logprob: -15.876511573791504
    10. '       ' → logprob: -16.251510620117188

Token 561: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -1.6240566083070007e-06
    2. 'v' → logprob: -14.250001907348633
    3. '((' → logprob: -15.500001907348633
    4. '(' → logprob: -15.625001907348633
    5. '   ' → logprob: -15.750001907348633
    6. '(
' → logprob: -15.750001907348633
    7. '(set' → logprob: -16.125001907348633
    8. ' (' → logprob: -16.250001907348633
    9. '	v' → logprob: -18.875001907348633
    10. ' ' → logprob: -19.250001907348633

Token 562: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0026015799958258867
    2. '(v' → logprob: -6.502601623535156
    3. 'ist' → logprob: -6.877601623535156
    4. ')' → logprob: -10.502601623535156
    5. '[v' → logprob: -10.752601623535156
    6. 'v' → logprob: -12.377601623535156
    7. 'l' → logprob: -12.377601623535156
    8. '))' → logprob: -13.502601623535156
    9. 'lst' → logprob: -13.877601623535156
    10. '(list' → logprob: -14.002601623535156

Token 563: '_previous' (ID: 126212)
  Prédit: '_previous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_previous' → logprob: -0.37482085824012756
    2. '))' → logprob: -1.2498208284378052
    3. 'previous' → logprob: -4.499820709228516
    4. ')' → logprob: -4.874820709228516
    5. 'v' → logprob: -5.749820709228516
    6. '))
' → logprob: -6.999820709228516
    7. 'Previous' → logprob: -7.499820709228516
    8. '(previous' → logprob: -7.749820709228516
    9. '(v' → logprob: -8.124820709228516
    10. ' ))' → logprob: -8.249820709228516

Token 564: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5776412487030029
    2. ')' → logprob: -0.8276412487030029
    3. '),' → logprob: -6.827641487121582
    4. '())' → logprob: -8.452641487121582
    5. ')),' → logprob: -9.077641487121582
    6. ')))' → logprob: -9.327641487121582
    7. '()))' → logprob: -9.327641487121582
    8. ' ))' → logprob: -10.077641487121582
    9. ' )' → logprob: -10.202641487121582
    10. '()' → logprob: -11.077641487121582

Token 565: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 566: ' calc' (ID: 25691)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -1.6392148733139038
    2. ' calc' → logprob: -1.6392148733139038
    3. ' int' → logprob: -2.1392149925231934
    4. ' main' → logprob: -2.2642149925231934
    5. 'def' → logprob: -2.5142149925231934
    6. ' get' → logprob: -2.8892149925231934
    7. 'int' → logprob: -3.1392149925231934
    8. ' set' → logprob: -3.5142149925231934
    9. 'calc' → logprob: -3.5142149925231934
    10. ' link' → logprob: -3.8892149925231934

Token 567: '_loop' (ID: 40621)
  Prédit: '_init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_init' → logprob: -0.32829344272613525
    2. '_link' → logprob: -1.9532934427261353
    3. '_distance' → logprob: -3.0782933235168457
    4. '_next' → logprob: -3.8282933235168457
    5. '_' → logprob: -4.078293323516846
    6. '_inner' → logprob: -4.328293323516846
    7. '_v' → logprob: -4.453293323516846
    8. '_l' → logprob: -5.453293323516846
    9. '_dist' → logprob: -5.703293323516846
    10. 'def' → logprob: -6.328293323516846

Token 568: '(
' (ID: 1607)
  Prédit: '_vars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_vars' → logprob: -0.47625014185905457
    2. '_' → logprob: -1.851250171661377
    3. '():' → logprob: -2.726250171661377
    4. '_inner' → logprob: -3.226250171661377
    5. '_body' → logprob: -3.851250171661377
    6. '_count' → logprob: -4.101250171661377
    7. '_(' → logprob: -4.476250171661377
    8. '_variables' → logprob: -4.601250171661377
    9. '_start' → logprob: -4.851250171661377
    10. '(' → logprob: -4.851250171661377

Token 569: '   ' (ID: 271)
  Prédit: 'link'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'link' → logprob: -0.27720341086387634
    2. 'v' → logprob: -2.027203321456909
    3. 'distance' → logprob: -3.652203321456909
    4. '(link' → logprob: -3.902203321456909
    5. '   ' → logprob: -4.152203559875488
    6. ' link' → logprob: -4.527203559875488
    7. '):
' → logprob: -5.152203559875488
    8. ')' → logprob: -5.152203559875488
    9. ' v' → logprob: -5.652203559875488
    10. '):' → logprob: -5.902203559875488

Token 570: ' link' (ID: 3461)
  Prédit: 'link'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'link' (adapté à ' link') → logprob: -0.1765040159225464
    2. 'v' → logprob: -3.051504135131836
    3. ' link' → logprob: -3.301504135131836
    4. '   ' → logprob: -3.551504135131836
    5. 'distance' → logprob: -3.676504135131836
    6. ' v' → logprob: -5.176504135131836
    7. ')' → logprob: -5.676504135131836
    8. ' distance' → logprob: -6.551504135131836
    9. '):
' → logprob: -6.676504135131836
    10. 'loop' → logprob: -6.801504135131836

Token 571: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -5.512236498361744e-07
    2. 'lists' → logprob: -15.750000953674316
    3. '_list' → logprob: -15.750000953674316
    4. ')' → logprob: -17.625
    5. 'lst' → logprob: -18.375
    6. 'ist' → logprob: -18.5
    7. 'link' → logprob: -18.625
    8. 'l' → logprob: -18.875
    9. 'liste' → logprob: -18.875
    10. ' list' → logprob: -18.875

Token 572: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037263904232531786
    2. ',
' → logprob: -8.375372886657715
    3. '):' → logprob: -9.125372886657715
    4. '   ' → logprob: -11.000372886657715
    5. ')' → logprob: -12.500372886657715
    6. ',v' → logprob: -13.000372886657715
    7. ',
' → logprob: -13.250372886657715
    8. 'def' → logprob: -13.375372886657715
    9. ' ,' → logprob: -13.875372886657715
    10. '=' → logprob: -14.125372886657715

Token 573: ' distance' (ID: 9324)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.9336789846420288
    2. 'v' → logprob: -1.0586789846420288
    3. '   ' → logprob: -1.9336789846420288
    4. ' distance' → logprob: -2.8086791038513184
    5. 'distance' → logprob: -3.0586791038513184
    6. 'start' → logprob: -6.683679103851318
    7. 'visited' → logprob: -7.058679103851318
    8. ' start' → logprob: -7.058679103851318
    9. 'depth' → logprob: -7.308679103851318
    10. ' current' → logprob: -7.558679103851318

Token 574: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.010715280659496784
    2. '_count' → logprob: -4.760715484619141
    3. ',' → logprob: -6.635715484619141
    4. 's' → logprob: -7.760715484619141
    5. '):' → logprob: -8.76071548461914
    6. '   ' → logprob: -9.76071548461914
    7. 'list' → logprob: -10.01071548461914
    8. '_counts' → logprob: -11.01071548461914
    9. ',_' → logprob: -11.26071548461914
    10. ')' → logprob: -11.26071548461914

Token 575: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00028255043434910476
    2. ',
' → logprob: -8.750282287597656
    3. '   ' → logprob: -9.875282287597656
    4. '):' → logprob: -10.000282287597656
    5. ',v' → logprob: -11.250282287597656
    6. ')' → logprob: -12.250282287597656
    7. '):
' → logprob: -12.375282287597656
    8. ' ,' → logprob: -13.000282287597656
    9. '),' → logprob: -14.750282287597656
    10. 'def' → logprob: -15.000282287597656

Token 576: ' distance' (ID: 9324)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.23526203632354736
    2. 'distance' → logprob: -2.360261917114258
    3. ' v' → logprob: -2.485261917114258
    4. '   ' → logprob: -3.985261917114258
    5. ' distance' → logprob: -4.735261917114258
    6. 'start' → logprob: -6.610261917114258
    7. 'current' → logprob: -6.985261917114258
    8. 'visited' → logprob: -7.985261917114258
    9. ' ' → logprob: -8.235261917114258
    10. '  ' → logprob: -8.485261917114258

Token 577: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0019213721388950944
    2. ',' → logprob: -6.6269211769104
    3. 'count' → logprob: -7.8769211769104
    4. ',
' → logprob: -10.126921653747559
    5. '   ' → logprob: -10.251921653747559
    6. '_counts' → logprob: -10.376921653747559
    7. ',count' → logprob: -10.626921653747559
    8. '_list' → logprob: -10.876921653747559
    9. ')' → logprob: -11.126921653747559
    10. ',_' → logprob: -11.626921653747559

Token 578: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009293294278904796
    2. ',
' → logprob: -7.500929355621338
    3. '):' → logprob: -8.62592887878418
    4. '   ' → logprob: -9.12592887878418
    5. ',v' → logprob: -9.87592887878418
    6. ')' → logprob: -11.12592887878418
    7. '):
' → logprob: -11.12592887878418
    8. 'v' → logprob: -13.25092887878418
    9. ' ,' → logprob: -13.75092887878418
    10. ',
' → logprob: -14.37592887878418

Token 579: ' distance' (ID: 9324)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.03762045502662659
    2. ' v' → logprob: -3.6626205444335938
    3. '   ' → logprob: -4.537620544433594
    4. 'distance' → logprob: -9.037620544433594
    5. 'visited' → logprob: -9.287620544433594
    6. 'current' → logprob: -10.037620544433594
    7. '    ' → logprob: -10.287620544433594
    8. 'start' → logprob: -10.537620544433594
    9. '  ' → logprob: -10.537620544433594
    10. ' ' → logprob: -10.537620544433594

Token 580: ',' (ID: 11)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.1073449850082397
    2. ',' → logprob: -1.2323449850082397
    3. '_count' → logprob: -1.4823449850082397
    4. '):' → logprob: -2.2323451042175293
    5. '   ' → logprob: -4.732345104217529
    6. ')' → logprob: -5.107345104217529
    7. ',
' → logprob: -5.357345104217529
    8. '):
' → logprob: -5.357345104217529
    9. '_max' → logprob: -5.482345104217529
    10. '_,' → logprob: -5.982345104217529

Token 581: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.052641283720731735
    2. '   ' → logprob: -3.6776413917541504
    3. ' v' → logprob: -3.6776413917541504
    4. '    ' → logprob: -9.302640914916992
    5. '       ' → logprob: -9.552640914916992
    6. 'visited' → logprob: -9.677640914916992
    7. 'distance' → logprob: -9.677640914916992
    8. ' ' → logprob: -9.927640914916992
    9. '  ' → logprob: -10.302640914916992
    10. '	v' → logprob: -10.927640914916992

Token 582: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.001238921657204628
    2. ',' → logprob: -6.876238822937012
    3. '_list' → logprob: -9.626238822937012
    4. '   ' → logprob: -9.876238822937012
    5. 'v' → logprob: -11.251238822937012
    6. ' ,' → logprob: -11.376238822937012
    7. 'l' → logprob: -11.376238822937012
    8. ' list' → logprob: -11.626238822937012
    9. ',
' → logprob: -11.626238822937012
    10. ')' → logprob: -11.876238822937012

Token 583: '_previous' (ID: 126212)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24547824263572693
    2. '_previous' → logprob: -1.6204782724380493
    3. '_next' → logprob: -4.37047815322876
    4. ',
' → logprob: -5.87047815322876
    5. '   ' → logprob: -7.12047815322876
    6. '_prev' → logprob: -7.24547815322876
    7. '_,' → logprob: -7.24547815322876
    8. ',_' → logprob: -7.37047815322876
    9. '_current' → logprob: -7.37047815322876
    10. ' ,' → logprob: -7.87047815322876

Token 584: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016825977945700288
    2. ',
' → logprob: -8.875167846679688
    3. ',v' → logprob: -11.000167846679688
    4. '   ' → logprob: -11.750167846679688
    5. ' ,' → logprob: -13.500167846679688
    6. '):' → logprob: -14.250167846679688
    7. ')' → logprob: -14.375167846679688
    8. 'v' → logprob: -14.500167846679688
    9. '):
' → logprob: -15.500167846679688
    10. ',\
' → logprob: -15.875167846679688

Token 585: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.011805981397628784
    2. ' v' → logprob: -4.761806011199951
    3. '   ' → logprob: -5.761806011199951
    4. 'distance' → logprob: -11.136805534362793
    5. '    ' → logprob: -11.886805534362793
    6. ' ' → logprob: -12.636805534362793
    7. '  ' → logprob: -12.886805534362793
    8. '       ' → logprob: -13.011805534362793
    9. '
' → logprob: -13.136805534362793
    10. '	v' → logprob: -13.261805534362793

Token 586: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0001605115394340828
    2. 'ist' → logprob: -8.750160217285156
    3. '_list' → logprob: -14.625160217285156
    4. '   ' → logprob: -14.750160217285156
    5. ' list' → logprob: -15.125160217285156
    6. 'v' → logprob: -15.500160217285156
    7. '	list' → logprob: -16.500160217285156
    8. 'ilist' → logprob: -16.500160217285156
    9. ',' → logprob: -16.625160217285156
    10. '```' → logprob: -16.750160217285156

Token 587: ',' (ID: 11)
  Prédit: '_next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.18189461529254913
    2. ',' → logprob: -1.8068946599960327
    3. ',next' → logprob: -6.931894779205322
    4. 'next' → logprob: -8.056894302368164
    5. '_previous' → logprob: -8.556894302368164
    6. ',
' → logprob: -8.931894302368164
    7. '_,' → logprob: -8.931894302368164
    8. ',_' → logprob: -9.681894302368164
    9. 'Next' → logprob: -9.681894302368164
    10. '_NEXT' → logprob: -10.056894302368164

Token 588: ' node' (ID: 4596)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.24668718874454498
    2. '   ' → logprob: -1.7466871738433838
    3. ' v' → logprob: -3.121687173843384
    4. '    ' → logprob: -9.246686935424805
    5. '	v' → logprob: -10.121686935424805
    6. '       ' → logprob: -11.496686935424805
    7. '  ' → logprob: -12.121686935424805
    8. '    
' → logprob: -12.496686935424805
    9. ' ' → logprob: -12.746686935424805
    10. '```' → logprob: -12.746686935424805

Token 589: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.04365180432796478
    2. '_count' → logprob: -3.168651819229126
    3. 's' → logprob: -7.543651580810547
    4. ')' → logprob: -10.418651580810547
    5. 'ount' → logprob: -10.668651580810547
    6. 'cnt' → logprob: -10.918651580810547
    7. '_counts' → logprob: -11.793651580810547
    8. '_' → logprob: -12.043651580810547
    9. 'counts' → logprob: -12.293651580810547
    10. ' count' → logprob: -12.293651580810547

Token 590: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24256949126720428
    2. '):' → logprob: -1.9925694465637207
    3. '):
' → logprob: -2.6175694465637207
    4. '   ' → logprob: -5.867569446563721
    5. ',
' → logprob: -5.992569446563721
    6. ')' → logprob: -7.992569446563721
    7. '):
' → logprob: -8.992569923400879
    8. '
' → logprob: -9.367569923400879
    9. ':' → logprob: -9.992569923400879
    10. '):

' → logprob: -10.492569923400879

Token 591: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11455660313367844
    2. '):' → logprob: -2.2395565509796143
    3. '   ' → logprob: -7.239556789398193
    4. '):
' → logprob: -7.739556789398193
    5. ',
' → logprob: -8.364556312561035
    6. ')' → logprob: -8.614556312561035
    7. ':' → logprob: -8.989556312561035
    8. ' ):' → logprob: -11.364556312561035
    9. ',v' → logprob: -11.864556312561035
    10. '
' → logprob: -12.239556312561035

Token 592: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06373733282089233
    2. '   ' → logprob: -3.063737392425537
    3. ':
' → logprob: -4.563737392425537
    4. '):' → logprob: -5.938737392425537
    5. ',' → logprob: -7.438737392425537
    6. '):
' → logprob: -7.563737392425537
    7. ')' → logprob: -7.938737392425537
    8. ' :' → logprob: -9.188736915588379
    9. 'def' → logprob: -9.313736915588379
    10. '    
' → logprob: -9.938736915588379

Token 593: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3985453248023987
    2. 'while' (adapté à ' while') → logprob: -2.398545265197754
    3. 'for' → logprob: -2.523545265197754
    4. ' for' → logprob: -3.273545265197754
    5. 'if' → logprob: -3.398545265197754
    6. ' while' → logprob: -3.523545265197754
    7. ' if' → logprob: -3.773545265197754
    8. 'v' → logprob: -4.023545265197754
    9. 'distance' → logprob: -4.523545265197754
    10. ' v' → logprob: -5.898545265197754

Token 594: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.4013119339942932
    2. 'v' → logprob: -1.7763118743896484
    3. ' distance' → logprob: -2.2763118743896484
    4. ' v' → logprob: -3.0263118743896484
    5. 'len' → logprob: -5.401311874389648
    6. ' len' → logprob: -5.776311874389648
    7. 'True' → logprob: -6.901311874389648
    8. '   ' → logprob: -7.401311874389648
    9. ' True' → logprob: -7.526311874389648
    10. ' not' → logprob: -9.901311874389648

Token 595: '_count' (ID: 7536)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6092543005943298
    2. '_count' → logprob: -0.8592543005943298
    3. ' <=' → logprob: -3.9842543601989746
    4. '<' → logprob: -4.859254360198975
    5. '_list' → logprob: -6.234254360198975
    6. '<=' → logprob: -6.984254360198975
    7. '<count' → logprob: -7.109254360198975
    8. ' ' → logprob: -7.109254360198975
    9. '_' → logprob: -7.234254360198975
    10. ' +' → logprob: -8.109253883361816

Token 596: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.06225839629769325
    2. '<' → logprob: -2.81225848197937
    3. ' <=' → logprob: -8.56225872039795
    4. ' ' → logprob: -9.68725872039795
    5. '<=' → logprob: -10.93725872039795
    6. '<len' → logprob: -12.06225872039795
    7. '   ' → logprob: -12.68725872039795
    8. '<n' → logprob: -12.68725872039795
    9. '<size' → logprob: -12.93725872039795
    10. ' <
' → logprob: -13.56225872039795

Token 597: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.03385603427886963
    2. ' node' → logprob: -3.40885591506958
    3. '   ' → logprob: -9.033856391906738
    4. 'len' → logprob: -10.533856391906738
    5. ' ' → logprob: -11.283856391906738
    6. '  ' → logprob: -11.533856391906738
    7. '
' → logprob: -11.783856391906738
    8. '	node' → logprob: -11.908856391906738
    9. 'distance' → logprob: -12.033856391906738
    10. '    ' → logprob: -12.033856391906738

Token 598: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.001051984610967338
    2. '_count' → logprob: -6.876051902770996
    3. '   ' → logprob: -11.001051902770996
    4. ' count' → logprob: -14.501051902770996
    5. '       ' → logprob: -14.876051902770996
    6. 's' → logprob: -15.251051902770996
    7. 'ount' → logprob: -15.501051902770996
    8. '_' → logprob: -15.626051902770996
    9. ' ' → logprob: -15.626051902770996
    10. ')' → logprob: -15.626051902770996

Token 599: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.028327936306595802
    2. ':
' → logprob: -4.528327941894531
    3. 'and' → logprob: -4.653327941894531
    4. '   ' → logprob: -5.153327941894531
    5. ':' → logprob: -6.403327941894531
    6. '       ' → logprob: -9.278327941894531
    7. ' :
' → logprob: -11.153327941894531
    8. ' ' → logprob: -11.528327941894531
    9. '	and' → logprob: -11.528327941894531
    10. '    ' → logprob: -11.653327941894531

Token 600: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0047289221547544
    2. '   ' → logprob: -5.5047287940979
    3. 'v' → logprob: -7.7547287940979
    4. ':' → logprob: -9.754729270935059
    5. ' for' → logprob: -10.379729270935059
    6. ' if' → logprob: -10.379729270935059
    7. 'if' → logprob: -10.629729270935059
    8. ' v' → logprob: -10.879729270935059
    9. 'for' → logprob: -11.254729270935059
    10. '
' → logprob: -11.629729270935059

Token 601: ' v' (ID: 323)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4629630744457245
    2. 'v' (adapté à ' v') → logprob: -1.0879631042480469
    3. ' v' → logprob: -4.212963104248047
    4. '   ' → logprob: -4.587963104248047
    5. 'distance' → logprob: -5.837963104248047
    6. 'for' → logprob: -6.337963104248047
    7. 'if' → logprob: -6.462963104248047
    8. 'set' → logprob: -7.087963104248047
    9. ' for' → logprob: -8.087963104248047
    10. 'next' → logprob: -8.212963104248047

Token 602: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0021776235662400723
    2. 'ist' → logprob: -6.252177715301514
    3. '_list' → logprob: -8.752177238464355
    4. ' =' → logprob: -10.502177238464355
    5. 'set' → logprob: -11.877177238464355
    6. '   ' → logprob: -12.002177238464355
    7. ',' → logprob: -12.127177238464355
    8. 'for' → logprob: -12.127177238464355
    9. '=' → logprob: -12.252177238464355
    10. '_next' → logprob: -12.377177238464355

Token 603: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.0764591246843338
    2. '_previous' → logprob: -2.7014591693878174
    3. ',' → logprob: -5.201458930969238
    4. '_prev' → logprob: -7.326458930969238
    5. '_,' → logprob: -9.076458930969238
    6. 'next' → logprob: -9.326458930969238
    7. '_new' → logprob: -10.576458930969238
    8. ',next' → logprob: -10.951458930969238
    9. ' =' → logprob: -11.076458930969238
    10. ' ,' → logprob: -11.451458930969238

Token 604: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.581092894077301
    2. '=' → logprob: -0.831092894077301
    3. '.clear' → logprob: -5.706092834472656
    4. '.extend' → logprob: -6.706092834472656
    5. '=[]' → logprob: -8.456092834472656
    6. ',' → logprob: -8.706092834472656
    7. '[:]' → logprob: -8.706092834472656
    8. ' ' → logprob: -11.831092834472656
    9. '   ' → logprob: -12.081092834472656
    10. '.' → logprob: -12.081092834472656

Token 605: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3132860064506531
    2. '[]
' → logprob: -1.3132860660552979
    3. '[]

' → logprob: -10.688285827636719
    4. 'set' → logprob: -14.188285827636719
    5. '[' → logprob: -15.188285827636719
    6. ' []
' → logprob: -15.563285827636719
    7. ' []' → logprob: -15.688285827636719
    8. 'list' → logprob: -16.81328582763672
    9. '[])
' → logprob: -17.18828582763672
    10. '[])' → logprob: -17.43828582763672

Token 606: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00020544764993246645
    2. ' for' → logprob: -9.250205039978027
    3. 'for' → logprob: -9.375205039978027
    4. 'set' → logprob: -11.375205039978027
    5. 'update' → logprob: -12.375205039978027
    6. '   ' → logprob: -12.500205039978027
    7. ',' → logprob: -12.875205039978027
    8. ' update' → logprob: -14.750205039978027
    9. '        
' → logprob: -14.750205039978027
    10. '```' → logprob: -15.000205039978027

Token 607: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.013014336116611958
    2. '       ' → logprob: -4.513014316558838
    3. ' for' → logprob: -6.888014316558838
    4. 'update' → logprob: -7.138014316558838
    5. '   ' → logprob: -9.263014793395996
    6. 'set' → logprob: -10.388014793395996
    7. 'v' → logprob: -10.888014793395996
    8. 'distance' → logprob: -12.888014793395996
    9. '	for' → logprob: -13.513014793395996
    10. ' update' → logprob: -14.763014793395996

Token 608: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.07967210561037064
    2. ' v' → logprob: -2.57967209815979
    3. 'u' → logprob: -8.829671859741211
    4. 'vertex' → logprob: -9.079671859741211
    5. '   ' → logprob: -9.454671859741211
    6. 'node' → logprob: -9.704671859741211
    7. 'vv' → logprob: -9.829671859741211
    8. 'x' → logprob: -10.079671859741211
    9. 'cur' → logprob: -10.329671859741211
    10. 'current' → logprob: -10.454671859741211

Token 609: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07892801612615585
    2. 'in' → logprob: -2.578927993774414
    3. '	in' → logprob: -11.703927993774414
    4. ' ' → logprob: -12.078927993774414
    5. '_in' → logprob: -12.453927993774414
    6. 'v' → logprob: -12.828927993774414
    7. 'import' → logprob: -12.828927993774414
    8. ',' → logprob: -13.203927993774414
    9. '   ' → logprob: -13.328927993774414
    10. 'list' → logprob: -13.453927993774414

Token 610: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.002476724097505212
    2. ' v' → logprob: -6.002476692199707
    3. '   ' → logprob: -15.002476692199707
    4. 'set' → logprob: -15.127476692199707
    5. '	v' → logprob: -15.502476692199707
    6. 'list' → logprob: -16.252477645874023
    7. ' ' → logprob: -17.252477645874023
    8. '(v' → logprob: -17.377477645874023
    9. ')v' → logprob: -17.502477645874023
    10. '_v' → logprob: -17.877477645874023

Token 611: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0012011817889288068
    2. 'v' → logprob: -6.751201152801514
    3. ' v' → logprob: -10.876201629638672
    4. '   ' → logprob: -12.001201629638672
    5. 'l' → logprob: -13.376201629638672
    6. 'ist' → logprob: -14.001201629638672
    7. '       ' → logprob: -14.376201629638672
    8. '```' → logprob: -14.626201629638672
    9. ' ' → logprob: -14.751201629638672
    10. ' list' → logprob: -14.876201629638672

Token 612: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.29113954305648804
    2. ':' → logprob: -1.6661396026611328
    3. '_next' → logprob: -2.791139602661133
    4. '           ' → logprob: -7.041139602661133
    5. '       ' → logprob: -7.166139602661133
    6. '):
' → logprob: -9.041139602661133
    7. '_previous' → logprob: -9.041139602661133
    8. '   ' → logprob: -9.291139602661133
    9. '_update' → logprob: -9.541139602661133
    10. 'Next' → logprob: -10.166139602661133

Token 613: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005700715119019151
    2. 'update' → logprob: -7.875570297241211
    3. ',' → logprob: -9.625570297241211
    4. ' update' → logprob: -9.750570297241211
    5. '          ' → logprob: -11.000570297241211
    6. '       ' → logprob: -11.375570297241211
    7. '.update' → logprob: -12.375570297241211
    8. ':
' → logprob: -12.500570297241211
    9. ':' → logprob: -12.625570297241211
    10. '               ' → logprob: -12.750570297241211

Token 614: ' set' (ID: 920)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.10123742371797562
    2. ' update' → logprob: -2.8512375354766846
    3. '           ' → logprob: -3.3512375354766846
    4. '       ' → logprob: -5.9762372970581055
    5. '               ' → logprob: -7.3512372970581055
    6. '   ' → logprob: -8.351237297058105
    7. '	update' → logprob: -10.601237297058105
    8. '.update' → logprob: -11.226237297058105
    9. '_update' → logprob: -12.226237297058105
    10. '
' → logprob: -12.976237297058105

Token 615: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.17680133879184723
    2. '_v' → logprob: -2.4268014430999756
    3. 'distance' → logprob: -3.1768014430999756
    4. 'v' → logprob: -3.9268014430999756
    5. '   ' → logprob: -4.9268012046813965
    6. '(v' → logprob: -6.6768012046813965
    7. 'def' → logprob: -7.0518012046813965
    8. '_' → logprob: -7.3018012046813965
    9. 'update' → logprob: -8.051801681518555
    10. 'increase' → logprob: -8.426801681518555

Token 616: '(distance' (ID: 105203)
  Prédit: '(distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(distance' → logprob: -3.7697225252486533e-06
    2. '(' → logprob: -12.625003814697266
    3. '(
' → logprob: -15.750003814697266
    4. ' (' → logprob: -16.500003814697266
    5. 'distance' → logprob: -17.000003814697266
    6. '(destination' → logprob: -18.750003814697266
    7. '(depth' → logprob: -19.375003814697266
    8. '(duration' → logprob: -19.750003814697266
    9. '```' → logprob: -19.875003814697266
    10. '   ' → logprob: -20.125003814697266

Token 617: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0003819332632701844
    2. '(distance' → logprob: -7.875381946563721
    3. '_distance' → logprob: -14.250381469726562
    4. 'distance' → logprob: -14.875381469726562
    5. 'List' → logprob: -15.125381469726562
    6. 'list' → logprob: -15.750381469726562
    7. ')' → logprob: -15.750381469726562
    8. '```' → logprob: -16.250381469726562
    9. '_LIST' → logprob: -17.500381469726562
    10. '(' → logprob: -18.000381469726562

Token 618: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0040895589627325535
    2. ',v' → logprob: -5.62908935546875
    3. '(v' → logprob: -7.75408935546875
    4. ' ,' → logprob: -9.87908935546875
    5. 'v' → logprob: -13.00408935546875
    6. '           ' → logprob: -13.12908935546875
    7. ',
' → logprob: -13.37908935546875
    8. '   ' → logprob: -14.25408935546875
    9. '[v' → logprob: -14.37908935546875
    10. '```' → logprob: -14.50408935546875

Token 619: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00671809446066618
    2. ' v' → logprob: -5.006718158721924
    3. '           ' → logprob: -13.381717681884766
    4. ')v' → logprob: -14.631717681884766
    5. ')' → logprob: -15.381717681884766
    6. '	v' → logprob: -15.506717681884766
    7. '    ' → logprob: -16.256717681884766
    8. '   ' → logprob: -16.381717681884766
    9. '(v' → logprob: -16.881717681884766
    10. '[v' → logprob: -17.381717681884766

Token 620: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00045009577297605574
    2. ' ,' → logprob: -7.750450134277344
    3. ',v' → logprob: -11.875450134277344
    4. ')' → logprob: -12.250450134277344
    5. ',
' → logprob: -13.000450134277344
    6. '   ' → logprob: -13.500450134277344
    7. 'v' → logprob: -13.500450134277344
    8. '```' → logprob: -15.000450134277344
    9. '           ' → logprob: -15.375450134277344
    10. '0' → logprob: -15.375450134277344

Token 621: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.001503313542343676
    2. ' distance' → logprob: -6.5015034675598145
    3. '           ' → logprob: -14.251502990722656
    4. '   ' → logprob: -15.376502990722656
    5. '       ' → logprob: -17.751502990722656
    6. '(distance' → logprob: -18.001502990722656
    7. '               ' → logprob: -18.251502990722656
    8. 'dist' → logprob: -18.376502990722656
    9. ' ' → logprob: -18.626502990722656
    10. ')' → logprob: -18.876502990722656

Token 622: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.09305747598409653
    2. ')' → logprob: -2.46805739402771
    3. ' +' → logprob: -5.968057632446289
    4. '+' → logprob: -7.343057632446289
    5. ' )
' → logprob: -7.843057632446289
    6. ')
' → logprob: -8.093057632446289
    7. '       ' → logprob: -8.968057632446289
    8. ' )' → logprob: -10.593057632446289
    9. '           ' → logprob: -10.718057632446289
    10. '   ' → logprob: -10.718057632446289

Token 623: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10887826234102249
    2. '
' → logprob: -2.3588783740997314
    3. '<|end|>' → logprob: -5.233878135681152
    4. '            
' → logprob: -6.358878135681152
    5. ' 
' → logprob: -7.358878135681152
    6. '            ' → logprob: -8.483878135681152
    7. '<|end|>' → logprob: -8.983878135681152
    8. '        
' → logprob: -8.983878135681152
    9. '       ' → logprob: -9.733878135681152
    10. '  
' → logprob: -9.733878135681152

Token 624: ' distance' (ID: 9324)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.11464962363243103
    2. '           ' → logprob: -2.239649534225464
    3. ' update' → logprob: -6.989649772644043
    4. '       ' → logprob: -7.114649772644043
    5. '   ' → logprob: -9.864649772644043
    6. 'for' → logprob: -11.489649772644043
    7. '               ' → logprob: -11.739649772644043
    8. '.update' → logprob: -11.989649772644043
    9. '	update' → logprob: -12.364649772644043
    10. '_update' → logprob: -13.114649772644043

Token 625: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.07215786725282669
    2. ' +=' → logprob: -2.947157859802246
    3. '+=' → logprob: -4.072157859802246
    4. 'count' → logprob: -10.697157859802246
    5. ',' → logprob: -11.197157859802246
    6. '+' → logprob: -11.322157859802246
    7. '=' → logprob: -11.447157859802246
    8. ' =' → logprob: -11.947157859802246
    9. '   ' → logprob: -12.572157859802246
    10. ']+=' → logprob: -12.697157859802246

Token 626: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -1.2194544076919556
    2. '+=' → logprob: -1.2194544076919556
    3. '=' → logprob: -1.4694544076919556
    4. ' =' → logprob: -1.7194544076919556
    5. '+' → logprob: -13.469454765319824
    6. '    ' → logprob: -15.094454765319824
    7. ' +' → logprob: -15.594454765319824
    8. ',' → logprob: -15.594454765319824
    9. '   ' → logprob: -15.844454765319824
    10. ' ' → logprob: -16.344453811645508

Token 627: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004148087929934263
    2. ' ' → logprob: -5.504148006439209
    3. 'len' → logprob: -10.504148483276367
    4. 'increase' → logprob: -10.504148483276367
    5. ' len' → logprob: -12.254148483276367
    6. 'set' → logprob: -12.754148483276367
    7. ' increase' → logprob: -13.004148483276367
    8. 'v' → logprob: -13.629148483276367
    9. 'mod' → logprob: -14.379148483276367
    10. 'distance' → logprob: -14.629148483276367

Token 628: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0016633969498798251
    2. ' ' → logprob: -6.5016632080078125
    3. 'len' → logprob: -9.251663208007812
    4. 'increase' → logprob: -10.251663208007812
    5. 'set' → logprob: -11.251663208007812
    6. ' len' → logprob: -12.501663208007812
    7. 'link' → logprob: -13.001663208007812
    8. 'mod' → logprob: -13.001663208007812
    9. 'v' → logprob: -13.126663208007812
    10. ' increase' → logprob: -14.126663208007812

Token 629: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5143585205078125
    2. '           ' → logprob: -1.0143585205078125
    3. '<|end|>' → logprob: -3.5143585205078125
    4. '       ' → logprob: -5.2643585205078125
    5. '            
' → logprob: -7.1393585205078125
    6. '<|end|>' → logprob: -7.2643585205078125
    7. '        
' → logprob: -7.2643585205078125
    8. ' 
' → logprob: -7.7643585205078125
    9. ',' → logprob: -7.8893585205078125
    10. '
' → logprob: -8.264358520507812

Token 630: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014455175027251244
    2. '
' → logprob: -4.889455318450928
    3. '       ' → logprob: -5.014455318450928
    4. 'update' → logprob: -9.38945484161377
    5. ',' → logprob: -10.26445484161377
    6. '   ' → logprob: -11.26445484161377
    7. '               ' → logprob: -11.88945484161377
    8. '.update' → logprob: -12.13945484161377
    9. '
' → logprob: -12.26445484161377
    10. '<|end|>' → logprob: -12.26445484161377

Token 631: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' (adapté à ' update') → logprob: -0.004357483237981796
    2. '           ' → logprob: -5.62935733795166
    3. '       ' → logprob: -7.62935733795166
    4. '   ' → logprob: -8.50435733795166
    5. ' update' → logprob: -9.62935733795166
    6. '               ' → logprob: -13.50435733795166
    7. '	update' → logprob: -14.87935733795166
    8. 'for' → logprob: -15.37935733795166
    9. '                   ' → logprob: -16.254358291625977
    10. 'if' → logprob: -16.379358291625977

Token 632: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -1.6240566083070007e-06
    2. 'v' → logprob: -13.500001907348633
    3. '```' → logprob: -16.125001907348633
    4. '_' → logprob: -17.000001907348633
    5. '(v' → logprob: -20.250001907348633
    6. '`' → logprob: -20.500001907348633
    7. '	v' → logprob: -21.125001907348633
    8. '
' → logprob: -21.250001907348633
    9. '   ' → logprob: -21.500001907348633
    10. ' ' → logprob: -21.625001907348633

Token 633: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -3.128163257315464e-07
    2. '_list' → logprob: -16.125
    3. 'ist' → logprob: -16.875
    4. 'link' → logprob: -17.375
    5. 'v' → logprob: -18.625
    6. 'alist' → logprob: -19.75
    7. '(v' → logprob: -20.125
    8. '```' → logprob: -20.625
    9. ' list' → logprob: -21.0
    10. '[' → logprob: -21.875

Token 634: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -1.9385402993066236e-05
    2. 'next' → logprob: -10.875019073486328
    3. 'Next' → logprob: -15.875019073486328
    4. '```' → logprob: -16.000019073486328
    5. '_NEXT' → logprob: -17.000019073486328
    6. '(next' → logprob: -17.125019073486328
    7. ' next' → logprob: -17.500019073486328
    8. '_previous' → logprob: -18.750019073486328
    9. '(v' → logprob: -19.375019073486328
    10. '_prev' → logprob: -20.625019073486328

Token 635: '(link' (ID: 51236)
  Prédit: '(link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(link' → logprob: -2.0219828002154827e-05
    2. '(' → logprob: -11.000020027160645
    3. '(
' → logprob: -12.625020027160645
    4. '```' → logprob: -17.00002098083496
    5. '(line' → logprob: -17.25002098083496
    6. '$link' → logprob: -17.50002098083496
    7. 'link' → logprob: -18.12502098083496
    8. '(Link' → logprob: -18.50002098083496
    9. '<link' → logprob: -18.87502098083496
    10. '	link' → logprob: -19.37502098083496

Token 636: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -2.1008713702030946e-06
    2. 'link' → logprob: -13.125001907348633
    3. 'ist' → logprob: -17.500001907348633
    4. '(v' → logprob: -18.875001907348633
    5. 'lists' → logprob: -19.125001907348633
    6. '_list' → logprob: -19.375001907348633
    7. '(' → logprob: -20.000001907348633
    8. '(list' → logprob: -20.375001907348633
    9. '(link' → logprob: -20.500001907348633
    10. '[' → logprob: -20.625001907348633

Token 637: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.827200897736475e-05
    2. ',v' → logprob: -9.500078201293945
    3. ' ,' → logprob: -12.875078201293945
    4. '   ' → logprob: -14.750078201293945
    5. ',
' → logprob: -15.500078201293945
    6. '(v' → logprob: -16.125078201293945
    7. 'v' → logprob: -16.375078201293945
    8. ')' → logprob: -16.375078201293945
    9. '[v' → logprob: -18.500078201293945
    10. '```' → logprob: -18.500078201293945

Token 638: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0007100477814674377
    2. ' v' → logprob: -7.2507100105285645
    3. '	v' → logprob: -16.625709533691406
    4. '   ' → logprob: -17.000709533691406
    5. ',' → logprob: -17.250709533691406
    6. '
' → logprob: -18.000709533691406
    7. '[v' → logprob: -18.500709533691406
    8. ')v' → logprob: -18.625709533691406
    9. '```' → logprob: -18.750709533691406
    10. ')' → logprob: -19.375709533691406

Token 639: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026407750556245446
    2. ',v' → logprob: -8.250264167785645
    3. ' ,' → logprob: -13.250264167785645
    4. 'v' → logprob: -14.375264167785645
    5. '   ' → logprob: -14.875264167785645
    6. ',
' → logprob: -16.500263214111328
    7. ' v' → logprob: -19.125263214111328
    8. ',w' → logprob: -19.250263214111328
    9. '‌,' → logprob: -19.375263214111328
    10. '```' → logprob: -19.625263214111328

Token 640: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.547789674485102e-05
    2. ' v' → logprob: -10.250035285949707
    3. '	v' → logprob: -18.750036239624023
    4. ')v' → logprob: -21.250036239624023
    5. '   ' → logprob: -21.375036239624023
    6. '_v' → logprob: -22.375036239624023
    7. '(v' → logprob: -22.625036239624023
    8. '[v' → logprob: -23.375036239624023
    9. '```' → logprob: -23.625036239624023
    10. 'vj' → logprob: -24.375036239624023

Token 641: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -9.627176768844947e-05
    2. 'ist' → logprob: -9.250096321105957
    3. 'v' → logprob: -17.12509536743164
    4. '_list' → logprob: -17.12509536743164
    5. 'next' → logprob: -17.87509536743164
    6. '_next' → logprob: -18.37509536743164
    7. ' list' → logprob: -18.50009536743164
    8. '```' → logprob: -19.00009536743164
    9. 'l' → logprob: -20.62509536743164
    10. ')' → logprob: -20.87509536743164

Token 642: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -4.842555426876061e-06
    2. 'next' → logprob: -12.250004768371582
    3. 'Next' → logprob: -17.5000057220459
    4. ' next' → logprob: -19.2500057220459
    5. '_NEXT' → logprob: -19.5000057220459
    6. '[next' → logprob: -19.8750057220459
    7. '_' → logprob: -21.0000057220459
    8. '.next' → logprob: -21.5000057220459
    9. '```' → logprob: -21.7500057220459
    10. '(next' → logprob: -22.1250057220459

Token 643: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31455346941947937
    2. ')
' → logprob: -1.3145534992218018
    3. '       ' → logprob: -6.689553260803223
    4. ')
' → logprob: -10.689553260803223
    5. ')return' → logprob: -11.814553260803223
    6. ')

' → logprob: -12.314553260803223
    7. '   ' → logprob: -12.314553260803223
    8. '           ' → logprob: -13.439553260803223
    9. ')v' → logprob: -13.939553260803223
    10. ' )' → logprob: -14.064553260803223

Token 644: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1173611432313919
    2. '
' → logprob: -2.242361068725586
    3. '        
' → logprob: -5.992361068725586
    4. '<|end|>' → logprob: -6.367361068725586
    5. ',' → logprob: -8.867361068725586
    6. ' 
' → logprob: -10.492361068725586
    7. '```' → logprob: -10.742361068725586
    8. '#' → logprob: -11.242361068725586
    9. '<|end|>' → logprob: -11.242361068725586
    10. '\n' → logprob: -11.617361068725586

Token 645: ' distance' (ID: 9324)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005756118800491095
    2. '
' → logprob: -5.25575590133667
    3. '        
' → logprob: -8.630756378173828
    4. '   ' → logprob: -8.880756378173828
    5. 'distance' (adapté à ' distance') → logprob: -9.505756378173828
    6. '```' → logprob: -10.005756378173828
    7. 'v' → logprob: -10.130756378173828
    8. '<|end|>' → logprob: -12.130756378173828
    9. '
' → logprob: -12.380756378173828
    10. '﻿' → logprob: -12.380756378173828

Token 646: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0009200352360494435
    2. '+=' → logprob: -7.125919818878174
    3. '_count' → logprob: -9.125920295715332
    4. '   ' → logprob: -13.000920295715332
    5. ' =' → logprob: -13.375920295715332
    6. '    ' → logprob: -14.125920295715332
    7. ',' → logprob: -14.375920295715332
    8. ' +' → logprob: -14.875920295715332
    9. '+' → logprob: -15.000920295715332
    10. ' ' → logprob: -15.500920295715332

Token 647: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006265374249778688
    2. ' ' → logprob: -7.375626564025879
    3. '   ' → logprob: -17.500625610351562
    4. ' ' → logprob: -18.375625610351562
    5. '```' → logprob: -20.000625610351562
    6. '
' → logprob: -20.375625610351562
    7. '	' → logprob: -21.125625610351562
    8. '１' → logprob: -21.250625610351562
    9. '۱' → logprob: -21.500625610351562
    10. '  ' → logprob: -22.125625610351562

Token 648: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -17.50000762939453
    4. 'def' → logprob: -19.00000762939453
    5. '
' → logprob: -19.50000762939453
    6. '```' → logprob: -19.62500762939453
    7. '１' → logprob: -21.00000762939453
    8. '+' → logprob: -21.18750762939453
    9. '  ' → logprob: -21.31250762939453
    10. '۱' → logprob: -21.43750762939453

Token 649: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15260851383209229
    2. ',' → logprob: -2.7776083946228027
    3. 'v' → logprob: -3.4026083946228027
    4. '
' → logprob: -3.7776083946228027
    5. '<|end|>' → logprob: -4.402608394622803
    6. '        
' → logprob: -5.777608394622803
    7. ',
' → logprob: -5.902608394622803
    8. '   ' → logprob: -6.777608394622803
    9. ',v' → logprob: -6.902608394622803
    10. '	v' → logprob: -7.527608394622803

Token 650: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6348505020141602
    2. 'v' → logprob: -1.5098505020141602
    3. ',' → logprob: -1.6348505020141602
    4. '
' → logprob: -3.75985050201416
    5. ',
' → logprob: -4.50985050201416
    6. ',v' → logprob: -4.75985050201416
    7. '```' → logprob: -5.25985050201416
    8. '	v' → logprob: -6.38485050201416
    9. '   ' → logprob: -6.50985050201416
    10. '        
' → logprob: -7.25985050201416

Token 651: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -9.901345038088039e-05
    2. '       ' → logprob: -9.750099182128906
    3. '(v' → logprob: -10.750099182128906
    4. ' v' → logprob: -11.500099182128906
    5. '   ' → logprob: -12.500099182128906
    6. '           ' → logprob: -13.625099182128906
    7. '
' → logprob: -13.875099182128906
    8. ',v' → logprob: -14.500099182128906
    9. '_v' → logprob: -14.625099182128906
    10. '(
' → logprob: -14.625099182128906

Token 652: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0012571377446874976
    2. ',' → logprob: -6.751256942749023
    3. 'l' → logprob: -10.751256942749023
    4. '_previous' → logprob: -10.751256942749023
    5. '_list' → logprob: -11.126256942749023
    6. '_prev' → logprob: -11.501256942749023
    7. '_next' → logprob: -11.751256942749023
    8. ',list' → logprob: -12.501256942749023
    9. 'next' → logprob: -13.626256942749023
    10. 'previous' → logprob: -13.751256942749023

Token 653: '_to' (ID: 5089)
  Prédit: '_previous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_previous' → logprob: -0.6400356292724609
    2. ',' → logprob: -0.7650356292724609
    3. '_next' → logprob: -5.015035629272461
    4. '_prev' → logprob: -7.640035629272461
    5. 'previous' → logprob: -8.765035629272461
    6. ',v' → logprob: -10.515035629272461
    7. '_new' → logprob: -10.640035629272461
    8. ' ,' → logprob: -10.890035629272461
    9. ',_' → logprob: -10.890035629272461
    10. '_,' → logprob: -11.140035629272461

Token 654: '_del' (ID: 39544)
  Prédit: '_previous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_previous' → logprob: -0.5176988244056702
    2. 'previous' → logprob: -1.1426987648010254
    3. 'set' → logprob: -3.2676987648010254
    4. ',' → logprob: -3.5176987648010254
    5. '_next' → logprob: -5.017698764801025
    6. 'next' → logprob: -5.642698764801025
    7. '_prev' → logprob: -6.142698764801025
    8. 'prev' → logprob: -6.392698764801025
    9. 'state' → logprob: -7.142698764801025
    10. 'pre' → logprob: -7.642698764801025

Token 655: ' =' (ID: 314)
  Prédit: 'ete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ete' → logprob: -0.11440053582191467
    2. ',' → logprob: -2.364400625228882
    3. 'e' → logprob: -4.739400386810303
    4. '=' → logprob: -5.864400386810303
    5. ' =' → logprob: -6.989400386810303
    6. 'et' → logprob: -7.489400386810303
    7. 'te' → logprob: -7.864400386810303
    8. 'ate' → logprob: -8.364400863647461
    9. ',e' → logprob: -8.864400863647461
    10. 'eted' → logprob: -9.739400863647461

Token 656: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2557457387447357
    2. '[]' → logprob: -2.2557456493377686
    3. 'set' → logprob: -2.5057456493377686
    4. '[v' → logprob: -3.6307456493377686
    5. ' v' → logprob: -4.880745887756348
    6. 'list' → logprob: -6.505745887756348
    7. ' set' → logprob: -7.005745887756348
    8. '[]
' → logprob: -7.005745887756348
    9. ' []' → logprob: -7.505745887756348
    10. '{' → logprob: -7.880745887756348

Token 657: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.08661331236362457
    2. 'ext' → logprob: -3.211613416671753
    3. '_next' → logprob: -3.461613416671753
    4. 'next' → logprob: -5.586613178253174
    5. '_list' → logprob: -5.961613178253174
    6. '_previous' → logprob: -6.086613178253174
    7. 'ist' → logprob: -6.336613178253174
    8. '_prev' → logprob: -7.836613178253174
    9. 'set' → logprob: -9.711613655090332
    10. '```' → logprob: -9.711613655090332

Token 658: '_previous' (ID: 126212)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3636379539966583
    2. '_previous' → logprob: -2.363637924194336
    3. '_next' → logprob: -2.863637924194336
    4. '_' → logprob: -2.988637924194336
    5. '[:]' → logprob: -2.988637924194336
    6. '
' → logprob: -3.613637924194336
    7. '.copy' → logprob: -4.238637924194336
    8. ',
' → logprob: -6.113637924194336
    9. ' =' → logprob: -6.238637924194336
    10. ' ' → logprob: -6.613637924194336

Token 659: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28318288922309875
    2. '[:]' → logprob: -1.6581828594207764
    3. '
' → logprob: -4.4081830978393555
    4. '[:' → logprob: -4.5331830978393555
    5. ',v' → logprob: -4.5331830978393555
    6. 'v' → logprob: -4.9081830978393555
    7. '       ' → logprob: -5.6581830978393555
    8. '+' → logprob: -5.9081830978393555
    9. '.copy' → logprob: -6.1581830978393555
    10. '   ' → logprob: -6.9081830978393555

Token 660: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6369239091873169
    2. ',' → logprob: -0.7619239091873169
    3. ',
' → logprob: -6.386923789978027
    4. 'v' → logprob: -6.761923789978027
    5. ',v' → logprob: -7.136923789978027
    6. '   ' → logprob: -8.261923789978027
    7. '[:]' → logprob: -9.636923789978027
    8. '<|end|>' → logprob: -9.636923789978027
    9. '
' → logprob: -9.761923789978027
    10. ')' → logprob: -9.886923789978027

Token 661: ' v' (ID: 323)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06201719865202904
    2. 'v' (adapté à ' v') → logprob: -2.8120172023773193
    3. ' v' → logprob: -10.062017440795898
    4. '   ' → logprob: -12.312017440795898
    5. ',v' → logprob: -13.937017440795898
    6. '	v' → logprob: -14.062017440795898
    7. ',' → logprob: -14.937017440795898
    8. '	' → logprob: -16.4370174407959
    9. '      ' → logprob: -16.6870174407959
    10. '_v' → logprob: -17.1870174407959

Token 662: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00017588881019037217
    2. 'ist' → logprob: -8.875175476074219
    3. ',' → logprob: -10.250175476074219
    4. '_list' → logprob: -15.875175476074219
    5. ',v' → logprob: -16.00017547607422
    6. '=list' → logprob: -16.37517547607422
    7. ',list' → logprob: -16.75017547607422
    8. ' =' → logprob: -17.00017547607422
    9. '=' → logprob: -17.00017547607422
    10. 'lst' → logprob: -17.50017547607422

Token 663: '_previous' (ID: 126212)
  Prédit: '_previous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_previous' → logprob: -0.4301426410675049
    2. ',' → logprob: -1.0551426410675049
    3. '_next' → logprob: -7.180142402648926
    4. '_to' → logprob: -7.930142402648926
    5. '_prev' → logprob: -9.180142402648926
    6. ' ,' → logprob: -9.430142402648926
    7. '=' → logprob: -9.805142402648926
    8. ' =' → logprob: -11.180142402648926
    9. 'previous' → logprob: -11.180142402648926
    10. '_,' → logprob: -11.180142402648926

Token 664: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6557483077049255
    2. ',' → logprob: -0.7807483077049255
    3. ' =' → logprob: -3.7807483673095703
    4. ',v' → logprob: -10.28074836730957
    5. 'v' → logprob: -11.03074836730957
    6. '=v' → logprob: -11.03074836730957
    7. ' ,' → logprob: -12.78074836730957
    8. '[:]' → logprob: -13.03074836730957
    9. ')' → logprob: -13.15574836730957
    10. ' v' → logprob: -13.15574836730957

Token 665: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.04301517829298973
    2. ' v' → logprob: -3.168015241622925
    3. '	v' → logprob: -11.668015480041504
    4. '(v' → logprob: -12.793015480041504
    5. '[v' → logprob: -13.918015480041504
    6. '   ' → logprob: -14.668015480041504
    7. '    ' → logprob: -14.668015480041504
    8. '<|end|>' → logprob: -14.668015480041504
    9. '<v' → logprob: -14.793015480041504
    10. '       ' → logprob: -14.918015480041504

Token 666: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.5048530030981055e-06
    2. '_list' → logprob: -14.500001907348633
    3. 'ist' → logprob: -14.875001907348633
    4. ' list' → logprob: -15.625001907348633
    5. '<|end|>' → logprob: -16.000001907348633
    6. 'lists' → logprob: -16.625001907348633
    7. ',' → logprob: -17.625001907348633
    8. 'List' → logprob: -17.875001907348633
    9. '```' → logprob: -17.875001907348633
    10. '=list' → logprob: -18.375001907348633

Token 667: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029921848326921463
    2. ' =' → logprob: -3.529921770095825
    3. ',' → logprob: -9.279921531677246
    4. '<|end|>' → logprob: -9.529921531677246
    5. ')' → logprob: -13.904921531677246
    6. '=v' → logprob: -14.029921531677246
    7. ' ' → logprob: -14.529921531677246
    8. '_next' → logprob: -14.654921531677246
    9. '<|end|>' → logprob: -14.779921531677246
    10. '```' → logprob: -15.279921531677246

Token 668: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.15675321221351624
    2. 'v' → logprob: -2.1567533016204834
    3. ' set' → logprob: -3.7817533016204834
    4. ' v' → logprob: -5.156753063201904
    5. '(v' → logprob: -7.781753063201904
    6. '   ' → logprob: -8.531753540039062
    7. '       ' → logprob: -9.156753540039062
    8. '           ' → logprob: -10.406753540039062
    9. '_set' → logprob: -10.656753540039062
    10. '(set' → logprob: -11.656753540039062

Token 669: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.07014094293117523
    2. '(v' → logprob: -2.695140838623047
    3. 'v' → logprob: -8.820140838623047
    4. '(' → logprob: -11.195140838623047
    5. '(_' → logprob: -11.570140838623047
    6. '_' → logprob: -11.695140838623047
    7. '```' → logprob: -12.070140838623047
    8. '_distance' → logprob: -12.195140838623047
    9. '_state' → logprob: -12.820140838623047
    10. ' _' → logprob: -13.070140838623047

Token 670: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -4.723352049040841e-06
    2. 'ist' → logprob: -12.375004768371582
    3. '(v' → logprob: -15.750004768371582
    4. ' list' → logprob: -15.875004768371582
    5. '_list' → logprob: -15.875004768371582
    6. '(list' → logprob: -17.000003814697266
    7. 'List' → logprob: -18.875003814697266
    8. '   ' → logprob: -19.250003814697266
    9. '[v' → logprob: -19.250003814697266
    10. 'next' → logprob: -19.625003814697266

Token 671: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.0004907185211777687
    2. 'state' → logprob: -7.625490665435791
    3. '(v' → logprob: -13.50049114227295
    4. 'State' → logprob: -15.12549114227295
    5. '(state' → logprob: -15.12549114227295
    6. '_previous' → logprob: -15.62549114227295
    7. '_states' → logprob: -16.250490188598633
    8. 'v' → logprob: -16.375490188598633
    9. '   ' → logprob: -16.500490188598633
    10. '_State' → logprob: -16.625490188598633

Token 672: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -5.478889215737581e-05
    2. '(' → logprob: -9.875054359436035
    3. ' (' → logprob: -13.375054359436035
    4. '(
' → logprob: -13.875054359436035
    5. 'v' → logprob: -14.250054359436035
    6. '(None' → logprob: -16.50005531311035
    7. '   ' → logprob: -17.75005531311035
    8. ',v' → logprob: -18.37505531311035
    9. '```' → logprob: -18.37505531311035
    10. '((' → logprob: -19.00005531311035

Token 673: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.000820230518002063
    2. 'ist' → logprob: -7.125820159912109
    3. '_list' → logprob: -11.25082015991211
    4. 'v' → logprob: -14.50082015991211
    5. ' list' → logprob: -14.87582015991211
    6. '   ' → logprob: -15.50082015991211
    7. 'previous' → logprob: -15.62582015991211
    8. 'isted' → logprob: -15.62582015991211
    9. '_previous' → logprob: -15.75082015991211
    10. 'List' → logprob: -15.75082015991211

Token 674: '_previous' (ID: 126212)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08369254320859909
    2. '_previous' → logprob: -2.7086925506591797
    3. ',v' → logprob: -4.70869255065918
    4. '_next' → logprob: -6.33369255065918
    5. ' ,' → logprob: -6.45869255065918
    6. 'previous' → logprob: -7.20869255065918
    7. '_,' → logprob: -8.70869255065918
    8. ',next' → logprob: -8.95869255065918
    9. 'v' → logprob: -9.58369255065918
    10. '   ' → logprob: -9.95869255065918

Token 675: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038241007132455707
    2. ',v' → logprob: -8.000382423400879
    3. ' ,' → logprob: -10.000382423400879
    4. 'v' → logprob: -14.500382423400879
    5. '   ' → logprob: -14.500382423400879
    6. ',
' → logprob: -14.500382423400879
    7. '‌,' → logprob: -16.875381469726562
    8. ')' → logprob: -18.125381469726562
    9. ',\
' → logprob: -18.125381469726562
    10. ',w' → logprob: -18.625381469726562

Token 676: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.002479581395164132
    2. ' v' → logprob: -6.002479553222656
    3. '   ' → logprob: -12.502479553222656
    4. '	v' → logprob: -16.502479553222656
    5. '       ' → logprob: -16.752479553222656
    6. '```' → logprob: -17.502479553222656
    7. ')v' → logprob: -17.627479553222656
    8. '  ' → logprob: -17.752479553222656
    9. '    ' → logprob: -17.877479553222656
    10. ' ' → logprob: -18.127479553222656

Token 677: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0016633969498798251
    2. 'ist' → logprob: -6.5016632080078125
    3. 'next' → logprob: -8.876663208007812
    4. '_next' → logprob: -11.876663208007812
    5. '_list' → logprob: -12.126663208007812
    6. ' list' → logprob: -13.501663208007812
    7. ')' → logprob: -13.501663208007812
    8. '   ' → logprob: -13.626663208007812
    9. '```' → logprob: -14.001663208007812
    10. 'Next' → logprob: -14.126663208007812

Token 678: ',' (ID: 11)
  Prédit: '_next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.1427057385444641
    2. ')' → logprob: -2.3927056789398193
    3. ',' → logprob: -3.2677056789398193
    4. 'next' → logprob: -6.267705917358398
    5. ',next' → logprob: -6.517705917358398
    6. 'Next' → logprob: -10.517705917358398
    7. ' next' → logprob: -10.892705917358398
    8. ',)' → logprob: -11.017705917358398
    9. '_,' → logprob: -11.392705917358398
    10. ',
' → logprob: -11.517705917358398

Token 679: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0052362410351634026
    2. ' v' → logprob: -5.2552361488342285
    3. '	v' → logprob: -13.630236625671387
    4. '       ' → logprob: -14.380236625671387
    5. '   ' → logprob: -15.005236625671387
    6. ')v' → logprob: -15.755236625671387
    7. '           ' → logprob: -16.13023567199707
    8. '[v' → logprob: -16.25523567199707
    9. '_v' → logprob: -17.63023567199707
    10. '<v' → logprob: -17.88023567199707

Token 680: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -5.1689596148207784e-05
    2. 'ist' → logprob: -9.875051498413086
    3. 'next' → logprob: -16.875051498413086
    4. ' list' → logprob: -18.375051498413086
    5. '_list' → logprob: -18.375051498413086
    6. 'set' → logprob: -19.000051498413086
    7. 'v' → logprob: -19.125051498413086
    8. 'List' → logprob: -19.875051498413086
    9. 'l' → logprob: -20.125051498413086
    10. '[' → logprob: -20.625051498413086

Token 681: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.000158842682139948
    2. 'next' → logprob: -8.75015926361084
    3. 'Next' → logprob: -15.62515926361084
    4. ' next' → logprob: -16.375158309936523
    5. ')' → logprob: -17.875158309936523
    6. '[next' → logprob: -17.875158309936523
    7. '_NEXT' → logprob: -18.625158309936523
    8. '	next' → logprob: -19.375158309936523
    9. '_new' → logprob: -20.750158309936523
    10. '_' → logprob: -20.750158309936523

Token 682: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005520791164599359
    2. ')
' → logprob: -7.875552177429199
    3. '       ' → logprob: -8.7505521774292
    4. '   ' → logprob: -11.2505521774292
    5. ')return' → logprob: -15.7505521774292
    6. ')

' → logprob: -16.250551223754883
    7. ' )' → logprob: -16.500551223754883
    8. ')
' → logprob: -17.125551223754883
    9. '	' → logprob: -17.250551223754883
    10. ' ' → logprob: -17.375551223754883

Token 683: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 684: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0865723192691803
    2. '<|end|>' → logprob: -2.5865724086761475
    3. '   ' → logprob: -5.586572170257568
    4. ')' → logprob: -6.086572170257568
    5. 'return' (adapté à ' return') → logprob: -7.836572170257568
    6. '...' → logprob: -8.461572647094727
    7. '        ' → logprob: -8.461572647094727
    8. 'def' → logprob: -9.336572647094727
    9. '```' → logprob: -9.336572647094727
    10. '<|end|>' → logprob: -9.461572647094727

Token 685: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.014491010457277298
    2. ' distance' → logprob: -4.264491081237793
    3. '(distance' → logprob: -8.264491081237793
    4. 'v' → logprob: -10.014491081237793
    5. '   ' → logprob: -11.389491081237793
    6. ' v' → logprob: -11.764491081237793
    7. 'None' → logprob: -13.389491081237793
    8. '(v' → logprob: -13.514491081237793
    9. ' ' → logprob: -14.389491081237793
    10. ' None' → logprob: -14.514491081237793

Token 686: '_list' (ID: 4162)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 687: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 688: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 689: ' find' (ID: 1646)
  Prédit: ' bfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -1.1982530355453491
    2. ' calc' → logprob: -1.8232530355453491
    3. ' main' → logprob: -1.9482530355453491
    4. 'calc' → logprob: -2.4482531547546387
    5. 'b' → logprob: -2.6982531547546387
    6. ' solve' → logprob: -2.8232531547546387
    7. ' find' → logprob: -3.5732531547546387
    8. 'main' → logprob: -3.6982531547546387
    9. ' get' → logprob: -4.073253154754639
    10. ' link' → logprob: -4.198253154754639

Token 690: '_max' (ID: 13731)
  Prédit: '_short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_short' → logprob: -1.2940934896469116
    2. '_link' → logprob: -1.7940934896469116
    3. '_long' → logprob: -2.419093608856201
    4. '_distance' → logprob: -2.669093608856201
    5. '_max' → logprob: -2.794093608856201
    6. '_dist' → logprob: -3.044093608856201
    7. '_all' → logprob: -3.169093608856201
    8. '_path' → logprob: -3.294093608856201
    9. '_connected' → logprob: -3.544093608856201
    10. '_cycle' → logprob: -3.669093608856201

Token 691: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.014358827844262123
    2. '_dist' → logprob: -4.764358997344971
    3. '_node' → logprob: -6.639358997344971
    4. 'distance' → logprob: -6.764358997344971
    5. '(' → logprob: -7.139358997344971
    6. '_depth' → logprob: -7.514358997344971
    7. '_index' → logprob: -8.139358520507812
    8. 'def' → logprob: -8.264358520507812
    9. '_max' → logprob: -8.389358520507812
    10. '_value' → logprob: -8.639358520507812

Token 692: '(distance' (ID: 105203)
  Prédit: '(distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(distance' → logprob: -0.23793037235736847
    2. '(link' → logprob: -1.612930417060852
    3. '(' → logprob: -4.4879302978515625
    4. '(
' → logprob: -7.8629302978515625
    5. '(dist' → logprob: -8.362930297851562
    6. '(def' → logprob: -8.487930297851562
    7. '(d' → logprob: -9.987930297851562
    8. '(depth' → logprob: -10.112930297851562
    9. '(calc' → logprob: -10.362930297851562
    10. '(node' → logprob: -10.737930297851562

Token 693: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -9.841743303695694e-05
    2. ')' → logprob: -9.62509822845459
    3. 'list' → logprob: -11.25009822845459
    4. ')_' → logprob: -12.12509822845459
    5. '_count' → logprob: -12.37509822845459
    6. '_' → logprob: -12.62509822845459
    7. 's' → logprob: -13.25009822845459
    8. 'List' → logprob: -13.62509822845459
    9. '(' → logprob: -13.87509822845459
    10. '[' → logprob: -14.12509822845459

Token 694: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03388288989663124
    2. '):
' → logprob: -3.4088828563690186
    3. ')' → logprob: -8.783883094787598
    4. ' ):' → logprob: -10.658883094787598
    5. '():' → logprob: -10.658883094787598
    6. '):
' → logprob: -11.033883094787598
    7. ',' → logprob: -11.908883094787598
    8. '   ' → logprob: -12.158883094787598
    9. '):

' → logprob: -12.783883094787598
    10. '():
' → logprob: -12.783883094787598

Token 695: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.31050947308540344
    2. '   ' → logprob: -1.810509443283081
    3. 'max' → logprob: -2.310509443283081
    4. ' return' → logprob: -5.56050968170166
    5. ' max' → logprob: -8.18550968170166
    6. 'def' → logprob: -11.93550968170166
    7. '```' → logprob: -12.06050968170166
    8. '_max' → logprob: -12.93550968170166
    9. 'distance' → logprob: -13.68550968170166
    10. '
' → logprob: -14.06050968170166

Token 696: ' max' (ID: 2999)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03735107555985451
    2. 'max' (adapté à ' max') → logprob: -3.787351131439209
    3. ' return' → logprob: -4.662351131439209
    4. '   ' → logprob: -5.412351131439209
    5. ' max' → logprob: -9.28735065460205
    6. '_max' → logprob: -12.66235065460205
    7. 'm' → logprob: -13.41235065460205
    8. 'def' → logprob: -13.53735065460205
    9. 'maximum' → logprob: -13.78735065460205
    10. '```' → logprob: -14.53735065460205

Token 697: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.015548941679298878
    2. '(distance' → logprob: -4.8905487060546875
    3. '_val' → logprob: -5.3905487060546875
    4. '_' → logprob: -6.5155487060546875
    5. '_value' → logprob: -7.2655487060546875
    6. 'distance' → logprob: -7.5155487060546875
    7. '_dist' → logprob: -7.7655487060546875
    8. '(' → logprob: -9.015548706054688
    9. '_idx' → logprob: -10.390548706054688
    10. '_index' → logprob: -11.140548706054688

Token 698: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03371197357773781
    2. ' =' → logprob: -3.4087119102478027
    3. '=max' → logprob: -10.283712387084961
    4. '(' → logprob: -11.408712387084961
    5. '(max' → logprob: -12.283712387084961
    6. '   ' → logprob: -12.283712387084961
    7. ',' → logprob: -12.408712387084961
    8. ')' → logprob: -12.908712387084961
    9. '(distance' → logprob: -13.783712387084961
    10. ' ' → logprob: -13.783712387084961

Token 699: ' -' (ID: 533)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.13562270998954773
    2. '0' → logprob: -2.26062273979187
    3. '-' → logprob: -3.88562273979187
    4. ' max' → logprob: -6.760622501373291
    5. '-max' → logprob: -7.260622501373291
    6. 'distance' → logprob: -9.51062297821045
    7. 'float' → logprob: -10.63562297821045
    8. ' ' → logprob: -11.13562297821045
    9. '-distance' → logprob: -11.76062297821045
    10. '   ' → logprob: -11.76062297821045

Token 700: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00045807508286088705
    2. 'float' → logprob: -8.000457763671875
    3. '999' → logprob: -10.000457763671875
    4. '10' → logprob: -10.250457763671875
    5. '100' → logprob: -10.750457763671875
    6. '2' → logprob: -11.500457763671875
    7. '99' → logprob: -12.375457763671875
    8. 'min' → logprob: -13.625457763671875
    9. 'int' → logprob: -14.000457763671875
    10. '-' → logprob: -14.000457763671875

Token 701: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10048647969961166
    2. '   ' → logprob: -2.4754865169525146
    3. 'for' → logprob: -4.6004862785339355
    4. 'max' → logprob: -7.1004862785339355
    5. ' for' → logprob: -7.7254862785339355
    6. '
' → logprob: -9.350486755371094
    7. '    
' → logprob: -10.600486755371094
    8. ',' → logprob: -10.975486755371094
    9. ',max' → logprob: -11.850486755371094
    10. ' max' → logprob: -11.975486755371094

Token 702: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19480107724666595
    2. 'for' → logprob: -1.9448010921478271
    3. '   ' → logprob: -4.319800853729248
    4. ' for' → logprob: -4.444800853729248
    5. 'max' → logprob: -4.819800853729248
    6. '    
' → logprob: -8.069801330566406
    7. ' max' → logprob: -8.569801330566406
    8. ' 
' → logprob: -8.819801330566406
    9. '_max' → logprob: -10.194801330566406
    10. '\n' → logprob: -10.444801330566406

Token 703: ' max' (ID: 2999)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001959201879799366
    2. 'max' (adapté à ' max') → logprob: -6.251959323883057
    3. ' for' → logprob: -10.876958847045898
    4. '   ' → logprob: -11.501958847045898
    5. 'idx' → logprob: -14.626958847045898
    6. 'index' → logprob: -15.001958847045898
    7. '```' → logprob: -15.626958847045898
    8. 'min' → logprob: -15.876958847045898
    9. 'return' → logprob: -15.876958847045898
    10. '
' → logprob: -15.876958847045898

Token 704: '_v' (ID: 5390)
  Prédit: '_distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.09336090087890625
    2. '_index' → logprob: -2.8433609008789062
    3. '_node' → logprob: -3.8433609008789062
    4. 'distance' → logprob: -6.218360900878906
    5. '_vertex' → logprob: -6.343360900878906
    6. '_key' → logprob: -6.593360900878906
    7. '_value' → logprob: -7.093360900878906
    8. '_v' → logprob: -7.093360900878906
    9. 'node' → logprob: -7.218360900878906
    10. 'index' → logprob: -8.218360900878906

Token 705: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20699718594551086
    2. ' =' → logprob: -1.7069971561431885
    3. 'alue' → logprob: -5.331997394561768
    4. 'al' → logprob: -8.08199691772461
    5. ',' → logprob: -8.70699691772461
    6. '=None' → logprob: -9.58199691772461
    7. 'for' → logprob: -10.33199691772461
    8. '=[]' → logprob: -10.45699691772461
    9. '=list' → logprob: -11.20699691772461
    10. '=int' → logprob: -11.33199691772461

Token 706: ' None' (ID: 4662)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0005542247672565281
    2. 'None' → logprob: -7.750554084777832
    3. ' -' → logprob: -9.250554084777832
    4. '0' → logprob: -10.625554084777832
    5. ' None' → logprob: -12.875554084777832
    6. '1' → logprob: -15.375554084777832
    7. '   ' → logprob: -15.875554084777832
    8. '-none' → logprob: -16.00055503845215
    9. ' ' → logprob: -16.87555503845215
    10. '[]' → logprob: -17.12555503845215

Token 707: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09379265457391739
    2. 'for' → logprob: -3.093792676925659
    3. '   ' → logprob: -3.468792676925659
    4. ' for' → logprob: -4.46879243850708
    5. '    
' → logprob: -7.09379243850708
    6. '<|end|>' → logprob: -8.468792915344238
    7. '  
' → logprob: -9.093792915344238
    8. 'def' → logprob: -9.468792915344238
    9. ' 
' → logprob: -9.468792915344238
    10. ',' → logprob: -9.593792915344238

Token 708: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24030576646327972
    2. '   ' → logprob: -2.2403056621551514
    3. ' for' → logprob: -2.2403056621551514
    4. '
' → logprob: -7.2403059005737305
    5. '	for' → logprob: -11.11530590057373
    6. '    
' → logprob: -11.49030590057373
    7. 'def' → logprob: -11.61530590057373
    8. '```' → logprob: -12.74030590057373
    9. '  
' → logprob: -13.24030590057373
    10. ' 
' → logprob: -13.49030590057373

Token 709: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0009967254009097815
    2. ' for' → logprob: -7.0009965896606445
    3. '   ' → logprob: -9.375996589660645
    4. '
' → logprob: -15.875996589660645
    5. 'max' → logprob: -16.37599754333496
    6. '	for' → logprob: -16.37599754333496
    7. 'def' → logprob: -16.87599754333496
    8. '```' → logprob: -17.37599754333496
    9. '    
' → logprob: -19.12599754333496
    10. ' ' → logprob: -19.12599754333496

Token 710: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.004515327513217926
    2. 'i' → logprob: -5.879515171051025
    3. ' v' → logprob: -6.504515171051025
    4. 'idx' → logprob: -9.504515647888184
    5. 'k' → logprob: -9.879515647888184
    6. ' i' → logprob: -10.254515647888184
    7. 'index' → logprob: -10.504515647888184
    8. '   ' → logprob: -11.379515647888184
    9. 'key' → logprob: -13.004515647888184
    10. 'distance' → logprob: -13.004515647888184

Token 711: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014676038408651948
    2. ' in' → logprob: -6.751467704772949
    3. ' ,' → logprob: -8.75146770477295
    4. ',d' → logprob: -9.62646770477295
    5. 'in' → logprob: -9.87646770477295
    6. ',v' → logprob: -11.00146770477295
    7. ',value' → logprob: -13.00146770477295
    8. ',in' → logprob: -14.75146770477295
    9. ',int' → logprob: -15.37646770477295
    10. '   ' → logprob: -15.50146770477295

Token 712: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.33462899923324585
    2. 'dist' → logprob: -1.4596290588378906
    3. 'distance' → logprob: -2.9596290588378906
    4. ' dist' → logprob: -9.20962905883789
    5. ' d' → logprob: -9.33462905883789
    6. ' distance' → logprob: -10.58462905883789
    7. 'dis' → logprob: -11.20962905883789
    8. '   ' → logprob: -12.45962905883789
    9. 'dst' → logprob: -13.83462905883789
    10. 'val' → logprob: -14.70962905883789

Token 713: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11287832260131836
    2. 'in' → logprob: -2.2378783226013184
    3. 'istance' → logprob: -10.612878799438477
    4. '_in' → logprob: -11.612878799438477
    5. ' ' → logprob: -11.862878799438477
    6. '	in' → logprob: -12.487878799438477
    7. 'ist' → logprob: -12.862878799438477
    8. 'is' → logprob: -13.487878799438477
    9. 'inthe' → logprob: -14.362878799438477
    10. 'distance' → logprob: -14.362878799438477

Token 714: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.00987106841057539
    2. 'enumer' → logprob: -4.634871006011963
    3. ' distance' → logprob: -9.259871482849121
    4. ' enumerate' → logprob: -10.884871482849121
    5. '(distance' → logprob: -14.134871482849121
    6. 'Distance' → logprob: -16.259870529174805
    7. '```' → logprob: -16.884870529174805
    8. '_distance' → logprob: -17.134870529174805
    9. '   ' → logprob: -17.134870529174805
    10. 'enum' → logprob: -17.134870529174805

Token 715: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.500108141452074e-05
    2. 'in' → logprob: -10.875035285949707
    3. 'list' → logprob: -11.875035285949707
    4. ' in' → logprob: -12.750035285949707
    5. 'enumer' → logprob: -13.000035285949707
    6. 'List' → logprob: -13.375035285949707
    7. 's' → logprob: -13.750035285949707
    8. '_' → logprob: -14.375035285949707
    9. '_LIST' → logprob: -16.00003433227539
    10. '_in' → logprob: -16.12503433227539

Token 716: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.27790382504463196
    2. 'items' → logprob: -1.6529037952423096
    3. ' in' → logprob: -3.4029037952423096
    4. 'in' → logprob: -4.402904033660889
    5. '_items' → logprob: -6.527904033660889
    6. '.iteritems' → logprob: -6.527904033660889
    7. '()' → logprob: -7.027904033660889
    8. '.' → logprob: -7.902904033660889
    9. '():' → logprob: -8.15290355682373
    10. ')' → logprob: -8.15290355682373

Token 717: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0012116642901673913
    2. '():
' → logprob: -6.751211643218994
    3. '()' → logprob: -10.126212120056152
    4. '():
' → logprob: -14.001212120056152
    5. ' ():' → logprob: -14.751212120056152
    6. '():

' → logprob: -16.126211166381836
    7. '(' → logprob: -16.376211166381836
    8. '()):
' → logprob: -18.501211166381836
    9. '()>' → logprob: -18.626211166381836
    10. ':' → logprob: -19.001211166381836

Token 718: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3133755922317505
    2. '   ' → logprob: -1.3133755922317505
    3. '<|end|>' → logprob: -9.938375473022461
    4. '```' → logprob: -11.188375473022461
    5. '    ' → logprob: -11.313375473022461
    6. ',' → logprob: -11.438375473022461
    7. ' if' → logprob: -11.563375473022461
    8. '           ' → logprob: -12.688375473022461
    9. '     ' → logprob: -12.813375473022461
    10. '      ' → logprob: -13.313375473022461

Token 719: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030982576310634613
    2. ' if' → logprob: -3.530982494354248
    3. 'if' (adapté à ' if') → logprob: -7.155982494354248
    4. '   ' → logprob: -7.905982494354248
    5. '    ' → logprob: -11.030982971191406
    6. '        ' → logprob: -11.280982971191406
    7. '           ' → logprob: -11.405982971191406
    8. '      ' → logprob: -12.280982971191406
    9. '	if' → logprob: -12.280982971191406
    10. '<|end|>' → logprob: -12.405982971191406

Token 720: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.38688531517982483
    2. 'd' → logprob: -1.1368852853775024
    3. '   ' → logprob: -12.636885643005371
    4. '    ' → logprob: -12.761885643005371
    5. '	d' → logprob: -12.886885643005371
    6. '(d' → logprob: -13.011885643005371
    7. '       ' → logprob: -14.011885643005371
    8. ' ' → logprob: -14.386885643005371
    9. ' ' → logprob: -14.886885643005371
    10. '        ' → logprob: -15.136885643005371

Token 721: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.10028354823589325
    2. ' >' → logprob: -2.350283622741699
    3. ' is' → logprob: -9.7252836227417
    4. 'is' → logprob: -11.9752836227417
    5. 'and' → logprob: -12.7252836227417
    6. ' ' → logprob: -12.8502836227417
    7. '>
' → logprob: -14.1002836227417
    8. '==' → logprob: -14.2252836227417
    9. ' and' → logprob: -14.6002836227417
    10. '>

' → logprob: -14.7252836227417

Token 722: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.005233763717114925
    2. ' max' → logprob: -5.2552337646484375
    3. '	max' → logprob: -19.005233764648438
    4. '(max' → logprob: -19.255233764648438
    5. '_max' → logprob: -20.255233764648438
    6. '   ' → logprob: -20.755233764648438
    7. ' ' → logprob: -20.880233764648438
    8. '
' → logprob: -21.380233764648438
    9. '0' → logprob: -21.755233764648438
    10. '=max' → logprob: -21.755233764648438

Token 723: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.000206401280593127
    2. 'distance' → logprob: -8.500205993652344
    3. 'max' → logprob: -12.875205993652344
    4. 'Distance' → logprob: -16.375205993652344
    5. ' distance' → logprob: -16.375205993652344
    6. 'd' → logprob: -16.875205993652344
    7. '_max' → logprob: -17.125205993652344
    8. 'v' → logprob: -17.375205993652344
    9. '_DISTANCE' → logprob: -17.625205993652344
    10. '_v' → logprob: -18.250205993652344

Token 724: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4745475649833679
    2. ':' → logprob: -0.9745475649833679
    3. ' or' → logprob: -8.849547386169434
    4. ' and' → logprob: -8.849547386169434
    5. '           ' → logprob: -9.849547386169434
    6. ' :
' → logprob: -9.974547386169434
    7. '       ' → logprob: -10.474547386169434
    8. 'and' → logprob: -10.974547386169434
    9. '):
' → logprob: -11.224547386169434
    10. ' :' → logprob: -11.849547386169434

Token 725: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23343999683856964
    2. '           ' → logprob: -1.8584400415420532
    3. ':
' → logprob: -3.4834399223327637
    4. '       ' → logprob: -4.733439922332764
    5. ' or' → logprob: -5.108439922332764
    6. '<|end|>' → logprob: -6.108439922332764
    7. ' :' → logprob: -6.358439922332764
    8. ',' → logprob: -7.108439922332764
    9. ' and' → logprob: -7.233439922332764
    10. ' :
' → logprob: -8.483440399169922

Token 726: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.16167810559272766
    2. 'max' (adapté à ' max') → logprob: -1.9116780757904053
    3. '           ' → logprob: -6.786678314208984
    4. '
' → logprob: -9.161678314208984
    5. '_max' → logprob: -9.411678314208984
    6. ' 
' → logprob: -10.286678314208984
    7. '(max' → logprob: -10.411678314208984
    8. '[max' → logprob: -10.536678314208984
    9. '               ' → logprob: -10.911678314208984
    10. '            ' → logprob: -11.786678314208984

Token 727: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.01143292523920536
    2. '_v' → logprob: -4.636433124542236
    3. 'distance' → logprob: -6.511433124542236
    4. '=' → logprob: -9.511432647705078
    5. 'v' → logprob: -10.511432647705078
    6. 'Distance' → logprob: -10.761432647705078
    7. '<|end|>' → logprob: -11.136432647705078
    8. ' =' → logprob: -11.386432647705078
    9. '_d' → logprob: -11.886432647705078
    10. '_DISTANCE' → logprob: -12.136432647705078

Token 728: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38697198033332825
    2. ' =' → logprob: -1.1369719505310059
    3. ',' → logprob: -9.261972427368164
    4. '=v' → logprob: -12.636972427368164
    5. '=d' → logprob: -13.136972427368164
    6. ',v' → logprob: -15.636972427368164
    7. '=
' → logprob: -16.261972427368164
    8. '   ' → logprob: -16.386972427368164
    9. ',d' → logprob: -16.511972427368164
    10. ')' → logprob: -16.761972427368164

Token 729: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.25192907452583313
    2. ' d' → logprob: -1.5019290447235107
    3. '	d' → logprob: -19.376928329467773
    4. '_d' → logprob: -19.626928329467773
    5. ')d' → logprob: -21.001928329467773
    6. '       ' → logprob: -21.376928329467773
    7. ' ' → logprob: -21.376928329467773
    8. '   ' → logprob: -21.876928329467773
    9. '```' → logprob: -21.876928329467773
    10. ' ' → logprob: -22.376928329467773

Token 730: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006826905999332666
    2. '
' → logprob: -5.006826877593994
    3. ',' → logprob: -9.756827354431152
    4. 'v' → logprob: -10.756827354431152
    5. ',
' → logprob: -11.631827354431152
    6. '<|end|>' → logprob: -12.256827354431152
    7. '               ' → logprob: -12.381827354431152
    8. '		' → logprob: -12.506827354431152
    9. ',v' → logprob: -13.006827354431152
    10. '       ' → logprob: -13.631827354431152

Token 731: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1517960956552997e-05
    2. '
' → logprob: -12.250011444091797
    3. ',' → logprob: -12.625011444091797
    4. '		' → logprob: -13.625011444091797
    5. '<|end|>' → logprob: -14.625011444091797
    6. '       ' → logprob: -15.000011444091797
    7. '               ' → logprob: -15.375011444091797
    8. ' 
' → logprob: -15.625011444091797
    9. '```' → logprob: -16.000011444091797
    10. 'v' → logprob: -16.125011444091797

Token 732: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.004357483237981796
    2. ' max' → logprob: -5.75435733795166
    3. '           ' → logprob: -6.75435733795166
    4. '   ' → logprob: -11.75435733795166
    5. '       ' → logprob: -12.25435733795166
    6. 'v' → logprob: -15.75435733795166
    7. '_max' → logprob: -16.504358291625977
    8. '               ' → logprob: -16.504358291625977
    9. '	max' → logprob: -16.754358291625977
    10. '
' → logprob: -17.129358291625977

Token 733: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -9.088346359931165e-07
    2. 'v' → logprob: -14.250000953674316
    3. '_' → logprob: -15.625000953674316
    4. '<|end|>' → logprob: -17.625
    5. '```' → logprob: -17.75
    6. '_distance' → logprob: -18.5
    7. 's' → logprob: -19.0
    8. '_a' → logprob: -19.75
    9. '_d' → logprob: -19.75
    10. '_s' → logprob: -19.875

Token 734: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009412379935383797
    2. ' =' → logprob: -4.7594122886657715
    3. '=v' → logprob: -7.1344122886657715
    4. 'v' → logprob: -16.50941276550293
    5. '<v' → logprob: -16.88441276550293
    6. '=d' → logprob: -17.13441276550293
    7. '＝' → logprob: -17.50941276550293
    8. ',v' → logprob: -18.00941276550293
    9. '<|end|>' → logprob: -18.25941276550293
    10. ' v' → logprob: -18.38441276550293

Token 735: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.0206720617134124e-05
    2. ' v' → logprob: -11.50001049041748
    3. '	v' → logprob: -17.750009536743164
    4. ')v' → logprob: -22.500009536743164
    5. '   ' → logprob: -22.750009536743164
    6. '[v' → logprob: -23.000009536743164
    7. '$v' → logprob: -23.000009536743164
    8. '<v' → logprob: -23.375009536743164
    9. '(v' → logprob: -23.500009536743164
    10. '_v' → logprob: -23.750009536743164

Token 736: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002919638354796916
    2. 'return' → logprob: -8.37529182434082
    3. '
' → logprob: -9.87529182434082
    4. ' return' → logprob: -11.75029182434082
    5. ':return' → logprob: -14.75029182434082
    6. '       ' → logprob: -15.00029182434082
    7. '	return' → logprob: -15.00029182434082
    8. '<|end|>' → logprob: -15.50029182434082
    9. ',' → logprob: -15.62529182434082
    10. '```' → logprob: -16.00029182434082

Token 737: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00034809779026545584
    2. 'return' → logprob: -8.000348091125488
    3. ' return' → logprob: -11.750348091125488
    4. '       ' → logprob: -13.250348091125488
    5. '	return' → logprob: -14.000348091125488
    6. '
' → logprob: -14.250348091125488
    7. '```' → logprob: -14.250348091125488
    8. ':return' → logprob: -15.375348091125488
    9. '<|end|>' → logprob: -15.500348091125488
    10. ',' → logprob: -16.750349044799805

Token 738: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06350913643836975
    2. '   ' → logprob: -2.813509225845337
    3. ' return' → logprob: -6.563508987426758
    4. '
' → logprob: -9.063508987426758
    5. '	return' → logprob: -12.188508987426758
    6. ':return' → logprob: -12.938508987426758
    7. '```' → logprob: -13.188508987426758
    8. ' ' → logprob: -14.188508987426758
    9. ')' → logprob: -14.563508987426758
    10. '{return' → logprob: -14.563508987426758

Token 739: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.003885700134560466
    2. ' max' → logprob: -5.753885746002197
    3. '(max' → logprob: -7.253885746002197
    4. ' (' → logprob: -16.00388526916504
    5. '[max' → logprob: -16.37888526916504
    6. '	max' → logprob: -17.62888526916504
    7. '_max' → logprob: -17.87888526916504
    8. ',max' → logprob: -19.12888526916504
    9. '   ' → logprob: -19.37888526916504
    10. '(' → logprob: -19.75388526916504

Token 740: '_distance' (ID: 45537)
  Prédit: '_v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.005233882926404476
    2. '_distance' → logprob: -5.2552337646484375
    3. 'distance' → logprob: -16.380233764648438
    4. '_dist' → logprob: -17.880233764648438
    5. 'Distance' → logprob: -18.630233764648438
    6. '_velocity' → logprob: -18.880233764648438
    7. '_V' → logprob: -19.130233764648438
    8. '_value' → logprob: -19.630233764648438
    9. '_' → logprob: -20.130233764648438
    10. '_max' → logprob: -20.255233764648438

Token 741: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019407130777835846
    2. '<|end|>' → logprob: -4.269407272338867
    3. ',max' → logprob: -5.269407272338867
    4. ',
' → logprob: -10.269407272338867
    5. 'def' → logprob: -10.644407272338867
    6. 'max' → logprob: -12.019407272338867
    7. '<|end|>' → logprob: -12.519407272338867
    8. '[max' → logprob: -12.644407272338867
    9. '
' → logprob: -12.769407272338867
    10. ' ,' → logprob: -13.144407272338867

Token 742: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.029750484973192215
    2. ' max' → logprob: -3.5297505855560303
    3. '[max' → logprob: -17.90475082397461
    4. '(max' → logprob: -19.40475082397461
    5. '	max' → logprob: -19.90475082397461
    6. ' ' → logprob: -20.52975082397461
    7. 'v' → logprob: -21.27975082397461
    8. '_max' → logprob: -21.52975082397461
    9. ',max' → logprob: -22.27975082397461
    10. '.max' → logprob: -22.90475082397461

Token 743: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -3.128163257315464e-07
    2. 'v' → logprob: -15.75
    3. '_distance' → logprob: -16.625
    4. 'distance' → logprob: -18.625
    5. '<|end|>' → logprob: -19.375
    6. '_' → logprob: -19.875
    7. '_V' → logprob: -20.5
    8. 'V' → logprob: -21.125
    9. '_x' → logprob: -21.125
    10. '	v' → logprob: -21.125

Token 744: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002032253658398986
    2. '
' → logprob: -6.377032279968262
    3. '<|end|>' → logprob: -8.252032279968262
    4. 'v' → logprob: -10.627032279968262
    5. 'distance' → logprob: -11.252032279968262
    6. 'from' → logprob: -11.502032279968262
    7. ')' → logprob: -12.127032279968262
    8. '#' → logprob: -12.627032279968262
    9. '```' → logprob: -12.752032279968262
    10. 'max' → logprob: -13.127032279968262

Token 745: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00048083928413689137
    2. '<|end|>' → logprob: -8.000480651855469
    3. 'v' → logprob: -9.625480651855469
    4. '#' → logprob: -11.125480651855469
    5. '```' → logprob: -11.375480651855469
    6. '<|end|>' → logprob: -11.750480651855469
    7. ')' → logprob: -11.750480651855469
    8. 'max' → logprob: -11.875480651855469
    9. '
' → logprob: -11.875480651855469
    10. 'from' → logprob: -12.000480651855469

Token 746: ' calc' (ID: 25691)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8811087608337402
    2. 'main' → logprob: -1.1311087608337402
    3. 'find' → logprob: -2.5061087608337402
    4. 'solve' → logprob: -3.2561087608337402
    5. 'calc' → logprob: -3.3811087608337402
    6. ' bfs' → logprob: -3.6311087608337402
    7. 'def' → logprob: -3.7561087608337402
    8. 'diam' → logprob: -4.25610876083374
    9. ' main' → logprob: -4.38110876083374
    10. 'get' → logprob: -5.13110876083374

Token 747: '_long' (ID: 42288)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -1.1582531929016113
    2. '_max' → logprob: -1.7832531929016113
    3. '_init' → logprob: -2.2832531929016113
    4. 'diam' → logprob: -2.5332531929016113
    5. '_f' → logprob: -2.7832531929016113
    6. '_long' → logprob: -2.9082531929016113
    7. '(link' → logprob: -3.7832531929016113
    8. '_distance' → logprob: -3.9082531929016113
    9. '_e' → logprob: -3.9082531929016113
    10. '_dist' → logprob: -4.033253192901611

Token 748: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.00018506382184568793
    2. 'uest' → logprob: -9.000185012817383
    3. 'def' → logprob: -10.875185012817383
    4. 'gest' → logprob: -11.875185012817383
    5. 'dist' → logprob: -12.000185012817383
    6. '_path' → logprob: -12.250185012817383
    7. 'path' → logprob: -12.375185012817383
    8. 'ist' → logprob: -12.750185012817383
    9. 'es' → logprob: -13.000185012817383
    10. 'ests' → logprob: -13.125185012817383

Token 749: '_distance' (ID: 45537)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.007180383428931236
    2. 'path' → logprob: -5.507180213928223
    3. '_distance' → logprob: -7.132180213928223
    4. '_chain' → logprob: -7.257180213928223
    5. '_link' → logprob: -7.632180213928223
    6. '_cycle' → logprob: -7.882180213928223
    7. 'def' → logprob: -8.882180213928223
    8. '()' → logprob: -9.382180213928223
    9. '_simple' → logprob: -9.507180213928223
    10. 'distance' → logprob: -9.632180213928223

Token 750: '(link' (ID: 51236)
  Prédit: '(link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(link' → logprob: -0.01509871892631054
    2. '(' → logprob: -4.265098571777344
    3. '(
' → logprob: -7.390098571777344
    4. '_link' → logprob: -9.515098571777344
    5. '(distance' → logprob: -9.515098571777344
    6. ' (' → logprob: -9.640098571777344
    7. '_(' → logprob: -10.890098571777344
    8. '(line' → logprob: -11.640098571777344
    9. '(graph' → logprob: -11.890098571777344
    10. '(
' → logprob: -11.890098571777344

Token 751: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -3.128163257315464e-07
    2. '_list' → logprob: -16.0
    3. 'ist' → logprob: -16.5
    4. 'link' → logprob: -17.375
    5. 'lists' → logprob: -17.625
    6. ' list' → logprob: -17.625
    7. 'lst' → logprob: -19.375
    8. 'li' → logprob: -19.75
    9. '```' → logprob: -20.125
    10. '   ' → logprob: -20.25

Token 752: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6352946758270264
    2. '):
' → logprob: -0.7602946758270264
    3. ',' → logprob: -6.6352949142456055
    4. '   ' → logprob: -7.5102949142456055
    5. ' ):' → logprob: -7.8852949142456055
    6. ')' → logprob: -8.510294914245605
    7. '):
' → logprob: -8.885294914245605
    8. ' ):
' → logprob: -9.635294914245605
    9. '):

' → logprob: -10.635294914245605
    10. '(link' → logprob: -12.260294914245605

Token 753: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6911378502845764
    2. 'start' → logprob: -1.5661377906799316
    3. 'list' → logprob: -2.0661377906799316
    4. ' v' → logprob: -2.9411377906799316
    5. 'next' → logprob: -3.4411377906799316
    6. ' start' → logprob: -4.066137790679932
    7. ' list' → logprob: -4.316137790679932
    8. '1' → logprob: -4.566137790679932
    9. '[start' → logprob: -4.691137790679932
    10. 'root' → logprob: -5.191137790679932

Token 754: '=' (ID: 28)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.05594301596283913
    2. '):' → logprob: -3.180943012237549
    3. '):
' → logprob: -4.805943012237549
    4. '_list' → logprob: -5.805943012237549
    5. 'ist' → logprob: -7.305943012237549
    6. ')' → logprob: -7.555943012237549
    7. ',' → logprob: -8.555943489074707
    8. 's' → logprob: -9.805943489074707
    9. '=None' → logprob: -10.430943489074707
    10. ':' → logprob: -10.555943489074707

Token 755: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2119261622428894
    2. 'None' → logprob: -1.8369262218475342
    3. ' None' → logprob: -4.086925983428955
    4. 'next' → logprob: -4.461925983428955
    5. ' ' → logprob: -6.586925983428955
    6. 'list' → logprob: -7.086925983428955
    7. ' next' → logprob: -7.211925983428955
    8. '(None' → logprob: -9.461926460266113
    9. '1' → logprob: -9.711926460266113
    10. ')' → logprob: -9.836926460266113

Token 756: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.01167166605591774
    2. '):' → logprob: -4.511671543121338
    3. ',' → logprob: -7.761671543121338
    4. '):
' → logprob: -9.136672019958496
    5. '   ' → logprob: -9.761672019958496
    6. ')' → logprob: -10.511672019958496
    7. '):

' → logprob: -13.261672019958496
    8. ' ):
' → logprob: -13.511672019958496
    9. 'def' → logprob: -14.136672019958496
    10. ')
' → logprob: -14.636672019958496

Token 757: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00025871701654978096
    2. ' distance' → logprob: -9.500258445739746
    3. 'distance' → logprob: -9.500258445739746
    4. '):
' → logprob: -9.625258445739746
    5. '(distance' → logprob: -10.875258445739746
    6. ')' → logprob: -12.250258445739746
    7. ':
' → logprob: -12.500258445739746
    8. '):' → logprob: -12.500258445739746
    9. '
' → logprob: -12.625258445739746
    10. ',' → logprob: -12.750258445739746

Token 758: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' (adapté à ' distance') → logprob: -0.003229756373912096
    2. '   ' → logprob: -6.00322961807251
    3. ' distance' → logprob: -7.37822961807251
    4. 'from' → logprob: -10.128230094909668
    5. 'return' → logprob: -10.503230094909668
    6. 'v' → logprob: -11.253230094909668
    7. 'node' → logprob: -11.378230094909668
    8. 'max' → logprob: -11.628230094909668
    9. 'import' → logprob: -11.878230094909668
    10. '
' → logprob: -12.378230094909668

Token 759: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.845798710244708e-05
    2. 'list' → logprob: -10.875038146972656
    3. ' =' → logprob: -12.000038146972656
    4. '=' → logprob: -12.375038146972656
    5. '   ' → logprob: -12.375038146972656
    6. '_' → logprob: -13.375038146972656
    7. '=[]' → logprob: -14.250038146972656
    8. '=_' → logprob: -14.375038146972656
    9. '=list' → logprob: -14.875038146972656
    10. 's' → logprob: -15.250038146972656

Token 760: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39145007729530334
    2. ' =' → logprob: -1.141450047492981
    3. '={' → logprob: -5.766449928283691
    4. ',' → logprob: -6.891449928283691
    5. '={}' → logprob: -8.516449928283691
    6. '={}
' → logprob: -9.391449928283691
    7. '={},' → logprob: -9.766449928283691
    8. '   ' → logprob: -10.016449928283691
    9. '{' → logprob: -11.141449928283691
    10. ' ={' → logprob: -12.266449928283691

Token 761: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.0019080507336184382
    2. ' distance' → logprob: -6.376907825469971
    3. '   ' → logprob: -9.376908302307129
    4. 'visited' → logprob: -9.626908302307129
    5. 'v' → logprob: -10.251908302307129
    6. 'node' → logprob: -12.126908302307129
    7. '    ' → logprob: -12.626908302307129
    8. '  ' → logprob: -12.751908302307129
    9. ' ' → logprob: -13.126908302307129
    10. 'queue' → logprob: -13.751908302307129

Token 762: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -9.674858301877975e-05
    2. 'count' → logprob: -9.250096321105957
    3. ' count' → logprob: -15.125096321105957
    4. ',' → logprob: -16.375097274780273
    5. ' =' → logprob: -16.875097274780273
    6. '=' → logprob: -17.000097274780273
    7. '	count' → logprob: -17.250097274780273
    8. '   ' → logprob: -17.625097274780273
    9. ',count' → logprob: -17.750097274780273
    10. 'Count' → logprob: -18.000097274780273

Token 763: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3935481011867523
    2. ' =' → logprob: -1.1435481309890747
    3. ',' → logprob: -5.018548011779785
    4. '   ' → logprob: -10.393548011779785
    5. '={},' → logprob: -12.143548011779785
    6. '={}' → logprob: -13.393548011779785
    7. ' ' → logprob: -13.893548011779785
    8. '=get' → logprob: -15.268548011779785
    9. '=create' → logprob: -15.268548011779785
    10. '=v' → logprob: -15.268548011779785

Token 764: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.09855012595653534
    2. ' distance' → logprob: -2.8485500812530518
    3. '0' → logprob: -4.098550319671631
    4. ' =' → logprob: -4.973550319671631
    5. 'max' → logprob: -6.098550319671631
    6. 'v' → logprob: -6.098550319671631
    7. '=' → logprob: -6.473550319671631
    8. 'node' → logprob: -6.473550319671631
    9. ' node' → logprob: -6.473550319671631
    10. ' max' → logprob: -7.348550319671631

Token 765: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10407596081495285
    2. ' =' → logprob: -2.8540759086608887
    3. '=' → logprob: -3.2290759086608887
    4. '   ' → logprob: -7.229075908660889
    5. '_count' → logprob: -7.354075908660889
    6. 'count' → logprob: -8.979076385498047
    7. ' ,' → logprob: -10.104076385498047
    8. '_,' → logprob: -10.729076385498047
    9. '_list' → logprob: -10.854076385498047
    10. ',_' → logprob: -10.854076385498047

Token 766: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00016539888747502118
    2. ' v' → logprob: -9.000164985656738
    3. '   ' → logprob: -10.250164985656738
    4. '[v' → logprob: -13.000164985656738
    5. '  ' → logprob: -13.750164985656738
    6. '	v' → logprob: -14.125164985656738
    7. '    ' → logprob: -14.375164985656738
    8. '[],' → logprob: -14.625164985656738
    9. '{' → logprob: -14.875164985656738
    10. '{},' → logprob: -15.750164985656738

Token 767: 'list' (ID: 2641)
  Prédit: '_previous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_previous' → logprob: -0.00038014890742488205
    2. 'previous' → logprob: -8.000380516052246
    3. 'list' → logprob: -10.125380516052246
    4. '_prev' → logprob: -12.875380516052246
    5. '_list' → logprob: -14.250380516052246
    6. '_' → logprob: -15.125380516052246
    7. 'Previous' → logprob: -15.375380516052246
    8. '_pre' → logprob: -15.750380516052246
    9. ' previous' → logprob: -16.12537956237793
    10. '```' → logprob: -16.25037956237793

Token 768: '_previous' (ID: 126212)
  Prédit: '_previous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_previous' → logprob: -0.0015081972815096378
    2. 'previous' → logprob: -6.5015082359313965
    3. ',' → logprob: -12.501507759094238
    4. '_prev' → logprob: -13.626507759094238
    5. 'Previous' → logprob: -15.251507759094238
    6. ' previous' → logprob: -15.876507759094238
    7. '   ' → logprob: -16.126508712768555
    8. '_,' → logprob: -16.126508712768555
    9. '[' → logprob: -16.251508712768555
    10. '_next' → logprob: -16.751508712768555

Token 769: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6009418368339539
    2. '=' → logprob: -0.8509418368339539
    3. ' =' → logprob: -3.7259418964385986
    4. ',v' → logprob: -7.6009416580200195
    5. 'v' → logprob: -10.35094165802002
    6. '=[],' → logprob: -10.60094165802002
    7. ' ,' → logprob: -11.10094165802002
    8. '=v' → logprob: -11.22594165802002
    9. '   ' → logprob: -12.47594165802002
    10. '={},' → logprob: -13.22594165802002

Token 770: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0037078000605106354
    2. ' v' → logprob: -5.6287078857421875
    3. '   ' → logprob: -9.253707885742188
    4. '    ' → logprob: -12.128707885742188
    5. '       ' → logprob: -13.378707885742188
    6. '  ' → logprob: -13.878707885742188
    7. ' ' → logprob: -14.253707885742188
    8. '	v' → logprob: -14.253707885742188
    9. '[v' → logprob: -14.503707885742188
    10. ' =' → logprob: -14.753707885742188

Token 771: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5107107162475586
    2. '=' → logprob: -1.0107107162475586
    3. ' =' → logprob: -3.5107107162475586
    4. ',' → logprob: -5.635710716247559
    5. '=[]' → logprob: -6.885710716247559
    6. '```' → logprob: -8.760710716247559
    7. '   ' → logprob: -8.885710716247559
    8. ' ' → logprob: -8.885710716247559
    9. '[' → logprob: -9.010710716247559
    10. '_list' → logprob: -9.135710716247559

Token 772: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17991313338279724
    2. ' =' → logprob: -1.8049131631851196
    3. ',' → logprob: -8.804913520812988
    4. '   ' → logprob: -11.804913520812988
    5. ' ' → logprob: -13.054913520812988
    6. '```' → logprob: -13.554913520812988
    7. '=
' → logprob: -13.804913520812988
    8. '=[' → logprob: -14.179913520812988
    9. '=get' → logprob: -14.304913520812988
    10. '=find' → logprob: -14.804913520812988

Token 773: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.011271810159087181
    2. ' calc' → logprob: -4.636271953582764
    3. '   ' → logprob: -6.761271953582764
    4. '(calc' → logprob: -9.136271476745605
    5. '({},' → logprob: -9.386271476745605
    6. '{},' → logprob: -9.636271476745605
    7. '({' → logprob: -10.386271476745605
    8. '{' → logprob: -10.511271476745605
    9. ' {},' → logprob: -11.011271476745605
    10. ' ' → logprob: -11.386271476745605

Token 774: '_init' (ID: 13909)
  Prédit: '_init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_init' → logprob: 0.0
    2. '_loop' → logprob: -18.5
    3. 'init' → logprob: -18.5
    4. '_calc' → logprob: -19.75
    5. '```' → logprob: -20.25
    6. '\' → logprob: -22.125
    7. '__' → logprob: -22.375
    8. '_' → logprob: -22.625
    9. '_start' → logprob: -22.75
    10. '   ' → logprob: -22.75

Token 775: '_link' (ID: 16227)
  Prédit: '_link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_link' → logprob: -0.00036418659146875143
    2. 'link' → logprob: -8.000364303588867
    3. '(link' → logprob: -10.500364303588867
    4. '```' → logprob: -14.750364303588867
    5. ' link' → logprob: -16.125364303588867
    6. 'v' → logprob: -16.250364303588867
    7. 'def' → logprob: -16.375364303588867
    8. '
' → logprob: -16.375364303588867
    9. '(_' → logprob: -16.625364303588867
    10. '_links' → logprob: -16.750364303588867

Token 776: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -2.165027217415627e-05
    2. 'ist' → logprob: -11.000021934509277
    3. 'link' → logprob: -12.375021934509277
    4. '_list' → logprob: -14.875021934509277
    5. '(' → logprob: -17.25002098083496
    6. '(list' → logprob: -17.50002098083496
    7. '
' → logprob: -17.75002098083496
    8. 'lists' → logprob: -17.75002098083496
    9. 'set' → logprob: -18.00002098083496
    10. '   ' → logprob: -18.25002098083496

Token 777: '_vars' (ID: 25901)
  Prédit: '_vars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vars' → logprob: -0.00014454191841650754
    2. 'vars' → logprob: -8.875144958496094
    3. 'v' → logprob: -13.125144958496094
    4. '(vars' → logprob: -14.500144958496094
    5. '```' → logprob: -14.750144958496094
    6. '   ' → logprob: -14.875144958496094
    7. '
' → logprob: -15.000144958496094
    8. 'def' → logprob: -16.125144958496094
    9. 'var' → logprob: -16.250144958496094
    10. '_vals' → logprob: -16.250144958496094

Token 778: '()
' (ID: 1234)
  Prédit: '(link'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(link' → logprob: -0.38070133328437805
    2. '()
' → logprob: -1.5057013034820557
    3. '()' → logprob: -2.3807013034820557
    4. '   ' → logprob: -6.630701541900635
    5. 'link' → logprob: -7.255701541900635
    6. '()

' → logprob: -9.755701065063477
    7. '```' → logprob: -10.255701065063477
    8. '(
' → logprob: -10.380701065063477
    9. '()
' → logprob: -10.505701065063477
    10. '(),' → logprob: -10.755701065063477

Token 779: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07923631370067596
    2. 'v' → logprob: -2.5792362689971924
    3. 'distance' → logprob: -8.454236030578613
    4. ' v' → logprob: -9.204236030578613
    5. '
' → logprob: -11.079236030578613
    6. '[v' → logprob: -12.704236030578613
    7. '	v' → logprob: -12.954236030578613
    8. '  ' → logprob: -12.954236030578613
    9. ' ' → logprob: -13.204236030578613
    10. '    
' → logprob: -13.329236030578613

Token 780: ' v' (ID: 323)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.08658149838447571
    2. 'v' (adapté à ' v') → logprob: -2.7115814685821533
    3. 'set' → logprob: -4.336581707000732
    4. 'link' → logprob: -6.211581707000732
    5. 'if' → logprob: -6.961581707000732
    6. '   ' → logprob: -8.211581230163574
    7. 'return' → logprob: -9.336581230163574
    8. ' distance' → logprob: -9.836581230163574
    9. ' v' → logprob: -10.961581230163574
    10. 'length' → logprob: -11.711581230163574

Token 781: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.002083762548863888
    2. ',' → logprob: -7.002083778381348
    3. ' =' → logprob: -7.127083778381348
    4. 'ist' → logprob: -8.502083778381348
    5. '_list' → logprob: -9.627083778381348
    6. '=' → logprob: -9.752083778381348
    7. '=list' → logprob: -11.002083778381348
    8. '   ' → logprob: -11.877083778381348
    9. '.append' → logprob: -12.252083778381348
    10. '[' → logprob: -12.752083778381348

Token 782: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.02152218483388424
    2. '=' → logprob: -4.771522045135498
    3. ',' → logprob: -5.271522045135498
    4. ' =' → logprob: -5.646522045135498
    5. '_previous' → logprob: -6.271522045135498
    6. '=[' → logprob: -6.896522045135498
    7. 'append' → logprob: -7.646522045135498
    8. '_next' → logprob: -8.021522521972656
    9. '_append' → logprob: -8.146522521972656
    10. '.extend' → logprob: -10.146522521972656

Token 783: ' [' (ID: 723)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.081584716506768e-05
    2. '[' → logprob: -10.875020980834961
    3. '[val' → logprob: -15.000020980834961
    4. '[l' → logprob: -15.375020980834961
    5. '[list' → logprob: -15.375020980834961
    6. '[next' → logprob: -15.375020980834961
    7. '[u' → logprob: -15.750020980834961
    8. '[node' → logprob: -15.875020980834961
    9. ' [' → logprob: -16.00002098083496
    10. '[get' → logprob: -16.75002098083496

Token 784: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.1472419600977446e-06
    2. '1' → logprob: -14.000000953674316
    3. ' v' → logprob: -15.750000953674316
    4. '	v' → logprob: -17.875001907348633
    5. '$v' → logprob: -18.250001907348633
    6. '(v' → logprob: -18.500001907348633
    7. '[v' → logprob: -18.750001907348633
    8. '_v' → logprob: -18.750001907348633
    9. '{' → logprob: -18.875001907348633
    10. '   ' → logprob: -19.750001907348633

Token 785: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6931790709495544
    2. ']
' → logprob: -0.6931790709495544
    3. ']
' → logprob: -10.9431791305542
    4. ']

' → logprob: -12.3181791305542
    5. ' ]
' → logprob: -12.6931791305542
    6. ' ]' → logprob: -12.6931791305542
    7. '   ' → logprob: -13.1931791305542
    8. 'def' → logprob: -14.9431791305542
    9. '()]
' → logprob: -15.0681791305542
    10. '];' → logprob: -15.1931791305542

Token 786: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.221884101862088e-05
    2. 'return' → logprob: -9.375092506408691
    3. 'distance' → logprob: -12.125092506408691
    4. 'result' → logprob: -14.750092506408691
    5. ' return' → logprob: -14.875092506408691
    6. '
' → logprob: -14.875092506408691
    7. '```' → logprob: -15.250092506408691
    8. 'd' → logprob: -15.500092506408691
    9. '       ' → logprob: -16.750091552734375
    10. 'dist' → logprob: -16.750091552734375

Token 787: ' node' (ID: 4596)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20869414508342743
    2. 'distance' → logprob: -1.7086941003799438
    3. '   ' → logprob: -5.083693981170654
    4. ' return' → logprob: -7.833693981170654
    5. 'calc' → logprob: -7.958693981170654
    6. 'result' → logprob: -8.958694458007812
    7. 'while' → logprob: -9.083694458007812
    8. ' distance' → logprob: -10.333694458007812
    9. 'v' → logprob: -11.708694458007812
    10. 'max' → logprob: -12.583694458007812

Token 788: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0040818434208631516
    2. 'list' → logprob: -5.629081726074219
    3. '_count' → logprob: -7.754081726074219
    4. 's' → logprob: -10.754081726074219
    5. '   ' → logprob: -11.129081726074219
    6. '_list' → logprob: -12.504081726074219
    7. ')' → logprob: -12.504081726074219
    8. ' count' → logprob: -12.629081726074219
    9. '	count' → logprob: -14.254081726074219
    10. '
' → logprob: -14.629081726074219

Token 789: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07890477031469345
    2. '=' → logprob: -2.578904867172241
    3. '=get' → logprob: -11.20390510559082
    4. '   ' → logprob: -14.82890510559082
    5. 'get' → logprob: -14.95390510559082
    6. '(get' → logprob: -15.20390510559082
    7. '=len' → logprob: -15.57890510559082
    8. ')' → logprob: -16.57890510559082
    9. ' ' → logprob: -16.70390510559082
    10. '  ' → logprob: -17.07890510559082

Token 790: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.03882132098078728
    2. ' get' → logprob: -3.288821220397949
    3. 'len' → logprob: -7.288821220397949
    4. '   ' → logprob: -9.66382122039795
    5. ' len' → logprob: -10.41382122039795
    6. '(get' → logprob: -13.41382122039795
    7. '	get' → logprob: -14.78882122039795
    8. '  ' → logprob: -14.91382122039795
    9. '    ' → logprob: -15.28882122039795
    10. ' ' → logprob: -15.53882122039795

Token 791: '_link' (ID: 16227)
  Prédit: '_link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_link' → logprob: -0.10657069087028503
    2. 'link' → logprob: -2.6065707206726074
    3. '(link' → logprob: -3.6065707206726074
    4. 'get' → logprob: -8.85657024383545
    5. '(get' → logprob: -12.85657024383545
    6. 'len' → logprob: -12.85657024383545
    7. ' link' → logprob: -12.85657024383545
    8. '$link' → logprob: -13.35657024383545
    9. '```' → logprob: -14.35657024383545
    10. 's' → logprob: -14.60657024383545

Token 792: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -9.627176768844947e-05
    2. 'count' → logprob: -9.250096321105957
    3. 'ist' → logprob: -16.00009536743164
    4. 'link' → logprob: -20.00009536743164
    5. '_count' → logprob: -20.00009536743164
    6. '_list' → logprob: -20.75009536743164
    7. 'lists' → logprob: -21.37509536743164
    8. 'set' → logprob: -21.50009536743164
    9. ' list' → logprob: -21.87509536743164
    10. 'size' → logprob: -22.00009536743164

Token 793: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0006502442411147058
    2. 'node' → logprob: -7.375650405883789
    3. 'count' → logprob: -10.750650405883789
    4. '_count' → logprob: -13.125650405883789
    5. '```' → logprob: -16.75065040588379
    6. '(node' → logprob: -17.50065040588379
    7. 'Node' → logprob: -17.62565040588379
    8. 'length' → logprob: -17.75065040588379
    9. 'n' → logprob: -17.75065040588379
    10. 'list' → logprob: -18.37565040588379

Token 794: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -5.5577775128767826e-06
    2. 'ount' → logprob: -12.125005722045898
    3. '_count' → logprob: -16.8750057220459
    4. 'list' → logprob: -17.5000057220459
    5. '(count' → logprob: -17.5000057220459
    6. ' count' → logprob: -18.3750057220459
    7. '   ' → logprob: -18.7500057220459
    8. 'COUNT' → logprob: -20.3750057220459
    9. '	count' → logprob: -20.6250057220459
    10. ' ' → logprob: -20.7500057220459

Token 795: '(link' (ID: 51236)
  Prédit: '(link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(link' → logprob: 0.0
    2. '(' → logprob: -21.0
    3. 'link' → logprob: -21.125
    4. '(Link' → logprob: -22.125
    5. '$link' → logprob: -22.375
    6. '_link' → logprob: -23.125
    7. '	link' → logprob: -23.5
    8. ' link' → logprob: -23.5
    9. '<link' → logprob: -23.625
    10. '(
' → logprob: -23.875

Token 796: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.1472419600977446e-06
    2. 'ist' → logprob: -14.000000953674316
    3. 'link' → logprob: -15.125000953674316
    4. ' list' → logprob: -21.125001907348633
    5. 'List' → logprob: -21.250001907348633
    6. 'lists' → logprob: -22.000001907348633
    7. '_list' → logprob: -22.125001907348633
    8. ')' → logprob: -22.375001907348633
    9. '(list' → logprob: -22.875001907348633
    10. 'll' → logprob: -23.125001907348633

Token 797: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1273362636566162
    2. ')
' → logprob: -2.127336263656616
    3. '   ' → logprob: -7.877336502075195
    4. '()' → logprob: -11.127336502075195
    5. '())' → logprob: -12.252336502075195
    6. '())
' → logprob: -12.627336502075195
    7. ')

' → logprob: -12.752336502075195
    8. ')
' → logprob: -14.127336502075195
    9. ' )' → logprob: -14.252336502075195
    10. '()
' → logprob: -14.502336502075195

Token 798: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021455008536577225
    2. 'return' → logprob: -6.377145290374756
    3. ' return' → logprob: -7.877145290374756
    4. 'distance' → logprob: -10.002145767211914
    5. '```' → logprob: -11.502145767211914
    6. 'while' → logprob: -13.127145767211914
    7. 'result' → logprob: -13.127145767211914
    8. '
' → logprob: -13.252145767211914
    9. ' distance' → logprob: -13.502145767211914
    10. ' while' → logprob: -14.377145767211914

Token 799: ' while' (ID: 2049)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03215504065155983
    2. 'distance' → logprob: -3.9071550369262695
    3. '   ' → logprob: -4.9071550369262695
    4. ' return' → logprob: -5.7821550369262695
    5. 'result' → logprob: -7.2821550369262695
    6. 'while' (adapté à ' while') → logprob: -8.03215503692627
    7. ' distance' → logprob: -10.65715503692627
    8. 'res' → logprob: -11.15715503692627
    9. '```' → logprob: -12.03215503692627
    10. ' while' → logprob: -12.78215503692627

Token 800: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.03964570164680481
    2. ' distance' → logprob: -3.2896456718444824
    3. 'v' → logprob: -7.664645671844482
    4. 'len' → logprob: -7.664645671844482
    5. 'True' → logprob: -8.41464614868164
    6. ' v' → logprob: -8.91464614868164
    7. ' len' → logprob: -9.16464614868164
    8. ' True' → logprob: -9.53964614868164
    9. '   ' → logprob: -10.03964614868164
    10. '(distance' → logprob: -10.16464614868164

Token 801: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -5.44312788406387e-05
    2. 'count' → logprob: -9.875054359436035
    3. '<count' → logprob: -13.750054359436035
    4. '>' → logprob: -14.500054359436035
    5. ' <' → logprob: -14.750054359436035
    6. '   ' → logprob: -15.250054359436035
    7. ' count' → logprob: -15.375054359436035
    8. '<' → logprob: -15.625054359436035
    9. '_list' → logprob: -16.00005531311035
    10. '	count' → logprob: -16.00005531311035

Token 802: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.04303378611803055
    2. '<' → logprob: -3.1680338382720947
    3. '<v' → logprob: -11.168033599853516
    4. '<len' → logprob: -11.793033599853516
    5. '<n' → logprob: -12.043033599853516
    6. '<size' → logprob: -13.793033599853516
    7. '<num' → logprob: -14.043033599853516
    8. ' ' → logprob: -14.168033599853516
    9. '<int' → logprob: -14.168033599853516
    10. '   ' → logprob: -14.293033599853516

Token 803: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0067156096920371056
    2. ' node' → logprob: -5.006715774536133
    3. '	node' → logprob: -16.381715774536133
    4. '   ' → logprob: -16.506715774536133
    5. '(node' → logprob: -17.381715774536133
    6. '=node' → logprob: -17.881715774536133
    7. ' ' → logprob: -18.756715774536133
    8. '[node' → logprob: -19.006715774536133
    9. 'len' → logprob: -19.381715774536133
    10. '  ' → logprob: -19.881715774536133

Token 804: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.0564331205387134e-05
    2. 'list' → logprob: -11.75001049041748
    3. '_count' → logprob: -14.00001049041748
    4. 'ount' → logprob: -14.37501049041748
    5. '```' → logprob: -15.25001049041748
    6. '   ' → logprob: -15.37501049041748
    7. 'node' → logprob: -15.50001049041748
    8. ' count' → logprob: -16.000011444091797
    9. 'cout' → logprob: -16.625011444091797
    10. '(count' → logprob: -17.125011444091797

Token 805: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07934169471263885
    2. ':
' → logprob: -2.5793416500091553
    3. ' and' → logprob: -8.579341888427734
    4. '       ' → logprob: -8.954341888427734
    5. '   ' → logprob: -9.579341888427734
    6. ',' → logprob: -11.204341888427734
    7. ' :' → logprob: -11.454341888427734
    8. '):
' → logprob: -11.829341888427734
    9. 'and' → logprob: -11.954341888427734
    10. '):' → logprob: -12.204341888427734

Token 806: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01576416753232479
    2. 'distance' → logprob: -4.640764236450195
    3. '   ' → logprob: -6.140764236450195
    4. 'v' → logprob: -6.515764236450195
    5. ':
' → logprob: -7.140764236450195
    6. ' distance' → logprob: -7.390764236450195
    7. ':' → logprob: -7.890764236450195
    8. ' v' → logprob: -8.765764236450195
    9. '```' → logprob: -8.765764236450195
    10. '):
' → logprob: -9.390764236450195

Token 807: ' v' (ID: 323)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3354763388633728
    2. 'distance' → logprob: -1.9604763984680176
    3. 'v' (adapté à ' v') → logprob: -2.0854763984680176
    4. ' v' → logprob: -4.460476398468018
    5. ' distance' → logprob: -4.960476398468018
    6. '   ' → logprob: -7.835476398468018
    7. '```' → logprob: -8.08547592163086
    8. '           ' → logprob: -8.21047592163086
    9. 'calc' → logprob: -9.46047592163086
    10. 'd' → logprob: -9.71047592163086

Token 808: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0003091254911851138
    2. ',' → logprob: -8.125308990478516
    3. 'ist' → logprob: -12.125308990478516
    4. '_list' → logprob: -12.875308990478516
    5. '=' → logprob: -13.625308990478516
    6. ' =' → logprob: -13.750308990478516
    7. 'next' → logprob: -14.250308990478516
    8. 'l' → logprob: -14.375308990478516
    9. ' list' → logprob: -15.125308990478516
    10. ',list' → logprob: -15.125308990478516

Token 809: '_next' (ID: 25436)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3183085024356842
    2. '=' → logprob: -1.3183084726333618
    3. '_next' → logprob: -5.943308353424072
    4. ',' → logprob: -6.068308353424072
    5. 'next' → logprob: -9.56830883026123
    6. ' ' → logprob: -12.19330883026123
    7. '_new' → logprob: -12.69330883026123
    8. 'Next' → logprob: -12.94330883026123
    9. '_' → logprob: -13.56830883026123
    10. '   ' → logprob: -13.69330883026123

Token 810: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04884226247668266
    2. ' =' → logprob: -3.048842191696167
    3. '=[]' → logprob: -8.298842430114746
    4. '=[]
' → logprob: -13.173842430114746
    5. '[]' → logprob: -13.423842430114746
    6. '=[' → logprob: -14.673842430114746
    7. '   ' → logprob: -14.798842430114746
    8. ',' → logprob: -14.798842430114746
    9. ' ' → logprob: -15.173842430114746
    10. '       ' → logprob: -15.548842430114746

Token 811: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.011051944456994534
    2. '[]
' → logprob: -4.511052131652832
    3. '[' → logprob: -13.011052131652832
    4. ' []' → logprob: -14.136052131652832
    5. 'set' → logprob: -14.511052131652832
    6. '[]

' → logprob: -15.011052131652832
    7. '[]>' → logprob: -16.261051177978516
    8. '[]}' → logprob: -16.761051177978516
    9. ' []
' → logprob: -17.011051177978516
    10. 'v' → logprob: -17.011051177978516

Token 812: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01426646113395691
    2. 'for' → logprob: -4.514266490936279
    3. ' for' → logprob: -5.889266490936279
    4. 'v' → logprob: -8.139266014099121
    5. '
' → logprob: -10.264266014099121
    6. '   ' → logprob: -10.389266014099121
    7. ',' → logprob: -10.639266014099121
    8. '```' → logprob: -10.639266014099121
    9. '<|end|>' → logprob: -11.639266014099121
    10. '	for' → logprob: -11.889266014099121

Token 813: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.11704296618700027
    2. '       ' → logprob: -2.2420430183410645
    3. ' for' → logprob: -5.8670430183410645
    4. 'v' → logprob: -6.7420430183410645
    5. 'distance' → logprob: -8.992042541503906
    6. '   ' → logprob: -10.117042541503906
    7. '	for' → logprob: -11.867042541503906
    8. '```' → logprob: -12.617042541503906
    9. 'calc' → logprob: -12.617042541503906
    10. 'max' → logprob: -12.867042541503906

Token 814: ' p' (ID: 275)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.02940884791314602
    2. ' v' → logprob: -4.029408931732178
    3. 'vertex' → logprob: -5.654408931732178
    4. 'u' → logprob: -6.029408931732178
    5. 'node' → logprob: -6.154408931732178
    6. 'vv' → logprob: -6.904408931732178
    7. 'current' → logprob: -7.404408931732178
    8. 'cur' → logprob: -7.779408931732178
    9. '_v' → logprob: -8.40440845489502
    10. 'curr' → logprob: -8.65440845489502

Token 815: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6428022384643555
    2. ' in' → logprob: -0.7678022384643555
    3. 'v' → logprob: -4.6428022384643555
    4. ' v' → logprob: -8.017802238464355
    5. 'n' → logprob: -9.392802238464355
    6. 'p' → logprob: -10.392802238464355
    7. ' p' → logprob: -11.642802238464355
    8. ' ' → logprob: -11.767802238464355
    9. '```' → logprob: -11.767802238464355
    10. ',' → logprob: -11.892802238464355

Token 816: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.2617008400848135e-05
    2. 'set' → logprob: -11.250032424926758
    3. ' v' → logprob: -11.500032424926758
    4. '   ' → logprob: -12.750032424926758
    5. 'update' → logprob: -13.250032424926758
    6. 'link' → logprob: -13.500032424926758
    7. 'range' → logprob: -14.125032424926758
    8. ' ' → logprob: -14.250032424926758
    9. '[v' → logprob: -14.750032424926758
    10. '  ' → logprob: -15.125032424926758

Token 817: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00031520487391389906
    2. ':' → logprob: -8.12531566619873
    3. ':
' → logprob: -11.37531566619873
    4. 'v' → logprob: -12.75031566619873
    5. '   ' → logprob: -13.62531566619873
    6. '<|end|>' → logprob: -13.62531566619873
    7. '```' → logprob: -14.62531566619873
    8. '       ' → logprob: -15.00031566619873
    9. '):' → logprob: -15.50031566619873
    10. 'l' → logprob: -15.75031566619873

Token 818: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2284516841173172
    2. ':' → logprob: -1.6034517288208008
    3. '           ' → logprob: -5.853451728820801
    4. '       ' → logprob: -10.1034517288208
    5. '   ' → logprob: -10.6034517288208
    6. ':
' → logprob: -11.2284517288208
    7. '):
' → logprob: -11.3534517288208
    8. 'p' → logprob: -11.6034517288208
    9. ',' → logprob: -11.9784517288208
    10. '[' → logprob: -12.3534517288208

Token 819: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0890841856598854
    2. 'set' → logprob: -2.4640841484069824
    3. ' set' → logprob: -9.33908462524414
    4. '       ' → logprob: -11.21408462524414
    5. 'v' → logprob: -11.46408462524414
    6. '               ' → logprob: -11.83908462524414
    7. '
' → logprob: -12.33908462524414
    8. '   ' → logprob: -12.83908462524414
    9. '          ' → logprob: -13.21408462524414
    10. '		' → logprob: -13.33908462524414

Token 820: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' (adapté à ' set') → logprob: -0.007046640384942293
    2. '           ' → logprob: -5.257046699523926
    3. 'update' → logprob: -6.757046699523926
    4. 'for' → logprob: -7.882046699523926
    5. 'distance' → logprob: -9.132046699523926
    6. '       ' → logprob: -9.882046699523926
    7. '   ' → logprob: -10.382046699523926
    8. 'v' → logprob: -10.757046699523926
    9. ' set' → logprob: -11.007046699523926
    10. 'link' → logprob: -11.257046699523926

Token 821: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.023248855024576187
    2. 'distance' → logprob: -3.7732489109039307
    3. '(distance' → logprob: -13.023248672485352
    4. ' distance' → logprob: -14.773248672485352
    5. 'Distance' → logprob: -15.148248672485352
    6. 'def' → logprob: -16.02324867248535
    7. 'dist' → logprob: -16.27324867248535
    8. 'set' → logprob: -16.39824867248535
    9. '_DISTANCE' → logprob: -16.39824867248535
    10. 'v' → logprob: -16.77324867248535

Token 822: '(distance' (ID: 105203)
  Prédit: '(distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(distance' → logprob: -1.9361264946837764e-07
    2. 'distance' → logprob: -16.0
    3. '(' → logprob: -19.0
    4. '(
' → logprob: -20.0
    5. '(dist' → logprob: -20.625
    6. ' (' → logprob: -20.75
    7. '   ' → logprob: -20.875
    8. '(duration' → logprob: -20.875
    9. ' distance' → logprob: -21.375
    10. '(destination' → logprob: -21.875

Token 823: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0002378673671046272
    2. 'distance' → logprob: -9.250237464904785
    3. '(distance' → logprob: -9.750237464904785
    4. 'list' → logprob: -10.000237464904785
    5. 'List' → logprob: -10.500237464904785
    6. '_count' → logprob: -12.875237464904785
    7. '```' → logprob: -13.125237464904785
    8. ',' → logprob: -13.750237464904785
    9. '[' → logprob: -13.750237464904785
    10. '_distance' → logprob: -14.000237464904785

Token 824: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00041279601282440126
    2. ',p' → logprob: -7.875412940979004
    3. '           ' → logprob: -10.875412940979004
    4. ' ,' → logprob: -11.875412940979004
    5. 'p' → logprob: -13.000412940979004
    6. '(p' → logprob: -13.125412940979004
    7. ',
' → logprob: -14.125412940979004
    8. '[p' → logprob: -14.375412940979004
    9. '```' → logprob: -14.625412940979004
    10. '   ' → logprob: -15.750412940979004

Token 825: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0007105246186256409
    2. ' p' → logprob: -7.250710487365723
    3. ',' → logprob: -15.125710487365723
    4. '   ' → logprob: -16.25071144104004
    5. '           ' → logprob: -16.62571144104004
    6. '
' → logprob: -17.50071144104004
    7. '  ' → logprob: -17.75071144104004
    8. '<p' → logprob: -18.00071144104004
    9. 'v' → logprob: -18.12571144104004
    10. ' ' → logprob: -18.12571144104004

Token 826: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003346314188092947
    2. ',p' → logprob: -8.875334739685059
    3. 'p' → logprob: -9.000334739685059
    4. ' ,' → logprob: -9.875334739685059
    5. ',
' → logprob: -12.000334739685059
    6. ')' → logprob: -12.750334739685059
    7. ' p' → logprob: -13.250334739685059
    8. '           ' → logprob: -13.250334739685059
    9. '(p' → logprob: -13.500334739685059
    10. '```' → logprob: -13.500334739685059

Token 827: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.021196510642766953
    2. ' distance' → logprob: -4.271196365356445
    3. '0' → logprob: -5.896196365356445
    4. 'v' → logprob: -6.646196365356445
    5. '           ' → logprob: -7.146196365356445
    6. 'p' → logprob: -7.771196365356445
    7. '1' → logprob: -8.583696365356445
    8. ')' → logprob: -8.646196365356445
    9. '       ' → logprob: -8.708696365356445
    10. 'dist' → logprob: -8.833696365356445

Token 828: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3067542612552643
    2. ')' → logprob: -1.556754231452942
    3. '           ' → logprob: -2.9317543506622314
    4. ')
' → logprob: -11.556754112243652
    5. ')

' → logprob: -11.931754112243652
    6. '       ' → logprob: -12.056754112243652
    7. ' )
' → logprob: -12.306754112243652
    8. '          ' → logprob: -12.806754112243652
    9. '               ' → logprob: -13.181754112243652
    10. '		' → logprob: -13.431754112243652

Token 829: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.2127087504486553e-05
    2. 'update' → logprob: -10.875021934509277
    3. 'increase' → logprob: -13.375021934509277
    4. '       ' → logprob: -14.250021934509277
    5. '```' → logprob: -15.250021934509277
    6. '          ' → logprob: -15.375021934509277
    7. '               ' → logprob: -15.500021934509277
    8. '
' → logprob: -16.125022888183594
    9. '   ' → logprob: -16.125022888183594
    10. '<|end|>' → logprob: -17.000022888183594

Token 830: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' (adapté à ' distance') → logprob: -0.004799988120794296
    2. '           ' → logprob: -5.379799842834473
    3. 'update' → logprob: -9.754799842834473
    4. 'increase' → logprob: -9.879799842834473
    5. '       ' → logprob: -10.254799842834473
    6. ' distance' → logprob: -10.879799842834473
    7. '               ' → logprob: -12.004799842834473
    8. '   ' → logprob: -12.129799842834473
    9. 'for' → logprob: -12.629799842834473
    10. '(distance' → logprob: -15.379799842834473

Token 831: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -8.895480277715251e-06
    2. '+=' → logprob: -12.125008583068848
    3. ' +=' → logprob: -13.000008583068848
    4. 'count' → logprob: -14.250008583068848
    5. '   ' → logprob: -15.250008583068848
    6. '=' → logprob: -16.875009536743164
    7. '+' → logprob: -17.125009536743164
    8. ' =' → logprob: -17.250009536743164
    9. '_COUNT' → logprob: -17.250009536743164
    10. '	count' → logprob: -17.500009536743164

Token 832: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5762081146240234
    2. '+=' → logprob: -0.8262081146240234
    3. '=' → logprob: -8.326208114624023
    4. ' =' → logprob: -11.326208114624023
    5. '            ' → logprob: -12.201208114624023
    6. '           ' → logprob: -12.451208114624023
    7. '+' → logprob: -12.451208114624023
    8. ' +' → logprob: -14.451208114624023
    9. '    ' → logprob: -15.326208114624023
    10. '        ' → logprob: -15.701208114624023

Token 833: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011705794604495168
    2. ' ' → logprob: -6.751170635223389
    3. '   ' → logprob: -15.62617015838623
    4. '           ' → logprob: -16.126171112060547
    5. '       ' → logprob: -17.251171112060547
    6. '               ' → logprob: -18.001171112060547
    7. ' ' → logprob: -18.626171112060547
    8. 'p' → logprob: -19.001171112060547
    9. '```' → logprob: -19.001171112060547
    10. 'len' → logprob: -19.188671112060547

Token 834: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0564331205387134e-05
    2. ' ' → logprob: -11.62501049041748
    3. 'len' → logprob: -13.37501049041748
    4. 'mod' → logprob: -17.250011444091797
    5. ' len' → logprob: -18.750011444091797
    6. '```' → logprob: -19.000011444091797
    7. '
' → logprob: -19.250011444091797
    8. '   ' → logprob: -19.250011444091797
    9. 'set' → logprob: -20.125011444091797
    10. 'link' → logprob: -20.250011444091797

Token 835: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.162282367469743e-05
    2. 'update' → logprob: -9.375091552734375
    3. '
' → logprob: -13.500091552734375
    4. '       ' → logprob: -14.000091552734375
    5. '               ' → logprob: -14.125091552734375
    6. '   ' → logprob: -14.125091552734375
    7. '          ' → logprob: -14.375091552734375
    8. '<|end|>' → logprob: -14.375091552734375
    9. '		' → logprob: -15.125091552734375
    10. ' update' → logprob: -15.250091552734375

Token 836: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014225799590349197
    2. 'update' → logprob: -4.264225959777832
    3. '       ' → logprob: -10.264225959777832
    4. '   ' → logprob: -11.014225959777832
    5. ' update' → logprob: -12.764225959777832
    6. '```' → logprob: -12.764225959777832
    7. 'for' → logprob: -13.514225959777832
    8. '               ' → logprob: -13.639225959777832
    9. '          ' → logprob: -15.014225959777832
    10. '.update' → logprob: -15.264225959777832

Token 837: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' (adapté à ' update') → logprob: -0.0005271765403449535
    2. '           ' → logprob: -8.125527381896973
    3. '       ' → logprob: -9.000527381896973
    4. '   ' → logprob: -9.750527381896973
    5. 'for' → logprob: -10.250527381896973
    6. ' update' → logprob: -11.250527381896973
    7. '  ' → logprob: -14.750527381896973
    8. '	update' → logprob: -14.750527381896973
    9. ' ' → logprob: -16.250526428222656
    10. '.update' → logprob: -16.625526428222656

Token 838: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.0001234428636962548
    2. 'v' → logprob: -9.000123023986816
    3. '	v' → logprob: -18.625123977661133
    4. 'a' → logprob: -18.875123977661133
    5. '```' → logprob: -19.000123977661133
    6. 's' → logprob: -19.500123977661133
    7. 'def' → logprob: -20.125123977661133
    8. '
' → logprob: -20.250123977661133
    9. '(v' → logprob: -20.250123977661133
    10. '   ' → logprob: -20.250123977661133

Token 839: 'list' (ID: 2641)
  Prédit: '_v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.503624677658081
    2. 'v' → logprob: -1.503624677658081
    3. 'list' → logprob: -1.753624677658081
    4. 'link' → logprob: -8.62862491607666
    5. '_list' → logprob: -11.87862491607666
    6. 'l' → logprob: -13.00362491607666
    7. '```' → logprob: -13.12862491607666
    8. ' v' → logprob: -13.75362491607666
    9. 'ist' → logprob: -14.50362491607666
    10. '_link' → logprob: -14.62862491607666

Token 840: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.029809731990098953
    2. 'next' → logprob: -3.5298097133636475
    3. '(link' → logprob: -10.154809951782227
    4. 'Next' → logprob: -11.529809951782227
    5. '(next' → logprob: -12.279809951782227
    6. ' next' → logprob: -12.529809951782227
    7. 'link' → logprob: -14.154809951782227
    8. '```' → logprob: -14.404809951782227
    9. '   ' → logprob: -14.654809951782227
    10. '	next' → logprob: -15.529809951782227

Token 841: '(link' (ID: 51236)
  Prédit: '(link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(link' → logprob: -3.128163257315464e-07
    2. 'link' → logprob: -16.0
    3. '(' → logprob: -16.5
    4. '(
' → logprob: -16.875
    5. '<link' → logprob: -18.25
    6. '$link' → logprob: -18.625
    7. '```' → logprob: -18.875
    8. '	link' → logprob: -19.375
    9. ' link' → logprob: -20.125
    10. '(lock' → logprob: -20.75

Token 842: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0001387009397149086
    2. 'link' → logprob: -9.000138282775879
    3. '(link' → logprob: -11.500138282775879
    4. 'ist' → logprob: -12.875138282775879
    5. 'lists' → logprob: -14.125138282775879
    6. '(p' → logprob: -14.375138282775879
    7. '(list' → logprob: -14.750138282775879
    8. '```' → logprob: -15.375138282775879
    9. '(' → logprob: -15.875138282775879
    10. ' list' → logprob: -16.375139236450195

Token 843: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012305884156376123
    2. '(p' → logprob: -6.751230716705322
    3. ',p' → logprob: -10.126230239868164
    4. '           ' → logprob: -11.376230239868164
    5. ' ,' → logprob: -12.001230239868164
    6. '(' → logprob: -13.751230239868164
    7. ')' → logprob: -14.251230239868164
    8. ',
' → logprob: -15.251230239868164
    9. '```' → logprob: -15.251230239868164
    10. 'p' → logprob: -16.001230239868164

Token 844: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.004078639671206474
    2. ' p' → logprob: -5.5040788650512695
    3. '   ' → logprob: -16.129077911376953
    4. '           ' → logprob: -17.129077911376953
    5. '	p' → logprob: -17.754077911376953
    6. ' ' → logprob: -17.754077911376953
    7. '<p' → logprob: -18.504077911376953
    8. '    ' → logprob: -18.629077911376953
    9. '       ' → logprob: -18.754077911376953
    10. '  ' → logprob: -19.004077911376953

Token 845: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.995397365652025e-05
    2. ',v' → logprob: -9.375089645385742
    3. ' ,' → logprob: -12.375089645385742
    4. ',p' → logprob: -14.250089645385742
    5. '           ' → logprob: -16.250089645385742
    6. 'v' → logprob: -16.750089645385742
    7. ',
' → logprob: -17.500089645385742
    8. '‌,' → logprob: -17.875089645385742
    9. '_,' → logprob: -18.500089645385742
    10. '   ' → logprob: -18.750089645385742

Token 846: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0015023599844425917
    2. ' v' → logprob: -6.501502513885498
    3. '           ' → logprob: -17.251502990722656
    4. '	v' → logprob: -18.751502990722656
    5. '   ' → logprob: -19.001502990722656
    6. '       ' → logprob: -19.001502990722656
    7. ')v' → logprob: -19.126502990722656
    8. '[v' → logprob: -20.751502990722656
    9. '(v' → logprob: -21.001502990722656
    10. ' ' → logprob: -21.001502990722656

Token 847: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.9361264946837764e-07
    2. 'ist' → logprob: -16.375
    3. '_list' → logprob: -17.375
    4. ' list' → logprob: -17.625
    5. 'v' → logprob: -18.0
    6. 'next' → logprob: -19.125
    7. 'l' → logprob: -20.125
    8. '```' → logprob: -20.25
    9. '_next' → logprob: -21.125
    10. '[' → logprob: -21.125

Token 848: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.005234832875430584
    2. 'next' → logprob: -5.255234718322754
    3. ' next' → logprob: -14.005234718322754
    4. 'Next' → logprob: -15.755234718322754
    5. '_NEXT' → logprob: -17.38023567199707
    6. '[next' → logprob: -17.38023567199707
    7. '_' → logprob: -18.13023567199707
    8. ')' → logprob: -20.00523567199707
    9. '	next' → logprob: -20.13023567199707
    10. '_n' → logprob: -20.13023567199707

Token 849: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05840252339839935
    2. ')
' → logprob: -2.9334025382995605
    3. '       ' → logprob: -5.6834025382995605
    4. ')return' → logprob: -10.308402061462402
    5. '   ' → logprob: -10.933402061462402
    6. '           ' → logprob: -11.058402061462402
    7. ')p' → logprob: -11.183402061462402
    8. ')v' → logprob: -11.558402061462402
    9. ')n' → logprob: -12.433402061462402
    10. ')
' → logprob: -12.808402061462402

Token 850: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004129152512177825
    2. '   ' → logprob: -8.875412940979004
    3. 'v' → logprob: -9.125412940979004
    4. '<|end|>' → logprob: -9.125412940979004
    5. '           ' → logprob: -10.750412940979004
    6. '<|end|>' → logprob: -11.500412940979004
    7. 'def' → logprob: -11.750412940979004
    8. '```' → logprob: -11.875412940979004
    9. 'return' → logprob: -13.125412940979004
    10. 'from' → logprob: -13.250412940979004

Token 851: ' distance' (ID: 9324)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01849030889570713
    2. 'distance' (adapté à ' distance') → logprob: -4.018490314483643
    3. ' distance' → logprob: -8.393489837646484
    4. '   ' → logprob: -9.518489837646484
    5. '
' → logprob: -10.768489837646484
    6. '```' → logprob: -11.643489837646484
    7. '           ' → logprob: -12.518489837646484
    8. '(distance' → logprob: -12.643489837646484
    9. 'v' → logprob: -14.518489837646484
    10. 'Distance' → logprob: -14.643489837646484

Token 852: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.008628524839878082
    2. '+=' → logprob: -4.7586283683776855
    3. ' =' → logprob: -11.633628845214844
    4. '=' → logprob: -12.633628845214844
    5. '   ' → logprob: -14.133628845214844
    6. '```' → logprob: -14.883628845214844
    7. ',' → logprob: -15.008628845214844
    8. '    ' → logprob: -15.508628845214844
    9. '_count' → logprob: -15.883628845214844
    10. 'count' → logprob: -17.133628845214844

Token 853: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12692904472351074
    2. ' ' → logprob: -2.1269290447235107
    3. '   ' → logprob: -14.12692928314209
    4. ' ' → logprob: -15.87692928314209
    5. '```' → logprob: -16.501928329467773
    6. '
' → logprob: -18.126928329467773
    7. '    ' → logprob: -18.376928329467773
    8. '  ' → logprob: -18.439428329467773
    9. '<|end|>' → logprob: -18.501928329467773
    10. '0' → logprob: -18.689428329467773

Token 854: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -18.000001907348633
    4. '```' → logprob: -18.500001907348633
    5. 'def' → logprob: -20.375001907348633
    6. '       ' → logprob: -20.875001907348633
    7. '0' → logprob: -21.750001907348633
    8. '１' → logprob: -21.875001907348633
    9. '  ' → logprob: -22.000001907348633
    10. '<|end|>' → logprob: -22.250001907348633

Token 855: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008669180097058415
    2. 'v' → logprob: -7.250866889953613
    3. '   ' → logprob: -9.625866889953613
    4. '	' → logprob: -11.000866889953613
    5. ' v' → logprob: -11.250866889953613
    6. '
' → logprob: -11.500866889953613
    7. '<|end|>' → logprob: -11.500866889953613
    8. ',' → logprob: -11.750866889953613
    9. '```' → logprob: -12.000866889953613
    10. '           ' → logprob: -12.250866889953613

Token 856: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004448631778359413
    2. 'v' → logprob: -5.504448413848877
    3. '   ' → logprob: -8.129448890686035
    4. ' v' → logprob: -10.754448890686035
    5. '	v' → logprob: -11.254448890686035
    6. '	' → logprob: -11.629448890686035
    7. '```' → logprob: -11.754448890686035
    8. '<|end|>' → logprob: -12.004448890686035
    9. ' ' → logprob: -12.754448890686035
    10. '
' → logprob: -13.004448890686035

Token 857: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.0013329789508134127
    2. '       ' → logprob: -7.001332759857178
    3. '   ' → logprob: -7.876332759857178
    4. ' v' → logprob: -11.251333236694336
    5. '_v' → logprob: -11.501333236694336
    6. '           ' → logprob: -11.751333236694336
    7. '(v' → logprob: -12.751333236694336
    8. '	v' → logprob: -12.876333236694336
    9. '```' → logprob: -13.376333236694336
    10. '[v' → logprob: -13.876333236694336

Token 858: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -7.584239938296378e-06
    2. 'ist' → logprob: -11.875007629394531
    3. ',' → logprob: -14.875007629394531
    4. '_list' → logprob: -16.75000762939453
    5. ' =' → logprob: -18.37500762939453
    6. ' list' → logprob: -18.87500762939453
    7. '	list' → logprob: -19.25000762939453
    8. 'ilist' → logprob: -19.25000762939453
    9. '=list' → logprob: -19.25000762939453
    10. '=' → logprob: -19.62500762939453

Token 859: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.6534622311592102
    2. '_previous' → logprob: -0.9034622311592102
    3. ',' → logprob: -2.6534621715545654
    4. '=' → logprob: -7.0284624099731445
    5. '_prev' → logprob: -7.0284624099731445
    6. ' =' → logprob: -7.4034624099731445
    7. 'previous' → logprob: -7.5284624099731445
    8. 'to' → logprob: -7.7784624099731445
    9. '_next' → logprob: -8.403462409973145
    10. ',_' → logprob: -9.028462409973145

Token 860: '_del' (ID: 39544)
  Prédit: '_del'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_del' → logprob: -0.3885498046875
    2. 'del' → logprob: -1.1385498046875
    3. '_' → logprob: -7.6385498046875
    4. ' =' → logprob: -7.8885498046875
    5. '_previous' → logprob: -8.5135498046875
    6. '_prev' → logprob: -9.0135498046875
    7. '=' → logprob: -9.0135498046875
    8. 'prev' → logprob: -9.7635498046875
    9. 'previous' → logprob: -9.7635498046875
    10. 'def' → logprob: -9.7635498046875

Token 861: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22795411944389343
    2. '=' → logprob: -1.9779541492462158
    3. ',' → logprob: -2.727954149246216
    4. '   ' → logprob: -10.227953910827637
    5. ' ,' → logprob: -10.477953910827637
    6. ' ' → logprob: -10.977953910827637
    7. '=[]' → logprob: -10.977953910827637
    8. '	' → logprob: -12.227953910827637
    9. '_previous' → logprob: -12.352953910827637
    10. 'previous' → logprob: -12.602953910827637

Token 862: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0007107630372047424
    2. ' v' → logprob: -7.250710964202881
    3. '   ' → logprob: -15.125710487365723
    4. '	v' → logprob: -16.12571144104004
    5. '_v' → logprob: -16.37571144104004
    6. '[]' → logprob: -16.75071144104004
    7. 'vl' → logprob: -16.87571144104004
    8. 'set' → logprob: -17.12571144104004
    9. '       ' → logprob: -17.12571144104004
    10. ' ' → logprob: -17.62571144104004

Token 863: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -7.183501293184236e-05
    2. 'ist' → logprob: -10.25007152557373
    3. 'previous' → logprob: -11.00007152557373
    4. '[' → logprob: -12.12507152557373
    5. '_list' → logprob: -12.37507152557373
    6. 'prev' → logprob: -12.62507152557373
    7. ' list' → logprob: -13.25007152557373
    8. '_previous' → logprob: -13.50007152557373
    9. 'next' → logprob: -14.50007152557373
    10. '   ' → logprob: -14.87507152557373

Token 864: '_previous' (ID: 126212)
  Prédit: '_previous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_previous' → logprob: -0.002088877372443676
    2. ',' → logprob: -6.627089023590088
    3. 'previous' → logprob: -7.252089023590088
    4. ',
' → logprob: -11.25208854675293
    5. '
' → logprob: -11.37708854675293
    6. '_next' → logprob: -11.62708854675293
    7. '   ' → logprob: -12.00208854675293
    8. '_prev' → logprob: -12.25208854675293
    9. '_' → logprob: -12.87708854675293
    10. 'Previous' → logprob: -13.12708854675293

Token 865: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39729538559913635
    2. '<|end|>' → logprob: -1.522295355796814
    3. '   ' → logprob: -3.0222954750061035
    4. 'v' → logprob: -3.5222954750061035
    5. ',' → logprob: -4.2722954750061035
    6. ',v' → logprob: -5.0222954750061035
    7. '	v' → logprob: -5.1472954750061035
    8. ',
' → logprob: -6.2722954750061035
    9. '<|end|>' → logprob: -7.3972954750061035
    10. '[v' → logprob: -7.5222954750061035

Token 866: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1528404951095581
    2. '	v' → logprob: -2.5278406143188477
    3. 'v' → logprob: -3.6528406143188477
    4. '   ' → logprob: -3.9028406143188477
    5. '
' → logprob: -4.527840614318848
    6. '<|end|>' → logprob: -6.402840614318848
    7. '	' → logprob: -6.527840614318848
    8. ',v' → logprob: -7.527840614318848
    9. '	   ' → logprob: -8.152840614318848
    10. ',' → logprob: -8.652840614318848

Token 867: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.2549586892127991
    2. '       ' → logprob: -1.5049586296081543
    3. '   ' → logprob: -5.879958629608154
    4. ' v' → logprob: -8.754959106445312
    5. '	v' → logprob: -9.629959106445312
    6. ',v' → logprob: -13.129959106445312
    7. '	' → logprob: -13.254959106445312
    8. ' ' → logprob: -14.254959106445312
    9. '	   ' → logprob: -15.004959106445312
    10. '_v' → logprob: -15.004959106445312

Token 868: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0006401229766197503
    2. 'ist' → logprob: -7.375639915466309
    3. ',' → logprob: -11.375639915466309
    4. '   ' → logprob: -14.500639915466309
    5. '=' → logprob: -15.000639915466309
    6. 'l' → logprob: -15.125639915466309
    7. ' =' → logprob: -15.875639915466309
    8. '_list' → logprob: -16.000640869140625
    9. '       ' → logprob: -16.375640869140625
    10. 'v' → logprob: -16.750640869140625

Token 869: '_previous' (ID: 126212)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015320050297304988
    2. ',v' → logprob: -7.126532077789307
    3. '_previous' → logprob: -7.251532077789307
    4. 'previous' → logprob: -11.876531600952148
    5. ' ,' → logprob: -13.001531600952148
    6. '_,' → logprob: -13.001531600952148
    7. 'v' → logprob: -13.001531600952148
    8. ',p' → logprob: -13.501531600952148
    9. 'Previous' → logprob: -13.626531600952148
    10. '_prev' → logprob: -14.251531600952148

Token 870: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012034466490149498
    2. ',v' → logprob: -6.751203536987305
    3. '=' → logprob: -10.626203536987305
    4. ',
' → logprob: -12.251203536987305
    5. ' ,' → logprob: -13.626203536987305
    6. '=v' → logprob: -13.876203536987305
    7. 'v' → logprob: -13.876203536987305
    8. ' v' → logprob: -14.876203536987305
    9. ' =' → logprob: -15.501203536987305
    10. '‌,' → logprob: -16.501203536987305

Token 871: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.0339031834737398e-05
    2. ' v' → logprob: -11.125020027160645
    3. 'list' → logprob: -12.250020027160645
    4. '   ' → logprob: -14.875020027160645
    5. 'set' → logprob: -15.375020027160645
    6. '[]' → logprob: -16.12502098083496
    7. '	v' → logprob: -17.37502098083496
    8. ' ' → logprob: -17.50002098083496
    9. '[v' → logprob: -17.87502098083496
    10. 'vl' → logprob: -18.25002098083496

Token 872: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.004453735891729593
    2. '_list' → logprob: -5.754453659057617
    3. '.copy' → logprob: -7.879453659057617
    4. '[:]' → logprob: -8.754453659057617
    5. '<|end|>' → logprob: -9.004453659057617
    6. 'copy' → logprob: -9.004453659057617
    7. 'lst' → logprob: -9.254453659057617
    8. '.tolist' → logprob: -9.379453659057617
    9. 'tolist' → logprob: -9.754453659057617
    10. 'l' → logprob: -10.004453659057617

Token 873: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12555314600467682
    2. 'v' → logprob: -2.8755531311035156
    3. '[:]' → logprob: -4.000553131103516
    4. ',' → logprob: -4.125553131103516
    5. '   ' → logprob: -4.750553131103516
    6. '<|end|>' → logprob: -5.250553131103516
    7. '       ' → logprob: -5.500553131103516
    8. '=' → logprob: -6.125553131103516
    9. ' =' → logprob: -6.750553131103516
    10. '	v' → logprob: -7.125553131103516

Token 874: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 875: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.2562256455421448
    2. '       ' → logprob: -1.5062255859375
    3. ' v' → logprob: -5.5062255859375
    4. '	v' → logprob: -9.1312255859375
    5. '   ' → logprob: -9.8812255859375
    6. '	' → logprob: -9.8812255859375
    7. '	   ' → logprob: -11.8812255859375
    8. '_v' → logprob: -13.0062255859375
    9. ',v' → logprob: -13.0062255859375
    10. '.v' → logprob: -14.7562255859375

Token 876: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00024846551241353154
    2. '=' → logprob: -9.125248908996582
    3. ' =' → logprob: -9.500248908996582
    4. 'l' → logprob: -10.625248908996582
    5. 'lst' → logprob: -11.000248908996582
    6. 'v' → logprob: -12.375248908996582
    7. 'ist' → logprob: -12.625248908996582
    8. '   ' → logprob: -12.750248908996582
    9. '       ' → logprob: -12.875248908996582
    10. '_list' → logprob: -13.125248908996582

Token 877: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1270376294851303
    2. ' =' → logprob: -2.127037525177002
    3. ',' → logprob: -9.12703800201416
    4. ' ' → logprob: -14.75203800201416
    5. 'v' → logprob: -16.252037048339844
    6. ')' → logprob: -17.002037048339844
    7. '=v' → logprob: -17.002037048339844
    8. '_next' → logprob: -17.252037048339844
    9. '=set' → logprob: -17.252037048339844
    10. '=
' → logprob: -17.877037048339844

Token 878: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.001052338513545692
    2. 'v' → logprob: -7.126052379608154
    3. ' list' → logprob: -8.876051902770996
    4. '[v' → logprob: -9.501051902770996
    5. '[list' → logprob: -11.376051902770996
    6. '[' → logprob: -11.501051902770996
    7. 'set' → logprob: -11.626051902770996
    8. '   ' → logprob: -14.626051902770996
    9. 'sorted' → logprob: -14.751051902770996
    10. '[]' → logprob: -14.876051902770996

Token 879: '(set' (ID: 25904)
  Prédit: '(set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(set' → logprob: -4.7994282795116305e-05
    2. 'set' → logprob: -10.00004768371582
    3. '(' → logprob: -13.37504768371582
    4. '(v' → logprob: -14.37504768371582
    5. '(dict' → logprob: -16.12504768371582
    6. '(sorted' → logprob: -16.50004768371582
    7. '=set' → logprob: -17.12504768371582
    8. '(filter' → logprob: -17.25004768371582
    9. '({' → logprob: -17.87504768371582
    10. '(
' → logprob: -18.25004768371582

Token 880: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0003831252979580313
    2. 'v' → logprob: -7.875382900238037
    3. ' (' → logprob: -13.625383377075195
    4. '(
' → logprob: -13.875383377075195
    5. '(' → logprob: -14.750383377075195
    6. ' v' → logprob: -15.750383377075195
    7. '   ' → logprob: -16.375383377075195
    8. '```' → logprob: -16.625383377075195
    9. '	v' → logprob: -16.875383377075195
    10. '()' → logprob: -17.125383377075195

Token 881: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0021940404549241066
    2. '(v' → logprob: -6.127193927764893
    3. 'ist' → logprob: -12.62719440460205
    4. '[v' → logprob: -12.75219440460205
    5. '_list' → logprob: -13.62719440460205
    6. 'v' → logprob: -14.75219440460205
    7. 'l' → logprob: -15.12719440460205
    8. '(list' → logprob: -15.25219440460205
    9. ')' → logprob: -16.002193450927734
    10. '```' → logprob: -16.002193450927734

Token 882: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.0006621609791181982
    2. 'next' → logprob: -7.375662326812744
    3. 'v' → logprob: -11.375661849975586
    4. '(v' → logprob: -11.625661849975586
    5. 'Next' → logprob: -11.875661849975586
    6. '[v' → logprob: -13.000661849975586
    7. '_to' → logprob: -13.500661849975586
    8. ')' → logprob: -13.500661849975586
    9. '
' → logprob: -14.250661849975586
    10. '```' → logprob: -14.750661849975586

Token 883: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025720717385411263
    2. ' -' → logprob: -3.7757208347320557
    3. '-' → logprob: -6.275720596313477
    4. ' )' → logprob: -7.775720596313477
    5. ')-' → logprob: -8.775720596313477
    6. ' ' → logprob: -12.400720596313477
    7. '   ' → logprob: -12.650720596313477
    8. ')set' → logprob: -13.525720596313477
    9. ')-(' → logprob: -13.900720596313477
    10. ').' → logprob: -13.900720596313477

Token 884: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16036102175712585
    2. '-' → logprob: -1.9103610515594482
    3. ')' → logprob: -8.910361289978027
    4. ' ' → logprob: -14.035361289978027
    5. ' ' → logprob: -15.160361289978027
    6. ')-' → logprob: -15.410361289978027
    7. '   ' → logprob: -15.410361289978027
    8. '-set' → logprob: -16.66036033630371
    9. '<|end|>' → logprob: -17.16036033630371
    10. '```' → logprob: -17.41036033630371

Token 885: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0004026673559565097
    2. ' set' → logprob: -8.000402450561523
    3. '   ' → logprob: -9.750402450561523
    4. '  ' → logprob: -12.875402450561523
    5. '       ' → logprob: -13.375402450561523
    6. ' ' → logprob: -13.500402450561523
    7. '    ' → logprob: -13.625402450561523
    8. 'v' → logprob: -14.500402450561523
    9. '(set' → logprob: -14.500402450561523
    10. '	set' → logprob: -15.000402450561523

Token 886: '(v' (ID: 6932)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.011059965938329697
    2. '(set' → logprob: -4.511059761047363
    3. ' set' → logprob: -11.511059761047363
    4. '(v' → logprob: -13.761059761047363
    5. '=set' → logprob: -14.011059761047363
    6. '   ' → logprob: -16.01106071472168
    7. '	set' → logprob: -16.26106071472168
    8. ')set' → logprob: -17.88606071472168
    9. '```' → logprob: -18.38606071472168
    10. '       ' → logprob: -18.38606071472168

Token 887: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0003566767554730177
    2. 'ist' → logprob: -8.250356674194336
    3. 'set' → logprob: -9.375356674194336
    4. '_list' → logprob: -12.875356674194336
    5. 'ilist' → logprob: -13.125356674194336
    6. '(v' → logprob: -13.250356674194336
    7. 'link' → logprob: -13.500356674194336
    8. '(list' → logprob: -14.000356674194336
    9. 'isted' → logprob: -15.125356674194336
    10. '(set' → logprob: -15.125356674194336

Token 888: '_to' (ID: 5089)
  Prédit: '_previous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_previous' → logprob: -0.006127987522631884
    2. '_to' → logprob: -5.131127834320068
    3. 'previous' → logprob: -8.756128311157227
    4. '_prev' → logprob: -10.756128311157227
    5. ')' → logprob: -12.006128311157227
    6. '_pre' → logprob: -12.631128311157227
    7. 'to' → logprob: -12.631128311157227
    8. 'Previous' → logprob: -13.381128311157227
    9. '(previous' → logprob: -13.756128311157227
    10. '.previous' → logprob: -14.256128311157227

Token 889: '_del' (ID: 39544)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.050449542701244354
    2. 'list' → logprob: -4.050449371337891
    3. 'del' → logprob: -4.800449371337891
    4. '_prev' → logprob: -5.050449371337891
    5. '_del' → logprob: -5.175449371337891
    6. '_previous' → logprob: -5.175449371337891
    7. 'v' → logprob: -6.050449371337891
    8. 'el' → logprob: -6.800449371337891
    9. '(v' → logprob: -7.425449371337891
    10. 'et' → logprob: -7.425449371337891

Token 890: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009361166739836335
    2. '))' → logprob: -7.000936031341553
    3. ')
' → logprob: -10.875936508178711
    4. ')}' → logprob: -13.000936508178711
    5. '})' → logprob: -14.000936508178711
    6. ' )' → logprob: -14.250936508178711
    7. '())' → logprob: -14.500936508178711
    8. '<|end|>' → logprob: -14.750936508178711
    9. ')

' → logprob: -15.125936508178711
    10. ')))' → logprob: -15.750936508178711

Token 891: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 892: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006919435109011829
    2. ' return' → logprob: -8.000692367553711
    3. 'return' (adapté à ' return') → logprob: -8.250692367553711
    4. '<|end|>' → logprob: -10.125692367553711
    5. '	return' → logprob: -10.500692367553711
    6. ')' → logprob: -11.375692367553711
    7. '...' → logprob: -12.625692367553711
    8. '.' → logprob: -12.750692367553711
    9. '```' → logprob: -12.875692367553711
    10. '       ' → logprob: -13.250692367553711

Token 893: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.8991690278053284
    2. 'max' → logprob: -1.0241689682006836
    3. 'distance' → logprob: -1.5241689682006836
    4. ' max' → logprob: -4.774168968200684
    5. ' find' → logprob: -5.899168968200684
    6. ' distance' → logprob: -6.399168968200684
    7. '(find' → logprob: -6.524168968200684
    8. '(max' → logprob: -6.774168968200684
    9. '(distance' → logprob: -7.399168968200684
    10. 'v' → logprob: -10.274168968200684

Token 894: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -5.5577775128767826e-06
    2. 'max' → logprob: -12.250005722045898
    3. '_distance' → logprob: -14.750005722045898
    4. '_' → logprob: -16.1250057220459
    5. 'Max' → logprob: -16.2500057220459
    6. '_Max' → logprob: -16.5000057220459
    7. '_MAX' → logprob: -17.5000057220459
    8. '_long' → logprob: -17.5000057220459
    9. '(max' → logprob: -18.0000057220459
    10. '_m' → logprob: -18.3750057220459

Token 895: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -1.8312570318812504e-05
    2. 'distance' → logprob: -11.625018119812012
    3. '_max' → logprob: -11.750018119812012
    4. '_v' → logprob: -14.750018119812012
    5. '(distance' → logprob: -15.000018119812012
    6. '_dist' → logprob: -15.625018119812012
    7. 'max' → logprob: -15.750018119812012
    8. 'Distance' → logprob: -16.375019073486328
    9. '(v' → logprob: -16.750019073486328
    10. '_value' → logprob: -17.125019073486328

Token 896: '(distance' (ID: 105203)
  Prédit: '(distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(distance' → logprob: -0.00033677343162707984
    2. '(' → logprob: -8.000336647033691
    3. '(
' → logprob: -13.625336647033691
    4. 'distance' → logprob: -16.375337600708008
    5. '(dist' → logprob: -17.375337600708008
    6. '(depth' → logprob: -18.125337600708008
    7. '(dis' → logprob: -18.875337600708008
    8. '()' → logprob: -18.875337600708008
    9. '(duration' → logprob: -19.000337600708008
    10. ' (' → logprob: -19.000337600708008

Token 897: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.12704727053642273
    2. ')' → logprob: -2.127047300338745
    3. 'list' → logprob: -9.502047538757324
    4. ')_' → logprob: -10.627047538757324
    5. '_)' → logprob: -12.502047538757324
    6. 's' → logprob: -12.627047538757324
    7. 'List' → logprob: -12.877047538757324
    8. ',)' → logprob: -13.127047538757324
    9. '   ' → logprob: -13.377047538757324
    10. ',' → logprob: -13.377047538757324

Token 898: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.41866585687967e-06
    2. '())' → logprob: -12.000008583068848
    3. ')
' → logprob: -14.125008583068848
    4. '   ' → logprob: -14.500008583068848
    5. ' )' → logprob: -14.750008583068848
    6. ')[' → logprob: -15.125008583068848
    7. '()' → logprob: -15.375008583068848
    8. '))' → logprob: -17.25000762939453
    9. ')`' → logprob: -17.50000762939453
    10. ' ' → logprob: -18.25000762939453

Token 899: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006227036472409964
    2. ')' → logprob: -5.631227016448975
    3. '<|end|>' → logprob: -6.381227016448975
    4. '```' → logprob: -8.631227493286133
    5. '[' → logprob: -8.631227493286133
    6. '.' → logprob: -9.006227493286133
    7. '#' → logprob: -9.381227493286133
    8. '{' → logprob: -9.381227493286133
    9. '(' → logprob: -9.881227493286133
    10. 'v' → logprob: -10.006227493286133

Token 900: ' calc' (ID: 25691)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.981761634349823
    2. 'calc' → logprob: -0.981761634349823
    3. 'def' → logprob: -2.2317616939544678
    4. ' calc' → logprob: -2.8567616939544678
    5. ' __' → logprob: -3.4817616939544678
    6. 'main' → logprob: -3.9817616939544678
    7. 'int' → logprob: -4.356761455535889
    8. 'find' → logprob: -4.606761455535889
    9. ' main' → logprob: -6.106761455535889
    10. ' def' → logprob: -6.731761455535889

Token 901: '_tree' (ID: 27118)
  Prédit: '_long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_long' → logprob: -0.05765313282608986
    2. '_d' → logprob: -3.5576531887054443
    3. '_max' → logprob: -4.557652950286865
    4. '_link' → logprob: -5.807652950286865
    5. '_dist' → logprob: -6.307652950286865
    6. '_l' → logprob: -6.307652950286865
    7. '_distance' → logprob: -6.307652950286865
    8. '_tree' → logprob: -6.932652950286865
    9. '_inner' → logprob: -7.057652950286865
    10. '_f' → logprob: -7.057652950286865

Token 902: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.2500253915786743
    2. '_height' → logprob: -2.1250252723693848
    3. '_depth' → logprob: -2.7500252723693848
    4. '_long' → logprob: -4.000025272369385
    5. '_center' → logprob: -5.250025272369385
    6. '_de' → logprob: -5.750025272369385
    7. '_max' → logprob: -5.875025272369385
    8. 'diam' → logprob: -5.875025272369385
    9. 'height' → logprob: -7.000025272369385
    10. '_distance' → logprob: -7.500025272369385

Token 903: 'iameter' (ID: 157684)
  Prédit: 'iameter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iameter' → logprob: -0.010096022859215736
    2. 'ep' → logprob: -4.885096073150635
    3. 'iam' → logprob: -6.635096073150635
    4. 'eep' → logprob: -7.510096073150635
    5. 'e' → logprob: -8.385095596313477
    6. 'istance' → logprob: -8.885095596313477
    7. 'p' → logprob: -9.385095596313477
    8. 'ef' → logprob: -10.260095596313477
    9. 'ist' → logprob: -10.635095596313477
    10. 'eeper' → logprob: -10.635095596313477

Token 904: '_get' (ID: 6533)
  Prédit: '(link'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(link' → logprob: -0.001418207655660808
    2. '(
' → logprob: -6.751418113708496
    3. '(' → logprob: -8.751418113708496
    4. 'def' → logprob: -9.751418113708496
    5. ' (' → logprob: -11.251418113708496
    6. '(def' → logprob: -11.751418113708496
    7. '(line' → logprob: -13.126418113708496
    8. '```' → logprob: -13.876418113708496
    9. '(tree' → logprob: -14.001418113708496
    10. '(l' → logprob: -14.376418113708496

Token 905: '_u' (ID: 17063)
  Prédit: '(link'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(link' → logprob: -0.15550367534160614
    2. 'def' → logprob: -3.655503749847412
    3. '_length' → logprob: -3.780503749847412
    4. '_link' → logprob: -4.280503749847412
    5. '_max' → logprob: -4.280503749847412
    6. '(' → logprob: -4.280503749847412
    7. '(node' → logprob: -4.780503749847412
    8. '_next' → logprob: -5.030503749847412
    9. '(length' → logprob: -5.280503749847412
    10. '(v' → logprob: -5.280503749847412

Token 906: '(link' (ID: 51236)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.028019189834594727
    2. 'pd' → logprob: -4.778018951416016
    3. 'ps' → logprob: -5.153018951416016
    4. 'se' → logprob: -6.653018951416016
    5. 'plink' → logprob: -6.778018951416016
    6. '_v' → logprob: -6.778018951416016
    7. 'pl' → logprob: -6.903018951416016
    8. 'pt' → logprob: -7.028018951416016
    9. 'plist' → logprob: -7.153018951416016
    10. 'dp' → logprob: -7.403018951416016

Token 907: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -7.465036105713807e-06
    2. ')' → logprob: -12.750007629394531
    3. '(list' → logprob: -13.625007629394531
    4. '_list' → logprob: -15.000007629394531
    5. 'lists' → logprob: -15.000007629394531
    6. '(' → logprob: -15.125007629394531
    7. 'lista' → logprob: -15.875007629394531
    8. '_' → logprob: -16.00000762939453
    9. 'link' → logprob: -16.00000762939453
    10. '```' → logprob: -16.00000762939453

Token 908: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06697369366884232
    2. '):' → logprob: -2.8169736862182617
    3. '):
' → logprob: -5.441973686218262
    4. ',v' → logprob: -8.191973686218262
    5. '   ' → logprob: -8.941973686218262
    6. ')' → logprob: -9.191973686218262
    7. '(v' → logprob: -9.816973686218262
    8. ' ,' → logprob: -11.066973686218262
    9. '):
' → logprob: -11.191973686218262
    10. '(' → logprob: -11.816973686218262

Token 909: ' v' (ID: 323)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.8527777791023254
    2. 'v' → logprob: -0.9777777791023254
    3. 'start' → logprob: -2.1027777194976807
    4. ' v' → logprob: -3.8527777194976807
    5. ' u' → logprob: -3.9777777194976807
    6. ' start' → logprob: -4.97777795791626
    7. 'max' → logprob: -5.10277795791626
    8. ')' → logprob: -5.22777795791626
    9. 'd' → logprob: -5.60277795791626
    10. '):
' → logprob: -6.47777795791626

Token 910: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4405110776424408
    2. '):
' → logprob: -1.0655111074447632
    3. ',' → logprob: -4.690511226654053
    4. '=' → logprob: -6.190511226654053
    5. '):
' → logprob: -8.190510749816895
    6. ')' → logprob: -9.440510749816895
    7. '   ' → logprob: -9.690510749816895
    8. '):

' → logprob: -10.690510749816895
    9. '=None' → logprob: -10.690510749816895
    10. ':' → logprob: -11.315510749816895

Token 911: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008299979381263256
    2. ',' → logprob: -7.750830173492432
    3. 'distance' → logprob: -9.125829696655273
    4. '_,' → logprob: -9.375829696655273
    5. 'max' → logprob: -9.625829696655273
    6. '(distance' → logprob: -10.000829696655273
    7. '```' → logprob: -10.750829696655273
    8. 'd' → logprob: -11.250829696655273
    9. 'def' → logprob: -11.375829696655273
    10. ',d' → logprob: -11.625829696655273

Token 912: ' _,' (ID: 18042)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.2774291038513184
    2. '   ' → logprob: -1.4024291038513184
    3. 'distance' → logprob: -1.5274291038513184
    4. '_,' (adapté à ' _,') → logprob: -2.0274291038513184
    5. 'dist' → logprob: -2.5274291038513184
    6. 'd' → logprob: -3.4024291038513184
    7. 'return' → logprob: -5.527429103851318
    8. 'u' → logprob: -5.652429103851318
    9. 'def' → logprob: -6.652429103851318
    10. 'v' → logprob: -6.777429103851318

Token 913: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5390493273735046
    2. '_' → logprob: -1.5390493869781494
    3. 'max' → logprob: -2.4140493869781494
    4. 'v' → logprob: -2.6640493869781494
    5. '_u' → logprob: -3.7890493869781494
    6. '_v' → logprob: -5.28904914855957
    7. '_max' → logprob: -5.28904914855957
    8. ' u' → logprob: -6.28904914855957
    9. '__' → logprob: -6.53904914855957
    10. 'calc' → logprob: -7.03904914855957

Token 914: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0001415618316968903
    2. ' =' → logprob: -8.875141143798828
    3. '=v' → logprob: -14.625141143798828
    4. '=
' → logprob: -14.750141143798828
    5. '=

' → logprob: -15.375141143798828
    6. ',' → logprob: -15.500141143798828
    7. '=}' → logprob: -16.625141143798828
    8. '=line' → logprob: -16.625141143798828
    9. '=u' → logprob: -16.750141143798828
    10. 'v' → logprob: -17.125141143798828

Token 915: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -1.0325924449716695e-05
    2. ' calc' → logprob: -11.50001049041748
    3. 'cal' → logprob: -16.375009536743164
    4. '   ' → logprob: -17.250009536743164
    5. '(calc' → logprob: -17.500009536743164
    6. 'find' → logprob: -18.250009536743164
    7. 'calculate' → logprob: -19.125009536743164
    8. '.calc' → logprob: -20.125009536743164
    9. '_calc' → logprob: -20.625009536743164
    10. 'Calc' → logprob: -21.875009536743164

Token 916: '_long' (ID: 42288)
  Prédit: '_long'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_long' → logprob: -2.7491250875755213e-05
    2. 'long' → logprob: -10.625027656555176
    3. 'Longest' → logprob: -13.875027656555176
    4. 'calc' → logprob: -14.125027656555176
    5. '_max' → logprob: -14.125027656555176
    6. '```' → logprob: -15.500027656555176
    7. '(calc' → logprob: -15.875027656555176
    8. '_calc' → logprob: -16.12502670288086
    9. '(long' → logprob: -16.25002670288086
    10. '(_' → logprob: -17.12502670288086

Token 917: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.00025406808708794415
    2. 'gest' → logprob: -8.375253677368164
    3. 'st' → logprob: -11.500253677368164
    4. 'test' → logprob: -11.875253677368164
    5. 'thest' → logprob: -13.375253677368164
    6. 'uest' → logprob: -13.625253677368164
    7. '_dist' → logprob: -14.375253677368164
    8. '_distance' → logprob: -14.625253677368164
    9. 'iest' → logprob: -14.750253677368164
    10. '```' → logprob: -15.625253677368164

Token 918: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.25193750858306885
    2. 'distance' → logprob: -1.5019375085830688
    3. '(link' → logprob: -13.001937866210938
    4. '```' → logprob: -13.126937866210938
    5. '(distance' → logprob: -13.501937866210938
    6. 'Distance' → logprob: -14.001937866210938
    7. ' distance' → logprob: -14.126937866210938
    8. 'link' → logprob: -14.251937866210938
    9. '_dist' → logprob: -15.876937866210938
    10. '距离' → logprob: -15.876937866210938

Token 919: '(link' (ID: 51236)
  Prédit: '(link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(link' → logprob: -2.5107177862082608e-05
    2. '(' → logprob: -11.000024795532227
    3. 'link' → logprob: -12.375024795532227
    4. '(
' → logprob: -12.625024795532227
    5. '```' → logprob: -14.750024795532227
    6. '$link' → logprob: -16.000024795532227
    7. '
' → logprob: -16.125024795532227
    8. '(line' → logprob: -16.750024795532227
    9. '<link' → logprob: -17.625024795532227
    10. ' (' → logprob: -17.750024795532227

Token 920: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -4.263011578586884e-05
    2. 'link' → logprob: -10.125042915344238
    3. 'ist' → logprob: -14.000042915344238
    4. '(link' → logprob: -15.125042915344238
    5. ')' → logprob: -15.250042915344238
    6. '(list' → logprob: -15.375042915344238
    7. '(' → logprob: -15.625042915344238
    8. '_list' → logprob: -16.125041961669922
    9. '```' → logprob: -16.375041961669922
    10. '(v' → logprob: -16.625041961669922

Token 921: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008545245509594679
    2. '(link' → logprob: -7.1258544921875
    3. ')' → logprob: -10.7508544921875
    4. '   ' → logprob: -11.6258544921875
    5. ' ,' → logprob: -11.8758544921875
    6. ',
' → logprob: -12.0008544921875
    7. ',v' → logprob: -12.8758544921875
    8. '(v' → logprob: -14.0008544921875
    9. 'def' → logprob: -14.0008544921875
    10. ')
' → logprob: -14.1258544921875

Token 922: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.011284071020781994
    2. ' v' → logprob: -4.511283874511719
    3. 'u' → logprob: -8.636283874511719
    4. ')' → logprob: -10.511283874511719
    5. ')v' → logprob: -11.261283874511719
    6. ' u' → logprob: -11.511283874511719
    7. '   ' → logprob: -12.886283874511719
    8. '	v' → logprob: -13.136283874511719
    9. '```' → logprob: -13.761283874511719
    10. '
' → logprob: -14.761283874511719

Token 923: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00034714414505288005
    2. ')
' → logprob: -8.000347137451172
    3. '   ' → logprob: -11.375347137451172
    4. ' )' → logprob: -16.125347137451172
    5. ')v' → logprob: -17.375347137451172
    6. ');' → logprob: -17.750347137451172
    7. ')
' → logprob: -18.000347137451172
    8. '),' → logprob: -18.250347137451172
    9. ')`' → logprob: -18.250347137451172
    10. ').' → logprob: -18.375347137451172

Token 924: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06615057587623596
    2. '
' → logprob: -3.066150665283203
    3. '	return' → logprob: -4.816150665283203
    4. ' return' → logprob: -5.441150665283203
    5. 'return' → logprob: -5.441150665283203
    6. '    
' → logprob: -8.566150665283203
    7. 'def' → logprob: -9.191150665283203
    8. ' ' → logprob: -10.066150665283203
    9. '
' → logprob: -10.066150665283203
    10. ',' → logprob: -10.316150665283203

Token 925: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03390558809041977
    2. 'return' (adapté à ' return') → logprob: -3.408905506134033
    3. ' return' → logprob: -9.033905982971191
    4. 'def' → logprob: -10.033905982971191
    5. '_,' → logprob: -10.158905982971191
    6. 'distance' → logprob: -10.658905982971191
    7. 'v' → logprob: -11.658905982971191
    8. '
' → logprob: -12.283905982971191
    9. ',' → logprob: -12.658905982971191
    10. 'd' → logprob: -12.908905982971191

Token 926: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0003373694489710033
    2. ' u' → logprob: -8.000337600708008
    3. '_u' → logprob: -13.250337600708008
    4. '_' → logprob: -16.500337600708008
    5. '	u' → logprob: -18.875337600708008
    6. '[u' → logprob: -21.125337600708008
    7. '(u' → logprob: -21.625337600708008
    8. '   ' → logprob: -22.000337600708008
    9. ' ' → logprob: -22.625337600708008
    10. 'у' → logprob: -23.125337600708008

Token 927: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5247200727462769
    2. '<|end|>' → logprob: -0.8997200727462769
    3. '
' → logprob: -7.149720191955566
    4. '```' → logprob: -7.899720191955566
    5. ')' → logprob: -8.274720191955566
    6. '<|end|>' → logprob: -9.149720191955566
    7. ' def' → logprob: -10.774720191955566
    8. '+' → logprob: -11.524720191955566
    9. '#' → logprob: -11.524720191955566
    10. '

' → logprob: -11.899720191955566

Token 928: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.180879816180095e-05
    2. '
' → logprob: -10.500051498413086
    3. '```' → logprob: -11.250051498413086
    4. '<|end|>' → logprob: -11.625051498413086
    5. ')' → logprob: -14.625051498413086
    6. '#' → logprob: -14.875051498413086
    7. '<|end|>' → logprob: -14.875051498413086
    8. '\' → logprob: -15.125051498413086
    9. '  
' → logprob: -15.750051498413086
    10. '    
' → logprob: -15.875051498413086

Token 929: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.0015148617094382644
    2. 'main' → logprob: -7.626514911651611
    3. ' calc' → logprob: -8.001514434814453
    4. 'def' → logprob: -8.626514434814453
    5. 'make' → logprob: -9.251514434814453
    6. 'get' → logprob: -9.251514434814453
    7. 'find' → logprob: -9.501514434814453
    8. 'solve' → logprob: -9.876514434814453
    9. 'build' → logprob: -10.126514434814453
    10. 'diam' → logprob: -10.251514434814453

Token 930: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.049865759909152985
    2. '_long' → logprob: -3.04986572265625
    3. 'tree' → logprob: -7.54986572265625
    4. 'def' → logprob: -8.04986572265625
    5. '_link' → logprob: -8.79986572265625
    6. '_d' → logprob: -9.42486572265625
    7. 'long' → logprob: -9.92486572265625
    8. '_max' → logprob: -10.17486572265625
    9. '_' → logprob: -11.67486572265625
    10. '```' → logprob: -11.67486572265625

Token 931: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.00044890373828820884
    2. 'diam' → logprob: -7.875448703765869
    3. 'def' → logprob: -9.750449180603027
    4. '(d' → logprob: -13.875449180603027
    5. '_long' → logprob: -14.000449180603027
    6. '_max' → logprob: -14.000449180603027
    7. '_distance' → logprob: -14.000449180603027
    8. 'd' → logprob: -14.000449180603027
    9. '#' → logprob: -14.125449180603027
    10. 'max' → logprob: -14.375449180603027

Token 932: 'iameter' (ID: 157684)
  Prédit: 'iameter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iameter' → logprob: -5.371605948312208e-05
    2. 'iam' → logprob: -9.875053405761719
    3. 'i' → logprob: -14.250053405761719
    4. 'diam' → logprob: -14.750053405761719
    5. 'istance' → logprob: -15.125053405761719
    6. '_' → logprob: -15.250053405761719
    7. 'ia' → logprob: -16.50005340576172
    8. '(i' → logprob: -16.75005340576172
    9. 'am' → logprob: -16.75005340576172
    10. 'iamond' → logprob: -16.87505340576172

Token 933: '_get' (ID: 6533)
  Prédit: '(link'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(link' → logprob: -0.005842064507305622
    2. '_get' → logprob: -5.380842208862305
    3. '(' → logprob: -7.005842208862305
    4. 'def' → logprob: -8.880842208862305
    5. '_(' → logprob: -9.880842208862305
    6. '(
' → logprob: -10.755842208862305
    7. '_calc' → logprob: -10.755842208862305
    8. '_' → logprob: -11.005842208862305
    9. '_cal' → logprob: -11.005842208862305
    10. '_link' → logprob: -11.755842208862305

Token 934: '_distance' (ID: 45537)
  Prédit: '(link'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(link' → logprob: -0.9788997173309326
    2. 'u' → logprob: -1.3538997173309326
    3. '_u' → logprob: -1.3538997173309326
    4. 'link' → logprob: -3.3538997173309326
    5. '_d' → logprob: -3.7288997173309326
    6. '_v' → logprob: -4.603899955749512
    7. 'def' → logprob: -5.353899955749512
    8. '_long' → logprob: -5.353899955749512
    9. 'diam' → logprob: -5.353899955749512
    10. 'v' → logprob: -5.478899955749512

Token 935: '(link' (ID: 51236)
  Prédit: '(link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(link' → logprob: -0.00013440960901789367
    2. '(' → logprob: -9.000134468078613
    3. '(
' → logprob: -13.000134468078613
    4. 'def' → logprob: -13.250134468078613
    5. '(line' → logprob: -13.500134468078613
    6. '(calc' → logprob: -13.875134468078613
    7. '(l' → logprob: -14.375134468078613
    8. '```' → logprob: -14.500134468078613
    9. ' (' → logprob: -14.875134468078613
    10. '_' → logprob: -15.000134468078613

Token 936: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.9361264946837764e-07
    2. 'link' → logprob: -16.625
    3. '(list' → logprob: -19.125
    4. '(' → logprob: -19.875
    5. 'lists' → logprob: -20.75
    6. '```' → logprob: -21.125
    7. 'ist' → logprob: -21.25
    8. '[' → logprob: -21.25
    9. '(
' → logprob: -21.5
    10. '_list' → logprob: -21.75

Token 937: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.747814349073451e-05
    2. '(link' → logprob: -11.750017166137695
    3. '   ' → logprob: -12.000017166137695
    4. ',
' → logprob: -13.500017166137695
    5. ' ,' → logprob: -13.875017166137695
    6. '```' → logprob: -14.500017166137695
    7. '):
' → logprob: -16.375017166137695
    8. 'link' → logprob: -16.375017166137695
    9. '_,' → logprob: -16.750017166137695
    10. ',line' → logprob: -16.750017166137695

Token 938: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.05000875145196915
    2. ' u' → logprob: -3.050008773803711
    3. 'v' → logprob: -6.925008773803711
    4. 'link' → logprob: -8.800008773803711
    5. '   ' → logprob: -9.050008773803711
    6. ' v' → logprob: -9.675008773803711
    7. ')' → logprob: -10.300008773803711
    8. ' link' → logprob: -10.550008773803711
    9. 'x' → logprob: -11.300008773803711
    10. '	u' → logprob: -12.425008773803711

Token 939: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022642381372861564
    2. '   ' → logprob: -9.250226020812988
    3. '):
' → logprob: -9.250226020812988
    4. '):' → logprob: -10.875226020812988
    5. ',
' → logprob: -11.500226020812988
    6. ' ,' → logprob: -12.875226020812988
    7. '(link' → logprob: -14.625226020812988
    8. ',v' → logprob: -14.750226020812988
    9. 'def' → logprob: -14.875226020812988
    10. ')' → logprob: -14.875226020812988

Token 940: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7588406205177307
    2. '_,' → logprob: -0.7588406205177307
    3. 'max' → logprob: -3.008840560913086
    4. 'distance' → logprob: -5.133840560913086
    5. ',' → logprob: -5.383840560913086
    6. 'return' → logprob: -6.258840560913086
    7. 'def' → logprob: -7.633840560913086
    8. 'd' → logprob: -8.258840560913086
    9. ' max' → logprob: -8.258840560913086
    10. '```' → logprob: -8.633840560913086

Token 941: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' (adapté à ' distance') → logprob: -0.16786383092403412
    2. 'max' → logprob: -1.9178638458251953
    3. 'd' → logprob: -5.417863845825195
    4. 'return' → logprob: -6.542863845825195
    5. 'dist' → logprob: -7.042863845825195
    6. '_,' → logprob: -7.542863845825195
    7. 'diam' → logprob: -8.667863845825195
    8. '   ' → logprob: -9.167863845825195
    9. ' distance' → logprob: -10.542863845825195
    10. '_distance' → logprob: -12.042863845825195

Token 942: ',' (ID: 11)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.002696339739486575
    2. ',' → logprob: -6.627696514129639
    3. 'list' → logprob: -7.002696514129639
    4. '=' → logprob: -8.62769603729248
    5. 's' → logprob: -9.12769603729248
    6. ' =' → logprob: -9.25269603729248
    7. '_,' → logprob: -10.87769603729248
    8. ',_' → logprob: -10.87769603729248
    9. '   ' → logprob: -11.12769603729248
    10. '_max' → logprob: -11.50269603729248

Token 943: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0032850175630301237
    2. ' _' → logprob: -6.003284931182861
    3. 'v' → logprob: -7.878284931182861
    4. ' v' → logprob: -8.25328540802002
    5. '_v' → logprob: -8.87828540802002
    6. '_=' → logprob: -11.50328540802002
    7. '_d' → logprob: -12.37828540802002
    8. '_max' → logprob: -12.62828540802002
    9. ' ' → logprob: -13.12828540802002
    10. '_u' → logprob: -13.37828540802002

Token 944: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012217883951961994
    2. ' =' → logprob: -4.512217998504639
    3. ',' → logprob: -6.762217998504639
    4. '   ' → logprob: -11.38721752166748
    5. '=
' → logprob: -14.38721752166748
    6. ')' → logprob: -14.76221752166748
    7. 'def' → logprob: -16.887218475341797
    8. ' ' → logprob: -16.887218475341797
    9. '```' → logprob: -16.887218475341797
    10. '  ' → logprob: -17.012218475341797

Token 945: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -9.710618905955926e-05
    2. ' calc' → logprob: -9.250097274780273
    3. '   ' → logprob: -14.125097274780273
    4. 'find' → logprob: -16.375097274780273
    5. 'cal' → logprob: -17.625097274780273
    6. '(calc' → logprob: -17.875097274780273
    7. 'calculate' → logprob: -18.625097274780273
    8. ' ' → logprob: -19.250097274780273
    9. '  ' → logprob: -19.750097274780273
    10. '    ' → logprob: -20.000097274780273

Token 946: '_long' (ID: 42288)
  Prédit: '_long'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_long' → logprob: -2.5941604690160602e-05
    2. 'long' → logprob: -10.625025749206543
    3. 'Longest' → logprob: -13.750025749206543
    4. '_tree' → logprob: -14.500025749206543
    5. 'tree' → logprob: -16.62502670288086
    6. ' longest' → logprob: -17.87502670288086
    7. '```' → logprob: -17.87502670288086
    8. '_max' → logprob: -18.12502670288086
    9. '(long' → logprob: -19.12502670288086
    10. 'Long' → logprob: -19.50002670288086

Token 947: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.06201182305812836
    2. 'gest' → logprob: -2.81201171875
    3. 'g' → logprob: -10.93701171875
    4. 'st' → logprob: -11.43701171875
    5. '_distance' → logprob: -11.93701171875
    6. 'gst' → logprob: -12.43701171875
    7. 'thest' → logprob: -13.93701171875
    8. 'test' → logprob: -13.93701171875
    9. 'uest' → logprob: -15.06201171875
    10. 'lest' → logprob: -15.18701171875

Token 948: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.008614808320999146
    2. 'distance' → logprob: -4.758615016937256
    3. ' distance' → logprob: -16.258615493774414
    4. 'Distance' → logprob: -16.258615493774414
    5. '(distance' → logprob: -16.883615493774414
    6. 'def' → logprob: -17.633615493774414
    7. '距离' → logprob: -18.008615493774414
    8. '_dist' → logprob: -18.133615493774414
    9. '_DISTANCE' → logprob: -18.508615493774414
    10. '(link' → logprob: -19.008615493774414

Token 949: '(link' (ID: 51236)
  Prédit: '(link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(link' → logprob: -2.8087270038668066e-05
    2. 'link' → logprob: -10.500027656555176
    3. '(' → logprob: -16.125028610229492
    4. '$link' → logprob: -16.125028610229492
    5. '<link' → logprob: -16.375028610229492
    6. '(
' → logprob: -16.500028610229492
    7. '```' → logprob: -16.750028610229492
    8. '	link' → logprob: -18.750028610229492
    9. '(line' → logprob: -19.000028610229492
    10. 'def' → logprob: -19.000028610229492

Token 950: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -3.380904672667384e-05
    2. 'link' → logprob: -10.500033378601074
    3. 'ist' → logprob: -12.000033378601074
    4. '(link' → logprob: -17.75003433227539
    5. '(list' → logprob: -19.12503433227539
    6. '(' → logprob: -19.87503433227539
    7. 'ilst' → logprob: -20.62503433227539
    8. 'lists' → logprob: -20.62503433227539
    9. ',' → logprob: -20.75003433227539
    10. '_list' → logprob: -20.87503433227539

Token 951: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3663626305060461e-05
    2. '(link' → logprob: -11.25001335144043
    3. '   ' → logprob: -15.12501335144043
    4. ',
' → logprob: -15.87501335144043
    5. ')' → logprob: -16.00001335144043
    6. ' ,' → logprob: -16.50001335144043
    7. ',u' → logprob: -18.75001335144043
    8. '```' → logprob: -18.87501335144043
    9. ',ll' → logprob: -18.87501335144043
    10. ',line' → logprob: -19.50001335144043

Token 952: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.008917441591620445
    2. 'link' → logprob: -5.008917331695557
    3. ' u' → logprob: -6.133917331695557
    4. ' link' → logprob: -10.508917808532715
    5. '   ' → logprob: -13.508917808532715
    6. ')' → logprob: -14.383917808532715
    7. '(u' → logprob: -14.508917808532715
    8. '[u' → logprob: -14.883917808532715
    9. '(link' → logprob: -14.883917808532715
    10. '```' → logprob: -14.883917808532715

Token 953: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2520316541194916
    2. ')
' → logprob: -1.502031683921814
    3. '   ' → logprob: -9.252031326293945
    4. ')
' → logprob: -12.002031326293945
    5. ')return' → logprob: -15.502031326293945
    6. ')

' → logprob: -16.127031326293945
    7. ')`
' → logprob: -16.752031326293945
    8. ' )
' → logprob: -16.877031326293945
    9. ' )' → logprob: -17.252031326293945
    10. ')
/' → logprob: -17.502031326293945

Token 954: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002470350591465831
    2. 'return' → logprob: -9.00024700164795
    3. ' return' → logprob: -9.37524700164795
    4. '
' → logprob: -10.87524700164795
    5. '	return' → logprob: -11.25024700164795
    6. '<|end|>' → logprob: -12.87524700164795
    7. ')' → logprob: -13.50024700164795
    8. ':return' → logprob: -14.00024700164795
    9. ',' → logprob: -14.50024700164795
    10. '       ' → logprob: -15.12524700164795

Token 955: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.11022841185331345
    2. '   ' → logprob: -2.3602283000946045
    3. ' return' → logprob: -4.610228538513184
    4. 'def' → logprob: -10.985228538513184
    5. '	return' → logprob: -12.610228538513184
    6. ':return' → logprob: -14.235228538513184
    7. '
' → logprob: -14.360228538513184
    8. ' ' → logprob: -15.235228538513184
    9. '  ' → logprob: -15.610228538513184
    10. '{return' → logprob: -16.110227584838867

Token 956: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.0007099286303855479
    2. ' distance' → logprob: -7.2507100105285645
    3. '(distance' → logprob: -19.000709533691406
    4. ' ' → logprob: -22.375709533691406
    5. 'dist' → logprob: -22.500709533691406
    6. '   ' → logprob: -22.500709533691406
    7. 'd' → logprob: -23.125709533691406
    8. 'int' → logprob: -23.500709533691406
    9. '_distance' → logprob: -23.625709533691406
    10. 'Distance' → logprob: -24.750709533691406

Token 957: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0026132361963391304
    2. '<|end|>' → logprob: -6.252613067626953
    3. '#' → logprob: -8.252613067626953
    4. 'mod' → logprob: -8.502613067626953
    5. '```' → logprob: -8.752613067626953
    6. 'distance' → logprob: -10.627613067626953
    7. '
' → logprob: -11.502613067626953
    8. '{' → logprob: -12.252613067626953
    9. ')' → logprob: -12.377613067626953
    10. '<|end|>' → logprob: -12.377613067626953

Token 958: 'def' (ID: 1314)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.16887181997299194
    2. 'def' → logprob: -1.9188718795776367
    3. '#' → logprob: -5.168871879577637
    4. '<|end|>' → logprob: -6.043871879577637
    5. '```' → logprob: -8.168871879577637
    6. ' mod' → logprob: -9.418871879577637
    7. 'global' → logprob: -9.543871879577637
    8. '<|end|>' → logprob: -10.668871879577637
    9. 'u' → logprob: -11.043871879577637
    10. '.' → logprob: -11.918871879577637

Token 959: ' calc' (ID: 25691)
  Prédit: ' calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.0873369425535202
    2. 'calc' → logprob: -2.962337017059326
    3. ' main' → logprob: -3.837337017059326
    4. ' solve' → logprob: -4.962337017059326
    5. 'main' → logprob: -6.462337017059326
    6. ' calculate' → logprob: -7.337337017059326
    7. ' find' → logprob: -8.337336540222168
    8. 'def' → logprob: -8.337336540222168
    9. 'solve' → logprob: -8.337336540222168
    10. ' tree' → logprob: -8.962336540222168

Token 960: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -3.857719275401905e-05
    2. 'tree' → logprob: -10.500038146972656
    3. 'def' → logprob: -12.000038146972656
    4. '_long' → logprob: -12.875038146972656
    5. '_link' → logprob: -14.375038146972656
    6. '_' → logprob: -14.750038146972656
    7. '(tree' → logprob: -15.000038146972656
    8. ' tree' → logprob: -15.625038146972656
    9. 'Tree' → logprob: -15.625038146972656
    10. '_t' → logprob: -16.125038146972656

Token 961: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -7.40998875699006e-05
    2. 'def' → logprob: -10.25007438659668
    3. 'diam' → logprob: -10.37507438659668
    4. '_' → logprob: -13.50007438659668
    5. '#' → logprob: -13.62507438659668
    6. 'Diameter' → logprob: -14.37507438659668
    7. '_distance' → logprob: -14.62507438659668
    8. '(d' → logprob: -14.87507438659668
    9. '_def' → logprob: -15.12507438659668
    10. '__' → logprob: -15.12507438659668

Token 962: 'iameter' (ID: 157684)
  Prédit: 'iameter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iameter' → logprob: -0.00023512568441219628
    2. 'iam' → logprob: -8.375235557556152
    3. 'istance' → logprob: -13.625235557556152
    4. 'i' → logprob: -13.625235557556152
    5. '_' → logprob: -13.750235557556152
    6. ' iam' → logprob: -15.500235557556152
    7. 'iamond' → logprob: -16.000234603881836
    8. '_i' → logprob: -16.375234603881836
    9. 'ia' → logprob: -16.500234603881836
    10. 'ef' → logprob: -16.500234603881836

Token 963: '(link' (ID: 51236)
  Prédit: '(link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(link' → logprob: -0.0004331725067459047
    2. '(' → logprob: -8.250432968139648
    3. '(
' → logprob: -9.625432968139648
    4. 'def' → logprob: -9.875432968139648
    5. '(get' → logprob: -10.875432968139648
    6. '(calc' → logprob: -11.125432968139648
    7. '_get' → logprob: -11.500432968139648
    8. '(line' → logprob: -12.875432968139648
    9. '_calc' → logprob: -13.250432968139648
    10. '(make' → logprob: -14.000432968139648

Token 964: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -4.320199877838604e-07
    2. '(list' → logprob: -15.25
    3. ')' → logprob: -17.375
    4. '_list' → logprob: -17.625
    5. 'link' → logprob: -18.5
    6. '(' → logprob: -18.875
    7. 'lists' → logprob: -19.125
    8. '=' → logprob: -19.75
    9. '(link' → logprob: -19.75
    10. '(
' → logprob: -19.875

Token 965: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012856863031629473
    2. '(link' → logprob: -9.250128746032715
    3. '):' → logprob: -11.125128746032715
    4. '   ' → logprob: -11.500128746032715
    5. ',
' → logprob: -12.375128746032715
    6. '):
' → logprob: -12.875128746032715
    7. ' ,' → logprob: -16.0001277923584
    8. ')' → logprob: -16.0001277923584
    9. ',line' → logprob: -16.1251277923584
    10. 'link' → logprob: -16.2501277923584

Token 966: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6138674020767212
    2. 'u' → logprob: -0.9888674020767212
    3. ' v' → logprob: -3.1138672828674316
    4. ' u' → logprob: -3.9888672828674316
    5. '1' → logprob: -4.238867282867432
    6. '):' → logprob: -5.738867282867432
    7. ')' → logprob: -5.988867282867432
    8. '):
' → logprob: -6.488867282867432
    9. ' ' → logprob: -6.738867282867432
    10. '   ' → logprob: -8.36386775970459

Token 967: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.298910915851593
    2. '):' → logprob: -1.4239108562469482
    3. '):
' → logprob: -4.048911094665527
    4. ')' → logprob: -9.298911094665527
    5. '   ' → logprob: -10.423911094665527
    6. '):
' → logprob: -10.923911094665527
    7. ',v' → logprob: -12.048911094665527
    8. '):

' → logprob: -12.298911094665527
    9. 'v' → logprob: -12.423911094665527
    10. ',
' → logprob: -13.048911094665527

Token 968: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.729906196298543e-06
    2. ' ' → logprob: -12.500009536743164
    3. '=' → logprob: -13.000009536743164
    4. 'None' → logprob: -13.250009536743164
    5. '   ' → logprob: -13.500009536743164
    6. ')' → logprob: -15.000009536743164
    7. '=None' → logprob: -15.875009536743164
    8. '):
' → logprob: -17.500009536743164
    9. 'v' → logprob: -17.500009536743164
    10. '0' → logprob: -17.625009536743164

Token 969: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023305457085371017
    2. '):
' → logprob: -3.7733054161071777
    3. ')' → logprob: -10.148305892944336
    4. '   ' → logprob: -11.273305892944336
    5. '):
' → logprob: -11.898305892944336
    6. ',' → logprob: -14.648305892944336
    7. ' ):' → logprob: -15.148305892944336
    8. '):

' → logprob: -15.148305892944336
    9. 'v' → logprob: -16.148305892944336
    10. ':' → logprob: -16.523305892944336

Token 970: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021564492490142584
    2. 'u' → logprob: -6.7521562576293945
    3. ' u' → logprob: -7.1271562576293945
    4. '	u' → logprob: -8.752156257629395
    5. '   ' → logprob: -11.002156257629395
    6. '```' → logprob: -12.377156257629395
    7. '
' → logprob: -13.377156257629395
    8. ',u' → logprob: -14.502156257629395
    9. '(u' → logprob: -14.877156257629395
    10. '_u' → logprob: -14.877156257629395

Token 971: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.10221511870622635
    2. '   ' → logprob: -2.352215051651001
    3. ' u' → logprob: -6.22721529006958
    4. '	u' → logprob: -11.352214813232422
    5. '
' → logprob: -11.477214813232422
    6. ' ' → logprob: -12.602214813232422
    7. '  ' → logprob: -13.102214813232422
    8. 'def' → logprob: -13.602214813232422
    9. '```' → logprob: -14.352214813232422
    10. '#' → logprob: -14.602214813232422

Token 972: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602243334054947
    2. '=' → logprob: -1.9102243185043335
    3. ' ' → logprob: -16.41022491455078
    4. ',' → logprob: -16.66022491455078
    5. '＝' → logprob: -16.91022491455078
    6. ')' → logprob: -19.16022491455078
    7. '   ' → logprob: -19.28522491455078
    8. 'u' → logprob: -19.28522491455078
    9. ' ' → logprob: -19.28522491455078
    10. '=get' → logprob: -19.41022491455078

Token 973: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.0007130279554985464
    2. ' calc' → logprob: -7.250712871551514
    3. '(calc' → logprob: -13.625713348388672
    4. '   ' → logprob: -13.875713348388672
    5. 'cal' → logprob: -14.500713348388672
    6. 'calculate' → logprob: -15.500713348388672
    7. '.calc' → logprob: -15.500713348388672
    8. '_calc' → logprob: -17.000713348388672
    9. ' ' → logprob: -20.000713348388672
    10. '  ' → logprob: -20.125713348388672

Token 974: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -8.895480277715251e-06
    2. 'tree' → logprob: -11.750008583068848
    3. '_long' → logprob: -13.875008583068848
    4. '_' → logprob: -17.250009536743164
    5. '_link' → logprob: -17.250009536743164
    6. ' tree' → logprob: -19.000009536743164
    7. 'Tree' → logprob: -19.125009536743164
    8. '_TREE' → logprob: -19.375009536743164
    9. '_t' → logprob: -19.500009536743164
    10. 'long' → logprob: -19.625009536743164

Token 975: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -3.8889261304575484e-06
    2. 'diam' → logprob: -12.500003814697266
    3. '_distance' → logprob: -16.000003814697266
    4. '(d' → logprob: -18.875003814697266
    5. 'iameter' → logprob: -18.875003814697266
    6. '_' → logprob: -19.000003814697266
    7. 'Diameter' → logprob: -19.125003814697266
    8. '   ' → logprob: -19.125003814697266
    9. '__' → logprob: -19.375003814697266
    10. '_tree' → logprob: -19.625003814697266

Token 976: 'iameter' (ID: 157684)
  Prédit: 'iameter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iameter' → logprob: -0.00010199354437645525
    2. 'iam' → logprob: -9.500102043151855
    3. 'istance' → logprob: -11.250102043151855
    4. 'diam' → logprob: -11.500102043151855
    5. 'iamond' → logprob: -13.750102043151855
    6. ' diameter' → logprob: -14.625102043151855
    7. 'Diameter' → logprob: -14.750102043151855
    8. 'am' → logprob: -15.250102043151855
    9. 'ia' → logprob: -15.250102043151855
    10. '_' → logprob: -15.375102043151855

Token 977: '_get' (ID: 6533)
  Prédit: '_get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_get' → logprob: -0.0021960523445159197
    2. 'get' → logprob: -6.127195835113525
    3. '(link' → logprob: -11.627196311950684
    4. 'Get' → logprob: -13.752196311950684
    5. '_find' → logprob: -15.502196311950684
    6. '(get' → logprob: -15.502196311950684
    7. '_(' → logprob: -16.127195358276367
    8. '   ' → logprob: -16.252195358276367
    9. '```' → logprob: -16.252195358276367
    10. '
' → logprob: -16.627195358276367

Token 978: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -6.034592388459714e-06
    2. 'u' → logprob: -12.125005722045898
    3. '_v' → logprob: -14.625005722045898
    4. '_distance' → logprob: -17.1250057220459
    5. 'distance' → logprob: -17.5000057220459
    6. '(u' → logprob: -18.2500057220459
    7. '_get' → logprob: -18.5000057220459
    8. '[u' → logprob: -19.5000057220459
    9. '_x' → logprob: -20.0000057220459
    10. '_a' → logprob: -20.1250057220459

Token 979: '(link' (ID: 51236)
  Prédit: '(link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(link' → logprob: -1.9361264946837764e-07
    2. 'link' → logprob: -16.625
    3. '(' → logprob: -17.375
    4. ' (' → logprob: -17.75
    5. '(line' → logprob: -19.875
    6. '(
' → logprob: -19.875
    7. '```' → logprob: -19.875
    8. ' link' → logprob: -20.125
    9. '$link' → logprob: -20.25
    10. '   ' → logprob: -20.5

Token 980: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -3.762356209335849e-05
    2. 'link' → logprob: -10.25003719329834
    3. ')' → logprob: -14.00003719329834
    4. ',' → logprob: -14.00003719329834
    5. 'ist' → logprob: -16.250038146972656
    6. '(list' → logprob: -16.500038146972656
    7. '(link' → logprob: -16.500038146972656
    8. '),' → logprob: -16.625038146972656
    9. ')(' → logprob: -16.875038146972656
    10. '(v' → logprob: -17.500038146972656

Token 981: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5048530030981055e-06
    2. '(link' → logprob: -14.000001907348633
    3. ' ,' → logprob: -14.375001907348633
    4. '   ' → logprob: -17.500001907348633
    5. ',
' → logprob: -17.500001907348633
    6. ')' → logprob: -18.125001907348633
    7. 'link' → logprob: -20.125001907348633
    8. ' ' → logprob: -20.625001907348633
    9. ',l' → logprob: -20.750001907348633
    10. ' link' → logprob: -20.875001907348633

Token 982: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00014585316239390522
    2. ' v' → logprob: -9.25014591217041
    3. 'link' → logprob: -10.00014591217041
    4. '   ' → logprob: -13.12514591217041
    5. ')' → logprob: -13.75014591217041
    6. '```' → logprob: -15.12514591217041
    7. ')v' → logprob: -15.75014591217041
    8. ' link' → logprob: -16.000144958496094
    9. 'u' → logprob: -16.000144958496094
    10. '	v' → logprob: -16.250144958496094

Token 983: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03814832493662834
    2. ')
' → logprob: -3.2881484031677246
    3. '   ' → logprob: -9.163147926330566
    4. ')
' → logprob: -13.288147926330566
    5. ' )' → logprob: -16.413148880004883
    6. ')

' → logprob: -16.538148880004883
    7. 'def' → logprob: -16.913148880004883
    8. ')`
' → logprob: -17.038148880004883
    9. ' )
' → logprob: -17.413148880004883
    10. 'v' → logprob: -17.538148880004883

Token 984: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032346327789127827
    2. 'distance' → logprob: -5.87823486328125
    3. '
' → logprob: -8.12823486328125
    4. 'd' → logprob: -9.75323486328125
    5. 'return' → logprob: -10.12823486328125
    6. ' distance' → logprob: -10.50323486328125
    7. ' return' → logprob: -13.00323486328125
    8. '(distance' → logprob: -13.50323486328125
    9. '
' → logprob: -13.75323486328125
    10. 'dist' → logprob: -13.87823486328125

Token 985: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' (adapté à ' distance') → logprob: -0.041112009435892105
    2. 'd' → logprob: -3.541111946105957
    3. 'return' → logprob: -5.166111946105957
    4. '   ' → logprob: -5.916111946105957
    5. 'dist' → logprob: -6.541111946105957
    6. ' distance' → logprob: -6.666111946105957
    7. ' d' → logprob: -10.041111946105957
    8. ' return' → logprob: -10.041111946105957
    9. 'diam' → logprob: -10.041111946105957
    10. '```' → logprob: -11.291111946105957

Token 986: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09567618370056152
    2. ' =' → logprob: -2.5956761837005615
    3. ',' → logprob: -4.095676422119141
    4. ' ,' → logprob: -14.97067642211914
    5. ')' → logprob: -15.09567642211914
    6. '_' → logprob: -15.22067642211914
    7. '=

' → logprob: -15.84567642211914
    8. '=
' → logprob: -16.09567642211914
    9. 's' → logprob: -16.34567642211914
    10. '_,' → logprob: -16.47067642211914

Token 987: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.0024838652461767197
    2. ' calc' → logprob: -6.00248384475708
    3. '(calc' → logprob: -11.752484321594238
    4. '.calc' → logprob: -15.502484321594238
    5. '_calc' → logprob: -16.752483367919922
    6. '   ' → logprob: -17.502483367919922
    7. 'cal' → logprob: -19.377483367919922
    8. 'calculate' → logprob: -20.627483367919922
    9. ' ' → logprob: -22.127483367919922
    10. 'Calc' → logprob: -23.627483367919922

Token 988: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -1.0280383548888494e-06
    2. 'tree' → logprob: -14.125000953674316
    3. '_long' → logprob: -15.125000953674316
    4. '_' → logprob: -17.000001907348633
    5. '_t' → logprob: -19.000001907348633
    6. '_
' → logprob: -19.125001907348633
    7. '```' → logprob: -19.625001907348633
    8. '
' → logprob: -19.750001907348633
    9. 'Tree' → logprob: -19.875001907348633
    10. ' tree' → logprob: -20.250001907348633

Token 989: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.0002398938377154991
    2. 'diam' → logprob: -8.500240325927734
    3. '_distance' → logprob: -10.250240325927734
    4. 'iameter' → logprob: -15.000240325927734
    5. 'distance' → logprob: -15.125240325927734
    6. 'Diameter' → logprob: -15.875240325927734
    7. ' diameter' → logprob: -16.125240325927734
    8. 'd' → logprob: -16.875240325927734
    9. '   ' → logprob: -17.250240325927734
    10. '_di' → logprob: -17.875240325927734

Token 990: 'iameter' (ID: 157684)
  Prédit: 'iameter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iameter' → logprob: -0.005213716998696327
    2. 'istance' → logprob: -5.505213737487793
    3. 'iam' → logprob: -7.130213737487793
    4. 'diam' → logprob: -8.380213737487793
    5. 'iamond' → logprob: -10.755213737487793
    6. 'tree' → logprob: -11.130213737487793
    7. 'ist' → logprob: -11.130213737487793
    8. 'am' → logprob: -11.255213737487793
    9. 'distance' → logprob: -11.755213737487793
    10. '_distance' → logprob: -12.380213737487793

Token 991: '_get' (ID: 6533)
  Prédit: '_get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_get' → logprob: -3.531315314830863e-06
    2. 'get' → logprob: -13.125003814697266
    3. '_distance' → logprob: -14.250003814697266
    4. 'distance' → logprob: -14.875003814697266
    5. '(get' → logprob: -15.625003814697266
    6. '   ' → logprob: -15.750003814697266
    7. '```' → logprob: -17.250003814697266
    8. '(distance' → logprob: -17.500003814697266
    9. '_GET' → logprob: -17.500003814697266
    10. '_Get' → logprob: -17.500003814697266

Token 992: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.014171851798892021
    2. 'distance' → logprob: -4.264172077178955
    3. 'Distance' → logprob: -12.139171600341797
    4. ' distance' → logprob: -13.014171600341797
    5. '(distance' → logprob: -15.889171600341797
    6. '```' → logprob: -15.889171600341797
    7. 'get' → logprob: -16.139171600341797
    8. '
' → logprob: -16.264171600341797
    9. 'u' → logprob: -16.514171600341797
    10. '_DISTANCE' → logprob: -16.639171600341797

Token 993: '(link' (ID: 51236)
  Prédit: '(link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(link' → logprob: -7.896309739408025e-07
    2. 'link' → logprob: -14.250000953674316
    3. '```' → logprob: -17.25
    4. '$link' → logprob: -18.0
    5. '<link' → logprob: -19.125
    6. '(
' → logprob: -19.25
    7. '	link' → logprob: -19.75
    8. '(' → logprob: -19.875
    9. '   ' → logprob: -20.0
    10. ' link' → logprob: -20.625

Token 994: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -3.2020991056924686e-05
    2. 'link' → logprob: -10.375032424926758
    3. 'ist' → logprob: -14.500032424926758
    4. '(list' → logprob: -16.750032424926758
    5. '(link' → logprob: -17.000032424926758
    6. '(' → logprob: -17.875032424926758
    7. ')' → logprob: -18.000032424926758
    8. ' list' → logprob: -18.000032424926758
    9. ',' → logprob: -18.125032424926758
    10. 'll' → logprob: -18.250032424926758

Token 995: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20167869329452515
    2. '(link' → logprob: -1.70167875289917
    3. ')' → logprob: -8.701678276062012
    4. ',
' → logprob: -10.201678276062012
    5. '```' → logprob: -10.576678276062012
    6. '   ' → logprob: -11.201678276062012
    7. '
' → logprob: -11.576678276062012
    8. 'link' → logprob: -12.201678276062012
    9. '(
' → logprob: -13.326678276062012
    10. ')
' → logprob: -13.326678276062012

Token 996: ' u' (ID: 337)
  Prédit: 'link'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'link' → logprob: -0.0015084355836734176
    2. ' link' → logprob: -6.5015082359313965
    3. '   ' → logprob: -12.126508712768555
    4. '(link' → logprob: -15.251508712768555
    5. '	link' → logprob: -15.751508712768555
    6. 'u' → logprob: -16.376508712768555
    7. ' ' → logprob: -16.751508712768555
    8. '
' → logprob: -16.751508712768555
    9. '```' → logprob: -17.126508712768555
    10. '  ' → logprob: -17.501508712768555

Token 997: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011822503292933106
    2. ')' → logprob: -6.8761820793151855
    3. '(link' → logprob: -9.251182556152344
    4. '   ' → logprob: -10.251182556152344
    5. ')
' → logprob: -11.126182556152344
    6. ',
' → logprob: -13.126182556152344
    7. ' ,' → logprob: -14.626182556152344
    8. '```' → logprob: -15.501182556152344
    9. ' ' → logprob: -15.751182556152344
    10. '  ' → logprob: -15.876182556152344

Token 998: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005307873710989952
    2. ' return' → logprob: -5.505307674407959
    3. 'return' → logprob: -7.380307674407959
    4. '	return' → logprob: -7.630307674407959
    5. '
' → logprob: -9.380308151245117
    6. ':return' → logprob: -10.880308151245117
    7. '```' → logprob: -12.130308151245117
    8. '{return' → logprob: -13.130308151245117
    9. ')' → logprob: -13.130308151245117
    10. '<|end|>' → logprob: -13.255308151245117

Token 999: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10644818842411041
    2. '   ' → logprob: -2.606448173522949
    3. ' return' → logprob: -3.606448173522949
    4. '
' → logprob: -10.35644817352295
    5. '	return' → logprob: -13.10644817352295
    6. ' ' → logprob: -16.481449127197266
    7. 'eturn' → logprob: -17.481449127197266
    8. '```' → logprob: -17.481449127197266
    9. '  ' → logprob: -17.981449127197266
    10. '_return' → logprob: -18.231449127197266

Token 1000: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.0024756586644798517
    2. ' distance' → logprob: -6.002475738525391
    3. '   ' → logprob: -17.25247573852539
    4. '(distance' → logprob: -17.87747573852539
    5. '_distance' → logprob: -22.87747573852539
    6. 'dist' → logprob: -22.87747573852539
    7. ' ' → logprob: -23.25247573852539
    8. 'int' → logprob: -23.87747573852539
    9. ' ' → logprob: -24.00247573852539
    10. 'Distance' → logprob: -24.12747573852539

Token 1001: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4976978898048401
    2. '#' → logprob: -1.2476978302001953
    3. '<|end|>' → logprob: -2.7476978302001953
    4. 'mod' → logprob: -3.7476978302001953
    5. '
' → logprob: -4.872697830200195
    6. 'if' → logprob: -5.747697830200195
    7. '<|end|>' → logprob: -6.247697830200195
    8. 'n' → logprob: -6.622697830200195
    9. '```' → logprob: -6.997697830200195
    10. 'u' → logprob: -7.997697830200195

Token 1002: 'def' (ID: 1314)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.2911573350429535
    2. '<|end|>' → logprob: -1.6661573648452759
    3. 'def' → logprob: -3.1661572456359863
    4. '#' → logprob: -4.416157245635986
    5. '
' → logprob: -5.166157245635986
    6. '```' → logprob: -6.541157245635986
    7. ' mod' → logprob: -7.416157245635986
    8. 'global' → logprob: -7.791157245635986
    9. ')' → logprob: -8.416157722473145
    10. '[' → logprob: -9.041157722473145

Token 1003: ' decide' (ID: 13001)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.6492018699645996
    2. ' main' → logprob: -0.7742018699645996
    3. ' solve' → logprob: -5.5242018699646
    4. 'solve' → logprob: -5.5242018699646
    5. 'int' → logprob: -6.0242018699646
    6. '__' → logprob: -6.1492018699646
    7. 'calc' → logprob: -7.1492018699646
    8. 'read' → logprob: -7.1492018699646
    9. ' calc' → logprob: -8.024202346801758
    10. 'input' → logprob: -8.149202346801758

Token 1004: '_w' (ID: 3567)
  Prédit: '_distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_distance' → logprob: -2.2936041355133057
    2. '(' → logprob: -2.4186041355133057
    3. '_link' → logprob: -2.4186041355133057
    4. '_tree' → logprob: -2.4186041355133057
    5. '_cut' → logprob: -2.7936041355133057
    6. '_max' → logprob: -3.0436041355133057
    7. '(tree' → logprob: -3.2936041355133057
    8. '_path' → logprob: -3.4186041355133057
    9. '_color' → logprob: -3.6686041355133057
    10. '(link' → logprob: -3.9186041355133057

Token 1005: 'inner' (ID: 6484)
  Prédit: 'inner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inner' → logprob: -0.3094444274902344
    2. 'eight' → logprob: -2.3094444274902344
    3. 'e' → logprob: -3.3094444274902344
    4. 'idth' → logprob: -3.8094444274902344
    5. 'ait' → logprob: -4.309444427490234
    6. 'inners' → logprob: -4.809444427490234
    7. 'ay' → logprob: -4.934444427490234
    8. 'inning' → logprob: -5.184444427490234
    9. 'orst' → logprob: -5.309444427490234
    10. 'in' → logprob: -5.434444427490234

Token 1006: '(d' (ID: 2572)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.7029014229774475
    2. '(link' → logprob: -1.7029013633728027
    3. '(s' → logprob: -2.7029013633728027
    4. '(n' → logprob: -3.0779013633728027
    5. '(' → logprob: -3.2029013633728027
    6. '(player' → logprob: -3.8279013633728027
    7. '(lst' → logprob: -3.9529013633728027
    8. '(l' → logprob: -4.327901363372803
    9. '(input' → logprob: -4.452901363372803
    10. '(a' → logprob: -4.577901363372803

Token 1007: 'iameter' (ID: 157684)
  Prédit: 'istance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'istance' → logprob: -0.31133759021759033
    2. 'ef' → logprob: -1.5613375902175903
    3. '(distance' → logprob: -3.436337471008301
    4. 'ist' → logprob: -5.311337471008301
    5. 'e' → logprob: -6.436337471008301
    6. '(link' → logprob: -6.811337471008301
    7. ')' → logprob: -6.936337471008301
    8. 'ict' → logprob: -6.936337471008301
    9. '(' → logprob: -6.936337471008301
    10. '_code' → logprob: -7.061337471008301

Token 1008: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7562946081161499
    2. '):' → logprob: -1.13129460811615
    3. ',' → logprob: -1.75629460811615
    4. ')' → logprob: -4.0062947273254395
    5. '(link' → logprob: -4.7562947273254395
    6. '):
' → logprob: -5.6312947273254395
    7. '   ' → logprob: -7.3812947273254395
    8. '_,' → logprob: -7.5062947273254395
    9. '_d' → logprob: -7.8812947273254395
    10. '_list' → logprob: -8.131294250488281

Token 1009: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00809972733259201
    2. 'return' → logprob: -5.133099555969238
    3. 'if' → logprob: -6.258099555969238
    4. ' if' → logprob: -9.008099555969238
    5. ' return' → logprob: -9.133099555969238
    6. 'def' → logprob: -11.383099555969238
    7. '
' → logprob: -12.508099555969238
    8. '	return' → logprob: -12.508099555969238
    9. '```' → logprob: -13.133099555969238
    10. '	if' → logprob: -14.383099555969238

Token 1010: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3869163691997528
    2. 'if' (adapté à ' if') → logprob: -1.1369163990020752
    3. 'def' → logprob: -10.636916160583496
    4. '#' → logprob: -11.261916160583496
    5. 'print' → logprob: -12.511916160583496
    6. '   ' → logprob: -13.011916160583496
    7. ' return' → logprob: -13.386916160583496
    8. ' if' → logprob: -14.761916160583496
    9. '```' → logprob: -15.511916160583496
    10. '
' → logprob: -16.386917114257812

Token 1011: ' diameter' (ID: 32514)
  Prédit: 'diam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diam' → logprob: -0.026508815586566925
    2. ' diameter' → logprob: -3.6515088081359863
    3. '(d' → logprob: -8.526509284973145
    4. '   ' → logprob: -12.651509284973145
    5. ' (' → logprob: -12.651509284973145
    6. ' ' → logprob: -14.026509284973145
    7. 'di' → logprob: -14.026509284973145
    8. ' diam' → logprob: -14.276509284973145
    9. 'd' → logprob: -14.401509284973145
    10. 'diamond' → logprob: -15.276509284973145

Token 1012: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6341120004653931
    2. '%' → logprob: -0.7591120004653931
    3. '<=' → logprob: -7.7591118812561035
    4. '<' → logprob: -8.009112358093262
    5. '==' → logprob: -8.759112358093262
    6. '>=' → logprob: -8.884112358093262
    7. ' <=' → logprob: -9.009112358093262
    8. ' <' → logprob: -9.009112358093262
    9. ' ' → logprob: -9.759112358093262
    10. '>' → logprob: -10.009112358093262

Token 1013: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00024631983251310885
    2. ' ' → logprob: -8.375246047973633
    3. '```' → logprob: -11.500246047973633
    4. '3' → logprob: -12.500246047973633
    5. '4' → logprob: -14.500246047973633
    6. 'def' → logprob: -14.750246047973633
    7. '
' → logprob: -14.750246047973633
    8. '==' → logprob: -15.375246047973633
    9. '=' → logprob: -15.500246047973633
    10. '``' → logprob: -17.500246047973633

Token 1014: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.7994282795116305e-05
    2. '3' → logprob: -10.12504768371582
    3. '4' → logprob: -12.37504768371582
    4. '```' → logprob: -13.25004768371582
    5. ' ' → logprob: -14.50004768371582
    6. '   ' → logprob: -15.12504768371582
    7. '7' → logprob: -15.37504768371582
    8. '=' → logprob: -16.06254768371582
    9. '``' → logprob: -16.18754768371582
    10. '
' → logprob: -16.87504768371582

Token 1015: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.018233880400657654
    2. ' ==' → logprob: -4.018233776092529
    3. '```' → logprob: -10.268234252929688
    4. '()==' → logprob: -10.518234252929688
    5. '!=' → logprob: -12.143234252929688
    6. '=' → logprob: -12.393234252929688
    7. '==
' → logprob: -12.518234252929688
    8. '===' → logprob: -13.268234252929688
    9. 'in' → logprob: -13.393234252929688
    10. '()' → logprob: -13.518234252929688

Token 1016: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6212551593780518
    2. '0' → logprob: -0.9962551593780518
    3. '2' → logprob: -2.3712551593780518
    4. '
' → logprob: -10.246254920959473
    5. ' ' → logprob: -10.371254920959473
    6. '```' → logprob: -10.371254920959473
    7. '

' → logprob: -12.996254920959473
    8. '==' → logprob: -13.246254920959473
    9. '=' → logprob: -13.871254920959473
    10. '``' → logprob: -13.996254920959473

Token 1017: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3651558756828308
    2. '2' → logprob: -1.2401559352874756
    3. '1' → logprob: -4.1151556968688965
    4. ' ' → logprob: -8.615156173706055
    5. '
' → logprob: -9.740156173706055
    6. '```' → logprob: -12.115156173706055
    7. '=' → logprob: -14.490156173706055
    8. '   ' → logprob: -15.052656173706055
    9. '_' → logprob: -15.052656173706055
    10. 'int' → logprob: -15.240156173706055

Token 1018: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.018670979887247086
    2. ':' → logprob: -4.143671035766602
    3. '==' → logprob: -6.268671035766602
    4. '   ' → logprob: -7.768671035766602
    5. ' ==' → logprob: -8.518671035766602
    6. ':return' → logprob: -9.518671035766602
    7. ' :
' → logprob: -10.893671035766602
    8. ' or' → logprob: -12.268671035766602
    9. ' and' → logprob: -12.393671035766602
    10. '):
' → logprob: -13.018671035766602

Token 1019: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06875056773424149
    2. ':' → logprob: -3.8187506198883057
    3. '   ' → logprob: -3.9437506198883057
    4. ':
' → logprob: -4.818750381469727
    5. 'return' → logprob: -4.943750381469727
    6. ':return' → logprob: -5.443750381469727
    7. '	return' → logprob: -6.068750381469727
    8. ' return' → logprob: -6.193750381469727
    9. '	' → logprob: -7.443750381469727
    10. ',' → logprob: -9.443750381469727

Token 1020: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.14109766483306885
    2. '   ' → logprob: -2.2660975456237793
    3. '       ' → logprob: -4.016097545623779
    4. ' return' → logprob: -4.766097545623779
    5. 'print' → logprob: -6.891097545623779
    6. '           ' → logprob: -8.641098022460938
    7. '	return' → logprob: -9.141098022460938
    8. ' ' → logprob: -10.891098022460938
    9. '#' → logprob: -12.891098022460938
    10. 'result' → logprob: -12.891098022460938

Token 1021: ' '' (ID: 461)
  Prédit: '"A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"A' → logprob: -0.7840473055839539
    2. '"' → logprob: -0.9090473055839539
    3. ''A' → logprob: -2.2840473651885986
    4. '"B' → logprob: -4.2840471267700195
    5. '"T' → logprob: -4.5340471267700195
    6. ''' → logprob: -4.9090471267700195
    7. '"C' → logprob: -5.9090471267700195
    8. '"D' → logprob: -6.6590471267700195
    9. '"M' → logprob: -7.2840471267700195
    10. '"S' → logprob: -7.6590471267700195

Token 1022: 'Second' (ID: 17422)
  Prédit: 'Second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Second' → logprob: -0.9571515917778015
    2. ''' → logprob: -1.5821516513824463
    3. 'First' → logprob: -1.9571516513824463
    4. '"' → logprob: -2.3321516513824463
    5. 'Alice' → logprob: -2.4571516513824463
    6. 'Bob' → logprob: -3.0821516513824463
    7. 'Sn' → logprob: -4.832151412963867
    8. 'F' → logprob: -5.082151412963867
    9. ''A' → logprob: -5.332151412963867
    10. 'T' → logprob: -5.457151412963867

Token 1023: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07334133237600327
    2. ''
' → logprob: -2.8233413696289062
    3. 'Player' → logprob: -4.573341369628906
    4. ' Player' → logprob: -7.323341369628906
    5. '\n' → logprob: -8.823341369628906
    6. '"' → logprob: -9.948341369628906
    7. ''
' → logprob: -10.073341369628906
    8. ' player' → logprob: -11.198341369628906
    9. ''

' → logprob: -11.448341369628906
    10. ' '' → logprob: -11.573341369628906

Token 1024: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1412445604801178
    2. 'elif' → logprob: -2.141244649887085
    3. 'else' → logprob: -4.891244411468506
    4. ' elif' → logprob: -5.641244411468506
    5. ' else' → logprob: -6.391244411468506
    6. 'if' → logprob: -7.016244411468506
    7. '	elif' → logprob: -8.516244888305664
    8. ' if' → logprob: -9.141244888305664
    9. '    
' → logprob: -9.766244888305664
    10. 'return' → logprob: -10.016244888305664

Token 1025: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09857065975666046
    2. 'else' (adapté à ' else') → logprob: -2.7235705852508545
    3. 'elif' → logprob: -3.9735705852508545
    4. 'return' → logprob: -5.473570823669434
    5. ' else' → logprob: -6.098570823669434
    6. 'if' → logprob: -6.223570823669434
    7. ' elif' → logprob: -8.098570823669434
    8. '	return' → logprob: -8.473570823669434
    9. ' return' → logprob: -8.973570823669434
    10. '	else' → logprob: -9.223570823669434

Token 1026: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6705518960952759
    2. ':' → logprob: -1.4205518960952759
    3. '   ' → logprob: -1.6705518960952759
    4. ':
' → logprob: -2.9205517768859863
    5. ' return' → logprob: -6.545551776885986
    6. 'return' → logprob: -7.420551776885986
    7. ':return' → logprob: -7.420551776885986
    8. '  ' → logprob: -7.545551776885986
    9. '      ' → logprob: -8.045552253723145
    10. '<|end|>' → logprob: -8.045552253723145

Token 1027: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8437644839286804
    2. 'return' → logprob: -0.9687644839286804
    3. ' return' → logprob: -2.093764543533325
    4. '   ' → logprob: -2.718764543533325
    5. '	return' → logprob: -6.843764305114746
    6. ' ' → logprob: -10.593764305114746
    7. ':return' → logprob: -10.593764305114746
    8. '    ' → logprob: -10.718764305114746
    9. '	' → logprob: -11.968764305114746
    10. '  ' → logprob: -12.093764305114746

Token 1028: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0015827087918296456
    2. ' return' → logprob: -6.751582622528076
    3. '       ' → logprob: -8.001583099365234
    4. '   ' → logprob: -9.501583099365234
    5. ''' → logprob: -13.751583099365234
    6. '	return' → logprob: -14.126583099365234
    7. '
' → logprob: -15.126583099365234
    8. ' ' → logprob: -15.876583099365234
    9. 'eturn' → logprob: -15.876583099365234
    10. '{return' → logprob: -16.501583099365234

Token 1029: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -8.923874702304602e-05
    2. ' '' → logprob: -9.625089645385742
    3. '"' → logprob: -11.000089645385742
    4. 'First' → logprob: -13.750089645385742
    5. '  ' → logprob: -14.000089645385742
    6. ' ' → logprob: -14.125089645385742
    7. '   ' → logprob: -14.250089645385742
    8. '
' → logprob: -14.375089645385742
    9. '['' → logprob: -15.000089645385742
    10. '`' → logprob: -15.000089645385742

Token 1030: 'First' (ID: 7127)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3869397044181824
    2. 'First' → logprob: -1.1369397640228271
    3. '"' → logprob: -9.761940002441406
    4. ' First' → logprob: -13.011940002441406
    5. 'first' → logprob: -13.136940002441406
    6. '''' → logprob: -13.636940002441406
    7. ''.' → logprob: -13.886940002441406
    8. 'Alice' → logprob: -14.386940002441406
    9. 'Second' → logprob: -14.636940002441406
    10. ''\' → logprob: -14.761940002441406

Token 1031: ''

' (ID: 7497)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0002811199810821563
    2. '')' → logprob: -8.50028133392334
    3. ')'' → logprob: -10.12528133392334
    4. ')' → logprob: -11.12528133392334
    5. '<|end|>' → logprob: -11.62528133392334
    6. 'def' → logprob: -12.50028133392334
    7. '"' → logprob: -12.50028133392334
    8. '```' → logprob: -12.87528133392334
    9. ''
' → logprob: -13.75028133392334
    10. ''''' → logprob: -14.25028133392334

Token 1032: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.704273118884885e-07
    2. 'if' → logprob: -14.875000953674316
    3. 'mod' → logprob: -15.625000953674316
    4. 'from' → logprob: -17.0
    5. '#' → logprob: -17.5
    6. 'n' → logprob: -18.5
    7. '```' → logprob: -18.875
    8. 'import' → logprob: -19.125
    9. ' def' → logprob: -19.375
    10. 'd' → logprob: -20.25

Token 1033: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.37337344884872437
    2. 'def' → logprob: -1.8733735084533691
    3. 'main' → logprob: -1.8733735084533691
    4. ' def' → logprob: -5.623373508453369
    5. ' solve' → logprob: -7.498373508453369
    6. 'solve' → logprob: -8.498373031616211
    7. '__' → logprob: -12.248373031616211
    8. ' solution' → logprob: -13.373373031616211
    9. 'resolve' → logprob: -13.623373031616211
    10. ' process' → logprob: -14.248373031616211

Token 1034: '_get' (ID: 6533)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.003180094063282013
    2. '():
' → logprob: -5.753180027008057
    3. ' ():' → logprob: -13.128180503845215
    4. '():
' → logprob: -15.003180503845215
    5. '()' → logprob: -16.5031795501709
    6. '():

' → logprob: -17.8781795501709
    7. '_' → logprob: -19.7531795501709
    8. 'def' → logprob: -20.5031795501709
    9. '(' → logprob: -20.8781795501709
    10. ':' → logprob: -21.5031795501709

Token 1035: '_n' (ID: 2170)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.11902856826782227
    2. '():
' → logprob: -3.2440285682678223
    3. '()' → logprob: -3.6190285682678223
    4. '_input' → logprob: -3.7440285682678223
    5. 'input' → logprob: -4.619028568267822
    6. 'def' → logprob: -5.119028568267822
    7. '_' → logprob: -6.494028568267822
    8. '_d' → logprob: -6.744028568267822
    9. 'int' → logprob: -7.369028568267822
    10. '_result' → logprob: -7.744028568267822

Token 1036: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.1459464579820633
    2. '()' → logprob: -2.020946502685547
    3. '():
' → logprob: -5.770946502685547
    4. 'um' → logprob: -10.020946502685547
    5. 'ext' → logprob: -10.520946502685547
    6. 'umber' → logprob: -10.770946502685547
    7. '()
' → logprob: -11.270946502685547
    8. '_' → logprob: -11.520946502685547
    9. ' ()' → logprob: -12.395946502685547
    10. 'def' → logprob: -12.770946502685547

Token 1037: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018006040481850505
    2. ' return' → logprob: -6.751800537109375
    3. 'return' → logprob: -7.376800537109375
    4. '	return' → logprob: -12.876800537109375
    5. '
' → logprob: -14.251800537109375
    6. '    ' → logprob: -14.876800537109375
    7. '   ' → logprob: -15.001800537109375
    8. '```' → logprob: -15.751800537109375
    9. 'input' → logprob: -16.001800537109375
    10. '    
' → logprob: -16.126800537109375

Token 1038: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00630522333085537
    2. ' return' → logprob: -5.38130521774292
    3. '   ' → logprob: -6.50630521774292
    4. 'input' → logprob: -9.381305694580078
    5. 'int' → logprob: -9.631305694580078
    6. 'n' → logprob: -10.256305694580078
    7. 'try' → logprob: -12.881305694580078
    8. '	return' → logprob: -15.256305694580078
    9. ' input' → logprob: -15.256305694580078
    10. 's' → logprob: -15.381305694580078

Token 1039: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0021860685665160418
    2. ' int' → logprob: -6.127186298370361
    3. '   ' → logprob: -15.127185821533203
    4. ' ' → logprob: -15.377185821533203
    5. 'convert' → logprob: -16.127185821533203
    6. '  ' → logprob: -16.502185821533203
    7. '(int' → logprob: -16.877185821533203
    8. '
' → logprob: -17.002185821533203
    9. '	int' → logprob: -17.127185821533203
    10. 'ints' → logprob: -17.502185821533203

Token 1040: 'in' (ID: 258)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00875177327543497
    2. '(read' → logprob: -5.25875186920166
    3. 'in' → logprob: -6.50875186920166
    4. '(input' → logprob: -6.75875186920166
    5. '(in' → logprob: -8.25875186920166
    6. 'read' → logprob: -8.38375186920166
    7. '(' → logprob: -9.38375186920166
    8. '().' → logprob: -9.50875186920166
    9. 'input' → logprob: -9.75875186920166
    10. '();' → logprob: -10.00875186920166

Token 1041: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -7.064297824399546e-05
    2. '()
' → logprob: -10.500070571899414
    3. '<|end|>' → logprob: -11.500070571899414
    4. '()<' → logprob: -12.000070571899414
    5. '()(' → logprob: -12.125070571899414
    6. '(' → logprob: -12.250070571899414
    7. '()]' → logprob: -13.000070571899414
    8. ' ()' → logprob: -13.125070571899414
    9. '()\' → logprob: -13.125070571899414
    10. '();' → logprob: -13.250070571899414

Token 1042: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.4736459888808895e-05
    2. '```' → logprob: -11.750014305114746
    3. '<|end|>' → logprob: -12.375014305114746
    4. '
' → logprob: -14.000014305114746
    5. 'mod' → logprob: -14.500014305114746
    6. ' def' → logprob: -15.250014305114746
    7. 'n' → logprob: -15.375014305114746
    8. '\' → logprob: -15.500014305114746
    9. '#' → logprob: -16.000015258789062
    10. '``' → logprob: -16.625015258789062

Token 1043: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.007419321686029434
    2. 'int' → logprob: -5.132419109344482
    3. 'def' → logprob: -6.632419109344482
    4. ' main' → logprob: -8.88241958618164
    5. '_main' → logprob: -11.25741958618164
    6. '	main' → logprob: -12.25741958618164
    7. 'read' → logprob: -12.88241958618164
    8. 'solve' → logprob: -13.00741958618164
    9. '
' → logprob: -13.25741958618164
    10. 'run' → logprob: -13.50741958618164

Token 1044: '_get' (ID: 6533)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.11466077715158463
    2. '_' → logprob: -2.6146607398986816
    3. '():
' → logprob: -3.3646607398986816
    4. '_get' → logprob: -7.989660739898682
    5. '()' → logprob: -8.98966121673584
    6. 'def' → logprob: -9.73966121673584
    7. ' ():' → logprob: -10.61466121673584
    8. '():
' → logprob: -11.98966121673584
    9. '_def' → logprob: -13.11466121673584
    10. '_main' → logprob: -13.23966121673584

Token 1045: '_ab' (ID: 53632)
  Prédit: '_n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_n' → logprob: -1.3157782554626465
    2. '_xy' → logprob: -1.5657782554626465
    3. 'a' → logprob: -1.8157782554626465
    4. '_a' → logprob: -2.4407782554626465
    5. '_m' → logprob: -2.6907782554626465
    6. 'xy' → logprob: -3.1907782554626465
    7. '_edges' → logprob: -3.4407782554626465
    8. 'm' → logprob: -3.4407782554626465
    9. 'n' → logprob: -3.8157782554626465
    10. '_x' → logprob: -4.4407782554626465

Token 1046: 'list' (ID: 2641)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.023819411173462868
    2. '():' → logprob: -3.7738194465637207
    3. '():
' → logprob: -9.023818969726562
    4. 'stract' → logprob: -9.148818969726562
    5. 'def' → logprob: -9.273818969726562
    6. 'a' → logprob: -9.398818969726562
    7. '()>' → logprob: -10.648818969726562
    8. '()<' → logprob: -10.898818969726562
    9. '()
' → logprob: -11.023818969726562
    10. '()=>' → logprob: -11.023818969726562

Token 1047: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.09152709692716599
    2. '():
' → logprob: -2.591526985168457
    3. '()' → logprob: -4.466526985168457
    4. '(count' → logprob: -7.216526985168457
    5. 'def' → logprob: -8.716526985168457
    6. '(n' → logprob: -9.716526985168457
    7. '):' → logprob: -10.716526985168457
    8. '():

' → logprob: -11.716526985168457
    9. ' ():' → logprob: -11.966526985168457
    10. '()>' → logprob: -12.091526985168457

Token 1048: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9168415665626526
    2. '():' → logprob: -1.5418415069580078
    3. '()' → logprob: -1.7918415069580078
    4. '():
' → logprob: -2.166841506958008
    5. '):
' → logprob: -2.416841506958008
    6. '(n' → logprob: -4.416841506958008
    7. '()):
' → logprob: -6.291841506958008
    8. ')' → logprob: -7.041841506958008
    9. '(' → logprob: -8.041841506958008
    10. 'def' → logprob: -8.291841506958008

Token 1049: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011158415116369724
    2. 'return' → logprob: -4.511158466339111
    3. ' return' → logprob: -9.386157989501953
    4. 'def' → logprob: -10.636157989501953
    5. 'n' → logprob: -13.636157989501953
    6. '	return' → logprob: -14.011157989501953
    7. '
' → logprob: -15.261157989501953
    8. '```' → logprob: -15.886157989501953
    9. '[' → logprob: -16.761157989501953
    10. '       ' → logprob: -17.261157989501953

Token 1050: ' return' (ID: 622)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.5554911494255066
    2. 'return' (adapté à ' return') → logprob: -0.9304911494255066
    3. '   ' → logprob: -3.8054912090301514
    4. 'int' → logprob: -4.805490970611572
    5. '[' → logprob: -6.930490970611572
    6. 'def' → logprob: -8.80549144744873
    7. '[Int' → logprob: -9.18049144744873
    8. ' return' → logprob: -9.43049144744873
    9. '[n' → logprob: -10.30549144744873
    10. '[
' → logprob: -11.18049144744873

Token 1051: ' int' (ID: 677)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.4764888286590576
    2. 'int' → logprob: -0.9764888286590576
    3. '[(' → logprob: -6.351489067077637
    4. '[' → logprob: -7.351489067077637
    5. '[[' → logprob: -11.851489067077637
    6. '[
' → logprob: -12.851489067077637
    7. '(int' → logprob: -12.851489067077637
    8. '[Int' → logprob: -12.976489067077637
    9. '[((' → logprob: -13.101489067077637
    10. ' int' → logprob: -13.726489067077637

Token 1052: 'in' (ID: 258)
  Prédit: 'ina'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ina' → logprob: -0.0203063003718853
    2. 'in' → logprob: -4.02030611038208
    3. 'inal' → logprob: -6.14530611038208
    4. 'na' → logprob: -12.270306587219238
    5. 'l' → logprob: -13.020306587219238
    6. 'al' → logprob: -13.645306587219238
    7. 'a' → logprob: -14.395306587219238
    8. 'n' → logprob: -14.770306587219238
    9. '(' → logprob: -15.020306587219238
    10. 'ain' → logprob: -15.395306587219238

Token 1053: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.006829983089119196
    2. '()' → logprob: -5.006830215454102
    3. 'n' → logprob: -9.881830215454102
    4. 'a' → logprob: -9.881830215454102
    5. '(' → logprob: -12.756830215454102
    6. '()[' → logprob: -12.881830215454102
    7. '(n' → logprob: -13.506830215454102
    8. 's' → logprob: -13.756830215454102
    9. '()]' → logprob: -14.131830215454102
    10. '().' → logprob: -14.256830215454102

Token 1054: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.008129963040119e-06
    2. '(' → logprob: -12.875003814697266
    3. 'n' → logprob: -13.500003814697266
    4. '((' → logprob: -17.000003814697266
    5. ' (' → logprob: -18.500003814697266
    6. '   ' → logprob: -19.125003814697266
    7. '(
' → logprob: -19.250003814697266
    8. '	n' → logprob: -19.500003814697266
    9. ' n' → logprob: -19.875003814697266
    10. '(int' → logprob: -20.375003814697266

Token 1055: '-' (ID: 12)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005965200834907591
    2. '())' → logprob: -7.500596523284912
    3. ')' → logprob: -10.625596046447754
    4. '()
' → logprob: -11.500596046447754
    5. '()]' → logprob: -12.875596046447754
    6. '<|end|>' → logprob: -13.375596046447754
    7. '()}' → logprob: -13.875596046447754
    8. '();)' → logprob: -14.000596046447754
    9. '()<' → logprob: -14.500596046447754
    10. '()>' → logprob: -14.875596046447754

Token 1056: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004490057937800884
    2. '()' → logprob: -6.379489898681641
    3. '(' → logprob: -6.879489898681641
    4. '2' → logprob: -7.004489898681641
    5. '())' → logprob: -7.254489898681641
    6. ')' → logprob: -9.00448989868164
    7. '0' → logprob: -12.12948989868164
    8. 'def' → logprob: -13.25448989868164
    9. '()>' → logprob: -13.50448989868164
    10. '();)' → logprob: -13.50448989868164

Token 1057: ')

' (ID: 1029)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1647718995809555
    2. ')' → logprob: -1.9147719144821167
    3. '())' → logprob: -5.414772033691406
    4. '()
' → logprob: -10.164772033691406
    5. 'def' → logprob: -10.914772033691406
    6. '<|end|>' → logprob: -11.414772033691406
    7. '()]' → logprob: -12.664772033691406
    8. '();)' → logprob: -12.789772033691406
    9. '()[' → logprob: -13.164772033691406
    10. '```' → logprob: -13.789772033691406

Token 1058: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003992104611825198
    2. '
' → logprob: -8.000399589538574
    3. '<|end|>' → logprob: -10.375399589538574
    4. '```' → logprob: -10.625399589538574
    5. '<|end|>' → logprob: -13.500399589538574
    6. ')' → logprob: -14.000399589538574
    7. '#' → logprob: -14.000399589538574
    8. '(
' → logprob: -14.125399589538574
    9. '``' → logprob: -14.250399589538574
    10. '(def' → logprob: -14.250399589538574

Token 1059: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.25899818539619446
    2. 'def' → logprob: -1.508998155593872
    3. ' main' → logprob: -5.008998394012451
    4. ' def' → logprob: -8.758997917175293
    5. '
' → logprob: -9.133997917175293
    6. 'int' → logprob: -10.133997917175293
    7. '_main' → logprob: -10.758997917175293
    8. 'if' → logprob: -12.008997917175293
    9. '	main' → logprob: -12.258997917175293
    10. '(main' → logprob: -12.508997917175293

Token 1060: '_make' (ID: 70070)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.20173217356204987
    2. '():
' → logprob: -1.7017321586608887
    3. 'def' → logprob: -8.201732635498047
    4. '()' → logprob: -10.951732635498047
    5. '():
' → logprob: -11.201732635498047
    6. '():

' → logprob: -12.201732635498047
    7. ' ():' → logprob: -12.576732635498047
    8. '(n' → logprob: -13.201732635498047
    9. '_' → logprob: -13.326732635498047
    10. '_get' → logprob: -14.326732635498047

Token 1061: '_link' (ID: 16227)
  Prédit: '_link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_link' → logprob: -0.18215039372444153
    2. 'link' → logprob: -1.8071503639221191
    3. '_ab' → logprob: -7.057150363922119
    4. 'def' → logprob: -7.682150363922119
    5. '_xy' → logprob: -7.932150363922119
    6. 'list' → logprob: -8.932150840759277
    7. '_list' → logprob: -9.182150840759277
    8. '(link' → logprob: -9.307150840759277
    9. '_make' → logprob: -9.307150840759277
    10. 'xy' → logprob: -9.432150840759277

Token 1062: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.9361264946837764e-07
    2. '_list' → logprob: -16.75
    3. 'link' → logprob: -18.125
    4. '(' → logprob: -19.375
    5. '(list' → logprob: -19.5
    6. '```' → logprob: -20.0
    7. ' list' → logprob: -20.25
    8. 'ilist' → logprob: -20.375
    9. 'lists' → logprob: -20.5
    10. 'def' → logprob: -20.625

Token 1063: '(ab' (ID: 115191)
  Prédit: '(ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ab' → logprob: -0.4496832489967346
    2. '(' → logprob: -1.1996831893920898
    3. '(n' → logprob: -2.94968318939209
    4. '(x' → logprob: -5.94968318939209
    5. '(main' → logprob: -6.19968318939209
    6. '(lst' → logprob: -6.32468318939209
    7. 'def' → logprob: -6.82468318939209
    8. '(def' → logprob: -7.32468318939209
    9. '(arr' → logprob: -9.32468318939209
    10. '(int' → logprob: -9.57468318939209

Token 1064: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.014340728521347046
    2. 'ist' → logprob: -4.264340877532959
    3. '_list' → logprob: -8.7643404006958
    4. '(list' → logprob: -11.6393404006958
    5. ')' → logprob: -12.2643404006958
    6. '(n' → logprob: -12.7643404006958
    7. ' list' → logprob: -13.5143404006958
    8. 'ilst' → logprob: -14.6393404006958
    9. 'List' → logprob: -14.8893404006958
    10. '```' → logprob: -15.1393404006958

Token 1065: '):
' (ID: 1883)
  Prédit: '(ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ab' → logprob: -0.17359229922294617
    2. '):' → logprob: -2.4235923290252686
    3. '):
' → logprob: -2.9235923290252686
    4. ')' → logprob: -5.4235920906066895
    5. ',' → logprob: -5.5485920906066895
    6. '   ' → logprob: -5.7985920906066895
    7. '(n' → logprob: -5.7985920906066895
    8. 'def' → logprob: -6.7985920906066895
    9. '(' → logprob: -7.2985920906066895
    10. '=' → logprob: -8.173592567443848

Token 1066: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005567280459217727
    2. 'return' → logprob: -7.500556945800781
    3. ' return' → logprob: -12.500556945800781
    4. '       ' → logprob: -17.12555694580078
    5. '```' → logprob: -17.12555694580078
    6. '	return' → logprob: -17.75055694580078
    7. 'def' → logprob: -18.00055694580078
    8. '  ' → logprob: -19.00055694580078
    9. '    
' → logprob: -19.75055694580078
    10. ' ' → logprob: -20.62555694580078

Token 1067: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00673005310818553
    2. '   ' → logprob: -5.756730079650879
    3. 'make' → logprob: -6.006730079650879
    4. ' return' → logprob: -6.881730079650879
    5. 'xy' → logprob: -10.381730079650879
    6. 'def' → logprob: -10.631730079650879
    7. ' make' → logprob: -14.256730079650879
    8. ' ' → logprob: -14.881730079650879
    9. '  ' → logprob: -15.131730079650879
    10. '	return' → logprob: -15.881730079650879

Token 1068: ' make' (ID: 1520)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -0.001170460251159966
    2. ' make' → logprob: -6.751170635223389
    3. '(make' → logprob: -15.37617015838623
    4. '	make' → logprob: -16.626171112060547
    5. 'mak' → logprob: -18.501171112060547
    6. 'empty' → logprob: -18.751171112060547
    7. '   ' → logprob: -19.251171112060547
    8. '{}' → logprob: -20.001171112060547
    9. '.make' → logprob: -21.126171112060547
    10. '
' → logprob: -21.501171112060547

Token 1069: '_link' (ID: 16227)
  Prédit: '_link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_link' → logprob: -0.003683212911710143
    2. 'link' → logprob: -6.253683090209961
    3. '(ab' → logprob: -6.378683090209961
    4. 'ab' → logprob: -10.003683090209961
    5. 'Link' → logprob: -12.753683090209961
    6. 'ink' → logprob: -13.128683090209961
    7. '_ab' → logprob: -13.378683090209961
    8. '_list' → logprob: -14.253683090209961
    9. '_links' → logprob: -14.628683090209961
    10. 'list' → logprob: -15.128683090209961

Token 1070: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -6.630610641877865e-06
    2. 'ist' → logprob: -12.000006675720215
    3. 'link' → logprob: -15.250006675720215
    4. '_list' → logprob: -16.5000057220459
    5. 'ab' → logprob: -17.1250057220459
    6. '(ab' → logprob: -17.1250057220459
    7. 'ilst' → logprob: -19.1250057220459
    8. 'ilist' → logprob: -19.5000057220459
    9. '(list' → logprob: -20.1250057220459
    10. 'lst' → logprob: -20.1250057220459

Token 1071: '(ab' (ID: 115191)
  Prédit: '(ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ab' → logprob: -5.5577775128767826e-06
    2. 'ab' → logprob: -12.250005722045898
    3. '#ab' → logprob: -15.250005722045898
    4. '((' → logprob: -15.375005722045898
    5. '```' → logprob: -15.875005722045898
    6. '(' → logprob: -16.3750057220459
    7. '(
' → logprob: -16.5000057220459
    8. '(abs' → logprob: -17.0000057220459
    9. '(list' → logprob: -17.0000057220459
    10. '_ab' → logprob: -17.6250057220459

Token 1072: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.9361264946837764e-07
    2. 'lst' → logprob: -17.25
    3. 'ist' → logprob: -17.375
    4. 'ab' → logprob: -17.625
    5. '(list' → logprob: -17.875
    6. '_list' → logprob: -18.375
    7. 'alist' → logprob: -18.75
    8. '(ab' → logprob: -18.875
    9. ' list' → logprob: -20.125
    10. 'lib' → logprob: -20.25

Token 1073: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.423219696851447e-05
    2. '())' → logprob: -9.625083923339844
    3. '<|end|>' → logprob: -11.625083923339844
    4. '()' → logprob: -12.500083923339844
    5. 'def' → logprob: -12.625083923339844
    6. ')
' → logprob: -14.375083923339844
    7. '<|end|>' → logprob: -14.875083923339844
    8. ' )' → logprob: -15.500083923339844
    9. ')

' → logprob: -15.750083923339844
    10. ')#' → logprob: -16.125083923339844

Token 1074: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00034595211036503315
    2. 'mod' → logprob: -8.000346183776855
    3. '
' → logprob: -11.625346183776855
    4. 'if' → logprob: -13.625346183776855
    5. '```' → logprob: -16.12534523010254
    6. 'from' → logprob: -16.62534523010254
    7. ' def' → logprob: -17.25034523010254
    8. 'n' → logprob: -17.87534523010254
    9. 'global' → logprob: -18.62534523010254
    10. 'ndef' → logprob: -18.62534523010254

Token 1075: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.026091614738106728
    2. ' main' → logprob: -4.151091575622559
    3. 'def' → logprob: -4.651091575622559
    4. 'solve' → logprob: -8.776091575622559
    5. '__' → logprob: -8.901091575622559
    6. 'if' → logprob: -9.776091575622559
    7. 'run' → logprob: -10.151091575622559
    8. 'dec' → logprob: -10.901091575622559
    9. ' def' → logprob: -10.901091575622559
    10. '_main' → logprob: -11.401091575622559

Token 1076: '_calc' (ID: 107191)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5377110838890076
    2. '():
' → logprob: -1.4127111434936523
    3. '()' → logprob: -2.5377111434936523
    4. '():' → logprob: -2.6627111434936523
    5. '_get' → logprob: -3.9127111434936523
    6. '_' → logprob: -6.662711143493652
    7. '()>' → logprob: -7.037711143493652
    8. 'get' → logprob: -7.787711143493652
    9. ' def' → logprob: -8.537711143493652
    10. '():
' → logprob: -8.537711143493652

Token 1077: '_d' (ID: 1565)
  Prédit: '_tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.008374855853617191
    2. 'tree' → logprob: -4.8833746910095215
    3. 'def' → logprob: -7.3833746910095215
    4. '(d' → logprob: -10.75837516784668
    5. '(tree' → logprob: -10.75837516784668
    6. '_d' → logprob: -10.88337516784668
    7. '_long' → logprob: -10.88337516784668
    8. '_distance' → logprob: -11.75837516784668
    9. '_link' → logprob: -11.88337516784668
    10. '```' → logprob: -11.88337516784668

Token 1078: 'iameter' (ID: 157684)
  Prédit: 'iameter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iameter' → logprob: -0.00016229959146585315
    2. 'iam' → logprob: -8.750162124633789
    3. 'istance' → logprob: -13.625162124633789
    4. 'iamond' → logprob: -13.875162124633789
    5. 'i' → logprob: -14.000162124633789
    6. 'ia' → logprob: -15.375162124633789
    7. ' iam' → logprob: -15.625162124633789
    8. 'diam' → logprob: -16.25016212463379
    9. 'ef' → logprob: -16.62516212463379
    10. '_' → logprob: -16.75016212463379

Token 1079: '(link' (ID: 51236)
  Prédit: '(link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(link' → logprob: -0.0019480334594845772
    2. '(main' → logprob: -7.12694787979126
    3. '(
' → logprob: -8.001948356628418
    4. 'def' → logprob: -8.626948356628418
    5. '():' → logprob: -8.751948356628418
    6. '():
' → logprob: -8.751948356628418
    7. '(ab' → logprob: -9.251948356628418
    8. '(def' → logprob: -9.501948356628418
    9. '(' → logprob: -10.126948356628418
    10. '(make' → logprob: -11.626948356628418

Token 1080: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -5.512236498361744e-07
    2. 'ist' → logprob: -14.875000953674316
    3. 'link' → logprob: -16.125
    4. '_list' → logprob: -17.5
    5. 'lists' → logprob: -19.0
    6. 'li' → logprob: -19.125
    7. ' list' → logprob: -19.125
    8. 'ilist' → logprob: -19.75
    9. 'lst' → logprob: -19.75
    10. 'ilst' → logprob: -19.875

Token 1081: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.57968670129776
    2. '):
' → logprob: -0.82968670129776
    3. ',' → logprob: -5.704686641693115
    4. ')' → logprob: -8.329687118530273
    5. '   ' → logprob: -9.579687118530273
    6. '(link' → logprob: -10.079687118530273
    7. '):
' → logprob: -10.204687118530273
    8. '):

' → logprob: -11.829687118530273
    9. ')
' → logprob: -12.579687118530273
    10. ' ):' → logprob: -12.829687118530273

Token 1082: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5759950280189514
    2. '   ' → logprob: -0.8259950280189514
    3. ' return' → logprob: -9.825995445251465
    4. '```' → logprob: -14.200995445251465
    5. '	return' → logprob: -14.700995445251465
    6. '  ' → logprob: -15.575995445251465
    7. 'def' → logprob: -16.20099449157715
    8. ' ' → logprob: -16.95099449157715
    9. 'calc' → logprob: -17.07599449157715
    10. '
' → logprob: -17.32599449157715

Token 1083: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0007127894787117839
    2. 'calc' → logprob: -7.250712871551514
    3. ' return' → logprob: -13.125712394714355
    4. '   ' → logprob: -14.250712394714355
    5. '```' → logprob: -16.375713348388672
    6. 'diam' → logprob: -18.125713348388672
    7. 'def' → logprob: -19.625713348388672
    8. '	return' → logprob: -19.750713348388672
    9. '``' → logprob: -20.000713348388672
    10. ' calc' → logprob: -20.000713348388672

Token 1084: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -7.896309739408025e-07
    2. ' calc' → logprob: -14.250000953674316
    3. 'cal' → logprob: -18.75
    4. '   ' → logprob: -20.625
    5. '(calc' → logprob: -20.625
    6. 'calculate' → logprob: -22.25
    7. '.calc' → logprob: -23.75
    8. '  ' → logprob: -24.375
    9. '
' → logprob: -25.5
    10. '_calc' → logprob: -25.875

Token 1085: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -2.248469718324486e-05
    2. 'tree' → logprob: -11.000022888183594
    3. '_long' → logprob: -12.125022888183594
    4. '_t' → logprob: -17.500022888183594
    5. 'tre' → logprob: -17.500022888183594
    6. 'long' → logprob: -17.750022888183594
    7. '_TREE' → logprob: -18.125022888183594
    8. '_thread' → logprob: -18.375022888183594
    9. ' tree' → logprob: -18.500022888183594
    10. '\' → logprob: -18.500022888183594

Token 1086: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.0037498443853110075
    2. 'diam' → logprob: -5.628749847412109
    3. 'iameter' → logprob: -9.00374984741211
    4. 'd' → logprob: -10.75374984741211
    5. '_distance' → logprob: -13.50374984741211
    6. ' diameter' → logprob: -13.62874984741211
    7. 'distance' → logprob: -14.00374984741211
    8. 'Diameter' → logprob: -14.87874984741211
    9. 'al' → logprob: -15.12874984741211
    10. 'ar' → logprob: -15.75374984741211

Token 1087: 'iameter' (ID: 157684)
  Prédit: 'iameter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iameter' → logprob: -0.00044223200529813766
    2. 'am' → logprob: -8.125442504882812
    3. 'iam' → logprob: -8.875442504882812
    4. 'istance' → logprob: -12.875442504882812
    5. 'imeter' → logprob: -13.250442504882812
    6. 'eter' → logprob: -14.250442504882812
    7. 'i' → logprob: -14.625442504882812
    8. 'meter' → logprob: -15.125442504882812
    9. 'er' → logprob: -15.375442504882812
    10. 'iamond' → logprob: -15.750442504882812

Token 1088: '(link' (ID: 51236)
  Prédit: '(link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(link' → logprob: -0.0002353640884393826
    2. '(' → logprob: -8.750235557556152
    3. '(
' → logprob: -10.250235557556152
    4. '<|end|>' → logprob: -10.625235557556152
    5. '(line' → logprob: -12.250235557556152
    6. '
' → logprob: -12.750235557556152
    7. '()' → logprob: -12.750235557556152
    8. '$link' → logprob: -13.375235557556152
    9. '```' → logprob: -14.000235557556152
    10. 'link' → logprob: -14.125235557556152

Token 1089: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.011204972863197327
    2. 'ist' → logprob: -4.511205196380615
    3. 'link' → logprob: -8.761204719543457
    4. ')' → logprob: -15.511204719543457
    5. 'ink' → logprob: -16.511205673217773
    6. ',' → logprob: -16.761205673217773
    7. '   ' → logprob: -17.136205673217773
    8. ' list' → logprob: -18.386205673217773
    9. '=' → logprob: -18.511205673217773
    10. '```' → logprob: -18.511205673217773

Token 1090: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012749579036608338
    2. '())' → logprob: -9.000127792358398
    3. '()' → logprob: -12.750127792358398
    4. ' )' → logprob: -14.500127792358398
    5. ')
' → logprob: -15.125127792358398
    6. '   ' → logprob: -16.5001277923584
    7. '))' → logprob: -16.6251277923584
    8. 'def' → logprob: -16.7501277923584
    9. ',)' → logprob: -17.6251277923584
    10. ')#' → logprob: -17.6251277923584

Token 1091: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.246537173457909e-06
    2. 'if' → logprob: -12.625003814697266
    3. '
' → logprob: -14.625003814697266
    4. 'mod' → logprob: -15.250003814697266
    5. 'from' → logprob: -16.375003814697266
    6. '```' → logprob: -16.750003814697266
    7. 'n' → logprob: -17.125003814697266
    8. ' def' → logprob: -18.125003814697266
    9. '\' → logprob: -18.375003814697266
    10. 'ndef' → logprob: -18.500003814697266

Token 1092: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.07046439498662949
    2. 'def' → logprob: -2.8204643726348877
    3. ' main' → logprob: -4.945464611053467
    4. 'dec' → logprob: -7.070464611053467
    5. '__' → logprob: -8.570464134216309
    6. '_main' → logprob: -9.320464134216309
    7. 'run' → logprob: -9.695464134216309
    8. 'if' → logprob: -9.945464134216309
    9. ' def' → logprob: -9.945464134216309
    10. 'solve' → logprob: -10.695464134216309

Token 1093: '_print' (ID: 31509)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.6476795673370361
    2. '():' → logprob: -0.7726795673370361
    3. '()' → logprob: -4.272679328918457
    4. 'def' → logprob: -7.522679328918457
    5. '():
' → logprob: -7.897679328918457
    6. '()>' → logprob: -9.897679328918457
    7. '():

' → logprob: -10.897679328918457
    8. '();' → logprob: -11.772679328918457
    9. '_' → logprob: -12.022679328918457
    10. '()">' → logprob: -12.647679328918457

Token 1094: '_w' (ID: 3567)
  Prédit: '_result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.5052714943885803
    2. 'result' → logprob: -1.7552714347839355
    3. '(' → logprob: -2.2552714347839355
    4. '(d' → logprob: -3.3802714347839355
    5. 'def' → logprob: -3.7552714347839355
    6. '(lambda' → logprob: -3.8802714347839355
    7. '(result' → logprob: -3.8802714347839355
    8. '()' → logprob: -5.1302714347839355
    9. '_' → logprob: -5.5052714347839355
    10. '_answer' → logprob: -6.1302714347839355

Token 1095: 'inner' (ID: 6484)
  Prédit: 'inner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inner' → logprob: -2.534558552724775e-05
    2. '(inner' → logprob: -11.375025749206543
    3. 'inning' → logprob: -12.750025749206543
    4. 'in' → logprob: -12.875025749206543
    5. 'riter' → logprob: -13.125025749206543
    6. 'inn' → logprob: -13.250025749206543
    7. 'iner' → logprob: -14.000025749206543
    8. '_inner' → logprob: -14.000025749206543
    9. 'inners' → logprob: -14.500025749206543
    10. 'inne' → logprob: -14.875025749206543

Token 1096: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0633370578289032
    2. '(w' → logprob: -2.8133370876312256
    3. '(result' → logprob: -7.3133368492126465
    4. '(dec' → logprob: -7.9383368492126465
    5. '(' → logprob: -8.563337326049805
    6. '(distance' → logprob: -9.688337326049805
    7. '(
' → logprob: -9.938337326049805
    8. '(answer' → logprob: -11.438337326049805
    9. '(def' → logprob: -11.438337326049805
    10. ' (' → logprob: -11.688337326049805

Token 1097: 'iameter' (ID: 157684)
  Prédit: 'iameter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iameter' → logprob: -0.002169294049963355
    2. 'iam' → logprob: -6.752169132232666
    3. 'ec' → logprob: -7.627169132232666
    4. 'ef' → logprob: -8.502169609069824
    5. 'istance' → logprob: -9.002169609069824
    6. 'ia' → logprob: -9.502169609069824
    7. 'is' → logprob: -10.502169609069824
    8. ')' → logprob: -11.002169609069824
    9. 'winner' → logprob: -11.002169609069824
    10. 'diam' → logprob: -11.377169609069824

Token 1098: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4509194791316986
    2. ',' → logprob: -1.700919508934021
    3. '(d' → logprob: -1.825919508934021
    4. '):' → logprob: -4.5759196281433105
    5. ')' → logprob: -5.2009196281433105
    6. ',d' → logprob: -6.3259196281433105
    7. '(' → logprob: -7.2009196281433105
    8. ')
' → logprob: -8.200919151306152
    9. '(w' → logprob: -8.450919151306152
    10. '):

' → logprob: -8.950919151306152

Token 1099: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014557158574461937
    2. '   ' → logprob: -4.264557361602783
    3. ' print' → logprob: -8.389556884765625
    4. 'def' → logprob: -9.389556884765625
    5. '```' → logprob: -9.514556884765625
    6. 'if' → logprob: -11.889556884765625
    7. '	print' → logprob: -13.389556884765625
    8. '(print' → logprob: -15.139556884765625
    9. '``' → logprob: -15.389556884765625
    10. '`' → logprob: -16.889556884765625

Token 1100: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -6.511406809295295e-06
    2. '   ' → logprob: -12.250006675720215
    3. 'def' → logprob: -13.750006675720215
    4. ' print' → logprob: -14.375006675720215
    5. 'if' → logprob: -17.5000057220459
    6. '```' → logprob: -18.1250057220459
    7. '
' → logprob: -18.6250057220459
    8. '	print' → logprob: -20.6250057220459
    9. 'println' → logprob: -22.0000057220459
    10. '    
' → logprob: -22.0000057220459

Token 1101: '(dec' (ID: 77281)
  Prédit: '(dec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dec' → logprob: -0.004250300582498312
    2. 'dec' → logprob: -5.879250526428223
    3. '(' → logprob: -7.379250526428223
    4. '('' → logprob: -7.754250526428223
    5. '("' → logprob: -8.379250526428223
    6. '()' → logprob: -9.129250526428223
    7. '(
' → logprob: -10.629250526428223
    8. '(det' → logprob: -11.129250526428223
    9. '(f' → logprob: -12.629250526428223
    10. '(d' → logprob: -13.129250526428223

Token 1102: 'ide' (ID: 617)
  Prédit: 'ide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -1.9361264946837764e-07
    2. 'ided' → logprob: -17.125
    3. '
' → logprob: -17.5
    4. 'ode' → logprob: -18.375
    5. '(' → logprob: -18.75
    6. 'id' → logprob: -18.75
    7. '"' → logprob: -19.0
    8. 'idet' → logprob: -19.25
    9. 'ider' → logprob: -19.375
    10. ''' → logprob: -19.375

Token 1103: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -2.069664333248511e-05
    2. 'winner' → logprob: -11.125020980834961
    3. '(d' → logprob: -12.750020980834961
    4. 'w' → logprob: -13.750020980834961
    5. 'Winner' → logprob: -14.250020980834961
    6. '_' → logprob: -14.625020980834961
    7. '(w' → logprob: -15.250020980834961
    8. ')' → logprob: -15.500020980834961
    9. '
' → logprob: -16.25002098083496
    10. '\' → logprob: -16.50002098083496

Token 1104: 'inner' (ID: 6484)
  Prédit: 'inner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inner' → logprob: -1.7432603272027336e-06
    2. '_inner' → logprob: -14.000001907348633
    3. 'iner' → logprob: -14.625001907348633
    4. ' inner' → logprob: -15.750001907348633
    5. 'nner' → logprob: -16.750001907348633
    6. '(inner' → logprob: -17.000001907348633
    7. 'Inner' → logprob: -17.375001907348633
    8. 'INNER' → logprob: -18.000001907348633
    9. 'inn' → logprob: -18.125001907348633
    10. 'unner' → logprob: -18.125001907348633

Token 1105: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -3.6789137084269896e-05
    2. ')' → logprob: -10.75003719329834
    3. '(' → logprob: -11.25003719329834
    4. ' (' → logprob: -14.12503719329834
    5. '((' → logprob: -14.37503719329834
    6. '(distance' → logprob: -14.75003719329834
    7. ')(' → logprob: -15.75003719329834
    8. '(dec' → logprob: -16.125036239624023
    9. '(de' → logprob: -16.875036239624023
    10. ')d' → logprob: -17.125036239624023

Token 1106: 'iameter' (ID: 157684)
  Prédit: 'iameter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iameter' → logprob: -0.0015102163888514042
    2. 'iam' → logprob: -6.501510143280029
    3. 'diam' → logprob: -12.376510620117188
    4. 'i' → logprob: -13.626510620117188
    5. 'iamond' → logprob: -13.876510620117188
    6. 'ia' → logprob: -14.501510620117188
    7. 'am' → logprob: -15.251510620117188
    8. ')' → logprob: -15.251510620117188
    9. '(' → logprob: -16.376510620117188
    10. 'istance' → logprob: -16.501510620117188

Token 1107: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3927996754646301
    2. '))' → logprob: -1.1427996158599854
    3. '())' → logprob: -5.1427998542785645
    4. '()' → logprob: -10.142799377441406
    5. '()))' → logprob: -10.517799377441406
    6. ')))' → logprob: -13.267799377441406
    7. '})' → logprob: -14.142799377441406
    8. '])' → logprob: -15.017799377441406
    9. ')")' → logprob: -15.392799377441406
    10. ')`' → logprob: -15.892799377441406

Token 1108: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.392202976712724e-06
    2. 'if' → logprob: -12.000006675720215
    3. 'mod' → logprob: -16.5000057220459
    4. 'n' → logprob: -18.6250057220459
    5. '```' → logprob: -19.7500057220459
    6. ' def' → logprob: -21.2500057220459
    7. '
' → logprob: -21.2500057220459
    8. '#' → logprob: -22.7500057220459
    9. 'from' → logprob: -23.2500057220459
    10. 'ndef' → logprob: -23.5000057220459

Token 1109: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0018337996443733573
    2. 'def' → logprob: -6.376833915710449
    3. ' main' → logprob: -9.37683391571045
    4. '__' → logprob: -10.37683391571045
    5. '_main' → logprob: -12.00183391571045
    6. 'solve' → logprob: -12.50183391571045
    7. 'if' → logprob: -12.75183391571045
    8. 'run' → logprob: -13.50183391571045
    9. '	main' → logprob: -14.37683391571045
    10. '
' → logprob: -15.12683391571045

Token 1110: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.011398755013942719
    2. '():
' → logprob: -4.511398792266846
    3. '_' → logprob: -8.136398315429688
    4. 'def' → logprob: -11.011398315429688
    5. '_get' → logprob: -11.136398315429688
    6. '():
' → logprob: -11.136398315429688
    7. ' ():' → logprob: -11.761398315429688
    8. '()' → logprob: -12.511398315429688
    9. '_main' → logprob: -15.136398315429688
    10. '():

' → logprob: -15.261398315429688

Token 1111: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031793788075447083
    2. 'n' → logprob: -5.753179550170898
    3. '	n' → logprob: -13.378179550170898
    4. 'def' → logprob: -16.2531795501709
    5. '```' → logprob: -16.7531795501709
    6. ' n' → logprob: -17.0031795501709
    7. '_n' → logprob: -17.7531795501709
    8. '   ' → logprob: -18.2531795501709
    9. '(n' → logprob: -19.0031795501709
    10. '       ' → logprob: -19.0031795501709

Token 1112: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.1269361972808838
    2. '   ' → logprob: -2.126936197280884
    3. ' n' → logprob: -12.126935958862305
    4. '	n' → logprob: -13.626935958862305
    5. '
' → logprob: -13.751935958862305
    6. '  ' → logprob: -15.251935958862305
    7. ' ' → logprob: -16.626935958862305
    8. '    
' → logprob: -17.001935958862305
    9. '```' → logprob: -17.126935958862305
    10. 'N' → logprob: -17.126935958862305

Token 1113: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3134165406227112
    2. ' =' → logprob: -1.3134164810180664
    3. '   ' → logprob: -9.063416481018066
    4. '()' → logprob: -10.563416481018066
    5. '=int' → logprob: -11.688416481018066
    6. ')' → logprob: -12.938416481018066
    7. '=n' → logprob: -14.188416481018066
    8. '=
' → logprob: -14.563416481018066
    9. ' =
' → logprob: -15.563416481018066
    10. '(' → logprob: -15.688416481018066

Token 1114: ' main' (ID: 2758)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.006727803498506546
    2. ' int' → logprob: -5.006727695465088
    3. 'main' → logprob: -11.756728172302246
    4. 'n' → logprob: -13.256728172302246
    5. '   ' → logprob: -13.631728172302246
    6. ' main' → logprob: -13.881728172302246
    7. ' ' → logprob: -15.881728172302246
    8. '	int' → logprob: -16.00672721862793
    9. ' n' → logprob: -16.25672721862793
    10. '(int' → logprob: -16.25672721862793

Token 1115: '_get' (ID: 6533)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.23600861430168152
    2. '_get' → logprob: -1.736008644104004
    3. '()
' → logprob: -3.486008644104004
    4. '_' → logprob: -7.111008644104004
    5. '_in' → logprob: -7.361008644104004
    6. 'in' → logprob: -7.486008644104004
    7. 'int' → logprob: -7.986008644104004
    8. 'get' → logprob: -7.986008644104004
    9. '_n' → logprob: -8.611008644104004
    10. 'n' → logprob: -9.111008644104004

Token 1116: '_n' (ID: 2170)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001741700922138989
    2. '()
' → logprob: -6.751741886138916
    3. 'n' → logprob: -7.626741886138916
    4. '_n' → logprob: -9.876741409301758
    5. '(' → logprob: -11.501741409301758
    6. ')' → logprob: -12.251741409301758
    7. '())' → logprob: -12.251741409301758
    8. '()\' → logprob: -12.501741409301758
    9. '_' → logprob: -13.001741409301758
    10. ' ()' → logprob: -13.251741409301758

Token 1117: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00023917861108202487
    2. 'ab' → logprob: -8.375239372253418
    3. ' ab' → logprob: -12.000239372253418
    4. '
' → logprob: -14.750239372253418
    5. 'n' → logprob: -15.375239372253418
    6. '<|end|>' → logprob: -15.375239372253418
    7. 'abl' → logprob: -15.625239372253418
    8. '  ' → logprob: -15.750239372253418
    9. '_ab' → logprob: -15.875239372253418
    10. '(ab' → logprob: -16.0002384185791

Token 1118: '   ' (ID: 271)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.4750218987464905
    2. '   ' → logprob: -0.9750218987464905
    3. 'abl' → logprob: -7.350021839141846
    4. ' ab' → logprob: -8.725022315979004
    5. 'abal' → logprob: -11.100022315979004
    6. 'abr' → logprob: -11.225022315979004
    7. 'abel' → logprob: -11.225022315979004
    8. 'abcd' → logprob: -11.350022315979004
    9. '_ab' → logprob: -11.850022315979004
    10. 'abla' → logprob: -11.850022315979004

Token 1119: ' ab' (ID: 692)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' (adapté à ' ab') → logprob: -3.531315314830863e-06
    2. 'alist' → logprob: -13.750003814697266
    3. '   ' → logprob: -13.875003814697266
    4. 'a' → logprob: -14.750003814697266
    5. 'abl' → logprob: -14.750003814697266
    6. ' ab' → logprob: -14.750003814697266
    7. 'аб' → logprob: -16.750003814697266
    8. '       ' → logprob: -16.750003814697266
    9. '_ab' → logprob: -17.000003814697266
    10. 'AB' → logprob: -17.875003814697266

Token 1120: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -2.45848218582978e-06
    2. '_list' → logprob: -13.12500286102295
    3. ' =' → logprob: -15.12500286102295
    4. 'lst' → logprob: -17.125001907348633
    5. '=' → logprob: -17.875001907348633
    6. 'List' → logprob: -18.125001907348633
    7. 'ist' → logprob: -18.375001907348633
    8. 'l' → logprob: -19.000001907348633
    9. 'lis' → logprob: -20.125001907348633
    10. 'lists' → logprob: -21.250001907348633

Token 1121: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687190413475037
    2. ' =' → logprob: -1.1368719339370728
    3. '   ' → logprob: -14.261872291564941
    4. '=n' → logprob: -15.761872291564941
    5. ' ' → logprob: -17.011871337890625
    6. '(n' → logprob: -18.511871337890625
    7. '=
' → logprob: -18.636871337890625
    8. 'n' → logprob: -18.886871337890625
    9. '  ' → logprob: -19.011871337890625
    10. '＝' → logprob: -19.636871337890625

Token 1122: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.01107093133032322
    2. ' main' → logprob: -4.511070728302002
    3. 'int' → logprob: -10.76107120513916
    4. '(main' → logprob: -13.76107120513916
    5. '   ' → logprob: -14.51107120513916
    6. ' int' → logprob: -16.136070251464844
    7. '	main' → logprob: -16.136070251464844
    8. ' ' → logprob: -16.386070251464844
    9. '.main' → logprob: -17.886070251464844
    10. '  ' → logprob: -18.136070251464844

Token 1123: '_get' (ID: 6533)
  Prédit: '_get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_get' → logprob: -0.0067209405824542046
    2. 'get' → logprob: -5.006721019744873
    3. 'ab' → logprob: -13.131720542907715
    4. ' =' → logprob: -14.131720542907715
    5. 'Get' → logprob: -14.506720542907715
    6. '_ab' → logprob: -14.506720542907715
    7. 'list' → logprob: -14.631720542907715
    8. 'def' → logprob: -15.006720542907715
    9. '_' → logprob: -15.006720542907715
    10. '   ' → logprob: -15.506720542907715

Token 1124: '_ab' (ID: 53632)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00249551422894001
    2. '(n' → logprob: -6.252495288848877
    3. 'ab' → logprob: -7.752495288848877
    4. 'n' → logprob: -9.502495765686035
    5. 'l' → logprob: -10.252495765686035
    6. 'lst' → logprob: -11.502495765686035
    7. '_list' → logprob: -12.752495765686035
    8. '
' → logprob: -12.877495765686035
    9. '(ab' → logprob: -12.877495765686035
    10. 'lista' → logprob: -13.627495765686035

Token 1125: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00012642296496778727
    2. 'ist' → logprob: -9.000126838684082
    3. 'lst' → logprob: -13.750126838684082
    4. '_list' → logprob: -14.375126838684082
    5. 'l' → logprob: -14.750126838684082
    6. ' list' → logprob: -15.000126838684082
    7. '(' → logprob: -15.875126838684082
    8. 'List' → logprob: -15.875126838684082
    9. '(list' → logprob: -16.875125885009766
    10. '[' → logprob: -17.000125885009766

Token 1126: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.5822400857578032e-05
    2. 'n' → logprob: -10.750025749206543
    3. '(' → logprob: -13.375025749206543
    4. ' (' → logprob: -13.875025749206543
    5. '(
' → logprob: -14.000025749206543
    6. '
' → logprob: -15.375025749206543
    7. ' n' → logprob: -15.625025749206543
    8. '   ' → logprob: -15.875025749206543
    9. '	n' → logprob: -16.25002670288086
    10. '(len' → logprob: -16.37502670288086

Token 1127: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09006759524345398
    2. '()' → logprob: -3.0900676250457764
    3. '   ' → logprob: -4.090067386627197
    4. ')
' → logprob: -4.465067386627197
    5. '())' → logprob: -4.590067386627197
    6. '()
' → logprob: -6.465067386627197
    7. '())
' → logprob: -7.340067386627197
    8. '(n' → logprob: -11.840067863464355
    9. ' )' → logprob: -12.090067863464355
    10. ' ' → logprob: -12.340067863464355

Token 1128: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38720041513442993
    2. 'link' → logprob: -1.1372003555297852
    3. ' link' → logprob: -8.137200355529785
    4. '	link' → logprob: -10.387200355529785
    5. '_link' → logprob: -12.887200355529785
    6. '(link' → logprob: -13.887200355529785
    7. '```' → logprob: -14.762200355529785
    8. '<link' → logprob: -14.762200355529785
    9. '  ' → logprob: -15.012200355529785
    10. '$link' → logprob: -15.262200355529785

Token 1129: ' link' (ID: 3461)
  Prédit: 'link'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'link' (adapté à ' link') → logprob: -2.081584716506768e-05
    2. '   ' → logprob: -11.000020980834961
    3. ' link' → logprob: -12.500020980834961
    4. '	link' → logprob: -15.125020980834961
    5. '_link' → logprob: -16.75002098083496
    6. ' ' → logprob: -17.37502098083496
    7. '(link' → logprob: -18.87502098083496
    8. 'linked' → logprob: -19.00002098083496
    9. '  ' → logprob: -19.00002098083496
    10. 'alink' → logprob: -19.25002098083496

Token 1130: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.5048530030981055e-06
    2. '   ' → logprob: -13.875001907348633
    3. 'link' → logprob: -14.750001907348633
    4. 'ist' → logprob: -16.875001907348633
    5. '_list' → logprob: -17.750001907348633
    6. 'll' → logprob: -19.875001907348633
    7. '_' → logprob: -20.375001907348633
    8. ' list' → logprob: -20.875001907348633
    9. '  ' → logprob: -21.125001907348633
    10. '=' → logprob: -21.125001907348633

Token 1131: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740777611732483
    2. ' =' → logprob: -0.9740777611732483
    3. '＝' → logprob: -14.599078178405762
    4. '=create' → logprob: -15.349078178405762
    5. '=
' → logprob: -17.474077224731445
    6. '_=' → logprob: -18.974077224731445
    7. ' ' → logprob: -18.974077224731445
    8. '=get' → logprob: -19.099077224731445
    9. '=

' → logprob: -19.224077224731445
    10. '=set' → logprob: -19.349077224731445

Token 1132: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.02975129522383213
    2. ' main' → logprob: -3.5297513008117676
    3. 'make' → logprob: -14.27975082397461
    4. '	main' → logprob: -15.77975082397461
    5. '(main' → logprob: -16.40475082397461
    6. '   ' → logprob: -17.90475082397461
    7. '.main' → logprob: -19.27975082397461
    8. ' ' → logprob: -19.40475082397461
    9. '_main' → logprob: -19.65475082397461
    10. ' make' → logprob: -19.77975082397461

Token 1133: '_make' (ID: 70070)
  Prédit: '_make'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_make' → logprob: -0.0001596771035110578
    2. 'make' → logprob: -8.75015926361084
    3. 'Make' → logprob: -13.62515926361084
    4. '(make' → logprob: -17.250160217285156
    5. '_get' → logprob: -17.625160217285156
    6. 'link' → logprob: -19.000160217285156
    7. '   ' → logprob: -19.125160217285156
    8. 'mak' → logprob: -19.250160217285156
    9. '.make' → logprob: -19.375160217285156
    10. 'main' → logprob: -19.500160217285156

Token 1134: '_link' (ID: 16227)
  Prédit: 'link'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'link' → logprob: -0.0019854947458952665
    2. 'list' → logprob: -6.251985549926758
    3. '_link' → logprob: -10.126985549926758
    4. '(link' → logprob: -11.376985549926758
    5. 'ink' → logprob: -12.251985549926758
    6. 'ab' → logprob: -15.376985549926758
    7. '	link' → logprob: -16.626985549926758
    8. ' link' → logprob: -16.876985549926758
    9. '
' → logprob: -17.126985549926758
    10. '$link' → logprob: -17.251985549926758

Token 1135: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -2.165027217415627e-05
    2. 'ist' → logprob: -11.000021934509277
    3. 'link' → logprob: -12.250021934509277
    4. '(list' → logprob: -17.75002098083496
    5. '(link' → logprob: -18.62502098083496
    6. 'ilst' → logprob: -18.62502098083496
    7. '_list' → logprob: -18.75002098083496
    8. 'List' → logprob: -19.62502098083496
    9. ' list' → logprob: -19.75002098083496
    10. 'lista' → logprob: -19.87502098083496

Token 1136: '(ab' (ID: 115191)
  Prédit: '(ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ab' → logprob: -0.251930296421051
    2. '(link' → logprob: -1.5019302368164062
    3. 'link' → logprob: -14.501930236816406
    4. '(abs' → logprob: -15.001930236816406
    5. 'ab' → logprob: -15.626930236816406
    6. '(
' → logprob: -17.126930236816406
    7. '(tab' → logprob: -17.251930236816406
    8. ' (' → logprob: -17.501930236816406
    9. '(line' → logprob: -17.501930236816406
    10. '_ab' → logprob: -17.626930236816406

Token 1137: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.002479700604453683
    2. 'ist' → logprob: -6.002479553222656
    3. 'link' → logprob: -13.127479553222656
    4. 'st' → logprob: -13.502479553222656
    5. '_list' → logprob: -15.002479553222656
    6. '(list' → logprob: -16.002479553222656
    7. 'lst' → logprob: -16.002479553222656
    8. ' list' → logprob: -17.127479553222656
    9. '   ' → logprob: -17.377479553222656
    10. '(' → logprob: -17.502479553222656

Token 1138: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3140914738178253
    2. ')' → logprob: -1.314091444015503
    3. ')
' → logprob: -7.314091682434082
    4. '
' → logprob: -9.064091682434082
    5. '<|end|>' → logprob: -11.314091682434082
    6. '    
' → logprob: -11.439091682434082
    7. ',' → logprob: -11.564091682434082
    8. 'def' → logprob: -12.939091682434082
    9. '()' → logprob: -13.314091682434082
    10. '):
' → logprob: -13.314091682434082

Token 1139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31337133049964905
    2. 'diam' → logprob: -1.3133713006973267
    3. ' diameter' → logprob: -9.188371658325195
    4. 'd' → logprob: -12.438371658325195
    5. 'dia' → logprob: -13.938371658325195
    6. 'distance' → logprob: -14.188371658325195
    7. '	d' → logprob: -14.563371658325195
    8. '   ' → logprob: -14.688371658325195
    9. 'di' → logprob: -14.938371658325195
    10. '```' → logprob: -15.313371658325195

Token 1140: ' diameter' (ID: 32514)
  Prédit: 'diam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diam' → logprob: -2.856408536899835e-05
    2. '   ' → logprob: -10.500028610229492
    3. ' diameter' → logprob: -14.250028610229492
    4. 'dia' → logprob: -15.500028610229492
    5. 'distance' → logprob: -16.250028610229492
    6. 'd' → logprob: -16.250028610229492
    7. 'di' → logprob: -19.000028610229492
    8. 'diamond' → logprob: -20.125028610229492
    9. ' ' → logprob: -21.625028610229492
    10. 'radius' → logprob: -22.500028610229492

Token 1141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007606270257383585
    2. '=' → logprob: -4.882606506347656
    3. ' =
' → logprob: -17.507606506347656
    4. '	' → logprob: -17.507606506347656
    5. ' ' → logprob: -17.882606506347656
    6. '_' → logprob: -18.007606506347656
    7. ',' → logprob: -18.007606506347656
    8. ')' → logprob: -18.382606506347656
    9. '＝' → logprob: -18.632606506347656
    10. ' ' → logprob: -18.757606506347656

Token 1142: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0024756586644798517
    2. ' main' → logprob: -6.002475738525391
    3. '	main' → logprob: -18.25247573852539
    4. '(main' → logprob: -18.37747573852539
    5. '   ' → logprob: -18.87747573852539
    6. 'calc' → logprob: -20.62747573852539
    7. '.main' → logprob: -21.25247573852539
    8. '_main' → logprob: -21.37747573852539
    9. ' ' → logprob: -22.00247573852539
    10. '/main' → logprob: -22.50247573852539

Token 1143: '_calc' (ID: 107191)
  Prédit: '_calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_calc' → logprob: -0.00024048985505942255
    2. 'calc' → logprob: -9.250240325927734
    3. '_cal' → logprob: -9.250240325927734
    4. '_get' → logprob: -10.500240325927734
    5. '(calc' → logprob: -12.250240325927734
    6. '   ' → logprob: -12.875240325927734
    7. '.calc' → logprob: -13.125240325927734
    8. 'Calc' → logprob: -13.125240325927734
    9. '=' → logprob: -13.625240325927734
    10. ' =' → logprob: -13.750240325927734

Token 1144: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.017321370542049408
    2. 'diam' → logprob: -5.142321586608887
    3. '(link' → logprob: -5.142321586608887
    4. 'link' → logprob: -5.517321586608887
    5. 'd' → logprob: -6.642321586608887
    6. 'distance' → logprob: -9.017321586608887
    7. '(d' → logprob: -10.892321586608887
    8. '_distance' → logprob: -11.142321586608887
    9. '_link' → logprob: -13.017321586608887
    10. 'tree' → logprob: -13.392321586608887

Token 1145: 'iameter' (ID: 157684)
  Prédit: 'iameter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iameter' → logprob: -0.001291428110562265
    2. 'iam' → logprob: -6.751291275024414
    3. 'istance' → logprob: -9.126291275024414
    4. 'link' → logprob: -12.751291275024414
    5. 'diam' → logprob: -13.126291275024414
    6. 'i' → logprob: -13.126291275024414
    7. 'iamond' → logprob: -13.376291275024414
    8. 'imeter' → logprob: -14.001291275024414
    9. 'ia' → logprob: -14.501291275024414
    10. 'ist' → logprob: -14.501291275024414

Token 1146: '(link' (ID: 51236)
  Prédit: '(link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(link' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.625000953674316
    3. 'link' → logprob: -15.250000953674316
    4. '(
' → logprob: -18.125
    5. '$link' → logprob: -18.125
    6. '(line' → logprob: -19.5
    7. '(d' → logprob: -20.125
    8. '	link' → logprob: -20.375
    9. '(Link' → logprob: -20.5
    10. '(loop' → logprob: -20.875

Token 1147: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.02324652671813965
    2. 'ist' → logprob: -3.7732465267181396
    3. 'link' → logprob: -14.273246765136719
    4. 'st' → logprob: -15.148246765136719
    5. ')' → logprob: -16.89824676513672
    6. '   ' → logprob: -18.02324676513672
    7. ' list' → logprob: -18.77324676513672
    8. '_list' → logprob: -19.02324676513672
    9. '```' → logprob: -19.89824676513672
    10. 'List' → logprob: -20.02324676513672

Token 1148: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016618473455309868
    2. ')' → logprob: -6.626661777496338
    3. ')
' → logprob: -8.001662254333496
    4. '
' → logprob: -14.876662254333496
    5. '    
' → logprob: -15.251662254333496
    6. '()
' → logprob: -16.75166130065918
    7. ',' → logprob: -16.87666130065918
    8. '(main' → logprob: -16.87666130065918
    9. '()' → logprob: -17.25166130065918
    10. '       ' → logprob: -17.50166130065918

Token 1149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008669999428093433
    2. 'main' → logprob: -4.758669853210449
    3. ' main' → logprob: -10.00866985321045
    4. '	main' → logprob: -11.50866985321045
    5. '_main' → logprob: -14.63366985321045
    6. '(main' → logprob: -17.633670806884766
    7. '
' → logprob: -19.008670806884766
    8. '   ' → logprob: -19.008670806884766
    9. '  ' → logprob: -19.258670806884766
    10. '       ' → logprob: -19.383670806884766

Token 1150: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -8.506661833962426e-05
    2. ' main' → logprob: -9.50008487701416
    3. '   ' → logprob: -11.50008487701416
    4. '	main' → logprob: -17.500085830688477
    5. '_main' → logprob: -20.875085830688477
    6. ' ' → logprob: -21.750085830688477
    7. '  ' → logprob: -22.500085830688477
    8. '(main' → logprob: -22.750085830688477
    9. '
' → logprob: -22.875085830688477
    10. '.main' → logprob: -23.125085830688477

Token 1151: '_print' (ID: 31509)
  Prédit: '_print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_print' → logprob: -1.0280383548888494e-06
    2. '_pr' → logprob: -13.875000953674316
    3. '_' → logprob: -18.250001907348633
    4. 'print' → logprob: -18.500001907348633
    5. '_PRINT' → logprob: -18.750001907348633
    6. '_Print' → logprob: -19.625001907348633
    7. '```' → logprob: -20.000001907348633
    8. '_write' → logprob: -20.500001907348633
    9. '_printf' → logprob: -20.625001907348633
    10. 'Print' → logprob: -20.750001907348633

Token 1152: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -7.896309739408025e-07
    2. 'winner' → logprob: -14.500000953674316
    3. '_d' → logprob: -16.25
    4. '(w' → logprob: -16.625
    5. '(d' → logprob: -17.0
    6. 'w' → logprob: -17.25
    7. 'Winner' → logprob: -17.875
    8. 'd' → logprob: -19.5
    9. '_' → logprob: -20.0
    10. ' winner' → logprob: -20.875

Token 1153: 'inner' (ID: 6484)
  Prédit: 'inner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inner' → logprob: -2.45848218582978e-06
    2. '_inner' → logprob: -13.12500286102295
    3. ' inner' → logprob: -16.250001907348633
    4. 'Inner' → logprob: -16.625001907348633
    5. '(inner' → logprob: -17.125001907348633
    6. 'nner' → logprob: -17.250001907348633
    7. 'iner' → logprob: -17.500001907348633
    8. 'inne' → logprob: -17.625001907348633
    9. 'INNER' → logprob: -18.125001907348633
    10. '.inner' → logprob: -18.375001907348633

Token 1154: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: 0.0
    2. '(' → logprob: -17.5
    3. '(di' → logprob: -19.25
    4. ' (' → logprob: -19.375
    5. '(distance' → logprob: -20.5
    6. '(
' → logprob: -20.75
    7. 'diam' → logprob: -20.75
    8. '(D' → logprob: -21.0
    9. '(de' → logprob: -21.25
    10. '((' → logprob: -21.75

Token 1155: 'iameter' (ID: 157684)
  Prédit: 'iameter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iameter' → logprob: -7.20734242349863e-05
    2. 'iam' → logprob: -9.750072479248047
    3. 'am' → logprob: -11.750072479248047
    4. 'i' → logprob: -12.875072479248047
    5. 'diam' → logprob: -13.125072479248047
    6. 'imeter' → logprob: -14.375072479248047
    7. 'er' → logprob: -15.125072479248047
    8. ' diameter' → logprob: -15.250072479248047
    9. 'iamond' → logprob: -18.125072479248047
    10. 'ia' → logprob: -18.375072479248047

Token 1156: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6585436463356018
    2. '()' → logprob: -1.158543586730957
    3. '())' → logprob: -1.783543586730957
    4. '()
' → logprob: -8.158543586730957
    5. ' )' → logprob: -9.783543586730957
    6. ')
' → logprob: -10.783543586730957
    7. '())
' → logprob: -11.283543586730957
    8. '<|end|>' → logprob: -11.908543586730957
    9. '(' → logprob: -12.158543586730957
    10. '()

' → logprob: -12.283543586730957

Token 1157: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0019628899171948433
    2. 'main' → logprob: -6.251962661743164
    3. ' if' → logprob: -11.251962661743164
    4. '<|end|>' → logprob: -11.751962661743164
    5. '#' → logprob: -12.126962661743164
    6. '
' → logprob: -12.626962661743164
    7. '```' → logprob: -13.376962661743164
    8. '__' → logprob: -14.501962661743164
    9. '(main' → logprob: -14.751962661743164
    10. '_main' → logprob: -14.876962661743164

Token 1158: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.061985280364751816
    2. '__' → logprob: -2.8119852542877197
    3. 'name' → logprob: -11.31198501586914
    4. '_name' → logprob: -12.56198501586914
    5. '_' → logprob: -14.06198501586914
    6. '___' → logprob: -14.56198501586914
    7. ' ' → logprob: -15.43698501586914
    8. 'Name' → logprob: -15.81198501586914
    9. ' ' → logprob: -17.31198501586914
    10. ' '__' → logprob: -17.31198501586914

Token 1159: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.19946618378162384
    2. '==' → logprob: -2.1994662284851074
    3. ' ==' → logprob: -2.6994662284851074
    4. 'name' → logprob: -6.824466228485107
    5. '=="' → logprob: -7.074466228485107
    6. ' __' → logprob: -7.949466228485107
    7. '=='' → logprob: -8.19946575164795
    8. 'if' → logprob: -9.82446575164795
    9. 'main' → logprob: -10.19946575164795
    10. '==
' → logprob: -11.57446575164795

Token 1160: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.128163257315464e-07
    2. '__.__' → logprob: -16.0
    3. '__.' → logprob: -16.5
    4. 'name' → logprob: -16.75
    5. '==' → logprob: -17.125
    6. '__
' → logprob: -17.75
    7. '____' → logprob: -17.875
    8. '___' → logprob: -18.0
    9. '_' → logprob: -18.125
    10. '__('' → logprob: -20.0

Token 1161: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.058287713676691055
    2. '==' → logprob: -2.9332876205444336
    3. ' ==' → logprob: -5.933287620544434
    4. '=="' → logprob: -7.308287620544434
    5. '=='' → logprob: -10.308287620544434
    6. '_' → logprob: -10.558287620544434
    7. '=' → logprob: -12.058287620544434
    8. '__.__' → logprob: -12.558287620544434
    9. '==
' → logprob: -12.558287620544434
    10. '___' → logprob: -13.183287620544434

Token 1162: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1602371335029602
    2. ''' → logprob: -1.9102370738983154
    3. '__' → logprob: -11.910237312316895
    4. ' "__' → logprob: -12.160237312316895
    5. ' '__' → logprob: -14.660237312316895
    6. '"user' → logprob: -16.160236358642578
    7. '("__' → logprob: -16.285236358642578
    8. '('__' → logprob: -16.410236358642578
    9. '"name' → logprob: -17.035236358642578
    10. ''"' → logprob: -17.160236358642578

Token 1163: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0006357124075293541
    2. '__' → logprob: -8.000636100769043
    3. 'name' → logprob: -8.125636100769043
    4. 'built' → logprob: -13.125636100769043
    5. 'if' → logprob: -13.875636100769043
    6. '_main' → logprob: -15.500636100769043
    7. 'print' → logprob: -15.500636100769043
    8. '____' → logprob: -15.750636100769043
    9. 'builtin' → logprob: -15.875636100769043
    10. '(main' → logprob: -16.625635147094727

Token 1164: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.0015164113137871027
    2. '__' → logprob: -6.501516342163086
    3. '__":
' → logprob: -11.251516342163086
    4. '_' → logprob: -14.251516342163086
    5. '':
' → logprob: -14.751516342163086
    6. '__:' → logprob: -17.126516342163086
    7. '__
' → logprob: -17.876516342163086
    8. '_main' → logprob: -18.876516342163086
    9. '('__' → logprob: -19.001516342163086
    10. '():
' → logprob: -19.126516342163086

Token 1165: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -8.888114098226652e-05
    2. '   ' → logprob: -9.500088691711426
    3. '	main' → logprob: -11.750088691711426
    4. ' main' → logprob: -12.375088691711426
    5. '
' → logprob: -13.875088691711426
    6. '    
' → logprob: -14.500088691711426
    7. '(main' → logprob: -15.875088691711426
    8. '_main' → logprob: -16.000089645385742
    9. '.main' → logprob: -17.750089645385742
    10. ' ' → logprob: -18.875089645385742

Token 1166: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.25
    3. '	main' → logprob: -21.25
    4. '   ' → logprob: -24.0
    5. 'import' → logprob: -25.0
    6. '_main' → logprob: -25.375
    7. '.main' → logprob: -26.5
    8. '(main' → logprob: -27.25
    9. 'Main' → logprob: -28.125
    10. ' ' → logprob: -30.625

Token 1167: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1165
Tokens correctement prédits (1ère position, stricte): 539
Tokens correctement prédits (1ère position, avec adaptation): 589
Tokens correctement prédits (top 10): 1014
Précision stricte (1ère position): 46.27%
Précision adaptée (1ère position): 50.56%
Précision (top 10): 87.04%
================================================================================
