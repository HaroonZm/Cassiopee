================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin
from itertools import combinations, product

def main():
    N = int(stdin.readline())
    ans = set()

    rng = range(1, N + 1)
    if N % 2 == 0:
        for i in rng:
            k = N - i + 1
            skip = {i, k}
            idx = [j for j in rng if j not in skip]
            ans.update({tuple(sorted((i, j))) for j in idx})
            ans.update({tuple(sorted((k, j))) for j in idx})
    else:
        ans.update((min(i, N), max(i, N)) for i in range(1, N))
        for i in range(1, N):
            k = N - i
            skip = {i, k}
            idx = [j for j in rng if j not in skip]
            ans.update({tuple(sorted((i, j))) for j in idx})
            ans.update({tuple(sorted((k, j))) for j in idx})

    print(len(ans))
    for a, b in ans:
        print(a, b)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.036664560437202454
    2. 'exit' → logprob: -4.1616644859313965
    3. ' argv' → logprob: -4.1616644859313965
    4. 'stdout' → logprob: -6.2866644859313965
    5. 'path' → logprob: -7.0366644859313965
    6. ' exit' → logprob: -7.0366644859313965
    7. 'stdin' → logprob: -7.1616644859313965
    8. 'import' → logprob: -8.411664962768555
    9. 'version' → logprob: -9.536664962768555
    10. 'stderr' → logprob: -9.661664962768555

Token 4: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0020684218034148216
    2. '.readline' → logprob: -6.627068519592285
    3. '.
' → logprob: -8.252068519592285
    4. '\n' → logprob: -8.627068519592285
    5. 'import' → logprob: -9.627068519592285
    6. '
' → logprob: -9.627068519592285
    7. '.read' → logprob: -9.752068519592285
    8. '```' → logprob: -10.127068519592285
    9. 'newline' → logprob: -11.377068519592285
    10. 'for' → logprob: -11.627068519592285

Token 5: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06320580840110779
    2. '.readline' → logprob: -3.5632057189941406
    3. 'for' → logprob: -4.563205718994141
    4. '\n' → logprob: -4.688205718994141
    5. '
' → logprob: -5.938205718994141
    6. 'import' → logprob: -5.938205718994141
    7. 'print' → logprob: -6.188205718994141
    8. '.read' → logprob: -6.688205718994141
    9. '```' → logprob: -7.313205718994141
    10. ',' → logprob: -7.313205718994141

Token 6: ' itertools' (ID: 103178)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.033909738063812256
    2. ' sys' → logprob: -3.783909797668457
    3. ' io' → logprob: -4.783909797668457
    4. ' math' → logprob: -7.283909797668457
    5. ' typing' → logprob: -7.658909797668457
    6. 'os' → logprob: -7.908909797668457
    7. ' stdout' → logprob: -9.033909797668457
    8. ' itertools' → logprob: -9.033909797668457
    9. ' subprocess' → logprob: -9.283909797668457
    10. ' space' → logprob: -9.408909797668457

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.020581480115652084
    2. 'import' → logprob: -3.8955814838409424
    3. ' ' → logprob: -11.020581245422363
    4. '	import' → logprob: -11.645581245422363
    5. '.' → logprob: -12.395581245422363
    6. '_import' → logprob: -12.770581245422363
    7. ' im' → logprob: -13.645581245422363
    8. ' itertools' → logprob: -13.770581245422363
    9. '.import' → logprob: -13.770581245422363
    10. ' .' → logprob: -14.145581245422363

Token 8: ' combinations' (ID: 43835)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.0406745672225952
    2. 'is' → logprob: -1.2906745672225952
    3. 'per' → logprob: -2.2906746864318848
    4. 'product' → logprob: -2.4156746864318848
    5. 'chain' → logprob: -2.7906746864318848
    6. 'group' → logprob: -3.2906746864318848
    7. 'cycle' → logprob: -3.4156746864318848
    8. ' permutations' → logprob: -4.290674686431885
    9. 'com' → logprob: -4.540674686431885
    10. 'import' → logprob: -4.665674686431885

Token 9: ',' (ID: 11)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.25651243329048157
    2. '(' → logprob: -2.881512403488159
    3. 'for' → logprob: -3.131512403488159
    4. '\' → logprob: -3.131512403488159
    5. 'import' → logprob: -3.256512403488159
    6. '
' → logprob: -4.381512641906738
    7. '(
' → logprob: -5.131512641906738
    8. 'newline' → logprob: -5.131512641906738
    9. 'print' → logprob: -5.756512641906738
    10. 'a' → logprob: -5.881512641906738

Token 10: ' product' (ID: 1888)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.9717842936515808
    2. 'chain' → logprob: -1.5967843532562256
    3. ' permutations' → logprob: -1.8467843532562256
    4. 'product' → logprob: -2.0967843532562256
    5. 'com' → logprob: -2.4717843532562256
    6. ' chain' → logprob: -3.0967843532562256
    7. ' product' → logprob: -5.7217841148376465
    8. 'acc' → logprob: -6.4717841148376465
    9. 'group' → logprob: -6.7217841148376465
    10. 'count' → logprob: -7.2217841148376465

Token 11: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.28956568241119385
    2. '
' → logprob: -2.2895655632019043
    3. '(' → logprob: -2.9145655632019043
    4. '(
' → logprob: -3.5395655632019043
    5. '\' → logprob: -3.6645655632019043
    6. 'newline' → logprob: -4.289565563201904
    7. 'import' → logprob: -4.539565563201904
    8. 'for' → logprob: -5.289565563201904
    9. '```' → logprob: -5.914565563201904
    10. '' → logprob: -6.039565563201904

Token 12: 'def' (ID: 1314)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.7143109440803528
    2. '\n' → logprob: -1.589310884475708
    3. '`' → logprob: -2.839310884475708
    4. '(' → logprob: -3.089310884475708
    5. 'd' → logprob: -3.214310884475708
    6. 'for' → logprob: -3.589310884475708
    7. '.' → logprob: -4.089311122894287
    8. 'n' → logprob: -4.089311122894287
    9. 'def' → logprob: -4.214311122894287
    10. '```' → logprob: -4.214311122894287

Token 13: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03597307950258255
    2. ' generate' → logprob: -5.035973072052002
    3. ' space' → logprob: -5.035973072052002
    4. ' calculate' → logprob: -5.285973072052002
    5. ' solve' → logprob: -5.785973072052002
    6. ' factorial' → logprob: -5.910973072052002
    7. ' find' → logprob: -6.285973072052002
    8. ' process' → logprob: -6.785973072052002
    9. ' main' → logprob: -6.785973072052002
    10. ' _' → logprob: -7.035973072052002

Token 14: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018226856365799904
    2. '():' → logprob: -4.143226623535156
    3. '(:' → logprob: -6.643226623535156
    4. ':' → logprob: -7.643226623535156
    5. ' (' → logprob: -9.393226623535156
    6. '(
' → logprob: -9.393226623535156
    7. '):' → logprob: -9.768226623535156
    8. '(":' → logprob: -9.893226623535156
    9. '```' → logprob: -10.268226623535156
    10. '(`' → logprob: -10.893226623535156

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39425691962242126
    2. ' ' → logprob: -2.394256830215454
    3. '(' → logprob: -2.644256830215454
    4. '    
' → logprob: -3.144256830215454
    5. '    ' → logprob: -3.394256830215454
    6. '\' → logprob: -3.519256830215454
    7. ')' → logprob: -4.644257068634033
    8. '<|end|>' → logprob: -4.769257068634033
    9. ' 
' → logprob: -5.019257068634033
    10. 'a' → logprob: -5.269257068634033

Token 16: ' N' (ID: 478)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.735691487789154
    2. 'n' → logprob: -1.7356915473937988
    3. ' lines' → logprob: -2.110691547393799
    4. ' data' → logprob: -2.735691547393799
    5. ' input' → logprob: -2.860691547393799
    6. ' for' → logprob: -3.735691547393799
    7. '   ' → logprob: -3.860691547393799
    8. ' items' → logprob: -4.360691547393799
    9. ' numbers' → logprob: -4.985691547393799
    10. 'data' → logprob: -4.985691547393799

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005864801350980997
    2. '=' → logprob: -5.63086462020874
    3. ' ' → logprob: -6.25586462020874
    4. ',' → logprob: -8.380865097045898
    5. ' ,' → logprob: -9.380865097045898
    6. '=int' → logprob: -11.630865097045898
    7. '  ' → logprob: -12.255865097045898
    8. '    ' → logprob: -13.130865097045898
    9. ' =
' → logprob: -13.255865097045898
    10. '   ' → logprob: -13.380865097045898

Token 18: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.01854788139462471
    2. 'int' → logprob: -4.018548011779785
    3. ' ' → logprob: -7.893548011779785
    4. '=int' → logprob: -12.393548011779785
    5. '10' → logprob: -12.518548011779785
    6. ' map' → logprob: -12.643548011779785
    7. '5' → logprob: -12.643548011779785
    8. ' len' → logprob: -13.143548011779785
    9. '20' → logprob: -13.268548011779785
    10. ' input' → logprob: -13.768548011779785

Token 19: '(stdin' (ID: 176594)
  Prédit: '(stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.1443282514810562
    2. '(' → logprob: -2.3943283557891846
    3. '(input' → logprob: -3.1443283557891846
    4. '(st' → logprob: -10.144328117370605
    5. 'stdin' → logprob: -11.394328117370605
    6. ' (' → logprob: -11.644328117370605
    7. 'input' → logprob: -13.144328117370605
    8. '()' → logprob: -13.519328117370605
    9. '.stdin' → logprob: -14.269328117370605
    10. ' stdin' → logprob: -14.519328117370605

Token 20: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00023572170175611973
    2. '.read' → logprob: -8.500235557556152
    3. '.' → logprob: -10.375235557556152
    4. '().' → logprob: -14.375235557556152
    5. 'read' → logprob: -15.625235557556152
    6. '.readlines' → logprob: -15.750235557556152
    7. ')' → logprob: -16.50023651123047
    8. ' readline' → logprob: -17.00023651123047
    9. ' .' → logprob: -18.37523651123047
    10. ').' → logprob: -19.00023651123047

Token 21: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.008918149396777153
    2. '()' → logprob: -4.883918285369873
    3. ')' → logprob: -6.883918285369873
    4. '().' → logprob: -8.508917808532715
    5. '()))' → logprob: -9.758917808532715
    6. ' ())' → logprob: -11.008917808532715
    7. '())
' → logprob: -12.258917808532715
    8. '(' → logprob: -13.008917808532715
    9. '))' → logprob: -14.133917808532715
    10. '()),' → logprob: -14.508917808532715

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47604265809059143
    2. ')' → logprob: -2.1010427474975586
    3. '
' → logprob: -2.4760427474975586
    4. '    
' → logprob: -2.4760427474975586
    5. ' ' → logprob: -3.4760427474975586
    6. ' 
' → logprob: -3.9760427474975586
    7. ' for' → logprob: -4.976042747497559
    8. 'for' → logprob: -5.351042747497559
    9. '  
' → logprob: -5.476042747497559
    10. '\n' → logprob: -5.851042747497559

Token 23: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0653377771377563
    2. 'for' → logprob: -1.3153377771377563
    3. ' for' → logprob: -2.315337657928467
    4. ')' → logprob: -2.315337657928467
    5. ' ' → logprob: -3.315337657928467
    6. 'items' → logprob: -3.815337657928467
    7. 'data' → logprob: -4.315337657928467
    8. ' items' → logprob: -4.690337657928467
    9. ' A' → logprob: -5.065337657928467
    10. '    
' → logprob: -5.190337657928467

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006043862085789442
    2. '=' → logprob: -5.131043910980225
    3. '_' → logprob: -10.256043434143066
    4. ' ' → logprob: -10.256043434143066
    5. ' +=' → logprob: -10.381043434143066
    6. ')' → logprob: -12.756043434143066
    7. 's' → logprob: -13.006043434143066
    8. ' =
' → logprob: -13.006043434143066
    9. '  ' → logprob: -13.756043434143066
    10. ' =)' → logprob: -14.006043434143066

Token 25: ' set' (ID: 920)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2884357273578644
    2. '0' → logprob: -2.038435697555542
    3. ' []' → logprob: -2.788435697555542
    4. ' set' → logprob: -3.788435697555542
    5. '[]' → logprob: -4.163435935974121
    6. 'set' → logprob: -4.288435935974121
    7. ' float' → logprob: -6.163435935974121
    8. 'float' → logprob: -6.413435935974121
    9. ' [' → logprob: -7.663435935974121
    10. ' N' → logprob: -7.913435935974121

Token 26: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20187890529632568
    2. '(' → logprob: -1.7018789052963257
    3. '(()' → logprob: -8.576878547668457
    4. '((' → logprob: -8.951878547668457
    5. '([]' → logprob: -9.576878547668457
    6. '('' → logprob: -10.201878547668457
    7. '([' → logprob: -11.326878547668457
    8. '([(' → logprob: -11.826878547668457
    9. '(),' → logprob: -12.826878547668457
    10. '()
' → logprob: -13.326878547668457

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10184579342603683
    2. '
' → logprob: -3.1018457412719727
    3. ' for' → logprob: -3.8518457412719727
    4. '    
' → logprob: -4.226845741271973
    5. 'for' → logprob: -4.601845741271973
    6. ' 
' → logprob: -6.601845741271973
    7. '<|end|>' → logprob: -6.601845741271973
    8. '  
' → logprob: -6.976845741271973
    9. ' ' → logprob: -7.351845741271973
    10. '\n' → logprob: -7.476845741271973

Token 28: ' rng' (ID: 76666)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16293929517269135
    2. ' for' → logprob: -1.9129393100738525
    3. '   ' → logprob: -5.912939071655273
    4. ' lines' → logprob: -12.912939071655273
    5. '```' → logprob: -13.412939071655273
    6. ' ' → logprob: -14.412939071655273
    7. ' A' → logprob: -14.537939071655273
    8. '    
' → logprob: -14.912939071655273
    9. 'lines' → logprob: -15.287939071655273
    10. '	for' → logprob: -15.412939071655273

Token 29: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.028108546510338783
    2. '(' → logprob: -3.903108596801758
    3. ' =' → logprob: -5.403108596801758
    4. '=' → logprob: -6.403108596801758
    5. '(e' → logprob: -7.153108596801758
    6. '   ' → logprob: -8.653108596801758
    7. '=e' → logprob: -9.028108596801758
    8. '```' → logprob: -9.528108596801758
    9. '(range' → logprob: -9.778108596801758
    10. '1' → logprob: -10.528108596801758

Token 30: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02497255615890026
    2. ' range' → logprob: -4.399972438812256
    3. '(range' → logprob: -4.399972438812256
    4. '(' → logprob: -10.274972915649414
    5. 'product' → logprob: -10.399972915649414
    6. 'list' → logprob: -11.399972915649414
    7. 'com' → logprob: -11.399972915649414
    8. 'comb' → logprob: -12.149972915649414
    9. ' combinations' → logprob: -12.774972915649414
    10. 'ranges' → logprob: -12.774972915649414

Token 31: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04860156774520874
    2. '(N' → logprob: -3.0486016273498535
    3. '(n' → logprob: -12.298601150512695
    4. '(len' → logprob: -12.423601150512695
    5. ' (' → logprob: -13.423601150512695
    6. '(M' → logprob: -14.048601150512695
    7. '((' → logprob: -14.048601150512695
    8. '(i' → logprob: -14.423601150512695
    9. '(A' → logprob: -15.423601150512695
    10. '1' → logprob: -15.548601150512695

Token 32: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6981677412986755
    2. '(N' → logprob: -0.6981677412986755
    3. '1' → logprob: -5.57316780090332
    4. 'N' → logprob: -6.82316780090332
    5. '(n' → logprob: -10.44816780090332
    6. '2' → logprob: -10.94816780090332
    7. ')' → logprob: -11.32316780090332
    8. '(M' → logprob: -12.07316780090332
    9. '3' → logprob: -12.32316780090332
    10. '(len' → logprob: -12.44816780090332

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004011084325611591
    2. ' ,' → logprob: -5.629011154174805
    3. '(N' → logprob: -8.129011154174805
    4. ',N' → logprob: -9.504011154174805
    5. '(' → logprob: -10.254011154174805
    6. ' ' → logprob: -12.879011154174805
    7. '1' → logprob: -13.254011154174805
    8. 'N' → logprob: -14.754011154174805
    9. '   ' → logprob: -15.129011154174805
    10. '(),' → logprob: -15.379011154174805

Token 34: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.07901658117771149
    2. ' N' → logprob: -2.57901668548584
    3. '10' → logprob: -9.20401668548584
    4. ' ' → logprob: -11.45401668548584
    5. '11' → logprob: -12.07901668548584
    6. '9' → logprob: -12.82901668548584
    7. '7' → logprob: -13.45401668548584
    8. '20' → logprob: -14.20401668548584
    9. '21' → logprob: -14.32901668548584
    10. '	N' → logprob: -14.57901668548584

Token 35: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17978784441947937
    2. ' +' → logprob: -1.8047878742218018
    3. ')' → logprob: -10.304787635803223
    4. '))' → logprob: -12.554787635803223
    5. ' ' → logprob: -13.304787635803223
    6. ' )' → logprob: -13.304787635803223
    7. '   ' → logprob: -14.554787635803223
    8. '-' → logprob: -14.554787635803223
    9. '+)' → logprob: -14.929787635803223
    10. '1' → logprob: -15.554787635803223

Token 36: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010373335098847747
    2. ' ' → logprob: -6.876037120819092
    3. '2' → logprob: -12.50103759765625
    4. '   ' → logprob: -14.62603759765625
    5. '  ' → logprob: -15.87603759765625
    6. '3' → logprob: -16.25103759765625
    7. '```' → logprob: -16.25103759765625
    8. ' ' → logprob: -17.31353759765625
    9. ')' → logprob: -17.68853759765625
    10. '11' → logprob: -17.68853759765625

Token 37: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.919942486798391e-05
    2. ' ' → logprob: -9.750059127807617
    3. '2' → logprob: -14.250059127807617
    4. '```' → logprob: -16.375059127807617
    5. '   ' → logprob: -16.875059127807617
    6. '  ' → logprob: -17.562559127807617
    7. '3' → logprob: -17.875059127807617
    8. '１' → logprob: -17.875059127807617
    9. '11' → logprob: -18.062559127807617
    10. ')' → logprob: -18.125059127807617

Token 38: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.008129963040119e-06
    2. ')
' → logprob: -13.250003814697266
    3. ' )' → logprob: -13.750003814697266
    4. '))' → logprob: -14.375003814697266
    5. '   ' → logprob: -14.875003814697266
    6. ')

' → logprob: -17.125003814697266
    7. '),' → logprob: -17.250003814697266
    8. ')))' → logprob: -17.250003814697266
    9. ')`' → logprob: -17.500003814697266
    10. ' ' → logprob: -17.750003814697266

Token 39: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5280742049217224
    2. '   ' → logprob: -1.2780742645263672
    3. '    
' → logprob: -2.278074264526367
    4. '  
' → logprob: -4.028074264526367
    5. '<|end|>' → logprob: -5.653074264526367
    6. ' for' → logprob: -6.778074264526367
    7. 'for' → logprob: -6.778074264526367
    8. ' 
' → logprob: -6.903074264526367
    9. '   
' → logprob: -7.028074264526367
    10. ')' → logprob: -7.153074264526367

Token 40: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6393179297447205
    2. '   ' → logprob: -1.1393179893493652
    3. ' for' → logprob: -2.0143179893493652
    4. '
' → logprob: -4.764317989349365
    5. '    
' → logprob: -4.764317989349365
    6. '  
' → logprob: -7.389317989349365
    7. '<|end|>' → logprob: -8.389317512512207
    8. ' ' → logprob: -8.889317512512207
    9. '	for' → logprob: -8.889317512512207
    10. '   
' → logprob: -9.014317512512207

Token 41: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.03563424199819565
    2. ' ' → logprob: -3.7856342792510986
    3. 'N' → logprob: -4.5356340408325195
    4. ' not' → logprob: -7.1606340408325195
    5. ' len' → logprob: -7.7856340408325195
    6. '_' → logprob: -9.16063404083252
    7. '  ' → logprob: -9.66063404083252
    8. ' __' → logprob: -10.16063404083252
    9. '__' → logprob: -10.53563404083252
    10. ' '' → logprob: -10.78563404083252

Token 42: ' %' (ID: 1851)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.7635168433189392
    2. ' ==' → logprob: -2.138516902923584
    3. '%' → logprob: -2.388516902923584
    4. ' <' → logprob: -2.888516902923584
    5. '>=' → logprob: -2.888516902923584
    6. ' <=' → logprob: -3.013516902923584
    7. ' %' → logprob: -3.138516902923584
    8. ' >' → logprob: -3.388516902923584
    9. '==' → logprob: -3.388516902923584
    10. ' ' → logprob: -3.638516902923584

Token 43: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5770643353462219
    2. '2' → logprob: -0.8270643353462219
    3. '3' → logprob: -7.202064514160156
    4. '4' → logprob: -8.327064514160156
    5. '6' → logprob: -10.327064514160156
    6. '```' → logprob: -10.827064514160156
    7. '7' → logprob: -11.452064514160156
    8. '1' → logprob: -11.577064514160156
    9. '20' → logprob: -11.702064514160156
    10. '==' → logprob: -11.827064514160156

Token 44: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006006922340020537
    2. '3' → logprob: -7.875600814819336
    3. ' ' → logprob: -8.750600814819336
    4. '4' → logprob: -10.250600814819336
    5. '6' → logprob: -11.625600814819336
    6. '7' → logprob: -12.375600814819336
    7. '10' → logprob: -12.375600814819336
    8. '5' → logprob: -13.000600814819336
    9. '8' → logprob: -13.625600814819336
    10. '```' → logprob: -13.938100814819336

Token 45: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.05091971158981323
    2. '==' → logprob: -3.050919771194458
    3. ' !=' → logprob: -6.300919532775879
    4. ':' → logprob: -7.925919532775879
    5. '!=' → logprob: -10.050919532775879
    6. ' ' → logprob: -10.300919532775879
    7. ' =' → logprob: -10.800919532775879
    8. '=' → logprob: -11.425919532775879
    9. ' :' → logprob: -11.425919532775879
    10. ')' → logprob: -12.175919532775879

Token 46: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04607466235756874
    2. ' ' → logprob: -3.171074628829956
    3. '1' → logprob: -5.796074867248535
    4. '2' → logprob: -10.546074867248535
    5. '  ' → logprob: -14.171074867248535
    6. ' ' → logprob: -14.421074867248535
    7. '```' → logprob: -14.671074867248535
    8. ')' → logprob: -15.171074867248535
    9. '<|end|>' → logprob: -15.421074867248535
    10. '   ' → logprob: -15.608574867248535

Token 47: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006766056176275015
    2. '1' → logprob: -5.256765842437744
    3. ' ' → logprob: -7.006765842437744
    4. '2' → logprob: -7.381765842437744
    5. '```' → logprob: -14.006766319274902
    6. '  ' → logprob: -15.631766319274902
    7. ')' → logprob: -15.881766319274902
    8. '3' → logprob: -16.131765365600586
    9. ':' → logprob: -16.131765365600586
    10. '   ' → logprob: -16.319265365600586

Token 48: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003633923130109906
    2. ' :' → logprob: -5.628633975982666
    3. ':
' → logprob: -10.753633499145508
    4. '):' → logprob: -11.503633499145508
    5. ' :
' → logprob: -13.753633499145508
    6. ':**' → logprob: -15.253633499145508
    7. ':return' → logprob: -15.378633499145508
    8. '   ' → logprob: -15.753633499145508
    9. '():' → logprob: -16.128633499145508
    10. ' and' → logprob: -16.253633499145508

Token 49: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08393634110689163
    2. '   ' → logprob: -3.3339364528656006
    3. '    ' → logprob: -3.4589364528656006
    4. '    
' → logprob: -4.9589362144470215
    5. ' ' → logprob: -6.0839362144470215
    6. '        
' → logprob: -6.8339362144470215
    7. '\n' → logprob: -7.2089362144470215
    8. '
' → logprob: -7.4589362144470215
    9. '<|end|>' → logprob: -8.20893669128418
    10. '        ' → logprob: -8.33393669128418

Token 50: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05992339178919792
    2. 'for' (adapté à ' for') → logprob: -3.4349234104156494
    3. '   ' → logprob: -5.30992317199707
    4. ' length' → logprob: -5.55992317199707
    5. ' ans' → logprob: -5.80992317199707
    6. ' mid' → logprob: -5.93492317199707
    7. ' half' → logprob: -6.05992317199707
    8. ' pairs' → logprob: -6.55992317199707
    9. ' comb' → logprob: -6.68492317199707
    10. ' k' → logprob: -7.68492317199707

Token 51: ' i' (ID: 575)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.3128292560577393
    2. ' comb' → logprob: -2.4378292560577393
    3. ' c' → logprob: -2.5628292560577393
    4. 'i' → logprob: -2.5628292560577393
    5. ' length' → logprob: -2.6878292560577393
    6. 'c' → logprob: -2.6878292560577393
    7. ' a' → logprob: -2.8128292560577393
    8. ' i' → logprob: -3.0628292560577393
    9. ' size' → logprob: -3.1878292560577393
    10. ' subset' → logprob: -3.1878292560577393

Token 52: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01323294173926115
    2. 'in' → logprob: -4.388232707977295
    3. ' ' → logprob: -7.513232707977295
    4. ',' → logprob: -9.138233184814453
    5. 'n' → logprob: -10.138233184814453
    6. '  ' → logprob: -11.138233184814453
    7. ' ,' → logprob: -12.638233184814453
    8. 's' → logprob: -13.138233184814453
    9. '   ' → logprob: -13.638233184814453
    10. 'space' → logprob: -13.763233184814453

Token 53: ' rng' (ID: 76666)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3078210949897766
    2. ' rng' → logprob: -1.6828210353851318
    3. 'range' → logprob: -2.932821035385132
    4. 'rng' → logprob: -4.057821273803711
    5. ' product' → logprob: -5.682821273803711
    6. ' combinations' → logprob: -6.057821273803711
    7. 'com' → logprob: -6.807821273803711
    8. ' ' → logprob: -7.807821273803711
    9. 'r' → logprob: -8.432821273803711
    10. ' xrange' → logprob: -8.682821273803711

Token 54: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008479589596390724
    2. ' :' → logprob: -5.258479595184326
    3. ',' → logprob: -6.133479595184326
    4. '):' → logprob: -7.383479595184326
    5. '   ' → logprob: -9.508479118347168
    6. ' ' → logprob: -9.758479118347168
    7. ' in' → logprob: -9.883479118347168
    8. '    ' → logprob: -10.383479118347168
    9. ' ):' → logprob: -10.508479118347168
    10. ':
' → logprob: -10.633479118347168

Token 55: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6573953628540039
    2. ':' → logprob: -0.7823953628540039
    3. ' :' → logprob: -4.907395362854004
    4. '   ' → logprob: -5.282395362854004
    5. '<|end|>' → logprob: -5.907395362854004
    6. ':
' → logprob: -6.407395362854004
    7. ' ' → logprob: -6.532395362854004
    8. '           ' → logprob: -6.532395362854004
    9. ',' → logprob: -6.532395362854004
    10. '        ' → logprob: -7.407395362854004

Token 56: ' k' (ID: 372)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4352107048034668
    2. ' if' → logprob: -2.185210704803467
    3. ' ' → logprob: -2.435210704803467
    4. '       ' → logprob: -2.935210704803467
    5. 'for' → logprob: -3.185210704803467
    6. '    ' → logprob: -3.685210704803467
    7. '   ' → logprob: -4.685210704803467
    8. ' ans' → logprob: -4.935210704803467
    9. '        ' → logprob: -5.310210704803467
    10. 'if' → logprob: -5.810210704803467

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010376979596912861
    2. '=' → logprob: -5.010376930236816
    3. ' in' → logprob: -6.760376930236816
    4. 'f' → logprob: -7.135376930236816
    5. 'ey' → logprob: -8.010376930236816
    6. 'ernel' → logprob: -8.635376930236816
    7. '=i' → logprob: -8.760376930236816
    8. ',' → logprob: -8.760376930236816
    9. 'for' → logprob: -8.885376930236816
    10. ' for' → logprob: -9.260376930236816

Token 58: ' N' (ID: 478)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3412436842918396
    2. 'i' → logprob: -1.7162437438964844
    3. ' N' → logprob: -2.7162437438964844
    4. 'N' → logprob: -4.091243743896484
    5. ' ' → logprob: -4.466243743896484
    6. ' (' → logprob: -4.841243743896484
    7. ' rng' → logprob: -6.341243743896484
    8. '(i' → logprob: -6.841243743896484
    9. ' min' → logprob: -7.091243743896484
    10. 'rng' → logprob: -7.216243743896484

Token 59: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8613134026527405
    2. ' -' → logprob: -0.9863134026527405
    3. ' //' → logprob: -2.4863133430480957
    4. '//' → logprob: -2.4863133430480957
    5. '-i' → logprob: -3.3613133430480957
    6. ' ' → logprob: -6.486313343048096
    7. '+' → logprob: -8.111313819885254
    8. '   ' → logprob: -8.361313819885254
    9. '-k' → logprob: -8.611313819885254
    10. ' i' → logprob: -8.861313819885254

Token 60: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008722471073269844
    2. ' i' → logprob: -4.758722305297852
    3. '1' → logprob: -10.383722305297852
    4. '2' → logprob: -10.633722305297852
    5. ' ' → logprob: -11.258722305297852
    6. 'k' → logprob: -11.383722305297852
    7. '           ' → logprob: -11.383722305297852
    8. '   ' → logprob: -12.258722305297852
    9. '    ' → logprob: -13.008722305297852
    10. '  ' → logprob: -13.133722305297852

Token 61: ' +' (ID: 659)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020056061446666718
    2. '
' → logprob: -4.270056247711182
    3. '       ' → logprob: -6.520056247711182
    4. '            
' → logprob: -7.270056247711182
    5. ' ' → logprob: -7.645056247711182
    6. ' 
' → logprob: -7.770056247711182
    7. '<|end|>' → logprob: -8.020055770874023
    8. '   ' → logprob: -8.395055770874023
    9. '
' → logprob: -8.395055770874023
    10. '  
' → logprob: -8.520055770874023

Token 62: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005936263594776392
    2. ' ' → logprob: -5.130936145782471
    3. '2' → logprob: -12.380936622619629
    4. '   ' → logprob: -14.005936622619629
    5. '```' → logprob: -14.505936622619629
    6. '           ' → logprob: -15.068436622619629
    7. '...' → logprob: -15.443436622619629
    8. 'i' → logprob: -15.505936622619629
    9. '  ' → logprob: -15.630936622619629
    10. '0' → logprob: -15.818436622619629

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001468067930545658
    2. ' ' → logprob: -8.875146865844727
    3. '2' → logprob: -12.250146865844727
    4. '0' → logprob: -14.562646865844727
    5. '```' → logprob: -15.375146865844727
    6. 'i' → logprob: -15.437646865844727
    7. '...' → logprob: -15.750146865844727
    8. '`' → logprob: -15.875146865844727
    9. '   ' → logprob: -16.312646865844727
    10. ')' → logprob: -16.500146865844727

Token 64: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01864430122077465
    2. '
' → logprob: -4.518644332885742
    3. '            
' → logprob: -5.643644332885742
    4. '<|end|>' → logprob: -6.643644332885742
    5. '       ' → logprob: -7.393644332885742
    6. ':' → logprob: -7.768644332885742
    7. ' 
' → logprob: -8.518644332885742
    8. '            ' → logprob: -8.893644332885742
    9. '
' → logprob: -9.018644332885742
    10. ')' → logprob: -9.018644332885742

Token 65: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022774476557970047
    2. '<|end|>' → logprob: -4.272774696350098
    3. '
' → logprob: -5.147774696350098
    4. '            
' → logprob: -6.522774696350098
    5. ')' → logprob: -7.897774696350098
    6. '<|end|>' → logprob: -8.022774696350098
    7. ':' → logprob: -9.272774696350098
    8. '       ' → logprob: -9.397774696350098
    9. ',' → logprob: -9.647774696350098
    10. ' 
' → logprob: -10.272774696350098

Token 66: ' skip' (ID: 16677)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11077556014060974
    2. 'if' → logprob: -3.4857754707336426
    3. ' if' → logprob: -3.7357754707336426
    4. '
' → logprob: -4.360775470733643
    5. '            
' → logprob: -4.860775470733643
    6. 'for' → logprob: -5.360775470733643
    7. '       ' → logprob: -5.610775470733643
    8. ' for' → logprob: -5.610775470733643
    9. ' ans' → logprob: -5.860775470733643
    10. ' ' → logprob: -5.985775470733643

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.703201949596405
    2. '_' → logprob: -1.7032020092010498
    3. '           ' → logprob: -2.82820200920105
    4. '=' → logprob: -2.82820200920105
    5. ' ' → logprob: -2.95320200920105
    6. '            ' → logprob: -3.57820200920105
    7. '   ' → logprob: -3.82820200920105
    8. 'continue' → logprob: -4.078201770782471
    9. '    ' → logprob: -4.328201770782471
    10. '_continue' → logprob: -4.453201770782471

Token 68: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -1.3803890943527222
    2. 'i' → logprob: -1.5053890943527222
    3. 'k' → logprob: -2.0053892135620117
    4. '{i' → logprob: -2.2553892135620117
    5. 'set' → logprob: -3.0053892135620117
    6. ' {' → logprob: -3.0053892135620117
    7. '{k' → logprob: -3.1303892135620117
    8. ' i' → logprob: -3.5053892135620117
    9. 'fro' → logprob: -3.7553892135620117
    10. ' k' → logprob: -4.130389213562012

Token 69: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12914320826530457
    2. 'k' → logprob: -2.129143238067627
    3. ' i' → logprob: -6.879143238067627
    4. '           ' → logprob: -7.379143238067627
    5. '               ' → logprob: -8.379142761230469
    6. ' k' → logprob: -8.879142761230469
    7. 'j' → logprob: -10.004142761230469
    8. '}' → logprob: -10.254142761230469
    9. ')' → logprob: -11.004142761230469
    10. '                   ' → logprob: -11.254142761230469

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00798892043530941
    2. ' ,' → logprob: -5.132988929748535
    3. '}' → logprob: -6.507988929748535
    4. ')' → logprob: -8.507988929748535
    5. ',k' → logprob: -8.632988929748535
    6. ' }' → logprob: -9.632988929748535
    7. ',
' → logprob: -9.882988929748535
    8. ')}' → logprob: -11.257988929748535
    9. '<|end|>' → logprob: -11.632988929748535
    10. '           ' → logprob: -11.757988929748535

Token 71: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.38691434264183044
    2. 'k' → logprob: -1.1369143724441528
    3. '<|end|>' → logprob: -11.261914253234863
    4. ' ' → logprob: -11.511914253234863
    5. ' ' → logprob: -11.886914253234863
    6. '           ' → logprob: -12.511914253234863
    7. '            ' → logprob: -13.136914253234863
    8. '    ' → logprob: -13.761914253234863
    9. '	k' → logprob: -14.261914253234863
    10. ')' → logprob: -14.574414253234863

Token 72: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0050642830319702625
    2. '}
' → logprob: -5.380064487457275
    3. ' }' → logprob: -7.880064487457275
    4. '}
' → logprob: -10.130064010620117
    5. '           ' → logprob: -11.505064010620117
    6. ' }
' → logprob: -12.255064010620117
    7. '       ' → logprob: -12.880064010620117
    8. ',' → logprob: -13.005064010620117
    9. '}

' → logprob: -13.255064010620117
    10. '               ' → logprob: -13.255064010620117

Token 73: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013915134593844414
    2. '
' → logprob: -4.763915061950684
    3. '<|end|>' → logprob: -5.763915061950684
    4. '            
' → logprob: -6.888915061950684
    5. '       ' → logprob: -7.513915061950684
    6. '<|end|>' → logprob: -8.888915061950684
    7. ' ' → logprob: -9.388915061950684
    8. ' 
' → logprob: -9.888915061950684
    9. '               ' → logprob: -10.013915061950684
    10. ',' → logprob: -10.013915061950684

Token 74: ' idx' (ID: 14016)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6415578722953796
    2. ' for' → logprob: -1.2665579319000244
    3. '           ' → logprob: -1.8915579319000244
    4. '   ' → logprob: -4.891557693481445
    5. 'rest' → logprob: -5.516557693481445
    6. '       ' → logprob: -5.641557693481445
    7. ' rest' → logprob: -5.766557693481445
    8. 'valid' → logprob: -6.141557693481445
    9. ' valid' → logprob: -6.516557693481445
    10. ' subsets' → logprob: -6.641557693481445

Token 75: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.047534164041280746
    2. 'es' → logprob: -3.422534227371216
    3. ' =' → logprob: -4.422533988952637
    4. 'x' → logprob: -7.547533988952637
    5. '=' → logprob: -7.797533988952637
    6. '_set' → logprob: -8.422533988952637
    7. 'set' → logprob: -8.797533988952637
    8. 'ex' → logprob: -9.547533988952637
    9. '_list' → logprob: -9.922533988952637
    10. 'xs' → logprob: -10.047533988952637

Token 76: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.822365403175354
    2. '0' → logprob: -1.947365403175354
    3. ' [' → logprob: -1.947365403175354
    4. '[r' → logprob: -2.0723652839660645
    5. '[i' → logprob: -2.5723652839660645
    6. ' ' → logprob: -4.0723652839660645
    7. '1' → logprob: -4.5723652839660645
    8. '[N' → logprob: -4.6973652839660645
    9. 'rng' → logprob: -5.3223652839660645
    10. '[min' → logprob: -5.4473652839660645

Token 77: 'j' (ID: 73)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.056714754551649094
    2. 'j' → logprob: -2.9317147731781006
    3. 'v' → logprob: -7.9317145347595215
    4. 'n' → logprob: -7.9317145347595215
    5. ' x' → logprob: -7.9317145347595215
    6. 'e' → logprob: -8.68171501159668
    7. ' j' → logprob: -9.18171501159668
    8. 'c' → logprob: -9.55671501159668
    9. 'idx' → logprob: -9.68171501159668
    10. 'a' → logprob: -9.80671501159668

Token 78: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.004103096667677164
    2. 'for' → logprob: -5.504103183746338
    3. ' ' → logprob: -10.62910270690918
    4. ' in' → logprob: -14.75410270690918
    5. '	for' → logprob: -16.50410270690918
    6. 'in' → logprob: -18.37910270690918
    7. 'or' → logprob: -18.50410270690918
    8. ' or' → logprob: -19.37910270690918
    9. '```' → logprob: -19.50410270690918
    10. '<|end|>' → logprob: -19.62910270690918

Token 79: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.26956722140312195
    2. ' j' → logprob: -1.5195672512054443
    3. 'rng' → logprob: -4.644567012786865
    4. ' rng' → logprob: -4.894567012786865
    5. ' ' → logprob: -8.894567489624023
    6. 'range' → logprob: -9.519567489624023
    7. 'r' → logprob: -10.269567489624023
    8. ' in' → logprob: -10.394567489624023
    9. '	j' → logprob: -10.394567489624023
    10. ' ' → logprob: -11.332067489624023

Token 80: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12290473282337189
    2. 'in' → logprob: -2.3729047775268555
    3. 'n' → logprob: -3.9979047775268555
    4. ' ' → logprob: -6.6229047775268555
    5. 'j' → logprob: -7.4979047775268555
    6. ' rng' → logprob: -7.6229047775268555
    7. ' j' → logprob: -7.8729047775268555
    8. 'rng' → logprob: -7.8729047775268555
    9. 'r' → logprob: -8.372904777526855
    10. '<|end|>' → logprob: -8.747904777526855

Token 81: ' rng' (ID: 76666)
  Prédit: 'rng'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rng' → logprob: -0.027226123958826065
    2. ' rng' → logprob: -3.652226209640503
    3. 'r' → logprob: -7.652225971221924
    4. 'range' → logprob: -7.902225971221924
    5. 'rg' → logprob: -10.652226448059082
    6. ' range' → logprob: -10.902226448059082
    7. ' ' → logprob: -11.152226448059082
    8. 'rang' → logprob: -11.402226448059082
    9. 'rn' → logprob: -13.839726448059082
    10. 'rk' → logprob: -13.902226448059082

Token 82: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.001519026467576623
    2. 'if' → logprob: -6.501519203186035
    3. '           ' → logprob: -11.376519203186035
    4. '	if' → logprob: -13.251519203186035
    5. ' ' → logprob: -13.501519203186035
    6. '            ' → logprob: -13.626519203186035
    7. '               ' → logprob: -14.376519203186035
    8. '                ' → logprob: -16.00151824951172
    9. '   ' → logprob: -16.62651824951172
    10. '    ' → logprob: -17.00151824951172

Token 83: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.16023042798042297
    2. ' j' → logprob: -1.9102303981781006
    3. '	j' → logprob: -12.91023063659668
    4. '   ' → logprob: -13.16023063659668
    5. 'not' → logprob: -14.03523063659668
    6. ' not' → logprob: -14.66023063659668
    7. '    ' → logprob: -15.41023063659668
    8. ' ' → logprob: -15.78523063659668
    9. ' ' → logprob: -16.41023063659668
    10. '```' → logprob: -16.66023063659668

Token 84: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0022020016331225634
    2. 'not' → logprob: -6.127202033996582
    3. ' no' → logprob: -11.377202033996582
    4. ' ' → logprob: -12.252202033996582
    5. '	not' → logprob: -15.377202033996582
    6. ' !=' → logprob: -15.502202033996582
    7. '!=' → logprob: -17.002201080322266
    8. 'no' → logprob: -17.127201080322266
    9. '<|end|>' → logprob: -17.627201080322266
    10. '```' → logprob: -18.002201080322266

Token 85: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03929193690419197
    2. 'in' → logprob: -3.2892918586730957
    3. ' skip' → logprob: -7.039291858673096
    4. 'skip' → logprob: -8.164292335510254
    5. '(skip' → logprob: -9.414292335510254
    6. ' ' → logprob: -13.039292335510254
    7. '.skip' → logprob: -13.914292335510254
    8. '=' → logprob: -14.664292335510254
    9. '<|end|>' → logprob: -14.789292335510254
    10. 's' → logprob: -14.914292335510254

Token 86: ' skip' (ID: 16677)
  Prédit: 'skip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'skip' → logprob: -0.054887812584638596
    2. ' skip' → logprob: -2.9298877716064453
    3. '(skip' → logprob: -12.429887771606445
    4. ' ' → logprob: -14.304887771606445
    5. '   ' → logprob: -14.804887771606445
    6. 'sk' → logprob: -15.929887771606445
    7. '.skip' → logprob: -16.179887771606445
    8. 'stop' → logprob: -16.554887771606445
    9. 'ski' → logprob: -16.804887771606445
    10. '```' → logprob: -16.804887771606445

Token 87: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.265633419388905e-05
    2. ']
' → logprob: -10.250062942504883
    3. ' ]' → logprob: -10.625062942504883
    4. '           ' → logprob: -13.250062942504883
    5. ']

' → logprob: -15.125062942504883
    6. '       ' → logprob: -15.250062942504883
    7. ']
' → logprob: -15.625062942504883
    8. '               ' → logprob: -16.250062942504883
    9. ')]' → logprob: -16.250062942504883
    10. ')' → logprob: -16.375062942504883

Token 88: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007914289832115173
    2. '<|end|>' → logprob: -5.757914066314697
    3. '
' → logprob: -6.507914066314697
    4. '<|end|>' → logprob: -6.632914066314697
    5. '            
' → logprob: -7.132914066314697
    6. ',' → logprob: -7.507914066314697
    7. ' ' → logprob: -9.382914543151855
    8. '       ' → logprob: -9.632914543151855
    9. ')' → logprob: -9.632914543151855
    10. '.' → logprob: -9.882914543151855

Token 89: ' ans' (ID: 3345)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3549204468727112
    2. '           ' → logprob: -1.6049203872680664
    3. 'for' → logprob: -2.3549203872680664
    4. '   ' → logprob: -7.229920387268066
    5. '       ' → logprob: -7.354920387268066
    6. ' if' → logprob: -8.104920387268066
    7. ' pairs' → logprob: -8.229920387268066
    8. '            
' → logprob: -8.479920387268066
    9. 'pairs' → logprob: -9.229920387268066
    10. ' combinations' → logprob: -9.354920387268066

Token 90: '.update' (ID: 8689)
  Prédit: '.update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.5351635217666626
    2. '.' → logprob: -0.9101635217666626
    3. '.add' → logprob: -4.535163402557373
    4. '.union' → logprob: -7.410163402557373
    5. '.=' → logprob: -8.160163879394531
    6. '.extend' → logprob: -9.410163879394531
    7. '.up' → logprob: -9.660163879394531
    8. ' .' → logprob: -10.035163879394531
    9. '.setdefault' → logprob: -10.535163879394531
    10. '.append' → logprob: -10.660163879394531

Token 91: '({' (ID: 3972)
  Prédit: '(product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(product' → logprob: -0.4084329605102539
    2. '(com' → logprob: -1.158432960510254
    3. '(set' → logprob: -4.033432960510254
    4. '({' → logprob: -6.533432960510254
    5. '(' → logprob: -7.283432960510254
    6. '((' → logprob: -7.408432960510254
    7. 'product' → logprob: -8.408432960510254
    8. 'com' → logprob: -8.408432960510254
    9. '(list' → logprob: -8.658432960510254
    10. '(tuple' → logprob: -9.158432960510254

Token 92: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.2256888896226883
    2. 'fro' → logprob: -2.225688934326172
    3. '(tuple' → logprob: -3.100688934326172
    4. '(*' → logprob: -4.475688934326172
    5. ' tuple' → logprob: -4.600688934326172
    6. '(f' → logprob: -5.100688934326172
    7. '(i' → logprob: -5.600688934326172
    8. '(' → logprob: -5.600688934326172
    9. '(com' → logprob: -6.100688934326172
    10. '   ' → logprob: -6.225688934326172

Token 93: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.16234539449214935
    2. '(com' → logprob: -2.2873454093933105
    3. '(idx' → logprob: -3.6623454093933105
    4. '(product' → logprob: -4.6623454093933105
    5. '(' → logprob: -5.5373454093933105
    6. '(p' → logprob: -6.1623454093933105
    7. 'sorted' → logprob: -6.6623454093933105
    8. '(i' → logprob: -6.7873454093933105
    9. '(x' → logprob: -6.9123454093933105
    10. '(c' → logprob: -7.0373454093933105

Token 94: '((' (ID: 2054)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.543066680431366
    2. '(com' → logprob: -1.5430667400360107
    3. '((' → logprob: -2.5430667400360107
    4. '(j' → logprob: -3.5430667400360107
    5. '([' → logprob: -3.7930667400360107
    6. '(p' → logprob: -3.9180667400360107
    7. '(x' → logprob: -4.043066501617432
    8. '(combo' → logprob: -4.418066501617432
    9. '(' → logprob: -5.293066501617432
    10. '(i' → logprob: -5.918066501617432

Token 95: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.4803939759731293
    2. 'i' → logprob: -2.980393886566162
    3. '(a' → logprob: -3.230393886566162
    4. 'c' → logprob: -3.230393886566162
    5. '(x' → logprob: -3.605393886566162
    6. 'a' → logprob: -3.730393886566162
    7. '(c' → logprob: -3.980393886566162
    8. 'combo' → logprob: -3.980393886566162
    9. 'comb' → logprob: -3.980393886566162
    10. '(com' → logprob: -4.105393886566162

Token 96: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08211161196231842
    2. ',j' → logprob: -2.9571115970611572
    3. ' ,' → logprob: -3.9571115970611572
    4. ',p' → logprob: -6.207111835479736
    5. 'j' → logprob: -7.332111835479736
    6. ',c' → logprob: -7.457111835479736
    7. ' +' → logprob: -7.832111835479736
    8. ',x' → logprob: -7.957111835479736
    9. '+' → logprob: -8.082111358642578
    10. ')' → logprob: -8.082111358642578

Token 97: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.07829581946134567
    2. 'k' → logprob: -2.8282957077026367
    3. 'x' → logprob: -4.703295707702637
    4. ' j' → logprob: -5.703295707702637
    5. 'l' → logprob: -7.078295707702637
    6. 'a' → logprob: -7.578295707702637
    7. '   ' → logprob: -7.828295707702637
    8. 'm' → logprob: -8.328295707702637
    9. 'idx' → logprob: -8.453295707702637
    10. 'c' → logprob: -8.453295707702637

Token 98: ')))' (ID: 15975)
  Prédit: ')))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.0117204450070858
    2. '))' → logprob: -4.511720657348633
    3. ' ' → logprob: -7.886720657348633
    4. ')))
' → logprob: -8.886720657348633
    5. ')' → logprob: -9.386720657348633
    6. '   ' → logprob: -10.261720657348633
    7. '))))' → logprob: -11.761720657348633
    8. '))
' → logprob: -12.511720657348633
    9. '           ' → logprob: -12.511720657348633
    10. '  ' → logprob: -12.886720657348633

Token 99: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18753312528133392
    2. 'for' → logprob: -1.8125331401824951
    3. '           ' → logprob: -5.437532901763916
    4. '            ' → logprob: -7.062532901763916
    5. '    ' → logprob: -7.437532901763916
    6. '   ' → logprob: -7.687532901763916
    7. '       ' → logprob: -8.312533378601074
    8. ')' → logprob: -8.312533378601074
    9. '        ' → logprob: -8.562533378601074
    10. '          ' → logprob: -8.812533378601074

Token 100: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.18009693920612335
    2. ' j' → logprob: -1.805096983909607
    3. 'idx' → logprob: -8.430096626281738
    4. ' idx' → logprob: -9.305096626281738
    5. '           ' → logprob: -11.305096626281738
    6. '    ' → logprob: -11.930096626281738
    7. '	j' → logprob: -12.555096626281738
    8. '_j' → logprob: -12.680096626281738
    9. 'jj' → logprob: -12.680096626281738
    10. '   ' → logprob: -13.055096626281738

Token 101: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.017785802483558655
    2. ' idx' → logprob: -4.642786026000977
    3. 'in' → logprob: -5.142786026000977
    4. 'idx' → logprob: -6.142786026000977
    5. ' ' → logprob: -12.642786026000977
    6. '(idx' → logprob: -13.517786026000977
    7. '[idx' → logprob: -13.642786026000977
    8. '_idx' → logprob: -15.017786026000977
    9. '	idx' → logprob: -15.267786026000977
    10. 'In' → logprob: -15.392786026000977

Token 102: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.03804321587085724
    2. ' idx' → logprob: -3.288043260574341
    3. '(idx' → logprob: -14.913043022155762
    4. '	idx' → logprob: -14.913043022155762
    5. '[idx' → logprob: -15.163043022155762
    6. 'range' → logprob: -15.288043022155762
    7. 'ans' → logprob: -15.913043022155762
    8. 'index' → logprob: -16.413043975830078
    9. ' ' → logprob: -16.788043975830078
    10. 'rng' → logprob: -16.913043975830078

Token 103: '})
' (ID: 6795)
  Prédit: '})'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -0.08124689012765884
    2. ')' → logprob: -2.706246852874756
    3. ' })' → logprob: -5.206246852874756
    4. '           ' → logprob: -6.081246852874756
    5. '}' → logprob: -6.456246852874756
    6. ')}' → logprob: -7.206246852874756
    7. '       ' → logprob: -7.456246852874756
    8. '   ' → logprob: -8.206247329711914
    9. '})
' → logprob: -9.206247329711914
    10. ' )' → logprob: -9.831247329711914

Token 104: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 105: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49963143467903137
    2. '       ' → logprob: -1.749631404876709
    3. '<|end|>' → logprob: -1.999631404876709
    4. '           ' → logprob: -3.499631404876709
    5. 'if' → logprob: -4.124631404876709
    6. 'for' → logprob: -4.249631404876709
    7. '<|end|>' → logprob: -4.374631404876709
    8. '```' → logprob: -5.624631404876709
    9. ' for' → logprob: -6.249631404876709
    10. ' if' → logprob: -7.124631404876709

Token 106: '.update' (ID: 8689)
  Prédit: '.update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.3191608786582947
    2. '.' → logprob: -1.4441609382629395
    3. '.add' → logprob: -3.3191609382629395
    4. '.union' → logprob: -7.3191609382629395
    5. '.dis' → logprob: -8.694160461425781
    6. '.remove' → logprob: -9.069160461425781
    7. '.clear' → logprob: -10.069160461425781
    8. '.setdefault' → logprob: -10.194160461425781
    9. '.inter' → logprob: -10.319160461425781
    10. '.up' → logprob: -11.444160461425781

Token 107: '({' (ID: 3972)
  Prédit: '({'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.0007304243044927716
    2. '(' → logprob: -8.000730514526367
    3. '(({' → logprob: -8.375730514526367
    4. '(product' → logprob: -9.750730514526367
    5. '([{' → logprob: -10.125730514526367
    6. '{' → logprob: -10.500730514526367
    7. '((' → logprob: -11.000730514526367
    8. '([' → logprob: -12.250730514526367
    9. '[{' → logprob: -12.375730514526367
    10. ' ({' → logprob: -12.625730514526367

Token 108: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.13199561834335327
    2. '(tuple' → logprob: -2.256995677947998
    3. '(k' → logprob: -5.256995677947998
    4. '(i' → logprob: -5.381995677947998
    5. ' tuple' → logprob: -5.631995677947998
    6. '(j' → logprob: -6.006995677947998
    7. ' (' → logprob: -7.381995677947998
    8. '(product' → logprob: -7.631995677947998
    9. '(t' → logprob: -7.756995677947998
    10. 'product' → logprob: -8.13199520111084

Token 109: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.00016182278341148049
    2. 'sorted' → logprob: -8.750162124633789
    3. '((' → logprob: -13.375162124633789
    4. '(' → logprob: -13.625162124633789
    5. '(s' → logprob: -15.625162124633789
    6. '([' → logprob: -16.25016212463379
    7. '([(' → logprob: -16.37516212463379
    8. ' sorted' → logprob: -16.75016212463379
    9. '(product' → logprob: -17.12516212463379
    10. '_sorted' → logprob: -17.25016212463379

Token 110: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00043567578541114926
    2. '(skip' → logprob: -8.125435829162598
    3. '(k' → logprob: -9.750435829162598
    4. '(' → logprob: -10.625435829162598
    5. '(product' → logprob: -10.750435829162598
    6. '(com' → logprob: -11.750435829162598
    7. '(({' → logprob: -12.125435829162598
    8. '({' → logprob: -12.500435829162598
    9. '(sk' → logprob: -12.625435829162598
    10. '(((' → logprob: -12.750435829162598

Token 111: 'k' (ID: 74)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.054017070680856705
    2. '(j' → logprob: -3.0540170669555664
    3. '(i' → logprob: -5.304017066955566
    4. 'k' → logprob: -8.429017066955566
    5. 'j' → logprob: -9.054017066955566
    6. '(' → logprob: -9.804017066955566
    7. ' (' → logprob: -11.179017066955566
    8. 'i' → logprob: -11.554017066955566
    9. '  ' → logprob: -12.179017066955566
    10. '   ' → logprob: -12.179017066955566

Token 112: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021676832693628967
    2. ',j' → logprob: -8.875216484069824
    3. ' ,' → logprob: -9.500216484069824
    4. ',
' → logprob: -14.500216484069824
    5. ',k' → logprob: -15.250216484069824
    6. '           ' → logprob: -15.375216484069824
    7. 'j' → logprob: -15.750216484069824
    8. '‌,' → logprob: -16.12521743774414
    9. '),' → logprob: -16.25021743774414
    10. ')' → logprob: -16.25021743774414

Token 113: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1427040845155716
    2. ' j' → logprob: -2.0177040100097656
    3. 'k' → logprob: -11.767704010009766
    4. ' ' → logprob: -11.767704010009766
    5. 'l' → logprob: -13.017704010009766
    6. '   ' → logprob: -13.142704010009766
    7. 'i' → logprob: -13.392704010009766
    8. ')' → logprob: -13.392704010009766
    9. '    ' → logprob: -13.767704010009766
    10. ' k' → logprob: -14.017704010009766

Token 114: ')))' (ID: 15975)
  Prédit: ')))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.0007367274374701083
    2. '))' → logprob: -7.750736713409424
    3. ' ' → logprob: -8.250737190246582
    4. ')))
' → logprob: -10.375737190246582
    5. ')' → logprob: -12.625737190246582
    6. '))))' → logprob: -13.125737190246582
    7. '   ' → logprob: -13.125737190246582
    8. '')))' → logprob: -13.500737190246582
    9. '           ' → logprob: -14.375737190246582
    10. '")))' → logprob: -14.750737190246582

Token 115: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.002808202290907502
    2. 'for' → logprob: -5.877808094024658
    3. ' ' → logprob: -13.502808570861816
    4. '           ' → logprob: -14.377808570861816
    5. '    ' → logprob: -14.502808570861816
    6. '            ' → logprob: -15.377808570861816
    7. '	for' → logprob: -15.627808570861816
    8. '        ' → logprob: -16.0028076171875
    9. '   ' → logprob: -16.2528076171875
    10. '          ' → logprob: -16.2528076171875

Token 116: ' j' (ID: 441)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.021326741203665733
    2. 'idx' → logprob: -3.896326780319214
    3. ' j' → logprob: -7.521326541900635
    4. 'j' → logprob: -8.521327018737793
    5. ' ans' → logprob: -11.396327018737793
    6. '[idx' → logprob: -11.771327018737793
    7. ' ' → logprob: -12.271327018737793
    8. '(idx' → logprob: -12.396327018737793
    9. ' k' → logprob: -12.771327018737793
    10. '	idx' → logprob: -12.771327018737793

Token 117: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4291244149208069
    2. 'in' → logprob: -1.054124355316162
    3. 'idx' → logprob: -8.17912483215332
    4. ' idx' → logprob: -9.30412483215332
    5. '           ' → logprob: -10.92912483215332
    6. ' ' → logprob: -12.05412483215332
    7. 'not' → logprob: -12.17912483215332
    8. 'inx' → logprob: -12.42912483215332
    9. '          ' → logprob: -13.05412483215332
    10. '...' → logprob: -13.05412483215332

Token 118: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.11288439482450485
    2. ' idx' → logprob: -2.237884283065796
    3. '[idx' → logprob: -10.862884521484375
    4. 'rng' → logprob: -11.487884521484375
    5. 'range' → logprob: -12.237884521484375
    6. '(idx' → logprob: -12.362884521484375
    7. '	idx' → logprob: -12.612884521484375
    8. 'ans' → logprob: -12.612884521484375
    9. 'skip' → logprob: -12.737884521484375
    10. ' ans' → logprob: -13.112884521484375

Token 119: '})
' (ID: 6795)
  Prédit: '})'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -0.12320493161678314
    2. ')' → logprob: -2.3732049465179443
    3. '           ' → logprob: -4.123204708099365
    4. ')}' → logprob: -5.873204708099365
    5. '       ' → logprob: -5.998204708099365
    6. '}' → logprob: -7.623204708099365
    7. '})
' → logprob: -7.998204708099365
    8. ' })' → logprob: -8.248205184936523
    9. '   ' → logprob: -9.623205184936523
    10. '))' → logprob: -11.123205184936523

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41539639234542847
    2. '<|end|>' → logprob: -1.2903964519500732
    3. '       ' → logprob: -2.9153964519500732
    4. '
' → logprob: -5.290396213531494
    5. '    
' → logprob: -5.790396213531494
    6. '<|end|>' → logprob: -6.790396213531494
    7. '```' → logprob: -8.165396690368652
    8. '\n' → logprob: -8.290396690368652
    9. '           ' → logprob: -8.540396690368652
    10. '        
' → logprob: -8.915396690368652

Token 121: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6362619400024414
    2. 'else' (adapté à ' else') → logprob: -1.0112619400024414
    3. ' else' → logprob: -2.2612619400024414
    4. '<|end|>' → logprob: -7.136261940002441
    5. '    
' → logprob: -7.636261940002441
    6. '	else' → logprob: -8.011261940002441
    7. 'elif' → logprob: -8.511261940002441
    8. '       ' → logprob: -8.511261940002441
    9. ' ' → logprob: -8.636261940002441
    10. 'for' → logprob: -9.011261940002441

Token 122: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004330532974563539
    2. ':
' → logprob: -8.125432968139648
    3. ' :' → logprob: -9.000432968139648
    4. '       ' → logprob: -12.000432968139648
    5. '   ' → logprob: -12.875432968139648
    6. '<|end|>' → logprob: -13.500432968139648
    7. ' :
' → logprob: -14.125432968139648
    8. ',' → logprob: -14.125432968139648
    9. ':

' → logprob: -14.500432968139648
    10. '    ' → logprob: -15.125432968139648

Token 123: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00484447693452239
    2. ' for' → logprob: -5.379844665527344
    3. 'for' → logprob: -9.004844665527344
    4. '   ' → logprob: -9.629844665527344
    5. '    ' → logprob: -11.379844665527344
    6. '```' → logprob: -12.129844665527344
    7. '
' → logprob: -12.254844665527344
    8. '        
' → logprob: -12.754844665527344
    9. '[' → logprob: -13.504844665527344
    10. '        ' → logprob: -13.504844665527344

Token 124: ' ans' (ID: 3345)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.018962396308779716
    2. 'for' → logprob: -4.268962383270264
    3. '       ' → logprob: -5.893962383270264
    4. '   ' → logprob: -6.643962383270264
    5. ' pass' → logprob: -8.518962860107422
    6. ' rng' → logprob: -9.018962860107422
    7. '    ' → logprob: -9.268962860107422
    8. ' mid' → logprob: -9.643962860107422
    9. ' ' → logprob: -9.768962860107422
    10. ' r' → logprob: -10.393962860107422

Token 125: '.update' (ID: 8689)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4793236255645752
    2. '.update' → logprob: -0.9793236255645752
    3. '.=' → logprob: -5.979323387145996
    4. '.add' → logprob: -6.104323387145996
    5. ' .' → logprob: -8.229323387145996
    6. '.extend' → logprob: -9.354323387145996
    7. '=' → logprob: -10.479323387145996
    8. '.union' → logprob: -11.104323387145996
    9. ' =' → logprob: -11.354323387145996
    10. '.up' → logprob: -11.354323387145996

Token 126: '((' (ID: 2054)
  Prédit: '({'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.10866152495145798
    2. '(set' → logprob: -2.733661413192749
    3. '(com' → logprob: -3.608661413192749
    4. '(product' → logprob: -5.358661651611328
    5. '(' → logprob: -5.983661651611328
    6. '(list' → logprob: -6.608661651611328
    7. '(tuple' → logprob: -6.608661651611328
    8. '((' → logprob: -7.608661651611328
    9. '(({' → logprob: -9.483661651611328
    10. '({
' → logprob: -9.733661651611328

Token 127: 'min' (ID: 1493)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.8304722905158997
    2. '(i' → logprob: -1.0804722309112549
    3. 'tuple' → logprob: -2.955472230911255
    4. 'product' → logprob: -3.205472230911255
    5. '(r' → logprob: -3.580472230911255
    6. '(com' → logprob: -3.955472230911255
    7. 'i' → logprob: -4.080472469329834
    8. 'rng' → logprob: -4.205472469329834
    9. 'comb' → logprob: -4.455472469329834
    10. '{' → logprob: -4.705472469329834

Token 128: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.006517836824059486
    2. '(r' → logprob: -5.8815178871154785
    3. '(' → logprob: -6.6315178871154785
    4. '((' → logprob: -6.7565178871154785
    5. '(N' → logprob: -7.8815178871154785
    6. '(k' → logprob: -8.50651741027832
    7. '({' → logprob: -8.88151741027832
    8. '(a' → logprob: -9.13151741027832
    9. '(range' → logprob: -9.50651741027832
    10. '(j' → logprob: -9.63151741027832

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24996459484100342
    2. '(i' → logprob: -1.6249645948410034
    3. ',j' → logprob: -4.624964714050293
    4. ',i' → logprob: -5.249964714050293
    5. '(j' → logprob: -6.124964714050293
    6. ',k' → logprob: -6.249964714050293
    7. '(' → logprob: -6.874964714050293
    8. '(N' → logprob: -7.124964714050293
    9. '(k' → logprob: -7.249964714050293
    10. ' ,' → logprob: -7.499964714050293

Token 130: ' N' (ID: 478)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7307979464530945
    2. 'N' → logprob: -0.8557979464530945
    3. 'max' → logprob: -2.8557980060577393
    4. 'j' → logprob: -4.10579776763916
    5. 'i' → logprob: -4.85579776763916
    6. ' N' → logprob: -5.35579776763916
    7. ' k' → logprob: -5.60579776763916
    8. ' max' → logprob: -6.48079776763916
    9. ' j' → logprob: -7.98079776763916
    10. ' ' → logprob: -8.10579776763916

Token 131: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26836061477661133
    2. '),' → logprob: -2.0183606147766113
    3. '+' → logprob: -3.1433606147766113
    4. '-' → logprob: -4.518360614776611
    5. ',i' → logprob: -4.518360614776611
    6. ' -' → logprob: -4.643360614776611
    7. ' ,' → logprob: -4.893360614776611
    8. '//' → logprob: -5.393360614776611
    9. '-i' → logprob: -5.643360614776611
    10. ' +' → logprob: -5.643360614776611

Token 132: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.058318864554166794
    2. ' max' → logprob: -2.933318853378296
    3. 'i' → logprob: -6.058319091796875
    4. ' i' → logprob: -7.558319091796875
    5. 'N' → logprob: -8.058319091796875
    6. '(max' → logprob: -9.808319091796875
    7. ' N' → logprob: -9.933319091796875
    8. '1' → logprob: -10.058319091796875
    9. 'min' → logprob: -10.183319091796875
    10. ' ' → logprob: -10.683319091796875

Token 133: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.3451433409936726e-05
    2. '(' → logprob: -10.875033378601074
    3. 'i' → logprob: -11.250033378601074
    4. '(N' → logprob: -14.750033378601074
    5. '((' → logprob: -15.000033378601074
    6. ')' → logprob: -15.125033378601074
    7. ',i' → logprob: -15.875033378601074
    8. ')i' → logprob: -16.50003433227539
    9. '{i' → logprob: -16.75003433227539
    10. '(I' → logprob: -16.75003433227539

Token 134: ',' (ID: 11)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.37995240092277527
    2. ',' → logprob: -1.2549524307250977
    3. ',i' → logprob: -4.254952430725098
    4. '(N' → logprob: -4.379952430725098
    5. '-' → logprob: -6.379952430725098
    6. 'i' → logprob: -7.254952430725098
    7. '+' → logprob: -7.879952430725098
    8. ' ,' → logprob: -7.879952430725098
    9. ',N' → logprob: -8.004952430725098
    10. ' -' → logprob: -8.379952430725098

Token 135: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.009133636951446533
    2. ' N' → logprob: -4.759133815765381
    3. 'i' → logprob: -7.759133815765381
    4. ' ' → logprob: -10.259133338928223
    5. ' i' → logprob: -10.634133338928223
    6. '1' → logprob: -11.384133338928223
    7. '   ' → logprob: -11.884133338928223
    8. '  ' → logprob: -12.134133338928223
    9. '(N' → logprob: -13.509133338928223
    10. '```' → logprob: -13.509133338928223

Token 136: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.27755120396614075
    2. ')' → logprob: -1.6525511741638184
    3. ')))' → logprob: -3.0275511741638184
    4. '-' → logprob: -6.527551174163818
    5. ' -' → logprob: -8.402551651000977
    6. ' ))' → logprob: -8.777551651000977
    7. ' ' → logprob: -9.027551651000977
    8. ' )' → logprob: -9.402551651000977
    9. '))
' → logprob: -9.402551651000977
    10. '   ' → logprob: -10.402551651000977

Token 137: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18380311131477356
    2. ' for' → logprob: -2.058803081512451
    3. 'for' → logprob: -3.308803081512451
    4. '   ' → logprob: -6.558803081512451
    5. ' )' → logprob: -7.183803081512451
    6. ',' → logprob: -7.683803081512451
    7. '))' → logprob: -7.808803081512451
    8. '<|end|>' → logprob: -9.18380355834961
    9. ')
' → logprob: -9.30880355834961
    10. ' ' → logprob: -9.30880355834961

Token 138: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3485291302204132
    2. ' i' → logprob: -1.2235291004180908
    3. ' ' → logprob: -9.723528861999512
    4. '	i' → logprob: -10.973528861999512
    5. '```' → logprob: -13.723528861999512
    6. ' ' → logprob: -13.848528861999512
    7. '<|end|>' → logprob: -14.223528861999512
    8. '(i' → logprob: -14.223528861999512
    9. ',i' → logprob: -14.473528861999512
    10. ' in' → logprob: -14.848528861999512

Token 139: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.07817047089338303
    2. 'range' → logprob: -3.2031705379486084
    3. ' rng' → logprob: -3.4531705379486084
    4. 'rng' → logprob: -6.578170299530029
    5. '(range' → logprob: -7.328170299530029
    6. ' in' → logprob: -7.453170299530029
    7. ' xrange' → logprob: -8.828170776367188
    8. '	range' → logprob: -10.203170776367188
    9. 'in' → logprob: -10.953170776367188
    10. '_rng' → logprob: -11.078170776367188

Token 140: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.14805035293102264
    2. ' range' → logprob: -2.023050308227539
    3. 'rng' → logprob: -5.523050308227539
    4. '(range' → logprob: -7.648050308227539
    5. ' rng' → logprob: -8.148050308227539
    6. 'rang' → logprob: -8.898050308227539
    7. ' xrange' → logprob: -9.023050308227539
    8. ' ' → logprob: -9.398050308227539
    9. '	range' → logprob: -9.523050308227539
    10. '1' → logprob: -9.898050308227539

Token 141: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00022010602697264403
    2. '(N' → logprob: -9.00022029876709
    3. '1' → logprob: -9.25022029876709
    4. ' (' → logprob: -15.50022029876709
    5. 'N' → logprob: -15.62522029876709
    6. '(
' → logprob: -15.87522029876709
    7. ' ' → logprob: -17.125219345092773
    8. '(n' → logprob: -17.500219345092773
    9. '   ' → logprob: -19.000219345092773
    10. '(

' → logprob: -19.250219345092773

Token 142: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003478593716863543
    2. 'N' → logprob: -8.625348091125488
    3. '(' → logprob: -8.750348091125488
    4. ' ' → logprob: -12.250348091125488
    5. '(N' → logprob: -12.625348091125488
    6. '   ' → logprob: -14.250348091125488
    7. '2' → logprob: -14.375348091125488
    8. ' N' → logprob: -16.375347137451172
    9. '	N' → logprob: -16.750347137451172
    10. '0' → logprob: -16.875347137451172

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006765579804778099
    2. ',N' → logprob: -5.631765365600586
    3. '(N' → logprob: -6.131765365600586
    4. '(' → logprob: -7.631765365600586
    5. ' ,' → logprob: -8.006765365600586
    6. 'N' → logprob: -8.756765365600586
    7. ',n' → logprob: -12.256765365600586
    8. ',
' → logprob: -12.506765365600586
    9. ')' → logprob: -13.881765365600586
    10. '1' → logprob: -14.506765365600586

Token 144: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0013265528250485659
    2. ' N' → logprob: -6.626326560974121
    3. '	N' → logprob: -15.001326560974121
    4. '   ' → logprob: -16.126325607299805
    5. ')' → logprob: -16.626325607299805
    6. ' ' → logprob: -16.876325607299805
    7. '>N' → logprob: -17.501325607299805
    8. '<N' → logprob: -17.876325607299805
    9. ' ' → logprob: -18.251325607299805
    10. '(N' → logprob: -18.626325607299805

Token 145: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.316627562046051
    2. '))' → logprob: -1.3166275024414062
    3. '+' → logprob: -5.816627502441406
    4. ')))' → logprob: -8.941627502441406
    5. ')}' → logprob: -9.691627502441406
    6. '})' → logprob: -10.316627502441406
    7. '())' → logprob: -10.816627502441406
    8. '),' → logprob: -11.316627502441406
    9. '])' → logprob: -11.316627502441406
    10. ' )' → logprob: -11.441627502441406

Token 146: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002477081725373864
    2. '<|end|>' → logprob: -7.002477169036865
    3. 'for' → logprob: -7.377477169036865
    4. '    
' → logprob: -8.002476692199707
    5. ' for' → logprob: -8.127476692199707
    6. '```' → logprob: -9.377476692199707
    7. 'print' → logprob: -9.627476692199707
    8. 'if' → logprob: -10.127476692199707
    9. 'return' → logprob: -10.252476692199707
    10. '
' → logprob: -11.002476692199707

Token 147: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06832991540431976
    2. '   ' → logprob: -3.1933298110961914
    3. 'print' → logprob: -4.318329811096191
    4. 'ans' → logprob: -5.318329811096191
    5. ' for' → logprob: -5.318329811096191
    6. 'idx' → logprob: -6.818329811096191
    7. '```' → logprob: -8.818329811096191
    8. 'if' → logprob: -9.318329811096191
    9. 'r' → logprob: -9.693329811096191
    10. 'rest' → logprob: -9.818329811096191

Token 148: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4856661856174469
    2. ' i' → logprob: -1.1106661558151245
    3. 'k' → logprob: -4.110666275024414
    4. 'j' → logprob: -4.360666275024414
    5. ' j' → logprob: -4.610666275024414
    6. ' k' → logprob: -5.110666275024414
    7. 'x' → logprob: -5.735666275024414
    8. ' x' → logprob: -6.235666275024414
    9. 'a' → logprob: -6.860666275024414
    10. ' ' → logprob: -8.298166275024414

Token 149: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0059523796662688255
    2. 'in' → logprob: -5.13095235824585
    3. ' ' → logprob: -11.005952835083008
    4. '(' → logprob: -13.255952835083008
    5. '	in' → logprob: -14.005952835083008
    6. '  ' → logprob: -14.505952835083008
    7. '1' → logprob: -14.880952835083008
    8. 'n' → logprob: -14.880952835083008
    9. '<|end|>' → logprob: -15.005952835083008
    10. ',' → logprob: -15.130952835083008

Token 150: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.29416322708129883
    2. 'range' → logprob: -1.9191632270812988
    3. ' rng' → logprob: -2.419163227081299
    4. 'rng' → logprob: -4.044163227081299
    5. ' xrange' → logprob: -7.919163227081299
    6. ' ' → logprob: -8.16916275024414
    7. 'r' → logprob: -8.54416275024414
    8. '(range' → logprob: -8.73166275024414
    9. 'rang' → logprob: -8.73166275024414
    10. ' rang' → logprob: -10.04416275024414

Token 151: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005496950470842421
    2. '(N' → logprob: -7.875549793243408
    3. '((' → logprob: -9.12554931640625
    4. '1' → logprob: -9.87554931640625
    5. ' (' → logprob: -12.62554931640625
    6. '(r' → logprob: -12.87554931640625
    7. '(n' → logprob: -13.37554931640625
    8. '(
' → logprob: -14.12554931640625
    9. '(len' → logprob: -15.37554931640625
    10. '   ' → logprob: -16.00054931640625

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0045758499763906
    2. '(' → logprob: -6.129575729370117
    3. 'N' → logprob: -6.379575729370117
    4. ' ' → logprob: -7.504575729370117
    5. '(N' → logprob: -9.379575729370117
    6. '   ' → logprob: -11.004575729370117
    7. ' N' → logprob: -11.004575729370117
    8. ' (' → logprob: -11.754575729370117
    9. '2' → logprob: -12.004575729370117
    10. '           ' → logprob: -13.379575729370117

Token 153: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002241608453914523
    2. '(N' → logprob: -6.627241611480713
    3. '(' → logprob: -7.502241611480713
    4. ' ,' → logprob: -8.252241134643555
    5. ',N' → logprob: -9.502241134643555
    6. '(),' → logprob: -11.627241134643555
    7. ',(' → logprob: -12.002241134643555
    8. 'N' → logprob: -12.127241134643555
    9. ',
' → logprob: -12.502241134643555
    10. '   ' → logprob: -14.002241134643555

Token 154: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.051990754902362823
    2. '(' → logprob: -4.051990985870361
    3. ' N' → logprob: -4.176990985870361
    4. '(N' → logprob: -4.426990985870361
    5. ' (' → logprob: -5.176990985870361
    6. '((' → logprob: -8.551990509033203
    7. ' ' → logprob: -9.926990509033203
    8. '   ' → logprob: -9.926990509033203
    9. '	N' → logprob: -11.801990509033203
    10. ' ((' → logprob: -12.426990509033203

Token 155: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1506994217634201
    2. '):
' → logprob: -2.6506993770599365
    3. '+' → logprob: -2.7756993770599365
    4. ',' → logprob: -5.900699615478516
    5. '-' → logprob: -6.525699615478516
    6. ' ):' → logprob: -6.775699615478516
    7. ' +' → logprob: -7.400699615478516
    8. '//' → logprob: -7.900699615478516
    9. ')' → logprob: -7.900699615478516
    10. ' -' → logprob: -9.900699615478516

Token 156: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0992848351597786
    2. ':' → logprob: -2.4742848873138428
    3. '<|end|>' → logprob: -4.724284648895264
    4. ',' → logprob: -8.099285125732422
    5. '<|end|>' → logprob: -8.474285125732422
    6. ':
' → logprob: -8.474285125732422
    7. '           ' → logprob: -8.724285125732422
    8. '   ' → logprob: -9.349285125732422
    9. '...' → logprob: -9.599285125732422
    10. ' for' → logprob: -9.849285125732422

Token 157: ' k' (ID: 372)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0467122793197632
    2. ' k' → logprob: -1.4217122793197632
    3. 'k' (adapté à ' k') → logprob: -1.9217122793197632
    4. '           ' → logprob: -2.4217123985290527
    5. 'for' → logprob: -2.6717123985290527
    6. '   ' → logprob: -3.0467123985290527
    7. ' if' → logprob: -4.046712398529053
    8. 'j' → logprob: -4.921712398529053
    9. '       ' → logprob: -5.046712398529053
    10. ' j' → logprob: -5.296712398529053

Token 158: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38688793778419495
    2. '=' → logprob: -1.1368879079818726
    3. ' ' → logprob: -11.886887550354004
    4. ',' → logprob: -12.636887550354004
    5. ')' → logprob: -12.761887550354004
    6. '   ' → logprob: -14.386887550354004
    7. '=i' → logprob: -14.636887550354004
    8. '=int' → logprob: -15.011887550354004
    9. '=k' → logprob: -15.136887550354004
    10. 's' → logprob: -15.261887550354004

Token 159: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.1855403333902359
    2. ' N' → logprob: -1.8105403184890747
    3. ' ' → logprob: -6.185540199279785
    4. 'i' → logprob: -6.560540199279785
    5. '(N' → logprob: -7.185540199279785
    6. ' i' → logprob: -7.435540199279785
    7. ' (' → logprob: -7.560540199279785
    8. '(' → logprob: -8.685540199279785
    9. '(i' → logprob: -9.685540199279785
    10. '   ' → logprob: -9.810540199279785

Token 160: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03490591049194336
    2. ' -' → logprob: -3.4099059104919434
    3. '+' → logprob: -7.284905910491943
    4. '-i' → logprob: -7.534905910491943
    5. ' ' → logprob: -11.159906387329102
    6. '-k' → logprob: -11.409906387329102
    7. ' +' → logprob: -12.409906387329102
    8. '<|end|>' → logprob: -13.909906387329102
    9. '–' → logprob: -14.284906387329102
    10. ' ' → logprob: -14.409906387329102

Token 161: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0022313790395855904
    2. ' i' → logprob: -6.127231597900391
    3. '1' → logprob: -10.00223159790039
    4. ' ' → logprob: -15.37723159790039
    5. '	i' → logprob: -15.75223159790039
    6. '<|end|>' → logprob: -16.00223159790039
    7. '+' → logprob: -16.37723159790039
    8. '2' → logprob: -16.50223159790039
    9. ''i' → logprob: -16.50223159790039
    10. 'k' → logprob: -16.50223159790039

Token 162: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20976021885871887
    2. '<|end|>' → logprob: -1.8347601890563965
    3. ' +' → logprob: -4.2097601890563965
    4. '1' → logprob: -5.3347601890563965
    5. ' ' → logprob: -5.9597601890563965
    6. '0' → logprob: -6.0847601890563965
    7. '           ' → logprob: -6.7097601890563965
    8. ')' → logprob: -7.5847601890563965
    9. '```' → logprob: -7.8347601890563965
    10. '<|end|>' → logprob: -7.8347601890563965

Token 163: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6934487819671631
    2. ' +' → logprob: -1.193448781967163
    3. '+' → logprob: -1.693448781967163
    4. '   ' → logprob: -5.818449020385742
    5. ' ' → logprob: -5.943449020385742
    6. '<|end|>' → logprob: -5.943449020385742
    7. '1' → logprob: -6.818449020385742
    8. '       ' → logprob: -6.818449020385742
    9. '            ' → logprob: -7.943449020385742
    10. '               ' → logprob: -8.443449020385742

Token 164: ' skip' (ID: 16677)
  Prédit: ' skip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' skip' → logprob: -0.3454396724700928
    2. 'skip' (adapté à ' skip') → logprob: -1.8454396724700928
    3. '           ' → logprob: -2.0954396724700928
    4. ' if' → logprob: -4.970439910888672
    5. '   ' → logprob: -6.845439910888672
    6. 'if' → logprob: -7.470439910888672
    7. ' ' → logprob: -7.845439910888672
    8. '       ' → logprob: -8.220439910888672
    9. ' idx' → logprob: -8.845439910888672
    10. '	       ' → logprob: -9.095439910888672

Token 165: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018179794773459435
    2. '=' → logprob: -4.018179893493652
    3. '<|end|>' → logprob: -10.643179893493652
    4. ' ={' → logprob: -13.393179893493652
    5. ' ' → logprob: -13.643179893493652
    6. '={' → logprob: -13.893179893493652
    7. '=set' → logprob: -14.268179893493652
    8. ':' → logprob: -14.768179893493652
    9. '={'' → logprob: -14.893179893493652
    10. '{' → logprob: -15.518179893493652

Token 166: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.4584095776081085
    2. '{i' → logprob: -1.2084095478057861
    3. ' {' → logprob: -2.708409547805786
    4. '{k' → logprob: -6.083409786224365
    5. '{s' → logprob: -9.208409309387207
    6. '{x' → logprob: -11.458409309387207
    7. '{id' → logprob: -12.833409309387207
    8. '{return' → logprob: -14.583409309387207
    9. ' ' → logprob: -14.708409309387207
    10. ' ' → logprob: -14.833409309387207

Token 167: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00010807292710524052
    2. ' i' → logprob: -9.375107765197754
    3. 'k' → logprob: -10.875107765197754
    4. '{i' → logprob: -13.000107765197754
    5. '(i' → logprob: -14.000107765197754
    6. 'N' → logprob: -15.250107765197754
    7. '<|end|>' → logprob: -15.500107765197754
    8. '{' → logprob: -16.12510871887207
    9. 'j' → logprob: -16.37510871887207
    10. '1' → logprob: -16.50010871887207

Token 168: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003191386058460921
    2. ' ,' → logprob: -8.375319480895996
    3. ',k' → logprob: -9.375319480895996
    4. ',j' → logprob: -13.625319480895996
    5. ',
' → logprob: -13.875319480895996
    6. ',i' → logprob: -15.000319480895996
    7. ',n' → logprob: -15.000319480895996
    8. '}' → logprob: -15.500319480895996
    9. '<|end|>' → logprob: -16.00031852722168
    10. '‌,' → logprob: -16.25031852722168

Token 169: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07890047132968903
    2. ' k' → logprob: -2.5789005756378174
    3. ' ' → logprob: -12.703900337219238
    4. '<|end|>' → logprob: -13.203900337219238
    5. ' ' → logprob: -13.453900337219238
    6. 'j' → logprob: -13.828900337219238
    7. '	k' → logprob: -13.828900337219238
    8. ',k' → logprob: -14.703900337219238
    9. 'N' → logprob: -15.391400337219238
    10. '    ' → logprob: -15.516400337219238

Token 170: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.02326062321662903
    2. '}
' → logprob: -3.7732605934143066
    3. ' }' → logprob: -11.773261070251465
    4. '           ' → logprob: -13.273261070251465
    5. '}

' → logprob: -13.523261070251465
    6. '}
' → logprob: -13.523261070251465
    7. ',' → logprob: -13.648261070251465
    8. '<|end|>' → logprob: -14.273261070251465
    9. ' }
' → logprob: -14.523261070251465
    10. '       ' → logprob: -15.273261070251465

Token 171: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009247996495105326
    2. 'idx' → logprob: -8.250925064086914
    3. '	       ' → logprob: -8.375925064086914
    4. '<|end|>' → logprob: -9.000925064086914
    5. ' idx' → logprob: -9.500925064086914
    6. '       ' → logprob: -9.500925064086914
    7. '   ' → logprob: -10.000925064086914
    8. '	   ' → logprob: -10.125925064086914
    9. '		' → logprob: -10.875925064086914
    10. '		   ' → logprob: -11.375925064086914

Token 172: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.006083441898226738
    2. ' idx' → logprob: -5.2560834884643555
    3. '           ' → logprob: -7.3810834884643555
    4. 'for' → logprob: -8.631083488464355
    5. ' for' → logprob: -10.881083488464355
    6. 'index' → logprob: -12.131083488464355
    7. '	idx' → logprob: -12.131083488464355
    8. '[idx' → logprob: -12.756083488464355
    9. 'indices' → logprob: -13.006083488464355
    10. 'if' → logprob: -13.131083488464355

Token 173: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687315583229065
    2. '=' → logprob: -1.1368731260299683
    3. '[' → logprob: -14.511873245239258
    4. ' =[' → logprob: -14.636873245239258
    5. ' ' → logprob: -14.886873245239258
    6. ')' → logprob: -14.886873245239258
    7. '=[' → logprob: -15.636873245239258
    8. '=[]' → logprob: -16.136873245239258
    9. '<|end|>' → logprob: -16.386873245239258
    10. ']' → logprob: -17.136873245239258

Token 174: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.12940730154514313
    2. '[j' → logprob: -2.1294074058532715
    3. '[' → logprob: -6.0044074058532715
    4. '[i' → logprob: -13.004406929016113
    5. '[k' → logprob: -13.504406929016113
    6. '[t' → logprob: -14.254406929016113
    7. ' ' → logprob: -14.879406929016113
    8. '[len' → logprob: -14.879406929016113
    9. '[f' → logprob: -15.004406929016113
    10. '[r' → logprob: -15.004406929016113

Token 175: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.002477796748280525
    2. ' j' → logprob: -6.002477645874023
    3. '   ' → logprob: -13.877477645874023
    4. ' ' → logprob: -14.252477645874023
    5. '[j' → logprob: -15.877477645874023
    6. '```' → logprob: -16.127477645874023
    7. 'x' → logprob: -16.377477645874023
    8. '    ' → logprob: -16.752477645874023
    9. '	j' → logprob: -16.752477645874023
    10. '  ' → logprob: -17.127477645874023

Token 176: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0297679603099823
    2. 'for' → logprob: -3.5297679901123047
    3. '	for' → logprob: -11.654767990112305
    4. ' in' → logprob: -11.779767990112305
    5. ' ' → logprob: -14.029767990112305
    6. '           ' → logprob: -16.654767990112305
    7. ' ' → logprob: -16.779767990112305
    8. ' j' → logprob: -16.904767990112305
    9. 'in' → logprob: -17.029767990112305
    10. '            ' → logprob: -17.529767990112305

Token 177: ' j' (ID: 441)
  Prédit: 'rng'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rng' → logprob: -0.18432597815990448
    2. ' rng' → logprob: -1.809325933456421
    3. 'j' → logprob: -5.934326171875
    4. ' j' → logprob: -6.809326171875
    5. 'range' → logprob: -7.934326171875
    6. 'r' → logprob: -8.184326171875
    7. 'rang' → logprob: -9.684326171875
    8. ' range' → logprob: -9.809326171875
    9. ' ' → logprob: -11.059326171875
    10. '_rng' → logprob: -11.621826171875

Token 178: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.13037249445915222
    2. ' in' → logprob: -2.1303725242614746
    3. 'range' → logprob: -6.005372524261475
    4. 'rng' → logprob: -7.380372524261475
    5. ' range' → logprob: -9.130372047424316
    6. ' rng' → logprob: -9.255372047424316
    7. 'rang' → logprob: -10.380372047424316
    8. ' ' → logprob: -10.880372047424316
    9. 'not' → logprob: -11.005372047424316
    10. 'if' → logprob: -11.005372047424316

Token 179: ' rng' (ID: 76666)
  Prédit: 'rng'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rng' → logprob: -0.5243465304374695
    2. 'range' → logprob: -1.0243465900421143
    3. ' rng' → logprob: -3.2743465900421143
    4. ' range' → logprob: -4.649346351623535
    5. 'r' → logprob: -7.274346351623535
    6. 'rang' → logprob: -8.399346351623535
    7. '(range' → logprob: -8.899346351623535
    8. 'rg' → logprob: -9.399346351623535
    9. '[r' → logprob: -9.836846351623535
    10. 'ran' → logprob: -9.836846351623535

Token 180: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.014163863845169544
    2. 'if' → logprob: -4.264163970947266
    3. '	if' → logprob: -15.639163970947266
    4. '           ' → logprob: -16.514163970947266
    5. '            ' → logprob: -16.889163970947266
    6. '               ' → logprob: -17.139163970947266
    7. 'If' → logprob: -18.389163970947266
    8. ' for' → logprob: -18.889163970947266
    9. ' ' → logprob: -19.014163970947266
    10. '                ' → logprob: -19.139163970947266

Token 181: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4740939140319824
    2. ' j' → logprob: -0.9740939140319824
    3. 'not' → logprob: -12.34909439086914
    4. '   ' → logprob: -12.72409439086914
    5. ' ' → logprob: -13.09909439086914
    6. ' not' → logprob: -13.34909439086914
    7. '(j' → logprob: -13.34909439086914
    8. '	j' → logprob: -13.34909439086914
    9. '  ' → logprob: -14.47409439086914
    10. ' ' → logprob: -14.59909439086914

Token 182: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.4740804135799408
    2. ' not' → logprob: -0.9740804433822632
    3. ' ' → logprob: -13.974080085754395
    4. '
' → logprob: -14.099080085754395
    5. '	not' → logprob: -14.474080085754395
    6. ' in' → logprob: -15.474080085754395
    7. 'ot' → logprob: -15.599080085754395
    8. 'n' → logprob: -15.724080085754395
    9. 'in' → logprob: -15.974080085754395
    10. 'no' → logprob: -16.09908103942871

Token 183: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.22566445171833038
    2. ' in' → logprob: -1.600664496421814
    3. 'not' → logprob: -8.600664138793945
    4. ' not' → logprob: -10.350664138793945
    5. 'skip' → logprob: -10.475664138793945
    6. ' skip' → logprob: -12.850664138793945
    7. ' ' → logprob: -13.600664138793945
    8. '(skip' → logprob: -14.350664138793945
    9. 'if' → logprob: -14.600664138793945
    10. '  ' → logprob: -14.975664138793945

Token 184: ' skip' (ID: 16677)
  Prédit: 'skip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'skip' → logprob: -0.009760929271578789
    2. ' skip' → logprob: -4.634760856628418
    3. '(skip' → logprob: -12.384760856628418
    4. 'sk' → logprob: -15.259760856628418
    5. 'stop' → logprob: -15.384760856628418
    6. '.skip' → logprob: -16.509761810302734
    7. ' ' → logprob: -16.634761810302734
    8. '{' → logprob: -16.634761810302734
    9. 'split' → logprob: -16.884761810302734
    10. 'idx' → logprob: -17.634761810302734

Token 185: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04705411195755005
    2. ']:' → logprob: -3.7970540523529053
    3. ')' → logprob: -4.172054290771484
    4. ':' → logprob: -6.172054290771484
    5. '):' → logprob: -6.172054290771484
    6. '           ' → logprob: -6.547054290771484
    7. '])' → logprob: -6.797054290771484
    8. '       ' → logprob: -7.797054290771484
    9. ']
' → logprob: -8.172054290771484
    10. ')]' → logprob: -8.297054290771484

Token 186: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06451024115085602
    2. '       ' → logprob: -2.8145103454589844
    3. '   ' → logprob: -6.314510345458984
    4. 'for' → logprob: -8.439510345458984
    5. ' for' → logprob: -8.814510345458984
    6. '<|end|>' → logprob: -9.064510345458984
    7. '               ' → logprob: -9.314510345458984
    8. 'ans' → logprob: -9.564510345458984
    9. ' ans' → logprob: -10.314510345458984
    10. '```' → logprob: -11.439510345458984

Token 187: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0011614117538556457
    2. ' ans' → logprob: -7.626161575317383
    3. '           ' → logprob: -8.376161575317383
    4. 'for' → logprob: -8.376161575317383
    5. '   ' → logprob: -8.751161575317383
    6. '       ' → logprob: -10.126161575317383
    7. '	ans' → logprob: -12.751161575317383
    8. '(ans' → logprob: -13.001161575317383
    9. ' for' → logprob: -13.126161575317383
    10. '
' → logprob: -13.876161575317383

Token 188: '.update' (ID: 8689)
  Prédit: '.update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.038080740720033646
    2. '.' → logprob: -3.2880806922912598
    3. '.setdefault' → logprob: -10.663081169128418
    4. '.add' → logprob: -11.663081169128418
    5. ' .' → logprob: -13.163081169128418
    6. '.extend' → logprob: -13.413081169128418
    7. '.up' → logprob: -14.038081169128418
    8. '   ' → logprob: -14.538081169128418
    9. '.expand' → logprob: -14.663081169128418
    10. 'update' → logprob: -14.663081169128418

Token 189: '({' (ID: 3972)
  Prédit: '({'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.0023083386477082968
    2. '{' → logprob: -6.127308368682861
    3. '(' → logprob: -9.627307891845703
    4. '((' → logprob: -10.627307891845703
    5. '(({' → logprob: -10.627307891845703
    6. ' {' → logprob: -12.877307891845703
    7. '   ' → logprob: -13.377307891845703
    8. ' ({' → logprob: -13.502307891845703
    9. '(tuple' → logprob: -13.877307891845703
    10. ' ' → logprob: -14.752307891845703

Token 190: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.0026056256610900164
    2. '(tuple' → logprob: -6.002605438232422
    3. ' tuple' → logprob: -9.002605438232422
    4. 'tu' → logprob: -13.127605438232422
    5. '   ' → logprob: -14.002605438232422
    6. '(sorted' → logprob: -14.377605438232422
    7. 'sorted' → logprob: -14.377605438232422
    8. '(' → logprob: -14.627605438232422
    9. '           ' → logprob: -15.002605438232422
    10. ' (' → logprob: -15.252605438232422

Token 191: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -3.5716304410016164e-05
    2. 'sorted' → logprob: -10.250035285949707
    3. '(' → logprob: -16.125036239624023
    4. ' sorted' → logprob: -16.250036239624023
    5. '_sorted' → logprob: -17.375036239624023
    6. '(s' → logprob: -17.750036239624023
    7. '.sorted' → logprob: -18.500036239624023
    8. '((' → logprob: -20.125036239624023
    9. '(
' → logprob: -20.125036239624023
    10. '<|end|>' → logprob: -20.250036239624023

Token 192: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00015979631280060858
    2. '(i' → logprob: -8.875160217285156
    3. '(k' → logprob: -11.125160217285156
    4. '(' → logprob: -13.000160217285156
    5. ' ((' → logprob: -13.750160217285156
    6. '   ' → logprob: -14.375160217285156
    7. '(j' → logprob: -14.875160217285156
    8. ' ' → logprob: -15.375160217285156
    9. '(
' → logprob: -16.125160217285156
    10. '(N' → logprob: -16.375160217285156

Token 193: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12860122323036194
    2. 'k' → logprob: -2.753601312637329
    3. '(i' → logprob: -3.003601312637329
    4. '(k' → logprob: -5.25360107421875
    5. 'j' → logprob: -6.37860107421875
    6. '(j' → logprob: -8.62860107421875
    7. ' i' → logprob: -9.12860107421875
    8. 'N' → logprob: -10.25360107421875
    9. '(N' → logprob: -10.62860107421875
    10. '{i' → logprob: -11.00360107421875

Token 194: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3319124011322856e-05
    2. ',j' → logprob: -11.000022888183594
    3. ' ,' → logprob: -12.000022888183594
    4. '(' → logprob: -15.875022888183594
    5. 'j' → logprob: -16.000022888183594
    6. ',
' → logprob: -16.125022888183594
    7. '(j' → logprob: -17.875022888183594
    8. ' j' → logprob: -18.750022888183594
    9. ',k' → logprob: -18.875022888183594
    10. ',(' → logprob: -19.000022888183594

Token 195: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.22542670369148254
    2. ' j' → logprob: -1.6004266738891602
    3. 'k' → logprob: -11.97542667388916
    4. ' ' → logprob: -12.72542667388916
    5. ' k' → logprob: -13.35042667388916
    6. '   ' → logprob: -13.97542667388916
    7. ' ' → logprob: -14.60042667388916
    8. '<|end|>' → logprob: -14.85042667388916
    9. '  ' → logprob: -15.10042667388916
    10. ')' → logprob: -15.35042667388916

Token 196: ')))' (ID: 15975)
  Prédit: ')))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.02634407766163349
    2. '))' → logprob: -3.651344060897827
    3. ')))
' → logprob: -10.401344299316406
    4. ' ' → logprob: -11.901344299316406
    5. '))
' → logprob: -13.651344299316406
    6. ')' → logprob: -13.651344299316406
    7. '))))' → logprob: -13.901344299316406
    8. '   ' → logprob: -14.276344299316406
    9. ')));' → logprob: -14.401344299316406
    10. '```' → logprob: -15.026344299316406

Token 197: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.029832987114787102
    2. 'for' → logprob: -3.5298330783843994
    3. ')' → logprob: -9.40483283996582
    4. ' ' → logprob: -16.15483283996582
    5. '	for' → logprob: -17.15483283996582
    6. ' )' → logprob: -17.27983283996582
    7. '           ' → logprob: -17.90483283996582
    8. ')}' → logprob: -18.15483283996582
    9. '   ' → logprob: -18.27983283996582
    10. '})' → logprob: -18.27983283996582

Token 198: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.43601375818252563
    2. ' j' → logprob: -1.1860136985778809
    3. ' idx' → logprob: -3.561013698577881
    4. 'idx' → logprob: -3.936013698577881
    5. ' ' → logprob: -12.061014175415039
    6. '   ' → logprob: -12.811014175415039
    7. ' ans' → logprob: -13.561014175415039
    8. '`' → logprob: -13.686014175415039
    9. 'index' → logprob: -14.561014175415039
    10. 'ans' → logprob: -14.561014175415039

Token 199: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018175575882196426
    2. 'in' → logprob: -4.0181756019592285
    3. 'idx' → logprob: -11.39317512512207
    4. ' idx' → logprob: -11.39317512512207
    5. ' ' → logprob: -13.89317512512207
    6. 'n' → logprob: -14.64317512512207
    7. 's' → logprob: -14.89317512512207
    8. 'inx' → logprob: -15.01817512512207
    9. 'In' → logprob: -15.51817512512207
    10. '...' → logprob: -15.51817512512207

Token 200: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.38687849044799805
    2. ' idx' → logprob: -1.136878490447998
    3. '[idx' → logprob: -12.636878967285156
    4. '	idx' → logprob: -13.261878967285156
    5. '(idx' → logprob: -14.261878967285156
    6. 'index' → logprob: -15.261878967285156
    7. 'range' → logprob: -15.386878967285156
    8. ' ' → logprob: -15.511878967285156
    9. '_idx' → logprob: -15.636878967285156
    10. '.idx' → logprob: -15.886878967285156

Token 201: '})
' (ID: 6795)
  Prédit: '})'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -0.005893126595765352
    2. ')' → logprob: -5.380893230438232
    3. '           ' → logprob: -7.505893230438232
    4. '})
' → logprob: -7.755893230438232
    5. ')}' → logprob: -8.755892753601074
    6. ' })' → logprob: -9.380892753601074
    7. '       ' → logprob: -10.755892753601074
    8. '   ' → logprob: -11.505892753601074
    9. '}' → logprob: -11.880892753601074
    10. ')
' → logprob: -12.505892753601074

Token 202: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013515124097466469
    2. '<|end|>' → logprob: -4.638514995574951
    3. '   ' → logprob: -6.388514995574951
    4. '       ' → logprob: -6.513514995574951
    5. '<|end|>' → logprob: -8.51351547241211
    6. ' ' → logprob: -8.51351547241211
    7. ')' → logprob: -10.01351547241211
    8. '```' → logprob: -10.38851547241211
    9. '               ' → logprob: -10.51351547241211
    10. '          ' → logprob: -11.38851547241211

Token 203: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0002795703476294875
    2. ' ans' → logprob: -8.500279426574707
    3. '           ' → logprob: -10.000279426574707
    4. '(ans' → logprob: -11.125279426574707
    5. '	ans' → logprob: -11.875279426574707
    6. '   ' → logprob: -12.375279426574707
    7. '       ' → logprob: -13.250279426574707
    8. 'answer' → logprob: -13.625279426574707
    9. '```' → logprob: -14.750279426574707
    10. 'continue' → logprob: -15.500279426574707

Token 204: '.update' (ID: 8689)
  Prédit: '.update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.00014048899174667895
    2. '.' → logprob: -8.875140190124512
    3. ' .' → logprob: -15.125140190124512
    4. 'update' → logprob: -15.750140190124512
    5. '.up' → logprob: -15.875140190124512
    6. '.setdefault' → logprob: -18.000141143798828
    7. '.add' → logprob: -18.750141143798828
    8. '.extend' → logprob: -19.250141143798828
    9. '.Update' → logprob: -19.375141143798828
    10. '}.' → logprob: -19.500141143798828

Token 205: '({' (ID: 3972)
  Prédit: '({'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.000491076149046421
    2. '{' → logprob: -7.625491142272949
    3. '(' → logprob: -12.87549114227295
    4. '(({' → logprob: -15.50049114227295
    5. ' {' → logprob: -16.250490188598633
    6. ' ' → logprob: -16.750490188598633
    7. '((' → logprob: -16.875490188598633
    8. ' ({' → logprob: -17.000490188598633
    9. '   ' → logprob: -18.000490188598633
    10. '(tuple' → logprob: -18.750490188598633

Token 206: 'tuple' (ID: 52834)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.01613091118633747
    2. 'tuple' → logprob: -4.1411309242248535
    3. '(tuple' → logprob: -9.391130447387695
    4. ' tuple' → logprob: -11.891130447387695
    5. ' {' → logprob: -12.891130447387695
    6. 'tu' → logprob: -13.641130447387695
    7. '(' → logprob: -13.766130447387695
    8. '({' → logprob: -13.766130447387695
    9. '[' → logprob: -16.141130447387695
    10. '(t' → logprob: -16.391130447387695

Token 207: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.0001238004770129919
    2. 'sorted' → logprob: -9.000123977661133
    3. '.sorted' → logprob: -15.500123977661133
    4. '(' → logprob: -16.125123977661133
    5. '_sorted' → logprob: -16.250123977661133
    6. ' sorted' → logprob: -18.375123977661133
    7. '```' → logprob: -19.125123977661133
    8. ' (' → logprob: -19.625123977661133
    9. '(
' → logprob: -19.625123977661133
    10. 's' → logprob: -19.750123977661133

Token 208: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.012512356042861938
    2. '(k' → logprob: -4.38751220703125
    3. '(' → logprob: -13.76251220703125
    4. ' ((' → logprob: -14.01251220703125
    5. ' (' → logprob: -15.51251220703125
    6. 'k' → logprob: -15.51251220703125
    7. '(
' → logprob: -15.51251220703125
    8. ' ' → logprob: -16.88751220703125
    9. '   ' → logprob: -17.01251220703125
    10. '({' → logprob: -17.26251220703125

Token 209: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5760123133659363
    2. '(k' → logprob: -0.8260123133659363
    3. ' (' → logprob: -10.32601261138916
    4. '(' → logprob: -11.32601261138916
    5. '   ' → logprob: -11.57601261138916
    6. ' k' → logprob: -12.32601261138916
    7. '{k' → logprob: -12.45101261138916
    8. '[k' → logprob: -12.70101261138916
    9. '           ' → logprob: -13.57601261138916
    10. '
' → logprob: -14.07601261138916

Token 210: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004026673559565097
    2. '(' → logprob: -8.875402450561523
    3. ',j' → logprob: -9.000402450561523
    4. '(j' → logprob: -9.250402450561523
    5. ',(' → logprob: -10.375402450561523
    6. ' ,' → logprob: -11.750402450561523
    7. ' (' → logprob: -12.875402450561523
    8. ',
' → logprob: -14.625402450561523
    9. ')' → logprob: -15.375402450561523
    10. '((' → logprob: -15.500402450561523

Token 211: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.05488736182451248
    2. ' j' → logprob: -2.929887294769287
    3. ' ' → logprob: -13.929887771606445
    4. ')' → logprob: -14.054887771606445
    5. ' ' → logprob: -14.304887771606445
    6. '```' → logprob: -14.429887771606445
    7. 'idx' → logprob: -14.804887771606445
    8. '   ' → logprob: -15.304887771606445
    9. '...' → logprob: -15.367387771606445
    10. '[j' → logprob: -15.554887771606445

Token 212: ')))' (ID: 15975)
  Prédit: ')))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.11343773454427719
    2. '))' → logprob: -2.2384376525878906
    3. ')' → logprob: -7.488437652587891
    4. '}))' → logprob: -10.36343765258789
    5. '})' → logprob: -11.73843765258789
    6. 'for' → logprob: -11.86343765258789
    7. '   ' → logprob: -13.73843765258789
    8. ' ' → logprob: -13.73843765258789
    9. ')}}' → logprob: -13.73843765258789
    10. '           ' → logprob: -14.36343765258789

Token 213: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12774214148521423
    2. 'for' → logprob: -2.127742052078247
    3. ')' → logprob: -7.127742290496826
    4. ' ' → logprob: -12.002741813659668
    5. ' )' → logprob: -13.377741813659668
    6. ')}' → logprob: -14.127741813659668
    7. '})' → logprob: -14.502741813659668
    8. '   ' → logprob: -14.502741813659668
    9. '))' → logprob: -15.002741813659668
    10. '{' → logprob: -15.377741813659668

Token 214: ' j' (ID: 441)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.25195854902267456
    2. 'idx' → logprob: -1.5019586086273193
    3. '[idx' → logprob: -11.126958847045898
    4. '(idx' → logprob: -12.251958847045898
    5. ')' → logprob: -13.251958847045898
    6. '	idx' → logprob: -13.376958847045898
    7. ' ' → logprob: -13.876958847045898
    8. ' ans' → logprob: -14.126958847045898
    9. '_idx' → logprob: -14.376958847045898
    10. ' j' → logprob: -14.501958847045898

Token 215: ' in' (ID: 306)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.4308122992515564
    2. ' idx' → logprob: -1.0558123588562012
    3. '[idx' → logprob: -6.555812358856201
    4. '(idx' → logprob: -7.680812358856201
    5. '_idx' → logprob: -9.305811882019043
    6. '	idx' → logprob: -9.805811882019043
    7. ' in' → logprob: -10.305811882019043
    8. ')' → logprob: -11.680811882019043
    9. '   ' → logprob: -12.180811882019043
    10. '  ' → logprob: -12.430811882019043

Token 216: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.08899355679750443
    2. ' idx' → logprob: -2.463993549346924
    3. '[idx' → logprob: -10.463994026184082
    4. '(idx' → logprob: -11.838994026184082
    5. '	idx' → logprob: -12.463994026184082
    6. ')' → logprob: -13.338994026184082
    7. '           ' → logprob: -13.463994026184082
    8. 'ans' → logprob: -13.463994026184082
    9. '_idx' → logprob: -13.463994026184082
    10. ' ' → logprob: -13.588994026184082

Token 217: '})

' (ID: 16447)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02144751138985157
    2. '})' → logprob: -3.8964474201202393
    3. ')}' → logprob: -7.146447658538818
    4. '))' → logprob: -10.02144718170166
    5. ')
' → logprob: -11.02144718170166
    6. '}' → logprob: -11.14644718170166
    7. ')}}' → logprob: -11.64644718170166
    8. '       ' → logprob: -11.89644718170166
    9. '   ' → logprob: -12.02144718170166
    10. '           ' → logprob: -12.14644718170166

Token 218: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14653030037879944
    2. '
' → logprob: -3.0215303897857666
    3. '<|end|>' → logprob: -3.3965303897857666
    4. 'if' → logprob: -3.7715303897857666
    5. '    
' → logprob: -4.3965301513671875
    6. 'return' → logprob: -4.5215301513671875
    7. '```' → logprob: -6.0215301513671875
    8. ' return' → logprob: -7.0215301513671875
    9. ')' → logprob: -7.0215301513671875
    10. '\n' → logprob: -7.1465301513671875

Token 219: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6288768649101257
    2. 'print' (adapté à ' print') → logprob: -1.5038769245147705
    3. 'return' → logprob: -1.7538769245147705
    4. '   ' → logprob: -2.7538769245147705
    5. ' for' → logprob: -5.503876686096191
    6. 'ans' → logprob: -5.878876686096191
    7. '```' → logprob: -7.753876686096191
    8. ' return' → logprob: -8.503876686096191
    9. '    
' → logprob: -9.378876686096191
    10. ' print' → logprob: -10.003876686096191

Token 220: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5772159099578857
    2. '(len' → logprob: -1.0772159099578857
    3. '(sorted' → logprob: -3.4522159099578857
    4. '()' → logprob: -3.5772159099578857
    5. '(ans' → logprob: -3.9522159099578857
    6. '(*' → logprob: -5.077216148376465
    7. '(tuple' → logprob: -5.202216148376465
    8. '('' → logprob: -5.327216148376465
    9. '((' → logprob: -6.702216148376465
    10. '(sum' → logprob: -7.577216148376465

Token 221: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0003361774142831564
    2. '(' → logprob: -8.000336647033691
    3. 'ans' → logprob: -15.125336647033691
    4. '(
' → logprob: -15.625336647033691
    5. ')' → logprob: -15.750336647033691
    6. '(answer' → logprob: -16.500335693359375
    7. ' (' → logprob: -17.500335693359375
    8. '	ans' → logprob: -17.750335693359375
    9. '(an' → logprob: -17.875335693359375
    10. '(

' → logprob: -18.375335693359375

Token 222: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009813226759433746
    2. '))' → logprob: -4.63481330871582
    3. '())' → logprob: -10.25981330871582
    4. '()' → logprob: -11.00981330871582
    5. ')))' → logprob: -13.00981330871582
    6. '(' → logprob: -14.38481330871582
    7. ' )' → logprob: -14.38481330871582
    8. ')
' → logprob: -14.50981330871582
    9. ')`' → logprob: -14.88481330871582
    10. ')}' → logprob: -15.00981330871582

Token 223: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 224: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5357075929641724
    2. '   ' → logprob: -0.9107075929641724
    3. ' for' → logprob: -4.785707473754883
    4. '<|end|>' → logprob: -5.785707473754883
    5. 'print' → logprob: -7.910707473754883
    6. ')' → logprob: -8.660707473754883
    7. '```' → logprob: -8.785707473754883
    8. 'if' → logprob: -8.910707473754883
    9. '    
' → logprob: -9.410707473754883
    10. 'main' → logprob: -9.660707473754883

Token 225: ' a' (ID: 261)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.3438403010368347
    2. 'a' → logprob: -1.5938403606414795
    3. 'edge' → logprob: -2.8438403606414795
    4. 'p' → logprob: -4.0938401222229
    5. 'x' → logprob: -4.9688401222229
    6. 'e' → logprob: -6.5938401222229
    7. ' pair' → logprob: -6.5938401222229
    8. ' edge' → logprob: -7.0938401222229
    9. 'ab' → logprob: -7.2188401222229
    10. 'item' → logprob: -8.093840599060059

Token 226: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.046429093927145004
    2. 'in' → logprob: -3.17142915725708
    3. ',' → logprob: -5.79642915725708
    4. 'a' → logprob: -8.296428680419922
    5. ' ' → logprob: -10.171428680419922
    6. '_' → logprob: -10.421428680419922
    7. 's' → logprob: -10.921428680419922
    8. ' ,' → logprob: -11.796428680419922
    9. 'n' → logprob: -12.171428680419922
    10. ',a' → logprob: -12.171428680419922

Token 227: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0009114635176956654
    2. ' b' → logprob: -7.000911235809326
    3. 'a' → logprob: -22.500911712646484
    4. '	b' → logprob: -23.375911712646484
    5. '_b' → logprob: -23.625911712646484
    6. '*b' → logprob: -23.750911712646484
    7. ' ' → logprob: -23.875911712646484
    8. '   ' → logprob: -24.750911712646484
    9. 's' → logprob: -24.750911712646484
    10. ',b' → logprob: -25.250911712646484

Token 228: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2014252245426178
    2. 'in' → logprob: -1.7014251947402954
    3. ',' → logprob: -12.076425552368164
    4. ' ' → logprob: -12.326425552368164
    5. '  ' → logprob: -13.951425552368164
    6. '   ' → logprob: -15.451425552368164
    7. '	in' → logprob: -15.951425552368164
    8. 'In' → logprob: -16.451425552368164
    9. '    ' → logprob: -16.701425552368164
    10. ',in' → logprob: -16.826425552368164

Token 229: ' ans' (ID: 3345)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.01855337992310524
    2. 'ans' → logprob: -4.018553256988525
    3. ' sorted' → logprob: -7.893553256988525
    4. ' ans' → logprob: -10.518553733825684
    5. '(sorted' → logprob: -13.518553733825684
    6. 'sort' → logprob: -14.393553733825684
    7. '   ' → logprob: -14.643553733825684
    8. 'answer' → logprob: -15.518553733825684
    9. 'a' → logprob: -15.768553733825684
    10. 'Ans' → logprob: -16.268552780151367

Token 230: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0020164288580417633
    2. ':
' → logprob: -6.752016544342041
    3. ',' → logprob: -8.002016067504883
    4. '):' → logprob: -8.627016067504883
    5. '():' → logprob: -8.752016067504883
    6. '   ' → logprob: -9.002016067504883
    7. '():
' → logprob: -10.377016067504883
    8. '):
' → logprob: -12.502016067504883
    9. ':**' → logprob: -12.752016067504883
    10. '       ' → logprob: -12.752016067504883

Token 231: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012320445966906846
    2. '<|end|>' → logprob: -10.000123023986816
    3. ' print' → logprob: -10.375123023986816
    4. '   ' → logprob: -10.875123023986816
    5. 'print' → logprob: -11.500123023986816
    6. '        
' → logprob: -12.000123023986816
    7. ',' → logprob: -13.000123023986816
    8. '     ' → logprob: -13.125123023986816
    9. '```' → logprob: -13.500123023986816
    10. '           ' → logprob: -14.250123023986816

Token 232: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.6101326942443848
    2. ' print' → logprob: -1.3601326942443848
    3. '       ' → logprob: -1.6101326942443848
    4. '   ' → logprob: -9.110132217407227
    5. '        
' → logprob: -10.235132217407227
    6. '<|end|>' → logprob: -10.485132217407227
    7. '    
' → logprob: -11.360132217407227
    8. ' 
' → logprob: -11.485132217407227
    9. '	print' → logprob: -11.610132217407227
    10. '```' → logprob: -12.360132217407227

Token 233: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0007392307161353528
    2. '(f' → logprob: -7.500739097595215
    3. 'a' → logprob: -8.750739097595215
    4. '(' → logprob: -10.500739097595215
    5. 'f' → logprob: -15.625739097595215
    6. '(
' → logprob: -16.87574005126953
    7. ' a' → logprob: -17.25074005126953
    8. '(i' → logprob: -17.62574005126953
    9. '('' → logprob: -17.75074005126953
    10. '()' → logprob: -18.00074005126953

Token 234: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002760533709079027
    2. ' ,' → logprob: -6.127760410308838
    3. ',b' → logprob: -7.502760410308838
    4. ',end' → logprob: -11.252760887145996
    5. ',
' → logprob: -12.502760887145996
    6. ')' → logprob: -12.752760887145996
    7. ',a' → logprob: -13.127760887145996
    8. ' b' → logprob: -14.377760887145996
    9. 'b' → logprob: -15.127760887145996
    10. ' ' → logprob: -15.377760887145996

Token 235: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0007099286303855479
    2. ' b' → logprob: -7.2507100105285645
    3. '   ' → logprob: -20.000709533691406
    4. ' ' → logprob: -20.250709533691406
    5. '    ' → logprob: -21.750709533691406
    6. '	b' → logprob: -22.625709533691406
    7. ')b' → logprob: -23.250709533691406
    8. '  ' → logprob: -23.625709533691406
    9. '(b' → logprob: -23.875709533691406
    10. '     ' → logprob: -24.250709533691406

Token 236: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4849443838757e-06
    2. ')
' → logprob: -12.375004768371582
    3. ')#' → logprob: -16.875003814697266
    4. ' )' → logprob: -17.250003814697266
    5. '<|end|>' → logprob: -17.375003814697266
    6. ')}' → logprob: -17.750003814697266
    7. '),' → logprob: -17.875003814697266
    8. ')`' → logprob: -18.500003814697266
    9. '')' → logprob: -18.875003814697266
    10. '}' → logprob: -19.000003814697266

Token 237: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01229065377265215
    2. 'main' → logprob: -5.0122904777526855
    3. '
' → logprob: -5.5122904777526855
    4. '```' → logprob: -7.3872904777526855
    5. ' if' → logprob: -8.012290954589844
    6. '<|end|>' → logprob: -8.387290954589844
    7. '(main' → logprob: -9.137290954589844
    8. '\n' → logprob: -9.387290954589844
    9. '#' → logprob: -10.262290954589844
    10. '\' → logprob: -10.637290954589844

Token 238: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.08956494927406311
    2. '__' → logprob: -2.4645650386810303
    3. '_' → logprob: -7.589564800262451
    4. ' ' → logprob: -9.83956527709961
    5. ' ' → logprob: -10.58956527709961
    6. ' main' → logprob: -10.96456527709961
    7. ' _' → logprob: -11.83956527709961
    8. '___' → logprob: -12.46456527709961
    9. '_name' → logprob: -12.71456527709961
    10. '_main' → logprob: -13.08956527709961

Token 239: 'name' (ID: 897)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4981604814529419
    2. '__' → logprob: -0.9981604814529419
    3. '==' → logprob: -4.248160362243652
    4. ' __' → logprob: -4.998160362243652
    5. '_' → logprob: -7.123160362243652
    6. '.__' → logprob: -7.373160362243652
    7. ' =="' → logprob: -8.873160362243652
    8. '=="' → logprob: -9.123160362243652
    9. '_name' → logprob: -9.373160362243652
    10. '[' → logprob: -9.498160362243652

Token 240: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -6.611323624383658e-05
    2. '__.__' → logprob: -10.250065803527832
    3. '==' → logprob: -10.750065803527832
    4. '___' → logprob: -12.500065803527832
    5. ' ==' → logprob: -13.125065803527832
    6. '____' → logprob: -14.125065803527832
    7. '_' → logprob: -14.500065803527832
    8. '__.' → logprob: -14.625065803527832
    9. '__["' → logprob: -14.625065803527832
    10. '=="' → logprob: -14.625065803527832

Token 241: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.28670424222946167
    2. '==' → logprob: -1.7867043018341064
    3. '__' → logprob: -2.6617043018341064
    4. '=="' → logprob: -4.786704063415527
    5. '=='' → logprob: -5.661704063415527
    6. '_' → logprob: -10.536704063415527
    7. ' =="' → logprob: -10.911704063415527
    8. '___' → logprob: -11.161704063415527
    9. '[' → logprob: -11.911704063415527
    10. '=' → logprob: -12.036704063415527

Token 242: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.038058239966630936
    2. ''' → logprob: -3.288058280944824
    3. '__' → logprob: -11.538058280944824
    4. ' "__' → logprob: -12.038058280944824
    5. ''"' → logprob: -15.413058280944824
    6. ' '__' → logprob: -15.538058280944824
    7. '"user' → logprob: -15.788058280944824
    8. '"name' → logprob: -16.038057327270508
    9. '"_' → logprob: -16.038057327270508
    10. '"'' → logprob: -16.538057327270508

Token 243: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.1286398023366928
    2. '__' → logprob: -2.1286396980285645
    3. '"' → logprob: -6.7536396980285645
    4. 'name' → logprob: -7.6286396980285645
    5. '_main' → logprob: -10.753640174865723
    6. ''' → logprob: -11.378640174865723
    7. '```' → logprob: -12.378640174865723
    8. '__":
' → logprob: -12.878640174865723
    9. '___' → logprob: -13.003640174865723
    10. 'python' → logprob: -13.003640174865723

Token 244: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.1606060117483139
    2. '__' → logprob: -1.910606026649475
    3. '__.' → logprob: -8.660606384277344
    4. '__':
' → logprob: -8.660606384277344
    5. '__:' → logprob: -11.410606384277344
    6. '.' → logprob: -11.535606384277344
    7. '__["' → logprob: -11.660606384277344
    8. '__.__' → logprob: -12.910606384277344
    9. '_' → logprob: -14.035606384277344
    10. '.__' → logprob: -14.910606384277344

Token 245: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.023902401328086853
    2. '   ' → logprob: -4.273902416229248
    3. '	main' → logprob: -5.023902416229248
    4. ' main' → logprob: -5.773902416229248
    5. '_main' → logprob: -13.02390193939209
    6. ' ' → logprob: -13.89890193939209
    7. '  ' → logprob: -14.39890193939209
    8. '(main' → logprob: -14.39890193939209
    9. '    
' → logprob: -14.52390193939209
    10. '   ' → logprob: -15.89890193939209

Token 246: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.0001584850688232109
    2. ' main' → logprob: -8.750158309936523
    3. '	main' → logprob: -18.125158309936523
    4. '(main' → logprob: -21.375158309936523
    5. '   ' → logprob: -21.875158309936523
    6. '.main' → logprob: -22.375158309936523
    7. '_main' → logprob: -23.125158309936523
    8. 'mainwindow' → logprob: -24.625158309936523
    9. 'Main' → logprob: -24.875158309936523
    10. 'import' → logprob: -24.875158309936523

Token 247: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20269259810447693
    2. '(' → logprob: -1.7026926279067993
    3. '(
' → logprob: -7.57769250869751
    4. '()
' → logprob: -7.70269250869751
    5. '```' → logprob: -9.577692985534668
    6. ')' → logprob: -9.952692985534668
    7. '<|end|>' → logprob: -9.952692985534668
    8. '
' → logprob: -10.327692985534668
    9. '#' → logprob: -10.452692985534668
    10. '();' → logprob: -10.702692985534668


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 245
Tokens correctement prédits (1ère position, stricte): 109
Tokens correctement prédits (1ère position, avec adaptation): 116
Tokens correctement prédits (top 10): 216
Précision stricte (1ère position): 44.49%
Précision adaptée (1ère position): 47.35%
Précision (top 10): 88.16%
================================================================================
