================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:11
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import Counter

s = input()
cnt = Counter(s)
print(cnt['+'] - cnt['-'])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' Counter' (ID: 32251)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.0460870265960693
    2. 'default' → logprob: -1.1710870265960693
    3. 'abc' → logprob: -1.7960870265960693
    4. 'Counter' → logprob: -2.4210870265960693
    5. ' defaultdict' → logprob: -2.6710870265960693
    6. 'named' → logprob: -5.421087265014648
    7. ' Counter' → logprob: -5.546087265014648
    8. ' abc' → logprob: -6.046087265014648
    9. ' deque' → logprob: -6.421087265014648
    10. '```' → logprob: -6.796087265014648

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -5.8961017202818766e-05
    2. '\(' → logprob: -10.375059127807617
    3. ' (' → logprob: -11.500059127807617
    4. '()' → logprob: -12.625059127807617
    5. '\' → logprob: -12.875059127807617
    6. '(
' → logprob: -12.875059127807617
    7. 'a' → logprob: -12.875059127807617
    8. '```' → logprob: -14.000059127807617
    9. '\n' → logprob: -14.125059127807617
    10. '.' → logprob: -14.250059127807617

Token 5: 's' (ID: 82)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001039479160681367
    2. 'a' → logprob: -7.876039505004883
    3. '.' → logprob: -8.376039505004883
    4. '\(' → logprob: -9.251039505004883
    5. '(
' → logprob: -9.376039505004883
    6. 'newline' → logprob: -9.876039505004883
    7. '\' → logprob: -10.001039505004883
    8. '\n' → logprob: -10.001039505004883
    9. ',' → logprob: -10.876039505004883
    10. '```' → logprob: -11.751039505004883

Token 6: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4709135890007019
    2. '(' → logprob: -1.9709136486053467
    3. 'u' → logprob: -2.7209136486053467
    4. '=' → logprob: -2.8459136486053467
    5. 't' → logprob: -3.2209136486053467
    6. 's' → logprob: -4.220913410186768
    7. '[' → logprob: -4.345913410186768
    8. 'a' → logprob: -4.720913410186768
    9. 'tring' → logprob: -4.720913410186768
    10. ' =' → logprob: -4.720913410186768

Token 7: ' input' (ID: 3422)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5184749364852905
    2. ' "' → logprob: -1.2684749364852905
    3. ''' → logprob: -2.26847505569458
    4. ' '' → logprob: -4.14347505569458
    5. ' Counter' → logprob: -6.26847505569458
    6. ' ' → logprob: -6.76847505569458
    7. 'input' → logprob: -8.893474578857422
    8. ''s' → logprob: -9.018474578857422
    9. 'Counter' → logprob: -9.018474578857422
    10. ' input' → logprob: -9.518474578857422

Token 8: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001200231839902699
    2. '('' → logprob: -7.251200199127197
    3. ''' → logprob: -8.251200675964355
    4. ')' → logprob: -9.751200675964355
    5. '`' → logprob: -10.251200675964355
    6. '()' → logprob: -10.376200675964355
    7. '"' → logprob: -10.626200675964355
    8. '("("' → logprob: -10.751200675964355
    9. '(
' → logprob: -11.251200675964355
    10. '```' → logprob: -11.376200675964355

Token 9: 'cnt' (ID: 33160)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.282050222158432
    2. '(' → logprob: -2.532050132751465
    3. ')' → logprob: -3.157050132751465
    4. 'c' → logprob: -3.157050132751465
    5. 'counter' → logprob: -3.282050132751465
    6. 'count' → logprob: -4.782050132751465
    7. 'result' → logprob: -4.907050132751465
    8. '=' → logprob: -4.907050132751465
    9. 'counts' → logprob: -5.032050132751465
    10. '_' → logprob: -6.407050132751465

Token 10: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03589913621544838
    2. '(' → logprob: -3.4108991622924805
    3. 's' → logprob: -6.5358991622924805
    4. '[s' → logprob: -8.28589916229248
    5. '(s' → logprob: -8.66089916229248
    6. ')' → logprob: -9.03589916229248
    7. '.' → logprob: -9.91089916229248
    8. '=' → logprob: -10.03589916229248
    9. '\[' → logprob: -10.53589916229248
    10. '[]' → logprob: -10.53589916229248

Token 11: ' Counter' (ID: 32251)
  Prédit: ' Counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Counter' → logprob: -0.31328558921813965
    2. 'Counter' → logprob: -1.3132855892181396
    3. ' counter' → logprob: -11.313285827636719
    4. ' ' → logprob: -12.188285827636719
    5. '.Counter' → logprob: -12.188285827636719
    6. 'counter' → logprob: -14.438285827636719
    7. '_counter' → logprob: -14.688285827636719
    8. 'C' → logprob: -15.938285827636719
    9. 'Counters' → logprob: -16.18828582763672
    10. ' ' → logprob: -16.43828582763672

Token 12: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.16024352610111237
    2. '(' → logprob: -1.9102435111999512
    3. 's' → logprob: -12.28524398803711
    4. '()' → logprob: -12.41024398803711
    5. '((' → logprob: -12.41024398803711
    6. '(ss' → logprob: -13.66024398803711
    7. '(
' → logprob: -13.91024398803711
    8. '('' → logprob: -14.03524398803711
    9. '(str' → logprob: -14.41024398803711
    10. '(S' → logprob: -14.91024398803711

Token 13: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5928495486150496e-05
    2. '[' → logprob: -12.125016212463379
    3. '))' → logprob: -12.375016212463379
    4. ' )' → logprob: -13.000016212463379
    5. '`)' → logprob: -13.125016212463379
    6. ').' → logprob: -14.125016212463379
    7. ')`' → logprob: -15.000016212463379
    8. '')' → logprob: -16.125015258789062
    9. ')
' → logprob: -16.250015258789062
    10. '())' → logprob: -16.250015258789062

Token 14: 'print' (ID: 1598)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5570140480995178
    2. '.' → logprob: -1.057013988494873
    3. ')' → logprob: -3.432013988494873
    4. '[' → logprob: -3.932013988494873
    5. 'm' → logprob: -5.057013988494873
    6. ' ' → logprob: -5.307013988494873
    7. 'print' → logprob: -5.807013988494873
    8. '
' → logprob: -6.557013988494873
    9. '\n' → logprob: -6.557013988494873
    10. '#' → logprob: -6.932013988494873

Token 15: '(cnt' (ID: 102125)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.6405310816480778e-05
    2. '(cnt' → logprob: -11.625016212463379
    3. '(s' → logprob: -13.250016212463379
    4. '('' → logprob: -14.125016212463379
    5. '(len' → logprob: -14.125016212463379
    6. '(C' → logprob: -14.250016212463379
    7. '("("' → logprob: -14.375016212463379
    8. '(
' → logprob: -14.500016212463379
    9. '(

' → logprob: -14.625016212463379
    10. '(count' → logprob: -14.875016212463379

Token 16: '['' (ID: 1181)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005479198414832354
    2. '[' → logprob: -5.255479335784912
    3. '.)' → logprob: -9.130478858947754
    4. '.' → logprob: -10.255478858947754
    5. '`)' → logprob: -10.630478858947754
    6. '))' → logprob: -10.755478858947754
    7. ' )' → logprob: -11.005478858947754
    8. '')' → logprob: -11.255478858947754
    9. '(' → logprob: -11.880478858947754
    10. ').' → logprob: -12.005478858947754

Token 17: '+' (ID: 10)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0014433303149417043
    2. ')' → logprob: -7.751443386077881
    3. ' '' → logprob: -7.876443386077881
    4. ''])' → logprob: -8.501442909240723
    5. 'c' → logprob: -9.251442909240723
    6. ''' → logprob: -9.626442909240723
    7. 'A' → logprob: -9.626442909240723
    8. 'e' → logprob: -10.626442909240723
    9. '('' → logprob: -10.876442909240723
    10. 'b' → logprob: -11.126442909240723

Token 18: '']' (ID: 1089)
  Prédit: ''])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''])' → logprob: -0.038240235298871994
    2. '1' → logprob: -3.5382401943206787
    3. '']' → logprob: -5.288240432739258
    4. '-' → logprob: -6.788240432739258
    5. ''-' → logprob: -7.038240432739258
    6. '+' → logprob: -7.413240432739258
    7. ''+' → logprob: -7.663240432739258
    8. ''' → logprob: -9.038240432739258
    9. '"])' → logprob: -9.663240432739258
    10. '])' → logprob: -9.913240432739258

Token 19: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003808980342000723
    2. '])' → logprob: -5.753808975219727
    3. '')' → logprob: -7.878808975219727
    4. '`)' → logprob: -9.753808975219727
    5. ']' → logprob: -9.878808975219727
    6. '))' → logprob: -10.128808975219727
    7. ''])' → logprob: -10.253808975219727
    8. '+)' → logprob: -10.753808975219727
    9. '+' → logprob: -11.253808975219727
    10. ' )' → logprob: -11.378808975219727

Token 20: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.00118677644059062
    2. ' cnt' → logprob: -7.376186847686768
    3. '1' → logprob: -7.501186847686768
    4. '(cnt' → logprob: -13.00118637084961
    5. '	cnt' → logprob: -13.50118637084961
    6. ' ' → logprob: -14.00118637084961
    7. '0' → logprob: -14.12618637084961
    8. 'counter' → logprob: -14.25118637084961
    9. 'ct' → logprob: -14.50118637084961
    10. '[cnt' → logprob: -14.62618637084961

Token 21: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.002881072461605072
    2. '[' → logprob: -6.752881050109863
    3. ''-' → logprob: -7.252881050109863
    4. ''' → logprob: -7.502881050109863
    5. '['_' → logprob: -8.252881050109863
    6. ''+' → logprob: -10.002881050109863
    7. '('-' → logprob: -10.752881050109863
    8. ')' → logprob: -10.877881050109863
    9. ''s' → logprob: -11.002881050109863
    10. '["' → logprob: -11.752881050109863

Token 22: '-' (ID: 12)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.05492741987109184
    2. '-' → logprob: -2.929927349090576
    3. '"-' → logprob: -10.929927825927734
    4. ''' → logprob: -10.929927825927734
    5. '-'' → logprob: -13.054927825927734
    6. '']' → logprob: -13.554927825927734
    7. ' '-' → logprob: -13.804927825927734
    8. ''])' → logprob: -14.304927825927734
    9. '('-' → logprob: -14.304927825927734
    10. '’-' → logprob: -14.679927825927734

Token 23: ''])' (ID: 11775)
  Prédit: ''])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''])' → logprob: -0.0032314250711351633
    2. '']' → logprob: -6.378231525421143
    3. '1' → logprob: -7.503231525421143
    4. '])' → logprob: -7.503231525421143
    5. ')' → logprob: -8.003231048583984
    6. ''' → logprob: -10.378231048583984
    7. '')' → logprob: -11.128231048583984
    8. '+' → logprob: -11.753231048583984
    9. ']' → logprob: -11.878231048583984
    10. '"])' → logprob: -12.003231048583984


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 21
Tokens correctement prédits (1ère position, stricte): 4
Tokens correctement prédits (1ère position, avec adaptation): 4
Tokens correctement prédits (top 10): 13
Précision stricte (1ère position): 19.05%
Précision adaptée (1ère position): 19.05%
Précision (top 10): 61.90%
================================================================================
