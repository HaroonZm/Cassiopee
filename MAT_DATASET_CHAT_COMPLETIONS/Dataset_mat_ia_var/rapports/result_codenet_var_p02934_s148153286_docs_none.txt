================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:47:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
a = [int(x) for x in input().split()]
c = 0
for i in range(n):
    c += 1 / a[i]
print(1 / c)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -5.7530574849806726e-05
    2. ''' → logprob: -10.750057220458984
    3. '('' → logprob: -11.125057220458984
    4. '(
' → logprob: -11.750057220458984
    5. '(n' → logprob: -13.000057220458984
    6. '```' → logprob: -13.125057220458984
    7. '("("' → logprob: -13.125057220458984
    8. '()' → logprob: -13.500057220458984
    9. '`' → logprob: -13.500057220458984
    10. '[' → logprob: -14.125057220458984

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03871168941259384
    2. ')' → logprob: -3.5387117862701416
    3. '()' → logprob: -4.9137115478515625
    4. '())' → logprob: -7.1637115478515625
    5. '(
' → logprob: -8.663711547851562
    6. '```' → logprob: -9.163711547851562
    7. '(()' → logprob: -9.413711547851562
    8. '("("' → logprob: -9.663711547851562
    9. '('' → logprob: -9.913711547851562
    10. '`' → logprob: -10.163711547851562

Token 5: 'a' (ID: 64)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6515942215919495
    2. 'for' → logprob: -1.4015941619873047
    3. 'i' → logprob: -2.1515941619873047
    4. 's' → logprob: -2.7765941619873047
    5. 'x' → logprob: -4.651594161987305
    6. ')' → logprob: -5.151594161987305
    7. 'a' → logprob: -5.401594161987305
    8. '*' → logprob: -5.401594161987305
    9. ' ' → logprob: -5.651594161987305
    10. 'f' → logprob: -5.901594161987305

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007373234839178622
    2. '+' → logprob: -8.000737190246582
    3. '[n' → logprob: -9.500737190246582
    4. '[a' → logprob: -10.125737190246582
    5. '[r' → logprob: -10.125737190246582
    6. '[i' → logprob: -10.250737190246582
    7. '\[' → logprob: -10.375737190246582
    8. '.' → logprob: -10.375737190246582
    9. '[m' → logprob: -10.750737190246582
    10. '[p' → logprob: -10.750737190246582

Token 7: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.5288634300231934
    2. '[]' → logprob: -1.2788634300231934
    3. ' [' → logprob: -2.2788634300231934
    4. '[' → logprob: -4.153863430023193
    5. '[int' → logprob: -5.528863430023193
    6. '[input' → logprob: -5.778863430023193
    7. 'list' → logprob: -6.028863430023193
    8. ' list' → logprob: -6.653863430023193
    9. '0' → logprob: -6.653863430023193
    10. '[n' → logprob: -7.278863430023193

Token 8: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0821039229631424
    2. '0' → logprob: -2.582103967666626
    3. ']' → logprob: -6.332103729248047
    4. ']int' → logprob: -6.832103729248047
    5. 'i' → logprob: -8.332103729248047
    6. ' int' → logprob: -9.832103729248047
    7. '(int' → logprob: -11.082103729248047
    8. ')' → logprob: -11.457103729248047
    9. '[int' → logprob: -11.457103729248047
    10. ' ' → logprob: -11.832103729248047

Token 9: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2850707769393921
    2. '(input' → logprob: -1.410070776939392
    3. '(x' → logprob: -5.910070896148682
    4. '()' → logprob: -7.160070896148682
    5. '(i' → logprob: -8.785070419311523
    6. '()]' → logprob: -9.285070419311523
    7. '(token' → logprob: -10.035070419311523
    8. ']' → logprob: -10.535070419311523
    9. '(a' → logprob: -10.660070419311523
    10. 'input' → logprob: -11.035070419311523

Token 10: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003137674182653427
    2. ')]' → logprob: -6.003137588500977
    3. '(input' → logprob: -8.253137588500977
    4. '())' → logprob: -8.878137588500977
    5. ')])' → logprob: -9.378137588500977
    6. ' )' → logprob: -9.753137588500977
    7. '(' → logprob: -9.753137588500977
    8. 'input' → logprob: -10.753137588500977
    9. '(x' → logprob: -11.628137588500977
    10. '()' → logprob: -12.253137588500977

Token 11: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6651754379272461
    2. ' for' → logprob: -1.040175437927246
    3. ')' → logprob: -2.040175437927246
    4. ')]' → logprob: -6.915175437927246
    5. '(' → logprob: -8.040175437927246
    6. ']' → logprob: -8.165175437927246
    7. '(input' → logprob: -8.165175437927246
    8. ' )' → logprob: -8.540175437927246
    9. 'input' → logprob: -9.040175437927246
    10. '(x' → logprob: -9.790175437927246

Token 12: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.08663899451494217
    2. 'input' → logprob: -2.836638927459717
    3. '<|end|>' → logprob: -4.211638927459717
    4. '(input' → logprob: -5.211638927459717
    5. ' ' → logprob: -6.336638927459717
    6. '=input' → logprob: -7.461638927459717
    7. '<|end|>' → logprob: -7.461638927459717
    8. ' range' → logprob: -7.461638927459717
    9. ' x' → logprob: -8.211639404296875
    10. 'range' → logprob: -9.586639404296875

Token 13: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018215617164969444
    2. 'in' → logprob: -4.018215656280518
    3. '(' → logprob: -11.51821517944336
    4. '_' → logprob: -12.01821517944336
    5. ' ' → logprob: -12.01821517944336
    6. 'import' → logprob: -12.01821517944336
    7. '<|end|>' → logprob: -12.14321517944336
    8. ')' → logprob: -12.39321517944336
    9. 'a' → logprob: -12.51821517944336
    10. '(x' → logprob: -12.64321517944336

Token 14: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.100216805934906
    2. ' input' → logprob: -2.350216865539551
    3. 'range' → logprob: -12.22521686553955
    4. '(input' → logprob: -12.22521686553955
    5. ' range' → logprob: -15.10021686553955
    6. '=input' → logprob: -16.600215911865234
    7. '<input' → logprob: -17.975215911865234
    8. ',input' → logprob: -18.100215911865234
    9. '[input' → logprob: -18.600215911865234
    10. '	input' → logprob: -18.725215911865234

Token 15: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.06121872365474701
    2. '()' → logprob: -2.936218738555908
    3. '().' → logprob: -5.311218738555908
    4. '())' → logprob: -6.811218738555908
    5. '()].' → logprob: -8.56121826171875
    6. ']()' → logprob: -10.56121826171875
    7. '()][' → logprob: -10.56121826171875
    8. '(' → logprob: -11.18621826171875
    9. ']' → logprob: -11.81121826171875
    10. ')]' → logprob: -12.56121826171875

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.919942486798391e-05
    2. 'strip' → logprob: -10.000059127807617
    3. 'rstrip' → logprob: -11.250059127807617
    4. ' split' → logprob: -14.375059127807617
    5. '(split' → logprob: -16.500059127807617
    6. 'spl' → logprob: -17.375059127807617
    7. 's' → logprob: -21.500059127807617
    8. ')' → logprob: -21.625059127807617
    9. '.split' → logprob: -21.875059127807617
    10. '```' → logprob: -22.000059127807617

Token 17: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.07102351635694504
    2. '())' → logprob: -3.071023464202881
    3. '()' → logprob: -4.446023464202881
    4. '(' → logprob: -4.821023464202881
    5. ')]' → logprob: -6.446023464202881
    6. '('' → logprob: -7.821023464202881
    7. ']' → logprob: -8.196023941040039
    8. '')]' → logprob: -9.821023941040039
    9. ')' → logprob: -9.946023941040039
    10. '`]' → logprob: -11.821023941040039

Token 18: 'c' (ID: 66)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.26816993951797485
    2. 's' → logprob: -1.76816987991333
    3. 'c' → logprob: -3.64316987991333
    4. 'm' → logprob: -4.26816987991333
    5. 'b' → logprob: -5.14316987991333
    6. 'd' → logprob: -5.89316987991333
    7. '.' → logprob: -6.01816987991333
    8. 'k' → logprob: -6.51816987991333
    9. '```' → logprob: -6.64316987991333
    10. 'p' → logprob: -6.89316987991333

Token 19: ' =' (ID: 314)
  Prédit: 'ount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ount' → logprob: -0.24174745380878448
    2. 'o' → logprob: -2.2417473793029785
    3. ' =' → logprob: -3.2417473793029785
    4. 'ounter' → logprob: -3.3667473793029785
    5. '=' → logprob: -4.1167473793029785
    6. '.' → logprob: -4.9917473793029785
    7. '[' → logprob: -5.8667473793029785
    8. 'ont' → logprob: -6.1167473793029785
    9. 'nt' → logprob: -6.6167473793029785
    10. '[:]' → logprob: -6.6167473793029785

Token 20: ' ' (ID: 220)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.9131501913070679
    2. '[' → logprob: -1.2881501913070679
    3. ' [' → logprob: -1.9131501913070679
    4. ' {}' → logprob: -2.6631503105163574
    5. '0' → logprob: -3.0381503105163574
    6. '{' → logprob: -3.5381503105163574
    7. ' ' → logprob: -4.038150310516357
    8. 'a' → logprob: -5.163150310516357
    9. '[a' → logprob: -6.038150310516357
    10. ' {' → logprob: -6.163150310516357

Token 21: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5955718755722046
    2. '{}' → logprob: -0.8455718755722046
    3. '0' → logprob: -4.470571994781494
    4. '{' → logprob: -5.220571994781494
    5. 'a' → logprob: -6.595571994781494
    6. '[a' → logprob: -7.470571994781494
    7. '[]' → logprob: -7.595571994781494
    8. '[len' → logprob: -10.220571517944336
    9. '{}
' → logprob: -10.345571517944336
    10. '[max' → logprob: -10.845571517944336

Token 22: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002836232597474009
    2. ' for' → logprob: -8.500283241271973
    3. '```' → logprob: -10.750283241271973
    4. '
' → logprob: -10.875283241271973
    5. 'i' → logprob: -11.750283241271973
    6. 'f' → logprob: -11.875283241271973
    7. '\n' → logprob: -11.875283241271973
    8. '<|end|>' → logprob: -11.875283241271973
    9. 'n' → logprob: -13.250283241271973
    10. '>' → logprob: -13.750283241271973

Token 23: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1637164789135568e-05
    2. 'f' → logprob: -12.000011444091797
    3. ' for' → logprob: -13.000011444091797
    4. '```' → logprob: -13.000011444091797
    5. 'i' → logprob: -14.875011444091797
    6. '`' → logprob: -16.000011444091797
    7. '	for' → logprob: -16.500011444091797
    8. '>' → logprob: -16.625011444091797
    9. '\' → logprob: -17.375011444091797
    10. '
' → logprob: -17.375011444091797

Token 24: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.35347461700439453
    2. ' ' → logprob: -1.2284746170043945
    3. '  ' → logprob: -6.4784746170043945
    4. ' _' → logprob: -6.6034746170043945
    5. 'i' → logprob: -7.2284746170043945
    6. ' a' → logprob: -7.6034746170043945
    7. '_' → logprob: -8.103474617004395
    8. ' x' → logprob: -8.228474617004395
    9. ' ‌' → logprob: -8.228474617004395
    10. ' ' → logprob: -11.353474617004395

Token 25: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.060570865869522095
    2. ' ' → logprob: -3.1855709552764893
    3. 'in' → logprob: -4.18557071685791
    4. 'n' → logprob: -6.93557071685791
    5. '  ' → logprob: -7.18557071685791
    6. ' n' → logprob: -8.31057071685791
    7. ')' → logprob: -10.06057071685791
    8. '<|end|>' → logprob: -10.06057071685791
    9. '	in' → logprob: -10.56057071685791
    10. '+' → logprob: -11.43557071685791

Token 26: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.018265826627612114
    2. 'range' → logprob: -4.018265724182129
    3. ' a' → logprob: -9.143265724182129
    4. 'a' → logprob: -12.518265724182129
    5. ' ' → logprob: -12.518265724182129
    6. '	range' → logprob: -14.143265724182129
    7. ' xrange' → logprob: -15.018265724182129
    8. '  ' → logprob: -15.643265724182129
    9. ' n' → logprob: -15.893265724182129
    10. ' r' → logprob: -16.018266677856445

Token 27: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4741537570953369
    2. '(n' → logprob: -0.9741537570953369
    3. ' (' → logprob: -9.599153518676758
    4. '(len' → logprob: -11.974153518676758
    5. ' ' → logprob: -14.849153518676758
    6. '(
' → logprob: -14.849153518676758
    7. '(

' → logprob: -14.849153518676758
    8. '(range' → logprob: -15.349153518676758
    9. ' n' → logprob: -15.474153518676758
    10. '(s' → logprob: -15.474153518676758

Token 28: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01181870512664318
    2. ' ):' → logprob: -5.011818885803223
    3. ')' → logprob: -5.386818885803223
    4. '-' → logprob: -7.886818885803223
    5. ':' → logprob: -10.261818885803223
    6. '+' → logprob: -10.386818885803223
    7. '):
' → logprob: -10.386818885803223
    8. ' )' → logprob: -10.511818885803223
    9. ' -' → logprob: -12.011818885803223
    10. ' ' → logprob: -12.636818885803223

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06730431318283081
    2. ' ' → logprob: -3.8173043727874756
    3. '    ' → logprob: -3.9423043727874756
    4. ' for' → logprob: -3.9423043727874756
    5. '<|end|>' → logprob: -6.1923041343688965
    6. ' if' → logprob: -6.9423041343688965
    7. 'for' → logprob: -7.5673041343688965
    8. '    
' → logprob: -8.817304611206055
    9. '       ' → logprob: -9.067304611206055
    10. ' 
' → logprob: -9.692304611206055

Token 30: ' c' (ID: 274)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1133008673787117
    2. 'for' → logprob: -3.2383008003234863
    3. '   ' → logprob: -3.4883008003234863
    4. ' if' → logprob: -3.4883008003234863
    5. ' c' → logprob: -5.863300800323486
    6. 'if' → logprob: -6.488300800323486
    7. ' a' → logprob: -7.113300800323486
    8. '    ' → logprob: -7.363300800323486
    9. 'c' (adapté à ' c') → logprob: -8.113301277160645
    10. ' range' → logprob: -8.238301277160645

Token 31: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.25599679350852966
    2. '+' → logprob: -2.1309967041015625
    3. '+=' → logprob: -2.2559967041015625
    4. ' +' → logprob: -6.5059967041015625
    5. ' ' → logprob: -8.005996704101562
    6. '++' → logprob: -8.880996704101562
    7. '=' → logprob: -9.005996704101562
    8. ' ==' → logprob: -9.505996704101562
    9. '<' → logprob: -10.255996704101562
    10. ' =' → logprob: -10.505996704101562

Token 32: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03811757266521454
    2. ' a' → logprob: -3.2881176471710205
    3. '1' → logprob: -10.038117408752441
    4. ' ' → logprob: -10.913117408752441
    5. '(a' → logprob: -12.413117408752441
    6. 'i' → logprob: -12.538117408752441
    7. '   ' → logprob: -13.538117408752441
    8. 'int' → logprob: -13.663117408752441
    9. ' i' → logprob: -13.788117408752441
    10. ' (' → logprob: -14.913117408752441

Token 33: '1' (ID: 16)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00044592362246476114
    2. ' a' → logprob: -8.625446319580078
    3. '1' → logprob: -8.750446319580078
    4. 'i' → logprob: -10.125446319580078
    5. '(a' → logprob: -10.125446319580078
    6. 'int' → logprob: -12.250446319580078
    7. '   ' → logprob: -12.500446319580078
    8. '(' → logprob: -12.625446319580078
    9. 'max' → logprob: -12.625446319580078
    10. 'abs' → logprob: -12.750446319580078

Token 34: ' /' (ID: 820)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.036057949066162
    2. '   ' → logprob: -1.161057949066162
    3. ' ' → logprob: -2.286057949066162
    4. '    ' → logprob: -2.411057949066162
    5. 'if' → logprob: -2.536057949066162
    6. '\n' → logprob: -4.536057949066162
    7. '\' → logprob: -4.786057949066162
    8. '    
' → logprob: -5.036057949066162
    9. '[' → logprob: -5.286057949066162
    10. '+' → logprob: -5.661057949066162

Token 35: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00039158877916634083
    2. ' a' → logprob: -8.625391960144043
    3. '(a' → logprob: -9.125391960144043
    4. '(' → logprob: -9.750391960144043
    5. '2' → logprob: -10.625391960144043
    6. ' (' → logprob: -11.750391960144043
    7. ' ' → logprob: -12.625391960144043
    8. 'max' → logprob: -12.625391960144043
    9. '   ' → logprob: -13.500391960144043
    10. 'c' → logprob: -14.000391960144043

Token 36: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0024820810649544
    2. '[' → logprob: -6.002481937408447
    3. '[a' → logprob: -12.252482414245605
    4. '[c' → logprob: -14.877482414245605
    5. '\[' → logprob: -14.877482414245605
    6. 'i' → logprob: -15.252482414245605
    7. '[
' → logprob: -16.00248146057129
    8. '[x' → logprob: -16.25248146057129
    9. '[j' → logprob: -16.62748146057129
    10. ' [' → logprob: -16.62748146057129

Token 37: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022458923049271107
    2. ']' → logprob: -6.877245903015137
    3. '])' → logprob: -6.877245903015137
    4. ')]' → logprob: -9.502245903015137
    5. '[' → logprob: -10.127245903015137
    6. '[i' → logprob: -10.752245903015137
    7. ')])' → logprob: -10.877245903015137
    8. '))' → logprob: -12.127245903015137
    9. '）' → logprob: -12.377245903015137
    10. ' )' → logprob: -12.377245903015137

Token 38: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16653425991535187
    2. 's' → logprob: -2.666534185409546
    3. 'sum' → logprob: -3.916534185409546
    4. 'result' → logprob: -3.916534185409546
    5. 'c' → logprob: -4.666534423828125
    6. 'r' → logprob: -4.916534423828125
    7. 'b' → logprob: -5.291534423828125
    8. 'total' → logprob: -5.541534423828125
    9. ')' → logprob: -5.666534423828125
    10. 'p' → logprob: -5.791534423828125

Token 39: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009810051415115595
    2. '(c' → logprob: -7.875980854034424
    3. '(sum' → logprob: -8.750981330871582
    4. '(round' → logprob: -8.750981330871582
    5. '((' → logprob: -9.000981330871582
    6. '()' → logprob: -9.000981330871582
    7. '('' → logprob: -11.750981330871582
    8. '(a' → logprob: -12.250981330871582
    9. '("' → logprob: -12.625981330871582
    10. ' (' → logprob: -12.750981330871582

Token 40: '1' (ID: 16)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4332208037376404
    2. '1' → logprob: -1.0582208633422852
    3. 'n' → logprob: -6.308220863342285
    4. '(' → logprob: -7.058220863342285
    5. ')' → logprob: -7.058220863342285
    6. '2' → logprob: -8.308220863342285
    7. '3' → logprob: -8.558220863342285
    8. 'round' → logprob: -8.933220863342285
    9. 'sum' → logprob: -9.058220863342285
    10. ')c' → logprob: -9.433220863342285

Token 41: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.02018141746520996
    2. ' /' → logprob: -4.020181655883789
    3. '/c' → logprob: -6.520181655883789
    4. ')' → logprob: -7.645181655883789
    5. '/)' → logprob: -9.520181655883789
    6. '/(' → logprob: -13.395181655883789
    7. '/')' → logprob: -13.895181655883789
    8. ' )' → logprob: -14.395181655883789
    9. '/ec' → logprob: -15.395181655883789
    10. ')/' → logprob: -15.770181655883789

Token 42: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -6.392202976712724e-06
    2. ' c' → logprob: -12.000006675720215
    3. ')c' → logprob: -15.875006675720215
    4. ')' → logprob: -19.1250057220459
    5. '	c' → logprob: -19.3750057220459
    6. '   ' → logprob: -19.6250057220459
    7. 'с' → logprob: -20.3750057220459
    8. '(c' → logprob: -20.5000057220459
    9. ' ' → logprob: -21.1250057220459
    10. '_c' → logprob: -21.2500057220459

Token 43: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.2729995988775045e-06
    2. '))' → logprob: -12.125006675720215
    3. '`)' → logprob: -15.250006675720215
    4. ')`' → logprob: -15.625006675720215
    5. ' )' → logprob: -16.2500057220459
    6. '')' → logprob: -16.5000057220459
    7. ')
' → logprob: -17.0000057220459
    8. '）' → logprob: -17.3750057220459
    9. ')))' → logprob: -17.7500057220459
    10. '")' → logprob: -18.3750057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 41
Tokens correctement prédits (1ère position, stricte): 14
Tokens correctement prédits (1ère position, avec adaptation): 14
Tokens correctement prédits (top 10): 35
Précision stricte (1ère position): 34.15%
Précision adaptée (1ère position): 34.15%
Précision (top 10): 85.37%
================================================================================
