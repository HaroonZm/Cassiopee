================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input()) # entree
a = []
for i in range(n):
    # je split la ligne, pas super clean mais bon...
    tmp = input().split()
    tmp.append(i)
    a.append(tmp)
spi = []
for x in a:
    # je range (nom, -note, index), un peu à l'arrache
    spi.append((x[0], -int(x[1]), x[2]))
spi.sort()
# affichage des indices (+1 car index humain)
for t in spi:
    print(int(t[2]) + 1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00042768914136104286
    2. ''' → logprob: -8.62542724609375
    3. '('' → logprob: -9.37542724609375
    4. '(n' → logprob: -9.87542724609375
    5. '```' → logprob: -10.37542724609375
    6. '`' → logprob: -10.75042724609375
    7. '("("' → logprob: -11.12542724609375
    8. '(
' → logprob: -11.12542724609375
    9. ')' → logprob: -11.75042724609375
    10. '()' → logprob: -12.25042724609375

Token 4: '())' (ID: 3516)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11869344860315323
    2. ')' → logprob: -2.2436933517456055
    3. '()' → logprob: -5.3686933517456055
    4. '())' → logprob: -7.4936933517456055
    5. '(
' → logprob: -8.243693351745605
    6. '```' → logprob: -9.993693351745605
    7. '(

' → logprob: -10.368693351745605
    8. '('' → logprob: -10.493693351745605
    9. ''' → logprob: -10.618693351745605
    10. '(n' → logprob: -10.868693351745605

Token 5: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6563583016395569
    2. 'for' → logprob: -1.656358242034912
    3. '\n' → logprob: -2.031358242034912
    4. '+' → logprob: -3.281358242034912
    5. '*' → logprob: -3.656358242034912
    6. '\' → logprob: -3.781358242034912
    7. '#' → logprob: -4.406358242034912
    8. ' if' → logprob: -4.531358242034912
    9. '\r' → logprob: -4.531358242034912
    10. '```' → logprob: -4.531358242034912

Token 6: ' entree' (ID: 156822)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.008781078271567822
    2. ' \' → logprob: -5.5087809562683105
    3. '  ' → logprob: -6.8837809562683105
    4. ' n' → logprob: -7.2587809562683105
    5. 'n' → logprob: -7.7587809562683105
    6. '\' → logprob: -7.8837809562683105
    7. '\n' → logprob: -8.508781433105469
    8. ')' → logprob: -8.633781433105469
    9. ' )' → logprob: -8.633781433105469
    10. ' ```' → logprob: -8.758781433105469

Token 7: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6394095420837402
    2. '\n' → logprob: -2.7644095420837402
    3. '*' → logprob: -2.8894095420837402
    4. 'for' → logprob: -3.3894095420837402
    5. ' 
' → logprob: -3.3894095420837402
    6. 'if' → logprob: -3.3894095420837402
    7. '+' → logprob: -3.5144095420837402
    8. ')' → logprob: -3.5144095420837402
    9. '
' → logprob: -3.6394095420837402
    10. '\' → logprob: -3.8894095420837402

Token 8: 'a' (ID: 64)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5534933805465698
    2. 's' → logprob: -1.9284933805465698
    3. 'if' → logprob: -2.5534934997558594
    4. '\n' → logprob: -2.8034934997558594
    5. 'i' → logprob: -3.0534934997558594
    6. '\' → logprob: -3.9284934997558594
    7. 'result' → logprob: -4.303493499755859
    8. ' for' → logprob: -4.428493499755859
    9. '```' → logprob: -4.928493499755859
    10. 'x' → logprob: -5.178493499755859

Token 9: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5615442991256714
    2. '[' → logprob: -1.4365442991256714
    3. ' ' → logprob: -2.936544418334961
    4. '=' → logprob: -3.061544418334961
    5. ',' → logprob: -3.186544418334961
    6. 'r' → logprob: -4.311544418334961
    7. '[i' → logprob: -5.061544418334961
    8. 'm' → logprob: -5.686544418334961
    9. ' +=' → logprob: -5.686544418334961
    10. '*' → logprob: -5.811544418334961

Token 10: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.2468152493238449
    2. '[]' → logprob: -2.6218152046203613
    3. ' [' → logprob: -2.9968152046203613
    4. ' ' → logprob: -2.9968152046203613
    5. '0' → logprob: -3.3718152046203613
    6. ' n' → logprob: -5.996815204620361
    7. ' int' → logprob: -6.246815204620361
    8. 'n' → logprob: -6.621815204620361
    9. '[int' → logprob: -6.871815204620361
    10. 'a' → logprob: -6.871815204620361

Token 11: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002516839886084199
    2. ' for' → logprob: -8.375251770019531
    3. '```' → logprob: -12.250251770019531
    4. 'i' → logprob: -12.750251770019531
    5. '
' → logprob: -12.750251770019531
    6. 'n' → logprob: -12.875251770019531
    7. '[' → logprob: -13.125251770019531
    8. 'f' → logprob: -13.250251770019531
    9. '<|end|>' → logprob: -13.750251770019531
    10. ' 
' → logprob: -14.625251770019531

Token 12: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3516438603401184
    2. ' i' → logprob: -1.2266438007354736
    3. '  ' → logprob: -6.226644039154053
    4. 'i' → logprob: -7.351644039154053
    5. ' _' → logprob: -8.101643562316895
    6. ' n' → logprob: -8.601643562316895
    7. '_' → logprob: -10.476643562316895
    8. ' a' → logprob: -11.101643562316895
    9. ' ‌' → logprob: -11.226643562316895
    10. 'n' → logprob: -12.226643562316895

Token 13: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07626231759786606
    2. 'in' → logprob: -3.0762622356414795
    3. ' ' → logprob: -3.7012622356414795
    4. 'n' → logprob: -6.326262474060059
    5. ' n' → logprob: -7.951262474060059
    6. '  ' → logprob: -8.326262474060059
    7. '_' → logprob: -9.701262474060059
    8. ' i' → logprob: -10.576262474060059
    9. 'space' → logprob: -10.951262474060059
    10. ')' → logprob: -11.201262474060059

Token 14: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.02976900152862072
    2. 'range' → logprob: -3.529768943786621
    3. ' ' → logprob: -11.029768943786621
    4. '	range' → logprob: -14.404768943786621
    5. ' in' → logprob: -14.654768943786621
    6. ' n' → logprob: -15.154768943786621
    7. '```' → logprob: -15.154768943786621
    8. ' ' → logprob: -15.779768943786621
    9. ' a' → logprob: -16.029769897460938
    10. ' xrange' → logprob: -16.029769897460938

Token 15: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005119546316564083
    2. '(n' → logprob: -5.505119323730469
    3. ' (' → logprob: -6.880119323730469
    4. '(len' → logprob: -12.255119323730469
    5. '(
' → logprob: -12.630119323730469
    6. '(range' → logprob: -13.505119323730469
    7. '(i' → logprob: -14.005119323730469
    8. ' ' → logprob: -14.255119323730469
    9. '(a' → logprob: -14.755119323730469
    10. '(space' → logprob: -15.380119323730469

Token 16: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20542915165424347
    2. ')' → logprob: -1.705429196357727
    3. ' ):' → logprob: -6.0804290771484375
    4. '+' → logprob: -6.7054290771484375
    5. ' )' → logprob: -7.9554290771484375
    6. ':' → logprob: -9.455429077148438
    7. '):
' → logprob: -10.330429077148438
    8. ' +' → logprob: -12.205429077148438
    9. '**' → logprob: -12.830429077148438
    10. ' ' → logprob: -12.830429077148438

Token 17: '   ' (ID: 271)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.40010660886764526
    2. ' ' → logprob: -1.40010666847229
    3. 'a' → logprob: -3.65010666847229
    4. '    ' → logprob: -3.65010666847229
    5. '     
' → logprob: -4.025106430053711
    6. '   ' → logprob: -5.400106430053711
    7. ' 
' → logprob: -5.650106430053711
    8. ' i' → logprob: -6.775106430053711
    9. '    
' → logprob: -6.775106430053711
    10. '<|end|>' → logprob: -6.900106430053711

Token 18: ' #' (ID: 1069)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4328250288963318
    2. 'a' → logprob: -1.0578250885009766
    3. '   ' → logprob: -6.307825088500977
    4. '    ' → logprob: -6.932825088500977
    5. ' ' → logprob: -7.682825088500977
    6. 'x' → logprob: -9.057825088500977
    7. ' ```' → logprob: -9.307825088500977
    8. '```' → logprob: -9.557825088500977
    9. ' line' → logprob: -9.682825088500977
    10. 's' → logprob: -9.807825088500977

Token 19: ' je' (ID: 1264)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.10071501135826111
    2. 'a' → logprob: -2.475714921951294
    3. '   ' → logprob: -5.100715160369873
    4. ' x' → logprob: -6.725715160369873
    5. ' ' → logprob: -6.850715160369873
    6. ' t' → logprob: -7.350715160369873
    7. '    ' → logprob: -7.350715160369873
    8. 'x' → logprob: -7.600715160369873
    9. 't' → logprob: -8.600714683532715
    10. ' ' → logprob: -8.725714683532715

Token 20: ' split' (ID: 12648)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0711815357208252
    2. 'n' → logprob: -1.3211815357208252
    3. ' ' → logprob: -1.3211815357208252
    4. '    ' → logprob: -3.071181535720825
    5. ' n' → logprob: -3.321181535720825
    6. 'nt' → logprob: -4.696181297302246
    7. '  ' → logprob: -4.946181297302246
    8. 'a' → logprob: -5.071181297302246
    9. ' a' → logprob: -5.321181297302246
    10. 's' → logprob: -5.946181297302246

Token 21: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5016669034957886
    2. ' a' → logprob: -2.876667022705078
    3. 'input' → logprob: -3.001667022705078
    4. '   ' → logprob: -3.126667022705078
    5. ' input' → logprob: -3.126667022705078
    6. 'a' → logprob: -3.251667022705078
    7. '<|end|>' → logprob: -3.251667022705078
    8. 's' → logprob: -3.876667022705078
    9. '    ' → logprob: -4.126667022705078
    10. ' )' → logprob: -4.376667022705078

Token 22: ' ligne' (ID: 19583)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.589728832244873
    2. ' input' → logprob: -0.839728832244873
    3. 's' → logprob: -5.089728832244873
    4. 'ent' → logprob: -6.714728832244873
    5. 'entrée' → logprob: -6.964728832244873
    6. 'chaine' → logprob: -7.089728832244873
    7. ' ligne' → logprob: -7.214728832244873
    8. ' phrase' → logprob: -7.214728832244873
    9. 'str' → logprob: -8.089729309082031
    10. 'liste' → logprob: -8.214729309082031

Token 23: ',' (ID: 11)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.113100528717041
    2. 's' → logprob: -1.613100528717041
    3. ' line' → logprob: -1.613100528717041
    4. ' input' → logprob: -1.738100528717041
    5. 'input' → logprob: -3.488100528717041
    6. ' ' → logprob: -4.238100528717041
    7. ' data' → logprob: -4.363100528717041
    8. ' ligne' → logprob: -4.863100528717041
    9. 'line' → logprob: -5.113100528717041
    10. 'data' → logprob: -5.113100528717041

Token 24: ' pas' (ID: 2173)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.0400431156158447
    2. ' line' → logprob: -1.7900431156158447
    3. ' data' → logprob: -1.7900431156158447
    4. ' tokens' → logprob: -2.2900431156158447
    5. ' ligne' → logprob: -3.1650431156158447
    6. ' a' → logprob: -3.2900431156158447
    7. ' t' → logprob: -3.2900431156158447
    8. ' l' → logprob: -4.165042877197266
    9. 'tokens' → logprob: -4.540042877197266
    10. 'data' → logprob: -4.665042877197266

Token 25: ' super' (ID: 2539)
  Prédit: ' seulement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' seulement' → logprob: -1.1239691972732544
    2. ' juste' → logprob: -2.248969078063965
    3. ' uniquement' → logprob: -2.498969078063965
    4. ' ' → logprob: -2.498969078063965
    5. ' encore' → logprob: -2.623969078063965
    6. 'que' → logprob: -2.998969078063965
    7. 'se' → logprob: -3.123969078063965
    8. ' simplement' → logprob: -3.248969078063965
    9. 'sur' → logprob: -3.748969078063965
    10. ' besoin' → logprob: -3.873969078063965

Token 26: ' clean' (ID: 4687)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.345807284116745
    2. ' s' → logprob: -2.7208073139190674
    3. 'input' → logprob: -2.8458073139190674
    4. '   ' → logprob: -3.8458073139190674
    5. ' line' → logprob: -3.9708073139190674
    6. ' ' → logprob: -4.220807075500488
    7. ' a' → logprob: -4.220807075500488
    8. ' t' → logprob: -4.345807075500488
    9. ' tokens' → logprob: -4.595807075500488
    10. 's' → logprob: -4.720807075500488

Token 27: ' mais' (ID: 2899)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.6830490827560425
    2. ' ' → logprob: -1.1830490827560425
    3. ' ligne' → logprob: -2.933049201965332
    4. 'line' → logprob: -4.058049201965332
    5. ' a' → logprob: -4.058049201965332
    6. ' s' → logprob: -4.183049201965332
    7. ' ,' → logprob: -4.183049201965332
    8. ',' → logprob: -4.808049201965332
    9. 's' → logprob: -4.933049201965332
    10. 'a' → logprob: -4.933049201965332

Token 28: ' bon' (ID: 4846)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.10821186751127243
    2. ' tokens' → logprob: -2.9832117557525635
    3. 'a' → logprob: -4.358211994171143
    4. ' lines' → logprob: -4.858211994171143
    5. ' line' → logprob: -4.983211994171143
    6. ' data' → logprob: -5.108211994171143
    7. ' parts' → logprob: -5.108211994171143
    8. ' values' → logprob: -6.108211994171143
    9. 'tokens' → logprob: -6.608211994171143
    10. ' t' → logprob: -6.733211994171143

Token 29: '...
' (ID: 4908)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.35681965947151184
    2. '   ' → logprob: -2.1068196296691895
    3. 'line' → logprob: -2.6068196296691895
    4. ' s' → logprob: -3.1068196296691895
    5. 's' → logprob: -4.2318196296691895
    6. ' ligne' → logprob: -4.8568196296691895
    7. ' lines' → logprob: -5.2318196296691895
    8. ' data' → logprob: -5.4818196296691895
    9. ' l' → logprob: -5.6068196296691895
    10. 'tokens' → logprob: -5.7318196296691895

Token 30: '   ' (ID: 271)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.1903030425310135
    2. '   ' → logprob: -3.440303087234497
    3. 'line' → logprob: -3.690303087234497
    4. ' a' → logprob: -3.690303087234497
    5. ' s' → logprob: -3.815303087234497
    6. ' ligne' → logprob: -3.815303087234497
    7. ' lines' → logprob: -4.815302848815918
    8. ' l' → logprob: -4.940302848815918
    9. 'a' → logprob: -5.065302848815918
    10. ' input' → logprob: -5.065302848815918

Token 31: ' tmp' (ID: 8919)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.26140156388282776
    2. ' ligne' → logprob: -2.511401653289795
    3. 'line' → logprob: -2.886401653289795
    4. ' l' → logprob: -4.011401653289795
    5. 'ligne' → logprob: -4.386401653289795
    6. 'l' → logprob: -4.511401653289795
    7. ' lines' → logprob: -4.886401653289795
    8. ' s' → logprob: -4.886401653289795
    9. ' data' → logprob: -5.011401653289795
    10. 's' → logprob: -5.136401653289795

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06237286701798439
    2. '=' → logprob: -2.812372922897339
    3. '_' → logprob: -8.312373161315918
    4. 's' → logprob: -9.687373161315918
    5. '_line' → logprob: -10.437373161315918
    6. '_l' → logprob: -11.562373161315918
    7. '=[]' → logprob: -11.562373161315918
    8. ',' → logprob: -11.562373161315918
    9. ')' → logprob: -12.062373161315918
    10. ' ' → logprob: -12.187373161315918

Token 33: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.11324019730091095
    2. ' input' → logprob: -2.2382402420043945
    3. 'list' → logprob: -7.9882402420043945
    4. ' list' → logprob: -9.613240242004395
    5. 'int' → logprob: -11.988240242004395
    6. '[input' → logprob: -13.488240242004395
    7. '=input' → logprob: -13.863240242004395
    8. ' ' → logprob: -14.488240242004395
    9. '(input' → logprob: -14.613240242004395
    10. '<input' → logprob: -14.738240242004395

Token 34: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.31567588448524475
    2. '()' → logprob: -1.3156758546829224
    3. '(' → logprob: -6.065675735473633
    4. '('' → logprob: -10.440675735473633
    5. '("' → logprob: -11.065675735473633
    6. '("("' → logprob: -11.190675735473633
    7. '())' → logprob: -11.315675735473633
    8. ')' → logprob: -12.190675735473633
    9. ' ()' → logprob: -12.565675735473633
    10. '("").' → logprob: -13.690675735473633

Token 35: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.006722233723849058
    2. 'strip' → logprob: -5.006722450256348
    3. 'rstrip' → logprob: -12.381722450256348
    4. ' split' → logprob: -13.381722450256348
    5. 'spl' → logprob: -14.506722450256348
    6. 's' → logprob: -14.756722450256348
    7. 'replace' → logprob: -16.63172149658203
    8. '(split' → logprob: -16.75672149658203
    9. ' strip' → logprob: -17.88172149658203
    10. 'sp' → logprob: -18.00672149658203

Token 36: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3903530240058899
    2. '('' → logprob: -1.6403529644012451
    3. '(' → logprob: -2.140352964401245
    4. '("("' → logprob: -4.515353202819824
    5. '("' → logprob: -7.640353202819824
    6. '())' → logprob: -10.390353202819824
    7. '`()' → logprob: -11.140353202819824
    8. ''' → logprob: -11.265353202819824
    9. '"' → logprob: -11.390353202819824
    10. ' ()' → logprob: -11.515353202819824

Token 37: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.060638666152954
    2. '<|end|>' → logprob: -1.560638666152954
    3. ' ' → logprob: -1.935638666152954
    4. '   ' → logprob: -2.560638666152954
    5. 'a' → logprob: -2.685638666152954
    6. '.append' → logprob: -3.435638666152954
    7. '[' → logprob: -3.560638666152954
    8. '.' → logprob: -3.685638666152954
    9. '\' → logprob: -3.810638666152954
    10. '\n' → logprob: -4.685638427734375

Token 38: ' tmp' (ID: 8919)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.33237767219543457
    2. '<|end|>' → logprob: -1.9573776721954346
    3. ' ' → logprob: -2.5823776721954346
    4. ')' → logprob: -3.0823776721954346
    5. ' )' → logprob: -5.3323774337768555
    6. ' a' → logprob: -5.8323774337768555
    7. '.append' → logprob: -6.0823774337768555
    8. '   ' → logprob: -6.2073774337768555
    9. '[' → logprob: -6.3323774337768555
    10. '.' → logprob: -6.9573774337768555

Token 39: '.append' (ID: 3709)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: '(i' (ID: 3649)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.278204083442688
    2. '(' → logprob: -1.528204083442688
    3. '(len' → logprob: -4.028203964233398
    4. '(tmp' → logprob: -5.153203964233398
    5. '('' → logprob: -6.528203964233398
    6. '(float' → logprob: -8.278203964233398
    7. '((' → logprob: -8.903203964233398
    8. '("' → logprob: -9.403203964233398
    9. '(i' → logprob: -9.778203964233398
    10. '(True' → logprob: -9.903203964233398

Token 41: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.8232690460281447e-05
    2. ' )' → logprob: -10.250048637390137
    3. ')
' → logprob: -12.000048637390137
    4. '))' → logprob: -13.125048637390137
    5. '   ' → logprob: -13.375048637390137
    6. ')`' → logprob: -14.250048637390137
    7. '`)' → logprob: -14.875048637390137
    8. '')' → logprob: -15.125048637390137
    9. ']' → logprob: -15.750048637390137
    10. '),' → logprob: -15.750048637390137

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3563004434108734
    2. 'a' → logprob: -1.2313004732131958
    3. ')' → logprob: -5.356300354003906
    4. '<|end|>' → logprob: -6.731300354003906
    5. ' a' → logprob: -7.106300354003906
    6. ' ' → logprob: -7.356300354003906
    7. '	a' → logprob: -8.981300354003906
    8. '  ' → logprob: -9.231300354003906
    9. '    
' → logprob: -10.231300354003906
    10. '    ' → logprob: -10.481300354003906

Token 43: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.12414594739675522
    2. '   ' → logprob: -2.249145984649658
    3. ')' → logprob: -4.749145984649658
    4. ' a' → logprob: -6.374145984649658
    5. '<|end|>' → logprob: -8.1241455078125
    6. '	a' → logprob: -8.3741455078125
    7. '_a' → logprob: -8.8741455078125
    8. '#a' → logprob: -9.8741455078125
    9. ')a' → logprob: -9.9991455078125
    10. ' ' → logprob: -10.4991455078125

Token 44: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.31342586874961853
    2. '.' → logprob: -1.313425898551941
    3. '.push' → logprob: -9.56342601776123
    4. '.extend' → logprob: -9.56342601776123
    5. ' .' → logprob: -11.81342601776123
    6. '.add' → logprob: -12.93842601776123
    7. '.ap' → logprob: -12.93842601776123
    8. '.app' → logprob: -13.18842601776123
    9. '.Append' → logprob: -13.31342601776123
    10. '.setdefault' → logprob: -13.43842601776123

Token 45: '(tmp' (ID: 22623)
  Prédit: '(tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tmp' → logprob: -0.0010342379100620747
    2. '(' → logprob: -7.001034259796143
    3. '(tuple' → logprob: -9.501033782958984
    4. 'tmp' → logprob: -10.251033782958984
    5. '((' → logprob: -11.751033782958984
    6. '(temp' → logprob: -12.626033782958984
    7. '(t' → logprob: -14.376033782958984
    8. ' (' → logprob: -15.501033782958984
    9. ' tmp' → logprob: -15.626033782958984
    10. '(
' → logprob: -16.001033782958984

Token 46: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. ')
' → logprob: -13.87500286102295
    3. ' )' → logprob: -13.87500286102295
    4. '))' → logprob: -15.37500286102295
    5. '`)' → logprob: -16.625001907348633
    6. '')' → logprob: -16.750001907348633
    7. ')`' → logprob: -17.500001907348633
    8. ')a' → logprob: -17.500001907348633
    9. '）' → logprob: -17.750001907348633
    10. ']' → logprob: -17.875001907348633

Token 47: 'spi' (ID: 86870)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7175710201263428
    2. '
' → logprob: -0.9675710201263428
    3. '.sort' → logprob: -3.8425710201263428
    4. '```' → logprob: -4.092571258544922
    5. 'n' → logprob: -4.217571258544922
    6. '\n' → logprob: -4.467571258544922
    7. ' 
' → logprob: -4.467571258544922
    8. '#' → logprob: -4.467571258544922
    9. 'for' → logprob: -4.842571258544922
    10. 'sorted' → logprob: -5.092571258544922

Token 48: ' =' (ID: 314)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.4582909345626831
    2. 'r' → logprob: -1.833290934562683
    3. 'a' → logprob: -2.4582910537719727
    4. 'v' → logprob: -2.7082910537719727
    5. '=' → logprob: -4.083291053771973
    6. 'n' → logprob: -4.583291053771973
    7. ' =' → logprob: -4.833291053771973
    8. '.append' → logprob: -6.083291053771973
    9. '=a' → logprob: -6.083291053771973
    10. 'nt' → logprob: -6.083291053771973

Token 49: ' []
' (ID: 8911)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.2022194266319275
    2. 'a' → logprob: -2.3272194862365723
    3. '[]' → logprob: -3.4522194862365723
    4. '0' → logprob: -3.5772194862365723
    5. '1' → logprob: -4.702219486236572
    6. 'len' → logprob: -5.452219486236572
    7. 'sum' → logprob: -6.077219486236572
    8. '[' → logprob: -6.202219486236572
    9. ' sorted' → logprob: -6.327219486236572
    10. '[a' → logprob: -6.827219486236572

Token 50: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014807011932134628
    2. 'a' → logprob: -5.139807224273682
    3. '[' → logprob: -6.264807224273682
    4. '=' → logprob: -6.264807224273682
    5. 'n' → logprob: -7.014807224273682
    6. 'i' → logprob: -7.264807224273682
    7. ' for' → logprob: -7.389807224273682
    8. '[]' → logprob: -7.889807224273682
    9. '.' → logprob: -8.389806747436523
    10. '(' → logprob: -8.389806747436523

Token 51: ' x' (ID: 1215)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6045016050338745
    2. 'i' → logprob: -1.1045016050338745
    3. ' x' → logprob: -3.229501724243164
    4. 'x' → logprob: -3.604501724243164
    5. ' j' → logprob: -4.104501724243164
    6. 'j' → logprob: -5.229501724243164
    7. ' e' → logprob: -5.479501724243164
    8. ' elem' → logprob: -6.229501724243164
    9. ' item' → logprob: -6.354501724243164
    10. ' a' → logprob: -6.354501724243164

Token 52: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1609150916337967
    2. 'in' → logprob: -1.9109151363372803
    3. ' ' → logprob: -7.660914897918701
    4. '  ' → logprob: -9.91091537475586
    5. '_' → logprob: -10.41091537475586
    6. 'n' → logprob: -10.53591537475586
    7. 'import' → logprob: -10.66091537475586
    8. '   ' → logprob: -11.16091537475586
    9. '	in' → logprob: -11.28591537475586
    10. 's' → logprob: -11.41091537475586

Token 53: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0712985098361969
    2. ' a' → logprob: -2.821298599243164
    3. 'range' → logprob: -5.071298599243164
    4. ' range' → logprob: -5.821298599243164
    5. ' ' → logprob: -11.321298599243164
    6. '   ' → logprob: -12.321298599243164
    7. '  ' → logprob: -12.321298599243164
    8. ' spi' → logprob: -12.446298599243164
    9. 'sorted' → logprob: -12.571298599243164
    10. 'spi' → logprob: -12.696298599243164

Token 54: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008207073551602662
    2. '[' → logprob: -8.125821113586426
    3. ' :' → logprob: -8.250821113586426
    4. '[:]' → logprob: -8.375821113586426
    5. ':
' → logprob: -11.875821113586426
    6. ',' → logprob: -12.375821113586426
    7. '.' → logprob: -12.625821113586426
    8. ' in' → logprob: -12.625821113586426
    9. '[:' → logprob: -12.625821113586426
    10. '[]' → logprob: -13.375821113586426

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.306545227766037
    2. ' if' → logprob: -1.9315452575683594
    3. ' spi' → logprob: -2.6815452575683594
    4. 'spi' → logprob: -3.4315452575683594
    5. 'if' → logprob: -4.556545257568359
    6. 'sp' → logprob: -6.056545257568359
    7. '	sp' → logprob: -7.306545257568359
    8. '[' → logprob: -7.556545257568359
    9. ' x' → logprob: -7.681545257568359
    10. ' for' → logprob: -7.931545257568359

Token 56: ' #' (ID: 1069)
  Prédit: 'spi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spi' → logprob: -0.38080763816833496
    2. ' if' → logprob: -1.880807638168335
    3. 'if' → logprob: -2.380807638168335
    4. ' spi' → logprob: -3.005807638168335
    5. 'sp' → logprob: -5.130807876586914
    6. '   ' → logprob: -5.130807876586914
    7. 'x' → logprob: -5.130807876586914
    8. ' x' → logprob: -6.755807876586914
    9. '0' → logprob: -8.380807876586914
    10. 'tmp' → logprob: -8.568307876586914

Token 57: ' je' (ID: 1264)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1509376764297485
    2. ' if' → logprob: -1.2759376764297485
    3. 'spi' → logprob: -1.5259376764297485
    4. ' spi' → logprob: -1.9009376764297485
    5. 'x' → logprob: -4.275937557220459
    6. 'for' → logprob: -5.025937557220459
    7. ' x' → logprob: -5.525937557220459
    8. ' for' → logprob: -5.525937557220459
    9. '   ' → logprob: -6.025937557220459
    10. 'tmp' → logprob: -6.775937557220459

Token 58: ' range' (ID: 3352)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0643552541732788
    2. 'for' → logprob: -1.8143552541732788
    3. 'if' → logprob: -2.4393553733825684
    4. ' for' → logprob: -3.0643553733825684
    5. '   ' → logprob: -3.3143553733825684
    6. ' if' → logprob: -3.3143553733825684
    7. '=' → logprob: -3.5643553733825684
    8. 'veux' → logprob: -3.6893553733825684
    9. ' =' → logprob: -3.8143553733825684
    10. 'sp' → logprob: -4.314355373382568

Token 59: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4880144000053406
    2. 'spi' → logprob: -2.3630144596099854
    3. '(x' → logprob: -2.4880144596099854
    4. 'x' → logprob: -2.8630144596099854
    5. ' x' → logprob: -3.3630144596099854
    6. ' =' → logprob: -3.4880144596099854
    7. '(sp' → logprob: -3.6130144596099854
    8. ' (' → logprob: -3.8630144596099854
    9. '=' → logprob: -5.113014221191406
    10. 'sp' → logprob: -5.363014221191406

Token 60: 'nom' (ID: 16206)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6115602254867554
    2. 'x' → logprob: -1.4865602254867554
    3. ')' → logprob: -1.9865602254867554
    4. ' spi' → logprob: -4.111560344696045
    5. 'spi' → logprob: -4.486560344696045
    6. 'a' → logprob: -4.486560344696045
    7. '(x' → logprob: -4.611560344696045
    8. ' len' → logprob: -5.111560344696045
    9. ' )' → logprob: -5.236560344696045
    10. 'len' → logprob: -5.361560344696045

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4712517261505127
    2. ' ,' → logprob: -1.8462517261505127
    3. ')' → logprob: -2.7212517261505127
    4. ' x' → logprob: -3.3462517261505127
    5. ' =' → logprob: -3.3462517261505127
    6. ' )' → logprob: -3.5962517261505127
    7. '[' → logprob: -4.471251487731934
    8. ',x' → logprob: -5.096251487731934
    9. ' de' → logprob: -5.471251487731934
    10. ')x' → logprob: -5.721251487731934

Token 62: ' -' (ID: 533)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -1.6364787817001343
    2. ' age' → logprob: -1.6364787817001343
    3. 'int' → logprob: -2.136478900909424
    4. 'x' → logprob: -2.136478900909424
    5. 'age' → logprob: -2.261478900909424
    6. ' x' → logprob: -2.511478900909424
    7. 'score' → logprob: -4.261478900909424
    8. 'prenom' → logprob: -4.511478900909424
    9. ' score' → logprob: -4.636478900909424
    10. ' spi' → logprob: -4.761478900909424

Token 63: 'note' (ID: 19320)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0011029450688511133
    2. 'float' → logprob: -7.626102924346924
    3. ' int' → logprob: -8.001103401184082
    4. '1' → logprob: -8.626103401184082
    5. 'x' → logprob: -9.626103401184082
    6. 'ord' → logprob: -11.751103401184082
    7. 'len' → logprob: -11.751103401184082
    8. '<int' → logprob: -12.751103401184082
    9. '(int' → logprob: -12.876103401184082
    10. ' ' → logprob: -13.251103401184082

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3236844539642334
    2. '1' → logprob: -1.9486844539642334
    3. ')' → logprob: -2.4486844539642334
    4. '[' → logprob: -3.5736844539642334
    5. 's' → logprob: -4.6986846923828125
    6. ' ,' → logprob: -5.0736846923828125
    7. '2' → logprob: -7.4486846923828125
    8. ' )' → logprob: -7.5736846923828125
    9. '),' → logprob: -7.9486846923828125
    10. ' ' → logprob: -8.073684692382812

Token 65: ' index' (ID: 3472)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6732147932052612
    2. ' int' → logprob: -1.0482147932052612
    3. ' note' → logprob: -3.048214912414551
    4. 'note' → logprob: -4.423214912414551
    5. ' ' → logprob: -4.673214912414551
    6. ' score' → logprob: -4.798214912414551
    7. ' -' → logprob: -4.798214912414551
    8. '-' → logprob: -5.048214912414551
    9. 'score' → logprob: -5.173214912414551
    10. ')' → logprob: -5.673214912414551

Token 66: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006890485528856516
    2. ',' → logprob: -5.131890296936035
    3. '   ' → logprob: -8.006890296936035
    4. ' =' → logprob: -8.756890296936035
    5. ' )' → logprob: -9.381890296936035
    6. '=' → logprob: -9.506890296936035
    7. ')=' → logprob: -9.756890296936035
    8. '[' → logprob: -9.881890296936035
    9. '):' → logprob: -10.131890296936035
    10. 's' → logprob: -10.131890296936035

Token 67: ' un' (ID: 537)
  Prédit: 'spi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spi' → logprob: -0.29785484075546265
    2. ' spi' → logprob: -1.5478549003601074
    3. 'sp' → logprob: -3.9228549003601074
    4. '[' → logprob: -5.172854900360107
    5. ')' → logprob: -5.547854900360107
    6. '   ' → logprob: -5.797854900360107
    7. ' sp' → logprob: -6.422854900360107
    8. ' =' → logprob: -6.797854900360107
    9. ' ' → logprob: -6.797854900360107
    10. 'name' → logprob: -7.547854900360107

Token 68: ' peu' (ID: 9235)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04470919445157051
    2. '=' → logprob: -4.044709205627441
    3. ' =' → logprob: -4.419709205627441
    4. ',' → logprob: -5.794709205627441
    5. ']' → logprob: -6.044709205627441
    6. 'a' → logprob: -6.294709205627441
    7. ' )' → logprob: -6.294709205627441
    8. ' ' → logprob: -6.794709205627441
    9. 's' → logprob: -7.169709205627441
    10. '   ' → logprob: -8.169709205627441

Token 69: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2459560632705688
    2. '<|end|>' → logprob: -1.6209560632705688
    3. ' like' → logprob: -2.3709559440612793
    4. '=' → logprob: -2.8709559440612793
    5. 'like' → logprob: -3.4959559440612793
    6. 'a' → logprob: -3.4959559440612793
    7. 'd' → logprob: -4.120955944061279
    8. 'more' → logprob: -4.370955944061279
    9. 'comme' → logprob: -4.370955944061279
    10. ' more' → logprob: -4.495955944061279

Token 70: ' l' (ID: 305)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.3009412884712219
    2. 'l' → logprob: -1.8009412288665771
    3. 'tri' → logprob: -3.550941228866577
    4. 'la' → logprob: -4.175941467285156
    5. ' tr' → logprob: -4.675941467285156
    6. 'part' → logprob: -4.800941467285156
    7. 'neg' → logprob: -5.425941467285156
    8. 'len' → logprob: -5.925941467285156
    9. '```' → logprob: -6.175941467285156
    10. 'python' → logprob: -6.550941467285156

Token 71: ''arr' (ID: 49695)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7224893569946289
    2. 'la' → logprob: -1.222489356994629
    3. 'l' → logprob: -3.222489356994629
    4. '```' → logprob: -3.347489356994629
    5. 'e' → logprob: -3.972489356994629
    6. 'g' → logprob: -4.472489356994629
    7. 'len' → logprob: -4.847489356994629
    8. '-' → logprob: -4.972489356994629
    9. 'ordre' → logprob: -5.097489356994629
    10. 'd' → logprob: -5.097489356994629

Token 72: 'ache' (ID: 2285)
  Prédit: 'ange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ange' → logprob: -0.42840856313705444
    2. 'ondi' → logprob: -2.303408622741699
    3. 'ond' → logprob: -2.553408622741699
    4. 'ive' → logprob: -3.803408622741699
    5. 'anged' → logprob: -4.428408622741699
    6. 'angé' → logprob: -4.678408622741699
    7. '   ' → logprob: -4.803408622741699
    8. '```' → logprob: -4.990908622741699
    9. 'ang' → logprob: -5.053408622741699
    10. 'on' → logprob: -5.365908622741699

Token 73: '
' (ID: 198)
  Prédit: 'spi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spi' → logprob: -0.6069124937057495
    2. ' =' → logprob: -1.3569124937057495
    3. '   ' → logprob: -3.481912612915039
    4. '<|end|>' → logprob: -3.731912612915039
    5. ' ' → logprob: -4.106912612915039
    6. '[' → logprob: -4.106912612915039
    7. '=' → logprob: -4.106912612915039
    8. '    
' → logprob: -4.481912612915039
    9. ' 
' → logprob: -4.606912612915039
    10. 'sp' → logprob: -4.606912612915039

Token 74: '   ' (ID: 271)
  Prédit: ' spi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' spi' → logprob: -0.567816972732544
    2. 'spi' → logprob: -0.942816972732544
    3. '   ' → logprob: -3.317816972732544
    4. '[' → logprob: -6.442816734313965
    5. ')' → logprob: -6.942816734313965
    6. 'sp' → logprob: -6.942816734313965
    7. 'a' → logprob: -7.192816734313965
    8. ' a' → logprob: -7.692816734313965
    9. '_spi' → logprob: -8.192816734313965
    10. ' 
' → logprob: -8.192816734313965

Token 75: ' spi' (ID: 70297)
  Prédit: 'spi'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spi' (adapté à ' spi') → logprob: -0.19287557899951935
    2. ' spi' → logprob: -2.192875623703003
    3. '   ' → logprob: -2.817875623703003
    4. 'sp' → logprob: -7.067875385284424
    5. 'a' → logprob: -7.192875385284424
    6. 'name' → logprob: -7.942875385284424
    7. '    
' → logprob: -8.192875862121582
    8. '[' → logprob: -8.192875862121582
    9. 'tmp' → logprob: -8.317875862121582
    10. 'x' → logprob: -8.692875862121582

Token 76: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.2521761953830719
    2. '.' → logprob: -1.5021761655807495
    3. ' .' → logprob: -8.627176284790039
    4. '.extend' → logprob: -11.252176284790039
    5. '.ap' → logprob: -11.502176284790039
    6. '.push' → logprob: -11.627176284790039
    7. '.add' → logprob: -11.627176284790039
    8. '.=' → logprob: -12.127176284790039
    9. '=' → logprob: -12.252176284790039
    10. '.app' → logprob: -12.252176284790039

Token 77: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.2894192337989807
    2. '(' → logprob: -1.414419174194336
    3. '(x' → logprob: -5.039419174194336
    4. '([' → logprob: -6.664419174194336
    5. ' (' → logprob: -7.914419174194336
    6. '(
' → logprob: -9.789419174194336
    7. ' ((' → logprob: -10.289419174194336
    8. '(('' → logprob: -11.789419174194336
    9. '(tuple' → logprob: -11.914419174194336
    10. '(

' → logprob: -12.789419174194336

Token 78: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00043710620957426727
    2. ' x' → logprob: -7.750437259674072
    3. ''x' → logprob: -13.375436782836914
    4. 'str' → logprob: -13.500436782836914
    5. '   ' → logprob: -13.750436782836914
    6. '"x' → logprob: -13.750436782836914
    7. ')x' → logprob: -14.500436782836914
    8. '(x' → logprob: -15.500436782836914
    9. '	x' → logprob: -16.250436782836914
    10. ' ' → logprob: -16.250436782836914

Token 79: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000249061529757455
    2. '0' → logprob: -8.625248908996582
    3. ' [' → logprob: -10.250248908996582
    4. '1' → logprob: -11.000248908996582
    5. '[
' → logprob: -11.875248908996582
    6. ')' → logprob: -13.500248908996582
    7. ' ' → logprob: -13.687748908996582
    8. '][' → logprob: -13.750248908996582
    9. '2' → logprob: -14.000248908996582
    10. ')[' → logprob: -14.062748908996582

Token 80: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009898575022816658
    2. '1' → logprob: -4.634898662567139
    3. '2' → logprob: -9.50989818572998
    4. ' ' → logprob: -9.88489818572998
    5. '   ' → logprob: -12.44739818572998
    6. '-' → logprob: -12.63489818572998
    7. '3' → logprob: -13.50989818572998
    8. '  ' → logprob: -13.63489818572998
    9. '[' → logprob: -13.75989818572998
    10. '    ' → logprob: -14.32239818572998

Token 81: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006862253649160266
    2. ' ,' → logprob: -8.250686645507812
    3. '),' → logprob: -8.500686645507812
    4. ',

' → logprob: -10.250686645507812
    5. '   ' → logprob: -10.375686645507812
    6. ')' → logprob: -10.375686645507812
    7. ',
' → logprob: -10.625686645507812
    8. '<|end|>' → logprob: -10.750686645507812
    9. ',)' → logprob: -11.250686645507812
    10. '],' → logprob: -11.500686645507812

Token 82: ' -' (ID: 533)
  Prédit: '-int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-int' → logprob: -0.7297492027282715
    2. ' -' → logprob: -0.9797492027282715
    3. '-' → logprob: -1.9797492027282715
    4. 'int' → logprob: -6.2297492027282715
    5. ' int' → logprob: -6.6047492027282715
    6. '-f' → logprob: -7.7297492027282715
    7. '-n' → logprob: -9.22974967956543
    8. '-s' → logprob: -9.60474967956543
    9. '-max' → logprob: -9.85474967956543
    10. '-m' → logprob: -10.10474967956543

Token 83: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.004637910984456539
    2. 'float' → logprob: -5.379637718200684
    3. ' int' → logprob: -11.504637718200684
    4. 'x' → logprob: -12.379637718200684
    5. '(int' → logprob: -13.379637718200684
    6. '   ' → logprob: -14.629637718200684
    7. '[int' → logprob: -14.754637718200684
    8. ' float' → logprob: -14.879637718200684
    9. '<int' → logprob: -15.754637718200684
    10. '	int' → logprob: -16.504638671875

Token 84: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00408160500228405
    2. '(' → logprob: -5.504081726074219
    3. '(
' → logprob: -13.879081726074219
    4. 'x' → logprob: -14.129081726074219
    5. ' (' → logprob: -14.129081726074219
    6. ')' → logprob: -15.379081726074219
    7. ')(' → logprob: -15.629081726074219
    8. ')x' → logprob: -16.12908172607422
    9. '(

' → logprob: -16.37908172607422
    10. ' x' → logprob: -17.00408172607422

Token 85: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.864272967912257e-05
    2. '1' → logprob: -9.750088691711426
    3. ' [' → logprob: -11.375088691711426
    4. ')' → logprob: -12.250088691711426
    5. ')[' → logprob: -12.250088691711426
    6. '][' → logprob: -13.000088691711426
    7. '```' → logprob: -13.625088691711426
    8. '2' → logprob: -13.750088691711426
    9. ''[' → logprob: -14.375088691711426
    10. '[
' → logprob: -14.500088691711426

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.930552313453518e-05
    2. '2' → logprob: -10.625049591064453
    3. ' ' → logprob: -11.000049591064453
    4. '3' → logprob: -12.875049591064453
    5. '   ' → logprob: -13.125049591064453
    6. '[' → logprob: -13.375049591064453
    7. '])' → logprob: -14.250049591064453
    8. '4' → logprob: -14.625049591064453
    9. '][' → logprob: -15.375049591064453
    10. ']' → logprob: -15.875049591064453

Token 87: ']),' (ID: 19560)
  Prédit: ']),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']),' → logprob: -0.13354156911373138
    2. '])))' → logprob: -2.6335415840148926
    3. '),' → logprob: -4.383541584014893
    4. ')],' → logprob: -4.758541584014893
    5. ')]' → logprob: -4.758541584014893
    6. ')' → logprob: -4.758541584014893
    7. ']))' → logprob: -4.883541584014893
    8. '])' → logprob: -5.508541584014893
    9. ']' → logprob: -6.008541584014893
    10. '])),' → logprob: -8.633541107177734

Token 88: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02975071594119072
    2. ' x' → logprob: -3.5297508239746094
    3. ' ' → logprob: -16.65475082397461
    4. '	x' → logprob: -17.02975082397461
    5. 'int' → logprob: -17.27975082397461
    6. '  ' → logprob: -17.65475082397461
    7. '   ' → logprob: -17.77975082397461
    8. ')x' → logprob: -18.02975082397461
    9. ')' → logprob: -18.77975082397461
    10. '    ' → logprob: -19.15475082397461

Token 89: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000573167169932276
    2. '2' → logprob: -7.50057315826416
    3. '[-' → logprob: -10.87557315826416
    4. '```' → logprob: -14.62557315826416
    5. '-' → logprob: -15.00057315826416
    6. ' ' → logprob: -16.250574111938477
    7. ' [' → logprob: -16.625574111938477
    8. '
' → logprob: -16.625574111938477
    9. '][' → logprob: -16.750574111938477
    10. '[
' → logprob: -16.875574111938477

Token 90: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.60414821645827e-06
    2. '-' → logprob: -12.500004768371582
    3. ' ' → logprob: -14.875004768371582
    4. '```' → logprob: -15.875004768371582
    5. '3' → logprob: -16.000003814697266
    6. '1' → logprob: -16.625003814697266
    7. '   ' → logprob: -16.750003814697266
    8. '  ' → logprob: -17.125003814697266
    9. '۲' → logprob: -18.437503814697266
    10. '``' → logprob: -18.500003814697266

Token 91: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03833223879337311
    2. ')' → logprob: -3.288332223892212
    3. ')))' → logprob: -8.163331985473633
    4. ' ))' → logprob: -13.038331985473633
    5. '))
' → logprob: -13.288331985473633
    6. '),' → logprob: -14.163331985473633
    7. '}))' → logprob: -15.413331985473633
    8. ' )' → logprob: -15.413331985473633
    9. ')
' → logprob: -15.538331985473633
    10. '   ' → logprob: -16.163331985473633

Token 92: 'spi' (ID: 86870)
  Prédit: 'spi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spi' → logprob: -0.11140132695436478
    2. ')' → logprob: -2.361401319503784
    3. 'a' → logprob: -5.486401557922363
    4. ')
' → logprob: -6.111401557922363
    5. '.spi' → logprob: -6.486401557922363
    6. ').' → logprob: -7.611401557922363
    7. '
' → logprob: -7.611401557922363
    8. '```' → logprob: -7.861401557922363
    9. 'sorted' → logprob: -7.986401557922363
    10. 's' → logprob: -8.111401557922363

Token 93: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.5929805040359497
    2. '.' → logprob: -1.4679805040359497
    3. '<|end|>' → logprob: -1.9679805040359497
    4. '[' → logprob: -2.96798038482666
    5. ')' → logprob: -3.96798038482666
    6. '```' → logprob: -6.09298038482666
    7. '<|end|>' → logprob: -7.34298038482666
    8. ']' → logprob: -7.46798038482666
    9. '
' → logprob: -7.46798038482666
    10. '[:]' → logprob: -7.71798038482666

Token 94: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.018186818808317184
    2. '(' → logprob: -4.018187046051025
    3. '();' → logprob: -12.268186569213867
    4. '()`' → logprob: -12.268186569213867
    5. '((' → logprob: -12.393186569213867
    6. '()
' → logprob: -12.518186569213867
    7. '(reverse' → logprob: -12.768186569213867
    8. '()>' → logprob: -12.893186569213867
    9. '(()' → logprob: -13.268186569213867
    10. '`()' → logprob: -13.643186569213867

Token 95: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004213786742184311
    2. 'n' → logprob: -8.625421524047852
    3. 'print' → logprob: -9.250421524047852
    4. 'f' → logprob: -9.875421524047852
    5. ' for' → logprob: -10.500421524047852
    6. '```' → logprob: -11.250421524047852
    7. 'i' → logprob: -11.375421524047852
    8. '#' → logprob: -11.375421524047852
    9. 'a' → logprob: -11.875421524047852
    10. 'r' → logprob: -12.000421524047852

Token 96: ' affich' (ID: 90179)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.756989700486884e-05
    2. 'print' → logprob: -9.87508773803711
    3. 'i' → logprob: -11.12508773803711
    4. 'j' → logprob: -12.75008773803711
    5. 'spi' → logprob: -12.75008773803711
    6. 'n' → logprob: -12.87508773803711
    7. 'result' → logprob: -12.87508773803711
    8. '#' → logprob: -13.12508773803711
    9. 'sorted' → logprob: -13.62508773803711
    10. '```' → logprob: -13.62508773803711

Token 97: 'age' (ID: 477)
  Prédit: 'age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.05675879865884781
    2. 'er' → logprob: -3.4317588806152344
    3. 'for' → logprob: -3.8067588806152344
    4. 'print' → logprob: -7.931758880615234
    5. 'ager' → logprob: -9.806758880615234
    6. 'e' → logprob: -9.806758880615234
    7. 'a' → logprob: -10.181758880615234
    8. '#' → logprob: -10.681758880615234
    9. '()' → logprob: -11.306758880615234
    10. ' for' → logprob: -11.431758880615234

Token 98: ' des' (ID: 731)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.339278580620885e-06
    2. ' for' → logprob: -13.250001907348633
    3. '<|end|>' → logprob: -14.500001907348633
    4. '```' → logprob: -17.000001907348633
    5. 'i' → logprob: -18.500001907348633
    6. 'n' → logprob: -19.625001907348633
    7. '	for' → logprob: -20.125001907348633
    8. '<|end|>' → logprob: -20.250001907348633
    9. '
' → logprob: -20.875001907348633
    10. '.for' → logprob: -21.125001907348633

Token 99: ' indices' (ID: 30378)
  Prédit: 'spi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spi' → logprob: -0.04086977615952492
    2. ' spi' → logprob: -3.79086971282959
    3. 'n' → logprob: -5.04086971282959
    4. 'nom' → logprob: -5.79086971282959
    5. 'result' → logprob: -6.16586971282959
    6. '0' → logprob: -7.54086971282959
    7. 'a' → logprob: -7.54086971282959
    8. 'names' → logprob: -7.91586971282959
    9. ' ' → logprob: -7.91586971282959
    10. ' noms' → logprob: -7.91586971282959

Token 100: ' (+' (ID: 36088)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.958325295476243e-05
    2. '<|end|>' → logprob: -9.625079154968262
    3. ' for' → logprob: -11.250079154968262
    4. '```' → logprob: -15.625079154968262
    5. '<|end|>' → logprob: -15.750079154968262
    6. '
' → logprob: -17.000080108642578
    7. 's' → logprob: -17.625080108642578
    8. '#' → logprob: -17.625080108642578
    9. 'n' → logprob: -17.750080108642578
    10. '.for' → logprob: -18.000080108642578

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007899748161435127
    2. '0' → logprob: -8.500789642333984
    3. ')' → logprob: -8.875789642333984
    4. ' ' → logprob: -9.250789642333984
    5. '2' → logprob: -9.375789642333984
    6. '3' → logprob: -9.625789642333984
    7. '+' → logprob: -10.500789642333984
    8. '[' → logprob: -10.625789642333984
    9. 'n' → logprob: -10.625789642333984
    10. 'a' → logprob: -11.625789642333984

Token 102: ' car' (ID: 1669)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006830069469287992
    2. ',' → logprob: -7.750682830810547
    3. 'for' → logprob: -9.000682830810547
    4. ')
' → logprob: -9.500682830810547
    5. ' )' → logprob: -10.875682830810547
    6. '`)' → logprob: -11.750682830810547
    7. ' for' → logprob: -12.250682830810547
    8. ')`' → logprob: -12.750682830810547
    9. '")' → logprob: -12.875682830810547
    10. 'print' → logprob: -12.875682830810547

Token 103: ' index' (ID: 3472)
  Prédit: ' indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' indices' → logprob: -1.109431505203247
    2. 'indices' → logprob: -1.484431505203247
    3. 'index' → logprob: -2.109431505203247
    4. 'les' → logprob: -2.484431505203247
    5. ' les' → logprob: -2.609431505203247
    6. 'indice' → logprob: -3.234431505203247
    7. ' on' → logprob: -3.859431505203247
    8. ' index' → logprob: -3.984431505203247
    9. 'i' → logprob: -4.109431266784668
    10. 'range' → logprob: -4.359431266784668

Token 104: ' humain' (ID: 100082)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 105: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020680641755461693
    2. 'for' → logprob: -7.627068042755127
    3. ',' → logprob: -7.877068042755127
    4. 's' → logprob: -8.002068519592285
    5. ' )' → logprob: -8.627068519592285
    6. ' for' → logprob: -9.002068519592285
    7. 'n' → logprob: -9.502068519592285
    8. ']' → logprob: -9.627068519592285
    9. '])' → logprob: -9.752068519592285
    10. '#' → logprob: -9.877068519592285

Token 106: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.320199877838604e-07
    2. ' for' → logprob: -15.0
    3. '```' → logprob: -17.375
    4. '<|end|>' → logprob: -17.75
    5. 'print' → logprob: -19.375
    6. 'i' → logprob: -19.625
    7. '	for' → logprob: -20.625
    8. 'For' → logprob: -21.25
    9. 'n' → logprob: -21.625
    10. '>' → logprob: -22.375

Token 107: ' t' (ID: 260)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5325055122375488
    2. 'x' → logprob: -1.1575055122375488
    3. ' i' → logprob: -2.657505512237549
    4. ' x' → logprob: -3.782505512237549
    5. 'e' → logprob: -6.407505512237549
    6. 's' → logprob: -7.407505512237549
    7. 't' → logprob: -7.782505512237549
    8. 'idx' → logprob: -8.40750503540039
    9. ' e' → logprob: -8.53250503540039
    10. 'j' → logprob: -8.65750503540039

Token 108: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02152031660079956
    2. 'in' → logprob: -3.8965203762054443
    3. ' ' → logprob: -7.521520137786865
    4. 'r' → logprob: -9.146520614624023
    5. 'n' → logprob: -9.271520614624023
    6. ' i' → logprob: -9.646520614624023
    7. 'i' → logprob: -10.021520614624023
    8. '_' → logprob: -10.271520614624023
    9. 'e' → logprob: -10.646520614624023
    10. '  ' → logprob: -10.646520614624023

Token 109: ' spi' (ID: 70297)
  Prédit: ' spi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' spi' → logprob: -0.01990298181772232
    2. ' range' → logprob: -4.519903182983398
    3. 'spi' → logprob: -4.769903182983398
    4. 'range' → logprob: -8.144903182983398
    5. '_spi' → logprob: -12.144903182983398
    6. ' sp' → logprob: -12.269903182983398
    7. ' spa' → logprob: -12.394903182983398
    8. '(sp' → logprob: -12.394903182983398
    9. '.spi' → logprob: -12.394903182983398
    10. ' ' → logprob: -12.644903182983398

Token 110: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04066891595721245
    2. ',' → logprob: -3.2906689643859863
    3. '[' → logprob: -6.290668964385986
    4. ' :' → logprob: -8.165668487548828
    5. ' in' → logprob: -8.915668487548828
    6. 'in' → logprob: -9.290668487548828
    7. ':
' → logprob: -9.665668487548828
    8. ')' → logprob: -9.790668487548828
    9. '):' → logprob: -9.790668487548828
    10. ',:' → logprob: -10.915668487548828

Token 111: '   ' (ID: 271)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.4652601182460785
    2. '   ' → logprob: -1.2152601480484009
    3. 'print' → logprob: -2.5902600288391113
    4. '	print' → logprob: -7.965260028839111
    5. '```' → logprob: -10.46526050567627
    6. '<|end|>' → logprob: -12.34026050567627
    7. '    
' → logprob: -12.84026050567627
    8. '
' → logprob: -13.09026050567627
    9. '    ' → logprob: -13.21526050567627
    10. ' ' → logprob: -13.34026050567627

Token 112: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0015095012495294213
    2. ' print' → logprob: -6.501509666442871
    3. '   ' → logprob: -11.876509666442871
    4. '	print' → logprob: -15.876509666442871
    5. '#print' → logprob: -17.751508712768555
    6. '```' → logprob: -18.001508712768555
    7. 'pr' → logprob: -19.876508712768555
    8. 'prin' → logprob: -20.001508712768555
    9. 'for' → logprob: -20.126508712768555
    10. 'prit' → logprob: -20.126508712768555

Token 113: '(int' (ID: 2742)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0024982523173093796
    2. '(' → logprob: -6.002498149871826
    3. 't' → logprob: -11.002498626708984
    4. '((' → logprob: -13.377498626708984
    5. '(f' → logprob: -13.377498626708984
    6. '('' → logprob: -14.002498626708984
    7. '("' → logprob: -14.252498626708984
    8. '(int' → logprob: -14.502498626708984
    9. ' t' → logprob: -14.877498626708984
    10. ' (' → logprob: -15.002498626708984

Token 114: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -6.392202976712724e-06
    2. 't' → logprob: -12.375006675720215
    3. '(' → logprob: -13.125006675720215
    4. ')t' → logprob: -17.8750057220459
    5. '((' → logprob: -18.5000057220459
    6. ')' → logprob: -18.5000057220459
    7. ' t' → logprob: -18.6250057220459
    8. '(x' → logprob: -19.2500057220459
    9. '	t' → logprob: -19.2500057220459
    10. ' (' → logprob: -19.6250057220459

Token 115: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00048358101048506796
    2. '(' → logprob: -8.250483512878418
    3. '2' → logprob: -8.500483512878418
    4. ' [' → logprob: -12.500483512878418
    5. '
' → logprob: -12.500483512878418
    6. '```' → logprob: -12.625483512878418
    7. ')' → logprob: -13.125483512878418
    8. '{' → logprob: -13.625483512878418
    9. '.' → logprob: -14.000483512878418
    10. '[-' → logprob: -14.125483512878418

Token 116: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003918271977454424
    2. ' ' → logprob: -7.875391960144043
    3. '-' → logprob: -13.000391960144043
    4. '
' → logprob: -13.187891960144043
    5. '   ' → logprob: -13.625391960144043
    6. '1' → logprob: -13.687891960144043
    7. '```' → logprob: -13.687891960144043
    8. '  ' → logprob: -14.125391960144043
    9. '[' → logprob: -14.437891960144043
    10. '0' → logprob: -14.687891960144043

Token 117: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4754440486431122
    2. ')+' → logprob: -0.9754440784454346
    3. ']+' → logprob: -6.9754438400268555
    4. ' )' → logprob: -7.9754438400268555
    5. '])+' → logprob: -10.100443840026855
    6. '])' → logprob: -10.600443840026855
    7. ']' → logprob: -11.100443840026855
    8. '）' → logprob: -13.100443840026855
    9. ' ' → logprob: -14.100443840026855
    10. '+' → logprob: -14.225443840026855

Token 118: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08886387944221497
    2. ')+' → logprob: -2.5888638496398926
    3. ' +' → logprob: -5.088863849639893
    4. ')' → logprob: -5.588863849639893
    5. '()+' → logprob: -11.83886432647705
    6. '+)' → logprob: -12.21386432647705
    7. ']+' → logprob: -12.46386432647705
    8. ' )' → logprob: -13.08886432647705
    9. '}+' → logprob: -14.21386432647705
    10. ' plus' → logprob: -14.83886432647705

Token 119: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018150178715586662
    2. ' ' → logprob: -4.018150329589844
    3. '<|end|>' → logprob: -15.643150329589844
    4. ')' → logprob: -17.018150329589844
    5. '   ' → logprob: -17.830650329589844
    6. '```' → logprob: -17.893150329589844
    7. ' ' → logprob: -18.018150329589844
    8. '  ' → logprob: -18.330650329589844
    9. '۱' → logprob: -18.393150329589844
    10. '0' → logprob: -18.455650329589844

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '<|end|>' → logprob: -19.000003814697266
    4. '```' → logprob: -20.375003814697266
    5. '   ' → logprob: -20.625003814697266
    6. ')' → logprob: -20.750003814697266
    7. '  ' → logprob: -22.125003814697266
    8. '۱' → logprob: -22.250003814697266
    9. '+' → logprob: -22.375003814697266
    10. '１' → logprob: -22.375003814697266

Token 121: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -14.500000953674316
    3. '))' → logprob: -15.125000953674316
    4. ')`' → logprob: -15.750000953674316
    5. ')}' → logprob: -17.000001907348633
    6. ')
' → logprob: -17.125001907348633
    7. '())' → logprob: -18.750001907348633
    8. '),' → logprob: -19.000001907348633
    9. ')}}' → logprob: -19.000001907348633
    10. ')#' → logprob: -19.125001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 119
Tokens correctement prédits (1ère position, stricte): 39
Tokens correctement prédits (1ère position, avec adaptation): 42
Tokens correctement prédits (top 10): 73
Précision stricte (1ère position): 32.77%
Précision adaptée (1ère position): 35.29%
Précision (top 10): 61.34%
================================================================================
