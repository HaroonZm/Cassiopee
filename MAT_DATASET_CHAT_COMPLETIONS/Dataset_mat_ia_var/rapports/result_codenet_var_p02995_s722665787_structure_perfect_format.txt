================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:54:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
A, B, C, D = map(int, input().split())

def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

E = C * D // gcd(C, D)

dif = B - A + 1
rc = B // C + (-A // C) + 1
rd = B // D + (-A // D) + 1
re = B // E + (-A // E) + 1
x = dif - rc - rd + re

print(x)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'A' (ID: 32)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' B' (ID: 418)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1461086869239807
    2. '+' → logprob: -2.771108627319336
    3. ')' → logprob: -4.146108627319336
    4. '.' → logprob: -4.396108627319336
    5. '[' → logprob: -4.521108627319336
    6. ',' → logprob: -4.771108627319336
    7. '(' → logprob: -4.896108627319336
    8. ' =' → logprob: -4.896108627319336
    9. ';' → logprob: -5.021108627319336
    10. ':' → logprob: -7.396108627319336

Token 4: ' C' (ID: 363)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8137774467468262
    2. '=' → logprob: -0.8137774467468262
    3. ' =' → logprob: -2.938777446746826
    4. 'C' → logprob: -3.563777446746826
    5. '.' → logprob: -4.313777446746826
    6. ' ' → logprob: -4.563777446746826
    7. ')' → logprob: -5.563777446746826
    8. ' ,' → logprob: -6.813777446746826
    9. ':' → logprob: -6.938777446746826
    10. '<|end|>' → logprob: -7.563777446746826

Token 5: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8881664872169495
    2. 'D' → logprob: -1.1381664276123047
    3. ',' → logprob: -2.5131664276123047
    4. ';' → logprob: -2.8881664276123047
    5. '=' → logprob: -3.1381664276123047
    6. '(' → logprob: -3.3881664276123047
    7. '<|end|>' → logprob: -4.138166427612305
    8. '[' → logprob: -4.388166427612305
    9. '+' → logprob: -5.263166427612305
    10. '.' → logprob: -5.388166427612305

Token 6: ' D' (ID: 415)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7003011703491211
    2. 'D' → logprob: -1.200301170349121
    3. '=' → logprob: -2.075301170349121
    4. ')' → logprob: -3.700301170349121
    5. '<|end|>' → logprob: -4.200301170349121
    6. '.' → logprob: -4.325301170349121
    7. ';' → logprob: -5.075301170349121
    8. ',D' → logprob: -5.325301170349121
    9. ' =' → logprob: -5.575301170349121
    10. '```' → logprob: -6.450301170349121

Token 7: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7337502837181091
    2. ')' → logprob: -1.608750343322754
    3. ';' → logprob: -1.983750343322754
    4. '=' → logprob: -2.733750343322754
    5. '<|end|>' → logprob: -2.733750343322754
    6. '(' → logprob: -3.858750343322754
    7. '.' → logprob: -4.483750343322754
    8. 'E' → logprob: -5.233750343322754
    9. '```' → logprob: -5.733750343322754
    10. '[' → logprob: -5.733750343322754

Token 8: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5526571273803711
    2. '1' → logprob: -1.927657127380371
    3. ' [' → logprob: -2.177657127380371
    4. '0' → logprob: -2.302657127380371
    5. '[' → logprob: -3.552657127380371
    6. '[]' → logprob: -4.927657127380371
    7. ' []' → logprob: -5.052657127380371
    8. '10' → logprob: -5.927657127380371
    9. ' None' → logprob: -6.052657127380371
    10. ' map' → logprob: -6.052657127380371

Token 9: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.265447199344635
    2. '(lambda' → logprob: -1.8904471397399902
    3. '<|end|>' → logprob: -2.6404471397399902
    4. '(int' → logprob: -5.39044713973999
    5. '```' → logprob: -5.89044713973999
    6. ')' → logprob: -7.14044713973999
    7. '<|end|>' → logprob: -7.39044713973999
    8. '()' → logprob: -8.390447616577148
    9. '(user' → logprob: -8.515447616577148
    10. 'user' → logprob: -8.640447616577148

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.059200894087553024
    2. ')' → logprob: -3.3092010021209717
    3. '(' → logprob: -4.184200763702393
    4. '(user' → logprob: -6.059200763702393
    5. 'input' → logprob: -7.059200763702393
    6. '<|end|>' → logprob: -7.559200763702393
    7. ',input' → logprob: -8.55920124053955
    8. ')(' → logprob: -8.80920124053955
    9. ',' → logprob: -8.93420124053955
    10. '(raw' → logprob: -9.05920124053955

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07899961620569229
    2. ' input' → logprob: -2.5789995193481445
    3. '(input' → logprob: -9.203999519348145
    4. ')' → logprob: -12.203999519348145
    5. ',input' → logprob: -13.828999519348145
    6. ' ' → logprob: -13.953999519348145
    7. '=input' → logprob: -14.078999519348145
    8. '	input' → logprob: -14.828999519348145
    9. '```' → logprob: -14.828999519348145
    10. '<input' → logprob: -15.078999519348145

Token 12: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -1.063367486000061
    2. ')' → logprob: -1.188367486000061
    3. '(' → logprob: -1.563367486000061
    4. '()' → logprob: -2.8133673667907715
    5. '<|end|>' → logprob: -4.5633673667907715
    6. '```' → logprob: -4.9383673667907715
    7. '(token' → logprob: -5.0633673667907715
    8. '('' → logprob: -5.1883673667907715
    9. '(()' → logprob: -5.3133673667907715
    10. '`)' → logprob: -5.4383673667907715

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00011653638648567721
    2. 'strip' → logprob: -9.125116348266602
    3. 'rstrip' → logprob: -12.375116348266602
    4. ' split' → logprob: -12.875116348266602
    5. '(split' → logprob: -15.125116348266602
    6. ')' → logprob: -15.250116348266602
    7. 'spl' → logprob: -15.750116348266602
    8. 'startswith' → logprob: -16.3751163482666
    9. 'read' → logprob: -17.1251163482666
    10. '```' → logprob: -17.3751163482666

Token 14: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026366839185357094
    2. '())' → logprob: -4.026366710662842
    3. '))' → logprob: -4.901366710662842
    4. '()' → logprob: -8.2763671875
    5. '`)' → logprob: -8.2763671875
    6. '(' → logprob: -9.0263671875
    7. '()))' → logprob: -10.4013671875
    8. ')`' → logprob: -10.7763671875
    9. '```' → logprob: -11.1513671875
    10. ')))' → logprob: -11.6513671875

Token 15: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1774289757013321
    2. 'i' → logprob: -2.177428960800171
    3. 'x' → logprob: -4.05242919921875
    4. '+' → logprob: -4.67742919921875
    5. '#' → logprob: -5.05242919921875
    6. 'a' → logprob: -5.42742919921875
    7. 'print' → logprob: -6.17742919921875
    8. ' if' → logprob: -6.55242919921875
    9. '*' → logprob: -6.80242919921875
    10. 's' → logprob: -6.80242919921875

Token 16: ' gcd' (ID: 106918)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -1.5570207834243774
    2. ' main' → logprob: -1.9320207834243774
    3. ' func' → logprob: -2.057020664215088
    4. ' calculate' → logprob: -2.432020664215088
    5. ' solution' → logprob: -2.557020664215088
    6. ' my' → logprob: -2.682020664215088
    7. ' space' → logprob: -3.057020664215088
    8. ' function' → logprob: -3.182020664215088
    9. ' ' → logprob: -3.432020664215088
    10. ' add' → logprob: -3.557020664215088

Token 17: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02593643218278885
    2. '(a' → logprob: -3.9009363651275635
    3. '(A' → logprob: -6.525936603546143
    4. '<|end|>' → logprob: -6.900936603546143
    5. '_' → logprob: -7.025936603546143
    6. '<|end|>' → logprob: -7.150936603546143
    7. ')' → logprob: -8.025936126708984
    8. '(x' → logprob: -8.025936126708984
    9. '(n' → logprob: -8.775936126708984
    10. ' (' → logprob: -9.775936126708984

Token 18: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005218160222284496
    2. ' ,' → logprob: -8.375521659851074
    3. ',a' → logprob: -9.000521659851074
    4. ',)' → logprob: -9.375521659851074
    5. ')' → logprob: -9.875521659851074
    6. ',b' → logprob: -11.750521659851074
    7. ',n' → logprob: -11.875521659851074
    8. ',k' → logprob: -12.500521659851074
    9. ',g' → logprob: -13.125521659851074
    10. ',int' → logprob: -13.375521659851074

Token 19: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.038042064756155014
    2. ' b' → logprob: -3.2880420684814453
    3. ' ' → logprob: -14.288042068481445
    4. '	b' → logprob: -18.038042068481445
    5. ')b' → logprob: -18.163042068481445
    6. ',b' → logprob: -19.538042068481445
    7. '  ' → logprob: -19.663042068481445
    8. '>b' → logprob: -19.663042068481445
    9. '```' → logprob: -19.788042068481445
    10. ')' → logprob: -20.163042068481445

Token 20: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03884001821279526
    2. ')' → logprob: -3.2888400554656982
    3. '):
' → logprob: -7.413839817047119
    4. ',' → logprob: -8.913840293884277
    5. ' ):' → logprob: -11.038840293884277
    6. ')>' → logprob: -11.413840293884277
    7. '),' → logprob: -11.663840293884277
    8. '):
' → logprob: -12.163840293884277
    9. ')**' → logprob: -12.788840293884277
    10. ')=' → logprob: -13.038840293884277

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29083120822906494
    2. ' ' → logprob: -1.540831208229065
    3. ' if' → logprob: -4.290831089019775
    4. ' return' → logprob: -4.665831089019775
    5. ':' → logprob: -5.665831089019775
    6. 'if' → logprob: -6.165831089019775
    7. ' :' → logprob: -6.165831089019775
    8. '  ' → logprob: -6.290831089019775
    9. ' 
' → logprob: -6.790831089019775
    10. '    ' → logprob: -7.540831089019775

Token 22: ' while' (ID: 2049)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3559516370296478
    2. 'if' → logprob: -2.1059515476226807
    3. ' while' → logprob: -2.2309515476226807
    4. '   ' → logprob: -2.7309515476226807
    5. 'while' (adapté à ' while') → logprob: -5.60595178604126
    6. ' return' → logprob: -7.48095178604126
    7. ' ' → logprob: -7.98095178604126
    8. ' i' → logprob: -8.105951309204102
    9. 'i' → logprob: -9.355951309204102
    10. '    ' → logprob: -9.480951309204102

Token 23: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.08648670464754105
    2. 'b' → logprob: -2.58648681640625
    3. ' a' → logprob: -5.46148681640625
    4. 'a' → logprob: -5.71148681640625
    5. ' ' → logprob: -11.33648681640625
    6. '	b' → logprob: -15.08648681640625
    7. '_b' → logprob: -15.46148681640625
    8. ' (' → logprob: -15.46148681640625
    9. '(a' → logprob: -15.71148681640625
    10. '(b' → logprob: -15.96148681640625

Token 24: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.129752978682518
    2. ' !=' → logprob: -2.2547528743743896
    3. '>' → logprob: -5.004753112792969
    4. '!=' → logprob: -5.129753112792969
    5. ' >' → logprob: -6.629753112792969
    6. ' and' → logprob: -6.754753112792969
    7. ' :' → logprob: -7.379753112792969
    8. ':
' → logprob: -7.504753112792969
    9. 'and' → logprob: -9.129753112792969
    10. ' ' → logprob: -9.629753112792969

Token 25: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40155354142189026
    2. 'a' → logprob: -1.4015535116195679
    3. ' a' → logprob: -2.6515536308288574
    4. '   ' → logprob: -4.401553630828857
    5. '    ' → logprob: -7.901553630828857
    6. ' return' → logprob: -8.7765531539917
    7. '0' → logprob: -8.9015531539917
    8. ',' → logprob: -9.1515531539917
    9. 'n' → logprob: -9.4015531539917
    10. '	a' → logprob: -9.4015531539917

Token 26: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3869019150733948
    2. 'a' (adapté à ' a') → logprob: -1.13690185546875
    3. '	a' → logprob: -10.88690185546875
    4. '   ' → logprob: -12.38690185546875
    5. '```' → logprob: -12.88690185546875
    6. '       ' → logprob: -13.38690185546875
    7. '    ' → logprob: -13.76190185546875
    8. '>a' → logprob: -13.88690185546875
    9. ',a' → logprob: -15.38690185546875
    10. ' ' → logprob: -15.51190185546875

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016694843769073486
    2. '%' → logprob: -4.641695022583008
    3. '%=' → logprob: -5.266695022583008
    4. '%,' → logprob: -7.266695022583008
    5. ' %=' → logprob: -7.766695022583008
    6. '=' → logprob: -7.891695022583008
    7. '%b' → logprob: -8.641695022583008
    8. ' ,' → logprob: -10.516695022583008
    9. ' %' → logprob: -10.891695022583008
    10. '%i' → logprob: -11.641695022583008

Token 28: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.47410789132118225
    2. ' b' → logprob: -0.9741078615188599
    3. '<|end|>' → logprob: -10.47410774230957
    4. ' ' → logprob: -13.59910774230957
    5. '<|end|>' → logprob: -14.09910774230957
    6. '%b' → logprob: -15.22410774230957
    7. '>b' → logprob: -16.09910774230957
    8. '	b' → logprob: -16.09910774230957
    9. 's' → logprob: -16.97410774230957
    10. ')b' → logprob: -17.59910774230957

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47409942746162415
    2. '=' → logprob: -0.9740993976593018
    3. ',' → logprob: -10.849099159240723
    4. '   ' → logprob: -13.349099159240723
    5. '<|end|>' → logprob: -14.974099159240723
    6. ' ' → logprob: -15.224099159240723
    7. '    ' → logprob: -16.47410011291504
    8. '<|end|>' → logprob: -16.59910011291504
    9. '=
' → logprob: -16.72410011291504
    10. ' ,' → logprob: -16.72410011291504

Token 30: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.12693041563034058
    2. 'b' → logprob: -2.1269304752349854
    3. ' ' → logprob: -13.251930236816406
    4. '	b' → logprob: -15.626930236816406
    5. '(b' → logprob: -16.376930236816406
    6. ' ' → logprob: -16.501930236816406
    7. '>b' → logprob: -16.501930236816406
    8. '```' → logprob: -16.751930236816406
    9. '<|end|>' → logprob: -17.376930236816406
    10. ')b' → logprob: -17.564430236816406

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006301135290414095
    2. ' ,' → logprob: -7.375629901885986
    3. 'a' → logprob: -13.125630378723145
    4. ',a' → logprob: -14.375630378723145
    5. ' ' → logprob: -15.125630378723145
    6. ',
' → logprob: -15.250630378723145
    7. '<|end|>' → logprob: -15.875630378723145
    8. '`,' → logprob: -16.625629425048828
    9. '```' → logprob: -17.125629425048828
    10. ' a' → logprob: -17.250629425048828

Token 32: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20141363143920898
    2. ' a' → logprob: -1.701413631439209
    3. '	a' → logprob: -15.701414108276367
    4. ' ' → logprob: -16.451414108276367
    5. '<|end|>' → logprob: -17.201414108276367
    6. '>a' → logprob: -17.326414108276367
    7. ' ' → logprob: -18.826414108276367
    8. ')a' → logprob: -19.076414108276367
    9. '_a' → logprob: -19.076414108276367
    10. '(a' → logprob: -19.826414108276367

Token 33: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.10021787881851196
    2. ' %' → logprob: -2.350217819213867
    3. '<|end|>' → logprob: -12.475217819213867
    4. '%b' → logprob: -13.350217819213867
    5. '%A' → logprob: -13.600217819213867
    6. '%i' → logprob: -13.975217819213867
    7. ' ' → logprob: -14.350217819213867
    8. ' %=' → logprob: -14.475217819213867
    9. 'a' → logprob: -14.600217819213867
    10. '%c' → logprob: -14.850217819213867

Token 34: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0002613358374219388
    2. ' b' → logprob: -8.250261306762695
    3. '	b' → logprob: -20.000261306762695
    4. ' ' → logprob: -20.125261306762695
    5. ')b' → logprob: -20.500261306762695
    6. '>b' → logprob: -21.375261306762695
    7. '<|end|>' → logprob: -21.500261306762695
    8. '%b' → logprob: -21.875261306762695
    9. '*b' → logprob: -22.000261306762695
    10. '_b' → logprob: -22.125261306762695

Token 35: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 36: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7505050897598267
    2. '   ' → logprob: -1.5005050897598267
    3. '<|end|>' → logprob: -1.8755050897598267
    4. ' return' → logprob: -3.125504970550537
    5. ' ' → logprob: -3.750504970550537
    6. '```' → logprob: -3.875504970550537
    7. '2' → logprob: -5.125504970550537
    8. '  
' → logprob: -5.125504970550537
    9. ':return' → logprob: -5.125504970550537
    10. '0' → logprob: -5.250504970550537

Token 37: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.007198739796876907
    2. ' return' → logprob: -5.257198810577393
    3. '   ' → logprob: -6.257198810577393
    4. ':return' → logprob: -11.007198333740234
    5. 'a' → logprob: -11.382198333740234
    6. '	return' → logprob: -12.257198333740234
    7. '```' → logprob: -12.257198333740234
    8. ' ' → logprob: -12.507198333740234
    9. 'eturn' → logprob: -13.757198333740234
    10. 'def' → logprob: -14.007198333740234

Token 38: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.061967913061380386
    2. ' a' → logprob: -2.8119678497314453
    3. '	a' → logprob: -15.561967849731445
    4. ' ' → logprob: -17.311967849731445
    5. ' ' → logprob: -17.811967849731445
    6. '   ' → logprob: -18.561967849731445
    7. '```' → logprob: -19.436967849731445
    8. '_a' → logprob: -19.561967849731445
    9. 'abs' → logprob: -19.936967849731445
    10. ''a' → logprob: -20.186967849731445

Token 39: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: 'E' (ID: 36)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.089223861694336
    2. 'def' → logprob: -1.339223861694336
    3. 'g' → logprob: -1.714223861694336
    4. 'x' → logprob: -2.464223861694336
    5. 'e' → logprob: -2.714223861694336
    6. 'result' → logprob: -3.214223861694336
    7. 'print' → logprob: -4.589223861694336
    8. 'n' → logprob: -4.964223861694336
    9. '\' → logprob: -6.339223861694336
    10. 'E' → logprob: -6.339223861694336

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01856859214603901
    2. '=' → logprob: -4.018568515777588
    3. ',' → logprob: -8.393568992614746
    4. ' ' → logprob: -9.893568992614746
    5. 'f' → logprob: -10.518568992614746
    6. '_' → logprob: -10.518568992614746
    7. '1' → logprob: -10.643568992614746
    8. 'F' → logprob: -11.018568992614746
    9. 'x' → logprob: -11.018568992614746
    10. 'q' → logprob: -12.893568992614746

Token 42: ' C' (ID: 363)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.23869431018829346
    2. 'A' → logprob: -1.7386943101882935
    3. 'C' → logprob: -4.113694190979004
    4. ' gcd' → logprob: -5.488694190979004
    5. 'B' → logprob: -5.738694190979004
    6. 'max' → logprob: -5.863694190979004
    7. '(g' → logprob: -5.988694190979004
    8. ' A' → logprob: -6.113694190979004
    9. 'D' → logprob: -6.613694190979004
    10. 'min' → logprob: -6.738694190979004

Token 43: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.1129159927368164
    2. '+' → logprob: -1.3629159927368164
    3. ' *' → logprob: -1.4879159927368164
    4. ' +' → logprob: -2.3629159927368164
    5. 'D' → logprob: -3.4879159927368164
    6. '-' → logprob: -4.112915992736816
    7. 'B' → logprob: -4.737915992736816
    8. '+B' → logprob: -4.987915992736816
    9. '*A' → logprob: -5.112915992736816
    10. '+D' → logprob: -5.237915992736816

Token 44: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.10468056797981262
    2. 'B' → logprob: -2.4796805381774902
    3. 'A' → logprob: -4.47968053817749
    4. ' D' → logprob: -5.72968053817749
    5. 'C' → logprob: -7.85468053817749
    6. ' B' → logprob: -7.97968053817749
    7. ' A' → logprob: -9.229681015014648
    8. '100' → logprob: -9.854681015014648
    9. 'E' → logprob: -10.479681015014648
    10. '2' → logprob: -10.729681015014648

Token 45: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.25307372212409973
    2. '//' → logprob: -1.5030736923217773
    3. ' /' → logprob: -7.128073692321777
    4. '/' → logprob: -9.378073692321777
    5. '<|end|>' → logprob: -10.003073692321777
    6. ' ' → logprob: -10.253073692321777
    7. '#' → logprob: -10.878073692321777
    8. '*' → logprob: -11.003073692321777
    9. ' ///' → logprob: -11.128073692321777
    10. '///' → logprob: -11.628073692321777

Token 46: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.5048530030981055e-06
    2. ' gcd' → logprob: -13.500001907348633
    3. '(g' → logprob: -17.000001907348633
    4. '   ' → logprob: -17.125001907348633
    5. 'd' → logprob: -17.500001907348633
    6. '  ' → logprob: -17.875001907348633
    7. '```' → logprob: -18.625001907348633
    8. '	g' → logprob: -18.750001907348633
    9. 'gcc' → logprob: -18.750001907348633
    10. 'e' → logprob: -19.000001907348633

Token 47: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.4791305661201477
    2. '(' → logprob: -0.9791305661201477
    3. '(D' → logprob: -5.479130744934082
    4. '(B' → logprob: -7.229130744934082
    5. '(A' → logprob: -9.729130744934082
    6. '(
' → logprob: -9.854130744934082
    7. '(E' → logprob: -11.729130744934082
    8. '(c' → logprob: -11.854130744934082
    9. '<|end|>' → logprob: -12.854130744934082
    10. '(

' → logprob: -13.229130744934082

Token 48: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008165115490555763
    2. ',D' → logprob: -5.133164882659912
    3. 'D' → logprob: -6.133164882659912
    4. ' ,' → logprob: -9.88316535949707
    5. ',d' → logprob: -12.13316535949707
    6. ' D' → logprob: -12.88316535949707
    7. ' ' → logprob: -13.88316535949707
    8. '*' → logprob: -14.00816535949707
    9. ')' → logprob: -14.50816535949707
    10. '```' → logprob: -14.63316535949707

Token 49: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0013273799559101462
    2. ' D' → logprob: -6.6263275146484375
    3. ' ' → logprob: -14.751327514648438
    4. 'B' → logprob: -14.751327514648438
    5. ')' → logprob: -15.126327514648438
    6. '   ' → logprob: -15.501327514648438
    7. '  ' → logprob: -15.876327514648438
    8. 'A' → logprob: -17.626327514648438
    9. 'd' → logprob: -17.626327514648438
    10. '	D' → logprob: -17.876327514648438

Token 50: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.127333340875339e-06
    2. '))' → logprob: -12.625003814697266
    3. ' )' → logprob: -14.625003814697266
    4. ')))' → logprob: -16.375003814697266
    5. ')`' → logprob: -16.625003814697266
    6. ')
' → logprob: -17.000003814697266
    7. '),' → logprob: -18.000003814697266
    8. '')' → logprob: -18.500003814697266
    9. ')**' → logprob: -18.625003814697266
    10. ')#' → logprob: -19.125003814697266

Token 51: 'dif' (ID: 92027)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5655667185783386
    2. 'max' → logprob: -2.1905667781829834
    3. '(' → logprob: -2.5655667781829834
    4. 'print' → logprob: -2.6905667781829834
    5. 'A' → logprob: -3.1905667781829834
    6. '*' → logprob: -3.3155667781829834
    7. ' if' → logprob: -3.9405667781829834
    8. 'min' → logprob: -4.315566539764404
    9. 'count' → logprob: -4.440566539764404
    10. 'for' → logprob: -4.565566539764404

Token 52: ' =' (ID: 314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3063526153564453
    2. 'ference' → logprob: -1.4313526153564453
    3. 'ferences' → logprob: -4.181352615356445
    4. 'fs' → logprob: -5.681352615356445
    5. 'fer' → logprob: -5.931352615356445
    6. ' =' → logprob: -6.181352615356445
    7. '=' → logprob: -7.806352615356445
    8. '```' → logprob: -8.431352615356445
    9. 'feren' → logprob: -8.931352615356445
    10. '1' → logprob: -9.056352615356445

Token 53: ' B' (ID: 418)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.6578527092933655
    2. 'E' → logprob: -1.2828526496887207
    3. 'B' → logprob: -1.7828526496887207
    4. 'min' → logprob: -4.157852649688721
    5. 'A' → logprob: -4.907852649688721
    6. 'max' → logprob: -5.532852649688721
    7. '(E' → logprob: -5.782852649688721
    8. '(abs' → logprob: -6.032852649688721
    9. '(B' → logprob: -6.532852649688721
    10. ' abs' → logprob: -7.282852649688721

Token 54: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1281661093235016
    2. '-' → logprob: -2.1281661987304688
    3. '-A' → logprob: -6.753166198730469
    4. '-B' → logprob: -10.378166198730469
    5. '+' → logprob: -10.628166198730469
    6. ' +' → logprob: -12.128166198730469
    7. '<|end|>' → logprob: -12.878166198730469
    8. ' ' → logprob: -13.628166198730469
    9. '-E' → logprob: -14.003166198730469
    10. 'A' → logprob: -14.128166198730469

Token 55: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00025108797126449645
    2. ' A' → logprob: -8.375250816345215
    3. '	A' → logprob: -11.500250816345215
    4. ' ' → logprob: -12.750250816345215
    5. 'E' → logprob: -13.000250816345215
    6. 'B' → logprob: -13.250250816345215
    7. 'D' → logprob: -13.625250816345215
    8. '  ' → logprob: -14.000250816345215
    9. '   ' → logprob: -14.500250816345215
    10. 'C' → logprob: -14.875250816345215

Token 56: ' +' (ID: 659)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5957958698272705
    2. ' %' → logprob: -0.8457958698272705
    3. '+' → logprob: -4.470795631408691
    4. '<|end|>' → logprob: -5.220795631408691
    5. ' +' → logprob: -6.595795631408691
    6. '
' → logprob: -8.095795631408691
    7. '%E' → logprob: -8.595795631408691
    8. ' 
' → logprob: -8.595795631408691
    9. '%n' → logprob: -8.845795631408691
    10. '%A' → logprob: -9.345795631408691

Token 57: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017038638470694423
    2. ' ' → logprob: -6.37670373916626
    3. '<|end|>' → logprob: -14.626704216003418
    4. '0' → logprob: -15.001704216003418
    5. '```' → logprob: -15.251704216003418
    6. '  ' → logprob: -15.876704216003418
    7. '2' → logprob: -16.3767032623291
    8. '`' → logprob: -16.3767032623291
    9. ' ' → logprob: -16.8767032623291
    10. '>' → logprob: -17.4392032623291

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.375004768371582
    3. '```' → logprob: -16.625003814697266
    4. '<|end|>' → logprob: -17.000003814697266
    5. '2' → logprob: -18.000003814697266
    6. '0' → logprob: -18.875003814697266
    7. '`' → logprob: -19.000003814697266
    8. '  ' → logprob: -19.375003814697266
    9. '-' → logprob: -19.500003814697266
    10. '>' → logprob: -19.562503814697266

Token 59: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: 'rc' (ID: 2366)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.012489676475525
    2. 'f' → logprob: -2.3874897956848145
    3. 'n' → logprob: -2.3874897956848145
    4. 'div' → logprob: -2.5124897956848145
    5. 'l' → logprob: -2.6374897956848145
    6. 'x' → logprob: -2.7624897956848145
    7. 'cnt' → logprob: -2.8874897956848145
    8. 'print' → logprob: -3.5124897956848145
    9. 'ans' → logprob: -4.0124897956848145
    10. 'result' → logprob: -4.8874897956848145

Token 61: ' =' (ID: 314)
  Prédit: 'ount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ount' → logprob: -1.2453850507736206
    2. 't' → logprob: -1.4953850507736206
    3. '=' → logprob: -1.6203850507736206
    4. ' =' → logprob: -1.9953850507736206
    5. 'nt' → logprob: -2.24538516998291
    6. 'm' → logprob: -3.37038516998291
    7. 'c' → logprob: -4.87038516998291
    8. 'tr' → logprob: -6.99538516998291
    9. 'r' → logprob: -7.49538516998291
    10. 'e' → logprob: -7.62038516998291

Token 62: ' B' (ID: 418)
  Prédit: 'dif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dif' → logprob: -0.636437177658081
    2. ' dif' → logprob: -0.761437177658081
    3. ' (' → logprob: -6.13643741607666
    4. '(d' → logprob: -7.63643741607666
    5. '(' → logprob: -8.13643741607666
    6. ' ' → logprob: -8.26143741607666
    7. 'diff' → logprob: -8.51143741607666
    8. '0' → logprob: -9.26143741607666
    9. 'd' → logprob: -9.38643741607666
    10. '1' → logprob: -9.88643741607666

Token 63: ' //' (ID: 602)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14959801733493805
    2. '-' → logprob: -2.3995981216430664
    3. ' -' → logprob: -3.2745981216430664
    4. ' +' → logprob: -4.774598121643066
    5. '<|end|>' → logprob: -6.524598121643066
    6. '-A' → logprob: -8.899598121643066
    7. '+
' → logprob: -9.899598121643066
    8. ' ' → logprob: -10.149598121643066
    9. ')' → logprob: -10.399598121643066
    10. '#' → logprob: -10.399598121643066

Token 64: ' C' (ID: 363)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.0045096310786902905
    2. ' E' → logprob: -5.754509449005127
    3. 'C' → logprob: -6.629509449005127
    4. 'D' → logprob: -12.254509925842285
    5. ' C' → logprob: -13.004509925842285
    6. '	E' → logprob: -14.942009925842285
    7. ' ' → logprob: -14.942009925842285
    8. ')' → logprob: -15.004509925842285
    9. '<|end|>' → logprob: -15.129509925842285
    10. '`' → logprob: -15.317009925842285

Token 65: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.49314582347869873
    2. '<|end|>' → logprob: -1.2431458234786987
    3. ' ' → logprob: -3.1181459426879883
    4. '*' → logprob: -3.9931459426879883
    5. ' 
' → logprob: -4.868145942687988
    6. '
' → logprob: -5.243145942687988
    7. '<|end|>' → logprob: -5.243145942687988
    8. '#' → logprob: -5.493145942687988
    9. ' rc' → logprob: -5.618145942687988
    10. 'r' → logprob: -5.993145942687988

Token 66: ' (-' (ID: 21382)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4002736210823059
    2. ' B' → logprob: -1.4002735614776611
    3. 'B' → logprob: -3.150273561477661
    4. ' D' → logprob: -3.775273561477661
    5. ' ' → logprob: -4.40027379989624
    6. 'D' → logprob: -6.02527379989624
    7. '<|end|>' → logprob: -7.15027379989624
    8. ' (' → logprob: -7.40027379989624
    9. '(' → logprob: -7.40027379989624
    10. '(B' → logprob: -7.77527379989624

Token 67: 'A' (ID: 32)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -1.132066249847412
    2. 'A' → logprob: -1.632066249847412
    3. '(A' → logprob: -1.757066249847412
    4. '(-(' → logprob: -2.007066249847412
    5. '(' → logprob: -2.382066249847412
    6. '-(' → logprob: -3.632066249847412
    7. '-A' → logprob: -4.007066249847412
    8. '((' → logprob: -4.257066249847412
    9. '-' → logprob: -4.507066249847412
    10. '1' → logprob: -5.132066249847412

Token 68: ' //' (ID: 602)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5387939810752869
    2. ')' → logprob: -1.6637940406799316
    3. '+' → logprob: -2.1637940406799316
    4. '//' → logprob: -2.5387940406799316
    5. ' //' → logprob: -4.038794040679932
    6. ')//' → logprob: -5.288794040679932
    7. ' -' → logprob: -5.538794040679932
    8. ' +' → logprob: -6.913794040679932
    9. '```' → logprob: -6.913794040679932
    10. '1' → logprob: -6.913794040679932

Token 69: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.2627655267715454
    2. 'D' → logprob: -1.5127655267715454
    3. ' C' → logprob: -4.887765407562256
    4. ' D' → logprob: -5.762765407562256
    5. '<|end|>' → logprob: -10.887765884399414
    6. ')' → logprob: -11.387765884399414
    7. '-' → logprob: -11.637765884399414
    8. 'c' → logprob: -11.637765884399414
    9. 'd' → logprob: -11.762765884399414
    10. '	C' → logprob: -12.012765884399414

Token 70: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.049867574125528336
    2. '+' → logprob: -3.549867630004883
    3. ' )' → logprob: -4.674867630004883
    4. ' +' → logprob: -4.799867630004883
    5. '<|end|>' → logprob: -6.924867630004883
    6. ')+' → logprob: -7.174867630004883
    7. '+)' → logprob: -8.049867630004883
    8. ' -' → logprob: -9.299867630004883
    9. '-' → logprob: -10.424867630004883
    10. ')
' → logprob: -10.549867630004883

Token 71: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8423985838890076
    2. '<|end|>' → logprob: -1.0923986434936523
    3. ' +' → logprob: -1.5923986434936523
    4. ' -' → logprob: -4.592398643493652
    5. '-' → logprob: -4.592398643493652
    6. '1' → logprob: -5.967398643493652
    7. ' ' → logprob: -6.342398643493652
    8. '<|end|>' → logprob: -6.467398643493652
    9. ')' → logprob: -6.842398643493652
    10. '+
' → logprob: -7.717398643493652

Token 72: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05178024247288704
    2. ' ' → logprob: -4.0517802238464355
    3. '(' → logprob: -4.1767802238464355
    4. ' (' → logprob: -4.3017802238464355
    5. '(B' → logprob: -6.5517802238464355
    6. '((' → logprob: -6.8017802238464355
    7. '(C' → logprob: -8.551780700683594
    8. ' dif' → logprob: -8.551780700683594
    9. 'dif' → logprob: -8.676780700683594
    10. '<|end|>' → logprob: -8.676780700683594

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03846898674964905
    2. '(' → logprob: -4.538468837738037
    3. ' (' → logprob: -4.788468837738037
    4. ' ' → logprob: -4.913468837738037
    5. '(B' → logprob: -4.913468837738037
    6. '((' → logprob: -6.038468837738037
    7. 'B' → logprob: -7.788468837738037
    8. '(-' → logprob: -7.788468837738037
    9. ' ((' → logprob: -9.038469314575195
    10. '(D' → logprob: -9.038469314575195

Token 74: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: 'rd' (ID: 9290)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2286875993013382
    2. ' ' → logprob: -1.7286876440048218
    3. '+' → logprob: -4.603687763214111
    4. '<|end|>' → logprob: -5.353687763214111
    5. ' -' → logprob: -5.603687763214111
    6. ')' → logprob: -6.103687763214111
    7. '*' → logprob: -6.228687763214111
    8. '%' → logprob: -6.353687763214111
    9. 'r' → logprob: -7.478687763214111
    10. '#' → logprob: -8.228687286376953

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20431333780288696
    2. '=' → logprob: -1.7043132781982422
    3. ' ' → logprob: -5.954313278198242
    4. ' //' → logprob: -8.829313278198242
    5. '   ' → logprob: -10.579313278198242
    6. '  ' → logprob: -10.704313278198242
    7. '//' → logprob: -10.829313278198242
    8. '[' → logprob: -11.204313278198242
    9. ' ' → logprob: -11.204313278198242
    10. '_' → logprob: -11.579313278198242

Token 77: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.6936485171318054
    2. ' B' → logprob: -0.6936485171318054
    3. '(B' → logprob: -8.443648338317871
    4. ' (' → logprob: -8.693648338317871
    5. ' ' → logprob: -9.568648338317871
    6. '   ' → logprob: -11.318648338317871
    7. 'D' → logprob: -11.693648338317871
    8. '	B' → logprob: -11.818648338317871
    9. '(' → logprob: -12.193648338317871
    10. '  ' → logprob: -12.318648338317871

Token 78: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.22553211450576782
    2. ' //' → logprob: -1.600532054901123
    3. '#' → logprob: -10.100532531738281
    4. '/' → logprob: -10.850532531738281
    5. '<|end|>' → logprob: -10.850532531738281
    6. ' ' → logprob: -11.225532531738281
    7. '```' → logprob: -11.350532531738281
    8. ' #' → logprob: -12.850532531738281
    9. ' ' → logprob: -12.850532531738281
    10. '`' → logprob: -13.100532531738281

Token 79: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0017043406842276454
    2. ' D' → logprob: -6.376704216003418
    3. 'd' → logprob: -14.126704216003418
    4. '<|end|>' → logprob: -14.251704216003418
    5. '`' → logprob: -15.501704216003418
    6. ' ' → logprob: -15.626704216003418
    7. '	D' → logprob: -16.126705169677734
    8. '>D' → logprob: -16.501705169677734
    9. '```' → logprob: -16.501705169677734
    10. '   ' → logprob: -17.126705169677734

Token 80: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.564692497253418
    2. ' +' → logprob: -1.064692497253418
    3. '+' → logprob: -3.064692497253418
    4. '-' → logprob: -3.314692497253418
    5. '<|end|>' → logprob: -6.189692497253418
    6. ' ' → logprob: -6.564692497253418
    7. ')' → logprob: -10.314692497253418
    8. '```' → logprob: -10.564692497253418
    9. ' +
' → logprob: -11.314692497253418
    10. ',' → logprob: -11.439692497253418

Token 81: ' (-' (ID: 21382)
  Prédit: ' (-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (-' → logprob: -0.5277870893478394
    2. '(-' → logprob: -0.9027870893478394
    3. '(' → logprob: -6.152787208557129
    4. ' (' → logprob: -6.277787208557129
    5. ' ' → logprob: -8.402787208557129
    6. ' ((' → logprob: -8.777787208557129
    7. ' -' → logprob: -9.402787208557129
    8. '((-' → logprob: -9.527787208557129
    9. '1' → logprob: -10.277787208557129
    10. '(-(' → logprob: -10.777787208557129

Token 82: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00010950337309623137
    2. ' A' → logprob: -9.125109672546387
    3. '<|end|>' → logprob: -14.750109672546387
    4. '	A' → logprob: -16.37510871887207
    5. 'B' → logprob: -17.12510871887207
    6. '(A' → logprob: -17.37510871887207
    7. '_A' → logprob: -17.37510871887207
    8. '(' → logprob: -17.75010871887207
    9. '   ' → logprob: -17.87510871887207
    10. ' ' → logprob: -17.87510871887207

Token 83: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.5763666033744812
    2. '//' → logprob: -0.8263666033744812
    3. ' ' → logprob: -8.826366424560547
    4. '#' → logprob: -9.076366424560547
    5. ' ' → logprob: -9.701366424560547
    6. '```' → logprob: -10.451366424560547
    7. ' #' → logprob: -10.826366424560547
    8. ')' → logprob: -11.076366424560547
    9. '<|end|>' → logprob: -11.201366424560547
    10. '`' → logprob: -12.326366424560547

Token 84: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0024806505534797907
    2. ' D' → logprob: -6.002480506896973
    3. '<|end|>' → logprob: -13.127480506896973
    4. 'd' → logprob: -14.002480506896973
    5. '	D' → logprob: -14.252480506896973
    6. '>D' → logprob: -14.252480506896973
    7. '<D' → logprob: -15.252480506896973
    8. ' ' → logprob: -15.627480506896973
    9. ')' → logprob: -16.37748146057129
    10. '   ' → logprob: -16.75248146057129

Token 85: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0030029003974050283
    2. ')+' → logprob: -5.878003120422363
    3. '+' → logprob: -9.128003120422363
    4. ' )' → logprob: -9.503003120422363
    5. '   ' → logprob: -12.503003120422363
    6. ' +' → logprob: -13.003003120422363
    7. '```' → logprob: -13.003003120422363
    8. '+)' → logprob: -13.253003120422363
    9. '`)' → logprob: -13.503003120422363
    10. '）' → logprob: -14.753003120422363

Token 86: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6348478198051453
    2. '+' → logprob: -0.7598478198051453
    3. '1' → logprob: -6.634847640991211
    4. ' ' → logprob: -8.259847640991211
    5. ' +
' → logprob: -8.884847640991211
    6. '<|end|>' → logprob: -8.884847640991211
    7. '+
' → logprob: -9.509847640991211
    8. '0' → logprob: -9.509847640991211
    9. '   ' → logprob: -9.759847640991211
    10. ')' → logprob: -9.884847640991211

Token 87: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.623244553338736e-05
    2. ' ' → logprob: -9.625065803527832
    3. '0' → logprob: -16.37506675720215
    4. '(' → logprob: -16.62506675720215
    5. '(-' → logprob: -17.37506675720215
    6. '+' → logprob: -17.37506675720215
    7. '-' → logprob: -18.12506675720215
    8. '   ' → logprob: -19.25006675720215
    9. '  ' → logprob: -19.87506675720215
    10. '```' → logprob: -19.87506675720215

Token 88: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. '0' → logprob: -13.500001907348633
    3. ' ' → logprob: -14.875001907348633
    4. '(' → logprob: -16.250001907348633
    5. '-' → logprob: -17.375001907348633
    6. '(-' → logprob: -17.750001907348633
    7. '2' → logprob: -18.125001907348633
    8. '+' → logprob: -19.375001907348633
    9. '```' → logprob: -20.625001907348633
    10. '１' → logprob: -21.500001907348633

Token 89: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0018541504396125674
    2. ' +' → logprob: -7.251853942871094
    3. ' ' → logprob: -8.126853942871094
    4. '+
' → logprob: -8.126853942871094
    5. '+r' → logprob: -8.626853942871094
    6. '-' → logprob: -9.126853942871094
    7. '+-' → logprob: -9.251853942871094
    8. 'r' → logprob: -10.251853942871094
    9. '(' → logprob: -10.376853942871094
    10. '[' → logprob: -11.501853942871094

Token 90: 're' (ID: 264)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.04346909373998642
    2. 'rc' → logprob: -3.668469190597534
    3. 're' → logprob: -5.168468952178955
    4. 'res' → logprob: -5.918468952178955
    5. '+' → logprob: -6.418468952178955
    6. 'rs' → logprob: -7.043468952178955
    7. 'ro' → logprob: -7.418468952178955
    8. 'and' → logprob: -7.918468952178955
    9. 'rf' → logprob: -7.918468952178955
    10. 'rcode' → logprob: -7.918468952178955

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.751072347164154
    2. 'm' → logprob: -1.3760724067687988
    3. '=' → logprob: -1.8760724067687988
    4. 's' → logprob: -2.876072406768799
    5. 'c' → logprob: -3.251072406768799
    6. 'turn' → logprob: -4.876072406768799
    7. 't' → logprob: -4.876072406768799
    8. 'f' → logprob: -5.376072406768799
    9. 'r' → logprob: -6.126072406768799
    10. '```' → logprob: -6.251072406768799

Token 92: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.28774577379226685
    2. 'B' → logprob: -1.412745714187622
    3. '(B' → logprob: -5.912745952606201
    4. ' (' → logprob: -6.537745952606201
    5. 'dif' → logprob: -6.662745952606201
    6. ' dif' → logprob: -6.912745952606201
    7. 'diff' → logprob: -10.287745475769043
    8. ' ' → logprob: -10.287745475769043
    9. '(' → logprob: -10.412745475769043
    10. '	B' → logprob: -11.787745475769043

Token 93: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.043043382465839386
    2. ' //' → logprob: -3.168043375015259
    3. '```' → logprob: -10.91804313659668
    4. '<|end|>' → logprob: -10.91804313659668
    5. '//=' → logprob: -13.41804313659668
    6. '#' → logprob: -13.41804313659668
    7. '`' → logprob: -13.66804313659668
    8. ' ' → logprob: -13.91804313659668
    9. ' ' → logprob: -14.29304313659668
    10. '...' → logprob: -14.54304313659668

Token 94: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -1.9361264946837764e-07
    2. ' E' → logprob: -16.375
    3. '(E' → logprob: -17.75
    4. '(' → logprob: -18.25
    5. '	E' → logprob: -20.75
    6. '<|end|>' → logprob: -20.75
    7. '  ' → logprob: -21.625
    8. '[E' → logprob: -21.625
    9. 'Е' → logprob: -21.875
    10. '<E' → logprob: -22.0

Token 95: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2817021906375885
    2. '+' → logprob: -1.4067021608352661
    3. ' -' → logprob: -7.656702041625977
    4. '-' → logprob: -9.531702041625977
    5. ' +
' → logprob: -13.781702041625977
    6. '+-' → logprob: -13.906702041625977
    7. ' ' → logprob: -14.031702041625977
    8. ' ' → logprob: -14.031702041625977
    9. '＋' → logprob: -14.781702041625977
    10. '```' → logprob: -14.781702041625977

Token 96: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.006613295525312424
    2. ' (-' → logprob: -5.131613254547119
    3. '(' → logprob: -7.881613254547119
    4. '(-(' → logprob: -8.256613731384277
    5. ' (' → logprob: -10.881613731384277
    6. '((-' → logprob: -11.631613731384277
    7. '-(' → logprob: -11.881613731384277
    8. '(A' → logprob: -12.506613731384277
    9. ' ' → logprob: -13.006613731384277
    10. '-A' → logprob: -13.256613731384277

Token 97: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -5.955703818472102e-05
    2. ' A' → logprob: -9.750059127807617
    3. '(A' → logprob: -15.000059127807617
    4. '<|end|>' → logprob: -15.500059127807617
    5. '(' → logprob: -15.875059127807617
    6. '	A' → logprob: -16.000059127807617
    7. 'B' → logprob: -16.000059127807617
    8. '-A' → logprob: -16.375059127807617
    9. '_A' → logprob: -16.500059127807617
    10. ' (' → logprob: -16.750059127807617

Token 98: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.3143511712551117
    2. ' //' → logprob: -1.314351201057434
    3. '#' → logprob: -7.6893510818481445
    4. '<|end|>' → logprob: -8.064351081848145
    5. '```' → logprob: -9.064351081848145
    6. ' #' → logprob: -9.814351081848145
    7. ' ' → logprob: -9.939351081848145
    8. ' ' → logprob: -10.314351081848145
    9. ')' → logprob: -10.814351081848145
    10. '<|end|>' → logprob: -11.939351081848145

Token 99: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.04859020933508873
    2. ' E' → logprob: -3.0485901832580566
    3. ' ' → logprob: -14.423590660095215
    4. ')' → logprob: -14.423590660095215
    5. '	E' → logprob: -15.048590660095215
    6. 'e' → logprob: -15.173590660095215
    7. '<|end|>' → logprob: -15.173590660095215
    8. ' ' → logprob: -15.548590660095215
    9. '>E' → logprob: -15.923590660095215
    10. '   ' → logprob: -16.1735897064209

Token 100: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001479625003412366
    2. ')+' → logprob: -6.876479625701904
    3. '+' → logprob: -8.126479148864746
    4. ' +' → logprob: -9.126479148864746
    5. ' )' → logprob: -10.126479148864746
    6. '   ' → logprob: -14.626479148864746
    7. '```' → logprob: -14.626479148864746
    8. '+)' → logprob: -14.751479148864746
    9. '）' → logprob: -15.626479148864746
    10. '-' → logprob: -15.626479148864746

Token 101: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22551433742046356
    2. ' +' → logprob: -1.60051429271698
    3. '1' → logprob: -10.10051441192627
    4. '0' → logprob: -11.10051441192627
    5. '+
' → logprob: -11.10051441192627
    6. ' +
' → logprob: -11.72551441192627
    7. ' ' → logprob: -11.72551441192627
    8. '<|end|>' → logprob: -12.72551441192627
    9. ')' → logprob: -13.10051441192627
    10. '```' → logprob: -13.85051441192627

Token 102: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00022940391500014812
    2. ' ' → logprob: -8.500229835510254
    3. '(' → logprob: -11.000229835510254
    4. '(-' → logprob: -11.750229835510254
    5. '-' → logprob: -14.125229835510254
    6. '0' → logprob: -14.625229835510254
    7. ' (' → logprob: -17.000228881835938
    8. ' -' → logprob: -17.000228881835938
    9. ' (-' → logprob: -17.500228881835938
    10. '```' → logprob: -17.750228881835938

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -13.000003814697266
    3. 'E' → logprob: -13.875003814697266
    4. '(' → logprob: -15.000003814697266
    5. '0' → logprob: -15.250003814697266
    6. 'e' → logprob: -15.500003814697266
    7. '-' → logprob: -17.125003814697266
    8. '(-' → logprob: -18.500003814697266
    9. '2' → logprob: -18.875003814697266
    10. '```' → logprob: -19.000003814697266

Token 104: '
' (ID: 198)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.702401340007782
    2. '+' → logprob: -0.827401340007782
    3. ' ' → logprob: -3.4524013996124268
    4. ')' → logprob: -4.077401161193848
    5. '(' → logprob: -4.952401161193848
    6. '[' → logprob: -5.577401161193848
    7. '<|end|>' → logprob: -6.577401161193848
    8. '#' → logprob: -6.827401161193848
    9. 'r' → logprob: -6.952401161193848
    10. ' -' → logprob: -7.077401161193848

Token 105: 'x' (ID: 87)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1157634258270264
    2. '-' → logprob: -1.2407634258270264
    3. '(' → logprob: -1.9907634258270264
    4. '+' → logprob: -2.1157634258270264
    5. ')' → logprob: -3.2407634258270264
    6. 'result' → logprob: -3.2407634258270264
    7. 'r' → logprob: -4.4907636642456055
    8. 'rc' → logprob: -4.7407636642456055
    9. 'count' → logprob: -5.4907636642456055
    10. '#' → logprob: -5.8657636642456055

Token 106: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.578278660774231
    2. ' =' → logprob: -0.828278660774231
    3. ' ' → logprob: -6.828278541564941
    4. '-' → logprob: -7.828278541564941
    5. '_' → logprob: -8.328278541564941
    6. ',' → logprob: -8.953278541564941
    7. '`' → logprob: -9.953278541564941
    8. ' -=' → logprob: -10.078278541564941
    9. ' -' → logprob: -10.328278541564941
    10. '.' → logprob: -10.328278541564941

Token 107: ' dif' (ID: 1501)
  Prédit: 'dif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dif' → logprob: -0.20009906589984894
    2. ' dif' → logprob: -1.8250991106033325
    3. ' rc' → logprob: -5.200098991394043
    4. 'B' → logprob: -5.200098991394043
    5. ' B' → logprob: -5.450098991394043
    6. 'rc' → logprob: -6.075098991394043
    7. 'd' → logprob: -7.950098991394043
    8. ' ' → logprob: -7.950098991394043
    9. 'diff' → logprob: -7.950098991394043
    10. 'A' → logprob: -8.075098991394043

Token 108: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.09232381731271744
    2. '-' → logprob: -2.4673237800598145
    3. ' ' → logprob: -5.9673237800598145
    4. '+' → logprob: -7.9673237800598145
    5. '<|end|>' → logprob: -7.9673237800598145
    6. ' +' → logprob: -9.717324256896973
    7. '*' → logprob: -11.467324256896973
    8. ' -
' → logprob: -11.592324256896973
    9. ' ' → logprob: -12.092324256896973
    10. '<|end|>' → logprob: -12.092324256896973

Token 109: ' rc' (ID: 23309)
  Prédit: 'rc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -0.4572654664516449
    2. ' rc' → logprob: -1.0822654962539673
    3. '(rc' → logprob: -3.7072653770446777
    4. ' (' → logprob: -5.832265377044678
    5. '(' → logprob: -7.457265377044678
    6. 'rd' → logprob: -10.207265853881836
    7. ' ' → logprob: -11.207265853881836
    8. '	rc' → logprob: -11.207265853881836
    9. '(r' → logprob: -11.582265853881836
    10. ' rd' → logprob: -12.457265853881836

Token 110: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3134445250034332
    2. ' -' → logprob: -1.3134444952011108
    3. '<|end|>' → logprob: -8.938444137573242
    4. ' ' → logprob: -10.188444137573242
    5. '+' → logprob: -12.313444137573242
    6. '<|end|>' → logprob: -13.688444137573242
    7. '-x' → logprob: -13.813444137573242
    8. '-r' → logprob: -13.813444137573242
    9. '-re' → logprob: -14.188444137573242
    10. ' ' → logprob: -14.313444137573242

Token 111: ' rd' (ID: 41364)
  Prédit: 'rd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rd' → logprob: -0.0028060602489858866
    2. ' rd' → logprob: -5.877806186676025
    3. '(rd' → logprob: -13.877805709838867
    4. '_rd' → logprob: -15.877805709838867
    5. ' ' → logprob: -16.127805709838867
    6. '.rd' → logprob: -17.252805709838867
    7. 'nd' → logprob: -17.502805709838867
    8. '   ' → logprob: -18.377805709838867
    9. '  ' → logprob: -18.752805709838867
    10. 'Rd' → logprob: -19.252805709838867

Token 112: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.40799909830093384
    2. '-' → logprob: -2.032999038696289
    3. '+' → logprob: -2.282999038696289
    4. ' +' → logprob: -2.532999038696289
    5. '<|end|>' → logprob: -3.907999038696289
    6. ' ' → logprob: -6.032999038696289
    7. ' ' → logprob: -9.282999038696289
    8. ')' → logprob: -10.407999038696289
    9. '<|end|>' → logprob: -10.657999038696289
    10. ' x' → logprob: -11.282999038696289

Token 113: ' re' (ID: 322)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.008614926598966122
    2. ' re' → logprob: -4.758615016937256
    3. '	re' → logprob: -15.508614540100098
    4. ' ' → logprob: -16.633615493774414
    5. 'rew' → logprob: -16.758615493774414
    6. '(re' → logprob: -17.758615493774414
    7. 'ree' → logprob: -18.883615493774414
    8. 'red' → logprob: -19.008615493774414
    9. ' rere' → logprob: -19.133615493774414
    10. '   ' → logprob: -19.133615493774414

Token 114: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1117299422621727
    2. '<|end|>' → logprob: -2.361729860305786
    3. ')' → logprob: -5.861730098724365
    4. ' ' → logprob: -6.236730098724365
    5. ' print' → logprob: -6.486730098724365
    6. '
' → logprob: -6.736730098724365
    7. 'x' → logprob: -6.986730098724365
    8. '%' → logprob: -7.486730098724365
    9. '+' → logprob: -7.736730098724365
    10. '#' → logprob: -7.736730098724365

Token 115: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0025052670389413834
    2. ')' → logprob: -7.127505302429199
    3. ' print' → logprob: -7.502505302429199
    4. '
' → logprob: -8.0025053024292
    5. 'x' → logprob: -8.6275053024292
    6. '+' → logprob: -9.2525053024292
    7. '<|end|>' → logprob: -9.2525053024292
    8. '(' → logprob: -9.5025053024292
    9. '#' → logprob: -9.6275053024292
    10. 'p' → logprob: -9.7525053024292

Token 116: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5759544372558594
    2. '(x' → logprob: -0.8259544372558594
    3. '('' → logprob: -12.45095443725586
    4. '("("' → logprob: -12.70095443725586
    5. '(f' → logprob: -13.07595443725586
    6. '((' → logprob: -13.32595443725586
    7. '(
' → logprob: -13.32595443725586
    8. 'x' → logprob: -13.57595443725586
    9. ' (' → logprob: -14.82595443725586
    10. '(xs' → logprob: -15.57595443725586

Token 117: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -14.000000953674316
    3. ')`' → logprob: -16.500001907348633
    4. '))' → logprob: -17.000001907348633
    5. ')
' → logprob: -17.250001907348633
    6. '`)' → logprob: -19.500001907348633
    7. '+' → logprob: -19.750001907348633
    8. '）' → logprob: -19.875001907348633
    9. ')**' → logprob: -20.000001907348633
    10. ')}' → logprob: -20.750001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 115
Tokens correctement prédits (1ère position, stricte): 34
Tokens correctement prédits (1ère position, avec adaptation): 35
Tokens correctement prédits (top 10): 90
Précision stricte (1ère position): 29.57%
Précision adaptée (1ère position): 30.43%
Précision (top 10): 78.26%
================================================================================
