================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:34:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import functools,operator

res = ["win","bust"][(lambda x: x>=22)(functools.reduce(operator.add,map(int,input().split())))]
print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: 'operator' (ID: 15184)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.702827513217926
    2. 'operator' → logprob: -0.702827513217926
    3. ' os' → logprob: -5.577827453613281
    4. 'os' → logprob: -5.952827453613281
    5. ' itertools' → logprob: -6.202827453613281
    6. ' sys' → logprob: -8.327827453613281
    7. ' math' → logprob: -8.577827453613281
    8. 'it' → logprob: -8.702827453613281
    9. 'io' → logprob: -8.827827453613281
    10. ' threading' → logprob: -9.202827453613281

Token 4: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.010297696106135845
    2. ',' → logprob: -4.635297775268555
    3. ' as' → logprob: -8.260297775268555
    4. ';' → logprob: -10.010297775268555
    5. '<|end|>' → logprob: -10.260297775268555
    6. '\' → logprob: -10.760297775268555
    7. 'as' → logprob: -10.760297775268555
    8. 'import' → logprob: -10.760297775268555
    9. '```' → logprob: -10.760297775268555
    10. ' .' → logprob: -11.385297775268555

Token 5: 'res' (ID: 430)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0004230475169606507
    2. ',' → logprob: -8.125423431396484
    3. '\' → logprob: -10.250423431396484
    4. '<|end|>' → logprob: -11.250423431396484
    5. '.
' → logprob: -11.375423431396484
    6. '.py' → logprob: -12.375423431396484
    7. '\.' → logprob: -12.500423431396484
    8. ';' → logprob: -12.500423431396484
    9. '```' → logprob: -12.500423431396484
    10. '(' → logprob: -12.750423431396484

Token 6: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.197831928730011
    2. 'u' → logprob: -2.947831869125366
    3. '=' → logprob: -3.072831869125366
    4. 'ult' → logprob: -3.572831869125366
    5. 't' → logprob: -3.697831869125366
    6. 'ults' → logprob: -4.447832107543945
    7. 'ul' → logprob: -4.447832107543945
    8. '[' → logprob: -6.072832107543945
    9. ' =' → logprob: -6.697832107543945
    10. '.=' → logprob: -8.822832107543945

Token 7: ' ["' (ID: 9129)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.014452111907303333
    2. 'fun' → logprob: -4.26445198059082
    3. ' fun' → logprob: -8.26445198059082
    4. ' map' → logprob: -11.38945198059082
    5. ' operator' → logprob: -11.51445198059082
    6. 'operator' → logprob: -12.26445198059082
    7. ' itertools' → logprob: -13.63945198059082
    8. 'map' → logprob: -14.26445198059082
    9. ' []' → logprob: -14.26445198059082
    10. ' f' → logprob: -14.51445198059082

Token 8: 'win' (ID: 11668)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.8485837578773499
    2. 'f' → logprob: -2.473583698272705
    3. 'fun' → logprob: -2.598583698272705
    4. '("' → logprob: -2.848583698272705
    5. '+' → logprob: -3.348583698272705
    6. '(","' → logprob: -3.348583698272705
    7. 'sorted' → logprob: -3.473583698272705
    8. '1' → logprob: -3.598583698272705
    9. ')' → logprob: -3.723583698272705
    10. '+"]' → logprob: -3.848583698272705

Token 9: '","' (ID: 4294)
  Prédit: 'dow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dow' → logprob: -0.39085450768470764
    2. '"]' → logprob: -1.3908544778823853
    3. 'd' → logprob: -3.515854597091675
    4. '32' → logprob: -3.890854597091675
    5. 'ning' → logprob: -5.515854358673096
    6. 'ner' → logprob: -5.640854358673096
    7. 's' → logprob: -5.765854358673096
    8. '']' → logprob: -6.015854358673096
    9. '"' → logprob: -6.390854358673096
    10. ']' → logprob: -6.515854358673096

Token 10: 'b' (ID: 65)
  Prédit: 'lose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lose' → logprob: -0.0977906659245491
    2. 'loss' → logprob: -2.7227907180786133
    3. 'win' → logprob: -4.472790718078613
    4. 'draw' → logprob: -4.972790718078613
    5. ' lose' → logprob: -6.097790718078613
    6. 'fail' → logprob: -6.347790718078613
    7. ' loss' → logprob: -6.972790718078613
    8. '"' → logprob: -7.222790718078613
    9. 'lost' → logprob: -7.597790718078613
    10. 'dow' → logprob: -7.722790718078613

Token 11: 'ust' (ID: 570)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'at' → logprob: -1.048519492149353
    2. 'uy' → logprob: -1.923519492149353
    3. 'ox' → logprob: -2.1735196113586426
    4. 'et' → logprob: -2.9235196113586426
    5. 'est' → logprob: -3.1735196113586426
    6. 'in' → logprob: -3.1735196113586426
    7. 'reak' → logprob: -3.5485196113586426
    8. 'er' → logprob: -3.6735196113586426
    9. 'an' → logprob: -3.7985196113586426
    10. 'y' → logprob: -4.048519611358643

Token 12: '"]' (ID: 2601)
  Prédit: '"]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.031123103573918343
    2. '","' → logprob: -3.781123161315918
    3. '",' → logprob: -5.406123161315918
    4. '"' → logprob: -6.156123161315918
    5. 'ed' → logprob: -7.906123161315918
    6. ']' → logprob: -8.281123161315918
    7. 'er' → logprob: -9.031123161315918
    8. 'ing' → logprob: -9.031123161315918
    9. '']' → logprob: -9.406123161315918
    10. '!' → logprob: -10.281123161315918

Token 13: '[(' (ID: 20542)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02706160955131054
    2. '.' → logprob: -3.652061700820923
    3. ',' → logprob: -8.777061462402344
    4. '[
' → logprob: -8.777061462402344
    5. '_' → logprob: -9.652061462402344
    6. '=' → logprob: -10.277061462402344
    7. '[:]' → logprob: -10.527061462402344
    8. '[random' → logprob: -10.652061462402344
    9. '[count' → logprob: -10.902061462402344
    10. '+' → logprob: -11.027061462402344

Token 14: 'lambda' (ID: 35280)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operator' → logprob: -0.30245429277420044
    2. 'fun' → logprob: -2.5524542331695557
    3. 'not' → logprob: -2.9274542331695557
    4. '1' → logprob: -3.6774542331695557
    5. 'res' → logprob: -3.6774542331695557
    6. '0' → logprob: -3.9274542331695557
    7. 'lambda' → logprob: -4.677454471588135
    8. '5' → logprob: -4.927454471588135
    9. ' operator' → logprob: -5.052454471588135
    10. '2' → logprob: -5.177454471588135

Token 15: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.299006849527359
    2. 'x' → logprob: -2.174006938934326
    3. ' n' → logprob: -3.424006938934326
    4. ' lambda' → logprob: -3.424006938934326
    5. ' s' → logprob: -3.924006938934326
    6. 'lambda' → logprob: -4.174006938934326
    7. ' a' → logprob: -4.924006938934326
    8. 's' → logprob: -5.049006938934326
    9. 'n' → logprob: -5.424006938934326
    10. ' operator' → logprob: -5.924006938934326

Token 16: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2696445882320404
    2. ' x' → logprob: -1.7696446180343628
    3. ' :' → logprob: -3.1446444988250732
    4. 'x' → logprob: -4.894644737243652
    5. ' not' → logprob: -4.894644737243652
    6. ':x' → logprob: -5.394644737243652
    7. ' ' → logprob: -7.394644737243652
    8. ')' → logprob: -7.519644737243652
    9. 'not' → logprob: -7.894644737243652
    10. '(x' → logprob: -8.269644737243652

Token 17: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.7859944701194763
    2. 'x' → logprob: -1.035994529724121
    3. 'operator' → logprob: -2.660994529724121
    4. ' operator' → logprob: -3.035994529724121
    5. ' not' → logprob: -3.660994529724121
    6. 'not' → logprob: -4.285994529724121
    7. 'lambda' → logprob: -5.160994529724121
    8. 'int' → logprob: -5.785994529724121
    9. ' int' → logprob: -5.910994529724121
    10. ' ' → logprob: -5.910994529724121

Token 18: '>=' (ID: 20974)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.7473050355911255
    2. '<' → logprob: -1.4973050355911255
    3. ' <' → logprob: -2.497304916381836
    4. ' >' → logprob: -2.622304916381836
    5. '==' → logprob: -3.122304916381836
    6. ' not' → logprob: -3.122304916381836
    7. ' ==' → logprob: -4.247304916381836
    8. '>=' → logprob: -4.372304916381836
    9. ' >=' → logprob: -5.122304916381836
    10. '<=' → logprob: -5.497304916381836

Token 19: '22' (ID: 1709)
  Prédit: '21'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -0.4156689941883087
    2. ' ' → logprob: -2.0406689643859863
    3. '17' → logprob: -2.1656689643859863
    4. '22' → logprob: -2.9156689643859863
    5. '18' → logprob: -4.040668964385986
    6. '1' → logprob: -5.915668964385986
    7. '20' → logprob: -6.040668964385986
    8. '10' → logprob: -6.040668964385986
    9. '16' → logprob: -6.040668964385986
    10. '7' → logprob: -6.165668964385986

Token 20: ')(' (ID: 4898)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5676942467689514
    2. ')(' → logprob: -0.9426942467689514
    3. ')]' → logprob: -4.067694187164307
    4. ' )' → logprob: -4.442694187164307
    5. '(' → logprob: -5.567694187164307
    6. ')])' → logprob: -5.692694187164307
    7. ' )(' → logprob: -5.942694187164307
    8. '(res' → logprob: -6.317694187164307
    9. '(x' → logprob: -7.067694187164307
    10. ' (' → logprob: -7.317694187164307

Token 21: 'fun' (ID: 18142)
  Prédit: '22'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '22' → logprob: -1.2170311212539673
    2. ' ' → logprob: -1.3420311212539673
    3. '20' → logprob: -2.2170310020446777
    4. '21' → logprob: -2.5920310020446777
    5. '18' → logprob: -2.9670310020446777
    6. 'res' → logprob: -3.3420310020446777
    7. '19' → logprob: -3.7170310020446777
    8. '17' → logprob: -3.8420310020446777
    9. ' res' → logprob: -3.9670310020446777
    10. '0' → logprob: -4.092031002044678

Token 22: 'ct' (ID: 308)
  Prédit: 'ct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.4842066168785095
    2. ' functools' → logprob: -1.8592066764831543
    3. 'c' → logprob: -3.2342066764831543
    4. '(lambda' → logprob: -3.4842066764831543
    5. 'lambda' → logprob: -3.6092066764831543
    6. 'ction' → logprob: -3.9842066764831543
    7. 'ctor' → logprob: -3.9842066764831543
    8. 'op' → logprob: -4.234206676483154
    9. '(operator' → logprob: -4.234206676483154
    10. 'cts' → logprob: -5.109206676483154

Token 23: 'ools' (ID: 10710)
  Prédit: 'ion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ion' → logprob: -0.01940397173166275
    2. 'ation' → logprob: -4.51940393447876
    3. 'a' → logprob: -5.76940393447876
    4. 'ools' → logprob: -6.39440393447876
    5. 'ool' → logprob: -7.14440393447876
    6. 'ional' → logprob: -7.39440393447876
    7. 'l' → logprob: -7.51940393447876
    8. 'able' → logprob: -8.144404411315918
    9. 'ate' → logprob: -8.769404411315918
    10. 'al' → logprob: -8.894404411315918

Token 24: '.reduce' (ID: 49441)
  Prédit: '.partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.partial' → logprob: -0.013210702687501907
    2. '.reduce' → logprob: -4.638210773468018
    3. '.' → logprob: -5.888210773468018
    4. '.operator' → logprob: -7.513210773468018
    5. ' .' → logprob: -10.01321029663086
    6. '.acc' → logprob: -10.13821029663086
    7. '.c' → logprob: -11.63821029663086
    8. '.op' → logprob: -12.01321029663086
    9. '.wrap' → logprob: -12.01321029663086
    10. '.cache' → logprob: -12.76321029663086

Token 25: '(operator' (ID: 145734)
  Prédit: '(operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(operator' → logprob: -0.013224819675087929
    2. '(' → logprob: -4.5132246017456055
    3. ' (' → logprob: -6.2632246017456055
    4. '(lambda' → logprob: -9.138224601745605
    5. 'operator' → logprob: -10.263224601745605
    6. ' operator' → logprob: -10.388224601745605
    7. '(f' → logprob: -10.763224601745605
    8. ' ' → logprob: -10.888224601745605
    9. '	operator' → logprob: -10.888224601745605
    10. ')' → logprob: -11.638224601745605

Token 26: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.016599172726273537
    2. '.mul' → logprob: -4.141599178314209
    3. '.' → logprob: -8.76659870147705
    4. '.sub' → logprob: -9.26659870147705
    5. ' .' → logprob: -9.64159870147705
    6. '.i' → logprob: -10.01659870147705
    7. '.pow' → logprob: -10.51659870147705
    8. '.item' → logprob: -10.89159870147705
    9. '.__' → logprob: -11.01659870147705
    10. '.attr' → logprob: -11.01659870147705

Token 27: ',map' (ID: 179912)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03790226951241493
    2. ',[' → logprob: -4.412902355194092
    3. ',user' → logprob: -4.787902355194092
    4. ',res' → logprob: -4.912902355194092
    5. ' ,' → logprob: -5.787902355194092
    6. ',(' → logprob: -6.537902355194092
    7. ',x' → logprob: -6.662902355194092
    8. ',a' → logprob: -7.912902355194092
    9. ',num' → logprob: -8.287901878356934
    10. ',s' → logprob: -8.287901878356934

Token 28: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.02201232686638832
    2. '(lambda' → logprob: -4.022012233734131
    3. '(' → logprob: -6.397012233734131
    4. '(ord' → logprob: -7.272012233734131
    5. '(str' → logprob: -7.397012233734131
    6. 'int' → logprob: -8.147012710571289
    7. '[int' → logprob: -8.897012710571289
    8. '(abs' → logprob: -9.147012710571289
    9. '(list' → logprob: -9.272012710571289
    10. ',int' → logprob: -9.772012710571289

Token 29: ',input' (ID: 123014)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09970691055059433
    2. ',(' → logprob: -3.7247068881988525
    3. ',input' → logprob: -3.9747068881988525
    4. ',"' → logprob: -4.099707126617432
    5. ',user' → logprob: -4.599707126617432
    6. '(' → logprob: -5.099707126617432
    7. ',res' → logprob: -5.974707126617432
    8. ',list' → logprob: -5.974707126617432
    9. '("' → logprob: -6.099707126617432
    10. ',num' → logprob: -6.724707126617432

Token 30: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.5089199542999268
    2. '())))' → logprob: -1.1339199542999268
    3. '()' → logprob: -3.3839199542999268
    4. '().' → logprob: -4.008919715881348
    5. '())' → logprob: -4.008919715881348
    6. '(' → logprob: -5.883919715881348
    7. '(()' → logprob: -6.633919715881348
    8. '('' → logprob: -7.008919715881348
    9. '("' → logprob: -7.133919715881348
    10. '())))
' → logprob: -8.633919715881348

Token 31: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.36315903067588806
    2. 'strip' → logprob: -1.3631590604782104
    3. 'read' → logprob: -3.113158941268921
    4. 'rstrip' → logprob: -5.4881591796875
    5. ')' → logprob: -10.3631591796875
    6. ' split' → logprob: -10.9881591796875
    7. '))' → logprob: -12.1131591796875
    8. 'replace' → logprob: -12.4881591796875
    9. '(split' → logprob: -12.4881591796875
    10. ' strip' → logprob: -12.6131591796875

Token 32: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.6072684526443481
    2. '())))' → logprob: -0.8572684526443481
    3. '()' → logprob: -3.9822683334350586
    4. ')))' → logprob: -5.482268333435059
    5. '(' → logprob: -5.732268333435059
    6. '())' → logprob: -6.357268333435059
    7. '))))' → logprob: -6.482268333435059
    8. '('' → logprob: -7.857268333435059
    9. '))' → logprob: -8.232268333435059
    10. '("' → logprob: -8.482268333435059

Token 33: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.009766715578734875
    2. ')' → logprob: -4.884766578674316
    3. ')])' → logprob: -6.509766578674316
    4. '))' → logprob: -8.009766578674316
    5. '-' → logprob: -8.884766578674316
    6. ' )' → logprob: -10.134766578674316
    7. '])]' → logprob: -10.134766578674316
    8. ')>' → logprob: -10.759766578674316
    9. '+' → logprob: -10.884766578674316
    10. ']' → logprob: -11.259766578674316

Token 34: 'print' (ID: 1598)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13407598435878754
    2. ')' → logprob: -2.259075880050659
    3. '()' → logprob: -4.259076118469238
    4. '```' → logprob: -6.384076118469238
    5. '#' → logprob: -6.634076118469238
    6. ']' → logprob: -6.634076118469238
    7. '<|end|>' → logprob: -6.759076118469238
    8. '(
' → logprob: -7.884076118469238
    9. '\' → logprob: -8.009076118469238
    10. ' ' → logprob: -8.634076118469238

Token 35: '(res' (ID: 8331)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015408077742904425
    2. '(res' → logprob: -7.251540660858154
    3. '("("' → logprob: -7.376540660858154
    4. '()' → logprob: -10.001541137695312
    5. '("")' → logprob: -10.001541137695312
    6. '('' → logprob: -10.126541137695312
    7. '((' → logprob: -11.501541137695312
    8. '("""' → logprob: -11.626541137695312
    9. '("' → logprob: -12.376541137695312
    10. '(len' → logprob: -12.501541137695312

Token 36: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005555360112339258
    2. '))' → logprob: -7.500555515289307
    3. ' )' → logprob: -14.125555992126465
    4. '`)' → logprob: -14.125555992126465
    5. ')))' → logprob: -14.500555992126465
    6. '])' → logprob: -16.00055503845215
    7. ')`' → logprob: -16.00055503845215
    8. ')}' → logprob: -16.50055503845215
    9. '})' → logprob: -16.62555503845215
    10. '')' → logprob: -16.87555503845215


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 34
Tokens correctement prédits (1ère position, stricte): 11
Tokens correctement prédits (1ère position, avec adaptation): 11
Tokens correctement prédits (top 10): 22
Précision stricte (1ère position): 32.35%
Précision adaptée (1ère position): 32.35%
Précision (top 10): 64.71%
================================================================================
