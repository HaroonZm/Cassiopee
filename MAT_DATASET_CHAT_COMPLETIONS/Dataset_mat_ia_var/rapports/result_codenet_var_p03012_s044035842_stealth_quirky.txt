================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:56:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
W = input().split()
W_plus = []
for item in W:
    W_plus.append(int(item))
Response = []
T = 0
while T < N:
    LEFT = 0
    for idx in range(0, T):
        LEFT = LEFT + W_plus[idx]
    RIGHT = 0
    for idx in range(T, N):
        RIGHT += W_plus[idx]
    Response.append(abs(LEFT - RIGHT))
    T += 1
Output = sorted(Response)[0]
print(Output)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003063838230445981
    2. '('' → logprob: -8.500306129455566
    3. '(N' → logprob: -10.000306129455566
    4. '(
' → logprob: -10.750306129455566
    5. '(input' → logprob: -11.250306129455566
    6. ''' → logprob: -12.125306129455566
    7. '("("' → logprob: -12.375306129455566
    8. '```' → logprob: -12.375306129455566
    9. '`' → logprob: -12.750306129455566
    10. '(`' → logprob: -13.000306129455566

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5405747294425964
    2. ')' → logprob: -0.9155747294425964
    3. '()' → logprob: -4.290574550628662
    4. '())' → logprob: -5.915574550628662
    5. '(
' → logprob: -8.41557502746582
    6. '```' → logprob: -9.16557502746582
    7. '))' → logprob: -9.29057502746582
    8. '")' → logprob: -9.54057502746582
    9. '(

' → logprob: -9.79057502746582
    10. '`)' → logprob: -9.79057502746582

Token 5: 'W' (ID: 54)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6126931309700012
    2. 'if' → logprob: -1.4876930713653564
    3. 'i' → logprob: -2.8626930713653564
    4. 'x' → logprob: -3.2376930713653564
    5. 'a' → logprob: -3.3626930713653564
    6. 's' → logprob: -3.7376930713653564
    7. 'f' → logprob: -4.1126933097839355
    8. '\n' → logprob: -4.9876933097839355
    9. '#' → logprob: -5.1126933097839355
    10. '`' → logprob: -5.1126933097839355

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04053407534956932
    2. '[i' → logprob: -3.415534019470215
    3. '.' → logprob: -6.165534019470215
    4. '=' → logprob: -6.790534019470215
    5. ' =' → logprob: -6.915534019470215
    6. '[]' → logprob: -7.290534019470215
    7. '_' → logprob: -8.165534019470215
    8. 'i' → logprob: -8.665534019470215
    9. '\[' → logprob: -8.665534019470215
    10. ')' → logprob: -8.915534019470215

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.009767069481313229
    2. ' input' → logprob: -5.009767055511475
    3. 'list' → logprob: -6.509767055511475
    4. '[input' → logprob: -7.134767055511475
    5. '[]' → logprob: -7.384767055511475
    6. 'int' → logprob: -10.509767532348633
    7. '[' → logprob: -10.759767532348633
    8. ' list' → logprob: -11.009767532348633
    9. '0' → logprob: -11.509767532348633
    10. ' ' → logprob: -11.634767532348633

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002307146554812789
    2. '('' → logprob: -7.127306938171387
    3. ''' → logprob: -7.252306938171387
    4. '()' → logprob: -8.627306938171387
    5. ')' → logprob: -9.002306938171387
    6. '(
' → logprob: -9.002306938171387
    7. '```' → logprob: -9.252306938171387
    8. '.' → logprob: -10.002306938171387
    9. '`' → logprob: -10.002306938171387
    10. '"' → logprob: -10.002306938171387

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.03826100006699562
    2. 'strip' → logprob: -3.2882609367370605
    3. 'rstrip' → logprob: -8.788261413574219
    4. 'replace' → logprob: -10.163261413574219
    5. ' split' → logprob: -11.288261413574219
    6. 'spl' → logprob: -12.413261413574219
    7. 's' → logprob: -12.538261413574219
    8. 'lower' → logprob: -12.663261413574219
    9. 'startswith' → logprob: -13.413261413574219
    10. 'rs' → logprob: -13.788261413574219

Token 10: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029329674318432808
    2. '('' → logprob: -4.154329776763916
    3. '("("' → logprob: -4.654329776763916
    4. '()' → logprob: -6.029329776763916
    5. '`' → logprob: -8.279329299926758
    6. '((' → logprob: -8.404329299926758
    7. '(`' → logprob: -8.904329299926758
    8. ''' → logprob: -9.029329299926758
    9. '```' → logprob: -9.279329299926758
    10. ' (' → logprob: -9.279329299926758

Token 11: 'W' (ID: 54)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04603687673807144
    2. 'W' → logprob: -4.546036720275879
    3. 'count' → logprob: -5.171036720275879
    4. 'if' → logprob: -5.671036720275879
    5. 'max' → logprob: -5.796036720275879
    6. 'w' → logprob: -5.796036720275879
    7. 'ans' → logprob: -5.921036720275879
    8. 'result' → logprob: -6.171036720275879
    9. 'a' → logprob: -6.421036720275879
    10. 'A' → logprob: -6.546036720275879

Token 12: '_plus' (ID: 68089)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07084672898054123
    2. '.' → logprob: -3.0708467960357666
    3. '<|end|>' → logprob: -4.3208465576171875
    4. '```' → logprob: -5.6958465576171875
    5. '\[' → logprob: -6.3208465576171875
    6. '\' → logprob: -7.0708465576171875
    7. '#' → logprob: -7.6958465576171875
    8. '[:]' → logprob: -7.8208465576171875
    9. '<|end|>' → logprob: -8.070846557617188
    10. '[]' → logprob: -8.070846557617188

Token 13: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1810888946056366
    2. '_' → logprob: -2.931088924407959
    3. '[' → logprob: -2.931088924407959
    4. '.' → logprob: -4.306088924407959
    5. '[:]' → logprob: -4.681088924407959
    6. ' =' → logprob: -4.806088924407959
    7. '.append' → logprob: -4.806088924407959
    8. '1' → logprob: -5.431088924407959
    9. 's' → logprob: -5.681088924407959
    10. '=[]' → logprob: -6.181088924407959

Token 14: ' []
' (ID: 8911)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -1.0457117557525635
    2. '[]' → logprob: -1.1707117557525635
    3. '['' → logprob: -1.6707117557525635
    4. '["' → logprob: -2.9207117557525635
    5. '[' → logprob: -3.2957117557525635
    6. ' W' → logprob: -3.6707117557525635
    7. ' []' → logprob: -4.295711517333984
    8. ' ['' → logprob: -4.920711517333984
    9. 'list' → logprob: -5.295711517333984
    10. '[:]' → logprob: -5.920711517333984

Token 15: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0014067788142710924
    2. ' for' → logprob: -6.626406669616699
    3. 'f' → logprob: -10.5014066696167
    4. 'i' → logprob: -11.3764066696167
    5. '```' → logprob: -11.6264066696167
    6. '_' → logprob: -11.7514066696167
    7. '=' → logprob: -11.8764066696167
    8. 'F' → logprob: -12.3764066696167
    9. '`' → logprob: -12.8764066696167
    10. ' ' → logprob: -13.3764066696167

Token 16: ' item' (ID: 2169)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07181399315595627
    2. ' ' → logprob: -3.1968140602111816
    3. ' _' → logprob: -3.9468140602111816
    4. ' w' → logprob: -5.446814060211182
    5. '_' → logprob: -5.571814060211182
    6. 'i' → logprob: -7.321814060211182
    7. '  ' → logprob: -8.946813583374023
    8. 'w' → logprob: -9.821813583374023
    9. ' ‌' → logprob: -9.821813583374023
    10. ' x' → logprob: -11.071813583374023

Token 17: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033939700573682785
    2. 'in' → logprob: -3.4089395999908447
    3. ' ' → logprob: -9.033939361572266
    4. '  ' → logprob: -9.283939361572266
    5. '<|end|>' → logprob: -10.908939361572266
    6. 's' → logprob: -11.283939361572266
    7. '_in' → logprob: -11.283939361572266
    8. '	in' → logprob: -11.533939361572266
    9. '_' → logprob: -12.033939361572266
    10. ' i' → logprob: -12.658939361572266

Token 18: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.02632654458284378
    2. ' W' → logprob: -3.6513266563415527
    3. 'range' → logprob: -11.276326179504395
    4. ' range' → logprob: -11.901326179504395
    5. ' ' → logprob: -12.276326179504395
    6. 'w' → logprob: -15.151326179504395
    7. '  ' → logprob: -15.401326179504395
    8. '[' → logprob: -15.651326179504395
    9. '	W' → logprob: -15.776326179504395
    10. '<|end|>' → logprob: -15.776326179504395

Token 19: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008415495976805687
    2. ' :' → logprob: -7.3758416175842285
    3. '+:' → logprob: -8.75084114074707
    4. ':**' → logprob: -11.00084114074707
    5. '+' → logprob: -11.25084114074707
    6. ':
' → logprob: -12.12584114074707
    7. '[:]' → logprob: -12.50084114074707
    8. '):' → logprob: -12.87584114074707
    9. ' if' → logprob: -13.25084114074707
    10. '[' → logprob: -13.37584114074707

Token 20: '   ' (ID: 271)
  Prédit: ' W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.468157023191452
    2. '   ' → logprob: -1.7181570529937744
    3. ' if' → logprob: -2.7181570529937744
    4. 'W' → logprob: -2.8431570529937744
    5. '    ' → logprob: -2.9681570529937744
    6. ' ' → logprob: -4.843156814575195
    7. '    
' → logprob: -5.593156814575195
    8. '_' → logprob: -6.343156814575195
    9. '```' → logprob: -6.843156814575195
    10. 'if' → logprob: -7.218156814575195

Token 21: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' (adapté à ' W') → logprob: -0.15721334517002106
    2. ' W' → logprob: -2.1572134494781494
    3. 'if' → logprob: -4.03221321105957
    4. ' if' → logprob: -4.65721321105957
    5. '   ' → logprob: -6.03221321105957
    6. '```' → logprob: -10.28221321105957
    7. '_W' → logprob: -10.84471321105957
    8. 'item' → logprob: -10.96971321105957
    9. '    ' → logprob: -11.03221321105957
    10. '_' → logprob: -11.15721321105957

Token 22: '_plus' (ID: 68089)
  Prédit: '_plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_plus' → logprob: -0.0008748973486945033
    2. '_' → logprob: -7.375874996185303
    3. '+' → logprob: -8.500874519348145
    4. '+"_' → logprob: -11.875874519348145
    5. '_PLUS' → logprob: -12.125874519348145
    6. '+'_' → logprob: -12.250874519348145
    7. '+=' → logprob: -12.375874519348145
    8. '```' → logprob: -12.375874519348145
    9. 'plus' → logprob: -13.125874519348145
    10. '_append' → logprob: -13.500874519348145

Token 23: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.20471549034118652
    2. '+' → logprob: -2.0797154903411865
    3. '+=' → logprob: -3.9547154903411865
    4. '.' → logprob: -3.9547154903411865
    5. ' +=' → logprob: -3.9547154903411865
    6. '.extend' → logprob: -6.579715728759766
    7. '_' → logprob: -7.579715728759766
    8. '=' → logprob: -8.329715728759766
    9. ' +' → logprob: -8.954715728759766
    10. '+='' → logprob: -8.954715728759766

Token 24: '(int' (ID: 2742)
  Prédit: '(item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(item' → logprob: -0.015174096450209618
    2. '(' → logprob: -4.26517391204834
    3. '('' → logprob: -7.51517391204834
    4. '(str' → logprob: -8.76517391204834
    5. '((' → logprob: -9.26517391204834
    6. '(int' → logprob: -9.64017391204834
    7. '(f' → logprob: -10.01517391204834
    8. '("' → logprob: -10.76517391204834
    9. '("("' → logprob: -10.76517391204834
    10. '(len' → logprob: -10.89017391204834

Token 25: '(item' (ID: 10016)
  Prédit: '(item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(item' → logprob: -0.0125474464148283
    2. '(' → logprob: -4.387547492980957
    3. ')' → logprob: -11.262547492980957
    4. ')item' → logprob: -11.637547492980957
    5. '('' → logprob: -11.762547492980957
    6. 'item' → logprob: -13.012547492980957
    7. ' (' → logprob: -13.262547492980957
    8. '(Item' → logprob: -14.512547492980957
    9. ')(' → logprob: -14.762547492980957
    10. ' ' → logprob: -14.887547492980957

Token 26: '))
' (ID: 2210)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.15304049849510193
    2. ')' → logprob: -2.5280404090881348
    3. ')+' → logprob: -3.5280404090881348
    4. ' +' → logprob: -3.6530404090881348
    5. '))' → logprob: -5.028040409088135
    6. '+)' → logprob: -8.528040885925293
    7. '()+' → logprob: -11.778040885925293
    8. ' )' → logprob: -11.778040885925293
    9. '   ' → logprob: -11.903040885925293
    10. '))+' → logprob: -11.903040885925293

Token 27: 'Response' (ID: 3186)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5987266302108765
    2. '[' → logprob: -1.2237266302108765
    3. ')' → logprob: -2.723726749420166
    4. '<|end|>' → logprob: -3.848726749420166
    5. ' ' → logprob: -4.348726749420166
    6. '```' → logprob: -4.598726749420166
    7. '.' → logprob: -4.723726749420166
    8. '(' → logprob: -4.723726749420166
    9. '*' → logprob: -5.098726749420166
    10. '#' → logprob: -5.723726749420166

Token 28: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11867894232273102
    2. '[' → logprob: -2.2436790466308594
    3. ')' → logprob: -6.868679046630859
    4. ' +' → logprob: -7.118679046630859
    5. '*' → logprob: -7.243679046630859
    6. '[i' → logprob: -7.368679046630859
    7. '(' → logprob: -7.743679046630859
    8. '[:]' → logprob: -7.993679046630859
    9. '_' → logprob: -8.24367904663086
    10. '+
' → logprob: -8.49367904663086

Token 29: ' []
' (ID: 8911)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.978071391582489
    2. 'max' → logprob: -1.1030714511871338
    3. ' max' → logprob: -1.7280714511871338
    4. ' sum' → logprob: -3.103071451187134
    5. 'sorted' → logprob: -4.228071212768555
    6. '[]' → logprob: -4.728071212768555
    7. ' []' → logprob: -4.978071212768555
    8. 'min' → logprob: -5.103071212768555
    9. '"' → logprob: -5.228071212768555
    10. ' sorted' → logprob: -5.353071212768555

Token 30: 'T' (ID: 51)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005420754197984934
    2. ' for' → logprob: -5.755420684814453
    3. 'i' → logprob: -7.755420684814453
    4. 'n' → logprob: -7.755420684814453
    5. '\n' → logprob: -8.380420684814453
    6. '```' → logprob: -8.505420684814453
    7. '
' → logprob: -9.005420684814453
    8. 'max' → logprob: -9.005420684814453
    9. 'if' → logprob: -9.255420684814453
    10. 'f' → logprob: -9.380420684814453

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033698029816150665
    2. '=' → logprob: -3.533698081970215
    3. '=int' → logprob: -7.283698081970215
    4. 'emp' → logprob: -7.408698081970215
    5. 'arget' → logprob: -7.408698081970215
    6. 'imes' → logprob: -7.408698081970215
    7. 'ime' → logprob: -7.658698081970215
    8. '=len' → logprob: -8.783698081970215
    9. 'otal' → logprob: -9.408698081970215
    10. '_' → logprob: -9.408698081970215

Token 32: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.42351430654525757
    2. 'int' → logprob: -2.1735143661499023
    3. '[]' → logprob: -2.6735143661499023
    4. ' ' → logprob: -2.9235143661499023
    5. 'len' → logprob: -3.2985143661499023
    6. ' []' → logprob: -3.4235143661499023
    7. '100' → logprob: -4.673514366149902
    8. '10' → logprob: -4.923514366149902
    9. '1' → logprob: -5.048514366149902
    10. 'N' → logprob: -5.548514366149902

Token 33: '0' (ID: 15)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3107217252254486
    2. '0' → logprob: -2.4357216358184814
    3. '[]' → logprob: -2.5607216358184814
    4. 'N' → logprob: -3.0607216358184814
    5. 'len' → logprob: -3.8107216358184814
    6. '100' → logprob: -4.1857218742370605
    7. '10' → logprob: -5.5607218742370605
    8. '[int' → logprob: -5.5607218742370605
    9. 'W' → logprob: -5.9357218742370605
    10. '1' → logprob: -6.0607218742370605

Token 34: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5681580901145935
    2. '<|end|>' → logprob: -1.0681581497192383
    3. ' for' → logprob: -3.0681581497192383
    4. '
' → logprob: -3.3181581497192383
    5. '<|end|>' → logprob: -5.818158149719238
    6. ' ' → logprob: -6.443158149719238
    7. ' 
' → logprob: -7.068158149719238
    8. '+' → logprob: -7.193158149719238
    9. '\n' → logprob: -7.568158149719238
    10. '' → logprob: -9.818158149719238

Token 35: 'while' (ID: 7032)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015617603436112404
    2. ' for' → logprob: -4.265617370605469
    3. 'f' → logprob: -7.140617370605469
    4. '+' → logprob: -8.765617370605469
    5. ' ' → logprob: -9.140617370605469
    6. ':' → logprob: -9.265617370605469
    7. 'i' → logprob: -9.890617370605469
    8. '\n' → logprob: -10.140617370605469
    9. ',' → logprob: -10.390617370605469
    10. '
' → logprob: -10.640617370605469

Token 36: ' T' (ID: 353)
  Prédit: ' T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' T' → logprob: -0.00896541215479374
    2. 'T' → logprob: -4.883965492248535
    3. ' True' → logprob: -6.758965492248535
    4. ' ' → logprob: -9.133965492248535
    5. 'True' → logprob: -10.008965492248535
    6. ' len' → logprob: -10.883965492248535
    7. ' ' → logprob: -11.883965492248535
    8. '(T' → logprob: -12.133965492248535
    9. ' W' → logprob: -12.883965492248535
    10. ' not' → logprob: -13.008965492248535

Token 37: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.039187636226415634
    2. '<' → logprob: -3.2891876697540283
    3. '<len' → logprob: -6.789187431335449
    4. '<N' → logprob: -12.03918743133545
    5. ' ' → logprob: -12.16418743133545
    6. ' <=' → logprob: -12.28918743133545
    7. '<size' → logprob: -13.91418743133545
    8. '+' → logprob: -14.16418743133545
    9. 'len' → logprob: -14.53918743133545
    10. '<=' → logprob: -14.66418743133545

Token 38: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.5464816689491272
    2. 'N' → logprob: -1.0464816093444824
    3. ' len' → logprob: -3.2964816093444824
    4. 'len' → logprob: -3.5464816093444824
    5. ' ' → logprob: -5.546481609344482
    6. '10' → logprob: -11.42148208618164
    7. '(len' → logprob: -11.54648208618164
    8. '100' → logprob: -11.60898208618164
    9. '  ' → logprob: -11.67148208618164
    10. '   ' → logprob: -11.73398208618164

Token 39: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03402542322874069
    2. ' :' → logprob: -3.4090254306793213
    3. '+' → logprob: -8.784025192260742
    4. '+:' → logprob: -9.284025192260742
    5. ':
' → logprob: -9.909025192260742
    6. ' and' → logprob: -10.284025192260742
    7. '[' → logprob: -11.659025192260742
    8. ' :
' → logprob: -11.659025192260742
    9. '   ' → logprob: -11.909025192260742
    10. ' ' → logprob: -12.159025192260742

Token 40: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3732375502586365
    2. '   ' → logprob: -1.8732376098632812
    3. '    ' → logprob: -2.4982376098632812
    4. '<|end|>' → logprob: -3.4982376098632812
    5. '[' → logprob: -4.248237609863281
    6. ' if' → logprob: -5.623237609863281
    7. ' W' → logprob: -5.748237609863281
    8. 'W' → logprob: -5.873237609863281
    9. '    
' → logprob: -6.123237609863281
    10. '+' → logprob: -6.248237609863281

Token 41: ' LEFT' (ID: 48606)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24375636875629425
    2. ' W' → logprob: -2.4937562942504883
    3. '    ' → logprob: -3.3687562942504883
    4. ' if' → logprob: -3.4937562942504883
    5. ' Response' → logprob: -3.4937562942504883
    6. 'Response' → logprob: -4.118756294250488
    7. 'W' → logprob: -5.243756294250488
    8. 'if' → logprob: -5.868756294250488
    9. ' T' → logprob: -6.118756294250488
    10. '   ' → logprob: -6.243756294250488

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12834616005420685
    2. '_' → logprob: -2.7533462047576904
    3. '=' → logprob: -3.5033462047576904
    4. ',' → logprob: -5.003345966339111
    5. '_INDEX' → logprob: -6.128345966339111
    6. '_index' → logprob: -6.378345966339111
    7. '   ' → logprob: -6.503345966339111
    8. ' ' → logprob: -6.878345966339111
    9. ' +=' → logprob: -6.878345966339111
    10. ' +' → logprob: -7.003345966339111

Token 43: ' ' (ID: 220)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.8573070168495178
    2. 'W' → logprob: -1.482306957244873
    3. ' T' → logprob: -1.607306957244873
    4. ' W' → logprob: -2.107306957244873
    5. 'N' → logprob: -4.732306957244873
    6. '0' → logprob: -4.857306957244873
    7. ' N' → logprob: -5.607306957244873
    8. '100' → logprob: -6.732306957244873
    9. 'int' → logprob: -6.857306957244873
    10. ' ' → logprob: -7.357306957244873

Token 44: '0' (ID: 15)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.1345495879650116
    2. 'W' → logprob: -2.384549617767334
    3. '0' → logprob: -4.134549617767334
    4. ' T' → logprob: -4.759549617767334
    5. 'N' → logprob: -5.384549617767334
    6. ' W' → logprob: -6.259549617767334
    7. 'len' → logprob: -7.509549617767334
    8. 'sum' → logprob: -7.759549617767334
    9. 'int' → logprob: -8.134549140930176
    10. '(T' → logprob: -8.384549140930176

Token 45: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 47: ' for' (ID: 395)
  Prédit: 'RIGHT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RIGHT' → logprob: -0.42026644945144653
    2. 'T' → logprob: -1.5452663898468018
    3. 'for' (adapté à ' for') → logprob: -2.9202663898468018
    4. ' T' → logprob: -3.6702663898468018
    5. ' for' → logprob: -3.7952663898468018
    6. ' RIGHT' → logprob: -4.795266628265381
    7. ' while' → logprob: -5.670266628265381
    8. 'while' → logprob: -5.795266628265381
    9. 'W' → logprob: -6.295266628265381
    10. '   ' → logprob: -6.545266628265381

Token 48: ' idx' (ID: 14016)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.26347655057907104
    2. ' j' → logprob: -2.138476610183716
    3. 'i' → logprob: -2.638476610183716
    4. 'j' → logprob: -4.263476371765137
    5. ' range' → logprob: -5.138476371765137
    6. ' ' → logprob: -5.638476371765137
    7. ' _' → logprob: -5.888476371765137
    8. 'range' → logprob: -6.263476371765137
    9. '_' → logprob: -6.388476371765137
    10. ' idx' → logprob: -6.638476371765137

Token 49: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01016235165297985
    2. 'in' → logprob: -4.635162353515625
    3. ' ' → logprob: -8.010162353515625
    4. ',' → logprob: -9.885162353515625
    5. '	in' → logprob: -11.760162353515625
    6. '   ' → logprob: -12.885162353515625
    7. ' ,' → logprob: -13.385162353515625
    8. '  ' → logprob: -13.572662353515625
    9. '_in' → logprob: -14.135162353515625
    10. ')' → logprob: -14.197662353515625

Token 50: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.47429558634757996
    2. 'range' → logprob: -0.9742956161499023
    3. ' W' → logprob: -8.849295616149902
    4. '   ' → logprob: -10.599295616149902
    5. 'W' → logprob: -10.974295616149902
    6. ' ' → logprob: -11.349295616149902
    7. '  ' → logprob: -11.849295616149902
    8. '	range' → logprob: -12.349295616149902
    9. '    ' → logprob: -12.849295616149902
    10. '(range' → logprob: -12.974295616149902

Token 51: '(' (ID: 7)
  Prédit: '(T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.08381707966327667
    2. '(' → logprob: -2.5838170051574707
    3. '(N' → logprob: -5.708817005157471
    4. ' (' → logprob: -7.208817005157471
    5. '(len' → logprob: -7.333817005157471
    6. '(t' → logprob: -9.833817481994629
    7. '(W' → logprob: -10.083817481994629
    8. '(L' → logprob: -10.083817481994629
    9. ' T' → logprob: -10.208817481994629
    10. ' ' → logprob: -11.833817481994629

Token 52: '0' (ID: 15)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.02364605851471424
    2. 'N' → logprob: -4.148645877838135
    3. '0' → logprob: -5.648645877838135
    4. ' T' → logprob: -5.648645877838135
    5. 'len' → logprob: -8.523646354675293
    6. '1' → logprob: -9.148646354675293
    7. ' N' → logprob: -9.648646354675293
    8. '   ' → logprob: -10.398646354675293
    9. '(T' → logprob: -10.398646354675293
    10. ' ' → logprob: -10.523646354675293

Token 53: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06106599420309067
    2. ' ,' → logprob: -2.936065912246704
    3. ',T' → logprob: -5.311066150665283
    4. ',N' → logprob: -8.061065673828125
    5. ' T' → logprob: -8.311065673828125
    6. 'T' → logprob: -8.311065673828125
    7. ' ' → logprob: -9.186065673828125
    8. ',len' → logprob: -9.311065673828125
    9. '(T' → logprob: -9.811065673828125
    10. '(' → logprob: -10.561065673828125

Token 54: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.04157021641731262
    2. 'N' → logprob: -3.7915701866149902
    3. ' T' → logprob: -4.04157018661499
    4. ' N' → logprob: -7.79157018661499
    5. 'len' → logprob: -9.041570663452148
    6. ' ' → logprob: -11.166570663452148
    7. ' len' → logprob: -11.291570663452148
    8. '   ' → logprob: -11.291570663452148
    9. '	T' → logprob: -12.916570663452148
    10. 't' → logprob: -13.166570663452148

Token 55: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17195501923561096
    2. '+' → logprob: -1.9219549894332886
    3. ' ):' → logprob: -5.296955108642578
    4. ')' → logprob: -5.421955108642578
    5. '):
' → logprob: -6.921955108642578
    6. ' +' → logprob: -7.046955108642578
    7. ' )' → logprob: -8.796955108642578
    8. ',' → logprob: -9.296955108642578
    9. '-' → logprob: -10.171955108642578
    10. '   ' → logprob: -10.546955108642578

Token 56: '       ' (ID: 309)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1065075695514679
    2. '   ' → logprob: -2.9815075397491455
    3. '       ' → logprob: -3.4815075397491455
    4. ' +' → logprob: -4.981507778167725
    5. '    ' → logprob: -5.731507778167725
    6. ' +=' → logprob: -5.856507778167725
    7. ' ' → logprob: -6.606507778167725
    8. '+=' → logprob: -6.731507778167725
    9. 'LEFT' → logprob: -7.231507778167725
    10. ')' → logprob: -7.606507778167725

Token 57: ' LEFT' (ID: 48606)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.260697603225708
    2. 'LEFT' (adapté à ' LEFT') → logprob: -2.135697603225708
    3. ' +=' → logprob: -3.260697603225708
    4. ' +' → logprob: -3.510697603225708
    5. ' LEFT' → logprob: -3.760697603225708
    6. '+=' → logprob: -4.760697364807129
    7. '   ' → logprob: -5.385697364807129
    8. '    ' → logprob: -6.010697364807129
    9. ')' → logprob: -7.010697364807129
    10. ' ' → logprob: -7.635697364807129

Token 58: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06707759201526642
    2. ' +=' → logprob: -2.81707763671875
    3. '+' → logprob: -5.31707763671875
    4. '=' → logprob: -8.81707763671875
    5. ' +' → logprob: -11.06707763671875
    6. ' =' → logprob: -12.19207763671875
    7. '<' → logprob: -12.31707763671875
    8. '+=(' → logprob: -12.56707763671875
    9. ']+=' → logprob: -12.56707763671875
    10. '   ' → logprob: -12.94207763671875

Token 59: ' LEFT' (ID: 48606)
  Prédit: ' W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.9809700846672058
    2. ' LEFT' → logprob: -1.4809701442718506
    3. 'LEFT' → logprob: -1.6059701442718506
    4. 'W' → logprob: -1.7309701442718506
    5. '+' → logprob: -4.1059699058532715
    6. ' +' → logprob: -6.7309699058532715
    7. ' ' → logprob: -7.7309699058532715
    8. 'left' → logprob: -8.23097038269043
    9. ' left' → logprob: -8.35597038269043
    10. 'Left' → logprob: -9.10597038269043

Token 60: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14269912242889404
    2. ' +' → logprob: -2.0176992416381836
    3. ' +=' → logprob: -11.892699241638184
    4. '+=' → logprob: -11.892699241638184
    5. ' plus' → logprob: -12.267699241638184
    6. ' ' → logprob: -13.892699241638184
    7. '-' → logprob: -14.017699241638184
    8. '＋' → logprob: -14.767699241638184
    9. '+
' → logprob: -14.767699241638184
    10. ' +
' → logprob: -15.142699241638184

Token 61: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.4741981625556946
    2. 'W' → logprob: -0.9741981625556946
    3. 'int' → logprob: -9.599198341369629
    4. ' int' → logprob: -10.599198341369629
    5. '	W' → logprob: -11.599198341369629
    6. '1' → logprob: -11.849198341369629
    7. ' ' → logprob: -12.099198341369629
    8. '   ' → logprob: -13.474198341369629
    9. '(W' → logprob: -13.724198341369629
    10. '    ' → logprob: -13.974198341369629

Token 62: '_plus' (ID: 68089)
  Prédit: '_plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_plus' → logprob: -1.3663626305060461e-05
    2. 'plus' → logprob: -11.87501335144043
    3. '[idx' → logprob: -13.12501335144043
    4. '[' → logprob: -14.00001335144043
    5. '_[' → logprob: -14.25001335144043
    6. '_minus' → logprob: -14.37501335144043
    7. '_PLUS' → logprob: -14.62501335144043
    8. '_' → logprob: -14.75001335144043
    9. '[_' → logprob: -14.87501335144043
    10. 'Plus' → logprob: -15.00001335144043

Token 63: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.005982712376862764
    2. '[' → logprob: -5.130982875823975
    3. '[T' → logprob: -10.380982398986816
    4. 'idx' → logprob: -11.755982398986816
    5. ' [' → logprob: -12.505982398986816
    6. '[
' → logprob: -12.630982398986816
    7. '[id' → logprob: -13.880982398986816
    8. '[i' → logprob: -14.130982398986816
    9. '[t' → logprob: -14.130982398986816
    10. '[int' → logprob: -14.755982398986816

Token 64: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022967655211687088
    2. ']' → logprob: -4.52296781539917
    3. '])' → logprob: -4.64796781539917
    4. '+' → logprob: -7.39796781539917
    5. ')
' → logprob: -7.52296781539917
    6. ' )' → logprob: -7.77296781539917
    7. ')]' → logprob: -7.77296781539917
    8. '   ' → logprob: -9.147967338562012
    9. ')])' → logprob: -9.522967338562012
    10. ' ' → logprob: -11.022967338562012

Token 65: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06158609688282013
    2. '    
' → logprob: -3.8115861415863037
    3. ' 
' → logprob: -4.061585903167725
    4. '
' → logprob: -4.436585903167725
    5. '<|end|>' → logprob: -6.061585903167725
    6. '  
' → logprob: -6.561585903167725
    7. '   
' → logprob: -6.936585903167725
    8. '+' → logprob: -7.186585903167725
    9. '\n' → logprob: -7.311585903167725
    10. ' ' → logprob: -7.311585903167725

Token 66: ' RIGHT' (ID: 51066)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.262379914522171
    2. '+' → logprob: -1.7623798847198486
    3. ' if' → logprob: -4.137380123138428
    4. ' ' → logprob: -4.887380123138428
    5. '    
' → logprob: -5.137380123138428
    6. '    ' → logprob: -5.262380123138428
    7. ' T' → logprob: -5.387380123138428
    8. ' 
' → logprob: -6.012380123138428
    9. ' +' → logprob: -6.137380123138428
    10. '<|end|>' → logprob: -6.137380123138428

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28117817640304565
    2. '=' → logprob: -1.4061782360076904
    3. '>' → logprob: -11.28117847442627
    4. ' ' → logprob: -12.40617847442627
    5. '_' → logprob: -12.65617847442627
    6. '   ' → logprob: -13.03117847442627
    7. ' >' → logprob: -13.15617847442627
    8. ')' → logprob: -14.28117847442627
    9. '    ' → logprob: -14.28117847442627
    10. '  ' → logprob: -14.90617847442627

Token 68: ' ' (ID: 220)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.32619839906692505
    2. 'sum' → logprob: -1.7011983394622803
    3. ' ' → logprob: -2.8261983394622803
    4. '0' → logprob: -3.3261983394622803
    5. '(sum' → logprob: -8.07619857788086
    6. ' W' → logprob: -8.70119857788086
    7. '	sum' → logprob: -9.57619857788086
    8. '    ' → logprob: -10.45119857788086
    9. '=sum' → logprob: -10.45119857788086
    10. '  ' → logprob: -11.20119857788086

Token 69: '0' (ID: 15)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.4419323801994324
    2. '0' → logprob: -1.0669324398040771
    3. ' sum' → logprob: -4.441932201385498
    4. ' ' → logprob: -6.816932201385498
    5. '   ' → logprob: -9.441932678222656
    6. 'W' → logprob: -9.566932678222656
    7. ' W' → logprob: -11.066932678222656
    8. '1' → logprob: -11.316932678222656
    9. '(sum' → logprob: -11.379432678222656
    10. '  ' → logprob: -11.754432678222656

Token 70: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6548399329185486
    2. '<|end|>' → logprob: -1.0298399925231934
    3. '
' → logprob: -3.0298399925231934
    4. ' for' → logprob: -3.2798399925231934
    5. 'for' → logprob: -3.9048399925231934
    6. '<|end|>' → logprob: -4.529839992523193
    7. '    
' → logprob: -6.404839992523193
    8. '```' → logprob: -6.654839992523193
    9. ' ' → logprob: -7.279839992523193
    10. '\n' → logprob: -7.279839992523193

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02332502231001854
    2. 'for' → logprob: -3.898324966430664
    3. ' for' → logprob: -6.148324966430664
    4. '<|end|>' → logprob: -7.523324966430664
    5. '	for' → logprob: -10.148324966430664
    6. '<|end|>' → logprob: -10.148324966430664
    7. '
' → logprob: -11.648324966430664
    8. '```' → logprob: -11.898324966430664
    9. '    
' → logprob: -12.898324966430664
    10. '  ' → logprob: -13.648324966430664

Token 72: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06282501667737961
    2. '   ' → logprob: -3.1878249645233154
    3. ' for' → logprob: -3.9378249645233154
    4. '	for' → logprob: -9.562825202941895
    5. '<|end|>' → logprob: -9.812825202941895
    6. '```' → logprob: -12.437825202941895
    7. '  ' → logprob: -12.812825202941895
    8. '
' → logprob: -12.937825202941895
    9. ' ' → logprob: -13.437825202941895
    10. '<|end|>' → logprob: -13.687825202941895

Token 73: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.21654100716114044
    2. 'idx' → logprob: -1.841541051864624
    3. ' range' → logprob: -3.716541051864624
    4. 'range' → logprob: -4.466540813446045
    5. ' in' → logprob: -9.091541290283203
    6. ' ' → logprob: -9.216541290283203
    7. '	idx' → logprob: -10.966541290283203
    8. 'x' → logprob: -11.091541290283203
    9. ' index' → logprob: -11.216541290283203
    10. 'index' → logprob: -11.591541290283203

Token 74: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0012429672060534358
    2. 'in' → logprob: -6.7512431144714355
    3. ' ' → logprob: -10.251242637634277
    4. '=' → logprob: -11.501242637634277
    5. '(' → logprob: -12.376242637634277
    6. 'range' → logprob: -12.376242637634277
    7. '<|end|>' → logprob: -12.376242637634277
    8. ' =' → logprob: -13.501242637634277
    9. '   ' → logprob: -13.563742637634277
    10. ')' → logprob: -13.688742637634277

Token 75: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04860281944274902
    2. 'range' → logprob: -3.048602819442749
    3. '(range' → logprob: -11.173603057861328
    4. '	range' → logprob: -13.673603057861328
    5. ' ' → logprob: -15.923603057861328
    6. ' rang' → logprob: -17.048603057861328
    7. '.range' → logprob: -17.423603057861328
    8. ' xrange' → logprob: -17.923603057861328
    9. ' rango' → logprob: -18.173603057861328
    10. '<|end|>' → logprob: -18.423603057861328

Token 76: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.007812450639903545
    2. '(' → logprob: -4.8828125
    3. '(range' → logprob: -8.7578125
    4. ' in' → logprob: -11.3828125
    5. 'range' → logprob: -11.8828125
    6. ' (' → logprob: -12.0078125
    7. ' range' → logprob: -12.1328125
    8. '((' → logprob: -12.7578125
    9. '(N' → logprob: -12.8828125
    10. '(
' → logprob: -13.2578125

Token 77: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17263461649417877
    2. ' +' → logprob: -1.9226346015930176
    3. ',' → logprob: -4.422634601593018
    4. ' ,' → logprob: -8.297635078430176
    5. '   ' → logprob: -10.047635078430176
    6. '+,' → logprob: -11.547635078430176
    7. ',N' → logprob: -11.547635078430176
    8. ' ' → logprob: -12.297635078430176
    9. '    ' → logprob: -12.547635078430176
    10. ')' → logprob: -13.297635078430176

Token 78: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00318163656629622
    2. ' N' → logprob: -5.753181457519531
    3. 'len' → logprob: -13.003181457519531
    4. '   ' → logprob: -13.878181457519531
    5. '	N' → logprob: -15.003181457519531
    6. ' ' → logprob: -16.00318145751953
    7. 'n' → logprob: -16.75318145751953
    8. ' len' → logprob: -17.00318145751953
    9. '  ' → logprob: -17.25318145751953
    10. '(N' → logprob: -17.25318145751953

Token 79: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20179815590381622
    2. '):
' → logprob: -1.7017982006072998
    3. '):
' → logprob: -8.576798439025879
    4. '   ' → logprob: -9.201798439025879
    5. ')' → logprob: -10.201798439025879
    6. ' ):' → logprob: -10.826798439025879
    7. '):

' → logprob: -11.451798439025879
    8. ':' → logprob: -11.701798439025879
    9. ' ):
' → logprob: -11.701798439025879
    10. '       ' → logprob: -12.701798439025879

Token 80: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6332636475563049
    2. '   ' → logprob: -0.7582636475563049
    3. 'RIGHT' → logprob: -7.63326358795166
    4. '```' → logprob: -9.63326358795166
    5. '    ' → logprob: -10.63326358795166
    6. '           ' → logprob: -11.00826358795166
    7. '_RIGHT' → logprob: -11.38326358795166
    8. ' RIGHT' → logprob: -11.75826358795166
    9. '     ' → logprob: -11.88326358795166
    10. 'Right' → logprob: -11.88326358795166

Token 81: ' RIGHT' (ID: 51066)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5826571583747864
    2. 'RIGHT' (adapté à ' RIGHT') → logprob: -0.8326571583747864
    3. '       ' → logprob: -5.332657337188721
    4. ' RIGHT' → logprob: -6.332657337188721
    5. '_RIGHT' → logprob: -10.832656860351562
    6. 'Right' → logprob: -11.082656860351562
    7. '```' → logprob: -11.082656860351562
    8. '           ' → logprob: -11.707656860351562
    9. '  ' → logprob: -12.082656860351562
    10. '.RIGHT' → logprob: -12.082656860351562

Token 82: ' +=' (ID: 2757)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2660253345966339
    2. '=' → logprob: -1.7660253047943115
    3. ' +=' → logprob: -2.8910253047943115
    4. '+=' → logprob: -5.016025543212891
    5. '+' → logprob: -8.51602554321289
    6. '   ' → logprob: -9.26602554321289
    7. ' +' → logprob: -9.51602554321289
    8. ' ' → logprob: -10.76602554321289
    9. '    ' → logprob: -11.39102554321289
    10. ')' → logprob: -11.76602554321289

Token 83: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.4740988314151764
    2. ' W' → logprob: -0.974098801612854
    3. '	W' → logprob: -11.224099159240723
    4. 'int' → logprob: -12.599099159240723
    5. '   ' → logprob: -13.349099159240723
    6. ' ' → logprob: -13.724099159240723
    7. '+' → logprob: -14.349099159240723
    8. '(W' → logprob: -14.599099159240723
    9. '```' → logprob: -15.349099159240723
    10. ' int' → logprob: -15.474099159240723

Token 84: '_plus' (ID: 68089)
  Prédit: '_plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_plus' → logprob: -8.721228368813172e-05
    2. 'plus' → logprob: -9.375086784362793
    3. '_PLUS' → logprob: -14.125086784362793
    4. '[idx' → logprob: -14.500086784362793
    5. 'Plus' → logprob: -15.125086784362793
    6. '+' → logprob: -15.375086784362793
    7. '[_' → logprob: -15.375086784362793
    8. ' plus' → logprob: -15.750086784362793
    9. '[' → logprob: -16.62508773803711
    10. '[T' → logprob: -16.87508773803711

Token 85: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -2.9160102712921798e-05
    2. 'idx' → logprob: -10.500029563903809
    3. '[' → logprob: -14.625029563903809
    4. '	idx' → logprob: -14.625029563903809
    5. ' idx' → logprob: -15.125029563903809
    6. '[id' → logprob: -16.625028610229492
    7. '[T' → logprob: -16.875028610229492
    8. 'plus' → logprob: -17.000028610229492
    9. '[int' → logprob: -17.000028610229492
    10. '(idx' → logprob: -17.000028610229492

Token 86: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016258638352155685
    2. ')
' → logprob: -4.141258716583252
    3. ')
' → logprob: -9.141258239746094
    4. '   ' → logprob: -9.891258239746094
    5. ' )' → logprob: -10.516258239746094
    6. ')

' → logprob: -11.141258239746094
    7. '+' → logprob: -11.266258239746094
    8. ')return' → logprob: -13.141258239746094
    9. ']' → logprob: -13.516258239746094
    10. ' ' → logprob: -13.641258239746094

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2061305195093155
    2. '
' → logprob: -1.7061305046081543
    3. ' if' → logprob: -6.706130504608154
    4. '    
' → logprob: -6.706130504608154
    5. '<|end|>' → logprob: -6.831130504608154
    6. 'if' → logprob: -8.206130981445312
    7. '
' → logprob: -8.331130981445312
    8. '  
' → logprob: -8.706130981445312
    9. ' 
' → logprob: -8.956130981445312
    10. '<|end|>' → logprob: -9.206130981445312

Token 88: ' Response' (ID: 9493)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01790957897901535
    2. '
' → logprob: -4.392909526824951
    3. ' if' → logprob: -5.767909526824951
    4. '    
' → logprob: -6.642909526824951
    5. ' 
' → logprob: -8.26791000366211
    6. 'if' → logprob: -8.89291000366211
    7. '<|end|>' → logprob: -9.01791000366211
    8. '\n' → logprob: -9.26791000366211
    9. '```' → logprob: -10.39291000366211
    10. '    ' → logprob: -10.39291000366211

Token 89: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.011058199219405651
    2. '.' → logprob: -4.511058330535889
    3. ' .' → logprob: -13.38605785369873
    4. '.Append' → logprob: -13.38605785369873
    5. '.ap' → logprob: -13.51105785369873
    6. 'append' → logprob: -13.63605785369873
    7. '.app' → logprob: -13.63605785369873
    8. '.extend' → logprob: -13.88605785369873
    9. '.push' → logprob: -14.01105785369873
    10. '[' → logprob: -14.51105785369873

Token 90: '(abs' (ID: 71957)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7928628921508789
    2. '(abs' → logprob: -0.9178628921508789
    3. '(R' → logprob: -2.042862892150879
    4. '(max' → logprob: -4.417862892150879
    5. '(W' → logprob: -5.667862892150879
    6. '((' → logprob: -6.917862892150879
    7. '(min' → logprob: -7.292862892150879
    8. '(left' → logprob: -7.917862892150879
    9. '(len' → logprob: -7.917862892150879
    10. '(T' → logprob: -8.917862892150879

Token 91: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0019451762782409787
    2. '(R' → logprob: -6.2519450187683105
    3. '(W' → logprob: -12.251945495605469
    4. '((' → logprob: -12.626945495605469
    5. '(left' → logprob: -12.751945495605469
    6. '(L' → logprob: -13.376945495605469
    7. '(S' → logprob: -14.001945495605469
    8. '(C' → logprob: -14.126945495605469
    9. '(
' → logprob: -14.501945495605469
    10. '(ROOT' → logprob: -14.751945495605469

Token 92: 'LEFT' (ID: 51729)
  Prédit: 'LEFT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LEFT' → logprob: -0.006087580695748329
    2. '(' → logprob: -6.006087779998779
    3. 'RIGHT' → logprob: -6.131087779998779
    4. ' LEFT' → logprob: -6.756087779998779
    5. 'LE' → logprob: -8.881087303161621
    6. 'L' → logprob: -10.631087303161621
    7. '.LEFT' → logprob: -10.631087303161621
    8. '_LEFT' → logprob: -10.881087303161621
    9. '(R' → logprob: -11.131087303161621
    10. 'Left' → logprob: -11.256087303161621

Token 93: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5760725736618042
    2. ' -' → logprob: -0.8260725736618042
    3. '-R' → logprob: -9.326072692871094
    4. ' ' → logprob: -10.451072692871094
    5. ')' → logprob: -12.326072692871094
    6. '	' → logprob: -12.951072692871094
    7. '   ' → logprob: -13.201072692871094
    8. ' -
' → logprob: -13.951072692871094
    9. 'RIGHT' → logprob: -14.076072692871094
    10. '-
' → logprob: -14.451072692871094

Token 94: ' RIGHT' (ID: 51066)
  Prédit: 'RIGHT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RIGHT' → logprob: -0.00030042731668800116
    2. ' RIGHT' → logprob: -8.125300407409668
    3. '_RIGHT' → logprob: -13.750300407409668
    4. ' ' → logprob: -13.750300407409668
    5. '.RIGHT' → logprob: -14.000300407409668
    6. 'R' → logprob: -14.625300407409668
    7. 'Right' → logprob: -15.625300407409668
    8. 'RT' → logprob: -15.750300407409668
    9. '   ' → logprob: -15.875300407409668
    10. ')' → logprob: -16.000301361083984

Token 95: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.018651673570275307
    2. ')' → logprob: -4.518651485443115
    3. '))
' → logprob: -4.893651485443115
    4. '))
' → logprob: -9.768651962280273
    5. '))

' → logprob: -12.018651962280273
    6. ' ))' → logprob: -12.018651962280273
    7. ')
' → logprob: -12.143651962280273
    8. ')))' → logprob: -12.518651962280273
    9. ' ))
' → logprob: -14.768651962280273
    10. ' )' → logprob: -14.768651962280273

Token 96: '   ' (ID: 271)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.479240357875824
    2. '   ' → logprob: -0.979240357875824
    3. ' T' → logprob: -6.104240417480469
    4. '
' → logprob: -6.229240417480469
    5. '    
' → logprob: -7.479240417480469
    6. '	T' → logprob: -8.354240417480469
    7. '  ' → logprob: -10.604240417480469
    8. ' ' → logprob: -10.604240417480469
    9. ' 
' → logprob: -11.229240417480469
    10. '\n' → logprob: -11.354240417480469

Token 97: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' (adapté à ' T') → logprob: -0.006485384423285723
    2. '   ' → logprob: -5.131485462188721
    3. ' T' → logprob: -7.506485462188721
    4. '
' → logprob: -12.506484985351562
    5. '	T' → logprob: -13.506484985351562
    6. '    
' → logprob: -14.006484985351562
    7. ' ' → logprob: -14.256484985351562
    8. '  ' → logprob: -15.506484985351562
    9. '```' → logprob: -16.381484985351562
    10. '\
' → logprob: -16.506484985351562

Token 98: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.17782321572303772
    2. '+' → logprob: -1.9278231859207153
    3. ' +=' → logprob: -4.052823066711426
    4. '=' → logprob: -10.677823066711426
    5. '++' → logprob: -11.177823066711426
    6. '+="' → logprob: -11.677823066711426
    7. '+++' → logprob: -11.927823066711426
    8. '+='' → logprob: -11.927823066711426
    9. '<|end|>' → logprob: -12.427823066711426
    10. ' +' → logprob: -12.802823066711426

Token 99: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -17.12500762939453
    4. '１' → logprob: -19.00000762939453
    5. '```' → logprob: -19.12500762939453
    6. '  ' → logprob: -19.50000762939453
    7. '+' → logprob: -21.12500762939453
    8. '۱' → logprob: -21.18750762939453
    9. '﻿' → logprob: -21.37500762939453
    10. '
' → logprob: -21.50000762939453

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -18.250001907348633
    4. '１' → logprob: -18.375001907348633
    5. '```' → logprob: -18.625001907348633
    6. '  ' → logprob: -19.875001907348633
    7. '
' → logprob: -21.062501907348633
    8. '۱' → logprob: -21.312501907348633
    9. '+' → logprob: -21.562501907348633
    10. '१' → logprob: -21.875001907348633

Token 101: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4372684955596924
    2. 'print' → logprob: -1.0622684955596924
    3. 'min' → logprob: -5.062268257141113
    4. '  
' → logprob: -7.312268257141113
    5. 'M' → logprob: -8.437268257141113
    6. '    
' → logprob: -8.562268257141113
    7. 'max' → logprob: -8.812268257141113
    8. ' 
' → logprob: -8.937268257141113
    9. '<|end|>' → logprob: -8.937268257141113
    10. '
' → logprob: -9.187268257141113

Token 102: 'Output' (ID: 6310)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.18738359212875366
    2. '
' → logprob: -1.8123836517333984
    3. 'min' → logprob: -5.187383651733398
    4. '  
' → logprob: -7.562383651733398
    5. 'Response' → logprob: -8.062383651733398
    6. 'max' → logprob: -8.312383651733398
    7. '    
' → logprob: -8.812383651733398
    8. '```' → logprob: -8.812383651733398
    9. '<|end|>' → logprob: -8.937383651733398
    10. 'minimum' → logprob: -9.312383651733398

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08957912027835846
    2. '=' → logprob: -2.4645791053771973
    3. 's' → logprob: -7.589579105377197
    4. '_' → logprob: -9.464579582214355
    5. ' ' → logprob: -10.964579582214355
    6. '(' → logprob: -11.964579582214355
    7. '.' → logprob: -11.964579582214355
    8. '[' → logprob: -12.089579582214355
    9. ':' → logprob: -12.214579582214355
    10. '  ' → logprob: -12.964579582214355

Token 104: ' sorted' (ID: 20099)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5396271347999573
    2. ' min' → logprob: -0.9146271347999573
    3. 'str' → logprob: -4.5396270751953125
    4. ' str' → logprob: -5.5396270751953125
    5. ' Response' → logprob: -6.9146270751953125
    6. 'Response' → logprob: -7.2896270751953125
    7. '(min' → logprob: -10.289627075195312
    8. '[min' → logprob: -11.539627075195312
    9. 'max' → logprob: -11.789627075195312
    10. '"' → logprob: -11.914627075195312

Token 105: '(Response' (ID: 83395)
  Prédit: '(Response'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Response' → logprob: -3.7146746763028204e-05
    2. '(' → logprob: -10.37503719329834
    3. 'Response' → logprob: -12.62503719329834
    4. '<Response' → logprob: -14.50003719329834
    5. '(Output' → logprob: -14.62503719329834
    6. '(R' → logprob: -15.12503719329834
    7. '(W' → logprob: -15.50003719329834
    8. '(response' → logprob: -15.62503719329834
    9. '((' → logprob: -15.75003719329834
    10. '([' → logprob: -15.87503719329834

Token 106: ')[' (ID: 13637)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0046341149136424065
    2. ')
' → logprob: -5.379633903503418
    3. '()' → logprob: -11.629633903503418
    4. ' )' → logprob: -13.504633903503418
    5. '())' → logprob: -14.254633903503418
    6. ')
' → logprob: -14.254633903503418
    7. ')[' → logprob: -14.504633903503418
    8. ')

' → logprob: -14.629633903503418
    9. '[' → logprob: -14.754633903503418
    10. '()
' → logprob: -15.754633903503418

Token 107: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.039721209555864334
    2. '0' → logprob: -3.4147212505340576
    3. ':' → logprob: -5.1647210121154785
    4. ' ' → logprob: -8.914721488952637
    5. '-' → logprob: -9.289721488952637
    6. ':-' → logprob: -9.664721488952637
    7. ' :' → logprob: -10.664721488952637
    8. '::-' → logprob: -11.289721488952637
    9. ':]' → logprob: -13.039721488952637
    10. '::' → logprob: -13.164721488952637

Token 108: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00031282080453820527
    2. ']' → logprob: -9.000312805175781
    3. '<|end|>' → logprob: -9.250312805175781
    4. ')
' → logprob: -9.875312805175781
    5. '}' → logprob: -10.375312805175781
    6. '+' → logprob: -12.500312805175781
    7. ' )' → logprob: -12.750312805175781
    8. '```' → logprob: -14.000312805175781
    9. ')]' → logprob: -14.625312805175781
    10. '<|end|>' → logprob: -14.750312805175781

Token 109: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00024739265791140497
    2. ' print' → logprob: -9.12524700164795
    3. '
' → logprob: -9.25024700164795
    4. '<|end|>' → logprob: -10.12524700164795
    5. '```' → logprob: -14.12524700164795
    6. ')' → logprob: -15.00024700164795
    7. '#print' → logprob: -15.25024700164795
    8. '\n' → logprob: -15.87524700164795
    9. 'for' → logprob: -16.125247955322266
    10. '#' → logprob: -16.125247955322266

Token 110: '(Output' (ID: 132866)
  Prédit: '(Output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Output' → logprob: -0.47408872842788696
    2. '(' → logprob: -0.974088728427887
    3. '()' → logprob: -12.974088668823242
    4. '(output' → logprob: -13.099088668823242
    5. '(Input' → logprob: -13.474088668823242
    6. '('' → logprob: -13.849088668823242
    7. '("("' → logprob: -13.849088668823242
    8. '(O' → logprob: -13.974088668823242
    9. ' (' → logprob: -13.974088668823242
    10. '(
' → logprob: -14.099088668823242

Token 111: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -14.125000953674316
    3. '))' → logprob: -15.625000953674316
    4. ')
' → logprob: -18.000001907348633
    5. ')`' → logprob: -18.250001907348633
    6. '`)' → logprob: -18.500001907348633
    7. '')' → logprob: -19.000001907348633
    8. '）' → logprob: -19.375001907348633
    9. ')}' → logprob: -20.375001907348633
    10. '")' → logprob: -20.375001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 109
Tokens correctement prédits (1ère position, stricte): 38
Tokens correctement prédits (1ère position, avec adaptation): 41
Tokens correctement prédits (top 10): 86
Précision stricte (1ère position): 34.86%
Précision adaptée (1ère position): 37.61%
Précision (top 10): 78.90%
================================================================================
