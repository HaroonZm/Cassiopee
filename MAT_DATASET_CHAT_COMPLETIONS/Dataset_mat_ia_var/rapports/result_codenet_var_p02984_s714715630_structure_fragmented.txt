================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:52:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def get_input_n():
    return int(input())

def get_input_list():
    return list(map(int, input().split()))

def calc_sum(li):
    return sum(li)

def calc_length(li):
    return len(li)

def calc_kumi(lee):
    return lee // 2

def calc_tmp(li, kumi):
    def get_index(i):
        return 2 * (i - 1)
    def get_value(i):
        return 2 * li[get_index(i)]
    tmp = 0
    for i in range(1, kumi + 1):
        tmp += get_value(i)
    return tmp

def calc_last(s, tmp):
    return s - tmp

def get_last_element(li):
    return li[-1]

def calc_first(last_elem, last):
    return last_elem * 2 - last

def init_ans_li(first):
    return [first]

def append_to_ans(ans_li, l):
    last_val = ans_li[-1]
    ans_li.append(l * 2 - last_val)

def process_ans_li(li, first):
    ans_li = init_ans_li(first)
    for l in li:
        append_to_ans(ans_li, l)
    return ans_li

def remove_last(ans_li):
    ans_li.pop(-1)

def print_ans_li(ans_li):
    print(*ans_li)

def main():
    n = get_input_n()
    li = get_input_list()
    s = calc_sum(li)
    lee = calc_length(li)
    kumi = calc_kumi(lee)
    tmp = calc_tmp(li, kumi)
    last = calc_last(s, tmp)
    last_elem = get_last_element(li)
    first = calc_first(last_elem, last)
    ans_li = process_ans_li(li, first)
    remove_last(ans_li)
    print_ans_li(ans_li)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' get' (ID: 717)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '_n' (ID: 2170)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015994871500879526
    2. '_' → logprob: -6.626599311828613
    3. ' (' → logprob: -9.376599311828613
    4. '():' → logprob: -9.376599311828613
    5. '```' → logprob: -10.751599311828613
    6. '()' → logprob: -11.126599311828613
    7. '(:' → logprob: -11.501599311828613
    8. '("("' → logprob: -11.876599311828613
    9. ':' → logprob: -12.376599311828613
    10. '(_:' → logprob: -12.501599311828613

Token 4: '():
' (ID: 8595)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9543507099151611
    2. 'ame' → logprob: -1.4543507099151611
    3. 'umber' → logprob: -1.9543507099151611
    4. 'a' → logprob: -2.079350709915161
    5. 'u' → logprob: -2.704350709915161
    6. '(' → logprob: -3.954350709915161
    7. '```' → logprob: -4.579350471496582
    8. '(a' → logprob: -5.079350471496582
    9. '_a' → logprob: -5.704350471496582
    10. '(u' → logprob: -6.079350471496582

Token 5: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.3064875602722168
    2. '   ' → logprob: -1.9314875602722168
    3. ''' → logprob: -3.306487560272217
    4. '(' → logprob: -4.181487560272217
    5. '\' → logprob: -4.306487560272217
    6. ' ' → logprob: -4.806487560272217
    7. '``' → logprob: -5.181487560272217
    8. ' return' → logprob: -5.556487560272217
    9. '\n' → logprob: -5.681487560272217
    10. '<|end|>' → logprob: -5.806487560272217

Token 6: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.9016407132148743
    2. 'x' → logprob: -1.1516406536102295
    3. 'n' → logprob: -2.5266406536102295
    4. '   ' → logprob: -2.9016406536102295
    5. 'i' → logprob: -3.0266406536102295
    6. 'r' → logprob: -3.2766406536102295
    7. 'input' → logprob: -4.151640892028809
    8. ' ' → logprob: -4.401640892028809
    9. '```' → logprob: -4.901640892028809
    10. 'a' → logprob: -5.401640892028809

Token 7: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.6168900728225708
    2. ' input' → logprob: -0.9918900728225708
    3. ' ' → logprob: -2.4918899536132812
    4. 'input' → logprob: -5.616889953613281
    5. '  ' → logprob: -6.741889953613281
    6. 'int' → logprob: -6.866889953613281
    7. ' None' → logprob: -7.616889953613281
    8. ' n' → logprob: -8.741889953613281
    9. ' []' → logprob: -8.991889953613281
    10. ' ' → logprob: -10.116889953613281

Token 8: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007776625920087099
    2. '('' → logprob: -5.007776737213135
    3. ''' → logprob: -7.132776737213135
    4. '("("' → logprob: -9.382776260375977
    5. '```' → logprob: -9.882776260375977
    6. '40' → logprob: -10.382776260375977
    7. '`' → logprob: -11.257776260375977
    8. '32' → logprob: -11.382776260375977
    9. '"' → logprob: -11.507776260375977
    10. ' (' → logprob: -11.632776260375977

Token 9: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06835140287876129
    2. '()' → logprob: -2.8183515071868896
    3. '())' → logprob: -5.5683512687683105
    4. '('' → logprob: -6.4433512687683105
    5. '("("' → logprob: -7.6933512687683105
    6. '()))' → logprob: -9.068351745605469
    7. '(""))' → logprob: -9.193351745605469
    8. '(()' → logprob: -9.193351745605469
    9. ')' → logprob: -9.568351745605469
    10. '(
' → logprob: -10.443351745605469

Token 10: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3142156600952148
    2. '\n' → logprob: -1.5642156600952148
    3. 'def' → logprob: -1.9392156600952148
    4. '+' → logprob: -2.689215660095215
    5. '
' → logprob: -3.064215660095215
    6. '*' → logprob: -3.189215660095215
    7. '#' → logprob: -3.189215660095215
    8. 'n' → logprob: -3.314215660095215
    9. ' ' → logprob: -4.189215660095215
    10. ')' → logprob: -4.564215660095215

Token 11: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.02426968142390251
    2. ' ' → logprob: -4.8992695808410645
    3. '_' → logprob: -5.2742695808410645
    4. ' space' → logprob: -5.5242695808410645
    5. ' calculate' → logprob: -5.5242695808410645
    6. ' add' → logprob: -7.5242695808410645
    7. ' user' → logprob: -7.7742695808410645
    8. ' process' → logprob: -8.399270057678223
    9. ' read' → logprob: -8.774270057678223
    10. 'get' → logprob: -8.774270057678223

Token 12: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.18561360239982605
    2. '_' → logprob: -2.1856136322021484
    3. '_n' → logprob: -3.1856136322021484
    4. '_output' → logprob: -4.685613632202148
    5. ' _' → logprob: -6.810613632202148
    6. '_name' → logprob: -6.935613632202148
    7. '_value' → logprob: -7.060613632202148
    8. '_number' → logprob: -7.060613632202148
    9. '_user' → logprob: -7.560613632202148
    10. '_data' → logprob: -8.685613632202148

Token 13: '_list' (ID: 4162)
  Prédit: '_n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.4292745292186737
    2. '_' → logprob: -1.054274559020996
    3. '_s' → logprob: -8.054274559020996
    4. '_a' → logprob: -9.554274559020996
    5. '(' → logprob: -9.804274559020996
    6. '_name' → logprob: -11.054274559020996
    7. '_(' → logprob: -11.054274559020996
    8. '```' → logprob: -11.554274559020996
    9. '_o' → logprob: -11.554274559020996
    10. 'n' → logprob: -11.804274559020996

Token 14: '():
' (ID: 8595)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6403382420539856
    2. '(' → logprob: -0.7653382420539856
    3. '_list' → logprob: -6.64033842086792
    4. '_(' → logprob: -6.64033842086792
    5. '```' → logprob: -7.64033842086792
    6. '[' → logprob: -8.015337944030762
    7. ' (' → logprob: -8.015337944030762
    8. '(_' → logprob: -8.140337944030762
    9. '_^(' → logprob: -8.140337944030762
    10. '_n' → logprob: -8.140337944030762

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012677322374656796
    2. ' return' → logprob: -7.126267910003662
    3. '    ' → logprob: -8.251267433166504
    4. 'return' → logprob: -9.501267433166504
    5. '[]' → logprob: -9.876267433166504
    6. '[' → logprob: -10.001267433166504
    7. '    
' → logprob: -11.751267433166504
    8. '```' → logprob: -12.501267433166504
    9. ' []' → logprob: -12.501267433166504
    10. '(' → logprob: -13.126267433166504

Token 16: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5264621376991272
    2. 'return' (adapté à ' return') → logprob: -1.5264620780944824
    3. ' return' → logprob: -1.6514620780944824
    4. '    ' → logprob: -9.02646255493164
    5. ' ' → logprob: -10.52646255493164
    6. '[]' → logprob: -10.52646255493164
    7. '	return' → logprob: -11.77646255493164
    8. '[' → logprob: -12.02646255493164
    9. '    
' → logprob: -12.02646255493164
    10. 'data' → logprob: -12.15146255493164

Token 17: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.04902933910489082
    2. 'list' → logprob: -3.1740293502807617
    3. ' [' → logprob: -5.674029350280762
    4. '[list' → logprob: -6.299029350280762
    5. '[' → logprob: -7.549029350280762
    6. ' ' → logprob: -9.049029350280762
    7. '[int' → logprob: -9.799029350280762
    8. ' []' → logprob: -11.049029350280762
    9. '[input' → logprob: -12.299029350280762
    10. '  ' → logprob: -12.549029350280762

Token 18: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03361791744828224
    2. '(int' → logprob: -4.158617973327637
    3. '(input' → logprob: -4.158617973327637
    4. '(map' → logprob: -7.158617973327637
    5. '(range' → logprob: -7.283617973327637
    6. '()' → logprob: -9.408617973327637
    7. '(eval' → logprob: -9.533617973327637
    8. '(
' → logprob: -9.783617973327637
    9. '(

' → logprob: -10.533617973327637
    10. '(list' → logprob: -11.658617973327637

Token 19: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0038155110087245703
    2. '(' → logprob: -5.628815650939941
    3. 'int' → logprob: -8.628815650939941
    4. '(
' → logprob: -11.628815650939941
    5. '<int' → logprob: -12.003815650939941
    6. '=int' → logprob: -12.128815650939941
    7. ',int' → logprob: -12.128815650939941
    8. ')' → logprob: -12.378815650939941
    9. ' (' → logprob: -13.378815650939941
    10. ' int' → logprob: -13.628815650939941

Token 20: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.8877698183059692
    2. '(input' → logprob: -1.0127698183059692
    3. ',' → logprob: -1.5127698183059692
    4. '(' → logprob: -6.26276969909668
    5. 'input' → logprob: -6.38776969909668
    6. ' ,' → logprob: -7.76276969909668
    7. ' input' → logprob: -8.13776969909668
    8. '))' → logprob: -8.26276969909668
    9. ' (' → logprob: -8.88776969909668
    10. ')' → logprob: -9.51276969909668

Token 21: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3134699761867523
    2. ' input' → logprob: -1.3134700059890747
    3. '(input' → logprob: -8.813469886779785
    4. ',input' → logprob: -10.813469886779785
    5. '   ' → logprob: -10.938469886779785
    6. '=input' → logprob: -12.063469886779785
    7. ' ' → logprob: -12.188469886779785
    8. '	input' → logprob: -12.688469886779785
    9. '<input' → logprob: -13.563469886779785
    10. ')' → logprob: -13.688469886779785

Token 22: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0020847124978899956
    2. '()' → logprob: -6.877084732055664
    3. '()))' → logprob: -7.002084732055664
    4. '))' → logprob: -9.877084732055664
    5. '())' → logprob: -10.127084732055664
    6. '())))' → logprob: -11.002084732055664
    7. ')' → logprob: -11.627084732055664
    8. '()));' → logprob: -11.877084732055664
    9. ' ().' → logprob: -12.627084732055664
    10. ')))' → logprob: -12.752084732055664

Token 23: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.004090866539627314
    2. 'strip' → logprob: -5.504090785980225
    3. 'rstrip' → logprob: -11.504091262817383
    4. ' split' → logprob: -13.004091262817383
    5. '(split' → logprob: -17.004091262817383
    6. ' strip' → logprob: -17.129091262817383
    7. '.split' → logprob: -17.879091262817383
    8. 'spl' → logprob: -18.004091262817383
    9. ')' → logprob: -18.504091262817383
    10. 'read' → logprob: -19.129091262817383

Token 24: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.03186628594994545
    2. '()' → logprob: -4.156866073608398
    3. '))' → logprob: -4.281866073608398
    4. '())' → logprob: -7.156866073608398
    5. '())))' → logprob: -7.281866073608398
    6. ')))' → logprob: -8.531866073608398
    7. '(' → logprob: -8.656866073608398
    8. '()))
' → logprob: -10.781866073608398
    9. ')' → logprob: -11.406866073608398
    10. '()));' → logprob: -11.906866073608398

Token 25: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011660235933959484
    2. 'd' → logprob: -4.761660099029541
    3. '\' → logprob: -7.136660099029541
    4. '

' → logprob: -7.261660099029541
    5. '
' → logprob: -7.386660099029541
    6. 'n' → logprob: -7.636660099029541
    7. '```' → logprob: -8.7616605758667
    8. '\n' → logprob: -9.5116605758667
    9. '#' → logprob: -9.8866605758667
    10. 'a' → logprob: -10.3866605758667

Token 26: ' calc' (ID: 25691)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6188246011734009
    2. ' solve' → logprob: -1.7438246011734009
    3. ' calculate' → logprob: -2.7438244819641113
    4. ' get' → logprob: -3.2438244819641113
    5. ' count' → logprob: -3.6188244819641113
    6. ' find' → logprob: -3.7438244819641113
    7. ' process' → logprob: -3.8688244819641113
    8. ' is' → logprob: -3.8688244819641113
    9. ' factorial' → logprob: -4.243824481964111
    10. ' max' → logprob: -4.618824481964111

Token 27: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.2774941325187683
    2. 'ulate' → logprob: -2.152494192123413
    3. '_' → logprob: -3.152494192123413
    4. '_factor' → logprob: -3.277494192123413
    5. '_max' → logprob: -4.777493953704834
    6. '_area' → logprob: -5.652493953704834
    7. '_val' → logprob: -5.777493953704834
    8. '_square' → logprob: -5.902493953704834
    9. '_value' → logprob: -6.402493953704834
    10. '_score' → logprob: -6.527493953704834

Token 28: '(li' (ID: 111234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006332583259791136
    2. '_' → logprob: -6.1313323974609375
    3. '()' → logprob: -6.5063323974609375
    4. '_sum' → logprob: -6.8813323974609375
    5. ')' → logprob: -8.006332397460938
    6. 's' → logprob: -8.256332397460938
    7. '(_)' → logprob: -8.881332397460938
    8. '(a' → logprob: -9.506332397460938
    9. '_of' → logprob: -9.506332397460938
    10. '_total' → logprob: -10.131332397460938

Token 29: '):
' (ID: 1883)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.07048650830984116
    2. 's' → logprob: -3.070486545562744
    3. ')' → logprob: -4.195486545562744
    4. '):' → logprob: -5.445486545562744
    5. '):
' → logprob: -7.070486545562744
    6. 'sts' → logprob: -8.070486068725586
    7. '[' → logprob: -8.570486068725586
    8. 't' → logprob: -8.945486068725586
    9. '))' → logprob: -9.195486068725586
    10. 'stin' → logprob: -9.195486068725586

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008326265960931778
    2. '(' → logprob: -5.508326053619385
    3. ' return' → logprob: -7.133326053619385
    4. '[' → logprob: -7.383326053619385
    5. ' ' → logprob: -7.383326053619385
    6. ':' → logprob: -7.508326053619385
    7. '    ' → logprob: -7.758326053619385
    8. '_' → logprob: -8.383326530456543
    9. 'return' → logprob: -8.383326530456543
    10. '  ' → logprob: -8.758326530456543

Token 31: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2024446427822113
    2. '   ' → logprob: -1.8274446725845337
    3. 'return' (adapté à ' return') → logprob: -4.327444553375244
    4. ' sum' → logprob: -4.827444553375244
    5. 'sum' → logprob: -7.452444553375244
    6. ' ' → logprob: -8.077445030212402
    7. '    ' → logprob: -8.327445030212402
    8. ' s' → logprob: -10.202445030212402
    9. '  ' → logprob: -10.327445030212402
    10. ' ' → logprob: -12.452445030212402

Token 32: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.004629126749932766
    2. 'sum' → logprob: -5.379629135131836
    3. ' ' → logprob: -12.504629135131836
    4. '(sum' → logprob: -12.879629135131836
    5. ' ' → logprob: -13.879629135131836
    6. '	sum' → logprob: -14.254629135131836
    7. '   ' → logprob: -15.004629135131836
    8. '=sum' → logprob: -15.629629135131836
    9. '  ' → logprob: -16.004629135131836
    10. ' max' → logprob: -16.129629135131836

Token 33: '(li' (ID: 111234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5760015845298767
    2. '(li' → logprob: -0.8260015845298767
    3. ' (' → logprob: -11.201001167297363
    4. '(ll' → logprob: -11.326001167297363
    5. '((' → logprob: -11.576001167297363
    6. '(l' → logprob: -12.576001167297363
    7. '(list' → logprob: -12.951001167297363
    8. '(len' → logprob: -13.076001167297363
    9. '<li' → logprob: -13.326001167297363
    10. '(
' → logprob: -13.451001167297363

Token 34: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03805456683039665
    2. '))' → logprob: -3.2880544662475586
    3. ')))' → logprob: -11.788054466247559
    4. '   ' → logprob: -13.038054466247559
    5. ')
' → logprob: -14.038054466247559
    6. ' )' → logprob: -14.538054466247559
    7. '])' → logprob: -15.038054466247559
    8. ')>' → logprob: -15.288054466247559
    9. '())' → logprob: -15.413054466247559
    10. '[' → logprob: -15.413054466247559

Token 35: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.026953011751174927
    2. '(' → logprob: -4.651953220367432
    3. '_' → logprob: -5.276953220367432
    4. '<|end|>' → logprob: -6.151953220367432
    5. '
' → logprob: -6.651953220367432
    6. '

' → logprob: -6.776953220367432
    7. '\' → logprob: -7.026953220367432
    8. '(
' → logprob: -7.151953220367432
    9. '()' → logprob: -7.151953220367432
    10. '[' → logprob: -7.401953220367432

Token 36: ' calc' (ID: 25691)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2075960636138916
    2. ' calc' → logprob: -2.2075960636138916
    3. ' get' → logprob: -2.8325960636138916
    4. ' calculate' → logprob: -4.4575958251953125
    5. ' multiply' → logprob: -5.7075958251953125
    6. ' max' → logprob: -6.9575958251953125
    7. ' add' → logprob: -7.0825958251953125
    8. ' test' → logprob: -7.8325958251953125
    9. ' find' → logprob: -8.082595825195312
    10. ' print' → logprob: -8.457595825195312

Token 37: '_length' (ID: 11514)
  Prédit: '_product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_product' → logprob: -0.21439658105373383
    2. '_average' → logprob: -2.8393964767456055
    3. '_max' → logprob: -3.2143964767456055
    4. '_diff' → logprob: -3.8393964767456055
    5. '_avg' → logprob: -3.9643964767456055
    6. '_' → logprob: -3.9643964767456055
    7. '_prod' → logprob: -4.3393964767456055
    8. '_mul' → logprob: -4.5893964767456055
    9. '_m' → logprob: -5.3393964767456055
    10. '_difference' → logprob: -6.2143964767456055

Token 38: '(li' (ID: 111234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2533572018146515
    2. '(li' → logprob: -1.503357172012329
    3. '(len' → logprob: -7.628357410430908
    4. ' (' → logprob: -8.87835693359375
    5. '(ls' → logprob: -8.87835693359375
    6. '_' → logprob: -9.25335693359375
    7. '(lst' → logprob: -9.50335693359375
    8. '_li' → logprob: -9.50335693359375
    9. '<|end|>' → logprob: -9.87835693359375
    10. '(ll' → logprob: -10.37835693359375

Token 39: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00507210660725832
    2. ')' → logprob: -5.380072116851807
    3. ' ):' → logprob: -8.380071640014648
    4. '):
' → logprob: -8.505071640014648
    5. '   ' → logprob: -11.630071640014648
    6. ' ' → logprob: -13.005071640014648
    7. ')):' → logprob: -13.380071640014648
    8. ' )' → logprob: -13.505071640014648
    9. '):
' → logprob: -14.130071640014648
    10. ':' → logprob: -14.255071640014648

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0640198215842247
    2. ' return' → logprob: -2.8140199184417725
    3. ' len' → logprob: -6.439019680023193
    4. 'return' → logprob: -7.939019680023193
    5. '    ' → logprob: -9.939020156860352
    6. 'len' → logprob: -10.189020156860352
    7. ' ' → logprob: -12.439020156860352
    8. '```' → logprob: -13.314020156860352
    9. '  ' → logprob: -13.689020156860352
    10. '	return' → logprob: -14.064020156860352

Token 41: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7673969864845276
    2. 'return' (adapté à ' return') → logprob: -1.0173969268798828
    3. '   ' → logprob: -1.7673969268798828
    4. 'len' → logprob: -5.767396926879883
    5. ' len' → logprob: -8.017396926879883
    6. '```' → logprob: -12.517396926879883
    7. ' ' → logprob: -12.892396926879883
    8. '	return' → logprob: -13.017396926879883
    9. '  ' → logprob: -13.892396926879883
    10. '    ' → logprob: -14.142396926879883

Token 42: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.38689273595809937
    2. 'len' → logprob: -1.1368927955627441
    3. ' ' → logprob: -11.761892318725586
    4. '   ' → logprob: -12.136892318725586
    5. '(len' → logprob: -12.636892318725586
    6. ' ' → logprob: -12.886892318725586
    7. '	len' → logprob: -14.011892318725586
    8. '  ' → logprob: -14.261892318725586
    9. '=len' → logprob: -15.136892318725586
    10. '[len' → logprob: -15.136892318725586

Token 43: '(li' (ID: 111234)
  Prédit: '(li'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(li' → logprob: -0.0017070822650566697
    2. '(' → logprob: -6.376707077026367
    3. 'li' → logprob: -13.626707077026367
    4. ' (' → logprob: -14.126707077026367
    5. '<li' → logprob: -14.251707077026367
    6. '(le' → logprob: -14.876707077026367
    7. '(lo' → logprob: -15.376707077026367
    8. '(ll' → logprob: -15.501707077026367
    9. '(len' → logprob: -15.501707077026367
    10. '(mi' → logprob: -15.751707077026367

Token 44: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011164903844473884
    2. '))' → logprob: -9.12511157989502
    3. ')
' → logprob: -14.25011157989502
    4. ')))' → logprob: -14.50011157989502
    5. '())' → logprob: -14.75011157989502
    6. 'li' → logprob: -15.50011157989502
    7. '   ' → logprob: -15.87511157989502
    8. ')il' → logprob: -16.125112533569336
    9. '(li' → logprob: -16.125112533569336
    10. '()' → logprob: -16.250112533569336

Token 45: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0017151589272543788
    2. 'd' → logprob: -7.251715183258057
    3. 'n' → logprob: -7.626715183258057
    4. '\' → logprob: -8.626714706420898
    5. 'for' → logprob: -9.876714706420898
    6. '\n' → logprob: -10.501714706420898
    7. '#' → logprob: -10.501714706420898
    8. '

' → logprob: -10.751714706420898
    9. 'de' → logprob: -10.751714706420898
    10. '```' → logprob: -10.876714706420898

Token 46: ' calc' (ID: 25691)
  Prédit: ' calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.5037056803703308
    2. ' main' → logprob: -1.7537057399749756
    3. ' get' → logprob: -2.0037057399749756
    4. ' calculate' → logprob: -3.8787057399749756
    5. ' is' → logprob: -4.2537055015563965
    6. ' max' → logprob: -4.6287055015563965
    7. ' process' → logprob: -4.8787055015563965
    8. ' find' → logprob: -4.8787055015563965
    9. ' multiply' → logprob: -5.1287055015563965
    10. ' print' → logprob: -5.7537055015563965

Token 47: '_k' (ID: 11637)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.7356152534484863
    2. '_average' → logprob: -1.2356152534484863
    3. '_product' → logprob: -1.8606152534484863
    4. '_avg' → logprob: -2.9856152534484863
    5. '_min' → logprob: -4.735615253448486
    6. '_sum' → logprob: -4.985615253448486
    7. '_mean' → logprob: -5.985615253448486
    8. '_' → logprob: -6.610615253448486
    9. '_prod' → logprob: -6.985615253448486
    10. '_diff' → logprob: -7.485615253448486

Token 48: 'umi' (ID: 10939)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.559703528881073
    2. '_length' → logprob: -1.9347035884857178
    3. '_th' → logprob: -2.5597035884857178
    4. 'th' → logprob: -2.8097035884857178
    5. '_' → logprob: -3.1847035884857178
    6. 'eep' → logprob: -3.9347035884857178
    7. '_fold' → logprob: -5.059703350067139
    8. '_n' → logprob: -5.184703350067139
    9. 'e' → logprob: -5.309703350067139
    10. '_len' → logprob: -5.434703350067139

Token 49: '(' (ID: 7)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.9591336846351624
    2. 'wake' → logprob: -1.0841336250305176
    3. 'wari' → logprob: -3.4591336250305176
    4. 'g' → logprob: -3.4591336250305176
    5. 'wa' → logprob: -3.5841336250305176
    6. 'uchi' → logprob: -3.5841336250305176
    7. 'ji' → logprob: -3.9591336250305176
    8. 'n' → logprob: -3.9591336250305176
    9. 'tar' → logprob: -4.584133625030518
    10. '()' → logprob: -4.834133625030518

Token 50: 'lee' (ID: 10769)
  Prédit: 'li'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'li' → logprob: -0.003827271983027458
    2. '(li' → logprob: -7.378827095031738
    3. '_li' → logprob: -7.503827095031738
    4. 'l' → logprob: -7.503827095031738
    5. ')' → logprob: -7.753827095031738
    6. 'list' → logprob: -8.003827095031738
    7. ' li' → logprob: -8.003827095031738
    8. 'a' → logprob: -8.003827095031738
    9. 'n' → logprob: -9.128827095031738
    10. 'la' → logprob: -9.503827095031738

Token 51: '):
' (ID: 1883)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7489081621170044
    2. 't' → logprob: -1.2489081621170044
    3. 'li' → logprob: -1.7489081621170044
    4. 'l' → logprob: -3.873908042907715
    5. 'ts' → logprob: -4.873908042907715
    6. 'r' → logprob: -5.248908042907715
    7. '_li' → logprob: -5.248908042907715
    8. ')' → logprob: -5.748908042907715
    9. '(li' → logprob: -6.373908042907715
    10. '_list' → logprob: -6.498908042907715

Token 52: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8485758304595947
    2. '(' → logprob: -1.2235758304595947
    3. '[' → logprob: -2.7235758304595947
    4. ':' → logprob: -2.9735758304595947
    5. ' lee' → logprob: -3.0985758304595947
    6. 'lee' → logprob: -3.2235758304595947
    7. '    ' → logprob: -4.098575592041016
    8. ' (' → logprob: -4.473575592041016
    9. ' :' → logprob: -4.973575592041016
    10. ' []' → logprob: -5.098575592041016

Token 53: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8241894245147705
    2. 'k' → logprob: -2.3241894245147705
    3. ' k' → logprob: -2.4491894245147705
    4. ' return' → logprob: -2.6991894245147705
    5. 'r' → logprob: -3.0741894245147705
    6. ' result' → logprob: -3.1991894245147705
    7. ' r' → logprob: -3.1991894245147705
    8. ' l' → logprob: -3.5741894245147705
    9. ' ' → logprob: -3.9491894245147705
    10. '[' → logprob: -3.9491894245147705

Token 54: ' lee' (ID: 89465)
  Prédit: ' lee'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lee' → logprob: -0.9347206354141235
    2. ' calc' → logprob: -1.6847206354141235
    3. ' [' → logprob: -2.559720516204834
    4. ' sum' → logprob: -2.559720516204834
    5. ' len' → logprob: -2.809720516204834
    6. '[' → logprob: -3.309720516204834
    7. 'len' → logprob: -3.559720516204834
    8. 'calc' → logprob: -3.559720516204834
    9. 'lee' → logprob: -3.684720516204834
    10. 'sum' → logprob: -3.809720516204834

Token 55: ' //' (ID: 602)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.17921800911426544
    2. '+' → logprob: -3.304218053817749
    3. '.' → logprob: -3.429218053817749
    4. '*' → logprob: -4.17921781539917
    5. '[::-' → logprob: -4.17921781539917
    6. 's' → logprob: -4.55421781539917
    7. ' +' → logprob: -4.80421781539917
    8. '[:]' → logprob: -5.30421781539917
    9. ' ' → logprob: -5.42921781539917
    10. '_' → logprob: -5.42921781539917

Token 56: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07712790369987488
    2. '3' → logprob: -3.4521279335021973
    3. '10' → logprob: -3.9521279335021973
    4. '4' → logprob: -4.952127933502197
    5. '5' → logprob: -5.202127933502197
    6. ' ' → logprob: -5.577127933502197
    7. '100' → logprob: -6.452127933502197
    8. 'calc' → logprob: -6.952127933502197
    9. 'len' → logprob: -6.952127933502197
    10. '7' → logprob: -7.202127933502197

Token 57: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.24346943199634552
    2. '10' → logprob: -2.368469476699829
    3. '3' → logprob: -2.618469476699829
    4. '5' → logprob: -4.24346923828125
    5. '4' → logprob: -4.36846923828125
    6. '100' → logprob: -4.61846923828125
    7. 'calc' → logprob: -6.24346923828125
    8. '7' → logprob: -6.36846923828125
    9. '6' → logprob: -6.74346923828125
    10. 'len' → logprob: -6.99346923828125

Token 58: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25671324133872986
    2. '<|end|>' → logprob: -2.1317131519317627
    3. '_' → logprob: -2.5067131519317627
    4. '\' → logprob: -5.381713390350342
    5. ' ' → logprob: -5.506713390350342
    6. '*' → logprob: -5.506713390350342
    7. '
' → logprob: -5.881713390350342
    8. '<|end|>' → logprob: -6.256713390350342
    9. 'n' → logprob: -6.631713390350342
    10. '#' → logprob: -7.006713390350342

Token 59: 'def' (ID: 1314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4363149106502533
    2. 'def' → logprob: -1.3113149404525757
    3. '<|end|>' → logprob: -3.686314821243286
    4. '
' → logprob: -4.561315059661865
    5. '(' → logprob: -4.686315059661865
    6. 'd' → logprob: -4.686315059661865
    7. 'n' → logprob: -4.811315059661865
    8. '\' → logprob: -5.061315059661865
    9. 'de' → logprob: -6.061315059661865
    10. ' ' → logprob: -6.436315059661865

Token 60: ' calc' (ID: 25691)
  Prédit: ' calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.5154738426208496
    2. ' main' → logprob: -1.3904738426208496
    3. ' get' → logprob: -2.0154738426208496
    4. ' calculate' → logprob: -4.51547384262085
    5. ' ' → logprob: -5.26547384262085
    6. ' _' → logprob: -7.14047384262085
    7. 'calc' → logprob: -7.51547384262085
    8. ' solve' → logprob: -8.015474319458008
    9. ' process' → logprob: -8.265474319458008
    10. ' compute' → logprob: -8.265474319458008

Token 61: '_tmp' (ID: 35658)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.565440833568573
    2. '_k' → logprob: -1.6904408931732178
    3. 'sum' → logprob: -2.4404408931732178
    4. '_length' → logprob: -2.6904408931732178
    5. 'k' → logprob: -2.9404408931732178
    6. 'length' → logprob: -4.565440654754639
    7. '_len' → logprob: -5.065440654754639
    8. '_product' → logprob: -5.690440654754639
    9. '_diff' → logprob: -6.815440654754639
    10. 'product' → logprob: -6.815440654754639

Token 62: '(li' (ID: 111234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1385621726512909
    2. '_sum' → logprob: -3.2635622024536133
    3. '(li' → logprob: -3.3885622024536133
    4. '(k' → logprob: -4.513562202453613
    5. '(tmp' → logprob: -4.638562202453613
    6. '_' → logprob: -4.888562202453613
    7. '(sum' → logprob: -5.138562202453613
    8. '(s' → logprob: -5.388562202453613
    9. '(n' → logprob: -6.138562202453613
    10. '(_' → logprob: -6.263562202453613

Token 63: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008354994468390942
    2. ')' → logprob: -5.758355140686035
    3. '):
' → logprob: -5.883355140686035
    4. '[' → logprob: -6.758355140686035
    5. ',' → logprob: -7.383355140686035
    6. ' ):' → logprob: -8.508355140686035
    7. '[:' → logprob: -8.883355140686035
    8. '   ' → logprob: -8.883355140686035
    9. ':' → logprob: -10.758355140686035
    10. '):

' → logprob: -11.383355140686035

Token 64: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8087555766105652
    2. ' k' → logprob: -2.43375563621521
    3. 'tmp' → logprob: -2.43375563621521
    4. 'idx' → logprob: -2.68375563621521
    5. 'n' → logprob: -3.05875563621521
    6. ' idx' → logprob: -3.30875563621521
    7. 'i' → logprob: -3.43375563621521
    8. 'li' → logprob: -3.55875563621521
    9. ' tmp' → logprob: -4.058755397796631
    10. ' n' → logprob: -4.058755397796631

Token 65: 'umi' (ID: 10939)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.15552541613578796
    2. 'umi' → logprob: -2.5305254459381104
    3. ',' → logprob: -3.1555254459381104
    4. 'um' → logprob: -5.030525207519531
    5. 'u' → logprob: -5.405525207519531
    6. ')' → logprob: -5.405525207519531
    7. '):
' → logprob: -6.530525207519531
    8. '=' → logprob: -7.405525207519531
    9. '_' → logprob: -7.655525207519531
    10. 'i' → logprob: -7.905525207519531

Token 66: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010444575920701027
    2. '):
' → logprob: -4.635444641113281
    3. ',' → logprob: -8.260444641113281
    4. ')' → logprob: -8.635444641113281
    5. ' ):' → logprob: -9.010444641113281
    6. '):
' → logprob: -9.385444641113281
    7. '   ' → logprob: -11.510444641113281
    8. '=' → logprob: -11.885444641113281
    9. '[' → logprob: -12.385444641113281
    10. ' ' → logprob: -12.760444641113281

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05982188507914543
    2. ' return' → logprob: -3.059821844100952
    3. 'return' → logprob: -5.059822082519531
    4. '[' → logprob: -7.059822082519531
    5. '[]' → logprob: -7.309822082519531
    6. ' sum' → logprob: -7.434822082519531
    7. 'sum' → logprob: -7.934822082519531
    8. ' for' → logprob: -8.309822082519531
    9. 'tmp' → logprob: -8.559822082519531
    10. ' tmp' → logprob: -8.684822082519531

Token 68: ' def' (ID: 1056)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.19391338527202606
    2. '   ' → logprob: -1.9439133405685425
    3. ' return' → logprob: -3.568913459777832
    4. 'tmp' → logprob: -6.193913459777832
    5. 'sum' → logprob: -7.443913459777832
    6. 'ret' → logprob: -7.443913459777832
    7. 'result' → logprob: -8.443913459777832
    8. 'li' → logprob: -8.568913459777832
    9. 's' → logprob: -8.568913459777832
    10. 'for' → logprob: -8.568913459777832

Token 69: ' get' (ID: 717)
  Prédit: ' calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.6791572570800781
    2. ' tmp' → logprob: -2.054157257080078
    3. ' sum' → logprob: -2.804157257080078
    4. ' lambda' → logprob: -2.804157257080078
    5. ' inner' → logprob: -3.179157257080078
    6. ' _' → logprob: -3.179157257080078
    7. 'tmp' → logprob: -3.429157257080078
    8. 'calc' → logprob: -3.804157257080078
    9. ' li' → logprob: -4.304157257080078
    10. ' max' → logprob: -4.429157257080078

Token 70: '_index' (ID: 7748)
  Prédit: '_tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_tmp' → logprob: -0.3212413191795349
    2. '_max' → logprob: -2.4462413787841797
    3. '_sum' → logprob: -2.5712413787841797
    4. '_' → logprob: -3.9462413787841797
    5. '_len' → logprob: -4.32124137878418
    6. '_val' → logprob: -4.69624137878418
    7. '_item' → logprob: -5.07124137878418
    8. '_value' → logprob: -5.19624137878418
    9. '_temp' → logprob: -5.57124137878418
    10. '_count' → logprob: -5.69624137878418

Token 71: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0884004831314087
    2. '(i' → logprob: -1.0884004831314087
    3. '(idx' → logprob: -2.463400363922119
    4. '(li' → logprob: -2.463400363922119
    5. '(k' → logprob: -3.088400363922119
    6. '(n' → logprob: -3.213400363922119
    7. '(index' → logprob: -3.838400363922119
    8. '(x' → logprob: -4.088400363922119
    9. '_' → logprob: -5.338400363922119
    10. '(s' → logprob: -5.463400363922119

Token 72: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.025531433522701263
    2. ',' → logprob: -4.02553129196167
    3. '):
' → logprob: -5.52553129196167
    4. ' ):' → logprob: -7.02553129196167
    5. ')' → logprob: -7.40053129196167
    6. ':' → logprob: -7.65053129196167
    7. '   ' → logprob: -8.275531768798828
    8. 'dx' → logprob: -8.525531768798828
    9. ' ,' → logprob: -8.650531768798828
    10. 'x' → logprob: -8.650531768798828

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002887371927499771
    2. ' return' → logprob: -7.00288724899292
    3. '   ' → logprob: -7.37788724899292
    4. '    ' → logprob: -7.50288724899292
    5. ' ' → logprob: -8.752887725830078
    6. 'return' → logprob: -8.877887725830078
    7. '        ' → logprob: -9.127887725830078
    8. '        
' → logprob: -9.627887725830078
    9. '<|end|>' → logprob: -10.127887725830078
    10. '      ' → logprob: -10.252887725830078

Token 74: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4208473265171051
    2. 'return' (adapté à ' return') → logprob: -1.5458472967147827
    3. '   ' → logprob: -2.1708474159240723
    4. '       ' → logprob: -4.295847415924072
    5. ' if' → logprob: -6.545847415924072
    6. '	return' → logprob: -7.795847415924072
    7. 'if' → logprob: -7.920847415924072
    8. ' ' → logprob: -9.295846939086914
    9. '           ' → logprob: -9.420846939086914
    10. '    ' → logprob: -9.420846939086914

Token 75: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9292576909065247
    2. 'li' → logprob: -1.5542576313018799
    3. ' i' → logprob: -1.6792576313018799
    4. ' (' → logprob: -2.92925763130188
    5. ' li' → logprob: -2.92925763130188
    6. '(i' → logprob: -3.42925763130188
    7. 'k' → logprob: -4.054257869720459
    8. '2' → logprob: -4.304257869720459
    9. ' k' → logprob: -4.929257869720459
    10. '(' → logprob: -5.054257869720459

Token 76: '2' (ID: 17)
  Prédit: 'li'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'li' → logprob: -0.8004871606826782
    2. 'i' → logprob: -1.0504871606826782
    3. '(i' → logprob: -2.6754870414733887
    4. 'k' → logprob: -3.5504870414733887
    5. '(k' → logprob: -3.5504870414733887
    6. '(' → logprob: -3.6754870414733887
    7. '2' → logprob: -3.8004870414733887
    8. 'len' → logprob: -4.675487041473389
    9. '(li' → logprob: -5.425487041473389
    10. '0' → logprob: -6.050487041473389

Token 77: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.680989146232605
    2. '*i' → logprob: -1.055989146232605
    3. '*' → logprob: -1.930989146232605
    4. '**' → logprob: -7.3059892654418945
    5. ' ' → logprob: -8.430989265441895
    6. ' **' → logprob: -10.180989265441895
    7. 'i' → logprob: -10.555989265441895
    8. '+' → logprob: -11.305989265441895
    9. ' +' → logprob: -11.555989265441895
    10. '0' → logprob: -11.680989265441895

Token 78: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0013789254007861018
    2. ' i' → logprob: -6.751379013061523
    3. 'k' → logprob: -8.501379013061523
    4. '(i' → logprob: -13.126379013061523
    5. ' ' → logprob: -14.126379013061523
    6. '	i' → logprob: -14.251379013061523
    7. '   ' → logprob: -14.501379013061523
    8. '(' → logprob: -14.751379013061523
    9. ' k' → logprob: -15.001379013061523
    10. ' (' → logprob: -15.501379013061523

Token 79: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11371931433677673
    2. 'k' → logprob: -2.2387192249298096
    3. ' i' → logprob: -8.11371898651123
    4. 'li' → logprob: -8.36371898651123
    5. '(i' → logprob: -9.23871898651123
    6. '   ' → logprob: -9.98871898651123
    7. ' k' → logprob: -10.11371898651123
    8. '(k' → logprob: -10.11371898651123
    9. '(' → logprob: -10.23871898651123
    10. 'len' → logprob: -10.61371898651123

Token 80: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4760126769542694
    2. ' +' → logprob: -1.1010127067565918
    3. '-' → logprob: -4.351012706756592
    4. ')' → logprob: -4.476012706756592
    5. ' ' → logprob: -4.476012706756592
    6. ' -' → logprob: -5.226012706756592
    7. '   ' → logprob: -6.101012706756592
    8. '*' → logprob: -6.976012706756592
    9. ' *' → logprob: -7.101012706756592
    10. ' )' → logprob: -7.601012706756592

Token 81: ' ' (ID: 220)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7118066549301147
    2. '1' → logprob: -0.9618066549301147
    3. ' k' → logprob: -2.2118067741394043
    4. ' ' → logprob: -4.086806774139404
    5. '0' → logprob: -8.711806297302246
    6. ' (' → logprob: -8.961806297302246
    7. '   ' → logprob: -9.399306297302246
    8. '(' → logprob: -9.461806297302246
    9. '  ' → logprob: -9.649306297302246
    10. '2' → logprob: -10.336806297302246

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01659119874238968
    2. 'k' → logprob: -4.1415910720825195
    3. ' ' → logprob: -7.8915910720825195
    4. ' k' → logprob: -9.14159107208252
    5. '0' → logprob: -10.76659107208252
    6. '2' → logprob: -11.07909107208252
    7. '   ' → logprob: -12.14159107208252
    8. '(' → logprob: -12.26659107208252
    9. '  ' → logprob: -12.57909107208252
    10. 'n' → logprob: -13.20409107208252

Token 83: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09339261054992676
    2. '+' → logprob: -2.7183926105499268
    3. ' +' → logprob: -4.218392372131348
    4. ')+' → logprob: -5.343392372131348
    5. ' )' → logprob: -5.718392372131348
    6. ' ' → logprob: -9.593392372131348
    7. '   ' → logprob: -9.593392372131348
    8. ')
' → logprob: -9.843392372131348
    9. '+)' → logprob: -9.843392372131348
    10. '-' → logprob: -10.218392372131348

Token 84: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2366901934146881
    2. '    
' → logprob: -2.9866902828216553
    3. '
' → logprob: -3.2366902828216553
    4. ' return' → logprob: -3.8616902828216553
    5. 'return' → logprob: -4.236690044403076
    6. ' 
' → logprob: -4.236690044403076
    7. 'tmp' → logprob: -4.361690044403076
    8. ' ' → logprob: -4.486690044403076
    9. '  
' → logprob: -4.736690044403076
    10. ' tmp' → logprob: -4.861690044403076

Token 86: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.18556003272533417
    2. ' calc' → logprob: -2.4355599880218506
    3. 'get' → logprob: -3.5605599880218506
    4. ' tmp' → logprob: -3.9355599880218506
    5. 'calc' → logprob: -4.93556022644043
    6. 'tmp' → logprob: -5.31056022644043
    7. ' calculate' → logprob: -5.56056022644043
    8. ' inner' → logprob: -6.12306022644043
    9. ' sum' → logprob: -6.43556022644043
    10. ' ' → logprob: -6.93556022644043

Token 87: '_value' (ID: 6734)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0687812864780426
    2. '_tmp' → logprob: -3.9437813758850098
    3. '_value' → logprob: -4.31878137588501
    4. '_' → logprob: -4.81878137588501
    5. '_length' → logprob: -5.06878137588501
    6. '_sum' → logprob: -5.69378137588501
    7. '_item' → logprob: -6.06878137588501
    8. '_element' → logprob: -6.56878137588501
    9. 'index' → logprob: -6.69378137588501
    10. 'tmp' → logprob: -6.69378137588501

Token 88: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0009805283043533564
    2. '(' → logprob: -7.625980377197266
    3. '(index' → logprob: -8.375980377197266
    4. ' (' → logprob: -8.625980377197266
    5. '(li' → logprob: -10.500980377197266
    6. '(s' → logprob: -11.125980377197266
    7. '(idx' → logprob: -11.500980377197266
    8. '(n' → logprob: -11.625980377197266
    9. '(j' → logprob: -12.250980377197266
    10. '(ii' → logprob: -12.250980377197266

Token 89: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04975143074989319
    2. '):
' → logprob: -3.0497515201568604
    3. '   ' → logprob: -7.674751281738281
    4. '):
' → logprob: -7.924751281738281
    5. ')' → logprob: -8.674751281738281
    6. '       ' → logprob: -9.549751281738281
    7. '):

' → logprob: -11.049751281738281
    8. ',' → logprob: -11.299751281738281
    9. ' ):' → logprob: -11.299751281738281
    10. ' ' → logprob: -11.424751281738281

Token 90: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08683246374130249
    2. ' return' → logprob: -2.9618325233459473
    3. ' li' → logprob: -4.461832523345947
    4. 'return' → logprob: -4.586832523345947
    5. 'li' → logprob: -4.961832523345947
    6. '   ' → logprob: -6.711832523345947
    7. ':' → logprob: -8.336832046508789
    8. '        
' → logprob: -8.461832046508789
    9. '           ' → logprob: -8.836832046508789
    10. ' ' → logprob: -9.086832046508789

Token 91: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -1.1793564558029175
    2. '   ' → logprob: -1.5543564558029175
    3. ' return' → logprob: -1.5543564558029175
    4. 'li' → logprob: -1.6793564558029175
    5. ' li' → logprob: -2.554356575012207
    6. '       ' → logprob: -5.929356575012207
    7. '    ' → logprob: -7.304356575012207
    8. ' ' → logprob: -7.429356575012207
    9. '           ' → logprob: -7.741856575012207
    10. '  ' → logprob: -9.054356575012207

Token 92: ' ' (ID: 220)
  Prédit: 'li'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'li' → logprob: -0.028786838054656982
    2. ' li' → logprob: -3.6537868976593018
    3. '   ' → logprob: -6.278786659240723
    4. 'k' → logprob: -9.528786659240723
    5. '2' → logprob: -9.653786659240723
    6. 'calc' → logprob: -9.653786659240723
    7. ' ' → logprob: -9.903786659240723
    8. '(li' → logprob: -10.028786659240723
    9. 'sum' → logprob: -10.278786659240723
    10. '  ' → logprob: -10.466286659240723

Token 93: '2' (ID: 17)
  Prédit: 'li'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'li' → logprob: -0.0006409500492736697
    2. 'calc' → logprob: -8.250640869140625
    3. ' li' → logprob: -9.125640869140625
    4. '   ' → logprob: -9.375640869140625
    5. 'lee' → logprob: -10.125640869140625
    6. 'k' → logprob: -10.250640869140625
    7. 'sum' → logprob: -10.375640869140625
    8. '2' → logprob: -10.625640869140625
    9. 'abs' → logprob: -11.625640869140625
    10. 'le' → logprob: -12.250640869140625

Token 94: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10128998756408691
    2. '*' → logprob: -2.351289987564087
    3. ' -' → logprob: -8.601289749145508
    4. '*i' → logprob: -8.601289749145508
    5. ' +' → logprob: -8.726289749145508
    6. '+' → logprob: -8.976289749145508
    7. ' **' → logprob: -9.226289749145508
    8. '*(' → logprob: -9.351289749145508
    9. '-' → logprob: -9.476289749145508
    10. ' ' → logprob: -9.601289749145508

Token 95: ' li' (ID: 3476)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04546193778514862
    2. 'li' → logprob: -3.920461893081665
    3. ' i' → logprob: -4.920462131500244
    4. '(i' → logprob: -5.045462131500244
    5. ' (' → logprob: -5.670462131500244
    6. '(' → logprob: -5.670462131500244
    7. 'k' → logprob: -6.670462131500244
    8. '   ' → logprob: -6.795462131500244
    9. '(li' → logprob: -7.295462131500244
    10. ' li' → logprob: -8.170461654663086

Token 96: '[get' (ID: 160135)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.02485336735844612
    2. '[' → logprob: -4.149853229522705
    3. '[get' → logprob: -5.524853229522705
    4. '[k' → logprob: -5.774853229522705
    5. '[(' → logprob: -6.774853229522705
    6. ' [' → logprob: -9.399853706359863
    7. '   ' → logprob: -9.399853706359863
    8. 'i' → logprob: -9.399853706359863
    9. '[index' → logprob: -9.649853706359863
    10. '[j' → logprob: -10.649853706359863

Token 97: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0001463299704482779
    2. 'index' → logprob: -9.00014591217041
    3. '_value' → logprob: -11.00014591217041
    4. '_' → logprob: -13.00014591217041
    5. 'tmp' → logprob: -13.50014591217041
    6. '	index' → logprob: -14.87514591217041
    7. '_tmp' → logprob: -15.12514591217041
    8. 'Index' → logprob: -15.50014591217041
    9. '_INDEX' → logprob: -15.62514591217041
    10. ' index' → logprob: -15.62514591217041

Token 98: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00011391390580683947
    2. '(' → logprob: -9.125113487243652
    3. ' (' → logprob: -12.375113487243652
    4. '```' → logprob: -15.875113487243652
    5. ')' → logprob: -16.12511444091797
    6. ')(' → logprob: -16.37511444091797
    7. '](' → logprob: -16.50011444091797
    8. '(I' → logprob: -16.62511444091797
    9. 'i' → logprob: -16.75011444091797
    10. ']' → logprob: -16.87511444091797

Token 99: ')]
' (ID: 11587)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.7445047497749329
    2. ')]' → logprob: -1.119504690170288
    3. '(i' → logprob: -1.869504690170288
    4. '()' → logprob: -4.244504928588867
    5. '()]' → logprob: -4.244504928588867
    6. '(' → logprob: -5.244504928588867
    7. ')' → logprob: -5.369504928588867
    8. '()-' → logprob: -6.244504928588867
    9. '-' → logprob: -6.994504928588867
    10. 'i' → logprob: -7.744504928588867

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42565441131591797
    2. '<|end|>' → logprob: -1.175654411315918
    3. '
' → logprob: -3.550654411315918
    4. '+' → logprob: -6.300654411315918
    5. '<|end|>' → logprob: -6.425654411315918
    6. '    
' → logprob: -6.425654411315918
    7. ')' → logprob: -7.050654411315918
    8. 'return' → logprob: -7.675654411315918
    9. ' ' → logprob: -7.800654411315918
    10. ' +' → logprob: -8.175654411315918

Token 101: ' tmp' (ID: 8919)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031035620719194412
    2. ' ' → logprob: -4.531035423278809
    3. '
' → logprob: -5.406035423278809
    4. ' return' → logprob: -5.656035423278809
    5. '<|end|>' → logprob: -5.906035423278809
    6. 'return' → logprob: -6.031035423278809
    7. '  ' → logprob: -6.406035423278809
    8. ' for' → logprob: -6.531035423278809
    9. '    
' → logprob: -6.781035423278809
    10. '  
' → logprob: -7.281035423278809

Token 102: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.028468148782849312
    2. '=' → logprob: -3.778468132019043
    3. '[' → logprob: -5.653468132019043
    4. ' ' → logprob: -7.903468132019043
    5. '=[' → logprob: -8.153468132019043
    6. '_' → logprob: -8.528468132019043
    7. '   ' → logprob: -8.903468132019043
    8. ' =[' → logprob: -8.903468132019043
    9. 's' → logprob: -9.153468132019043
    10. '.append' → logprob: -9.528468132019043

Token 103: ' ' (ID: 220)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.6001214385032654
    2. '[' → logprob: -1.4751214981079102
    3. '[get' → logprob: -2.10012149810791
    4. '[]' → logprob: -2.72512149810791
    5. ' []' → logprob: -4.10012149810791
    6. '[k' → logprob: -5.22512149810791
    7. '0' → logprob: -5.35012149810791
    8. '[max' → logprob: -5.72512149810791
    9. ' ' → logprob: -6.72512149810791
    10. '[min' → logprob: -6.97512149810791

Token 104: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.21466881036758423
    2. '[get' → logprob: -2.2146687507629395
    3. '[]' → logprob: -3.4646687507629395
    4. '[k' → logprob: -3.7146687507629395
    5. '0' → logprob: -4.2146687507629395
    6. '[max' → logprob: -4.9646687507629395
    7. '[min' → logprob: -6.3396687507629395
    8. 'calc' → logprob: -6.9646687507629395
    9. '[len' → logprob: -7.3396687507629395
    10. '[list' → logprob: -7.4646687507629395

Token 105: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1572113186120987
    2. '<|end|>' → logprob: -2.0322113037109375
    3. '<|end|>' → logprob: -5.0322113037109375
    4. '   ' → logprob: -5.5322113037109375
    5. ' for' → logprob: -6.1572113037109375
    6. '	for' → logprob: -7.7822113037109375
    7. '\n' → logprob: -8.407211303710938
    8. '
' → logprob: -8.407211303710938
    9. '	
' → logprob: -8.407211303710938
    10. '  
' → logprob: -8.907211303710938

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03413096442818642
    2. '<|end|>' → logprob: -3.7841310501098633
    3. ' for' → logprob: -4.784131050109863
    4. '
' → logprob: -7.159131050109863
    5. '	for' → logprob: -7.409131050109863
    6. 'for' → logprob: -8.034131050109863
    7. '    
' → logprob: -8.284131050109863
    8. '<|end|>' → logprob: -8.284131050109863
    9. '    ' → logprob: -9.534131050109863
    10. ' ' → logprob: -9.909131050109863

Token 107: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5048333406448364
    2. 'for' (adapté à ' for') → logprob: -1.1298333406448364
    3. '   ' → logprob: -2.629833221435547
    4. ' n' → logprob: -7.379833221435547
    5. 'n' → logprob: -7.504833221435547
    6. ' ' → logprob: -10.879833221435547
    7. '	for' → logprob: -12.254833221435547
    8. '  ' → logprob: -12.754833221435547
    9. '```' → logprob: -12.754833221435547
    10. '
' → logprob: -13.004833221435547

Token 108: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.00781351700425148
    2. 'i' → logprob: -4.882813453674316
    3. ' ' → logprob: -9.007813453674316
    4. ' in' → logprob: -10.507813453674316
    5. ' range' → logprob: -11.007813453674316
    6. '_i' → logprob: -11.382813453674316
    7. '	i' → logprob: -12.007813453674316
    8. '_' → logprob: -12.632813453674316
    9. ' ' → logprob: -12.695313453674316
    10. 'range' → logprob: -12.757813453674316

Token 109: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007071847561746836
    2. 'in' → logprob: -5.0070719718933105
    3. ' ' → logprob: -8.007071495056152
    4. 'range' → logprob: -11.382071495056152
    5. '  ' → logprob: -12.632071495056152
    6. '	in' → logprob: -13.132071495056152
    7. ' range' → logprob: -13.507071495056152
    8. ',' → logprob: -14.132071495056152
    9. '1' → logprob: -14.507071495056152
    10. '<|end|>' → logprob: -14.882071495056152

Token 110: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.020549481734633446
    2. 'range' → logprob: -3.8955495357513428
    3. ' ' → logprob: -12.645549774169922
    4. '	range' → logprob: -13.145549774169922
    5. '(range' → logprob: -14.145549774169922
    6. '  ' → logprob: -14.895549774169922
    7. '   ' → logprob: -15.645549774169922
    8. '_range' → logprob: -15.645549774169922
    9. 'rang' → logprob: -15.770549774169922
    10. ' xrange' → logprob: -16.020549774169922

Token 111: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.0100624169572257e-05
    2. '(calc' → logprob: -11.500020027160645
    3. '(k' → logprob: -12.125020027160645
    4. '1' → logprob: -13.000020027160645
    5. ' (' → logprob: -14.125020027160645
    6. '   ' → logprob: -14.375020027160645
    7. '(len' → logprob: -14.875020027160645
    8. ' ' → logprob: -16.12502098083496
    9. '(
' → logprob: -16.37502098083496
    10. 'calc' → logprob: -16.75002098083496

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015405966900289059
    2. 'calc' → logprob: -5.015406131744385
    3. ' ' → logprob: -5.515406131744385
    4. '(' → logprob: -5.890406131744385
    5. ' calc' → logprob: -7.515406131744385
    6. '2' → logprob: -7.890406131744385
    7. '(calc' → logprob: -7.890406131744385
    8. '   ' → logprob: -7.890406131744385
    9. 'k' → logprob: -9.390405654907227
    10. 'len' → logprob: -10.827905654907227

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007646968122571707
    2. ' ,' → logprob: -4.8826470375061035
    3. ',len' → logprob: -10.632646560668945
    4. ',k' → logprob: -11.507646560668945
    5. '   ' → logprob: -12.632646560668945
    6. ' ' → logprob: -14.007646560668945
    7. ' k' → logprob: -14.257646560668945
    8. ',n' → logprob: -14.882646560668945
    9. '(len' → logprob: -15.507646560668945
    10. '(' → logprob: -15.632646560668945

Token 114: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5313915014266968
    2. ' k' → logprob: -1.0313915014266968
    3. 'calc' → logprob: -3.2813916206359863
    4. ' calc' → logprob: -4.031391620635986
    5. 'len' → logprob: -8.531391143798828
    6. ' len' → logprob: -10.281391143798828
    7. 'cal' → logprob: -10.406391143798828
    8. '   ' → logprob: -10.781391143798828
    9. '(calc' → logprob: -10.781391143798828
    10. '	k' → logprob: -11.281391143798828

Token 115: 'umi' (ID: 10939)
  Prédit: 'umi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umi' → logprob: -1.7432603272027336e-06
    2. 'umik' → logprob: -14.125001907348633
    3. '   ' → logprob: -15.625001907348633
    4. ' umi' → logprob: -15.750001907348633
    5. 'уми' → logprob: -15.875001907348633
    6. 'um' → logprob: -16.000001907348633
    7. 'uni' → logprob: -16.625001907348633
    8. ' ' → logprob: -16.875001907348633
    9. 'umis' → logprob: -17.125001907348633
    10. 'mi' → logprob: -17.250001907348633

Token 116: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07899542897939682
    2. '+' → logprob: -2.5789954662323
    3. ' ' → logprob: -9.453995704650879
    4. '):
' → logprob: -11.703995704650879
    5. '   ' → logprob: -11.828995704650879
    6. '):' → logprob: -12.328995704650879
    7. '()+' → logprob: -13.953995704650879
    8. '  ' → logprob: -14.078995704650879
    9. ',' → logprob: -14.328995704650879
    10. ' ' → logprob: -14.453995704650879

Token 117: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011049113236367702
    2. ' ' → logprob: -4.511049270629883
    3. '   ' → logprob: -13.886049270629883
    4. '    ' → logprob: -15.886049270629883
    5. '2' → logprob: -16.261049270629883
    6. '  ' → logprob: -16.886049270629883
    7. '```' → logprob: -17.761049270629883
    8. '+' → logprob: -18.261049270629883
    9. '     ' → logprob: -19.261049270629883
    10. ')' → logprob: -19.386049270629883

Token 118: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010986098641296849
    2. ' ' → logprob: -9.125109672546387
    3. '2' → logprob: -14.250109672546387
    4. '   ' → logprob: -15.875109672546387
    5. '  ' → logprob: -17.750110626220703
    6. '１' → logprob: -17.875110626220703
    7. ')' → logprob: -18.312610626220703
    8. '

' → logprob: -18.500110626220703
    9. '۱' → logprob: -18.500110626220703
    10. '    ' → logprob: -18.562610626220703

Token 119: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5765538811683655
    2. '):' → logprob: -0.8265538811683655
    3. ':' → logprob: -7.826553821563721
    4. '   ' → logprob: -9.326554298400879
    5. '):
' → logprob: -9.326554298400879
    6. ' ):
' → logprob: -11.326554298400879
    7. ')' → logprob: -11.701554298400879
    8. ':
' → logprob: -12.201554298400879
    9. ' ):' → logprob: -12.326554298400879
    10. '():
' → logprob: -13.076554298400879

Token 120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002160729607567191
    2. '<|end|>' → logprob: -6.752160549163818
    3. '        
' → logprob: -7.752160549163818
    4. ' ' → logprob: -8.877161026000977
    5. ' 
' → logprob: -9.877161026000977
    6. '   ' → logprob: -9.877161026000977
    7. '<|end|>' → logprob: -10.002161026000977
    8. ' tmp' → logprob: -10.252161026000977
    9. ' ' → logprob: -10.502161026000977
    10. 'tmp' → logprob: -10.627161026000977

Token 121: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.430661141872406
    2. ' tmp' → logprob: -1.0556612014770508
    3. '       ' → logprob: -6.430661201477051
    4. '
' → logprob: -9.18066120147705
    5. '	tmp' → logprob: -9.43066120147705
    6. '           ' → logprob: -10.05566120147705
    7. '   ' → logprob: -10.55566120147705
    8. ' ' → logprob: -10.68066120147705
    9. '(tmp' → logprob: -11.43066120147705
    10. '        
' → logprob: -11.43066120147705

Token 122: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.026320040225982666
    2. '+=' → logprob: -3.651319980621338
    3. '=' → logprob: -11.901320457458496
    4. ' ' → logprob: -12.151320457458496
    5. ' =' → logprob: -12.651320457458496
    6. '    ' → logprob: -13.151320457458496
    7. '+' → logprob: -14.276320457458496
    8. '   ' → logprob: -14.901320457458496
    9. ' ' → logprob: -14.901320457458496
    10. '+=(' → logprob: -15.401320457458496

Token 123: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.12692999839782715
    2. ' get' → logprob: -2.126929998397827
    3. '(get' → logprob: -13.751930236816406
    4. '   ' → logprob: -15.126930236816406
    5. '	get' → logprob: -15.251930236816406
    6. ' ' → logprob: -16.001930236816406
    7. '
' → logprob: -16.501930236816406
    8. '2' → logprob: -17.501930236816406
    9. ')get' → logprob: -17.501930236816406
    10. '  ' → logprob: -17.751930236816406

Token 124: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -2.935296834039036e-06
    2. '_index' → logprob: -13.00000286102295
    3. '_' → logprob: -15.62500286102295
    4. '_val' → logprob: -15.62500286102295
    5. ' _' → logprob: -15.75000286102295
    6. 'value' → logprob: -17.500003814697266
    7. '_values' → logprob: -18.625003814697266
    8. ' ' → logprob: -19.500003814697266
    9. '_Value' → logprob: -19.500003814697266
    10. ' value' → logprob: -19.625003814697266

Token 125: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.057743949990254e-05
    2. '(' → logprob: -10.875020980834961
    3. ' (' → logprob: -13.375020980834961
    4. '(ii' → logprob: -18.50002098083496
    5. ' ' → logprob: -18.62502098083496
    6. '```' → logprob: -19.75002098083496
    7. '(I' → logprob: -20.12502098083496
    8. '(
' → logprob: -20.12502098083496
    9. '
' → logprob: -21.00002098083496
    10. '(iv' → logprob: -21.00002098083496

Token 126: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028527823742479086
    2. ')
' → logprob: -5.877852916717529
    3. '())' → logprob: -11.377852439880371
    4. ')

' → logprob: -11.627852439880371
    5. ' )' → logprob: -11.627852439880371
    6. '   ' → logprob: -12.002852439880371
    7. ')return' → logprob: -12.252852439880371
    8. ')
' → logprob: -13.252852439880371
    9. '))' → logprob: -13.627852439880371
    10. ' ' → logprob: -14.377852439880371

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015129582025110722
    2. ' return' → logprob: -7.0015130043029785
    3. '
' → logprob: -8.00151252746582
    4. 'return' → logprob: -8.50151252746582
    5. '    
' → logprob: -10.75151252746582
    6. '	return' → logprob: -11.00151252746582
    7. '<|end|>' → logprob: -11.12651252746582
    8. ' 
' → logprob: -13.12651252746582
    9. ' ' → logprob: -13.62651252746582
    10. '       ' → logprob: -13.75151252746582

Token 128: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02640874870121479
    2. ' return' → logprob: -3.9014086723327637
    3. 'return' (adapté à ' return') → logprob: -5.401408672332764
    4. '	return' → logprob: -7.276408672332764
    5. '    
' → logprob: -8.526409149169922
    6. ' ' → logprob: -8.651409149169922
    7. '<|end|>' → logprob: -8.651409149169922
    8. '
' → logprob: -10.276409149169922
    9. ' 
' → logprob: -11.026409149169922
    10. '       ' → logprob: -11.776409149169922

Token 129: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.01417984813451767
    2. 'tmp' → logprob: -4.264179706573486
    3. '(tmp' → logprob: -11.764180183410645
    4. ' ' → logprob: -12.639180183410645
    5. '	tmp' → logprob: -12.764180183410645
    6. '/tmp' → logprob: -14.014180183410645
    7. ' ' → logprob: -14.389180183410645
    8. ' temp' → logprob: -14.639180183410645
    9. '[tmp' → logprob: -15.514180183410645
    10. '$tmp' → logprob: -15.764180183410645

Token 130: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 131: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03772883489727974
    2. 'n' → logprob: -4.037728786468506
    3. '#' → logprob: -4.787728786468506
    4. 'print' → logprob: -5.537728786468506
    5. '<|end|>' → logprob: -5.662728786468506
    6. '```' → logprob: -6.787728786468506
    7. 'k' → logprob: -8.037729263305664
    8. '
' → logprob: -8.287729263305664
    9. '<|end|>' → logprob: -8.662729263305664
    10. '\n' → logprob: -8.787729263305664

Token 132: ' calc' (ID: 25691)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.20128506422042847
    2. 'main' → logprob: -1.8262851238250732
    3. ' calc' → logprob: -4.451284885406494
    4. 'calc' → logprob: -5.326284885406494
    5. ' solve' → logprob: -6.326284885406494
    6. ' calculate' → logprob: -7.201284885406494
    7. 'solve' → logprob: -7.826284885406494
    8. ' get' → logprob: -8.076285362243652
    9. 'calculate' → logprob: -8.201285362243652
    10. ' solution' → logprob: -8.576285362243652

Token 133: '_last' (ID: 26359)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_k' → logprob: -1.2231706380844116
    2. '_sum' → logprob: -1.3481706380844116
    3. '_length' → logprob: -1.8481706380844116
    4. '_diff' → logprob: -3.098170757293701
    5. '_tmp' → logprob: -3.098170757293701
    6. '_max' → logprob: -3.473170757293701
    7. '_' → logprob: -3.973170757293701
    8. '_average' → logprob: -4.348170757293701
    9. '_result' → logprob: -4.598170757293701
    10. '_len' → logprob: -4.598170757293701

Token 134: '(s' (ID: 1858)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.545211672782898
    2. '_value' → logprob: -1.920211672782898
    3. '(li' → logprob: -1.920211672782898
    4. '(' → logprob: -2.1702117919921875
    5. '_li' → logprob: -2.2952117919921875
    6. '_index' → logprob: -2.6702117919921875
    7. '_' → logprob: -3.0452117919921875
    8. '_diff' → logprob: -3.6702117919921875
    9. '_k' → logprob: -3.9202117919921875
    10. '_val' → logprob: -4.0452117919921875

Token 135: ',' (ID: 11)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.040272004902362823
    2. 'ub' → logprob: -5.040272235870361
    3. 'tr' → logprob: -5.415272235870361
    4. 't' → logprob: -5.665272235870361
    5. 'plit' → logprob: -5.790272235870361
    6. ')' → logprob: -5.915272235870361
    7. 'li' → logprob: -6.165272235870361
    8. 'ize' → logprob: -6.290272235870361
    9. '_' → logprob: -6.665272235870361
    10. 'tring' → logprob: -6.665272235870361

Token 136: ' tmp' (ID: 8919)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5830786824226379
    2. 'li' → logprob: -1.5830786228179932
    3. ' k' → logprob: -2.333078622817993
    4. 'tmp' → logprob: -3.333078622817993
    5. ' li' → logprob: -3.708078622817993
    6. 'n' → logprob: -3.708078622817993
    7. 'l' → logprob: -4.208078861236572
    8. ' n' → logprob: -4.583078861236572
    9. ' tmp' → logprob: -5.083078861236572
    10. ' l' → logprob: -5.583078861236572

Token 137: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6351931691169739
    2. ',' → logprob: -0.7601931691169739
    3. '):
' → logprob: -6.260193347930908
    4. ' ,' → logprob: -8.88519287109375
    5. ' ):' → logprob: -9.13519287109375
    6. ')' → logprob: -9.26019287109375
    7. 's' → logprob: -9.63519287109375
    8. ',s' → logprob: -9.76019287109375
    9. ',k' → logprob: -9.76019287109375
    10. '):
' → logprob: -10.76019287109375

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03712872415781021
    2. 'return' → logprob: -3.6621286869049072
    3. ' return' → logprob: -4.537128925323486
    4. 'def' → logprob: -9.787128448486328
    5. '	return' → logprob: -12.787128448486328
    6. 'if' → logprob: -13.787128448486328
    7. '  ' → logprob: -13.912128448486328
    8. '```' → logprob: -13.912128448486328
    9. ' ' → logprob: -14.162128448486328
    10. '
' → logprob: -14.537128448486328

Token 139: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04915804788470268
    2. '   ' → logprob: -3.6741580963134766
    3. ' return' → logprob: -3.7991580963134766
    4. 's' → logprob: -8.799158096313477
    5. 'if' → logprob: -11.049158096313477
    6. ' ' → logprob: -11.049158096313477
    7. ' s' → logprob: -11.549158096313477
    8. 'def' → logprob: -12.049158096313477
    9. '```' → logprob: -13.049158096313477
    10. '	return' → logprob: -13.299158096313477

Token 140: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0037108848337084055
    2. ' s' → logprob: -6.128710746765137
    3. 'abs' → logprob: -7.878710746765137
    4. '(s' → logprob: -8.003710746765137
    5. '2' → logprob: -8.128710746765137
    6. 'tmp' → logprob: -8.628710746765137
    7. 'max' → logprob: -8.878710746765137
    8. '(' → logprob: -9.753710746765137
    9. 'int' → logprob: -10.503710746765137
    10. ' ' → logprob: -11.253710746765137

Token 141: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6124665141105652
    2. '+' → logprob: -1.11246657371521
    3. ' -' → logprob: -2.36246657371521
    4. ' +' → logprob: -3.36246657371521
    5. '*' → logprob: -9.112466812133789
    6. ' ' → logprob: -9.487466812133789
    7. '-s' → logprob: -9.987466812133789
    8. '%' → logprob: -10.737466812133789
    9. 'def' → logprob: -11.237466812133789
    10. '_' → logprob: -11.362466812133789

Token 142: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.02324594371020794
    2. ' tmp' → logprob: -3.7732460498809814
    3. '	tmp' → logprob: -15.398245811462402
    4. '/tmp' → logprob: -15.898245811462402
    5. '$tmp' → logprob: -17.14824676513672
    6. '   ' → logprob: -17.27324676513672
    7. 'temp' → logprob: -17.39824676513672
    8. '(tmp' → logprob: -17.52324676513672
    9. '_tmp' → logprob: -17.52324676513672
    10. ' ' → logprob: -17.77324676513672

Token 143: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 144: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01629769802093506
    2. 'n' → logprob: -4.391297817230225
    3. 'if' → logprob: -6.016297817230225
    4. 'print' → logprob: -7.516297817230225
    5. '#' → logprob: -8.141297340393066
    6. '<|end|>' → logprob: -9.266297340393066
    7. 's' → logprob: -9.391297340393066
    8. 'a' → logprob: -9.391297340393066
    9. '```' → logprob: -10.141297340393066
    10. 'x' → logprob: -10.141297340393066

Token 145: ' get' (ID: 717)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.28587275743484497
    2. ' main' → logprob: -1.4108726978302002
    3. 'def' → logprob: -5.660872936248779
    4. 'get' → logprob: -7.535872936248779
    5. '_main' → logprob: -7.660872936248779
    6. ' get' → logprob: -9.535872459411621
    7. '__' → logprob: -9.910872459411621
    8. 'calc' → logprob: -10.910872459411621
    9. ' def' → logprob: -11.285872459411621
    10. 'solve' → logprob: -11.535872459411621

Token 146: '_last' (ID: 26359)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.3536528944969177
    2. '_last' → logprob: -2.2286529541015625
    3. '_sum' → logprob: -2.6036529541015625
    4. '_output' → logprob: -3.3536529541015625
    5. '_k' → logprob: -4.2286529541015625
    6. '_result' → logprob: -4.3536529541015625
    7. '_answer' → logprob: -4.8536529541015625
    8. '_n' → logprob: -5.1036529541015625
    9. '_' → logprob: -5.3536529541015625
    10. '_tmp' → logprob: -5.4786529541015625

Token 147: '_element' (ID: 21131)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8019975423812866
    2. '_value' → logprob: -1.0519975423812866
    3. '_' → logprob: -2.926997661590576
    4. '(' → logprob: -3.301997661590576
    5. '_sum' → logprob: -3.676997661590576
    6. '_input' → logprob: -4.051997661590576
    7. '_val' → logprob: -4.426997661590576
    8. '_last' → logprob: -4.926997661590576
    9. '_index' → logprob: -5.176997661590576
    10. '_list' → logprob: -5.176997661590576

Token 148: '(li' (ID: 111234)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.023478863760828972
    2. '(' → logprob: -4.898478984832764
    3. '(li' → logprob: -5.023478984832764
    4. '()' → logprob: -5.273478984832764
    5. '(s' → logprob: -6.273478984832764
    6. ' ():' → logprob: -7.648478984832764
    7. '(lst' → logprob: -8.148478507995605
    8. '()(' → logprob: -8.273478507995605
    9. '():
' → logprob: -8.773478507995605
    10. '_' → logprob: -8.898478507995605

Token 149: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012752608396112919
    2. '):
' → logprob: -4.387752532958984
    3. ')' → logprob: -9.137752532958984
    4. ' ):' → logprob: -9.512752532958984
    5. '[]):' → logprob: -10.512752532958984
    6. ',' → logprob: -11.387752532958984
    7. '):
' → logprob: -11.762752532958984
    8. '):

' → logprob: -12.387752532958984
    9. '   ' → logprob: -12.762752532958984
    10. ':' → logprob: -13.387752532958984

Token 150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010068769566714764
    2. ' return' → logprob: -4.885068893432617
    3. 'return' → logprob: -6.010068893432617
    4. '	return' → logprob: -13.385068893432617
    5. 'def' → logprob: -13.385068893432617
    6. '```' → logprob: -13.760068893432617
    7. '   ' → logprob: -14.010068893432617
    8. '       ' → logprob: -15.260068893432617
    9. '    
' → logprob: -15.760068893432617
    10. '
' → logprob: -16.260068893432617

Token 151: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01108248345553875
    2. ' return' → logprob: -4.761082649230957
    3. '   ' → logprob: -6.011082649230957
    4. 'def' → logprob: -11.386082649230957
    5. ' ' → logprob: -14.261082649230957
    6. '	return' → logprob: -14.386082649230957
    7. 'if' → logprob: -15.511082649230957
    8. '```' → logprob: -15.511082649230957
    9. 'li' → logprob: -16.13608169555664
    10. '
' → logprob: -16.38608169555664

Token 152: ' li' (ID: 3476)
  Prédit: 'li'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'li' → logprob: -0.14268092811107635
    2. ' li' → logprob: -2.0176808834075928
    3. 'len' → logprob: -12.767681121826172
    4. '(li' → logprob: -14.517681121826172
    5. '<li' → logprob: -14.642681121826172
    6. ' ' → logprob: -14.642681121826172
    7. 'int' → logprob: -15.017681121826172
    8. ' len' → logprob: -15.267681121826172
    9. ' int' → logprob: -15.517681121826172
    10. '   ' → logprob: -15.767681121826172

Token 153: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0005216968129388988
    2. '[' → logprob: -7.625521659851074
    3. '[len' → logprob: -10.375521659851074
    4. '-' → logprob: -13.875521659851074
    5. '```' → logprob: -14.375521659851074
    6. '[:]' → logprob: -15.250521659851074
    7. '[::-' → logprob: -16.12552261352539
    8. '[:-' → logprob: -16.37552261352539
    9. '[
' → logprob: -16.62552261352539
    10. 'def' → logprob: -16.62552261352539

Token 154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. '2' → logprob: -15.000000953674316
    3. ' ' → logprob: -15.625000953674316
    4. '１' → logprob: -15.625000953674316
    5. '0' → logprob: -17.000001907348633
    6. '۱' → logprob: -17.062501907348633
    7. '3' → logprob: -17.312501907348633
    8. '```' → logprob: -18.125001907348633
    9. '

' → logprob: -18.312501907348633
    10. '१' → logprob: -18.312501907348633

Token 155: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05517134815454483
    2. ']' → logprob: -2.930171251296997
    3. '])' → logprob: -8.430171012878418
    4. ')]' → logprob: -9.930171012878418
    5. '）' → logprob: -11.555171012878418
    6. '}' → logprob: -11.930171012878418
    7. ' )' → logprob: -13.555171012878418
    8. '<|end|>' → logprob: -13.555171012878418
    9. ')
' → logprob: -14.180171012878418
    10. ')])' → logprob: -14.555171012878418

Token 156: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.042985718697309494
    2. '<|end|>' → logprob: -3.917985677719116
    3. '#' → logprob: -4.292985916137695
    4. '[' → logprob: -5.917985916137695
    5. 'n' → logprob: -6.042985916137695
    6. '
' → logprob: -7.417985916137695
    7. '```' → logprob: -7.792985916137695
    8. 'a' → logprob: -7.917985916137695
    9. ')' → logprob: -8.042985916137695
    10. '\n' → logprob: -8.292985916137695

Token 157: ' calc' (ID: 25691)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.43332168459892273
    2. ' main' → logprob: -1.0583217144012451
    3. 'calc' → logprob: -6.183321475982666
    4. ' calc' → logprob: -7.058321475982666
    5. 'get' → logprob: -8.183321952819824
    6. 'calculate' → logprob: -8.183321952819824
    7. 'solve' → logprob: -8.933321952819824
    8. 'process' → logprob: -9.058321952819824
    9. ' calculate' → logprob: -9.183321952819824
    10. ' get' → logprob: -9.308321952819824

Token 158: '_first' (ID: 29347)
  Prédit: '_last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_last' → logprob: -0.37272652983665466
    2. '_length' → logprob: -2.2477264404296875
    3. '_sum' → logprob: -2.4977264404296875
    4. '_k' → logprob: -2.9977264404296875
    5. '_max' → logprob: -4.3727264404296875
    6. '_tmp' → logprob: -4.6227264404296875
    7. '_final' → logprob: -5.2477264404296875
    8. '_diff' → logprob: -5.3727264404296875
    9. '_len' → logprob: -5.4977264404296875
    10. '_result' → logprob: -5.6227264404296875

Token 159: '(last' (ID: 39599)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.33749905228614807
    2. '_' → logprob: -1.8374990224838257
    3. '_element' → logprob: -2.7124991416931152
    4. '(li' → logprob: -3.2124991416931152
    5. '(s' → logprob: -5.087499141693115
    6. '_(' → logprob: -5.462499141693115
    7. '_value' → logprob: -5.712499141693115
    8. '_sum' → logprob: -6.712499141693115
    9. '_li' → logprob: -6.712499141693115
    10. '_parent' → logprob: -7.587499141693115

Token 160: '_elem' (ID: 68468)
  Prédit: '_element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_element' → logprob: -0.8373541235923767
    2. '_' → logprob: -1.0873541831970215
    3. ')' → logprob: -2.5873541831970215
    4. '+' → logprob: -3.4623541831970215
    5. ' +' → logprob: -3.5873541831970215
    6. '):' → logprob: -3.7123541831970215
    7. ',' → logprob: -3.7123541831970215
    8. '-' → logprob: -4.5873541831970215
    9. 'element' → logprob: -4.5873541831970215
    10. ' -' → logprob: -4.9623541831970215

Token 161: ',' (ID: 11)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.08080177754163742
    2. '):
' → logprob: -3.0808017253875732
    3. ')' → logprob: -3.5808017253875732
    4. '):' → logprob: -6.080801963806152
    5. '):

' → logprob: -6.830801963806152
    6. ')
' → logprob: -9.080801963806152
    7. 'ents' → logprob: -9.580801963806152
    8. '):
' → logprob: -9.830801963806152
    9. '   ' → logprob: -10.705801963806152
    10. ')**' → logprob: -10.705801963806152

Token 162: ' last' (ID: 2174)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -1.076951265335083
    2. 'li' → logprob: -1.826951265335083
    3. ' tmp' → logprob: -2.201951265335083
    4. ' li' → logprob: -2.451951265335083
    5. 's' → logprob: -2.576951265335083
    6. 'k' → logprob: -2.576951265335083
    7. ' s' → logprob: -3.076951265335083
    8. ' k' → logprob: -3.076951265335083
    9. 'last' → logprob: -4.326951026916504
    10. 'calc' → logprob: -4.951951026916504

Token 163: '):
' (ID: 1883)
  Prédit: '_elem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_elem' → logprob: -0.07259874790906906
    2. '_' → logprob: -3.697598695755005
    3. 'elem' → logprob: -3.947598695755005
    4. ')' → logprob: -4.572598934173584
    5. 'def' → logprob: -5.697598934173584
    6. '_element' → logprob: -5.822598934173584
    7. '-' → logprob: -5.947598934173584
    8. '_tmp' → logprob: -6.947598934173584
    9. '_)' → logprob: -7.197598934173584
    10. '+' → logprob: -7.572598934173584

Token 164: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27060937881469727
    2. '   ' → logprob: -1.7706093788146973
    3. ':
' → logprob: -3.3956093788146973
    4. '=' → logprob: -4.395609378814697
    5. '):' → logprob: -4.645609378814697
    6. '):
' → logprob: -5.520609378814697
    7. 'def' → logprob: -6.270609378814697
    8. ' =' → logprob: -6.520609378814697
    9. ':return' → logprob: -6.645609378814697
    10. ' :' → logprob: -7.270609378814697

Token 165: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.05102188140153885
    2. ' return' → logprob: -3.8010218143463135
    3. 'last' → logprob: -3.8010218143463135
    4. '   ' → logprob: -5.426022052764893
    5. ' last' → logprob: -7.426022052764893
    6. 'def' → logprob: -10.176021575927734
    7. 'first' → logprob: -12.676021575927734
    8. ' ' → logprob: -13.176021575927734
    9. '=' → logprob: -13.301021575927734
    10. ' =' → logprob: -13.801021575927734

Token 166: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.02328973449766636
    2. ' last' → logprob: -3.773289680480957
    3. 'first' → logprob: -10.648289680480957
    4. '(last' → logprob: -11.398289680480957
    5. ' ' → logprob: -13.648289680480957
    6. '[last' → logprob: -13.648289680480957
    7. '	last' → logprob: -13.773289680480957
    8. ' first' → logprob: -14.023289680480957
    9. 'max' → logprob: -14.460789680480957
    10. 'int' → logprob: -14.460789680480957

Token 167: '_elem' (ID: 68468)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.1511157751083374
    2. '_' → logprob: -1.6511157751083374
    3. ' +' → logprob: -1.6511157751083374
    4. '-' → logprob: -2.276115894317627
    5. '+' → logprob: -2.651115894317627
    6. ' ' → logprob: -2.776115894317627
    7. ' *' → logprob: -3.276115894317627
    8. '*' → logprob: -4.026115894317627
    9. '<|end|>' → logprob: -5.526115894317627
    10. ' _' → logprob: -7.026115894317627

Token 168: ' *' (ID: 425)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.36329567432403564
    2. ' -' → logprob: -1.3632956743240356
    3. '+' → logprob: -3.113295555114746
    4. ' +' → logprob: -5.488295555114746
    5. '*' → logprob: -9.238295555114746
    6. ' ' → logprob: -9.488295555114746
    7. ' ' → logprob: -11.613295555114746
    8. '-s' → logprob: -12.363295555114746
    9. ' *' → logprob: -12.863295555114746
    10. '-k' → logprob: -13.113295555114746

Token 169: ' ' (ID: 220)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.5806392431259155
    2. ' last' → logprob: -0.8306392431259155
    3. ' first' → logprob: -6.205639362335205
    4. '2' → logprob: -6.705639362335205
    5. 'first' → logprob: -6.955639362335205
    6. ' ' → logprob: -8.830638885498047
    7. '(last' → logprob: -9.205638885498047
    8. '4' → logprob: -9.955638885498047
    9. ' (' → logprob: -10.080638885498047
    10. '3' → logprob: -10.080638885498047

Token 170: '2' (ID: 17)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.005305858328938484
    2. ' last' → logprob: -5.380305767059326
    3. '2' → logprob: -8.255306243896484
    4. 'first' → logprob: -8.380306243896484
    5. '(last' → logprob: -9.380306243896484
    6. '(' → logprob: -9.505306243896484
    7. '-' → logprob: -11.880306243896484
    8. ' (' → logprob: -12.130306243896484
    9. '1' → logprob: -12.255306243896484
    10. '0' → logprob: -12.505306243896484

Token 171: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 172: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.018153101205825806
    2. ' last' → logprob: -4.018153190612793
    3. '1' → logprob: -12.768153190612793
    4. 'first' → logprob: -15.643153190612793
    5. ' ' → logprob: -17.143152236938477
    6. '	last' → logprob: -17.268152236938477
    7. '(last' → logprob: -17.518152236938477
    8. '2' → logprob: -18.018152236938477
    9. ':last' → logprob: -18.018152236938477
    10. '_last' → logprob: -18.018152236938477

Token 173: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 174: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 175: ' init' (ID: 6327)
  Prédit: ' calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.44023290276527405
    2. ' get' → logprob: -1.4402328729629517
    3. ' main' → logprob: -2.440232992172241
    4. 'calc' → logprob: -4.315232753753662
    5. 'get' → logprob: -4.690232753753662
    6. ' calculate' → logprob: -5.940232753753662
    7. ' def' → logprob: -6.440232753753662
    8. 'def' → logprob: -6.565232753753662
    9. 'main' → logprob: -6.940232753753662
    10. ' __' → logprob: -7.315232753753662

Token 176: '_ans' (ID: 146254)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2078137397766113
    2. '_list' → logprob: -1.9578137397766113
    3. '_li' → logprob: -1.9578137397766113
    4. '_n' → logprob: -2.3328137397766113
    5. '():' → logprob: -2.4578137397766113
    6. 'def' → logprob: -2.8328137397766113
    7. '(' → logprob: -3.0828137397766113
    8. '()' → logprob: -3.7078137397766113
    9. '(n' → logprob: -4.207813739776611
    10. ':' → logprob: -4.332813739776611

Token 177: '_li' (ID: 110647)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.02152288518846035
    2. '()' → logprob: -3.8965229988098145
    3. '():
' → logprob: -7.2715229988098145
    4. '(' → logprob: -9.771522521972656
    5. '[]' → logprob: -9.896522521972656
    6. '_' → logprob: -9.896522521972656
    7. ' ():' → logprob: -9.896522521972656
    8. '_list' → logprob: -10.896522521972656
    9. '=[]' → logprob: -11.646522521972656
    10. ' =' → logprob: -11.646522521972656

Token 178: '(first' (ID: 31998)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.038321226835250854
    2. 't' → logprob: -3.7883212566375732
    3. '()' → logprob: -4.913321018218994
    4. '():
' → logprob: -5.038321018218994
    5. 'st' → logprob: -6.913321018218994
    6. 'def' → logprob: -10.413321495056152
    7. ' ():' → logprob: -10.538321495056152
    8. ' ()' → logprob: -11.288321495056152
    9. '():

' → logprob: -11.413321495056152
    10. '(' → logprob: -11.538321495056152

Token 179: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.305105060338974
    2. ',' → logprob: -1.9301050901412964
    3. '):' → logprob: -2.180104970932007
    4. '=' → logprob: -6.680105209350586
    5. '):
' → logprob: -7.555105209350586
    6. ' )' → logprob: -7.555105209350586
    7. '_li' → logprob: -7.555105209350586
    8. ',)' → logprob: -7.930105209350586
    9. ' ,' → logprob: -8.305105209350586
    10. ' =' → logprob: -8.930105209350586

Token 180: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006229760125279427
    2. ':' → logprob: -6.006229877471924
    3. '   ' → logprob: -6.131229877471924
    4. '=' → logprob: -6.881229877471924
    5. '=[]' → logprob: -7.756229877471924
    6. '():' → logprob: -10.631229400634766
    7. ' =
' → logprob: -10.756229400634766
    8. '[]' → logprob: -11.006229400634766
    9. '=[]
' → logprob: -11.006229400634766
    10. 'def' → logprob: -11.506229400634766

Token 181: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.37670186161994934
    2. 'return' (adapté à ' return') → logprob: -1.251701831817627
    3. ' return' → logprob: -4.501701831817627
    4. 'ans' → logprob: -5.126701831817627
    5. '   ' → logprob: -5.501701831817627
    6. ' [' → logprob: -5.751701831817627
    7. '[]' → logprob: -6.001701831817627
    8. ' ans' → logprob: -7.501701831817627
    9. 'def' → logprob: -9.251702308654785
    10. '[]
' → logprob: -9.626702308654785

Token 182: ' [' (ID: 723)
  Prédit: '[first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[first' → logprob: -0.08088468015193939
    2. '[' → logprob: -3.0808846950531006
    3. ' [' → logprob: -3.4558846950531006
    4. '[int' → logprob: -9.58088493347168
    5. '[]' → logprob: -9.70588493347168
    6. '[last' → logprob: -10.20588493347168
    7. '[list' → logprob: -11.33088493347168
    8. '[len' → logprob: -12.08088493347168
    9. '[start' → logprob: -12.33088493347168
    10. '[next' → logprob: -12.45588493347168

Token 183: 'first' (ID: 7743)
  Prédit: 'first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.00021093101531732827
    2. ' first' → logprob: -8.750210762023926
    3. '0' → logprob: -10.375210762023926
    4. '-' → logprob: -12.500210762023926
    5. '1' → logprob: -12.750210762023926
    6. '(first' → logprob: -12.875210762023926
    7. ']' → logprob: -12.875210762023926
    8. '[first' → logprob: -13.125210762023926
    9. '2' → logprob: -14.000210762023926
    10. 'int' → logprob: -14.250210762023926

Token 184: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005138330743648112
    2. ' ]' → logprob: -7.625514030456543
    3. ',' → logprob: -12.125514030456543
    4. ' *' → logprob: -12.375514030456543
    5. '*' → logprob: -12.750514030456543
    6. ' -' → logprob: -12.875514030456543
    7. ' +' → logprob: -13.125514030456543
    8. '()]' → logprob: -13.250514030456543
    9. ']
' → logprob: -13.500514030456543
    10. '-' → logprob: -14.000514030456543

Token 185: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006828876794315875
    2. '<|end|>' → logprob: -7.375682830810547
    3. '
' → logprob: -10.875682830810547
    4. ' def' → logprob: -11.000682830810547
    5. '\' → logprob: -12.375682830810547
    6. '<|end|>' → logprob: -12.750682830810547
    7. '_' → logprob: -13.000682830810547
    8. '```' → logprob: -13.000682830810547
    9. '_def' → logprob: -13.125682830810547
    10. 'ndef' → logprob: -13.500682830810547

Token 186: ' append' (ID: 17147)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.0828198194503784
    2. 'get' → logprob: -1.3328198194503784
    3. 'calc' → logprob: -1.4578198194503784
    4. 'def' → logprob: -3.082819938659668
    5. 'append' → logprob: -3.832819938659668
    6. ' calc' → logprob: -3.832819938659668
    7. 'add' → logprob: -3.957819938659668
    8. ' init' → logprob: -4.082819938659668
    9. ' get' → logprob: -4.332819938659668
    10. 'main' → logprob: -4.582819938659668

Token 187: '_to' (ID: 5089)
  Prédit: '_ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ans' → logprob: -0.5683183670043945
    2. '(' → logprob: -1.5683183670043945
    3. '(_' → logprob: -2.1933183670043945
    4. '(ans' → logprob: -3.0683183670043945
    5. '_answer' → logprob: -3.4433183670043945
    6. '_' → logprob: -4.3183183670043945
    7. ' (' → logprob: -4.8183183670043945
    8. ' _' → logprob: -5.1933183670043945
    9. '_an' → logprob: -6.1933183670043945
    10. '('_' → logprob: -6.6933183670043945

Token 188: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -0.3098127543926239
    2. '(ans' → logprob: -1.4348127841949463
    3. '(' → logprob: -4.059812545776367
    4. 'ans' → logprob: -5.559812545776367
    5. ' ans' → logprob: -5.809812545776367
    6. ' (' → logprob: -6.184812545776367
    7. '_answer' → logprob: -6.809812545776367
    8. ' _' → logprob: -8.184812545776367
    9. '_an' → logprob: -8.434812545776367
    10. '	ans' → logprob: -9.434812545776367

Token 189: '(ans' (ID: 70054)
  Prédit: '_li'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_li' → logprob: -0.03201061487197876
    2. '_ans' → logprob: -4.282010555267334
    3. '_' → logprob: -4.532010555267334
    4. '(' → logprob: -6.032010555267334
    5. '(_' → logprob: -6.157010555267334
    6. '_an' → logprob: -7.032010555267334
    7. '(ans' → logprob: -8.157011032104492
    8. '(li' → logprob: -8.407011032104492
    9. '```' → logprob: -8.657011032104492
    10. '_list' → logprob: -8.657011032104492

Token 190: '_li' (ID: 110647)
  Prédit: '_li'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_li' → logprob: -0.0007619839743711054
    2. '_' → logprob: -7.500761985778809
    3. ')_' → logprob: -9.000761985778809
    4. '_list' → logprob: -10.375761985778809
    5. ')' → logprob: -10.750761985778809
    6. '_l' → logprob: -11.500761985778809
    7. 'li' → logprob: -12.375761985778809
    8. '_)' → logprob: -13.125761985778809
    9. '_ll' → logprob: -13.125761985778809
    10. '_lst' → logprob: -13.500761985778809

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.110668618930504e-05
    2. ' ,' → logprob: -9.75006103515625
    3. '(ans' → logprob: -13.75006103515625
    4. ',
' → logprob: -15.12506103515625
    5. '   ' → logprob: -15.87506103515625
    6. ' ' → logprob: -16.12506103515625
    7. ',last' → logprob: -16.12506103515625
    8. ',a' → logprob: -16.62506103515625
    9. ')' → logprob: -16.62506103515625
    10. '(' → logprob: -16.87506103515625

Token 192: ' l' (ID: 305)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' value' → logprob: -1.3390228748321533
    2. 'value' → logprob: -1.5890228748321533
    3. 'first' → logprob: -2.5890228748321533
    4. ' val' → logprob: -2.7140228748321533
    5. ' first' → logprob: -2.7140228748321533
    6. 'val' → logprob: -3.0890228748321533
    7. 'last' → logprob: -3.2140228748321533
    8. ' li' → logprob: -3.2140228748321533
    9. ' last' → logprob: -3.2140228748321533
    10. 'li' → logprob: -3.7140228748321533

Token 193: '):
' (ID: 1883)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16320401430130005
    2. 'ast' → logprob: -1.9132039546966553
    3. 'en' → logprob: -6.163204193115234
    4. 'ist' → logprob: -8.163204193115234
    5. 'a' → logprob: -8.788204193115234
    6. 'ength' → logprob: -9.913204193115234
    7. '[i' → logprob: -10.038204193115234
    8. ')' → logprob: -10.163204193115234
    9. 'e' → logprob: -10.413204193115234
    10. '```' → logprob: -10.538204193115234

Token 194: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5876839756965637
    2. '   ' → logprob: -1.712683916091919
    3. '.append' → logprob: -2.712683916091919
    4. '(ans' → logprob: -2.712683916091919
    5. ':' → logprob: -3.087683916091919
    6. '[' → logprob: -3.587683916091919
    7. 'def' → logprob: -4.087684154510498
    8. ' (' → logprob: -4.587684154510498
    9. '(l' → logprob: -4.587684154510498
    10. '.' → logprob: -5.837684154510498

Token 195: ' last' (ID: 2174)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.01427057571709156
    2. 'ans' → logprob: -4.264270782470703
    3. '   ' → logprob: -9.389270782470703
    4. '	ans' → logprob: -10.889270782470703
    5. '(ans' → logprob: -13.139270782470703
    6. '_ans' → logprob: -14.264270782470703
    7. '    
' → logprob: -14.514270782470703
    8. '    ' → logprob: -14.889270782470703
    9. ' if' → logprob: -15.389270782470703
    10. '
' → logprob: -15.514270782470703

Token 196: '_val' (ID: 13694)
  Prédit: '_elem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_elem' → logprob: -0.3083023726940155
    2. '_li' → logprob: -1.808302402496338
    3. '_' → logprob: -2.558302402496338
    4. '_element' → logprob: -5.183302402496338
    5. '_ans' → logprob: -5.808302402496338
    6. '_ele' → logprob: -5.808302402496338
    7. 'elem' → logprob: -6.433302402496338
    8. ' =' → logprob: -6.433302402496338
    9. '_elements' → logprob: -6.808302402496338
    10. '_i' → logprob: -6.808302402496338

Token 197: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38696834444999695
    2. ' =' → logprob: -1.1369683742523193
    3. ' ' → logprob: -10.136968612670898
    4. '_' → logprob: -11.386968612670898
    5. 'ast' → logprob: -11.886968612670898
    6. ',' → logprob: -12.011968612670898
    7. 'ue' → logprob: -12.761968612670898
    8. '   ' → logprob: -12.886968612670898
    9. '.append' → logprob: -13.011968612670898
    10. '=int' → logprob: -13.386968612670898

Token 198: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.47417956590652466
    2. 'ans' → logprob: -0.9741795659065247
    3. '	ans' → logprob: -10.3491792678833
    4. '(ans' → logprob: -10.5991792678833
    5. '_ans' → logprob: -10.8491792678833
    6. 'l' → logprob: -11.8491792678833
    7. '   ' → logprob: -12.0991792678833
    8. ' ' → logprob: -12.7241792678833
    9. 'calc' → logprob: -12.9741792678833
    10. 'len' → logprob: -13.7241792678833

Token 199: '_li' (ID: 110647)
  Prédit: '_li'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_li' → logprob: -0.006719640456140041
    2. 'li' → logprob: -5.006719589233398
    3. 'Li' → logprob: -12.881719589233398
    4. 'i' → logprob: -14.256719589233398
    5. '<li' → logprob: -15.756719589233398
    6. ' li' → logprob: -15.881719589233398
    7. '(li' → logprob: -16.0067195892334
    8. '-li' → logprob: -16.0067195892334
    9. '_il' → logprob: -16.1317195892334
    10. '_l' → logprob: -16.3817195892334

Token 200: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -5.796184723294573e-06
    2. 'ast' → logprob: -12.875005722045898
    3. '-' → logprob: -13.500005722045898
    4. '[' → logprob: -14.375005722045898
    5. '```' → logprob: -15.125005722045898
    6. '   ' → logprob: -15.250005722045898
    7. '][-' → logprob: -15.875005722045898
    8. '
' → logprob: -15.875005722045898
    9. 'st' → logprob: -16.0000057220459
    10. ' [-' → logprob: -16.5000057220459

Token 201: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -16.750001907348633
    4. '１' → logprob: -17.062501907348633
    5. '
' → logprob: -17.812501907348633
    6. ']' → logprob: -17.937501907348633
    7. '  ' → logprob: -17.937501907348633
    8. '```' → logprob: -18.125001907348633
    9. '۱' → logprob: -18.375001907348633
    10. '0' → logprob: -18.500001907348633

Token 202: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12610824406147003
    2. '+' → logprob: -2.626108169555664
    3. ' +' → logprob: -3.376108169555664
    4. ']
' → logprob: -5.376108169555664
    5. ']+' → logprob: -5.501108169555664
    6. ' ]' → logprob: -6.001108169555664
    7. ')' → logprob: -8.251108169555664
    8. '-' → logprob: -8.751108169555664
    9. ' -' → logprob: -9.626108169555664
    10. ']

' → logprob: -9.876108169555664

Token 203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.047256071120500565
    2. ' ans' → logprob: -3.2972559928894043
    3. '+' → logprob: -5.922255992889404
    4. ' +' → logprob: -6.047255992889404
    5. '
' → logprob: -6.172255992889404
    6. 'ans' → logprob: -6.922255992889404
    7. ' if' → logprob: -8.172256469726562
    8. '	ans' → logprob: -8.547256469726562
    9. ' def' → logprob: -9.672256469726562
    10. '    ' → logprob: -9.797256469726562

Token 204: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.049197085201740265
    2. 'ans' (adapté à ' ans') → logprob: -3.424197196960449
    3. '   ' → logprob: -4.424197196960449
    4. ' new' → logprob: -6.924197196960449
    5. ' next' → logprob: -7.549197196960449
    6. ' if' → logprob: -7.549197196960449
    7. '
' → logprob: -8.29919719696045
    8. 'next' → logprob: -8.29919719696045
    9. 'new' → logprob: -9.17419719696045
    10. '+' → logprob: -9.17419719696045

Token 205: '_li' (ID: 110647)
  Prédit: '_li'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_li' → logprob: -1.3902033970225602e-05
    2. 'li' → logprob: -11.250014305114746
    3. '_il' → logprob: -15.625014305114746
    4. '.append' → logprob: -15.625014305114746
    5. '<li' → logprob: -15.750014305114746
    6. '_' → logprob: -16.25001335144043
    7. 'Li' → logprob: -16.62501335144043
    8. '```' → logprob: -16.75001335144043
    9. '_di' → logprob: -17.50001335144043
    10. 'append' → logprob: -17.75001335144043

Token 206: '.append' (ID: 3709)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.20151127874851227
    2. '.append' → logprob: -1.701511263847351
    3. '.extend' → logprob: -9.70151138305664
    4. ' .' → logprob: -10.82651138305664
    5. '.app' → logprob: -12.07651138305664
    6. '.ap' → logprob: -12.45151138305664
    7. '.
' → logprob: -12.82651138305664
    8. ' +=' → logprob: -14.07651138305664
    9. '_append' → logprob: -14.07651138305664
    10. '.Append' → logprob: -14.32651138305664

Token 207: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.6698858141899109
    2. '(last' → logprob: -0.7948858141899109
    3. '(ans' → logprob: -3.6698858737945557
    4. '(' → logprob: -4.544885635375977
    5. 'last' → logprob: -8.294885635375977
    6. 'l' → logprob: -9.044885635375977
    7. 'ans' → logprob: -10.544885635375977
    8. '((' → logprob: -10.794885635375977
    9. '(abs' → logprob: -11.044885635375977
    10. '(first' → logprob: -11.419885635375977

Token 208: ' *' (ID: 425)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2015896439552307
    2. '-' → logprob: -1.701589584350586
    3. ')' → logprob: -9.201589584350586
    4. '+' → logprob: -10.451589584350586
    5. ' ' → logprob: -11.576589584350586
    6. '   ' → logprob: -11.576589584350586
    7. ' ' → logprob: -11.951589584350586
    8. '-last' → logprob: -11.951589584350586
    9. ' +' → logprob: -12.201589584350586
    10. '*' → logprob: -12.326589584350586

Token 209: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3866822123527527
    2. ' ' → logprob: -1.2616822719573975
    3. ' -' → logprob: -3.8866822719573975
    4. '-' → logprob: -5.011682033538818
    5. 'last' → logprob: -5.636682033538818
    6. 'ast' → logprob: -6.011682033538818
    7. ' last' → logprob: -6.261682033538818
    8. '3' → logprob: -7.386682033538818
    9. '   ' → logprob: -8.386682510375977
    10. '  ' → logprob: -8.386682510375977

Token 210: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.43537113070487976
    2. '-' → logprob: -1.3103711605072021
    3. ' -' → logprob: -3.185371160507202
    4. 'last' → logprob: -4.060370922088623
    5. ' ' → logprob: -4.185370922088623
    6. 'ast' → logprob: -5.185370922088623
    7. ' last' → logprob: -6.810370922088623
    8. '3' → logprob: -7.935370922088623
    9. '4' → logprob: -8.185371398925781
    10. '-last' → logprob: -8.185371398925781

Token 211: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0067448546178638935
    2. '-' → logprob: -5.006744861602783
    3. ' ' → logprob: -10.756744384765625
    4. ')' → logprob: -12.881744384765625
    5. ' ' → logprob: -13.006744384765625
    6. '    ' → logprob: -13.131744384765625
    7. ' )' → logprob: -14.506744384765625
    8. '   ' → logprob: -14.881744384765625
    9. ' -
' → logprob: -16.006744384765625
    10. ',' → logprob: -16.506744384765625

Token 212: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.005235529970377684
    2. ' last' → logprob: -5.25523567199707
    3. '	last' → logprob: -14.25523567199707
    4. '   ' → logprob: -14.88023567199707
    5. '_last' → logprob: -15.63023567199707
    6. '[last' → logprob: -15.75523567199707
    7. ' ' → logprob: -16.25523567199707
    8. '(last' → logprob: -16.38023567199707
    9. ':last' → logprob: -16.38023567199707
    10. 'ans' → logprob: -17.63023567199707

Token 213: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -9.491498531133402e-06
    2. 'val' → logprob: -11.625009536743164
    3. ')' → logprob: -15.625009536743164
    4. '_' → logprob: -16.500009536743164
    5. '_va' → logprob: -16.500009536743164
    6. ' val' → logprob: -16.875009536743164
    7. '_VAL' → logprob: -17.375009536743164
    8. '	val' → logprob: -17.625009536743164
    9. ' _' → logprob: -18.000009536743164
    10. '_ans' → logprob: -18.250009536743164

Token 214: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015054593095555902
    2. ')
' → logprob: -6.501505374908447
    3. ' )' → logprob: -13.376505851745605
    4. ')return' → logprob: -14.126505851745605
    5. ')

' → logprob: -14.751505851745605
    6. '   ' → logprob: -15.876505851745605
    7. ')
' → logprob: -16.00150489807129
    8. '))' → logprob: -17.00150489807129
    9. ')`' → logprob: -17.75150489807129
    10. ' )
' → logprob: -18.25150489807129

Token 215: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1643759161233902
    2. '<|end|>' → logprob: -1.914375901222229
    3. '
' → logprob: -6.6643757820129395
    4. '<|end|>' → logprob: -7.0393757820129395
    5. '#' → logprob: -7.1643757820129395
    6. '```' → logprob: -7.9143757820129395
    7. '\n' → logprob: -8.164376258850098
    8. 'return' → logprob: -9.289376258850098
    9. ' def' → logprob: -9.539376258850098
    10. '\' → logprob: -9.664376258850098

Token 216: ' process' (ID: 2273)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.18742579221725464
    2. 'main' → logprob: -2.1874258518218994
    3. ' calc' → logprob: -3.6874258518218994
    4. ' get' → logprob: -4.56242561340332
    5. 'calc' → logprob: -5.06242561340332
    6. ' solve' → logprob: -5.43742561340332
    7. 'get' → logprob: -5.56242561340332
    8. ' def' → logprob: -6.56242561340332
    9. ' reverse' → logprob: -6.68742561340332
    10. 'def' → logprob: -6.81242561340332

Token 217: '_ans' (ID: 146254)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.25094926357269287
    2. '_input' → logprob: -2.0009493827819824
    3. '(' → logprob: -3.1259493827819824
    4. '_(' → logprob: -4.625949382781982
    5. '_li' → logprob: -4.875949382781982
    6. '_list' → logprob: -5.000949382781982
    7. '_inputs' → logprob: -6.000949382781982
    8. '_line' → logprob: -6.125949382781982
    9. '_elements' → logprob: -6.500949382781982
    10. '_a' → logprob: -6.875949382781982

Token 218: '_li' (ID: 110647)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.06476613879203796
    2. '_li' → logprob: -3.3147661685943604
    3. '(' → logprob: -4.064765930175781
    4. '(li' → logprob: -5.064765930175781
    5. '_ans' → logprob: -6.439765930175781
    6. '_' → logprob: -7.439765930175781
    7. '_(' → logprob: -8.064765930175781
    8. '(_' → logprob: -9.439765930175781
    9. '_list' → logprob: -9.689765930175781
    10. '(answer' → logprob: -9.814765930175781

Token 219: '(li' (ID: 111234)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0011743901995941997
    2. '(' → logprob: -6.751174449920654
    3. '(answer' → logprob: -13.251173973083496
    4. '():' → logprob: -14.001173973083496
    5. ' (' → logprob: -14.376173973083496
    6. '(def' → logprob: -14.626173973083496
    7. '(an' → logprob: -15.251173973083496
    8. '(args' → logprob: -15.876173973083496
    9. '(
' → logprob: -16.626174926757812
    10. '_ans' → logprob: -16.876174926757812

Token 220: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.923874702304602e-05
    2. '):' → logprob: -9.625089645385742
    3. '):
' → logprob: -11.500089645385742
    4. ' ,' → logprob: -11.500089645385742
    5. ',
' → logprob: -13.875089645385742
    6. ')' → logprob: -14.250089645385742
    7. '   ' → logprob: -14.875089645385742
    8. '[' → logprob: -15.125089645385742
    9. ',n' → logprob: -15.250089645385742
    10. '_,' → logprob: -16.000089645385742

Token 221: ' first' (ID: 1577)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.09548082947731018
    2. ' k' → logprob: -2.4704809188842773
    3. 'ans' → logprob: -5.470480918884277
    4. ' ans' → logprob: -6.845480918884277
    5. 'tmp' → logprob: -8.095480918884277
    6. 'n' → logprob: -8.220480918884277
    7. 'l' → logprob: -8.470480918884277
    8. ' n' → logprob: -9.470480918884277
    9. ' l' → logprob: -9.845480918884277
    10. '   ' → logprob: -10.032980918884277

Token 222: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000936355150770396
    2. ' ,' → logprob: -7.500936508178711
    3. '):
' → logprob: -9.000936508178711
    4. ',k' → logprob: -9.000936508178711
    5. '):' → logprob: -10.250936508178711
    6. '   ' → logprob: -10.250936508178711
    7. '_,' → logprob: -10.500936508178711
    8. ',
' → logprob: -11.500936508178711
    9. 'def' → logprob: -11.875936508178711
    10. ',l' → logprob: -12.750936508178711

Token 223: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5295407176017761
    2. ' ans' → logprob: -0.9045407176017761
    3. '
' → logprob: -6.654540538787842
    4. ' def' → logprob: -6.904540538787842
    5. 'ans' → logprob: -7.029540538787842
    6. ' for' → logprob: -7.529540538787842
    7. '    
' → logprob: -7.779540538787842
    8. ' k' → logprob: -7.779540538787842
    9. ' n' → logprob: -7.904540538787842
    10. '	ans' → logprob: -8.029541015625

Token 224: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.042366717010736465
    2. ' ans' → logprob: -3.2923667430877686
    3. '   ' → logprob: -5.7923665046691895
    4. 'for' → logprob: -7.0423665046691895
    5. ' for' → logprob: -8.667366981506348
    6. 'def' → logprob: -9.417366981506348
    7. 'n' → logprob: -10.042366981506348
    8. 'return' → logprob: -10.542366981506348
    9. '	ans' → logprob: -10.792366981506348
    10. ' return' → logprob: -12.042366981506348

Token 225: '_li' (ID: 110647)
  Prédit: '_li'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_li' → logprob: -3.452426608419046e-05
    2. '_' → logprob: -11.37503433227539
    3. 'li' → logprob: -11.37503433227539
    4. '_val' → logprob: -12.50003433227539
    5. '_l' → logprob: -12.87503433227539
    6. '=' → logprob: -13.37503433227539
    7. ' =' → logprob: -14.00003433227539
    8. '_i' → logprob: -14.37503433227539
    9. '_di' → logprob: -14.87503433227539
    10. '_il' → logprob: -15.25003433227539

Token 226: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3909258544445038
    2. '.append' → logprob: -1.5159258842468262
    3. '=' → logprob: -2.265925884246826
    4. '.' → logprob: -9.515925407409668
    5. '.extend' → logprob: -9.640925407409668
    6. 'append' → logprob: -10.015925407409668
    7. ' .' → logprob: -11.015925407409668
    8. '_append' → logprob: -11.765925407409668
    9. ' append' → logprob: -12.140925407409668
    10. ',' → logprob: -12.390925407409668

Token 227: ' init' (ID: 6327)
  Prédit: '[first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[first' → logprob: -0.4179565906524658
    2. '[' → logprob: -1.4179565906524658
    3. ' [' → logprob: -2.417956590652466
    4. 'init' → logprob: -4.667956352233887
    5. ' init' → logprob: -8.042956352233887
    6. '[start' → logprob: -8.792956352233887
    7. '[get' → logprob: -8.917956352233887
    8. '   ' → logprob: -9.667956352233887
    9. ' ' → logprob: -10.042956352233887
    10. '[int' → logprob: -10.542956352233887

Token 228: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -2.248469718324486e-05
    2. 'ans' → logprob: -11.500022888183594
    3. '(ans' → logprob: -12.125022888183594
    4. '_answer' → logprob: -12.500022888183594
    5. '_' → logprob: -13.875022888183594
    6. '_answers' → logprob: -14.125022888183594
    7. '_first' → logprob: -14.875022888183594
    8. '[' → logprob: -15.625022888183594
    9. ' _' → logprob: -15.875022888183594
    10. '```' → logprob: -15.875022888183594

Token 229: '_li' (ID: 110647)
  Prédit: '_li'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_li' → logprob: -0.0017044597771018744
    2. 'li' → logprob: -6.376704692840576
    3. '_list' → logprob: -13.626704216003418
    4. '<li' → logprob: -14.876704216003418
    5. 'Li' → logprob: -15.251704216003418
    6. '(li' → logprob: -15.626704216003418
    7. '[' → logprob: -16.126705169677734
    8. '_l' → logprob: -16.626705169677734
    9. 'list' → logprob: -16.751705169677734
    10. ' li' → logprob: -17.501705169677734

Token 230: '(first' (ID: 31998)
  Prédit: '(first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(first' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.625000953674316
    3. 'first' → logprob: -14.875000953674316
    4. '[first' → logprob: -18.375
    5. ' (' → logprob: -19.375
    6. ' first' → logprob: -19.875
    7. '(fi' → logprob: -20.625
    8. '(initial' → logprob: -20.625
    9. '(f' → logprob: -21.125
    10. '(second' → logprob: -21.875

Token 231: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16027328372001648
    2. ')
' → logprob: -1.9102733135223389
    3. ')

' → logprob: -10.160273551940918
    4. '   ' → logprob: -12.035273551940918
    5. ')
' → logprob: -12.535273551940918
    6. ' ' → logprob: -15.660273551940918
    7. 'def' → logprob: -15.910273551940918
    8. ' )' → logprob: -16.2852725982666
    9. ',' → logprob: -16.4102725982666
    10. '),' → logprob: -16.5352725982666

Token 232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20547543466091156
    2. 'k' → logprob: -2.580475330352783
    3. ' for' → logprob: -2.955475330352783
    4. ' k' → logprob: -3.080475330352783
    5. 'for' → logprob: -4.705475330352783
    6. '
' → logprob: -6.830475330352783
    7. 'n' → logprob: -7.080475330352783
    8. ' n' → logprob: -7.205475330352783
    9. '    
' → logprob: -8.955475807189941
    10. ' ' → logprob: -10.705475807189941

Token 233: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6742922067642212
    2. 'k' → logprob: -0.7992922067642212
    3. ' for' → logprob: -4.049292087554932
    4. '   ' → logprob: -4.674292087554932
    5. 'l' → logprob: -5.049292087554932
    6. 'n' → logprob: -5.424292087554932
    7. ' k' → logprob: -6.174292087554932
    8. 's' → logprob: -8.17429256439209
    9. 'return' → logprob: -8.42429256439209
    10. ' n' → logprob: -9.04929256439209

Token 234: ' l' (ID: 305)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.0851644277572632
    2. 'i' → logprob: -1.2101644277572632
    3. ' l' → logprob: -1.7101644277572632
    4. 'l' → logprob: -1.7101644277572632
    5. ' val' → logprob: -7.460164546966553
    6. 'val' → logprob: -7.960164546966553
    7. ' idx' → logprob: -8.085164070129395
    8. 'x' → logprob: -8.460164070129395
    9. ' x' → logprob: -8.710164070129395
    10. ' ' → logprob: -8.960164070129395

Token 235: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04863164573907852
    2. 'in' → logprob: -3.0486316680908203
    3. ' ' → logprob: -11.67363166809082
    4. ',' → logprob: -11.79863166809082
    5. 'i' → logprob: -12.29863166809082
    6. '_in' → logprob: -12.29863166809082
    7. 'li' → logprob: -12.42363166809082
    8. 's' → logprob: -12.92363166809082
    9. '   ' → logprob: -13.17363166809082
    10. '	in' → logprob: -13.42363166809082

Token 236: ' li' (ID: 3476)
  Prédit: 'li'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'li' → logprob: -0.0022632593754678965
    2. ' li' → logprob: -6.127263069152832
    3. 'calc' → logprob: -9.627263069152832
    4. 'range' → logprob: -12.252263069152832
    5. ' calc' → logprob: -13.127263069152832
    6. ' range' → logprob: -13.252263069152832
    7. '   ' → logprob: -13.752263069152832
    8. '<li' → logprob: -14.002263069152832
    9. 'list' → logprob: -14.377263069152832
    10. '(li' → logprob: -14.502263069152832

Token 237: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008139163837768137
    2. ' :' → logprob: -7.750813961029053
    3. ':
' → logprob: -8.125813484191895
    4. '[' → logprob: -9.875813484191895
    5. '[:-' → logprob: -10.875813484191895
    6. '):' → logprob: -11.375813484191895
    7. '   ' → logprob: -13.875813484191895
    8. '[:' → logprob: -14.500813484191895
    9. ')' → logprob: -14.500813484191895
    10. '):
' → logprob: -14.625813484191895

Token 238: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018279530107975006
    2. 'append' → logprob: -4.393279552459717
    3. ' append' → logprob: -5.393279552459717
    4. '
' → logprob: -7.018279552459717
    5. '        
' → logprob: -9.393279075622559
    6. '.append' → logprob: -9.518279075622559
    7. '   ' → logprob: -10.018279075622559
    8. '    
' → logprob: -11.018279075622559
    9. '_append' → logprob: -11.268279075622559
    10. '    ' → logprob: -11.518279075622559

Token 239: ' append' (ID: 17147)
  Prédit: ' append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' append' → logprob: -0.2666989266872406
    2. 'append' (adapté à ' append') → logprob: -1.516698956489563
    3. '   ' → logprob: -4.266698837280273
    4. '       ' → logprob: -8.516698837280273
    5. '	append' → logprob: -8.641698837280273
    6. '
' → logprob: -8.766698837280273
    7. '.append' → logprob: -9.891698837280273
    8. '    
' → logprob: -10.891698837280273
    9. '_append' → logprob: -12.141698837280273
    10. '        
' → logprob: -12.141698837280273

Token 240: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -5.512236498361744e-07
    2. '(ans' → logprob: -15.250000953674316
    3. '(' → logprob: -16.875
    4. 'To' → logprob: -16.875
    5. 'to' → logprob: -18.375
    6. '"_' → logprob: -18.625
    7. '```' → logprob: -19.0
    8. '_ans' → logprob: -19.25
    9. '##_' → logprob: -19.875
    10. ''_' → logprob: -19.875

Token 241: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -0.634278416633606
    2. 'ans' → logprob: -0.759278416633606
    3. '(ans' → logprob: -6.634278297424316
    4. ' ans' → logprob: -8.134278297424316
    5. '	ans' → logprob: -9.884278297424316
    6. '_answer' → logprob: -11.634278297424316
    7. 'answer' → logprob: -13.134278297424316
    8. 'a' → logprob: -13.259278297424316
    9. '_answers' → logprob: -13.509278297424316
    10. 'Ans' → logprob: -13.634278297424316

Token 242: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.3544423381972592e-05
    2. '(' → logprob: -11.87501335144043
    3. '(answer' → logprob: -12.37501335144043
    4. ' (' → logprob: -13.00001335144043
    5. 'ans' → logprob: -17.37501335144043
    6. '```' → logprob: -17.62501335144043
    7. '(an' → logprob: -18.00001335144043
    8. '(args' → logprob: -18.12501335144043
    9. '	ans' → logprob: -18.62501335144043
    10. '(acc' → logprob: -18.75001335144043

Token 243: '_li' (ID: 110647)
  Prédit: '_li'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_li' → logprob: -6.945094355614856e-05
    2. 'li' → logprob: -9.625069618225098
    3. '_il' → logprob: -13.875069618225098
    4. '<li' → logprob: -14.000069618225098
    5. 'Li' → logprob: -14.500069618225098
    6. '_l' → logprob: -14.875069618225098
    7. '(li' → logprob: -16.00006866455078
    8. '_' → logprob: -16.25006866455078
    9. '_i' → logprob: -16.50006866455078
    10. '_di' → logprob: -16.62506866455078

Token 244: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007423703093081713
    2. '(' → logprob: -5.0074238777160645
    3. '(l' → logprob: -7.6324238777160645
    4. ',l' → logprob: -8.757423400878906
    5. ')' → logprob: -9.882423400878906
    6. ' ,' → logprob: -11.507423400878906
    7. ',(' → logprob: -13.257423400878906
    8. ' (' → logprob: -14.132423400878906
    9. '(li' → logprob: -14.757423400878906
    10. ',
' → logprob: -15.257423400878906

Token 245: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.02324594371020794
    2. ' l' → logprob: -3.7732460498809814
    3. '	l' → logprob: -15.273245811462402
    4. '   ' → logprob: -15.398245811462402
    5. '    ' → logprob: -17.77324676513672
    6. ')' → logprob: -18.39824676513672
    7. ' ' → logprob: -18.52324676513672
    8. ' л' → logprob: -18.64824676513672
    9. '_l' → logprob: -18.89824676513672
    10. '       ' → logprob: -19.02324676513672

Token 246: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010735384421423078
    2. ')
' → logprob: -6.876073360443115
    3. ' )' → logprob: -10.251073837280273
    4. ')

' → logprob: -12.376073837280273
    5. ')
' → logprob: -14.751073837280273
    6. '+' → logprob: -15.376073837280273
    7. ' )
' → logprob: -15.501073837280273
    8. ')return' → logprob: -15.876073837280273
    9. '   ' → logprob: -16.126073837280273
    10. '[' → logprob: -16.751073837280273

Token 247: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.429896944202483e-05
    2. ' return' → logprob: -10.625043869018555
    3. 'return' → logprob: -11.625043869018555
    4. '<|end|>' → logprob: -11.750043869018555
    5. '	return' → logprob: -13.375043869018555
    6. '   ' → logprob: -14.375043869018555
    7. 'def' → logprob: -15.875043869018555
    8. '<|end|>' → logprob: -16.000043869018555
    9. '    
' → logprob: -16.125043869018555
    10. '       ' → logprob: -16.125043869018555

Token 248: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019614873453974724
    2. ' return' → logprob: -4.5196146965026855
    3. 'return' (adapté à ' return') → logprob: -4.7696146965026855
    4. '	return' → logprob: -10.144615173339844
    5. '<|end|>' → logprob: -12.519615173339844
    6. 'def' → logprob: -14.144615173339844
    7. '   ' → logprob: -14.394615173339844
    8. '       ' → logprob: -14.644615173339844
    9. ' ' → logprob: -14.769615173339844
    10. '    
' → logprob: -15.144615173339844

Token 249: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.5759616494178772
    2. 'ans' → logprob: -0.8259616494178772
    3. '(ans' → logprob: -10.95096206665039
    4. '	ans' → logprob: -12.57596206665039
    5. '_ans' → logprob: -13.95096206665039
    6. ' ' → logprob: -16.07596206665039
    7. ' ' → logprob: -16.20096206665039
    8. '[' → logprob: -16.32596206665039
    9. 'Ans' → logprob: -16.95096206665039
    10. '   ' → logprob: -17.82596206665039

Token 250: '_li' (ID: 110647)
  Prédit: '_li'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_li' → logprob: -0.0007046872633509338
    2. 'li' → logprob: -7.375704765319824
    3. '_ans' → logprob: -9.625704765319824
    4. '_' → logprob: -12.500704765319824
    5. '_il' → logprob: -12.500704765319824
    6. '_i' → logprob: -13.875704765319824
    7. 'Li' → logprob: -14.125704765319824
    8. '_l' → logprob: -14.375704765319824
    9. 'ans' → logprob: -14.625704765319824
    10. 'i' → logprob: -14.625704765319824

Token 251: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 252: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12650476396083832
    2. 'n' → logprob: -2.25150465965271
    3. 'if' → logprob: -4.876504898071289
    4. '#' → logprob: -5.376504898071289
    5. 'print' → logprob: -7.626504898071289
    6. 'for' → logprob: -8.126504898071289
    7. 'li' → logprob: -8.626504898071289
    8. '```' → logprob: -8.751504898071289
    9. '<|end|>' → logprob: -9.626504898071289
    10. 'input' → logprob: -9.751504898071289

Token 253: ' remove' (ID: 6234)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.05511222779750824
    2. 'main' → logprob: -2.93011212348938
    3. ' process' → logprob: -9.3051118850708
    4. ' solve' → logprob: -9.4301118850708
    5. 'process' → logprob: -10.9301118850708
    6. ' calculate' → logprob: -11.4301118850708
    7. 'solve' → logprob: -11.4301118850708
    8. ' calc' → logprob: -12.0551118850708
    9. ' get' → logprob: -12.5551118850708
    10. '_main' → logprob: -13.1801118850708

Token 254: '_last' (ID: 26359)
  Prédit: '_last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_last' → logprob: -0.9924507141113281
    2. '_' → logprob: -1.2424507141113281
    3. '_duplicates' → logprob: -2.117450714111328
    4. '_element' → logprob: -2.867450714111328
    5. '_empty' → logprob: -3.992450714111328
    6. '_from' → logprob: -3.992450714111328
    7. '_duplicate' → logprob: -4.242450714111328
    8. '_dup' → logprob: -4.242450714111328
    9. '_first' → logprob: -4.617450714111328
    10. '_tail' → logprob: -4.742450714111328

Token 255: '(ans' (ID: 70054)
  Prédit: '_element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_element' → logprob: -0.18497762084007263
    2. '_' → logprob: -2.6849775314331055
    3. '_elem' → logprob: -3.6849775314331055
    4. '_(' → logprob: -3.6849775314331055
    5. '(' → logprob: -3.9349775314331055
    6. '_parent' → logprob: -4.3099775314331055
    7. '_char' → logprob: -4.9349775314331055
    8. '(_' → logprob: -5.6849775314331055
    9. '_line' → logprob: -6.4349775314331055
    10. '_item' → logprob: -7.0599775314331055

Token 256: '_li' (ID: 110647)
  Prédit: '_li'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_li' → logprob: -1.3902033970225602e-05
    2. 'li' → logprob: -12.250014305114746
    3. '_' → logprob: -12.750014305114746
    4. '_val' → logprob: -13.375014305114746
    5. '<li' → logprob: -14.250014305114746
    6. 'def' → logprob: -14.500014305114746
    7. '(li' → logprob: -14.875014305114746
    8. ')_' → logprob: -14.875014305114746
    9. ')' → logprob: -15.000014305114746
    10. '_il' → logprob: -15.000014305114746

Token 257: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003990661818534136
    2. ')' → logprob: -5.628990650177002
    3. '):
' → logprob: -7.878990650177002
    4. ' ):' → logprob: -12.37899112701416
    5. '):
' → logprob: -12.50399112701416
    6. '):

' → logprob: -13.87899112701416
    7. ':' → logprob: -14.12899112701416
    8. ',' → logprob: -14.37899112701416
    9. '[]):' → logprob: -14.37899112701416
    10. ' ' → logprob: -15.50399112701416

Token 258: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11996079981327057
    2. ' ans' → logprob: -2.4949607849121094
    3. ' return' → logprob: -3.8699607849121094
    4. 'ans' → logprob: -4.869960784912109
    5. 'return' → logprob: -6.244960784912109
    6. '	ans' → logprob: -9.74496078491211
    7. '(ans' → logprob: -11.61996078491211
    8. '	return' → logprob: -13.49496078491211
    9. '   ' → logprob: -14.36996078491211
    10. '    ' → logprob: -14.36996078491211

Token 259: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.037671662867069244
    2. 'return' → logprob: -3.4126715660095215
    3. ' ans' → logprob: -6.2876715660095215
    4. '   ' → logprob: -6.5376715660095215
    5. ' return' → logprob: -7.2876715660095215
    6. '	ans' → logprob: -11.41267204284668
    7. '(ans' → logprob: -12.03767204284668
    8. 'del' → logprob: -12.91267204284668
    9. 'ann' → logprob: -13.78767204284668
    10. 'answer' → logprob: -14.03767204284668

Token 260: '_li' (ID: 110647)
  Prédit: '_li'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_li' → logprob: -3.7697225252486533e-06
    2. 'li' → logprob: -12.875003814697266
    3. '_' → logprob: -14.125003814697266
    4. '_il' → logprob: -15.500003814697266
    5. 'Li' → logprob: -15.750003814697266
    6. ' _' → logprob: -17.125003814697266
    7. '_val' → logprob: -17.625003814697266
    8. '=_' → logprob: -17.750003814697266
    9. '[_' → logprob: -17.875003814697266
    10. '_di' → logprob: -18.125003814697266

Token 261: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -3.619311974034645e-05
    2. '.' → logprob: -10.250036239624023
    3. 'pop' → logprob: -14.875036239624023
    4. '.remove' → logprob: -15.125036239624023
    5. ' .' → logprob: -16.000036239624023
    6. '[:-' → logprob: -18.125036239624023
    7. '.append' → logprob: -18.125036239624023
    8. '=' → logprob: -18.875036239624023
    9. ' =' → logprob: -19.250036239624023
    10. '	pop' → logprob: -19.250036239624023

Token 262: '(-' (ID: 8087)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -7.3458322731312364e-06
    2. '()
' → logprob: -12.000007629394531
    3. '()

' → logprob: -14.500007629394531
    4. '()`' → logprob: -15.125007629394531
    5. '()\' → logprob: -15.750007629394531
    6. '(' → logprob: -16.37500762939453
    7. '()"' → logprob: -16.50000762939453
    8. '()]' → logprob: -17.25000762939453
    9. '()<' → logprob: -17.25000762939453
    10. '()
' → logprob: -17.75000762939453

Token 263: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -14.000001907348633
    3. ')' → logprob: -14.125001907348633
    4. '   ' → logprob: -15.750001907348633
    5. '0' → logprob: -16.125001907348633
    6. '2' → logprob: -16.187501907348633
    7. '```' → logprob: -16.375001907348633
    8. '  ' → logprob: -17.875001907348633
    9. '-' → logprob: -18.125001907348633
    10. '(' → logprob: -18.312501907348633

Token 264: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ')
' → logprob: -14.000000953674316
    3. ')

' → logprob: -18.25
    4. '}' → logprob: -19.875
    5. ' )' → logprob: -19.875
    6. '<|end|>' → logprob: -20.0
    7. ')return' → logprob: -20.25
    8. '),' → logprob: -20.5
    9. ')`' → logprob: -20.5
    10. ')}' → logprob: -21.0

Token 265: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013046692125499249
    2. '<|end|>' → logprob: -4.388046741485596
    3. '#' → logprob: -8.388046264648438
    4. 'for' → logprob: -9.138046264648438
    5. '```' → logprob: -9.513046264648438
    6. '<|end|>' → logprob: -9.638046264648438
    7. 'n' → logprob: -11.263046264648438
    8. 'print' → logprob: -11.388046264648438
    9. ')' → logprob: -11.513046264648438
    10. 'if' → logprob: -12.013046264648438

Token 266: ' print' (ID: 2123)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6939182877540588
    2. 'main' → logprob: -0.6939182877540588
    3. 'calc' → logprob: -8.818918228149414
    4. 'process' → logprob: -9.318918228149414
    5. 'reverse' → logprob: -9.568918228149414
    6. ' calc' → logprob: -9.693918228149414
    7. ' process' → logprob: -9.943918228149414
    8. 'get' → logprob: -10.068918228149414
    9. ' get' → logprob: -10.068918228149414
    10. 'calculate' → logprob: -10.318918228149414

Token 267: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -0.2896672487258911
    2. '_answer' → logprob: -1.6646672487258911
    3. '_result' → logprob: -3.6646671295166016
    4. '_list' → logprob: -4.289667129516602
    5. '_' → logprob: -4.914667129516602
    6. '_answers' → logprob: -5.414667129516602
    7. '(' → logprob: -5.789667129516602
    8. '(*' → logprob: -6.164667129516602
    9. '_results' → logprob: -6.289667129516602
    10. '(ans' → logprob: -7.039667129516602

Token 268: '_li' (ID: 110647)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.02182106114923954
    2. '_li' → logprob: -4.896821022033691
    3. '(' → logprob: -5.021821022033691
    4. '():' → logprob: -5.771821022033691
    5. '(li' → logprob: -5.896821022033691
    6. '()' → logprob: -7.396821022033691
    7. '_ans' → logprob: -7.521821022033691
    8. '_(' → logprob: -8.771821022033691
    9. '():
' → logprob: -9.396821022033691
    10. 'ans' → logprob: -10.146821022033691

Token 269: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.008627224713563919
    2. '(' → logprob: -4.758627414703369
    3. '(answer' → logprob: -11.633626937866211
    4. '(def' → logprob: -13.758626937866211
    5. '(an' → logprob: -14.008626937866211
    6. '()' → logprob: -15.133626937866211
    7. '(
' → logprob: -15.133626937866211
    8. '(print' → logprob: -15.133626937866211
    9. ' (' → logprob: -15.508626937866211
    10. '("("' → logprob: -16.00862693786621

Token 270: '_li' (ID: 110647)
  Prédit: '_li'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_li' → logprob: -0.00028993739397265017
    2. 'li' → logprob: -9.625289916992188
    3. ')' → logprob: -9.750289916992188
    4. '(_' → logprob: -10.000289916992188
    5. ')_' → logprob: -10.500289916992188
    6. '_' → logprob: -10.500289916992188
    7. '(li' → logprob: -11.375289916992188
    8. '_l' → logprob: -11.875289916992188
    9. '_i' → logprob: -12.250289916992188
    10. 'Li' → logprob: -12.250289916992188

Token 271: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1080220639705658
    2. '):
' → logprob: -2.3580219745635986
    3. ')' → logprob: -4.858022212982178
    4. '):
' → logprob: -11.35802173614502
    5. '):

' → logprob: -12.98302173614502
    6. ')
' → logprob: -13.85802173614502
    7. '():' → logprob: -13.98302173614502
    8. '():
' → logprob: -14.10802173614502
    9. ':' → logprob: -14.23302173614502
    10. '[]):' → logprob: -14.35802173614502

Token 272: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2328040599822998
    2. ' print' → logprob: -1.9828040599822998
    3. 'print' → logprob: -3.1078040599823
    4. ' for' → logprob: -3.8578040599823
    5. 'for' → logprob: -5.482804298400879
    6. '```' → logprob: -10.232804298400879
    7. 'def' → logprob: -14.232804298400879
    8. '    ' → logprob: -15.232804298400879
    9. '	print' → logprob: -15.607804298400879
    10. '`' → logprob: -15.857804298400879

Token 273: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.4757364094257355
    2. 'for' → logprob: -0.9757363796234131
    3. ' for' → logprob: -6.725736618041992
    4. 'def' → logprob: -8.225736618041992
    5. ' print' → logprob: -8.725736618041992
    6. '   ' → logprob: -10.475736618041992
    7. '```' → logprob: -15.975736618041992
    8. ' def' → logprob: -17.225736618041992
    9. ' ' → logprob: -19.725736618041992
    10. '`' → logprob: -20.475736618041992

Token 274: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.0012633290607482195
    2. '('' → logprob: -7.37626314163208
    3. '(' → logprob: -8.001263618469238
    4. '("' → logprob: -8.126263618469238
    5. '(ans' → logprob: -12.626263618469238
    6. '(*(' → logprob: -13.751263618469238
    7. '(len' → logprob: -14.626263618469238
    8. '()' → logprob: -14.876263618469238
    9. '(*)' → logprob: -15.251263618469238
    10. '*' → logprob: -15.501263618469238

Token 275: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -2.1008713702030946e-06
    2. '(ans' → logprob: -13.375001907348633
    3. ' ans' → logprob: -14.500001907348633
    4. '[' → logprob: -17.375001907348633
    5. '	ans' → logprob: -18.750001907348633
    6. ')' → logprob: -20.000001907348633
    7. '_ans' → logprob: -20.625001907348633
    8. 'anz' → logprob: -21.125001907348633
    9. '```' → logprob: -21.125001907348633
    10. '`' → logprob: -21.125001907348633

Token 276: '_li' (ID: 110647)
  Prédit: '_li'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_li' → logprob: -0.00015920029545668513
    2. 'li' → logprob: -8.75015926361084
    3. '_ans' → logprob: -14.87515926361084
    4. 'Li' → logprob: -15.75015926361084
    5. '_il' → logprob: -16.000158309936523
    6. '<li' → logprob: -17.500158309936523
    7. 's' → logprob: -17.500158309936523
    8. 'ans' → logprob: -17.625158309936523
    9. '_' → logprob: -17.750158309936523
    10. '_ls' → logprob: -18.500158309936523

Token 277: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')
' → logprob: -14.000000953674316
    3. ' )' → logprob: -16.125001907348633
    4. ')`' → logprob: -17.250001907348633
    5. '))' → logprob: -18.625001907348633
    6. ')#' → logprob: -18.750001907348633
    7. '),' → logprob: -19.000001907348633
    8. '())' → logprob: -19.375001907348633
    9. ')

' → logprob: -19.375001907348633
    10. ').' → logprob: -19.500001907348633

Token 278: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6291263699531555
    2. 'n' → logprob: -0.8791263699531555
    3. 'if' → logprob: -3.0041263103485107
    4. 'for' → logprob: -6.25412654876709
    5. '```' → logprob: -9.37912654876709
    6. 'a' → logprob: -10.37912654876709
    7. 'li' → logprob: -10.50412654876709
    8. '#' → logprob: -10.75412654876709
    9. 'ndef' → logprob: -10.87912654876709
    10. 'num' → logprob: -11.25412654876709

Token 279: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0005169323412701488
    2. ' main' → logprob: -7.875516891479492
    3. 'def' → logprob: -9.125516891479492
    4. 'solve' → logprob: -10.750516891479492
    5. '__' → logprob: -13.000516891479492
    6. 'if' → logprob: -13.750516891479492
    7. 'process' → logprob: -14.000516891479492
    8. '_main' → logprob: -14.375516891479492
    9. 'run' → logprob: -14.500516891479492
    10. 'resolve' → logprob: -14.750516891479492

Token 280: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -4.274932143744081e-05
    2. '():
' → logprob: -10.500042915344238
    3. ' ():' → logprob: -11.625042915344238
    4. '()' → logprob: -12.375042915344238
    5. '_' → logprob: -14.000042915344238
    6. '(' → logprob: -14.000042915344238
    7. '():
' → logprob: -16.125041961669922
    8. '()>' → logprob: -16.250041961669922
    9. '():

' → logprob: -17.250041961669922
    10. '().' → logprob: -18.250041961669922

Token 281: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.131072998046875
    2. 'n' → logprob: -2.131072998046875
    3. ' n' → logprob: -5.506072998046875
    4. '_n' → logprob: -9.881072998046875
    5. '	n' → logprob: -11.256072998046875
    6. '(n' → logprob: -11.756072998046875
    7. '()' → logprob: -14.756072998046875
    8. '```' → logprob: -15.006072998046875
    9. ',n' → logprob: -15.381072998046875
    10. '    ' → logprob: -15.381072998046875

Token 282: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.09095354378223419
    2. ' n' → logprob: -2.9659535884857178
    3. '   ' → logprob: -3.3409535884857178
    4. '	n' → logprob: -11.715953826904297
    5. ' ' → logprob: -11.840953826904297
    6. '  ' → logprob: -12.590953826904297
    7. '_n' → logprob: -12.715953826904297
    8. 'N' → logprob: -13.840953826904297
    9. '
' → logprob: -14.340953826904297
    10. '    ' → logprob: -14.840953826904297

Token 283: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018154388293623924
    2. '=' → logprob: -4.018154621124268
    3. ',' → logprob: -13.14315414428711
    4. ' ' → logprob: -13.26815414428711
    5. '   ' → logprob: -14.26815414428711
    6. '  ' → logprob: -16.14315414428711
    7. ' ,' → logprob: -16.76815414428711
    8. ' ' → logprob: -17.01815414428711
    9. '_' → logprob: -17.64315414428711
    10. ' =
' → logprob: -17.64315414428711

Token 284: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.001170225441455841
    2. ' get' → logprob: -6.7511701583862305
    3. '(get' → logprob: -17.501171112060547
    4. '=get' → logprob: -18.751171112060547
    5. '	get' → logprob: -18.751171112060547
    6. '_get' → logprob: -18.751171112060547
    7. 'int' → logprob: -18.876171112060547
    8. 'n' → logprob: -19.501171112060547
    9. '.get' → logprob: -19.876171112060547
    10. '   ' → logprob: -20.751171112060547

Token 285: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.9361264946837764e-07
    2. 'input' → logprob: -16.5
    3. '_n' → logprob: -18.0
    4. ' _' → logprob: -19.125
    5. '_in' → logprob: -19.125
    6. '_' → logprob: -19.25
    7. '_output' → logprob: -19.375
    8. 'n' → logprob: -19.375
    9. '_inputs' → logprob: -20.25
    10. '(_' → logprob: -20.375

Token 286: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -4.0126840758603066e-05
    2. 'n' → logprob: -10.125040054321289
    3. '()' → logprob: -17.75004005432129
    4. '_' → logprob: -18.00004005432129
    5. '```' → logprob: -18.00004005432129
    6. 'int' → logprob: -19.37504005432129
    7. 'N' → logprob: -19.62504005432129
    8. 's' → logprob: -19.75004005432129
    9. '   ' → logprob: -19.87504005432129
    10. '(' → logprob: -20.12504005432129

Token 287: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.2233183042553719e-05
    2. '()
' → logprob: -11.500012397766113
    3. '()\' → logprob: -14.750012397766113
    4. '()

' → logprob: -15.000012397766113
    5. ' ()' → logprob: -15.250012397766113
    6. ')' → logprob: -15.625012397766113
    7. '()`' → logprob: -15.625012397766113
    8. '())' → logprob: -15.750012397766113
    9. '(' → logprob: -15.750012397766113
    10. 'n' → logprob: -16.000011444091797

Token 288: '   ' (ID: 271)
  Prédit: 'li'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'li' → logprob: -0.0027241562493145466
    2. '   ' → logprob: -6.0027241706848145
    3. 'l' → logprob: -9.502723693847656
    4. ' li' → logprob: -9.502723693847656
    5. 's' → logprob: -10.502723693847656
    6. 'lee' → logprob: -11.252723693847656
    7. 'le' → logprob: -11.252723693847656
    8. 'a' → logprob: -11.502723693847656
    9. 'ls' → logprob: -11.752723693847656
    10. 'lis' → logprob: -11.877723693847656

Token 289: ' li' (ID: 3476)
  Prédit: 'li'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'li' (adapté à ' li') → logprob: -0.00039468807517550886
    2. '   ' → logprob: -9.125394821166992
    3. 'l' → logprob: -9.750394821166992
    4. 's' → logprob: -9.750394821166992
    5. 'lee' → logprob: -10.000394821166992
    6. 'a' → logprob: -10.250394821166992
    7. 'ls' → logprob: -11.250394821166992
    8. 'le' → logprob: -11.250394821166992
    9. 'input' → logprob: -11.250394821166992
    10. 'lis' → logprob: -11.625394821166992

Token 290: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519439160823822
    2. ' =' → logprob: -1.5019439458847046
    3. '_' → logprob: -11.251943588256836
    4. '=[]' → logprob: -15.126943588256836
    5. '＝' → logprob: -15.376943588256836
    6. '   ' → logprob: -15.376943588256836
    7. '_list' → logprob: -15.501943588256836
    8. '=get' → logprob: -15.626943588256836
    9. 'ist' → logprob: -15.751943588256836
    10. 's' → logprob: -16.001943588256836

Token 291: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.018158959224820137
    2. ' get' → logprob: -4.018158912658691
    3. '(get' → logprob: -11.893158912658691
    4. '[get' → logprob: -13.643158912658691
    5. '=get' → logprob: -15.393158912658691
    6. '   ' → logprob: -15.768158912658691
    7. '	get' → logprob: -15.893158912658691
    8. '.get' → logprob: -16.143159866333008
    9. 'list' → logprob: -16.143159866333008
    10. '_get' → logprob: -16.518159866333008

Token 292: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -8.537868779967539e-06
    2. 'input' → logprob: -11.750008583068848
    3. '_output' → logprob: -15.375008583068848
    4. '_' → logprob: -15.375008583068848
    5. '_list' → logprob: -15.625008583068848
    6. '_inputs' → logprob: -17.87500762939453
    7. '```' → logprob: -18.62500762939453
    8. '_code' → logprob: -19.00000762939453
    9. ' _' → logprob: -19.00000762939453
    10. '_INPUT' → logprob: -19.12500762939453

Token 293: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.306760805164231e-05
    2. 'list' → logprob: -11.25001335144043
    3. '_li' → logprob: -17.50001335144043
    4. 'List' → logprob: -17.62501335144043
    5. '_n' → logprob: -18.25001335144043
    6. 'n' → logprob: -18.75001335144043
    7. 'li' → logprob: -18.87501335144043
    8. '()' → logprob: -19.25001335144043
    9. '_lists' → logprob: -20.37501335144043
    10. '_' → logprob: -20.37501335144043

Token 294: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0325924449716695e-05
    2. '()
' → logprob: -11.75001049041748
    3. ' ()' → logprob: -14.12501049041748
    4. '()

' → logprob: -15.12501049041748
    5. '())' → logprob: -15.12501049041748
    6. '()`' → logprob: -15.75001049041748
    7. '(' → logprob: -15.75001049041748
    8. '()\' → logprob: -15.87501049041748
    9. '()]' → logprob: -16.250009536743164
    10. '(n' → logprob: -16.250009536743164

Token 295: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04694583639502525
    2. 's' → logprob: -3.296945810317993
    3. ' s' → logprob: -4.921946048736572
    4. '
' → logprob: -7.046946048736572
    5. '    
' → logprob: -7.796946048736572
    6. 'n' → logprob: -8.546945571899414
    7. 'def' → logprob: -10.921945571899414
    8. ' n' → logprob: -11.046945571899414
    9. '   ' → logprob: -11.421945571899414
    10. '```' → logprob: -11.421945571899414

Token 296: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.02329951710999012
    2. ' s' → logprob: -3.8982994556427
    3. '   ' → logprob: -5.898299694061279
    4. ' ' → logprob: -12.898299217224121
    5. '_s' → logprob: -13.148299217224121
    6. '```' → logprob: -13.523299217224121
    7. '
' → logprob: -14.398299217224121
    8. 'sum' → logprob: -14.523299217224121
    9. 'S' → logprob: -14.523299217224121
    10. '  ' → logprob: -14.648299217224121

Token 297: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048589982092380524
    2. '=' → logprob: -3.0485899448394775
    3. '_' → logprob: -13.423589706420898
    4. ',' → logprob: -15.048589706420898
    5. ' ' → logprob: -15.423589706420898
    6. '＝' → logprob: -15.923589706420898
    7. ' ' → logprob: -16.0485897064209
    8. 's' → logprob: -16.1735897064209
    9. '=sum' → logprob: -16.2985897064209
    10. ')' → logprob: -17.1735897064209

Token 298: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.004582145716995001
    2. ' calc' → logprob: -5.504581928253174
    3. 'sum' → logprob: -7.629581928253174
    4. '   ' → logprob: -11.879582405090332
    5. ' sum' → logprob: -12.254582405090332
    6. '(calc' → logprob: -12.504582405090332
    7. '  ' → logprob: -13.504582405090332
    8. 'cal' → logprob: -14.629582405090332
    9. '    ' → logprob: -15.504582405090332
    10. '.calc' → logprob: -16.129581451416016

Token 299: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.1472419600977446e-06
    2. 'sum' → logprob: -14.250000953674316
    3. '_' → logprob: -15.000000953674316
    4. '_length' → logprob: -16.125001907348633
    5. '_len' → logprob: -17.500001907348633
    6. '_li' → logprob: -17.625001907348633
    7. '_s' → logprob: -18.625001907348633
    8. ' _' → logprob: -20.625001907348633
    9. '_list' → logprob: -20.875001907348633
    10. '(sum' → logprob: -21.250001907348633

Token 300: '(li' (ID: 111234)
  Prédit: '(li'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(li' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -14.750000953674316
    3. ' (' → logprob: -14.875000953674316
    4. '(mi' → logprob: -15.500000953674316
    5. '<li' → logprob: -16.875001907348633
    6. '(il' → logprob: -17.000001907348633
    7. '(le' → logprob: -17.000001907348633
    8. '(lo' → logprob: -17.875001907348633
    9. '(fi' → logprob: -18.250001907348633
    10. '(list' → logprob: -18.875001907348633

Token 301: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1888679839321412e-05
    2. '())' → logprob: -11.375021934509277
    3. '   ' → logprob: -12.500021934509277
    4. ')
' → logprob: -13.250021934509277
    5. ' )' → logprob: -14.000021934509277
    6. '(s' → logprob: -14.000021934509277
    7. '(' → logprob: -14.375021934509277
    8. '(n' → logprob: -14.500021934509277
    9. ')n' → logprob: -14.625021934509277
    10. '()' → logprob: -15.000021934509277

Token 302: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12047675251960754
    2. 'k' → logprob: -2.495476722717285
    3. ' k' → logprob: -3.495476722717285
    4. '
' → logprob: -7.745476722717285
    5. '    
' → logprob: -9.495476722717285
    6. '```' → logprob: -9.745476722717285
    7. 'n' → logprob: -10.120476722717285
    8. ' ' → logprob: -10.495476722717285
    9. '  ' → logprob: -10.745476722717285
    10. '	k' → logprob: -11.120476722717285

Token 303: ' lee' (ID: 89465)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.6841846108436584
    2. 'l' → logprob: -0.8091846108436584
    3. 'k' → logprob: -3.4341845512390137
    4. 'leng' → logprob: -4.809184551239014
    5. 'len' → logprob: -5.934184551239014
    6. 'le' → logprob: -5.934184551239014
    7. 'lee' (adapté à ' lee') → logprob: -6.059184551239014
    8. 'ln' → logprob: -6.934184551239014
    9. 'n' → logprob: -7.684184551239014
    10. 'm' → logprob: -8.559185028076172

Token 304: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869219422340393
    2. '=' → logprob: -1.1369218826293945
    3. ' ' → logprob: -11.386921882629395
    4. '   ' → logprob: -11.511921882629395
    5. '=len' → logprob: -11.886921882629395
    6. 'n' → logprob: -12.011921882629395
    7. 'k' → logprob: -13.136921882629395
    8. '_length' → logprob: -13.261921882629395
    9. 'w' → logprob: -13.261921882629395
    10. '    ' → logprob: -13.386921882629395

Token 305: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.12207428365945816
    2. 'len' → logprob: -2.3720743656158447
    3. 'n' → logprob: -4.622074127197266
    4. ' calc' → logprob: -4.622074127197266
    5. ' len' → logprob: -6.622074127197266
    6. ' n' → logprob: -7.497074127197266
    7. '   ' → logprob: -10.372074127197266
    8. '(calc' → logprob: -11.122074127197266
    9. ' ' → logprob: -11.247074127197266
    10. '  ' → logprob: -11.622074127197266

Token 306: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.5048530030981055e-06
    2. 'length' → logprob: -13.875001907348633
    3. '_sum' → logprob: -15.125001907348633
    4. '_l' → logprob: -16.000001907348633
    5. '_lengths' → logprob: -16.750001907348633
    6. '_len' → logprob: -16.875001907348633
    7. 'ength' → logprob: -17.750001907348633
    8. 'Length' → logprob: -18.250001907348633
    9. 'len' → logprob: -18.625001907348633
    10. '_' → logprob: -18.875001907348633

Token 307: '(li' (ID: 111234)
  Prédit: '(li'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(li' → logprob: -6.869017852295656e-06
    2. '(' → logprob: -12.250006675720215
    3. ' (' → logprob: -14.250006675720215
    4. '(le' → logprob: -14.375006675720215
    5. '(n' → logprob: -15.250006675720215
    6. '(mi' → logprob: -15.500006675720215
    7. '(lo' → logprob: -15.500006675720215
    8. '<li' → logprob: -16.75000762939453
    9. '(il' → logprob: -16.75000762939453
    10. '(ll' → logprob: -17.37500762939453

Token 308: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006926715839654207
    2. ')
' → logprob: -5.006926536560059
    3. '())' → logprob: -9.006926536560059
    4. '   ' → logprob: -10.381926536560059
    5. '(li' → logprob: -10.506926536560059
    6. '())
' → logprob: -11.506926536560059
    7. ')

' → logprob: -12.506926536560059
    8. '(n' → logprob: -12.881926536560059
    9. '()' → logprob: -13.131926536560059
    10. ' )' → logprob: -13.381926536560059

Token 309: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04956267029047012
    2. 'k' → logprob: -3.174562692642212
    3. ' k' → logprob: -5.049562454223633
    4. '
' → logprob: -9.299562454223633
    5. '```' → logprob: -11.049562454223633
    6. '    
' → logprob: -11.924562454223633
    7. '	k' → logprob: -12.174562454223633
    8. '   ' → logprob: -12.549562454223633
    9. ' ' → logprob: -13.299562454223633
    10. '  ' → logprob: -14.174562454223633

Token 310: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.0004336493439041078
    2. ' k' → logprob: -8.000433921813965
    3. '   ' → logprob: -9.250433921813965
    4. '```' → logprob: -14.250433921813965
    5. '	k' → logprob: -15.125433921813965
    6. ' ' → logprob: -15.250433921813965
    7. '
' → logprob: -15.750433921813965
    8. '_k' → logprob: -16.12543296813965
    9. 'last' → logprob: -16.12543296813965
    10. '#' → logprob: -16.50043296813965

Token 311: 'umi' (ID: 10939)
  Prédit: 'umi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umi' → logprob: -0.1369073987007141
    2. ' =' → logprob: -2.1369073390960693
    3. '=' → logprob: -4.761907577514648
    4. 'um' → logprob: -7.761907577514648
    5. ' umi' → logprob: -7.886907577514648
    6. 'uni' → logprob: -8.761907577514648
    7. 'u' → logprob: -9.261907577514648
    8. '_' → logprob: -9.511907577514648
    9. ' ' → logprob: -10.011907577514648
    10. '   ' → logprob: -10.636907577514648

Token 312: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004624629858881235
    2. '=' → logprob: -5.379624843597412
    3. '(' → logprob: -12.879624366760254
    4. ' ' → logprob: -13.379624366760254
    5. ',' → logprob: -16.37962532043457
    6. ' =
' → logprob: -16.50462532043457
    7. ' ' → logprob: -17.50462532043457
    8. ' (' → logprob: -17.50462532043457
    9. ' =)' → logprob: -17.75462532043457
    10. ')' → logprob: -17.87962532043457

Token 313: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.4740940034389496
    2. ' calc' → logprob: -0.974094033241272
    3. '(calc' → logprob: -11.47409439086914
    4. ' lee' → logprob: -12.97409439086914
    5. '.calc' → logprob: -13.34909439086914
    6. ' ' → logprob: -14.34909439086914
    7. 'cal' → logprob: -14.59909439086914
    8. 'k' → logprob: -14.59909439086914
    9. ' k' → logprob: -14.84909439086914
    10. 'lee' → logprob: -15.34909439086914

Token 314: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.00013405199570115656
    2. '_' → logprob: -9.000134468078613
    3. '_s' → logprob: -12.500134468078613
    4. 'k' → logprob: -12.500134468078613
    5. '_sum' → logprob: -13.750134468078613
    6. '_n' → logprob: -13.750134468078613
    7. '(k' → logprob: -14.375134468078613
    8. '(' → logprob: -15.125134468078613
    9. '_li' → logprob: -16.250133514404297
    10. '_(' → logprob: -17.125133514404297

Token 315: 'umi' (ID: 10939)
  Prédit: 'umi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umi' → logprob: -3.0590548703912646e-05
    2. 'um' → logprob: -11.500030517578125
    3. 'uni' → logprob: -11.500030517578125
    4. ' umi' → logprob: -12.875030517578125
    5. '(' → logprob: -13.500030517578125
    6. 'u' → logprob: -13.625030517578125
    7. 'umik' → logprob: -13.875030517578125
    8. 'уми' → logprob: -14.125030517578125
    9. '_' → logprob: -15.000030517578125
    10. 'umiem' → logprob: -15.125030517578125

Token 316: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. 'lee' → logprob: -18.0
    3. '(li' → logprob: -19.0
    4. ' (' → logprob: -19.25
    5. '(le' → logprob: -21.0
    6. '(
' → logprob: -21.375
    7. ' lee' → logprob: -22.125
    8. '```' → logprob: -22.5
    9. 'LEE' → logprob: -23.875
    10. '((' → logprob: -23.875

Token 317: 'lee' (ID: 10769)
  Prédit: 'lee'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lee' → logprob: -9.253090865968261e-06
    2. 'li' → logprob: -12.375009536743164
    3. ' lee' → logprob: -12.500009536743164
    4. 'lie' → logprob: -14.375009536743164
    5. '(' → logprob: -15.875009536743164
    6. 'lees' → logprob: -16.250009536743164
    7. 'l' → logprob: -16.500009536743164
    8. 'Lee' → logprob: -16.750009536743164
    9. 'le' → logprob: -17.125009536743164
    10. '
' → logprob: -17.375009536743164

Token 318: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005666146171279252
    2. ')
' → logprob: -7.500566482543945
    3. '   ' → logprob: -11.500566482543945
    4. '))' → logprob: -13.875566482543945
    5. ')n' → logprob: -14.625566482543945
    6. '(n' → logprob: -14.750566482543945
    7. '())' → logprob: -14.750566482543945
    8. ' )' → logprob: -15.125566482543945
    9. ')

' → logprob: -15.250566482543945
    10. '()' → logprob: -15.625566482543945

Token 319: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0704338476061821
    2. 'tmp' → logprob: -2.6954338550567627
    3. ' tmp' → logprob: -7.820433616638184
    4. '	tmp' → logprob: -10.320433616638184
    5. 'first' → logprob: -10.570433616638184
    6. 's' → logprob: -11.695433616638184
    7. '(tmp' → logprob: -12.570433616638184
    8. '  ' → logprob: -12.820433616638184
    9. ' ' → logprob: -12.820433616638184
    10. '/tmp' → logprob: -12.945433616638184

Token 320: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.0007181499968282878
    2. '   ' → logprob: -7.875718116760254
    3. ' tmp' → logprob: -8.000718116760254
    4. '	tmp' → logprob: -14.000718116760254
    5. '_tmp' → logprob: -14.125718116760254
    6. '/tmp' → logprob: -14.750718116760254
    7. ' ' → logprob: -15.125718116760254
    8. '(tmp' → logprob: -16.12571907043457
    9. '[tmp' → logprob: -16.50071907043457
    10. 'temp' → logprob: -16.62571907043457

Token 321: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005233882926404476
    2. '=' → logprob: -5.2552337646484375
    3. '＝' → logprob: -17.380233764648438
    4. ' ' → logprob: -18.630233764648438
    5. ' ' → logprob: -19.505233764648438
    6. ',' → logprob: -19.630233764648438
    7. ' =
' → logprob: -19.880233764648438
    8. ' +=' → logprob: -20.505233764648438
    9. ')' → logprob: -20.630233764648438
    10. ' =)' → logprob: -21.255233764648438

Token 322: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.008622374385595322
    2. ' calc' → logprob: -4.758622169494629
    3. '(calc' → logprob: -11.758622169494629
    4. '.calc' → logprob: -16.758623123168945
    5. 'cal' → logprob: -18.258623123168945
    6. '   ' → logprob: -19.133623123168945
    7. '_calc' → logprob: -19.758623123168945
    8. 'c' → logprob: -20.258623123168945
    9. 'Calc' → logprob: -20.758623123168945
    10. 'calculate' → logprob: -21.133623123168945

Token 323: '_tmp' (ID: 35658)
  Prédit: '_tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tmp' → logprob: -4.320199877838604e-07
    2. 'tmp' → logprob: -15.5
    3. '_temp' → logprob: -16.125
    4. '_' → logprob: -21.125
    5. '_t' → logprob: -21.5
    6. '(tmp' → logprob: -21.625
    7. ' tmp' → logprob: -21.75
    8. '_txt' → logprob: -21.875
    9. '$tmp' → logprob: -22.0
    10. '_TMP' → logprob: -22.25

Token 324: '(li' (ID: 111234)
  Prédit: '(li'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(li' → logprob: -2.1008713702030946e-06
    2. ' (' → logprob: -13.750001907348633
    3. '(' → logprob: -14.750001907348633
    4. '<li' → logprob: -15.125001907348633
    5. '(mi' → logprob: -15.625001907348633
    6. '(le' → logprob: -17.375001907348633
    7. ' li' → logprob: -17.375001907348633
    8. '(
' → logprob: -17.625001907348633
    9. '(lo' → logprob: -17.750001907348633
    10. '(ls' → logprob: -18.000001907348633

Token 325: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010759611177491024
    2. ',k' → logprob: -9.250107765197754
    3. ' ,' → logprob: -11.750107765197754
    4. 'k' → logprob: -13.250107765197754
    5. ',
' → logprob: -14.250107765197754
    6. '(k' → logprob: -14.875107765197754
    7. '(' → logprob: -15.125107765197754
    8. '   ' → logprob: -16.375106811523438
    9. ',n' → logprob: -16.500106811523438
    10. ' k' → logprob: -16.750106811523438

Token 326: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.006715370807796717
    2. ' k' → logprob: -5.006715297698975
    3. '   ' → logprob: -17.381715774536133
    4. '	k' → logprob: -18.631715774536133
    5. ')' → logprob: -19.131715774536133
    6. ' к' → logprob: -19.506715774536133
    7. '(k' → logprob: -20.381715774536133
    8. '{k' → logprob: -20.506715774536133
    9. '    ' → logprob: -20.756715774536133
    10. '_k' → logprob: -21.006715774536133

Token 327: 'umi' (ID: 10939)
  Prédit: 'umi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umi' → logprob: -3.128163257315464e-07
    2. 'uni' → logprob: -16.875
    3. ' umi' → logprob: -16.875
    4. 'imi' → logprob: -17.0
    5. 'um' → logprob: -18.5
    6. 'уми' → logprob: -18.625
    7. 'umik' → logprob: -19.0
    8. 'umin' → logprob: -19.0
    9. '#' → logprob: -19.125
    10. 'umo' → logprob: -19.375

Token 328: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.688212614681106e-05
    2. ')
' → logprob: -11.000017166137695
    3. ' )' → logprob: -16.000017166137695
    4. '   ' → logprob: -17.250017166137695
    5. ')
' → logprob: -18.000017166137695
    6. ')#' → logprob: -18.125017166137695
    7. '),' → logprob: -18.750017166137695
    8. ')

' → logprob: -19.000017166137695
    9. ',)' → logprob: -20.125017166137695
    10. ')return' → logprob: -20.250017166137695

Token 329: '   ' (ID: 271)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.19024772942066193
    2. '   ' → logprob: -1.8152477741241455
    3. ' last' → logprob: -4.565247535705566
    4. '	last' → logprob: -11.065247535705566
    5. '_last' → logprob: -11.565247535705566
    6. ' ' → logprob: -12.690247535705566
    7. '  ' → logprob: -13.065247535705566
    8. '    
' → logprob: -13.190247535705566
    9. '```' → logprob: -13.315247535705566
    10. 'l' → logprob: -13.440247535705566

Token 330: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' (adapté à ' last') → logprob: -1.0802738870552275e-05
    2. ' last' → logprob: -11.87501049041748
    3. '_last' → logprob: -12.62501049041748
    4. 'las' → logprob: -15.37501049041748
    5. 'l' → logprob: -15.75001049041748
    6. 'lst' → logprob: -17.000011444091797
    7. '   ' → logprob: -17.875011444091797
    8. 'Last' → logprob: -18.750011444091797
    9. 'first' → logprob: -18.750011444091797
    10. '	last' → logprob: -19.250011444091797

Token 331: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09151708334684372
    2. '=' → logprob: -2.4665169715881348
    3. '_' → logprob: -5.966516971588135
    4. '_=' → logprob: -11.841517448425293
    5. '=_' → logprob: -13.216517448425293
    6. '_last' → logprob: -14.716517448425293
    7. ' ' → logprob: -14.966517448425293
    8. ')' → logprob: -15.216517448425293
    9. ',' → logprob: -15.591517448425293
    10. '_val' → logprob: -15.716517448425293

Token 332: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.03804286941885948
    2. ' calc' → logprob: -3.2880427837371826
    3. '(calc' → logprob: -13.663043022155762
    4. 's' → logprob: -15.413043022155762
    5. '   ' → logprob: -17.413042068481445
    6. ' s' → logprob: -18.288042068481445
    7. '.calc' → logprob: -18.413042068481445
    8. 'cal' → logprob: -19.288042068481445
    9. '_calc' → logprob: -20.038042068481445
    10. ' ' → logprob: -21.038042068481445

Token 333: '_last' (ID: 26359)
  Prédit: '_last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_last' → logprob: -1.9361264946837764e-07
    2. 'last' → logprob: -16.375
    3. '_first' → logprob: -19.25
    4. '_sum' → logprob: -21.25
    5. '_next' → logprob: -21.5
    6. '_tmp' → logprob: -21.875
    7. '_' → logprob: -22.0
    8. '_LAST' → logprob: -22.375
    9. '```' → logprob: -22.375
    10. '_l' → logprob: -22.625

Token 334: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0032311868853867054
    2. '(' → logprob: -5.753231048583984
    3. ' (' → logprob: -9.878231048583984
    4. '(
' → logprob: -13.128231048583984
    5. 's' → logprob: -16.003231048583984
    6. '（' → logprob: -18.253231048583984
    7. '(

' → logprob: -18.628231048583984
    8. '(
' → logprob: -19.253231048583984
    9. '((' → logprob: -20.128231048583984
    10. '(S' → logprob: -20.128231048583984

Token 335: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.9875325708417222e-05
    2. ' ,' → logprob: -10.500029563903809
    3. ',tmp' → logprob: -13.500029563903809
    4. ',
' → logprob: -14.250029563903809
    5. '   ' → logprob: -15.750029563903809
    6. 'tmp' → logprob: -16.750030517578125
    7. '',' → logprob: -17.500030517578125
    8. ',

' → logprob: -17.500030517578125
    9. '(tmp' → logprob: -18.125030517578125
    10. ')' → logprob: -18.625030517578125

Token 336: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.0019289902411401272
    2. ' tmp' → logprob: -6.251928806304932
    3. '(tmp' → logprob: -15.37692928314209
    4. '	tmp' → logprob: -16.001928329467773
    5. '/tmp' → logprob: -16.876928329467773
    6. '_tmp' → logprob: -17.751928329467773
    7. '$tmp' → logprob: -18.001928329467773
    8. '[tmp' → logprob: -18.376928329467773
    9. '   ' → logprob: -18.751928329467773
    10. ',tmp' → logprob: -19.001928329467773

Token 337: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2471589798224159e-05
    2. ')
' → logprob: -11.375012397766113
    3. '   ' → logprob: -14.500012397766113
    4. ' )' → logprob: -15.125012397766113
    5. ',)' → logprob: -17.37501335144043
    6. ')

' → logprob: -17.62501335144043
    7. '),' → logprob: -17.87501335144043
    8. ',' → logprob: -18.50001335144043
    9. ')#' → logprob: -18.75001335144043
    10. ')`' → logprob: -18.75001335144043

Token 338: '   ' (ID: 271)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.00825699232518673
    2. '   ' → logprob: -4.883256912231445
    3. ' last' → logprob: -7.383256912231445
    4. '	last' → logprob: -11.508256912231445
    5. 'li' → logprob: -11.633256912231445
    6. '_last' → logprob: -12.258256912231445
    7. '[last' → logprob: -14.133256912231445
    8. '  ' → logprob: -14.258256912231445
    9. ' ' → logprob: -14.633256912231445
    10. 'l' → logprob: -14.758256912231445

Token 339: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' (adapté à ' last') → logprob: -0.00010306637705070898
    2. ' last' → logprob: -9.250102996826172
    3. '   ' → logprob: -12.375102996826172
    4. 'first' → logprob: -14.000102996826172
    5. '	last' → logprob: -14.625102996826172
    6. '_last' → logprob: -15.000102996826172
    7. 'l' → logprob: -15.125102996826172
    8. 'lasti' → logprob: -15.750102996826172
    9. '[last' → logprob: -15.750102996826172
    10. 'li' → logprob: -16.250102996826172

Token 340: '_elem' (ID: 68468)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09688510000705719
    2. '<|end|>' → logprob: -2.9718852043151855
    3. ' =' → logprob: -3.9718852043151855
    4. '=' → logprob: -4.9718852043151855
    5. '_=' → logprob: -5.4718852043151855
    6. '_elem' → logprob: -5.5968852043151855
    7. ' ' → logprob: -6.2218852043151855
    8. '_element' → logprob: -6.8468852043151855
    9. '_elements' → logprob: -7.0968852043151855
    10. ')' → logprob: -7.3468852043151855

Token 341: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0013271415373310447
    2. '=' → logprob: -6.626327037811279
    3. ' ' → logprob: -14.376327514648438
    4. ',' → logprob: -14.376327514648438
    5. ' ' → logprob: -16.376327514648438
    6. ' ,' → logprob: -17.251327514648438
    7. ')' → logprob: -18.126327514648438
    8. '_' → logprob: -18.751327514648438
    9. '(' → logprob: -18.876327514648438
    10. '  ' → logprob: -19.001327514648438

Token 342: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.25204434990882874
    2. ' get' → logprob: -1.5020443201065063
    3. 'li' → logprob: -9.252044677734375
    4. ' li' → logprob: -10.877044677734375
    5. '	get' → logprob: -15.502044677734375
    6. '(get' → logprob: -16.377044677734375
    7. '   ' → logprob: -16.502044677734375
    8. 'ge' → logprob: -16.877044677734375
    9. '=get' → logprob: -17.377044677734375
    10. '[get' → logprob: -18.127044677734375

Token 343: '_last' (ID: 26359)
  Prédit: '_last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_last' → logprob: -1.8624639324116288e-06
    2. '_input' → logprob: -13.375001907348633
    3. 'last' → logprob: -15.750001907348633
    4. '_first' → logprob: -16.000001907348633
    5. '_list' → logprob: -18.500001907348633
    6. '_answer' → logprob: -19.625001907348633
    7. '_LAST' → logprob: -19.750001907348633
    8. '_next' → logprob: -20.000001907348633
    9. '_Last' → logprob: -20.625001907348633
    10. '_' → logprob: -20.750001907348633

Token 344: '_element' (ID: 21131)
  Prédit: '_element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_element' → logprob: -1.676292231422849e-05
    2. 'element' → logprob: -11.625017166137695
    3. '_elem' → logprob: -11.875017166137695
    4. '_elements' → logprob: -15.625017166137695
    5. '_ELEMENT' → logprob: -15.625017166137695
    6. 'Element' → logprob: -16.375017166137695
    7. '_value' → logprob: -16.375017166137695
    8. '(element' → logprob: -16.625017166137695
    9. 'elem' → logprob: -17.000017166137695
    10. '_Element' → logprob: -17.000017166137695

Token 345: '(li' (ID: 111234)
  Prédit: '(li'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(li' → logprob: -7.3458322731312364e-06
    2. '(' → logprob: -11.875007629394531
    3. '(mi' → logprob: -16.75000762939453
    4. '(le' → logprob: -16.75000762939453
    5. '(il' → logprob: -18.00000762939453
    6. '<li' → logprob: -18.12500762939453
    7. ' (' → logprob: -18.12500762939453
    8. '(lo' → logprob: -18.12500762939453
    9. '(fi' → logprob: -18.62500762939453
    10. '(l' → logprob: -18.62500762939453

Token 346: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2233183042553719e-05
    2. ')
' → logprob: -11.375012397766113
    3. ' )' → logprob: -14.750012397766113
    4. '())' → logprob: -16.250011444091797
    5. ')

' → logprob: -16.500011444091797
    6. '   ' → logprob: -17.125011444091797
    7. '()' → logprob: -17.750011444091797
    8. ',)' → logprob: -18.250011444091797
    9. ')
' → logprob: -18.500011444091797
    10. '),' → logprob: -18.625011444091797

Token 347: '   ' (ID: 271)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.7919443249702454
    2. '   ' → logprob: -0.9169443249702454
    3. ' first' → logprob: -1.9169442653656006
    4. '	first' → logprob: -8.79194450378418
    5. '
' → logprob: -10.79194450378418
    6. '[first' → logprob: -10.79194450378418
    7. '```' → logprob: -11.66694450378418
    8. ' ' → logprob: -11.79194450378418
    9. ':first' → logprob: -11.91694450378418
    10. '  ' → logprob: -12.16694450378418

Token 348: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' (adapté à ' first') → logprob: -1.2471589798224159e-05
    2. ' first' → logprob: -11.375012397766113
    3. 'last' → logprob: -15.125012397766113
    4. 'f' → logprob: -15.500012397766113
    5. '   ' → logprob: -15.500012397766113
    6. '_first' → logprob: -17.00001335144043
    7. 'frist' → logprob: -17.25001335144043
    8. '
' → logprob: -17.37501335144043
    9. '	first' → logprob: -17.50001335144043
    10. '[first' → logprob: -17.62501335144043

Token 349: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01419359352439642
    2. '=' → logprob: -4.264193534851074
    3. '_' → logprob: -10.764193534851074
    4. ' ' → logprob: -13.264193534851074
    5. ',' → logprob: -13.389193534851074
    6. '_=' → logprob: -13.389193534851074
    7. ' _' → logprob: -14.139193534851074
    8. '=_' → logprob: -14.639193534851074
    9. '_val' → logprob: -14.889193534851074
    10. '(' → logprob: -14.889193534851074

Token 350: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.00317783304490149
    2. ' calc' → logprob: -5.753177642822266
    3. '(calc' → logprob: -16.003177642822266
    4. 'cal' → logprob: -18.128177642822266
    5. 'calculate' → logprob: -18.253177642822266
    6. '.calc' → logprob: -19.753177642822266
    7. '_calc' → logprob: -21.253177642822266
    8. '   ' → logprob: -22.503177642822266
    9. 'calcul' → logprob: -23.378177642822266
    10. ' ' → logprob: -23.503177642822266

Token 351: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -1.318681188422488e-05
    2. 'first' → logprob: -11.62501335144043
    3. '_last' → logprob: -12.37501335144043
    4. '_tmp' → logprob: -17.12501335144043
    5. '_' → logprob: -17.50001335144043
    6. 'First' → logprob: -18.87501335144043
    7. '_f' → logprob: -19.00001335144043
    8. '_next' → logprob: -20.12501335144043
    9. '_full' → logprob: -20.37501335144043
    10. '_k' → logprob: -20.37501335144043

Token 352: '(last' (ID: 39599)
  Prédit: '(last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(last' → logprob: -0.0011715330183506012
    2. '(' → logprob: -6.751171588897705
    3. '(
' → logprob: -14.001171112060547
    4. '(first' → logprob: -15.376171112060547
    5. ' (' → logprob: -16.001171112060547
    6. 'last' → logprob: -16.376171112060547
    7. '(

' → logprob: -18.251171112060547
    8. '(lat' → logprob: -18.501171112060547
    9. ',last' → logprob: -18.501171112060547
    10. '(left' → logprob: -19.001171112060547

Token 353: '_elem' (ID: 68468)
  Prédit: '_elem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elem' → logprob: -0.005685360636562109
    2. ',' → logprob: -5.255685329437256
    3. ',_' → logprob: -8.755685806274414
    4. '_,' → logprob: -9.005685806274414
    5. 'elem' → logprob: -9.755685806274414
    6. ',last' → logprob: -10.255685806274414
    7. ')' → logprob: -11.005685806274414
    8. '_last' → logprob: -11.380685806274414
    9. '_element' → logprob: -11.630685806274414
    10. 'last' → logprob: -11.630685806274414

Token 354: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.383526149671525e-05
    2. ',last' → logprob: -10.375053405761719
    3. ' ,' → logprob: -10.750053405761719
    4. ',
' → logprob: -13.750053405761719
    5. '   ' → logprob: -17.25005340576172
    6. ')' → logprob: -17.37505340576172
    7. 'last' → logprob: -18.37505340576172
    8. ',

' → logprob: -18.87505340576172
    9. ' last' → logprob: -19.00005340576172
    10. '),' → logprob: -19.25005340576172

Token 355: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.006715370807796717
    2. ' last' → logprob: -5.006715297698975
    3. '   ' → logprob: -17.006715774536133
    4. '	last' → logprob: -18.756715774536133
    5. '(last' → logprob: -18.756715774536133
    6. '[last' → logprob: -20.006715774536133
    7. '
' → logprob: -20.131715774536133
    8. ' ' → logprob: -20.631715774536133
    9. ',last' → logprob: -21.006715774536133
    10. '  ' → logprob: -21.256715774536133

Token 356: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1637164789135568e-05
    2. ')
' → logprob: -11.375011444091797
    3. ' )' → logprob: -16.875011444091797
    4. ')

' → logprob: -18.000011444091797
    5. ')`' → logprob: -18.250011444091797
    6. ')#' → logprob: -18.250011444091797
    7. '   ' → logprob: -18.500011444091797
    8. ')return' → logprob: -18.750011444091797
    9. '))' → logprob: -19.125011444091797
    10. '),' → logprob: -19.375011444091797

Token 357: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.635180652141571
    2. 'ans' → logprob: -0.760180652141571
    3. ' ans' → logprob: -6.510180473327637
    4. '	ans' → logprob: -7.010180473327637
    5. 'answer' → logprob: -10.010180473327637
    6. '(ans' → logprob: -10.510180473327637
    7. '
' → logprob: -10.635180473327637
    8. '```' → logprob: -10.635180473327637
    9. '_ans' → logprob: -11.260180473327637
    10. '  ' → logprob: -11.260180473327637

Token 358: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.00036406738217920065
    2. ' ans' → logprob: -8.250364303588867
    3. '   ' → logprob: -9.375364303588867
    4. '	ans' → logprob: -11.125364303588867
    5. '(ans' → logprob: -13.750364303588867
    6. '_ans' → logprob: -13.875364303588867
    7. 'answer' → logprob: -14.250364303588867
    8. 'answers' → logprob: -15.625364303588867
    9. '  ' → logprob: -16.375364303588867
    10. '
' → logprob: -16.375364303588867

Token 359: '_li' (ID: 110647)
  Prédit: '_li'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_li' → logprob: -5.204720582696609e-05
    2. '_' → logprob: -10.000052452087402
    3. ' =' → logprob: -12.375052452087402
    4. '_ans' → logprob: -14.125052452087402
    5. '_l' → logprob: -14.875052452087402
    6. '=' → logprob: -14.875052452087402
    7. '_il' → logprob: -15.375052452087402
    8. '=_' → logprob: -15.500052452087402
    9. '_la' → logprob: -16.250051498413086
    10. ' _' → logprob: -16.625051498413086

Token 360: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029750604182481766
    2. '=' → logprob: -3.5297505855560303
    3. ',' → logprob: -16.52975082397461
    4. '＝' → logprob: -18.40475082397461
    5. ' ' → logprob: -18.52975082397461
    6. '(process' → logprob: -19.40475082397461
    7. ' =
' → logprob: -19.65475082397461
    8. 'process' → logprob: -20.15475082397461
    9. ' =)' → logprob: -20.15475082397461
    10. '.' → logprob: -20.52975082397461

Token 361: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.2535906136035919
    2. ' process' → logprob: -1.5035905838012695
    3. 'init' → logprob: -6.5035905838012695
    4. ' init' → logprob: -8.75359058380127
    5. '[' → logprob: -13.37859058380127
    6. '(process' → logprob: -14.12859058380127
    7. '   ' → logprob: -14.62859058380127
    8. ' proces' → logprob: -14.87859058380127
    9. '	process' → logprob: -14.87859058380127
    10. ' [' → logprob: -15.12859058380127

Token 362: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -1.6240566083070007e-06
    2. '(ans' → logprob: -13.625001907348633
    3. 'ans' → logprob: -15.000001907348633
    4. '_answer' → logprob: -17.875001907348633
    5. '_an' → logprob: -19.125001907348633
    6. '_ann' → logprob: -19.750001907348633
    7. 'Ans' → logprob: -19.875001907348633
    8. '_' → logprob: -20.125001907348633
    9. '	ans' → logprob: -20.375001907348633
    10. ' ans' → logprob: -20.500001907348633

Token 363: '_li' (ID: 110647)
  Prédit: '_li'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_li' → logprob: -0.0007780580781400204
    2. 'li' → logprob: -7.2507781982421875
    3. '(li' → logprob: -9.625778198242188
    4. '<li' → logprob: -13.625778198242188
    5. 'Li' → logprob: -15.500778198242188
    6. '_list' → logprob: -15.875778198242188
    7. '```' → logprob: -16.625778198242188
    8. '_lo' → logprob: -17.000778198242188
    9. '_' → logprob: -17.250778198242188
    10. '(_' → logprob: -17.375778198242188

Token 364: '(li' (ID: 111234)
  Prédit: '(li'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(li' → logprob: -7.3458322731312364e-06
    2. '(' → logprob: -12.000007629394531
    3. ' (' → logprob: -14.500007629394531
    4. '<li' → logprob: -15.625007629394531
    5. '(mi' → logprob: -15.750007629394531
    6. '(ans' → logprob: -16.37500762939453
    7. '(le' → logprob: -16.50000762939453
    8. ' li' → logprob: -16.87500762939453
    9. '(lo' → logprob: -17.00000762939453
    10. '(fi' → logprob: -17.50000762939453

Token 365: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.650518920039758e-06
    2. ' ,' → logprob: -13.250003814697266
    3. 'first' → logprob: -13.500003814697266
    4. '[first' → logprob: -15.375003814697266
    5. '(first' → logprob: -15.875003814697266
    6. ' first' → logprob: -17.125003814697266
    7. ',
' → logprob: -17.250003814697266
    8. '[' → logprob: -18.125003814697266
    9. ')' → logprob: -18.500003814697266
    10. 'First' → logprob: -18.625003814697266

Token 366: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.10020667314529419
    2. ' first' → logprob: -2.3502066135406494
    3. '	first' → logprob: -18.10020637512207
    4. '   ' → logprob: -19.10020637512207
    5. '(first' → logprob: -19.60020637512207
    6. '[first' → logprob: -19.72520637512207
    7. ' ' → logprob: -20.10020637512207
    8. ')' → logprob: -21.60020637512207
    9. '.first' → logprob: -21.85020637512207
    10. '  ' → logprob: -21.97520637512207

Token 367: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47537851333618164
    2. ')' → logprob: -0.9753785133361816
    3. ')
' → logprob: -6.725378513336182
    4. '<|end|>' → logprob: -9.725378036499023
    5. '
' → logprob: -11.475378036499023
    6. ' )' → logprob: -11.725378036499023
    7. '    
' → logprob: -12.600378036499023
    8. ',' → logprob: -12.725378036499023
    9. ')add' → logprob: -12.850378036499023
    10. '[' → logprob: -12.975378036499023

Token 368: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06429819762706757
    2. 'remove' → logprob: -2.939298152923584
    3. 'print' → logprob: -5.064298152923584
    4. '
' → logprob: -6.314298152923584
    5. ' remove' → logprob: -7.064298152923584
    6. ' print' → logprob: -8.689298629760742
    7. '	remove' → logprob: -9.439298629760742
    8. '    
' → logprob: -9.939298629760742
    9. '```' → logprob: -10.439298629760742
    10. '<|end|>' → logprob: -10.689298629760742

Token 369: ' remove' (ID: 6234)
  Prédit: 'remove'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remove' (adapté à ' remove') → logprob: -0.013249876908957958
    2. '   ' → logprob: -4.51324987411499
    3. 'print' → logprob: -6.51324987411499
    4. ' remove' → logprob: -7.26324987411499
    5. '	remove' → logprob: -11.513250350952148
    6. ' print' → logprob: -13.263250350952148
    7. '(remove' → logprob: -14.263250350952148
    8. '```' → logprob: -14.388250350952148
    9. 'append' → logprob: -14.513250350952148
    10. ' ' → logprob: -14.763250350952148

Token 370: '_last' (ID: 26359)
  Prédit: '_last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_last' → logprob: -1.580929347255733e-05
    2. '_first' → logprob: -11.625016212463379
    3. '_to' → logprob: -13.500016212463379
    4. '_' → logprob: -13.625016212463379
    5. ' _' → logprob: -13.875016212463379
    6. '```' → logprob: -14.375016212463379
    7. '_next' → logprob: -15.375016212463379
    8. '_this' → logprob: -15.750016212463379
    9. ''_' → logprob: -15.750016212463379
    10. ')_' → logprob: -16.000015258789062

Token 371: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0008533471846021712
    2. '(' → logprob: -7.125853538513184
    3. '(answer' → logprob: -10.000853538513184
    4. '(an' → logprob: -13.250853538513184
    5. ' (' → logprob: -14.625853538513184
    6. '(args' → logprob: -15.875853538513184
    7. '(arr' → logprob: -16.250852584838867
    8. '(arg' → logprob: -16.375852584838867
    9. '(lst' → logprob: -16.625852584838867
    10. '```' → logprob: -16.750852584838867

Token 372: '_li' (ID: 110647)
  Prédit: '_li'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_li' → logprob: -1.0325924449716695e-05
    2. 'li' → logprob: -11.50001049041748
    3. 'Li' → logprob: -16.250009536743164
    4. '<li' → logprob: -17.875009536743164
    5. '(li' → logprob: -18.750009536743164
    6. '_' → logprob: -18.875009536743164
    7. '_list' → logprob: -19.000009536743164
    8. '_il' → logprob: -19.500009536743164
    9. '_di' → logprob: -19.625009536743164
    10. '_l' → logprob: -20.000009536743164

Token 373: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006718809716403484
    2. ')
' → logprob: -5.006718635559082
    3. ')

' → logprob: -13.631718635559082
    4. ')
' → logprob: -13.881718635559082
    5. '()' → logprob: -14.381718635559082
    6. '   ' → logprob: -15.006718635559082
    7. ' )' → logprob: -15.631718635559082
    8. ')`' → logprob: -16.1317195892334
    9. '())' → logprob: -16.6317195892334
    10. '),' → logprob: -17.3817195892334

Token 374: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.474469393491745
    2. 'print' → logprob: -0.9744694232940674
    3. ' print' → logprob: -7.849469184875488
    4. '	print' → logprob: -13.974469184875488
    5. '(print' → logprob: -14.099469184875488
    6. '```' → logprob: -15.474469184875488
    7. '
' → logprob: -15.599469184875488
    8. '#print' → logprob: -16.349470138549805
    9. '  ' → logprob: -16.724470138549805
    10. ' ' → logprob: -16.849470138549805

Token 375: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.727905979962088e-05
    2. '   ' → logprob: -10.00004768371582
    3. ' print' → logprob: -13.25004768371582
    4. '
' → logprob: -19.37504768371582
    5. '#print' → logprob: -20.00004768371582
    6. '	print' → logprob: -20.37504768371582
    7. '(print' → logprob: -20.87504768371582
    8. ' ' → logprob: -21.00004768371582
    9. '.print' → logprob: -21.00004768371582
    10. '  ' → logprob: -21.00004768371582

Token 376: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -0.000499297515489161
    2. '(*' → logprob: -7.875499248504639
    3. '(_' → logprob: -10.250499725341797
    4. '(' → logprob: -10.750499725341797
    5. '_' → logprob: -11.375499725341797
    6. 'Ans' → logprob: -11.500499725341797
    7. '(ans' → logprob: -11.750499725341797
    8. '*_' → logprob: -11.875499725341797
    9. '('_' → logprob: -12.000499725341797
    10. '_an' → logprob: -12.625499725341797

Token 377: '_li' (ID: 110647)
  Prédit: '_li'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_li' → logprob: -1.0206720617134124e-05
    2. 'li' → logprob: -11.87501049041748
    3. '_ans' → logprob: -12.87501049041748
    4. '_il' → logprob: -14.87501049041748
    5. '_' → logprob: -16.250009536743164
    6. '_lo' → logprob: -17.375009536743164
    7. 'Li' → logprob: -17.500009536743164
    8. 'ans' → logprob: -17.625009536743164
    9. '(li' → logprob: -17.625009536743164
    10. '_ai' → logprob: -18.125009536743164

Token 378: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.0
    3. 'ans' → logprob: -16.875
    4. '(answer' → logprob: -17.125
    5. ' (' → logprob: -18.625
    6. '(an' → logprob: -19.625
    7. '(args' → logprob: -20.5
    8. '	ans' → logprob: -21.625
    9. '(arr' → logprob: -21.75
    10. '(ast' → logprob: -21.75

Token 379: '_li' (ID: 110647)
  Prédit: '_li'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_li' → logprob: -3.054500666621607e-06
    2. 'li' → logprob: -12.75000286102295
    3. '_il' → logprob: -16.625003814697266
    4. '_ans' → logprob: -18.000003814697266
    5. '_l' → logprob: -18.375003814697266
    6. '_di' → logprob: -18.500003814697266
    7. '_' → logprob: -18.750003814697266
    8. 'Li' → logprob: -18.875003814697266
    9. '<li' → logprob: -19.250003814697266
    10. '_i' → logprob: -20.125003814697266

Token 380: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0206720617134124e-05
    2. ')
' → logprob: -12.37501049041748
    3. '())' → logprob: -12.75001049041748
    4. '()' → logprob: -13.50001049041748
    5. ')`' → logprob: -14.25001049041748
    6. ' )' → logprob: -14.62501049041748
    7. '(' → logprob: -15.50001049041748
    8. '))' → logprob: -16.125009536743164
    9. ')}' → logprob: -17.375009536743164
    10. '[' → logprob: -17.375009536743164

Token 381: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5763258337974548
    2. 'main' → logprob: -0.8263258337974548
    3. '#' → logprob: -8.451325416564941
    4. 'print' → logprob: -9.826325416564941
    5. '(main' → logprob: -9.951325416564941
    6. ' main' → logprob: -10.451325416564941
    7. ' if' → logprob: -10.701325416564941
    8. '_' → logprob: -12.451325416564941
    9. '__' → logprob: -12.701325416564941
    10. '_main' → logprob: -13.076325416564941

Token 382: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.030254170298576355
    2. '(' → logprob: -3.5302541255950928
    3. '()
' → logprob: -8.030254364013672
    4. '(
' → logprob: -9.905254364013672
    5. '#' → logprob: -10.155254364013672
    6. '```' → logprob: -10.655254364013672
    7. '
' → logprob: -11.155254364013672
    8. '\' → logprob: -11.530254364013672
    9. '<|end|>' → logprob: -11.655254364013672
    10. '()\' → logprob: -12.155254364013672


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 380
Tokens correctement prédits (1ère position, stricte): 173
Tokens correctement prédits (1ère position, avec adaptation): 194
Tokens correctement prédits (top 10): 313
Précision stricte (1ère position): 45.53%
Précision adaptée (1ère position): 51.05%
Précision (top 10): 82.37%
================================================================================
